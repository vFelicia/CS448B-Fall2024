With timestamps:

00:03 - [Music]
00:28 - do
00:33 - [Music]
00:42 - so
00:44 - [Music]
01:10 - so
01:14 - [Music]
01:44 - [Music]
02:11 - [Applause]
02:12 - [Music]
03:30 - do
03:34 - [Music]
03:58 - do
04:00 - [Music]
04:05 - oh hello everybody i forgot to do my
04:07 - audio check uh can you hear me
04:09 - uh just when i thought i was ready to go
04:11 - i'm hitting a little technical snag
04:13 - but i think i'll be up and running and
04:15 - we will be beginning in about 2 minutes
04:17 - and 30
04:18 - seconds see you shortly
04:28 - [Music]
04:40 - do
04:47 - [Music]
04:54 - do
04:56 - [Music]
05:29 - [Music]
05:36 - me
05:38 - [Music]
06:30 - ah i'm live it doesn't happen
06:32 - automatically but the music does end and
06:34 - i just like
06:35 - by uh reflex press the buttons to put me
06:38 - live but i was fixing something
06:40 - i'm trying to get this app up and
06:41 - running on glitch and i wanted to get it
06:43 - up and running
06:44 - before i started but uh i don't have it
06:47 - up and running yet but i've started
06:48 - hello
06:49 - hi it's me dan the
06:52 - host of the coding train coming to you
06:56 - live from brooklyn new york for the
06:58 - second day in a row which is not
07:00 - something you want to get used to oh
07:02 - gloria every time i start something live
07:04 - streaming my little pup over there
07:06 - gloria who's not so little actually
07:08 - she just like gets up from her bed and
07:10 - starts bounding over i think she thinks
07:11 - like
07:12 - i'm about to take her for a walk she's
07:14 - got she's got two hours to wait
07:16 - um i'm just seeing the chat here
07:19 - um and just finished preparing dinner
07:24 - uh and now daniel is on watch the coding
07:27 - train with a plate
07:29 - of indonesian food on my lap well that
07:31 - sounds delicious from new member
07:34 - mark boots if i'm correct joined
07:35 - yesterday uh welcome
07:37 - um so today is a bit of a continuation
07:42 - from yesterday
07:43 - i think i don't know maybe it's not but
07:46 - you definitely don't have to have tuned
07:47 - in
07:47 - yesterday to be participating today you
07:49 - don't have to have ever tuned in before
07:51 - in fact i know there are some new
07:53 - viewers in particular
07:55 - uh i saw before i started a couple
07:57 - messages in the chat which said
07:59 - i learned p5.js from your videos but
08:01 - this is the first time i'm tuning in
08:03 - live well
08:04 - do i have news for you um these live
08:07 - streams tend to be
08:08 - i think the word that i used yesterday
08:10 - which is quite appropriate
08:11 - a bit of a mess um there's not a clear
08:14 - plan for them i aspire to
08:16 - someday have more segments and uh
08:19 - kind of uh time box things and have a
08:22 - very clear trajectory as to where i'm
08:24 - going from whence i came but none of
08:26 - that exists for today
08:28 - i do have some items on my mental to-do
08:30 - list
08:34 - probably the most one for me the most
08:35 - important one for me to get to relates
08:37 - to the t-shirt that i'm wearing
08:39 - you can see here uh by the way there's
08:41 - greed in this t-shirt so these aren't
08:42 - the actual colors
08:44 - unfortunately but it says processing
08:46 - foundation here
08:47 - uh the processing foundation is the
08:49 - non-for-profit organization that i am a
08:51 - part of
08:52 - um you know coding train is a separate
08:55 - endeavor
08:56 - but the two are intertwined in many ways
09:00 - um but and i like to use the coding
09:02 - train to support the processing
09:03 - foundation to the extent that i can
09:05 - but a processing foundation had an
09:07 - annual fundraiser and i meant to get the
09:09 - link
09:10 - up and running for that but i did not um
09:13 - and uh i'm
09:16 - seeing if i can find it uh annual
09:19 - fundraiser processing
09:21 - foundation 2020. come on it's got to be
09:24 - i think i found it i think i found it
09:27 - 20 20. i found it i found it all right
09:30 - so moving on over here this was and look
09:33 - at this look at this image do you
09:34 - recognize that image and you can see now
09:36 - that the colors
09:37 - have changed to white because it is uh
09:40 - whatever i am in front of
09:41 - uh there we go we can see the o from
09:43 - organization kind of entering my shirt
09:45 - um so one of the uh if i click over here
09:49 - one of oh and the campaign is uh no
09:52 - longer there
09:53 - but um we have stickers
10:00 - t-shirts did you get one of these
10:04 - hoodies i don't have a hoodie uh coding
10:07 - train
10:08 - videos
10:11 - that's what and i have not fulfilled my
10:13 - obligation
10:14 - it's kind of like a wedding present i
10:16 - think you have like one year
10:18 - from the wedding to give your present so
10:20 - i feel like i have one year from the
10:21 - fundraiser to deliver on my coding train
10:24 - videos
10:24 - for the donors of to the processing
10:26 - foundation so i'm way ahead of the game
10:28 - given that i'm not even
10:30 - i guess june is about halfway through
10:31 - 2021 but i did intend to actually do
10:34 - them in january
10:37 - june june starts with j and january
10:40 - starts with j
10:41 - so it's kind of like the same month
10:43 - really i'm
10:44 - basically on time because of the j and
10:46 - july is my backup plan
10:50 - um but um the school year has wrapped up
10:53 - for me now so there's really no excuse
10:55 - anymore um what i uh and so the two
10:57 - topics
10:58 - for the two donations i have to make
10:59 - sure there isn't a third if you were
11:02 - a uh i see computational mama in the
11:05 - chat
11:05 - hi computational mom i love your channel
11:07 - everybody check out computational mama's
11:09 - channel
11:10 - if you haven't already um
11:13 - what was i saying i got a thing i was
11:16 - saying
11:17 - before i got distracted oh i'm so easily
11:20 - distracted
11:22 - right i know that there were two donors
11:25 - one
11:25 - the topic for one donor was uh requested
11:28 - was
11:28 - the bezier function and the topic from
11:31 - the other donor
11:32 - is the copy function if you are a donor
11:36 - who requested a video topic and you're
11:38 - watching right now or sometime in the
11:40 - near future remind me
11:42 - i'm going to go back to my notes and
11:43 - emails and i'll probably remember but i
11:46 - think there are only those two
11:47 - um and
11:51 - i so anyway so i want to take some time
11:54 - today it's this is not the fulfillment
11:56 - of that video
11:57 - this is my prep session where i am going
12:00 - to teach myself
12:02 - the inner workings of the bezier
12:04 - function in p5
12:05 - try to make some examples with it and
12:07 - basically
12:08 - build a bit of a plan for a recorded
12:11 - short five to ten minute video tutorial
12:13 - about the bezier function and
12:15 - spoiler alert i'm going to be basing
12:18 - um my initial research off of
12:21 - this book called programming design
12:23 - systems by roon matson
12:27 - and i believe somewhere on this
12:30 - custom shapes perhaps yeah there is a
12:34 - whole section so i will be doing a
12:35 - dramatic reading
12:37 - of this section about bezier curves and
12:40 - kind of thinking about how i want to
12:41 - present it
12:42 - and oh wow this is really awesome um
12:45 - about how i want to present it and thank
12:48 - you simon
12:49 - for um oh um are
12:52 - am i having problems with this stream
12:54 - chat too oh you know i just forgot about
12:56 - this stream chat
12:58 - i think it still works i just didn't
13:00 - launch it i'll come back to that i'm
13:01 - very focused on the
13:03 - um um
13:06 - uh the new uh random number bot features
13:09 - that i
13:10 - talked about yesterday and i would like
13:12 - to return to that
13:14 - perhaps
13:17 - okay um so sorry about that just stream
13:20 - chat i should be
13:21 - um getting that back up and running i'm
13:23 - getting all these super chats which is
13:25 - so kind of all of you
13:28 - thank you to simone and there was one
13:30 - earlier i got to scroll back
13:32 - up uh thank you to simone and gary for
13:35 - your very kind um super chats it's
13:38 - super appreciated it helps to keep the
13:40 - engine running speaking of which
13:42 - something else that keeps the engine
13:44 - running here at the coding train
13:46 - is the sponsor of today's live stream
13:49 - oh my goodness curiosity stream um
13:52 - i love documentary films um
13:55 - curiosity stream which was launched by
13:57 - media visionary john hedricks
13:59 - who founded the discovery channel you
14:01 - know which is albeit a lot of
14:03 - other kinds of reality tv programming
14:04 - right now but uh curiosity stream is the
14:07 - you know award-winning destination for
14:09 - documentary films and tv shows
14:11 - covering every topic from space
14:13 - exploration to adventure to the secret
14:14 - lives of wild animals
14:16 - so at that link curiositystream.com
14:19 - codingtrain you can
14:20 - wait i have a bit to do
14:23 - breaking news breaking news
14:26 - my script over here says a 26
14:30 - discount on the annual hd plan which is
14:32 - 14.79 cents for the whole year
14:35 - i've just been told through my earpiece
14:38 - here
14:38 - and my mental uh brain thing mabob
14:42 - that's in my head
14:43 - that uh for this weekend only there is a
14:45 - special 40
14:46 - discount it is 11.79 for the entire year
14:50 - i think if my math is correct that's
14:51 - one dollar per month for the entire uh
14:54 - curiosity stream
14:56 - uh a catalog of documentary films but
14:59 - wait there's more
15:00 - there's also something called watch
15:01 - nebula which is a streaming video
15:03 - service that i'm a part of
15:04 - uh made by educational uh youtubers um
15:07 - all together
15:08 - uh i'll come back and and show you some
15:10 - like uh make some documentary
15:11 - recommendations
15:12 - and stuff later but um the link up there
15:14 - if you're interested please
15:15 - uh sign up um i uh it helps me out a
15:18 - little bit and i i think i mean i i
15:20 - just i just love that i love all the
15:23 - stuff on curiosity stream it's really
15:24 - good
15:25 - so all right uh back to my um
15:28 - regularly scheduled programming bezier
15:30 - curves
15:32 - um i think i need i'm feeling a little
15:33 - bit discombobulated i don't see the chat
15:36 - anymore
15:37 - um and computational mama is asking does
15:40 - it work in india i don't that's a good
15:42 - question
15:43 - um let's be in touch um computational
15:47 - mama are you in the discord because i
15:48 - see
15:49 - you and also hippo viva uh have member
15:53 - uh supporter uh emojis next to your name
15:56 - um excuse me so
15:59 - if you're not in the discord let's uh
16:01 - let's get you onboarded in there anyone
16:02 - who is a member
16:04 - speaking of membership i talked about
16:05 - this a lot yesterday
16:08 - but i am producing these custom train
16:10 - whistles i don't think i need to
16:11 - necessarily go
16:12 - back again and i see that uh simon thank
16:15 - you you have some bezier curve
16:17 - related p5.js sketches uh coding trade
16:20 - viewer simon does maybe i can show
16:22 - those all right let's start with
16:25 - today's i don't know if i have a sound
16:29 - drop for this
16:31 - uh let's try this one it is time
16:34 - to continue the coding trains reading of
16:37 - the random numbers
16:39 - so as you may know
16:42 - i have a book called a million random
16:44 - digits with 100
16:45 - 000 normal deviates i like to spend way
16:48 - too much time
16:49 - on this youtube channel talking about my
16:52 - dear dear love
16:54 - for this book that's a little bit weird
16:56 - it's so
16:57 - weathered it's been i carry it with me
16:59 - it's been outside in the garden
17:01 - the page is falling out oh i really want
17:03 - to find an original print of this book
17:05 - but um newly implemented in the coding
17:08 - trains
17:08 - discord
17:12 - um newly
17:16 - i'm going to under bot demo let's see if
17:18 - i can come back to here
17:20 - this is the coding trains discord uh
17:22 - which um i'm posting
17:23 - putting a link in the youtube chat you
17:25 - should definitely join if you haven't
17:26 - already
17:27 - wonderful place to get some well so to
17:29 - get some help with your code we're
17:30 - planning some new
17:31 - community initiatives on discord this
17:33 - summer excited to tell you about those
17:35 - as they get going
17:36 - um but um one of the new things
17:39 - in the discord is that uh the bot the
17:42 - choo choo bot now will generate a random
17:45 - walk
17:46 - from a particular position in the book
17:49 - with
17:50 - a particular with a random sequence of
17:52 - five digits from that position so this
17:54 - pattern uh is from position 4687 in the
17:59 - book which i could try to find
18:00 - out of one million digits but also
18:04 - let's see what do i say i think if i say
18:06 - reading
18:08 - the bot will now tell me shiffman will
18:10 - continue reading the book
18:12 - at page one row one and column
18:15 - zero so that means it's my reminder
18:18 - to continue my project which i started
18:21 - yesterday
18:22 - so i've probably restarted again every
18:24 - so often
18:25 - to read this entire book will i get it
18:27 - through in my lifetime
18:29 - a mystery a wondrous
18:33 - perplexing unknowable
18:36 - question i mean will we all be around to
18:40 - see
18:41 - if i could get through this entire book
18:42 - in my lifetime uh
18:44 - i don't know it's quite a goal i've got
18:47 - but i now need to go to page one
18:51 - row one column zero
18:55 - and i will now read
18:59 - three seven five four two four oh
19:02 - let me start over i messed up
19:07 - three seven five four two zero four
19:09 - eight zero five
19:10 - six four eight nine four seven four two
19:13 - nine
19:14 - six two four eight o five two four zero
19:17 - three seven two zero six three six one
19:20 - zero four zero two zero zero eight two
19:24 - two nine one six six
19:27 - five so now i believe
19:32 - the next thing now that i've read that i
19:34 - can set
19:35 - myself i can say uh oh
19:39 - let me i forgot what the command is
19:43 - reading set reading um
19:46 - the command i want to say is set reading
19:49 - column no page one row
19:54 - two wait let's maybe it'll tell me
19:58 - valid page row and column yes
20:01 - set reading page page one
20:05 - row two column zero
20:08 - i have updated the book position to page
20:10 - one row two and column zero
20:12 - so when i ask for it next time oh you
20:14 - can't see what i'm doing
20:16 - here it is sorry i was typing all these
20:18 - commands
20:20 - um i will continue reading the book at
20:23 - page one row two column zero
20:24 - are you with me are we all okay do we
20:27 - have we found
20:28 - the system that works for all of us to
20:31 - get through this entire book
20:32 - i mean what percentage am i through i've
20:34 - read
20:35 - um a hundred digits out of one million
20:39 - is that right is that a hundred digits
20:41 - five
20:42 - times ten is fifty uh ten percent would
20:45 - be a hundred thousand
20:47 - one percent would be ten thousand
20:50 - point one percent would be a thousand i
20:53 - have read
20:54 - zero point zero one percent of this book
20:57 - in two days see if you can compute
21:01 - the predicted date everybody like you
21:04 - know we can all at once everybody in the
21:05 - chat
21:06 - like type in the date you think i'm
21:07 - gonna finish the book and hit enter
21:09 - ready one
21:13 - two no no i'm gonna do three two one
21:16 - and you enter but not on one three two
21:19 - one and then on the next
21:20 - enter you enter on enter you're ready
21:25 - oh wait what happened to my sound effect
21:28 - three two
21:32 - one enter
21:36 - so that's gonna happen i'm gonna see
21:37 - this now in like 30 seconds to a minute
21:39 - because i am in the future
21:41 - which is very strange you were all
21:42 - behind me in the past
21:47 - and that is correct mark boots maybe we
21:49 - can add that as a feature to the bot
21:52 - um so just to quickly um recap i don't i
21:56 - spent a lot of time on this yesterday
21:57 - and i don't want to spend
21:58 - so much time on this but you can um
22:03 - what are the commands you can
22:04 - participate in this in the discord in
22:06 - the bot
22:07 - uh testing or bot talk channel i don't
22:09 - remember you can ask for your number
22:13 - so if you say uh my number everybody
22:16 - can be assigned their own random number
22:18 - in the book with a unique position
22:20 - so nobody else can have this position 11
22:23 - 570 but me um but
22:26 - i believe you can if i um
22:31 - what uh i can set uh a set a new number
22:35 - and if i don't give it a command um it's
22:38 - going to uh
22:40 - choose a new one so i would like to know
22:42 - actually kobe i think this is another
22:44 - note
22:45 - so i think we should want the position
22:47 - here so here i would also like to have
22:48 - the position
22:49 - it's kind of interesting do i want all
22:51 - the information always the number
22:53 - the position the row the column i think
22:56 - the row the column and page number is
22:58 - really for me
22:59 - um october 13
23:03 - 2048 if you read run one row per day
23:06 - which you aren't
23:08 - simon i've impressed by the way i should
23:10 - use my everyday calendar
23:12 - hold on um if i bring this down here you
23:15 - can see this is the simone arch
23:18 - yeah church uh everyday calendar that i
23:20 - have here behind my green screen
23:22 - um so maybe i can use that uh
23:26 - to keep track of reading all of the
23:28 - random numbers
23:29 - so um anyway so i would love for you to
23:31 - join the discord to get your own
23:33 - random number a little bonus if you sign
23:35 - up for youtube membership
23:37 - is that you can actually set your own
23:38 - number so i think i could set
23:40 - like if i wanted my number to be 2048
23:43 - um i believe it's successfully
23:48 - saved the number 32 679
23:52 - uh maybe i can't i maybe i'm still not
23:54 - allowed to
23:55 - set my own number nicole
23:58 - has the book wow so having the page row
24:02 - column would be amazing
24:03 - okay um so yeah um um so let's get that
24:07 - let's um
24:08 - you know i'm not super organized here in
24:10 - keeping track of
24:12 - ideas i suppose um what might make sense
24:15 - is let's see if i go to
24:20 - this is uh whoops let's see let's go to
24:24 - the coding train github
24:26 - and let's find oh discord bot choo choo
24:29 - this is the choo choo bot
24:32 - source code as well as a link to all of
24:35 - my discord bot
24:36 - tutorials um and chris is asking a
24:40 - really good question which i'll answer
24:41 - in a second
24:44 - but i don't believe uh kobe correct me
24:46 - if i'm wrong i don't believe the
24:48 - code for the new random walk features
24:50 - are in this one
24:52 - there is some code for drawing a random
24:54 - walk so maybe we can but what i was
24:56 - gonna say is maybe we should
24:58 - have a place um a github repo that
25:01 - uh we can take issues and requests for
25:04 - this particular random number
25:06 - feature um
25:08 - [Music]
25:10 - if your coding experience would be your
25:12 - age how old are you
25:14 - asks davon raj in the chat that is a
25:17 - great
25:18 - question um and computational mama says
25:22 - three years old same as my son wow
25:24 - that's amazing so for me i
25:25 - am 47 years old uh if you didn't know
25:28 - that already
25:29 - but my coding age is la
25:33 - it depends on how you count i was going
25:35 - to say it's less than 20
25:37 - um because i didn't really start on this
25:39 - path and journey
25:41 - of creative coding and everything that
25:43 - i'm doing now
25:44 - until i was so it's more than my math
25:47 - was off
25:48 - 27 so 22 years old but i did actually do
25:52 - some coding as a i think a second or
25:54 - third or fourth grader um
25:56 - i learned uh but you know i did it for
25:58 - like two weeks and then never did it
25:59 - again
26:00 - then maybe i did it for one week in
26:01 - middle school then never did it again
26:03 - so i don't really necessarily count
26:04 - those but an interesting story is
26:06 - and that i'm hoping will be part of the
26:08 - coding train programming maybe even as
26:10 - early as this summer
26:12 - is the computer that i grew up with was
26:14 - an apple ii
26:15 - plus and that exact apple ii plus that i
26:18 - believe we got maybe when i was 10 years
26:20 - old
26:20 - let's look at the date i'm not sure um i
26:24 - have to figure this out
26:24 - but that apple ii plus is in my parents
26:28 - house where they still live in the attic
26:31 - maintained and kept in a pretty good
26:34 - condition
26:36 - and i'm planning to retrieve it sometime
26:37 - this summer and uh
26:39 - set it up and actually like live stream
26:42 - the output of it to behind me so i'm
26:45 - really excited to try to do that
26:47 - um and um i love that there
26:51 - are parents here i love that there are
26:52 - kids and parents in the chat this is
26:54 - making me
26:55 - so happy um one of the things that
26:58 - always amazes me
26:59 - about the work that i'm doing here on
27:00 - youtube is the sort of
27:02 - range of people in the audience uh from
27:06 - young people who are just learning to
27:07 - code to older folks who are just
27:09 - learning to code
27:10 - to people in their 20s who have been
27:12 - coding since they were very young
27:14 - the whole range is there and i'm
27:16 - thrilled thrilled thrilled
27:18 - and uh nicole is saying i'm counting my
27:20 - geocities websites
27:22 - as the beginning of my coding life yay
27:24 - juices i i want to show you all
27:26 - something
27:26 - which um let's see if i can get this up
27:29 - uh editor.p5.js um
27:33 - coding train
27:36 - sketches i want to bring this up because
27:40 - this is maybe a project for next week's
27:42 - live stream
27:44 - pine yeah all right so is it this one
27:49 - probably it's one of these
27:56 - is it this one
28:00 - doesn't look like it nope
28:04 - is it this one
28:09 - yes so speaking of geocities
28:12 - this is a p5.js sketch that i made
28:16 - that is called the pine a eye bowl
28:20 - pine pine like pineapple get it like
28:23 - pineapple but pineapple
28:27 - and what this does it allows you to take
28:30 - any image like here's one of my the
28:31 - coding train
28:32 - wheels the mouse character from my mouse
28:34 - conference video
28:36 - and um it this image is rated at 99.96
28:40 - percent
28:41 - pineapple so you know it's maybe not the
28:44 - most actually this kind of looks sorry
28:46 - no no don't talk to me watch this looks
28:48 - pretty pineapple-like
28:50 - um but this is related to the uh
28:52 - television show
28:53 - psych which i've never seen at a podcast
28:56 - about the television show site called i
28:59 - know you don't know and i guess in every
29:01 - episode of the television show
29:02 - psych there is a pineapple and i built
29:05 - this system for the podcast to be able
29:07 - to
29:07 - rate various pilots anyway i don't know
29:09 - if this is worth explaining but
29:12 - um but um
29:16 - what i wanted to say is the podcast i
29:18 - know you don't know is coming up at the
29:20 - end of their second season
29:22 - and so one of the things i would like to
29:23 - do is not just have a pineapple
29:27 - detector which gives a percentage
29:30 - likelihood that there is a pineapple in
29:32 - the image
29:32 - but i would like to do object detection
29:34 - to find the pineapple image so if
29:36 - anybody is interested in helping with
29:37 - that project
29:38 - come on into the discord and get in
29:40 - touch um that's a that's a project maybe
29:42 - for next week not for today
29:44 - all right i think i've got to move on
29:46 - from all this stuff that i'm talking
29:47 - about and
29:50 - i'm so confused because it's two o'clock
29:52 - and i thought oh have i been streaming
29:53 - for an hour
29:54 - no i started at 1 30 so just a half an
29:56 - hour ah
29:57 - and um oh wait wait questions there were
30:00 - some great questions in the chat
30:02 - uh the member chat i should let me see
30:04 - if i can get this stream
30:05 - chat up and running if you'll give me a
30:07 - second here i'm going to put on my
30:08 - hold music
30:22 - yeah it seems to be working clear
30:26 - can any of you uh repost your question
30:30 - if you want it featured on the screen uh
30:32 - to
30:33 - uh the member discord
30:38 - [Music]
30:40 - that'd be a little issue that's fine
30:43 - okay
30:44 - let's see um
30:47 - you did spell oh oh wait no these are
30:50 - old comments
30:51 - okay um all right well let's take them
30:53 - so uh chris's question
30:55 - was does everyone get only one number
30:59 - so yes i believe this is correct the
31:01 - idea for this
31:03 - is if i say set um
31:06 - if i say set this random number so
31:09 - here's the thing
31:10 - this number 1724 is not necessarily
31:14 - unique
31:15 - because the same five-digit sequence of
31:17 - numbers and i realized that's only four
31:19 - digits but that's because there's a
31:20 - leading zero in that sequence
31:22 - um well it appears multiple times in the
31:25 - book
31:26 - so it is not that your random number is
31:28 - unique but your
31:29 - index there are one million indices i
31:32 - mean are there less
31:34 - because if we're giving people five
31:35 - digit sequences
31:37 - can you not get do we only have 999
31:40 - 995 indices but for
31:43 - putting that aside the in the ideas are
31:45 - everyone have uh their own unique index
31:47 - and the random walk
31:50 - um which starts i i feel like there
31:54 - should be ran
31:54 - like a command that's like random walk
31:56 - me or my random walk or
31:58 - if you just say random walk instead of
31:59 - giving you a random one it gives you the
32:01 - one associated with your number
32:03 - um but this pattern is unique
32:07 - to this position so if i were to now say
32:10 - random
32:12 - walk one one one nine
32:16 - we are going to get hopefully oops i
32:18 - spelled it wrong
32:20 - random walk four one one one nine
32:24 - we will be getting uh the same exact
32:26 - that's the same exact
32:28 - image now the interesting question is if
32:31 - i say random walk
32:33 - four one one two zero
32:36 - so that's one index later than four one
32:39 - one nine
32:40 - my expectation is that this is going to
32:42 - look the same
32:45 - um um
32:49 - right can you see the difference i can't
32:52 - really see the difference but it is
32:53 - different
32:54 - the reason why it looks the same is it's
32:56 - using i can't remember how over i think
32:59 - we're using one million
33:00 - all like some amount of random numbers
33:03 - um that's divisible uh so i think it's
33:06 - 250 did we do a two digit number
33:09 - i can't remember the details we worked
33:10 - all this out and like chatting about
33:12 - this forever
33:13 - but it's using one one number difference
33:16 - so
33:16 - if we could zoom all the way and blow
33:18 - this up we would see that this pattern
33:20 - is
33:20 - like actually different but visually in
33:23 - the end
33:23 - it's going to look very similar but if i
33:25 - were to say random walk
33:26 - you know from a very different position
33:28 - like one two three
33:31 - um i'm going to get something quite
33:33 - different
33:34 - so that's important for me to mention um
33:39 - yeah i'm not getting the comments in
33:41 - this stream chat but i'm gonna
33:42 - i'm worried about that later i will
33:44 - figure that out later um okay so that
33:46 - was chris's question
33:47 - the new random walk features are on
33:49 - separate branch okay
33:51 - so then let's so if um that's really
33:53 - helpful so if i go back to
33:55 - um discord
33:59 - so if you have questions or ideas or
34:01 - comments
34:02 - about the uh the choo choo bot
34:06 - um please uh put them in the issues on
34:09 - discord bot
34:09 - choo choo now if this the code here in
34:12 - the main branch
34:14 - is the code that directly corresponds to
34:16 - my video tutorials
34:17 - but i expect that if we go here maybe
34:20 - it's number db
34:21 - that's my guess or version two dash
34:24 - deploy
34:24 - i'm not sure kobe will tell us
34:27 - one of these uh is you can find the code
34:30 - for the actual new random number stuff
34:32 - but we want people who are following the
34:34 - tutorials to be able to find the code
34:36 - from the tutorials
34:38 - here okay that was one question
34:43 - other things can you let me know how
34:44 - many rows are on a page
34:47 - um that's a great question i will answer
34:49 - that later it looks like
34:50 - the uh it looks like it's a hundred and
34:53 - hold on i can look at the first page
34:55 - it is 50 rows 50 rows on every page
34:58 - um okay um
35:02 - just looking that's interesting the
35:05 - pineapple detection system always
35:06 - detects a pineapple with transparently
35:08 - transparency okay all right now guess
35:11 - what it's time for
35:14 - that's right it's time for
35:17 - community contributions it's the part of
35:20 - today's live stream
35:21 - where i somehow through some arbitrary
35:24 - system
35:24 - that could always be improved pick some
35:28 - things that you the viewer have made
35:30 - and created in response or to a
35:32 - particular video tutorial or example
35:34 - that i made
35:35 - um i noticed in the chat someone
35:37 - suggested that we should have
35:38 - a set of community contributions for
35:40 - retro geocities web pages
35:42 - that would be a fun video or live stream
35:44 - for me to do
35:46 - um version 2 deploy according to kobe so
35:50 - um yeah so here's my new way of doing
35:52 - this
35:53 - um which i think we're going to work on
35:57 - um
35:57 - doing this differently over the summer
35:59 - but i'm going to go to the coding
36:01 - challenges
36:02 - um let's go to coding in the cabana
36:03 - today um which there's only
36:05 - five of them but let's see some
36:07 - community contributions
36:08 - from my coding in the cabana video and i
36:11 - haven't made one of these since last
36:13 - july
36:14 - oh i don't know it was a good idea
36:17 - at the time but let's let's look at some
36:20 - community contributions
36:22 - um the other way that by the way i can
36:23 - do this which i'll i'll do let's do
36:25 - cutting the gabana first so i'm going to
36:27 - go
36:27 - to discord i am going to get a
36:31 - rant it's using numbers and pairs of two
36:33 - right the reason why we are using
36:35 - numbers and pairs of two to make the
36:36 - decision of the random walk
36:38 - is if i only used a d a random number
36:41 - with a d
36:41 - with one digit that's zero through nine
36:43 - or ten options
36:44 - that's not divisible by four so we would
36:47 - not have an
36:48 - even distribution i suppose we could do
36:51 - something like
36:52 - modulus eight would that work
36:56 - and then and then modulus four but the
36:58 - point is
36:59 - uh 20 options is divisible by four so
37:03 - like
37:03 - zero zero through four five through nine
37:06 - 10 through 14 15 through 19.
37:10 - each of those correspond to up down left
37:12 - and right one option in the random
37:13 - walker
37:14 - so uh the random walk is i think 500
37:17 - 000 steps if i'm right about that okay
37:20 - the music is way too loud
37:22 - sorry about that i will correct that
37:26 - let's now the music is much quieter for
37:29 - your community contributions
37:31 - so let's pick a random number from the
37:36 - book
37:37 - we got the random value from the book
37:41 - uh the nine four six three zero
37:45 - which if i say that number i mean i'm
37:47 - gonna get zero right
37:48 - modulus five because there's five uh um
37:52 - cabana videos so we're the random number
37:54 - that was picked
37:55 - was one so we're going to go to the mar
37:57 - rose
37:59 - and there are oh there are one two three
38:02 - zero
38:02 - one two three four five six seven
38:05 - eight so there's eight to look at
38:08 - so let's do random again getting a
38:11 - random number from the book
38:13 - uh four four one zero six
38:16 - uh modulus eight is two
38:21 - but that's the third zero one two index
38:23 - two
38:25 - so insane zero one two we are doing
38:28 - ah i believe we looked at sam lee's
38:32 - contribution yesterday
38:33 - also um let's um
38:36 - let's look at uh we'll look at i'll look
38:38 - at a few of these more rows linked to
38:40 - scroll so
38:41 - just to remember if you haven't watched
38:43 - this video
38:45 - this is the particular pattern that i
38:47 - create in this video
38:49 - which is the more rows
38:52 - uh right i guess i am varying some
38:55 - parameters
38:56 - uh in the formula that are in these
38:58 - variables n
38:59 - and d and as i vary those parameters
39:02 - we start to see this unfolding or
39:05 - blossoming so to speak of the more rose
39:07 - flower
39:09 - so let's look at what sam
39:12 - lee would did this particular pattern
39:13 - more rows linked to scroll
39:17 - i think i've looked at this one before i
39:19 - mean i've looked at it personally but i
39:20 - think i've
39:21 - looked at it on the stream oh oh right
39:24 - this is showing us a uh like essentially
39:26 - like
39:27 - there's a text a poem in this from
39:29 - presumably from shakespeare
39:30 - romeo and juliet and as you scroll this
39:34 - graphic up here in the right
39:36 - changes some of the parameters and we
39:38 - see it's a very subtle thing so it's
39:40 - like
39:40 - it's kind of like a flip book while
39:42 - you're reading a book by the
39:43 - a little bit of an aside here and i
39:45 - might try to do this with the nature of
39:46 - code book
39:47 - i wanted to have in the margins of the
39:49 - entire book a little flip book animation
39:52 - of like a flocking system or something
39:53 - like that so
39:55 - uh this is a little bit of a digital
39:56 - version of that this is really
39:58 - particularly wonderful thank you uh sam
40:01 - for this excellent
40:02 - community contribution uh let's go look
40:05 - at another one
40:06 - um uh david snyder i feel like we've
40:09 - looked at some of these
40:10 - i'll have to let me know i have to do it
40:11 - randomly um let's go to the um i believe
40:14 - actually the bot
40:16 - um if i say um the if i use the
40:20 - the exclamation point random um
40:23 - it gives a random number just using the
40:25 - javascript math.random not from the book
40:28 - so uh and if i were to say uh eight
40:32 - it gives me a random number zero through
40:35 - eight with a decimal
40:36 - lopping that off so zero ones are these
40:38 - i got five so let's look at index five
40:41 - zero one two three four five
40:45 - more rows with purlin noise this is a
40:48 - thank you by the way for writing a note
40:50 - here that this has flashing images
40:52 - so i will happily uh give that warning
40:55 - to the viewers now
40:56 - that if you're sensitive to flashing
40:58 - images i haven't actually looked at this
41:00 - but um this may have some flashing
41:02 - images on it so i'm going to click over
41:04 - to it to see
41:06 - and we can see oh look at this
41:09 - is my mouse controlling it or am i just
41:11 - imagining that but it looks like this is
41:12 - just a different way
41:14 - of varying uh the pattern i think if i
41:16 - zoom in you can sort of see
41:18 - some of the sort of beauty the beautiful
41:21 - geometric patterns that appear
41:23 - thank you for sharing that um
41:27 - let's go look at one more more rose
41:33 - uh let's get uh oh zero did i look at
41:36 - zero alright i looked at zero already
41:39 - no i didn't i can't remember zero was
41:41 - what i picked um
41:43 - oh i think i forgot to eat lunch today
41:45 - people i'm sorry
41:46 - i had very big breakfast this kind of
41:48 - brunch-ish meal i'm like getting a
41:49 - little
41:50 - it was friday it's been a long week it's
41:52 - been a long year
41:53 - uh let's look at the morrow rose with ui
41:56 - um
41:57 - and here we go ah awesome so one of the
41:59 - things that's a little bit of an issue
42:01 - here
42:02 - is that the way i have my
42:06 - high contrast mode makes it hard to see
42:09 - let's go
42:10 - back i think i can fix that
42:15 - youtube compression did not like that i
42:17 - was uh just told all right so we can see
42:19 - here up
42:21 - let's take a look at this this looks
42:24 - like what we've got here
42:25 - are um different uh
42:29 - a little nice little menu here so i can
42:31 - choose different things
42:32 - like i can draw the rose pattern which
42:35 - is all the little interconnected
42:36 - vertices
42:37 - or just the outline of that rose pattern
42:42 - um i can we can select loop drawing
42:45 - which will uh kind of show it
42:48 - accumulating over time
42:50 - then loop n d which is what uh or and
42:53 - which is what i kind of did
42:55 - in my um version but what i'm curious to
42:59 - see here
42:59 - is these are like different colors that
43:02 - i can pick that's kind of fun
43:04 - and what i love about this is now i can
43:05 - play with different values of
43:07 - n and d so let's go to the um
43:14 - wikipedia page for the more rows pattern
43:16 - what i would like to do here is just
43:18 - look at like
43:18 - so n is 7 and d is 29
43:21 - let's make sure this is working
43:23 - correctly by putting in
43:25 - seven and we can see here that this is
43:28 - quite distinctly although with a
43:30 - slightly different rotation it's flipped
43:32 - you know p5 y value points down as in a
43:35 - traditional cartesian plane
43:37 - the y value points up so that's probably
43:39 - the reason for it being flipped there
43:41 - but we can see and so we can uh what's
43:43 - kind of fun is i can kind of go through
43:44 - different numbers
43:46 - and try different um uh possibilities
43:50 - and then we can sort of see it animate
43:52 - which is always fun so thank you this is
43:54 - a wonderful
43:55 - uh demonstration of how you can create a
43:58 - user interface
44:00 - to be able to explore a particular
44:02 - generative algorithm
44:05 - okay ah
44:09 - all right everyone
44:13 - it is 2 15 my plan these days i try to
44:16 - max out at a two
44:17 - hour live stream so i'm gonna take a
44:21 - break in about
44:22 - 10 or 15 minutes i'm going to see if i
44:23 - can find like a granola bar in my
44:25 - household somewhere
44:26 - give myself a little sustenance uh thank
44:29 - you to
44:30 - all of the folks who are saying things
44:32 - like um
44:33 - i you know that that you love the videos
44:35 - and you've learned a lot from the
44:36 - tutorials
44:36 - zach writes i would have failed in my
44:38 - class i doubt that
44:40 - i seriously doubt that if i helped in
44:42 - some way it was only to
44:44 - bring out what was already there so uh
44:46 - but thank you for that nice comment
44:48 - uh some people are commenting on the um
44:50 - length of the beard
44:51 - um i've been trying the the barber shop
44:54 - that i used to go to
44:55 - closed during covid and never reopened
44:58 - which was very sad to me
45:00 - um so i'm kind of like not sure where to
45:02 - go um
45:03 - but i'm gonna find a new one anybody got
45:05 - any brooklyn barbershop recommendations
45:07 - i will take them in the chat
45:10 - all right um what is coming up what is
45:14 - next what do i want to do i think
45:16 - maybe in fred wilderness i forgot that i
45:18 - used to call myself
45:20 - i was looking by the way let's let's
45:21 - just i'm just going to show you
45:23 - something insane
45:24 - uh coding train at home i called it this
45:27 - was about one year ago
45:30 - i was some reason one of these came up
45:33 - um which is a later one march 28th april
45:35 - 3rd let's look at this one
45:39 - um let's see if i can find this was a
45:41 - fundraiser
45:43 - see if i can find myself just
45:46 - in like large format here
45:49 - was this the one there was one of these
45:51 - i have like oh no i have like a haircut
45:53 - on this one
45:54 - trimmed beard one of these like i i saw
45:56 - myself and i was like
45:58 - oh my goodness where what is that beard
46:01 - maybe it was the fall
46:02 - okay i got i got uh sidetracked
46:08 - this probably would be a good time for
46:09 - me to take a break but i'm trying to
46:11 - think oh yes let's do the live poll
46:12 - let's check on the live poll
46:14 - i'll take a break come back and do
46:16 - bezier curves good plan good plan
46:18 - everybody thanks for that suggestion
46:20 - brain um
46:23 - okay give me a second here
46:36 - [Music]
46:40 - me
46:45 - yeah okay yes
46:48 - all right this is thank you i got a huge
46:52 - shout out to many different people but
46:55 - in particular uh foxy on
46:59 - github has done an incredible amount of
47:02 - work
47:02 - on this live poll system since my last
47:05 - live stream this is a web application
47:08 - built with node um it uses um something
47:10 - called any db
47:12 - to save information and basically um you
47:15 - you can go to this url but i don't think
47:18 - you will have
47:19 - access to this create a new poll so
47:22 - for example as a test if i
47:26 - create a poll and so like which
47:29 - function should i start with
47:33 - and i can say copy or bezier
47:39 - and i can click create
47:43 - so now i have this poll now this is a
47:46 - link you could actually go to
47:48 - to vote untested i have actually not
47:51 - tested this and every time i come to do
47:53 - this in a live stream it doesn't work so
47:54 - that's probably what's going to happen
47:55 - today
47:56 - but i think even better i think if you
47:59 - just go
48:00 - to i forgot all the routes and i know
48:02 - they are documented in the readme
48:04 - i think if i just go to newest
48:08 - it's going to show me this particular
48:12 - poll overlay mode is making it
48:15 - transparent
48:17 - um and so and then i don't know how to
48:20 - get the voting link to you
48:23 - um i think what i'll do is i'll post it
48:25 - into whoops
48:26 - um i'll post it into uh
48:30 - discord so uh and then somebody can take
48:34 - this and bring it over to the chat
48:35 - i'm gonna go to this links channel this
48:38 - is the channel i use while i'm live
48:39 - streaming to share links to things
48:41 - so if i post this oh incredible fox
48:47 - incredible fox in the chat in the house
48:50 - thank you incredible fox for all this
48:52 - tremendous work
48:53 - uh and you can also answer my questions
48:55 - that i'm not sure
48:57 - what to do all right so now i think if i
49:01 - go
49:01 - here you know um let's go to this
49:04 - vote view i personally think it makes
49:07 - sense to start with the bezier function
49:10 - so i'm going to click vote
49:13 - we'll see if it takes my vote
49:20 - and we can see the votes are there this
49:23 - is promising now
49:25 - the point of me doing this is i
49:28 - am going to go to uh the overlay here
49:37 - uh which should be here yeah okay uh
49:41 - oh timeout uh i think i need to refresh
49:44 - this did we crash it already
49:52 - [Music]
49:54 - how do i force a refresh refresh browser
49:58 - when scene becomes active
49:59 - okay there we go um but
50:02 - the view that i want is actually not
50:05 - this one
50:06 - i want the overlay one and i forgot what
50:10 - that is we talked about this
50:13 - um and um
50:16 - let's see where is it in the readme
50:19 - perhaps
50:21 - um newest q oh there's a qr
50:26 - code oh my goodness i forgot about that
50:29 - forgot about that view so one thing i
50:31 - should definitely show you is also
50:33 - if i just go to qr code
50:37 - this is actually uh you could scan this
50:40 - and it will take you to the latest
50:41 - poll um but there was a view we talked
50:45 - about
50:46 - in and i can't remember what it is now
50:49 - um i wonder if just looking at it for it
50:51 - in the code
50:52 - would be helpful or in our pull request
50:54 - discussion
50:56 - um does any do you remember what the
50:58 - sort of default for the overlay view is
51:01 - is it just like
51:02 - do i just say there's like a query
51:04 - string i can do i can't remember
51:08 - incredible fox do you remember let's
51:10 - oops
51:11 - see what's happening here um
51:16 - pole id compact equal true can i do that
51:19 - with newest
51:21 - let's hopefully i can do that with
51:22 - newest because i don't have the poll id
51:25 - over here uh so let's
51:28 - let me go to properties newest
51:32 - question mark compact
51:36 - equals true and then i can hit okay
51:39 - let's see if that works um i don't think
51:42 - that worked but that's fine
51:44 - um i could probably get the
51:48 - the uh wait uh did i i linked it over
51:50 - here
51:51 - in links so i can get it
51:56 - uh pull pull id
52:00 - so i can do this so let's add that to
52:02 - the newest as a new feature
52:05 - but i'm going to paste this in here pull
52:11 - and then what do i need to do is compact
52:15 - equals true let's see if this works
52:18 - there we go and it is transparent
52:21 - which means now i can put it
52:24 - in front of the camera look at this look
52:27 - at that
52:28 - awesome so now i can go and
52:32 - shrink it this has been my dream my
52:35 - dream is coming true
52:37 - here is the poll i am behind it it is
52:40 - live and real time happening
52:42 - i can also now i should be able there's
52:44 - no reason why i shouldn't be able to
52:46 - switch
52:46 - over to here and also add
52:51 - browser add existing
52:54 - this one and also have that here i mean
52:58 - i don't it's not as
53:00 - i mean i could also just bring it up i
53:01 - have a whole computer to bring it up
53:03 - but um and maybe this one i actually
53:06 - want it to have some background but
53:08 - the point is i can come here and i've
53:11 - got it going live now
53:13 - six there are 67 percent of you have
53:16 - voted for bezier
53:18 - i 103 votes there are occurred
53:21 - according to my uh youtube uh
53:24 - panel here there are 300 people with
53:26 - this browser page open
53:28 - so let's see if we can get some more
53:29 - votes going
53:33 - the camera was defocusing probably
53:34 - because i did this
53:36 - and i have it on autofocus and it's one
53:39 - of these sony mirrorless cameras that
53:41 - has a feature where it
53:42 - looks for your face and focuses on it i
53:45 - do feel like i'm kind of dark
53:47 - let me go check the camera settings
53:52 - oh yeah wow super dark
53:56 - i mean i could turn up my lights but i
53:58 - just adjusted
54:01 - i got the sun was out earlier and that's
54:03 - now i
54:04 - feel like i'm way too bright let me
54:06 - adjust my lights
54:09 - uh this is very important that i do this
54:11 - while i'm live streaming
54:14 - i'm gonna take a break in a minute and
54:15 - come back and do the bezier curve now
54:17 - that we have this life
54:18 - so this is great i can always the
54:20 - amazing thing is
54:21 - if i want to put up a new poll watch
54:23 - this
54:25 - i could just uh uh let's let's so let's
54:28 - consider this poll done
54:30 - what is something uh um um
54:33 - what's uh what's something i could do
54:35 - now well i could just put up a pole this
54:37 - is great i can always put up a pole
54:39 - and i could always have it um
54:42 - um uh here oh um
54:46 - ah no ah
54:49 - come on i think i should
54:53 - line it up with the top here and it
54:54 - could have more than two options so
54:56 - okay all right everyone um
55:00 - so i think what i would like to do is
55:02 - take a break
55:03 - um and come back
55:06 - and uh i think the results of this poll
55:10 - uh we'll we'll be looking at the bezier
55:13 - function um in
55:16 - uh p5.js so hold on just getting myself
55:19 - a little bit set up here um
55:23 - [Music]
55:24 - um
55:32 - no there we go
55:35 - [Music]
55:38 - all right so uh before i take my break
55:42 - i would like to thank
55:46 - today's sponsor and i have my list of
55:48 - recommendations up here already oh the
55:50 - poll is there
55:51 - okay hold on let's let's take two take
55:54 - two everybody
55:55 - uh take two
56:00 - before i take my break i would like to
56:02 - thank today's sponsor
56:05 - and today's sponsor is curiosity
56:08 - stream and i'm going to play a short
56:11 - video from curiosity stream it's about
56:13 - 30 seconds from the founder of discovery
56:16 - channel
56:17 - comes a new independent streaming
56:20 - service
56:21 - curiosity stream
56:24 - home of groundbreaking documentaries
56:28 - and award-winning original series
56:35 - follow your curiosity
56:41 - this is curiosity stream
56:46 - so um curiosity stream and if you go to
56:49 - uh curiosity stream slash coding train
56:52 - you will see that the discount
56:55 - is 41 off annual plans and complementary
56:58 - access
56:59 - to nebula so what is nebula first of all
57:03 - so
57:03 - i've talked about this before i'm part
57:05 - of a group of educational creators that
57:06 - teamed up
57:07 - to build a platform where creators don't
57:09 - have to worry about demonetization or
57:11 - the youtube algorithm it's called nebula
57:13 - and we're partnering with curiosity
57:14 - stream nebula has ad-free content and
57:17 - experiments with different kinds of
57:18 - content so let me just show you the
57:21 - nebula website watch nebula you can see
57:23 - that i don't know about you but
57:24 - basically all of the youtube channels
57:27 - that i enjoy
57:28 - are kind of all um uh here on this
57:31 - uh so many like amazing channels so one
57:34 - thing is like
57:35 - just as a for sort of discovery engine
57:37 - if you want to find
57:38 - content that you probably would like if
57:40 - you like the coding train
57:41 - i think you will find a lot of that um
57:44 - here
57:44 - on nebula um you know there's just so
57:47 - many things to highlight here
57:48 - there's also a bunch of nebula originals
57:51 - so tom scott has a nebula original
57:52 - called
57:53 - money and so what does this have to do
57:55 - with curiosity stream
57:56 - nebula you can get on your own it's a
57:58 - streaming service
57:59 - it has apps and for tv and all of that
58:02 - stuff but you can actually
58:03 - get nebula for free this is not like a
58:06 - trial or anything you get it for the
58:08 - entire time that you have it
58:09 - if you sign up for curiosity stream and
58:11 - i realize i'm blocking
58:12 - the uh note here about the 41 off um
58:16 - so um curiosity stream loves educational
58:20 - creators and supporting more edu
58:22 - content so if you sign up with you i got
58:24 - to sign up with that coding train
58:26 - link um not only do you get access to
58:28 - curiosity stream but you will also get
58:30 - nebula for free as long as you're a
58:33 - curiosity stream member
58:34 - so this is right now only this weekend
58:36 - so only like today through this weekend
58:38 - it's 41 off that's less than 12
58:41 - like 11.79 that's like one dollar a
58:43 - month for a both
58:45 - curiosity stream and nebula um
58:48 - so there's so much what i wanted to do
58:50 - is i was like making a list
58:51 - of like things that i have like really
58:53 - enjoyed on curiosity stream
58:56 - um let's these are a whole bunch of them
58:58 - uh calculating ada the countess of
58:59 - computing
59:00 - i've talked about dr hannah frye who's
59:02 - the host of a bunch of these videos
59:04 - um the kingdom how fungi made our world
59:07 - is a really really cool documentary
59:09 - you know there's a lot of really
59:10 - excellent nature ones secret lives of
59:12 - big cats owls
59:13 - but i wanted to pull up um nature's
59:15 - mathematics
59:16 - um like there's just so much that's um
59:18 - really connected to the work that i do
59:20 - on the coding train
59:22 - um i don't think the audio is coming
59:23 - through for this which is something that
59:25 - i could enable
59:26 - but you can see um this is a wonderful
59:28 - series about the beauty
59:30 - of fractal patterns uh as
59:34 - found in nature so it's just the perfect
59:36 - complement to the
59:37 - coding tutorials and i get a lot of
59:39 - inspiration from
59:40 - um watching this
59:43 - [Music]
59:45 - so um i really really um recommend it
59:48 - and um it's a great it's a great way
59:50 - it's also like it's a wonderful way to
59:53 - um support my channel um
59:56 - and educational content as a whole uh
59:58 - again it's
59:59 - twelve dollars like one dollar a month
60:02 - uh which is really insane uh for the
60:04 - whole year so if you go to that link
60:05 - curiosity.com
60:07 - codingtrain um uh you will find that
60:09 - discount and unlock
60:11 - all that there is on curiositystream and
60:13 - watch
60:14 - nebula okay um i
60:17 - i'm going to leave that up i'm going to
60:20 - uh
60:21 - come back over here we see the poll is
60:25 - still going
60:26 - i'm going to take a five-minute break
60:28 - find myself a granola bar
60:31 - get in a couple minutes enjoy eating it
60:32 - while i watch a couple minutes of
60:34 - nature's mathematics uh and
60:37 - um uh come back and explore
60:41 - bezier curves and try to make some uh an
60:43 - interesting uh example in p5.js
60:46 - and uh yeah so you know um
60:51 - um see you in just a few within five
60:55 - minutes okay
60:56 - uh put on this music and i'll be back
61:17 - [Music]
61:24 - [Music]
61:31 - [Music]
61:36 - do
61:39 - [Music]
62:04 - so
62:12 - [Music]
62:19 - [Music]
62:32 - [Music]
62:46 - [Music]
62:57 - [Music]
63:02 - [Music]
63:07 - [Music]
63:14 - [Music]
63:26 - [Music]
63:42 - do
63:44 - [Music]
63:56 - [Music]
64:18 - [Music]
64:24 - do
64:27 - [Music]
64:38 - do
64:42 - [Music]
64:50 - [Music]
65:05 - [Music]
65:15 - [Music]
65:27 - [Music]
65:49 - [Music]
66:29 - just one more minute we'll be starting
66:46 - [Music]
67:07 - [Music]
67:24 - all right i'm back that was a
67:28 - quick break oh look my my camera is in a
67:30 - weird spot
67:31 - like there we go hi everybody oh it is
67:35 - by the way
67:36 - um where i sit here in the attic there
67:39 - is a small
67:40 - window over there directly where i'm
67:43 - pointing
67:44 - and i can see um you know i'm in a
67:47 - a small building here in brooklyn and
67:49 - the attic is just like slightly above
67:51 - the buildings next to me um and i can
67:55 - i could see the trees and i could see
67:56 - the sky and it was like there is a
67:59 - terrifying looking
68:00 - storm cloud approaching and i don't know
68:03 - that i've recently
68:04 - uh ever live streamed from here
68:08 - with a storm going on so i wonder if it
68:10 - hits if you'll be able to hear
68:12 - the rain and the wind and it gets very
68:14 - exciting sometimes up here in the attic
68:16 - when there's a big storm going on
68:17 - so we'll see if that happens sometime in
68:20 - the next
68:21 - 40 minutes i am going to try to give
68:22 - myself a hard cut off
68:24 - at 3 30 p.m which is about 50 minutes
68:26 - from now um
68:28 - this is i've been looking forward to
68:31 - this weekend for a long time because
68:33 - it's been an incredibly busy
68:35 - uncomplicated uh you know last few
68:38 - months
68:39 - um but um and i've got a lot of stuff
68:41 - going on in june
68:42 - and a lot of plans for coding train a
68:44 - lot of stuff still to catch up on that i
68:46 - didn't finish
68:46 - in may but i do feel like this weekend
68:49 - with the end of the nyu semester
68:51 - um with it being it's a holiday here in
68:53 - the states on monday
68:55 - um it's going to be great so uh i'm i'm
68:57 - thrilled to be here with you i'm excited
68:59 - to look at bezier curves
69:01 - and then 3 30 begins the weekend
69:04 - um and nicole is saying i'm just getting
69:07 - the storm toronto just got i don't think
69:09 - that's like doesn't it go the other way
69:11 - are you in toronto
69:12 - that's a great uh i love toronto um i
69:15 - had such a wonderful time there
69:17 - a bunch of years back maybe i should go
69:18 - on about that right now let me come back
69:21 - over here
69:21 - thank you again to curiositystream for
69:24 - sponsoring today's live stream
69:26 - um and i am going to go to the browser
69:29 - and look at this
69:30 - what's here two sketches created by
69:34 - simon tiger so let me look really
69:36 - quickly at these two sketches
69:38 - uh i want to look i want today what i
69:40 - want to do in the next
69:42 - 45 minutes or so is understand
69:46 - more about the bezier function in p5.js
69:49 - look at some examples of like simon's
69:52 - here that use the bezier function
69:55 - and then also try to make my own example
69:58 - for it and come up with some ideas
70:00 - for what i might do in a video tutorial
70:02 - about it
70:05 - wow it's storming all over the world as
70:07 - i'm seeing by the chat
70:09 - so let me get um some of my links open
70:12 - that i want i want to get programming
70:14 - design systems
70:16 - custom shapes open
70:20 - so and i want to have the p5 web editor
70:23 - open
70:24 - and i'm going to put it back to high
70:26 - contrast mode
70:29 - so let's start here this is uh somewhat
70:32 - of a
70:33 - community contribution
70:36 - um which is so let's look at simon's
70:39 - bezier curve functions here
70:42 - so what does this do uh it looks like i
70:46 - can move these things around
70:50 - uh add point uh and then i can use this
70:52 - slide oh
70:54 - whoa
70:57 - this is kind of amazing to me i see add
70:59 - point
71:01 - remove point
71:05 - oh i see oh look at this
71:09 - so this is a this is a pretty advanced
71:11 - level use
71:13 - of the bezier function but we can see
71:16 - the the point is i think what we can
71:18 - start to gather from this
71:20 - is that there is a curve that is drawn
71:22 - that's the white line here
71:24 - and then there are all these other
71:26 - points that somehow define
71:28 - and control how that curve is being
71:31 - drawn
71:32 - so and this is a really fun
71:34 - demonstration of being able to do that
71:37 - so thank you simon for sharing this
71:39 - let's go look at simon's next one this
71:41 - is bezier editor
71:43 - oh my goodness whoa
71:46 - um so now this is more like what i'm
71:48 - used to seeing
71:50 - uh and the fact that there are four
71:52 - points here
71:54 - is really key um if you are somebody
71:58 - who has worked perhaps in a a
72:02 - program like adobe illustrator or name
72:05 - your other non-adobe
72:06 - related product um you've probably
72:10 - designed uh elements in a
72:14 - some kind of graphics context with this
72:17 - kind of drag and drop
72:19 - like mechanism and we can see mirrored
72:23 - there's different control mechanisms
72:26 - closed
72:26 - which is closing it control spacing is
72:29 - doing something
72:30 - export so this is great this is great to
72:33 - see so this is
72:34 - ultimately in many ways where i would
72:36 - like to get to
72:37 - i wonder if as part of the tutorial
72:40 - making a demonstration like this perhaps
72:42 - a little bit less
72:43 - sophisticated a more basic version of
72:45 - what simon has made here
72:47 - could actually work quite well so maybe
72:49 - i will explore that
72:51 - so let's do a bit of a dramatic reading
72:54 - here
72:54 - i like to plug um and
72:59 - roone matson's wonderful book online
73:01 - book programming design systems
73:04 - there's a lot to say about it but the
73:06 - main thing to
73:07 - uh understand here is that
73:11 - if you have you know you if you're not
73:13 - new to p5
73:15 - you're probably familiar with the way
73:17 - that you might draw
73:18 - a triangle in a canvas so typically the
73:21 - way that you might draw a triangle in
73:23 - the canvas
73:25 - is by setting three points
73:28 - [Music]
73:30 - i made up some points there and we can
73:33 - see look i drew this triangle
73:35 - by three points here's an x y one
73:38 - hundred one hundred
73:39 - here's an x y two hundred one hundred
73:42 - here's an x
73:42 - y one hundred fifty three hundred that
73:45 - makes up a triangle
73:46 - and i'm calling the triangle function
73:49 - the same is true for
73:50 - line ellipse circle square
73:53 - rectangle these are uh kind of
73:57 - what are they they're the the default
74:00 - shapes
74:02 - they're the shapes with width to which
74:04 - functions exist to draw those shapes
74:06 - but if you ever wanted to draw a
74:09 - shape that wasn't a rectangle or a
74:11 - triangle or a line you know with
74:13 - two vertices or three or four
74:18 - you can instead use the begin shape at
74:21 - n shape function and what begin shape
74:23 - and n shape do
74:25 - is they allow you to say i'm going to
74:26 - start a shape i'm going to define a set
74:28 - of vertices
74:29 - and then finish that shape and whoops
74:32 - the result is ultimately the same
74:34 - but there's i don't think i can edit
74:35 - this code but there's a lot more
74:38 - possibilities look how cool this is
74:39 - though that i can drag and drop this
74:41 - and it updates the code that's a really
74:43 - nice feature of this book
74:45 - so these are nice examples right of
74:48 - different
74:49 - shapes oh and there it clicked me over
74:52 - to a github page that we can see
74:55 - all right now the question is do i want
74:58 - to approach
74:59 - the bezier curve through
75:02 - the um methodology of using begin shape
75:06 - and
75:06 - end shape or just with the bezier
75:08 - function oh guess what
75:11 - let's see i just like i like this idea
75:13 - of like spontaneous live
75:15 - polls so
75:18 - um just since we've got that going here
75:22 - um let's see if this can i want to see
75:23 - like what how quickly can i make a
75:25 - quick live poll that will be an overlay
75:28 - not very quick apparently because of how
75:31 - slow glitches
75:33 - um and i'm just curious if i go to here
75:36 - yeah yeah yeah
75:38 - oh come on glitch why do you
75:41 - why do you forsake me so
75:49 - let's go to the p5 reference i'm going
75:50 - to give up
75:54 - and so let's look for bezier
75:58 - so the thing about a bezier curve
76:01 - right like the weird thing i did one of
76:03 - the things and this is a criticism that
76:05 - i've heard about
76:06 - some of the the sort of like processing
76:08 - style
76:09 - api is that just looking at this it's
76:12 - kind of hard to know what these numbers
76:14 - do
76:15 - like i mean i the documentation tells
76:18 - you and i'm so used to doing this it
76:19 - comes somewhat automatically to me
76:21 - but i can see like what are all these
76:22 - different numbers x
76:24 - y x y x y the three x y vertices of a
76:28 - triangle
76:30 - the bezier curve is like quite
76:33 - like overwhelming until the bezier
76:36 - function is quite overwhelming to look
76:37 - at because it's one
76:38 - two three four five six seven eight
76:41 - numbers
76:42 - so we can guess if we're used to using
76:44 - p5 which we are and i'll keep saying we
76:47 - which i am at least that these are
76:50 - um four what did i say eight numbers
76:54 - four x y points and based on simon's
76:58 - demonstration um we saw that there
77:01 - looked like there were these
77:02 - four points associated with the curve
77:04 - and this is true let's keep looking here
77:07 - so first this is nice to look at a
77:09 - little history here the bezier curve
77:11 - algorithm was popularized by pierre
77:13 - bezier in the 1960s as a solution to a
77:16 - common
77:17 - problem in computational geometry
77:19 - drawing curved lines that can
77:21 - scale to any size interesting
77:24 - the bezier curve algorithm solves this
77:26 - problem in a very elegant way by
77:28 - introducing the idea of control points
77:31 - invisible gravity points that attract
77:33 - the line to bend
77:34 - into a curve
77:38 - a bezier a
77:41 - bezier curve with a single control point
77:43 - is called a quadratic bezier
77:45 - while a bezier curve with two control
77:47 - points is called a cubic bezier
77:50 - so this is so a bezier curve so this is
77:53 - a quadratic one
77:55 - there are two endpoints endpoint
77:59 - endpoint and one control point and as i
78:02 - don't think i can drag it here
78:04 - you can see how that control point is
78:06 - causing the curve to curve up
78:08 - and down here there are two two
78:11 - endpoints and two control points
78:14 - and uh i see this is now allowing us to
78:18 - create a more
78:19 - complex shape with multiple vertices
78:23 - the yikes i think what i would like to
78:25 - do
78:27 - um is it takes a bit of practice to
78:30 - to to to use the bezier functions and
78:33 - knowing how many
78:34 - beziers you need to draw a specific
78:36 - shape can be hard in the beginning
78:39 - it does not help that the control points
78:40 - are invisible so it can be helpful to
78:42 - spend some time playing around with the
78:43 - example above
78:44 - before diving into the code so i wonder
78:46 - if i could
78:47 - as an exercise without looking
78:51 - at one of these see if i can recreate
78:54 - one of these shapes without looking at
78:56 - the code
78:59 - i think though as my first example
79:02 - the way that i would like to demonstrate
79:05 - and i guess i can go from here bezier
79:08 - demonstration
79:10 - and if anybody wants to follow along i
79:13 - will post a link to this sketch
79:15 - right here in the links channel in
79:17 - discord
79:19 - but what i'm going to do is um and i
79:22 - think i'm going to
79:27 - do the bet do the points in a bezier
79:29 - curve
79:31 - do they typically um
79:34 - do they have names i think of those
79:36 - endpoints and control points
79:39 - i'm going to say um x1
79:43 - y1 x2
79:48 - y2
79:50 - control x1 control x control y1
79:54 - i don't know if this is i maybe i should
79:56 - use the vectors
79:58 - control x2 control y2
80:02 - so let me use all of these
80:06 - and let's draw let's say that
80:10 - let me give them some initial
80:16 - points
80:17 - [Music]
80:23 - x2 y2 and let's say 300
80:27 - 200. so stroke 255
80:35 - and um
80:38 - let's make this fun let's make it a
80:40 - little bit bigger
80:41 - give myself a little bit less space here
80:44 - a little bit more space here turn on
80:47 - auto refresh
80:50 - background 0 stroke weight
80:53 - 4 line x1 y1 to x2
80:57 - y2 let's just start with this so this oh
81:01 - there's something by the way in my
81:02 - monitor over here that's really
81:03 - distracting me
81:05 - so i'm going to ah there i fixed that
81:09 - all right so here's some basic code to
81:11 - draw a line between
81:12 - two points
81:16 - now what i would like to do is set the
81:19 - control points
81:26 - so i'm calling that cx1 so let's just
81:29 - make one of the control points um
81:33 - 150 a 150
81:36 - and then i want to draw a point at
81:41 - y cx1cy1 okay
81:44 - so what i'm doing is i'm sort of
81:45 - building the elements here and i should
81:47 - maybe draw all of them
81:51 - um x1 y1 and we can think about color
81:54 - and all of that but i just want to be
81:56 - able to visualize
81:58 - everything
82:02 - um let's make it a little quite a bit
82:05 - bigger
82:06 - okay and then i
82:09 - also want to have another control point
82:14 - cx2cy2
82:18 - and let's initialize it to somewhere
82:23 - let's say uh 250
82:27 - 250 okay
82:31 - so this looks like
82:35 - um this looks like uh
82:39 - all of the pieces that i need and in a
82:41 - way maybe this line isn't even so
82:43 - relevant
82:44 - so i've got two end points and two
82:48 - control points
82:48 - of course you know this these could be
82:51 - endpoints and these could be control
82:52 - points it doesn't really it's all
82:53 - arbitrary
82:54 - but i'm trying to start with something
82:56 - that i know or have a sense of
82:58 - how it will ultimately look so if i were
83:01 - to call the
83:02 - bezier function and set
83:06 - first an endpoint
83:11 - then a control point
83:15 - then oops
83:19 - then another control point
83:23 - and then the last
83:26 - the last endpoint
83:32 - and i want to say interesting that it
83:34 - fills it
83:37 - there we go and what if i were to just
83:41 - for right now
83:43 - say cx1 equals mousex like if mouse
83:47 - is pressed if i press the mouse
83:52 - i can control
83:55 - one of the control points
83:58 - so there we go now i
84:02 - think in the demonstration
84:05 - um i and i see that wave
84:09 - is making a point will i go into the
84:11 - actual algorithm not just the pre-built
84:14 - function
84:14 - that is a really i would love to do that
84:17 - i don't know if that's
84:19 - that's not necessarily my intention for
84:20 - the shorter video that i intend to make
84:23 - well that would certainly be something
84:24 - to explore here to understand it further
84:28 - but let me also i'm just trying to
84:30 - figure out how to annotate all the
84:31 - pieces of this
84:33 - let me say stroke weight one and draw
84:36 - a line from x1 y1 to the first control
84:40 - point
84:41 - i just want to basically recreate
84:44 - the default diagram that i'm always
84:46 - seeing
84:48 - which i think looks like this and then
84:51 - as i move this around you can sort of
84:52 - see
84:53 - how it is the control point for this
84:55 - part of the curve now obviously i would
84:57 - want to do something more sophisticated
85:00 - where i pick um
85:04 - different
85:08 - where i'm able to have maybe each of
85:09 - these points be an object that i could
85:10 - click on and move it around if i really
85:12 - wanted to build
85:13 - a tool to be able to drag and drag
85:16 - around and
85:17 - make my own custom bezier curve but
85:19 - that's not really particularly where i'm
85:21 - going with this i just want to
85:22 - understand
85:23 - the bezier function
85:28 - any questions that about what i've done
85:30 - so far i'm going to look at the chat
85:35 - [Music]
85:38 - um
85:41 - can you guys hear those birds singing
85:43 - the storm has not arrived yet
85:45 - i was gonna go for a jog today wonderful
85:47 - time to do that before it rains
85:49 - um
85:52 - okay so the next thing that i'm going to
85:54 - save this
85:56 - um and i'm going to duplicate it
86:00 - because what i would like to understand
86:02 - now
86:03 - is how to do and zachary macarthur
86:06 - saying the algorithm is far less complex
86:08 - than most of what you've done in the
86:09 - past
86:11 - all right i'll try to take a look at
86:12 - that in a little bit i mean i had
86:14 - my trajectory here that i'm thinking is
86:17 - i wanted to just
86:18 - understand how the bezier function
86:20 - itself works
86:22 - now i want to get to the point where i
86:24 - can use this same function
86:26 - the same functionality but with begin
86:28 - shape and shape and
86:29 - quadratic vertex bezier vertex etc
86:34 - people are interested in the algorithm
86:36 - so i i um
86:39 - oh the chair is making a squeaking sound
86:42 - yeah this is like a
86:44 - by the way i i hate that i'm sitting
86:46 - right now and my
86:47 - intention if it works out for me to i
86:50 - have a new
86:50 - spot where i'm gonna live stream from is
86:52 - to be standing um so sorry about the
86:54 - chair sounds
86:56 - um
87:00 - um what i was hoping to do was actually
87:02 - take the bezier function and look at it
87:04 - in the context of something like the
87:05 - self-avoiding random walk
87:07 - and visualize it differently but let me
87:11 - let me get one step further with this
87:13 - and i'll maybe i'll look at the
87:14 - algorithm as well
87:16 - which is that what i want to do is say
87:18 - begin shape
87:20 - and shape now what happens if i say
87:23 - vertex x1 y1
87:27 - vertex x2 y2
87:32 - and
87:36 - let's just make this
87:41 - a different color
87:47 - i want to figure out how to get this
87:50 - orange line
87:51 - to follow this exact path is it as
87:54 - simple as saying bezier vertex
87:57 - and then just giving it four
88:03 - um no what is it telling me here
88:06 - vertex must be used once okay so is that
88:09 - the control point
88:11 - when i say bezier vertex
88:17 - interesting
88:20 - is this how it works
88:24 - no actually no okay let's look it up
88:28 - so let's see what does it say in runes
88:31 - vertex oh
88:35 - bessie vero let's look at the draw more
88:37 - sophisticated curves let's look at
88:39 - bezier vertex
88:40 - reference page
88:45 - um alright so how does this work
88:50 - oh control point control point
88:53 - anchor point that's interesting
88:58 - so you give it a vertex which is
89:01 - so it's like it's almost like you chop
89:02 - off
89:05 - looks like the way that it works is you
89:08 - take
89:09 - this out and put that in as the vertex
89:12 - and then the bezel vertex is
89:14 - all the rest of it
89:19 - ah interesting so
89:23 - then if i wanted to keep going
89:27 - like i could make this another vertex
89:31 - and then i could continue on with two
89:35 - more control points to the next point
89:37 - that's interesting okay so i never never
89:39 - occurred to me to do this
89:40 - the quadratic vertex would just be is
89:43 - that just
89:44 - one
89:50 - then
89:52 - the quadratic vertex is one control
89:56 - point and then the next point ah
89:59 - fascinating totally makes sense okay
90:04 - i can't believe how long i've been doing
90:05 - this and i never really like bothered to
90:07 - check how this really works
90:09 - um fascinating okay so now i understand
90:12 - this
90:13 - um
90:16 - an easy thing to make it fun would be to
90:18 - animate a few beziers in a particle
90:21 - system and let them draw
90:23 - yeah you can keep going without without
90:26 - adding more regular vertices i
90:27 - uh okay can i
90:33 - like oh yeah look at that
90:36 - oh ah okay
90:40 - so what i kind of wanted to do
90:43 - is the following i'll show you so i'm
90:46 - gonna go to
90:47 - just sort of see how this works
90:52 - so this is my
90:56 - self-avoiding walk uh example and let's
90:59 - make the spacing like 50 just to
91:02 - all right so this is an example that i'm
91:04 - working with which is
91:05 - a self-avoiding walk and i've talked
91:09 - incessantly about this there's a edited
91:12 - coding challenge video it's about 40
91:14 - minutes long where i code through this
91:15 - entire thing
91:17 - soon to be published i'm going to
91:19 - duplicate this
91:23 - and say with bezier because what i was
91:26 - curious to do here
91:28 - is you'll notice here that i have
91:34 - begin shape and shape vertex
91:37 - so what would it mean for me to start
91:41 - using
91:41 - bezier vertices to draw
91:45 - this path
91:48 - and i did this by the way there is
91:51 - something called
91:52 - curve vertex which you can see just kind
91:54 - of
91:55 - makes it a little curvy but i think we
91:57 - could get
91:58 - even further with this with
92:01 - a bezier vertex
92:07 - so i think the way for me to do this i
92:09 - need to have access to
92:13 - an index encounter i equals zero
92:16 - i is less than path dot length
92:20 - and then i plus plus
92:25 - and let spot equals path index
92:29 - i
92:32 - so this is the same but now i could say
92:37 - let control 1 equal path i
92:40 - plus 1
92:43 - control 2 equal path
92:47 - i plus 2 and then
92:52 - anchor
92:55 - equal i plus three then i'll want to
92:59 - skip ahead like i want to use four
93:01 - points at once
93:04 - although can i just do if i can keep
93:06 - going
93:08 - i can just say ah wait wait wait
93:12 - i can start at 1 i can say
93:16 - vertex path index 0.x
93:19 - path index 0
93:22 - dot y ah yeah yeah yeah and then
93:26 - the um this is i plus zero
93:30 - i plus one i plus two then i could say
93:34 - bezier vertex
93:38 - control one dot x control one dot y
93:41 - control two dot x control two dot y
93:48 - anchor dot x anchor dot y
93:52 - um can't read and then this
93:56 - has to be path dot length minus two
94:02 - okay but i also want to go up
94:06 - by three each time
94:09 - or by two
94:15 - i mean is this what i meant to do i'm
94:17 - not entirely sure
94:24 - does this make sense so i'm using three
94:28 - points and going up by three yeah
94:30 - so hold on let's um
94:34 - let's give myself a lot more space to
94:35 - work with here
94:41 - now unfortunately um the particular
94:44 - algorithm that i'm using it gets
94:46 - stuck quite easily and takes quite a
94:47 - while to get
94:49 - past being stuck and then i think i can
94:51 - also i think actually for
94:53 - the sake of argument i should um
94:57 - also it might be interesting just to try
95:00 - quadratic vertex but
95:02 - um i should also say
95:05 - here vertex
95:09 - like path uh index path dot
95:13 - length like i should do the last one
95:17 - also
95:21 - and
95:22 - [Music]
95:27 - let's give myself a lot more space
95:33 - see what happened
95:36 - i always like to do this when i've got
95:39 - something
95:40 - let's go here and see
95:47 - this is pretty interesting
95:51 - could be nice on the 3d version of this
95:53 - random walk bezier curves
95:57 - i quite like how this looks
96:03 - i mean it really looks like i'm making
96:05 - some kind of strange map
96:07 - terrain coastline like thing
96:11 - i think what i would also like to do
96:13 - just to
96:16 - because i have such a large space to
96:17 - work with is put this back in
96:22 - which um will
96:25 - like look for a lot more spots all at
96:27 - once
96:29 - let's see if i can save this
96:35 - come on i wanted to get yeah it gets
96:40 - super stuck so fast i wonder
96:43 - i want to have it start in the middle
96:44 - actually um
96:47 - which i think would be more effective
96:49 - also um
96:51 - and and maybe actually watching it is
96:53 - more fun
96:54 - than anything else sorry i'm like
96:56 - obsessively tweaking this now
96:58 - uh so floor columns
97:02 - divided by two uh floor rows this will
97:05 - have it start in the middle
97:08 - let's go to
97:16 - oh so small
97:20 - what if i um let's go back to like uh
97:24 - 10 just because that's really small and
97:26 - then see what we get
97:31 - what do we think folks
97:38 - oh let it jump if it gets stuck
97:41 - that's interesting
97:48 - we've we've got a little lucky start
97:49 - where it's not getting stuck
97:51 - too badly it's finding lot it's got lots
97:54 - of open space it's finding other ways to
98:00 - go
98:02 - looks like norway
98:05 - so true if you make it fill
98:09 - oh whoa okay
98:14 - um let's try having it
98:17 - fill um
98:28 - yeah it doesn't fill in the way that i
98:30 - want it to
98:32 - in that um but that's pretty nice
98:36 - like i kind of don't love this oh i
98:38 - guess i could do
98:40 - um clothes will that make it look
98:44 - you know that's kind of whacky it kind
98:47 - of look an interesting
98:52 - yeah it's really satisfying when it
98:53 - finds its way out of a corner
98:54 - unfortunately it's not continuing to go
98:56 - and
98:56 - now it's going to be stuck for quite a
98:58 - while now
99:01 - but i do rather love this shape that it
99:03 - created
99:09 - i think we've made something away so
99:10 - what the question i have is
99:12 - what can i apply this to
99:18 - that is i don't know that in the video
99:22 - like demonstrating this makes sense
99:24 - purlin noise
99:26 - um
99:29 - yes stig there's a family family you
99:32 - don't need to watch the coding train
99:33 - i'm just responding to stiggs messages
99:36 - in the chat
99:36 - about uh uh celebrating um
99:40 - his wife's birthday okay um
99:44 - all right i'm trying to think of where i
99:46 - want to go with this
99:47 - next can you make it go in both
99:50 - directions
99:52 - interesting it's europe can you make it
99:55 - go
99:56 - in both directions i don't know what
99:57 - that means well one thing that is
99:58 - interesting to try here i have an idea
100:01 - i have a unique idea it's not unique i i
100:03 - explored this before
100:04 - uh where is my code let's give it
100:11 - uh more direct more opportunity to go in
100:14 - different directions
100:16 - ah so let's give it
100:19 - that it can go also to negative 1
100:23 - negative 1 and to negative 1
100:26 - uh 1 negative 1. so it can go in
100:30 - all the diagonal directions as well or 1
100:33 - comma 1 or one common negative one
100:39 - so now it will get stuck much less this
100:42 - will ultimately allow it to i believe
100:48 - cross
100:52 - yeah so it's not really going to get
100:53 - stuck as much doing this because it's
100:55 - got
100:56 - so many more ways it could go from each
100:57 - point
100:59 - both directions means grow at each end
101:04 - i got negative 1 1 twice
101:08 - negative 1 negative 1 1 negative 1. oh
101:11 - whoops thank you
101:12 - [Music]
101:14 - that's going to make a big difference
101:19 - all right let's see what we get here i
101:22 - feel like the fill
101:23 - might be oh
101:33 - i'm really liking this now i don't know
101:36 - how i feel about this
101:37 - giant line that's like continuing to
101:40 - draw it and the fill
101:42 - so i think i want to go back to um
101:47 - have getting rid of that close
101:52 - and getting rid of the fill
101:56 - and let's make it just a little bit whoa
101:59 - oh actually i kind of like that
102:05 - i mean i'm gonna like this so much when
102:06 - it's done
102:08 - but um let me put no fill back
102:11 - and then let me also make it a little
102:12 - thicker
102:17 - yeah this is kind of what i would now
102:18 - it's kind of doing what i imagined
102:22 - random coastline generator certainly is
102:25 - quite like that
102:32 - you know one thing that would be
102:33 - interesting would be to require it to do
102:36 - the all of the non-diagonal choices
102:39 - before it's allowed to do a diagonal um
102:42 - thanks to all of you who are watching so
102:43 - late into the night
102:44 - people are posting that they need to
102:46 - drop off and go to sleep
102:47 - so is it still a self-avoiding walk not
102:50 - really i would say i mean i think this
102:51 - is up for debate
102:55 - if only uh okay uh
102:59 - is it still a self-avoiding
103:04 - walk
103:08 - yes no i don't no
103:13 - create all right folks
103:17 - uh here's your new poll to vote on
103:24 - and uh now if we look at the results
103:33 - um and i go back where where where were
103:37 - we here
103:38 - is this still a self-avoiding walk now
103:41 - the issue is
103:42 - i have to get the poll id
103:46 - um so give me a second here
103:52 - i have a new poll id that's why i
103:58 - latest oh shoot
104:02 - oh life is hard uh
104:05 - here we go
104:09 - let's see if this will load
104:14 - oh oh yep there we go
104:19 - okay we've got the live poll going oh
104:22 - this is fun
104:23 - i love seeing it going live uh
104:26 - [Music]
104:27 - [Laughter]
104:30 - i really should have i guess i should
104:32 - put this overlay back
104:34 - on top of hold on back to here
104:37 - and then we can get it back where is it
104:40 - where is it
104:41 - here it is and i can uh oh i um unlock
104:44 - it
104:46 - and put it here okay
104:53 - is it still a self-avoiding walk that's
104:56 - the question
105:00 - get a little small i'm obsessively like
105:05 - there we go can you see that
105:09 - oh it's definitely stuck easy fix is
105:12 - also just to let it start in a new
105:14 - random position
105:15 - when it got stuck for long enough oh
105:17 - incredible fox has already fixed
105:19 - the newest thing
105:21 - [Laughter]
105:23 - uh amazing that's amazing so now i
105:26 - really can spit up polls
105:27 - instantly uh that's great i i uh
105:31 - since i'm only have 15 minutes left i'll
105:34 - i'll merge and fix that for next time
105:36 - um so i think the votes are in pretty
105:39 - definitively
105:40 - that uh no so far
105:47 - okay um what do i want to do here let's
105:53 - i've got 15 minutes left it might deepen
105:55 - my knowledge
105:58 - for me to see if i can implement the
106:01 - bezier curve
106:02 - mathematics
106:10 - whoa
106:13 - i want to look for um like just a really
106:16 - quick
106:17 - reference
106:20 - uh i don't know what did you use simon
106:24 - oh let's try this
106:26 - um given two given
106:29 - two distinct points p0 and p1
106:32 - a linear bezier curve is simply a
106:34 - straight line between those two points
106:36 - the curve is given that's linear
106:38 - interpolation okay
106:40 - quadratic so maybe i should try
106:42 - quadratic first
106:47 - recursive definition explicit definition
106:52 - polynomial form
106:56 - am i going down a crazy
107:00 - uh rabbit hole
107:06 - i don't know
107:14 - uh um simon is saying uh important
107:17 - detail for beziers if you want to look
107:19 - smooth which is what they're for the
107:22 - control points must be aligned and any
107:24 - anchor point and two control points must
107:26 - form a line
107:28 - got it that's interesting so i'm
107:29 - certainly not doing that in this
107:32 - crazy demonstration and you can see
107:34 - there are lots of jagged parts
107:36 - although that quality is something that
107:37 - i quite enjoy about this particular
107:39 - pattern
107:41 - i think i can remove that right now so
107:43 - i'm just trying to decide
107:44 - how to best use i mean i think the
107:46 - particle system was a good example
107:49 - of possibly a way to demonstrate a
107:52 - bezier curve
107:53 - in a sort of like interesting arbitrary
107:55 - visual way
107:56 - i would like to explore the math but i'm
107:58 - a little bit afraid of that
108:00 - like trying to read this and implement
108:02 - it
108:04 - live so if i can ask for all of your
108:08 - help
108:10 - that would certainly be welcome
108:11 - animation of
108:13 - a linear bezier curve okay
108:16 - so let's let's see if we can figure this
108:18 - out now there's a helicopter now flying
108:20 - around above me
108:22 - all right let's let's do a little bit of
108:24 - this
108:25 - for like 10 minutes
108:29 - see how far i get
108:32 - to understand a bit more about how the
108:35 - bezier curve
108:36 - actually works
108:41 - so let's go back to
108:43 - [Music]
108:45 - this particular example
108:48 - let me duplicate this
108:52 - and let me see if i can
109:01 - recreate exactly this
109:06 - without this
109:10 - so i imagine what i need to do is
109:15 - have some iterative process
109:22 - where i say
109:25 - x equals lerp between cx
109:28 - well x1 and x2 by some amount
109:34 - y is lerp between y1 and y2
109:38 - by some amount and let's call this
109:46 - let's call this amount it might be a
109:49 - better name for it
109:52 - and then i'm just saying vertex xy
109:58 - begin shape
110:02 - and shape so what did i do
110:05 - so far what i did so far is i figured
110:08 - out a way this is like
110:10 - um what i i did very quickly just this
110:14 - the beginning of this which is
110:17 - essentially like a linear bezier curve
110:20 - in other words a straight line between
110:22 - the two points
110:23 - i'm basically looking for a t so it's
110:26 - called
110:26 - t here oops
110:31 - i'm going to close these other sketches
110:35 - this is called t in right and i'm using
110:38 - the lerp
110:39 - function the question is
110:43 - maybe what i should do is not use t
110:47 - because not use lerp because i want to
110:52 - follow the formulas on this page
110:54 - and if i don't use lerp maybe it'll
110:56 - allow me to get there
110:58 - a little bit more quickly so if i go
111:00 - back to here
111:04 - and i say um
111:07 - just trying to fit everything onto my
111:09 - screen here which is very hard to do
111:13 - um right what am i
111:18 - uh so so if i'm saying
111:21 - uh what's the equivalent here i'm saying
111:26 - x equals x one and i guess i should call
111:29 - these x
111:30 - zero just to be consistent
111:38 - i'm not using the control points yet so
111:41 - um
111:44 - x equals x zero plus
111:48 - t times x1 minus
111:51 - minus x0
111:59 - which is the same as that okay
112:02 - is that right and then y
112:06 - is y zero
112:12 - so and then these are sorry uh
112:16 - x0 x1
112:23 - whoops this is one i can't get this
112:25 - right
112:29 - okay so that's good right uh what did i
112:32 - get wrong here
112:36 - oh c x
112:40 - x y x y x y x y
112:47 - [Music]
112:50 - what did i do wrong
112:54 - x2 on line 136. there's no line 136
112:59 - oh here all right i don't need these
113:02 - lines right now
113:05 - there we go okay so i'm not using lerp
113:09 - it's just a percent t is a percentage of
113:12 - the way
113:12 - between this point and this point and
113:14 - i'm drawing all those as vertices
113:17 - okay okay
113:20 - uh a segment is a one degree bezier
113:22 - curve start there
113:24 - um all right so let's see if you look
113:26 - more closely at simon's telling me i
113:28 - i can find out in um
113:32 - uh his sketch which is great uh thank
113:34 - you all right so now quadratic bezier
113:38 - now i have a p one
113:41 - okay do i add a formula for this
113:46 - uh okay which one do i look at
113:52 - this one here there's just different
113:55 - ways to write it
113:56 - okay so now if we say
114:00 - um so ultimately this is actually i'm
114:03 - gonna
114:04 - i'm gonna follow its name nomenclature
114:07 - here
114:08 - this is actually x1 y1 this is now
114:11 - x2 y2 if for p
114:15 - and i honestly like i would like to do
114:18 - it this way p0
114:19 - equals create vector 100 200
114:22 - this is going to really help me out uh
114:26 - p1 equals create vector oh and i can't
114:28 - do create vector up here
114:34 - let's just do all this and draw
114:42 - uh p1 and then
114:45 - p2 equals create vector x
114:48 - 300 200. so i'm really following
114:54 - um and then i'm going to say this is
114:57 - p0.x
115:00 - uh p two
115:04 - two dot x p zero dot
115:07 - x p zero dot y
115:11 - p two dot y p
115:14 - zero dot x did i get it
115:18 - and then p 0 dot x
115:22 - p 0 dot y
115:29 - 1 2 one two
115:36 - p zero
115:40 - what did i mess up here oh this is y
115:44 - there we go you all with me
115:48 - so i've got p0 p1 p2
115:52 - and the idea is that basically i'm
115:55 - extending
115:57 - this uh you know with the linear
116:01 - there is no control point to sort of
116:03 - suck
116:04 - all of those internal points away almost
116:06 - like a magnet
116:07 - from the linear path it's basically
116:10 - creating a quadratic path
116:12 - and so in addition there's like the
116:15 - um one minus t squared
116:18 - so let's look at i don't know that it
116:20 - matters which one of these that i pick
116:23 - um so let's let's use this one
116:27 - so if i can once again
116:31 - here now i should be able to do it make
116:33 - a quadratic one
116:36 - which is let x equals p1
116:39 - dot x plus 1 minus t
116:44 - times 1 minus t
116:48 - times p0 dot
116:51 - x minus p1 dot x
116:57 - plus t times t
117:04 - times p2 dot x
117:08 - minus one dot x
117:12 - did i get that right
117:20 - and then if i do that with y
117:34 - uh no phil
117:39 - i think i've got this
117:42 - now let me say p1.x
117:47 - equals mousex i think i'm just going to
117:49 - do the quadratic
117:53 - so if i click the mouse
118:01 - so this is now not actually using um
118:06 - p5 bezier vertices
118:10 - uh and um mr phd is telling me that's a
118:14 - good point i could
118:15 - consolidate this by uh saying
118:23 - same right you could do this
118:28 - there's probably a less awkward way i
118:30 - could write this out
118:32 - but what i like about this is a couple
118:35 - things
118:36 - one is i've got total control over this
118:38 - right now
118:40 - so look at this if i do this
118:44 - we can sort of see and i guess i'm
118:48 - missing
118:50 - if it's not divisible it's funny how i'm
118:52 - not getting the last point
118:57 - i think i should do less than or equal
118:59 - to yeah
119:01 - so you can see here like like
119:04 - here it is this line segments
119:10 - i'm getting the curvature if i do 0.5
119:14 - like really it's just doing that like
119:17 - the curvature is related to
119:19 - how uh frequently i got the other thing
119:21 - i like about this
119:22 - is i can draw a line from
119:25 - p0 dot x p0 dot y
119:29 - to x y
119:33 - no no no uh
119:36 - that's not what i want to do
119:40 - x y to root to 1.
119:45 - now there's just so many of them so this
119:47 - needs to be
119:48 - stroke weight one
119:56 - uh
119:58 - oh so um i'm doing
120:02 - i forgot but you know sometimes i just
120:03 - forget that i'm live streaming
120:05 - can't see the code i've kind of really
120:07 - made a mess of this
120:08 - but um
120:12 - um one minus t oh this will help
120:15 - thank you
120:18 - this makes it a little nicer looking
120:23 - what i want to do i need to do this
120:25 - twice
120:30 - let me do this twice i'll show you what
120:34 - i in a second you're going to see what
120:35 - i'm trying to demonstrate
120:38 - um
120:42 - i want to demonstrate um i basically
120:44 - want to show oops
120:47 - i lost the wikipedia page here it is i
120:49 - want you to see
120:51 - this kind of cool pattern oh it's doing
120:54 - it slightly differently i'm gonna figure
120:56 - out how it's doing that
120:57 - but hold on a sec i realize i misread
121:00 - that
121:01 - um p p one dot x
121:05 - p one dot y
121:09 - and
121:12 - um if i segment this out
121:16 - yeah i was kind of so what is it
121:19 - actually doing
121:22 - then oops it's drawing oh it's drawing
121:26 - the lines across these
121:30 - like the tangents
121:37 - it's just the lerp amount oh
121:40 - okay wait so what i'm actually doing
121:45 - is saying
121:49 - i'm doing the linear thing
121:59 - it's doing the linear thing between
122:04 - p0 and p1
122:10 - whoops
122:14 - and then it's doing it's kind of crazy
122:18 - what i'm doing
122:21 - and then the same
122:24 - [Music]
122:26 - lerping between p
122:30 - p2
122:33 - and p1
122:48 - uh no the other way around
123:13 - there we go
123:17 - this is what i was trying to do
123:21 - there i got it i wanted to see that mesh
123:29 - i wanted to see this mesh i like how
123:30 - they colored it
123:32 - and um
123:40 - i'm at my time here i like how they
123:43 - colored it
123:44 - which is it's a little silly what i'm
123:45 - doing here but i'm just really
123:47 - fascinated to try to recreate
123:49 - this exact thing looks like it's just a
123:51 - sort of mapping a hue
123:54 - of a rainbow of colors so let's try that
123:58 - um and also i think i just want to be
124:00 - able to see this
124:02 - a bit more so hold on a sec
124:05 - it's also driving me crazy that as i
124:07 - move that point it gets reset
124:11 - whoops so really what i'm doing is
124:15 - saying
124:15 - let p0 p1 and p2
124:20 - then initialize them all in setup
124:26 - also let's um let's give myself
124:30 - i kind of want in a weird sort of way i
124:32 - want to give myself more vertical space
124:36 - and change just so i have space for the
124:38 - code
124:39 - um let's just make this 600 and so i
124:42 - want the points to be
124:44 - 200 100 200
124:48 - 300. um and then i have this and then
124:53 - this should be like
124:54 - 500 and then i'm able to move
124:58 - this this point okay so
125:02 - let's um oh you hear the wind you can't
125:04 - hear that can you
125:06 - uh let's move these up even more
125:12 - okay so now all right i've got my
125:14 - quadratic
125:16 - um curve that i am manipulating
125:20 - with this little nice crisscross grid
125:22 - thing
125:23 - in a crazy sort of way now i almost
125:26 - don't want to draw
125:27 - this anymore like this is showing this
125:31 - is just demonstrating how you get that
125:32 - curve
125:33 - and if i go back to like this
125:37 - right we get that moire pattern effect
125:41 - did i pronounce that correctly but i
125:43 - also can't see it
125:46 - so let's oh it's raining all right
125:51 - uh what happened to the line
125:59 - uh what happened to my two lines i need
126:02 - to draw those lines
126:07 - p zero dot x p zero dot y
126:10 - p one dot x p one dot y
126:17 - okay we don't need that
126:21 - and then also
126:24 - p2 okay
126:28 - this is pretty cool all right now
126:34 - what i want to do next
126:38 - let's drive me crazy like i just need
126:40 - more i need more space
126:42 - now this code can sneak over here
126:46 - i can do this great all right so next i
126:49 - just want to try getting the color
126:51 - um hsb time
126:55 - hsb time yes it is hsb time now
127:01 - um color mode
127:06 - hsb and i can say
127:10 - stroke
127:12 - t times 360
127:16 - uh 255 255.
127:20 - there we go we have our colors they're
127:22 - red on both
127:24 - ends and there we go
127:29 - so here's an uh
127:33 - so clearly what i should be doing is
127:36 - moving like
127:37 - p1 with purl and noise
127:42 - so i should be moving all the points uh
127:45 - but let's just try p1
127:48 - p1 equals
127:51 - noise uh let t
127:55 - one let t two or no uh
127:58 - x off no i don't know what to say x off
128:00 - one uh i've got all these t's
128:03 - t1 and uh
128:06 - t2 and um
128:09 - [Music]
128:10 - t1 equals random 1000
128:14 - t2 equals random 1000 noise
128:18 - t1 times width uh
128:22 - noise t2 times height
128:26 - t1 plus equals 0.1
128:30 - t2 let's make the much less
128:37 - there we go i don't know what i made
128:42 - the fixed points are uh should be
128:46 - i think also now like zero zero
128:50 - and width height
129:01 - i'm not sure what i've created
129:07 - but it is kind of interesting
129:15 - i think i i have to i really need to
129:17 - stop
129:18 - but i need p1 and p2
129:21 - p0 and p2 to move so i'm going to do
129:25 - this
129:26 - uh p0 dot so i'm going to say
129:30 - um let y
129:33 - speed
129:37 - let x speed
129:41 - p0
129:44 - p0 p0.x plus equals xspeed
129:49 - okay then oh maybe i should just use
129:52 - like a sine wave
129:54 - uh p0.x equals map
129:59 - sine of t one
130:04 - negative one negative one to one zero to
130:07 - width
130:13 - and then what if i do p
130:18 - 2 x but use cosine
130:29 - don't know i don't know what i'm doing
130:37 - very strange oh they need to move up and
130:38 - down in the y
130:40 - uh
130:54 - they're moving into like a circle
131:08 - uh
131:14 - what if i give them
131:24 - well now we're moving along a diagonal
131:26 - no
131:30 - did i have it right before
131:39 - there we go this is kind of looking for
131:41 - i don't know what i'm doing
131:49 - oh yeah it should definitely uh make it
131:51 - sound reactive
131:53 - this is very strange keep the end points
131:57 - fixed and oscillate the control point
132:08 - so uh thank you everybody i think this
132:11 - is the end of today's live stream
132:14 - um we've made a few different sketches i
132:16 - can't remember if i posted this one into
132:17 - discord
132:18 - um i don't have a good mechanism right
132:21 - now for people to share
132:22 - variations off of what they make off of
132:25 - these like sort of
132:26 - more um uh
132:30 - uh kind of improvisational um live
132:33 - streams but i would love for you i guess
132:35 - you can
132:35 - if you join the discord or share with me
132:37 - at shiffman on twitter
132:39 - um that's a great way to share this
132:41 - stuff i don't know that i really settled
132:43 - on what i want to do for the bezier
132:44 - function tutorial
132:46 - but i definitely have a better
132:47 - understanding of how it works
132:49 - the thing that i didn't do um
132:52 - which is uh is i just did
132:56 - the um i implemented this quadratic
132:58 - bezier curve
133:00 - math and i got something
133:03 - you know somewhat like this so what i
133:07 - would
133:07 - uh certainly recommend and it wouldn't
133:09 - be it's not too much more work
133:11 - is i just need one more point and then
133:13 - it's 1 minus t to the third power oh but
133:16 - i'm going to leave that as an exercise
133:18 - so viewers watching i would encourage
133:21 - you
133:22 - to take my code which implements
133:27 - this particular this is it right here
133:30 - i'm going to take this out
133:32 - this is quadratic
133:36 - bezier
133:40 - can you um
133:44 - can you um uh uh
133:47 - add one more control point
133:50 - for cubic and the reference that you
133:53 - want for that
133:54 - is right here can i link directly to
133:58 - cubic i guess i just need to get to
134:01 - like where is it cubic yeah okay
134:06 - so uh please
134:09 - do this and see
134:13 - what you get so it's the same sketch
134:16 - take the code
134:16 - see if you can complete this exercise
134:19 - this is a homework assignment for those
134:21 - of you watching
134:21 - it's due on monday and you turn
134:25 - in your homework by tweeting at me at
134:28 - shiffman on twitter
134:29 - or um uh you can also i'm just to go
134:33 - into the discord here
134:35 - the channel would be um i guess you
134:37 - could use this
134:38 - share channel here i'll try to keep my
134:40 - eye on that um this weekend
134:43 - i would love to see your take your
134:45 - version
134:46 - of that um okay so um
134:49 - thanks everybody um that's it for today
134:54 - i've accomplished some goals uh i don't
134:57 - i don't know what i'm going with this i
134:59 - would love your thoughts and suggestions
135:01 - about
135:02 - what i might actually do in the tutorial
135:06 - itself but
135:07 - i think actually this helps clarify for
135:09 - me i think i just want to define
135:11 - the bezier curve show how to make a
135:13 - continuous shape with it
135:15 - and then do something where i move the
135:17 - points around
135:20 - algorithmically
135:22 - can you do b splines in the next
135:25 - session maybe
135:29 - that's definitely a possibility um
135:33 - by the way any notion users out there a
135:36 - notion recently
135:37 - released an api and i have an
135:41 - opportunity perhaps
135:43 - to um
135:44 - [Music]
135:48 - um to do some videos about it
135:57 - yeah i was thinking of trying to use
135:58 - this as a basic like data store
136:02 - um so i'm interested in pursuing this if
136:05 - this interests you
136:07 - i would love to hear about it
136:08 - [Music]
136:13 - i'm a little bit over time but i did
136:14 - okay
136:16 - am i going to be able to get a jog
136:20 - in or is the rain too much we will find
136:23 - out
136:24 - that's the question
136:25 - [Music]
136:31 - i've enjoyed doing two live streams in a
136:33 - row
136:35 - [Music]
136:37 - speaking of notion and nebula
136:41 - thomas frank um
136:44 - on youtube uh is also part of
136:48 - notion um thomas frank has a lot of
136:53 - subscribers
136:54 - um and so i believe he has a notion
136:57 - tutorials and templates
136:59 - so i was talking with um i hope it's not
137:03 - thomas messaging with him about doing
137:04 - something with the the notion
137:06 - api nebula has a channel that's
137:10 - interesting
137:13 - oh yeah this is one of the originals
137:15 - it's a thing called working titles where
137:17 - it's a bunch of videos about um
137:20 - different title sequences and different
137:22 - shows
137:23 - um thomas attractor what is a thomas
137:26 - attractor
137:29 - oh what what
137:33 - i haven't done this one hold on hold
137:35 - hold pause hold stop the presses
137:39 - this is it that looks simple enough
137:44 - oh i want to do this
137:49 - oh i want to do this
137:53 - not today
137:56 - by the way my middle name is thomas and
137:57 - i was talking about thomas frank
138:00 - oh my god uh
138:03 - it's all coming together oh i'm not
138:06 - signed in somebody file an issue for the
138:07 - thomas attractor
138:09 - here
138:14 - so unfortunately there won't be a live
138:15 - stream tomorrow uh we're gonna
138:18 - have it hopefully a nice family weekend
138:20 - i do plan i do hope to
138:22 - live stream once per week over the
138:25 - summer there's a bit of a trade-off
138:26 - um you know if i if i really wanted to
138:28 - um
138:29 - you know um i mean i shouldn't i
138:32 - shouldn't ask this audience because
138:34 - you're all the
138:35 - you're the audience that's watching the
138:38 - live stream
138:38 - but the more i live stream the less i'm
138:41 - able to get
138:42 - the uh sort of like sequence tutorials
138:44 - and coding challenge videos out
138:46 - um our stark says go for a jog get some
138:50 - food and we'll see you back here at 6.
138:52 - i wish i i if i were 20 years younger
138:56 - i'd probably just be live streaming all
138:58 - day
138:59 - but oh and look wow this is wild what my
139:01 - shirt is doing that's really cool but
139:03 - please say to join the discord let's
139:05 - connect
139:05 - there let's share all the wonderful
139:07 - things we're making you should live
139:09 - stream your sessions
139:10 - maybe i can tune in all of that stuff uh
139:13 - there's eight seconds left
139:14 - thank you so much for being here with me
139:16 - today
139:18 - this was an episode of the coding train
139:19 - i'll be back next week
139:21 - stay tuned subscribe and all that stuff
139:24 - thank you to
139:25 - um curiositystream
139:28 - qrstream.comcodingtrain
139:29 - uh for being a sponsor of today's live
139:31 - stream and
139:32 - i'll see you next time as always i
139:35 - always forget that this stop this stop
139:37 - it stop this stop i'm gonna do
139:38 - this stop this stop i'm gonna do this
139:40 - this stop this stop this stop i'm gonna
139:42 - do
139:43 - this stop stop
139:51 - [Music]
140:15 - i
140:16 - [Music]
140:38 - this dot song never forget this dot
140:41 - somebody composed that song for me
140:54 - [Music]
140:57 - i'm going to say once again here we
141:06 - [Music]
141:11 - forward go cartesian coordination
141:28 - autotune and the internet will fix that
141:30 - for me
141:36 - sing it with me it's the new
141:42 - [Music]
141:52 - cartesian
141:58 - [Music]
142:01 - unicorns and rainbows and cupcakes what
142:04 - else
142:04 - is there yes kittens thank you very much
142:08 - kittens and rainbows and cupcakes notice
142:11 - that look what i get
142:12 - i'm really losing my mind okay let's do
142:17 - [Music]
142:20 - it
142:22 - [Music]
142:31 - [Music]
142:43 - the kittens kittens and kittens and
142:45 - kittens kids
142:50 - [Music]
142:54 - the kittens the kittens
143:04 - [Music]
143:20 - [Music]
143:31 - i feel just sort of like a nice feeling
143:34 - of relaxation
143:36 - everything's gonna be okay today dream
143:38 - is not broken it has not frozen this is
143:40 - a
143:40 - this is a wonderful thing okay we're
143:43 - gonna do it
143:44 - i'm really getting to something i need
143:45 - my sound effects
144:01 - [Music]
144:06 - that was invalid syntax i forgot uh
144:09 - there was one other
144:10 - thing here that i think is important
144:12 - that i will use continuously over and
144:15 - over again
144:16 - all sorts of text generation analysis
144:19 - things
144:20 - that i will use continuously over and
144:22 - over again
144:23 - first thing i need to do is yes
144:31 - [Music]
144:44 - i just noticed by the way i know this
144:46 - stream is over that
144:47 - i'm gonna and i'm gonna i'm gonna show
144:49 - this to you that
144:50 - um um this is a
144:53 - a beta or alpha e feature on youtube
144:57 - i believe this is now available for all
144:59 - of my videos i would love for people to
145:00 - try to use it
145:01 - so go back to a previous live stream any
145:03 - video clip
145:04 - and share i'm so excited to have this
145:07 - been wanting this forever
145:08 - um in some ways it might mean that i
145:10 - could just sort of double down on live
145:12 - streaming and then clip out
145:13 - sections i have no idea but that just
145:16 - got i've been asking youtube to add me
145:18 - to the beta for this
145:19 - i'm pretty sure that i'm i'm special and
145:21 - i just got added
145:24 - but it might be that it's just on every
145:25 - channel now but i don't think so so
145:27 - please
145:27 - if you're still here and watching that
145:29 - um please please go use that try that
145:31 - see what it see what it does for you
145:33 - okay
145:33 - goodbye everybody um that's it
145:38 - [Music]
145:41 - have a wonderful weekend

Cleaned transcript:

do so so do do oh hello everybody i forgot to do my audio check uh can you hear me uh just when i thought i was ready to go i'm hitting a little technical snag but i think i'll be up and running and we will be beginning in about 2 minutes and 30 seconds see you shortly do do me ah i'm live it doesn't happen automatically but the music does end and i just like by uh reflex press the buttons to put me live but i was fixing something i'm trying to get this app up and running on glitch and i wanted to get it up and running before i started but uh i don't have it up and running yet but i've started hello hi it's me dan the host of the coding train coming to you live from brooklyn new york for the second day in a row which is not something you want to get used to oh gloria every time i start something live streaming my little pup over there gloria who's not so little actually she just like gets up from her bed and starts bounding over i think she thinks like i'm about to take her for a walk she's got she's got two hours to wait um i'm just seeing the chat here um and just finished preparing dinner uh and now daniel is on watch the coding train with a plate of indonesian food on my lap well that sounds delicious from new member mark boots if i'm correct joined yesterday uh welcome um so today is a bit of a continuation from yesterday i think i don't know maybe it's not but you definitely don't have to have tuned in yesterday to be participating today you don't have to have ever tuned in before in fact i know there are some new viewers in particular uh i saw before i started a couple messages in the chat which said i learned p5.js from your videos but this is the first time i'm tuning in live well do i have news for you um these live streams tend to be i think the word that i used yesterday which is quite appropriate a bit of a mess um there's not a clear plan for them i aspire to someday have more segments and uh kind of uh time box things and have a very clear trajectory as to where i'm going from whence i came but none of that exists for today i do have some items on my mental todo list probably the most one for me the most important one for me to get to relates to the tshirt that i'm wearing you can see here uh by the way there's greed in this tshirt so these aren't the actual colors unfortunately but it says processing foundation here uh the processing foundation is the nonforprofit organization that i am a part of um you know coding train is a separate endeavor but the two are intertwined in many ways um but and i like to use the coding train to support the processing foundation to the extent that i can but a processing foundation had an annual fundraiser and i meant to get the link up and running for that but i did not um and uh i'm seeing if i can find it uh annual fundraiser processing foundation 2020. come on it's got to be i think i found it i think i found it 20 20. i found it i found it all right so moving on over here this was and look at this look at this image do you recognize that image and you can see now that the colors have changed to white because it is uh whatever i am in front of uh there we go we can see the o from organization kind of entering my shirt um so one of the uh if i click over here one of oh and the campaign is uh no longer there but um we have stickers tshirts did you get one of these hoodies i don't have a hoodie uh coding train videos that's what and i have not fulfilled my obligation it's kind of like a wedding present i think you have like one year from the wedding to give your present so i feel like i have one year from the fundraiser to deliver on my coding train videos for the donors of to the processing foundation so i'm way ahead of the game given that i'm not even i guess june is about halfway through 2021 but i did intend to actually do them in january june june starts with j and january starts with j so it's kind of like the same month really i'm basically on time because of the j and july is my backup plan um but um the school year has wrapped up for me now so there's really no excuse anymore um what i uh and so the two topics for the two donations i have to make sure there isn't a third if you were a uh i see computational mama in the chat hi computational mom i love your channel everybody check out computational mama's channel if you haven't already um what was i saying i got a thing i was saying before i got distracted oh i'm so easily distracted right i know that there were two donors one the topic for one donor was uh requested was the bezier function and the topic from the other donor is the copy function if you are a donor who requested a video topic and you're watching right now or sometime in the near future remind me i'm going to go back to my notes and emails and i'll probably remember but i think there are only those two um and i so anyway so i want to take some time today it's this is not the fulfillment of that video this is my prep session where i am going to teach myself the inner workings of the bezier function in p5 try to make some examples with it and basically build a bit of a plan for a recorded short five to ten minute video tutorial about the bezier function and spoiler alert i'm going to be basing um my initial research off of this book called programming design systems by roon matson and i believe somewhere on this custom shapes perhaps yeah there is a whole section so i will be doing a dramatic reading of this section about bezier curves and kind of thinking about how i want to present it and oh wow this is really awesome um about how i want to present it and thank you simon for um oh um are am i having problems with this stream chat too oh you know i just forgot about this stream chat i think it still works i just didn't launch it i'll come back to that i'm very focused on the um um uh the new uh random number bot features that i talked about yesterday and i would like to return to that perhaps okay um so sorry about that just stream chat i should be um getting that back up and running i'm getting all these super chats which is so kind of all of you thank you to simone and there was one earlier i got to scroll back up uh thank you to simone and gary for your very kind um super chats it's super appreciated it helps to keep the engine running speaking of which something else that keeps the engine running here at the coding train is the sponsor of today's live stream oh my goodness curiosity stream um i love documentary films um curiosity stream which was launched by media visionary john hedricks who founded the discovery channel you know which is albeit a lot of other kinds of reality tv programming right now but uh curiosity stream is the you know awardwinning destination for documentary films and tv shows covering every topic from space exploration to adventure to the secret lives of wild animals so at that link curiositystream.com codingtrain you can wait i have a bit to do breaking news breaking news my script over here says a 26 discount on the annual hd plan which is 14.79 cents for the whole year i've just been told through my earpiece here and my mental uh brain thing mabob that's in my head that uh for this weekend only there is a special 40 discount it is 11.79 for the entire year i think if my math is correct that's one dollar per month for the entire uh curiosity stream uh a catalog of documentary films but wait there's more there's also something called watch nebula which is a streaming video service that i'm a part of uh made by educational uh youtubers um all together uh i'll come back and and show you some like uh make some documentary recommendations and stuff later but um the link up there if you're interested please uh sign up um i uh it helps me out a little bit and i i think i mean i i just i just love that i love all the stuff on curiosity stream it's really good so all right uh back to my um regularly scheduled programming bezier curves um i think i need i'm feeling a little bit discombobulated i don't see the chat anymore um and computational mama is asking does it work in india i don't that's a good question um let's be in touch um computational mama are you in the discord because i see you and also hippo viva uh have member uh supporter uh emojis next to your name um excuse me so if you're not in the discord let's uh let's get you onboarded in there anyone who is a member speaking of membership i talked about this a lot yesterday but i am producing these custom train whistles i don't think i need to necessarily go back again and i see that uh simon thank you you have some bezier curve related p5.js sketches uh coding trade viewer simon does maybe i can show those all right let's start with today's i don't know if i have a sound drop for this uh let's try this one it is time to continue the coding trains reading of the random numbers so as you may know i have a book called a million random digits with 100 000 normal deviates i like to spend way too much time on this youtube channel talking about my dear dear love for this book that's a little bit weird it's so weathered it's been i carry it with me it's been outside in the garden the page is falling out oh i really want to find an original print of this book but um newly implemented in the coding trains discord um newly i'm going to under bot demo let's see if i can come back to here this is the coding trains discord uh which um i'm posting putting a link in the youtube chat you should definitely join if you haven't already wonderful place to get some well so to get some help with your code we're planning some new community initiatives on discord this summer excited to tell you about those as they get going um but um one of the new things in the discord is that uh the bot the choo choo bot now will generate a random walk from a particular position in the book with a particular with a random sequence of five digits from that position so this pattern uh is from position 4687 in the book which i could try to find out of one million digits but also let's see what do i say i think if i say reading the bot will now tell me shiffman will continue reading the book at page one row one and column zero so that means it's my reminder to continue my project which i started yesterday so i've probably restarted again every so often to read this entire book will i get it through in my lifetime a mystery a wondrous perplexing unknowable question i mean will we all be around to see if i could get through this entire book in my lifetime uh i don't know it's quite a goal i've got but i now need to go to page one row one column zero and i will now read three seven five four two four oh let me start over i messed up three seven five four two zero four eight zero five six four eight nine four seven four two nine six two four eight o five two four zero three seven two zero six three six one zero four zero two zero zero eight two two nine one six six five so now i believe the next thing now that i've read that i can set myself i can say uh oh let me i forgot what the command is reading set reading um the command i want to say is set reading column no page one row two wait let's maybe it'll tell me valid page row and column yes set reading page page one row two column zero i have updated the book position to page one row two and column zero so when i ask for it next time oh you can't see what i'm doing here it is sorry i was typing all these commands um i will continue reading the book at page one row two column zero are you with me are we all okay do we have we found the system that works for all of us to get through this entire book i mean what percentage am i through i've read um a hundred digits out of one million is that right is that a hundred digits five times ten is fifty uh ten percent would be a hundred thousand one percent would be ten thousand point one percent would be a thousand i have read zero point zero one percent of this book in two days see if you can compute the predicted date everybody like you know we can all at once everybody in the chat like type in the date you think i'm gonna finish the book and hit enter ready one two no no i'm gonna do three two one and you enter but not on one three two one and then on the next enter you enter on enter you're ready oh wait what happened to my sound effect three two one enter so that's gonna happen i'm gonna see this now in like 30 seconds to a minute because i am in the future which is very strange you were all behind me in the past and that is correct mark boots maybe we can add that as a feature to the bot um so just to quickly um recap i don't i spent a lot of time on this yesterday and i don't want to spend so much time on this but you can um what are the commands you can participate in this in the discord in the bot uh testing or bot talk channel i don't remember you can ask for your number so if you say uh my number everybody can be assigned their own random number in the book with a unique position so nobody else can have this position 11 570 but me um but i believe you can if i um what uh i can set uh a set a new number and if i don't give it a command um it's going to uh choose a new one so i would like to know actually kobe i think this is another note so i think we should want the position here so here i would also like to have the position it's kind of interesting do i want all the information always the number the position the row the column i think the row the column and page number is really for me um october 13 2048 if you read run one row per day which you aren't simon i've impressed by the way i should use my everyday calendar hold on um if i bring this down here you can see this is the simone arch yeah church uh everyday calendar that i have here behind my green screen um so maybe i can use that uh to keep track of reading all of the random numbers so um anyway so i would love for you to join the discord to get your own random number a little bonus if you sign up for youtube membership is that you can actually set your own number so i think i could set like if i wanted my number to be 2048 um i believe it's successfully saved the number 32 679 uh maybe i can't i maybe i'm still not allowed to set my own number nicole has the book wow so having the page row column would be amazing okay um so yeah um um so let's get that let's um you know i'm not super organized here in keeping track of ideas i suppose um what might make sense is let's see if i go to this is uh whoops let's see let's go to the coding train github and let's find oh discord bot choo choo this is the choo choo bot source code as well as a link to all of my discord bot tutorials um and chris is asking a really good question which i'll answer in a second but i don't believe uh kobe correct me if i'm wrong i don't believe the code for the new random walk features are in this one there is some code for drawing a random walk so maybe we can but what i was gonna say is maybe we should have a place um a github repo that uh we can take issues and requests for this particular random number feature um if your coding experience would be your age how old are you asks davon raj in the chat that is a great question um and computational mama says three years old same as my son wow that's amazing so for me i am 47 years old uh if you didn't know that already but my coding age is la it depends on how you count i was going to say it's less than 20 um because i didn't really start on this path and journey of creative coding and everything that i'm doing now until i was so it's more than my math was off 27 so 22 years old but i did actually do some coding as a i think a second or third or fourth grader um i learned uh but you know i did it for like two weeks and then never did it again then maybe i did it for one week in middle school then never did it again so i don't really necessarily count those but an interesting story is and that i'm hoping will be part of the coding train programming maybe even as early as this summer is the computer that i grew up with was an apple ii plus and that exact apple ii plus that i believe we got maybe when i was 10 years old let's look at the date i'm not sure um i have to figure this out but that apple ii plus is in my parents house where they still live in the attic maintained and kept in a pretty good condition and i'm planning to retrieve it sometime this summer and uh set it up and actually like live stream the output of it to behind me so i'm really excited to try to do that um and um i love that there are parents here i love that there are kids and parents in the chat this is making me so happy um one of the things that always amazes me about the work that i'm doing here on youtube is the sort of range of people in the audience uh from young people who are just learning to code to older folks who are just learning to code to people in their 20s who have been coding since they were very young the whole range is there and i'm thrilled thrilled thrilled and uh nicole is saying i'm counting my geocities websites as the beginning of my coding life yay juices i i want to show you all something which um let's see if i can get this up uh editor.p5.js um coding train sketches i want to bring this up because this is maybe a project for next week's live stream pine yeah all right so is it this one probably it's one of these is it this one doesn't look like it nope is it this one yes so speaking of geocities this is a p5.js sketch that i made that is called the pine a eye bowl pine pine like pineapple get it like pineapple but pineapple and what this does it allows you to take any image like here's one of my the coding train wheels the mouse character from my mouse conference video and um it this image is rated at 99.96 percent pineapple so you know it's maybe not the most actually this kind of looks sorry no no don't talk to me watch this looks pretty pineapplelike um but this is related to the uh television show psych which i've never seen at a podcast about the television show site called i know you don't know and i guess in every episode of the television show psych there is a pineapple and i built this system for the podcast to be able to rate various pilots anyway i don't know if this is worth explaining but um but um what i wanted to say is the podcast i know you don't know is coming up at the end of their second season and so one of the things i would like to do is not just have a pineapple detector which gives a percentage likelihood that there is a pineapple in the image but i would like to do object detection to find the pineapple image so if anybody is interested in helping with that project come on into the discord and get in touch um that's a that's a project maybe for next week not for today all right i think i've got to move on from all this stuff that i'm talking about and i'm so confused because it's two o'clock and i thought oh have i been streaming for an hour no i started at 1 30 so just a half an hour ah and um oh wait wait questions there were some great questions in the chat uh the member chat i should let me see if i can get this stream chat up and running if you'll give me a second here i'm going to put on my hold music yeah it seems to be working clear can any of you uh repost your question if you want it featured on the screen uh to uh the member discord that'd be a little issue that's fine okay let's see um you did spell oh oh wait no these are old comments okay um all right well let's take them so uh chris's question was does everyone get only one number so yes i believe this is correct the idea for this is if i say set um if i say set this random number so here's the thing this number 1724 is not necessarily unique because the same fivedigit sequence of numbers and i realized that's only four digits but that's because there's a leading zero in that sequence um well it appears multiple times in the book so it is not that your random number is unique but your index there are one million indices i mean are there less because if we're giving people five digit sequences can you not get do we only have 999 995 indices but for putting that aside the in the ideas are everyone have uh their own unique index and the random walk um which starts i i feel like there should be ran like a command that's like random walk me or my random walk or if you just say random walk instead of giving you a random one it gives you the one associated with your number um but this pattern is unique to this position so if i were to now say random walk one one one nine we are going to get hopefully oops i spelled it wrong random walk four one one one nine we will be getting uh the same exact that's the same exact image now the interesting question is if i say random walk four one one two zero so that's one index later than four one one nine my expectation is that this is going to look the same um um right can you see the difference i can't really see the difference but it is different the reason why it looks the same is it's using i can't remember how over i think we're using one million all like some amount of random numbers um that's divisible uh so i think it's 250 did we do a two digit number i can't remember the details we worked all this out and like chatting about this forever but it's using one one number difference so if we could zoom all the way and blow this up we would see that this pattern is like actually different but visually in the end it's going to look very similar but if i were to say random walk you know from a very different position like one two three um i'm going to get something quite different so that's important for me to mention um yeah i'm not getting the comments in this stream chat but i'm gonna i'm worried about that later i will figure that out later um okay so that was chris's question the new random walk features are on separate branch okay so then let's so if um that's really helpful so if i go back to um discord so if you have questions or ideas or comments about the uh the choo choo bot um please uh put them in the issues on discord bot choo choo now if this the code here in the main branch is the code that directly corresponds to my video tutorials but i expect that if we go here maybe it's number db that's my guess or version two dash deploy i'm not sure kobe will tell us one of these uh is you can find the code for the actual new random number stuff but we want people who are following the tutorials to be able to find the code from the tutorials here okay that was one question other things can you let me know how many rows are on a page um that's a great question i will answer that later it looks like the uh it looks like it's a hundred and hold on i can look at the first page it is 50 rows 50 rows on every page um okay um just looking that's interesting the pineapple detection system always detects a pineapple with transparently transparency okay all right now guess what it's time for that's right it's time for community contributions it's the part of today's live stream where i somehow through some arbitrary system that could always be improved pick some things that you the viewer have made and created in response or to a particular video tutorial or example that i made um i noticed in the chat someone suggested that we should have a set of community contributions for retro geocities web pages that would be a fun video or live stream for me to do um version 2 deploy according to kobe so um yeah so here's my new way of doing this um which i think we're going to work on um doing this differently over the summer but i'm going to go to the coding challenges um let's go to coding in the cabana today um which there's only five of them but let's see some community contributions from my coding in the cabana video and i haven't made one of these since last july oh i don't know it was a good idea at the time but let's let's look at some community contributions um the other way that by the way i can do this which i'll i'll do let's do cutting the gabana first so i'm going to go to discord i am going to get a rant it's using numbers and pairs of two right the reason why we are using numbers and pairs of two to make the decision of the random walk is if i only used a d a random number with a d with one digit that's zero through nine or ten options that's not divisible by four so we would not have an even distribution i suppose we could do something like modulus eight would that work and then and then modulus four but the point is uh 20 options is divisible by four so like zero zero through four five through nine 10 through 14 15 through 19. each of those correspond to up down left and right one option in the random walker so uh the random walk is i think 500 000 steps if i'm right about that okay the music is way too loud sorry about that i will correct that let's now the music is much quieter for your community contributions so let's pick a random number from the book we got the random value from the book uh the nine four six three zero which if i say that number i mean i'm gonna get zero right modulus five because there's five uh um cabana videos so we're the random number that was picked was one so we're going to go to the mar rose and there are oh there are one two three zero one two three four five six seven eight so there's eight to look at so let's do random again getting a random number from the book uh four four one zero six uh modulus eight is two but that's the third zero one two index two so insane zero one two we are doing ah i believe we looked at sam lee's contribution yesterday also um let's um let's look at uh we'll look at i'll look at a few of these more rows linked to scroll so just to remember if you haven't watched this video this is the particular pattern that i create in this video which is the more rows uh right i guess i am varying some parameters uh in the formula that are in these variables n and d and as i vary those parameters we start to see this unfolding or blossoming so to speak of the more rose flower so let's look at what sam lee would did this particular pattern more rows linked to scroll i think i've looked at this one before i mean i've looked at it personally but i think i've looked at it on the stream oh oh right this is showing us a uh like essentially like there's a text a poem in this from presumably from shakespeare romeo and juliet and as you scroll this graphic up here in the right changes some of the parameters and we see it's a very subtle thing so it's like it's kind of like a flip book while you're reading a book by the a little bit of an aside here and i might try to do this with the nature of code book i wanted to have in the margins of the entire book a little flip book animation of like a flocking system or something like that so uh this is a little bit of a digital version of that this is really particularly wonderful thank you uh sam for this excellent community contribution uh let's go look at another one um uh david snyder i feel like we've looked at some of these i'll have to let me know i have to do it randomly um let's go to the um i believe actually the bot um if i say um the if i use the the exclamation point random um it gives a random number just using the javascript math.random not from the book so uh and if i were to say uh eight it gives me a random number zero through eight with a decimal lopping that off so zero ones are these i got five so let's look at index five zero one two three four five more rows with purlin noise this is a thank you by the way for writing a note here that this has flashing images so i will happily uh give that warning to the viewers now that if you're sensitive to flashing images i haven't actually looked at this but um this may have some flashing images on it so i'm going to click over to it to see and we can see oh look at this is my mouse controlling it or am i just imagining that but it looks like this is just a different way of varying uh the pattern i think if i zoom in you can sort of see some of the sort of beauty the beautiful geometric patterns that appear thank you for sharing that um let's go look at one more more rose uh let's get uh oh zero did i look at zero alright i looked at zero already no i didn't i can't remember zero was what i picked um oh i think i forgot to eat lunch today people i'm sorry i had very big breakfast this kind of brunchish meal i'm like getting a little it was friday it's been a long week it's been a long year uh let's look at the morrow rose with ui um and here we go ah awesome so one of the things that's a little bit of an issue here is that the way i have my high contrast mode makes it hard to see let's go back i think i can fix that youtube compression did not like that i was uh just told all right so we can see here up let's take a look at this this looks like what we've got here are um different uh a little nice little menu here so i can choose different things like i can draw the rose pattern which is all the little interconnected vertices or just the outline of that rose pattern um i can we can select loop drawing which will uh kind of show it accumulating over time then loop n d which is what uh or and which is what i kind of did in my um version but what i'm curious to see here is these are like different colors that i can pick that's kind of fun and what i love about this is now i can play with different values of n and d so let's go to the um wikipedia page for the more rows pattern what i would like to do here is just look at like so n is 7 and d is 29 let's make sure this is working correctly by putting in seven and we can see here that this is quite distinctly although with a slightly different rotation it's flipped you know p5 y value points down as in a traditional cartesian plane the y value points up so that's probably the reason for it being flipped there but we can see and so we can uh what's kind of fun is i can kind of go through different numbers and try different um uh possibilities and then we can sort of see it animate which is always fun so thank you this is a wonderful uh demonstration of how you can create a user interface to be able to explore a particular generative algorithm okay ah all right everyone it is 2 15 my plan these days i try to max out at a two hour live stream so i'm gonna take a break in about 10 or 15 minutes i'm going to see if i can find like a granola bar in my household somewhere give myself a little sustenance uh thank you to all of the folks who are saying things like um i you know that that you love the videos and you've learned a lot from the tutorials zach writes i would have failed in my class i doubt that i seriously doubt that if i helped in some way it was only to bring out what was already there so uh but thank you for that nice comment uh some people are commenting on the um length of the beard um i've been trying the the barber shop that i used to go to closed during covid and never reopened which was very sad to me um so i'm kind of like not sure where to go um but i'm gonna find a new one anybody got any brooklyn barbershop recommendations i will take them in the chat all right um what is coming up what is next what do i want to do i think maybe in fred wilderness i forgot that i used to call myself i was looking by the way let's let's just i'm just going to show you something insane uh coding train at home i called it this was about one year ago i was some reason one of these came up um which is a later one march 28th april 3rd let's look at this one um let's see if i can find this was a fundraiser see if i can find myself just in like large format here was this the one there was one of these i have like oh no i have like a haircut on this one trimmed beard one of these like i i saw myself and i was like oh my goodness where what is that beard maybe it was the fall okay i got i got uh sidetracked this probably would be a good time for me to take a break but i'm trying to think oh yes let's do the live poll let's check on the live poll i'll take a break come back and do bezier curves good plan good plan everybody thanks for that suggestion brain um okay give me a second here me yeah okay yes all right this is thank you i got a huge shout out to many different people but in particular uh foxy on github has done an incredible amount of work on this live poll system since my last live stream this is a web application built with node um it uses um something called any db to save information and basically um you you can go to this url but i don't think you will have access to this create a new poll so for example as a test if i create a poll and so like which function should i start with and i can say copy or bezier and i can click create so now i have this poll now this is a link you could actually go to to vote untested i have actually not tested this and every time i come to do this in a live stream it doesn't work so that's probably what's going to happen today but i think even better i think if you just go to i forgot all the routes and i know they are documented in the readme i think if i just go to newest it's going to show me this particular poll overlay mode is making it transparent um and so and then i don't know how to get the voting link to you um i think what i'll do is i'll post it into whoops um i'll post it into uh discord so uh and then somebody can take this and bring it over to the chat i'm gonna go to this links channel this is the channel i use while i'm live streaming to share links to things so if i post this oh incredible fox incredible fox in the chat in the house thank you incredible fox for all this tremendous work uh and you can also answer my questions that i'm not sure what to do all right so now i think if i go here you know um let's go to this vote view i personally think it makes sense to start with the bezier function so i'm going to click vote we'll see if it takes my vote and we can see the votes are there this is promising now the point of me doing this is i am going to go to uh the overlay here uh which should be here yeah okay uh oh timeout uh i think i need to refresh this did we crash it already how do i force a refresh refresh browser when scene becomes active okay there we go um but the view that i want is actually not this one i want the overlay one and i forgot what that is we talked about this um and um let's see where is it in the readme perhaps um newest q oh there's a qr code oh my goodness i forgot about that forgot about that view so one thing i should definitely show you is also if i just go to qr code this is actually uh you could scan this and it will take you to the latest poll um but there was a view we talked about in and i can't remember what it is now um i wonder if just looking at it for it in the code would be helpful or in our pull request discussion um does any do you remember what the sort of default for the overlay view is is it just like do i just say there's like a query string i can do i can't remember incredible fox do you remember let's oops see what's happening here um pole id compact equal true can i do that with newest let's hopefully i can do that with newest because i don't have the poll id over here uh so let's let me go to properties newest question mark compact equals true and then i can hit okay let's see if that works um i don't think that worked but that's fine um i could probably get the the uh wait uh did i i linked it over here in links so i can get it uh pull pull id so i can do this so let's add that to the newest as a new feature but i'm going to paste this in here pull and then what do i need to do is compact equals true let's see if this works there we go and it is transparent which means now i can put it in front of the camera look at this look at that awesome so now i can go and shrink it this has been my dream my dream is coming true here is the poll i am behind it it is live and real time happening i can also now i should be able there's no reason why i shouldn't be able to switch over to here and also add browser add existing this one and also have that here i mean i don't it's not as i mean i could also just bring it up i have a whole computer to bring it up but um and maybe this one i actually want it to have some background but the point is i can come here and i've got it going live now six there are 67 percent of you have voted for bezier i 103 votes there are occurred according to my uh youtube uh panel here there are 300 people with this browser page open so let's see if we can get some more votes going the camera was defocusing probably because i did this and i have it on autofocus and it's one of these sony mirrorless cameras that has a feature where it looks for your face and focuses on it i do feel like i'm kind of dark let me go check the camera settings oh yeah wow super dark i mean i could turn up my lights but i just adjusted i got the sun was out earlier and that's now i feel like i'm way too bright let me adjust my lights uh this is very important that i do this while i'm live streaming i'm gonna take a break in a minute and come back and do the bezier curve now that we have this life so this is great i can always the amazing thing is if i want to put up a new poll watch this i could just uh uh let's let's so let's consider this poll done what is something uh um um what's uh what's something i could do now well i could just put up a pole this is great i can always put up a pole and i could always have it um um uh here oh um ah no ah come on i think i should line it up with the top here and it could have more than two options so okay all right everyone um so i think what i would like to do is take a break um and come back and uh i think the results of this poll uh we'll we'll be looking at the bezier function um in uh p5.js so hold on just getting myself a little bit set up here um um no there we go all right so uh before i take my break i would like to thank today's sponsor and i have my list of recommendations up here already oh the poll is there okay hold on let's let's take two take two everybody uh take two before i take my break i would like to thank today's sponsor and today's sponsor is curiosity stream and i'm going to play a short video from curiosity stream it's about 30 seconds from the founder of discovery channel comes a new independent streaming service curiosity stream home of groundbreaking documentaries and awardwinning original series follow your curiosity this is curiosity stream so um curiosity stream and if you go to uh curiosity stream slash coding train you will see that the discount is 41 off annual plans and complementary access to nebula so what is nebula first of all so i've talked about this before i'm part of a group of educational creators that teamed up to build a platform where creators don't have to worry about demonetization or the youtube algorithm it's called nebula and we're partnering with curiosity stream nebula has adfree content and experiments with different kinds of content so let me just show you the nebula website watch nebula you can see that i don't know about you but basically all of the youtube channels that i enjoy are kind of all um uh here on this uh so many like amazing channels so one thing is like just as a for sort of discovery engine if you want to find content that you probably would like if you like the coding train i think you will find a lot of that um here on nebula um you know there's just so many things to highlight here there's also a bunch of nebula originals so tom scott has a nebula original called money and so what does this have to do with curiosity stream nebula you can get on your own it's a streaming service it has apps and for tv and all of that stuff but you can actually get nebula for free this is not like a trial or anything you get it for the entire time that you have it if you sign up for curiosity stream and i realize i'm blocking the uh note here about the 41 off um so um curiosity stream loves educational creators and supporting more edu content so if you sign up with you i got to sign up with that coding train link um not only do you get access to curiosity stream but you will also get nebula for free as long as you're a curiosity stream member so this is right now only this weekend so only like today through this weekend it's 41 off that's less than 12 like 11.79 that's like one dollar a month for a both curiosity stream and nebula um so there's so much what i wanted to do is i was like making a list of like things that i have like really enjoyed on curiosity stream um let's these are a whole bunch of them uh calculating ada the countess of computing i've talked about dr hannah frye who's the host of a bunch of these videos um the kingdom how fungi made our world is a really really cool documentary you know there's a lot of really excellent nature ones secret lives of big cats owls but i wanted to pull up um nature's mathematics um like there's just so much that's um really connected to the work that i do on the coding train um i don't think the audio is coming through for this which is something that i could enable but you can see um this is a wonderful series about the beauty of fractal patterns uh as found in nature so it's just the perfect complement to the coding tutorials and i get a lot of inspiration from um watching this so um i really really um recommend it and um it's a great it's a great way it's also like it's a wonderful way to um support my channel um and educational content as a whole uh again it's twelve dollars like one dollar a month uh which is really insane uh for the whole year so if you go to that link curiosity.com codingtrain um uh you will find that discount and unlock all that there is on curiositystream and watch nebula okay um i i'm going to leave that up i'm going to uh come back over here we see the poll is still going i'm going to take a fiveminute break find myself a granola bar get in a couple minutes enjoy eating it while i watch a couple minutes of nature's mathematics uh and um uh come back and explore bezier curves and try to make some uh an interesting uh example in p5.js and uh yeah so you know um um see you in just a few within five minutes okay uh put on this music and i'll be back do so do do do just one more minute we'll be starting all right i'm back that was a quick break oh look my my camera is in a weird spot like there we go hi everybody oh it is by the way um where i sit here in the attic there is a small window over there directly where i'm pointing and i can see um you know i'm in a a small building here in brooklyn and the attic is just like slightly above the buildings next to me um and i can i could see the trees and i could see the sky and it was like there is a terrifying looking storm cloud approaching and i don't know that i've recently uh ever live streamed from here with a storm going on so i wonder if it hits if you'll be able to hear the rain and the wind and it gets very exciting sometimes up here in the attic when there's a big storm going on so we'll see if that happens sometime in the next 40 minutes i am going to try to give myself a hard cut off at 3 30 p.m which is about 50 minutes from now um this is i've been looking forward to this weekend for a long time because it's been an incredibly busy uncomplicated uh you know last few months um but um and i've got a lot of stuff going on in june and a lot of plans for coding train a lot of stuff still to catch up on that i didn't finish in may but i do feel like this weekend with the end of the nyu semester um with it being it's a holiday here in the states on monday um it's going to be great so uh i'm i'm thrilled to be here with you i'm excited to look at bezier curves and then 3 30 begins the weekend um and nicole is saying i'm just getting the storm toronto just got i don't think that's like doesn't it go the other way are you in toronto that's a great uh i love toronto um i had such a wonderful time there a bunch of years back maybe i should go on about that right now let me come back over here thank you again to curiositystream for sponsoring today's live stream um and i am going to go to the browser and look at this what's here two sketches created by simon tiger so let me look really quickly at these two sketches uh i want to look i want today what i want to do in the next 45 minutes or so is understand more about the bezier function in p5.js look at some examples of like simon's here that use the bezier function and then also try to make my own example for it and come up with some ideas for what i might do in a video tutorial about it wow it's storming all over the world as i'm seeing by the chat so let me get um some of my links open that i want i want to get programming design systems custom shapes open so and i want to have the p5 web editor open and i'm going to put it back to high contrast mode so let's start here this is uh somewhat of a community contribution um which is so let's look at simon's bezier curve functions here so what does this do uh it looks like i can move these things around uh add point uh and then i can use this slide oh whoa this is kind of amazing to me i see add point remove point oh i see oh look at this so this is a this is a pretty advanced level use of the bezier function but we can see the the point is i think what we can start to gather from this is that there is a curve that is drawn that's the white line here and then there are all these other points that somehow define and control how that curve is being drawn so and this is a really fun demonstration of being able to do that so thank you simon for sharing this let's go look at simon's next one this is bezier editor oh my goodness whoa um so now this is more like what i'm used to seeing uh and the fact that there are four points here is really key um if you are somebody who has worked perhaps in a a program like adobe illustrator or name your other nonadobe related product um you've probably designed uh elements in a some kind of graphics context with this kind of drag and drop like mechanism and we can see mirrored there's different control mechanisms closed which is closing it control spacing is doing something export so this is great this is great to see so this is ultimately in many ways where i would like to get to i wonder if as part of the tutorial making a demonstration like this perhaps a little bit less sophisticated a more basic version of what simon has made here could actually work quite well so maybe i will explore that so let's do a bit of a dramatic reading here i like to plug um and roone matson's wonderful book online book programming design systems there's a lot to say about it but the main thing to uh understand here is that if you have you know you if you're not new to p5 you're probably familiar with the way that you might draw a triangle in a canvas so typically the way that you might draw a triangle in the canvas is by setting three points i made up some points there and we can see look i drew this triangle by three points here's an x y one hundred one hundred here's an x y two hundred one hundred here's an x y one hundred fifty three hundred that makes up a triangle and i'm calling the triangle function the same is true for line ellipse circle square rectangle these are uh kind of what are they they're the the default shapes they're the shapes with width to which functions exist to draw those shapes but if you ever wanted to draw a shape that wasn't a rectangle or a triangle or a line you know with two vertices or three or four you can instead use the begin shape at n shape function and what begin shape and n shape do is they allow you to say i'm going to start a shape i'm going to define a set of vertices and then finish that shape and whoops the result is ultimately the same but there's i don't think i can edit this code but there's a lot more possibilities look how cool this is though that i can drag and drop this and it updates the code that's a really nice feature of this book so these are nice examples right of different shapes oh and there it clicked me over to a github page that we can see all right now the question is do i want to approach the bezier curve through the um methodology of using begin shape and end shape or just with the bezier function oh guess what let's see i just like i like this idea of like spontaneous live polls so um just since we've got that going here um let's see if this can i want to see like what how quickly can i make a quick live poll that will be an overlay not very quick apparently because of how slow glitches um and i'm just curious if i go to here yeah yeah yeah oh come on glitch why do you why do you forsake me so let's go to the p5 reference i'm going to give up and so let's look for bezier so the thing about a bezier curve right like the weird thing i did one of the things and this is a criticism that i've heard about some of the the sort of like processing style api is that just looking at this it's kind of hard to know what these numbers do like i mean i the documentation tells you and i'm so used to doing this it comes somewhat automatically to me but i can see like what are all these different numbers x y x y x y the three x y vertices of a triangle the bezier curve is like quite like overwhelming until the bezier function is quite overwhelming to look at because it's one two three four five six seven eight numbers so we can guess if we're used to using p5 which we are and i'll keep saying we which i am at least that these are um four what did i say eight numbers four x y points and based on simon's demonstration um we saw that there looked like there were these four points associated with the curve and this is true let's keep looking here so first this is nice to look at a little history here the bezier curve algorithm was popularized by pierre bezier in the 1960s as a solution to a common problem in computational geometry drawing curved lines that can scale to any size interesting the bezier curve algorithm solves this problem in a very elegant way by introducing the idea of control points invisible gravity points that attract the line to bend into a curve a bezier a bezier curve with a single control point is called a quadratic bezier while a bezier curve with two control points is called a cubic bezier so this is so a bezier curve so this is a quadratic one there are two endpoints endpoint endpoint and one control point and as i don't think i can drag it here you can see how that control point is causing the curve to curve up and down here there are two two endpoints and two control points and uh i see this is now allowing us to create a more complex shape with multiple vertices the yikes i think what i would like to do um is it takes a bit of practice to to to to use the bezier functions and knowing how many beziers you need to draw a specific shape can be hard in the beginning it does not help that the control points are invisible so it can be helpful to spend some time playing around with the example above before diving into the code so i wonder if i could as an exercise without looking at one of these see if i can recreate one of these shapes without looking at the code i think though as my first example the way that i would like to demonstrate and i guess i can go from here bezier demonstration and if anybody wants to follow along i will post a link to this sketch right here in the links channel in discord but what i'm going to do is um and i think i'm going to do the bet do the points in a bezier curve do they typically um do they have names i think of those endpoints and control points i'm going to say um x1 y1 x2 y2 control x1 control x control y1 i don't know if this is i maybe i should use the vectors control x2 control y2 so let me use all of these and let's draw let's say that let me give them some initial points x2 y2 and let's say 300 200. so stroke 255 and um let's make this fun let's make it a little bit bigger give myself a little bit less space here a little bit more space here turn on auto refresh background 0 stroke weight 4 line x1 y1 to x2 y2 let's just start with this so this oh there's something by the way in my monitor over here that's really distracting me so i'm going to ah there i fixed that all right so here's some basic code to draw a line between two points now what i would like to do is set the control points so i'm calling that cx1 so let's just make one of the control points um 150 a 150 and then i want to draw a point at y cx1cy1 okay so what i'm doing is i'm sort of building the elements here and i should maybe draw all of them um x1 y1 and we can think about color and all of that but i just want to be able to visualize everything um let's make it a little quite a bit bigger okay and then i also want to have another control point cx2cy2 and let's initialize it to somewhere let's say uh 250 250 okay so this looks like um this looks like uh all of the pieces that i need and in a way maybe this line isn't even so relevant so i've got two end points and two control points of course you know this these could be endpoints and these could be control points it doesn't really it's all arbitrary but i'm trying to start with something that i know or have a sense of how it will ultimately look so if i were to call the bezier function and set first an endpoint then a control point then oops then another control point and then the last the last endpoint and i want to say interesting that it fills it there we go and what if i were to just for right now say cx1 equals mousex like if mouse is pressed if i press the mouse i can control one of the control points so there we go now i think in the demonstration um i and i see that wave is making a point will i go into the actual algorithm not just the prebuilt function that is a really i would love to do that i don't know if that's that's not necessarily my intention for the shorter video that i intend to make well that would certainly be something to explore here to understand it further but let me also i'm just trying to figure out how to annotate all the pieces of this let me say stroke weight one and draw a line from x1 y1 to the first control point i just want to basically recreate the default diagram that i'm always seeing which i think looks like this and then as i move this around you can sort of see how it is the control point for this part of the curve now obviously i would want to do something more sophisticated where i pick um different where i'm able to have maybe each of these points be an object that i could click on and move it around if i really wanted to build a tool to be able to drag and drag around and make my own custom bezier curve but that's not really particularly where i'm going with this i just want to understand the bezier function any questions that about what i've done so far i'm going to look at the chat um can you guys hear those birds singing the storm has not arrived yet i was gonna go for a jog today wonderful time to do that before it rains um okay so the next thing that i'm going to save this um and i'm going to duplicate it because what i would like to understand now is how to do and zachary macarthur saying the algorithm is far less complex than most of what you've done in the past all right i'll try to take a look at that in a little bit i mean i had my trajectory here that i'm thinking is i wanted to just understand how the bezier function itself works now i want to get to the point where i can use this same function the same functionality but with begin shape and shape and quadratic vertex bezier vertex etc people are interested in the algorithm so i i um oh the chair is making a squeaking sound yeah this is like a by the way i i hate that i'm sitting right now and my intention if it works out for me to i have a new spot where i'm gonna live stream from is to be standing um so sorry about the chair sounds um um what i was hoping to do was actually take the bezier function and look at it in the context of something like the selfavoiding random walk and visualize it differently but let me let me get one step further with this and i'll maybe i'll look at the algorithm as well which is that what i want to do is say begin shape and shape now what happens if i say vertex x1 y1 vertex x2 y2 and let's just make this a different color i want to figure out how to get this orange line to follow this exact path is it as simple as saying bezier vertex and then just giving it four um no what is it telling me here vertex must be used once okay so is that the control point when i say bezier vertex interesting is this how it works no actually no okay let's look it up so let's see what does it say in runes vertex oh bessie vero let's look at the draw more sophisticated curves let's look at bezier vertex reference page um alright so how does this work oh control point control point anchor point that's interesting so you give it a vertex which is so it's like it's almost like you chop off looks like the way that it works is you take this out and put that in as the vertex and then the bezel vertex is all the rest of it ah interesting so then if i wanted to keep going like i could make this another vertex and then i could continue on with two more control points to the next point that's interesting okay so i never never occurred to me to do this the quadratic vertex would just be is that just one then the quadratic vertex is one control point and then the next point ah fascinating totally makes sense okay i can't believe how long i've been doing this and i never really like bothered to check how this really works um fascinating okay so now i understand this um an easy thing to make it fun would be to animate a few beziers in a particle system and let them draw yeah you can keep going without without adding more regular vertices i uh okay can i like oh yeah look at that oh ah okay so what i kind of wanted to do is the following i'll show you so i'm gonna go to just sort of see how this works so this is my selfavoiding walk uh example and let's make the spacing like 50 just to all right so this is an example that i'm working with which is a selfavoiding walk and i've talked incessantly about this there's a edited coding challenge video it's about 40 minutes long where i code through this entire thing soon to be published i'm going to duplicate this and say with bezier because what i was curious to do here is you'll notice here that i have begin shape and shape vertex so what would it mean for me to start using bezier vertices to draw this path and i did this by the way there is something called curve vertex which you can see just kind of makes it a little curvy but i think we could get even further with this with a bezier vertex so i think the way for me to do this i need to have access to an index encounter i equals zero i is less than path dot length and then i plus plus and let spot equals path index i so this is the same but now i could say let control 1 equal path i plus 1 control 2 equal path i plus 2 and then anchor equal i plus three then i'll want to skip ahead like i want to use four points at once although can i just do if i can keep going i can just say ah wait wait wait i can start at 1 i can say vertex path index 0.x path index 0 dot y ah yeah yeah yeah and then the um this is i plus zero i plus one i plus two then i could say bezier vertex control one dot x control one dot y control two dot x control two dot y anchor dot x anchor dot y um can't read and then this has to be path dot length minus two okay but i also want to go up by three each time or by two i mean is this what i meant to do i'm not entirely sure does this make sense so i'm using three points and going up by three yeah so hold on let's um let's give myself a lot more space to work with here now unfortunately um the particular algorithm that i'm using it gets stuck quite easily and takes quite a while to get past being stuck and then i think i can also i think actually for the sake of argument i should um also it might be interesting just to try quadratic vertex but um i should also say here vertex like path uh index path dot length like i should do the last one also and let's give myself a lot more space see what happened i always like to do this when i've got something let's go here and see this is pretty interesting could be nice on the 3d version of this random walk bezier curves i quite like how this looks i mean it really looks like i'm making some kind of strange map terrain coastline like thing i think what i would also like to do just to because i have such a large space to work with is put this back in which um will like look for a lot more spots all at once let's see if i can save this come on i wanted to get yeah it gets super stuck so fast i wonder i want to have it start in the middle actually um which i think would be more effective also um and and maybe actually watching it is more fun than anything else sorry i'm like obsessively tweaking this now uh so floor columns divided by two uh floor rows this will have it start in the middle let's go to oh so small what if i um let's go back to like uh 10 just because that's really small and then see what we get what do we think folks oh let it jump if it gets stuck that's interesting we've we've got a little lucky start where it's not getting stuck too badly it's finding lot it's got lots of open space it's finding other ways to go looks like norway so true if you make it fill oh whoa okay um let's try having it fill um yeah it doesn't fill in the way that i want it to in that um but that's pretty nice like i kind of don't love this oh i guess i could do um clothes will that make it look you know that's kind of whacky it kind of look an interesting yeah it's really satisfying when it finds its way out of a corner unfortunately it's not continuing to go and now it's going to be stuck for quite a while now but i do rather love this shape that it created i think we've made something away so what the question i have is what can i apply this to that is i don't know that in the video like demonstrating this makes sense purlin noise um yes stig there's a family family you don't need to watch the coding train i'm just responding to stiggs messages in the chat about uh uh celebrating um his wife's birthday okay um all right i'm trying to think of where i want to go with this next can you make it go in both directions interesting it's europe can you make it go in both directions i don't know what that means well one thing that is interesting to try here i have an idea i have a unique idea it's not unique i i explored this before uh where is my code let's give it uh more direct more opportunity to go in different directions ah so let's give it that it can go also to negative 1 negative 1 and to negative 1 uh 1 negative 1. so it can go in all the diagonal directions as well or 1 comma 1 or one common negative one so now it will get stuck much less this will ultimately allow it to i believe cross yeah so it's not really going to get stuck as much doing this because it's got so many more ways it could go from each point both directions means grow at each end i got negative 1 1 twice negative 1 negative 1 1 negative 1. oh whoops thank you that's going to make a big difference all right let's see what we get here i feel like the fill might be oh i'm really liking this now i don't know how i feel about this giant line that's like continuing to draw it and the fill so i think i want to go back to um have getting rid of that close and getting rid of the fill and let's make it just a little bit whoa oh actually i kind of like that i mean i'm gonna like this so much when it's done but um let me put no fill back and then let me also make it a little thicker yeah this is kind of what i would now it's kind of doing what i imagined random coastline generator certainly is quite like that you know one thing that would be interesting would be to require it to do the all of the nondiagonal choices before it's allowed to do a diagonal um thanks to all of you who are watching so late into the night people are posting that they need to drop off and go to sleep so is it still a selfavoiding walk not really i would say i mean i think this is up for debate if only uh okay uh is it still a selfavoiding walk yes no i don't no create all right folks uh here's your new poll to vote on and uh now if we look at the results um and i go back where where where were we here is this still a selfavoiding walk now the issue is i have to get the poll id um so give me a second here i have a new poll id that's why i latest oh shoot oh life is hard uh here we go let's see if this will load oh oh yep there we go okay we've got the live poll going oh this is fun i love seeing it going live uh [Laughter] i really should have i guess i should put this overlay back on top of hold on back to here and then we can get it back where is it where is it here it is and i can uh oh i um unlock it and put it here okay is it still a selfavoiding walk that's the question get a little small i'm obsessively like there we go can you see that oh it's definitely stuck easy fix is also just to let it start in a new random position when it got stuck for long enough oh incredible fox has already fixed the newest thing [Laughter] uh amazing that's amazing so now i really can spit up polls instantly uh that's great i i uh since i'm only have 15 minutes left i'll i'll merge and fix that for next time um so i think the votes are in pretty definitively that uh no so far okay um what do i want to do here let's i've got 15 minutes left it might deepen my knowledge for me to see if i can implement the bezier curve mathematics whoa i want to look for um like just a really quick reference uh i don't know what did you use simon oh let's try this um given two given two distinct points p0 and p1 a linear bezier curve is simply a straight line between those two points the curve is given that's linear interpolation okay quadratic so maybe i should try quadratic first recursive definition explicit definition polynomial form am i going down a crazy uh rabbit hole i don't know uh um simon is saying uh important detail for beziers if you want to look smooth which is what they're for the control points must be aligned and any anchor point and two control points must form a line got it that's interesting so i'm certainly not doing that in this crazy demonstration and you can see there are lots of jagged parts although that quality is something that i quite enjoy about this particular pattern i think i can remove that right now so i'm just trying to decide how to best use i mean i think the particle system was a good example of possibly a way to demonstrate a bezier curve in a sort of like interesting arbitrary visual way i would like to explore the math but i'm a little bit afraid of that like trying to read this and implement it live so if i can ask for all of your help that would certainly be welcome animation of a linear bezier curve okay so let's let's see if we can figure this out now there's a helicopter now flying around above me all right let's let's do a little bit of this for like 10 minutes see how far i get to understand a bit more about how the bezier curve actually works so let's go back to this particular example let me duplicate this and let me see if i can recreate exactly this without this so i imagine what i need to do is have some iterative process where i say x equals lerp between cx well x1 and x2 by some amount y is lerp between y1 and y2 by some amount and let's call this let's call this amount it might be a better name for it and then i'm just saying vertex xy begin shape and shape so what did i do so far what i did so far is i figured out a way this is like um what i i did very quickly just this the beginning of this which is essentially like a linear bezier curve in other words a straight line between the two points i'm basically looking for a t so it's called t here oops i'm going to close these other sketches this is called t in right and i'm using the lerp function the question is maybe what i should do is not use t because not use lerp because i want to follow the formulas on this page and if i don't use lerp maybe it'll allow me to get there a little bit more quickly so if i go back to here and i say um just trying to fit everything onto my screen here which is very hard to do um right what am i uh so so if i'm saying uh what's the equivalent here i'm saying x equals x one and i guess i should call these x zero just to be consistent i'm not using the control points yet so um x equals x zero plus t times x1 minus minus x0 which is the same as that okay is that right and then y is y zero so and then these are sorry uh x0 x1 whoops this is one i can't get this right okay so that's good right uh what did i get wrong here oh c x x y x y x y x y what did i do wrong x2 on line 136. there's no line 136 oh here all right i don't need these lines right now there we go okay so i'm not using lerp it's just a percent t is a percentage of the way between this point and this point and i'm drawing all those as vertices okay okay uh a segment is a one degree bezier curve start there um all right so let's see if you look more closely at simon's telling me i i can find out in um uh his sketch which is great uh thank you all right so now quadratic bezier now i have a p one okay do i add a formula for this uh okay which one do i look at this one here there's just different ways to write it okay so now if we say um so ultimately this is actually i'm gonna i'm gonna follow its name nomenclature here this is actually x1 y1 this is now x2 y2 if for p and i honestly like i would like to do it this way p0 equals create vector 100 200 this is going to really help me out uh p1 equals create vector oh and i can't do create vector up here let's just do all this and draw uh p1 and then p2 equals create vector x 300 200. so i'm really following um and then i'm going to say this is p0.x uh p two two dot x p zero dot x p zero dot y p two dot y p zero dot x did i get it and then p 0 dot x p 0 dot y 1 2 one two p zero what did i mess up here oh this is y there we go you all with me so i've got p0 p1 p2 and the idea is that basically i'm extending this uh you know with the linear there is no control point to sort of suck all of those internal points away almost like a magnet from the linear path it's basically creating a quadratic path and so in addition there's like the um one minus t squared so let's look at i don't know that it matters which one of these that i pick um so let's let's use this one so if i can once again here now i should be able to do it make a quadratic one which is let x equals p1 dot x plus 1 minus t times 1 minus t times p0 dot x minus p1 dot x plus t times t times p2 dot x minus one dot x did i get that right and then if i do that with y uh no phil i think i've got this now let me say p1.x equals mousex i think i'm just going to do the quadratic so if i click the mouse so this is now not actually using um p5 bezier vertices uh and um mr phd is telling me that's a good point i could consolidate this by uh saying same right you could do this there's probably a less awkward way i could write this out but what i like about this is a couple things one is i've got total control over this right now so look at this if i do this we can sort of see and i guess i'm missing if it's not divisible it's funny how i'm not getting the last point i think i should do less than or equal to yeah so you can see here like like here it is this line segments i'm getting the curvature if i do 0.5 like really it's just doing that like the curvature is related to how uh frequently i got the other thing i like about this is i can draw a line from p0 dot x p0 dot y to x y no no no uh that's not what i want to do x y to root to 1. now there's just so many of them so this needs to be stroke weight one uh oh so um i'm doing i forgot but you know sometimes i just forget that i'm live streaming can't see the code i've kind of really made a mess of this but um um one minus t oh this will help thank you this makes it a little nicer looking what i want to do i need to do this twice let me do this twice i'll show you what i in a second you're going to see what i'm trying to demonstrate um i want to demonstrate um i basically want to show oops i lost the wikipedia page here it is i want you to see this kind of cool pattern oh it's doing it slightly differently i'm gonna figure out how it's doing that but hold on a sec i realize i misread that um p p one dot x p one dot y and um if i segment this out yeah i was kind of so what is it actually doing then oops it's drawing oh it's drawing the lines across these like the tangents it's just the lerp amount oh okay wait so what i'm actually doing is saying i'm doing the linear thing it's doing the linear thing between p0 and p1 whoops and then it's doing it's kind of crazy what i'm doing and then the same lerping between p p2 and p1 uh no the other way around there we go this is what i was trying to do there i got it i wanted to see that mesh i wanted to see this mesh i like how they colored it and um i'm at my time here i like how they colored it which is it's a little silly what i'm doing here but i'm just really fascinated to try to recreate this exact thing looks like it's just a sort of mapping a hue of a rainbow of colors so let's try that um and also i think i just want to be able to see this a bit more so hold on a sec it's also driving me crazy that as i move that point it gets reset whoops so really what i'm doing is saying let p0 p1 and p2 then initialize them all in setup also let's um let's give myself i kind of want in a weird sort of way i want to give myself more vertical space and change just so i have space for the code um let's just make this 600 and so i want the points to be 200 100 200 300. um and then i have this and then this should be like 500 and then i'm able to move this this point okay so let's um oh you hear the wind you can't hear that can you uh let's move these up even more okay so now all right i've got my quadratic um curve that i am manipulating with this little nice crisscross grid thing in a crazy sort of way now i almost don't want to draw this anymore like this is showing this is just demonstrating how you get that curve and if i go back to like this right we get that moire pattern effect did i pronounce that correctly but i also can't see it so let's oh it's raining all right uh what happened to the line uh what happened to my two lines i need to draw those lines p zero dot x p zero dot y p one dot x p one dot y okay we don't need that and then also p2 okay this is pretty cool all right now what i want to do next let's drive me crazy like i just need more i need more space now this code can sneak over here i can do this great all right so next i just want to try getting the color um hsb time hsb time yes it is hsb time now um color mode hsb and i can say stroke t times 360 uh 255 255. there we go we have our colors they're red on both ends and there we go so here's an uh so clearly what i should be doing is moving like p1 with purl and noise so i should be moving all the points uh but let's just try p1 p1 equals noise uh let t one let t two or no uh x off no i don't know what to say x off one uh i've got all these t's t1 and uh t2 and um t1 equals random 1000 t2 equals random 1000 noise t1 times width uh noise t2 times height t1 plus equals 0.1 t2 let's make the much less there we go i don't know what i made the fixed points are uh should be i think also now like zero zero and width height i'm not sure what i've created but it is kind of interesting i think i i have to i really need to stop but i need p1 and p2 p0 and p2 to move so i'm going to do this uh p0 dot so i'm going to say um let y speed let x speed p0 p0 p0.x plus equals xspeed okay then oh maybe i should just use like a sine wave uh p0.x equals map sine of t one negative one negative one to one zero to width and then what if i do p 2 x but use cosine don't know i don't know what i'm doing very strange oh they need to move up and down in the y uh they're moving into like a circle uh what if i give them well now we're moving along a diagonal no did i have it right before there we go this is kind of looking for i don't know what i'm doing oh yeah it should definitely uh make it sound reactive this is very strange keep the end points fixed and oscillate the control point so uh thank you everybody i think this is the end of today's live stream um we've made a few different sketches i can't remember if i posted this one into discord um i don't have a good mechanism right now for people to share variations off of what they make off of these like sort of more um uh uh kind of improvisational um live streams but i would love for you i guess you can if you join the discord or share with me at shiffman on twitter um that's a great way to share this stuff i don't know that i really settled on what i want to do for the bezier function tutorial but i definitely have a better understanding of how it works the thing that i didn't do um which is uh is i just did the um i implemented this quadratic bezier curve math and i got something you know somewhat like this so what i would uh certainly recommend and it wouldn't be it's not too much more work is i just need one more point and then it's 1 minus t to the third power oh but i'm going to leave that as an exercise so viewers watching i would encourage you to take my code which implements this particular this is it right here i'm going to take this out this is quadratic bezier can you um can you um uh uh add one more control point for cubic and the reference that you want for that is right here can i link directly to cubic i guess i just need to get to like where is it cubic yeah okay so uh please do this and see what you get so it's the same sketch take the code see if you can complete this exercise this is a homework assignment for those of you watching it's due on monday and you turn in your homework by tweeting at me at shiffman on twitter or um uh you can also i'm just to go into the discord here the channel would be um i guess you could use this share channel here i'll try to keep my eye on that um this weekend i would love to see your take your version of that um okay so um thanks everybody um that's it for today i've accomplished some goals uh i don't i don't know what i'm going with this i would love your thoughts and suggestions about what i might actually do in the tutorial itself but i think actually this helps clarify for me i think i just want to define the bezier curve show how to make a continuous shape with it and then do something where i move the points around algorithmically can you do b splines in the next session maybe that's definitely a possibility um by the way any notion users out there a notion recently released an api and i have an opportunity perhaps to um um to do some videos about it yeah i was thinking of trying to use this as a basic like data store um so i'm interested in pursuing this if this interests you i would love to hear about it i'm a little bit over time but i did okay am i going to be able to get a jog in or is the rain too much we will find out that's the question i've enjoyed doing two live streams in a row speaking of notion and nebula thomas frank um on youtube uh is also part of notion um thomas frank has a lot of subscribers um and so i believe he has a notion tutorials and templates so i was talking with um i hope it's not thomas messaging with him about doing something with the the notion api nebula has a channel that's interesting oh yeah this is one of the originals it's a thing called working titles where it's a bunch of videos about um different title sequences and different shows um thomas attractor what is a thomas attractor oh what what i haven't done this one hold on hold hold pause hold stop the presses this is it that looks simple enough oh i want to do this oh i want to do this not today by the way my middle name is thomas and i was talking about thomas frank oh my god uh it's all coming together oh i'm not signed in somebody file an issue for the thomas attractor here so unfortunately there won't be a live stream tomorrow uh we're gonna have it hopefully a nice family weekend i do plan i do hope to live stream once per week over the summer there's a bit of a tradeoff um you know if i if i really wanted to um you know um i mean i shouldn't i shouldn't ask this audience because you're all the you're the audience that's watching the live stream but the more i live stream the less i'm able to get the uh sort of like sequence tutorials and coding challenge videos out um our stark says go for a jog get some food and we'll see you back here at 6. i wish i i if i were 20 years younger i'd probably just be live streaming all day but oh and look wow this is wild what my shirt is doing that's really cool but please say to join the discord let's connect there let's share all the wonderful things we're making you should live stream your sessions maybe i can tune in all of that stuff uh there's eight seconds left thank you so much for being here with me today this was an episode of the coding train i'll be back next week stay tuned subscribe and all that stuff thank you to um curiositystream qrstream.comcodingtrain uh for being a sponsor of today's live stream and i'll see you next time as always i always forget that this stop this stop it stop this stop i'm gonna do this stop this stop i'm gonna do this this stop this stop this stop i'm gonna do this stop stop i this dot song never forget this dot somebody composed that song for me i'm going to say once again here we forward go cartesian coordination autotune and the internet will fix that for me sing it with me it's the new cartesian unicorns and rainbows and cupcakes what else is there yes kittens thank you very much kittens and rainbows and cupcakes notice that look what i get i'm really losing my mind okay let's do it the kittens kittens and kittens and kittens kids the kittens the kittens i feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this is a this is a wonderful thing okay we're gonna do it i'm really getting to something i need my sound effects that was invalid syntax i forgot uh there was one other thing here that i think is important that i will use continuously over and over again all sorts of text generation analysis things that i will use continuously over and over again first thing i need to do is yes i just noticed by the way i know this stream is over that i'm gonna and i'm gonna i'm gonna show this to you that um um this is a a beta or alpha e feature on youtube i believe this is now available for all of my videos i would love for people to try to use it so go back to a previous live stream any video clip and share i'm so excited to have this been wanting this forever um in some ways it might mean that i could just sort of double down on live streaming and then clip out sections i have no idea but that just got i've been asking youtube to add me to the beta for this i'm pretty sure that i'm i'm special and i just got added but it might be that it's just on every channel now but i don't think so so please if you're still here and watching that um please please go use that try that see what it see what it does for you okay goodbye everybody um that's it have a wonderful weekend
