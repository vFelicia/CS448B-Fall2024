With timestamps:

00:00 - hello welcome to a coding challenge in
00:05 - this coding challenge I am going to make
00:07 - an animated sprite this is actually a
00:10 - page on my website I have a website yes
00:13 - thank you very much with an example that
00:16 - I made
00:16 - apparently seven years ago you can
00:19 - download the code for this it's made in
00:21 - processing and it is loading a sequence
00:26 - of images and playing those images in
00:28 - sequence in multiple places at different
00:30 - speeds to create this running person
00:34 - thing across the screen so I'm going to
00:35 - try to do something similar I'm gonna do
00:37 - it at p5 so I'm gonna look at what does
00:39 - it mean to load a sprite sheet what is a
00:42 - sprite sheet even to chop up that sprite
00:46 - sheet into lots of little images and
00:47 - then to play those images as a sequence
00:49 - and make an animated sprite class that
00:52 - you can use and this is a very common
00:54 - technique used in games and all sorts of
00:56 - other stuff so let's get started now
00:58 - thank you to dragon z P who suggested
01:06 - that I use this wonderful image sequence
01:09 - of a running horse which comes from open
01:11 - game art org this is under a Creative
01:14 - Commons license
01:16 - so I need to attribute it it which I'm
01:19 - doing right now
01:20 - hello I'm using this but I can so you
01:22 - can find a lot of free and open art that
01:26 - you can use here so I'm gonna use this
01:29 - if you if I were to click here and just
01:31 - download the assets we would see that it
01:33 - would actually come as separate images
01:35 - which I find to be very nice because I
01:37 - like to load them one at a time but
01:39 - what's actually often done and more
01:41 - efficient is to actually and I have this
01:44 - right here to load a single image so
01:48 - this is what's known as a sprite sheet a
01:49 - sprite sheet is a single image that has
01:52 - each frame of an animation for that
01:55 - sprite why is it called a sprite in the
01:57 - first place look at this in the category
02:00 - of you learned something new every day
02:02 - the term sprite was first used in the
02:04 - graphic sense by one of the definers of
02:06 - the Texas Instruments 99 18 a video
02:09 - display processor I'll let you continue
02:11 - to read this interesting Wikipedia
02:13 - Paige about the history of sprites but
02:16 - the way that we think of sprites today
02:18 - and in particular a sprite sheet today
02:20 - is multiple frames of an animation
02:23 - within a single image and this here is a
02:25 - PNG image so it has transparency so if I
02:28 - were to go I should just go to the
02:30 - desktop and open this up you can see it
02:32 - right here here it is again so what is
02:35 - it that I want to do what I want to do
02:37 - is load this image I want to get each
02:40 - frame out of it and then I want to show
02:43 - them one at a time in sequence so this
02:46 - is not necessary but again thank you to
02:49 - dragon who submitted this also sent me a
02:54 - JSON file so this is actually quite
02:56 - convenient this is a JSON file that
02:59 - actually has the information about where
03:01 - each frame of the sprite is in that
03:04 - image it has its XY knits width and
03:05 - height now it turns out this is really
03:07 - just a grid so I could probably just do
03:09 - this mathematically very easy easily but
03:11 - this is sort of nice that I can maybe
03:13 - load this in so let's get started with
03:14 - this right now
03:15 - so first thing I want to do is I am
03:18 - going to write a preload function I'm
03:20 - using again the p5 library and preload
03:23 - allows me to load media assets before
03:25 - the program begins sort of saves me from
03:27 - callbacks and promises and that sort of
03:29 - stuff which is useful but I don't need
03:30 - that right now so I'm gonna say let
03:33 - sprite sheet be the variable for the
03:37 - image and let sprite data be the
03:41 - variable for the data so I'm going to
03:43 - say sprite data equals load JSON and
03:47 - what was that called it's called
03:49 - a horse JSON and I've done something
03:52 - horrible here and then I'm gonna say
03:55 - sprite sheet equals load image horse dot
04:02 - PNG just to make sure everything is
04:04 - working let's draw the sprite sheet to
04:09 - the canvas and in setup lets console dot
04:12 - log the sprite data so this is the first
04:15 - step I and again this is a bit of over
04:18 - this is this is a lot of extra stuff
04:20 - like you know I could just load a bunch
04:23 - of images all right on there so you need
04:24 - the JSON file but this is nice I like I
04:25 - like it
04:27 - so let's go back whoops and of course
04:31 - everything's gone wrong so it couldn't
04:34 - get horse to chase on and it couldn't
04:36 - get horse dot PNG why because it's in a
04:39 - folder I always forget this I put it in
04:42 - a folder called horse so I need to add
04:45 - the directory path to the images there
04:49 - we go
04:49 - so we can see this came in so I
04:52 - definitely have the data there right I
04:54 - have the position and the native of each
04:57 - element and then why don't I see ah so
05:01 - I'm trying to draw the image and I
05:02 - completely forgot if I'm gonna draw the
05:04 - image I've got to say where to draw the
05:05 - image and I'm gonna draw it at zero zero
05:10 - there we go
05:11 - okay so next step what I want to do now
05:15 - is I don't want to just display the
05:17 - entire sprite sheet I want to display
05:20 - each piece of it one at a time so let me
05:23 - go and what I'm going to do is I'm going
05:24 - to create a variable and I'm going to
05:26 - say let animation equal an array so the
05:29 - array is going to be each frame an image
05:32 - for each frame of the animation so
05:34 - assuming I have that data I can see if I
05:37 - look at the JSON file right once again
05:40 - all of the all of the data is in a JSON
05:44 - array called frames so I'm gonna say
05:47 - sorry back into the code I'm gonna say
05:50 - let frames equal sprite data dot frames
05:58 - I don't that's totally necessary for let
06:00 - I equals 0 I is less than frame length I
06:03 - plus plus and then I'm gonna get sorry
06:07 - I'm gonna look at the JSON again and now
06:10 - for each one I want to know about the
06:11 - position this X Y width and height is
06:13 - what's important to me I'm having
06:16 - trouble so I want to say let pause equal
06:20 - frames index I position and then now
06:23 - pause has all of the stuff in it for
06:26 - grabbing a particular image so watch but
06:28 - I'm gonna say let image equal sprite
06:33 - sheet and I'm going to use a function
06:35 - called get so get is a function in the
06:39 - p5 library that
06:41 - you to get part of an image I could get
06:43 - a single pixel I could get the whole
06:45 - image I could get a section of it and in
06:47 - this case what I want is this section of
06:51 - the image the X&Y with a particular
06:53 - width and height then what I want to do
06:56 - is just put that into that array so now
07:01 - this is really all I want to do is loop
07:04 - through every frame grab it out of the
07:06 - spreadsheet now again a convention might
07:08 - be this is one way of doing it which I
07:10 - which arguably might not be the
07:12 - quote/unquote best or most efficient way
07:14 - you can actually just leave everything
07:15 - in a sprite sheet and later I could just
07:17 - be like when it's time to draw stuff I
07:19 - could pull stuff out but I'm choosing to
07:20 - in setup just pull out the sections of
07:22 - the image and I'm gonna console.log that
07:26 - array now and we can see I have an array
07:28 - with seven images in it so now if I were
07:33 - to say draw image animation index zero
07:39 - that's all I see is that one if I were
07:42 - to say draw animation index two I see
07:45 - that one so this is working and guess
07:47 - what animation frame count what and then
07:51 - can't read a property width of undefined
07:55 - so you saw it for a second there and
07:56 - then it went away why did it go away
07:59 - well it went away because there's only
08:01 - seven images there so I could say
08:03 - modulus animation dot length now
08:07 - somebody who I got this great YouTube
08:09 - comment the other day saying that I'm
08:11 - saying modulus and modulo incorrectly I
08:13 - don't remember what it was okay I found
08:16 - the comment the operators called modulo
08:19 - and the number following it is called
08:21 - the modulus okay and Golan Levin came on
08:24 - the coding training to guest video about
08:25 - that operation but what this operation
08:27 - does for me and the code right now the
08:28 - modulo operation is it gives me a
08:31 - modulus value that's always between zero
08:34 - and the end of the array so it's the
08:36 - remainder of division so this frame
08:38 - count modulo animation dot length watch
08:43 - what this does now I see that animation
08:46 - repeating and look at that look at it
08:48 - it's the horse it's just running and
08:50 - running and running and running and
08:51 - running great so I
08:54 - completed in part one when I'm gonna
08:55 - kiss keep going this is one video of
08:57 - this coding challenge I've got the
08:59 - animation playing it out but here's the
09:03 - thing what I want to do now is I need to
09:05 - figure out some way of encapsulating the
09:07 - idea of this animation into an object so
09:11 - I could then make many of them so what
09:14 - I'm gonna do to do that and I think what
09:16 - I want to do I think I want to make a
09:18 - new JavaScript file I'm gonna call it
09:20 - sprite j/s and I am going to in
09:26 - index.html I need to make sure that I
09:28 - refer to it and then in sprite j/s I'm
09:33 - gonna make a class called sprite and
09:35 - then when I create this what what when I
09:38 - create the sprite with a constructor I
09:40 - want to give it a few things I wanted to
09:43 - have a speed and I wanted to have it I'm
09:46 - gonna give it like an animation so
09:48 - basically that animation will be the
09:52 - sequence of images that's supposed to
09:54 - play and then it's also going to have a
09:56 - speed which is like how fast does it
10:00 - play it through so the idea here being
10:03 - that now I can say let me just do a
10:08 - variable called horse and I'm gonna say
10:12 - horse equals a new sprite with these
10:16 - frames of animation and a speed of 1 and
10:22 - then here I'm gonna say horse show and
10:29 - maybe I just want to say something like
10:32 - horse dot animate so like our next frame
10:37 - or something I don't know what what
10:38 - makes the most sense but I'll just call
10:39 - it animate right now and I'll put it
10:41 - after so this means if the idea of this
10:43 - sprite if I want to show it and animate
10:45 - it in the sprite class I need a show
10:48 - function and I need an animate function
10:52 - now if I'm gonna have a show function
10:57 - that's basically going to be exactly
11:00 - this but the point here is that I want
11:05 - to get away from using
11:08 - frame count and so what I want is to
11:11 - have another variable that just keeps
11:13 - track of the index like where am I in
11:15 - the animation so I can use that instead
11:18 - of frame count this dot index and this
11:21 - by the way has to be this dot animation
11:23 - dot length and this has to be this dot
11:25 - animation I like and you know it would
11:26 - be really nice to have a length variable
11:29 - I think cuz I'm gonna probably need that
11:32 - a lot so let's just make it that just
11:37 - like makes the code a little bit nicer
11:39 - to look at alright so this should work
11:41 - and then in animation I just say this
11:43 - dot index plus plus or plus equal this
11:47 - dot speed so the idea here is speed is
11:51 - controlling the speed of the animation
11:52 - so I've basically taken the idea I've
11:55 - created an object that has stored in it
11:58 - an array of images
11:59 - that's the animation it has the length
12:02 - of that array it has speed how fast ran
12:04 - cycle through them and where is it
12:05 - currently so now if we run this and I've
12:10 - got some air here spray Tijs line ten
12:13 - this dot animation this dot index so
12:17 - let's just let's just look at some stuff
12:20 - here to see what's going on Oh animation
12:25 - is one oh I put things in the wrong
12:27 - order
12:28 - ah this is a very common programming
12:30 - error look at this I wasn't doing this
12:33 - quickly and in here say horse equals new
12:35 - sprite animation comma one so and the
12:39 - image sequences first the speed number
12:43 - is second and in here I put the speed
12:46 - first and the animation second so I got
12:50 - to reverse those order so that they
12:52 - match and then there we go we're fine
12:55 - now so I've got to where I was before
12:57 - but the interesting thing here is that
13:01 - now guess what this sprite can have an X
13:11 - and it can have a why and so it could be
13:17 - basically I could be drawing it at this
13:21 - dot X this not Y so then when I create
13:25 - it I could say I wanted at 100 100 comma
13:28 - 1 now it's there this leads me to be
13:34 - able to say okay now I want to have
13:37 - horses I want to have a bunch of horses
13:40 - I'm going to say for let I equals 0 I is
13:44 - less than 5 I plus plus horses index I
13:51 - is a new sprite at 0 comma I times 50
13:57 - and then I want to say for I'm going to
14:02 - use a for of loop let horse of horses
14:06 - and I'm going to go through all those
14:10 - and show and animate all of them so now
14:12 - look at this I've got a whole bunch
14:15 - there they're all right there together
14:17 - maybe I want to just space them out a
14:19 - little more I could be thoughtful about
14:20 - the math of this oops I must not have
14:25 - saved there we go so this is good enough
14:28 - for right now I've got a hole I've got a
14:30 - bunch of them but look it now here's the
14:32 - thing what if I don't want them all to
14:35 - be matched up at the exact same speed
14:39 - what if I were to say let's make the
14:43 - speeds random so let's make the speeds
14:46 - random somewhere between zero point one
14:50 - and one point I think that's actually
14:53 - the fastest speed that that number one
14:55 - so let's do that what happens all right
14:58 - I immediately get an error what is the
15:01 - error that I get it cannot read property
15:03 - with a bun to fine spray Tijs line 12
15:06 - well the issue here is by definition if
15:09 - I go to sprite Jas line 12 look at this
15:14 - this dot index modulus this dot length
15:17 - this works just fine if the index is 0 1
15:21 - 2 3 4 5 if it's a whole number
15:23 - if
15:24 - is a whole number it can apply the
15:26 - modulo so I said it wrong again
15:28 - operation and it gets another whole
15:30 - number which is an index into an array
15:32 - arrays only have whole number indices
15:36 - but if I start saying plus 0.2 or 0.3
15:39 - I'm gonna get these numbers that aren't
15:40 - valid indices into an array well this is
15:42 - actually quite fixable and let's just do
15:45 - this let index equal floor so all I need
15:50 - to do is floor this dot index before I
15:53 - apply modulo and then I can put that in
15:56 - here right so floor is an operation that
15:59 - just eliminates the decimal point I want
16:02 - the index itself to go up slowly by a
16:04 - decimal point but I only want to show
16:06 - you know I have fewer frames I want to
16:08 - show the same frame a bunch of times so
16:10 - it's if it's point 2 it's gonna take 5
16:14 - frames for it to get all the way up to
16:16 - the next whole number if it's a point 1
16:17 - it's going to take 10 frames so this
16:20 - should do the trick now and we can see
16:22 - look at this they're all going at
16:24 - different speeds and they're running in
16:29 - place I might as well have them move now
16:31 - right so why not also have them move
16:33 - this dot X plus equal this dot speed and
16:39 - maybe the speed that they're running
16:42 - doesn't really feel right so even though
16:44 - it's the speed of going through the
16:45 - index I probably should increase that my
16:47 - scale of like 5 let's try that this
16:52 - looks a bit more realistic now I have it
16:55 - looks like they're sort of moving at
16:56 - speed and then I could obviously do
16:59 - something like if this dot X is greater
17:02 - than width then I want to say is this
17:05 - dot x equals negative I want to kind of
17:08 - put them off the screen negative this
17:12 - dot animation index 0 dot width so I'm
17:16 - just pulling I know that might make
17:17 - sense for me to make that a variable
17:20 - like this W equal this dot animation
17:24 - index 0 you know this is assuming all
17:27 - the images have the same width and that
17:29 - way I could just say put it off the
17:30 - screen here so let's run this one more
17:32 - time and guess what I now have I believe
17:37 - recreation of that example that I made
17:38 - where I have a bunch of horses all
17:40 - moving at different speeds through the
17:43 - animation and you know now the world is
17:47 - my digitally simulated virtual reality
17:51 - Easter so to speak and then I could I
17:53 - could grab any sequence of images I
17:56 - could have different sprites have
17:57 - different image sequences I could start
17:58 - designing the background I could have
18:00 - them you know I could apply physics to
18:02 - the way that the the X Y position moves
18:05 - around the screen I can start having
18:06 - collisions the point is that anything
18:08 - that you've anything that I made in all
18:10 - my nature of code or other coding
18:11 - challenges that have an object moving
18:14 - around the screen the simple games this
18:16 - would allow me to have an animated
18:18 - sprite and I might even further want to
18:21 - encapsulate the idea of a sprite oh this
18:23 - would be a great place for me to talk
18:25 - about inheritance so I could then make
18:28 - other objects that extend that's an
18:31 - inheritance term sprite so I could make
18:34 - horses that are animated sprites or
18:36 - frogs that are animated sprites or
18:38 - puffins and puppet doesn't really do it
18:40 - so I could that's so anyway I'm a little
18:42 - bit off the rails here in my discussion
18:44 - let's think about this what could you do
18:46 - know what thing is what would happen if
18:49 - I gave it a negative speed I think mine
18:51 - would break so this is a little
18:53 - challenge to you could you make this
18:55 - work with negative speeds right it
19:00 - breaks so this example that I made
19:03 - doesn't support going through the
19:05 - animation backwards so try to add that
19:08 - could you make something like this that
19:10 - has different animations for each op so
19:14 - there's maybe five things but they're
19:15 - different each one has its own animation
19:18 - sequence could you do that so could you
19:20 - design your own sprite sheet so don't
19:21 - even do any code make your own sprite
19:23 - sheet and run it with this code exactly
19:25 - so there's so many things you could do
19:27 - please share with me up in the comments
19:32 - on Twitter or at the link to the coding
19:34 - challenge URL in this video's
19:37 - description there's a way you can submit
19:38 - any verses that you make on your own
19:40 - thanks for watching this coding
19:43 - challenge animated sprite
19:51 - [Music]

Cleaned transcript:

hello welcome to a coding challenge in this coding challenge I am going to make an animated sprite this is actually a page on my website I have a website yes thank you very much with an example that I made apparently seven years ago you can download the code for this it's made in processing and it is loading a sequence of images and playing those images in sequence in multiple places at different speeds to create this running person thing across the screen so I'm going to try to do something similar I'm gonna do it at p5 so I'm gonna look at what does it mean to load a sprite sheet what is a sprite sheet even to chop up that sprite sheet into lots of little images and then to play those images as a sequence and make an animated sprite class that you can use and this is a very common technique used in games and all sorts of other stuff so let's get started now thank you to dragon z P who suggested that I use this wonderful image sequence of a running horse which comes from open game art org this is under a Creative Commons license so I need to attribute it it which I'm doing right now hello I'm using this but I can so you can find a lot of free and open art that you can use here so I'm gonna use this if you if I were to click here and just download the assets we would see that it would actually come as separate images which I find to be very nice because I like to load them one at a time but what's actually often done and more efficient is to actually and I have this right here to load a single image so this is what's known as a sprite sheet a sprite sheet is a single image that has each frame of an animation for that sprite why is it called a sprite in the first place look at this in the category of you learned something new every day the term sprite was first used in the graphic sense by one of the definers of the Texas Instruments 99 18 a video display processor I'll let you continue to read this interesting Wikipedia Paige about the history of sprites but the way that we think of sprites today and in particular a sprite sheet today is multiple frames of an animation within a single image and this here is a PNG image so it has transparency so if I were to go I should just go to the desktop and open this up you can see it right here here it is again so what is it that I want to do what I want to do is load this image I want to get each frame out of it and then I want to show them one at a time in sequence so this is not necessary but again thank you to dragon who submitted this also sent me a JSON file so this is actually quite convenient this is a JSON file that actually has the information about where each frame of the sprite is in that image it has its XY knits width and height now it turns out this is really just a grid so I could probably just do this mathematically very easy easily but this is sort of nice that I can maybe load this in so let's get started with this right now so first thing I want to do is I am going to write a preload function I'm using again the p5 library and preload allows me to load media assets before the program begins sort of saves me from callbacks and promises and that sort of stuff which is useful but I don't need that right now so I'm gonna say let sprite sheet be the variable for the image and let sprite data be the variable for the data so I'm going to say sprite data equals load JSON and what was that called it's called a horse JSON and I've done something horrible here and then I'm gonna say sprite sheet equals load image horse dot PNG just to make sure everything is working let's draw the sprite sheet to the canvas and in setup lets console dot log the sprite data so this is the first step I and again this is a bit of over this is this is a lot of extra stuff like you know I could just load a bunch of images all right on there so you need the JSON file but this is nice I like I like it so let's go back whoops and of course everything's gone wrong so it couldn't get horse to chase on and it couldn't get horse dot PNG why because it's in a folder I always forget this I put it in a folder called horse so I need to add the directory path to the images there we go so we can see this came in so I definitely have the data there right I have the position and the native of each element and then why don't I see ah so I'm trying to draw the image and I completely forgot if I'm gonna draw the image I've got to say where to draw the image and I'm gonna draw it at zero zero there we go okay so next step what I want to do now is I don't want to just display the entire sprite sheet I want to display each piece of it one at a time so let me go and what I'm going to do is I'm going to create a variable and I'm going to say let animation equal an array so the array is going to be each frame an image for each frame of the animation so assuming I have that data I can see if I look at the JSON file right once again all of the all of the data is in a JSON array called frames so I'm gonna say sorry back into the code I'm gonna say let frames equal sprite data dot frames I don't that's totally necessary for let I equals 0 I is less than frame length I plus plus and then I'm gonna get sorry I'm gonna look at the JSON again and now for each one I want to know about the position this X Y width and height is what's important to me I'm having trouble so I want to say let pause equal frames index I position and then now pause has all of the stuff in it for grabbing a particular image so watch but I'm gonna say let image equal sprite sheet and I'm going to use a function called get so get is a function in the p5 library that you to get part of an image I could get a single pixel I could get the whole image I could get a section of it and in this case what I want is this section of the image the X&Y with a particular width and height then what I want to do is just put that into that array so now this is really all I want to do is loop through every frame grab it out of the spreadsheet now again a convention might be this is one way of doing it which I which arguably might not be the quote/unquote best or most efficient way you can actually just leave everything in a sprite sheet and later I could just be like when it's time to draw stuff I could pull stuff out but I'm choosing to in setup just pull out the sections of the image and I'm gonna console.log that array now and we can see I have an array with seven images in it so now if I were to say draw image animation index zero that's all I see is that one if I were to say draw animation index two I see that one so this is working and guess what animation frame count what and then can't read a property width of undefined so you saw it for a second there and then it went away why did it go away well it went away because there's only seven images there so I could say modulus animation dot length now somebody who I got this great YouTube comment the other day saying that I'm saying modulus and modulo incorrectly I don't remember what it was okay I found the comment the operators called modulo and the number following it is called the modulus okay and Golan Levin came on the coding training to guest video about that operation but what this operation does for me and the code right now the modulo operation is it gives me a modulus value that's always between zero and the end of the array so it's the remainder of division so this frame count modulo animation dot length watch what this does now I see that animation repeating and look at that look at it it's the horse it's just running and running and running and running and running great so I completed in part one when I'm gonna kiss keep going this is one video of this coding challenge I've got the animation playing it out but here's the thing what I want to do now is I need to figure out some way of encapsulating the idea of this animation into an object so I could then make many of them so what I'm gonna do to do that and I think what I want to do I think I want to make a new JavaScript file I'm gonna call it sprite j/s and I am going to in index.html I need to make sure that I refer to it and then in sprite j/s I'm gonna make a class called sprite and then when I create this what what when I create the sprite with a constructor I want to give it a few things I wanted to have a speed and I wanted to have it I'm gonna give it like an animation so basically that animation will be the sequence of images that's supposed to play and then it's also going to have a speed which is like how fast does it play it through so the idea here being that now I can say let me just do a variable called horse and I'm gonna say horse equals a new sprite with these frames of animation and a speed of 1 and then here I'm gonna say horse show and maybe I just want to say something like horse dot animate so like our next frame or something I don't know what what makes the most sense but I'll just call it animate right now and I'll put it after so this means if the idea of this sprite if I want to show it and animate it in the sprite class I need a show function and I need an animate function now if I'm gonna have a show function that's basically going to be exactly this but the point here is that I want to get away from using frame count and so what I want is to have another variable that just keeps track of the index like where am I in the animation so I can use that instead of frame count this dot index and this by the way has to be this dot animation dot length and this has to be this dot animation I like and you know it would be really nice to have a length variable I think cuz I'm gonna probably need that a lot so let's just make it that just like makes the code a little bit nicer to look at alright so this should work and then in animation I just say this dot index plus plus or plus equal this dot speed so the idea here is speed is controlling the speed of the animation so I've basically taken the idea I've created an object that has stored in it an array of images that's the animation it has the length of that array it has speed how fast ran cycle through them and where is it currently so now if we run this and I've got some air here spray Tijs line ten this dot animation this dot index so let's just let's just look at some stuff here to see what's going on Oh animation is one oh I put things in the wrong order ah this is a very common programming error look at this I wasn't doing this quickly and in here say horse equals new sprite animation comma one so and the image sequences first the speed number is second and in here I put the speed first and the animation second so I got to reverse those order so that they match and then there we go we're fine now so I've got to where I was before but the interesting thing here is that now guess what this sprite can have an X and it can have a why and so it could be basically I could be drawing it at this dot X this not Y so then when I create it I could say I wanted at 100 100 comma 1 now it's there this leads me to be able to say okay now I want to have horses I want to have a bunch of horses I'm going to say for let I equals 0 I is less than 5 I plus plus horses index I is a new sprite at 0 comma I times 50 and then I want to say for I'm going to use a for of loop let horse of horses and I'm going to go through all those and show and animate all of them so now look at this I've got a whole bunch there they're all right there together maybe I want to just space them out a little more I could be thoughtful about the math of this oops I must not have saved there we go so this is good enough for right now I've got a hole I've got a bunch of them but look it now here's the thing what if I don't want them all to be matched up at the exact same speed what if I were to say let's make the speeds random so let's make the speeds random somewhere between zero point one and one point I think that's actually the fastest speed that that number one so let's do that what happens all right I immediately get an error what is the error that I get it cannot read property with a bun to fine spray Tijs line 12 well the issue here is by definition if I go to sprite Jas line 12 look at this this dot index modulus this dot length this works just fine if the index is 0 1 2 3 4 5 if it's a whole number if is a whole number it can apply the modulo so I said it wrong again operation and it gets another whole number which is an index into an array arrays only have whole number indices but if I start saying plus 0.2 or 0.3 I'm gonna get these numbers that aren't valid indices into an array well this is actually quite fixable and let's just do this let index equal floor so all I need to do is floor this dot index before I apply modulo and then I can put that in here right so floor is an operation that just eliminates the decimal point I want the index itself to go up slowly by a decimal point but I only want to show you know I have fewer frames I want to show the same frame a bunch of times so it's if it's point 2 it's gonna take 5 frames for it to get all the way up to the next whole number if it's a point 1 it's going to take 10 frames so this should do the trick now and we can see look at this they're all going at different speeds and they're running in place I might as well have them move now right so why not also have them move this dot X plus equal this dot speed and maybe the speed that they're running doesn't really feel right so even though it's the speed of going through the index I probably should increase that my scale of like 5 let's try that this looks a bit more realistic now I have it looks like they're sort of moving at speed and then I could obviously do something like if this dot X is greater than width then I want to say is this dot x equals negative I want to kind of put them off the screen negative this dot animation index 0 dot width so I'm just pulling I know that might make sense for me to make that a variable like this W equal this dot animation index 0 you know this is assuming all the images have the same width and that way I could just say put it off the screen here so let's run this one more time and guess what I now have I believe recreation of that example that I made where I have a bunch of horses all moving at different speeds through the animation and you know now the world is my digitally simulated virtual reality Easter so to speak and then I could I could grab any sequence of images I could have different sprites have different image sequences I could start designing the background I could have them you know I could apply physics to the way that the the X Y position moves around the screen I can start having collisions the point is that anything that you've anything that I made in all my nature of code or other coding challenges that have an object moving around the screen the simple games this would allow me to have an animated sprite and I might even further want to encapsulate the idea of a sprite oh this would be a great place for me to talk about inheritance so I could then make other objects that extend that's an inheritance term sprite so I could make horses that are animated sprites or frogs that are animated sprites or puffins and puppet doesn't really do it so I could that's so anyway I'm a little bit off the rails here in my discussion let's think about this what could you do know what thing is what would happen if I gave it a negative speed I think mine would break so this is a little challenge to you could you make this work with negative speeds right it breaks so this example that I made doesn't support going through the animation backwards so try to add that could you make something like this that has different animations for each op so there's maybe five things but they're different each one has its own animation sequence could you do that so could you design your own sprite sheet so don't even do any code make your own sprite sheet and run it with this code exactly so there's so many things you could do please share with me up in the comments on Twitter or at the link to the coding challenge URL in this video's description there's a way you can submit any verses that you make on your own thanks for watching this coding challenge animated sprite
