With timestamps:

00:00 - hello this is a video about a physics
00:03 - engine called matter jf I am going to
00:06 - teach you how to use battery is here's
00:09 - this problem
00:10 - I don't really know matter touches very
00:13 - well so what I'm actually going to show
00:14 - you is me trying to attempt to make a
00:17 - very simple example in matter that jf by
00:20 - reading the documentation and figuring
00:22 - it out as we go now it's not that I've
00:24 - never looked at this before I have I
00:25 - made some examples of it previously I
00:27 - haven't looked at it in a while but I
00:29 - certainly you know I can't I certainly
00:32 - have to spend more than like 45 you need
00:34 - to know about the amount of time let's
00:35 - just get started
00:36 - so matter like this is a physics engine
00:37 - what is it this engine if you really
00:39 - want to do you could watch a different
00:41 - video that I have that I'll link to in
00:42 - the description where I spend a very
00:43 - long time kind of talking about what a
00:45 - physics engine is I didn't do a very
00:47 - good job but anyway this video could be
00:49 - much better I could tell already so I'm
00:52 - using unmannered such as is a JavaScript
00:55 - physics engine you can see a lot of
00:57 - demos of what it can do right here just
00:59 - even on its home page it's an open
01:01 - source physics engine you can find it on
01:02 - github thank you to the creator and
01:05 - everybody has contributed to this engine
01:06 - it's terrific so you can find the source
01:10 - code documentation etc so most physics
01:14 - engines operate with this idea of having
01:16 - a world here's the world right here that
01:20 - world can have things in it like shapes
01:23 - and those are often called bodies and I
01:25 - think they're called bodies in matter
01:27 - 2jf and also you can have something that
01:30 - connects different bodies together and
01:32 - it matters gachi as those are called
01:34 - constraints so what i want to do is
01:36 - maybe just create a simple example where
01:38 - a couple squares fall from the top of
01:42 - the screen to the bottom and bounce off
01:44 - of each other and let's just see if we
01:46 - can get that to happen okay so what i
01:49 - have so far in my code is i'm using the
01:51 - piece I'm using p5.js as a library for
01:53 - drawing and animation I have a setup
01:55 - function where I make a canvas they have
01:56 - a draw function of loops over and over
01:58 - again where I set the background if I go
02:00 - and look at my code here it is so what's
02:03 - the way that we can kind of get started
02:04 - with matters that yes if I go to the
02:06 - home page let's actually look on github
02:11 - just for a second so
02:13 - on github I feel like him to read me
02:15 - let's see there was I saw a getting
02:18 - started page somewhere install usage you
02:22 - look at usage examples know a little
02:25 - early getting started that's what I'm
02:27 - looking for so I'm looking for this
02:28 - getting started wiki so one thing is
02:31 - we've got to make sure that we have the
02:34 - matter de s library you can see it up
02:36 - there referenced in our HTML page and
02:38 - I've done that so if I look at the if I
02:41 - go back to Adam here you can see I have
02:43 - an index.html file which is referencing
02:46 - P the p5 library and the matter not
02:49 - library and both of those are in this
02:51 - library folder matters SAS and p5.js so
02:55 - if you want to do exactly this example
02:57 - you've got to have both of those
02:58 - libraries the files for them reference
03:00 - in your index of HTML in addition to
03:02 - referencing my own sketch code okay now
03:05 - here following is a minimal minimal
03:08 - example using the built in renderer and
03:10 - runner to get you started so one of the
03:12 - things that matter has is it has a built
03:14 - in renderer meaning it will actually
03:17 - draw everything to a canvas for you you
03:19 - don't have to do it at all you can even
03:20 - set settings and style things but I'm
03:22 - that's an interesting way of working in
03:24 - a really quick way to just try things
03:26 - out but I'm going to try to build an
03:27 - example where I'm not going to use a
03:29 - built in renderer I'm using my own
03:30 - renderer p5 so I can really have total
03:32 - control over the design okay so first
03:36 - thing is module aliases so what's the
03:38 - deal with that let's copy that into our
03:40 - code you'll see this with a lot of
03:42 - libraries module modules module module
03:46 - aliases um so why do you have it well a
03:52 - lot of JavaScript libraries are named
03:55 - based meaning they have things you can
03:57 - use in them like an engine or a renderer
03:59 - or a world or a body and so but they're
04:02 - all namespaced under matter not render
04:05 - matter dot world because what if you
04:08 - what if there was a built-in variable in
04:10 - javascript in the browser already called
04:11 - world you don't have a conflict so you
04:13 - call it matter dot world but every time
04:15 - you want it reference world in your code
04:17 - you want
04:18 - not world management world so this is a
04:19 - little alias that I can just say the
04:21 - thing is matter dot world but I want to
04:22 - set world equal to matter that world if
04:24 - I could take it whenever I want
04:25 - so that's a quick thing we've got so far
04:27 - we've got something elegant and to be
04:28 - honest this one I don't want but you
04:30 - know I'm going to comment that out cuz I
04:32 - want to use it by accident okay let's go
04:35 - back here now engine so a physics engine
04:38 - is an engine we've got to say hey make
04:40 - the engine so let's do that so I'm going
04:44 - to put that in setup and I might want to
04:47 - have a global variable reference to that
04:50 - engine I'm gonna do that right after I
04:51 - create the canvas so so so I'm going to
04:55 - put that in setup we're making our
04:57 - engine this is pretty good so far
04:58 - wait you're watching a video where some
05:00 - of his copy pasting code from the
05:02 - browser into a text editor you realize
05:05 - that's what you're watching right now
05:06 - look I hope maybe it'll get better I'm
05:08 - gonna skip this renderer thing look at
05:10 - this okay so this is exciting this is
05:14 - showing some examples of how you can
05:16 - create bodies in the world so there is
05:18 - there are a bunch of functions we're
05:20 - seeing just three an example of one of
05:22 - them here rectangle so I'm just going to
05:24 - do one of them I'm just going to grab
05:25 - this and I'm going to make a variable
05:28 - called a box and I'm going to add this
05:31 - now to setup and I'm going to say box
05:34 - equals body stop rectangle now here's
05:37 - the thing I'm going to give myself a
05:39 - little more space here we could probably
05:43 - guess right
05:44 - this function is creating a rectangular
05:47 - body at pixel location 400 comma 200
05:50 - probably with a width of 80 pixels and a
05:53 - height of 80 pixels but I let's say we
05:56 - wanted to confirm that that was the case
05:57 - how would we do this so one of the
05:59 - things we can look at is if I go to
06:01 - matter to suggest and I want to go to
06:03 - documentation and under documentation I
06:06 - kind of look at okay there's these are
06:08 - all the different and a sub categories
06:12 - where there are various functions and
06:14 - objects you can have access to and
06:15 - constraints is clearly where we're going
06:17 - to make things to like connect bounds is
06:21 - kind of interesting maybe that's to do
06:22 - with the boundaries of the world but
06:24 - bodies if I click on that bodies has a
06:27 - whole bunch of methods like circle
06:31 - Circle creates a circle from vertices we
06:35 - mean I could pass a list of vertices to
06:37 - get some sort of polygon this is great
06:39 - and if I look down in here and try to
06:41 - find rectangle we can see X Y width
06:45 - height options so what's interesting
06:47 - about this is there are some options see
06:50 - the properties section of the matter dot
06:53 - body module for more details on what you
06:55 - can pass via the options object huh
06:57 - let's keep looking this is exclusive
07:00 - detective work so by the way why am I
07:02 - just saying bodies dot rectangle
07:04 - remember it's actually really matter dot
07:06 - body Sai rectangle but satisfied so I
07:08 - said let's not worry about the options
07:10 - right now we could dig into that later
07:11 - okay
07:12 - so now I have a box this is very
07:14 - exciting ok so now what I'm going to do
07:16 - is we're we're we well let's keep going
07:19 - with this what I want is I mean I want a
07:23 - variable X that also keeps track of the
07:24 - world and you can see the world is a
07:26 - entity that's part of the engine so I'm
07:30 - going to create a five an engine which
07:32 - is the whole physics engine itself and
07:34 - inside that physics engine there's going
07:36 - to be a world that's full of bodies so
07:38 - I'm going to make a variable called
07:39 - world and I'm going to say world equals
07:41 - engine dot world which is maybe a little
07:43 - silly but you know I like to sort of
07:45 - organize things with a very organized
07:46 - way and then I want to make sure the
07:50 - engine run so I'm going to say engine
07:54 - dot run engine now a lot of physics
07:56 - engines will require you in draw or in
08:00 - your animation loop to explicitly say
08:02 - update update each moment in time are
08:04 - steps or each moment in time
08:06 - looks like matters fjs doesn't require
08:08 - to you to do that it just says you could
08:11 - just tell the engine to run it so it's
08:13 - going to be going and you would I would
08:15 - assume that there's some way of
08:16 - configuring you know how is it is it
08:19 - kind of like updating itself 30 frames
08:21 - per second 60 frames per second what is
08:23 - this measurement of time so you could
08:24 - probably dig it as accusation but
08:25 - documentation but the default running
08:27 - the engine is probably going to be good
08:28 - enough for us so what I want to do next
08:32 - is so now I'm stuck right because I I
08:36 - don't want the renderer to do anything
08:38 - automatically what I want to be able to
08:40 - do here is now what I've done is I set
08:42 - up
08:42 - engine if that making engine make the
08:44 - world put one box into it and now what I
08:48 - want you to do please is every time they
08:53 - draw I want to ask the physics engine oh
08:55 - please
08:57 - physics engine thing where is that box
09:01 - so what we need to look at so actually
09:04 - let's just do something here let's just
09:05 - say console dot log we could look in the
09:08 - documentation but one thing that might
09:09 - be nice it's just to say console dot log
09:11 - box so let's go back here hit refresh
09:15 - and look at this oh you know what
09:18 - so this is I've done something rather
09:19 - terrible it's so nice to p5 to give me
09:22 - this error message p5 and alka in the
09:25 - chat writes that the default formatter
09:27 - that she has the 60 frames per second so
09:29 - that's great to know
09:29 - p5 had problems creating the global
09:32 - function box possibly because your code
09:34 - is already using that name as a variable
09:36 - you might you may want to rename that
09:38 - variable something else so I've done
09:39 - something rather not so good because
09:41 - there actually is a function in p5
09:42 - called box and I made my own variable
09:45 - called box this is why name spacing
09:47 - exists p5 works very much in the global
09:51 - namespace to keep things simple so I
09:52 - could just say box no mistakes p5 box
09:54 - but so I'm going to name this boxee box
09:59 - but box bucks one terrible name box ii
10:05 - was better so now lets console.log box 1
10:08 - let's run this again and we can see
10:10 - here's the object so we can look and we
10:12 - can see look at all this stuff angle
10:14 - angle previous angular speed angle
10:16 - velocity bounds axes there's so much
10:20 - information here parent parts position
10:23 - well look at his positions definitely
10:25 - gonna be useful for us X is 400 y is 200
10:29 - so let's make use of that let's try
10:31 - saying a rectangle box 1 X Box 1 dot Y
10:43 - now could I get the width and height
10:45 - from the box now I kinda have a sneaking
10:48 - suspicion that I'm not going to find any
10:51 - variable for width and height in here
10:53 - the probably is a variable that keeps
10:55 - track of its
10:56 - vertices somewhere okay oh there it is I
11:02 - look for a little while there vertices
11:05 - so this I could use which is actually
11:06 - give me the XY of all of its vertices
11:08 - but I imagine this is there's so many
11:10 - different ways I could do this I'm going
11:11 - to do this one way right now which I'm
11:13 - just going to I'm just going to do this
11:15 - it awful way which is I'm going to hard
11:17 - code into with them the height that I
11:19 - know about so now let's run this program
11:21 - again this magical program would hit
11:25 - refresh
11:28 - let's go really fast of the work well
11:36 - that's drum roll is pathetic so how come
11:38 - I don't see it
11:39 - let's oh I just said dot X dot Y
11:43 - remember what was in it oh it's so sad I
11:46 - was not being careful in thoughtful here
11:47 - it was actually called position position
11:50 - dot X so I need to look at box one
11:53 - position X dot one position not Y sad
12:08 - let lets console.log console.log box one
12:19 - dot position X oh I put it at four
12:24 - hundred few hundred I put it somewhere
12:26 - off the screen because I was using its
12:28 - default oh this is terrible let's uh
12:31 - let's put it out let's put it at 200 and
12:34 - put it higher up at like 100 boy I'm
12:37 - really a terrible programmer everybody
12:39 - still subscribe to the projeto I do have
12:42 - a snare drum roll oh hey oh thanks thank
12:47 - you my box okay
12:49 - Wow but I'm getting a really really good
12:53 - Alex in the chat is making an incredibly
12:56 - good point
12:57 - I forgot a key key piece of this because
12:59 - I got off-track what step am I missing I
13:03 - need to make the engine the engines
13:06 - going to have the world I need to make
13:07 - the body
13:08 - then that body needs to go in the world
13:12 - right need to actually say hey that body
13:14 - is something that's going to experience
13:16 - the physics and if we go back to that
13:18 - getting started page I'm sure we'll see
13:21 - world dot add and then a bunch of things
13:24 - so this is a way that I can add
13:26 - something if I unpack this code here if
13:30 - I say world add so this is a generic
13:33 - function add and you know it's funny
13:35 - like I would almost like this to be this
13:39 - this is what I want to do which is to
13:42 - say add box one to the world but it
13:44 - looks like what's actually happening in
13:46 - matter is that I have a add function
13:48 - which is namespace under world where I
13:50 - give it both the world that I want to
13:52 - add to and the things that I want to add
13:53 - so I wouldn't be surprised if this is
13:56 - fairly you can give it an array but what
13:59 - can I just give it a single object let's
14:01 - try that so now let's run it again I
14:03 - forget that stupid from full hey there
14:06 - it is whoo so this is what I need if all
14:09 - I wanted to do is this was my project
14:11 - you using in matter just yet that was
14:14 - pretty simple to do with matter digest
14:16 - as a physics engine but if I need
14:18 - definitely a sad trombone sound effect
14:20 - if this was my project I would not want
14:25 - to go through all this figuring out the
14:27 - physics engine I could just have X Y and
14:29 - say y equals y plus whatever and then
14:31 - add gravity and that sort of thing
14:33 - but what I'm getting here now is first
14:35 - of all let me reorganize the code in a
14:38 - different way so first of all I want to
14:40 - do something that's going to make things
14:41 - easier for me to manage I'm going to
14:43 - create a new file I'm going to call it a
14:47 - box jf and I'm going to write and I
14:52 - think that should be okay because it's a
14:53 - capital box I'm going to create my own
14:55 - box and it's going to have a it's going
14:59 - to have a body in it so my box is going
15:04 - to get an X Y width and a height and
15:06 - when I make so I'm going to make my own
15:09 - object which is a wrapper for the matter
15:12 - jf object so now I'm going to go in here
15:14 - it's just a little bit unnecessary but I
15:16 - think will be nice I'm going to grab
15:18 - this code
15:21 - put it here so this rectangle is going
15:24 - to be the body associated with this box
15:27 - and then when I make that body I also
15:32 - want to remember to add it so I'm going
15:36 - to put this in the object and again
15:37 - there's a umpteen ways and it's not so
15:40 - great that I'm using a global variable
15:41 - here but there's unseen umpteen ways I
15:43 - could organize the code this is just one
15:45 - so I'm going to add the body to the
15:46 - world in the object and then I am going
15:52 - to write into that object a function
15:55 - called this show where I'm going down
16:01 - I'm going to say cos equals this body
16:05 - position I'm going to ask for the
16:07 - position now I also actually really need
16:08 - the angle this body angle because that
16:12 - thing might start to rotate as it
16:14 - bounces off of stuff and I'm guessing
16:16 - its body that angle but we'll find out
16:17 - soon enough and then I'm going to say
16:19 - push and pop and I'm going to use a
16:23 - translate now so I'm going to get a bit
16:25 - fancier I'm going to say translate to
16:27 - paused at X pause dot Y and then I am
16:30 - going to say rectangle pause zero zero
16:35 - with height now the funny thing is this
16:38 - width and height variable it's kind of
16:40 - available down from you down here but I
16:42 - don't love the way I did this I think I
16:44 - want to just put that in I'm going to
16:45 - add my own since the body doesn't keep
16:47 - track of its own width and height I'm
16:49 - going to add my own variable to keep
16:51 - track of that and let's just see without
16:55 - worrying about the angle right now let's
16:57 - now see I've made my own box object so
17:00 - now I can say box one equals a new box
17:04 - object that's my own 200 comma 150 comma
17:09 - 50 and then I can say box one dot show
17:13 - so this should be the same program I
17:17 - always like to do that when I know I
17:18 - miss
17:20 - yeah okay box is not too fun
17:23 - what did I forget I added a new
17:24 - JavaScript file I didn't represent an
17:26 - index of HTML so I'm going to do that
17:29 - right now I'm going to add it here I'm
17:32 - going to reference box AF and here we go
17:37 - hmm there we go look at that
17:40 - whoo-hoo okay so now that's working this
17:44 - is exciting
17:45 - now what do I've got let's do this let's
17:49 - make this an array boxes is an array
17:53 - let's take this let's say function
17:56 - mousepressed whenever I click the mouse
17:59 - let's say boxes dot push a new box at
18:07 - Mouse X Mouse Y and let's make them
18:11 - smaller 20 comma 20 and then let's in
18:17 - draw I'm going to always I'm almost
18:20 - getting I was so close to using a for
18:22 - each loop there you made some of you got
18:24 - so happy but today is not the day it'll
18:26 - come someday and then I'm going to say
18:28 - boxes index I show so what I'm doing now
18:31 - is I'm just I got that one object
18:33 - working I sort of packaged all the
18:35 - physics stuff into the object so I could
18:37 - just make a bunch of them and now Oh
18:39 - Mouse Y is not defined because I spelled
18:42 - it wrong now I can I click the mouse I
18:46 - got now can we really see if there if
18:48 - any physics is going on here besides
18:51 - just gravity uh so what do we need to do
18:54 - one thing I want to do that's really
18:55 - going to make this work is I want to add
18:58 - something at the bottom here that
18:59 - they'll bounce off of I want to add a
19:01 - ground so how do I add ground so I'm
19:05 - going to make a variable called ground
19:06 - and ultimately I could also kind of wrap
19:09 - my own object there but I'm going to be
19:10 - a little bit lazy about this and I'm
19:13 - going to say ground equals bodies dot
19:18 - body's rectangle and then what I want
19:22 - this now an interesting question is does
19:25 - matter jjs consider the center of the
19:28 - rectangle I bet you that's what it is or
19:29 - the top left I don't know let's get this
19:31 - done
19:32 - kind of a feeling that I want my
19:33 - rectangle to be in the middle and at the
19:35 - bottom and I wanted to be the full width
19:37 - and just like 10 pixels high because I
19:40 - want to have a body that sits at the
19:41 - bottom that things bounce off of but I
19:44 - don't want that body to move so what I
19:48 - want is I don't want a dynamic body
19:49 - these are box2d terms but in the same
19:51 - concept applies in in in matter is I
19:54 - want static static body and I noticed as
19:57 - we're looking at this getting started
19:59 - page this is where those options come in
20:01 - right if I create a rectangle at this
20:03 - location and I give it an extra option
20:05 - like is static equal true and so what
20:08 - I'm going to do I'm going to make my
20:09 - code a little bit more long-winded but
20:11 - I'm going to say options and what was it
20:13 - is static true so I'm going to make a
20:16 - little JavaScript object and I'm sure
20:18 - there are lots of other options I could
20:19 - add here options is static true and I'm
20:22 - having the ground be I'm going to add
20:25 - those options to the ground
20:27 - and then I need to say world what was it
20:29 - again dot add world ground without it I
20:35 - don't remember yeah that's it so I also
20:38 - want to add the ground to the world all
20:39 - right let's see oh look at that
20:44 - Oh short of it's doing something but
20:48 - it's a little bit weird right it's a
20:50 - little bit off and one thing I want to
20:52 - do just to make this a little bit more
20:53 - dynamic because I want to change this to
20:55 - Mouse drag just so I can add a bunch at
20:57 - once right you can see them all bouncing
20:59 - but it's not working right now first of
21:02 - all I didn't draw the ground this is the
21:03 - thing to remember right I could do this
21:05 - look at this I could say hey mix it
21:07 - ground in the middle of the window there
21:11 - it is I don't have to draw it I could
21:13 - now draw a line there if I want to do
21:15 - because it's all based on a my retinal I
21:18 - could draw a line in the wrong place it
21:19 - would be crazy but what's missing here
21:21 - these rectangles as they bounce off each
21:23 - other are going to rotate and so the
21:25 - nice thing is I have to assume now the
21:28 - question is I can use the rotate
21:29 - function based on that angle so I can
21:31 - rotate the rectangles based on the angle
21:33 - that I'm getting from the body now is
21:35 - that angle in degrees or radians I don't
21:37 - know let's find out does that doesn't
21:41 - look right does that look right to you
21:43 - does not look right to you so
21:45 - guess that it's giving it to me in
21:46 - degrees and let's convert it to Radian
21:51 - whoops that's not right either where's
21:55 - my sad trombone sound so let's let's
21:57 - let's figure this out
21:58 - ah I know what it is so the rectangle
22:01 - function in p5 draws the rectangle with
22:05 - its reference point the top left so I
22:08 - need to tell p5 no no no the zero zero
22:11 - is at the center of the rectangle rect
22:13 - mode Center so I need this is a really
22:16 - key thing that comes up on working with
22:17 - physics engine the way you're drawing
22:19 - stuff needs to match the way the physics
22:21 - engines thinks it exists and it's not
22:23 - just going to work automatically you've
22:24 - got to really make sure those things
22:25 - match and obviously I'm getting things
22:27 - wrong here and there okay so let me I
22:29 - think that's pretty good let me move the
22:31 - world back to the bottom and let me just
22:35 - draw something along the bottom just to
22:37 - let's make a line that goes from zero
22:41 - height to width height and I'm going to
22:44 - say stroke weight 4 and fill 255 and
22:49 - then what I want to do with the boxes
22:51 - also is be a bit more thoughtful about
22:53 - what they look like
22:54 - so I'm going to say stroke weight one
22:57 - stroke 255 and then Phil you know 127 or
23:02 - something ok so now we can see this
23:07 - looks better yes yeah I think you can
23:12 - see it up there okay so you really are
23:16 - getting kind of like stuck on each other
23:18 - and I have a feeling I remember well I
23:21 - said a bunch of things I want to fix
23:22 - here so number one is I don't seeing the
23:25 - floor I would really like to see the
23:26 - floor so I put filled here by accident
23:28 - set of stroke so let me put that in no
23:32 - cheese because it's white you can't
23:35 - actually see it so let me make that like
23:40 - 170 or something I this is silly what
23:42 - I'm doing now you can kind of see it
23:43 - there but actually you know what I I'm
23:47 - being so silly here this should really
23:49 - be I should really draw the floor
23:54 - exactly as I made it up here and
23:57 - so I'm going to be really really like
24:00 - lazy about this and I should make an
24:01 - object and do all the things that I did
24:03 - with the other thing and make this a
24:04 - rectangle just so it's actually in the
24:06 - right place
24:07 - oh and now it ah this yes so this should
24:14 - also be a rect mode a center there now
24:19 - you can see that floor is there and do I
24:22 - have to stroke wait there by accident I
24:23 - don't want anymore okay so you can see
24:25 - here and I actually let me just do no
24:29 - stroke okay sorry I'm so you can see
24:32 - there's the floor so the things are
24:34 - landing on the foot now one thing that's
24:36 - kind of going on here if you can see
24:37 - that kind of like getting stuck on each
24:39 - other almost immediately and they're
24:41 - also like kind of pushing up against
24:42 - each other
24:43 - so I have a feeling now this comes down
24:45 - to a sort of moment where what we now
24:47 - need to do is kind of tune the engine to
24:50 - perform the way that I might like it to
24:53 - perform so so I have a feeling that some
24:57 - of the properties that I can add like
24:59 - affecting its friction or its density or
25:02 - its restitution or things that I could
25:05 - tweak so let me look at how I might do
25:09 - that now I wonder let's look at that
25:10 - options again because maybe we can add
25:13 - those things in option so in the
25:15 - documentation it's set here see the
25:17 - property section of matter dot body
25:19 - module for Deepti done and what you can
25:21 - pass via the options object so let's go
25:23 - to matter body whoops no no matter I
25:26 - want matter dot body so that's right
25:30 - here body and then I want to look for
25:32 - options so what are my options to do up
25:40 - looks I'm looking for the more details
25:45 - off I kind of know what they are but I
25:47 - want to be able to see that there's all
25:51 - these things I could do that math that
25:53 - parts that positions that statics at
25:55 - velocities translate update well there's
25:58 - so many things I could do so there are
26:00 - these properties up the following
26:02 - properties is what I'm looking for the
26:04 - following properties are specified for
26:05 - objects created by matter by decorate
26:08 - and for objects passed to a
26:09 - the options argument so these are things
26:12 - I could adjust after the fact like what
26:15 - I'm looking for let's just look for
26:16 - friction for example a number that
26:18 - defines the friction of the body the
26:20 - value is always positive and in the
26:21 - range there are 1 a value of zero means
26:23 - the body may slide indefinitely a value
26:25 - of 1 means the body may come to a stop
26:27 - almost instantly after a force is
26:29 - applied so this is actually the kind of
26:31 - thing that I could I could probably do
26:33 - this in a number of ways
26:34 - number one is I could do something like
26:36 - this I could just say this body friction
26:40 - equals 1 so I could do it here I have a
26:45 - feeling that works can you tell if this
26:49 - is different I don't know now I could
26:51 - set it to zero let's just see yes you
26:55 - can definitely tell that that's
26:56 - different zero friction versus a
26:59 - friction of one that's kind of
27:01 - interesting to see so but I could also
27:04 - probably do this again and this might be
27:10 - a little bit nicer because I can do a
27:12 - bunch of options so I'm going to say
27:14 - options here and these don't have to be
27:15 - the same for every so what I want to do
27:17 - is do friction and I also want to do so
27:19 - I'm going to do 0.5 just somewhere in
27:21 - the middle I also want to do restitution
27:23 - so restitution has to do with the sort
27:27 - of bouncing acts like it's a thing this
27:29 - thing that's falling is it going to land
27:30 - and just sort of land there and stop or
27:33 - is it going to hit there and bounce way
27:34 - up because it's very elastic or spongy
27:36 - or bouncy
27:37 - so let's look up restitution it's going
27:40 - to ensure the documentation will explain
27:42 - it better than my botched little
27:43 - whatever thing that air friction a
27:45 - number that defines the restitution
27:47 - elasticity of the body valuable is
27:49 - positive during one a value zero means
27:50 - two collisions maybe perfectly inelastic
27:52 - and no bouncing a value point eight
27:54 - needs to body may bounce back with
27:55 - approximately eighty percent of its
27:57 - kinetic energy hey we got some physics
27:59 - stuff going on here
28:00 - so let's now let's give it a restitution
28:03 - of one and go back there you can see how
28:09 - bouncy they are so that's like too much
28:11 - so I want to what I want to do is I want
28:16 - to move the bottom just for the sake of
28:19 - argument too
28:20 - you know height - 50 I want to be a
28:25 - little more thoughtful and say ground
28:26 - dot position X ground position dot Y and
28:33 - by the way it will be interesting
28:34 - exercise to like angle the ground so
28:38 - let's just do that and now let's do this
28:40 - and what I want to do there is a little
28:42 - bit of glitchyness there I want to make
28:44 - the restitution like point six and the
28:46 - friction like point three and I feel
28:48 - like this is what I want
28:49 - why are some going through I wonder if
28:54 - the facts I think there's a little bit
28:56 - of an issue here where when I drag the
28:58 - mouse I'm creating so many objects on
29:00 - top of themselves and so in this case
29:02 - just to like look at this in a slightly
29:04 - different way I think I want to go back
29:05 - to a mouse pressed just like a look at
29:09 - them one at a time why did that happen
29:12 - they're so bouncy so that must be doing
29:18 - something a little bit off here looks
29:21 - right though I like yeah I like enjoying
29:26 - my physics so I think I'm going to look
29:29 - at this some more and see if there are
29:31 - some other things I need to tune with
29:32 - this and then I am going to I'm going to
29:37 - come back I'm looking at the chat right
29:39 - now seeing some interesting comments I'm
29:41 - going to come back and in the next video
29:43 - I'm going to add a few things to this
29:45 - number one thing that I want to make
29:47 - sure to show you how to do is how to add
29:48 - some Mouse interaction so if I want to
29:50 - click on one of these and drag it and
29:52 - kind of toss it around and I'm also
29:54 - really wondering why those first ones
29:56 - what I'm wondering here is why the first
29:59 - ones seem to like fall through the
30:02 - ground like what is going on there okay
30:06 - so there's an issue where that you're
30:08 - noticing that sometimes the sometimes
30:11 - these squares are like falling through
30:12 - the bottom and my suspicion here is that
30:15 - I need to crown this very very skinny
30:17 - rectangle and and these boxes are
30:22 - actually moving quite quickly by the
30:24 - time they get to the bottom and perhaps
30:25 - the time step is such that it's
30:27 - positioned at one moment and the next
30:30 - moment kind of skipped over it so
30:32 - there's probably
30:32 - settings and matter that they asked that
30:34 - I could change in terms of its time step
30:37 - calculation but I want to look into that
30:39 - but right now here's a way I could fix
30:41 - this I could just make it sticker so
30:43 - just as like to make sure so I'm going
30:45 - to make the height of it 100 and then
30:47 - I'm doing a very silly thing where I
30:49 - have to type in this hard-coded value in
30:50 - two places to also draw it that high so
30:53 - now I've got a much fruit like the
30:56 - thicker ground so to speak I have a
30:57 - feeling that even if I drop it from way
30:59 - up high it's not going to be able to
31:00 - skip over it so now we're seeing that
31:02 - this physics engine that this example
31:04 - this demonstration is kind of working
31:06 - more like what you might imagine here's
31:08 - one thing I'd like to do just to make
31:09 - this have a little bit more variety just
31:11 - so you see it is I want to go into box
31:14 - AF and I'll actually let me just do this
31:16 - up here and I'm going to make when I
31:19 - create the new I'm going to make it with
31:21 - a random a random with between 10 and 40
31:25 - and a random height between 10 and 40 so
31:28 - let's just see make sure this still
31:30 - works with different sized rectangles oh
31:32 - yeah 20 how the first two were like
31:36 - squares so you can see here that this
31:38 - works even with rectangles of varying
31:40 - size wonderful so here is a basic
31:43 - implementation of matter KS really
31:47 - simple there's a lot of things that
31:48 - could build on top of this I need to
31:50 - look at how I can drag things around
31:52 - with the map mount I need to look at
31:54 - well how could I make it an arbitrary
31:55 - polygon that's not just a rectangle what
31:57 - if I wanted to be a circle what are you
32:00 - could think of a lot of your own
32:01 - features so I'm going to do a couple
32:02 - more video tutorials and a coding
32:04 - challenge at some point to build a
32:06 - particular scenario so thanks for
32:08 - watching this matter a chance tutorial
32:09 - and I'll see you in some future ones
32:18 - you

Cleaned transcript:

hello this is a video about a physics engine called matter jf I am going to teach you how to use battery is here's this problem I don't really know matter touches very well so what I'm actually going to show you is me trying to attempt to make a very simple example in matter that jf by reading the documentation and figuring it out as we go now it's not that I've never looked at this before I have I made some examples of it previously I haven't looked at it in a while but I certainly you know I can't I certainly have to spend more than like 45 you need to know about the amount of time let's just get started so matter like this is a physics engine what is it this engine if you really want to do you could watch a different video that I have that I'll link to in the description where I spend a very long time kind of talking about what a physics engine is I didn't do a very good job but anyway this video could be much better I could tell already so I'm using unmannered such as is a JavaScript physics engine you can see a lot of demos of what it can do right here just even on its home page it's an open source physics engine you can find it on github thank you to the creator and everybody has contributed to this engine it's terrific so you can find the source code documentation etc so most physics engines operate with this idea of having a world here's the world right here that world can have things in it like shapes and those are often called bodies and I think they're called bodies in matter 2jf and also you can have something that connects different bodies together and it matters gachi as those are called constraints so what i want to do is maybe just create a simple example where a couple squares fall from the top of the screen to the bottom and bounce off of each other and let's just see if we can get that to happen okay so what i have so far in my code is i'm using the piece I'm using p5.js as a library for drawing and animation I have a setup function where I make a canvas they have a draw function of loops over and over again where I set the background if I go and look at my code here it is so what's the way that we can kind of get started with matters that yes if I go to the home page let's actually look on github just for a second so on github I feel like him to read me let's see there was I saw a getting started page somewhere install usage you look at usage examples know a little early getting started that's what I'm looking for so I'm looking for this getting started wiki so one thing is we've got to make sure that we have the matter de s library you can see it up there referenced in our HTML page and I've done that so if I look at the if I go back to Adam here you can see I have an index.html file which is referencing P the p5 library and the matter not library and both of those are in this library folder matters SAS and p5.js so if you want to do exactly this example you've got to have both of those libraries the files for them reference in your index of HTML in addition to referencing my own sketch code okay now here following is a minimal minimal example using the built in renderer and runner to get you started so one of the things that matter has is it has a built in renderer meaning it will actually draw everything to a canvas for you you don't have to do it at all you can even set settings and style things but I'm that's an interesting way of working in a really quick way to just try things out but I'm going to try to build an example where I'm not going to use a built in renderer I'm using my own renderer p5 so I can really have total control over the design okay so first thing is module aliases so what's the deal with that let's copy that into our code you'll see this with a lot of libraries module modules module module aliases um so why do you have it well a lot of JavaScript libraries are named based meaning they have things you can use in them like an engine or a renderer or a world or a body and so but they're all namespaced under matter not render matter dot world because what if you what if there was a builtin variable in javascript in the browser already called world you don't have a conflict so you call it matter dot world but every time you want it reference world in your code you want not world management world so this is a little alias that I can just say the thing is matter dot world but I want to set world equal to matter that world if I could take it whenever I want so that's a quick thing we've got so far we've got something elegant and to be honest this one I don't want but you know I'm going to comment that out cuz I want to use it by accident okay let's go back here now engine so a physics engine is an engine we've got to say hey make the engine so let's do that so I'm going to put that in setup and I might want to have a global variable reference to that engine I'm gonna do that right after I create the canvas so so so I'm going to put that in setup we're making our engine this is pretty good so far wait you're watching a video where some of his copy pasting code from the browser into a text editor you realize that's what you're watching right now look I hope maybe it'll get better I'm gonna skip this renderer thing look at this okay so this is exciting this is showing some examples of how you can create bodies in the world so there is there are a bunch of functions we're seeing just three an example of one of them here rectangle so I'm just going to do one of them I'm just going to grab this and I'm going to make a variable called a box and I'm going to add this now to setup and I'm going to say box equals body stop rectangle now here's the thing I'm going to give myself a little more space here we could probably guess right this function is creating a rectangular body at pixel location 400 comma 200 probably with a width of 80 pixels and a height of 80 pixels but I let's say we wanted to confirm that that was the case how would we do this so one of the things we can look at is if I go to matter to suggest and I want to go to documentation and under documentation I kind of look at okay there's these are all the different and a sub categories where there are various functions and objects you can have access to and constraints is clearly where we're going to make things to like connect bounds is kind of interesting maybe that's to do with the boundaries of the world but bodies if I click on that bodies has a whole bunch of methods like circle Circle creates a circle from vertices we mean I could pass a list of vertices to get some sort of polygon this is great and if I look down in here and try to find rectangle we can see X Y width height options so what's interesting about this is there are some options see the properties section of the matter dot body module for more details on what you can pass via the options object huh let's keep looking this is exclusive detective work so by the way why am I just saying bodies dot rectangle remember it's actually really matter dot body Sai rectangle but satisfied so I said let's not worry about the options right now we could dig into that later okay so now I have a box this is very exciting ok so now what I'm going to do is we're we're we well let's keep going with this what I want is I mean I want a variable X that also keeps track of the world and you can see the world is a entity that's part of the engine so I'm going to create a five an engine which is the whole physics engine itself and inside that physics engine there's going to be a world that's full of bodies so I'm going to make a variable called world and I'm going to say world equals engine dot world which is maybe a little silly but you know I like to sort of organize things with a very organized way and then I want to make sure the engine run so I'm going to say engine dot run engine now a lot of physics engines will require you in draw or in your animation loop to explicitly say update update each moment in time are steps or each moment in time looks like matters fjs doesn't require to you to do that it just says you could just tell the engine to run it so it's going to be going and you would I would assume that there's some way of configuring you know how is it is it kind of like updating itself 30 frames per second 60 frames per second what is this measurement of time so you could probably dig it as accusation but documentation but the default running the engine is probably going to be good enough for us so what I want to do next is so now I'm stuck right because I I don't want the renderer to do anything automatically what I want to be able to do here is now what I've done is I set up engine if that making engine make the world put one box into it and now what I want you to do please is every time they draw I want to ask the physics engine oh please physics engine thing where is that box so what we need to look at so actually let's just do something here let's just say console dot log we could look in the documentation but one thing that might be nice it's just to say console dot log box so let's go back here hit refresh and look at this oh you know what so this is I've done something rather terrible it's so nice to p5 to give me this error message p5 and alka in the chat writes that the default formatter that she has the 60 frames per second so that's great to know p5 had problems creating the global function box possibly because your code is already using that name as a variable you might you may want to rename that variable something else so I've done something rather not so good because there actually is a function in p5 called box and I made my own variable called box this is why name spacing exists p5 works very much in the global namespace to keep things simple so I could just say box no mistakes p5 box but so I'm going to name this boxee box but box bucks one terrible name box ii was better so now lets console.log box 1 let's run this again and we can see here's the object so we can look and we can see look at all this stuff angle angle previous angular speed angle velocity bounds axes there's so much information here parent parts position well look at his positions definitely gonna be useful for us X is 400 y is 200 so let's make use of that let's try saying a rectangle box 1 X Box 1 dot Y now could I get the width and height from the box now I kinda have a sneaking suspicion that I'm not going to find any variable for width and height in here the probably is a variable that keeps track of its vertices somewhere okay oh there it is I look for a little while there vertices so this I could use which is actually give me the XY of all of its vertices but I imagine this is there's so many different ways I could do this I'm going to do this one way right now which I'm just going to I'm just going to do this it awful way which is I'm going to hard code into with them the height that I know about so now let's run this program again this magical program would hit refresh let's go really fast of the work well that's drum roll is pathetic so how come I don't see it let's oh I just said dot X dot Y remember what was in it oh it's so sad I was not being careful in thoughtful here it was actually called position position dot X so I need to look at box one position X dot one position not Y sad let lets console.log console.log box one dot position X oh I put it at four hundred few hundred I put it somewhere off the screen because I was using its default oh this is terrible let's uh let's put it out let's put it at 200 and put it higher up at like 100 boy I'm really a terrible programmer everybody still subscribe to the projeto I do have a snare drum roll oh hey oh thanks thank you my box okay Wow but I'm getting a really really good Alex in the chat is making an incredibly good point I forgot a key key piece of this because I got offtrack what step am I missing I need to make the engine the engines going to have the world I need to make the body then that body needs to go in the world right need to actually say hey that body is something that's going to experience the physics and if we go back to that getting started page I'm sure we'll see world dot add and then a bunch of things so this is a way that I can add something if I unpack this code here if I say world add so this is a generic function add and you know it's funny like I would almost like this to be this this is what I want to do which is to say add box one to the world but it looks like what's actually happening in matter is that I have a add function which is namespace under world where I give it both the world that I want to add to and the things that I want to add so I wouldn't be surprised if this is fairly you can give it an array but what can I just give it a single object let's try that so now let's run it again I forget that stupid from full hey there it is whoo so this is what I need if all I wanted to do is this was my project you using in matter just yet that was pretty simple to do with matter digest as a physics engine but if I need definitely a sad trombone sound effect if this was my project I would not want to go through all this figuring out the physics engine I could just have X Y and say y equals y plus whatever and then add gravity and that sort of thing but what I'm getting here now is first of all let me reorganize the code in a different way so first of all I want to do something that's going to make things easier for me to manage I'm going to create a new file I'm going to call it a box jf and I'm going to write and I think that should be okay because it's a capital box I'm going to create my own box and it's going to have a it's going to have a body in it so my box is going to get an X Y width and a height and when I make so I'm going to make my own object which is a wrapper for the matter jf object so now I'm going to go in here it's just a little bit unnecessary but I think will be nice I'm going to grab this code put it here so this rectangle is going to be the body associated with this box and then when I make that body I also want to remember to add it so I'm going to put this in the object and again there's a umpteen ways and it's not so great that I'm using a global variable here but there's unseen umpteen ways I could organize the code this is just one so I'm going to add the body to the world in the object and then I am going to write into that object a function called this show where I'm going down I'm going to say cos equals this body position I'm going to ask for the position now I also actually really need the angle this body angle because that thing might start to rotate as it bounces off of stuff and I'm guessing its body that angle but we'll find out soon enough and then I'm going to say push and pop and I'm going to use a translate now so I'm going to get a bit fancier I'm going to say translate to paused at X pause dot Y and then I am going to say rectangle pause zero zero with height now the funny thing is this width and height variable it's kind of available down from you down here but I don't love the way I did this I think I want to just put that in I'm going to add my own since the body doesn't keep track of its own width and height I'm going to add my own variable to keep track of that and let's just see without worrying about the angle right now let's now see I've made my own box object so now I can say box one equals a new box object that's my own 200 comma 150 comma 50 and then I can say box one dot show so this should be the same program I always like to do that when I know I miss yeah okay box is not too fun what did I forget I added a new JavaScript file I didn't represent an index of HTML so I'm going to do that right now I'm going to add it here I'm going to reference box AF and here we go hmm there we go look at that whoohoo okay so now that's working this is exciting now what do I've got let's do this let's make this an array boxes is an array let's take this let's say function mousepressed whenever I click the mouse let's say boxes dot push a new box at Mouse X Mouse Y and let's make them smaller 20 comma 20 and then let's in draw I'm going to always I'm almost getting I was so close to using a for each loop there you made some of you got so happy but today is not the day it'll come someday and then I'm going to say boxes index I show so what I'm doing now is I'm just I got that one object working I sort of packaged all the physics stuff into the object so I could just make a bunch of them and now Oh Mouse Y is not defined because I spelled it wrong now I can I click the mouse I got now can we really see if there if any physics is going on here besides just gravity uh so what do we need to do one thing I want to do that's really going to make this work is I want to add something at the bottom here that they'll bounce off of I want to add a ground so how do I add ground so I'm going to make a variable called ground and ultimately I could also kind of wrap my own object there but I'm going to be a little bit lazy about this and I'm going to say ground equals bodies dot body's rectangle and then what I want this now an interesting question is does matter jjs consider the center of the rectangle I bet you that's what it is or the top left I don't know let's get this done kind of a feeling that I want my rectangle to be in the middle and at the bottom and I wanted to be the full width and just like 10 pixels high because I want to have a body that sits at the bottom that things bounce off of but I don't want that body to move so what I want is I don't want a dynamic body these are box2d terms but in the same concept applies in in in matter is I want static static body and I noticed as we're looking at this getting started page this is where those options come in right if I create a rectangle at this location and I give it an extra option like is static equal true and so what I'm going to do I'm going to make my code a little bit more longwinded but I'm going to say options and what was it is static true so I'm going to make a little JavaScript object and I'm sure there are lots of other options I could add here options is static true and I'm having the ground be I'm going to add those options to the ground and then I need to say world what was it again dot add world ground without it I don't remember yeah that's it so I also want to add the ground to the world all right let's see oh look at that Oh short of it's doing something but it's a little bit weird right it's a little bit off and one thing I want to do just to make this a little bit more dynamic because I want to change this to Mouse drag just so I can add a bunch at once right you can see them all bouncing but it's not working right now first of all I didn't draw the ground this is the thing to remember right I could do this look at this I could say hey mix it ground in the middle of the window there it is I don't have to draw it I could now draw a line there if I want to do because it's all based on a my retinal I could draw a line in the wrong place it would be crazy but what's missing here these rectangles as they bounce off each other are going to rotate and so the nice thing is I have to assume now the question is I can use the rotate function based on that angle so I can rotate the rectangles based on the angle that I'm getting from the body now is that angle in degrees or radians I don't know let's find out does that doesn't look right does that look right to you does not look right to you so guess that it's giving it to me in degrees and let's convert it to Radian whoops that's not right either where's my sad trombone sound so let's let's let's figure this out ah I know what it is so the rectangle function in p5 draws the rectangle with its reference point the top left so I need to tell p5 no no no the zero zero is at the center of the rectangle rect mode Center so I need this is a really key thing that comes up on working with physics engine the way you're drawing stuff needs to match the way the physics engines thinks it exists and it's not just going to work automatically you've got to really make sure those things match and obviously I'm getting things wrong here and there okay so let me I think that's pretty good let me move the world back to the bottom and let me just draw something along the bottom just to let's make a line that goes from zero height to width height and I'm going to say stroke weight 4 and fill 255 and then what I want to do with the boxes also is be a bit more thoughtful about what they look like so I'm going to say stroke weight one stroke 255 and then Phil you know 127 or something ok so now we can see this looks better yes yeah I think you can see it up there okay so you really are getting kind of like stuck on each other and I have a feeling I remember well I said a bunch of things I want to fix here so number one is I don't seeing the floor I would really like to see the floor so I put filled here by accident set of stroke so let me put that in no cheese because it's white you can't actually see it so let me make that like 170 or something I this is silly what I'm doing now you can kind of see it there but actually you know what I I'm being so silly here this should really be I should really draw the floor exactly as I made it up here and so I'm going to be really really like lazy about this and I should make an object and do all the things that I did with the other thing and make this a rectangle just so it's actually in the right place oh and now it ah this yes so this should also be a rect mode a center there now you can see that floor is there and do I have to stroke wait there by accident I don't want anymore okay so you can see here and I actually let me just do no stroke okay sorry I'm so you can see there's the floor so the things are landing on the foot now one thing that's kind of going on here if you can see that kind of like getting stuck on each other almost immediately and they're also like kind of pushing up against each other so I have a feeling now this comes down to a sort of moment where what we now need to do is kind of tune the engine to perform the way that I might like it to perform so so I have a feeling that some of the properties that I can add like affecting its friction or its density or its restitution or things that I could tweak so let me look at how I might do that now I wonder let's look at that options again because maybe we can add those things in option so in the documentation it's set here see the property section of matter dot body module for Deepti done and what you can pass via the options object so let's go to matter body whoops no no matter I want matter dot body so that's right here body and then I want to look for options so what are my options to do up looks I'm looking for the more details off I kind of know what they are but I want to be able to see that there's all these things I could do that math that parts that positions that statics at velocities translate update well there's so many things I could do so there are these properties up the following properties is what I'm looking for the following properties are specified for objects created by matter by decorate and for objects passed to a the options argument so these are things I could adjust after the fact like what I'm looking for let's just look for friction for example a number that defines the friction of the body the value is always positive and in the range there are 1 a value of zero means the body may slide indefinitely a value of 1 means the body may come to a stop almost instantly after a force is applied so this is actually the kind of thing that I could I could probably do this in a number of ways number one is I could do something like this I could just say this body friction equals 1 so I could do it here I have a feeling that works can you tell if this is different I don't know now I could set it to zero let's just see yes you can definitely tell that that's different zero friction versus a friction of one that's kind of interesting to see so but I could also probably do this again and this might be a little bit nicer because I can do a bunch of options so I'm going to say options here and these don't have to be the same for every so what I want to do is do friction and I also want to do so I'm going to do 0.5 just somewhere in the middle I also want to do restitution so restitution has to do with the sort of bouncing acts like it's a thing this thing that's falling is it going to land and just sort of land there and stop or is it going to hit there and bounce way up because it's very elastic or spongy or bouncy so let's look up restitution it's going to ensure the documentation will explain it better than my botched little whatever thing that air friction a number that defines the restitution elasticity of the body valuable is positive during one a value zero means two collisions maybe perfectly inelastic and no bouncing a value point eight needs to body may bounce back with approximately eighty percent of its kinetic energy hey we got some physics stuff going on here so let's now let's give it a restitution of one and go back there you can see how bouncy they are so that's like too much so I want to what I want to do is I want to move the bottom just for the sake of argument too you know height 50 I want to be a little more thoughtful and say ground dot position X ground position dot Y and by the way it will be interesting exercise to like angle the ground so let's just do that and now let's do this and what I want to do there is a little bit of glitchyness there I want to make the restitution like point six and the friction like point three and I feel like this is what I want why are some going through I wonder if the facts I think there's a little bit of an issue here where when I drag the mouse I'm creating so many objects on top of themselves and so in this case just to like look at this in a slightly different way I think I want to go back to a mouse pressed just like a look at them one at a time why did that happen they're so bouncy so that must be doing something a little bit off here looks right though I like yeah I like enjoying my physics so I think I'm going to look at this some more and see if there are some other things I need to tune with this and then I am going to I'm going to come back I'm looking at the chat right now seeing some interesting comments I'm going to come back and in the next video I'm going to add a few things to this number one thing that I want to make sure to show you how to do is how to add some Mouse interaction so if I want to click on one of these and drag it and kind of toss it around and I'm also really wondering why those first ones what I'm wondering here is why the first ones seem to like fall through the ground like what is going on there okay so there's an issue where that you're noticing that sometimes the sometimes these squares are like falling through the bottom and my suspicion here is that I need to crown this very very skinny rectangle and and these boxes are actually moving quite quickly by the time they get to the bottom and perhaps the time step is such that it's positioned at one moment and the next moment kind of skipped over it so there's probably settings and matter that they asked that I could change in terms of its time step calculation but I want to look into that but right now here's a way I could fix this I could just make it sticker so just as like to make sure so I'm going to make the height of it 100 and then I'm doing a very silly thing where I have to type in this hardcoded value in two places to also draw it that high so now I've got a much fruit like the thicker ground so to speak I have a feeling that even if I drop it from way up high it's not going to be able to skip over it so now we're seeing that this physics engine that this example this demonstration is kind of working more like what you might imagine here's one thing I'd like to do just to make this have a little bit more variety just so you see it is I want to go into box AF and I'll actually let me just do this up here and I'm going to make when I create the new I'm going to make it with a random a random with between 10 and 40 and a random height between 10 and 40 so let's just see make sure this still works with different sized rectangles oh yeah 20 how the first two were like squares so you can see here that this works even with rectangles of varying size wonderful so here is a basic implementation of matter KS really simple there's a lot of things that could build on top of this I need to look at how I can drag things around with the map mount I need to look at well how could I make it an arbitrary polygon that's not just a rectangle what if I wanted to be a circle what are you could think of a lot of your own features so I'm going to do a couple more video tutorials and a coding challenge at some point to build a particular scenario so thanks for watching this matter a chance tutorial and I'll see you in some future ones you
