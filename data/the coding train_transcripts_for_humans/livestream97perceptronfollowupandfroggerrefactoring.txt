With timestamps:

00:01 - hello welcome to a special Monday
00:06 - edition of the coding train I'm Dan your
00:10 - host and coder person to Monday it's not
00:16 - my usual time the reason I'm here today
00:18 - is not because I want to be more like
00:20 - fun fun function although how many funds
00:23 - are there in fun fun function I think I
00:25 - got it right three right but rather that
00:30 - I have just a conflict for later this
00:32 - week typically I like to livestream on a
00:34 - Thursday or a Friday sometimes in the
00:36 - morning so does in the afternoon you're
00:38 - all over the world your time is a
00:39 - completely different time but this week
00:43 - I won't be here later this week so I am
00:45 - here today to make sure I it's my goal
00:47 - at least this summer to have a live
00:48 - stream every week although I could say
00:50 - for certain when that's not going to
00:51 - happen in July and August when I'll be
00:53 - away but anyway here I am and I've got a
00:57 - bunch of things to do I'm looking at the
01:00 - chat and so far no one's complain that
01:03 - my volume is too low or it's too high so
01:06 - everything seems to be rolling along
01:07 - okay so what's going to happen today I
01:10 - got to think about this for a second
01:13 - first let me say it perhaps this is your
01:16 - first time watching if it is welcome
01:18 - thank you for tuning in I hear that
01:21 - there's like a another live stream maybe
01:23 - the e3 live stream is going on right
01:25 - maybe simultaneously you probably should
01:27 - go watch that this will be archived you
01:29 - can watch it at 2x speed or fast-forward
01:31 - through it later but okay so if this is
01:37 - your first time watching what I do is I
01:38 - typically livestream today will be the
01:41 - same for about two hours I definitely
01:43 - have to leave two hours from now for an
01:46 - appointment so I'll be here for about
01:48 - two hours
01:48 - I make a lot of mistakes I try to code a
01:50 - bunch of things explain a bunch of
01:51 - things and then after the live stream is
01:54 - finished it is archived and also most of
01:58 - the time various portions of live
02:00 - streams were then edited separately into
02:02 - tutorial videos which are uploaded later
02:04 - if you would which I will mention by the
02:07 - way while I'm here since I'm here if I
02:10 - go to youtube.com slash Schiffman
02:16 - that uh okay so what you will see here
02:18 - is that the most recent videos are my
02:23 - perceptron coding challenge which I'm
02:25 - going to do a follow-up on today and the
02:27 - Frogger livestream which I'm also going
02:30 - to do a follow-up on today so that's
02:31 - what's happening today but I will say if
02:33 - you go here into coding challenges but
02:36 - you might notice if you scroll all the
02:38 - way down to the bottom o load more all
02:42 - the way ah look at this coding challenge
02:44 - seventy three point one point two in
02:47 - part three Frogger apart one two and
02:49 - three are actually available so often
02:51 - I'm just saying this because people
02:52 - always ask and also for you the live
02:54 - viewers to give you a little extra
02:56 - tidbit here that I what I when the when
03:03 - the edited versions of the videos are
03:05 - ready and available they are often
03:07 - uploaded and part of the playlists but
03:10 - are listed on YouTube and are not made
03:12 - public this is because I tend to make
03:15 - one public per day most people are most
03:18 - of the viewers are not the live viewers
03:20 - but are the ones who are just kind of
03:21 - clicking home link as they get alerts so
03:24 - I like just kind of roll out the videos
03:25 - more slowly over time maybe that's a bad
03:27 - idea I don't know some YouTube certified
03:30 - consultant could maybe tell me the best
03:31 - way to approach this but that's kind of
03:33 - my approach right now okay
03:37 - Oh welcome Vic who says Wow the first
03:40 - time I'm here I am glad that you are
03:42 - here live I don't know if this
03:43 - experience is more enjoyable or less
03:45 - enjoyable live but I'm pleased
03:47 - nonetheless that you're here as you just
03:50 - as you saw I do try to keep a corner of
03:53 - my eye on the YouTube chat this is very
03:55 - hard for me to follow it because I got
03:57 - to think about a lot of different things
03:59 - it's also on a screen that's like way
04:00 - over here so I have to like look and
04:03 - kind of look over here and then come
04:04 - back and look here so I will try to take
04:07 - a peek at it I do keep a closer eye on a
04:11 - slack channel which if you would like to
04:13 - support the work that I'm doing
04:15 - patreon.com slash coding train it is a
04:19 - patreon is a crowdfunding service for
04:21 - content creators and if you would like
04:24 - to join that you will get it
04:26 - tation to our slack channel which I also
04:29 - keep an eye on and most most recent
04:31 - messages in dislike channel CPP about
04:33 - people like finishing up their lunch
04:35 - real quick or skipping eating just to
04:37 - watch the watch live scene I really
04:39 - don't recommend that first of all as we
04:40 - all know on the coding the sound
04:43 - effect for this it is very important not
04:45 - one that's going to make me feel like I
04:46 - just have to go pee but it's very
04:48 - important to stay hydrated is everybody
04:51 - watching staying hydrated I don't want
04:53 - anyone feeling woozy especially myself
04:57 - stay hydrated I have my purple canteen
05:00 - of water here I also recommend that you
05:04 - eat lunch go your lunch you can watch
05:06 - why you eat lunch alright uh Gregory in
05:13 - the YouTube says I need to go to a
05:14 - dancing lesson oh my goodness wait a
05:17 - second isn't this channel really Jess I
05:19 - mean it's if there's no lessons involved
05:21 - but I would like this to be a dancing
05:24 - channel unicorns and rainbows and
05:26 - cupcakes what else is there
05:30 - yes kids thank you very much kittens and
05:33 - rainbows and cupcakes
05:34 - notice that look what I get I
05:41 - [Music]
05:45 - that's an it for right now I know
05:48 - whenever I start to pull a muscle in my
05:49 - neck we know it's a problem I'm actually
05:51 - been watching the world of dance which
05:54 - is a great show I don't know if it's a
05:56 - great show but I've been enjoying it
05:57 - lots of great dancers on there okay uh
05:59 - uh I am clearly not gonna be on the
06:04 - world of dance anytime soon but you know
06:05 - I have this YouTube channel I guess
06:07 - that's something I don't know why it's
06:09 - doing this anymore
06:10 - but I'm here okay wait so I was talking
06:12 - about patreon and I looked at the chat
06:15 - and got distracted
06:16 - okay so patreon I said I think I always
06:19 - plug my the two other things I like to
06:22 - plug I should do this in the opposite
06:23 - order are coding train Storenvy calm for
06:27 - some merchandise and also processing
06:33 - foundation.org processing foundation is
06:36 - a non-for-profit 501 C 3 corporation
06:39 - here in the United States we our mission
06:41 - is to do a lot of different things
06:43 - around code and education processing
06:46 - foundation maintains processing p5.js
06:48 - processing dot pi python mode and also
06:52 - does a lot of community and education
06:53 - and diversity initiatives you can read
06:55 - all about processing on the website and
06:56 - I encourage you to become a processing
06:59 - foundation member and I encourage you to
07:00 - do that before you do my patreon okay so
07:05 - um I know the Simon in the chat rightz
07:10 - come on I don't know if that means skip
07:12 - with all the dancing and just get to the
07:13 - card yep but you know some of the people
07:15 - they tune in know does anybody tune in
07:17 - for the dancing I don't think so every
07:19 - once a while somebody says that they
07:21 - tune in for the dancing okay uh does
07:25 - processing have a separate library if
07:27 - you say want to use the libraries in
07:29 - Eclipse I'm so glad that this question
07:31 - was asked by Jimmy in the chat oh and
07:36 - also before I get to don't let me forget
07:37 - about this Eclipse tech nerd people hope
07:39 - the fidgets better video tech nerd asks
07:42 - about discord I'm kind of old I guess
07:45 - relatively you know I'm young I'm young
07:47 - in many ways young at heart and youthful
07:51 - but I'm kind of like not so up on the
07:53 - current stuff you know I do have mom up
07:57 - on fidget spinners and Pokemon does that
07:59 - count no okay uh anyway um but what was
08:03 - I talking about
08:03 - discord there is a coding train discord
08:07 - I guess it's unofficial I don't know
08:09 - anything's official or unofficial and
08:10 - the reason there's also a coding train
08:11 - reddit reddit comm slash are slash
08:13 - coding train which I was really like I
08:16 - used it one week and then okay but down
08:18 - here we can go to coding train discord
08:21 - if discord is something that I should
08:24 - consider using as a platform I love to
08:27 - be able to expand and make ways for
08:29 - people in this community to to I'm
08:33 - reading I'm reading the check oh my gosh
08:35 - so which is the can't read see this is
08:37 - why I can't read the chat veritable
08:38 - t-test but you could you could check
08:40 - this out so I don't know I've this the
08:42 - slack channel has worked well for me for
08:44 - this patreon community the YouTube chat
08:46 - works well for the live sessions okay so
08:50 - the discord you can just find it here
08:52 - someone post this in the chat for those
08:54 - who are interested and maybe I'll try to
08:55 - check it out sometime okay I noticed by
08:59 - the way that I say okay okay okay okay
09:01 - okay a lot maybe that's the next one
09:03 - okay okay okay okay okay okay okay so I
09:12 - think that is all of my introductory
09:15 - stuff am I forgetting anything important
09:19 - what do you think soon the camera will
09:22 - shut off and off to go press that button
09:25 - so next up so what oh this is a setting
09:30 - on show later this is by K week man who
09:32 - is a contributor to coding train
09:38 - community and does a lot of greats has
09:40 - been making a lot of great machine
09:41 - learning examples I'm going to show this
09:42 - a little later I think what so that here
09:46 - are the things that I want to do today
09:47 - in the time that I am looking at my
09:50 - watch I want to do a follow-up video on
09:53 - the perceptron
09:54 - which was a coding challenge and it was
09:57 - finished this is the example running
10:00 - here this is a simple perceptron that's
10:02 - being trained
10:03 - to recognize points on one side of a
10:05 - line versus the other so I want to add
10:08 - some features to this and talk a bit
10:10 - more about it as well as talk about what
10:13 - the limitations of the perceptron are
10:16 - and why a multi-layered perceptron a
10:21 - neural network so to speak of many
10:23 - printer connected perceptrons expands
10:28 - the possibilities of what you can do
10:30 - with neural network based machine
10:32 - learning so that's kind of I'm not going
10:34 - to build the fully connected Network the
10:37 - multi-layer perceptron today but I want
10:40 - to leave myself with everything finished
10:42 - so the next time I come into a live
10:44 - session we can really start to build the
10:47 - neural network library I would also like
10:50 - feedback I guess not right now maybe
10:51 - I'll do a strawpoll or something I made
10:54 - this neural network library in
10:55 - JavaScript for some p5.js examples and I
10:58 - don't know if I should rebuild it from
11:00 - scratch as the tutorial videos or just
11:02 - do a processing version after think
11:03 - about that okay um nose touch yep this
11:10 - will be the okay song suggested by alka
11:12 - ok ok ok ok ok ok ok ok ok my nervous
11:16 - habit apparently is touching my nose I
11:18 - can tell that I'm getting like stressed
11:20 - out and figuring out the code stuff so
11:22 - that's item number one is to follow up
11:24 - on the perceptron coding challenge item
11:27 - number two is to follow up on the froggy
11:29 - frog Frogger coding challenge I have two
11:33 - things that I want to do I don't I won't
11:34 - be definitely be able to do both today
11:35 - the first thing is I want to do just a
11:37 - refactoring video so I want to look at
11:40 - there was so much spaghetti and kind of
11:41 - mess in that example that I made that I
11:43 - want to do a fourth part which just
11:45 - refactor zit and the major thing will be
11:47 - adding a Lane object the lane object
11:49 - storing a number of carves or logs and I
11:53 - probably also we realized that the cars
11:55 - and logs actually can beat not there
11:58 - goes can be the same object so I might
12:02 - rename that to obstacle this was
12:03 - suggested by me I am so me and so that's
12:07 - the other thing that I want to do I
12:08 - think I have time to do both those
12:10 - things I was thinking you know my coding
12:13 - challenges where I do a particular game
12:15 - all in one video
12:16 - tend to actually be viewed more so I
12:18 - thought I might try an experiment which
12:20 - is and I guess I won't do the same so we
12:22 - remind me which is I did the Frogger
12:24 - challenge in processing and it's in
12:26 - three parts it'll now be in four parts
12:28 - and I thought I would try to do like
12:29 - sort of a speed version of it since I've
12:31 - done it once already it might have an
12:32 - easier time of coding the whole thing
12:34 - from scratch in one video and then I
12:36 - would do that in JavaScript so that is
12:39 - [Music]
12:42 - that is that okay
12:45 - processing fidgets I know there's the
12:47 - the fidget spinner idea is very
12:49 - polarizing cuz you know it's kind of
12:51 - like come on really you're going to do a
12:53 - fidget spinner YouTube video at to
12:55 - coding tracking at the same time hey
12:59 - you're gonna sleep in her video that
13:01 - sounds interesting but there is a lot
13:03 - there is something there in terms of
13:06 - looking at angular motion some
13:08 - interactivity there's a really
13:10 - interested in thing that you might not
13:11 - think about which is that when you click
13:13 - on something and want to drag it around
13:15 - you've got to know where you clicked
13:17 - relative to where it is and this and
13:19 - with something spinning it all has to do
13:21 - with angles so there's actually a few
13:22 - interesting kind of graphics and math
13:26 - maths tidbits okay alright so I'm
13:36 - looking at the chat oh discord bot
13:40 - making thingy a tutorial on a discord
13:42 - bot I said I would do that so apparently
13:45 - I said I would do that oh it might have
13:47 - okay okay I'm so self-conscious I have a
13:51 - I have a self-consciousness problem let
13:58 - us begin it's been a while since we read
14:05 - from the coding train storybook a
14:09 - million digits a million random digits
14:13 - with a hundred thousand normal deviants
14:15 - now you might remember last time where
14:19 - we left off was four hundred and forty
14:23 - two thousand two hundred and two
14:27 - fifty two thousand seven hundred seventy
14:29 - six twenty one thousand three hundred
14:32 - and nineteen seventy four thousand one
14:35 - hundred and thirty-five three thousand
14:37 - three hundred twenty nine thousand seven
14:40 - hundred and two ten thousand eight
14:43 - hundred and forty seven eighteen
14:46 - thousand seven hundred sixty-three nine
14:50 - thousand one hundred and seventy seven
14:52 - eighty-five thousand two hundred eighty
14:55 - nine 27 thousand thirty one good night
15:01 - children don't let the bed bed but the
15:05 - bite the bed I was gonna make some sort
15:07 - of bites bits the bed bits bite don't
15:12 - let the bed bits bite alright then
15:18 - something I also like to do not let me
15:20 - I'll do this at the end I'll do my red
15:21 - Burns quote before I leave okay I know
15:24 - there's look you're 11 watched this
15:26 - before okay now we're really going to
15:30 - get started
15:30 - so with this perceptron video perceptron
15:35 - example let me think of what I want to
15:37 - do I want to make it a bit more
15:40 - interesting visually I think the two
15:42 - things that I can do is number one is
15:45 - right now this is just where do I create
15:50 - the training points right the training
15:53 - points are dividing points whether on
15:59 - one side of a line or another and that
16:01 - line is just y equals x so what I want
16:05 - to do is have a more flexible line I
16:08 - also want to reorient it so that I think
16:11 - about the screen is having zero zero
16:13 - maybe in the bottom left or in the
16:15 - center so I want to like map all the
16:18 - points I think would be good and then I
16:21 - want to visualize where the perceptron
16:24 - thinks the line is and where it actually
16:26 - should where it actually should be so
16:29 - I'll do that and then I also would love
16:33 - to actually visualize the perceptron
16:34 - itself the weights the inputs coming in
16:36 - that sort
16:37 - thing so um so that's what I'm gonna do
16:44 - okay what I say that I say okay a lot
16:52 - cuz now it's all I can ever think about
16:53 - Oh Calgon take me away I don't know if
17:01 - anyone will get that reference if that
17:02 - is a reference to get so this will be I
17:07 - think this will be coding I I somewhat
17:11 - regret making the perceptron a coding
17:13 - challenge because it's really more of a
17:15 - bunch it's really part of more of a
17:17 - tutorial series although I did like the
17:19 - idea of like hey let's make a perceptron
17:21 - it's a coding challenge
17:22 - maybe these follow-ups should be this
17:24 - one will be just coding coding challenge
17:26 - perceptron follow-up that's what it'll
17:28 - be alright so here we go hello welcome
17:40 - to a follow-up on my previous perceptron
17:45 - coding challenge so if you happen to
17:47 - watch the previous one if you hadn't you
17:48 - probably should go back and watch it
17:49 - link in the description i created a
17:52 - simple perceptron as' perceptron is a
17:54 - model of a single neuron that receives
17:56 - inputs and then produces an output and
17:59 - this is a very simple scenario where the
18:01 - output is only trying to guess whether a
18:04 - point is on one side of the line or the
18:07 - other is it above this line or below
18:08 - this line so in this follow-up video
18:10 - what I would like to do is really just
18:12 - refine this example nothing really about
18:14 - the mechanics on the perceptron itself
18:16 - but make this example a bit more
18:18 - sophisticated and allow for some more
18:20 - hopefully some possibly some more
18:22 - creative possibilities so um first thing
18:27 - I got a bunch of things I'm going to do
18:29 - I would list them all but I can't
18:30 - remember theirs
18:31 - I'm just going to tell you what the
18:31 - first thing is the first thing is I
18:33 - would like to and let me come over here
18:35 - to the whiteboard ah the whiteboard is
18:37 - black
18:44 - take two let me come over here to the
18:52 - whiteboard so what I did with the first
18:55 - perceptron was just used the raw pixel
18:58 - coordinates of the processing window I
19:02 - can't remember sighs it was but you know
19:03 - it's like a 640 by 480 window and zero
19:06 - zeros over here and you know this turned
19:08 - out to be the line and I was looking for
19:10 - points over here but the idea of using a
19:14 - neural network based system is typically
19:17 - to get some kind of data input that's
19:19 - not based on pixels so what I think that
19:23 - I want to do here is just redo this
19:26 - example and consider a Cartesian plane
19:32 - with zero zero in the center and why
19:36 - pointing up so where as this is 0 and
19:40 - this is 480 down here you know 480 would
19:43 - be kind of up here so I would like to
19:45 - just redo this whole example and then
19:47 - the line y equal X we should see as
19:50 - appearing like this the reason why I
19:53 - want to do this is the next thing I'm
19:54 - going to do is create a perceptron that
19:57 - will learn any division of data points
20:00 - so it doesn't just have to be a date
20:02 - division that's slicing it right down
20:04 - the middle
20:05 - so first let's make that change okay so
20:09 - how do I make that change hmm well where
20:13 - do I make the points I think I had this
20:15 - I had this point object and the point
20:17 - object makes a random point a random
20:21 - point with a random x-value and a random
20:22 - y-value what I'm going to do and I think
20:24 - you know I'm going to just make these
20:26 - now random values between negative 1 and
20:28 - 1 negative 1 and 1 okay so the random
20:32 - values are between negative 1 and 1 in
20:34 - some ways that's it done aha but now
20:37 - right before I show them what I want to
20:40 - do is I'm going to say px for like pixel
20:43 - X and I'm going to map X which has a
20:45 - range between negative 1 and 1 to 0 and
20:48 - width map is a built-in function in
20:51 - processing that takes a value with 1
20:53 - range and maps it to another it's very
20:54 - simple math
20:55 - and actually have a whole other video
20:56 - which I will try to link to that goes
20:58 - over the map function and why I could do
21:01 - the same exact thing so let's look at
21:04 - this except for with Y right what I want
21:08 - is why when the Y value is high I want
21:14 - it to be low in terms of when it's high
21:17 - I want it to be
21:19 - it's flipped right 0 0 instead of
21:22 - positive pointing down and points up so
21:23 - I want to reverse that mapping and the
21:26 - map function does that for you by saying
21:28 - hey when Y is negative 1 it should be at
21:30 - the bottom and when y is 1 that's a
21:32 - nicer way to say it should be at the top
21:33 - 0 okay now what happens if I were just
21:36 - to run this it kind of looks like a
21:39 - whole lot of nonsense right didn't seem
21:41 - to work well first of all I forgot I
21:44 - forgot a major thing I did the mapping
21:45 - but I'm still drawing the ellipse at
21:47 - those knit at those values let me say P
21:49 - X P Y ok good look at this there are all
21:55 - the points and you can see how they're
21:56 - divided but the line is drawn in the
22:00 - wrong place so where do I draw that line
22:02 - I draw that line right here okay so you
22:10 - know time out for a second I realized I
22:15 - forgot something else I wanted to add
22:16 - this I'm going to edit this out or
22:19 - macho's get this out but which is a
22:21 - comment and I should have opened with
22:23 - that but that's fine I'll come back to
22:24 - it
22:31 - there seems to be a lot of nonsense
22:32 - going on in the chat so I need to not
22:34 - look at that because it's very
22:35 - distracting to me okay right because I'm
22:40 - going to change the coming back so I'm
22:45 - just going to change the coordinates I'm
22:47 - bit of hard code new coordinates for the
22:48 - line we'll deal with that later
22:49 - but so I'm going to say zero comma
22:54 - height - with comma zero and we should
22:57 - see there we go there are all the points
23:01 - now what's going on before I had this
23:03 - thing in it in this program where I
23:06 - would draw a red or green ellipse
23:10 - whether or not the perceptron had
23:12 - guessed correctly and that's not working
23:15 - anymore because I am NOT doing the
23:18 - mapping anymore
23:19 - so I need to also just take this same
23:24 - exact math and probably I should package
23:26 - that into a function or make it part or
23:28 - you know what I should do I should make
23:30 - aha the point object should just have a
23:33 - function that's called get a get pixel X
23:39 - is a little bit of an awkward naming get
23:43 - pixel Y let's just call it
23:45 - forget about pixel X and pixel Y so I'm
23:49 - just going to calculate these on the fly
23:51 - whenever I need them and pixel X will do
23:54 - this return that mapping and pixel Y
23:59 - will return that other mapping there we
24:04 - go
24:04 - and then I could just get those values
24:06 - here and get those values here this
24:10 - should be the same but at least I took
24:12 - that mapping and put it into its
24:15 - separate function that way when I need
24:17 - it here I can say PT pixel X and point
24:22 - pixel y
24:24 - so rather than draw the ellipse at that
24:27 - point x and y I can trigger those pixel
24:30 - X if it's a Y functions like that it was
24:32 - a nice little like little addition I had
24:35 - there okay so now we have exactly the
24:37 - same program nothing is different
24:40 - only the
24:44 - nothing is different only the I looked
24:47 - at the chat again and it is out
24:49 - sorry met you edit point whenever I look
24:52 - at the chat I could hide the good come
24:56 - on people be nice to each other the chat
24:57 - you probably are and I just see the one
25:00 - word that makes it appear like you might
25:01 - not be nice to each other
25:02 - Oh me me Mom I've been doing vocal
25:12 - exercises I had a lot of sore throat
25:14 - throat issues this year they've all gone
25:16 - away vocal exercises are really helping
25:18 - all right back into the video what was I
25:21 - saying this is exactly the same program
25:27 - the only thing that's different is the
25:30 - points now live in a sort of traditional
25:34 - Cartesian plane and then I'm mapping
25:36 - those points on into the pixel space
25:39 - what I want to draw them great so let's
25:40 - step one of this follow up video
25:42 - complete let's do step two so what is
25:46 - step two I want to change what I want to
25:51 - change here is this if X is greater than
25:55 - Y I want to be able to have let's come
25:58 - over here
25:59 - any particular function so I could say y
26:04 - equals 3x plus you know plus two right
26:11 - that would mean if X is zero then if X
26:17 - is zero then Y is going to be at two if
26:21 - X is 1 Y is going to be at 5 so you can
26:26 - see this is that particular line so I
26:29 - want to be able to train the perceptron
26:31 - to recognize this versus this and I want
26:34 - to be able to change this formula I can
26:35 - make it negative two X minus three point
26:38 - seven I want to be able to have any
26:40 - generic formula for a line work with
26:44 - this example so let's add that into the
26:46 - code so I think the easiest thing for me
26:50 - to do and I'm just going to put it in
26:51 - this tab is to write a function I'm
26:53 - going to call it it's going to return a
26:54 - float
26:55 - I'm actually gonna call it f is that
26:57 - like a terrible thing to do f of X being
27:00 - the function for I think I'll call this
27:02 - like lying and whatever I'm gonna call
27:04 - it f of X and I'm going to say return
27:07 - what did I say three at three times X
27:11 - plus two so this function basically
27:14 - represents the formula for the line and
27:16 - I'm going to say y equals M MX plus B
27:20 - right that's the formula for a line
27:22 - we've seen this in other so funny how
27:25 - all these examples have this like two
27:27 - dimensional space with a line in it cuz
27:29 - this is the simplest way to start
27:30 - working with data and visualizing that
27:32 - data but ultimately as I get further
27:34 - along these machine learning examples
27:36 - we're gonna have these you know n
27:37 - dimensional spaces that we can't even
27:39 - fathom or visualize okay okay so now the
27:45 - one thing that's a little bit of an
27:46 - issue with this is my mapping is between
27:49 - negative 1 and 1 and negative 1 and 1 I
27:51 - want to make sure the line isn't kind of
27:53 - off and out of our view so what I'm
27:56 - actually going to do is I'm going to
27:58 - have this be zero point three times X
28:01 - plus your opponent again I could have
28:03 - changed the mapping to between negative
28:04 - 10 and 10 but I kind of like this idea
28:06 - between negative 1 1 for every Z so I'm
28:08 - going to change it to that and now what
28:10 - I'm going to do at least just want to
28:12 - draw that line so I'm actually not going
28:13 - to change any of the code in this
28:15 - example I'm just going to see can I draw
28:17 - that line so this is where I previously
28:19 - drew the line so what I want to do is I
28:22 - want to draw a line from neck what up
28:27 - from where I want to draw I want to get
28:29 - the Y value for when x is 0 when X is
28:34 - negative 1 and the Y value for when X is
28:37 - 1 and then I can draw a line between
28:38 - those two points so ok so I'm going to
28:42 - say negative 1 F so let's I'm just going
28:46 - to say x equals negative 1 y equals f of
28:50 - X this is x1 y1 and then the second
28:57 - point is x equals positive 1 and y
29:03 - equals F of x2 y2 is f of
29:07 - - so I'm going to draw a line from x1y1
29:10 - to x2y2 and you know this is a perhaps a
29:13 - very long-winded way of writing this but
29:16 - just to see what I'm using is that
29:18 - formula for a line to get the
29:20 - corresponding corresponding Y to a
29:23 - certain X but can we run this ooh what's
29:27 - wrong with this function oh whoops I
29:30 - should say float X I I lifted JavaScript
29:34 - land for a second I must set the type
29:35 - for that variable probably everybody in
29:37 - the chat was probably shouting me about
29:40 - that okay where's the line I don't see
29:42 - it why don't I see that line ah guess
29:45 - what guess what I forgot I have to do
29:48 - that napping hmm all right all right
29:51 - everybody settle down I'm going to do it
29:54 - I'm going to really I would never use
29:55 - that pixel Y so I'm going to say point
30:00 - p1 equals a new point which is at
30:04 - negative one F of negative one
30:06 - I'm going to do I'm going to write this
30:07 - in a bit of a crazy way p2 is a new
30:12 - point ah new point between at one F of
30:15 - one okay and then I'm going to draw the
30:18 - line from p1 pixel X can I please type
30:26 - today P 1 pixel X PFS word this part I'm
30:30 - typing here p1 pick the Y and then p2
30:35 - pixel x p2 pixel Y but look at this why
30:39 - am I getting an error here I want to
30:41 - make a point at a specific X&Y what is
30:44 - point do what is the point object - I
30:47 - can make a point at a random point but I
30:51 - can't seem to make one at a specific
30:52 - point well guess what guess what in Java
30:57 - processing is Java you can do something
31:00 - called overloading just so happens so
31:03 - I'm going to cover overloading
31:04 - constructor overloading in this case I
31:06 - could say I want to have another way of
31:09 - creating a point and I'm going to use
31:12 - the underscore kind of ugly underscore
31:15 - notation but what I want to do is pass
31:18 - some arguments to the constructor I
31:19 - don't want to call them XY because the
31:21 - point objects variables are X and y I'll
31:23 - call them an X underscore and that's
31:26 - going to be a way that I can do this I
31:29 - could also figure out the label but I'm
31:32 - not going to worry about the label in
31:34 - this case because I'm not using I'm not
31:36 - labeling these points I'm using them
31:37 - just to draw the line okay so now that
31:40 - went away and I should be able to
31:42 - there's that line so there's the like oh
31:45 - this is a lot of work just to draw that
31:46 - one line and you can see though I can
31:50 - change the formula for the line if I'd
31:51 - say you know minus negative point two
31:54 - now the line is further down if I say
31:57 - minus 0.3 you down the line is pointing
32:00 - the other direction so I can now create
32:02 - any formula for the line and visualize
32:05 - that in the window time out new
32:11 - constructor don't forget about
32:12 - controlling at this the chat Simon and
32:15 - alka are both pointing out all the
32:16 - things I missed while I'm doing it but I
32:19 - got them I did okay right how am i doing
32:21 - so far timewise I'm taking a little
32:27 - pause here this will get edited out and
32:29 - I'm going to the next thing I'm going to
32:32 - do is now I have to add that formula
32:35 - into the into calculating the label
32:41 - fourteen minutes or so okay um wonder
32:45 - how many different parts I should do
32:51 - equation parser Oh an equation parser
32:53 - and allow a string to make any equation
32:55 - work ooh I like this everybody's
32:57 - requesting sup in the chat that whatever
33:00 - I used processing everywhere in the chat
33:02 - says can we use Java Script can we use
33:03 - javascript then I'm telling using Java
33:04 - Script how come so processing huggers
33:06 - are processing I can't kick keep it all
33:07 - together folks trying I'm trying okay um
33:12 - alright I'm coming back into the video
33:15 - okay so now what's going on here this is
33:20 - now so now that I have this formula for
33:22 - the line I need to change this no longer
33:27 - do I want to check just is X grade
33:29 - why how do I determine and I'm looking
33:32 - for my eraser how do I determine whether
33:35 - a given point is above or below align so
33:41 - let's say I have this line and the line
33:45 - is y equals 3x plus 2 I know it should
33:49 - be all right let me try to be more
33:52 - accurate about this I'm going to point
33:54 - it up more and I have some points so
33:59 - let's say I have the this is the
34:02 - Cartesian plane here I'm kind of drawing
34:05 - this as a mess ok so let's say I have
34:08 - the point X X comma X is 3 so if X is 3
34:18 - then this point is 3 comma 11 right I
34:22 - think because 3 times 3 is 9 plus 2 is
34:24 - 11 so if I had the point 3 12 it's above
34:30 - if the Y is greater than the Y that
34:32 - would be on the line and if I have the
34:34 - point like 3 comma 3 it's below if the Y
34:38 - is less than the Y that would be on the
34:39 - line so I can do that for any value of x
34:42 - so if I take any value of x all you do
34:44 - is calculate the point that's on the
34:45 - line and do whether it's greater than or
34:47 - less than so let's add that into the
34:49 - code so here what I want to do is I want
34:53 - to say a lot I'm going to say line y
34:58 - equals f of X all right I'm going to
35:01 - calculate the actual Y value for this
35:06 - particular X on the line then all I need
35:09 - to do is ask is the Y value above it
35:13 - then it's a 1 or is it below it then
35:16 - it's a negative 1 so hey that was easy
35:18 - that's done now and there we go so we
35:22 - should be able to see this perceptron
35:24 - over time learning to figure out whether
35:27 - points are above or below that line it's
35:29 - a little bit stuck right now you can see
35:31 - that it's and this probably has to do
35:33 - with learning rate and you know how it
35:35 - started how the initial weights were
35:36 - started but so I want to kind of figure
35:38 - out like why is it kind of stuck so
35:40 - there's another thing I really
35:42 - like to do here which is visualize what
35:46 - the perceptron currently thinks is the
35:49 - line and let's just so what do I mean by
35:52 - what the perceptron currently thinks
35:53 - well remember the perceptron is oh did I
35:58 - not add the bias to this oh whoops
36:02 - oh whoops oops
36:06 - no wonder it can't do it did I talk
36:09 - about the but does anybody remember does
36:15 - anybody remember last time did I think I
36:18 - talked about the bias but I don't think
36:20 - it's in the edited video that was
36:22 - published right oh sorry Topher Jay you
36:27 - lost power at the office I talked about
36:31 - the bias in the live stream but I didn't
36:37 - so I have to fix that all right we're
36:41 - gonna fix this you talked about it but
36:43 - didn't ends Bennett yeah but the
36:44 - question is did I talk about it in the
36:48 - edited version of the video that's
36:50 - published it's one thing to talk about
36:51 - on the stream but people later don't
36:53 - watch the very few people watch the
36:55 - archive stream they generally watch the
36:56 - edited versions so if I go I'm talking
37:00 - about what's in this particular video
37:03 - here which is 45 minutes hey no extra
37:07 - ads no extra ads what happy big yeah
37:12 - okay right leg towards the end here
37:17 - I can't watch myself this is very
37:25 - uncomfortable oh god I sell I'm really
37:33 - oh yes can you guys really stand
37:34 - listening to me oh my god I don't see
37:36 - anything about the bias in here oh wait
37:40 - no no it's there I must have talked
37:45 - about it right I must have talked about
37:49 - it right yeah I did in the edited video
37:51 - because it's there okay yeah there we go
37:53 - okay I'm touching my nose and listening
37:56 - to myself I'm saying okay okay okay
37:57 - all the nervous tics are coming out yeah
38:08 - so why is this getting one reason reason
38:12 - why this is getting stuck and I
38:14 - mentioned it in the previous coding
38:15 - challenge and I completely forgot about
38:17 - it until now the bias so let's talk
38:20 - about why does there need to be a bias
38:21 - here's the thing let's consider the
38:25 - point two zero zero when I say well this
38:30 - is the point zero zero y equals zero
38:34 - times X plus two the corresponding Y
38:38 - value is 2
38:39 - so zero is below the line here's the
38:43 - thing with my perceptron as I send in
38:48 - the x value and the y value if I send in
38:51 - zero zero no matter what these weights
38:53 - are if I multiply the inputs by the
38:55 - weights in something I'm always going to
38:57 - get a zero coming out which can't be
38:59 - right and this actually in this formula
39:02 - for a line y equals n X plus B these
39:08 - weights are actually just describing the
39:12 - rise in the run those are the right
39:14 - terms of the line the slope the
39:16 - numerator and the denominator you can
39:18 - almost think of this as I think weight 1
39:21 - divided by weight 2 times X plus B for
39:24 - bias the bias being the y-intercept of
39:28 - that line where is it so what the bias
39:31 - is in a perceptron is another input that
39:35 - always has the value of 1 but has a
39:38 - different has its own weight called the
39:41 - bias weight and now you can think of
39:43 - this formula as
39:44 - y equals wait for Y / wait for X or is
39:49 - it the other way around somebody's going
39:51 - to tell me in the chat plot times X plus
39:54 - wait for the bias times 1 so hard this
39:58 - is sort of
39:59 - times X does this make sense so this is
40:03 - really what the perceptron is learning
40:05 - we know the formula for the line and we
40:07 - could do all this with maths however we
40:11 - can train a neural network system a
40:13 - perceptron to figure out the formula for
40:16 - this function the idea of neural
40:18 - networks are to solve solve a function
40:22 - on how's the best way to say this time
40:25 - out for a second I need some wording
40:31 - example formula I'm looking at the chat
40:42 - yeah this is just the beginning of using
40:48 - neural networks we are using a neural
40:50 - network a simple perceptron to figure
40:52 - out the formula for a line the function
40:55 - to get a Y with a given to get an output
40:59 - with a given set of inputs but what if
41:01 - those inputs are you know there's a
41:03 - thousand inputs and we can't figure out
41:06 - what should really we don't have the
41:08 - math formula for a line but we'll be
41:10 - able to use a neural network in the same
41:12 - way to solve to to solve that function
41:16 - that's not the right way to say it
41:17 - either
41:17 - I like losing my confidence here I'm
41:22 - gonna try this one more time neural net
41:23 - we're saying that can make its own
41:24 - functions that's what I'm trying to say
41:26 - Universal function approximator thank
41:28 - you roll this back back roll the tape
41:32 - back and this slope with increasing
41:34 - value of X what is the value of
41:35 - coordinate Y we're going to we're going
41:36 - to find out this is right okay a neural
41:42 - network is often referred to as a
41:44 - universal function approximator thank
41:47 - you to the chat who just posted that
41:49 - terminology right we with a simple like
41:52 - two-dimensional space and a formula for
41:53 - a line we can do the math directly but
41:55 - here you can imagine once our data input
41:59 - set guess which we have all this data
42:00 - with lots and lots of inputs beyond that
42:02 - are in n-dimensional space we want to be
42:05 - able to walk approximate a function to
42:07 - work with that data and
42:08 - and this is we're seeing this beginnings
42:10 - of that here okay so let's go now and
42:12 - implement the bias in the code and I
42:16 - heard the camera just shut off so I'm
42:18 - going to press that alright so for the
42:31 - bias there's a couple things I want to
42:32 - do number one is I'm just going to add
42:35 - that to the point I'm going to say it
42:37 - has float b4 bias which is call it bias
42:39 - and bias is always equal to 1 so every
42:42 - point is going to have an x and y and a
42:44 - bias and then the perceptron now needs
42:52 - to have three weights needs to have the
42:55 - weights for the two inputs the X and y
42:57 - and the bias and one thing I might do is
43:01 - give the perceptron constructor a number
43:05 - of arguments so that we could have a
43:08 - sort of more generic Piet perceptron and
43:11 - I can say weights equals new float N and
43:13 - then when I create the perceptron I want
43:17 - to say perceptron three and then here
43:22 - oh this was just something I had just to
43:24 - test the code now the inputs should
43:29 - always be an array of three things and
43:35 - is there another here training should
43:39 - always make sure to include that bias
43:41 - and I think did I miss it anywhere else
43:44 - I hope I didn't let's find out does it
43:52 - have is it is it working so here's the
43:54 - here's the other thing I can't really
43:56 - tell if it's working or not it does
43:58 - still seem to be stuck so I probably
44:02 - missed something
44:04 - and I you know I should go through and
44:07 - debug this but I think everything is
44:13 - actually alright because the inputs I is
44:20 - still the bias which is one
44:22 - um hold on timeout I'm just this is
44:28 - going to be added down just thinking for
44:30 - a second this is bothering me um I think
44:37 - what I want yeah I just got unlucky it
44:44 - just didn't I just got unlucky the last
44:45 - time so it actually is working a lot all
44:52 - right let me come back so I'm going to
44:54 - go back to where I just changed that I
45:01 - think I was able to get all of the and
45:04 - so let's run this again we can see that
45:06 - it's still a little bit stuck I'm pretty
45:08 - sure that I have the correct code now
45:10 - but here's a way that I'm going to be
45:13 - able to determine whether it's working
45:15 - or not what I want to do now is also
45:19 - visualize what the perceptron currently
45:22 - thinks is the line so remember this is
45:25 - where I drew the the actual line the
45:29 - correct formula for the line what I want
45:32 - to do now is let me I think I could do
45:36 - this with the perceptron so I can say
45:38 - point P 1 equals new point negative 1
45:43 - and I'm going to say what did I call the
45:46 - perceptron brain brain dot guess why
45:53 - negative 1 so I'm going to ask the and
45:57 - p2 is one brain dot
46:01 - guess why and then I'm going to draw the
46:04 - line oh let's call this P 3 and P 4 so I
46:09 - am going to attempt to draw the virginal
46:13 - line that the perceptron thinks and this
46:15 - should be one so now if I go into the
46:17 - perceptron and I say I already have a
46:23 - function called guess guess why a little
46:25 - bit awkward here naming wise guess why
46:27 - and I have an x value the formula for
46:32 - the line so the slope should be
46:35 - weights index 0 / weights index 1 and
46:41 - the y-intercept should be weights index
46:45 - 2 so I should return X M times X plus B
46:54 - so something's happening here but I
46:58 - think I'm off right maybe what I meant
47:03 - to say was weights 1 / weight 0 so this
47:13 - is the line trying to learn boy it's
47:17 - really not doing a very good job let's
47:22 - run this again it's getting stuck right
47:26 - I have to but annealing means crowd is
47:35 - asking about the reducing the learning
47:37 - rate over time which I was thinking of
47:39 - doing let me let me step out of the
47:41 - tutorial for a second and give myself a
47:43 - lower learning rate yeah I think I have
47:48 - some I definitely have something off
47:50 - hold on I've got two let's look at my I
47:59 - kind of want to look at the
48:01 - [Music]
48:09 - let's think about this thinking here I'm
48:14 - looking way to get the chat for by
48:16 - converting to pixel space I think I am
48:20 - yes right
48:26 - um let's look at what those let me go
48:36 - back to we go back to this way this is
48:41 - like where I need to play this music my
48:44 - debug is using money because it looks
48:47 - like correct there but just flipped
48:49 - right W 1 divided by 0 times X and I not
48:55 - [Music]
48:59 - yeah I did that W it should be W 1 I
49:02 - knew that's what should be I'm looking
49:09 - at the channel oh yeah I know I need to
49:14 - cry there's so many things I want to add
49:16 - to this I was just trying to get this
49:17 - one I guess I'm gonna I'm gonna do what
49:19 - I didn't want to do but there's no
49:20 - reason there's no reason not to I'm just
49:22 - going to go look at my example that I
49:23 - made a long time ago and see what I did
49:26 - there so this is my example from a long
49:29 - time ago that you can see that it's
49:31 - behaving more like you would expect so
49:35 - let's see let's look at some of this so
49:39 - I also in this example I made X min x
49:42 - max I made a coordinate space that has
49:45 - oh I have this like tiny learning rate
49:49 - three training K same sort of deal here
49:53 - and I draw the line now get the weights
50:02 - and what's going on here with this
50:04 - because I'm trying to probably convert
50:06 - it to pixels here this is the right idea
50:10 - 0/1 so this one I did 0/1 oh yeah
50:18 - formula is there's a way to figure this
50:20 - out of course all of these should add up
50:25 - to zero right let me take a little break
50:27 - here right whoops all of these weights
50:41 - zero times X plus weight one times y
50:48 - plus weights two times B all of this I
50:53 - know I'm off you can't see it more
50:54 - equals zero
50:55 - sorry about that now let me turn the
50:57 - camera and so I can say let me just
51:06 - write this way weight 1 times X zero
51:09 - times X plus weight 1 times y plus way 2
51:11 - times B all this should equal 0 so y
51:14 - equals oh yeah look at this Oh something
51:19 - I'm gonna put this in the video because
51:26 - this is where my mistake is happening
51:29 - all right we minimize this
51:39 - all right so so I think I need to take a
51:46 - closer look at this and figure out
51:48 - what's if this is really right I was
51:50 - just kind of trying to guess so there's
51:52 - a way we can actually do the math for
51:53 - that properly
51:54 - remember the perceptron right the X is
51:57 - multiplied by a weight the Y is
51:59 - multiplied by a weight the bias is
52:01 - multiplied by a weight all those are
52:03 - summed so before we left for the line
52:06 - that it's learning is actually the zero
52:08 - weight times X plus weight index one
52:13 - times y plus weight index two times B
52:16 - all of this should equal zero so that
52:19 - means weight index 1 times y should be
52:22 - weight next 2 times B minus weight index
52:26 - zero times X and then Y should equal
52:31 - weight to divide it by weight 1 times B
52:35 - minus wait zero divided by weight 1
52:38 - times X I think that's right it's pretty
52:44 - different than what I have
52:45 - let's take a look
52:54 - Oh Oh
52:59 - there's a major error here even before I
53:04 - got to this thank you to Ethan Elliot in
53:09 - the chat I forgot to initialize the bias
53:12 - in this constructor what a disaster
53:16 - so probably do save me from myself I'm
53:20 - just going to initialize it up there
53:21 - wonder if that's really good so I never
53:23 - actually even had a bias so I think this
53:27 - is actually working but I'm not
53:28 - visualizing this line perhaps correctly
53:31 - so let's go back now and let's see where
53:35 - do I want to do that I'm going to say y
53:40 - equals so let me let me use the formula
53:47 - that I just used return so let me do
53:51 - this I'm just going to create some
53:55 - shorter variable names to make this
53:59 - easier to look at and I'm going to say
54:04 - return looking over here at that formula
54:08 - I wrote over here I'm going to say
54:10 - return ww2 divided by W 1 times B times
54:23 - sorry times bias o times 1 the vise is
54:28 - always 1 so W 2 divided divided by 1
54:31 - plus W 0 divided by W 1 times that x
54:37 - value now let's take a look and see now
54:42 - if things are working as they perhaps
54:45 - should I think you could see that it's
54:49 - actually I flipped somewhere - am I
54:51 - missing a negative oh this should be
54:53 - negative ha ha ha
54:55 - that's why and
55:00 - [Music]
55:05 - - w - I'm just curious here I take this
55:11 - out I'm just bear with me this could be
55:21 - edited out this part here hold on let me
55:32 - go back and look negative wait - - wait
55:41 - zero times X so why did I
55:55 - all right what hold on should this be
56:01 - negative that should be negative to know
56:06 - well clearly it should be why is that
56:11 - negative also this is where I left
56:16 - liftoff or you can see that it's in the
56:19 - wrong place but it's learning my first
56:23 - two equations on the whiteboard weren't
56:25 - equivalent oh oh this should be negative
56:32 - [Music]
56:36 - I'm making a lot of mistakes today it's
56:39 - very hard to do this live on YouTube
56:41 - although I'm sure lots of other people
56:43 - wouldn't make as many mistakes as me
56:46 - it's because I'm only having tea all
56:52 - right
56:53 - matcha I am so sorry if you need to go
56:56 - way back to where I switch this to
57:01 - negative this looks very close but it's
57:09 - kind of off right thank you to the chat
57:13 - somebody in the chat just told me that
57:16 - my equations are wrong and they are this
57:20 - should be negative right because this
57:22 - all of these had up to zero so I need to
57:24 - take if to make this equivalent y1 times
57:28 - y equals negative Y W to W 1 times y
57:32 - equals negative W 2 minus negative W 0 X
57:36 - that's going to fix it ok so now I'm
57:40 - going to say negative here and we're
57:44 - going to run this and we're going to
57:46 - watch the perceptron overtime and you
57:49 - can see as it's correcting all those
57:51 - circles are turning green
57:54 - with this learning rate slowly over time
57:56 - the line is converging to the correct
57:59 - spot
58:02 - [Music]
58:05 - but I perceptron learning line so um you
58:09 - know if there's going to be a part three
58:10 - in a part four to this because I think
58:11 - I'm gonna wrap up this particular video
58:13 - there's some other things that I wanted
58:14 - to add to this but at least now in this
58:17 - video I've added the bias I've made it
58:20 - so that I have a Cartesian space I can
58:22 - work with and I can work with any
58:24 - formula for a line as you can see life
58:27 - is just one big refactoring and there's
58:30 - so many things I could do to refactor
58:31 - this and visually I still don't
58:33 - necessarily love what I have here in
58:35 - terms of explaining what's going on but
58:37 - at least now let's just before I go
58:39 - let's make a new formula shout out your
58:41 - numbers to me nobody can shout out to me
58:45 - eight nine times X plus point two or
58:50 - let's do minus point two minus 0.1 let's
58:53 - just have a different formula for a line
58:55 - and see that this again works we can
58:58 - also probably have a much better sense
59:00 - of what learning rate is doing like look
59:03 - what happens if I make the learning rate
59:04 - point two right now you can see how it
59:07 - makes these very large movements so it
59:10 - gets to the correct answer very quickly
59:13 - but it can't kind of do the fine detail
59:16 - to really find the correct spot and if I
59:19 - make the learning rate really
59:20 - ridiculously small you know you can't
59:23 - even see mean it is in theory this line
59:25 - is moving it's so small that I can't
59:27 - even see it let's not be so crazy let's
59:29 - do that all right I can't even find the
59:32 - line the line currently isn't even in
59:34 - the space because remember it it starts
59:35 - with something random let's run this
59:37 - again so this line is moving but it's
59:41 - just really really really slow so it's
59:44 - all about finding and that learning rate
59:46 - can change over time I could start with
59:48 - a large learning rate I should make a
59:49 - slider to adjust the learning rate I
59:51 - could start with a large learning rate
59:52 - so it gets close so look at that it just
59:54 - pop locked right in and then I could
59:57 - lower the learning rate for those
59:59 - refined motion movements okay so a
60:01 - couple things I want to do I think I'm
60:03 - going to make a couple follow-up videos
60:05 - on this they'll appear at some point but
60:07 - there was a great comment in the
60:09 - original first version of the coding
60:11 - challenge about adding data that is not
60:14 - part of the
60:15 - training set which of course is very
60:16 - important in machine learning so I'm
60:18 - going to do that in the next follow-up
60:20 - to this perceptron coding challenge
60:22 - thanks for continuing to watch okay yeah
60:28 - get a discord and you can shout at me
60:33 - alright yeah you could change the boy
60:38 - not that I really
60:39 - yes follow up on the follow up videos
60:42 - alright so what am i doing how am I
60:44 - giving timewise um I used up my first
60:47 - hour so I wonder if I should move to my
60:53 - Frogger refactoring let me show you what
60:57 - this comment was I pinned it if I go
61:00 - back to the perceptron what happens if I
61:05 - google perceptron Schiffman what's the
61:07 - chance there it is
61:11 - what is this 2006 whoa is this really
61:18 - gonna come up this is from over ten
61:19 - years ago oh my god you were just
61:27 - destined to repeat yourself every 10
61:29 - years with new languages and frameworks
61:30 - long overdue this is from 2006
61:32 - apparently I've started working on a
61:34 - series of processing examples that
61:35 - implement neural networks yes I spent
61:38 - some quality time with artificial
61:40 - intelligence by George Luger I've used
61:43 - that book I suppose look at this I
61:45 - originally did these Oh Erin steeds
61:47 - website what's this lean this artificial
61:51 - intelligence libraries for processing or
61:53 - Java ah Wow this still exists this is
61:58 - amazing okay uh Ola I will take my
62:01 - little tour through creative coding
62:03 - history later I think that I should try
62:11 - to do the Frogger refactoring
62:14 - let me sorry I got sidetracked um I
62:21 - wanted to get to the perceptron
62:23 - I wanted to show so too much to do
62:28 - let me get to this so I pinned this
62:30 - comment only got another ad who would
62:35 - seize that why do I put ads on my videos
62:37 - so what makes it money off of them
62:39 - anyway
62:40 - okay how do I beat this how there we go
62:44 - okay I should click on the animate two
62:47 - cents or whatever
62:48 - alright so let me uh let me read this
62:53 - comment one thing you should definitely
62:54 - do is try your perceptron with new data
62:58 - you can create another hundred points
63:00 - exclude these points from training and
63:02 - test the perceptron with these points a
63:05 - cool way to test is add a point to click
63:07 - on the mouse and let it label it from
63:08 - the perceptron and then some nice
63:11 - feedback so I wanted to do this is the
63:13 - next thing I wanted to do of course this
63:15 - could be a great exercise for anybody
63:17 - watching
63:18 - I'm just getting ad blocker no I don't
63:22 - kick it an ad blocker because I support
63:23 - and I don't know what okay and so our
63:28 - YouTube bread actually I should sign up
63:30 - for YouTube bread that I should do
63:33 - because I like to support people on
63:36 - YouTube I'm trying to do stuff look
63:41 - here's another okay oh yeah look at
63:43 - these suggested videos like which one
63:45 - should I watch right now all right I've
63:47 - distracted um so how do people feel oh
63:53 - don't click on your own ads that is
63:55 - illegal okay
63:56 - I shall not click on my own ads I hereby
64:03 - affirm and I swear I affirm on the
64:07 - billion random digits bug mm-hmm do you
64:14 - Daniel Chief Mon solemnly affirm on the
64:19 - a million random digits with a hundred
64:21 - thousand normal deviants in the RAND
64:22 - Corporation that you shall not click on
64:25 - your own ads I do do so affirm my
64:30 - fingers are crossed
64:31 - okay
64:33 - okay hi so let's do a straw poll I maybe
64:48 - I shouldn't I should just yes I think
64:55 - Simon is asking that the line is off and
64:57 - it's never I don't have enough training
65:00 - data nor do am i refining the learning
65:04 - rate in such a way that it's ever going
65:06 - to be perfectly precise I do believe
65:10 - that the perceptron would work and get a
65:12 - perfectly precise line if I if I for
65:17 - example a couple ways I could do that is
65:19 - if I had many many more training points
65:22 - so now I have a thousand training points
65:24 - so we can see it learning over time to
65:28 - correct its guesses and if I did
65:32 - something where eventually like I did
65:34 - something where I think it's called
65:35 - annealing where I changed the learning
65:39 - rate over time so I could start with a
65:42 - high learning rate and then lower that
65:44 - learning rate to refine and kind of get
65:46 - it exactly in position I dig you may now
65:49 - kiss the book it did I just marry the
65:52 - million random digits books because
65:54 - that's a little bit weird all right what
66:04 - do you guys think I'm trying to decide
66:07 - if I want to do more with the perceptron
66:09 - or refi feel like I want to refactor the
66:11 - Frogger because I'm not going to be back
66:13 - for a while and I feel like I can't let
66:16 - that Frogger code stand I mean I'm out
66:20 - trust me I'm all about just make it work
66:22 - messy code have fun to worry about it
66:24 - too much but I do feel like yeah so yes
66:29 - I mean that would be a great exercise
66:34 - if David in the chat asked is Daniel a
66:37 - professor or a teaching assistant
66:39 - unfortunately they somehow gave me some
66:41 - sort of professor like title here but
66:43 - really I'm just I'm like whatever is
66:45 - lower than a teaching assistant that's I
66:47 - think that that works for me just fine
66:49 - okay so I'm going to go to Frogger let's
67:00 - open up Frogger I want to show by the
67:03 - way somebody on Twitter shared with me I
67:08 - want to say if you're going to share
67:10 - stuff with me on Twitter please share it
67:12 - too at Schiffman I don't really check
67:13 - the coding trains Twitter but I did
67:15 - check it
67:16 - they just auto post stuff from YouTube
67:18 - but I did check it right before because
67:22 - I have it on this diss login for live
67:24 - streaming and at Jason ma on Twitter
67:29 - created and there's a gif of it here a
67:33 - version of the Frogger game that based
67:36 - on the code that I made you could see
67:37 - added colors and different you know
67:40 - different sizes and speeds and multiple
67:42 - lanes score and a timer and all that
67:44 - stuff's great example alright and then I
67:52 - wrote CI and I replied format Schiffman
67:54 - because that's what I'm better at doing
67:58 - okay so let's see where did we leave
67:59 - this at so this was this was Frogger
68:06 - let's see if I can at least defeat it
68:08 - once
68:09 - ah come on
68:15 - got it yay you just watched me play my
68:23 - own
68:28 - so now I'm going to so what I would like
68:31 - to do is I'm going to do a refactoring
68:33 - video the main issues I mean there's so
68:38 - many things that could be improved but
68:40 - this is a major problem this hard coding
68:43 - of all of these different objects so I
68:46 - think a way the other thing is this log
68:49 - clasp my discoverable is unnecessary so
68:53 - I'm going to just rename this to
68:54 - obstacle so a car and a log are
68:57 - different kinds of obstacles they can
68:59 - just both be an obstacle object then I'm
69:02 - going to create a lane class and so I
69:09 - will configure a bunch of different
69:11 - lanes and each lane will have the color
69:15 - of the vehicle the speed of the vehicle
69:19 - may be the type you know there's there's
69:22 - a variety of different ways that I could
69:23 - approach this so that's what I am going
69:27 - to do I think it'll be better if the
69:29 - Frog would snap the log it lands on but
69:32 - if it's too far off of the log and fall
69:34 - into the water
69:35 - that is a good idea alka so I think what
69:38 - I'm I approach here is more to refactor
69:41 - the code and not actually improve the
69:43 - gameplay although that that would be
69:45 - useful for another video as well but you
69:46 - know I'm not going to add score in that
69:48 - kind I just want to make the code easier
69:49 - to work with
69:52 - I should calculate the learning rate
69:55 - using the error be better than the
69:57 - number of iterations that is a very good
69:59 - point about the perceptron I shouldn't
70:01 - mention that can somebody somehow hold
70:04 - on I was keeping a text file is it open
70:12 - still open recent untitled maybe no so
70:17 - sometimes I try to keep notes for next
70:20 - time next time
70:26 - a perceptron learning rate tied to error
70:35 - a data that is not part of training set
70:41 - visualize these were the other things I
70:43 - want to do visualize the perceptron
70:45 - itself and then why is one perceptron no
70:55 - good so these are the things I didn't
70:57 - get to today add the mo momentum I'm
71:06 - sorry I'm reading the oh there's all
71:08 - sorts of stuff going on the chat all
71:13 - right yeah we're going to add color I'm
71:15 - going to add color in this because the
71:16 - lanes can have a color I think I've even
71:19 - it's just sort of random okay so here we
71:22 - go
71:32 - I don't know why playing the timpani
71:36 - sound it's my favorite sound effect that
71:38 - I have what time is it I have 45 minutes
71:42 - so whatever happens happens in this 45
71:45 - minutes
71:50 - [Music]
71:55 - this Tiffany sound is still going it
71:58 - smells different
72:02 - hello I am back for another Frogger
72:06 - video so this is a guest part for at
72:09 - this point of the Frogger coding
72:11 - challenges in some ways this was
72:12 - unnecessary but I did do feel like the
72:16 - first three parts were a demonstration
72:18 - of what happens when you just try to
72:20 - figure out stuff from the fly you're
72:21 - kind of rushing I do not play this game
72:25 - for 45 minutes please hello welcome to
72:32 - what is now somehow part 4 of my Frogger
72:35 - coding challenge series of making the
72:37 - game Frogger so in that at the end of
72:39 - part 3 I have this and a version of the
72:41 - game that I can actually play here and
72:44 - I'm in a second I'm going to get to the
72:46 - top so what I want to do though so
72:52 - usually I think that for the part the
72:54 - first three parts were in some ways an
72:57 - illustration an example of what happens
72:59 - when you rush through code you're trying
73:00 - to figure out stuff on the fly and
73:01 - things start to get very messy I'm like
73:03 - I'll fix this later and you know I tried
73:05 - very I'm don't get me wrong them all for
73:07 - messy code and just having fun and
73:09 - trying what works but I do think this is
73:11 - an opportunity for me in my videos to
73:15 - take a look at what it means to refactor
73:17 - code so what I would like to do in this
73:18 - video is change very little really at
73:22 - the end of this video I would be happy
73:24 - if what you see is exactly this result
73:26 - but the code has been rewritten in such
73:29 - a way that it's a bit more scalable
73:30 - right now if I wanted to make the window
73:32 - taller and add more log lanes or more
73:34 - car lanes I'm going to have a very
73:36 - difficult time doing that a lot of stuff
73:39 - is hard-coded in here so the main work
73:42 - that I'm going to do and again I haven't
73:44 - really done this before playing this out
73:46 - I'm just going to be doing this on the
73:47 - fly as well so for sure i'll create new
73:49 - problems by solving older problems is
73:52 - create a lane object so let me think
73:55 - about this for a second
73:59 - so I need to do time out because I want
74:02 - to use the whiteboard and I haven't
74:05 - played that this dot song today do
74:07 - people
74:07 - want to hear that this song today that's
74:09 - usually what I play when I erase the
74:10 - whiteboard where is it as always I
74:13 - always forget to dis stop this stop this
74:15 - stop this duck
74:16 - nd this stop is stop stop this oh cool
74:25 - it's okay that cup of tea was empty it
74:29 - did not spill all over my laptop this
74:39 - stop this stop just stop
74:41 - this stop this stop this pit stop pit
74:44 - stop Jim's done
74:45 - this stop the stop and then this stop it
74:48 - stop just stop and then you this stop
74:50 - this stop I lose this stop alright so
75:07 - now I'm going to pretend that didn't
75:09 - happen
75:09 - and the Frog a unicorn of the lanes
75:13 - rainbow-colored definitely okay so now
75:15 - I'm going to go over whiteboard okay so
75:19 - let's think about what is a part of the
75:22 - lane so if this is the Frogger game an
75:26 - individual Lane has a bunch of elements
75:29 - to it it it actually could be an
75:32 - instance of a rectangle object it could
75:37 - also extend rectangle because it can
75:39 - have you know an X Y and a width and
75:41 - height but ultimately the things that I
75:44 - want to keep track of our number of cars
75:49 - or logs speed of those cars speed of
75:55 - those cars and logs a spacing of those
75:59 - cars are logs so Elaine is going to keep
76:03 - track of all of those things on its own
76:05 - and it could also what what else could
76:11 - it have I could have like a color the
76:14 - color for the cars the color for the
76:16 - background so that you can start to see
76:17 - like what are all the things that are
76:18 - part of
76:19 - an individual lane and another thing
76:20 - thank you to me I answer me who
76:23 - suggested this you might have noticed in
76:26 - my previous example that the cars and
76:28 - logs are actually basically identical
76:30 - I'm just drawing them in a different way
76:33 - and ultimately you know I haven't I'm
76:36 - actually not even drawing them in a
76:37 - different way that's something that's
76:38 - still sort of like left as a next step
76:40 - for this program but I'm interacting
76:43 - with them in a different way and then
76:44 - I'm checking whether the you know with
76:46 - the with the logs the Frog has to land
76:48 - on it with the cars the Frog has to
76:50 - avoid it but I think I could just use
76:51 - one object and just call it an obstacle
76:54 - rather than have these two different
76:55 - objects is kind of unnecessary at this
76:58 - point okay
77:00 - so coming back over here let's start
77:03 - trying to do this so let's write let's
77:07 - try to write some code for the lane
77:09 - class so class Lane oh yeah and and uh
77:16 - Simon is asking the chat what about the
77:19 - safety lane so I that's an interesting
77:23 - question I could just have a lane that
77:25 - has a number of obstacles as zero that
77:28 - could be how I indicate if it's a safety
77:30 - Lane and I could also there's something
77:34 - else I was thinking of here I could also
77:36 - have some sort of like a type variable
77:38 - whether the lane is like a cars lane or
77:41 - a logs lane and the logs could be
77:42 - Turtles right in the cars could be cars
77:44 - or trucks there's a lot of possibilities
77:46 - here and again I'm just trying to do a
77:48 - small simple version this so coming back
77:52 - let's create this lane class and let's
77:58 - get rid of I'm something to do this I'm
78:00 - going in order to do I'm going to save
78:02 - this as oh wait a second oh yeah no say
78:05 - this has frog or two and I'm going to
78:08 - delete the log class get rid of that
78:13 - complete that's going to break I'm going
78:15 - to call it and I'm going to change this
78:18 - to rename by the way this is something
78:22 - that's in processing now see if this
78:23 - works if I go and use rename I can
78:27 - rename it to obstacle it's going to
78:28 - change it everywhere in the code
78:32 - so see how well that did attach up so
78:39 - one place where I missed it here because
78:42 - obstacle obstacle so I missed it there
78:46 - okay so this should still be and this
78:49 - should be obstacle and this should be I
78:54 - missed it by not changing log everywhere
78:57 - oh so many places oh come on
79:00 - see this is why my code is terrible oh
79:05 - good okay so now I have at least the
79:11 - same program again and just obstacle
79:14 - instead of cars or locks now back to the
79:16 - lane so what I want to have is I want to
79:19 - have some array of obstacles
79:23 - what else did I say I want to have a
79:25 - speed and maybe I said maybe I want this
79:30 - to extend rectangle so I can have a
79:33 - location I want it to have a looking
79:39 - here a speed what else did I say a
79:44 - spacing sorry and a spacing let's just
79:46 - do that for right now
79:47 - let's start off simple so within the
79:49 - constructor extension say extends the
79:52 - constructor should have a number of
79:56 - obstacles SPD for speed and SPC for
80:04 - spacing so obstacles now is a new array
80:08 - of obstacles with n elements in it and
80:12 - speed is some speed and spacing is some
80:16 - and spacing is some spacing okay so this
80:21 - is the idea of a lane and if it extends
80:24 - rectangle I also need to call super and
80:26 - I probably should give it an X a Y and a
80:33 - width and a height X Y width height so
80:39 - this is a lot of stuff to pass in but X
80:43 - or Y a width and a height a good
80:49 - trait I'm sorry I spaced out for a
80:52 - second because this camera clicked this
81:00 - is a lot of stuff for the constructor I
81:02 - don't love that might want to rethink
81:03 - that a little bit later but I'm going to
81:06 - just leave that for right now okay so
81:09 - now what I'm going to do is I just I
81:13 - want to get rid of all this nonsense so
81:18 - I'm going to comment all I'm just going
81:24 - to delete it I'm just going to leave Row
81:27 - 1 just going to leave Row 1 and we get
81:30 - rid of this the idea here is that
81:32 - instead of having two different arrays
81:33 - of obstacles I want to have an array of
81:36 - lanes now how do I know how many lanes I
81:40 - need
81:41 - well actually the way that I'm going to
81:44 - do this is I'm going to have a lane
81:46 - object for every single horizontal bar
81:50 - even the beginning bar that middle
81:52 - safety Lane and the end for example so
81:55 - if I know the height in pixels
81:57 - I can just say the height divided by
82:01 - that grid size is the number of lanes
82:03 - that I need so I'm going to say lanes
82:13 - equals a new array of lane objects with
82:19 - total lanes is height divided by a grid
82:25 - and I want that to be an integer so I'm
82:29 - going to convert that to an integer
82:31 - total lanes okay we're getting somewhere
82:35 - refactoring refactoring very exciting so
82:41 - I want to have a total number of lanes
82:44 - and here's the thing actually Simon in
82:47 - the chat is making good suggestion I can
82:48 - really simplify this I actually don't
82:52 - need to pass it an X I don't need to
82:56 - pass in a width or
82:58 - height because those the X is always
83:00 - going to be zero the width is always
83:03 - going to be the width of the window and
83:04 - the height is always going to be that
83:05 - grid size so I can create it's rectangle
83:08 - with some hard-coded values and I feel
83:10 - perfectly happy with doing that and
83:12 - there might be some reason I have to
83:13 - change that another time but that makes
83:14 - this much easier to read okay so this is
83:18 - the total number of lanes now what I
83:21 - want to do is I want to loop through and
83:26 - create all of the lanes so every single
83:31 - Lane
83:31 - what do I need I need the Y position the
83:38 - number of obstacles speed and spacing so
83:41 - let's just pretend for a second that
83:44 - what I'm going to do is just put cars on
83:46 - all the lanes I'm going to say a new
83:49 - lane at I times grid right so I times
83:55 - grid is 0 times grid is 0 1 times grid
84:00 - is grid 2 times grid is 2 times great
84:02 - sum 0 50 100 150 so that's going to give
84:04 - me all the spots and I'm going to just
84:07 - put what is the next thing I need in the
84:10 - lane the number I'm going to put three
84:11 - objects in each one then I'm going to
84:16 - then the next thing is the speed I'm
84:19 - going to have all the speeds be 1 and
84:22 - the space thing is going to be 100 so
84:24 - I'm just kind of going to do this in an
84:27 - arbitrary way I'm going to delete this
84:30 - and what I'm going to do now is I'm
84:34 - going to comment everything out because
84:40 - we're going to have to figure this out
84:41 - now everything is going to get much
84:44 - better now so this stuff so what I want
84:49 - to do now is I want to loop through for
84:53 - every lane in lanes let's say Lane dot
84:59 - show so I want all the lanes to show so
85:04 - that means I need to write a show
85:05 - function and what does that show
85:07 - function dot say for all the obstacles
85:14 - have them show and by the way here when
85:18 - I made this array I kind of need to
85:24 - create all those obstacles so now you
85:29 - say obstacles dot index I equals a new
85:40 - obstacle
85:43 - Reeth poison is it watching somebody
85:46 - refactor their code wildly entertaining
85:47 - Kari oh my goodness
85:49 - I'm sure this was such a good idea so
85:52 - what is it when I make an obstacle well
85:54 - I did that I deleted all that stuff I
85:57 - needed to keep that because I needed to
85:58 - reference it but it's okay I can
86:01 - remember I give it an X or Y a width and
86:05 - a height and a speed so the obstacles
86:09 - get created at where do I do that
86:12 - in the lane the get an X the X is I plus
86:20 - sorry is the X is spacing times I comma
86:28 - the Y lanes one then what else the speed
86:36 - is the lane speed and width and height
86:42 - is um oh that's a okay I'm just going to
86:49 - make them squares right now grid comma
86:51 - grid I forgot about something okay so
86:54 - we're going to fix all this what do I
86:57 - have so far one red fog a hole just take
87:04 - a break for a second I I'm like my brain
87:08 - starting to gotta stay hydrated I think
87:16 - everybody's saying same in the chat I
87:18 - have to know what this is that they're
87:20 - saying Oh everybody saying the stream
87:27 - lag am I still here am i back okay just
87:39 - like for a second okay all right okay
87:45 - here we go let's let's keep doing this
87:48 - what do I see anything I probably forgot
87:53 - something rather important I made a
87:56 - bunch of links let's debug this and
87:58 - let's just see how many lanes did I make
88:04 - let's make sure I'm making a lane
88:08 - footprint Lee okay I made 10 lanes
88:10 - that's right each lane each lane do I
88:20 - make the obstacles here looks like I'm
88:23 - making the obstacles
88:24 - oh I'm not calling and I'm calling the
88:26 - show function lien show let's the
88:29 - obstacle dutch show obstacle not show so
88:35 - what's wrong here let's just see a mic
88:39 - so it should be drawing a bunch of
88:42 - things ah look at this the width is 1 I
88:45 - messed up the width somewhere okay
88:52 - new obstacle EXO speed is the last
88:57 - argument right the obstacle requires X Y
89:03 - width height speed X Y width height
89:08 - speed okay so a bunch I made a bunch of
89:13 - lanes that worked
89:14 - now let's you know I've gone a few steps
89:17 - backwards here unfortunately but we're
89:19 - going to get back we're going to get
89:21 - back to what we had it's this is going
89:22 - to be good trust me stay with me you're
89:24 - you stay with me let's say lane dot
89:28 - update what was it this is not update no
89:32 - no oh yeah oh I should just make a run
89:34 - function let's just make it run I might
89:37 - regret this later and we'll do a show
89:40 - update so lane dot run okay so all the
89:48 - lanes are working I know they're all
89:50 - doing exactly the same thing that's fine
89:52 - is it's going to come back yes they're
89:54 - coming back okay so this is good
89:55 - my lanes are working one thing I
89:57 - realized I forgot is that the lanes
90:00 - could use a variable for how wide the
90:05 - the so when I create a lane what do I
90:09 - have right now I have I have its Y
90:14 - position total obstacles of speed and
90:16 - spacing you know one thing I sort of
90:18 - feel like doing is maybe just making the
90:20 - speed random I mean why not right
90:22 - so I feel where are you let's make the
90:24 - speed random somewhere between like
90:26 - negative three and three you know let's
90:29 - just so I don't need a speed so that's
90:34 - sort of nice to see right so even just
90:36 - with the speed random I'm going to get a
90:37 - lot of kind of variation there and it
90:39 - could be hard there could be a specific
90:40 - configuration supposed to be but I'm
90:42 - gonna make that random then I'm also
90:45 - going to what I want then as another
90:52 - argument is the total number of vehicles
90:55 - and the size of those vehicles the width
90:59 - so I'm going to give it a variable
91:02 - called W does that mess things up though
91:05 - because it extends rectangle so I don't
91:07 - want that so what is it I'm gonna call
91:09 - it the length so this is the length of
91:12 - the cars or logs and that can be
91:14 - actually be an integer because I'm going
91:16 - to think of it as they all have to be a
91:18 - certain number of cells on the grid but
91:20 - multiple of 50 so now when I create the
91:23 - lanes I'm going to and I'm actually just
91:26 - could just make that random also but no
91:28 - you know I might end up I'm gonna let's
91:30 - just put them let's just put one in
91:32 - there I'm gonna do this you'll you'll
91:35 - see hold on I got an idea here so I'm
91:37 - going to
91:38 - one in there and then the obstacles
91:41 - there with is grid times that length and
91:47 - guess what I don't think I need to
91:49 - actually keep track of these variables
91:53 - well speed I do because it's random like
91:56 - I don't really need to keep track of
91:57 - this spacing it's Rhyno anyway really
91:59 - just using it to initialize but that's
92:01 - fine so now look at this that's with one
92:06 - and I've got all this nonsense print
92:09 - line in here stuff that I don't need
92:11 - where did I put that print line that I
92:14 - don't need
92:15 - now what if I save make say that - great
92:19 - so now you can see they're all double
92:20 - wide and this spacing I could make 200
92:25 - and you can see now they're all spaced
92:27 - out by 200 they're all double wide so
92:29 - now I have this ability to just put you
92:32 - know as many or as few things there's
92:34 - only one thing in each lane there's
92:37 - three things in each lane always with a
92:39 - random speed so I'm hard coding the
92:41 - number of things there with and their
92:44 - spacing but I'm making their speed
92:46 - random and I'm also going to add one
92:48 - more random thing which is just a little
92:50 - offset so they don't all start together
92:52 - I'm going to create a variable called
92:57 - offset again this doesn't really have to
93:00 - be I can really just use this as a local
93:02 - variable here and I don't really need
93:04 - this same thing with the spacing this
93:07 - can just be spacing I'm going to give it
93:10 - a random offset between 0 and 200 just
93:13 - as giving it an offset so what I mean by
93:18 - that offset is if I don't actually move
93:21 - them they will all start slightly offset
93:24 - from each other
93:25 - okay now we're cooking so I'm able to
93:31 - now have all of these different lanes
93:33 - and I want to give them a color and some
93:35 - other things at some point that can be
93:36 - an exercise for you
93:37 - here's the thing though what I love
93:39 - about this is I can run all the lanes
93:43 - but I still think on some level I want
93:46 - to manually configure them so it's nice
93:49 - that I can initialize them in the loop
93:50 - and
93:50 - could make them random but just for
93:52 - demonstration purposes right now I'm
93:54 - going to configure them I'm going to
93:57 - configure them one at a time so lane
93:59 - zero has zero things in it so the speed
94:03 - and spacing can be zero that is where
94:06 - the Frog starts Lane one which will be
94:12 - at grid spot is going to have three cars
94:17 - in it with a what what's the second
94:21 - thing
94:21 - a a width of one and an offset of 150 so
94:28 - uh okay so lean I'm so I'm going to just
94:33 - going to do this now really quickly then
94:36 - two three four two three four will also
94:40 - be a safety Lane then what do I have
94:45 - left let's do this again five six seven
94:53 - and eight
94:56 - I kind of want it I kind of want four I
95:01 - think what I would like so let's make
95:03 - this the height 600 I would like for car
95:08 - lanes safety Lane for uh for log lanes
95:14 - and then a SATA last safety zone so what
95:22 - did I miss here oh I need oh no that's
95:25 - ten that was right I don't need to make
95:27 - it ten for four no no no that's three ah
95:31 - I do need eleven if I'm going to do four
95:36 - look at this you know we've got a little
95:39 - less hard cut some new hard coding
95:41 - everybody so let's make this now back to
95:43 - 600 and here we go what did I get wrong
95:46 - here are people I should have eleven
95:50 - lanes
95:51 - well that's 12 550 oh boy ah right and
95:56 - now they all need to oh this is awkward
95:58 - this is awkward and here I'm going to
96:01 - give them just a lane in down
96:05 - and then what I'm going to do in the
96:12 - lane object itself is set the Y location
96:15 - and this is really not y is like index
96:20 - index times grid index times grid and
96:25 - index times grid okay so you can see now
96:31 - there we go
96:32 - there are all of the lanes and I want to
96:35 - make sure they update and so there we go
96:37 - all of my lanes now I can start to
96:39 - individually configure them so I can say
96:42 - things like the second one should have
96:45 - two that are triple wide and spaced out
96:48 - by 350 pixels the third one should have
96:52 - four spaced out by 200 that are one then
96:56 - this should have three that are two
96:59 - spaced out by oh and i don't want the
97:01 - speed to be random actually because they
97:04 - really should be like every other one oh
97:08 - and these are the top actually so what's
97:11 - first to so I don't that the random
97:13 - speed is a bad idea so I'm going to go
97:16 - back to setting the speed manually
97:19 - because I want to configure this
97:20 - manually and I'm going to give it the
97:23 - last argument will be speed and I'm
97:29 - going to say uh three negative two point
97:40 - five one negative one point seven and
97:46 - then I'll give this one a also zero I
97:51 - have too many lanes two point eight four
97:57 - I could have made it I could have just
97:58 - had its direction and still have it be
98:00 - random but I'm but I'm but I'm very but
98:04 - I'm going to manually configure this
98:05 - game of Frogger you can see how you uh
98:10 - negative and then
98:14 - and zero so now we can see and this one
98:19 - they need to the last lane they need to
98:21 - be spaced out by quite a bit more
98:24 - so let's space them out by 250 so there
98:28 - we go
98:28 - so now I have and then some I want these
98:31 - to change like this should be 4 this
98:35 - should be 2 and this should be 1 and
98:37 - this should be 4 and this should be 1
98:39 - double wide triple wide single wide so
98:46 - there we go
98:46 - here is now my game of Frogger and I can
98:50 - go through it now I'm not doing I'm not
98:52 - doing any of the tests now I also I want
98:55 - to give these lanes of color I think
98:58 - would be useful to give these lanes of
98:59 - color the other thing I could do is I
99:01 - can yeah let's give these lanes a color
99:04 - and let's make that the last let's make
99:11 - that the last argument color and
99:15 - actually you know what I'm going to do
99:16 - I'm gonna do something totally different
99:17 - I'm going to write a second constructor
99:19 - second time today this was in a
99:21 - different video that I recorded earlier
99:23 - today I'm going to use something called
99:24 - constructor overloading so I'm going to
99:27 - make a constructor that optionally takes
99:31 - a color as its second argument and I'm
99:38 - going to use that just for all of the
99:40 - all of the the three lanes that have no
99:44 - obstacles in it and I'm going to say
99:49 - write a new function that has its index
99:53 - that can't really be an integer and then
99:56 - a color and it needs to call super and
100:03 - then it needs to say obstacles equals a
100:09 - new array of obstacles with zero things
100:11 - in it
100:12 - don't want to have any obstacles in this
100:14 - Lane and it's and I'm going to give it a
100:18 - each Lane is going to have a color and
100:21 - its color is going to equal C so in this
100:25 - constructor the color will equal
100:27 - black and here I can now and then when I
100:33 - in the run function I'm going to draw a
100:36 - rectangle doesn't rectangle have a show
100:40 - no I have I'm going to create a I'm
100:43 - going to just draw a rectum I'm going to
100:45 - say fill that color and draw a rectangle
100:49 - at X Y width height so we can see there
100:54 - we go oh I love this now I have a lane
100:56 - object I can configure the game laying
101:04 - by lane so I can create safety lanes
101:07 - with a different color and I can create
101:09 - lanes with other obstacles in them so
101:14 - now this is exactly the game the only
101:16 - thing is you know none of the actual
101:20 - gameplay is there so I need to go back
101:22 - and put that game play back in now I
101:24 - have all that commented out here I don't
101:26 - need to draw the these separately this
101:30 - what I can do here is I can say I can
101:35 - now look at every Lane so I can say Lane
101:42 - check frog so I want every Lane to check
101:47 - the Frog and that is going to be here so
102:01 - what I'm going to do is I'm going to
102:02 - take this okay show update this is
102:05 - really what I want to do here I'm going
102:07 - to take this and in the lane I'm going
102:11 - to say I'm going to write a function
102:12 - called check which gets a frog and then
102:16 - what I want to do is loop through all of
102:20 - the obstacles I'm going to call them oh
102:21 - I don't need to show ups
102:34 - this is like taking a really long time
102:37 - and I'm feel like I'm being very boring
102:39 - what we're almost there before he's
102:42 - watching um I'm going I don't need show
102:45 - an update that happens somewhere else
102:47 - and I just want to check if frog
102:49 - intersects that obstacle reset the game
102:52 - so I'm just now going to do that as if
102:56 - all of the lanes are obstacles okay see
102:59 - this stuff should happen really fast now
103:02 - that we've refactored I should be able
103:04 - to do this stuff really easily
103:05 - so see every time I intersect an
103:08 - obstacle I should get sent back to the
103:16 - bottom right okay
103:17 - so I'm able to play this game now I need
103:18 - to I need to only check so I need to
103:22 - figure out whether the lane is an a log
103:27 - lane or a car lane so maybe I'll do it
103:30 - type I could you let's do it type let's
103:34 - say I could make it a string that's
103:37 - probably a bad idea let's do a I'm going
103:42 - to do this in a kind of a goofy way I'm
103:43 - going to say type and the lane is also
103:47 - going to get as its second argument and
103:50 - we'll do that here too it's going to get
103:52 - a type when I create the lane so I'm
103:59 - going to say type equals S type equals s
104:05 - I'm going to create some kind of
104:07 - constants string safety equals safety
104:13 - string what other types could be car
104:17 - equals car string what's the other one
104:23 - log equals log so what I'm going to do
104:27 - is I'm going to create the lanes this
104:28 - way this one is a safety this one is a
104:32 - car
104:38 - car for car lanes then I'm going to have
104:42 - law then I'm going to have another
104:44 - safety Lane a log lane and another
104:50 - safety Lane okay so now we can see here
104:56 - I've added this now I could have just
104:57 - put the strings directly in here but I
104:59 - made these like separate variables at
105:01 - the top to store the actual strings
105:03 - because and honestly I don't want to use
105:06 - strings I want to use numbers because I
105:08 - don't want to have to remember is 0 or 1
105:11 - so I want to have a variable and these I
105:13 - could say in Java awful java monster
105:16 - language speak I would say like final
105:18 - constant int so I want to make these
105:20 - intz but I'm just going to be sort of
105:22 - lazy and having to be all capitals and
105:24 - integers so now what I'm going to do
105:27 - here is this is an integer for a type
105:30 - I'm going to call it t just for type and
105:35 - actually I don't need to have this
105:38 - argument here by definition if it's
105:41 - getting if it's using this constructor
105:43 - it is a safety Lane and this should be
105:49 - an integer and I can take it out of here
105:53 - so these don't need explicitly to say
105:56 - safety because that's by definition rep
105:58 - just refactoring refactoring refactoring
106:02 - ok so now what I'm going to do in the
106:06 - lane check function is I'm going to say
106:10 - if type equals car I'm going to do this
106:15 - right now
106:17 - otherwise if type is a log what is the
106:22 - thing that I did I had this like very
106:24 - weird thing where I had to check where
106:26 - it was but now I don't have to do that I
106:28 - can just say take this all this code
106:34 - here not I'm going to just grab this for
106:38 - right now and I'm going to put this in
106:40 - here this was the code for seeing if
106:46 - it's intersecting with any of these
106:48 - frogs and if it is
106:51 - attach that particular law so I renamed
106:58 - some of these variables and I'm just
107:02 - just just all the same code that I
107:04 - worked out the last time I'm just and if
107:06 - it's not reset the game although this is
107:09 - a bit of a problem so I'm gonna have to
107:12 - work this out there so there's this is
107:14 - going to have to change because I'm
107:15 - doing it by lane now so let me take this
107:19 - out for a second we're going to work
107:21 - that out later
107:22 - so let's just see right now this should
107:24 - work whoops where I should be able to
107:29 - look at that oh whoa so I need to get my
107:34 - attach and detach going again let me run
107:37 - this again whoa it's already attached
107:45 - if type equals log so I wonder if this
107:48 - is happening by accident even for the
107:54 - yeah it's not attached oh but it
107:58 - attaches instantly even to that Lane so
108:02 - why is that happening
108:06 - it shouldn't right if the lane is not
108:15 - and by the way this can just be here it
108:20 - shouldn't right what am I missing here
108:28 - frog intersects oh why is it
108:34 - automatically attaching in this Lane oh
108:37 - these are the logs ah I forgot
108:43 - oh my god that I did this the top I'm
108:47 - creating lanes from the top to the
108:48 - bottom so these are all the logs and
108:52 - these are all the cars I forgot okay so
108:57 - now right if I intersect I've got to get
109:04 - through all these and now here's the
109:09 - thing though it's never going to detach
109:11 - so I need to get the detaching back in
109:14 - so how am I going to get the detaching
109:17 - back in so I need to determine I think I
109:27 - should have some code I need a break
109:29 - hold on a second to take a break for a
109:31 - second check the time I only have ten
109:33 - more minutes
109:33 - look I really have to leave and I don't
109:37 - have a lot of leeway here I mean I maybe
109:38 - have like five minutes of leeway but I
109:40 - don't have a lot of leeway and this is
109:42 - clearly but this is the last piece that
109:48 - I need to do the question is should I
109:53 - have the Frog register which lane it's
109:57 - in and only check that Lane right why
110:00 - not just register the Frog for which
110:02 - lane it is are on move detach that's a
110:07 - great idea every time I move I should
110:10 - detach that's a good idea
110:19 - okay so uh thank you to Alka in the chat
110:24 - who said I what I was thinking is one
110:26 - option would be to actually have the
110:27 - Frog register which lane it's in because
110:31 - I know it which lane it's in based on
110:32 - its Y position only check so there's not
110:35 - really any good reason for me right now
110:37 - to have all the lanes check the Frog I
110:39 - kind of want to do that but I'll get a
110:41 - different suggestion which is just
110:42 - detach every time the Frog moves right
110:46 - because if you're going to rods going to
110:47 - jump it shouldn't be attached to
110:48 - anything so I could let's try that that
110:51 - might actually be a really quick fix but
110:52 - I'm now realizing this loop for the
110:54 - lanes is kind of unnecessary I could
110:56 - just pick the one lane that the Frog
110:58 - needs to check against but let's do the
111:01 - detach thing real quick
111:04 - on move I'm just going to say frog
111:07 - attach no so it's always going to detach
111:10 - I need to start myself in the center
111:15 - right so you can see now all of those
111:21 - behaviors are back and you can see it's
111:23 - so now I don't have the thing that's
111:26 - telling me to reset the game so the
111:29 - issue is and this is why I want the
111:31 - fraud to register its lane the reason
111:33 - why I want the Frog to register its Lane
111:35 - is because if it's in that log Lane and
111:38 - not touching a log it needs the game
111:40 - needs to reset so what I'm going to do
111:42 - is I'm going to say and I still can do
111:49 - the move detach thing int late which
111:53 - Lane index equals frogs Y / grid right
112:01 - and an integer version that that should
112:03 - give me the index that it's in all right
112:06 - let's just see this print Lane index
112:08 - it's actually going to have to be
112:10 - inverted I just realized oh no that's
112:12 - right ten nine eight seven six so this
112:18 - works so now that's the only Lane I need
112:21 - to check so I can just say lanes index
112:25 - Lane index check frog
112:30 - so this way ah I got to start myself in
112:40 - the middle so when I'm testing it this
112:41 - is hard okay I'm starting myself in the
112:44 - middle
112:44 - the frogs Y location is high / - maybe -
112:50 - grid black put it in the center okay oh
112:54 - whoops that's at the wrong place
112:55 - oh wow it should just be lanes height
113:09 - divided by 2 - grid divided by 2 is what
113:12 - should be yeah there we go sorry so now
113:14 - I should be able to oh ok so now I
113:17 - should be able to jump around but and
113:19 - get pushed off but I now need can go
113:23 - back and in the lane check if it's not
113:27 - okay
113:28 - you lost reset the game okay whew so now
113:32 - I should be able to jump around but if I
113:37 - fall off a log I reset the game if I
113:40 - jump into if I jump into the river I
113:43 - reset the game and it's resetting it to
113:46 - the middle because that's where reset is
113:47 - okay whoo I think we refactored this
113:50 - pretty nicely somebody made a good point
113:53 - like well why should I have this type
113:56 - variable maybe what I should do is use
113:59 - inheritance and have three different
114:02 - Lane classes car lane obstacle and
114:05 - safety Lane and actually that's a very
114:06 - good idea and I think it could be
114:08 - reasonable to refactor this yet again so
114:14 - I think this is going to be enough
114:16 - refactoring for this particular video
114:18 - all I did was refactor into this Lane
114:21 - and I don't know if you can really see
114:22 - this makes if you really want to see the
114:25 - beauty of what I've done
114:26 - not that anything I've done is really
114:28 - that beautiful what I love about this
114:30 - now is this is the draw loop looks ah I
114:35 - can't use my keyboard ah
114:39 - this draw loop is so simple and the one
114:42 - thing that I would actually say is maybe
114:44 - the lane index the Frog should actually
114:46 - have a function that just returns it's
114:47 - the lane index because look what's
114:49 - happening here I just run all the lanes
114:51 - I just checked the one lane the frogs in
114:54 - and update and show the Frog so this
114:56 - refactoring and even though this is a
114:58 - little bit unwieldy it's so much better
115:01 - and I think somebody's knocking at the
115:02 - door because maybe I'm being too loud
115:08 - I imagine somebody knocking at the door
115:14 - okay sorry about two that's going to be
115:16 - an awkward edit I'm going to start again
115:18 - here um even though this is a bit
115:21 - unwieldy because I've initialized all
115:24 - the lanes manually and maybe there's a
115:25 - better way of doing the arguments that
115:27 - something should be random or I should
115:28 - have some type of algorithmic way of
115:30 - generating it that's yet another
115:32 - opportunity so with refactoring only
115:34 - comes more refactoring refactoring
115:37 - forgets refactoring life is all just one
115:40 - big refactoring session so I hope you
115:44 - enjoyed my rather long refactoring
115:46 - session I think there easily could be a
115:48 - part five to this in a part six what I
115:52 - want to say and is that check this
115:54 - videos just if you want to contribute to
115:57 - this there are a few things you can do
115:58 - so in this video just in this video's
116:01 - description there will be a link to a
116:03 - github repository that has this
116:05 - processing version that has a JavaScript
116:08 - version of the same code and then also a
116:10 - link to another github repository that
116:13 - is kind of a community created version
116:15 - of the game where people can add their
116:17 - own graphics and different things and if
116:18 - you make your own version and want to
116:20 - link to an arena there's all these ways
116:21 - you could share and contribute to the
116:23 - stuff I need to say it more succinctly
116:25 - but check the description and I'll
116:26 - describe it in there so thanks for
116:28 - watching this part 4 is it the last will
116:31 - there be more will there be another
116:33 - actually I'm one thing that I was
116:34 - thinking of doing was redoing this whole
116:37 - coding challenge as one video but in
116:39 - JavaScript now that I've done it in four
116:41 - parts maybe I could do it all as one
116:42 - video faster I don't know we'll see I'm
116:44 - thinking about that if you're interested
116:45 - in that say in the comments but I don't
116:48 - know that anybody's actually watched to
116:49 - the end of this video ok thanks for
116:50 - watching and I'll see you in a future
116:52 - video oh oh oh oh no don't leave yet
116:55 - sorry one thing I left no no I think I
116:58 - think I might have left no no I got it
117:00 - right oh no I left the wrong
117:02 - I left the wrong position so there's
117:04 - let's play this game one more time I
117:09 - gotta win it this is my kids just watch
117:14 - people playing video games all day on
117:15 - YouTube so that's what you're watching
117:17 - now oh I have to jump on the log I
117:19 - really want to add I should add some
117:20 - the visual design some colors for the
117:23 - lane to know if it's River or Street I'm
117:28 - gonna make it 100 maybe edit so maybe
117:34 - speed this up this is I made this kind
117:37 - of hard because the last one is so fast
117:41 - yeah I win stronger I win the prize of
117:45 - the internet prize thanks for watching
117:47 - I'll see you next time the train pulls
117:49 - into the station
117:55 - oh I don't have to do anything that's
117:57 - just it okay please clap that's why they
118:04 - please clap I did you guys hear a knock
118:06 - to somebody Alka says Alka says I
118:10 - definitely heard a knocking fidgets
118:12 - spinner
118:13 - oh no sorry everybody I really have to
118:15 - go
118:19 - so this was all I was able to get to
118:23 - today the things that I missed getting
118:27 - to I think that could be done with
118:30 - Frogger okay but I could say like
118:31 - Frogger there's some really good gifts
118:36 - that people are posting in this um slack
118:39 - channel Frogger
118:41 - what could I do redo as one video in jf
118:46 - and fidget spinner I will be I I wonder
118:54 - what would happen I've been so I think
118:56 - curious about making a video where I
119:01 - just do a tutorial from my laptop like
119:03 - wherever I happen to be without this
119:05 - whole elaborate setup you know what you
119:07 - usually see you see the little picture
119:08 - of a webcam of a person in the corner
119:10 - then you see the screen or you just have
119:11 - two disembodied voice because then while
119:14 - I'm traveling I could kind of still make
119:15 - some tutorials but I don't know I'm sort
119:17 - of I just like my whole setup here oh
119:20 - this is I'm afraid of doing that but it
119:24 - is some it would be a way of me creating
119:25 - more content while I'm traveling around
119:29 - wow that's really small I hope the
119:31 - whiteboard is readable
119:33 - okay can I use the perceptron so yeah I
119:36 - mean all of this I would love for all
119:38 - this eventually to come together and it
119:40 - actually I have some examples that I've
119:44 - made already four flappy bird that I
119:47 - made one for flapping bird but getting a
119:49 - multi-layer perceptron to control the
119:51 - frog to win the game is something I
119:55 - think I could do okay so it is 329 I
120:01 - will take a few minutes to answer some
120:04 - questions I'm looking at the slack
120:07 - channel for patrons coding patreon.com
120:09 - slash coding trade and I'm also looking
120:11 - at the YouTube channel a table
120:16 - [Music]
120:24 - play the biscuits on the biscuits on I
120:28 - don't they got to play right now but you
120:29 - can get it on Soundcloud probably if you
120:31 - just search for coding you might have to
120:33 - search for coding rainbow on soundcloud
120:37 - any updates on guest lecture for WebGL
120:40 - thank you for asking I have to admit I
120:44 - have to confess that I have really been
120:50 - behind on a lot of things and the things
120:53 - that I've realized slip is scheduling
120:55 - guests and I said June was going to be
120:57 - my month of guests but I had I did this
121:00 - other so many things have happened that
121:01 - I've just made it difficult to make that
121:02 - happen so I will be working on that
121:05 - while I'm away for a week I'm going to
121:06 - be doing a lot of emailing hopefully set
121:08 - up guests for when I come back and
121:09 - hopefully I'll have one with some WebGL
121:11 - stuff yes thank you nano I'm glad oh my
121:26 - a professor teacher at NYU yes so I will
121:29 - answer this question without being silly
121:33 - like I was before there is a program
121:38 - it's part of Tisch New York University
121:42 - Tisch which is the School of the Arts at
121:44 - Tisch School of the Arts I was free if
121:48 - it's over for I really should know that
121:49 - considering that I've worked here for
121:51 - about tsch tsch School of the Arts
121:58 - so ITP is a program let me go back at
122:01 - Tisch School of the Arts it is a
122:03 - two-year graduate program whose mission
122:05 - is to explore ah the founder red burns
122:08 - who is one of my heroes and mentors she
122:12 - passed away a few years ago but this is
122:14 - a book of quotes from one of the lecture
122:17 - she would give to the incoming class and
122:18 - the last quote I read last time was if
122:21 - you can resist the temptation to run
122:23 - back to the shelter of your comfort zone
122:25 - so today's quote from read will be if
122:28 - you permit yourself the intellectual
122:30 - curiosity to explore your differences
122:33 - you would explore a new city actually
122:36 - these are all dot dot dot because they
122:39 - should read these all together because
122:40 - they end with you might be pleasantly
122:42 - surprised new read was ahead of her time
122:45 - this was like a tweet storm dot
122:48 - so this is where I teach I teach full
122:51 - time I teach three classes in the fall
122:53 - two classes in the spring and I've been
122:55 - making these videos ostensibly I started
122:58 - making these videos as supplemental to
122:59 - my courses and then I would sort of put
123:01 - them online and then I once I put them
123:02 - on YouTube a lot of other people found
123:04 - them and the audience really grew from
123:05 - there and I've been teaching these live
123:07 - sessions so NYU has been very generous
123:11 - and helpful with me in the setting up
123:12 - this recording studio here so I make
123:14 - videos and I also help other people I've
123:17 - been trying to do more of this at NYU
123:18 - make videos in the studio and then I
123:20 - published them on my channel and use
123:23 - crowdfunding so in a way like if you
123:25 - join the patreon that's a community
123:27 - where people can ask questions and talk
123:29 - about the code and suggest stuff that's
123:31 - you know it's sort of like the videos
123:34 - are free I mean they are ad supported on
123:35 - YouTube but for a sonam '''l fee a small
123:38 - fee you can join us a more a smaller
123:40 - group of discussion and that sort of
123:42 - thing so I think I won't ask so my next
123:50 - live stream it's possible that I'll
123:53 - experiment with doing some just content
123:55 - just from my laptop but my next live
123:58 - stream will be june 22nd or 23rd
124:01 - thursday or friday and i'll announce
124:03 - that i'll probably on twitter at
124:04 - Schiffman that sort of thing yeah I I
124:09 - did at the beginning I was streaming on
124:11 - Twitch I would simultaneously stream to
124:14 - twitch and YouTube and I just never
124:15 - really found an audience on Twitch so I
124:18 - don't I no one has been able to give me
124:20 - a good reason why I should switch over
124:21 - to twitch as a platform but I'm
124:23 - definitely open to it and uh you know
124:26 - let me know if you have you that is it
124:31 - possible one day to do a tourist toroid
124:33 - coding challenge to explain the formula
124:35 - yeah there will be no other live stream
124:37 - this week this is it for this week but
124:39 - I've got a lot of well not a lot I've
124:41 - got right now I have five edited videos
124:44 - that have
124:45 - to be published the three Frogger ones
124:47 - which are there you can find them
124:48 - they're already unlisted and then I
124:49 - guess two more from today what was I
124:53 - going to say about or something okay
124:57 - look let me
124:58 - I got another min and a half here I hope
125:01 - people enjoyed this light I felt like I
125:03 - was kind of off my game during the
125:04 - refactoring video because I was just
125:06 - sort of spaced out
125:07 - refactoring but hopefully that was
125:08 - useful and will get edited into
125:09 - something useful can a gambling game be
125:15 - predicted with machine learning actually
125:17 - there's been some recent research and
125:20 - work done in training an artificially
125:23 - intelligent bot to beat professional
125:25 - poker players will love it absolutely so
125:28 - uh you know sure a chance game there's
125:30 - no way you're going to win it blackjack
125:33 - and you can play optimal strategy but
125:34 - you're not going to have an edge but for
125:36 - a skill based game you absolute like
125:38 - poker you've absolutely could teach nai
125:40 - agent so how long is always asking about
125:44 - editing the videos Mattia at math blank
125:47 - on Twitter helps edit all the videos and
125:50 - they usually are done within within a
125:53 - few days but I would say you know within
125:55 - a week is kind of our always our goal
125:59 - when will we see you program at C it's a
126:04 - good question
126:04 - maybe maybe someday maybe never
126:09 - okay 336 I've really got to get going I
126:14 - what I would really liked it so I do
126:16 - have this list here of continuing to
126:22 - follow up but I think yeah I think when
126:24 - I come back I'm going to finish off the
126:26 - perceptron stuff because I really want
126:27 - to get to building the neural networks
126:29 - just stuff everything takes so much
126:30 - longer for me to make than I think it's
126:32 - going to do hopefully when I get back
126:34 - later in June and the first couple weeks
126:36 - of July and there's a July 4th holiday
126:37 - but I'm gonna try to do a couple weeks
126:40 - I'm gonna try to do two live streams
126:41 - each week cuz I'm going to also be away
126:43 - traveling for two
126:44 - in July most of you away for two weeks
126:46 - in August so it'll be two weeks where
126:48 - I'm here in July in two weeks anywhere
126:49 - I'm here in August and the other two
126:51 - weeks when I'm away all right thank you
126:57 - everybody thanks for watching I will see
127:00 - you all next week sometime
127:02 - but please stay in touch write comments
127:05 - like subscribe tell your friends about
127:06 - the channel and you can always tweet me
127:12 - at Schiffman is a good way to send me
127:14 - some feedback I read all the mentions
127:17 - for sure I mean and you know emails I
127:19 - probably replied half of them because I
127:21 - miss a lot but you can always get in
127:23 - touch with me and the comments I read it
127:25 - all the comments on YouTube as well and
127:26 - try to reply to them as I can ok thanks
127:29 - everybody and I will see you next time
127:40 - yeah people are asking for more 3d
127:42 - challenges I think that's a great idea
127:44 - I'm not very good at 3d I kind of I'm
127:47 - very 2d ok I'm just

Cleaned transcript:

hello welcome to a special Monday edition of the coding train I'm Dan your host and coder person to Monday it's not my usual time the reason I'm here today is not because I want to be more like fun fun function although how many funds are there in fun fun function I think I got it right three right but rather that I have just a conflict for later this week typically I like to livestream on a Thursday or a Friday sometimes in the morning so does in the afternoon you're all over the world your time is a completely different time but this week I won't be here later this week so I am here today to make sure I it's my goal at least this summer to have a live stream every week although I could say for certain when that's not going to happen in July and August when I'll be away but anyway here I am and I've got a bunch of things to do I'm looking at the chat and so far no one's complain that my volume is too low or it's too high so everything seems to be rolling along okay so what's going to happen today I got to think about this for a second first let me say it perhaps this is your first time watching if it is welcome thank you for tuning in I hear that there's like a another live stream maybe the e3 live stream is going on right maybe simultaneously you probably should go watch that this will be archived you can watch it at 2x speed or fastforward through it later but okay so if this is your first time watching what I do is I typically livestream today will be the same for about two hours I definitely have to leave two hours from now for an appointment so I'll be here for about two hours I make a lot of mistakes I try to code a bunch of things explain a bunch of things and then after the live stream is finished it is archived and also most of the time various portions of live streams were then edited separately into tutorial videos which are uploaded later if you would which I will mention by the way while I'm here since I'm here if I go to youtube.com slash Schiffman that uh okay so what you will see here is that the most recent videos are my perceptron coding challenge which I'm going to do a followup on today and the Frogger livestream which I'm also going to do a followup on today so that's what's happening today but I will say if you go here into coding challenges but you might notice if you scroll all the way down to the bottom o load more all the way ah look at this coding challenge seventy three point one point two in part three Frogger apart one two and three are actually available so often I'm just saying this because people always ask and also for you the live viewers to give you a little extra tidbit here that I what I when the when the edited versions of the videos are ready and available they are often uploaded and part of the playlists but are listed on YouTube and are not made public this is because I tend to make one public per day most people are most of the viewers are not the live viewers but are the ones who are just kind of clicking home link as they get alerts so I like just kind of roll out the videos more slowly over time maybe that's a bad idea I don't know some YouTube certified consultant could maybe tell me the best way to approach this but that's kind of my approach right now okay Oh welcome Vic who says Wow the first time I'm here I am glad that you are here live I don't know if this experience is more enjoyable or less enjoyable live but I'm pleased nonetheless that you're here as you just as you saw I do try to keep a corner of my eye on the YouTube chat this is very hard for me to follow it because I got to think about a lot of different things it's also on a screen that's like way over here so I have to like look and kind of look over here and then come back and look here so I will try to take a peek at it I do keep a closer eye on a slack channel which if you would like to support the work that I'm doing patreon.com slash coding train it is a patreon is a crowdfunding service for content creators and if you would like to join that you will get it tation to our slack channel which I also keep an eye on and most most recent messages in dislike channel CPP about people like finishing up their lunch real quick or skipping eating just to watch the watch live scene I really don't recommend that first of all as we all know on the coding the sound effect for this it is very important not one that's going to make me feel like I just have to go pee but it's very important to stay hydrated is everybody watching staying hydrated I don't want anyone feeling woozy especially myself stay hydrated I have my purple canteen of water here I also recommend that you eat lunch go your lunch you can watch why you eat lunch alright uh Gregory in the YouTube says I need to go to a dancing lesson oh my goodness wait a second isn't this channel really Jess I mean it's if there's no lessons involved but I would like this to be a dancing channel unicorns and rainbows and cupcakes what else is there yes kids thank you very much kittens and rainbows and cupcakes notice that look what I get I that's an it for right now I know whenever I start to pull a muscle in my neck we know it's a problem I'm actually been watching the world of dance which is a great show I don't know if it's a great show but I've been enjoying it lots of great dancers on there okay uh uh I am clearly not gonna be on the world of dance anytime soon but you know I have this YouTube channel I guess that's something I don't know why it's doing this anymore but I'm here okay wait so I was talking about patreon and I looked at the chat and got distracted okay so patreon I said I think I always plug my the two other things I like to plug I should do this in the opposite order are coding train Storenvy calm for some merchandise and also processing foundation.org processing foundation is a nonforprofit 501 C 3 corporation here in the United States we our mission is to do a lot of different things around code and education processing foundation maintains processing p5.js processing dot pi python mode and also does a lot of community and education and diversity initiatives you can read all about processing on the website and I encourage you to become a processing foundation member and I encourage you to do that before you do my patreon okay so um I know the Simon in the chat rightz come on I don't know if that means skip with all the dancing and just get to the card yep but you know some of the people they tune in know does anybody tune in for the dancing I don't think so every once a while somebody says that they tune in for the dancing okay uh does processing have a separate library if you say want to use the libraries in Eclipse I'm so glad that this question was asked by Jimmy in the chat oh and also before I get to don't let me forget about this Eclipse tech nerd people hope the fidgets better video tech nerd asks about discord I'm kind of old I guess relatively you know I'm young I'm young in many ways young at heart and youthful but I'm kind of like not so up on the current stuff you know I do have mom up on fidget spinners and Pokemon does that count no okay uh anyway um but what was I talking about discord there is a coding train discord I guess it's unofficial I don't know anything's official or unofficial and the reason there's also a coding train reddit reddit comm slash are slash coding train which I was really like I used it one week and then okay but down here we can go to coding train discord if discord is something that I should consider using as a platform I love to be able to expand and make ways for people in this community to to I'm reading I'm reading the check oh my gosh so which is the can't read see this is why I can't read the chat veritable ttest but you could you could check this out so I don't know I've this the slack channel has worked well for me for this patreon community the YouTube chat works well for the live sessions okay so the discord you can just find it here someone post this in the chat for those who are interested and maybe I'll try to check it out sometime okay I noticed by the way that I say okay okay okay okay okay a lot maybe that's the next one okay okay okay okay okay okay okay so I think that is all of my introductory stuff am I forgetting anything important what do you think soon the camera will shut off and off to go press that button so next up so what oh this is a setting on show later this is by K week man who is a contributor to coding train community and does a lot of greats has been making a lot of great machine learning examples I'm going to show this a little later I think what so that here are the things that I want to do today in the time that I am looking at my watch I want to do a followup video on the perceptron which was a coding challenge and it was finished this is the example running here this is a simple perceptron that's being trained to recognize points on one side of a line versus the other so I want to add some features to this and talk a bit more about it as well as talk about what the limitations of the perceptron are and why a multilayered perceptron a neural network so to speak of many printer connected perceptrons expands the possibilities of what you can do with neural network based machine learning so that's kind of I'm not going to build the fully connected Network the multilayer perceptron today but I want to leave myself with everything finished so the next time I come into a live session we can really start to build the neural network library I would also like feedback I guess not right now maybe I'll do a strawpoll or something I made this neural network library in JavaScript for some p5.js examples and I don't know if I should rebuild it from scratch as the tutorial videos or just do a processing version after think about that okay um nose touch yep this will be the okay song suggested by alka ok ok ok ok ok ok ok ok ok my nervous habit apparently is touching my nose I can tell that I'm getting like stressed out and figuring out the code stuff so that's item number one is to follow up on the perceptron coding challenge item number two is to follow up on the froggy frog Frogger coding challenge I have two things that I want to do I don't I won't be definitely be able to do both today the first thing is I want to do just a refactoring video so I want to look at there was so much spaghetti and kind of mess in that example that I made that I want to do a fourth part which just refactor zit and the major thing will be adding a Lane object the lane object storing a number of carves or logs and I probably also we realized that the cars and logs actually can beat not there goes can be the same object so I might rename that to obstacle this was suggested by me I am so me and so that's the other thing that I want to do I think I have time to do both those things I was thinking you know my coding challenges where I do a particular game all in one video tend to actually be viewed more so I thought I might try an experiment which is and I guess I won't do the same so we remind me which is I did the Frogger challenge in processing and it's in three parts it'll now be in four parts and I thought I would try to do like sort of a speed version of it since I've done it once already it might have an easier time of coding the whole thing from scratch in one video and then I would do that in JavaScript so that is that is that okay processing fidgets I know there's the the fidget spinner idea is very polarizing cuz you know it's kind of like come on really you're going to do a fidget spinner YouTube video at to coding tracking at the same time hey you're gonna sleep in her video that sounds interesting but there is a lot there is something there in terms of looking at angular motion some interactivity there's a really interested in thing that you might not think about which is that when you click on something and want to drag it around you've got to know where you clicked relative to where it is and this and with something spinning it all has to do with angles so there's actually a few interesting kind of graphics and math maths tidbits okay alright so I'm looking at the chat oh discord bot making thingy a tutorial on a discord bot I said I would do that so apparently I said I would do that oh it might have okay okay I'm so selfconscious I have a I have a selfconsciousness problem let us begin it's been a while since we read from the coding train storybook a million digits a million random digits with a hundred thousand normal deviants now you might remember last time where we left off was four hundred and forty two thousand two hundred and two fifty two thousand seven hundred seventy six twenty one thousand three hundred and nineteen seventy four thousand one hundred and thirtyfive three thousand three hundred twenty nine thousand seven hundred and two ten thousand eight hundred and forty seven eighteen thousand seven hundred sixtythree nine thousand one hundred and seventy seven eightyfive thousand two hundred eighty nine 27 thousand thirty one good night children don't let the bed bed but the bite the bed I was gonna make some sort of bites bits the bed bits bite don't let the bed bits bite alright then something I also like to do not let me I'll do this at the end I'll do my red Burns quote before I leave okay I know there's look you're 11 watched this before okay now we're really going to get started so with this perceptron video perceptron example let me think of what I want to do I want to make it a bit more interesting visually I think the two things that I can do is number one is right now this is just where do I create the training points right the training points are dividing points whether on one side of a line or another and that line is just y equals x so what I want to do is have a more flexible line I also want to reorient it so that I think about the screen is having zero zero maybe in the bottom left or in the center so I want to like map all the points I think would be good and then I want to visualize where the perceptron thinks the line is and where it actually should where it actually should be so I'll do that and then I also would love to actually visualize the perceptron itself the weights the inputs coming in that sort thing so um so that's what I'm gonna do okay what I say that I say okay a lot cuz now it's all I can ever think about Oh Calgon take me away I don't know if anyone will get that reference if that is a reference to get so this will be I think this will be coding I I somewhat regret making the perceptron a coding challenge because it's really more of a bunch it's really part of more of a tutorial series although I did like the idea of like hey let's make a perceptron it's a coding challenge maybe these followups should be this one will be just coding coding challenge perceptron followup that's what it'll be alright so here we go hello welcome to a followup on my previous perceptron coding challenge so if you happen to watch the previous one if you hadn't you probably should go back and watch it link in the description i created a simple perceptron as' perceptron is a model of a single neuron that receives inputs and then produces an output and this is a very simple scenario where the output is only trying to guess whether a point is on one side of the line or the other is it above this line or below this line so in this followup video what I would like to do is really just refine this example nothing really about the mechanics on the perceptron itself but make this example a bit more sophisticated and allow for some more hopefully some possibly some more creative possibilities so um first thing I got a bunch of things I'm going to do I would list them all but I can't remember theirs I'm just going to tell you what the first thing is the first thing is I would like to and let me come over here to the whiteboard ah the whiteboard is black take two let me come over here to the whiteboard so what I did with the first perceptron was just used the raw pixel coordinates of the processing window I can't remember sighs it was but you know it's like a 640 by 480 window and zero zeros over here and you know this turned out to be the line and I was looking for points over here but the idea of using a neural network based system is typically to get some kind of data input that's not based on pixels so what I think that I want to do here is just redo this example and consider a Cartesian plane with zero zero in the center and why pointing up so where as this is 0 and this is 480 down here you know 480 would be kind of up here so I would like to just redo this whole example and then the line y equal X we should see as appearing like this the reason why I want to do this is the next thing I'm going to do is create a perceptron that will learn any division of data points so it doesn't just have to be a date division that's slicing it right down the middle so first let's make that change okay so how do I make that change hmm well where do I make the points I think I had this I had this point object and the point object makes a random point a random point with a random xvalue and a random yvalue what I'm going to do and I think you know I'm going to just make these now random values between negative 1 and 1 negative 1 and 1 okay so the random values are between negative 1 and 1 in some ways that's it done aha but now right before I show them what I want to do is I'm going to say px for like pixel X and I'm going to map X which has a range between negative 1 and 1 to 0 and width map is a builtin function in processing that takes a value with 1 range and maps it to another it's very simple math and actually have a whole other video which I will try to link to that goes over the map function and why I could do the same exact thing so let's look at this except for with Y right what I want is why when the Y value is high I want it to be low in terms of when it's high I want it to be it's flipped right 0 0 instead of positive pointing down and points up so I want to reverse that mapping and the map function does that for you by saying hey when Y is negative 1 it should be at the bottom and when y is 1 that's a nicer way to say it should be at the top 0 okay now what happens if I were just to run this it kind of looks like a whole lot of nonsense right didn't seem to work well first of all I forgot I forgot a major thing I did the mapping but I'm still drawing the ellipse at those knit at those values let me say P X P Y ok good look at this there are all the points and you can see how they're divided but the line is drawn in the wrong place so where do I draw that line I draw that line right here okay so you know time out for a second I realized I forgot something else I wanted to add this I'm going to edit this out or macho's get this out but which is a comment and I should have opened with that but that's fine I'll come back to it there seems to be a lot of nonsense going on in the chat so I need to not look at that because it's very distracting to me okay right because I'm going to change the coming back so I'm just going to change the coordinates I'm bit of hard code new coordinates for the line we'll deal with that later but so I'm going to say zero comma height with comma zero and we should see there we go there are all the points now what's going on before I had this thing in it in this program where I would draw a red or green ellipse whether or not the perceptron had guessed correctly and that's not working anymore because I am NOT doing the mapping anymore so I need to also just take this same exact math and probably I should package that into a function or make it part or you know what I should do I should make aha the point object should just have a function that's called get a get pixel X is a little bit of an awkward naming get pixel Y let's just call it forget about pixel X and pixel Y so I'm just going to calculate these on the fly whenever I need them and pixel X will do this return that mapping and pixel Y will return that other mapping there we go and then I could just get those values here and get those values here this should be the same but at least I took that mapping and put it into its separate function that way when I need it here I can say PT pixel X and point pixel y so rather than draw the ellipse at that point x and y I can trigger those pixel X if it's a Y functions like that it was a nice little like little addition I had there okay so now we have exactly the same program nothing is different only the nothing is different only the I looked at the chat again and it is out sorry met you edit point whenever I look at the chat I could hide the good come on people be nice to each other the chat you probably are and I just see the one word that makes it appear like you might not be nice to each other Oh me me Mom I've been doing vocal exercises I had a lot of sore throat throat issues this year they've all gone away vocal exercises are really helping all right back into the video what was I saying this is exactly the same program the only thing that's different is the points now live in a sort of traditional Cartesian plane and then I'm mapping those points on into the pixel space what I want to draw them great so let's step one of this follow up video complete let's do step two so what is step two I want to change what I want to change here is this if X is greater than Y I want to be able to have let's come over here any particular function so I could say y equals 3x plus you know plus two right that would mean if X is zero then if X is zero then Y is going to be at two if X is 1 Y is going to be at 5 so you can see this is that particular line so I want to be able to train the perceptron to recognize this versus this and I want to be able to change this formula I can make it negative two X minus three point seven I want to be able to have any generic formula for a line work with this example so let's add that into the code so I think the easiest thing for me to do and I'm just going to put it in this tab is to write a function I'm going to call it it's going to return a float I'm actually gonna call it f is that like a terrible thing to do f of X being the function for I think I'll call this like lying and whatever I'm gonna call it f of X and I'm going to say return what did I say three at three times X plus two so this function basically represents the formula for the line and I'm going to say y equals M MX plus B right that's the formula for a line we've seen this in other so funny how all these examples have this like two dimensional space with a line in it cuz this is the simplest way to start working with data and visualizing that data but ultimately as I get further along these machine learning examples we're gonna have these you know n dimensional spaces that we can't even fathom or visualize okay okay so now the one thing that's a little bit of an issue with this is my mapping is between negative 1 and 1 and negative 1 and 1 I want to make sure the line isn't kind of off and out of our view so what I'm actually going to do is I'm going to have this be zero point three times X plus your opponent again I could have changed the mapping to between negative 10 and 10 but I kind of like this idea between negative 1 1 for every Z so I'm going to change it to that and now what I'm going to do at least just want to draw that line so I'm actually not going to change any of the code in this example I'm just going to see can I draw that line so this is where I previously drew the line so what I want to do is I want to draw a line from neck what up from where I want to draw I want to get the Y value for when x is 0 when X is negative 1 and the Y value for when X is 1 and then I can draw a line between those two points so ok so I'm going to say negative 1 F so let's I'm just going to say x equals negative 1 y equals f of X this is x1 y1 and then the second point is x equals positive 1 and y equals F of x2 y2 is f of so I'm going to draw a line from x1y1 to x2y2 and you know this is a perhaps a very longwinded way of writing this but just to see what I'm using is that formula for a line to get the corresponding corresponding Y to a certain X but can we run this ooh what's wrong with this function oh whoops I should say float X I I lifted JavaScript land for a second I must set the type for that variable probably everybody in the chat was probably shouting me about that okay where's the line I don't see it why don't I see that line ah guess what guess what I forgot I have to do that napping hmm all right all right everybody settle down I'm going to do it I'm going to really I would never use that pixel Y so I'm going to say point p1 equals a new point which is at negative one F of negative one I'm going to do I'm going to write this in a bit of a crazy way p2 is a new point ah new point between at one F of one okay and then I'm going to draw the line from p1 pixel X can I please type today P 1 pixel X PFS word this part I'm typing here p1 pick the Y and then p2 pixel x p2 pixel Y but look at this why am I getting an error here I want to make a point at a specific X&Y what is point do what is the point object I can make a point at a random point but I can't seem to make one at a specific point well guess what guess what in Java processing is Java you can do something called overloading just so happens so I'm going to cover overloading constructor overloading in this case I could say I want to have another way of creating a point and I'm going to use the underscore kind of ugly underscore notation but what I want to do is pass some arguments to the constructor I don't want to call them XY because the point objects variables are X and y I'll call them an X underscore and that's going to be a way that I can do this I could also figure out the label but I'm not going to worry about the label in this case because I'm not using I'm not labeling these points I'm using them just to draw the line okay so now that went away and I should be able to there's that line so there's the like oh this is a lot of work just to draw that one line and you can see though I can change the formula for the line if I'd say you know minus negative point two now the line is further down if I say minus 0.3 you down the line is pointing the other direction so I can now create any formula for the line and visualize that in the window time out new constructor don't forget about controlling at this the chat Simon and alka are both pointing out all the things I missed while I'm doing it but I got them I did okay right how am i doing so far timewise I'm taking a little pause here this will get edited out and I'm going to the next thing I'm going to do is now I have to add that formula into the into calculating the label fourteen minutes or so okay um wonder how many different parts I should do equation parser Oh an equation parser and allow a string to make any equation work ooh I like this everybody's requesting sup in the chat that whatever I used processing everywhere in the chat says can we use Java Script can we use javascript then I'm telling using Java Script how come so processing huggers are processing I can't kick keep it all together folks trying I'm trying okay um alright I'm coming back into the video okay so now what's going on here this is now so now that I have this formula for the line I need to change this no longer do I want to check just is X grade why how do I determine and I'm looking for my eraser how do I determine whether a given point is above or below align so let's say I have this line and the line is y equals 3x plus 2 I know it should be all right let me try to be more accurate about this I'm going to point it up more and I have some points so let's say I have the this is the Cartesian plane here I'm kind of drawing this as a mess ok so let's say I have the point X X comma X is 3 so if X is 3 then this point is 3 comma 11 right I think because 3 times 3 is 9 plus 2 is 11 so if I had the point 3 12 it's above if the Y is greater than the Y that would be on the line and if I have the point like 3 comma 3 it's below if the Y is less than the Y that would be on the line so I can do that for any value of x so if I take any value of x all you do is calculate the point that's on the line and do whether it's greater than or less than so let's add that into the code so here what I want to do is I want to say a lot I'm going to say line y equals f of X all right I'm going to calculate the actual Y value for this particular X on the line then all I need to do is ask is the Y value above it then it's a 1 or is it below it then it's a negative 1 so hey that was easy that's done now and there we go so we should be able to see this perceptron over time learning to figure out whether points are above or below that line it's a little bit stuck right now you can see that it's and this probably has to do with learning rate and you know how it started how the initial weights were started but so I want to kind of figure out like why is it kind of stuck so there's another thing I really like to do here which is visualize what the perceptron currently thinks is the line and let's just so what do I mean by what the perceptron currently thinks well remember the perceptron is oh did I not add the bias to this oh whoops oh whoops oops no wonder it can't do it did I talk about the but does anybody remember does anybody remember last time did I think I talked about the bias but I don't think it's in the edited video that was published right oh sorry Topher Jay you lost power at the office I talked about the bias in the live stream but I didn't so I have to fix that all right we're gonna fix this you talked about it but didn't ends Bennett yeah but the question is did I talk about it in the edited version of the video that's published it's one thing to talk about on the stream but people later don't watch the very few people watch the archive stream they generally watch the edited versions so if I go I'm talking about what's in this particular video here which is 45 minutes hey no extra ads no extra ads what happy big yeah okay right leg towards the end here I can't watch myself this is very uncomfortable oh god I sell I'm really oh yes can you guys really stand listening to me oh my god I don't see anything about the bias in here oh wait no no it's there I must have talked about it right I must have talked about it right yeah I did in the edited video because it's there okay yeah there we go okay I'm touching my nose and listening to myself I'm saying okay okay okay all the nervous tics are coming out yeah so why is this getting one reason reason why this is getting stuck and I mentioned it in the previous coding challenge and I completely forgot about it until now the bias so let's talk about why does there need to be a bias here's the thing let's consider the point two zero zero when I say well this is the point zero zero y equals zero times X plus two the corresponding Y value is 2 so zero is below the line here's the thing with my perceptron as I send in the x value and the y value if I send in zero zero no matter what these weights are if I multiply the inputs by the weights in something I'm always going to get a zero coming out which can't be right and this actually in this formula for a line y equals n X plus B these weights are actually just describing the rise in the run those are the right terms of the line the slope the numerator and the denominator you can almost think of this as I think weight 1 divided by weight 2 times X plus B for bias the bias being the yintercept of that line where is it so what the bias is in a perceptron is another input that always has the value of 1 but has a different has its own weight called the bias weight and now you can think of this formula as y equals wait for Y / wait for X or is it the other way around somebody's going to tell me in the chat plot times X plus wait for the bias times 1 so hard this is sort of times X does this make sense so this is really what the perceptron is learning we know the formula for the line and we could do all this with maths however we can train a neural network system a perceptron to figure out the formula for this function the idea of neural networks are to solve solve a function on how's the best way to say this time out for a second I need some wording example formula I'm looking at the chat yeah this is just the beginning of using neural networks we are using a neural network a simple perceptron to figure out the formula for a line the function to get a Y with a given to get an output with a given set of inputs but what if those inputs are you know there's a thousand inputs and we can't figure out what should really we don't have the math formula for a line but we'll be able to use a neural network in the same way to solve to to solve that function that's not the right way to say it either I like losing my confidence here I'm gonna try this one more time neural net we're saying that can make its own functions that's what I'm trying to say Universal function approximator thank you roll this back back roll the tape back and this slope with increasing value of X what is the value of coordinate Y we're going to we're going to find out this is right okay a neural network is often referred to as a universal function approximator thank you to the chat who just posted that terminology right we with a simple like twodimensional space and a formula for a line we can do the math directly but here you can imagine once our data input set guess which we have all this data with lots and lots of inputs beyond that are in ndimensional space we want to be able to walk approximate a function to work with that data and and this is we're seeing this beginnings of that here okay so let's go now and implement the bias in the code and I heard the camera just shut off so I'm going to press that alright so for the bias there's a couple things I want to do number one is I'm just going to add that to the point I'm going to say it has float b4 bias which is call it bias and bias is always equal to 1 so every point is going to have an x and y and a bias and then the perceptron now needs to have three weights needs to have the weights for the two inputs the X and y and the bias and one thing I might do is give the perceptron constructor a number of arguments so that we could have a sort of more generic Piet perceptron and I can say weights equals new float N and then when I create the perceptron I want to say perceptron three and then here oh this was just something I had just to test the code now the inputs should always be an array of three things and is there another here training should always make sure to include that bias and I think did I miss it anywhere else I hope I didn't let's find out does it have is it is it working so here's the here's the other thing I can't really tell if it's working or not it does still seem to be stuck so I probably missed something and I you know I should go through and debug this but I think everything is actually alright because the inputs I is still the bias which is one um hold on timeout I'm just this is going to be added down just thinking for a second this is bothering me um I think what I want yeah I just got unlucky it just didn't I just got unlucky the last time so it actually is working a lot all right let me come back so I'm going to go back to where I just changed that I think I was able to get all of the and so let's run this again we can see that it's still a little bit stuck I'm pretty sure that I have the correct code now but here's a way that I'm going to be able to determine whether it's working or not what I want to do now is also visualize what the perceptron currently thinks is the line so remember this is where I drew the the actual line the correct formula for the line what I want to do now is let me I think I could do this with the perceptron so I can say point P 1 equals new point negative 1 and I'm going to say what did I call the perceptron brain brain dot guess why negative 1 so I'm going to ask the and p2 is one brain dot guess why and then I'm going to draw the line oh let's call this P 3 and P 4 so I am going to attempt to draw the virginal line that the perceptron thinks and this should be one so now if I go into the perceptron and I say I already have a function called guess guess why a little bit awkward here naming wise guess why and I have an x value the formula for the line so the slope should be weights index 0 / weights index 1 and the yintercept should be weights index 2 so I should return X M times X plus B so something's happening here but I think I'm off right maybe what I meant to say was weights 1 / weight 0 so this is the line trying to learn boy it's really not doing a very good job let's run this again it's getting stuck right I have to but annealing means crowd is asking about the reducing the learning rate over time which I was thinking of doing let me let me step out of the tutorial for a second and give myself a lower learning rate yeah I think I have some I definitely have something off hold on I've got two let's look at my I kind of want to look at the let's think about this thinking here I'm looking way to get the chat for by converting to pixel space I think I am yes right um let's look at what those let me go back to we go back to this way this is like where I need to play this music my debug is using money because it looks like correct there but just flipped right W 1 divided by 0 times X and I not yeah I did that W it should be W 1 I knew that's what should be I'm looking at the channel oh yeah I know I need to cry there's so many things I want to add to this I was just trying to get this one I guess I'm gonna I'm gonna do what I didn't want to do but there's no reason there's no reason not to I'm just going to go look at my example that I made a long time ago and see what I did there so this is my example from a long time ago that you can see that it's behaving more like you would expect so let's see let's look at some of this so I also in this example I made X min x max I made a coordinate space that has oh I have this like tiny learning rate three training K same sort of deal here and I draw the line now get the weights and what's going on here with this because I'm trying to probably convert it to pixels here this is the right idea 0/1 so this one I did 0/1 oh yeah formula is there's a way to figure this out of course all of these should add up to zero right let me take a little break here right whoops all of these weights zero times X plus weight one times y plus weights two times B all of this I know I'm off you can't see it more equals zero sorry about that now let me turn the camera and so I can say let me just write this way weight 1 times X zero times X plus weight 1 times y plus way 2 times B all this should equal 0 so y equals oh yeah look at this Oh something I'm gonna put this in the video because this is where my mistake is happening all right we minimize this all right so so I think I need to take a closer look at this and figure out what's if this is really right I was just kind of trying to guess so there's a way we can actually do the math for that properly remember the perceptron right the X is multiplied by a weight the Y is multiplied by a weight the bias is multiplied by a weight all those are summed so before we left for the line that it's learning is actually the zero weight times X plus weight index one times y plus weight index two times B all of this should equal zero so that means weight index 1 times y should be weight next 2 times B minus weight index zero times X and then Y should equal weight to divide it by weight 1 times B minus wait zero divided by weight 1 times X I think that's right it's pretty different than what I have let's take a look Oh Oh there's a major error here even before I got to this thank you to Ethan Elliot in the chat I forgot to initialize the bias in this constructor what a disaster so probably do save me from myself I'm just going to initialize it up there wonder if that's really good so I never actually even had a bias so I think this is actually working but I'm not visualizing this line perhaps correctly so let's go back now and let's see where do I want to do that I'm going to say y equals so let me let me use the formula that I just used return so let me do this I'm just going to create some shorter variable names to make this easier to look at and I'm going to say return looking over here at that formula I wrote over here I'm going to say return ww2 divided by W 1 times B times sorry times bias o times 1 the vise is always 1 so W 2 divided divided by 1 plus W 0 divided by W 1 times that x value now let's take a look and see now if things are working as they perhaps should I think you could see that it's actually I flipped somewhere am I missing a negative oh this should be negative ha ha ha that's why and w I'm just curious here I take this out I'm just bear with me this could be edited out this part here hold on let me go back and look negative wait wait zero times X so why did I all right what hold on should this be negative that should be negative to know well clearly it should be why is that negative also this is where I left liftoff or you can see that it's in the wrong place but it's learning my first two equations on the whiteboard weren't equivalent oh oh this should be negative I'm making a lot of mistakes today it's very hard to do this live on YouTube although I'm sure lots of other people wouldn't make as many mistakes as me it's because I'm only having tea all right matcha I am so sorry if you need to go way back to where I switch this to negative this looks very close but it's kind of off right thank you to the chat somebody in the chat just told me that my equations are wrong and they are this should be negative right because this all of these had up to zero so I need to take if to make this equivalent y1 times y equals negative Y W to W 1 times y equals negative W 2 minus negative W 0 X that's going to fix it ok so now I'm going to say negative here and we're going to run this and we're going to watch the perceptron overtime and you can see as it's correcting all those circles are turning green with this learning rate slowly over time the line is converging to the correct spot but I perceptron learning line so um you know if there's going to be a part three in a part four to this because I think I'm gonna wrap up this particular video there's some other things that I wanted to add to this but at least now in this video I've added the bias I've made it so that I have a Cartesian space I can work with and I can work with any formula for a line as you can see life is just one big refactoring and there's so many things I could do to refactor this and visually I still don't necessarily love what I have here in terms of explaining what's going on but at least now let's just before I go let's make a new formula shout out your numbers to me nobody can shout out to me eight nine times X plus point two or let's do minus point two minus 0.1 let's just have a different formula for a line and see that this again works we can also probably have a much better sense of what learning rate is doing like look what happens if I make the learning rate point two right now you can see how it makes these very large movements so it gets to the correct answer very quickly but it can't kind of do the fine detail to really find the correct spot and if I make the learning rate really ridiculously small you know you can't even see mean it is in theory this line is moving it's so small that I can't even see it let's not be so crazy let's do that all right I can't even find the line the line currently isn't even in the space because remember it it starts with something random let's run this again so this line is moving but it's just really really really slow so it's all about finding and that learning rate can change over time I could start with a large learning rate I should make a slider to adjust the learning rate I could start with a large learning rate so it gets close so look at that it just pop locked right in and then I could lower the learning rate for those refined motion movements okay so a couple things I want to do I think I'm going to make a couple followup videos on this they'll appear at some point but there was a great comment in the original first version of the coding challenge about adding data that is not part of the training set which of course is very important in machine learning so I'm going to do that in the next followup to this perceptron coding challenge thanks for continuing to watch okay yeah get a discord and you can shout at me alright yeah you could change the boy not that I really yes follow up on the follow up videos alright so what am i doing how am I giving timewise um I used up my first hour so I wonder if I should move to my Frogger refactoring let me show you what this comment was I pinned it if I go back to the perceptron what happens if I google perceptron Schiffman what's the chance there it is what is this 2006 whoa is this really gonna come up this is from over ten years ago oh my god you were just destined to repeat yourself every 10 years with new languages and frameworks long overdue this is from 2006 apparently I've started working on a series of processing examples that implement neural networks yes I spent some quality time with artificial intelligence by George Luger I've used that book I suppose look at this I originally did these Oh Erin steeds website what's this lean this artificial intelligence libraries for processing or Java ah Wow this still exists this is amazing okay uh Ola I will take my little tour through creative coding history later I think that I should try to do the Frogger refactoring let me sorry I got sidetracked um I wanted to get to the perceptron I wanted to show so too much to do let me get to this so I pinned this comment only got another ad who would seize that why do I put ads on my videos so what makes it money off of them anyway okay how do I beat this how there we go okay I should click on the animate two cents or whatever alright so let me uh let me read this comment one thing you should definitely do is try your perceptron with new data you can create another hundred points exclude these points from training and test the perceptron with these points a cool way to test is add a point to click on the mouse and let it label it from the perceptron and then some nice feedback so I wanted to do this is the next thing I wanted to do of course this could be a great exercise for anybody watching I'm just getting ad blocker no I don't kick it an ad blocker because I support and I don't know what okay and so our YouTube bread actually I should sign up for YouTube bread that I should do because I like to support people on YouTube I'm trying to do stuff look here's another okay oh yeah look at these suggested videos like which one should I watch right now all right I've distracted um so how do people feel oh don't click on your own ads that is illegal okay I shall not click on my own ads I hereby affirm and I swear I affirm on the billion random digits bug mmhmm do you Daniel Chief Mon solemnly affirm on the a million random digits with a hundred thousand normal deviants in the RAND Corporation that you shall not click on your own ads I do do so affirm my fingers are crossed okay okay hi so let's do a straw poll I maybe I shouldn't I should just yes I think Simon is asking that the line is off and it's never I don't have enough training data nor do am i refining the learning rate in such a way that it's ever going to be perfectly precise I do believe that the perceptron would work and get a perfectly precise line if I if I for example a couple ways I could do that is if I had many many more training points so now I have a thousand training points so we can see it learning over time to correct its guesses and if I did something where eventually like I did something where I think it's called annealing where I changed the learning rate over time so I could start with a high learning rate and then lower that learning rate to refine and kind of get it exactly in position I dig you may now kiss the book it did I just marry the million random digits books because that's a little bit weird all right what do you guys think I'm trying to decide if I want to do more with the perceptron or refi feel like I want to refactor the Frogger because I'm not going to be back for a while and I feel like I can't let that Frogger code stand I mean I'm out trust me I'm all about just make it work messy code have fun to worry about it too much but I do feel like yeah so yes I mean that would be a great exercise if David in the chat asked is Daniel a professor or a teaching assistant unfortunately they somehow gave me some sort of professor like title here but really I'm just I'm like whatever is lower than a teaching assistant that's I think that that works for me just fine okay so I'm going to go to Frogger let's open up Frogger I want to show by the way somebody on Twitter shared with me I want to say if you're going to share stuff with me on Twitter please share it too at Schiffman I don't really check the coding trains Twitter but I did check it they just auto post stuff from YouTube but I did check it right before because I have it on this diss login for live streaming and at Jason ma on Twitter created and there's a gif of it here a version of the Frogger game that based on the code that I made you could see added colors and different you know different sizes and speeds and multiple lanes score and a timer and all that stuff's great example alright and then I wrote CI and I replied format Schiffman because that's what I'm better at doing okay so let's see where did we leave this at so this was this was Frogger let's see if I can at least defeat it once ah come on got it yay you just watched me play my own so now I'm going to so what I would like to do is I'm going to do a refactoring video the main issues I mean there's so many things that could be improved but this is a major problem this hard coding of all of these different objects so I think a way the other thing is this log clasp my discoverable is unnecessary so I'm going to just rename this to obstacle so a car and a log are different kinds of obstacles they can just both be an obstacle object then I'm going to create a lane class and so I will configure a bunch of different lanes and each lane will have the color of the vehicle the speed of the vehicle may be the type you know there's there's a variety of different ways that I could approach this so that's what I am going to do I think it'll be better if the Frog would snap the log it lands on but if it's too far off of the log and fall into the water that is a good idea alka so I think what I'm I approach here is more to refactor the code and not actually improve the gameplay although that that would be useful for another video as well but you know I'm not going to add score in that kind I just want to make the code easier to work with I should calculate the learning rate using the error be better than the number of iterations that is a very good point about the perceptron I shouldn't mention that can somebody somehow hold on I was keeping a text file is it open still open recent untitled maybe no so sometimes I try to keep notes for next time next time a perceptron learning rate tied to error a data that is not part of training set visualize these were the other things I want to do visualize the perceptron itself and then why is one perceptron no good so these are the things I didn't get to today add the mo momentum I'm sorry I'm reading the oh there's all sorts of stuff going on the chat all right yeah we're going to add color I'm going to add color in this because the lanes can have a color I think I've even it's just sort of random okay so here we go I don't know why playing the timpani sound it's my favorite sound effect that I have what time is it I have 45 minutes so whatever happens happens in this 45 minutes this Tiffany sound is still going it smells different hello I am back for another Frogger video so this is a guest part for at this point of the Frogger coding challenges in some ways this was unnecessary but I did do feel like the first three parts were a demonstration of what happens when you just try to figure out stuff from the fly you're kind of rushing I do not play this game for 45 minutes please hello welcome to what is now somehow part 4 of my Frogger coding challenge series of making the game Frogger so in that at the end of part 3 I have this and a version of the game that I can actually play here and I'm in a second I'm going to get to the top so what I want to do though so usually I think that for the part the first three parts were in some ways an illustration an example of what happens when you rush through code you're trying to figure out stuff on the fly and things start to get very messy I'm like I'll fix this later and you know I tried very I'm don't get me wrong them all for messy code and just having fun and trying what works but I do think this is an opportunity for me in my videos to take a look at what it means to refactor code so what I would like to do in this video is change very little really at the end of this video I would be happy if what you see is exactly this result but the code has been rewritten in such a way that it's a bit more scalable right now if I wanted to make the window taller and add more log lanes or more car lanes I'm going to have a very difficult time doing that a lot of stuff is hardcoded in here so the main work that I'm going to do and again I haven't really done this before playing this out I'm just going to be doing this on the fly as well so for sure i'll create new problems by solving older problems is create a lane object so let me think about this for a second so I need to do time out because I want to use the whiteboard and I haven't played that this dot song today do people want to hear that this song today that's usually what I play when I erase the whiteboard where is it as always I always forget to dis stop this stop this stop this duck nd this stop is stop stop this oh cool it's okay that cup of tea was empty it did not spill all over my laptop this stop this stop just stop this stop this stop this pit stop pit stop Jim's done this stop the stop and then this stop it stop just stop and then you this stop this stop I lose this stop alright so now I'm going to pretend that didn't happen and the Frog a unicorn of the lanes rainbowcolored definitely okay so now I'm going to go over whiteboard okay so let's think about what is a part of the lane so if this is the Frogger game an individual Lane has a bunch of elements to it it it actually could be an instance of a rectangle object it could also extend rectangle because it can have you know an X Y and a width and height but ultimately the things that I want to keep track of our number of cars or logs speed of those cars speed of those cars and logs a spacing of those cars are logs so Elaine is going to keep track of all of those things on its own and it could also what what else could it have I could have like a color the color for the cars the color for the background so that you can start to see like what are all the things that are part of an individual lane and another thing thank you to me I answer me who suggested this you might have noticed in my previous example that the cars and logs are actually basically identical I'm just drawing them in a different way and ultimately you know I haven't I'm actually not even drawing them in a different way that's something that's still sort of like left as a next step for this program but I'm interacting with them in a different way and then I'm checking whether the you know with the with the logs the Frog has to land on it with the cars the Frog has to avoid it but I think I could just use one object and just call it an obstacle rather than have these two different objects is kind of unnecessary at this point okay so coming back over here let's start trying to do this so let's write let's try to write some code for the lane class so class Lane oh yeah and and uh Simon is asking the chat what about the safety lane so I that's an interesting question I could just have a lane that has a number of obstacles as zero that could be how I indicate if it's a safety Lane and I could also there's something else I was thinking of here I could also have some sort of like a type variable whether the lane is like a cars lane or a logs lane and the logs could be Turtles right in the cars could be cars or trucks there's a lot of possibilities here and again I'm just trying to do a small simple version this so coming back let's create this lane class and let's get rid of I'm something to do this I'm going in order to do I'm going to save this as oh wait a second oh yeah no say this has frog or two and I'm going to delete the log class get rid of that complete that's going to break I'm going to call it and I'm going to change this to rename by the way this is something that's in processing now see if this works if I go and use rename I can rename it to obstacle it's going to change it everywhere in the code so see how well that did attach up so one place where I missed it here because obstacle obstacle so I missed it there okay so this should still be and this should be obstacle and this should be I missed it by not changing log everywhere oh so many places oh come on see this is why my code is terrible oh good okay so now I have at least the same program again and just obstacle instead of cars or locks now back to the lane so what I want to have is I want to have some array of obstacles what else did I say I want to have a speed and maybe I said maybe I want this to extend rectangle so I can have a location I want it to have a looking here a speed what else did I say a spacing sorry and a spacing let's just do that for right now let's start off simple so within the constructor extension say extends the constructor should have a number of obstacles SPD for speed and SPC for spacing so obstacles now is a new array of obstacles with n elements in it and speed is some speed and spacing is some and spacing is some spacing okay so this is the idea of a lane and if it extends rectangle I also need to call super and I probably should give it an X a Y and a width and a height X Y width height so this is a lot of stuff to pass in but X or Y a width and a height a good trait I'm sorry I spaced out for a second because this camera clicked this is a lot of stuff for the constructor I don't love that might want to rethink that a little bit later but I'm going to just leave that for right now okay so now what I'm going to do is I just I want to get rid of all this nonsense so I'm going to comment all I'm just going to delete it I'm just going to leave Row 1 just going to leave Row 1 and we get rid of this the idea here is that instead of having two different arrays of obstacles I want to have an array of lanes now how do I know how many lanes I need well actually the way that I'm going to do this is I'm going to have a lane object for every single horizontal bar even the beginning bar that middle safety Lane and the end for example so if I know the height in pixels I can just say the height divided by that grid size is the number of lanes that I need so I'm going to say lanes equals a new array of lane objects with total lanes is height divided by a grid and I want that to be an integer so I'm going to convert that to an integer total lanes okay we're getting somewhere refactoring refactoring very exciting so I want to have a total number of lanes and here's the thing actually Simon in the chat is making good suggestion I can really simplify this I actually don't need to pass it an X I don't need to pass in a width or height because those the X is always going to be zero the width is always going to be the width of the window and the height is always going to be that grid size so I can create it's rectangle with some hardcoded values and I feel perfectly happy with doing that and there might be some reason I have to change that another time but that makes this much easier to read okay so this is the total number of lanes now what I want to do is I want to loop through and create all of the lanes so every single Lane what do I need I need the Y position the number of obstacles speed and spacing so let's just pretend for a second that what I'm going to do is just put cars on all the lanes I'm going to say a new lane at I times grid right so I times grid is 0 times grid is 0 1 times grid is grid 2 times grid is 2 times great sum 0 50 100 150 so that's going to give me all the spots and I'm going to just put what is the next thing I need in the lane the number I'm going to put three objects in each one then I'm going to then the next thing is the speed I'm going to have all the speeds be 1 and the space thing is going to be 100 so I'm just kind of going to do this in an arbitrary way I'm going to delete this and what I'm going to do now is I'm going to comment everything out because we're going to have to figure this out now everything is going to get much better now so this stuff so what I want to do now is I want to loop through for every lane in lanes let's say Lane dot show so I want all the lanes to show so that means I need to write a show function and what does that show function dot say for all the obstacles have them show and by the way here when I made this array I kind of need to create all those obstacles so now you say obstacles dot index I equals a new obstacle Reeth poison is it watching somebody refactor their code wildly entertaining Kari oh my goodness I'm sure this was such a good idea so what is it when I make an obstacle well I did that I deleted all that stuff I needed to keep that because I needed to reference it but it's okay I can remember I give it an X or Y a width and a height and a speed so the obstacles get created at where do I do that in the lane the get an X the X is I plus sorry is the X is spacing times I comma the Y lanes one then what else the speed is the lane speed and width and height is um oh that's a okay I'm just going to make them squares right now grid comma grid I forgot about something okay so we're going to fix all this what do I have so far one red fog a hole just take a break for a second I I'm like my brain starting to gotta stay hydrated I think everybody's saying same in the chat I have to know what this is that they're saying Oh everybody saying the stream lag am I still here am i back okay just like for a second okay all right okay here we go let's let's keep doing this what do I see anything I probably forgot something rather important I made a bunch of links let's debug this and let's just see how many lanes did I make let's make sure I'm making a lane footprint Lee okay I made 10 lanes that's right each lane each lane do I make the obstacles here looks like I'm making the obstacles oh I'm not calling and I'm calling the show function lien show let's the obstacle dutch show obstacle not show so what's wrong here let's just see a mic so it should be drawing a bunch of things ah look at this the width is 1 I messed up the width somewhere okay new obstacle EXO speed is the last argument right the obstacle requires X Y width height speed X Y width height speed okay so a bunch I made a bunch of lanes that worked now let's you know I've gone a few steps backwards here unfortunately but we're going to get back we're going to get back to what we had it's this is going to be good trust me stay with me you're you stay with me let's say lane dot update what was it this is not update no no oh yeah oh I should just make a run function let's just make it run I might regret this later and we'll do a show update so lane dot run okay so all the lanes are working I know they're all doing exactly the same thing that's fine is it's going to come back yes they're coming back okay so this is good my lanes are working one thing I realized I forgot is that the lanes could use a variable for how wide the the so when I create a lane what do I have right now I have I have its Y position total obstacles of speed and spacing you know one thing I sort of feel like doing is maybe just making the speed random I mean why not right so I feel where are you let's make the speed random somewhere between like negative three and three you know let's just so I don't need a speed so that's sort of nice to see right so even just with the speed random I'm going to get a lot of kind of variation there and it could be hard there could be a specific configuration supposed to be but I'm gonna make that random then I'm also going to what I want then as another argument is the total number of vehicles and the size of those vehicles the width so I'm going to give it a variable called W does that mess things up though because it extends rectangle so I don't want that so what is it I'm gonna call it the length so this is the length of the cars or logs and that can be actually be an integer because I'm going to think of it as they all have to be a certain number of cells on the grid but multiple of 50 so now when I create the lanes I'm going to and I'm actually just could just make that random also but no you know I might end up I'm gonna let's just put them let's just put one in there I'm gonna do this you'll you'll see hold on I got an idea here so I'm going to one in there and then the obstacles there with is grid times that length and guess what I don't think I need to actually keep track of these variables well speed I do because it's random like I don't really need to keep track of this spacing it's Rhyno anyway really just using it to initialize but that's fine so now look at this that's with one and I've got all this nonsense print line in here stuff that I don't need where did I put that print line that I don't need now what if I save make say that great so now you can see they're all double wide and this spacing I could make 200 and you can see now they're all spaced out by 200 they're all double wide so now I have this ability to just put you know as many or as few things there's only one thing in each lane there's three things in each lane always with a random speed so I'm hard coding the number of things there with and their spacing but I'm making their speed random and I'm also going to add one more random thing which is just a little offset so they don't all start together I'm going to create a variable called offset again this doesn't really have to be I can really just use this as a local variable here and I don't really need this same thing with the spacing this can just be spacing I'm going to give it a random offset between 0 and 200 just as giving it an offset so what I mean by that offset is if I don't actually move them they will all start slightly offset from each other okay now we're cooking so I'm able to now have all of these different lanes and I want to give them a color and some other things at some point that can be an exercise for you here's the thing though what I love about this is I can run all the lanes but I still think on some level I want to manually configure them so it's nice that I can initialize them in the loop and could make them random but just for demonstration purposes right now I'm going to configure them I'm going to configure them one at a time so lane zero has zero things in it so the speed and spacing can be zero that is where the Frog starts Lane one which will be at grid spot is going to have three cars in it with a what what's the second thing a a width of one and an offset of 150 so uh okay so lean I'm so I'm going to just going to do this now really quickly then two three four two three four will also be a safety Lane then what do I have left let's do this again five six seven and eight I kind of want it I kind of want four I think what I would like so let's make this the height 600 I would like for car lanes safety Lane for uh for log lanes and then a SATA last safety zone so what did I miss here oh I need oh no that's ten that was right I don't need to make it ten for four no no no that's three ah I do need eleven if I'm going to do four look at this you know we've got a little less hard cut some new hard coding everybody so let's make this now back to 600 and here we go what did I get wrong here are people I should have eleven lanes well that's 12 550 oh boy ah right and now they all need to oh this is awkward this is awkward and here I'm going to give them just a lane in down and then what I'm going to do in the lane object itself is set the Y location and this is really not y is like index index times grid index times grid and index times grid okay so you can see now there we go there are all of the lanes and I want to make sure they update and so there we go all of my lanes now I can start to individually configure them so I can say things like the second one should have two that are triple wide and spaced out by 350 pixels the third one should have four spaced out by 200 that are one then this should have three that are two spaced out by oh and i don't want the speed to be random actually because they really should be like every other one oh and these are the top actually so what's first to so I don't that the random speed is a bad idea so I'm going to go back to setting the speed manually because I want to configure this manually and I'm going to give it the last argument will be speed and I'm going to say uh three negative two point five one negative one point seven and then I'll give this one a also zero I have too many lanes two point eight four I could have made it I could have just had its direction and still have it be random but I'm but I'm but I'm very but I'm going to manually configure this game of Frogger you can see how you uh negative and then and zero so now we can see and this one they need to the last lane they need to be spaced out by quite a bit more so let's space them out by 250 so there we go so now I have and then some I want these to change like this should be 4 this should be 2 and this should be 1 and this should be 4 and this should be 1 double wide triple wide single wide so there we go here is now my game of Frogger and I can go through it now I'm not doing I'm not doing any of the tests now I also I want to give these lanes of color I think would be useful to give these lanes of color the other thing I could do is I can yeah let's give these lanes a color and let's make that the last let's make that the last argument color and actually you know what I'm going to do I'm gonna do something totally different I'm going to write a second constructor second time today this was in a different video that I recorded earlier today I'm going to use something called constructor overloading so I'm going to make a constructor that optionally takes a color as its second argument and I'm going to use that just for all of the all of the the three lanes that have no obstacles in it and I'm going to say write a new function that has its index that can't really be an integer and then a color and it needs to call super and then it needs to say obstacles equals a new array of obstacles with zero things in it don't want to have any obstacles in this Lane and it's and I'm going to give it a each Lane is going to have a color and its color is going to equal C so in this constructor the color will equal black and here I can now and then when I in the run function I'm going to draw a rectangle doesn't rectangle have a show no I have I'm going to create a I'm going to just draw a rectum I'm going to say fill that color and draw a rectangle at X Y width height so we can see there we go oh I love this now I have a lane object I can configure the game laying by lane so I can create safety lanes with a different color and I can create lanes with other obstacles in them so now this is exactly the game the only thing is you know none of the actual gameplay is there so I need to go back and put that game play back in now I have all that commented out here I don't need to draw the these separately this what I can do here is I can say I can now look at every Lane so I can say Lane check frog so I want every Lane to check the Frog and that is going to be here so what I'm going to do is I'm going to take this okay show update this is really what I want to do here I'm going to take this and in the lane I'm going to say I'm going to write a function called check which gets a frog and then what I want to do is loop through all of the obstacles I'm going to call them oh I don't need to show ups this is like taking a really long time and I'm feel like I'm being very boring what we're almost there before he's watching um I'm going I don't need show an update that happens somewhere else and I just want to check if frog intersects that obstacle reset the game so I'm just now going to do that as if all of the lanes are obstacles okay see this stuff should happen really fast now that we've refactored I should be able to do this stuff really easily so see every time I intersect an obstacle I should get sent back to the bottom right okay so I'm able to play this game now I need to I need to only check so I need to figure out whether the lane is an a log lane or a car lane so maybe I'll do it type I could you let's do it type let's say I could make it a string that's probably a bad idea let's do a I'm going to do this in a kind of a goofy way I'm going to say type and the lane is also going to get as its second argument and we'll do that here too it's going to get a type when I create the lane so I'm going to say type equals S type equals s I'm going to create some kind of constants string safety equals safety string what other types could be car equals car string what's the other one log equals log so what I'm going to do is I'm going to create the lanes this way this one is a safety this one is a car car for car lanes then I'm going to have law then I'm going to have another safety Lane a log lane and another safety Lane okay so now we can see here I've added this now I could have just put the strings directly in here but I made these like separate variables at the top to store the actual strings because and honestly I don't want to use strings I want to use numbers because I don't want to have to remember is 0 or 1 so I want to have a variable and these I could say in Java awful java monster language speak I would say like final constant int so I want to make these intz but I'm just going to be sort of lazy and having to be all capitals and integers so now what I'm going to do here is this is an integer for a type I'm going to call it t just for type and actually I don't need to have this argument here by definition if it's getting if it's using this constructor it is a safety Lane and this should be an integer and I can take it out of here so these don't need explicitly to say safety because that's by definition rep just refactoring refactoring refactoring ok so now what I'm going to do in the lane check function is I'm going to say if type equals car I'm going to do this right now otherwise if type is a log what is the thing that I did I had this like very weird thing where I had to check where it was but now I don't have to do that I can just say take this all this code here not I'm going to just grab this for right now and I'm going to put this in here this was the code for seeing if it's intersecting with any of these frogs and if it is attach that particular law so I renamed some of these variables and I'm just just just all the same code that I worked out the last time I'm just and if it's not reset the game although this is a bit of a problem so I'm gonna have to work this out there so there's this is going to have to change because I'm doing it by lane now so let me take this out for a second we're going to work that out later so let's just see right now this should work whoops where I should be able to look at that oh whoa so I need to get my attach and detach going again let me run this again whoa it's already attached if type equals log so I wonder if this is happening by accident even for the yeah it's not attached oh but it attaches instantly even to that Lane so why is that happening it shouldn't right if the lane is not and by the way this can just be here it shouldn't right what am I missing here frog intersects oh why is it automatically attaching in this Lane oh these are the logs ah I forgot oh my god that I did this the top I'm creating lanes from the top to the bottom so these are all the logs and these are all the cars I forgot okay so now right if I intersect I've got to get through all these and now here's the thing though it's never going to detach so I need to get the detaching back in so how am I going to get the detaching back in so I need to determine I think I should have some code I need a break hold on a second to take a break for a second check the time I only have ten more minutes look I really have to leave and I don't have a lot of leeway here I mean I maybe have like five minutes of leeway but I don't have a lot of leeway and this is clearly but this is the last piece that I need to do the question is should I have the Frog register which lane it's in and only check that Lane right why not just register the Frog for which lane it is are on move detach that's a great idea every time I move I should detach that's a good idea okay so uh thank you to Alka in the chat who said I what I was thinking is one option would be to actually have the Frog register which lane it's in because I know it which lane it's in based on its Y position only check so there's not really any good reason for me right now to have all the lanes check the Frog I kind of want to do that but I'll get a different suggestion which is just detach every time the Frog moves right because if you're going to rods going to jump it shouldn't be attached to anything so I could let's try that that might actually be a really quick fix but I'm now realizing this loop for the lanes is kind of unnecessary I could just pick the one lane that the Frog needs to check against but let's do the detach thing real quick on move I'm just going to say frog attach no so it's always going to detach I need to start myself in the center right so you can see now all of those behaviors are back and you can see it's so now I don't have the thing that's telling me to reset the game so the issue is and this is why I want the fraud to register its lane the reason why I want the Frog to register its Lane is because if it's in that log Lane and not touching a log it needs the game needs to reset so what I'm going to do is I'm going to say and I still can do the move detach thing int late which Lane index equals frogs Y / grid right and an integer version that that should give me the index that it's in all right let's just see this print Lane index it's actually going to have to be inverted I just realized oh no that's right ten nine eight seven six so this works so now that's the only Lane I need to check so I can just say lanes index Lane index check frog so this way ah I got to start myself in the middle so when I'm testing it this is hard okay I'm starting myself in the middle the frogs Y location is high / maybe grid black put it in the center okay oh whoops that's at the wrong place oh wow it should just be lanes height divided by 2 grid divided by 2 is what should be yeah there we go sorry so now I should be able to oh ok so now I should be able to jump around but and get pushed off but I now need can go back and in the lane check if it's not okay you lost reset the game okay whew so now I should be able to jump around but if I fall off a log I reset the game if I jump into if I jump into the river I reset the game and it's resetting it to the middle because that's where reset is okay whoo I think we refactored this pretty nicely somebody made a good point like well why should I have this type variable maybe what I should do is use inheritance and have three different Lane classes car lane obstacle and safety Lane and actually that's a very good idea and I think it could be reasonable to refactor this yet again so I think this is going to be enough refactoring for this particular video all I did was refactor into this Lane and I don't know if you can really see this makes if you really want to see the beauty of what I've done not that anything I've done is really that beautiful what I love about this now is this is the draw loop looks ah I can't use my keyboard ah this draw loop is so simple and the one thing that I would actually say is maybe the lane index the Frog should actually have a function that just returns it's the lane index because look what's happening here I just run all the lanes I just checked the one lane the frogs in and update and show the Frog so this refactoring and even though this is a little bit unwieldy it's so much better and I think somebody's knocking at the door because maybe I'm being too loud I imagine somebody knocking at the door okay sorry about two that's going to be an awkward edit I'm going to start again here um even though this is a bit unwieldy because I've initialized all the lanes manually and maybe there's a better way of doing the arguments that something should be random or I should have some type of algorithmic way of generating it that's yet another opportunity so with refactoring only comes more refactoring refactoring forgets refactoring life is all just one big refactoring session so I hope you enjoyed my rather long refactoring session I think there easily could be a part five to this in a part six what I want to say and is that check this videos just if you want to contribute to this there are a few things you can do so in this video just in this video's description there will be a link to a github repository that has this processing version that has a JavaScript version of the same code and then also a link to another github repository that is kind of a community created version of the game where people can add their own graphics and different things and if you make your own version and want to link to an arena there's all these ways you could share and contribute to the stuff I need to say it more succinctly but check the description and I'll describe it in there so thanks for watching this part 4 is it the last will there be more will there be another actually I'm one thing that I was thinking of doing was redoing this whole coding challenge as one video but in JavaScript now that I've done it in four parts maybe I could do it all as one video faster I don't know we'll see I'm thinking about that if you're interested in that say in the comments but I don't know that anybody's actually watched to the end of this video ok thanks for watching and I'll see you in a future video oh oh oh oh no don't leave yet sorry one thing I left no no I think I think I might have left no no I got it right oh no I left the wrong I left the wrong position so there's let's play this game one more time I gotta win it this is my kids just watch people playing video games all day on YouTube so that's what you're watching now oh I have to jump on the log I really want to add I should add some the visual design some colors for the lane to know if it's River or Street I'm gonna make it 100 maybe edit so maybe speed this up this is I made this kind of hard because the last one is so fast yeah I win stronger I win the prize of the internet prize thanks for watching I'll see you next time the train pulls into the station oh I don't have to do anything that's just it okay please clap that's why they please clap I did you guys hear a knock to somebody Alka says Alka says I definitely heard a knocking fidgets spinner oh no sorry everybody I really have to go so this was all I was able to get to today the things that I missed getting to I think that could be done with Frogger okay but I could say like Frogger there's some really good gifts that people are posting in this um slack channel Frogger what could I do redo as one video in jf and fidget spinner I will be I I wonder what would happen I've been so I think curious about making a video where I just do a tutorial from my laptop like wherever I happen to be without this whole elaborate setup you know what you usually see you see the little picture of a webcam of a person in the corner then you see the screen or you just have two disembodied voice because then while I'm traveling I could kind of still make some tutorials but I don't know I'm sort of I just like my whole setup here oh this is I'm afraid of doing that but it is some it would be a way of me creating more content while I'm traveling around wow that's really small I hope the whiteboard is readable okay can I use the perceptron so yeah I mean all of this I would love for all this eventually to come together and it actually I have some examples that I've made already four flappy bird that I made one for flapping bird but getting a multilayer perceptron to control the frog to win the game is something I think I could do okay so it is 329 I will take a few minutes to answer some questions I'm looking at the slack channel for patrons coding patreon.com slash coding trade and I'm also looking at the YouTube channel a table play the biscuits on the biscuits on I don't they got to play right now but you can get it on Soundcloud probably if you just search for coding you might have to search for coding rainbow on soundcloud any updates on guest lecture for WebGL thank you for asking I have to admit I have to confess that I have really been behind on a lot of things and the things that I've realized slip is scheduling guests and I said June was going to be my month of guests but I had I did this other so many things have happened that I've just made it difficult to make that happen so I will be working on that while I'm away for a week I'm going to be doing a lot of emailing hopefully set up guests for when I come back and hopefully I'll have one with some WebGL stuff yes thank you nano I'm glad oh my a professor teacher at NYU yes so I will answer this question without being silly like I was before there is a program it's part of Tisch New York University Tisch which is the School of the Arts at Tisch School of the Arts I was free if it's over for I really should know that considering that I've worked here for about tsch tsch School of the Arts so ITP is a program let me go back at Tisch School of the Arts it is a twoyear graduate program whose mission is to explore ah the founder red burns who is one of my heroes and mentors she passed away a few years ago but this is a book of quotes from one of the lecture she would give to the incoming class and the last quote I read last time was if you can resist the temptation to run back to the shelter of your comfort zone so today's quote from read will be if you permit yourself the intellectual curiosity to explore your differences you would explore a new city actually these are all dot dot dot because they should read these all together because they end with you might be pleasantly surprised new read was ahead of her time this was like a tweet storm dot so this is where I teach I teach full time I teach three classes in the fall two classes in the spring and I've been making these videos ostensibly I started making these videos as supplemental to my courses and then I would sort of put them online and then I once I put them on YouTube a lot of other people found them and the audience really grew from there and I've been teaching these live sessions so NYU has been very generous and helpful with me in the setting up this recording studio here so I make videos and I also help other people I've been trying to do more of this at NYU make videos in the studio and then I published them on my channel and use crowdfunding so in a way like if you join the patreon that's a community where people can ask questions and talk about the code and suggest stuff that's you know it's sort of like the videos are free I mean they are ad supported on YouTube but for a sonam '''l fee a small fee you can join us a more a smaller group of discussion and that sort of thing so I think I won't ask so my next live stream it's possible that I'll experiment with doing some just content just from my laptop but my next live stream will be june 22nd or 23rd thursday or friday and i'll announce that i'll probably on twitter at Schiffman that sort of thing yeah I I did at the beginning I was streaming on Twitch I would simultaneously stream to twitch and YouTube and I just never really found an audience on Twitch so I don't I no one has been able to give me a good reason why I should switch over to twitch as a platform but I'm definitely open to it and uh you know let me know if you have you that is it possible one day to do a tourist toroid coding challenge to explain the formula yeah there will be no other live stream this week this is it for this week but I've got a lot of well not a lot I've got right now I have five edited videos that have to be published the three Frogger ones which are there you can find them they're already unlisted and then I guess two more from today what was I going to say about or something okay look let me I got another min and a half here I hope people enjoyed this light I felt like I was kind of off my game during the refactoring video because I was just sort of spaced out refactoring but hopefully that was useful and will get edited into something useful can a gambling game be predicted with machine learning actually there's been some recent research and work done in training an artificially intelligent bot to beat professional poker players will love it absolutely so uh you know sure a chance game there's no way you're going to win it blackjack and you can play optimal strategy but you're not going to have an edge but for a skill based game you absolute like poker you've absolutely could teach nai agent so how long is always asking about editing the videos Mattia at math blank on Twitter helps edit all the videos and they usually are done within within a few days but I would say you know within a week is kind of our always our goal when will we see you program at C it's a good question maybe maybe someday maybe never okay 336 I've really got to get going I what I would really liked it so I do have this list here of continuing to follow up but I think yeah I think when I come back I'm going to finish off the perceptron stuff because I really want to get to building the neural networks just stuff everything takes so much longer for me to make than I think it's going to do hopefully when I get back later in June and the first couple weeks of July and there's a July 4th holiday but I'm gonna try to do a couple weeks I'm gonna try to do two live streams each week cuz I'm going to also be away traveling for two in July most of you away for two weeks in August so it'll be two weeks where I'm here in July in two weeks anywhere I'm here in August and the other two weeks when I'm away all right thank you everybody thanks for watching I will see you all next week sometime but please stay in touch write comments like subscribe tell your friends about the channel and you can always tweet me at Schiffman is a good way to send me some feedback I read all the mentions for sure I mean and you know emails I probably replied half of them because I miss a lot but you can always get in touch with me and the comments I read it all the comments on YouTube as well and try to reply to them as I can ok thanks everybody and I will see you next time yeah people are asking for more 3d challenges I think that's a great idea I'm not very good at 3d I kind of I'm very 2d ok I'm just
