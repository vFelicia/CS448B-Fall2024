With timestamps:

00:00 - i've got one more chapter for particle
00:03 - systems video for you
00:04 - now you might have noticed in all of
00:06 - these examples that i show
00:08 - throughout the nature of code book
00:10 - there's not really a strong design
00:11 - point of view it's grayscale circles
00:14 - that's pretty much all i ever use
00:16 - and one of the wonderful things about
00:18 - working with particle systems is the
00:20 - kinds of visual effects you can create
00:22 - with them as a reference point you might
00:24 - look at some of my previous coding
00:26 - challenges where i simulate
00:27 - a rain rainfall or snow that's
00:30 - one thing you could explore but if you
00:32 - look back at that clip from the wrath of
00:34 - khan the genesis effect
00:35 - the particles almost burn off the
00:37 - surface of the planet
00:39 - it's a fiery effect particle systems can
00:41 - be used
00:42 - very commonly they're using computer
00:43 - graphics to create smoke or fire
00:45 - and often that's done through the use of
00:48 - rendering the particle not
00:50 - as a circle or a geometric shape but as
00:52 - an image texture
00:53 - a texture with fuzzy pixels or some kind
00:56 - of pattern and that's what i want to
00:57 - explore in this video now i'm going to
00:59 - keep it pretty simple and just
01:00 - hope that you watching this you're going
01:03 - to explore
01:04 - the full range of possibilities here and
01:06 - create your own image chapters and
01:08 - play with color and size and all sorts
01:09 - of things but i'm just going to give you
01:10 - the sort of nuts and bolts
01:12 - basic steps for taking this particle
01:14 - system and adding image textures to it
01:16 - but actually before i do that i want to
01:19 - make some adjustments to the code
01:20 - that i think will allow for a more smoke
01:24 - or fire like effect
01:25 - looking at the emitter class you'll
01:27 - notice i've hard coded this
01:29 - gravity vector in the update function
01:32 - that's not really going to allow me to
01:34 - experiment with
01:35 - a system of particles that respond to
01:37 - lots of different forces in their
01:39 - environment
01:40 - so i want to take this out of here
01:42 - entirely
01:43 - and instead add a function called apply
01:46 - force
01:47 - which receives a force and then
01:52 - just takes that vector and applies it to
01:55 - all of the particles so let's run the
01:57 - sketch
01:59 - oh wait what oh yeah so now actually i
02:01 - forgot that i give them an initial
02:02 - velocity
02:03 - so this is actually quite lovely in a
02:05 - way maybe i don't need anything more
02:06 - than this
02:07 - i figured out what i want to do i'm
02:08 - moving it to the bottom
02:10 - the idea here is that i want it to look
02:12 - like a flame or smoke
02:13 - rising from the bottom of the canvas one
02:16 - change i could make
02:17 - is instead of creating a random velocity
02:20 - that emanates out in all directions
02:22 - restrict that initial angle to be
02:24 - something that points vertically
02:25 - so that might create more of the effect
02:26 - of smoke rising but i just want to
02:29 - see if my apply force function works so
02:32 - i'm going to create a force
02:36 - that points upwards and then apply that
02:39 - force
02:41 - i don't know if i've improved the visual
02:43 - result here but we can see now i have
02:45 - these particles bursting out from the
02:46 - bottom
02:47 - and rising upwards incidentally i could
02:50 - add a little bit of a wind force as well
02:56 - there we go and now we see that the
02:58 - particles are not only blowing
03:00 - upwards but often to the right and maybe
03:02 - i would say like ah what if i
03:04 - uh map this wind to the mouse location
03:07 - i'm kind of off on a tangent here
03:08 - but let me just humor me for a second
03:11 - let me just add this one extra thing
03:16 - maybe a slider would have been better
03:17 - but now you can see as i move the mouse
03:19 - from left to right
03:20 - i'm adjusting that particular wind force
03:23 - but this
03:24 - is not what we're here for what we're
03:26 - here for in this video is to look at
03:28 - how can i make this effect look fuzzier
03:31 - more
03:32 - smoke like or more fire like what
03:34 - happens if i add an
03:36 - image texture to the way that i'm
03:37 - rendering the particle so
03:39 - first things first i need to have an
03:41 - image what you want in an image texture
03:43 - is typically a square image
03:45 - and something with alpha transparency
03:47 - you could make something in photoshop
03:48 - you could probably download image
03:50 - textures from the internet in all sorts
03:51 - of places
03:52 - i have chosen to actually create an
03:54 - image texture
03:55 - in p5.js this is a sketch that
03:58 - creates a canvas loops through every
04:00 - pixel of the canvas
04:02 - and draws a bright pixel towards the
04:04 - center and
04:05 - dark pixels towards the edges they're
04:06 - actually not bright and dark it's just
04:08 - the amount
04:09 - of transparency in the image so i've
04:11 - saved this image out
04:13 - to a png file and now i just want to
04:16 - take that png file
04:18 - and upload it to my other p5.js sketch
04:21 - in truth this actually opens an
04:22 - interesting can of worms which is that
04:24 - i could in setup in my particle system
04:27 - sketch generate image textures on the
04:29 - fly
04:29 - i could use purl and noise and all sorts
04:31 - of other things i'm going to restrict
04:33 - myself here and try to stay calm
04:35 - and just use this basic image texture i
04:37 - want to upload that png file to the
04:40 - p5.js web editor
04:43 - once i see that it's shown up there i
04:45 - can add a variable i'll just call it img
04:47 - for image
04:48 - let me add the preload function to load
04:50 - the image
04:53 - and just quickly to test let me see make
04:56 - sure that
04:56 - the image is there i'll just draw it in
04:59 - the corner of the canvas
05:01 - there it is we can see it up there in
05:02 - the corner just to make sure it's
05:03 - transparent
05:04 - let me just change the background to
05:06 - green for example
05:08 - and great you can see that that is in
05:10 - fact a transparent
05:11 - png now the dimensions of the image that
05:14 - i chose to use here are 128 by 128 which
05:17 - is probably too large
05:19 - ultimately your code will probably run
05:21 - the fastest
05:23 - if you create your image texture at the
05:25 - size you intend to render it
05:27 - but if i have a higher resolution image
05:30 - it might give me more flexibility later
05:31 - that i could grow and shrink the
05:33 - particle without losing the quality of
05:35 - the texture itself
05:37 - so i'm going to keep going with this
05:38 - larger image but if i feel like i need
05:40 - to i could reduce it later
05:42 - so in the particle class i need to find
05:44 - where i'm drawing it and it's right
05:45 - there i'm just drawing it
05:46 - as an ellipse comment that out and
05:49 - instead i want to use the image function
05:51 - to draw that image
05:55 - so i'm using the r value to enforce a
05:57 - smaller size for the image
05:59 - and i'm using the position vector as to
06:01 - where to place it
06:02 - i do want to do something though which
06:04 - is change the image mode to
06:06 - center because i want the center of that
06:08 - image to be at the location of the
06:10 - particle
06:11 - now stroke and fill don't apply to an
06:14 - image so i'm going to take those out
06:16 - and in a moment you'll see i'm going to
06:17 - add something else back in for the image
06:19 - itself but let's just see what this
06:21 - looks like
06:21 - now does this look more like smoke or
06:23 - fire to you i would say no
06:26 - let's try to make some adjustments one
06:29 - is i think i want that image to be much
06:31 - larger i've drawn it as almost a tiny
06:33 - dot it's almost indistinguishable from
06:35 - the point function in p5
06:37 - this is starting to look more like what
06:39 - i would expect we can start to see the
06:41 - fuzziness of the image texture as the
06:44 - particles layer on top of each other
06:46 - but they're not fading away they're just
06:48 - flying up and disappearing
06:50 - so i need to add something to reduce the
06:52 - alpha transparency of the overall
06:54 - image the way i do that with an image
06:57 - it's much like with fill but instead of
06:59 - using the fill function
07:00 - i'm going to use the tint function
07:04 - so i want to not affect the color so i'm
07:07 - going to keep the tint at 255
07:09 - but i want to affect the transparency so
07:12 - i'm going to use the lifetime variable
07:13 - which counts down to fade them away
07:16 - oh my goodness look how slow it runs now
07:21 - so here we've got an immediate problem
07:23 - this blending
07:25 - of the alpha transparency these images
07:27 - is incredibly expensive
07:29 - for p5 to do and this probably is where
07:32 - i want to think about reducing the size
07:36 - of my image texture to be exactly what
07:37 - i'm drawing i also could reduce the
07:39 - number of particles let's just do that
07:41 - first to see
07:42 - how much improvement we get i'm just
07:43 - going to admit one particle per frame
07:46 - instead of five
07:49 - that's already quite a bit better but
07:51 - i'm not getting
07:52 - the full effect of many particles so
07:55 - i've now
07:55 - made a version of the image that's just
07:57 - 32 by 32 pixels
07:59 - i've called it texture32.png
08:03 - uploading it to the editor swapping out
08:05 - the file name here and running this
08:07 - again this looks like it's running
08:09 - really fast but i'm only emitting one
08:11 - particle per frame
08:12 - oh let me make sure uh yeah so if r
08:15 - is 16 this is a little silly i'm just
08:18 - going to change this to 32
08:20 - and then because it's not a radius
08:22 - anymore it's just the sort of size i'm
08:23 - going to remove the times to
08:26 - go back to sketch emit five particles
08:29 - per frame and let's ah cross our fingers
08:31 - and hope
08:32 - still pretty slow why is it so slow
08:35 - let's try two particles per frame it's
08:38 - still running rather slow i've improved
08:40 - it a little bit
08:41 - certainly one thing that i think might
08:44 - help that i'm going to do
08:45 - is have the particles fade away even
08:47 - faster and while i'm losing the sort of
08:50 - length of the trails of particles we can
08:52 - see that i've got something close
08:54 - to what might resemble a little bit of
08:56 - like a candlelit flame
08:57 - so this is where i'm going to settle for
08:58 - now just to have some optimal
09:00 - performance for the next step that i
09:02 - want to demonstrate what i want to look
09:03 - at now
09:04 - is the function blend mode i want to
09:07 - encourage you to
09:08 - fully explore the blend mode dot
09:10 - reference page and look at
09:12 - all the different possibilities and you
09:14 - might try a variety of them
09:15 - with your particle system but i want to
09:18 - zoom in on this one called
09:20 - add the sum of a and b
09:23 - so there's always a default blend mode
09:25 - when you layer
09:26 - colors on top of each other in a canvas
09:28 - and the default blend mode is actually
09:29 - just called blend
09:31 - it's a linear interpolation of the
09:32 - colors you can think of that as like if
09:34 - this is red i'm gonna layer some
09:35 - transparent blue and put it on top it
09:37 - might get something purplish
09:39 - i think that's right but adding doesn't
09:42 - blend those colors together it
09:43 - adds them together this has the quality
09:46 - of
09:46 - the more colors you layer the brighter
09:49 - and brighter the pixels get
09:51 - just the simple act of adding blend mode
09:54 - add to the top of draw
09:58 - so this is kind of interesting i don't
10:00 - know whether this is a bug or not i mean
10:01 - really it's not a bug
10:02 - because once i'm adding the colors when
10:05 - i layer in the background
10:06 - that's not actually erasing what was
10:08 - there before that's just adding
10:10 - zero color to it so in order to get the
10:12 - effect that i'm looking for i actually
10:14 - also need to add
10:16 - the function clear which will clear out
10:18 - what was there
10:19 - in the previous frame and now it might
10:21 - not be so obvious what the difference is
10:24 - here
10:24 - maybe if i zoom in you could start to
10:27 - see that it's
10:27 - slightly different i'm going to let me
10:29 - put them side by side
10:31 - but i think this will become much more
10:33 - apparent when i begin to add color
10:35 - so going back to the particle itself the
10:38 - tint
10:39 - can include a color so what if i were to
10:41 - just say
10:42 - tint 255 comma 0 comma zero
10:46 - so this is going to be a red tint
10:50 - so that didn't do what i expected and
10:52 - i'm realizing why
10:54 - i want to see this like white glow
10:58 - and i'm never going to see that white
10:59 - glow if i'm only ever adding zero to the
11:02 - green
11:02 - and zero to the blue channels there's
11:04 - nothing for it to add to so i've got at
11:06 - least give it something if i want it to
11:07 - be
11:07 - reddish or color
11:10 - now we're seeing more of the effect that
11:12 - i would expect as
11:14 - the colors layer on top of each other
11:16 - they're adding together
11:17 - reaching a sort of like hot white color
11:20 - and where there's fewer particles
11:22 - i start to see more the color values
11:24 - that i've put
11:25 - inside the tin function and you know i'm
11:27 - just playing around with this
11:28 - trying different tint values and and
11:30 - this is what i really encourage you to
11:32 - do
11:33 - and now that i'm using this fuzzy
11:34 - particle you might think there's this
11:36 - tiny little effect in the canvas
11:37 - i think i could actually really try to
11:39 - expand the size of these particles
11:43 - and already here i feel like oh i have
11:45 - this nice kind of almost burning
11:47 - flame that i can affect with the mouse
11:49 - blowing it a little bit to the right
11:51 - or a little bit to the left so i'm going
11:52 - to just stop here i can play with this
11:54 - probably forever i'm
11:56 - hoping that i by the fact that you
11:58 - watching this and trying this yourself
11:59 - and sharing with me your results i'm
12:01 - going to discover all sorts of possible
12:03 - things
12:03 - i didn't think about that you could do
12:05 - with image textures and blend modes
12:07 - and particle systems so please in the
12:09 - comments or go to the coding train
12:11 - website where there's a place you can
12:12 - actually submit a link to any schedules
12:13 - that you make i would love to see what
12:15 - kind of stuff
12:16 - um that you're able to discover
12:20 - through this technique there's also the
12:22 - possibility of using
12:23 - the webgl renderer of p5 to improve
12:26 - performance i'm not doing anything in a
12:29 - 3d
12:29 - space here so that kind of makes less
12:31 - sense but even in the sort of 2d world
12:33 - of the particle system
12:35 - that might be something to explore i
12:36 - will maybe try to investigate that
12:38 - and come back in a future video but if
12:41 - you are able to
12:42 - squeeze out additional performance by
12:44 - using the webgl renderer of p5 or
12:46 - improving on my code in any way
12:48 - i would also really love to know that so
12:51 - thanks for watching this video this
12:52 - wraps up chapter four until i make some
12:55 - extra particle system videos which may
12:56 - happen
12:57 - and i look forward to seeing you in
12:58 - future chapters of the nature of code
13:10 - you

Cleaned transcript:

i've got one more chapter for particle systems video for you now you might have noticed in all of these examples that i show throughout the nature of code book there's not really a strong design point of view it's grayscale circles that's pretty much all i ever use and one of the wonderful things about working with particle systems is the kinds of visual effects you can create with them as a reference point you might look at some of my previous coding challenges where i simulate a rain rainfall or snow that's one thing you could explore but if you look back at that clip from the wrath of khan the genesis effect the particles almost burn off the surface of the planet it's a fiery effect particle systems can be used very commonly they're using computer graphics to create smoke or fire and often that's done through the use of rendering the particle not as a circle or a geometric shape but as an image texture a texture with fuzzy pixels or some kind of pattern and that's what i want to explore in this video now i'm going to keep it pretty simple and just hope that you watching this you're going to explore the full range of possibilities here and create your own image chapters and play with color and size and all sorts of things but i'm just going to give you the sort of nuts and bolts basic steps for taking this particle system and adding image textures to it but actually before i do that i want to make some adjustments to the code that i think will allow for a more smoke or fire like effect looking at the emitter class you'll notice i've hard coded this gravity vector in the update function that's not really going to allow me to experiment with a system of particles that respond to lots of different forces in their environment so i want to take this out of here entirely and instead add a function called apply force which receives a force and then just takes that vector and applies it to all of the particles so let's run the sketch oh wait what oh yeah so now actually i forgot that i give them an initial velocity so this is actually quite lovely in a way maybe i don't need anything more than this i figured out what i want to do i'm moving it to the bottom the idea here is that i want it to look like a flame or smoke rising from the bottom of the canvas one change i could make is instead of creating a random velocity that emanates out in all directions restrict that initial angle to be something that points vertically so that might create more of the effect of smoke rising but i just want to see if my apply force function works so i'm going to create a force that points upwards and then apply that force i don't know if i've improved the visual result here but we can see now i have these particles bursting out from the bottom and rising upwards incidentally i could add a little bit of a wind force as well there we go and now we see that the particles are not only blowing upwards but often to the right and maybe i would say like ah what if i uh map this wind to the mouse location i'm kind of off on a tangent here but let me just humor me for a second let me just add this one extra thing maybe a slider would have been better but now you can see as i move the mouse from left to right i'm adjusting that particular wind force but this is not what we're here for what we're here for in this video is to look at how can i make this effect look fuzzier more smoke like or more fire like what happens if i add an image texture to the way that i'm rendering the particle so first things first i need to have an image what you want in an image texture is typically a square image and something with alpha transparency you could make something in photoshop you could probably download image textures from the internet in all sorts of places i have chosen to actually create an image texture in p5.js this is a sketch that creates a canvas loops through every pixel of the canvas and draws a bright pixel towards the center and dark pixels towards the edges they're actually not bright and dark it's just the amount of transparency in the image so i've saved this image out to a png file and now i just want to take that png file and upload it to my other p5.js sketch in truth this actually opens an interesting can of worms which is that i could in setup in my particle system sketch generate image textures on the fly i could use purl and noise and all sorts of other things i'm going to restrict myself here and try to stay calm and just use this basic image texture i want to upload that png file to the p5.js web editor once i see that it's shown up there i can add a variable i'll just call it img for image let me add the preload function to load the image and just quickly to test let me see make sure that the image is there i'll just draw it in the corner of the canvas there it is we can see it up there in the corner just to make sure it's transparent let me just change the background to green for example and great you can see that that is in fact a transparent png now the dimensions of the image that i chose to use here are 128 by 128 which is probably too large ultimately your code will probably run the fastest if you create your image texture at the size you intend to render it but if i have a higher resolution image it might give me more flexibility later that i could grow and shrink the particle without losing the quality of the texture itself so i'm going to keep going with this larger image but if i feel like i need to i could reduce it later so in the particle class i need to find where i'm drawing it and it's right there i'm just drawing it as an ellipse comment that out and instead i want to use the image function to draw that image so i'm using the r value to enforce a smaller size for the image and i'm using the position vector as to where to place it i do want to do something though which is change the image mode to center because i want the center of that image to be at the location of the particle now stroke and fill don't apply to an image so i'm going to take those out and in a moment you'll see i'm going to add something else back in for the image itself but let's just see what this looks like now does this look more like smoke or fire to you i would say no let's try to make some adjustments one is i think i want that image to be much larger i've drawn it as almost a tiny dot it's almost indistinguishable from the point function in p5 this is starting to look more like what i would expect we can start to see the fuzziness of the image texture as the particles layer on top of each other but they're not fading away they're just flying up and disappearing so i need to add something to reduce the alpha transparency of the overall image the way i do that with an image it's much like with fill but instead of using the fill function i'm going to use the tint function so i want to not affect the color so i'm going to keep the tint at 255 but i want to affect the transparency so i'm going to use the lifetime variable which counts down to fade them away oh my goodness look how slow it runs now so here we've got an immediate problem this blending of the alpha transparency these images is incredibly expensive for p5 to do and this probably is where i want to think about reducing the size of my image texture to be exactly what i'm drawing i also could reduce the number of particles let's just do that first to see how much improvement we get i'm just going to admit one particle per frame instead of five that's already quite a bit better but i'm not getting the full effect of many particles so i've now made a version of the image that's just 32 by 32 pixels i've called it texture32.png uploading it to the editor swapping out the file name here and running this again this looks like it's running really fast but i'm only emitting one particle per frame oh let me make sure uh yeah so if r is 16 this is a little silly i'm just going to change this to 32 and then because it's not a radius anymore it's just the sort of size i'm going to remove the times to go back to sketch emit five particles per frame and let's ah cross our fingers and hope still pretty slow why is it so slow let's try two particles per frame it's still running rather slow i've improved it a little bit certainly one thing that i think might help that i'm going to do is have the particles fade away even faster and while i'm losing the sort of length of the trails of particles we can see that i've got something close to what might resemble a little bit of like a candlelit flame so this is where i'm going to settle for now just to have some optimal performance for the next step that i want to demonstrate what i want to look at now is the function blend mode i want to encourage you to fully explore the blend mode dot reference page and look at all the different possibilities and you might try a variety of them with your particle system but i want to zoom in on this one called add the sum of a and b so there's always a default blend mode when you layer colors on top of each other in a canvas and the default blend mode is actually just called blend it's a linear interpolation of the colors you can think of that as like if this is red i'm gonna layer some transparent blue and put it on top it might get something purplish i think that's right but adding doesn't blend those colors together it adds them together this has the quality of the more colors you layer the brighter and brighter the pixels get just the simple act of adding blend mode add to the top of draw so this is kind of interesting i don't know whether this is a bug or not i mean really it's not a bug because once i'm adding the colors when i layer in the background that's not actually erasing what was there before that's just adding zero color to it so in order to get the effect that i'm looking for i actually also need to add the function clear which will clear out what was there in the previous frame and now it might not be so obvious what the difference is here maybe if i zoom in you could start to see that it's slightly different i'm going to let me put them side by side but i think this will become much more apparent when i begin to add color so going back to the particle itself the tint can include a color so what if i were to just say tint 255 comma 0 comma zero so this is going to be a red tint so that didn't do what i expected and i'm realizing why i want to see this like white glow and i'm never going to see that white glow if i'm only ever adding zero to the green and zero to the blue channels there's nothing for it to add to so i've got at least give it something if i want it to be reddish or color now we're seeing more of the effect that i would expect as the colors layer on top of each other they're adding together reaching a sort of like hot white color and where there's fewer particles i start to see more the color values that i've put inside the tin function and you know i'm just playing around with this trying different tint values and and this is what i really encourage you to do and now that i'm using this fuzzy particle you might think there's this tiny little effect in the canvas i think i could actually really try to expand the size of these particles and already here i feel like oh i have this nice kind of almost burning flame that i can affect with the mouse blowing it a little bit to the right or a little bit to the left so i'm going to just stop here i can play with this probably forever i'm hoping that i by the fact that you watching this and trying this yourself and sharing with me your results i'm going to discover all sorts of possible things i didn't think about that you could do with image textures and blend modes and particle systems so please in the comments or go to the coding train website where there's a place you can actually submit a link to any schedules that you make i would love to see what kind of stuff um that you're able to discover through this technique there's also the possibility of using the webgl renderer of p5 to improve performance i'm not doing anything in a 3d space here so that kind of makes less sense but even in the sort of 2d world of the particle system that might be something to explore i will maybe try to investigate that and come back in a future video but if you are able to squeeze out additional performance by using the webgl renderer of p5 or improving on my code in any way i would also really love to know that so thanks for watching this video this wraps up chapter four until i make some extra particle system videos which may happen and i look forward to seeing you in future chapters of the nature of code you
