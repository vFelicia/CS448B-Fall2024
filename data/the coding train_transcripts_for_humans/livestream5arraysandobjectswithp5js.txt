With timestamps:

00:04 - hello I think I have begun streaming
00:07 - live uh today I don't have a second
00:09 - computer so the computer that I'm
00:11 - looking at the one that's on the green
00:13 - screen behind me is actually my view of
00:14 - the live stream and I'm uh here to make
00:18 - some videos about arrays and objects in
00:22 - JavaScript using the p5js framework I
00:24 - also thought processing three came out
00:26 - yesterday and so if anyone's actually
00:28 - watching in real time and wants ask some
00:30 - questions about that um uh you're
00:33 - welcome to I would just sit here and
00:35 - talk all about the new features of
00:36 - processing 3 but I already made an
00:37 - entire video about that which I will try
00:39 - to remember to put in the description um
00:41 - and now I have myself from a few minutes
00:44 - ago in some sort of like strange
00:47 - alternate Wormhole Universe uh if you're
00:49 - watching and could tell me if the audio
00:52 - uh is reasonable and now a second like
00:54 - the third version of myself was going to
00:56 - start oh
00:57 - no uh if you're watching and could tell
01:00 - if the audio sounds good that would be
01:01 - great I'm also going to move over here
01:04 - uh and if you could tell me that you can
01:06 - read
01:08 - this does that look reasonably focused
01:10 - and legible I think that it does because
01:12 - I can see on my kind of preview screen
01:14 - over there that it looks good I should
01:15 - try to find an eraser oh I don't have an
01:20 - eraser I'm missing my Eraser shoot
01:23 - that's going to be a problem didn't
01:26 - prepare for that uh oh I found it
01:29 - excellent
01:30 - okay now I'm going to come over here and
01:31 - erase this okay so let me check back
01:35 - over here is anybody watching sure audio
01:37 - is clear it is thank you very much uh I
01:39 - will check the chat uh periodically but
01:43 - uh first I will start by just kind of
01:45 - talking through the videos I'm going to
01:46 - make so this is a live stream that maybe
01:50 - one or two people are actually watching
01:51 - but you know someone might watch the
01:52 - recorded version um and what I'm going
01:55 - to do during this live stream is every
01:57 - once in a while hit a button and
01:58 - actually record a video that will then
02:00 - get saved as its own chunk and upload it
02:02 - to YouTube later so I'm planning to make
02:05 - six videos and I have two hours uh which
02:08 - I think if each video were 10 to 15
02:10 - minutes seems kind of reasonable
02:11 - although I might sort of run out of
02:12 - steam and get tired I um so I would like
02:15 - to make a video that's just talking
02:17 - about what an array is in general the
02:18 - syntax of an array I'm going to make a
02:20 - video about oh wow how to make an AR so
02:23 - I'll start with just like an array of
02:24 - numbers and an array of strings I think
02:26 - that'll be good to start with then I'll
02:27 - look at making an array of objects with
02:29 - just kind of like a literal object in
02:30 - the array um and then a Constructor
02:35 - function to make to generate objects the
02:37 - idea of building up to this example here
02:39 - where we have some bouncing ball objects
02:43 - uh so that's kind of the plan then if I
02:46 - have some time I'd really like to look
02:47 - at push splice how to add and remove
02:50 - things from an array that's really
02:51 - useful uh and you know what how to deal
02:55 - with if you click on something how to
02:56 - get that message to the object and if
02:58 - objects are moving around the screen how
03:00 - to like have them kind of communicate
03:01 - their distance from each
03:03 - other so I don't know the five and six I
03:06 - I wouldn't be surprised if I didn't get
03:07 - to but those are kind of on my list in
03:09 - general so if you have any feedback
03:11 - about this please put it in the chat or
03:13 - if you're watching the video later you
03:14 - can put it in the comments and I'm going
03:17 - to drink some water this is my shtick my
03:19 - magic invisible
03:22 - water what's absurd about is I sit here
03:24 - and watch myself doing this this I don't
03:27 - know this is what I do with my life um
03:30 - and oh let me restart this refresh and
03:33 - I'm going to check that I wish I had my
03:35 - second laptop in here because I could
03:36 - just have the chat open but no one's
03:38 - there there are five people watching
03:40 - five that's very exciting for me um and
03:45 - that's about it so I think I'm going to
03:46 - get started with the array video unless
03:48 - anyone has any oh oh oh yeah any
03:50 - questions about processing 3 throw them
03:52 - in the chat um and I will I'm going to
03:55 - check the chat in between each chunk of
03:56 - video that I
03:58 - record okay so here I we
04:00 - go so I got to minimize
04:03 - this uh and you know say hi in the chat
04:06 - if you're here it's useful to and uh I
04:09 - am going to I don't not have the list up
04:12 - although you know maybe I'll include
04:13 - this in the first video why
04:21 - not why not although H I don't know that
04:25 - I need this uh and then I need the
04:27 - editor I get the editor open in a second
04:29 - okay okay
04:33 - um here we go I'm going to start over
04:38 - here got to get this mouse
04:42 - going hello uh I'm back for a new
04:45 - section I can start
04:48 - over hello I'm back for a new section of
04:51 - videos all about arrays now lest you
04:54 - think it's really only all about arrays
04:56 - this is actually also about objects
04:57 - because objects are now so fundamental
05:03 - and H I'm going to start this over where
05:06 - did I last leave off I think I put a
05:08 - function in an object so we'll get back
05:09 - and I'll come back to that okay that's
05:10 - fine this is just going to be about an
05:17 - array hello I am back this is going to
05:20 - be a problem for
05:23 - me boy and let me fix this cable here
05:27 - that I'm going to trip on oh look at
05:28 - that what did I do if I go like this did
05:30 - I make the screen do something weird I
05:32 - don't know it's fine green screen thing
05:35 - hello I back and I'm ready to start
05:37 - another little little series of videos
05:39 - inside a larger series of videos and the
05:41 - topic here is arrays an array in
05:43 - JavaScript what is an array why do you
05:46 - want to use one what's the Syntax for an
05:48 - array what kind of things can you do
05:49 - with an array and ultimately I have a
05:51 - goal with this so if you remember
05:53 - recently in a previous video it's
05:55 - actually a couple weeks ago when I
05:56 - recorded it but who knows how you're
05:57 - watching these I recorded a video where
05:59 - we looked at making an object an object
06:02 - as this collection of properties this
06:04 - thing that maybe has an X and A Y and a
06:06 - color and a size and then this idea that
06:08 - you could put a function inside the
06:09 - object so that thing that has a bunch of
06:11 - properties could also you could issue
06:13 - commands to it like move or Draw
06:15 - yourself or change color and so if you
06:17 - can get one object like this object
06:21 - which I'm now telling it to move and
06:23 - bounce and display itself as a circle if
06:25 - I could take that single object how
06:27 - could I easily duplicate that object
06:29 - every time time I say click the mouse
06:31 - click click click click click the idea
06:34 - here and I have this list of videos that
06:36 - I'd like to make all the way up to
06:37 - number four which will really go through
06:40 - all the pieces of this so how does an
06:42 - array even work to have a list of these
06:44 - objects how do you um how do you then
06:46 - have the object in the array how do you
06:49 - deal with making multiple copies of that
06:51 - object in the array how do you deal with
06:52 - adding the object to the array one at a
06:54 - time these are all the pieces that I
06:55 - would like to get to and then I have a
06:56 - few other topics like clicking how to
06:58 - like how to interact with an object by
07:01 - clicking or moving the mouse or how to
07:02 - have two objects interact with each
07:03 - other so this is the full scope of the
07:05 - videos I'd like to make there are six of
07:07 - them I'm hoping they'll each be about 10
07:08 - minutes and I'm going to get right
07:10 - started right now with the first one
07:11 - what is an array so let's move this out
07:13 - of here and I'm going to come over here
07:16 - to my trusty
07:18 - whiteboard it's very friendly to me it
07:21 - it talks to me because nobody I'm
07:22 - talking I talk to a whiteboard now
07:24 - that's what I do camera I used to talk
07:26 - to the camera now I talk to the
07:27 - Whiteboard okay so what is an array why
07:29 - do you want to use use one well let's
07:30 - let's dial ourselves back to a happy
07:32 - warm and comfortable
07:34 - place I could say something like VAR num
07:38 - equals 5 and it's very tall high on this
07:42 - whiteboard but I think you can read it
07:44 - this is comfortable I have a variable
07:45 - the name I made up for it is numb and
07:47 - its value is five so if I wanted to have
07:49 - a second one I could add a second
07:51 - variable but here's another way I could
07:53 - have a second number that I'm storing
07:56 - VAR nums equals Square braet 5 comma 3 n
08:03 - sare braet semicolon so an array is a
08:07 - list of values in separated by commas
08:11 - embedded inside of open and closed
08:14 - square brackets this is not that
08:16 - dissimilar strangely enough to this idea
08:19 - we have an object which is a collection
08:23 - of name value
08:26 - pairs right inside curly brackets
08:30 - so both of these are collections lists
08:33 - in a way lists of name value pairs lists
08:35 - of just values and that distinction I
08:38 - think will become more and more clear
08:39 - even though it seems like a little
08:40 - confusing right now why I use one or the
08:42 - other as I as I start to show you more
08:44 - and more uses of them in different
08:46 - examples let's see what that distinction
08:47 - is I'm going to but the key distinction
08:50 - right now that's super important is that
08:52 - the order of this list the order of the
08:54 - array is what matters elements in Array
08:57 - have an index they're the first element
08:59 - they're the third element they're the
09:01 - last element they're the element in the
09:02 - middle that ability to have the elements
09:04 - in an order is the sort of crucial key
09:06 - aspect of an array so for example this
09:08 - is element well it looks like it's the
09:11 - first element right because it's the
09:12 - first thing in the array and that's the
09:13 - second thing but in programming often
09:16 - it's the the the the you you have to
09:19 - start counting I'm like stuttering here
09:21 - because I'm afraid to tell you this news
09:23 - but you have to start counting from zero
09:25 - and actually it's a wonderful thing to
09:26 - count from zero everyone in lots of s we
09:29 - should all just count from zero it's it
09:30 - it brings Joy to the world but uh it
09:33 - also brings a little bit of confusion so
09:35 - this is index zero and this is index
09:38 - number one it's kind of not that great
09:41 - of an example let's make a bigger array
09:43 - 50 71 12 you I could put a negative
09:46 - number in there -22 right this element
09:49 - now has how many this array sorry has
09:51 - how many elements four elements what are
09:54 - its index values 0 1 2
10:00 - three
10:01 - so this is important an array might have
10:05 - four elements in it but the index values
10:07 - go from 0 to three so the total number
10:09 - of elements might be four 10 20 100 if
10:13 - there's 100 elements the index values go
10:15 - from 0 to 99 let's practice that so
10:17 - right I have an array with 10 things in
10:19 - it 0 1 2 3 4 5 6 7 8 N9 if you count
10:23 - from zero you end with nine you've got
10:25 - 10 things total seems silly to keep
10:27 - saying that but it's something that you
10:28 - s you repeat to yourself to get used to
10:30 - this idea of counting from zero with an
10:33 - array so this is the syntax now let's go
10:36 - and put this syntax into an actual P5
10:38 - example and see what we might do with
10:39 - that okay I'm back over here now and
10:42 - I've I'm at like five minutes that's
10:44 - good I I let's see let's see how far I
10:46 - can get so uh ignore this example I'm
10:48 - making a new project I'm going to uh
10:52 - move it over here and I'm going to save
10:55 - it as uh arrays one
11:00 - okay so at the top I'm going to say VAR
11:02 - nums
11:03 - equals uh 125 12 72 so there are four
11:09 - values in my array up there and I'm
11:12 - going to make a
11:13 - canvas that's 4400 and just for
11:16 - comparison sake I'm going to add a
11:18 - regular variable now that has the number
11:20 - 23 in it and something that I might do
11:23 - with a regular variable is just say
11:25 - ellipse at 100 um 200 100 and I might
11:30 - use that variable for its
11:34 - size so you can see here I have now have
11:37 - this variable with the value 23 that
11:40 - variable is being used for the width and
11:41 - height of the ellipse and that ellipse
11:43 - is drawn there with a width and height
11:44 - of 23 pixels so the next job that I
11:47 - would like to do here is how do I get
11:49 - one of the numbers from the array and
11:51 - use one of the numbers from the array in
11:53 - something like the size of an ellipse
11:54 - the location of ellipse the color of an
11:56 - ellipse how do I pull values out of an
11:58 - array so so that comes back over here to
12:01 - the in indices indices the index values
12:04 - so if for example this is the array VAR
12:07 - nums equals this if in my code I ever
12:11 - say nums I'm then I'm referring to the
12:14 - entire array but it's not that often
12:17 - that you refer to the array as a whole
12:19 - more likely you'd refer to the
12:20 - individual elements of the array one at
12:22 - a time so the way to do that is again
12:26 - with square brackets so if I say nums
12:28 - index 2 that means I'm referring to this
12:32 - value 12 and this evaluates to the
12:35 - number 12 just like
12:37 - num evaluates to the number five so
12:41 - again this is a list of variables each
12:42 - one of these you refer to the array name
12:44 - and its
12:45 - index okay now back over here we can now
12:49 - do that so I can say let's draw a second
12:53 - ellipse a little bit over and let's draw
12:56 - it at nums index 2 nums index 2 now
13:01 - which one is index two it's not the
13:04 - second one in the list it's 012 it's 12
13:08 - let's make it a little bigger let's make
13:09 - that one uh 46 that's a nice
13:13 - number it's an age I will be someday
13:16 - someday kind of soon not that soon but
13:18 - soon whatever it doesn't matter okay so
13:20 - you can see this now I have a second
13:22 - circle with a width and height of 46
13:25 - pixels as opposed to the first circle
13:27 - with a width and height of 23
13:29 - wonderful wonderful wonderful
13:31 - wonderful okay uh ah ah I forgot a whole
13:35 - video which is um I've got to look at
13:37 - how to do this with a for Loop but
13:38 - that'll be the next video so this is one
13:40 - example um and I think uh I'm going to
13:42 - make another example right now then
13:43 - we'll come back to this one in the next
13:45 - video so one of the things to realize
13:47 - here that I think is exciting and
13:49 - interesting about arrays is that this
13:52 - number does not have to be the index
13:53 - value that I'm using into the array it
13:55 - doesn't have to be a hard-coded value it
13:57 - could be a dynamic value something
13:58 - that's picked randomly or through some
14:00 - algorithm so let's take a look at that
14:02 - and I'm going to say I'm going to save
14:04 - this
14:05 - as uh arrays two and I'm going to change
14:10 - this to uh words and I'm going to make
14:13 - some words like
14:16 - rainbow and heart and
14:20 - um what are some other nice words uh
14:24 - purple I like and um uh
14:28 - friendship
14:31 - and uh this is this is all I can think
14:34 - of so I have an array so in first of all
14:36 - the the thing that I'm emphasizing here
14:37 - is you can put anything into an array
14:40 - you can put strings uh text into an
14:41 - array numbers into an array objects into
14:44 - an array that's what I'm getting at soon
14:45 - enough so what what what might I do with
14:47 - this array well I might say all right uh
14:50 - Phill 255 use the P5 text function I
14:54 - want to draw some text onto the screen
14:57 - and I'm going to say draw like for
14:58 - instance example if I just say draw
15:00 - Rainbow onto the screen at you know
15:04 - 22 and maybe I make it a little bit
15:06 - bigger so we see it 32 pixels the font
15:09 - size uh you can see oops I don't know
15:13 - where I put that 200 pixels over I meant
15:14 - to put it like 12 pixels over and 200
15:17 - pixels down you can see there's the word
15:19 - rainbow appearing in the sketch
15:21 - wonderful so oh look at this I made a
15:23 - blue Mass there whoa
15:26 - magic um so uh the I I did I just
15:30 - hardcoded rainbow here now I want to
15:32 - pull something from the array so what I
15:34 - want to say is aha what I want is words
15:38 - index zero I want that first index into
15:42 - the
15:43 - array there we go I have rainbow now if
15:46 - I change this to
15:48 - two I see the word purple so the point
15:52 - that I'm making is this number could be
15:53 - a variable what if I say VAR index
15:56 - equals zero and put
15:59 - index Here and Now what if I say
16:03 - function Mouse pressed index equals
16:06 - index + one so camera just went off so
16:09 - hopefully this one's not going to go off
16:10 - in a second but so right so what
16:13 - happening now the value of index is zero
16:16 - so I'm seeing words index zero I'm
16:18 - seeing rainbow but as soon as I click
16:20 - the mouse index will become one and I
16:21 - should see heart and then I should see
16:24 - purple and then I should see friendship
16:26 - and then I should see oh an error
16:28 - message message right so this is a key
16:30 - thing no one's going to save you if you
16:34 - try to access an element into an array
16:36 - that doesn't exist if I say words index
16:38 - 27 it doesn't exist it's null or
16:41 - undefined or some sort of JavaScript
16:43 - thing that doesn't exist yet and you
16:45 - won't be able to draw that onto the
16:47 - screen and you'll get an error so it's
16:48 - up to you to build logic into your code
16:50 - to protect yourself for example I could
16:53 - say hey you know what if index equals 4
16:56 - maybe I should reset index back to zero
16:59 - so as I'm uh and it's not four right oh
17:02 - yes it is four right because zero exists
17:04 - one exists two exists zero exists one
17:07 - exists two exists three exists but not
17:09 - four so now if I run that you'll see it
17:13 - Cycles back to zero every time I get to
17:15 - four but what if I go up here and add uh
17:20 - you know um love into this array so I
17:25 - don't ever see love because I stopped
17:28 - myself at four and now there are
17:30 - actually five elements in the array so
17:32 - how do I deal with that problem well one
17:36 - way to deal with that problem would be
17:37 - to just change this number four to the
17:39 - number five but an interesting thing
17:41 - that will come up again and again is
17:42 - that arrays also store properties about
17:45 - themselves so in addition to be able to
17:47 - access individual elements of the array
17:49 - we can access other information about
17:51 - the array itself such as the current
17:54 - length of the array so that the length
17:56 - actually can change as the program is
17:57 - running uh for example what if we got
17:59 - user input and started filling that
18:01 - array with words from the user so one
18:03 - thing I can do here is actually
18:04 - dynamically check if the index equals
18:07 - the length of the array right remember
18:09 - we're going up by one so if there's four
18:12 - the valid indices are 0 1 2 and three
18:15 - but the in 0 1 2 and three but the
18:17 - invalid index is four there are four
18:20 - elements but 0 through three are the
18:22 - right index values I have to repeat this
18:23 - to myself because you know it hurts it
18:26 - hurts a little bit to to have this
18:28 - little minor point of confusion okay so
18:30 - let's test this and see if this
18:32 - works one two so what I might suggest to
18:36 - you is do the same thing make a list of
18:39 - words what if you have them picked
18:41 - randomly each time uh you run the sketch
18:44 - or each time you click the mouse uh try
18:45 - to use an array of colors could you pick
18:47 - a random color for a bunch of different
18:49 - shapes you're drawing on the screen so
18:51 - what's a kind of list of information
18:52 - that you might use for an element that
18:54 - you're drawing and what's a way that you
18:56 - might pick from that list either one at
18:59 - a time or randomly or two at a time come
19:01 - up with a little exercise for yourself
19:02 - and in the next video what I will show
19:04 - you is how to March through every
19:06 - element in the list how would you
19:08 - display all of the words how would you
19:10 - use all of the values for the sizes of
19:12 - the ellipse okay so this marks the end
19:14 - of this first video about arrays and
19:16 - there will be more like the next one
19:17 - I'll record in just a minute okay
19:21 - uh
19:23 - stop okay so that's the end of that
19:25 - video let me check the live stream see
19:28 - if anybody has has any
19:29 - questions uh you're watching loud and
19:32 - clear audio is clear uh I'm a vampire I
19:37 - look exactly the same in the videos
19:38 - recorded years ago it is true but I'm a
19:41 - very nice vampire I don't
19:44 - bite uh but I do apparently live in this
19:47 - like Wormhole time Universe where I
19:49 - could clone myself over and over again
19:51 - uh anybody have any questions about
19:53 - arrays or what I recorded or any
19:54 - comments or feedback say them now before
19:56 - I go to the next one
20:01 - I'm going to come over here I'm going to
20:03 - erase
20:07 - this you know it's funny I oops this
20:09 - this camera is off so you can't see me
20:11 - um I used to actually be um a vampire in
20:14 - this room because I had this like
20:15 - horrible curtain covered that covered
20:19 - the shade because I thought oh I have
20:21 - lights in here it needs to be consistent
20:22 - lighting for the green schi this like
20:24 - cave with no sunlight all day long it
20:26 - was horrible so now I have
20:29 - light coming in and you know what the
20:30 - light works with the cameras too because
20:32 - daylight is good okay I'm going to check
20:34 - the chat again real quick uh loud and
20:37 - clear feedback loop okay so I'm going to
20:39 - go on and do the next video which is
20:40 - about uh whoa which is about a for Loop
20:45 - uh I have to put this away because it's
20:47 - freaking me out which is about uh oh
20:49 - whoops I know I was just going to see
20:51 - how we're doing which is about uh using
20:53 - an array with a for Loop okay but before
20:55 - I record it let me start with uh just
20:59 - putting something here come back over
21:08 - here
21:10 - okay okay great and I'm going to come
21:13 - over here and I want to go back
21:15 - to uh
21:19 - arrays
21:21 - one uh and close this
21:26 - one uh BR give myself some more room
21:30 - here uh I will check the chat again real
21:33 - quickly just to see if there's any
21:34 - comments there's never any comments I
21:36 - don't know why I keep checking it uh and
21:38 - then I'm about ready to do the next
21:39 - video which I will drink a little
21:45 - water
21:46 - and wipe my
21:53 - mouth and then I will
21:56 - sing vocalize see see this this moment
21:59 - where I think cuz I'm not really
22:00 - recording the video that this is not no
22:02 - one's no one's really watching but this
22:04 - is getting archived but no one will ever
22:06 - be watching
22:07 - this okay
22:09 - [Music]
22:11 - uh okay so this is the second in a
22:13 - series of videos about arrays and what I
22:16 - would like to look at in this video oh
22:18 - yes I'm in the right place is this
22:20 - particular piece of code and augmenting
22:22 - it a little bit so let's look at this
22:23 - for a second and I've got this sketch
22:26 - here that's drawing two circles so
22:28 - before I was demonstrating here's a
22:30 - single variable I can just use that
22:32 - single variable directly and draw a
22:34 - circle with that the value of that
22:35 - variable is the width or I can access an
22:37 - individual element in the array via its
22:39 - index 012 so this ellipse has a diameter
22:43 - of 46 pixels so what I would like to do
22:47 - is I'm going to get rid of this which
22:49 - was just for showing the difference
22:50 - between a variable and array and what
22:51 - I'm going to do is say okay well let's
22:53 - actually draw all these ellipses all use
22:55 - all the values in the array so I'm going
22:57 - to start at 100
22:59 - and use whoops excuse me the zero
23:00 - element then I'll go to 200 and use the
23:04 - index one element then I'll go to 300
23:06 - use index two you know a little bit of
23:09 - copy pasting and we can see here 200 300
23:14 - 400 I should probably make the canvas
23:15 - 500 pixels wide and run this and look at
23:18 - that wonderful I have four ellipses each
23:22 - with a diameter using a value from the
23:24 - array the first value is 100 the second
23:26 - one's 25 the second one's four third 46
23:29 - and the fourth one's 72 and those
23:30 - ellipses look like they're right so you
23:32 - can see here that I can use every
23:34 - element of the array and repeat the same
23:36 - thing over and over and over again with
23:38 - the elements of the array and with a
23:39 - little copy pasting it works just fine
23:41 - and everybody's happy you do a little
23:43 - dance like the little like my code work
23:45 - dance and uh there you go but there's a
23:48 - problem here this works with four but if
23:51 - you had 400 you won't be happy dancing
23:54 - you'll be copy and pasting you'll have
23:56 - carpal tunnel syndrome and things will
23:57 - be very uncomfortable in your life
24:00 - however there is a solution to this
24:01 - problem and you might remember it from
24:04 - you might remember me from a previous
24:05 - video the for Loop video so we could use
24:08 - a loop right a loop is a method for
24:10 - counting and repeating a task and you
24:11 - can see here that this line of code is
24:13 - repeated D it's really the same line of
24:16 - code every time the only things are
24:17 - different are the X location and the
24:19 - index into the array so let's for let's
24:21 - come over here uh and uh let's look at
24:24 - what let's remind ourselves whoever we
24:26 - are let's I'm going to remind myself and
24:28 - maybe you're watching what a four Loop
24:30 - is so I could write
24:32 - four and then I could say VAR I equal 0
24:37 - I could say I is less than
24:40 - 4 I
24:42 - ++ now I should mention there's no
24:45 - actual requirement that you use the
24:46 - variable named I it's just sort of a
24:48 - convention you could say j or n or cat
24:52 - or apple it doesn't matter this is a
24:54 - variable name that you're making up and
24:56 - the way a for Loop works that camera
24:58 - went off I can fix that the way the four
25:00 - Loop works is if you start with zero
25:03 - then you check to see if zero is less
25:06 - than four you execute a task go up by
25:09 - one check to see if it's still less than
25:11 - four execute a task go up by one check
25:14 - to see if it's still less than four
25:16 - execute a task go up by one check to see
25:18 - if it's less than four you know by the
25:19 - way if it's not less than four you're
25:20 - done and stop executing that task so if
25:23 - I were to say something like print lni
25:27 - right here I would start at zero I is
25:30 - less than four so I would see Zero
25:32 - printed out you know if this is the
25:33 - console I would see Zero appear in the
25:35 - console then I would go up by one I
25:37 - would be one one is less than four it
25:40 - would get printed out I would go up by
25:42 - one two is less than four then it would
25:44 - go up by one three is less than four
25:46 - then it would go up by one four aha four
25:49 - is not less than four the loop would
25:51 - exit so this is the result that I see
25:54 - this line of code executes four times
25:57 - first with the value zero then with the
25:58 - value one then with a value two then
26:00 - with a value three in I look at o look
26:03 - at this over here I'm coming back to you
26:06 - uh over here this line of code executes
26:10 - four times first with the value zero
26:12 - then with the value one then with a
26:13 - value two then with the value three
26:15 - right exactly what we did here so
26:18 - there's no reason why I couldn't instead
26:22 - say four VAR I equals 0 I is less than 4
26:26 - I ++
26:29 - and then take this line of code and
26:33 - say I and I remember the index into an
26:37 - array can be a variable so let me
26:40 - comment this out and you can see I'm
26:43 - making the case to you that this is 100%
26:47 - except for one thing that I forgot which
26:48 - we'll fix in a second equivalent to this
26:50 - this I wrote each line of code out
26:52 - manually manually typing in the index 01
26:55 - 2 3 here this line of code is being
26:57 - repeated four times times and the index
26:59 - is dynamic it's zero it's one it's two
27:01 - it's three so I should see four ellipses
27:03 - in the window just like we had before
27:07 - right I see kind of like a couple and I
27:10 - don't really know what's going on there
27:11 - H let's let me add something here let me
27:13 - say stroke 255 and no fill let's try to
27:16 - look at what's going on okay so this
27:19 - really did work wow I really sized those
27:21 - in such a like lovely way but there are
27:24 - four circles there and there there one
27:26 - is 100 pixels wide one is 25 pixel wide
27:28 - 1 is 46 1 is 72 the issue is uh they're
27:31 - all in the same location so here notice
27:33 - how X changed 100 200 300 400 but X
27:36 - doesn't change here it's 100 for each
27:37 - one how do we deal with that well
27:40 - interestingly enough if I come back over
27:42 - here these values I had 0 1 2 3 what if
27:46 - I were to multiply each one of these
27:49 - values by
27:52 - 100 what would I get and let me give
27:55 - myself a little more space here and get
27:56 - rid of this I would get 0 * 100 is 0 1 *
28:02 - 100 is say it with me even though you're
28:05 - we're not together but just do it equals
28:08 - 100 uh 200 300 so that's close 0 100 200
28:13 - 300 what did I
28:15 - have 100 200 300
28:17 - 400 h ah I know let's add 100 to each of
28:22 - these if I add 100 to each of these that
28:26 - means I have 100 200 200 300 400 so by
28:32 - multiplying by one by taking that index
28:35 - value multiplying it by 100 adding 100 I
28:37 - have the values that I want so I even
28:40 - though I'm using it to count through the
28:42 - indices of an array it's just this like
28:44 - counting number I can use it for for
28:46 - good for other purposes so here we go I
28:49 - could say instead of drawing them at 100
28:52 - I could say I * 100+ 100 and now if we
28:56 - run this you know I kind of want to have
28:58 - them have a little more weight to them
29:00 - I'll make them kind of grayish inside
29:03 - you can see there are my five circles
29:06 - this worked this is a way of using an
29:11 - array uh to have many elements but
29:14 - applying the same action to all of those
29:16 - elements and if you remembered this is
29:19 - kind of where I began if these things
29:20 - were objects not single numbers and I
29:23 - had a thousand of them I could just say
29:25 - display all of them move all of them run
29:28 - all of them and that's the topic that I
29:30 - will explore in the next video for now I
29:32 - might say just make that array of
29:34 - strings perhaps see if you can display
29:36 - like five different words in some
29:38 - pattern on the screen you have make a
29:41 - color palette right you have six colors
29:43 - and all the things you're drawing you
29:44 - always pick a random color for a b or
29:46 - for a bunch of those things actually
29:47 - that's what I said before Loop through
29:49 - and draw ah I know make another array
29:51 - with colors for each one of these and
29:53 - use the color for it although I you know
29:55 - in that sense I almost would rather use
29:56 - an object for that but you get the idea
29:58 - like make a little riff off of this to
30:00 - as an exercise but really I think the
30:02 - goal that you might have in your mind is
30:04 - as you start to have multiple parameters
30:06 - for things you're drawing on the screen
30:07 - maybe those should be inside objects
30:10 - because objects is a collection of
30:11 - properties okay that's the end of this
30:13 - video which is8 minutes long which is I
30:15 - feel like is a victory in some way okay
30:17 - thanks very
30:20 - much okay that's the end of that one let
30:23 - me come back to the chat and figure out
30:25 - what I'm doing uh yeah I'm happy to take
30:29 - yeah I have stereo sound
30:32 - uh
30:34 - so uh I'm reading the comments now
30:37 - you're doing great thank you good vocal
30:40 - exercises uh an intro for to J
30:43 - JavaScript for experience Java coders
30:46 - yes um I would love to do that I feel
30:47 - like that's a whole video topic um I'm
30:50 - trying to see I should write that down
30:52 - um I have a little area here where I
30:54 - make notes about videos that I could
30:55 - make so I'm just going to say that so
30:57 - Javas script for Java you know um yeah
31:01 - so I think it could be useful to have
31:02 - like one quick like hey you're a
31:04 - processing user how do you do JavaScript
31:06 - or vice versa actually because in a way
31:08 - a lot of people are starting now with
31:09 - JavaScript and and might want to do like
31:11 - faster full screen uh kind of more
31:13 - intensive Graphics applications which
31:15 - processing the new version of processing
31:16 - 3 is really well suited for so moving
31:18 - back and forth between those two I think
31:19 - would be useful um and yes you can ask
31:22 - something about processing libraries I'm
31:23 - only checking the chat in between making
31:26 - these videos so if you put the question
31:28 - out there I'll check it and answer it
31:29 - you have to wait till my ramblings end
31:30 - at 10 minutes but I should do some of
31:32 - these live streams where I only take
31:33 - questions but I haven't really gotten an
31:36 - audience asking a lot of questions yet
31:37 - maybe I need to schedule this better or
31:39 - something like that but um but yeah put
31:42 - the question here so let me go back to
31:44 - my notes for a second to see where I
31:47 - am uh so I did uh so I did what is an
31:51 - array and actually I forgot I had
31:53 - another video here which is like array
31:56 - with a for Loop and now I can do an
31:59 - array of
32:00 - objects uh next so that's going to be
32:03 - the next topic so what I need to do is
32:05 - go back to oops what I need to do is go
32:08 - find the example that I started
32:11 - with uh which is somewhere oops did I
32:14 - lose P5
32:17 - yep um where am I at 230 this is good oh
32:20 - I better turn I'm going to turn the air
32:22 - up it gets very hot in here with these
32:24 - lights and if I turn the air up right
32:27 - now while in between shooting does that
32:29 - how bad is the audio when the air
32:31 - conditioning is on I'd be curious for
32:32 - one of you to tell
32:33 - me um I'm wasting energy here I'm not
32:37 - doing a good job of being my
32:39 - sustainability
32:40 - man uh okay so let me open
32:45 - objects bubble I think this is the
32:48 - sketch that I started making with a
32:51 - single
32:54 - object right bubble. move bubble.
32:57 - display
32:58 - playay yep that's it so this I think
33:03 - will work in terms of duplicating it so
33:06 - I'm going to do something in this video
33:08 - which I'm not so sure about which I'm
33:09 - going to demonstrate putting the object
33:11 - into an array using object literals and
33:14 - then I will move to a Constructor
33:16 - function which is probably and I'm going
33:18 - to do some things that are perhaps not
33:21 - considered quote unquote proper
33:23 - JavaScript
33:24 - syntax but I like to do things that look
33:28 - nice and feel easy and accessible and
33:31 - friendly and you can always worry about
33:33 - that proper JavaScript syntax if
33:34 - somebody's paying you to bre code that
33:36 - way you're just learning make it work
33:39 - enjoy it not have it be too horrible
33:41 - okay so I think this will get me started
33:43 - however I also want to open
33:46 - up the this one objects click with mouse
33:49 - I think we need to REM I need to do a
33:52 - little quick reminder of this
33:54 - one and let me check the chat one more
33:57 - time
33:58 - time
34:04 - uh yeah could that's good um so the
34:08 - question about is there a process for
34:09 - keeping p5js and processing apis in sync
34:12 - that is a great question so a lot of the
34:15 - same people are working on both projects
34:18 - and there is definitely a lot of
34:19 - communication between the two projects
34:21 - but I think something that's really
34:23 - important here is there is not this
34:25 - desire to keep them perfectly in sync P
34:28 - they're they're p5js is not a port of
34:31 - processing it's a new project building
34:34 - on the philosophies and ideals behind
34:36 - processing so if something works
34:37 - differently on the web and makes sense
34:39 - because the web and JavaScript in the
34:41 - browser is a different context the
34:43 - syntax will just be different so
34:45 - knowledge-wise this is something that I
34:46 - think through documentation and
34:48 - Community can be what are those
34:50 - differences why do those differences
34:51 - exist that's an important topic but um
34:54 - that you know there is not a process for
34:56 - like keeping them in sync on purpose but
34:58 - there should be a lot of communication
35:00 - and documentation around why those
35:01 - differences
35:03 - exist uh okay that was my answer to that
35:07 - like I like talk randomly and then I go
35:08 - into my Like official talking
35:10 - mode um answering question okay I'm
35:13 - drink a little
35:16 - water this is good I think if I can get
35:19 - through I have I also have like a coffee
35:24 - drink and
35:26 - um I I am going to minimize this
35:29 - repetitive
35:31 - screen and get ready to do and I think
35:34 - it's a little bit too much in here let
35:36 - me see if I can make this code a little
35:38 - bit simpler for right
35:43 - now uh and okay
35:51 - so yeah
35:54 - okay um okay I think I'm I'm ready sry
35:58 - I'm like thinking and pausing uh the
36:00 - stream has been going for 50 minutes I
36:02 - made two videos one 15 one about 12 one
36:04 - about 8 that's pretty good okay I got to
36:06 - get started
36:07 - here so I'm going to
36:09 - turn I'm going to just come over here
36:12 - for a
36:18 - second uh I think I probably should
36:19 - erase
36:21 - this I
36:24 - think
36:26 - yeah yeah
36:28 - okay let's erase this
36:32 - and uh come back over
36:35 - here I need the
36:37 - pen and turn the AC back down to
36:40 - low and get ready to record feel like I
36:43 - have to
36:44 - burp I mute the microphone for a second
36:48 - it'll just come out in the middle of the
36:49 - video it's fine it's like an air bubble
36:51 - floating through
36:54 - me okay here we go
36:58 - okay so now I've made two videos one
37:01 - just about what is an array and the
37:03 - syntax of an array and the other video
37:05 - looking at how to use a loop to iterate
37:07 - over every element in that array and in
37:10 - this video I want to unlock this great
37:13 - power to you which is how to take an
37:15 - object and duplicate that object many
37:18 - times into an array so first this is
37:20 - this again just to revisit this is what
37:22 - I'm talking about how would you make an
37:24 - example like this happen and you know
37:26 - each one of these objects it needs to
37:28 - have a position on the screen it needs
37:29 - an XY it needs to have a speed like how
37:32 - fast is it moving along the y- axis it
37:34 - needs to have some functionality like
37:35 - move along the y- axis like check if it
37:37 - hit the bottom so each one of these
37:38 - needs its own set of properties and its
37:40 - own set of functionality and that's what
37:43 - I covered in a previous video how to put
37:45 - a function into an object and so we have
37:47 - an example of that here right this is a
37:49 - bubble object and let me just actually
37:51 - take a moment to review over here just
37:52 - that syntax so if I have an object like
37:55 - VAR bubble
37:58 - an object is a collection of name value
38:02 - pairs an object has properties each
38:04 - property has a
38:06 - name then there is a colon then there is
38:09 - the value and typically we think of
38:12 - these or you think I think of these as
38:15 - uh what do I think of them as just as
38:17 - like numbers right it has an X and its
38:20 - number is 100 and it has a y and its
38:23 - number is 50 but in addition to having
38:27 - these properties just be like simple
38:29 - variables with values an object can have
38:32 - a the name of can be a function like the
38:35 - name can be something like display sorry
38:37 - and the value can be a function just
38:39 - tripping over my words here right so in
38:42 - this is what makes objects really
38:44 - powerful it's not just a collection of
38:46 - numbers or data or strings or colors
38:48 - it's also the ability to use those
38:50 - properties in and execute some code with
38:53 - those properties so for example if I
38:55 - want to have a display property I might
38:57 - might want that to be a function now
38:59 - it's important to us this function is
39:01 - not being executed this is just the
39:03 - definition of the bubble object and the
39:05 - display function is a function that
39:07 - could be executed later and if that
39:10 - function were to be executed it would
39:12 - draw an ellipse at and this is the
39:15 - tricky thing your instinct might be to
39:17 - write bubble dox right because the way
39:20 - that you access properties of an object
39:22 - is by the name of the object dot the
39:24 - name of the property and then you get
39:26 - the value back but here because I'm
39:28 - inside the object there's a special
39:31 - JavaScript keyword that you can use to
39:33 - refer to the name of the object the
39:35 - specific object this object what I want
39:37 - to do is refer to right here this
39:39 - particular object guess what the key
39:41 - word is this might think of it as me I
39:44 - am the bubble my ex that type of thing
39:47 - so this X and this Y and this is
39:50 - probably one of the things in my I mean
39:52 - for me I just forget to type that all
39:54 - the time and sometimes things don't work
39:56 - I an error message so it's really
39:57 - important that you remember to type that
39:59 - so this is the syntax we're starting
40:01 - with and if you see over here it's
40:03 - basically exactly the same syntax I
40:05 - happen to have a bit more sophistication
40:07 - here I have both a display function and
40:09 - a move function and then if I come down
40:13 - here you can see aha in draw the bubble
40:16 - moves the bubble is displayed so I don't
40:18 - have any of this code anymore just in
40:20 - the wind like I don't have variables
40:22 - lying around and I don't have you know
40:24 - lots of code and draw if made this mini
40:26 - program this bubble and now I've gotten
40:28 - and draw so that was a quick little
40:30 - couple Minute review of objects and
40:32 - syntax but the point of this is not just
40:34 - to be happy about this object I want to
40:36 - make more than one so obvious certainly
40:39 - a strategy to make more than one would
40:40 - be copy paste this whole thing but this
40:43 - is not good strategy and I could change
40:45 - the number and change some things this
40:46 - is not going to sustain you for very
40:48 - long although it's not the worst thing
40:49 - to practice with when you're first
40:50 - getting started make a couple
40:52 - objects instead what I want to do is I
40:56 - want to say
40:57 - VAR bubbles equals bracket bracket I
41:01 - want to have an array of Bubbles and I
41:04 - want to put objects in those bubbles so
41:08 - now one thing I didn't actually mention
41:09 - in my previous video is normally not
41:12 - normally but in the previous example I
41:14 - said make an array and put these numbers
41:15 - in it or put this text in it this is
41:17 - actually an empty array so I'm starting
41:20 - the array as empty one the interesting
41:21 - things about JavaScript is if the array
41:23 - is empty and you just assign something
41:25 - to the first spot and then assign thing
41:27 - to the second spot and then assign thing
41:28 - to the third spot JavaScript will just
41:30 - like I I'm going to figure out what
41:31 - you're doing and I'll just make the
41:32 - array the right size for what you're
41:33 - putting in it so I could quickly do
41:36 - something like this bring this object
41:39 - definition into
41:41 - setup and say bubbles index zero equals
41:46 - that object so now oh my God the blue
41:48 - the scary The Blob is back I got to fix
41:50 - that my green screen settings this blob
41:52 - takes over once in a while and tries to
41:54 - eat me and I don't want it to because I
41:56 - want to make more videos I I guess I do
42:00 - I mean I don't know if I should but um
42:02 - so uh ah so what was I saying yes index
42:05 - zero so I've put an object into the
42:07 - first spot in the array the array now
42:09 - has a bubble object in it and
42:12 - actually I could say print line bubbles
42:14 - just to take a look at
42:16 - it and you can see oops uh I I forgot
42:19 - that I have this extra code in here I'll
42:21 - let I'll comment out for a second print
42:24 - line Bubbles and you can see there it is
42:26 - there's the array it's got one object in
42:28 - it now I'm G to Just note a weird little
42:30 - Nuance to JavaScript you know what if I
42:33 - decid to like I'm going to put this in
42:35 - the fourth spot index 3 0 one2 3 you
42:38 - know I haven't put anything the first
42:39 - spot or the second spot or the third
42:41 - spot what what's going to happen so if I
42:43 - do that you'll notice that JavaScript it
42:45 - just wants to do just wants to like
42:47 - figure out what you mean and what what
42:49 - are you trying to do let me try to guess
42:50 - something and strangely enough it made
42:52 - an array with four elements in it but
42:54 - the first three are null so JavaScript
42:56 - has a lot of flexibility and how you
42:58 - assign things into an array I can't
42:59 - think of a good reason why you would do
43:00 - this you're sort of asking for trouble
43:02 - and you're going to run to errors later
43:03 - when you try to access a value that has
43:05 - null hi hi blue blob but um but it's
43:09 - important to realize that JavaScript is
43:10 - very flexible about how you put things
43:12 - into an array so let's go back to
43:14 - putting it in the zero spot and then
43:18 - what do I need to do well down here what
43:21 - I want to do is not I don't have an
43:23 - individual variable named bubble anymore
43:26 - get a little closer closer in here what
43:28 - I want to do is say ah move the zero
43:31 - element of the array move the display
43:34 - the zero element of the array so now I
43:35 - just want to refer to the array and the
43:38 - specific object in the array good so
43:41 - let's run this and you can see we have
43:43 - exactly what we had before this single
43:45 - object moving around the screen so I
43:47 - haven't used the power of objects in
43:49 - arrays yet I've just taken that single
43:50 - object and put it in the first spot in
43:52 - an array and I can make a little bit of
43:54 - an improvement down here to draw even
43:56 - though the only one thing in the array
43:59 - you know maybe it would be good for
44:00 - future use later to have a little Loop
44:04 - where I just check the and I Loop
44:07 - through the length of the array right
44:09 - and this picks up from the previous
44:11 - video the previous video I Loop through
44:13 - every number to set um I Loop through
44:16 - every number in an array to set the
44:19 - width of an ellipse here right and now
44:22 - I'm going to do is say no matter how
44:24 - many bubbles are in this array go from
44:26 - zero to the length of the array up by
44:29 - one each time use that value as the
44:30 - index move and display all the bubble
44:32 - objects so this it doesn't matter if
44:34 - there's five or 10 or two this Loop will
44:37 - always apply this logic move or display
44:40 - to every object in the array and there
44:43 - we go there's only one I only put one
44:45 - object in the array so how do I put the
44:48 - second object in the array okay well I
44:49 - could copy paste this and say bubbles
44:52 - index one but there's got to be a better
44:54 - way right what I can do do instead is
44:58 - why not put a loop around
45:01 - this I don't know how many times should
45:03 - I Loop four
45:07 - times and then right what I can do is
45:12 - what I can do is now as I'm looping 0 1
45:15 - 2 3 I'm going to put an object in the
45:18 - zero spot put an object in the one spot
45:21 - so this same code that made that
45:23 - individual object I can reuse that
45:25 - multiple times one time two time so now
45:28 - the array by the way if I say print
45:31 - line bubbles
45:34 - here you can see look at that there are
45:36 - four objects in the array and they're
45:38 - all all four hopefully they won't get
45:40 - eaten by the blue Mass there are all
45:41 - four moving around the screen I don't
45:43 - know I could make 400 of
45:45 - them that's a lot of bubbles look at
45:48 - that they're all kind of starting in the
45:49 - center what could I do differently well
45:53 - one thing I can do is give them a random
45:54 - starting
45:55 - value between zero and the
45:59 - width and I could give them a random
46:01 - starting value y value between zero and
46:03 - height so one thing that you can also
46:04 - noce in addition to having functions as
46:07 - Properties or values as properties you
46:09 - can execute code that evaluates to a
46:11 - value it's it's a little bit weird
46:13 - because like this has code in it and
46:15 - that has code in it the difference is
46:16 - random is being executed right now and
46:18 - evaluating to a number that's being
46:20 - assigned to X here this code is not
46:22 - being executed right now it's being
46:23 - defined as something in a function that
46:25 - could be executed later when is it
46:27 - executed it's executed down here when I
46:29 - Loop through all the elements of the
46:31 - array so if I run this you can see
46:34 - there's my 400 Bubbles and we can see
46:36 - this down here is like this was this is
46:38 - what actually is in that array so I'm
46:40 - going to take that print out it's not
46:41 - particularly useful to look at it in the
46:42 - console there anymore but you can see I
46:44 - could I could I could just go crazy now
46:46 - and I could make 4,000 of them you see
46:49 - now one thing is important to realize is
46:51 - there's a limit to how much you can draw
46:53 - in P5 and how like fast it's going to
46:55 - run so the sketch is now running very
46:57 - slowly because it's trying to draw 4,000
46:59 - circles every frame but what's amazing
47:01 - about this is I haven't changed anything
47:03 - in the code but this number this is the
47:06 - only number that controls how many
47:09 - objects are on the screen so why
47:11 - changing this is the this is the amazing
47:13 - power of the reusab modularity and
47:15 - reusability of objects so this program
47:17 - is modular in that there is this object
47:19 - that has these parts its properties its
47:21 - functions I know which part to edit when
47:23 - I want to change how it looks or change
47:25 - how it moves and it's usable this single
47:28 - block of code is being used four times
47:30 - or 400 times to make many objects and
47:32 - all I need to do down here is Loop
47:35 - through all the objects and say apply
47:37 - the same command to all of them move all
47:39 - of them display all of them now you
47:41 - notice that the um editor here the P5
47:44 - editor has this little like yellow
47:46 - highlighted line number it's a little
47:47 - bit I'm afraid to look at it I'm going
47:49 - to I'm going to look at it let's do this
47:53 - together oh it says don't make functions
47:56 - within a loop so so I've upset the
47:57 - editor I'm I'm very sorry but it's it's
48:00 - like complaining that my the style of my
48:02 - JavaScript isn't proper style the truth
48:04 - of the matter is maybe this is a bad
48:05 - idea for reason but at the same time it
48:07 - works this is a great way to practice
48:09 - but the the thing is here this maybe
48:13 - could be improved in the sense that I
48:15 - setup code like has all this code in it
48:17 - and this bubble is very simple what if
48:19 - this bubble got more and more complex so
48:22 - in the next video what I want to do is
48:24 - look at a technique for taking the way
48:26 - this object is made and taking it out of
48:29 - here and putting it in something called
48:30 - a Constructor function here I'm just
48:33 - literally making the bubble object but
48:35 - what if I had this other function whose
48:37 - job it was to make bubble objects for me
48:40 - and I could just call that function
48:41 - anywhere from in the code and I would
48:44 - just I would be able to just say make a
48:45 - new bubble and set up and again life is
48:48 - just about making your code shorter it's
48:49 - really not about that life is about like
48:51 - people and relationships and that code
48:54 - doesn't really matter but you know it's
48:55 - I you know
48:57 - I guess you can use it for something I'm
48:58 - using it for something talking to a
49:00 - camera about it okay so uh I have I just
49:03 - make the same lame joke in every video
49:07 - You're tolerating it this video is now
49:09 - over I'm I should be cut off okay so
49:12 - that's what I want to do in the next
49:13 - video I want to look at how can we work
49:15 - with this thing called a Constructor
49:17 - function which is perhaps a bit more uh
49:19 - typical what you'll see in a lot of the
49:21 - examples on the P5 website if you look
49:23 - at uh other types of examples of making
49:25 - objects with JavaScript you might see
49:26 - this style in other places as well okay
49:29 - so uh if you watch the end of this video
49:31 - I thank you and uh I will see you in the
49:34 - next one or or or I mean I'll see myself
49:36 - in the next one I guess
49:39 - okay okay so that's the end of that
49:41 - video oh my God I got I've done three so
49:44 - far in less than an hour which I think
49:46 - is pretty good um let's see if I have
49:48 - any comments oh nobody has it's dir I'm
49:52 - my audience is growing to 13 people it's
49:54 - amazing okay so if you have any
49:56 - questions or any feedback if something
49:58 - doesn't sound right I'm going to turn
49:59 - that air on a little bit higher um and
50:02 - interfere with the audio a little bit
50:03 - but this is in between my recording
50:04 - please let me know and I'm going to
50:08 - uh I'm going to um look at the
50:11 - Constructor function in the next video
50:13 - and I'm going to cycle the cameras so
50:15 - they don't shut
50:17 - off so this basically if I don't know if
50:19 - you're if if you're an ITP student you
50:21 - happen to be taking ICM that's how far I
50:23 - kind of got in
50:24 - class this week and now I want to try
50:27 - kind of going a step further and looking
50:28 - at the Constructor function so I have to
50:31 - think about
50:34 - this uh okay so first of
50:37 - all let me erase
50:42 - this uh oh I'm not over here anybody
50:45 - have any this camera is
50:48 - off anybody have any feedback any
50:51 - comments any questions I will take them
50:53 - now I will check the chat in a minute
50:56 - going to look I'm over here looking at
50:58 - the chat still nothing um so I think I'm
51:01 - ready for the next video let me check
51:02 - see how I'm doing with terms of my
51:04 - notes uh oh oh no that's okay uh let me
51:08 - see how I'm doing in terms of my
51:11 - notes uh where am
51:13 - I so I'm on video number four
51:16 - Constructor function to make
51:19 - objects which involves passing
51:21 - parameters it should probably include
51:23 - something I probably should do it first
51:25 - without passing parameters
51:28 - then by passing
51:30 - parameters I think I you know might have
51:32 - to kind of like gloss over the like all
51:34 - of the details of this because I feel
51:35 - like want to try to do this in a
51:37 - succinct and simple way then I can get
51:39 - to push so I'm going to remake this
51:42 - exact example but with the Constructor
51:44 - function and then I'll do another video
51:47 - where ah that'll be the passing the
51:49 - parameters perfect where I have to
51:51 - initialize I got it perfect so two
51:53 - videos one remaking this exact example
51:57 - with the Constructor function and
51:58 - another one where you add the objects
52:00 - one at a time by clicking the mouse and
52:04 - um add the objects one at a time by
52:06 - clicking the mouse and you have to pass
52:08 - Mouse X Mouse Y in order to generate the
52:10 - object so I get some parameter passing
52:12 - there right that's
52:16 - good okay now check for any last
52:20 - feedback you know that's are you
52:23 - limiting your videos to 10 minutes for
52:24 - YouTube I'm not really I don't know why
52:26 - I'm limiting my videos to 10 minutes I
52:27 - feel like if it's too long it's I'm
52:30 - doing something wrong as I'm I feel like
52:31 - it would be better for
52:55 - the
53:25 - e
53:55 - e
54:25 - e
54:55 - e
55:25 - e
55:55 - e
56:25 - e
56:55 - e
57:25 - e
57:55 - e
58:25 - e
58:55 - e
59:25 - e
59:55 - e
60:24 - e
60:54 - e
61:24 - e
61:54 - e
62:24 - e
62:54 - e
63:24 - e
63:54 - e
64:24 - e
64:54 - e
65:24 - microphone battery died oh that's so
65:27 - sad Mike battery
65:30 - died going to replace
65:45 - it very sad lost that whole
65:52 - video that is oh wait oh it came came
65:55 - back
65:56 - briefly I guess the battery like it died
65:59 - but it's like not totally dead so I
66:01 - turned it back on how far in that video
66:03 - could you hear the sound just like a
66:05 - couple minutes shoot going to have to do
66:07 - that whole one again which is fine it's
66:11 - not like
66:24 - I
66:29 - okay sound is back if anyone's listening
66:31 - how far did I get in that
66:34 - video just
66:39 - before okay no no I know it's just
66:42 - before I started recording okay I'm just
66:43 - going to look at the video you guys will
66:46 - I'm gonna uh I think you I don't know if
66:48 - you can't see what I'm doing now but I
66:51 - am this last one I'm looking at where it
66:53 - has sound
66:57 - let's see if I
66:59 - can uh hold on a
67:04 - sec yeah there's no sound in this video
67:07 - at
67:08 - all I I guess I'm going to re-record the
67:10 - whole thing over
67:12 - again it
67:14 - sucks
67:17 - okay it's you know what it was it
67:19 - probably doesn't hurt cuz I that was
67:21 - I'll think of that as a rehearsal I then
67:24 - I was feeling so good that I got it it
67:26 - yeah cut out between videos oh that's
67:29 - that was nice of guy that yeah that's
67:30 - the that's the problem with the way that
67:33 - I'm doing this and not really looking at
67:34 - the chat but I really appreciate that
67:36 - you guys um tried to warn me and let me
67:41 - just I replace the battery in one this
67:43 - one has two bars so I think it's going
67:45 - to be fine for a while longer um let me
67:48 - regroup here I'm going to turn on some
67:50 - air cuz it's getting very hot in here
67:52 - it's really too bad cuz that was
67:53 - actually the one topic that that
67:57 - uh and I will
68:00 - uh um I'm going to regroup
68:07 - here
68:09 - it's it was this was so perfect but it's
68:12 - okay it's
68:17 - okay I can do this
68:20 - again that was 12 minutes out of my life
68:23 - that I can repeat no
68:29 - problem audio is still working the thing
68:32 - is like I should really be able to see
68:33 - this because I have a preview monitor
68:35 - and it's showing the audio levels so I
68:38 - often like look and check but I just
68:40 - didn't
68:42 - check uh okay so let me get
68:46 - back to where I was and I have to you
68:51 - know what what the funny thing is I not
68:54 - so funny but I
68:57 - I forgot to save these as separate
68:58 - examples anyway so I'm going to undoing
69:02 - a bit here to get back to the beginning
69:04 - I should have saved this as a previous
69:07 - version uh oh it's not
69:12 - H there we
69:15 - go that's what I had before and I want
69:18 - to save this
69:21 - as
69:24 - uh uh uh bubble
69:27 - array and I'm going to save it as uh
69:32 - bubble array Constructor
69:36 - function okay well at least now I saved
69:40 - my
69:41 - code
69:42 - and I'm checking
69:45 - here drink a little bit of
69:52 - water I'm going to do this again in just
69:54 - like one minute you guys are
70:06 - patient I have like a rock in my shoe
70:09 - just going to fix
70:12 - that it's
70:17 - uncomfortable here I
70:22 - am this was in my shoe put it over here
70:27 - I don't know where that came from now my
70:29 - shoelace is stuck this is
70:32 - like this is riveting live streaming on
70:36 - YouTube I'm
70:38 - sure man in his office by himself takes
70:42 - rock out of Sho I think this is
70:44 - performance art
70:45 - perhaps uh
70:49 - and okay so I'm about to re-record the
70:51 - video about the Constructor function
70:54 - they're actually some parts in the video
70:56 - that I got confused that I think I could
70:58 - probably improve on anyway so I'll try
71:00 - to look at this as like the blessing and
71:02 - disguise
71:04 - thing and I'm goingon to I'm G to
71:07 - minimize the chat I can see the audio
71:10 - everybody can hear me now
71:13 - right okay and uh I wonder how long the
71:17 - delay is before I say something and you
71:18 - see it I think it's probably about 30
71:19 - seconds let me see I'm going to
71:22 - clap one two
71:25 - 3 four five 6 7 8 9 10 11 12 13 14 yeah
71:37 - 14 15 seconds I don't know if I was
71:39 - counting seconds accurately I could have
71:40 - looked at like a clock or something okay
71:43 - sound is good thank you guys uh here we
71:47 - go um
71:50 - minimize this uh nose I look picking my
71:55 - nose wiping my
71:57 - nose okay turn the air back
72:00 - down and coming over
72:03 - here here drink a little more
72:10 - water okay here we
72:14 - go I have to collect my thoughts for a
72:16 - second so what I'm doing now is the last
72:18 - thing we did is we made the object in
72:20 - the array the literal object and now I
72:22 - want to talk about why you would use a
72:24 - construction function what the Syntax
72:26 - for the Constructor function is and
72:27 - change the code got
72:29 - it
72:33 - okay che check the chat one more time
72:36 - che che che che the chat don't want that
72:38 - to happen again okay nothing is there
72:40 - excellent here we
72:45 - go okay this is an exciting moment I'm
72:48 - about to make a video about something
72:49 - that I have not ever made a video about
72:51 - before and that is the Constructor
72:53 - function in JavaScript so what is the
72:56 - Constructor function what is a
72:57 - Constructor function what is the Syntax
72:59 - for it why do you want to use it how
73:00 - does it have to do with objects how does
73:01 - it relate to anything we've been looking
73:02 - at so far and so uh let's let me review
73:05 - where I kind of ended off off that last
73:07 - video so in this last video here oh look
73:11 - at this hold on sorry why is the warning
73:13 - gone it's funny how that warning is now
73:17 - gone I'm GNA have to start this video
73:19 - over which is fine it's funny how that
73:20 - warning was there
73:22 - before um okay I don't care
73:25 - sorry here I go I'm starting
73:31 - again okay so I'm making a video a new a
73:34 - new video about a topic that I I don't
73:35 - need to say that I just said that before
73:36 - but it's
73:38 - silly this video is about the
73:40 - Constructor function in JavaScript now
73:42 - this is a tricky and confusing topic it
73:44 - relates to how you generate objects and
73:47 - it's a different style than what I
73:48 - showed you in the previous video with a
73:50 - literal object being made into an array
73:52 - and in fact it's probably you I hate to
73:54 - use this term a slightly better style
73:55 - it's a more flexible style it will
73:57 - afford you some possibilities uh and get
73:59 - past some limitations that are here so
74:01 - let's first talk about why do we need
74:03 - this other step before we even talk
74:04 - about what that other step is the
74:05 - Constructor function so there's a couple
74:08 - reasons so this example first of all it
74:10 - has an array an empty array in setup it
74:12 - puts four objects into the array there
74:14 - are those objects and then in draw it
74:17 - calls functions on those objects display
74:19 - the objects move the objects so where
74:21 - does this break down there's a couple
74:23 - ways this break down number one is it's
74:25 - a lot of code here in setup this is a
74:27 - simple object it just has an x a y and
74:29 - two functions but you could imagine you
74:31 - could have an object with 10 properties
74:33 - 15 properties five functions six
74:35 - functions you don't really want like all
74:37 - this code inside of this Loop and setup
74:38 - it's sort of hard to manage and keep
74:40 - track of so number one it be nice if we
74:41 - could move this somewhere else kind of
74:43 - if you're thinking like I know I could
74:44 - move it into another function that's
74:46 - basically what we're going to do we're
74:47 - going to move it into a special kind of
74:48 - function called a Constructor function
74:51 - the other reason why you might need a
74:53 - Constructor function is you might want
74:54 - to make new objects in different places
74:56 - in your code so you might want to start
74:58 - this program with four objects and then
75:00 - every time you click the mouse you get a
75:03 - new object and so you need the literal
75:06 - object in setup when you make four and
75:08 - then you also need that in Mouse press
75:09 - when you make another one so you
75:11 - suddenly this code that I the whole
75:13 - point of it was to not have to write it
75:15 - again because it's inside a loop what if
75:16 - you need to do it later or somewhere
75:18 - else in the code if you have the
75:20 - Constructor function that Constructor
75:22 - function is reusable so the purpose of
75:25 - Constructor function is a special
75:26 - function to make the object for you so
75:29 - it's really like this is making the
75:31 - object but I want to put that somewhere
75:32 - else essentially what you're doing so
75:34 - just reorganizing the code and some new
75:36 - possibilities will open up so let's look
75:38 - at before I even get to that let's look
75:39 - at what that does to the code so pretend
75:42 - that this all this code didn't need to
75:44 - be here and in fact I'm going to like
75:46 - hit a lot of carriage returns go far
75:48 - down here and leave it down here and I'm
75:50 - going to comment it out so that it's not
75:53 - affecting anything and I'm come back up
75:55 - here and if you if I had a Constructor
75:58 - function I would be able to say
75:59 - something like this new
76:02 - bubble this is new syntax with the
76:05 - keyword new what the keyword new it
76:08 - means is hey JavaScript make a new
76:10 - object what kind of object this bubble
76:13 - object how do I know what a bubble
76:15 - object is I'm going to write a special
76:17 - function called Bubble somewhere El
76:19 - somewhere else that will explain what a
76:21 - bubble object is generate it make it put
76:24 - it here so that it goes into the array
76:26 - so and what's wonderful about this is
76:27 - this beautiful lovely clean sort of like
76:30 - succinct syntax like all of the code for
76:33 - the object is now somewhere else we can
76:35 - see that the main program is just let's
76:37 - start with an empty array let's put a
76:39 - bunch of things in it and let's make
76:40 - those things move around the screen and
76:41 - do stuff and so with this all that's
76:44 - left to do is Define what it is to be
76:47 - that bubble object to write this
76:48 - Constructor function that makes that
76:50 - bubble object so how do you do that
76:52 - that's the next piece so I want to come
76:53 - over here to the Whiteboard
76:55 - and oops hit my button again oh come on
76:57 - button there I am um so I want to come
77:00 - over here and talk about that the Syntax
77:02 - for that so what I think a way a good
77:04 - way of looking at it is okay so we know
77:05 - how to write a literal object a literal
77:08 - object I'm going to kind of squeeze over
77:09 - here to have some extra room uh I'm just
77:11 - going to say
77:13 - varb a little a literal object is a
77:16 - collection of name value pairs uh
77:19 - properties I have a property named x
77:21 - with a value of 100 I have a property
77:23 - named y with a value of 50 I have a
77:25 - property named display and the value of
77:28 - this property oh it happens to be a
77:31 - function and what do I doing that
77:33 - function I draw an ellipse I set a color
77:35 - and if I want to refer back to a
77:38 - property of the object remember I have
77:40 - to say this another property I have to
77:42 - say
77:43 - this.x so this is the syntax that you're
77:46 - familiar with if you watch some of the
77:47 - previous videos it's what I've used so
77:49 - far so I'm going to draw a sort of
77:51 - magical line here and what I want to do
77:54 - is look at there's like a thing poking
77:56 - me got I don't have a lot it looks like
77:58 - I'm in this big space here very cramped
78:00 - camera
78:02 - light thing poking me um so uh over here
78:06 - what I want to do now is look at how do
78:08 - I make this with the Constructor
78:10 - function so the Constructor function is
78:12 - a function just like any other function
78:14 - in JavaScript so the syntax in a weird
78:16 - sort of way almost goes back to
78:17 - something that you might be a little
78:18 - more used to but with some kind of
78:20 - strange other nuance and aspects to it
78:22 - so to define a function in JavaScript
78:25 - and simply write
78:27 - function the name of that function leave
78:30 - that blank for a
78:31 - second if there are any arguments or
78:34 - parameters parameters to that function
78:35 - and parentheses an open curly bracket
78:37 - can you see that yes and a Clos curly
78:39 - bracket so a Constructor function is a
78:42 - function just like any other function
78:44 - however we intend to use this function
78:46 - in a special Case by invoking the new
78:49 - operator so I want to say new bubble
78:52 - meaning I want to execute a function
78:53 - called Bubble with the new operator to
78:55 - make a new object so a convention in how
78:59 - you name Constructor functions is to
79:02 - name it with a capital
79:04 - letter okay so uh so this is a function
79:07 - named bubble I've named it with a
79:09 - capital letter simply to note in my code
79:12 - that this is a special function it's a
79:13 - Constructor function the thing that
79:15 - JavaScript is looking for is that new
79:17 - operator the thing that I have over here
79:19 - it's going to invoke that Constructor
79:21 - function say hey Constructor function
79:22 - make a new object and just convention
79:25 - wise so I can keep track of what's doing
79:27 - what in my code I'm going to capitalize
79:29 - that uh and name that with B bubble
79:31 - capital B I made this video earlier and
79:34 - had no sound in it and I really
79:35 - explained that much better in the
79:36 - previous video that no one will ever see
79:39 - I'm going to keep going something else
79:40 - I'm going to do in this video is going
79:41 - to be better I'm sure okay so now once
79:44 - this function is triggered with the new
79:46 - operator JavaScript says okay I'm going
79:48 - to make a new object now the first thing
79:50 - we need to do is say what properties go
79:52 - into that new
79:53 - object
79:55 - this is where the keyword this comes in
79:57 - again if I say
80:00 - this.x equals 100 what I've done is the
80:03 - new bubble object that this Constructor
80:06 - has made attach the property X to this
80:09 - bubble object so in the same way that we
80:12 - added a property here saying xon 100 The
80:15 - Constructor function is making a new
80:17 - object and attaching X to that
80:19 - particular object this object so I can
80:22 - then also attach a y to it
80:25 - and I can also there goes the camera I
80:28 - can also
80:30 - attach a function to it and I I know
80:32 - this I'm going to go off the screen here
80:34 - but you uh so actually let me not it's
80:36 - not a screen this is a whiteboard but
80:38 - let me actually write this a little
80:40 - smaller so you can see it this.
80:43 - display equals
80:48 - function so you can see
80:50 - now technical fail but I'm just going to
80:53 - keep going here this is already my
80:54 - second try um look that's the that by
80:57 - the way that's the thing this is the
80:58 - thing that was poking me just turn that
81:01 - um okay so you can see how this Maps
81:04 - this is making a literal object make
81:06 - this object B with an X with a Y with a
81:08 - display this is in a way like a template
81:11 - it's saying the object doesn't exist yet
81:14 - but if you were to call this function
81:16 - with a named bubble then an object will
81:19 - be created with these properties X will
81:21 - be attached to that object y will be
81:23 - attached to that object display will be
81:24 - attached to that object so literal
81:27 - object it exists template idea of an
81:30 - object way of generating the object when
81:32 - you say new bubble the object is made
81:36 - and you might think that at the end here
81:38 - you would want to say something like
81:40 - return this so once the object is made
81:43 - you want to then send it back to where
81:46 - you wanted it to make right here I say
81:48 - oh lost the camera oh God I'm going to
81:50 - have to remake this video again tomorrow
81:52 - which I might do um
81:55 - here I said new bubble I want this to
81:57 - evaluate to that new object the new
81:59 - object here the reference to that new
82:02 - object is the keyword this but the thing
82:04 - about a Constructor function is this is
82:06 - like what's you don't have to say this
82:08 - it's inherent to how once you invoke the
82:10 - new operator that that object will be
82:12 - returned it's kind of unspoken it's you
82:14 - don't have to say it it happens
82:16 - automatically for you so this is the
82:19 - syntax one of the things you might
82:20 - practice right an exercise that would
82:22 - give you at the end is take something
82:23 - that you made a literal object and try
82:25 - to convert it to this Constructor
82:27 - function syntax this is a really hard
82:29 - confusing thing to explain and possibly
82:31 - understand hopefully I'm doing a
82:32 - slightly okay job so let's do that now
82:35 - in the code itself remember down here
82:37 - before I sort of left my code I had for
82:40 - the literal object commented out so now
82:42 - I can actually write that Constructor
82:44 - function so I'm going to say function
82:48 - bubble and now what are the properties I
82:51 - had an X and A Y so I need to say this
82:53 - dox equals random 0 to width this.y
82:58 - equals random 0 to height so you can see
83:01 - instead of the literal syntax I'm
83:03 - actually setting properties attached to
83:05 - this equal to the values it's sort of
83:06 - more like code being executed line by
83:08 - line and then I can add the display
83:12 - function and I can add the move
83:17 - function and I left a space here and
83:19 - then the nice thing is I can go and grab
83:21 - these lines not these haven't changed
83:24 - those functions are exactly the same and
83:27 - I know I'm doing this kind of quickly
83:29 - like if you're following along you can
83:31 - pause the video and try to sort to do
83:32 - this yourself I will upload these
83:34 - somewhere and try to put them in the
83:36 - description on YouTube or video wherever
83:38 - you're watching this but you can see now
83:40 - let me put a little line break here um
83:42 - you can see now this is the Constructor
83:45 - function this is a function whose sole
83:47 - purpose in life is to generate an object
83:50 - when you say new bubble that object is
83:52 - made it's stored in the value this x
83:55 - gets attached to it y gets attached to
83:57 - it display gets attached to it move gets
83:58 - attached to it unspoken at the end that
84:01 - object this object is returned where
84:03 - where did I say new bubble up here what
84:06 - do I do with it I put it in the array
84:09 - boom boom I don't know there's it's a
84:11 - bubble it pops but so this function new
84:14 - bubble now notice interestingly enough
84:15 - you know I hate to do this to you but if
84:17 - I said this this would not work right
84:20 - the Constructor function is a function
84:21 - like any other it will be executed but
84:23 - all sorts of things will break and not
84:24 - work this only works JavaScript is
84:27 - looking for that keyword new in order to
84:29 - know to make this a new bubble object
84:31 - and and and attach the properties to it
84:34 - so I put this in here and I run it and
84:37 - we've got four and again I've got this
84:38 - same magical
84:41 - thing uh and and uh you know I'll make
84:44 - 400 bubbles so I'm like running out of
84:46 - steam here so hopefully this so so
84:49 - there's you know right now all I did in
84:51 - this particular example was take
84:54 - um take the literal object that I had in
84:57 - this Loop up here and move it to a
84:59 - Constructor function so in the next
85:02 - video what I would like to do is kind of
85:04 - show you what sort of what what what you
85:06 - could really do with this because now if
85:08 - I have this Constructor function I could
85:11 - say when I click the
85:14 - mouse also make a new bubble and how do
85:18 - I add this to the array right so this is
85:22 - what we need to look at I don't have to
85:24 - rewrite that that Constructor function
85:26 - can be reused anywhere in the code so
85:29 - this won't work yet this is the topic
85:30 - that I want to look at in the next video
85:33 - uh and how do I maybe assign parameters
85:35 - to it arguments to it I want to make an
85:37 - object at this location at mousex at
85:40 - Mouse y so that's the topic I want to
85:41 - look at in the next video for now I
85:42 - would say if you want an exercise for
85:44 - yourself go and find something maybe
85:46 - watch the previous video and made a
85:47 - little a literal object in a loop take
85:50 - that literal object code out of the loop
85:52 - write the Constructor function see if
85:53 - you can get to perform exactly the same
85:55 - way okay so this is the end of this
85:57 - particular video in the next one I'll
85:59 - look at the Fun an array function called
86:01 - push an array function called splice
86:04 - which allows you to add things to an
86:05 - array and remove things from the array
86:07 - so we can have a much more flexible um
86:10 - uh system okay and I'm going to hit stop
86:15 - now okay so hopefully that actually
86:19 - worked the first I swear I the first
86:22 - video was better but just doesn't have
86:23 - any sounds nothing I can do uh okay uh
86:27 - everybody's gone Constructor function
86:28 - always makes everybody go
86:31 - away um okay so I think it's getting to
86:34 - be 3:30 I'm done this for an hour and a
86:37 - half now I'm going to turn on some air I
86:39 - think I and let me look at my list
86:43 - now I kind of want to make that video
86:45 - again because I really feel it but I um
86:48 - I think I'm going to leave it
86:49 - obviously uh that was nice of you guys
86:53 - okay uh
86:55 - and um I think I'm gonna at least do
86:59 - push and splice and I'll have to leave
87:01 - these ideas six and seven for another
87:05 - time you know maybe I maybe I'll have
87:07 - I'll I'll get a second win because I
87:09 - would love to just like knock all these
87:11 - out today then not worry about videos by
87:14 - the way the next set of videos will be
87:16 - about working with the Dom HTML CSS P5
87:19 - Dom add-on uh but I got to do push in
87:22 - splice so
87:28 - uh let me oops I'm looking at Twitter
87:30 - for no reason uh okay so uh if you have
87:33 - any comments or feedback let me know I'm
87:35 - sort of out of water
87:37 - here I watch batter is dying batteries
87:40 - are dying everywhere let's check the
87:42 - battery of this still looks
87:45 - fine um drink a little
87:53 - of
87:56 - okay so I'm going to erase this over
87:58 - here so what I'm going to do in the next
88:00 - video is just look
88:02 - at um push and
88:07 - splice splice takes something out of the
88:10 - array I think you give it the index and
88:12 - then the number of things so if you want
88:15 - to remove the third element you say two
88:17 - and then you just want to remove only
88:19 - that element comma one it's a little bit
88:20 - weird it be nice to have a remove
88:22 - function but that'll do um
88:27 - and so here I
88:30 - am
88:32 - and going to minimize this any uh um and
88:37 - come over here
88:40 - and and then and then arguments to the
88:44 - Constructor as
88:45 - well okay uh here we
88:50 - go I can do this one Al I have to PE but
88:54 - I'll wait I can make it through one more
88:56 - video CU I'm sure you all needed to know
88:58 - that uh
89:04 - okay so if you watch the previous video
89:06 - about the Constructor function thank you
89:09 - for still being here and watching the
89:10 - next one because that was a little bit
89:12 - rough maybe you actually watch the
89:13 - re-recorded one that I hope to make
89:15 - someday to kind of try to do a little
89:16 - bit of a better job here but I have a
89:19 - promise to you which is that I'm going
89:20 - to put my energy into this video and I
89:21 - think this particular video is going to
89:23 - uh let you do some really interesting
89:25 - things with an array that weren't
89:27 - possible before if you haven't looked at
89:30 - some of the other functionality that you
89:31 - can do with an array so what is that
89:32 - functionality that I'm talking about
89:34 - notice this example so what's wonderful
89:36 - about working with objects in an array
89:38 - is again I have a single number right
89:40 - there I change that number to five I run
89:43 - the code there are five bubbles I change
89:46 - that number to 500 I run the code there
89:49 - are 500 of them but what if I want to
89:52 - click click click click click and delete
89:53 - them them or what if I want to click
89:55 - click click click click and add them how
89:57 - do I resize dynamically add or remove
89:59 - things from that array then well one of
90:01 - the nice things is right here no matter
90:04 - what I do to the array this Loop will
90:06 - only ever iterate over the current state
90:09 - of the array right because dot length
90:11 - will dynamically always store the value
90:14 - of the array itself so that's a great
90:16 - thing that's the good news and then in
90:19 - order to add and subtract things from
90:21 - the array a nice technique for doing
90:23 - that is with two array functions so one
90:27 - array function is called push another
90:30 - array function is called splice now the
90:33 - truth of the matter is there are many
90:35 - array functions and I will try to
90:38 - remember to include in the description
90:39 - below a link to a JavaScript
90:42 - documentation page that runs through all
90:44 - these functions it might be a little
90:45 - scary weird looking links maybe you
90:47 - shouldn't look at it but these are just
90:49 - two functions that I'm going to
90:51 - demonstrate to you now the other thing
90:52 - that's a little bit weird is what
90:54 - a function for what right an
90:57 - array is this right nums equals 5 to -3
91:04 - 71 right what do you mean a function to
91:06 - the array uh I could say nums index so
91:11 - this is 0 1 2 3 if I said nums index 4
91:16 - equals
91:18 - 21 it's like I'm taking the end of this
91:22 - array and adding element four to the
91:27 - array and making it one longer so this
91:29 - is a way to add an element to the array
91:32 - but it only works because I happen to
91:35 - know what that index value is I happen
91:37 - to know that the in that the length of
91:39 - that array so a more convenient way
91:42 - might be to no matter what just say
91:44 - append it to the end or add it to the
91:46 - end and the push function does that if I
91:49 - say nums do
91:52 - push 63 it will say whatever the size of
91:56 - the array is extend it by one more and
92:01 - put the thing you just pushed onto it
92:03 - there and it might have run out of space
92:04 - up there but I think you can see it now
92:06 - this is what's weird yes you can
92:08 - initialize an array yes you can refer to
92:11 - individual elements but you can call
92:13 - functions on it what is the thing that
92:16 - what's what is the thing you normally
92:17 - have that you say something do execut a
92:20 - function an object so this is one of the
92:22 - things about JavaScript
92:24 - you know how we made an array of objects
92:26 - well guess what an array is also an
92:28 - object so and by the way we've seen this
92:30 - already it has a property the do length
92:32 - property so this is what we normally
92:34 - think of as the array itself and we're
92:36 - working with the values in the array but
92:37 - there are the an array happens to be an
92:39 - object and there are special functions
92:40 - you can call on it push being one of the
92:42 - most you know sort of convenient ones or
92:44 - useful ones for you right now and I'll
92:45 - show you splice in a moment which will
92:47 - allow you to take stuff out of the array
92:49 - so let me come back over here and now
92:51 - that we know that I I can do something
92:54 - to this code right if I can add the
92:57 - mouse pressed
93:00 - function and here in the mouse pressed
93:02 - function I can
93:04 - say
93:06 - bubbles. push and what what do I want to
93:10 - push into that array right before if I
93:14 - just had an array of numbers I could
93:16 - just say push this number P push some
93:18 - random number or push some whatever this
93:20 - is just numbers here what I want to do
93:22 - is push bubble object how do I make a
93:25 - new bubble object well that was what I
93:27 - spent all this time really trying my
93:29 - hardest to explain in the previous video
93:31 - the job of making objects is left to
93:34 - this Constructor function which is being
93:36 - eaten by the blue blob this Constructor
93:38 - function its job is to make an object
93:41 - how do you trigger its action to make
93:42 - that object by saying new bubble
93:45 - parentheses so right here all I need to
93:48 - do is say hey push a new bubble into
93:51 - that uh array so now you're not really
93:53 - going to notice are they popping up
93:54 - there but let's start with just two
93:56 - Bubbles and I could click and you can
93:59 - see every time I click a new bubble is
94:02 - being added to that array but I I want
94:05 - so I want to do better than that like
94:06 - what I want to do is I want to click
94:08 - right here and I want to see the bubble
94:11 - being added right there how do I do that
94:15 - well let's look at how is its initial X
94:17 - and Y picked its initial X and Y is
94:20 - picked randomly now the truth of the
94:23 - matter is I could just replace that with
94:24 - mouse X and replace this with mouse y
94:26 - but I'm using this as an excuse to show
94:28 - you something a little bit tricky about
94:30 - Constructor functions but ultimately
94:33 - rather
94:34 - useful functions can accept arguments
94:36 - you can pass things into a function I
94:38 - want to draw a line from this point to
94:41 - this point I want to fill with these
94:44 - particular RGB values I can say I want
94:47 - to make a bubble with this argument I
94:49 - want to make a bubble that is big or a
94:51 - bubble that is small or a bubble that is
94:53 - red I want to be able to modify the
94:55 - bubble as I make it and in this case I
94:57 - want to say I want to make a bubble at
95:00 - Mouse X at Mouse y so let me come back
95:04 - over here I erased my Constructor
95:06 - function but let's take a look at let's
95:09 - take a look at this syntax a little bit
95:11 - because this is really hard so I want to
95:13 - say new bubble and right now I'm going
95:16 - to say instead of mouse X and mouse y
95:18 - I'm going to say 50 comma 25 so this is
95:22 - the line of code I'm executing right and
95:25 - remember the Constructor function looked
95:28 - like
95:29 - this now it didn't have anything between
95:32 - the parentheses I'm going to add
95:33 - something in a minute and then it said
95:35 - this dox equals something and
95:40 - thisy equals something what I want to do
95:43 - is I want to get this 50 into that X and
95:46 - I want to get this 25 into that X why
95:50 - when I make the new bubble object I want
95:52 - to make it with these values 50 should
95:54 - be its X property 25 should be the value
95:56 - of the Y property how do I do that well
95:59 - when you pass arguments into a function
96:01 - those arguments get received by that
96:03 - function's parameters so I need to add
96:05 - how many parameters here two parameters
96:08 - n x and a y I can actually call those
96:12 - whatever I want but a nice way that I
96:14 - might call them is I might call them X
96:15 - and A Y and you know why JavaScript
96:17 - won't get confused because these are
96:18 - called X and Y because these are
96:20 - referring to this bubble's X and this
96:22 - bubble's y and these are just a plain
96:25 - old X and a plain old y so if 50 goes
96:27 - into x x now has the value of 50 x can
96:31 - go into this dox if 25 goes into y y now
96:34 - has the value of 25 and Y can go into
96:37 - this comma y so the these particular X
96:40 - and Y parameters to the bubble function
96:43 - they simply act as these like handoffs
96:45 - they're just here they're like waiting
96:46 - okay give me a value I got the value you
96:48 - take the value that's all they live for
96:49 - that's their entire purpose in life in
96:51 - terms of this code is just receive that
96:53 - value 50 and immediately handing it off
96:55 - because this is the x that really
96:57 - matters that's the bubble's X this is
96:59 - the Y that really matters that's the
97:01 - bubble's y these are just temporary just
97:03 - here to receive the value and and pass
97:05 - it off so let's come back I'm sure you
97:08 - have a question but you can't ask it um
97:11 - let's come back over here and uh um
97:14 - let's look at that so I'm passing in the
97:16 - mouse X and the mouse y I'm coming down
97:19 - here I need to add those parameters to
97:22 - receive that Mouse X and Mouse Y and you
97:24 - need to assign those parameters to
97:26 - this.x and this doy so this is exactly
97:29 - what I went through before you can see
97:31 - now Mouse X goes into X which then goes
97:35 - into this.x Mouse y goes into Y which
97:38 - then goes into this doy okay here we go
97:41 - stop start and now when I click the
97:43 - mouse click the mouse click the mouse
97:45 - click the mouse click the mouse cck
97:46 - click the mouse look at that oh that is
97:47 - lovely it just works you know I could do
97:50 - something like I'm I'm sorry but I I
97:52 - just have to make this a little bit
97:53 - nicer like you know let's give it like a
97:55 - little bit of a some sort of color um
98:00 - you know some
98:01 - Alpha and what um what I just realized
98:05 - though is what's weird like look at this
98:06 - for a second shouldn't we have like 200
98:08 - bubbles to start with there's no bubbles
98:10 - to start with look at this even I I
98:12 - rewrote the bubble Constructor to expect
98:16 - parameters but I didn't get any up here
98:18 - didn't get an error message or maybe I
98:20 - did but I can't see the error message no
98:23 - there's no error message so the thing is
98:25 - it tried to do it but it didn't have the
98:27 - arguments so we don't see those bubble
98:28 - objects so this is important if you
98:30 - provide argument for parameters to your
98:33 - Constructor function you've got to use
98:34 - this so you know I don't know what I
98:36 - want to do up here I could put all of
98:38 - these starting ones at 100 100 so
98:40 - they're all right there I could put all
98:42 - these starting ones at a random location
98:44 - right I could pass the random location
98:46 - in and I could do that and now I kind of
98:49 - had what I had before but ultimately I
98:51 - think what I want to do in this example
98:52 - is just take the this out like now I
98:54 - have a program which just starts with no
98:57 - objects it's fine to have an empty array
99:00 - I can Loop through that empty array you
99:01 - know how many times I'm going to Loop
99:02 - through that empty array zero times and
99:04 - the only time I'm ever going to add a
99:06 - new
99:07 - object is if I click the mouse because
99:09 - when I click the mouse I'll make a new
99:11 - bubble object at Mouse X at Mouse Y and
99:14 - push it into the array so that array
99:15 - grows so I can click click click click
99:18 - click click click and something I could
99:19 - do that's kind of fun is I could change
99:22 - I mean fun if me I guess but uh I could
99:25 - change that from Mouse press to Mouse
99:27 - dragg which is sort of a nice little
99:28 - effect meaning I can kind of like draw
99:30 - with this and notice this is this kind
99:32 - of answers that question that you might
99:33 - have had in your head a long time ago
99:35 - which is what if you know if I don't
99:38 - draw the background I get this nice
99:40 - Trail right because I don't erase the
99:42 - previous shapes that I've been drawing
99:45 - here now I'm erasing the background but
99:46 - I'm using an array to keep track of the
99:49 - history of everything I ever did with
99:51 - the mouse and I'm making a new object
99:53 - for every one of those points and you
99:54 - can see even though you could probably
99:56 - come up with more interesting motion
99:57 - than this even though uh I start with
100:00 - this pattern that pattern quickly goes
100:03 - away as these objects start to move um
100:06 - randomly around the screen so I think
100:08 - okay but I was going to say this is a
100:11 - great exercise for you I think using
100:12 - this model can you create an object can
100:15 - you create an array that stores the
100:17 - history of the mouse As you move it
100:19 - around and what types of kind of motion
100:22 - or changes of color or things can you do
100:24 - now if you have a drawing program that's
100:26 - actually rotating the all of those
100:28 - locations in an array rather than just
100:30 - leaving them as pixels on the screen but
100:32 - before I go any further let's add one
100:34 - more thing to this what if I only ever
100:36 - want to have 50 like I want to
100:39 - delete the I want to I want to delete
100:42 - the oldest thing from the array right
100:44 - what I mean by that
100:47 - is
100:51 - if this is the array
100:53 - right the push function always adds
100:56 - things to the end so first it adds like
100:58 - a bubble to the beginning then it adds a
101:00 - new bubble to the next spot then it adds
101:02 - a new bubble to the next spot then a new
101:04 - bubble to the next spot and once I get
101:06 - to a certain number what if I want to
101:08 - delete the oldest one shift everything
101:10 - down delete the next oldest one shift
101:12 - everything down and keep adding so the
101:14 - way to delete something from an array is
101:17 - with a function called splice it's a
101:19 - little bit confusing though because this
101:21 - splice function expects two two
101:23 - arguments the first argument is the
101:26 - index of what you want to delete so if I
101:29 - say index 2 and this was my array 012 it
101:33 - would remove this element and all these
101:36 - would kind of shift down into the
101:37 - appropriate
101:38 - spots this second argument is how many
101:42 - so actually if I said 2 comma 5 it would
101:46 - delete this and the next four elements
101:48 - but in this case I just want to remove
101:50 - one at a time so I want to remove the
101:52 - element but but and I want to remove the
101:54 - oldest one so if I'm adding to the array
101:57 - the oldest one is always in the first
101:58 - spot so I want to delete the first
102:00 - element and just one of them okay so
102:03 - let's come back here and when do I want
102:05 - to do that like right now I could say
102:07 - like just just for the sake of argument
102:09 - key
102:10 - pressed bubbles. splice the first
102:14 - element one just that one element so you
102:17 - can see now I'm going to add a whole
102:19 - bunch of them and now start hitting the
102:22 - a key you can can see it's removing them
102:24 - in order of what the how they were added
102:26 - but maybe what I really want to do is
102:28 - say something
102:30 - like
102:31 - okay if the bubble array ever gets
102:36 - greater than the value
102:38 - 50 then delete that first element so
102:42 - what's that going to do I'm going to
102:44 - keep making bubbles until suddenly I
102:46 - have 50 of them I can keep making more
102:48 - but keep deleting the older one so if I
102:49 - ever have 50 delete the add a new one
102:52 - delete the previous one so you can see
102:54 - it's I sort of get this trail that kind
102:56 - of winds following me so
103:00 - push adding things to the array splice
103:04 - deleting things from the array now let
103:05 - me give you a challenging
103:07 - problem and I really should make another
103:09 - video with the solution to this problem
103:11 - I actually have one somewhere uh but
103:14 - it's it uses processing so I need to
103:15 - make a JavaScript one with this but what
103:18 - if you don't want to remove these
103:19 - objects just based on their age like
103:21 - when I get to 50 but what if you you
103:23 - want to remove them if they ever happen
103:24 - to wander off the screen right so look
103:27 - at this here's a bunch of objects leave
103:29 - them there or remove them if they uh if
103:33 - they hit the edge of the screen or if
103:35 - you click on them so how do you pick
103:37 - specific objects to move based on some
103:39 - set of condition that's a pretty
103:41 - difficult problem this somehow has to be
103:43 - inside of the loop but you got to watch
103:46 - out if you're looping through an array
103:48 - and modifying this the elements of the
103:50 - array at the same time weird things can
103:52 - happen so that's something you can think
103:54 - about as a future problem uh but just to
103:56 - get started right now I might you know
103:57 - again work with this model see what you
103:59 - can do with the on object that sort of
104:01 - keeps track of an array that sortes a
104:03 - history of what you've done with the
104:04 - mouse or maybe you have something moving
104:06 - independently randomly and you're
104:07 - keeping track of it a history of its
104:09 - location okay uh so hopefully this
104:11 - helped you with a little more about
104:13 - objects and arrays and I'm going to
104:14 - finish this video off now oh this was 15
104:17 - minutes long that was
104:19 - long uh come on Mouse I got to hit
104:22 - stop
104:26 - okay bubbles yeah I know Amelia hi
104:30 - Amelia it's always bubbles it's nice of
104:32 - you to be
104:34 - here uh I like this weird little image
104:36 - of myself that's coming up uh okay any
104:40 - questions anybody still here I'm I'm
104:43 - definitely running out of steam let's
104:44 - see where I got to uh in I'm going to
104:47 - bring up my notes here these are I got
104:50 - everywhere up to six and seven and also
104:53 - if I were to add another video here
104:55 - really what I should do is like
104:57 - removing elements from an array when
105:01 - they leave the window so I should really
105:03 - do a video on that this's really eight
105:05 - videos somehow now so I did all of these
105:08 - even though I feel like didn't do a very
105:09 - good job and uh I haven't done these
105:13 - it's
105:14 - 3:45 kind of run out of steam anybody
105:17 - have any questions or comments before I
105:20 - go I could just keep I could do a couple
105:22 - more
105:25 - only I could get to all of
105:29 - them questions comments
105:35 - bubbles I think probably I'm going to
105:36 - take a break and kind of remember this
105:40 - list maybe I'll come back in a few
105:42 - minutes even if I can kind of I need to
105:44 - get some more water and stuff uh okay so
105:47 - um last chance I'm going to count my
105:50 - head to 15 if you're here if you're
105:51 - watching you have a comment or question
105:53 - I'm going to shut the stream off in
105:54 - about 30 seconds but I will stay if
105:56 - somebody has a question Community
105:58 - Spotlight of cool things people make
106:00 - with P5 that's a great suggestion I kind
106:02 - of it's funny I don't really think to do
106:05 - videos like that um hey I'd have to
106:07 - prepare for that I just kind of wing
106:09 - these but I think that's a great idea
106:12 - and I I um I'll try to keep that in sort
106:15 - of back of my mind on list or um I do um
106:18 - I I do have a list somewhere that I keep
106:19 - track of all the videos I'm intending to
106:21 - make thank you for that suggestion
106:23 - uh so I'm going here to this I'm going
106:27 - to click this stop streaming soon oh
106:30 - I've uh it's only 53 minutes somehow I
106:34 - feel like I've been streaming for much
106:35 - longer than that but who knows uh I'll
106:38 - wait a little bit longer again thanks
106:40 - helpful I'm glad you thank you I'm glad
106:42 - you're finding this helpful uh and so
106:45 - okay I'm going to stop streaming uh you
106:48 - can send me a tweet at
106:50 - shiffman email is out of control but
106:52 - you're welcome to email tell me I'll try
106:53 - to answer and I I will be back if you
106:56 - follow me on Twitter that's where I post
106:58 - the links of these streams I might if I
107:00 - can like stomach it because I have till
107:02 - 4:30 before I have to go I might just
107:04 - take a 10-minute break and try to knock
107:06 - out a couple more it would be a new
107:07 - streaming URL though so you have to uh
107:09 - check for me to post that so I might do
107:11 - that but I I might just have to wait
107:12 - till tomorrow or Monday okay goodbye
107:14 - everyone and uh please uh stay tuned for
107:19 - few for for for the future goodbye up

Cleaned transcript:

hello I think I have begun streaming live uh today I don't have a second computer so the computer that I'm looking at the one that's on the green screen behind me is actually my view of the live stream and I'm uh here to make some videos about arrays and objects in JavaScript using the p5js framework I also thought processing three came out yesterday and so if anyone's actually watching in real time and wants ask some questions about that um uh you're welcome to I would just sit here and talk all about the new features of processing 3 but I already made an entire video about that which I will try to remember to put in the description um and now I have myself from a few minutes ago in some sort of like strange alternate Wormhole Universe uh if you're watching and could tell me if the audio uh is reasonable and now a second like the third version of myself was going to start oh no uh if you're watching and could tell if the audio sounds good that would be great I'm also going to move over here uh and if you could tell me that you can read this does that look reasonably focused and legible I think that it does because I can see on my kind of preview screen over there that it looks good I should try to find an eraser oh I don't have an eraser I'm missing my Eraser shoot that's going to be a problem didn't prepare for that uh oh I found it excellent okay now I'm going to come over here and erase this okay so let me check back over here is anybody watching sure audio is clear it is thank you very much uh I will check the chat uh periodically but uh first I will start by just kind of talking through the videos I'm going to make so this is a live stream that maybe one or two people are actually watching but you know someone might watch the recorded version um and what I'm going to do during this live stream is every once in a while hit a button and actually record a video that will then get saved as its own chunk and upload it to YouTube later so I'm planning to make six videos and I have two hours uh which I think if each video were 10 to 15 minutes seems kind of reasonable although I might sort of run out of steam and get tired I um so I would like to make a video that's just talking about what an array is in general the syntax of an array I'm going to make a video about oh wow how to make an AR so I'll start with just like an array of numbers and an array of strings I think that'll be good to start with then I'll look at making an array of objects with just kind of like a literal object in the array um and then a Constructor function to make to generate objects the idea of building up to this example here where we have some bouncing ball objects uh so that's kind of the plan then if I have some time I'd really like to look at push splice how to add and remove things from an array that's really useful uh and you know what how to deal with if you click on something how to get that message to the object and if objects are moving around the screen how to like have them kind of communicate their distance from each other so I don't know the five and six I I wouldn't be surprised if I didn't get to but those are kind of on my list in general so if you have any feedback about this please put it in the chat or if you're watching the video later you can put it in the comments and I'm going to drink some water this is my shtick my magic invisible water what's absurd about is I sit here and watch myself doing this this I don't know this is what I do with my life um and oh let me restart this refresh and I'm going to check that I wish I had my second laptop in here because I could just have the chat open but no one's there there are five people watching five that's very exciting for me um and that's about it so I think I'm going to get started with the array video unless anyone has any oh oh oh yeah any questions about processing 3 throw them in the chat um and I will I'm going to check the chat in between each chunk of video that I record okay so here I we go so I got to minimize this uh and you know say hi in the chat if you're here it's useful to and uh I am going to I don't not have the list up although you know maybe I'll include this in the first video why not why not although H I don't know that I need this uh and then I need the editor I get the editor open in a second okay okay um here we go I'm going to start over here got to get this mouse going hello uh I'm back for a new section I can start over hello I'm back for a new section of videos all about arrays now lest you think it's really only all about arrays this is actually also about objects because objects are now so fundamental and H I'm going to start this over where did I last leave off I think I put a function in an object so we'll get back and I'll come back to that okay that's fine this is just going to be about an array hello I am back this is going to be a problem for me boy and let me fix this cable here that I'm going to trip on oh look at that what did I do if I go like this did I make the screen do something weird I don't know it's fine green screen thing hello I back and I'm ready to start another little little series of videos inside a larger series of videos and the topic here is arrays an array in JavaScript what is an array why do you want to use one what's the Syntax for an array what kind of things can you do with an array and ultimately I have a goal with this so if you remember recently in a previous video it's actually a couple weeks ago when I recorded it but who knows how you're watching these I recorded a video where we looked at making an object an object as this collection of properties this thing that maybe has an X and A Y and a color and a size and then this idea that you could put a function inside the object so that thing that has a bunch of properties could also you could issue commands to it like move or Draw yourself or change color and so if you can get one object like this object which I'm now telling it to move and bounce and display itself as a circle if I could take that single object how could I easily duplicate that object every time time I say click the mouse click click click click click the idea here and I have this list of videos that I'd like to make all the way up to number four which will really go through all the pieces of this so how does an array even work to have a list of these objects how do you um how do you then have the object in the array how do you deal with making multiple copies of that object in the array how do you deal with adding the object to the array one at a time these are all the pieces that I would like to get to and then I have a few other topics like clicking how to like how to interact with an object by clicking or moving the mouse or how to have two objects interact with each other so this is the full scope of the videos I'd like to make there are six of them I'm hoping they'll each be about 10 minutes and I'm going to get right started right now with the first one what is an array so let's move this out of here and I'm going to come over here to my trusty whiteboard it's very friendly to me it it talks to me because nobody I'm talking I talk to a whiteboard now that's what I do camera I used to talk to the camera now I talk to the Whiteboard okay so what is an array why do you want to use use one well let's let's dial ourselves back to a happy warm and comfortable place I could say something like VAR num equals 5 and it's very tall high on this whiteboard but I think you can read it this is comfortable I have a variable the name I made up for it is numb and its value is five so if I wanted to have a second one I could add a second variable but here's another way I could have a second number that I'm storing VAR nums equals Square braet 5 comma 3 n sare braet semicolon so an array is a list of values in separated by commas embedded inside of open and closed square brackets this is not that dissimilar strangely enough to this idea we have an object which is a collection of name value pairs right inside curly brackets so both of these are collections lists in a way lists of name value pairs lists of just values and that distinction I think will become more and more clear even though it seems like a little confusing right now why I use one or the other as I as I start to show you more and more uses of them in different examples let's see what that distinction is I'm going to but the key distinction right now that's super important is that the order of this list the order of the array is what matters elements in Array have an index they're the first element they're the third element they're the last element they're the element in the middle that ability to have the elements in an order is the sort of crucial key aspect of an array so for example this is element well it looks like it's the first element right because it's the first thing in the array and that's the second thing but in programming often it's the the the the you you have to start counting I'm like stuttering here because I'm afraid to tell you this news but you have to start counting from zero and actually it's a wonderful thing to count from zero everyone in lots of s we should all just count from zero it's it it brings Joy to the world but uh it also brings a little bit of confusion so this is index zero and this is index number one it's kind of not that great of an example let's make a bigger array 50 71 12 you I could put a negative number in there 22 right this element now has how many this array sorry has how many elements four elements what are its index values 0 1 2 three so this is important an array might have four elements in it but the index values go from 0 to three so the total number of elements might be four 10 20 100 if there's 100 elements the index values go from 0 to 99 let's practice that so right I have an array with 10 things in it 0 1 2 3 4 5 6 7 8 N9 if you count from zero you end with nine you've got 10 things total seems silly to keep saying that but it's something that you s you repeat to yourself to get used to this idea of counting from zero with an array so this is the syntax now let's go and put this syntax into an actual P5 example and see what we might do with that okay I'm back over here now and I've I'm at like five minutes that's good I I let's see let's see how far I can get so uh ignore this example I'm making a new project I'm going to uh move it over here and I'm going to save it as uh arrays one okay so at the top I'm going to say VAR nums equals uh 125 12 72 so there are four values in my array up there and I'm going to make a canvas that's 4400 and just for comparison sake I'm going to add a regular variable now that has the number 23 in it and something that I might do with a regular variable is just say ellipse at 100 um 200 100 and I might use that variable for its size so you can see here I have now have this variable with the value 23 that variable is being used for the width and height of the ellipse and that ellipse is drawn there with a width and height of 23 pixels so the next job that I would like to do here is how do I get one of the numbers from the array and use one of the numbers from the array in something like the size of an ellipse the location of ellipse the color of an ellipse how do I pull values out of an array so so that comes back over here to the in indices indices the index values so if for example this is the array VAR nums equals this if in my code I ever say nums I'm then I'm referring to the entire array but it's not that often that you refer to the array as a whole more likely you'd refer to the individual elements of the array one at a time so the way to do that is again with square brackets so if I say nums index 2 that means I'm referring to this value 12 and this evaluates to the number 12 just like num evaluates to the number five so again this is a list of variables each one of these you refer to the array name and its index okay now back over here we can now do that so I can say let's draw a second ellipse a little bit over and let's draw it at nums index 2 nums index 2 now which one is index two it's not the second one in the list it's 012 it's 12 let's make it a little bigger let's make that one uh 46 that's a nice number it's an age I will be someday someday kind of soon not that soon but soon whatever it doesn't matter okay so you can see this now I have a second circle with a width and height of 46 pixels as opposed to the first circle with a width and height of 23 wonderful wonderful wonderful wonderful okay uh ah ah I forgot a whole video which is um I've got to look at how to do this with a for Loop but that'll be the next video so this is one example um and I think uh I'm going to make another example right now then we'll come back to this one in the next video so one of the things to realize here that I think is exciting and interesting about arrays is that this number does not have to be the index value that I'm using into the array it doesn't have to be a hardcoded value it could be a dynamic value something that's picked randomly or through some algorithm so let's take a look at that and I'm going to say I'm going to save this as uh arrays two and I'm going to change this to uh words and I'm going to make some words like rainbow and heart and um what are some other nice words uh purple I like and um uh friendship and uh this is this is all I can think of so I have an array so in first of all the the thing that I'm emphasizing here is you can put anything into an array you can put strings uh text into an array numbers into an array objects into an array that's what I'm getting at soon enough so what what what might I do with this array well I might say all right uh Phill 255 use the P5 text function I want to draw some text onto the screen and I'm going to say draw like for instance example if I just say draw Rainbow onto the screen at you know 22 and maybe I make it a little bit bigger so we see it 32 pixels the font size uh you can see oops I don't know where I put that 200 pixels over I meant to put it like 12 pixels over and 200 pixels down you can see there's the word rainbow appearing in the sketch wonderful so oh look at this I made a blue Mass there whoa magic um so uh the I I did I just hardcoded rainbow here now I want to pull something from the array so what I want to say is aha what I want is words index zero I want that first index into the array there we go I have rainbow now if I change this to two I see the word purple so the point that I'm making is this number could be a variable what if I say VAR index equals zero and put index Here and Now what if I say function Mouse pressed index equals index + one so camera just went off so hopefully this one's not going to go off in a second but so right so what happening now the value of index is zero so I'm seeing words index zero I'm seeing rainbow but as soon as I click the mouse index will become one and I should see heart and then I should see purple and then I should see friendship and then I should see oh an error message message right so this is a key thing no one's going to save you if you try to access an element into an array that doesn't exist if I say words index 27 it doesn't exist it's null or undefined or some sort of JavaScript thing that doesn't exist yet and you won't be able to draw that onto the screen and you'll get an error so it's up to you to build logic into your code to protect yourself for example I could say hey you know what if index equals 4 maybe I should reset index back to zero so as I'm uh and it's not four right oh yes it is four right because zero exists one exists two exists zero exists one exists two exists three exists but not four so now if I run that you'll see it Cycles back to zero every time I get to four but what if I go up here and add uh you know um love into this array so I don't ever see love because I stopped myself at four and now there are actually five elements in the array so how do I deal with that problem well one way to deal with that problem would be to just change this number four to the number five but an interesting thing that will come up again and again is that arrays also store properties about themselves so in addition to be able to access individual elements of the array we can access other information about the array itself such as the current length of the array so that the length actually can change as the program is running uh for example what if we got user input and started filling that array with words from the user so one thing I can do here is actually dynamically check if the index equals the length of the array right remember we're going up by one so if there's four the valid indices are 0 1 2 and three but the in 0 1 2 and three but the invalid index is four there are four elements but 0 through three are the right index values I have to repeat this to myself because you know it hurts it hurts a little bit to to have this little minor point of confusion okay so let's test this and see if this works one two so what I might suggest to you is do the same thing make a list of words what if you have them picked randomly each time uh you run the sketch or each time you click the mouse uh try to use an array of colors could you pick a random color for a bunch of different shapes you're drawing on the screen so what's a kind of list of information that you might use for an element that you're drawing and what's a way that you might pick from that list either one at a time or randomly or two at a time come up with a little exercise for yourself and in the next video what I will show you is how to March through every element in the list how would you display all of the words how would you use all of the values for the sizes of the ellipse okay so this marks the end of this first video about arrays and there will be more like the next one I'll record in just a minute okay uh stop okay so that's the end of that video let me check the live stream see if anybody has has any questions uh you're watching loud and clear audio is clear uh I'm a vampire I look exactly the same in the videos recorded years ago it is true but I'm a very nice vampire I don't bite uh but I do apparently live in this like Wormhole time Universe where I could clone myself over and over again uh anybody have any questions about arrays or what I recorded or any comments or feedback say them now before I go to the next one I'm going to come over here I'm going to erase this you know it's funny I oops this this camera is off so you can't see me um I used to actually be um a vampire in this room because I had this like horrible curtain covered that covered the shade because I thought oh I have lights in here it needs to be consistent lighting for the green schi this like cave with no sunlight all day long it was horrible so now I have light coming in and you know what the light works with the cameras too because daylight is good okay I'm going to check the chat again real quick uh loud and clear feedback loop okay so I'm going to go on and do the next video which is about uh whoa which is about a for Loop uh I have to put this away because it's freaking me out which is about uh oh whoops I know I was just going to see how we're doing which is about uh using an array with a for Loop okay but before I record it let me start with uh just putting something here come back over here okay okay great and I'm going to come over here and I want to go back to uh arrays one uh and close this one uh BR give myself some more room here uh I will check the chat again real quickly just to see if there's any comments there's never any comments I don't know why I keep checking it uh and then I'm about ready to do the next video which I will drink a little water and wipe my mouth and then I will sing vocalize see see this this moment where I think cuz I'm not really recording the video that this is not no one's no one's really watching but this is getting archived but no one will ever be watching this okay uh okay so this is the second in a series of videos about arrays and what I would like to look at in this video oh yes I'm in the right place is this particular piece of code and augmenting it a little bit so let's look at this for a second and I've got this sketch here that's drawing two circles so before I was demonstrating here's a single variable I can just use that single variable directly and draw a circle with that the value of that variable is the width or I can access an individual element in the array via its index 012 so this ellipse has a diameter of 46 pixels so what I would like to do is I'm going to get rid of this which was just for showing the difference between a variable and array and what I'm going to do is say okay well let's actually draw all these ellipses all use all the values in the array so I'm going to start at 100 and use whoops excuse me the zero element then I'll go to 200 and use the index one element then I'll go to 300 use index two you know a little bit of copy pasting and we can see here 200 300 400 I should probably make the canvas 500 pixels wide and run this and look at that wonderful I have four ellipses each with a diameter using a value from the array the first value is 100 the second one's 25 the second one's four third 46 and the fourth one's 72 and those ellipses look like they're right so you can see here that I can use every element of the array and repeat the same thing over and over and over again with the elements of the array and with a little copy pasting it works just fine and everybody's happy you do a little dance like the little like my code work dance and uh there you go but there's a problem here this works with four but if you had 400 you won't be happy dancing you'll be copy and pasting you'll have carpal tunnel syndrome and things will be very uncomfortable in your life however there is a solution to this problem and you might remember it from you might remember me from a previous video the for Loop video so we could use a loop right a loop is a method for counting and repeating a task and you can see here that this line of code is repeated D it's really the same line of code every time the only things are different are the X location and the index into the array so let's for let's come over here uh and uh let's look at what let's remind ourselves whoever we are let's I'm going to remind myself and maybe you're watching what a four Loop is so I could write four and then I could say VAR I equal 0 I could say I is less than 4 I ++ now I should mention there's no actual requirement that you use the variable named I it's just sort of a convention you could say j or n or cat or apple it doesn't matter this is a variable name that you're making up and the way a for Loop works that camera went off I can fix that the way the four Loop works is if you start with zero then you check to see if zero is less than four you execute a task go up by one check to see if it's still less than four execute a task go up by one check to see if it's still less than four execute a task go up by one check to see if it's less than four you know by the way if it's not less than four you're done and stop executing that task so if I were to say something like print lni right here I would start at zero I is less than four so I would see Zero printed out you know if this is the console I would see Zero appear in the console then I would go up by one I would be one one is less than four it would get printed out I would go up by one two is less than four then it would go up by one three is less than four then it would go up by one four aha four is not less than four the loop would exit so this is the result that I see this line of code executes four times first with the value zero then with the value one then with a value two then with a value three in I look at o look at this over here I'm coming back to you uh over here this line of code executes four times first with the value zero then with the value one then with a value two then with the value three right exactly what we did here so there's no reason why I couldn't instead say four VAR I equals 0 I is less than 4 I ++ and then take this line of code and say I and I remember the index into an array can be a variable so let me comment this out and you can see I'm making the case to you that this is 100% except for one thing that I forgot which we'll fix in a second equivalent to this this I wrote each line of code out manually manually typing in the index 01 2 3 here this line of code is being repeated four times times and the index is dynamic it's zero it's one it's two it's three so I should see four ellipses in the window just like we had before right I see kind of like a couple and I don't really know what's going on there H let's let me add something here let me say stroke 255 and no fill let's try to look at what's going on okay so this really did work wow I really sized those in such a like lovely way but there are four circles there and there there one is 100 pixels wide one is 25 pixel wide 1 is 46 1 is 72 the issue is uh they're all in the same location so here notice how X changed 100 200 300 400 but X doesn't change here it's 100 for each one how do we deal with that well interestingly enough if I come back over here these values I had 0 1 2 3 what if I were to multiply each one of these values by 100 what would I get and let me give myself a little more space here and get rid of this I would get 0 * 100 is 0 1 * 100 is say it with me even though you're we're not together but just do it equals 100 uh 200 300 so that's close 0 100 200 300 what did I have 100 200 300 400 h ah I know let's add 100 to each of these if I add 100 to each of these that means I have 100 200 200 300 400 so by multiplying by one by taking that index value multiplying it by 100 adding 100 I have the values that I want so I even though I'm using it to count through the indices of an array it's just this like counting number I can use it for for good for other purposes so here we go I could say instead of drawing them at 100 I could say I * 100+ 100 and now if we run this you know I kind of want to have them have a little more weight to them I'll make them kind of grayish inside you can see there are my five circles this worked this is a way of using an array uh to have many elements but applying the same action to all of those elements and if you remembered this is kind of where I began if these things were objects not single numbers and I had a thousand of them I could just say display all of them move all of them run all of them and that's the topic that I will explore in the next video for now I might say just make that array of strings perhaps see if you can display like five different words in some pattern on the screen you have make a color palette right you have six colors and all the things you're drawing you always pick a random color for a b or for a bunch of those things actually that's what I said before Loop through and draw ah I know make another array with colors for each one of these and use the color for it although I you know in that sense I almost would rather use an object for that but you get the idea like make a little riff off of this to as an exercise but really I think the goal that you might have in your mind is as you start to have multiple parameters for things you're drawing on the screen maybe those should be inside objects because objects is a collection of properties okay that's the end of this video which is8 minutes long which is I feel like is a victory in some way okay thanks very much okay that's the end of that one let me come back to the chat and figure out what I'm doing uh yeah I'm happy to take yeah I have stereo sound uh so uh I'm reading the comments now you're doing great thank you good vocal exercises uh an intro for to J JavaScript for experience Java coders yes um I would love to do that I feel like that's a whole video topic um I'm trying to see I should write that down um I have a little area here where I make notes about videos that I could make so I'm just going to say that so Javas script for Java you know um yeah so I think it could be useful to have like one quick like hey you're a processing user how do you do JavaScript or vice versa actually because in a way a lot of people are starting now with JavaScript and and might want to do like faster full screen uh kind of more intensive Graphics applications which processing the new version of processing 3 is really well suited for so moving back and forth between those two I think would be useful um and yes you can ask something about processing libraries I'm only checking the chat in between making these videos so if you put the question out there I'll check it and answer it you have to wait till my ramblings end at 10 minutes but I should do some of these live streams where I only take questions but I haven't really gotten an audience asking a lot of questions yet maybe I need to schedule this better or something like that but um but yeah put the question here so let me go back to my notes for a second to see where I am uh so I did uh so I did what is an array and actually I forgot I had another video here which is like array with a for Loop and now I can do an array of objects uh next so that's going to be the next topic so what I need to do is go back to oops what I need to do is go find the example that I started with uh which is somewhere oops did I lose P5 yep um where am I at 230 this is good oh I better turn I'm going to turn the air up it gets very hot in here with these lights and if I turn the air up right now while in between shooting does that how bad is the audio when the air conditioning is on I'd be curious for one of you to tell me um I'm wasting energy here I'm not doing a good job of being my sustainability man uh okay so let me open objects bubble I think this is the sketch that I started making with a single object right bubble. move bubble. display playay yep that's it so this I think will work in terms of duplicating it so I'm going to do something in this video which I'm not so sure about which I'm going to demonstrate putting the object into an array using object literals and then I will move to a Constructor function which is probably and I'm going to do some things that are perhaps not considered quote unquote proper JavaScript syntax but I like to do things that look nice and feel easy and accessible and friendly and you can always worry about that proper JavaScript syntax if somebody's paying you to bre code that way you're just learning make it work enjoy it not have it be too horrible okay so I think this will get me started however I also want to open up the this one objects click with mouse I think we need to REM I need to do a little quick reminder of this one and let me check the chat one more time time uh yeah could that's good um so the question about is there a process for keeping p5js and processing apis in sync that is a great question so a lot of the same people are working on both projects and there is definitely a lot of communication between the two projects but I think something that's really important here is there is not this desire to keep them perfectly in sync P they're they're p5js is not a port of processing it's a new project building on the philosophies and ideals behind processing so if something works differently on the web and makes sense because the web and JavaScript in the browser is a different context the syntax will just be different so knowledgewise this is something that I think through documentation and Community can be what are those differences why do those differences exist that's an important topic but um that you know there is not a process for like keeping them in sync on purpose but there should be a lot of communication and documentation around why those differences exist uh okay that was my answer to that like I like talk randomly and then I go into my Like official talking mode um answering question okay I'm drink a little water this is good I think if I can get through I have I also have like a coffee drink and um I I am going to minimize this repetitive screen and get ready to do and I think it's a little bit too much in here let me see if I can make this code a little bit simpler for right now uh and okay so yeah okay um okay I think I'm I'm ready sry I'm like thinking and pausing uh the stream has been going for 50 minutes I made two videos one 15 one about 12 one about 8 that's pretty good okay I got to get started here so I'm going to turn I'm going to just come over here for a second uh I think I probably should erase this I think yeah yeah okay let's erase this and uh come back over here I need the pen and turn the AC back down to low and get ready to record feel like I have to burp I mute the microphone for a second it'll just come out in the middle of the video it's fine it's like an air bubble floating through me okay here we go okay so now I've made two videos one just about what is an array and the syntax of an array and the other video looking at how to use a loop to iterate over every element in that array and in this video I want to unlock this great power to you which is how to take an object and duplicate that object many times into an array so first this is this again just to revisit this is what I'm talking about how would you make an example like this happen and you know each one of these objects it needs to have a position on the screen it needs an XY it needs to have a speed like how fast is it moving along the y axis it needs to have some functionality like move along the y axis like check if it hit the bottom so each one of these needs its own set of properties and its own set of functionality and that's what I covered in a previous video how to put a function into an object and so we have an example of that here right this is a bubble object and let me just actually take a moment to review over here just that syntax so if I have an object like VAR bubble an object is a collection of name value pairs an object has properties each property has a name then there is a colon then there is the value and typically we think of these or you think I think of these as uh what do I think of them as just as like numbers right it has an X and its number is 100 and it has a y and its number is 50 but in addition to having these properties just be like simple variables with values an object can have a the name of can be a function like the name can be something like display sorry and the value can be a function just tripping over my words here right so in this is what makes objects really powerful it's not just a collection of numbers or data or strings or colors it's also the ability to use those properties in and execute some code with those properties so for example if I want to have a display property I might might want that to be a function now it's important to us this function is not being executed this is just the definition of the bubble object and the display function is a function that could be executed later and if that function were to be executed it would draw an ellipse at and this is the tricky thing your instinct might be to write bubble dox right because the way that you access properties of an object is by the name of the object dot the name of the property and then you get the value back but here because I'm inside the object there's a special JavaScript keyword that you can use to refer to the name of the object the specific object this object what I want to do is refer to right here this particular object guess what the key word is this might think of it as me I am the bubble my ex that type of thing so this X and this Y and this is probably one of the things in my I mean for me I just forget to type that all the time and sometimes things don't work I an error message so it's really important that you remember to type that so this is the syntax we're starting with and if you see over here it's basically exactly the same syntax I happen to have a bit more sophistication here I have both a display function and a move function and then if I come down here you can see aha in draw the bubble moves the bubble is displayed so I don't have any of this code anymore just in the wind like I don't have variables lying around and I don't have you know lots of code and draw if made this mini program this bubble and now I've gotten and draw so that was a quick little couple Minute review of objects and syntax but the point of this is not just to be happy about this object I want to make more than one so obvious certainly a strategy to make more than one would be copy paste this whole thing but this is not good strategy and I could change the number and change some things this is not going to sustain you for very long although it's not the worst thing to practice with when you're first getting started make a couple objects instead what I want to do is I want to say VAR bubbles equals bracket bracket I want to have an array of Bubbles and I want to put objects in those bubbles so now one thing I didn't actually mention in my previous video is normally not normally but in the previous example I said make an array and put these numbers in it or put this text in it this is actually an empty array so I'm starting the array as empty one the interesting things about JavaScript is if the array is empty and you just assign something to the first spot and then assign thing to the second spot and then assign thing to the third spot JavaScript will just like I I'm going to figure out what you're doing and I'll just make the array the right size for what you're putting in it so I could quickly do something like this bring this object definition into setup and say bubbles index zero equals that object so now oh my God the blue the scary The Blob is back I got to fix that my green screen settings this blob takes over once in a while and tries to eat me and I don't want it to because I want to make more videos I I guess I do I mean I don't know if I should but um so uh ah so what was I saying yes index zero so I've put an object into the first spot in the array the array now has a bubble object in it and actually I could say print line bubbles just to take a look at it and you can see oops uh I I forgot that I have this extra code in here I'll let I'll comment out for a second print line Bubbles and you can see there it is there's the array it's got one object in it now I'm G to Just note a weird little Nuance to JavaScript you know what if I decid to like I'm going to put this in the fourth spot index 3 0 one2 3 you know I haven't put anything the first spot or the second spot or the third spot what what's going to happen so if I do that you'll notice that JavaScript it just wants to do just wants to like figure out what you mean and what what are you trying to do let me try to guess something and strangely enough it made an array with four elements in it but the first three are null so JavaScript has a lot of flexibility and how you assign things into an array I can't think of a good reason why you would do this you're sort of asking for trouble and you're going to run to errors later when you try to access a value that has null hi hi blue blob but um but it's important to realize that JavaScript is very flexible about how you put things into an array so let's go back to putting it in the zero spot and then what do I need to do well down here what I want to do is not I don't have an individual variable named bubble anymore get a little closer closer in here what I want to do is say ah move the zero element of the array move the display the zero element of the array so now I just want to refer to the array and the specific object in the array good so let's run this and you can see we have exactly what we had before this single object moving around the screen so I haven't used the power of objects in arrays yet I've just taken that single object and put it in the first spot in an array and I can make a little bit of an improvement down here to draw even though the only one thing in the array you know maybe it would be good for future use later to have a little Loop where I just check the and I Loop through the length of the array right and this picks up from the previous video the previous video I Loop through every number to set um I Loop through every number in an array to set the width of an ellipse here right and now I'm going to do is say no matter how many bubbles are in this array go from zero to the length of the array up by one each time use that value as the index move and display all the bubble objects so this it doesn't matter if there's five or 10 or two this Loop will always apply this logic move or display to every object in the array and there we go there's only one I only put one object in the array so how do I put the second object in the array okay well I could copy paste this and say bubbles index one but there's got to be a better way right what I can do do instead is why not put a loop around this I don't know how many times should I Loop four times and then right what I can do is what I can do is now as I'm looping 0 1 2 3 I'm going to put an object in the zero spot put an object in the one spot so this same code that made that individual object I can reuse that multiple times one time two time so now the array by the way if I say print line bubbles here you can see look at that there are four objects in the array and they're all all four hopefully they won't get eaten by the blue Mass there are all four moving around the screen I don't know I could make 400 of them that's a lot of bubbles look at that they're all kind of starting in the center what could I do differently well one thing I can do is give them a random starting value between zero and the width and I could give them a random starting value y value between zero and height so one thing that you can also noce in addition to having functions as Properties or values as properties you can execute code that evaluates to a value it's it's a little bit weird because like this has code in it and that has code in it the difference is random is being executed right now and evaluating to a number that's being assigned to X here this code is not being executed right now it's being defined as something in a function that could be executed later when is it executed it's executed down here when I Loop through all the elements of the array so if I run this you can see there's my 400 Bubbles and we can see this down here is like this was this is what actually is in that array so I'm going to take that print out it's not particularly useful to look at it in the console there anymore but you can see I could I could I could just go crazy now and I could make 4,000 of them you see now one thing is important to realize is there's a limit to how much you can draw in P5 and how like fast it's going to run so the sketch is now running very slowly because it's trying to draw 4,000 circles every frame but what's amazing about this is I haven't changed anything in the code but this number this is the only number that controls how many objects are on the screen so why changing this is the this is the amazing power of the reusab modularity and reusability of objects so this program is modular in that there is this object that has these parts its properties its functions I know which part to edit when I want to change how it looks or change how it moves and it's usable this single block of code is being used four times or 400 times to make many objects and all I need to do down here is Loop through all the objects and say apply the same command to all of them move all of them display all of them now you notice that the um editor here the P5 editor has this little like yellow highlighted line number it's a little bit I'm afraid to look at it I'm going to I'm going to look at it let's do this together oh it says don't make functions within a loop so so I've upset the editor I'm I'm very sorry but it's it's like complaining that my the style of my JavaScript isn't proper style the truth of the matter is maybe this is a bad idea for reason but at the same time it works this is a great way to practice but the the thing is here this maybe could be improved in the sense that I setup code like has all this code in it and this bubble is very simple what if this bubble got more and more complex so in the next video what I want to do is look at a technique for taking the way this object is made and taking it out of here and putting it in something called a Constructor function here I'm just literally making the bubble object but what if I had this other function whose job it was to make bubble objects for me and I could just call that function anywhere from in the code and I would just I would be able to just say make a new bubble and set up and again life is just about making your code shorter it's really not about that life is about like people and relationships and that code doesn't really matter but you know it's I you know I guess you can use it for something I'm using it for something talking to a camera about it okay so uh I have I just make the same lame joke in every video You're tolerating it this video is now over I'm I should be cut off okay so that's what I want to do in the next video I want to look at how can we work with this thing called a Constructor function which is perhaps a bit more uh typical what you'll see in a lot of the examples on the P5 website if you look at uh other types of examples of making objects with JavaScript you might see this style in other places as well okay so uh if you watch the end of this video I thank you and uh I will see you in the next one or or or I mean I'll see myself in the next one I guess okay okay so that's the end of that video oh my God I got I've done three so far in less than an hour which I think is pretty good um let's see if I have any comments oh nobody has it's dir I'm my audience is growing to 13 people it's amazing okay so if you have any questions or any feedback if something doesn't sound right I'm going to turn that air on a little bit higher um and interfere with the audio a little bit but this is in between my recording please let me know and I'm going to uh I'm going to um look at the Constructor function in the next video and I'm going to cycle the cameras so they don't shut off so this basically if I don't know if you're if if you're an ITP student you happen to be taking ICM that's how far I kind of got in class this week and now I want to try kind of going a step further and looking at the Constructor function so I have to think about this uh okay so first of all let me erase this uh oh I'm not over here anybody have any this camera is off anybody have any feedback any comments any questions I will take them now I will check the chat in a minute going to look I'm over here looking at the chat still nothing um so I think I'm ready for the next video let me check see how I'm doing with terms of my notes uh oh oh no that's okay uh let me see how I'm doing in terms of my notes uh where am I so I'm on video number four Constructor function to make objects which involves passing parameters it should probably include something I probably should do it first without passing parameters then by passing parameters I think I you know might have to kind of like gloss over the like all of the details of this because I feel like want to try to do this in a succinct and simple way then I can get to push so I'm going to remake this exact example but with the Constructor function and then I'll do another video where ah that'll be the passing the parameters perfect where I have to initialize I got it perfect so two videos one remaking this exact example with the Constructor function and another one where you add the objects one at a time by clicking the mouse and um add the objects one at a time by clicking the mouse and you have to pass Mouse X Mouse Y in order to generate the object so I get some parameter passing there right that's good okay now check for any last feedback you know that's are you limiting your videos to 10 minutes for YouTube I'm not really I don't know why I'm limiting my videos to 10 minutes I feel like if it's too long it's I'm doing something wrong as I'm I feel like it would be better for the e e e e e e e e e e e e e e e e e e e e e e e e microphone battery died oh that's so sad Mike battery died going to replace it very sad lost that whole video that is oh wait oh it came came back briefly I guess the battery like it died but it's like not totally dead so I turned it back on how far in that video could you hear the sound just like a couple minutes shoot going to have to do that whole one again which is fine it's not like I okay sound is back if anyone's listening how far did I get in that video just before okay no no I know it's just before I started recording okay I'm just going to look at the video you guys will I'm gonna uh I think you I don't know if you can't see what I'm doing now but I am this last one I'm looking at where it has sound let's see if I can uh hold on a sec yeah there's no sound in this video at all I I guess I'm going to rerecord the whole thing over again it sucks okay it's you know what it was it probably doesn't hurt cuz I that was I'll think of that as a rehearsal I then I was feeling so good that I got it it yeah cut out between videos oh that's that was nice of guy that yeah that's the that's the problem with the way that I'm doing this and not really looking at the chat but I really appreciate that you guys um tried to warn me and let me just I replace the battery in one this one has two bars so I think it's going to be fine for a while longer um let me regroup here I'm going to turn on some air cuz it's getting very hot in here it's really too bad cuz that was actually the one topic that that uh and I will uh um I'm going to regroup here it's it was this was so perfect but it's okay it's okay I can do this again that was 12 minutes out of my life that I can repeat no problem audio is still working the thing is like I should really be able to see this because I have a preview monitor and it's showing the audio levels so I often like look and check but I just didn't check uh okay so let me get back to where I was and I have to you know what what the funny thing is I not so funny but I I forgot to save these as separate examples anyway so I'm going to undoing a bit here to get back to the beginning I should have saved this as a previous version uh oh it's not H there we go that's what I had before and I want to save this as uh uh uh bubble array and I'm going to save it as uh bubble array Constructor function okay well at least now I saved my code and I'm checking here drink a little bit of water I'm going to do this again in just like one minute you guys are patient I have like a rock in my shoe just going to fix that it's uncomfortable here I am this was in my shoe put it over here I don't know where that came from now my shoelace is stuck this is like this is riveting live streaming on YouTube I'm sure man in his office by himself takes rock out of Sho I think this is performance art perhaps uh and okay so I'm about to rerecord the video about the Constructor function they're actually some parts in the video that I got confused that I think I could probably improve on anyway so I'll try to look at this as like the blessing and disguise thing and I'm goingon to I'm G to minimize the chat I can see the audio everybody can hear me now right okay and uh I wonder how long the delay is before I say something and you see it I think it's probably about 30 seconds let me see I'm going to clap one two 3 four five 6 7 8 9 10 11 12 13 14 yeah 14 15 seconds I don't know if I was counting seconds accurately I could have looked at like a clock or something okay sound is good thank you guys uh here we go um minimize this uh nose I look picking my nose wiping my nose okay turn the air back down and coming over here here drink a little more water okay here we go I have to collect my thoughts for a second so what I'm doing now is the last thing we did is we made the object in the array the literal object and now I want to talk about why you would use a construction function what the Syntax for the Constructor function is and change the code got it okay che check the chat one more time che che che che the chat don't want that to happen again okay nothing is there excellent here we go okay this is an exciting moment I'm about to make a video about something that I have not ever made a video about before and that is the Constructor function in JavaScript so what is the Constructor function what is a Constructor function what is the Syntax for it why do you want to use it how does it have to do with objects how does it relate to anything we've been looking at so far and so uh let's let me review where I kind of ended off off that last video so in this last video here oh look at this hold on sorry why is the warning gone it's funny how that warning is now gone I'm GNA have to start this video over which is fine it's funny how that warning was there before um okay I don't care sorry here I go I'm starting again okay so I'm making a video a new a new video about a topic that I I don't need to say that I just said that before but it's silly this video is about the Constructor function in JavaScript now this is a tricky and confusing topic it relates to how you generate objects and it's a different style than what I showed you in the previous video with a literal object being made into an array and in fact it's probably you I hate to use this term a slightly better style it's a more flexible style it will afford you some possibilities uh and get past some limitations that are here so let's first talk about why do we need this other step before we even talk about what that other step is the Constructor function so there's a couple reasons so this example first of all it has an array an empty array in setup it puts four objects into the array there are those objects and then in draw it calls functions on those objects display the objects move the objects so where does this break down there's a couple ways this break down number one is it's a lot of code here in setup this is a simple object it just has an x a y and two functions but you could imagine you could have an object with 10 properties 15 properties five functions six functions you don't really want like all this code inside of this Loop and setup it's sort of hard to manage and keep track of so number one it be nice if we could move this somewhere else kind of if you're thinking like I know I could move it into another function that's basically what we're going to do we're going to move it into a special kind of function called a Constructor function the other reason why you might need a Constructor function is you might want to make new objects in different places in your code so you might want to start this program with four objects and then every time you click the mouse you get a new object and so you need the literal object in setup when you make four and then you also need that in Mouse press when you make another one so you suddenly this code that I the whole point of it was to not have to write it again because it's inside a loop what if you need to do it later or somewhere else in the code if you have the Constructor function that Constructor function is reusable so the purpose of Constructor function is a special function to make the object for you so it's really like this is making the object but I want to put that somewhere else essentially what you're doing so just reorganizing the code and some new possibilities will open up so let's look at before I even get to that let's look at what that does to the code so pretend that this all this code didn't need to be here and in fact I'm going to like hit a lot of carriage returns go far down here and leave it down here and I'm going to comment it out so that it's not affecting anything and I'm come back up here and if you if I had a Constructor function I would be able to say something like this new bubble this is new syntax with the keyword new what the keyword new it means is hey JavaScript make a new object what kind of object this bubble object how do I know what a bubble object is I'm going to write a special function called Bubble somewhere El somewhere else that will explain what a bubble object is generate it make it put it here so that it goes into the array so and what's wonderful about this is this beautiful lovely clean sort of like succinct syntax like all of the code for the object is now somewhere else we can see that the main program is just let's start with an empty array let's put a bunch of things in it and let's make those things move around the screen and do stuff and so with this all that's left to do is Define what it is to be that bubble object to write this Constructor function that makes that bubble object so how do you do that that's the next piece so I want to come over here to the Whiteboard and oops hit my button again oh come on button there I am um so I want to come over here and talk about that the Syntax for that so what I think a way a good way of looking at it is okay so we know how to write a literal object a literal object I'm going to kind of squeeze over here to have some extra room uh I'm just going to say varb a little a literal object is a collection of name value pairs uh properties I have a property named x with a value of 100 I have a property named y with a value of 50 I have a property named display and the value of this property oh it happens to be a function and what do I doing that function I draw an ellipse I set a color and if I want to refer back to a property of the object remember I have to say this another property I have to say this.x so this is the syntax that you're familiar with if you watch some of the previous videos it's what I've used so far so I'm going to draw a sort of magical line here and what I want to do is look at there's like a thing poking me got I don't have a lot it looks like I'm in this big space here very cramped camera light thing poking me um so uh over here what I want to do now is look at how do I make this with the Constructor function so the Constructor function is a function just like any other function in JavaScript so the syntax in a weird sort of way almost goes back to something that you might be a little more used to but with some kind of strange other nuance and aspects to it so to define a function in JavaScript and simply write function the name of that function leave that blank for a second if there are any arguments or parameters parameters to that function and parentheses an open curly bracket can you see that yes and a Clos curly bracket so a Constructor function is a function just like any other function however we intend to use this function in a special Case by invoking the new operator so I want to say new bubble meaning I want to execute a function called Bubble with the new operator to make a new object so a convention in how you name Constructor functions is to name it with a capital letter okay so uh so this is a function named bubble I've named it with a capital letter simply to note in my code that this is a special function it's a Constructor function the thing that JavaScript is looking for is that new operator the thing that I have over here it's going to invoke that Constructor function say hey Constructor function make a new object and just convention wise so I can keep track of what's doing what in my code I'm going to capitalize that uh and name that with B bubble capital B I made this video earlier and had no sound in it and I really explained that much better in the previous video that no one will ever see I'm going to keep going something else I'm going to do in this video is going to be better I'm sure okay so now once this function is triggered with the new operator JavaScript says okay I'm going to make a new object now the first thing we need to do is say what properties go into that new object this is where the keyword this comes in again if I say this.x equals 100 what I've done is the new bubble object that this Constructor has made attach the property X to this bubble object so in the same way that we added a property here saying xon 100 The Constructor function is making a new object and attaching X to that particular object this object so I can then also attach a y to it and I can also there goes the camera I can also attach a function to it and I I know this I'm going to go off the screen here but you uh so actually let me not it's not a screen this is a whiteboard but let me actually write this a little smaller so you can see it this. display equals function so you can see now technical fail but I'm just going to keep going here this is already my second try um look that's the that by the way that's the thing this is the thing that was poking me just turn that um okay so you can see how this Maps this is making a literal object make this object B with an X with a Y with a display this is in a way like a template it's saying the object doesn't exist yet but if you were to call this function with a named bubble then an object will be created with these properties X will be attached to that object y will be attached to that object display will be attached to that object so literal object it exists template idea of an object way of generating the object when you say new bubble the object is made and you might think that at the end here you would want to say something like return this so once the object is made you want to then send it back to where you wanted it to make right here I say oh lost the camera oh God I'm going to have to remake this video again tomorrow which I might do um here I said new bubble I want this to evaluate to that new object the new object here the reference to that new object is the keyword this but the thing about a Constructor function is this is like what's you don't have to say this it's inherent to how once you invoke the new operator that that object will be returned it's kind of unspoken it's you don't have to say it it happens automatically for you so this is the syntax one of the things you might practice right an exercise that would give you at the end is take something that you made a literal object and try to convert it to this Constructor function syntax this is a really hard confusing thing to explain and possibly understand hopefully I'm doing a slightly okay job so let's do that now in the code itself remember down here before I sort of left my code I had for the literal object commented out so now I can actually write that Constructor function so I'm going to say function bubble and now what are the properties I had an X and A Y so I need to say this dox equals random 0 to width this.y equals random 0 to height so you can see instead of the literal syntax I'm actually setting properties attached to this equal to the values it's sort of more like code being executed line by line and then I can add the display function and I can add the move function and I left a space here and then the nice thing is I can go and grab these lines not these haven't changed those functions are exactly the same and I know I'm doing this kind of quickly like if you're following along you can pause the video and try to sort to do this yourself I will upload these somewhere and try to put them in the description on YouTube or video wherever you're watching this but you can see now let me put a little line break here um you can see now this is the Constructor function this is a function whose sole purpose in life is to generate an object when you say new bubble that object is made it's stored in the value this x gets attached to it y gets attached to it display gets attached to it move gets attached to it unspoken at the end that object this object is returned where where did I say new bubble up here what do I do with it I put it in the array boom boom I don't know there's it's a bubble it pops but so this function new bubble now notice interestingly enough you know I hate to do this to you but if I said this this would not work right the Constructor function is a function like any other it will be executed but all sorts of things will break and not work this only works JavaScript is looking for that keyword new in order to know to make this a new bubble object and and and attach the properties to it so I put this in here and I run it and we've got four and again I've got this same magical thing uh and and uh you know I'll make 400 bubbles so I'm like running out of steam here so hopefully this so so there's you know right now all I did in this particular example was take um take the literal object that I had in this Loop up here and move it to a Constructor function so in the next video what I would like to do is kind of show you what sort of what what what you could really do with this because now if I have this Constructor function I could say when I click the mouse also make a new bubble and how do I add this to the array right so this is what we need to look at I don't have to rewrite that that Constructor function can be reused anywhere in the code so this won't work yet this is the topic that I want to look at in the next video uh and how do I maybe assign parameters to it arguments to it I want to make an object at this location at mousex at Mouse y so that's the topic I want to look at in the next video for now I would say if you want an exercise for yourself go and find something maybe watch the previous video and made a little a literal object in a loop take that literal object code out of the loop write the Constructor function see if you can get to perform exactly the same way okay so this is the end of this particular video in the next one I'll look at the Fun an array function called push an array function called splice which allows you to add things to an array and remove things from the array so we can have a much more flexible um uh system okay and I'm going to hit stop now okay so hopefully that actually worked the first I swear I the first video was better but just doesn't have any sounds nothing I can do uh okay uh everybody's gone Constructor function always makes everybody go away um okay so I think it's getting to be 330 I'm done this for an hour and a half now I'm going to turn on some air I think I and let me look at my list now I kind of want to make that video again because I really feel it but I um I think I'm going to leave it obviously uh that was nice of you guys okay uh and um I think I'm gonna at least do push and splice and I'll have to leave these ideas six and seven for another time you know maybe I maybe I'll have I'll I'll get a second win because I would love to just like knock all these out today then not worry about videos by the way the next set of videos will be about working with the Dom HTML CSS P5 Dom addon uh but I got to do push in splice so uh let me oops I'm looking at Twitter for no reason uh okay so uh if you have any comments or feedback let me know I'm sort of out of water here I watch batter is dying batteries are dying everywhere let's check the battery of this still looks fine um drink a little of okay so I'm going to erase this over here so what I'm going to do in the next video is just look at um push and splice splice takes something out of the array I think you give it the index and then the number of things so if you want to remove the third element you say two and then you just want to remove only that element comma one it's a little bit weird it be nice to have a remove function but that'll do um and so here I am and going to minimize this any uh um and come over here and and then and then arguments to the Constructor as well okay uh here we go I can do this one Al I have to PE but I'll wait I can make it through one more video CU I'm sure you all needed to know that uh okay so if you watch the previous video about the Constructor function thank you for still being here and watching the next one because that was a little bit rough maybe you actually watch the rerecorded one that I hope to make someday to kind of try to do a little bit of a better job here but I have a promise to you which is that I'm going to put my energy into this video and I think this particular video is going to uh let you do some really interesting things with an array that weren't possible before if you haven't looked at some of the other functionality that you can do with an array so what is that functionality that I'm talking about notice this example so what's wonderful about working with objects in an array is again I have a single number right there I change that number to five I run the code there are five bubbles I change that number to 500 I run the code there are 500 of them but what if I want to click click click click click and delete them them or what if I want to click click click click click and add them how do I resize dynamically add or remove things from that array then well one of the nice things is right here no matter what I do to the array this Loop will only ever iterate over the current state of the array right because dot length will dynamically always store the value of the array itself so that's a great thing that's the good news and then in order to add and subtract things from the array a nice technique for doing that is with two array functions so one array function is called push another array function is called splice now the truth of the matter is there are many array functions and I will try to remember to include in the description below a link to a JavaScript documentation page that runs through all these functions it might be a little scary weird looking links maybe you shouldn't look at it but these are just two functions that I'm going to demonstrate to you now the other thing that's a little bit weird is what a function for what right an array is this right nums equals 5 to 3 71 right what do you mean a function to the array uh I could say nums index so this is 0 1 2 3 if I said nums index 4 equals 21 it's like I'm taking the end of this array and adding element four to the array and making it one longer so this is a way to add an element to the array but it only works because I happen to know what that index value is I happen to know that the in that the length of that array so a more convenient way might be to no matter what just say append it to the end or add it to the end and the push function does that if I say nums do push 63 it will say whatever the size of the array is extend it by one more and put the thing you just pushed onto it there and it might have run out of space up there but I think you can see it now this is what's weird yes you can initialize an array yes you can refer to individual elements but you can call functions on it what is the thing that what's what is the thing you normally have that you say something do execut a function an object so this is one of the things about JavaScript you know how we made an array of objects well guess what an array is also an object so and by the way we've seen this already it has a property the do length property so this is what we normally think of as the array itself and we're working with the values in the array but there are the an array happens to be an object and there are special functions you can call on it push being one of the most you know sort of convenient ones or useful ones for you right now and I'll show you splice in a moment which will allow you to take stuff out of the array so let me come back over here and now that we know that I I can do something to this code right if I can add the mouse pressed function and here in the mouse pressed function I can say bubbles. push and what what do I want to push into that array right before if I just had an array of numbers I could just say push this number P push some random number or push some whatever this is just numbers here what I want to do is push bubble object how do I make a new bubble object well that was what I spent all this time really trying my hardest to explain in the previous video the job of making objects is left to this Constructor function which is being eaten by the blue blob this Constructor function its job is to make an object how do you trigger its action to make that object by saying new bubble parentheses so right here all I need to do is say hey push a new bubble into that uh array so now you're not really going to notice are they popping up there but let's start with just two Bubbles and I could click and you can see every time I click a new bubble is being added to that array but I I want so I want to do better than that like what I want to do is I want to click right here and I want to see the bubble being added right there how do I do that well let's look at how is its initial X and Y picked its initial X and Y is picked randomly now the truth of the matter is I could just replace that with mouse X and replace this with mouse y but I'm using this as an excuse to show you something a little bit tricky about Constructor functions but ultimately rather useful functions can accept arguments you can pass things into a function I want to draw a line from this point to this point I want to fill with these particular RGB values I can say I want to make a bubble with this argument I want to make a bubble that is big or a bubble that is small or a bubble that is red I want to be able to modify the bubble as I make it and in this case I want to say I want to make a bubble at Mouse X at Mouse y so let me come back over here I erased my Constructor function but let's take a look at let's take a look at this syntax a little bit because this is really hard so I want to say new bubble and right now I'm going to say instead of mouse X and mouse y I'm going to say 50 comma 25 so this is the line of code I'm executing right and remember the Constructor function looked like this now it didn't have anything between the parentheses I'm going to add something in a minute and then it said this dox equals something and thisy equals something what I want to do is I want to get this 50 into that X and I want to get this 25 into that X why when I make the new bubble object I want to make it with these values 50 should be its X property 25 should be the value of the Y property how do I do that well when you pass arguments into a function those arguments get received by that function's parameters so I need to add how many parameters here two parameters n x and a y I can actually call those whatever I want but a nice way that I might call them is I might call them X and A Y and you know why JavaScript won't get confused because these are called X and Y because these are referring to this bubble's X and this bubble's y and these are just a plain old X and a plain old y so if 50 goes into x x now has the value of 50 x can go into this dox if 25 goes into y y now has the value of 25 and Y can go into this comma y so the these particular X and Y parameters to the bubble function they simply act as these like handoffs they're just here they're like waiting okay give me a value I got the value you take the value that's all they live for that's their entire purpose in life in terms of this code is just receive that value 50 and immediately handing it off because this is the x that really matters that's the bubble's X this is the Y that really matters that's the bubble's y these are just temporary just here to receive the value and and pass it off so let's come back I'm sure you have a question but you can't ask it um let's come back over here and uh um let's look at that so I'm passing in the mouse X and the mouse y I'm coming down here I need to add those parameters to receive that Mouse X and Mouse Y and you need to assign those parameters to this.x and this doy so this is exactly what I went through before you can see now Mouse X goes into X which then goes into this.x Mouse y goes into Y which then goes into this doy okay here we go stop start and now when I click the mouse click the mouse click the mouse click the mouse click the mouse cck click the mouse look at that oh that is lovely it just works you know I could do something like I'm I'm sorry but I I just have to make this a little bit nicer like you know let's give it like a little bit of a some sort of color um you know some Alpha and what um what I just realized though is what's weird like look at this for a second shouldn't we have like 200 bubbles to start with there's no bubbles to start with look at this even I I rewrote the bubble Constructor to expect parameters but I didn't get any up here didn't get an error message or maybe I did but I can't see the error message no there's no error message so the thing is it tried to do it but it didn't have the arguments so we don't see those bubble objects so this is important if you provide argument for parameters to your Constructor function you've got to use this so you know I don't know what I want to do up here I could put all of these starting ones at 100 100 so they're all right there I could put all these starting ones at a random location right I could pass the random location in and I could do that and now I kind of had what I had before but ultimately I think what I want to do in this example is just take the this out like now I have a program which just starts with no objects it's fine to have an empty array I can Loop through that empty array you know how many times I'm going to Loop through that empty array zero times and the only time I'm ever going to add a new object is if I click the mouse because when I click the mouse I'll make a new bubble object at Mouse X at Mouse Y and push it into the array so that array grows so I can click click click click click click click and something I could do that's kind of fun is I could change I mean fun if me I guess but uh I could change that from Mouse press to Mouse dragg which is sort of a nice little effect meaning I can kind of like draw with this and notice this is this kind of answers that question that you might have had in your head a long time ago which is what if you know if I don't draw the background I get this nice Trail right because I don't erase the previous shapes that I've been drawing here now I'm erasing the background but I'm using an array to keep track of the history of everything I ever did with the mouse and I'm making a new object for every one of those points and you can see even though you could probably come up with more interesting motion than this even though uh I start with this pattern that pattern quickly goes away as these objects start to move um randomly around the screen so I think okay but I was going to say this is a great exercise for you I think using this model can you create an object can you create an array that stores the history of the mouse As you move it around and what types of kind of motion or changes of color or things can you do now if you have a drawing program that's actually rotating the all of those locations in an array rather than just leaving them as pixels on the screen but before I go any further let's add one more thing to this what if I only ever want to have 50 like I want to delete the I want to I want to delete the oldest thing from the array right what I mean by that is if this is the array right the push function always adds things to the end so first it adds like a bubble to the beginning then it adds a new bubble to the next spot then it adds a new bubble to the next spot then a new bubble to the next spot and once I get to a certain number what if I want to delete the oldest one shift everything down delete the next oldest one shift everything down and keep adding so the way to delete something from an array is with a function called splice it's a little bit confusing though because this splice function expects two two arguments the first argument is the index of what you want to delete so if I say index 2 and this was my array 012 it would remove this element and all these would kind of shift down into the appropriate spots this second argument is how many so actually if I said 2 comma 5 it would delete this and the next four elements but in this case I just want to remove one at a time so I want to remove the element but but and I want to remove the oldest one so if I'm adding to the array the oldest one is always in the first spot so I want to delete the first element and just one of them okay so let's come back here and when do I want to do that like right now I could say like just just for the sake of argument key pressed bubbles. splice the first element one just that one element so you can see now I'm going to add a whole bunch of them and now start hitting the a key you can can see it's removing them in order of what the how they were added but maybe what I really want to do is say something like okay if the bubble array ever gets greater than the value 50 then delete that first element so what's that going to do I'm going to keep making bubbles until suddenly I have 50 of them I can keep making more but keep deleting the older one so if I ever have 50 delete the add a new one delete the previous one so you can see it's I sort of get this trail that kind of winds following me so push adding things to the array splice deleting things from the array now let me give you a challenging problem and I really should make another video with the solution to this problem I actually have one somewhere uh but it's it uses processing so I need to make a JavaScript one with this but what if you don't want to remove these objects just based on their age like when I get to 50 but what if you you want to remove them if they ever happen to wander off the screen right so look at this here's a bunch of objects leave them there or remove them if they uh if they hit the edge of the screen or if you click on them so how do you pick specific objects to move based on some set of condition that's a pretty difficult problem this somehow has to be inside of the loop but you got to watch out if you're looping through an array and modifying this the elements of the array at the same time weird things can happen so that's something you can think about as a future problem uh but just to get started right now I might you know again work with this model see what you can do with the on object that sort of keeps track of an array that sortes a history of what you've done with the mouse or maybe you have something moving independently randomly and you're keeping track of it a history of its location okay uh so hopefully this helped you with a little more about objects and arrays and I'm going to finish this video off now oh this was 15 minutes long that was long uh come on Mouse I got to hit stop okay bubbles yeah I know Amelia hi Amelia it's always bubbles it's nice of you to be here uh I like this weird little image of myself that's coming up uh okay any questions anybody still here I'm I'm definitely running out of steam let's see where I got to uh in I'm going to bring up my notes here these are I got everywhere up to six and seven and also if I were to add another video here really what I should do is like removing elements from an array when they leave the window so I should really do a video on that this's really eight videos somehow now so I did all of these even though I feel like didn't do a very good job and uh I haven't done these it's 345 kind of run out of steam anybody have any questions or comments before I go I could just keep I could do a couple more only I could get to all of them questions comments bubbles I think probably I'm going to take a break and kind of remember this list maybe I'll come back in a few minutes even if I can kind of I need to get some more water and stuff uh okay so um last chance I'm going to count my head to 15 if you're here if you're watching you have a comment or question I'm going to shut the stream off in about 30 seconds but I will stay if somebody has a question Community Spotlight of cool things people make with P5 that's a great suggestion I kind of it's funny I don't really think to do videos like that um hey I'd have to prepare for that I just kind of wing these but I think that's a great idea and I I um I'll try to keep that in sort of back of my mind on list or um I do um I I do have a list somewhere that I keep track of all the videos I'm intending to make thank you for that suggestion uh so I'm going here to this I'm going to click this stop streaming soon oh I've uh it's only 53 minutes somehow I feel like I've been streaming for much longer than that but who knows uh I'll wait a little bit longer again thanks helpful I'm glad you thank you I'm glad you're finding this helpful uh and so okay I'm going to stop streaming uh you can send me a tweet at shiffman email is out of control but you're welcome to email tell me I'll try to answer and I I will be back if you follow me on Twitter that's where I post the links of these streams I might if I can like stomach it because I have till 430 before I have to go I might just take a 10minute break and try to knock out a couple more it would be a new streaming URL though so you have to uh check for me to post that so I might do that but I I might just have to wait till tomorrow or Monday okay goodbye everyone and uh please uh stay tuned for few for for for the future goodbye up
