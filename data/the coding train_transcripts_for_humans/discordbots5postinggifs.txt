With timestamps:

00:00 - welcome back here is another discord bot
00:02 - tutorial in this tutorial i'm going to
00:04 - attempt to retrieve a gif
00:06 - from tenor.com and post that gif
00:09 - to uh discord itself so i'll use a
00:12 - command like
00:13 - exclamation point gif a search term and
00:16 - then i'll get a gif
00:17 - back from tender.com so there's lots of
00:19 - different gif apis you could you could
00:20 - have your own library of gifs i'm
00:22 - actually using tenor because there
00:24 - happens to be
00:24 - an official coding train uh gif page i
00:27 - don't know why this exists or how this
00:29 - exists but it exists
00:30 - so you're with you know if you like the
00:32 - gifts on the coding train you can make
00:35 - use of those
00:36 - enjoy now there is a tenor
00:39 - api so you will need to get your own api
00:42 - key
00:43 - log in create an application and it's
00:46 - very it's a pretty easy process
00:48 - i'll put links to it in the video's
00:49 - description and once you've gone through
00:51 - that process
00:52 - you will have an api key like this which
00:55 - i will now delete or regenerate as soon
00:57 - as i finish recording this video
00:59 - so i've made two example and test
01:00 - application let's grab this one coding
01:02 - train example
01:03 - this is a perfect way reason to use
01:07 - my env file yet again
01:10 - so going back to the code i'm going to
01:12 - go to dot env
01:13 - i'm going to put tenor key equals so now
01:16 - i have my tenor key
01:18 - saved in a dot env file in bot.js
01:21 - you know again i have my bot restricted
01:23 - to one channel
01:24 - which is sort of an artificial
01:26 - restriction right now
01:28 - just for testing purposes it's hard
01:30 - coded in there
01:32 - and then i want to do kind of an awful
01:34 - thing which is i want to say
01:36 - if the message content is choo choo
01:38 - reply this way
01:40 - otherwise if the message
01:43 - content equals exclamation point gif
01:48 - reply somehow with a gif now
01:51 - how am i going to do this first of all
01:54 - this is terrible
01:55 - like ultimately you might make a bot
01:57 - that has hundreds literally hundreds of
01:59 - commands a giant if statement a switch
02:01 - statement's not gonna do you any better
02:03 - so that's gonna be the topic for the
02:04 - follow-up video to look at how we can
02:07 - break out these commands into separate
02:08 - javascript files and handle them in more
02:10 - elegant way
02:11 - but right now let's just get this second
02:13 - command going
02:14 - and i am just going to make sure that it
02:18 - works
02:18 - to have two commands
02:22 - let's just send back the words gif and
02:23 - if if you like i can make a whole
02:25 - separate recording of this video with me
02:27 - saying jif like so you could decide
02:28 - which one you want to watch but
02:29 - i can't i can't bring myself to do it
02:31 - i'm sorry i'm sorry
02:33 - let's run this bot let's go to discord
02:37 - i'll say choo choo never forget that
02:40 - this dot i will say
02:42 - gif and i get the response back gif so
02:44 - we can see it's handling
02:46 - multiple commands now i want to get
02:50 - an actual gif so back to the tenor api
02:52 - there's lots of documentation here
02:54 - things i'm sure we could try
02:55 - i'm just going to do something quite
02:56 - simple um with
02:58 - implementing a search and you can see
03:00 - here uh
03:01 - it's giving me i can actually look at
03:03 - the javascript code first of all tenor
03:05 - it's capital s it's capital s in the
03:07 - javascript oh it makes me crazy
03:10 - second uh i could click over on
03:12 - javascript but it's the example code is
03:14 - showing it with xml http request
03:16 - which is kind of an ancient way of doing
03:18 - of requesting data from an api
03:20 - i have been using the fetch function i
03:22 - have a whole video
03:24 - tutorial series about the fetch function
03:26 - about async and await so i'm going to
03:27 - use a more sort of modern technique
03:29 - so i'm just going to refer to this sort
03:31 - of curl which is a command line
03:33 - tool for getting data from the api and
03:36 - what i want
03:37 - is this url i'm going to grab that
03:40 - and i'm going to bring it into my code
03:42 - so i'm going to say let url equal
03:44 - this string and then i'm going to use
03:47 - the back
03:47 - ticks to make it a template literal and
03:50 - then i can do things like ah
03:52 - where the key is supposed to go i can
03:54 - say
03:55 - guess what process dot env
03:58 - dot tender key
04:02 - so you can see here now i have replaced
04:06 - in the url the place where the key would
04:08 - normally be hard
04:09 - coded with the environment variable
04:11 - tenor key
04:12 - and then the search term here is just
04:15 - excited
04:15 - so i'm just going to hard code and
04:17 - replace the words coding train in here
04:20 - and see how that goes and then i'm going
04:23 - to call fetch to get the data from that
04:24 - url
04:26 - response equals await i need to use the
04:28 - await keyword
04:29 - if i want to have asynchronous code
04:31 - running with this particular
04:33 - methodology fetch the url
04:37 - then i want to get the data in json
04:40 - format so i say await
04:42 - response dot json now there are this is
04:44 - not a
04:45 - let's just run uh console.log
04:48 - json so this actually isn't going to
04:50 - work because
04:52 - two things one is if i have asynchronous
04:55 - javascript with the await keyword
04:57 - i need to indicate that with modifying
05:01 - the function as an async function
05:03 - and again i'll refer you to my other
05:04 - tutorials about this but there we go
05:06 - modify as an async function
05:08 - now also i don't know node doesn't know
05:11 - about
05:11 - fetch natively fetch is part of the
05:13 - javascript api in the browser
05:15 - but it's very easy for me to add fetch
05:17 - to a node application and by the way
05:19 - you could also use axios which is kind
05:21 - of like what people are using these days
05:23 - but i'm a little bit behind a little
05:24 - mind i'm going to use fetch i'm going to
05:26 - go back
05:26 - to my console and i'm going to say npm
05:30 - install node fetch
05:33 - there we go and then i can in
05:37 - here i can say constant fetch
05:40 - equals require a node fetch so now the
05:43 - fetch function is imported from the node
05:46 - fetch module
05:47 - by the way this requires stuff i'm going
05:50 - to make use of that in an interesting
05:51 - way in the next video when i show you
05:52 - how to do a command handler it's very
05:54 - exciting
05:54 - okay require node fetch now i believe
05:58 - i should be able to run this run the bot
06:03 - go back to discord i'm going to say
06:06 - exclamation point gif i won't get a gift
06:07 - back yet but i should see a console log
06:10 - of the data from tenor
06:14 - there we go look at this so i now have
06:16 - what do i have i have an array
06:18 - a javascript object with a results array
06:21 - and every element
06:22 - of that array as an object with a url
06:25 - which is that particular gif
06:27 - so and the url for it so if i go to this
06:30 - page here
06:32 - and take a look at it this is a coding
06:35 - trade gift
06:35 - that somebody bunny gamers i guess made
06:37 - which is like the this dot with the fire
06:40 - coding challenge that is awesome
06:42 - i love seeing that thank you for sharing
06:44 - that
06:45 - so i think what happens if
06:48 - i just say uh
06:51 - message dot channel send
06:54 - where was it json dot results
06:58 - index zero dot url json.rt
07:04 - that's what i am looking at right there
07:06 - json is the object
07:07 - dot results is the array index 0 is this
07:09 - one url i probably want to pick a random
07:12 - one that would be a nice thing to do
07:13 - but let's just see if this works like if
07:15 - i just send the url back to
07:16 - discord is it going to post the gif i
07:18 - think it might like obviously i might in
07:20 - other contexts i might need to actually
07:21 - download the file
07:23 - use this you know binary data but i
07:25 - think actually giving it the url might
07:26 - be enough in this case
07:28 - so let's restart the server
07:32 - go back to discord gif
07:39 - there we go we've got it oh that is
07:41 - wonderful mwah
07:42 - okay next up two things let's pick a
07:45 - random one
07:46 - so let r index equal
07:50 - math.random
07:53 - times the length of the array
07:56 - and then it's actually exactly what i'm
07:58 - doing here i should probably
07:59 - put this into a function but i'm doing
08:01 - exactly this i could actually just take
08:03 - this let's just take this
08:04 - right here right i want to uh but
08:07 - instead i want to look at the array of
08:09 - gif
08:09 - results and then send that particular
08:12 - one
08:13 - restart the server
08:16 - go back here a gif
08:20 - oh sad what happened i got an error
08:22 - unhandled
08:23 - result is not defined ah sorry
08:26 - json.results
08:29 - json.results i probably should put that
08:31 - variable
08:32 - into that array into a separate variable
08:34 - but good enough
08:41 - no cannot read property url of undefined
08:45 - hmm i guess i have to debug this a
08:47 - little better what did i mess oh results
08:49 - index zero ah
08:50 - the array is results right i want the
08:52 - length of the array not index zero then
08:54 - get the index and look in the race sorry
08:56 - all these mistakes
08:57 - so many mistakes hopefully seeing these
09:00 - mistakes helps you
09:03 - there we go we've got a gif there's one
09:08 - let's get another one okay we're getting
09:10 - fun
09:11 - coding train gifs amazing okay
09:14 - one more thing let's modify this
09:18 - so i can say gif and then i can have a
09:21 - search term
09:22 - after it so if i were to say gif coding
09:24 - trained
09:25 - then i would get a coding trained gift
09:26 - back right now i'm not going to get
09:28 - anything
09:28 - because the way that i have written this
09:31 - is that i have to have the full
09:33 - content exactly exclamation point gif so
09:36 - the first thing i want to do and this is
09:38 - leading the way to the command handler
09:40 - is let's make a variable called tokens
09:43 - and i am going to say
09:47 - message.content.split
09:48 - and i'm just going to split it up by
09:50 - spaces and again i could be
09:51 - kind of a more sophisticated way of
09:53 - splitting it but this is a way of taking
09:56 - a string and splitting it into an array
09:58 - where every element of the array is
09:59 - separated by a space
10:02 - then what i'm really looking at is if
10:05 - tokens
10:06 - zero is choo choo then do this
10:09 - and then if tokens
10:12 - zero is exclamation point gif do this
10:15 - but i want to look for a search term
10:19 - so let me change this to uh
10:23 - i'm going to say keywords right this now
10:26 - i'm going to add a variable called
10:27 - keywords into the tenor api
10:29 - search and i'm going to say if
10:32 - tokens.length
10:33 - is greater than one so let's say um
10:36 - keywords
10:37 - is just by default coding train right so
10:40 - if you don't
10:41 - specifically offer a search term you
10:44 - just
10:44 - get a codingtrain gif but if you have
10:47 - more tokens than just exclamation point
10:49 - gif
10:50 - then keywords equals i think i can use
10:53 - slice tokens i think
10:56 - slice is a function that takes a slice
10:59 - out of an array
11:00 - so i don't want the i don't want index
11:03 - zero i don't want the command
11:04 - i just want from one until the end
11:07 - of it and then i want to join it back by
11:10 - spaces
11:10 - so i did that kind of quickly i don't
11:12 - usually in my tutorials kind of just
11:14 - plop code out like this but let's think
11:16 - about this in multiple steps
11:18 - if i have exclamation point gift kitty
11:21 - cat
11:22 - i then have an array
11:25 - with three things in it slice from one
11:28 - to the end of that array and i don't
11:30 - know why i put cat with a k there
11:32 - kitty cat will give me a uh
11:35 - a smaller array that looks like this i
11:38 - guess i could have just spliced out the
11:40 - first element and then
11:42 - join will put it back into a string
11:46 - with spaces in between so now
11:49 - that should give me keywords and i think
11:52 - let's see what happens i can search for
11:55 - a given gif
11:56 - before i do that before i just unleash
11:59 - the world of gifs
12:00 - onto this discord server let me look for
12:02 - one more thing
12:03 - in the documentation which is content
12:06 - filtering
12:07 - so i'm going to use the g-rated just to
12:09 - like filter everything out make sure
12:10 - it's sort of family friendly content
12:12 - that i'm getting right now
12:14 - so i think i just write another argument
12:17 - here
12:17 - oh and i'm limiting it to 8 which i
12:19 - don't need to do so let's add content
12:21 - filter equals g i think that adding that
12:24 - argument should filter out filter the
12:26 - gifs
12:26 - sorry i double checked i found in the
12:28 - documentation that actually i don't put
12:30 - equals g i put equals high i want the
12:32 - high safety filter so let me go back to
12:34 - the code
12:36 - and put in content filter equals hi
12:39 - and i'm pretty sure i've done it right
12:41 - there is an issue by the way that um
12:43 - in a url you can't have a space so
12:46 - normally those get encoded as like
12:48 - percent
12:48 - 20 as a sequence of characters that
12:50 - indicate space i'm hoping it's going to
12:52 - work anyway like i think the fetch
12:53 - function might take care of
12:55 - encoding the url for me we'll find out
12:57 - let's run this
13:00 - back to discord let's first just say
13:02 - exclamation point gif
13:06 - i've got a coding train gif now let's
13:08 - say gif
13:09 - kitten
13:12 - and i've got a kitten gift now let's try
13:14 - two words
13:15 - cute kitten i think
13:19 - i think it's good i think we're we're
13:20 - good oh this is fun so now the coding
13:23 - train bot
13:23 - will always get a gif from um tenor now
13:26 - i don't know if
13:27 - i am one thing i should probably check
13:29 - and i will add it to this after
13:31 - if i should include some extra
13:32 - information like for example i should
13:34 - include alt text for the gif
13:35 - maybe i want to include a url to credit
13:38 - the gif of where i got it from
13:39 - um but so i should be able to without
13:41 - too much trouble at a minimum
13:43 - add some additional text and maybe i
13:46 - could just send it right now as a second
13:48 - message
13:49 - gif from tenor
13:52 - and plus the keywords so i'm just going
13:55 - to send it as two messages right now or
13:57 - i
13:58 - could have made it one but just to just
13:59 - as a quick uh
14:02 - update
14:05 - so we get the gif and it says gift from
14:07 - tenor coding train
14:13 - let's get a puffy gift from tenor puppy
14:15 - okay
14:16 - so we now have a bot that can handle
14:20 - more than one command it can even handle
14:22 - arguments to a command right the command
14:24 - can be the first token
14:25 - with arguments after it but if i want to
14:28 - expand this if i want to build this up
14:30 - further a really long if statement isn't
14:32 - going to be such a great way to do it so
14:34 - that's what will come
14:35 - eventually in the next video how to
14:38 - modify this to use a command handler to
14:40 - be able to break out different commands
14:42 - into separate javascript files and build
14:44 - a much
14:45 - larger bot and then more things will
14:46 - come too we'll see we'll see what i get
14:48 - to
14:49 - thanks for watching and hope to see you
14:51 - in future discord bot
14:52 - coding train videos
14:56 - yikes
15:01 - [Music]

Cleaned transcript:

welcome back here is another discord bot tutorial in this tutorial i'm going to attempt to retrieve a gif from tenor.com and post that gif to uh discord itself so i'll use a command like exclamation point gif a search term and then i'll get a gif back from tender.com so there's lots of different gif apis you could you could have your own library of gifs i'm actually using tenor because there happens to be an official coding train uh gif page i don't know why this exists or how this exists but it exists so you're with you know if you like the gifts on the coding train you can make use of those enjoy now there is a tenor api so you will need to get your own api key log in create an application and it's very it's a pretty easy process i'll put links to it in the video's description and once you've gone through that process you will have an api key like this which i will now delete or regenerate as soon as i finish recording this video so i've made two example and test application let's grab this one coding train example this is a perfect way reason to use my env file yet again so going back to the code i'm going to go to dot env i'm going to put tenor key equals so now i have my tenor key saved in a dot env file in bot.js you know again i have my bot restricted to one channel which is sort of an artificial restriction right now just for testing purposes it's hard coded in there and then i want to do kind of an awful thing which is i want to say if the message content is choo choo reply this way otherwise if the message content equals exclamation point gif reply somehow with a gif now how am i going to do this first of all this is terrible like ultimately you might make a bot that has hundreds literally hundreds of commands a giant if statement a switch statement's not gonna do you any better so that's gonna be the topic for the followup video to look at how we can break out these commands into separate javascript files and handle them in more elegant way but right now let's just get this second command going and i am just going to make sure that it works to have two commands let's just send back the words gif and if if you like i can make a whole separate recording of this video with me saying jif like so you could decide which one you want to watch but i can't i can't bring myself to do it i'm sorry i'm sorry let's run this bot let's go to discord i'll say choo choo never forget that this dot i will say gif and i get the response back gif so we can see it's handling multiple commands now i want to get an actual gif so back to the tenor api there's lots of documentation here things i'm sure we could try i'm just going to do something quite simple um with implementing a search and you can see here uh it's giving me i can actually look at the javascript code first of all tenor it's capital s it's capital s in the javascript oh it makes me crazy second uh i could click over on javascript but it's the example code is showing it with xml http request which is kind of an ancient way of doing of requesting data from an api i have been using the fetch function i have a whole video tutorial series about the fetch function about async and await so i'm going to use a more sort of modern technique so i'm just going to refer to this sort of curl which is a command line tool for getting data from the api and what i want is this url i'm going to grab that and i'm going to bring it into my code so i'm going to say let url equal this string and then i'm going to use the back ticks to make it a template literal and then i can do things like ah where the key is supposed to go i can say guess what process dot env dot tender key so you can see here now i have replaced in the url the place where the key would normally be hard coded with the environment variable tenor key and then the search term here is just excited so i'm just going to hard code and replace the words coding train in here and see how that goes and then i'm going to call fetch to get the data from that url response equals await i need to use the await keyword if i want to have asynchronous code running with this particular methodology fetch the url then i want to get the data in json format so i say await response dot json now there are this is not a let's just run uh console.log json so this actually isn't going to work because two things one is if i have asynchronous javascript with the await keyword i need to indicate that with modifying the function as an async function and again i'll refer you to my other tutorials about this but there we go modify as an async function now also i don't know node doesn't know about fetch natively fetch is part of the javascript api in the browser but it's very easy for me to add fetch to a node application and by the way you could also use axios which is kind of like what people are using these days but i'm a little bit behind a little mind i'm going to use fetch i'm going to go back to my console and i'm going to say npm install node fetch there we go and then i can in here i can say constant fetch equals require a node fetch so now the fetch function is imported from the node fetch module by the way this requires stuff i'm going to make use of that in an interesting way in the next video when i show you how to do a command handler it's very exciting okay require node fetch now i believe i should be able to run this run the bot go back to discord i'm going to say exclamation point gif i won't get a gift back yet but i should see a console log of the data from tenor there we go look at this so i now have what do i have i have an array a javascript object with a results array and every element of that array as an object with a url which is that particular gif so and the url for it so if i go to this page here and take a look at it this is a coding trade gift that somebody bunny gamers i guess made which is like the this dot with the fire coding challenge that is awesome i love seeing that thank you for sharing that so i think what happens if i just say uh message dot channel send where was it json dot results index zero dot url json.rt that's what i am looking at right there json is the object dot results is the array index 0 is this one url i probably want to pick a random one that would be a nice thing to do but let's just see if this works like if i just send the url back to discord is it going to post the gif i think it might like obviously i might in other contexts i might need to actually download the file use this you know binary data but i think actually giving it the url might be enough in this case so let's restart the server go back to discord gif there we go we've got it oh that is wonderful mwah okay next up two things let's pick a random one so let r index equal math.random times the length of the array and then it's actually exactly what i'm doing here i should probably put this into a function but i'm doing exactly this i could actually just take this let's just take this right here right i want to uh but instead i want to look at the array of gif results and then send that particular one restart the server go back here a gif oh sad what happened i got an error unhandled result is not defined ah sorry json.results json.results i probably should put that variable into that array into a separate variable but good enough no cannot read property url of undefined hmm i guess i have to debug this a little better what did i mess oh results index zero ah the array is results right i want the length of the array not index zero then get the index and look in the race sorry all these mistakes so many mistakes hopefully seeing these mistakes helps you there we go we've got a gif there's one let's get another one okay we're getting fun coding train gifs amazing okay one more thing let's modify this so i can say gif and then i can have a search term after it so if i were to say gif coding trained then i would get a coding trained gift back right now i'm not going to get anything because the way that i have written this is that i have to have the full content exactly exclamation point gif so the first thing i want to do and this is leading the way to the command handler is let's make a variable called tokens and i am going to say message.content.split and i'm just going to split it up by spaces and again i could be kind of a more sophisticated way of splitting it but this is a way of taking a string and splitting it into an array where every element of the array is separated by a space then what i'm really looking at is if tokens zero is choo choo then do this and then if tokens zero is exclamation point gif do this but i want to look for a search term so let me change this to uh i'm going to say keywords right this now i'm going to add a variable called keywords into the tenor api search and i'm going to say if tokens.length is greater than one so let's say um keywords is just by default coding train right so if you don't specifically offer a search term you just get a codingtrain gif but if you have more tokens than just exclamation point gif then keywords equals i think i can use slice tokens i think slice is a function that takes a slice out of an array so i don't want the i don't want index zero i don't want the command i just want from one until the end of it and then i want to join it back by spaces so i did that kind of quickly i don't usually in my tutorials kind of just plop code out like this but let's think about this in multiple steps if i have exclamation point gift kitty cat i then have an array with three things in it slice from one to the end of that array and i don't know why i put cat with a k there kitty cat will give me a uh a smaller array that looks like this i guess i could have just spliced out the first element and then join will put it back into a string with spaces in between so now that should give me keywords and i think let's see what happens i can search for a given gif before i do that before i just unleash the world of gifs onto this discord server let me look for one more thing in the documentation which is content filtering so i'm going to use the grated just to like filter everything out make sure it's sort of family friendly content that i'm getting right now so i think i just write another argument here oh and i'm limiting it to 8 which i don't need to do so let's add content filter equals g i think that adding that argument should filter out filter the gifs sorry i double checked i found in the documentation that actually i don't put equals g i put equals high i want the high safety filter so let me go back to the code and put in content filter equals hi and i'm pretty sure i've done it right there is an issue by the way that um in a url you can't have a space so normally those get encoded as like percent 20 as a sequence of characters that indicate space i'm hoping it's going to work anyway like i think the fetch function might take care of encoding the url for me we'll find out let's run this back to discord let's first just say exclamation point gif i've got a coding train gif now let's say gif kitten and i've got a kitten gift now let's try two words cute kitten i think i think it's good i think we're we're good oh this is fun so now the coding train bot will always get a gif from um tenor now i don't know if i am one thing i should probably check and i will add it to this after if i should include some extra information like for example i should include alt text for the gif maybe i want to include a url to credit the gif of where i got it from um but so i should be able to without too much trouble at a minimum add some additional text and maybe i could just send it right now as a second message gif from tenor and plus the keywords so i'm just going to send it as two messages right now or i could have made it one but just to just as a quick uh update so we get the gif and it says gift from tenor coding train let's get a puffy gift from tenor puppy okay so we now have a bot that can handle more than one command it can even handle arguments to a command right the command can be the first token with arguments after it but if i want to expand this if i want to build this up further a really long if statement isn't going to be such a great way to do it so that's what will come eventually in the next video how to modify this to use a command handler to be able to break out different commands into separate javascript files and build a much larger bot and then more things will come too we'll see we'll see what i get to thanks for watching and hope to see you in future discord bot coding train videos yikes
