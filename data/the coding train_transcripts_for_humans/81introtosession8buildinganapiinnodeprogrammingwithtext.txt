With timestamps:

00:00 - hello and welcome to session 8 of
00:02 - programming from A to Z in this session
00:05 - I want to talk about and look at more
00:08 - deeply how to build an API using nodes
00:11 - so this whole course has focused on
00:15 - working with text reading text analyzing
00:18 - text generating text and most of the
00:21 - stuff almost everything that I've shown
00:23 - you happens in client-side JavaScript so
00:26 - let's talk about a little bit just
00:27 - generally what the difference is so if
00:29 - you have a laptop that you're working on
00:31 - and it has a web browser in it you might
00:35 - be running your p5.js sketch right there
00:38 - in the browser itself so this is going
00:42 - to get you very far there is so much you
00:44 - can do with just this as we've seen now
00:46 - you can do word counting and Markov
00:48 - chains and all sorts of projects but
00:50 - there are some limitations here so for
00:52 - example let's just go back and think
00:54 - about word counting so one of the things
00:56 - we did is okay so you have some text
00:58 - document and you want to count how many
01:02 - times each word appears in that text
01:04 - document and visualize it in some way
01:06 - with your p5.js sketch this will work
01:09 - just fine all client-side unless and
01:13 - unless a couple of things one is where
01:16 - is this data coming from if you have a
01:18 - little text file that you can put on
01:19 - your server great but what if this is
01:21 - instead of one text file what if this is
01:24 - 1,000 or 100,000 or 1 million fun I need
01:30 - that like Austin Powers music 1 million
01:33 - text files you know it's going to be
01:36 - kind of unreasonable to expect the
01:38 - client side just your p5.js guests in
01:40 - the browser to sit there and churn
01:42 - through millions of text files for 10
01:44 - minutes a half an hour and then produce
01:46 - the result this is where server-side
01:49 - programming can come in and now the
01:53 - platform that I'm going to use for
01:54 - server-side programming is note is no
01:57 - dot J's of course they're a variety of
01:59 - ways you can approach server-side
02:01 - programming so okay so there's a lot of
02:03 - pieces to this so one thing that we've
02:05 - established is if you have a really
02:07 - large
02:08 - data set perhaps server-side programming
02:10 - is going to help you here's another
02:12 - thing what if you have users entering in
02:16 - their favorite words and you're there
02:19 - you have your mad libs application and
02:21 - they're entering words nouns adjectives
02:23 - to generate stories what if you want
02:27 - every time the user comes back to be
02:30 - able to see what they entered before or
02:31 - what if you want when a user comes comes
02:33 - to the page we'll see what everybody has
02:35 - entered this is also so large these are
02:38 - some reasons for server-side programming
02:39 - is large data set another one is
02:44 - persistence and I don't know how to
02:46 - spell that
02:47 - persistence meaning saving data and
02:50 - there's a variety of ways you can save
02:52 - data but with client-side JavaScript
02:54 - only while you can download data to that
02:56 - users local computer there's no way to
02:58 - save data across multiple sessions using
03:02 - a particular web application so this
03:04 - server is a place where if we could send
03:06 - data to the server it could be saved on
03:08 - the server in you know what's known as a
03:10 - database so these are some pieces to why
03:13 - you need server-side programming now
03:16 - here's another reason what if you want
03:20 - to expose everything your data or your
03:25 - algorithm or the thing you're working on
03:27 - to other users as an API this is another
03:32 - reason why you might want server-side
03:34 - programming and this is mostly what I'm
03:35 - going to focus on in this particular
03:37 - week 8 set of session 8 however I'm
03:41 - going to kind of look at all of these
03:42 - pieces by the time I get to the end of
03:44 - it but this idea of maybe you have a
03:47 - this wonderful spreadsheet of all of
03:50 - this information about flowers and you
03:53 - want to allow other people to make
03:54 - queries go to flower API comm slash
03:57 - chrysanthemum or flower API comm slash
04:01 - sunflower and receive JSON back with all
04:03 - this information about flowers this is
04:05 - something you're going to want
04:06 - server-side programming for as well and
04:08 - this is going to be the focus here it
04:11 - was one of the thing on my mind
04:13 - and I'm trying to kind of come up with
04:15 - it
04:17 - API persistent large dataset aha
04:21 - I thought of it I'm gonna say I'm gonna
04:25 - just say scraping but um and with
04:29 - persistence by the way could be kind of
04:31 - like user accounts and all that sort of
04:32 - stuff but I'm kind of staying away
04:34 - mostly from like traditional web
04:35 - development here and looking at kinds of
04:37 - creative applications of this stuff but
04:39 - I'm saying scraping because one thing
04:41 - you might have noticed is in p5.js if
04:43 - you try to do the bane of your existence
04:46 - might be this this is this thing called
04:48 - cores or you might see it as like xml
04:51 - httprequest
04:52 - error you might have tried to load image
04:55 - from some URL or load strings or load
04:57 - JSON you get this error I can't do it
04:59 - security cross-origin resources sharing
05:02 - not allowed inaccessible stopstopstop so
05:04 - there's a lot of times where the
05:07 - client-side for security very good
05:09 - security reasons is not allowed to reach
05:11 - to another server and request data but
05:13 - your server-side program is allowed to
05:16 - do that so your surfers from so for web
05:18 - scraping for example if you want to look
05:20 - at a webpage download all of its HTML
05:22 - parse it out pull out some things you
05:24 - want you can do that from server side
05:26 - and pass that to the client side so
05:28 - these are kind of four reasons why you
05:31 - might want to use server-side
05:33 - programming number three being make your
05:36 - own API this is where in many ways I
05:39 - want to start okay so what are the
05:43 - pieces of this the first thing that I
05:44 - want so I'm going to make a bunch of
05:46 - videos and then we'll eventually be here
05:49 - on YouTube for you to watch or I don't
05:51 - know what the platform of the future is
05:52 - when YouTube goes away but hopefully the
05:54 - videos will still exist
05:55 - number one I'm going to talk about what
05:58 - I have a bunch of videos that I will
06:00 - link to in this playlist of kind of what
06:02 - is node and what is NPM for node package
06:05 - manager so you need to install node and
06:07 - get up and running with something called
06:09 - NPM first and I already have the videos
06:11 - made for that which I will reference and
06:13 - link to somehow but here I'm going to
06:15 - start with a node package called Express
06:17 - which makes building a web server which
06:20 - is what you're going to need the score
06:21 - the web servers the thing that's going
06:23 - to pass information to but your client
06:25 - your p5.js sketch or somebody else is
06:27 - making an API query so we need to look
06:29 - at Express I want to look at saving data
06:32 - and I got like a secret
06:34 - you which is one of the easiest way I'm
06:36 - sure someone Gavin get struck by
06:37 - lightning for doing it this way but to
06:40 - add it a really easy way to have a
06:41 - database it's just save a JSON file say
06:43 - the text file to the hard drive of the
06:45 - computer and then load it every time the
06:47 - server run so I'm going to look at the
06:49 - simplest way you can have a database and
06:50 - then some other more complex ways maybe
06:52 - using a database system like couchdb or
06:54 - MongoDB and then something called
06:56 - firebase
06:56 - which is a Google product that allows
06:58 - you to just send them information they
07:00 - say before you can request it later I
07:02 - want to look at some point at scraping
07:04 - other web pages so how could you grab an
07:07 - image and then pass that to p5.js or an
07:09 - HTML page and pass that to p5.js there's
07:12 - a lot of topics here about making an API
07:14 - there's this thing called rest I don't
07:16 - even know what that is
07:17 - try to figure it out together there's
07:19 - the thing called cores cross-origin
07:21 - resource sharing which I think I dunno
07:23 - what it is and then I want to look at a
07:26 - bunch of different examples mostly
07:28 - around working with text to follow the
07:31 - theme of this course so what if you what
07:33 - if you had the sort of Big Data scenario
07:35 - where you need to load massive amounts
07:37 - of text and you want to pass to a user
07:39 - word counting it for you want to pass to
07:42 - make an API for word counting
07:43 - information so that's something that I
07:45 - look at as well as I want to build an
07:48 - API for sentiment analysis using this a
07:51 - fin 111 a list of words I'm gonna have a
07:54 - couple of examples that use that use a
07:58 - node package called node natural which
08:00 - is another text analysis natural
08:04 - language processing node package which
08:06 - has a lot of great features and I'll
08:07 - show you a couple of them here so I'm
08:10 - gonna get started in the first next
08:12 - video you know this isn't the order that
08:13 - I'm going to go and I'm really going to
08:15 - focus on working with Express setting up
08:18 - this idea of an API and then see if I
08:21 - can transition that into a simple
08:22 - sentiment analysis intimate analysis API
08:25 - and we will see how that goes okay see
08:29 - you next video

Cleaned transcript:

hello and welcome to session 8 of programming from A to Z in this session I want to talk about and look at more deeply how to build an API using nodes so this whole course has focused on working with text reading text analyzing text generating text and most of the stuff almost everything that I've shown you happens in clientside JavaScript so let's talk about a little bit just generally what the difference is so if you have a laptop that you're working on and it has a web browser in it you might be running your p5.js sketch right there in the browser itself so this is going to get you very far there is so much you can do with just this as we've seen now you can do word counting and Markov chains and all sorts of projects but there are some limitations here so for example let's just go back and think about word counting so one of the things we did is okay so you have some text document and you want to count how many times each word appears in that text document and visualize it in some way with your p5.js sketch this will work just fine all clientside unless and unless a couple of things one is where is this data coming from if you have a little text file that you can put on your server great but what if this is instead of one text file what if this is 1,000 or 100,000 or 1 million fun I need that like Austin Powers music 1 million text files you know it's going to be kind of unreasonable to expect the client side just your p5.js guests in the browser to sit there and churn through millions of text files for 10 minutes a half an hour and then produce the result this is where serverside programming can come in and now the platform that I'm going to use for serverside programming is note is no dot J's of course they're a variety of ways you can approach serverside programming so okay so there's a lot of pieces to this so one thing that we've established is if you have a really large data set perhaps serverside programming is going to help you here's another thing what if you have users entering in their favorite words and you're there you have your mad libs application and they're entering words nouns adjectives to generate stories what if you want every time the user comes back to be able to see what they entered before or what if you want when a user comes comes to the page we'll see what everybody has entered this is also so large these are some reasons for serverside programming is large data set another one is persistence and I don't know how to spell that persistence meaning saving data and there's a variety of ways you can save data but with clientside JavaScript only while you can download data to that users local computer there's no way to save data across multiple sessions using a particular web application so this server is a place where if we could send data to the server it could be saved on the server in you know what's known as a database so these are some pieces to why you need serverside programming now here's another reason what if you want to expose everything your data or your algorithm or the thing you're working on to other users as an API this is another reason why you might want serverside programming and this is mostly what I'm going to focus on in this particular week 8 set of session 8 however I'm going to kind of look at all of these pieces by the time I get to the end of it but this idea of maybe you have a this wonderful spreadsheet of all of this information about flowers and you want to allow other people to make queries go to flower API comm slash chrysanthemum or flower API comm slash sunflower and receive JSON back with all this information about flowers this is something you're going to want serverside programming for as well and this is going to be the focus here it was one of the thing on my mind and I'm trying to kind of come up with it API persistent large dataset aha I thought of it I'm gonna say I'm gonna just say scraping but um and with persistence by the way could be kind of like user accounts and all that sort of stuff but I'm kind of staying away mostly from like traditional web development here and looking at kinds of creative applications of this stuff but I'm saying scraping because one thing you might have noticed is in p5.js if you try to do the bane of your existence might be this this is this thing called cores or you might see it as like xml httprequest error you might have tried to load image from some URL or load strings or load JSON you get this error I can't do it security crossorigin resources sharing not allowed inaccessible stopstopstop so there's a lot of times where the clientside for security very good security reasons is not allowed to reach to another server and request data but your serverside program is allowed to do that so your surfers from so for web scraping for example if you want to look at a webpage download all of its HTML parse it out pull out some things you want you can do that from server side and pass that to the client side so these are kind of four reasons why you might want to use serverside programming number three being make your own API this is where in many ways I want to start okay so what are the pieces of this the first thing that I want so I'm going to make a bunch of videos and then we'll eventually be here on YouTube for you to watch or I don't know what the platform of the future is when YouTube goes away but hopefully the videos will still exist number one I'm going to talk about what I have a bunch of videos that I will link to in this playlist of kind of what is node and what is NPM for node package manager so you need to install node and get up and running with something called NPM first and I already have the videos made for that which I will reference and link to somehow but here I'm going to start with a node package called Express which makes building a web server which is what you're going to need the score the web servers the thing that's going to pass information to but your client your p5.js sketch or somebody else is making an API query so we need to look at Express I want to look at saving data and I got like a secret you which is one of the easiest way I'm sure someone Gavin get struck by lightning for doing it this way but to add it a really easy way to have a database it's just save a JSON file say the text file to the hard drive of the computer and then load it every time the server run so I'm going to look at the simplest way you can have a database and then some other more complex ways maybe using a database system like couchdb or MongoDB and then something called firebase which is a Google product that allows you to just send them information they say before you can request it later I want to look at some point at scraping other web pages so how could you grab an image and then pass that to p5.js or an HTML page and pass that to p5.js there's a lot of topics here about making an API there's this thing called rest I don't even know what that is try to figure it out together there's the thing called cores crossorigin resource sharing which I think I dunno what it is and then I want to look at a bunch of different examples mostly around working with text to follow the theme of this course so what if you what if you had the sort of Big Data scenario where you need to load massive amounts of text and you want to pass to a user word counting it for you want to pass to make an API for word counting information so that's something that I look at as well as I want to build an API for sentiment analysis using this a fin 111 a list of words I'm gonna have a couple of examples that use that use a node package called node natural which is another text analysis natural language processing node package which has a lot of great features and I'll show you a couple of them here so I'm gonna get started in the first next video you know this isn't the order that I'm going to go and I'm really going to focus on working with Express setting up this idea of an API and then see if I can transition that into a simple sentiment analysis intimate analysis API and we will see how that goes okay see you next video
