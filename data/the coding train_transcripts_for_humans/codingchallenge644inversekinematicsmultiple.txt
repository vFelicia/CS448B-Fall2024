With timestamps:

00:01 - okay I'm back this is my friend the
00:05 - tentacle uh it's a quite a nice friendly
00:08 - tentacle I feel like you hopefully could
00:10 - make something where the tentacle is a
00:12 - bit more colorful maybe it has some cute
00:14 - eyes and it smiles and it reaches for an
00:17 - apple and then hands it to somebody else
00:19 - cuz somebody else could use an apple and
00:21 - then they're going to be happy you go
00:23 - and do all that stuff what I'm going to
00:24 - do in this video is I want to take all
00:26 - this gobbledygook uh all this code that
00:29 - is in the main program here and I want
00:31 - to put it in an object and I kind of did
00:32 - this before I want to put it in an
00:34 - object in order to um why do I want to
00:38 - do this ah because I want to make more
00:40 - than one of these tentacle things so
00:41 - right now I have this organizational
00:43 - structure where there's a segment and a
00:45 - segment is one piece of a tentacle the
00:48 - tentacle is an array of segments so I
00:50 - actually want to make a tentacle object
00:52 - which has that array so what I'm going
00:53 - to do is I'm going to make a new tab I'm
00:55 - going to call it
00:56 - tentacle and this is going to be the
00:58 - easy part I'm going to say class
01:00 - tentacle boy I'm having like a crazy
01:02 - Deja Vu here and what I'm going to do is
01:04 - I'm say ah what is a tentacle it needs
01:05 - these three things it needs an array it
01:09 - needs a base and it needs a length for
01:10 - the segments and obviously you can vary
01:12 - that to your heart's content I'm going
01:14 - to take all of this stuff and put this
01:16 - in the Constructor for this object for
01:19 - this class
01:20 - whoops so now when I make it I create
01:24 - all this stuff and ah this is going to
01:26 - be really good because what I'm going to
01:28 - do is I'm going to when I make the
01:30 - Constructor I'm going to be able to set
01:33 - its base I don't know why I'm putting
01:34 - this first but so the idea is the
01:36 - tentacles are all the same now I could
01:38 - give it more this you should do right I
01:39 - should give the I'm going to make a
01:41 - tentacle and say how many segments the
01:43 - length of the segments your color I
01:44 - could I could vary it in a lot of ways
01:46 - but I'm going to keep things simple here
01:48 - then what I'm going to do is I'm going
01:50 - to look at all this code and I'm pretty
01:51 - sure basically everything is kind of can
01:53 - go in an update
01:54 - function so I'm just putting everything
01:57 - I could separate out some of this logic
01:59 - but I'm doing the thing where I have it
02:00 - follow the mouse and then I have it um
02:04 - what do I have it do after that I uh
02:07 - then I update all its locations then I
02:09 - like set it backwards to its base I do
02:11 - all that and then I'm going to write a
02:14 - function and I'm going to call
02:16 - it show and it just iterates through the
02:19 - array and show this is a place where I
02:22 - could use an enhanced Loop people like
02:24 - it when I discuss different kinds of
02:26 - Loops so I'm going to say tentacle T in
02:29 - tentacle and I kind of want to call this
02:32 - segments because I think it's a little
02:34 - confusing to call that tentacle so I'm
02:35 - going to change that also I'm gonna try
02:37 - something kind of crazy uh and I'm gonna
02:40 - say t doow okay let's just see if this
02:43 - works well whoops uh what did I do here
02:48 - I think I messed something up oh this is
02:51 - a segment see this is why it's so
02:53 - confusing I've got to be really clear
02:56 - about this right every segment s this is
02:58 - why I want to change so I'm going to run
03:00 - this and now I'm going to refactor this
03:02 - in a second I'm going to show you
03:03 - something kind of cool that I think you
03:04 - can do in processing now so I'm going to
03:06 - now make a
03:08 - tentacle tentacle T I really should have
03:11 - thought of something besides tentacle
03:13 - tentacle I'm going to give it a base
03:16 - width divided by two height then I'm
03:18 - just going to say uh t.
03:21 - update and t. show and
03:25 - now I have a single one of this is just
03:28 - the same exact code but I have now
03:30 - refactored it so this tentacle lives um
03:33 - somewhere else it lives in um it all the
03:36 - code lives inside an object now what did
03:38 - I want to show you here's the thing I
03:40 - really don't like that I re name this
03:41 - tentacle it's causing me to be confused
03:44 - because it's an array of segments I
03:45 - think I should just call it segments um
03:47 - so one thing I can do is I can go here
03:49 - and I can do rename look at that rename
03:52 - now obviously I could just click on this
03:54 - and type a new name but what the rename
03:56 - tool in processing does is it finds all
03:59 - the other places use that variable it's
04:01 - not a finding replace of the word it
04:03 - actually is able to look to where the
04:04 - variable is being used so in a comment
04:06 - it wouldn't change so let's hope this
04:14 - works re name I've never actually used
04:17 - this
04:22 - segments oh my
04:25 - God I don't have my D sound effect okay
04:27 - that's really exciting that worked that
04:29 - is brilliant I love that that makes me
04:30 - so happy okay so now I've renamed it I
04:33 - feel like this is a bit easier to follow
04:36 - okay so great goodbye no there's more um
04:39 - what I want to do now is I don't know
04:41 - what I want to do exactly but let's try
04:43 - I don't know what's going to be
04:45 - interesting kind of want to put them in
04:47 - a pattern what if I put them all around
04:50 - the edges of a a circle that's kind of
04:54 - crazy so what if I made an array
04:57 - list of tentacle objects
05:02 - do I really have to call this tentacles
05:04 - I think I
05:05 - do and tentacles is a new array list of
05:11 - tentacle and I am not going to add
05:13 - anything right now or do anything I'm
05:15 - going to comment this out so what I want
05:17 - to do is I want to say four I'm going to
05:20 - use I'm G I'm going to make a little
05:22 - circle a equals 0 a is less than uh 2 pi
05:27 - A+ equals uh 2
05:31 - pi let's let's let's see let's the how
05:34 - what's our change in angle is 2 pi
05:38 - divide let's have 10 of them divided by
05:40 - 10 this is like a weird idea that I'm
05:41 - doing no idea if this is going to be any
05:43 - good you're going to have a much more
05:44 - creative idea of how why you want to do
05:45 - this um and then I'm going to say give
05:48 - me an X give me an x and x is the center
05:52 - of the screen plus cosine of that angle
05:55 - times 100 so I'm just going to place all
05:57 - these points around a circle
06:00 - and a y is the center of the screen plus
06:04 - sign of the angle a height divided by
06:06 - two and then what I'm going to do is I'm
06:08 - going to say tentacles push a new
06:12 - tentacle at X comma y so I just use
06:15 - again that same polar to cartisian thing
06:17 - to get all the points around a circle
06:18 - I'm using that pearly noise and polar to
06:20 - cartisian I need little that's all I
06:21 - ever do I guess basically and it's not
06:23 - push because that's JavaScript with an
06:25 - array list it's add and then now I can
06:28 - go down here and I can say for every
06:31 - tentacle te in
06:33 - tentacles and I can get my update and
06:37 - show whoops update and
06:40 - showback and I can run this and you can
06:42 - see whoa look at this so I got all these
06:44 - tentacles starting and they're all
06:46 - following the mouse now this is kind of
06:48 - interesting I think there's probably a
06:50 - lot of possible ways you could expand on
06:53 - this um one idea I have first of all is
06:56 - to not have them follow the mouse
07:00 - I could have them follow a plin noise
07:02 - moving thing I could oscillate their end
07:04 - points really what I probably would want
07:06 - to do is give them each their own thing
07:08 - to follow that's kind of around the
07:10 - edges depending on what side they are I
07:12 - think I might want to stop here now I
07:13 - kind of this is uh um but I do think
07:17 - it's worth kind of noting actually what
07:19 - we could do is um and and actually I
07:22 - think this might be more interesting if
07:24 - the tentacles themselves were not so
07:27 - long um so I'm going to make them
07:29 - actually only have 10
07:30 - segments right and that's they're still
07:33 - quite they're still quite good uh I
07:36 - don't know what this this looks like
07:37 - something I I kind of want also them to
07:40 - uh maybe be further
07:43 - apart right so you can see this I don't
07:46 - know what I've done here I almost want
07:48 - now I also want to draw I don't know
07:49 - what I'm making I want to draw an
07:51 - ellipse just want to be able to see the
07:53 - sort of
07:55 - circle which is 400 by 400 so oh and
07:59 - I've I guess I better say no fill
08:01 - there's probably and there's probably a
08:02 - clever way I could constrain them so you
08:04 - can see what I'm doing here you could
08:05 - imagine this is the beginnings of the
08:07 - design of some creature now since
08:09 - they're all pointing towards the mouse
08:10 - you're getting a very uh kind of
08:13 - specific thing it looks kind of like a
08:14 - spiderweb kind of like noodles um but
08:17 - one thing since we said robot arm let's
08:19 - get them to try to pick up something and
08:22 - I want to make it appear a bit more um
08:25 - obvious what I'm doing so I'm going to
08:27 - make the length of these 50 and I'm
08:29 - going to give them just four segments um
08:31 - so now you can see they're much more
08:33 - robot arm like and actually I just I
08:35 - don't know what I'm doing exactly but I
08:36 - just want to have five of them let's try
08:38 - that okay and maybe I'll let them even
08:41 - be a little bit longer like what if I
08:43 - give them I'm losing my mind here
08:46 - because there's really no point to what
08:47 - I'm doing okay so what I want to do is
08:50 - I'm going to create I'm going to just
08:52 - say let's make let's make a particle and
08:55 - I should really make this an object but
08:57 - I'm just going to give it a position
09:01 - and position equals new P Vector
09:04 - uh P Vector um I'm going to just start
09:07 - it in the I'm going to start it at 0 0
09:11 - and I'm also going to make a
09:13 - velocity and I'm going to say velocity
09:15 - is a new P Vector which points but you
09:18 - know two comma 1.3 just to give it
09:20 - something arbitrary and I'm going to say
09:23 - now position. add velocity and I'm going
09:27 - to um
09:30 - uh position. add velocity and I'm going
09:31 - to draw a little circle at position
09:34 - dox this is going to be the Apple
09:36 - position dox position doy 16
09:41 - imagine this I guess I could make it
09:43 - kind of green a green apple would it be
09:44 - like I don't know is that a color of an
09:46 - apple um so I'm going to do this you can
09:48 - see there's my apple and I'm going to
09:50 - say no stroke and I'm going to make it a
09:53 - little bit bigger and there's the Apple
09:55 - you can see it moving along so what I
09:57 - want to do now is have these arms fall
09:59 - follow the apple and I I feel like the
10:00 - Apple should I want to give it gravity
10:02 - and have it bounce around oh there's so
10:04 - much stuff that I want to do that I'm
10:05 - not going to do but I will I will um
10:07 - have it move a little bit faster so now
10:09 - what I need to do is just say okay if uh
10:12 - position dox is greater than WID or
10:15 - positionx is less than zero we're just
10:17 - going to make it bounce velocity dox
10:19 - multiply it by negative 1 and then we'll
10:22 - do the same thing with why because uh
10:25 - because why not um and then we will
10:27 - we're going to add gravity to this
10:28 - because we have to um so now we can see
10:31 - there's the Apple it's moving very
10:33 - slowly Let's uh increase its velocity by
10:37 - three times so you can see so let's see
10:40 - it should move it should bounce oh oh
10:42 - what did I have I have a mistake ah
10:44 - greater than height uh it didn't bounce
10:46 - off the bottom so let's see if that
10:47 - Apple it's going to head towards the
10:48 - bottom it's going to bounce around so
10:50 - why am I doing this is because now I can
10:52 - have my tentacles
10:56 - follow that
10:58 - particle so you can see they're all
11:00 - trying to kind of grab it and I don't
11:02 - know whether they're throwing it or
11:03 - passing it or whatever but you can kind
11:05 - of see what's going on I feel like it's
11:07 - sort of the positioning of it is kind of
11:09 - weird I think it actually this would be
11:10 - more interesting if they were positioned
11:11 - all along the edges and also if the ball
11:14 - did something a little bit more
11:15 - interesting like if it um actually had
11:18 - some a force like uh gravity and if I
11:23 - said uh
11:25 - gravity uh is a new P Vector that points
11:29 - you know down by some amount and then
11:32 - the
11:34 - velocity always changes by the gravity
11:37 - and then also I should
11:40 - probably this is going to cause a
11:42 - problem I should also say if pause. Y is
11:44 - greater than height this is a little
11:46 - thing that I'm going just scooch it back
11:48 - onto the screen because it kind of get
11:50 - stuck
11:51 - um I don't see the gravity happening
11:54 - here why not or is it just so weak yeah
11:57 - it's I think it's there it's also we
11:58 - don't need the um we don't need to
12:00 - actually check it up if there's gravity
12:02 - I don't need to check the top anymore so
12:04 - this is why this is what I meant to do I
12:06 - can just scooch it back
12:07 - on when it hits the
12:11 - bottom so uh come back so you can see
12:16 - it's bouncing and I could add some
12:17 - dampening let's add some dampening I'm
12:19 - really off in like physics land here for
12:21 - no good reason you everyone's probably
12:23 - stopped watching this video by now no
12:25 - one's going to see my end screen oh
12:26 - that's so much dampening um
12:29 - so I can add a little dampening so it
12:31 - kind of like slows and you know what
12:32 - would make sense is only have the
12:34 - dampening happen when it hits the bottom
12:36 - so maybe that would make more sense okay
12:38 - so you get the idea but oh yeah and um
12:41 - probably apples in the chat there's
12:43 - actually a person named probably apples
12:45 - in the chat says I might be
12:48 - wrong I yeah I don't just spitballing
12:51 - here who knows I mean just might be
12:53 - wrong but I don't think this is probably
12:55 - Apple's voice it's my voice but probably
12:58 - apples don't bounce around like that and
13:00 - I think that's a very good point so uh I
13:03 - I almost feel like this will be more
13:05 - interesting to watch if there were only
13:07 - two of them and if they were further
13:10 - apart so hold on just bear with me for a
13:11 - second what I'm going to do is where do
13:14 - I make the tentacles I'm going to have
13:15 - just two of them and I'm going to make
13:17 - this 300 this is silly because there's
13:20 - no point in a circle yeah so look at
13:22 - this now it looks like they're playing
13:24 - uh
13:27 - catch uh which they aren't but it's kind
13:29 - of
13:30 - interesting um so there you go here is
13:33 - my inverse kinematics robot arms playing
13:36 - catch with an apple on the coding train
13:40 - I really want to say a special thank you
13:41 - again to Keith Peters and coding math um
13:45 - these examples are are really
13:47 - essentially exactly the same as the
13:50 - examples that are right here and you
13:52 - know what I'm realizing I better show
13:53 - this one because I think I'm getting
13:55 - this idea I I know I'm getting this idea
13:57 - from exactly this so this is Keith
13:59 - Peter's example that is in the
14:00 - processing I didn't I my code is quite
14:03 - different because mine is an object in
14:05 - objectoriented fashion but this is there
14:07 - and you can see there's some variations
14:08 - um in terms of segments uh and how
14:11 - they're working so um um uh there's
14:14 - great suggestion to the chat I could do
14:16 - things about constraining the angles I
14:18 - could make them not interceptable
14:20 - there's lots of things I could expand
14:21 - this I could think about design um
14:23 - there's so many possible things that I
14:25 - could do to expand this but so thank you
14:28 - check out the coding math Channel if you
14:29 - want to see somebody who knows what
14:30 - they're doing about math and coding
14:33 - that's a channel you should watch great
14:35 - examples great inspiration and you can
14:37 - see here um we have our robot arms
14:39 - playing catch thanks very much and I'll
14:41 - see you in a future episode of the
14:44 - coding
14:50 - [Music]
14:57 - train

Cleaned transcript:

okay I'm back this is my friend the tentacle uh it's a quite a nice friendly tentacle I feel like you hopefully could make something where the tentacle is a bit more colorful maybe it has some cute eyes and it smiles and it reaches for an apple and then hands it to somebody else cuz somebody else could use an apple and then they're going to be happy you go and do all that stuff what I'm going to do in this video is I want to take all this gobbledygook uh all this code that is in the main program here and I want to put it in an object and I kind of did this before I want to put it in an object in order to um why do I want to do this ah because I want to make more than one of these tentacle things so right now I have this organizational structure where there's a segment and a segment is one piece of a tentacle the tentacle is an array of segments so I actually want to make a tentacle object which has that array so what I'm going to do is I'm going to make a new tab I'm going to call it tentacle and this is going to be the easy part I'm going to say class tentacle boy I'm having like a crazy Deja Vu here and what I'm going to do is I'm say ah what is a tentacle it needs these three things it needs an array it needs a base and it needs a length for the segments and obviously you can vary that to your heart's content I'm going to take all of this stuff and put this in the Constructor for this object for this class whoops so now when I make it I create all this stuff and ah this is going to be really good because what I'm going to do is I'm going to when I make the Constructor I'm going to be able to set its base I don't know why I'm putting this first but so the idea is the tentacles are all the same now I could give it more this you should do right I should give the I'm going to make a tentacle and say how many segments the length of the segments your color I could I could vary it in a lot of ways but I'm going to keep things simple here then what I'm going to do is I'm going to look at all this code and I'm pretty sure basically everything is kind of can go in an update function so I'm just putting everything I could separate out some of this logic but I'm doing the thing where I have it follow the mouse and then I have it um what do I have it do after that I uh then I update all its locations then I like set it backwards to its base I do all that and then I'm going to write a function and I'm going to call it show and it just iterates through the array and show this is a place where I could use an enhanced Loop people like it when I discuss different kinds of Loops so I'm going to say tentacle T in tentacle and I kind of want to call this segments because I think it's a little confusing to call that tentacle so I'm going to change that also I'm gonna try something kind of crazy uh and I'm gonna say t doow okay let's just see if this works well whoops uh what did I do here I think I messed something up oh this is a segment see this is why it's so confusing I've got to be really clear about this right every segment s this is why I want to change so I'm going to run this and now I'm going to refactor this in a second I'm going to show you something kind of cool that I think you can do in processing now so I'm going to now make a tentacle tentacle T I really should have thought of something besides tentacle tentacle I'm going to give it a base width divided by two height then I'm just going to say uh t. update and t. show and now I have a single one of this is just the same exact code but I have now refactored it so this tentacle lives um somewhere else it lives in um it all the code lives inside an object now what did I want to show you here's the thing I really don't like that I re name this tentacle it's causing me to be confused because it's an array of segments I think I should just call it segments um so one thing I can do is I can go here and I can do rename look at that rename now obviously I could just click on this and type a new name but what the rename tool in processing does is it finds all the other places use that variable it's not a finding replace of the word it actually is able to look to where the variable is being used so in a comment it wouldn't change so let's hope this works re name I've never actually used this segments oh my God I don't have my D sound effect okay that's really exciting that worked that is brilliant I love that that makes me so happy okay so now I've renamed it I feel like this is a bit easier to follow okay so great goodbye no there's more um what I want to do now is I don't know what I want to do exactly but let's try I don't know what's going to be interesting kind of want to put them in a pattern what if I put them all around the edges of a a circle that's kind of crazy so what if I made an array list of tentacle objects do I really have to call this tentacles I think I do and tentacles is a new array list of tentacle and I am not going to add anything right now or do anything I'm going to comment this out so what I want to do is I want to say four I'm going to use I'm G I'm going to make a little circle a equals 0 a is less than uh 2 pi A+ equals uh 2 pi let's let's let's see let's the how what's our change in angle is 2 pi divide let's have 10 of them divided by 10 this is like a weird idea that I'm doing no idea if this is going to be any good you're going to have a much more creative idea of how why you want to do this um and then I'm going to say give me an X give me an x and x is the center of the screen plus cosine of that angle times 100 so I'm just going to place all these points around a circle and a y is the center of the screen plus sign of the angle a height divided by two and then what I'm going to do is I'm going to say tentacles push a new tentacle at X comma y so I just use again that same polar to cartisian thing to get all the points around a circle I'm using that pearly noise and polar to cartisian I need little that's all I ever do I guess basically and it's not push because that's JavaScript with an array list it's add and then now I can go down here and I can say for every tentacle te in tentacles and I can get my update and show whoops update and showback and I can run this and you can see whoa look at this so I got all these tentacles starting and they're all following the mouse now this is kind of interesting I think there's probably a lot of possible ways you could expand on this um one idea I have first of all is to not have them follow the mouse I could have them follow a plin noise moving thing I could oscillate their end points really what I probably would want to do is give them each their own thing to follow that's kind of around the edges depending on what side they are I think I might want to stop here now I kind of this is uh um but I do think it's worth kind of noting actually what we could do is um and and actually I think this might be more interesting if the tentacles themselves were not so long um so I'm going to make them actually only have 10 segments right and that's they're still quite they're still quite good uh I don't know what this this looks like something I I kind of want also them to uh maybe be further apart right so you can see this I don't know what I've done here I almost want now I also want to draw I don't know what I'm making I want to draw an ellipse just want to be able to see the sort of circle which is 400 by 400 so oh and I've I guess I better say no fill there's probably and there's probably a clever way I could constrain them so you can see what I'm doing here you could imagine this is the beginnings of the design of some creature now since they're all pointing towards the mouse you're getting a very uh kind of specific thing it looks kind of like a spiderweb kind of like noodles um but one thing since we said robot arm let's get them to try to pick up something and I want to make it appear a bit more um obvious what I'm doing so I'm going to make the length of these 50 and I'm going to give them just four segments um so now you can see they're much more robot arm like and actually I just I don't know what I'm doing exactly but I just want to have five of them let's try that okay and maybe I'll let them even be a little bit longer like what if I give them I'm losing my mind here because there's really no point to what I'm doing okay so what I want to do is I'm going to create I'm going to just say let's make let's make a particle and I should really make this an object but I'm just going to give it a position and position equals new P Vector uh P Vector um I'm going to just start it in the I'm going to start it at 0 0 and I'm also going to make a velocity and I'm going to say velocity is a new P Vector which points but you know two comma 1.3 just to give it something arbitrary and I'm going to say now position. add velocity and I'm going to um uh position. add velocity and I'm going to draw a little circle at position dox this is going to be the Apple position dox position doy 16 imagine this I guess I could make it kind of green a green apple would it be like I don't know is that a color of an apple um so I'm going to do this you can see there's my apple and I'm going to say no stroke and I'm going to make it a little bit bigger and there's the Apple you can see it moving along so what I want to do now is have these arms fall follow the apple and I I feel like the Apple should I want to give it gravity and have it bounce around oh there's so much stuff that I want to do that I'm not going to do but I will I will um have it move a little bit faster so now what I need to do is just say okay if uh position dox is greater than WID or positionx is less than zero we're just going to make it bounce velocity dox multiply it by negative 1 and then we'll do the same thing with why because uh because why not um and then we will we're going to add gravity to this because we have to um so now we can see there's the Apple it's moving very slowly Let's uh increase its velocity by three times so you can see so let's see it should move it should bounce oh oh what did I have I have a mistake ah greater than height uh it didn't bounce off the bottom so let's see if that Apple it's going to head towards the bottom it's going to bounce around so why am I doing this is because now I can have my tentacles follow that particle so you can see they're all trying to kind of grab it and I don't know whether they're throwing it or passing it or whatever but you can kind of see what's going on I feel like it's sort of the positioning of it is kind of weird I think it actually this would be more interesting if they were positioned all along the edges and also if the ball did something a little bit more interesting like if it um actually had some a force like uh gravity and if I said uh gravity uh is a new P Vector that points you know down by some amount and then the velocity always changes by the gravity and then also I should probably this is going to cause a problem I should also say if pause. Y is greater than height this is a little thing that I'm going just scooch it back onto the screen because it kind of get stuck um I don't see the gravity happening here why not or is it just so weak yeah it's I think it's there it's also we don't need the um we don't need to actually check it up if there's gravity I don't need to check the top anymore so this is why this is what I meant to do I can just scooch it back on when it hits the bottom so uh come back so you can see it's bouncing and I could add some dampening let's add some dampening I'm really off in like physics land here for no good reason you everyone's probably stopped watching this video by now no one's going to see my end screen oh that's so much dampening um so I can add a little dampening so it kind of like slows and you know what would make sense is only have the dampening happen when it hits the bottom so maybe that would make more sense okay so you get the idea but oh yeah and um probably apples in the chat there's actually a person named probably apples in the chat says I might be wrong I yeah I don't just spitballing here who knows I mean just might be wrong but I don't think this is probably Apple's voice it's my voice but probably apples don't bounce around like that and I think that's a very good point so uh I I almost feel like this will be more interesting to watch if there were only two of them and if they were further apart so hold on just bear with me for a second what I'm going to do is where do I make the tentacles I'm going to have just two of them and I'm going to make this 300 this is silly because there's no point in a circle yeah so look at this now it looks like they're playing uh catch uh which they aren't but it's kind of interesting um so there you go here is my inverse kinematics robot arms playing catch with an apple on the coding train I really want to say a special thank you again to Keith Peters and coding math um these examples are are really essentially exactly the same as the examples that are right here and you know what I'm realizing I better show this one because I think I'm getting this idea I I know I'm getting this idea from exactly this so this is Keith Peter's example that is in the processing I didn't I my code is quite different because mine is an object in objectoriented fashion but this is there and you can see there's some variations um in terms of segments uh and how they're working so um um uh there's great suggestion to the chat I could do things about constraining the angles I could make them not interceptable there's lots of things I could expand this I could think about design um there's so many possible things that I could do to expand this but so thank you check out the coding math Channel if you want to see somebody who knows what they're doing about math and coding that's a channel you should watch great examples great inspiration and you can see here um we have our robot arms playing catch thanks very much and I'll see you in a future episode of the coding train
