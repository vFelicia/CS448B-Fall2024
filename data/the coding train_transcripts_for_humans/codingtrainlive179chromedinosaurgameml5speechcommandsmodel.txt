With timestamps:

00:01 - [Music]
00:06 - [Applause]
00:11 - [Music]
02:20 - [Applause]
02:22 - [Music]
03:14 - [Music]
04:13 - hello I'm back it's been a while
04:16 - welcome back to the coding train this is
04:22 - not a good start for today but the
04:24 - reason why I don't have my train whistle
04:25 - although I brought everything back to
04:28 - the studio here is because I was at this
04:31 - wonderful event called the IO Festival
04:33 - in Minneapolis um it's one of the
04:35 - reasons why I haven't livestream for a
04:37 - while there I actually did a 45-minute
04:40 - live coding demo in a theater in front
04:42 - of a hundred plus people it was recorded
04:46 - you can hear me um it was recorded and
04:49 - that video will come out later this
04:51 - summer I'm kind of really excited for
04:53 - the video to come out and also to a
04:56 - bunch of the different tools and
04:58 - techniques that I used in that demo I'm
05:00 - going to start using on this channel as
05:02 - well today is something of a let me just
05:07 - get back in the saddle a little bit I
05:09 - feel out of sorts I haven't livestream
05:12 - for I was actually kind of nervous this
05:14 - morning as I was kind of getting my
05:15 - stuff together and trying to get into
05:17 - work today to New York University where
05:20 - I have my day job it is summer and the
05:24 - good thing about summer is it opens up
05:25 - some more time for me to be experimental
05:28 - with new ideas and new topics and in
05:31 - theory more live streaming but that
05:33 - hasn't come to fruition yet but I did
05:36 - make some notes about some things that I
05:38 - wanted to talk about here today and then
05:42 - I'm going for assignment is writing in
05:46 - the chat the first time in 29 days Wow
05:50 - well so I didn't that's good so it's
05:53 - been less than a month um a lot of new
05:56 - content has come out on the channel
05:57 - since I last livestream so I wanted men
05:59 - to that but before I move on I just want
06:00 - to quickly give a shout-out and a thank
06:03 - you to today's livestream sponsor
06:05 - brilliant org if you have never been to
06:08 - the brilliant website before it is a
06:10 - website full of daily puzzles and
06:12 - challenges and courses math and science
06:15 - and in particular they have a lot of new
06:17 - content around computer programming and
06:19 - computer science so you can sign up at
06:22 - brilliant org slash coding train that
06:24 - lets them know you found it from here it
06:25 - helps me out a little bit and it's free
06:28 - to sign up and then they also have a
06:30 - premium a premium service with that
06:33 - unlocks all the content on the website
06:35 - and the first 200 subscribers who sign
06:37 - up through that URL will get 20% off so
06:39 - I'm going to come back in about an hour
06:40 - in the middle of this livestream and
06:42 - pick one of the daily challenges to
06:44 - solve with you or by myself I don't know
06:48 - are we together it's very confusing I
06:50 - feel like I'm with you but all you are
06:52 - to me is this little round glass lens
06:55 - that I can stare straight into longingly
06:58 - wanting to meet you in person although
07:00 - many of you I did meet in fact I did
07:02 - meet a bunch of at the i/o festival deep
07:04 - breath so um I'll come back and talk
07:08 - more about brilliant thanks so much this
07:10 - has really opened up a lot of
07:11 - possibilities for things that I can do
07:12 - with this coding train thing thank you
07:14 - to brilliant again and let's see oh okay
07:20 - so that's why I didn't have the train
07:21 - whistle because I brought my train
07:23 - whistle with me to Minneapolis to the IO
07:26 - fest of hope I didn't leave it there but
07:30 - I apparently I left it in my apartment
07:32 - because I brought a giant bag all this
07:36 - stuff back with me
07:37 - I brought my ukulele I brought this bag
07:41 - look I even have like a youtube branded
07:44 - bag that I carry around with me now I
07:47 - brought my random numbers book
07:49 - everything no just no no no train was
07:59 - off but I do have a bell
08:01 - that'll get us somewhere alright what
08:03 - else do I want to talk about here could
08:06 - wear my IO badge other things look I
08:11 - just want to point out that the IO
08:13 - festival really knows me really well
08:15 - when I arrived a little thank-you or
08:17 - welcome note was in my hotel has a lot
08:21 - of nice information in it so we're gonna
08:28 - ease back into things today I'm gonna do
08:29 - a pretty beginner friendly example I'm
08:31 - gonna go old-school coding train and
08:34 - back into a simple game coding challenge
08:36 - and do the Google Chrome dinosaur game
08:43 - but let me let me talk about some things
08:45 - I have here on my list all right most
08:48 - importantly perhaps I want to tell you
08:51 - about something and actually I'm gonna
08:53 - just play a video for you I have to
08:55 - change the sound settings so that you
08:58 - hear them I think if I go to multi
08:59 - output device you're gonna hear the
09:01 - sound now open up the browser so if you
09:07 - this is actually still unlisted I should
09:10 - make the playlist listed this is a new
09:13 - series that now has 20 videos in it I
09:18 - would say half of those videos are
09:20 - publicly listed under the channel
09:22 - homepage so if I go to youtube.com slash
09:25 - the coding train you can see a lot of my
09:29 - recent uploads have been these videos
09:32 - 2.7 3.1 API calls project wrap-up
09:36 - accessibility design I am releasing a
09:39 - new series of course if you will it's 20
09:42 - videos long about working with data and
09:44 - API is in particular with native
09:47 - JavaScript with some new JavaScript
09:49 - libraries and server-side in note yes so
09:52 - this to me is really a follow up of you
09:55 - know your first learn to program so if
09:58 - you've learned if you're learning to
09:59 - program with JavaScript client-side p5
10:02 - yes this is by the way where you should
10:04 - point people you know there's lots of
10:06 - other resources on the internet also but
10:08 - if you're looking to pull
10:10 - new beginner programmers to something on
10:12 - the coding train this is what you want
10:14 - to point them to code program with p5.js
10:16 - that's the complete beginner series now
10:18 - I have an intermediate series that kind
10:20 - of goes to the next level does some
10:22 - stuff without p5 a lot it's actually
10:24 - almost all without p5 and so actually I
10:27 - could keep explaining it to you but
10:29 - there's a little nice trailer or 2
10:31 - minute introduction video that is
10:33 - unlisted with no thumbnail that's the
10:35 - YouTube automated thumbnail and I'm just
10:37 - gonna play this for you now and then I
10:39 - have a hello and welcome to a new course
10:42 - on the kodi train called working with
10:43 - data and api's in javascript so this I
10:46 - imagine as a wonderful next step for you
10:48 - are you a beginner programmer did you
10:50 - maybe just not live baby by watching my
10:53 - live code programming with p5 Jesper
10:55 - oculars recorded damn this is a place
10:57 - for you to take a next step around
10:59 - working with data I'm gonna look at
11:02 - tabular data CSV what's a CSV JSON data
11:05 - what's JSON but all of that is really
11:08 - just the warm-up the opening act for the
11:09 - main event the main attraction what
11:11 - you're really here to see which is
11:13 - server-side programs it's notice here if
11:15 - you've only ever done p5.js or other
11:17 - types of client-side JavaScript
11:18 - programming you're missing a big piece
11:20 - of the puzzle in terms of the kinds of
11:22 - web applications that you can build all
11:23 - the material for this course is broken
11:25 - down into three modules the first module
11:27 - is just some client-side JavaScript
11:28 - basics some native JavaScript building
11:30 - blocks for what I'm going to do in
11:33 - modules 2 & 3 and there I'm gonna build
11:35 - full stack web applications both the two
11:38 - projects I'm gonna make one is called
11:40 - the data selphie app and the other one
11:41 - is called the weather here they're both
11:43 - based on projects by Joey Lee who
11:46 - developed these sample projects as part
11:47 - of his teaching at ITP
11:49 - and of course called Kwan humanists so
11:51 - I'm gonna go from start to finish to
11:52 - build two web applications for you and
11:54 - hopefully you'll be able to build on
11:56 - what I make and create your own web
11:58 - applications if you happen to make a
12:00 - project your own creative project you
12:02 - can go to the coding train com where
12:04 - there's a page for the course and you'll
12:05 - be able to share links to the projects
12:07 - you make there before I get started with
12:08 - module one there's one more introductory
12:10 - video that will come next that's just
12:12 - going to go over what do you need to
12:13 - have installed in your computer what
12:15 - kind of tools do you need what kind of
12:16 - prerequisite knowledge you need to have
12:17 - before you get started with the video so
12:19 - take a look at that and hope you enjoyed
12:20 - this ride on the coding train were you
12:23 - data and API is in JavaScript
12:29 - [Music]
12:32 - so one of the reasons why I wanted to
12:34 - highlight this this morning is one I'm
12:36 - hoping that this this was done in a very
12:38 - different way almost all of this content
12:41 - actually all of this content apologies
12:42 - was not done in a live stream I recorded
12:46 - it offline if you feel so inclined I
12:48 - want to join as a member or a patriot of
12:50 - the coding train I do i do broadcasts or
12:53 - if with an unlisted live stream a bunch
12:56 - of the recording sessions it's not as I
12:58 - think I don't know what if anything I do
12:59 - is interesting to watch apparently some
13:02 - some some what is but a lot of it is me
13:04 - just standing in front of a green screen
13:05 - so it's a little bit more of a peek
13:07 - behind the scenes but but so if you're
13:11 - thinking uh you know sometimes I have
13:12 - redundant content cuz it's a live stream
13:14 - that's an edited version you wouldn't
13:16 - have seen any of this already and one of
13:18 - the reasons why I'm sort of pitching
13:20 - this to you right now is interestingly
13:22 - enough it's not that I've been releasing
13:26 - these videos about one per day over the
13:28 - last couple weeks and the viewership on
13:31 - them is I don't know maybe a half or a
13:33 - quarter of what the coding challenge
13:35 - videos are which makes sense and I'm not
13:38 - necessarily here purely to optimize for
13:40 - clicks and views I'm here to try to
13:44 - create an educational YouTube channel
13:46 - and sometimes that results in videos
13:48 - like that snake game video that
13:50 - apparently 2 million people have watched
13:51 - and sometimes it's a more obscure topic
13:53 - that a few thousand people have watched
13:55 - which is still a very big number kind of
13:57 - amazing to me so but I did just want to
14:02 - mention it because I don't know maybe
14:04 - it's just to ask people to check it out
14:08 - and share it and encourage friends who
14:12 - might or colleagues or family member
14:15 - who's or whoever you know read to person
14:17 - on the street that you bump into it was
14:19 - like you know what I really like to know
14:20 - how to do server-side programming
14:21 - JavaScript would know it so and of
14:24 - course feedback is welcome so I will let
14:28 - me see can I easily post this link into
14:31 - the chat I think I can't so I'm gonna
14:32 - post this link into the chat know that's
14:35 - me this is very confusing I'm going to
14:39 - my home page I'm going to the live
14:43 - remembers or
14:44 - you know me in the past and I'm gonna
14:47 - paste this here and there you go
14:49 - did it get hidden No so there you go boy
14:54 - the chat is really uh there's be nice to
14:58 - each other everybody fill fill the
15:00 - internet fill the YouTube chat and
15:02 - comments world with kindness and
15:04 - welcoming energy today please if you
15:07 - will I would really love that
15:10 - okay so alright so check I talked about
15:17 - that what time is it 10:45 alright I
15:19 - talked about brilliant checks summer
15:21 - schedule let me mention to you summer
15:23 - schedules so I am planning three three
15:27 - live streams in June one of which you
15:29 - are watching right now it is today the
15:31 - next one will be a week from tomorrow so
15:35 - Friday and then the one after that I
15:38 - can't remember I think it's gonna be
15:39 - Tuesday so stay tuned you know I don't
15:44 - you know people you're overwhelmed with
15:47 - subscriptions and notifications and all
15:49 - sorts of stuff so turn on turn Do Not
15:52 - Disturb off on take a break from the
15:54 - computer but if you really want to know
15:56 - when I'll be live-streaming next
15:57 - probably the easiest way would be to
15:59 - subscribe and I will demonstrate this to
16:01 - you click that alarm bell thing because
16:03 - you will get a notification
16:04 - oh I sound like one of these youtubers
16:07 - that my kids watch well all they do is
16:08 - talk about clicking the alarm bell ok
16:12 - dantdm oh there's some awesome DIY craft
16:16 - videos I watch a lot of craft videos and
16:20 - a lot of game videos not me but with my
16:23 - children okay case you're wondering okay
16:28 - summer schedule alright now this is
16:32 - Wednesday not Tuesday Thank You Simon
16:34 - has reminded me because I published the
16:36 - schedule in our in the coding train
16:39 - patron member slack channel Oh something
16:43 - else that really should mention clothing
16:46 - train has a new community manager sigh
16:48 - so side just got started sigh I met Sion
16:52 - spelled C Y at IO Festival in Sai is in
16:56 - the process of moving to
16:57 - New York will be helping me with
16:59 - mailings of stickers and books and
17:01 - rewards and patrons and memberships and
17:04 - descriptions and thumbnails and all that
17:06 - kind of stuff so you can check out you
17:11 - can check out twitter.com slash the
17:15 - coding train this social media account
17:18 - is now run by psy and so tweet at the
17:22 - coding train say hello welcome psy
17:23 - welcome to the community excited to be
17:26 - working with you and then also brand new
17:31 - if we go to Instagram I don't use
17:34 - Instagram so I don't really know what
17:35 - I'm talking about I think it's coding
17:36 - train underscore someone could help us
17:38 - figure out how to get coding train let's
17:40 - see if this pulls something up mmm-hmm
17:43 - do I have to login hello welcome to
17:51 - watching an old person use social media
17:56 - let's find Instagram
17:59 - [Music]
18:02 - oh wait a second that Cody crane who is
18:08 - this this is somebody back there we go
18:20 - [Music]
18:23 - [Applause]
18:27 - [Music]
18:35 - and you can see this is a nice little
18:37 - post this is a AI generated rainbow it's
18:43 - generated using something called style
18:45 - Gann it was trained on several thousand
18:48 - images of rainbows tagged on Flickr I
18:50 - hope to come back and do some videos
18:52 - about how to train your own machine
18:54 - learning rainbow generator but we'll
18:58 - come back to that not today not today
19:00 - but coming soon
19:01 - this summer using a tool called runway
19:04 - em out
19:05 - so runway ml is a application let me
19:10 - just mention it really briefly I'll just
19:11 - pull it actually is in now public beta
19:13 - you can see look at this what I love
19:15 - about this is look here we are in the
19:16 - runway website a little like screenshot
19:19 - of runway in actions doing I think like
19:21 - maybe dense pose and look at this over
19:24 - here oh look at that oh look at this
19:26 - page of code but Danish it but just in
19:28 - the photo just subtly just like sitting
19:30 - over there quietly in the stack of
19:32 - course also processing processing cases
19:34 - recent paper ISIL Salih wit book anyway
19:37 - alright so I encourage you to check out
19:39 - runway I'm definitely gonna be doing
19:40 - more videos with runway coming soon and
19:43 - I'm an informal advisor to the company
19:45 - so it should be transparent about that
19:48 - okay there we go
19:53 - what else oh right now ml 5 j s work ml
20:04 - 5 is a fredley machine learning library
20:06 - for the web it's built on top of
20:08 - tensorflow das I have talked about it I
20:11 - have made videos about it there recently
20:13 - was a big new
20:15 - I think it's version we'll find out I'm
20:17 - gonna go to getting started it is
20:19 - version zero point three point one
20:22 - currently so there are many many many
20:26 - many many new features but before I show
20:30 - you what some of these features are let
20:31 - me just quickly I want to thank this is
20:32 - a brand new website let me thank Milan
20:36 - and Nicole and Arnab Milan and Nicola
20:39 - recent graduates of Parsons Arnab is an
20:41 - ITP student when she is an ITP
20:44 - researcher so is Joey and then there's
20:46 - this weirdo named Dan I don't know how
20:49 - to pronounce that last name chief Mon I
20:50 - think it's so check out this new website
20:53 - we've done a lot of work to relaunch the
20:57 - website to make it more clear to add
20:58 - better examples better documentation I'm
21:00 - gonna use this in a video tutorial today
21:02 - but what's really I think the most
21:04 - exciting thing is if you go here under
21:06 - reference previously ml5 just had maybe
21:10 - three or four maybe five or six features
21:12 - and now it has many more so you can see
21:15 - you can use there's an image classifier
21:17 - there's pose net body pics and the u net
21:19 - models
21:20 - thank you to zayeed let's see on twitter
21:23 - as i eed i'll it was an AI researcher
21:28 - from yemen I believe this is Syed Ali
21:35 - Ave who is working from home right now
21:39 - don't bother don't bother Saeed Saeed
21:41 - contributed the u net model we have a
21:44 - convolutional sorry no conditional
21:46 - variational auto encoder you can
21:48 - actually run a again a generative
21:51 - adversarial network of style transfer
21:53 - sketch RNN there's now a sound
21:55 - classifier I'm gonna use this today in a
21:57 - video I mean I am in a video and some
21:59 - more features so I encourage you to
22:00 - check out the website poke around join
22:04 - in the discussion on github and I will
22:06 - be making many more videos with this
22:08 - library over the summer okay so let me
22:14 - close this down check all right so I
22:19 - have a project that I really want to do
22:21 - that I'm hoping that I'm gonna get
22:22 - started with today although time is
22:23 - running short as many of you know
22:28 - I am everywhere I go on the Internet
22:32 - it's just me making doing this so
22:39 - processing is a java-based tool see the
22:42 - icon right over here the application
22:45 - software sketchbook if you will I use it
22:48 - in a lot of my coding challenges and
22:50 - projects and tutorials there is a way to
22:52 - extend processing with libraries and I
22:55 - have made a few libraries in my youth
22:59 - let's see if we can find anything like
23:01 - oh well I'm maintaining that one I made
23:03 - this QR code library that really
23:05 - probably needs updating all these are so
23:06 - out of date oh boy oh my god this is
23:09 - this doesn't even isn't even a thing
23:10 - anymore it's still on the website anyway
23:12 - box2d here's one that I'm actually
23:14 - maintaining not box2d itself just a thin
23:18 - wrapper on J box2d to connect box day
23:20 - prospects so why am I talking about this
23:22 - I have really wanted to make a series
23:27 - about how to build a processing library
23:30 - how to create basically create and
23:34 - compile a Java library that can be
23:36 - imported into processing directly you
23:40 - know most of my energy and time in my
23:42 - courses and teaching is sort of moving
23:44 - towards JavaScript processing is my
23:46 - first love and I still use it for a ton
23:51 - of stuff and you know there are fewer
23:54 - maybe Java developers in the creative
23:56 - coding world but I know a lot of you
23:58 - viewers still use processing quite a bit
24:00 - and I think it's you know I just want to
24:03 - have made this tutorial even if it's not
24:06 - the sort of most popular or primetime
24:09 - cutting-edge thing to do I think it'll
24:12 - be useless so I thought what I would do
24:13 - with that is make a library that allows
24:15 - you to just use open simplex noise very
24:18 - easily in processing and if you have no
24:20 - idea what open simplex noise is that
24:21 - would be a completely reasonable thing
24:24 - to wonder but I made some videos about
24:28 - that so you could go back and look at my
24:29 - open simplex noise videos that video is
24:32 - how I found you
24:34 - [Music]
24:35 - David is asking I know David is really
24:38 - hoping for the processing library it's
24:39 - always the one that gets pushed out he's
24:41 - saying am i doing the die
24:42 - soare game first or the processing
24:43 - library I'm gonna do the dinosaur game
24:45 - first which admittedly means I might not
24:47 - get to the processing library today but
24:49 - I've committed to doing it this summer
24:52 - sometime okay I need a player for the
25:28 - dinosaur game I think
25:32 - Enola is asking how long does it take
25:35 - before you get the slack invite all
25:37 - right NOLA let's let me whoops why am i
25:41 - typing here let's get in contact about
25:49 - that okay so I think this is gonna be my
25:52 - dot the equivalent of the dinosaur so
25:56 - let's just put this a copy this on the
25:57 - desktop let's use this as the background
26:05 - and what should the dinosaur have to
26:09 - jump over should be trains like the
26:14 - trains coming at let's make them trains
26:16 - oh but the cactus thing about the cactus
26:21 - is there are multiple ones right let's
26:24 - play the dinosaur game can I just go to
26:26 - like chrome Dino or something like that
26:28 - no well that'll work oh yeah all right
26:34 - let's see let's see what score I get now
26:39 - this is pretty bad I guess I did my high
26:44 - scores 47
26:59 - and am I gonna get really popular now
27:05 - that I'm live I'm a lot gaming live
27:06 - streamer I'm gonna have like hundreds of
27:09 - millions of subscribers this is the
27:16 - problem because this game is not that
27:17 - hard I mean I'm sure I'm gonna mess up
27:20 - eventually
27:31 - all right I could just tell that they're
27:36 - like I should just check my subscriber
27:38 - analytics I'm sure just going through
27:40 - the roof but basically like you know the
27:46 - most popular gaming youtuber ever oh
27:48 - wait oh it got to be nighttime I've
27:50 - never made it this far I mean I've never
27:52 - actually played this before but is it
27:55 - get hard oh it's any time again what
28:11 - happened I hit one of those flying
28:12 - thingies pterodactyls are oh there we go
28:18 - Birds
28:19 - okay the terraced axles okay and it
28:23 - rises I to jump over that oh the sound
28:25 - effects are quite loud let me thank you
28:27 - for pointing that out let me turn that
28:29 - off now I'm just gonna go back to this
28:33 - okay oh the video is how after the video
28:37 - on the home page of processing says
28:38 - Simon alright
28:40 - the chrome version starts to get harder
28:42 - over time alright alright so I need some
28:48 - sort of thing to jump over I suppose
28:53 - the logical thing would be like like
28:57 - like what's in the coding train world
29:03 - I don't want to get too tripped up on
29:04 - this let's I feel like the Train is a
29:11 - good idea let's just use the Train okay
29:15 - so I'm going to take this and put this
29:18 - on the desktop so this is train and this
29:27 - is the dyno it's not really a dyno we'll
29:33 - call it unicorn and let me just move
29:39 - this stuff out of the way that I don't
29:40 - need any more on the desktop what's this
29:44 - all right okay so I background if train
29:53 - Oh can I flip it Mac preview can I flip
30:00 - this I can obviously flip it was I'm
30:07 - drawing it this is really important
30:11 - what's the easiest way to flip an image
30:15 - you would think that I know how to use
30:17 - the computer by now I mean I know I
30:19 - could do with Photoshop do I have
30:20 - Photoshop on this computer well that's
30:23 - gonna be crazy to open up Photoshop not
30:25 - a sponsor all right why not apparently
30:30 - it works on my computer image image
30:37 - transform
30:39 - there's no trance image rotation flip
30:43 - canvas horizontal there we go oh that
30:45 - looks weird
30:46 - no that's how a train would go that way
30:48 - okay okay
30:55 - train unicorn background and
31:04 - here we go all right now crazily you
31:07 - think that I'm about to show you the
31:10 - dinosaur game but I'm not what I'm going
31:13 - to do is I'm going to do a quick
31:18 - tutorial that will add to how are there
31:22 - seven hundred how is this even possible
31:24 - let's rock with you people there's a
31:27 - whole world out there of things I'm
31:34 - looking for beginners guide to boil I'm
31:42 - looking for beginners guide a creative
31:45 - playlist ah here we go this gigs okay I
31:51 - I'm going to add I'm going to make a
31:54 - quick tutorial that will go as number
31:55 - eleven in this playlist and we're gonna
32:01 - go here and I am going to leave this to
32:07 - the side leave this to the side actually
32:10 - let me just close these things as I can
32:12 - get them back later and actually so now
32:14 - I want to let me rename this a sound
32:18 - classifier okay okay
32:24 - welcome back to the coding train as per
32:28 - usual where I'm completely unprepared to
32:30 - do anything I have not practiced or
32:31 - rehearsed or planned this at all and yet
32:34 - somehow I'm going to make some tutorial
32:36 - video okay let me go to I need to pull
32:49 - up another URL simple audio recognitions
32:58 - speech command this is what I'm looking
33:00 - for alright
33:07 - so let's open this
33:16 - it's common voice dataset all right and
33:23 - you just make sure the reference page I
33:26 - know I know
33:27 - has what I'm looking for yep
33:43 - speech commands le w oh it does not so
33:48 - the oh yes it does okay great
33:49 - alright does this actually work by the
33:51 - way no interestingly so this is by the
33:58 - way this is definitely something we need
34:00 - to fix the speech commands in bed
34:04 - doesn't work on the page and we wants to
34:06 - file a get up issue on the ml5 website
34:09 - you're welcome to all right so we're
34:11 - going back to home all right all right
34:19 - here we are
34:36 - okay all right
34:44 - okay everybody stretch oh by the way I'm
34:48 - signed up to run the New York City
34:49 - Marathon so I'm in okay shape in terms
34:56 - of running but I'm saying not trained at
34:59 - all for that long of a distance but
35:01 - mainly I have like back issues I think I
35:03 - need to do a lot of like core
35:04 - strengthening so bug me about that
35:06 - remind me about that I'll talk more
35:07 - about marathon training thinking of
35:09 - doing like maybe a fundraiser for
35:10 - processing foundation we'll see more
35:12 - about that to come all right what's it
35:15 - like 3:00 in the afternoon now okay it's
35:18 - 11 o'clock not so terrible all right
35:27 - hello welcome to another beginners Wow
35:32 - and there goes my injury wait it's
35:35 - really there we go let's do this
35:47 - alright alright let's do this this is
35:57 - better okay
35:59 - hello and welcome to another beginner's
36:01 - guide to machine learning with ml 5gs in
36:04 - JavaScript so I'm here it's been a while
36:06 - since I added a video to this playlist
36:08 - and a bunch of things about the ml 5
36:10 - library itself have changed there's a
36:12 - new release zero point 3 point 1 there
36:16 - is a brand new website which you can
36:18 - find right here at ml 5 j s org so to
36:21 - some extent this video is really an
36:22 - update about the library but I'm also
36:24 - going to look at one particular feature
36:26 - a new feature of the library sound
36:29 - classification and so that's my opening
36:34 - so here's the thing so what I did with
36:37 - that just so you know what I did with
36:38 - the data and API series is I did stuff
36:41 - like that but I just did it with the
36:42 - green screen behind me not
36:44 - live-streaming and then Matthew who's
36:48 - the coding training video editor put
36:50 - together animations and screenshots and
36:51 - things which I think actually is a is a
36:53 - really good result but it's it's
36:55 - definitely a lot of work and time
36:57 - production wise to do that so for right
36:59 - now I'm just going to continue with my
37:01 - normal methodology but I'm gonna pause
37:04 - at little moments where I know we could
37:06 - edit to the next thing that I'm going to
37:08 - talk about which will be this
37:20 - so let me make this bigger
37:31 - which
37:36 - okay
37:41 - all right
37:43 - the machine learning model I'm okay what
37:46 - am I trying to say next right the
37:52 - machine learning model that I'm going to
37:53 - use in this video is the speech command
37:56 - recognizer and this is a model available
37:59 - from Google as part of tensorflow j/s
38:02 - models now so this is really important
38:05 - distinction I am NOT here to train a
38:08 - sound classifier I might do that in a
38:10 - future video and show you about how to
38:11 - apply transfer learning which is
38:13 - something I did with images also to
38:15 - sounds I'm just gonna make use of a
38:17 - freely available pre-trained machine
38:20 - learning model anytime you use one of
38:23 - those things even in just a playful and
38:25 - experimental way which is what I'm doing
38:26 - it's good to do a little bit of research
38:28 - and take a look at like well how is this
38:30 - trained what was the data how what are
38:32 - the considerations around how the data
38:35 - was collected and so I encourage you to
38:37 - read through the readme here on github
38:40 - and in particular to click over and read
38:43 - the original paper about this speech
38:46 - commands model and there you'll see if
38:49 - you look it'll talks about some of the
38:50 - data sets like Mozilla's common voice
38:52 - data set 500 hours from 20,000 different
38:55 - people this libri speech thousand hours
38:59 - of read English speech I don't know how
39:01 - to say this tidy digits tie did it t did
39:04 - it 25000 digit sequences which
39:07 - apparently was probably me right it's
39:09 - just like hours and hours of me reading
39:10 - this random number book but so I
39:13 - encourage you to check out this paper
39:15 - and you can also find code for how to
39:18 - use this model at tensorflow J s in the
39:21 - TF GS models get up repo itself however
39:25 - I'm going to show you how to access this
39:27 - model in a quick way with the ml 5
39:30 - library and this is the new as of you
39:33 - know today which is know what's the
39:36 - biggest date June 13 2009 teen I'm gonna
39:40 - show you how to use this with the ml 5
39:41 - library as it stands today so I'm gonna
39:43 - click here under reference one thing you
39:45 - should see there's a lot of new features
39:47 - have been added to the ml 5 library I'm
39:49 - gonna come back and do videos about more
39:50 - of those but the one I want to highlight
39:52 - here is sound classifier so I'm going to
39:54 - click on this and any for all the
39:56 - different functions available in ml5
39:58 - you'll find a documentation page with
40:01 - some narrative documentation a little
40:03 - bit of a code snippet and then some
40:05 - written documentation about what the
40:08 - function names are and the various
40:09 - parameters and things like that and by
40:11 - the way I'm noticing now this will
40:13 - hopefully not read this is like a
40:15 - mistake this is documentation that's
40:17 - actually for either body pics or maybe
40:20 - the U net model which is does something
40:22 - called image segmentation so we've got
40:23 - to get that fixed I'm sure many github
40:26 - issues and fixes will be out and done by
40:28 - the time you see this unless you're
40:30 - watching it right now I'm live-streaming
40:32 - alright
40:43 - yeah so time to time out for a second
40:46 - Ross stall is asking me in that in the
40:48 - patron group I don't get why you don't
40:50 - just record the green background and
40:51 - livecast the combined image and alko
40:54 - rightly responds open broadcast studio
40:56 - doesn't do that however this is the
40:57 - other thing that I forgot on my list
40:59 - that I meant to talk about today this
41:01 - studio where I am right now
41:02 - he is gonna be gone at the end of this
41:05 - month so actually later today I'm coming
41:07 - back and do doing a documentation video
41:10 - about this setup to preserve it I know
41:12 - people have been asking for that for a
41:13 - long time I have this really crappy
41:14 - version I deal with my phone but I'm
41:16 - gonna do a more produced version of
41:17 - documenting this studio and I'm gonna be
41:19 - setting up to record later this summer
41:21 - somewhere else a little TBD about that
41:24 - but I'm hoping to get some new equipment
41:27 - and maybe get some equipment that allows
41:29 - me to record a multiple camera feeds at
41:33 - the same time so I can live stream and
41:35 - then also re-edit later yeah NOLA says I
41:40 - know I'm off the track here but NOLA
41:42 - says he promised to read his entire
41:45 - random number book when he reaches 1
41:47 - million subscribers which I still hold
41:49 - true to that promise I just don't know
41:51 - how to do that because math wise it
41:53 - would take days I think so I gotta
41:56 - figure out what I'm gonna do exactly but
41:57 - maybe I'll just read 1 million digits of
41:59 - pi it's not as exciting I could build a
42:05 - program to livestream me reading the
42:08 - digits from the book that's not a bad
42:10 - idea all right ok
42:21 - alright I'm alright so in case you've
42:25 - forgotten how to use the ml5 library I'm
42:27 - just gonna show you as it's documented
42:29 - on the ml 5 web web page so first of all
42:32 - you can go here to this QuickStart you
42:33 - can actually just click on this open p5
42:36 - web editor sketch with ml 5 just added
42:38 - you know what I'm gonna do that that's
42:40 - what that's the way I'm gonna do it but
42:41 - you also could just put a script tag in
42:45 - your HTML page referencing the current
42:47 - version of the library which as I said
42:48 - is zero point three point one as of
42:50 - today but probably while you're watching
42:51 - it it'll be a higher number so let me go
42:54 - and just open up this link here and now
42:57 - I'm in the the p5 web editor you could
43:02 - see the name of the sketches ml 5gs
43:04 - boilerplate Thank You Joey Lee who's a
43:06 - contributor ml five is done a ton of
43:08 - work on the website and all the
43:10 - different features and oh this should
43:13 - actually be 3.1 I'm gonna fix that I'm
43:16 - gonna hit save and then I'm gonna rename
43:19 - it to sound classifier and I am going to
43:25 - then go over here and go to sketch dot
43:27 - yes and I'm gonna run this and we should
43:29 - see there we go so now we know it's
43:31 - working because there's a little console
43:33 - log to log ml 5 version if I hadn't
43:36 - imported the ml 5 library I wouldn't see
43:38 - that we see that here so what are we
43:41 - gonna do let's load the sound classifier
43:44 - now most of the models I haven't been
43:46 - using this in my previous videos most of
43:48 - the models in ml 5 are now actually
43:50 - available to you in preload meaning you
43:53 - don't need a callback function you can
43:55 - just load the model in preload and it'll
43:57 - be ready by the time you get to setup so
43:59 - I'm gonna make a variable called sound
44:00 - classifier in preload I'm gonna say
44:03 - sound classifier equals ml 5 sound
44:07 - classifier now I need to tell it what
44:10 - model I want to load so I need to in
44:13 - here put the name of the model I want to
44:16 - load and in theory in the future there
44:18 - might be a bunch of different options
44:19 - different kinds of sound classifiers or
44:22 - maybe a sound classifier you've trained
44:24 - yourself that you want to put in there
44:26 - and I'll come back eventually show you
44:28 - videos about how to do that
44:29 - but for right now
44:30 - just gonna say speech commands and then
44:32 - I already forgot what it was called so
44:34 - I'm gonna go back to the ml5 website
44:36 - which is here I'm gonna go to reference
44:38 - I'm gonna go to sound classifier and I'm
44:40 - looking for it here so it's speech
44:42 - commands 18w
44:44 - this is a particular model that's been
44:46 - trained on 18 specific words and you can
44:49 - see what those are the ten digits from 0
44:52 - to 9
44:53 - up down left right go stop yes no that's
44:56 - 18 10 digits 8 different words all right
45:00 - so now I'm gonna go so was 18 w and then
45:06 - once that model is loaded I need a
45:09 - callback so I could just say sound
45:11 - classifier classify I might just call it
45:16 - got results so in other words I'm mmm oh
45:19 - it's not to find right so I'm telling
45:20 - the sound classifier to classify now by
45:23 - default it's just going to listen to the
45:25 - microphones audio maybe in the future
45:28 - and part of ml5 will be able to offer
45:30 - hooks to how you can to connect it to a
45:32 - different audio source but it's
45:34 - basically just gonna work with the
45:36 - microphones audio then I can write a
45:38 - function called got results and I need
45:44 - I'm gonna get rid of the draw loop
45:45 - because I don't need that right now and
45:47 - let me just turn off auto refresh so and
45:50 - so that doesn't keep refreshing and then
45:53 - now if you remember ml 5 employs error
45:56 - first callbacks meaning the callback
45:59 - function requires two arguments an error
46:03 - argument in case something went wrong
46:05 - and a data or results or some other
46:07 - argument where the actual stuff is so
46:09 - I'm gonna say error and then I must say
46:11 - results and then I could do a little
46:13 - like basic error handling I'm just gonna
46:15 - say you know console.log something went
46:20 - wrong and then and then I can also like
46:24 - actually log the error all right and
46:28 - then so now and then I'm going to say
46:32 - console log results so let's see if we
46:36 - get anything oh I have to run it again
46:39 - you could ignore this error oh so they
46:43 - came in
46:44 - ready up getting more stuff alright so
46:54 - pause for a second yes so one thing I
47:02 - want to mention so in the coupling Zeit
47:06 - is asking where's the dinosaur game
47:07 - haven't gotten to it yet coming soon
47:09 - you'll see a reason why I'm doing this
47:11 - first cause I'm gonna use this in the
47:13 - dinosaur game other comment that came in
47:16 - from the chat Alka points out that you
47:18 - can use unpackage calm / ml5 to get the
47:21 - latest version I don't often recommend
47:24 - doing that because ml5 is a library in
47:27 - such flux that if you've written a
47:29 - project and you want to make sure it
47:31 - continues to work but new later versions
47:34 - of ml hive could come out that would
47:35 - break it so it's referring to a specific
47:37 - number is actually pretty good okay this
47:44 - is why I forgot I love using the p5 web
47:45 - editor but it's hard to sort of debug
47:47 - these arrays because all this other
47:51 - stuff is coming out so I think I have an
47:58 - idea this is getting a little hard to
48:02 - debug just because so much stuff is
48:03 - happening here the console and this huge
48:05 - arrays but there's actually something
48:06 - that I missed
48:07 - that I could add here which is an
48:09 - options variable so one of the things I
48:11 - can tell there's a lot of things I can
48:13 - set as properties or parameters for how
48:16 - the sound classifier should work but
48:18 - there's a very simple one which I'm
48:20 - going to just look it up in the
48:21 - documentation because I don't remember
48:22 - it's called the probability threshold so
48:25 - I'm just gonna copy paste this here what
48:28 - this means is basically the the sound
48:32 - classifier the sound classifier is going
48:39 - to trigger an event where it's going to
48:40 - right now on console logging all of this
48:43 - information about what it thinks it
48:44 - heard based on a confidence level for
48:47 - how sure it is it heard one of those
48:49 - keyword
48:50 - and right now a lot of those events are
48:52 - triggering because I don't know what the
48:53 - default probability threshold is maybe
48:55 - it was 0.7 maybe it's 0.5 but I'm gonna
48:58 - make that really high I'm gonna say 0.95
49:01 - so it has to have a 95% them the machine
49:04 - learning model has to calculate a 95%
49:06 - confidence score before it gives the
49:10 - event back to me in ml 5 so let me do
49:12 - this let me run it up let me look here
49:23 - shoot well I'm gonna I realize now what
49:30 - I need to do I need to not talk I said
49:32 - let me give it point nine nine
49:35 - let me try point nine nine let's push it
49:40 - a little let's add point nine nine and
49:43 - then I'm gonna say a word I'm not gonna
49:46 - speak anymore because I want to be able
49:48 - to look at that particular event up
50:03 - oh you know what's happening I think
50:06 - it's giving me background noise over and
50:10 - over again also I don't know what's
50:11 - going on this is not working well I'm
50:15 - gonna you know what I'm just gonna do
50:17 - never mind I have an idea we go back to
50:22 - where I was 0.95 oh I didn't pass the
50:26 - options Thank You Nathan
50:29 - or hey sorry once I've created that
50:39 - options variable with 0.95 I need to
50:42 - pass it into the constructor as the
50:43 - second argument so now we pass it in
50:46 - there I'm gonna run the sketch I'm gonna
50:48 - say the keyword up and then I'm gonna
50:50 - try to look into the console to see if
50:52 - that's what came in up and there we go
51:02 - look at that now other stuff is coming
51:05 - in but you saw it there so rather than
51:07 - kind of debug with the console let me
51:09 - actually put what I said into on to the
51:12 - webpage itself and just pause for a
51:16 - second
51:18 - oh yeah re let me let me bring that up
51:23 - logging one of the items from the array
51:25 - would be better why don't I think of
51:27 - that all right let me go back it'll be a
51:33 - better demonstration in the video with
51:35 - really when it gets edited
51:46 - so and this is actually object labeling
51:50 - confidence okay also to make this also
51:58 - to make this easier to see let me
52:00 - actually console.log results index 0
52:02 - label and results index 0 I believe it's
52:06 - called confidence so rather than have
52:08 - this big array logging in the console
52:10 - let me do this alright so now we need to
52:12 - have a 95 percent confidence and I'm
52:15 - gonna run this up 1 2 down
52:33 - great back well it doesn't know what
52:36 - that is zero one two three four five six
52:45 - seven eight nine nine
52:52 - trigga all right great
53:01 - just do something really quick
53:18 - I'm quickly adding background color
53:20 - white so to the HTML body because what I
53:24 - wanted then do just quickly before I
53:26 - finish this off but to finish this off
53:28 - let me just add a Dom element using the
53:30 - p5 Dom library I'm gonna just say result
53:33 - p4 results paragraph I'm going to say
53:35 - result P equals create P waiting and
53:43 - then right now I'm gonna say result P
53:48 - dot HTML whoops
53:52 - result label sorry I left my yeah
54:05 - actually so people are asking really
54:06 - interesting questions which I which I
54:09 - want to get to in a second all right
54:10 - then then I can turn these then I could
54:15 - turn these results into a string by
54:17 - using a string literal so back tick and
54:20 - then put curly brackets put a colon here
54:23 - and curly brackets and a closed back
54:26 - tick okay and let me also say result P
54:31 - style is it font size font size just 32
54:37 - points so we'll be able to see it
54:39 - alright here we go ready for this one
54:45 - two five
54:48 - up down left right okay so you could
54:57 - imagine now what you could do with this
54:58 - for example you could control a game
55:01 - with your voice and in fact I'm gonna do
55:03 - that in one of my coding challenge
55:05 - videos so take a look in this video's
55:06 - description I'm gonna do a coding
55:08 - challenge where I program the Google
55:09 - dinosaur game and then I'm gonna add
55:11 - this sound classifier to have the
55:13 - dinosaur jump books there won't be a
55:14 - dinosaur it'll be a unicorn to have the
55:16 - unicorn jump when I say the key word up
55:19 - alright thanks for watching this
55:20 - additional ml 5 tutorial video about
55:22 - sound classification in the browser
55:26 - oh wait wait I forgot to answer these
55:29 - questions well it doesn't really matter
55:36 - I'll just answer these now re-ask
55:38 - shouldn't mention the browser asked for
55:41 - permission to use the mic it should I
55:43 - think that I have set
55:45 - maybe I should mention this in the video
55:47 - I mean I'm gonna do my wacky I'm gonna
55:55 - give meteo nice little editing challenge
56:05 - I just want to stop and mention that if
56:10 - you're following this along hopefully
56:11 - your browser is asking for permission to
56:13 - use the microphone the reason why that
56:15 - didn't happen here in this video is
56:17 - because I've already set my browser to
56:20 - allow use of the microphone on the p5
56:22 - web editor pages but for security you
56:26 - can't just access anybody's microphone
56:27 - from a web page without the user giving
56:29 - permission so hopefully you saw that
56:30 - happen and if you didn't that might be
56:32 - why you run into an error if you haven't
56:34 - given that permission
56:44 - right it should ask permission right let
56:49 - me let's see like like if I go share and
56:53 - go to fullscreen or present and then I
56:58 - go to new incognito window yeah that's
57:04 - what you'll see oh you don't see this
57:06 - sorry that's what you'll see so Matthew
57:10 - you can also like screen grab this and
57:13 - like use this or something when we add
57:16 - that okay so I also want to mention one
57:25 - up I also want to mention that and what
57:33 - time is 11:30 oh I'm gonna take a break
57:35 - now actually before I do the Google
57:37 - Drive dinosaur game so because I hours
57:40 - that I would take my break and look at a
57:42 - challenge on brilliant org but before I
57:44 - get to that also was asked re writes for
57:49 - some digits it picked it picks up with
57:52 - just a part of the word that's why you
57:53 - get multiple reads so incidentally
57:57 - something that's really interesting
57:58 - about this model that is not clear that
58:01 - I'm not showing you explicitly but I
58:04 - would like to come back to and I
58:05 - probably should mention this in the
58:07 - video is that if you can believe this
58:09 - it's actually doing image classification
58:12 - now let's think just think about that
58:14 - for a second how is this sound
58:16 - classification model doing image
58:19 - classification just think about that for
58:23 - a second then I'm gonna come over here
58:26 - and explain this to you I turn the
58:30 - whiteboard on
58:34 - oh why is this don't worry and you know
58:40 - maybe not sure maybe it will splice this
58:41 - in let's place this in okay everybody's
58:49 - saying how I'm ripping off of code
58:51 - bullet as if the Google dinosaur game
58:54 - isn't just like the most obvious thing
58:56 - to do there's no way to not just do the
58:59 - same thing that everybody else is doing
59:00 - okay
59:02 - so yes all right everybody's making good
59:08 - good good questions and why is all this
59:10 - stuff coming in here click over here
59:13 - okay sorry
59:15 - I also want to interrupt this video for
59:19 - a second to talk about how the sound
59:21 - classifier actually works this is kind
59:23 - of a surprising little tidbit and I'll
59:25 - come back to this more if at some point
59:27 - I create a video about training your own
59:30 - sound classifier now there's different
59:31 - ways you could do this this isn't the
59:33 - way to make a sound classifier but this
59:35 - is the way that this particular model
59:36 - works it's actually shockingly amazingly
59:39 - doing image classification so if you
59:41 - imagine we have this thing that's called
59:43 - a convolutional neural network this is
59:47 - the underlying architecture the
59:49 - structure of that machine learning model
59:51 - that does that does the classification
59:54 - typically this kind of model is
59:56 - something that we would put images in
59:58 - like we might have images of cats oh boy
60:01 - and images of dogs I don't know is a dog
60:05 - whatever that doesn't hold on we got to
60:09 - cut that I'll let you eternal images of
60:14 - cats we might have like an image of
60:18 - turtle no that's not really a turtle but
60:21 - whatever so the idea is that we're
60:23 - sending these images in and getting back
60:25 - a label and maybe a confidence score so
60:29 - it's the same idea the only thing is now
60:31 - we want to send in audio and get back a
60:35 - label like up or you know one and a
60:39 - confidence score so how would we convert
60:42 - sound into an image now again there are
60:45 - other nerve
60:46 - network architectures of which you could
60:48 - could receive sound data and maybe a
60:51 - more direct fashion but if you've ever
60:54 - looked at a graphic equalizer or some
60:58 - type of sound visualization system I've
61:00 - made examples like this in p5 you can
61:03 - draw something that's often referred to
61:05 - as the spectrogram which is basically a
61:08 - graph of all the various amplitudes of
61:12 - frequencies of the wave patterns of the
61:14 - sound itself so if we took like a
61:17 - one-second spectrogram and made that
61:21 - into an image we could then send that
61:23 - image into a convolutional neural
61:25 - network saying that's the image that is
61:28 - produced from the spectrogram of
61:30 - somebody saying the word up so
61:32 - underneath the hood this machine
61:35 - learning system even though it's
61:36 - designed to work with audio data it
61:39 - first takes that audio data converts it
61:41 - into an image and then sends it through
61:43 - a very similar types of neural network
61:45 - architecture to standard image
61:47 - classification models and you can read
61:49 - more about that in that paper itself ok
62:00 - so let's look at the paper for a second
62:03 - to make sure I've right about this
62:05 - before we include that
62:25 - no I'm just I'm looking for where it
62:27 - says that explicitly but that's I
62:29 - remember reading about this and looking
62:30 - at so I'm gonna have researched that a
62:32 - little bit more to make sure I'm correct
62:35 - before we include that in the actual
62:36 - edited video o s Byrne is writing I just
62:44 - did my master's thesis of around sound
62:46 - separation spectrograms used to be the
62:48 - way to go however most people have now
62:50 - moved to 1d convolutions on the wave
62:52 - form directly so Hassan jito saying do
62:55 - the dinosaur game so s bird if you have
62:59 - any knowledge about this and can kind of
63:01 - like fact check what I just said in
63:04 - terms of this particular model I would
63:06 - love to hear about that I'm pretty sure
63:14 - yeah I'm pretty sure that's what it's
63:16 - doing because this model will actually
63:19 - draw the spec browser FFT and pretty
63:22 - sure that's what it's doing it's the
63:25 - spectrogram data it's not really image
63:28 - classification because it's not real but
63:29 - yeah anyway I think that's good enough
63:34 - okay
63:39 - all right time for some dinosaur game
63:48 - Shazaam doesn't use image classification
63:50 - but rather vector grouping the ideas the
63:52 - same okay okay so now now I'm changing
64:08 - this back to dinosaur game how's the
64:15 - font size here looks a little small
64:16 - actually that's better
64:24 - and what's the size of my background
64:27 - image I just see well I'm gonna I'm
64:36 - gonna we're gonna do the Google x for
64:38 - game very soon 800 by 450 you know what
64:43 - I just want to make this 600 so let's
64:48 - cut some of it off
64:57 - why why must you do this to me here we
65:01 - go 600 here we go
65:09 - there we go that's better it's kind of
65:13 - off-kilter but that's fine just cuz I
65:15 - want to have more screen real estate
65:19 - okay great
65:23 - okay okay so our all right let's so okay
65:39 - so what it what is it it's 11:30 I have
65:42 - till 12:45 an hour and 10 minutes
65:44 - so I'm definitely gonna get to the
65:46 - dinosaur game and then control it with
65:48 - speech that's gonna be fun
65:49 - now I'm gonna do after a short short
65:53 - break and then maybe I'll get started
65:56 - talking about processing libraries and
65:59 - see if I can get to that as well okay so
66:04 - let's talk very briefly about brilliant
66:08 - so I am really thankful for a brilliant
66:11 - org to be the sponsor of the coding
66:14 - training livestreams brilliant is a
66:17 - website that i've been actually using
66:19 - myself quite a bit more recently mostly
66:22 - if I'm being honest to try to look for
66:23 - ideas for coding challenges because
66:25 - there are so many different types of
66:27 - puzzles and projects and courses that
66:30 - you can use and what's the nice thing
66:31 - about it is unlike watching a video
66:33 - tutorial which maybe you like to watch
66:35 - me at video tutorials there are actually
66:36 - interactive lessons where you try to
66:38 - answer questions and and and through
66:41 - diagrams and animations and and
66:43 - different different interactive features
66:46 - to sort of play around with these
66:46 - different ideas so one of my favorite
66:49 - thing the way that I like to use this so
66:50 - you can see here it's asking me to
66:51 - continue learning the computer science
66:53 - fundamentals so this is a course that I
66:56 - have looked at and talked about I did a
67:00 - coding challenge around programming
67:03 - stacks a while ago the stack data
67:05 - structure but what I want to look at is
67:07 - I want to look at
67:09 - one of the daily challenges today so
67:12 - let's look first together at how fast is
67:15 - an algorithm because this is a computer
67:16 - science one so I'm gonna click on this
67:19 - and let's read this through together and
67:22 - see if we can come up with an answer and
67:24 - then and answer it in the in the
67:26 - comments itself okay an algorithm is a
67:28 - computational process a set of
67:30 - instructions you can follow to get a
67:31 - desired result okay that's good I
67:33 - understand that so this is true I think
67:36 - computer scientists sometimes like to
67:37 - conceptually think about rhythms first
67:39 - and then program the algorithm on a
67:41 - computer later later on so and then ah
67:46 - so measuring the speed of algorithms is
67:49 - is a super important thing so actually
67:51 - what would be interesting to do is try
67:53 - to also write a little bit of code in
67:54 - JavaScript that benchmarks how long
67:56 - something takes to run maybe we can add
67:58 - that in as our little exploration here
68:02 - so but what this is saying is sometimes
68:06 - you want to be able to predict how long
68:07 - an algorithm is gonna take it's not just
68:09 - about like writing the code and then
68:10 - benchmarking it there's a there's a
68:12 - about this before there's big o-notation
68:14 - or the order of an algorithm which kind
68:17 - of which describes sort of like amount
68:19 - of computational cycles for like the
68:21 - sort of worst case scenario there's
68:24 - different ways of thinking about it like
68:25 - these sort of average computation time
68:26 - or the worst case time this here is
68:29 - looking at a sorting algorithm which is
68:33 - usually a place to start and I've done a
68:35 - bunch of different sorting
68:35 - visualizations who I like this I kind of
68:37 - want to just program a nice little
68:39 - animation of things sorting so most
68:43 - sorting algorithms work by comparing two
68:46 - elements and then swapping and actually
68:48 - this relates to something that I want to
68:49 - do soon I want to do a coding challenge
68:51 - on Delaney or Delauney triangulation
68:53 - which involves looking at different ways
68:56 - to make triangles with a bunch of points
68:58 - and then flipping them which sorts a
68:59 - similar concept selection sort is is a
69:04 - way of looking over the array many times
69:07 - finding the largest from the smallest
69:09 - element and putting it in the end then
69:11 - the next one and putting them the next
69:12 - one and putting on the end so this is
69:15 - giving us some information about
69:16 - selection sort and how what the function
69:20 - what the speed of a selection sort
69:22 - which is n the number of elements in a
69:25 - list times n minus 1 one fewer divided
69:28 - by two so that makes sense because
69:30 - that's how many times you need to check
69:32 - all n elements then n minus 1 then n
69:35 - minus 2 that n minus 3 ok so here's our
69:40 - algorithm that we're gonna check ooh
69:43 - alec is pointing out that he made an
69:46 - animated bubble sort so maybe I can pull
69:48 - that up so let's check out alphas
69:50 - animated bubble sort code pen dot io /
69:55 - Alka oh you have too many code pens so
70:03 - I'm gonna have to just go to it directly
70:06 - pen mga kyk a slash right oh I love this
70:18 - oh whoa these look like little planets -
70:20 - that is so cool
70:22 - I assume everyone's seen the hungarian
70:25 - dancing sorting video if you haven't you
70:27 - should check that out okay this is cool
70:32 - alright so thank you Alka for that all
70:35 - right so here's our algorithm for each
70:38 - of the N numbers in the sequence Oh to
70:41 - check okay so we're trying to check if a
70:42 - sequence is sorted so let me go over to
70:44 - the whiteboard here that doesn't
70:51 - actually work okay that's fine let me go
70:52 - over the whiteboard here
70:57 - and let's look at will come up with an
71:03 - array let's give it up n equals five so
71:06 - we're gonna start with N equals 5 and
71:08 - we're gonna I'm gonna make it sorted so
71:11 - let's start with an array that I know is
71:13 - sorted just to sort of look I think
71:15 - that'll make it easier to look at 1 3 7
71:17 - 9 12 arbitrary sequence of numbers
71:20 - sorted so the algorithm that we want to
71:23 - do is free is forever for each of the N
71:27 - numbers in the sequence compare it with
71:29 - the number to its right if there is a
71:32 - number there the sequence is sorted if
71:35 - every number is less than or equal to
71:37 - the number to its right so we could
71:40 - start looking at the just gonna give us
71:41 - multiple choice but let's not even look
71:43 - at the multiple choice yet alright so
71:47 - let's look at this so maybe in your head
71:49 - to think about it maybe you just know
71:50 - the answer already it's this is a this
71:53 - is a I would say one of the easier daily
71:55 - challenges
71:56 - nothing is super easy if this is
71:58 - programming and thinking about
71:59 - algorithms is new to you this could be
72:00 - very difficult but in terms of different
72:03 - sorting algorithms we've got terms like
72:04 - a basic level thing here so I want to
72:06 - check each element against the one after
72:09 - it so is one less than three yep
72:13 - is three less than seven yep is seven
72:17 - less than nine yep is nine less than 12
72:20 - yep oh there's no more numbers I'm done
72:23 - checking this array is sorted because I
72:26 - got four checks and how many things
72:29 - what's the speed for it took me four
72:32 - it's not like it took me four kind of
72:35 - checks for computational cycles so for
72:37 - five elements for so I think we can
72:39 - extrapolate pretty easily here if we had
72:42 - ten elements how many times we're gonna
72:44 - have to check nine so I think the answer
72:47 - should be n minus one I don't know is
72:50 - that the answer you've got I mean I
72:51 - actually have not gone through and like
72:53 - checked with what it says on brilliant
72:55 - or what other people have said yet today
72:56 - so so let's go through here these are
73:00 - all of them this wouldn't be so crazy to
73:03 - answer this right I wouldn't be so crazy
73:07 - to answer this at n because you could
73:10 - sort of think of and that might be
73:11 - big o-notation cuz big o-notation is
73:14 - kind of not giving you the sort of exact
73:17 - number but sort of uh I guess the
73:20 - worst-case there will be n minus 1 but
73:21 - that the minus 1 is sort of irrelevant
73:23 - in terms of the order of the algorithm
73:25 - it's either like N or N squared or log n
73:27 - but let's pick n minus 1 let's hit
73:31 - submit
73:43 - got a one day sweet so I if you buy the
73:47 - way you use brilliant did you have a
73:48 - nice longer than one day streak like
73:50 - maybe tweet me an image a screenshot of
73:52 - your streak I'd be curious to see who's
73:53 - got the longest streak here of coding
73:55 - training viewers let's go continue and
73:57 - we could sort of see oh look now I can
73:58 - write an explanation
73:59 - so let's write an explanation I don't
74:01 - let's write an explanation of this so
74:03 - first of all even beyond an explanation
74:05 - let's make a little code example so I'm
74:09 - going to make an array and I'm gonna do
74:14 - I'm gonna just put these numbers in it
74:18 - and actually let's let's let's put
74:22 - random numbers in it so I'm gonna say a
74:25 - for let a equals zero is less than 5 I
74:28 - plus plus
74:30 - array index I equals a floor random 10
74:38 - the thing is are we really it's going to
74:41 - be so unlikely for us to end up with a
74:42 - sorted array but that's fine and now
74:45 - what we're gonna do is we're gonna write
74:47 - this algorithm so I'm gonna say let sort
74:53 - it equals true so I'm going to assume
74:56 - that it's sorted I'm gonna assume that
74:58 - it's sorted and then I'm gonna do every
75:00 - single check and if it's not sorted if
75:05 - one of these happens to be greater than
75:07 - the one after it then I can say it's not
75:09 - sorted and of course I could break out
75:11 - as soon as one is not true I could break
75:13 - out but I'm not gonna bother with that
75:15 - so let's then say okay so we want to say
75:18 - now for let I equal 0 is less than array
75:23 - dot length I plus plus let's do this
75:28 - a is array index i B
75:33 - I can't type B equals array index i + 1
75:40 - if a is greater than B then sorted is
75:47 - false now of course I could then add I
75:51 - could add a break
75:52 - here right I don't need to check any
75:55 - more because if it's either sorted or
75:57 - not sorted but just for the sake of
75:59 - argument let's do this and then I'm
76:05 - going to at the end say console dot log
76:07 - array and console dot log sorted so
76:12 - let's see what we get and we're gonna
76:16 - have an error amazingly we didn't get an
76:18 - error so javascript is so happy to just
76:23 - like go with the flow here let's do
76:25 - let's do a counter let's call this like
76:27 - N equals zero I'm gonna say n plus plus
76:30 - now of course we have I so I don't
76:32 - really need to do this but let's also
76:34 - console log n so it should be 4 right n
76:40 - minus 1 I got 5 why did I get 5 because
76:43 - I'm actually checking if the array has 5
76:47 - things in it index 0 1 2 3 4 I'm
76:51 - checking index 4 with index 5 which is
76:54 - non-existent and I thought I would get
76:56 - an error because I'm programming like
76:57 - Java or C I'll be like no I'm sorry
76:59 - you're off the edge of the show hey
77:01 - you're falling off the edge of the earth
77:03 - everything has to stop this program is
77:05 - shut down but but here javascript is
77:08 - very happy to just sort of like try it
77:10 - try to go along anyway so let's say but
77:14 - this so this should really be array
77:15 - length minus 1 because I don't need to
77:18 - check the last element against anything
77:19 - past it there's nothing past it just the
77:21 - second Alice teman it's the last so
77:23 - let's run this now and see can we could
77:30 - we possibly by doing this ever randomly
77:32 - get a sorted one what's the probability
77:34 - somebody should calculate this what's
77:36 - the probability of picking 5 numbers
77:38 - between 0 & 9 in a row that happened to
77:41 - be sorted it seems pretty unlikely let's
77:44 - uh let's make this 3 I think we'll have
77:49 - a pretty good chance with 3 there we go
77:51 - we got it sorted so it's that's true so
77:53 - we know our algorithm works we know it's
77:55 - n minus 1 because no matter how many
77:57 - numbers I put in like I could put a
77:59 - hundred numbers in 99 checks and it's
78:03 - false let's just do one more thing
78:05 - that's actually like
78:06 - look at how long it takes so one way to
78:08 - do that would be to say let now equal
78:10 - Millie's right so Millie's is a function
78:13 - it would be like system Millie's or
78:15 - system not milliseconds in native
78:17 - JavaScript but p5 has that there so we'd
78:19 - say and then I could say console dot log
78:25 - Millie's the current Millie's - now and
78:27 - it's really not now I should say it
78:29 - saved time let's call it save time so
78:33 - now this would be how long the algorithm
78:35 - takes well that's weird
78:40 - I shouldn't get a decimal number
78:43 - am i Millie's should be a hold on I
78:48 - thought Millie's is only an integer
78:53 - number let's go here see what does it
78:55 - give us Oh
78:57 - so the middle east function actually
78:59 - gives us milliseconds floating point in
79:03 - milliseconds so this was actually less
79:05 - than a millisecond it took which makes
79:06 - sense you know we could try I assume if
79:09 - I were to make this like a hundred
79:12 - thousand then we might actually have an
79:14 - algorithm that takes a little bit longer
79:18 - did I make that more than a hundred
79:20 - thousand
79:28 - wait what did I just do
79:30 - I crashed the browser what just happened
79:43 - I have an infinite loop somewhere yes
79:48 - exit page uh-oh what's the chance oh
79:57 - that's good safety let's make this ten
80:03 - thousand and let's see how long that
80:07 - takes
80:08 - yeah five milliseconds that's not crazy
80:11 - five milliseconds I think what I by the
80:15 - way what I really need to do is move the
80:18 - dock to there this will stop happening
80:22 - now so make it much either so five
80:24 - milliseconds that's ten thousand let's
80:27 - do a hundred thousand Milly's his
80:32 - performance dot now under the hood okay
80:34 - thank you
80:36 - yeah 100 thousand it shouldn't take that
80:41 - this long what's going on
80:51 - like filling an array with a hundred
80:53 - elements and just checking each element
80:55 - against each other should be super fast
81:00 - so weird
81:02 - let's wait a little longer
81:13 - any idea why this is taking so long do
81:15 - the dinosaur game yeah it's coming I'm
81:17 - sorry everybody actually probably
81:18 - whatever is in the title I should
81:20 - probably do it first which would make
81:22 - sense
81:23 - oh it's crashing the console of course
81:28 - smash thank you smash highlights in the
81:31 - chat of course of course it's crashing
81:35 - the console stop okay of course it can't
81:42 - handle console logging stop I yeah so
81:52 - let's see can I can i reclaim control of
81:55 - this browser probably not here we go a
82:05 - bench mark brilliant puzzle let's get
82:12 - rid of this let's go to 10,000 ok 1 and
82:21 - 1/2 milliseconds now watch this this
82:24 - should now with a hundred thousand right
82:26 - if it was about 1 and 1/2 milliseconds
82:28 - it should just be 15 milliseconds
82:31 - actually 1.8 I guess there's like some
82:36 - advantages in terms of you know just
82:40 - there's there's like time it takes to
82:42 - probably like get started with the loop
82:43 - once you're already in it but you can
82:44 - see it's like less than 2 milliseconds
82:46 - for a hundred thousand numbers let's do
82:48 - a million numbers 5 milliseconds okay so
82:51 - we fit the idea we're benchmarking it
82:52 - let me go back to just 100 and let me
82:57 - let's take this let's finish this off oh
83:00 - let's go back to here and let's say the
83:04 - answer is n minus 1 today on the coding
83:08 - train we programmed a javascript
83:17 - demonstration of the algorithm
83:21 - and confirmed and -1 speed based on and
83:28 - elements here is the code and then I
83:32 - think what I can also do is I can add
83:34 - this I want to make an image look at
83:36 - this isn't this amazing that it supports
83:38 - latex because you often need to do like
83:40 - math notation and stuff and then I can
83:42 - also do this which is always nice
83:46 - and let's let's make this a little nicer
83:48 - let's say let's do console.log array dot
84:00 - length elements speed equals N and
84:12 - whoops what did I miss here what's wrong
84:19 - back tick speed equals this looks right
84:22 - to me I'm like losing my mind here
84:24 - oh no I'm missing this here okay and
84:27 - then sorted well let's add this
84:38 - milliseconds let's add this so our code
84:49 - example will be finished let's run it uh
84:55 - nothing goes here here we go coding is
84:58 - hard there we go alright so let's do a
85:02 - nice little screenshot of this let's go
85:08 - over to the brilliant website let's do
85:10 - this and go to desktop grab that screen
85:15 - shot which is 11:55 o 6 a.m. and preview
85:22 - explanation there we go all right I'm
85:28 - gonna post this
85:30 - I'm gonna post this and so you know if
85:34 - you're interested in trying out some of
85:36 - these challenges or commenting on this
85:38 - thread here please go to brilliant org
85:41 - slash coding train you can sign up for
85:43 - free if you're interested in a premium
85:46 - subscription which unlocks a variety of
85:48 - courses and additional materials you can
85:51 - get 20% off for the first 200 people to
85:53 - go to really not org slash coding train
85:55 - from this from that URL so thank you so
85:57 - much
85:58 - brilliant for sponsoring the coding
86:00 - train I'm gonna take a 5-minute break
86:03 - which should give you plenty of time to
86:04 - go sign up and give this a try maybe
86:07 - comment on this or make a visualization
86:08 - of it and then when I come back yes I
86:11 - know it's been like an hour and a half
86:13 - the dinosaur game yet when I come back I
86:16 - am going to program the dinosaur game
86:19 - okay so I will see you in approximately
86:23 - five minutes apparently I messed this up
86:43 - here let's edit this the link is not
86:50 - going to oh whoops
86:54 - the link is not actually going to the
86:57 - sketch I'm gonna fix that there we go I
87:03 - don't know where mine went but I think I
87:05 - fixed it now okay I'll see you I'll see
87:11 - you all in five minutes
87:16 - [Music]
88:39 - [Applause]
88:40 - [Music]
88:58 - [Applause]
88:59 - [Music]
89:23 - [Applause]
89:26 - [Music]
89:33 - [Applause]
89:38 - [Music]
90:46 - as always I always forget this I'm gonna
91:48 - do this this star this star this star
91:51 - this star song never forget the Vista
91:53 - this is somebody composed that song for
91:55 - me
93:01 - shoot I muted myself what was so funny
93:05 - as I'm uted myself I'm like undressing
93:07 - oh you'd only imagined what people
93:08 - thought I was talking about
93:09 - alright I'm I think that sound is back
93:11 - okay everybody relax
93:13 - good see it but a wait till the chat
93:15 - stops panicking and you've caught up
93:20 - what I was talking about there in my
93:23 - attempt to be humorous because I am a
93:27 - human but are you [ __ ] it's what I am I
93:33 - really just want to see the chat stop
93:35 - saying that there's no audio eventually
93:38 - it will come back we're back okay so
93:47 - what I was saying two things says hello
93:49 - welcome I'm back I am doing the part
93:53 - you've all been waiting for that coding
93:55 - challenge and it's time for the coding
93:56 - trade coding challenge coding train
93:59 - theme song
94:00 - [Music]
94:09 - I also wanted to mention that I started
94:13 - the new fashion Trusteer apparently
94:16 - wearing your right here out of besides
94:26 - this this I'm sure is like what all the
94:28 - kids are dressing like these days I just
94:30 - note that the fashion trend started
94:33 - right here on the coding train right yes
94:35 - what you do is you get a brightly
94:37 - colored t-shirt that's much bigger than
94:39 - some other shirt you have and it pokes
94:41 - out and it looks really extra super cool
94:43 - it helps if you have spindly arms and
94:51 - then I was explaining that the shirt
94:53 - that I'm actually wearing is the I will
94:55 - refactor that later shirt which you can
94:57 - get at design by humans comm / coding
95:00 - tree or something like that music is too
95:04 - loud sorry boy this is all a mess sorry
95:10 - about that everyone all right music loud
95:18 - [Music]
95:19 - is this an ad style is this actually a
95:22 - thing I didn't invent it
95:24 - alright we got to get we got to get a
95:26 - move on here so let's see
95:42 - just want to get no rights over here now
96:04 - now I'm trying I thought this might be
96:07 - interesting to try p5 collide just to
96:11 - use a library why not
96:22 - it also has opportunity to show je s
96:25 - deliver so let me open those up okay
96:38 - yeah okay all right ah
96:48 - designed by humans calm slash shop
96:51 - designed by humans calm slash shop /
96:56 - coding trained this is this is where you
97:00 - can get your very own I'll refactor that
97:04 - later shirt okay alright now we are
97:11 - ready to go all right
97:19 - I should definitely bring back the timer
97:21 - right I have not practiced this I have
97:27 - no idea what's gonna happen but we're
97:30 - gonna do it okay
97:32 - all right coding challenge this is gonna
97:34 - be the last thing that I do today sorry
97:36 - David and everybody else who's waiting
97:39 - for the processing library at least if I
97:41 - keep putting it there it'll make me sort
97:42 - of get to it eventually
97:43 - haha where's my train whistle do I even
97:46 - have a train whistle sound effect is the
97:59 - music too loud
98:03 - [Music]
98:16 - ah okay hello and welcome to a Cody
98:22 - challenge Google Chrome dinosaur game
98:25 - edition of course I don't have my train
98:26 - whistle I didn't bring with me today
98:28 - this is definitely not gonna go well
98:30 - nothing am i coding challenges ever go
98:32 - well but I'm gonna give this a try I'm
98:33 - an attempt to program quickly the Google
98:37 - Chrome dinosaur game I'm these my own
98:39 - images and stuff so will be the unicorn
98:41 - game of course I'm gonna use p5 chess
98:43 - the JavaScript library p5 Jeff and I'm
98:45 - going to interact with it in a unique
98:48 - way that you have to stick around for
98:49 - the end of the video I'll just tell you
98:50 - now I'm gonna try to control with my
98:52 - voice okay so you skip to the end maybe
98:55 - I'll be doing it there okay so here we
98:57 - go let's get started so what do I need
99:00 - to do so first I'm gonna make a I'm
99:03 - gonna add I'm in the p5 web editor and
99:06 - I'm gonna add a file I'm gonna call it a
99:08 - dino jf even though it's not let's call
99:10 - it unicorn unicorn ojs and that's gonna
99:15 - be my unicorn and what do I need I also
99:17 - need to have those are like cactus
99:20 - thingies I mean those are gonna be
99:21 - trains so I'm gonna make a train say s
99:23 - add file so let's start by creating the
99:27 - unicorn class unicorn so I'm gonna use
99:30 - object-oriented programming because you
99:31 - know I do this by the way is exactly the
99:33 - same as flappy bird it's like really
99:35 - just doing the same thing over again but
99:37 - whatever this is a nice beginner
99:38 - friendly challenge so and maybe using
99:41 - object-oriented programming is a little
99:43 - bit overkill but let's give the unicorn
99:45 - a X location at 50 and a Y location
99:49 - which will be height because it's
99:50 - sitting at the bottom of the window but
99:52 - maybe I'll say like height minus 50
99:54 - right now and then I'm going to create a
99:57 - function called show and I'm going to
100:00 - draw it I'm just going to draw as a
100:01 - rectangle right now at this dot X this
100:04 - dot Y and I'll make it 50 comma 50 so
100:08 - this is the Unicorn class a unicorn
100:11 - object has an X and a Y and when I draw
100:13 - it it's a rectangle at that X&Y with a
100:15 - within height of 50 and those will
100:17 - probably need to be variables eventually
100:18 - so let me make a variable called unicorn
100:21 - I'm gonna say unicorn is a new unicorn
100:25 - and I'm gonna say here you know
100:29 - dot show and let's run this there we go
100:34 - okay so of course I forgot what I always
100:37 - forget which is that I've added some new
100:39 - JavaScript files and I need to reference
100:41 - them in my HTML unicorn and what was the
100:46 - other thing called train all right so
100:49 - that's a unicorn and what I want is let
100:52 - me play that game again how does it work
100:54 - it just sits there so every time I press
100:57 - the spacebar it jumps so let's get it to
101:00 - do that first let's get it to do that
101:01 - first okay so what does it need in order
101:06 - to be able to jump it needs a velocity a
101:08 - speed along the y-axis so let's call
101:11 - this V Y and we'll say that's zero and
101:15 - we'll write a function called jump which
101:19 - we will give it kind of this like
101:21 - instant force so we're gonna like push
101:24 - it up so I'm gonna say this dot V Y
101:27 - equals let's say like negative five
101:31 - that's moving it up and then I'm going
101:33 - to write a function called move which
101:36 - says this dot y plus equals this dot v y
101:41 - so what we should see now is if I say
101:45 - unicorn dot move and then if I add
101:49 - function key pressed and say if the key
101:54 - is the spacebar unicorn dot jump this
101:59 - really is basically the same as flappy
102:01 - bird so far then we should see that
102:03 - velocity kick in so I'm always moving it
102:08 - based on whatever that velocity is but
102:10 - the velocity is zero the speed is zero
102:12 - but as soon as I say jump
102:14 - it sets the speed to negative five and
102:17 - we should start to see it move up okay
102:19 - here we go and I'm moving along here I'm
102:21 - gonna press space there we go all right
102:26 - so we need gravity so we need some form
102:29 - of gravity which probably makes sense as
102:31 - a global variable but I'm just gonna
102:33 - since the gravity is really only gonna
102:35 - affect the Unicorn I'm gonna put it in
102:36 - here let's say it's a 0.5 so gravity is
102:40 - in a way account
102:41 - acting force so no matter what it's
102:44 - doing the gravity is always adjusting
102:49 - the speed of the unicorn the
102:51 - acceleration basically so what I could
102:53 - do now also in move is say this dot V y
102:57 - plus equal this dot gravity however I
103:00 - don't want to ever let you can say now
103:02 - it's gone I don't want to ever let the
103:05 - unicorn fall off the bottom there should
103:07 - be basically a ground level so I'm gonna
103:10 - to do that let's say this so let's make
103:14 - this fifty a size let's say R equals 50
103:17 - so we're going to kind of use that for
103:23 - all the parts where we're drawing and
103:28 - then I'm also going to say I'm going to
103:31 - have a constraint so I'm gonna say this
103:33 - dot y equals constrain its current y
103:38 - value between zero and really the where
103:44 - it's sitting at the bottom which is also
103:46 - height minus this dot R so it's stuck
103:49 - there and now if I press whoops press
103:51 - space you can see it jumps now that's a
103:54 - very measly little jump we need to be
103:57 - able to jump much more so let's set this
104:00 - to like 25 now let's see what happens
104:04 - okay that's too much let's just set it
104:09 - to 10 I maybe I need to make the gravity
104:11 - stronger too so there's gonna be a lot
104:16 - of fine-tuning of this but let's just do
104:19 - that and let me let's set this to 25
104:23 - whoops and maybe let's set the gravity
104:27 - to 2 there we go this feels a bit more
104:30 - like the dinosaur game so this is kind
104:33 - of sad let's make our unicorn look a
104:36 - little bit more exciting let's load an
104:40 - image so I have on the desktop here I
104:43 - have some images I have a background
104:44 - which will be the background of the game
104:46 - I have a unicorn this will be the
104:49 - character with a little angry equal sign
104:51 - sitting on it
104:52 - and then the train will be the thing
104:53 - that has to jump over so let's so what
104:57 - I'm going to do here is I'm going to add
104:58 - these files I'm going to add file and
105:00 - I'm going to drag them in to the web
105:03 - editor it uploaded all of them and then
105:08 - in here I'm gonna add preload and I'm
105:15 - gonna have let you image let T image and
105:21 - let background image and let's load all
105:24 - those you image equals load image
105:26 - unicorn dot PNG and we're do the same
105:31 - for T image and background image this is
105:34 - train and this is background let's
105:37 - change the background to O so what did I
105:40 - get wrong here background is actually a
105:41 - JPEG so let's have the background now B
105:45 - background image there we go and let's
105:48 - have the unicorn where is it be I'm
105:51 - gonna say image unicorn image there we
105:55 - go it's so tiny well it's a pixelated
105:58 - it's so sad let's change this to 150
106:02 - that's but it's x value shouldn't be
106:06 - what it should be here
106:09 - there we go so there's our jumping
106:11 - unicorn
106:19 - I'm gonna make it wider timeout for a
106:26 - second
106:30 - oh I don't reset v-y thank you so that's
106:38 - a bug German DK dev is pointing out a
106:40 - really important bug because right now
106:44 - why is going down and it really like
106:50 - affects no but I reset it directly to
106:56 - negative 25 so it's fine oh yeah yes I
107:07 - need to so that I need to fix right
107:11 - that's a problem that'll be a bug I need
107:12 - to fix
107:13 - so I'll fix that in a little bit let me
107:17 - make this wider with this over here
107:26 - but this is not a lot of screen real
107:28 - estate to work with so let me actually
107:29 - load a background image that's 800
107:32 - pixels wide which I think will be a
107:33 - little more it will be a little better
107:34 - than 600 so matsya we're just going to
107:40 - edit this part because this is the 800
107:50 - wide one
108:05 - there we go
108:12 - okay
108:20 - why is it so it's because it's shrinking
108:23 - the image like this is let me need
108:28 - actually just fix that too while we're
108:31 - here like I guess because it's so big
108:37 - let me change it to just two hundred I
108:41 - mean you're never gonna have it bigger
108:43 - than 150 so let me do that see what
108:51 - happens if will it replace it let's see
108:53 - oh no it doesn't interesting it renames
108:59 - it oops let's delete this one I don't
109:05 - know if this is gonna create some kind
109:06 - of weird like caching issue well let's
109:10 - do this there we go a little bit nicer
109:14 - okay all right
109:18 - if this dot y equals zero
109:22 - where where would I need to check that
109:24 - whoops okay so let's move along here
109:31 - ooh save from another window that's
109:36 - weird
109:38 - all right something bad happened
109:42 - does anybody logged into this by
109:44 - accident anybody who knows the coding
109:46 - training p5 web editor all right well
109:56 - let's try two I'm gonna have to leave
109:59 - yes go back here
110:11 - all right it's fine now
110:20 - okay
110:23 - okay yes don't worry
110:30 - Samuel everyone's asking good
110:31 - suggestions I'm gonna fix that but I'm
110:33 - gonna wait so cuz I'm gonna let myself
110:35 - cheat for a bit and I'll fix that bug
110:37 - later whoops it's really annoying how I
110:45 - have to click over here to get the focus
110:50 - all right my unicorn can jump and I've
110:53 - made the background a little wider which
110:54 - means now I need obstacles for it to
110:57 - jump over and those are going to be
110:59 - little train things so I'm gonna make
111:02 - another class call it a train choo choo
111:05 - I'm gonna give that a constructor these
111:08 - will have also an x and y so the X will
111:15 - be it's going to start off the edge and
111:18 - the Y will be actually also at the
111:23 - bottom so height - I'll give it a size
111:26 - and this star will be 100 and then so
111:32 - now I need a show function and that I'm
111:36 - going to draw as an image like fingers
111:43 - are in the wrong place that T the train
111:45 - image at x and y this dot are the star
111:51 - and let's also add a move function and
111:58 - we'll say this dot X - equals and so the
112:01 - train so it is a weird thing it's
112:04 - supposed to be oh this is gonna be a
112:06 - problem my fixed background is going to
112:09 - make this visually a problem and people
112:12 - on the chat are saying parallax
112:13 - background please alright so where maybe
112:15 - I'm gonna get to that this is gonna end
112:17 - up being a longer video if I implement
112:18 - that but really the unicorn is moving so
112:21 - the unicorn is moving but the X stays
112:23 - fixed the trains
112:25 - oh well the trains could be moving if
112:27 - their trains that's weird but they're
112:28 - supposed to be cactuses cacti they're
112:30 - standing still in the unicorns just
112:32 - approaching them but we're seeing it
112:33 - from the unicorns
112:34 - of you boy I've really botched this but
112:37 - what I'm gonna do is just move them by
112:40 - the whole scene is scrolling by three
112:42 - pixels and we'll figure out if we can
112:44 - parallax the background that maybe later
112:46 - what do I even mean by parallax to make
112:48 - it appear as if the background is
112:49 - changing but off in the distance so it's
112:52 - sort of moving at a different speed but
112:53 - for now let's just do this let's create
112:57 - an array called trains and we're going
113:02 - to say train in setup well actually you
113:05 - know we're gonna do in draw we're just
113:07 - going to randomly we're going to pick a
113:11 - random number between 0 & 1 and we'll
113:13 - say like 1 percent of the time we're
113:17 - going to say trains dot push we're gonna
113:20 - add a new train so it's gonna be
113:23 - irregular this is different than the
113:24 - flappy bird I made were the think that
113:26 - pipe sliggoo was irregular
113:27 - I thought the pipe I think the pipes
113:28 - were at regular intervals now there's a
113:30 - random chance of adding a new train and
113:33 - then all the trains that exist we're
113:36 - gonna say for all of the train that
113:39 - dodge say T in trains I'm gonna say T
113:42 - dot move T dot show all right let's see
113:44 - what happens do we have a train maybe I
113:50 - better increase it there we go oh look
113:52 - at that
113:52 - all right they're moving they're kind of
113:54 - slow I'm gonna jump over it oops okay
114:00 - let's make them move a little faster
114:02 - let's have them move by like eight
114:04 - pixels that's also time out for a second
114:09 - let me fix the size also just like 200
114:26 - it really this is a bug in the web
114:28 - editor it really doesn't like me to
114:30 - delete a file it confuses it
114:33 - alright so hold on but I think we're
114:41 - gonna be okay
115:03 - okay so now the trains are moving a
115:06 - little faster let's see if I can
115:07 - successfully jump over them come on
115:11 - let's see some trains oh there we go
115:15 - okay no we got uh uh so we've got some
115:26 - tweaking we've got to do both this is a
115:29 - this is a nice way
115:30 - no oh look my unicorn can fly so I need
115:33 - to fix the fact I need to like not allow
115:35 - my unicorn to fly right it should only
115:37 - be able to jump if I'm at the bottom so
115:39 - let's fix that so to do that I need to
115:42 - go into unicorn and in the jump function
115:47 - I should only be allowed to jump if I'm
115:51 - sitting at the bottom so in other words
115:55 - if y is oh well if I'm at the bottom so
115:59 - as long as Y is equal to is this really
116:02 - gonna work I don't like to use equal
116:04 - checks but this is by definition sitting
116:08 - at the bottom so only if I'm sitting at
116:10 - the bottom can I jump so if Y is equal
116:12 - to that spot let's see if that works
116:15 - so let's jump o this dot Y this dot y
116:28 - come on trains oh yeah
116:31 - yep I can only jump when I'm at the
116:34 - bottom alright so that works so that
116:35 - fixed I think I need to be able to jump
116:37 - quite a bit higher 50 might be too much
116:41 - just doubling it whoops let's change it
116:47 - to 50 let's change the gravity to 3
116:50 - still too much let's take that stripe 30
117:00 - let's try 35 I should really use like a
117:03 - slider or something there we go I think
117:05 - this is gonna make the game more
117:07 - possible to win there's too many trains
117:13 - it actually doesn't seem weird that
117:15 - those trains are moving yeah I can make
117:18 - an easy pause for a second here
117:38 - okay um all right
117:43 - double jump is also possible in the game
117:46 - really no it seems like it jumps
117:55 - variable Heights though no all right
118:12 - okay maybe make a cool all right one
118:23 - thing that's bothering these the trains
118:24 - are going in front of the unicorn I know
118:26 - that doesn't really matter so much it's
118:27 - really doesn't matter but I kind of
118:29 - would prefer them to be behind so I'm
118:31 - gonna move this here I'm also gonna make
118:37 - the game a little easier to play I'm
118:38 - gonna reduce the number of trains so
118:40 - there's gonna be a much lower papa
118:41 - probability of there being a train let's
118:43 - see if I can actually play this game
118:45 - somewhat successfully even though I'm
118:47 - not doing the collision checking yet no
118:50 - I think if the trains move faster it
118:54 - would actually make it easier
118:55 - so let's actually double the speed of
118:57 - the trains oops
119:10 - come on train so this is really a
119:14 - problem with the p5 web editor I have to
119:17 - click over here here we go all right
119:20 - this looks like this game is now
119:23 - possible to play but I need to add
119:29 - collision detection so I've done this
119:31 - before and plenty of other coding
119:32 - challenges there's a pretty simple
119:34 - algorithm to just check if two
119:36 - rectangles are intersecting with each
119:37 - other or not I can just check their exes
119:40 - and why they're basically all the edges
119:42 - the left the right the top the bottom
119:43 - against each other but this is a nice
119:44 - opportunity for me to just explore a
119:46 - library that's out there in the world
119:48 - and this library is called p5 collide 2d
119:50 - and it actually has a function it called
119:53 - collide rectangle rectangle and it'll
119:55 - give me a boolean variable if I give it
119:57 - the XY with height of one rectangle and
120:00 - the XY with height of another rectangle
120:02 - so let's actually just use this library
120:04 - this is also a nice excuse for me to
120:07 - show you that github is now integrated
120:10 - with something called Jas deliver so
120:12 - this is an open-source content delivery
120:14 - network meaning if a javascript file is
120:17 - hosted on github i don't have to
120:18 - download that file and then add it to my
120:20 - project i can just link to it so i'm
120:23 - gonna go over here to github and you can
120:25 - see here it's this is the address i need
120:27 - to use so basically i'm looking for
120:29 - something like this actually I'm just
120:33 - going to sorry this is what I'm looking
120:34 - for any github
120:37 - oh no release commit or branch sorry I
120:41 - know you're looking for user repo at
120:46 - version I just want to get
120:54 - directory listing I think this is all I
120:56 - want I'm just gonna use the end one okay
121:00 - there's lots of different ways here that
121:02 - I can reference a file on github I think
121:04 - easiest the way for what I'm doing right
121:06 - now is just to reference its path and
121:09 - here's an example path so I'm gonna go
121:11 - over here to index.html I'm gonna add
121:14 - another script tag I'm gonna say script
121:17 - source equals I'm gonna paste that in
121:22 - closed script but this is not the path
121:25 - that I want I want the username which is
121:28 - be mor yen and then I want the path
121:34 - which is whoops to this file let me go
121:39 - back up here I want the path to let's
121:41 - get the minified version of the library
121:43 - and that would just be this right there
121:47 - in the root directory so I'm gonna put
121:49 - that in there and so now I'm referencing
121:51 - I think this is right but I don't think
122:01 - there is this library hasn't been
122:02 - published with like any kind of release
122:05 - right there's no releases or anything so
122:09 - now I'm just referencing that file let's
122:11 - see if that works
122:13 - not getting any errors let's see if I
122:17 - can call a function whoops
122:27 - let's see now if I can call this
122:29 - function I'm just going to include it
122:33 - right here and see if I get an error in
122:37 - draw let's run the sketch again Oh
122:41 - collide is not defined is it not finding
122:45 - that file oh yeah it didn't work fail to
122:48 - load resource so what is it that I need
122:50 - to do you should know this github
122:56 - convert to J's deliver there's a like a
122:59 - thing that'll show me how to do it so
123:06 - hold on hold on everybody should have
123:09 - figured this out in advance
123:20 - Oh Oh
123:24 - I must just have to do this it's
123:27 - probably this well the camera goes off
123:34 - I'm sure everybody the chat has already
123:37 - told me oh I didn't reference the repo
123:42 - thank you thank you
123:51 - so it's let's let me get it right M o RN
123:57 - p5 collide to D is it this full thing or
124:09 - look at your slack chat oh it's just
124:13 - that okay so I don't need this okay
124:17 - thank you
124:20 - let me go back I don't know where I was
124:35 - okay this is actually not correct I'm
124:41 - referencing the CDN URL the username but
124:45 - I also need the repo name so that should
124:47 - be P v dot collide to D slash this so
124:53 - this should now work okay and I should
124:58 - be able to use the collide the collide
125:02 - function so I'm gonna use this collide
125:05 - rectangle rectangle let me just call
125:09 - this in draw to see if that works and
125:12 - doesn't give me an error great no error
125:17 - and so now I can check when I'm going
125:20 - through all of the trains
125:21 - if unicorn hits T console.log game over
125:32 - okay so console log game over and then
125:37 - I'm actually gonna say no loop so I'm
125:39 - just gonna actually stop the sketch shut
125:41 - down the sketch completely which isn't a
125:43 - really thoughtful user experience design
125:45 - choice but it's what I'm gonna do for
125:47 - right now and then I just need to add a
125:49 - function here called hits and receives a
125:55 - train and I can say I can use this
126:01 - function which I need this dot X this
126:04 - dot Y this dot R this dot R and then I
126:10 - need exactly the same thing but with
126:12 - that particular train so instead of this
126:15 - I'm checking this rectangle with this
126:18 - trains rectangle and I'm going to put
126:22 - this in a variable called collide and
126:24 - I'm going to say if I'm gonna return
126:28 - that I can actually you know what I'm
126:29 - just returning this return that so
126:32 - return the true or false result of this
126:35 - collide function from that library and
126:37 - now let's run the let's run the game
126:40 - I'll wait for our first train game over
126:43 - let's see if I can play it now
126:50 - come on train is it going I can't tell
126:57 - I'm waiting for a train
127:03 - oh [ __ ] this space bar thing is really
127:15 - awful because the window is not in focus
127:20 - which is why it's gonna be awesome when
127:22 - I change the interaction this is this
127:25 - train is very late much like the coding
127:27 - train I can't jump though well there
127:31 - were so many trains a while your huh is
127:39 - there a lot of empty space or I should
127:44 - check this no it's pretty pretty close
127:48 - to the edge alright one more let me try
127:51 - one more time to try to successfully
127:54 - jump over a train
128:06 - I should make the rectangle a little bit
128:08 - smaller yeah my array of trains is
128:11 - filling up I definitely need to fix that
128:20 - whoops
128:25 - alright let's make the train a little
128:27 - bit smaller and actually let's make the
128:31 - unicorn smaller as well hopefully this
128:35 - will help make the game a little easier
128:40 - to play ok come on
128:42 - train
128:54 - I'm going to successfully jump over a
128:57 - train eventually oh shoot
129:20 - all right let's let's draw the bot let's
129:23 - lift debug this a little bit by drawing
129:25 - the box like very subtly so let's draw a
129:30 - very slight rectangle so we can see how
129:36 - bad we are
129:37 - how off we are and let's do the same
129:41 - thing in the train itself so this is
129:51 - what this is what we're actually
129:55 - checking there we go it helps to see the
129:59 - full box
130:01 - come on trains spawning a train with a
130:07 - mouse click would be a good idea okay we
130:10 - lost alright so there's obviously a lot
130:12 - of gameplay improvements that need to
130:14 - happen here
130:15 - one is I could be more thoughtful about
130:17 - you could see how there's something like
130:18 - wasted space here I should crop the
130:20 - image and the the actual rectangle a
130:22 - little bit smaller I could consider
130:24 - using a circle I could use a more
130:25 - complex shape but this is good enough
130:27 - for right now let's actually make it I
130:32 - you know I could also like just click
130:33 - the mouse in order to start it a train
130:36 - that actually might help things but let
130:38 - me comment out this and what I want to
130:40 - do just before I go before I finish that
130:42 - you're gonna make a version of this with
130:43 - a score and all sorts of nicer things
130:46 - and sounds but I've got to finish this
130:48 - off gotta finish this video I want to
130:51 - control the train with my voice so to do
130:54 - that I'm going to use ml 5jf which has a
130:57 - speech command machine learning model
131:01 - built into this javascript library so
131:03 - I've made a whole separate video about
131:05 - this particularly train model and how it
131:07 - works so I'm just going to add it pretty
131:09 - quickly into this video you can go watch
131:11 - the other one for more details
131:13 - but if you're looking for the
131:14 - documentation if I click on reference
131:15 - and go to sound classifier this is what
131:17 - I'm looking at doing so all I need to
131:19 - first thing I need to do is that well
131:21 - actually one thing is I need to go to
131:22 - get started and I need to get a script
131:24 - tag to be able to reference the library
131:28 - so I want to add the ml 5 library so I'm
131:30 - copying
131:31 - I'm going here to index.html so in
131:34 - addition to p5 collide to D I'm now
131:36 - adding ml 5 and I'm going to go here and
131:41 - I'm gonna in preload I'm gonna do let
131:43 - sound classifier I'm gonna create a
131:46 - variable in Creole ode I'm gonna say
131:48 - sound classifier equals ml 5 sound
131:52 - classifier and the model I'm loading is
131:55 - called speech commands 18w
132:00 - because this is a model that's been
132:02 - trained to recognize 18 particular words
132:06 - 0 the numbers 0 the digits 0 through 9
132:10 - up down left right and a few other ones
132:13 - that are documented on this ml 5 web
132:16 - page let's go look that up real quick so
132:18 - if I go back to a sound classifier up
132:21 - down left right go stop yes No so those
132:24 - are the words it's trained to recognize
132:25 - and I actually also want to get this
132:27 - probability threshold so I'm gonna add
132:30 - this in here because I want it to be
132:32 - really sure I'm saying jump so I'm gonna
132:35 - make this 95 this means it's got to be
132:38 - 95% sure the confidence score that's
132:41 - coming from that particular model and
132:44 - how that model was trained and there's
132:45 - all paper you can read I've talked about
132:46 - that more in the other video ok so now
132:49 - that I have that in setup I could say
132:52 - sound classifier dot classify then I can
132:58 - get a function I'm going to call it got
133:00 - word so it's got a workout come in let's
133:03 - call it got command so this is a
133:05 - callback function that is going to
133:07 - trigger any time it gets a command it
133:10 - gets an error first error first
133:12 - callbacks and then the results so I'm to
133:15 - say if there's an error console I'm just
133:19 - gonna I'm just gonna console error the
133:21 - error otherwise if results index 0 dot
133:26 - label so results is an array with labels
133:29 - and confidence scores and the labels are
133:32 - the words and what I'm looking for is
133:34 - the word up if that label is up then
133:37 - unicorn jump so this is a really quick
133:41 - way of me looking for
133:44 - particular keyword from that library and
133:48 - and I'm also just going to console.log
133:51 - results index results index 0 dot label
133:56 - just to see if I'm getting other words
133:58 - also and we might as well log the
134:01 - confidence score just so we can see that
134:03 - that might be good for debugging as well
134:06 - so now that I've logged those two things
134:10 - I'm gonna run this Sketch up up up shoot
134:25 - but you can see it got up 95 percent
134:29 - okay let's see let's see if I could time
134:32 - this correctly get one successful jump I
134:43 - have to really anticipate it up a little
134:49 - bit of a delay
135:05 - this is silly I'm gonna add the thing
135:08 - where I click the mouse I'm gonna add
135:14 - the thing where I click the mouse and I
135:16 - can give myself a train and in fact
135:19 - let's comment out the random trains also
135:22 - I really should be more thoughtful about
135:24 - how I'm picking the truck like when the
135:25 - train should come like maybe there's a
135:27 - minimum distance between them if I've
135:29 - just added one can they can I can I have
135:32 - a longer train without other train cars
135:34 - no what's going on here there's a lot of
135:36 - narrative flaws and what's going on here
135:38 - but I'm just gonna add one myself up up
135:46 - and maybe what I'll yeah Oh up can I get
135:57 - two in a row up up wait
136:09 - one thing that I'm gonna do here is I'm
136:14 - gonna make the collision a little bit
136:18 - less extreme
136:27 - so I'm going to add a variable called
136:29 - buffer and I'm just gonna make that like
136:32 - 20 pixels right now so X plus buffer y
136:37 - plus buffer R minus buffer whoops so I'm
136:41 - making each one of these rectangles and
136:43 - actually I'm just going to say this let
136:45 - R equals this dot R minus buffer well
136:51 - let R 1 be that and R to be the trains
136:55 - are - buffer so this will be R 1 this
137:01 - will be train X plus buffer train y plus
137:06 - buffer and then this is our - so now
137:12 - it's a little smaller and I could
137:13 - actually draw this just just just so we
137:17 - can see it again I I'm not being super
137:19 - thoughtful about this but just a weekend
137:22 - just so we can debug this and make this
137:25 - game a little bit easier to play and
137:27 - probably still feel pretty realistic and
137:33 - let's go to the Train
137:36 - and let's do oops
137:43 - let's do the same thing
137:55 - oh wait
138:01 - why is it off I need to subtract buffer
138:05 - twice
138:15 - yeah
138:18 - right because I've shifting it over but
138:22 - only making it this much smaller it's
138:24 - still gonna end at the same place
138:31 - [Music]
138:44 - sokka's our music to draw what time is
138:52 - it
138:53 - 12:49 I really have to go alright let me
138:58 - just change it to a circle I like that
139:00 - idea
139:07 - whoops
139:15 - well let me undo all that Matt's you're
139:18 - gonna cut that out of the final version
139:26 - unicorn yes
139:37 - [Music]
140:02 - okay
140:04 - my back at least of what I had before
140:09 - jump
140:12 - alright everyone is making the
140:14 - suggestion in the chat that I should
140:16 - change it to a circle so that'll
140:18 - actually kind of be like a round it'll
140:20 - give me a little wiggle room along the
140:21 - edges and make the intersection happen a
140:23 - little less often so let's actually go
140:25 - ahead and do that so I'm gonna go into
140:27 - where the only place where I'm doing
140:29 - this collision detection is where in the
140:32 - Unicorn under hits so I'm gonna change
140:35 - this to collide Circle Circle collide
140:40 - Circle Circle and circle to circle
140:44 - assumes ellipse mode Center so I'm gonna
140:47 - have to think of the circle as this the
140:50 - center point of the object which is not
140:52 - a big deal so the way that I'm going to
140:53 - do that let's make some separate
140:54 - variables let's say X 1 equals this dot
140:57 - X plus this dot R times 0.5 so this
141:00 - would be the middle this is the middle
141:04 - and then R is the is the diameter of the
141:08 - circle so that's fine and this is Y and
141:10 - then X 2 y 2 is the train train dot X
141:17 - train dot y train R train R and so now I
141:23 - want collide Circle Circle x 1 y 1 and
141:30 - then X 2 y 2 the question is is are for
141:35 - actually the radius or is it the
141:37 - diameter does it say circle diameter
141:40 - circle diameter so I'm good alright so
141:42 - let's try this and then this should
141:44 - really be oh this is kind of unfortunate
141:46 - this should now be an ellipse but oh you
141:49 - know what I can just do I can say
141:50 - ellipse mode corner he's perfect so
141:55 - let's draw the hit circles on under
141:58 - train let's do the same thing here and
142:00 - say ellipse there so this should now we
142:05 - should see here we go that's what it's
142:09 - gonna do okay here we go after click oh
142:14 - well what happened
142:16 - I mess something up because the game was
142:18 - already over
142:28 - let's go back to my hit's function
142:37 - the browser is really just like oh you
142:40 - know what is something running on this
142:42 - page let's close that it's really
142:44 - freezing up on me all right hold on
142:58 - this looks right
143:08 - dot are no I don't I didn't forget any
143:15 - this dots
143:33 - something has gone wrong here train X is
143:40 - there a mistake in the library oh whoops
143:47 - ah yes okay all right I passed our end
143:57 - twice which is very unnecessary you just
144:00 - give it the diameter not the radius even
144:02 - though I'm calling it our once and let's
144:05 - see what happens okay here we go ready
144:07 - everyone let's play this game jump jump
144:19 - wait why is my browser really freaking
144:23 - out
144:32 - um let's comment out let's comment out
144:37 - the debugging we're just gonna go for
144:39 - now we're gonna play this game or to
144:41 - comment out the debugging I'm gonna
144:52 - close this tab quick chrome give it a
144:56 - rest for a second come back oh it's over
145:01 - here now
145:09 - all right we're about to play this game
145:16 - Oh up its up I'm saved
145:20 - jump yeah there we go up up up
145:29 - all right ready everyone up
145:42 - [Music]
145:45 - up look Mickey I guess I can't use the
145:50 - music hey ready everyone oh oh shoot
145:58 - here we got everyone ready up this is
146:06 - gonna be fun format [ __ ] edit up up yes
146:22 - exactly
146:23 - all right everyone thus ends this coding
146:26 - challenge there are so many things that
146:28 - need to be out of this number one it
146:30 - makes the narrative is makes no sense
146:31 - why is there this unicorn standing still
146:34 - without any animation the trains are
146:37 - coming at it the background should be
146:38 - sort of like in parallax moving so
146:41 - probably it should be jumping over I
146:42 - should have just used cacti is that's
146:44 - the plural of cactus right there's no
146:46 - score there's no birds flying you could
146:49 - add you could add a flying asterisk I'm
146:52 - gonna when I upload this I'm gonna
146:54 - include when I when this video publishes
146:57 - and with the code I'll include a lot of
146:59 - the coding train characters which are
147:01 - designed by Jason hagglund illustrate
147:03 - and designed by Jason hagglund so I'm
147:05 - gonna include a whole bunch of those if
147:07 - people want to make a version of this
147:08 - game that we can all play online with
147:10 - speech commands let me try this I'm
147:12 - gonna just say goodbye by trying this
147:14 - one more sense and yes alka is pointing
147:17 - out that speech detection API in the
147:20 - browser might be lower latency but let's
147:22 - try this one more time
147:28 - up up up up up up up up
147:46 - oh okay goodbye everyone
147:49 - thank you very much and see you later on
147:51 - a future coding challenge need more
148:01 - parallax yeah no kidding alright
148:08 - everyone
148:09 - Oh Oh Simon is once really wants me to
148:13 - show his sorting so I will oblige
148:17 - working improved dot Simon Tiger dot r
148:24 - EP l KO woo so we can look at different
148:29 - sorting algorithms and watch them visual
148:32 - last year this is a really nice
148:33 - community contribution I didn't make so
148:35 - let me go to the kodi train comm so well
148:38 - a couple things I wanna point out this
148:39 - is the last coding challenge was came
148:42 - out on this channel over a month ago Wow
148:45 - not by that many days but a month and
148:48 - three days ago so when this one comes up
148:50 - which will likely be early next week you
148:55 - should go to this link on the coding
148:57 - train homepage go to to the challenge
148:59 - and add a link to a version that you
149:03 - make here and you can see there's a
149:04 - whole bunch here I've sure and I like to
149:06 - come and show these on the live stream
149:08 - when I can I also want to just point out
149:10 - though that under courses once again
149:12 - there are now this is also here so you
149:16 - can go to this page slash courses slash
149:19 - data and AP is and you can see all the
149:22 - videos that have been released from this
149:24 - new series but I just want to jump to
149:27 - this link and plug this one more time
149:30 - please check out if you if you have some
149:33 - time and you're interested in learning
149:34 - this stuff check out these videos and
149:36 - let me know what you think these were
149:37 - done there's a lot more work
149:39 - it was the cost more money frankly to be
149:42 - honest to like put this together this
149:44 - way but I think for sequenced content
149:48 - having some animations and some
149:50 - post-production might be helpful for
149:52 - just kind of making the videos easier
149:54 - and more clear to watch so I would be
149:56 - curious to hear your feedback from there
150:00 - I don't know what people are talking
150:04 - about
150:04 - did I say jump again I keep saying jump
150:08 - why do I say jump it's up was I saying
150:14 - jump again alright maybe I need to redo
150:19 - this little ad just in case not jitneys
150:21 - another take all right we're gonna play
150:23 - this game one last time is that why it
150:26 - wouldn't recognize me when I try to do
150:28 - the music up
150:34 - [Music]
150:36 - up yeah just like the music alright
150:41 - let's play this game one last time up up
150:48 - okay I want to get at least four or five
150:51 - in a row up no up up up up
151:02 - oh shoot so you might get a double train
151:05 - up Oh up whoops
151:21 - this fact I have to refresh the page
151:23 - that restart the game is really terrible
151:25 - I did up okay
151:31 - Oh David is asking about the edited
151:33 - video on the AI cars yeah we don't know
151:35 - what to do with that one so match is
151:37 - gonna be reviewing it over the weekend I
151:39 - did a live stream where I made the neuro
151:42 - evolution steering cars oh it's one
151:44 - o'clock I got to go and that that was a
151:49 - four hour live stream and I'm trying to
151:52 - figure out a way to make that into like
151:53 - on less than one hour edited video so I
151:55 - think I'm gonna come back and record
151:57 - some additional content for that and
151:59 - edit that together so that'll hopefully
152:00 - come out relatively soon
152:01 - alright I've really got to go thank you
152:04 - everybody for tuning in to the coding
152:08 - train I will be back one day next week
152:11 - I don't know when I don't know why I
152:12 - don't know how but I will be back I am
152:14 - later this afternoon
152:16 - recording a documentation
152:19 - I mean actually if you were thinking
152:21 - about joining to become a patron or
152:22 - remember I will lie I feel like a
152:24 - private a member only live stream of
152:26 - that recording session but stay tuned up
152:28 - in the document this setup here
152:30 - thank you again to brilliant the sponsor
152:33 - of the coding drain live stream today go
152:35 - to breed org slash Cody trained to sign
152:37 - up and first two hundred subscribers
152:39 - will get 20% off brilliant earlier in
152:43 - this live stream I tried a puzzle on
152:45 - board and you should try check out my
152:49 - answer reply to that and try your own as
152:51 - well okay thanks everybody and I will
152:53 - see you in the future more lots more to
152:56 - come this summer very excited about all
152:58 - the content good bye look you want to
153:19 - get
153:19 - [Music]
153:47 - [Music]
153:55 - it's up right oh the music it's cuz of
154:02 - the music it can't hear me over the
154:03 - music up I would have kept this
154:18 - I cheated I use the spacebar up up up up
154:34 - alright everybody I'll see you later
154:38 - [Music]
154:50 - [Applause]
154:52 - [Music]
156:09 - [Music]
156:42 - you

Cleaned transcript:

hello I'm back it's been a while welcome back to the coding train this is not a good start for today but the reason why I don't have my train whistle although I brought everything back to the studio here is because I was at this wonderful event called the IO Festival in Minneapolis um it's one of the reasons why I haven't livestream for a while there I actually did a 45minute live coding demo in a theater in front of a hundred plus people it was recorded you can hear me um it was recorded and that video will come out later this summer I'm kind of really excited for the video to come out and also to a bunch of the different tools and techniques that I used in that demo I'm going to start using on this channel as well today is something of a let me just get back in the saddle a little bit I feel out of sorts I haven't livestream for I was actually kind of nervous this morning as I was kind of getting my stuff together and trying to get into work today to New York University where I have my day job it is summer and the good thing about summer is it opens up some more time for me to be experimental with new ideas and new topics and in theory more live streaming but that hasn't come to fruition yet but I did make some notes about some things that I wanted to talk about here today and then I'm going for assignment is writing in the chat the first time in 29 days Wow well so I didn't that's good so it's been less than a month um a lot of new content has come out on the channel since I last livestream so I wanted men to that but before I move on I just want to quickly give a shoutout and a thank you to today's livestream sponsor brilliant org if you have never been to the brilliant website before it is a website full of daily puzzles and challenges and courses math and science and in particular they have a lot of new content around computer programming and computer science so you can sign up at brilliant org slash coding train that lets them know you found it from here it helps me out a little bit and it's free to sign up and then they also have a premium a premium service with that unlocks all the content on the website and the first 200 subscribers who sign up through that URL will get 20% off so I'm going to come back in about an hour in the middle of this livestream and pick one of the daily challenges to solve with you or by myself I don't know are we together it's very confusing I feel like I'm with you but all you are to me is this little round glass lens that I can stare straight into longingly wanting to meet you in person although many of you I did meet in fact I did meet a bunch of at the i/o festival deep breath so um I'll come back and talk more about brilliant thanks so much this has really opened up a lot of possibilities for things that I can do with this coding train thing thank you to brilliant again and let's see oh okay so that's why I didn't have the train whistle because I brought my train whistle with me to Minneapolis to the IO fest of hope I didn't leave it there but I apparently I left it in my apartment because I brought a giant bag all this stuff back with me I brought my ukulele I brought this bag look I even have like a youtube branded bag that I carry around with me now I brought my random numbers book everything no just no no no train was off but I do have a bell that'll get us somewhere alright what else do I want to talk about here could wear my IO badge other things look I just want to point out that the IO festival really knows me really well when I arrived a little thankyou or welcome note was in my hotel has a lot of nice information in it so we're gonna ease back into things today I'm gonna do a pretty beginner friendly example I'm gonna go oldschool coding train and back into a simple game coding challenge and do the Google Chrome dinosaur game but let me let me talk about some things I have here on my list all right most importantly perhaps I want to tell you about something and actually I'm gonna just play a video for you I have to change the sound settings so that you hear them I think if I go to multi output device you're gonna hear the sound now open up the browser so if you this is actually still unlisted I should make the playlist listed this is a new series that now has 20 videos in it I would say half of those videos are publicly listed under the channel homepage so if I go to youtube.com slash the coding train you can see a lot of my recent uploads have been these videos 2.7 3.1 API calls project wrapup accessibility design I am releasing a new series of course if you will it's 20 videos long about working with data and API is in particular with native JavaScript with some new JavaScript libraries and serverside in note yes so this to me is really a follow up of you know your first learn to program so if you've learned if you're learning to program with JavaScript clientside p5 yes this is by the way where you should point people you know there's lots of other resources on the internet also but if you're looking to pull new beginner programmers to something on the coding train this is what you want to point them to code program with p5.js that's the complete beginner series now I have an intermediate series that kind of goes to the next level does some stuff without p5 a lot it's actually almost all without p5 and so actually I could keep explaining it to you but there's a little nice trailer or 2 minute introduction video that is unlisted with no thumbnail that's the YouTube automated thumbnail and I'm just gonna play this for you now and then I have a hello and welcome to a new course on the kodi train called working with data and api's in javascript so this I imagine as a wonderful next step for you are you a beginner programmer did you maybe just not live baby by watching my live code programming with p5 Jesper oculars recorded damn this is a place for you to take a next step around working with data I'm gonna look at tabular data CSV what's a CSV JSON data what's JSON but all of that is really just the warmup the opening act for the main event the main attraction what you're really here to see which is serverside programs it's notice here if you've only ever done p5.js or other types of clientside JavaScript programming you're missing a big piece of the puzzle in terms of the kinds of web applications that you can build all the material for this course is broken down into three modules the first module is just some clientside JavaScript basics some native JavaScript building blocks for what I'm going to do in modules 2 & 3 and there I'm gonna build full stack web applications both the two projects I'm gonna make one is called the data selphie app and the other one is called the weather here they're both based on projects by Joey Lee who developed these sample projects as part of his teaching at ITP and of course called Kwan humanists so I'm gonna go from start to finish to build two web applications for you and hopefully you'll be able to build on what I make and create your own web applications if you happen to make a project your own creative project you can go to the coding train com where there's a page for the course and you'll be able to share links to the projects you make there before I get started with module one there's one more introductory video that will come next that's just going to go over what do you need to have installed in your computer what kind of tools do you need what kind of prerequisite knowledge you need to have before you get started with the video so take a look at that and hope you enjoyed this ride on the coding train were you data and API is in JavaScript so one of the reasons why I wanted to highlight this this morning is one I'm hoping that this this was done in a very different way almost all of this content actually all of this content apologies was not done in a live stream I recorded it offline if you feel so inclined I want to join as a member or a patriot of the coding train I do i do broadcasts or if with an unlisted live stream a bunch of the recording sessions it's not as I think I don't know what if anything I do is interesting to watch apparently some some some what is but a lot of it is me just standing in front of a green screen so it's a little bit more of a peek behind the scenes but but so if you're thinking uh you know sometimes I have redundant content cuz it's a live stream that's an edited version you wouldn't have seen any of this already and one of the reasons why I'm sort of pitching this to you right now is interestingly enough it's not that I've been releasing these videos about one per day over the last couple weeks and the viewership on them is I don't know maybe a half or a quarter of what the coding challenge videos are which makes sense and I'm not necessarily here purely to optimize for clicks and views I'm here to try to create an educational YouTube channel and sometimes that results in videos like that snake game video that apparently 2 million people have watched and sometimes it's a more obscure topic that a few thousand people have watched which is still a very big number kind of amazing to me so but I did just want to mention it because I don't know maybe it's just to ask people to check it out and share it and encourage friends who might or colleagues or family member who's or whoever you know read to person on the street that you bump into it was like you know what I really like to know how to do serverside programming JavaScript would know it so and of course feedback is welcome so I will let me see can I easily post this link into the chat I think I can't so I'm gonna post this link into the chat know that's me this is very confusing I'm going to my home page I'm going to the live remembers or you know me in the past and I'm gonna paste this here and there you go did it get hidden No so there you go boy the chat is really uh there's be nice to each other everybody fill fill the internet fill the YouTube chat and comments world with kindness and welcoming energy today please if you will I would really love that okay so alright so check I talked about that what time is it 1045 alright I talked about brilliant checks summer schedule let me mention to you summer schedules so I am planning three three live streams in June one of which you are watching right now it is today the next one will be a week from tomorrow so Friday and then the one after that I can't remember I think it's gonna be Tuesday so stay tuned you know I don't you know people you're overwhelmed with subscriptions and notifications and all sorts of stuff so turn on turn Do Not Disturb off on take a break from the computer but if you really want to know when I'll be livestreaming next probably the easiest way would be to subscribe and I will demonstrate this to you click that alarm bell thing because you will get a notification oh I sound like one of these youtubers that my kids watch well all they do is talk about clicking the alarm bell ok dantdm oh there's some awesome DIY craft videos I watch a lot of craft videos and a lot of game videos not me but with my children okay case you're wondering okay summer schedule alright now this is Wednesday not Tuesday Thank You Simon has reminded me because I published the schedule in our in the coding train patron member slack channel Oh something else that really should mention clothing train has a new community manager sigh so side just got started sigh I met Sion spelled C Y at IO Festival in Sai is in the process of moving to New York will be helping me with mailings of stickers and books and rewards and patrons and memberships and descriptions and thumbnails and all that kind of stuff so you can check out you can check out twitter.com slash the coding train this social media account is now run by psy and so tweet at the coding train say hello welcome psy welcome to the community excited to be working with you and then also brand new if we go to Instagram I don't use Instagram so I don't really know what I'm talking about I think it's coding train underscore someone could help us figure out how to get coding train let's see if this pulls something up mmmhmm do I have to login hello welcome to watching an old person use social media let's find Instagram oh wait a second that Cody crane who is this this is somebody back there we go and you can see this is a nice little post this is a AI generated rainbow it's generated using something called style Gann it was trained on several thousand images of rainbows tagged on Flickr I hope to come back and do some videos about how to train your own machine learning rainbow generator but we'll come back to that not today not today but coming soon this summer using a tool called runway em out so runway ml is a application let me just mention it really briefly I'll just pull it actually is in now public beta you can see look at this what I love about this is look here we are in the runway website a little like screenshot of runway in actions doing I think like maybe dense pose and look at this over here oh look at that oh look at this page of code but Danish it but just in the photo just subtly just like sitting over there quietly in the stack of course also processing processing cases recent paper ISIL Salih wit book anyway alright so I encourage you to check out runway I'm definitely gonna be doing more videos with runway coming soon and I'm an informal advisor to the company so it should be transparent about that okay there we go what else oh right now ml 5 j s work ml 5 is a fredley machine learning library for the web it's built on top of tensorflow das I have talked about it I have made videos about it there recently was a big new I think it's version we'll find out I'm gonna go to getting started it is version zero point three point one currently so there are many many many many many new features but before I show you what some of these features are let me just quickly I want to thank this is a brand new website let me thank Milan and Nicole and Arnab Milan and Nicola recent graduates of Parsons Arnab is an ITP student when she is an ITP researcher so is Joey and then there's this weirdo named Dan I don't know how to pronounce that last name chief Mon I think it's so check out this new website we've done a lot of work to relaunch the website to make it more clear to add better examples better documentation I'm gonna use this in a video tutorial today but what's really I think the most exciting thing is if you go here under reference previously ml5 just had maybe three or four maybe five or six features and now it has many more so you can see you can use there's an image classifier there's pose net body pics and the u net models thank you to zayeed let's see on twitter as i eed i'll it was an AI researcher from yemen I believe this is Syed Ali Ave who is working from home right now don't bother don't bother Saeed Saeed contributed the u net model we have a convolutional sorry no conditional variational auto encoder you can actually run a again a generative adversarial network of style transfer sketch RNN there's now a sound classifier I'm gonna use this today in a video I mean I am in a video and some more features so I encourage you to check out the website poke around join in the discussion on github and I will be making many more videos with this library over the summer okay so let me close this down check all right so I have a project that I really want to do that I'm hoping that I'm gonna get started with today although time is running short as many of you know I am everywhere I go on the Internet it's just me making doing this so processing is a javabased tool see the icon right over here the application software sketchbook if you will I use it in a lot of my coding challenges and projects and tutorials there is a way to extend processing with libraries and I have made a few libraries in my youth let's see if we can find anything like oh well I'm maintaining that one I made this QR code library that really probably needs updating all these are so out of date oh boy oh my god this is this doesn't even isn't even a thing anymore it's still on the website anyway box2d here's one that I'm actually maintaining not box2d itself just a thin wrapper on J box2d to connect box day prospects so why am I talking about this I have really wanted to make a series about how to build a processing library how to create basically create and compile a Java library that can be imported into processing directly you know most of my energy and time in my courses and teaching is sort of moving towards JavaScript processing is my first love and I still use it for a ton of stuff and you know there are fewer maybe Java developers in the creative coding world but I know a lot of you viewers still use processing quite a bit and I think it's you know I just want to have made this tutorial even if it's not the sort of most popular or primetime cuttingedge thing to do I think it'll be useless so I thought what I would do with that is make a library that allows you to just use open simplex noise very easily in processing and if you have no idea what open simplex noise is that would be a completely reasonable thing to wonder but I made some videos about that so you could go back and look at my open simplex noise videos that video is how I found you David is asking I know David is really hoping for the processing library it's always the one that gets pushed out he's saying am i doing the die soare game first or the processing library I'm gonna do the dinosaur game first which admittedly means I might not get to the processing library today but I've committed to doing it this summer sometime okay I need a player for the dinosaur game I think Enola is asking how long does it take before you get the slack invite all right NOLA let's let me whoops why am i typing here let's get in contact about that okay so I think this is gonna be my dot the equivalent of the dinosaur so let's just put this a copy this on the desktop let's use this as the background and what should the dinosaur have to jump over should be trains like the trains coming at let's make them trains oh but the cactus thing about the cactus is there are multiple ones right let's play the dinosaur game can I just go to like chrome Dino or something like that no well that'll work oh yeah all right let's see let's see what score I get now this is pretty bad I guess I did my high scores 47 and am I gonna get really popular now that I'm live I'm a lot gaming live streamer I'm gonna have like hundreds of millions of subscribers this is the problem because this game is not that hard I mean I'm sure I'm gonna mess up eventually all right I could just tell that they're like I should just check my subscriber analytics I'm sure just going through the roof but basically like you know the most popular gaming youtuber ever oh wait oh it got to be nighttime I've never made it this far I mean I've never actually played this before but is it get hard oh it's any time again what happened I hit one of those flying thingies pterodactyls are oh there we go Birds okay the terraced axles okay and it rises I to jump over that oh the sound effects are quite loud let me thank you for pointing that out let me turn that off now I'm just gonna go back to this okay oh the video is how after the video on the home page of processing says Simon alright the chrome version starts to get harder over time alright alright so I need some sort of thing to jump over I suppose the logical thing would be like like like what's in the coding train world I don't want to get too tripped up on this let's I feel like the Train is a good idea let's just use the Train okay so I'm going to take this and put this on the desktop so this is train and this is the dyno it's not really a dyno we'll call it unicorn and let me just move this stuff out of the way that I don't need any more on the desktop what's this all right okay so I background if train Oh can I flip it Mac preview can I flip this I can obviously flip it was I'm drawing it this is really important what's the easiest way to flip an image you would think that I know how to use the computer by now I mean I know I could do with Photoshop do I have Photoshop on this computer well that's gonna be crazy to open up Photoshop not a sponsor all right why not apparently it works on my computer image image transform there's no trance image rotation flip canvas horizontal there we go oh that looks weird no that's how a train would go that way okay okay train unicorn background and here we go all right now crazily you think that I'm about to show you the dinosaur game but I'm not what I'm going to do is I'm going to do a quick tutorial that will add to how are there seven hundred how is this even possible let's rock with you people there's a whole world out there of things I'm looking for beginners guide to boil I'm looking for beginners guide a creative playlist ah here we go this gigs okay I I'm going to add I'm going to make a quick tutorial that will go as number eleven in this playlist and we're gonna go here and I am going to leave this to the side leave this to the side actually let me just close these things as I can get them back later and actually so now I want to let me rename this a sound classifier okay okay welcome back to the coding train as per usual where I'm completely unprepared to do anything I have not practiced or rehearsed or planned this at all and yet somehow I'm going to make some tutorial video okay let me go to I need to pull up another URL simple audio recognitions speech command this is what I'm looking for alright so let's open this it's common voice dataset all right and you just make sure the reference page I know I know has what I'm looking for yep speech commands le w oh it does not so the oh yes it does okay great alright does this actually work by the way no interestingly so this is by the way this is definitely something we need to fix the speech commands in bed doesn't work on the page and we wants to file a get up issue on the ml5 website you're welcome to all right so we're going back to home all right all right here we are okay all right okay everybody stretch oh by the way I'm signed up to run the New York City Marathon so I'm in okay shape in terms of running but I'm saying not trained at all for that long of a distance but mainly I have like back issues I think I need to do a lot of like core strengthening so bug me about that remind me about that I'll talk more about marathon training thinking of doing like maybe a fundraiser for processing foundation we'll see more about that to come all right what's it like 300 in the afternoon now okay it's 11 o'clock not so terrible all right hello welcome to another beginners Wow and there goes my injury wait it's really there we go let's do this alright alright let's do this this is better okay hello and welcome to another beginner's guide to machine learning with ml 5gs in JavaScript so I'm here it's been a while since I added a video to this playlist and a bunch of things about the ml 5 library itself have changed there's a new release zero point 3 point 1 there is a brand new website which you can find right here at ml 5 j s org so to some extent this video is really an update about the library but I'm also going to look at one particular feature a new feature of the library sound classification and so that's my opening so here's the thing so what I did with that just so you know what I did with the data and API series is I did stuff like that but I just did it with the green screen behind me not livestreaming and then Matthew who's the coding training video editor put together animations and screenshots and things which I think actually is a is a really good result but it's it's definitely a lot of work and time production wise to do that so for right now I'm just going to continue with my normal methodology but I'm gonna pause at little moments where I know we could edit to the next thing that I'm going to talk about which will be this so let me make this bigger which okay all right the machine learning model I'm okay what am I trying to say next right the machine learning model that I'm going to use in this video is the speech command recognizer and this is a model available from Google as part of tensorflow j/s models now so this is really important distinction I am NOT here to train a sound classifier I might do that in a future video and show you about how to apply transfer learning which is something I did with images also to sounds I'm just gonna make use of a freely available pretrained machine learning model anytime you use one of those things even in just a playful and experimental way which is what I'm doing it's good to do a little bit of research and take a look at like well how is this trained what was the data how what are the considerations around how the data was collected and so I encourage you to read through the readme here on github and in particular to click over and read the original paper about this speech commands model and there you'll see if you look it'll talks about some of the data sets like Mozilla's common voice data set 500 hours from 20,000 different people this libri speech thousand hours of read English speech I don't know how to say this tidy digits tie did it t did it 25000 digit sequences which apparently was probably me right it's just like hours and hours of me reading this random number book but so I encourage you to check out this paper and you can also find code for how to use this model at tensorflow J s in the TF GS models get up repo itself however I'm going to show you how to access this model in a quick way with the ml 5 library and this is the new as of you know today which is know what's the biggest date June 13 2009 teen I'm gonna show you how to use this with the ml 5 library as it stands today so I'm gonna click here under reference one thing you should see there's a lot of new features have been added to the ml 5 library I'm gonna come back and do videos about more of those but the one I want to highlight here is sound classifier so I'm going to click on this and any for all the different functions available in ml5 you'll find a documentation page with some narrative documentation a little bit of a code snippet and then some written documentation about what the function names are and the various parameters and things like that and by the way I'm noticing now this will hopefully not read this is like a mistake this is documentation that's actually for either body pics or maybe the U net model which is does something called image segmentation so we've got to get that fixed I'm sure many github issues and fixes will be out and done by the time you see this unless you're watching it right now I'm livestreaming alright yeah so time to time out for a second Ross stall is asking me in that in the patron group I don't get why you don't just record the green background and livecast the combined image and alko rightly responds open broadcast studio doesn't do that however this is the other thing that I forgot on my list that I meant to talk about today this studio where I am right now he is gonna be gone at the end of this month so actually later today I'm coming back and do doing a documentation video about this setup to preserve it I know people have been asking for that for a long time I have this really crappy version I deal with my phone but I'm gonna do a more produced version of documenting this studio and I'm gonna be setting up to record later this summer somewhere else a little TBD about that but I'm hoping to get some new equipment and maybe get some equipment that allows me to record a multiple camera feeds at the same time so I can live stream and then also reedit later yeah NOLA says I know I'm off the track here but NOLA says he promised to read his entire random number book when he reaches 1 million subscribers which I still hold true to that promise I just don't know how to do that because math wise it would take days I think so I gotta figure out what I'm gonna do exactly but maybe I'll just read 1 million digits of pi it's not as exciting I could build a program to livestream me reading the digits from the book that's not a bad idea all right ok alright I'm alright so in case you've forgotten how to use the ml5 library I'm just gonna show you as it's documented on the ml 5 web web page so first of all you can go here to this QuickStart you can actually just click on this open p5 web editor sketch with ml 5 just added you know what I'm gonna do that that's what that's the way I'm gonna do it but you also could just put a script tag in your HTML page referencing the current version of the library which as I said is zero point three point one as of today but probably while you're watching it it'll be a higher number so let me go and just open up this link here and now I'm in the the p5 web editor you could see the name of the sketches ml 5gs boilerplate Thank You Joey Lee who's a contributor ml five is done a ton of work on the website and all the different features and oh this should actually be 3.1 I'm gonna fix that I'm gonna hit save and then I'm gonna rename it to sound classifier and I am going to then go over here and go to sketch dot yes and I'm gonna run this and we should see there we go so now we know it's working because there's a little console log to log ml 5 version if I hadn't imported the ml 5 library I wouldn't see that we see that here so what are we gonna do let's load the sound classifier now most of the models I haven't been using this in my previous videos most of the models in ml 5 are now actually available to you in preload meaning you don't need a callback function you can just load the model in preload and it'll be ready by the time you get to setup so I'm gonna make a variable called sound classifier in preload I'm gonna say sound classifier equals ml 5 sound classifier now I need to tell it what model I want to load so I need to in here put the name of the model I want to load and in theory in the future there might be a bunch of different options different kinds of sound classifiers or maybe a sound classifier you've trained yourself that you want to put in there and I'll come back eventually show you videos about how to do that but for right now just gonna say speech commands and then I already forgot what it was called so I'm gonna go back to the ml5 website which is here I'm gonna go to reference I'm gonna go to sound classifier and I'm looking for it here so it's speech commands 18w this is a particular model that's been trained on 18 specific words and you can see what those are the ten digits from 0 to 9 up down left right go stop yes no that's 18 10 digits 8 different words all right so now I'm gonna go so was 18 w and then once that model is loaded I need a callback so I could just say sound classifier classify I might just call it got results so in other words I'm mmm oh it's not to find right so I'm telling the sound classifier to classify now by default it's just going to listen to the microphones audio maybe in the future and part of ml5 will be able to offer hooks to how you can to connect it to a different audio source but it's basically just gonna work with the microphones audio then I can write a function called got results and I need I'm gonna get rid of the draw loop because I don't need that right now and let me just turn off auto refresh so and so that doesn't keep refreshing and then now if you remember ml 5 employs error first callbacks meaning the callback function requires two arguments an error argument in case something went wrong and a data or results or some other argument where the actual stuff is so I'm gonna say error and then I must say results and then I could do a little like basic error handling I'm just gonna say you know console.log something went wrong and then and then I can also like actually log the error all right and then so now and then I'm going to say console log results so let's see if we get anything oh I have to run it again you could ignore this error oh so they came in ready up getting more stuff alright so pause for a second yes so one thing I want to mention so in the coupling Zeit is asking where's the dinosaur game haven't gotten to it yet coming soon you'll see a reason why I'm doing this first cause I'm gonna use this in the dinosaur game other comment that came in from the chat Alka points out that you can use unpackage calm / ml5 to get the latest version I don't often recommend doing that because ml5 is a library in such flux that if you've written a project and you want to make sure it continues to work but new later versions of ml hive could come out that would break it so it's referring to a specific number is actually pretty good okay this is why I forgot I love using the p5 web editor but it's hard to sort of debug these arrays because all this other stuff is coming out so I think I have an idea this is getting a little hard to debug just because so much stuff is happening here the console and this huge arrays but there's actually something that I missed that I could add here which is an options variable so one of the things I can tell there's a lot of things I can set as properties or parameters for how the sound classifier should work but there's a very simple one which I'm going to just look it up in the documentation because I don't remember it's called the probability threshold so I'm just gonna copy paste this here what this means is basically the the sound classifier the sound classifier is going to trigger an event where it's going to right now on console logging all of this information about what it thinks it heard based on a confidence level for how sure it is it heard one of those keyword and right now a lot of those events are triggering because I don't know what the default probability threshold is maybe it was 0.7 maybe it's 0.5 but I'm gonna make that really high I'm gonna say 0.95 so it has to have a 95% them the machine learning model has to calculate a 95% confidence score before it gives the event back to me in ml 5 so let me do this let me run it up let me look here shoot well I'm gonna I realize now what I need to do I need to not talk I said let me give it point nine nine let me try point nine nine let's push it a little let's add point nine nine and then I'm gonna say a word I'm not gonna speak anymore because I want to be able to look at that particular event up oh you know what's happening I think it's giving me background noise over and over again also I don't know what's going on this is not working well I'm gonna you know what I'm just gonna do never mind I have an idea we go back to where I was 0.95 oh I didn't pass the options Thank You Nathan or hey sorry once I've created that options variable with 0.95 I need to pass it into the constructor as the second argument so now we pass it in there I'm gonna run the sketch I'm gonna say the keyword up and then I'm gonna try to look into the console to see if that's what came in up and there we go look at that now other stuff is coming in but you saw it there so rather than kind of debug with the console let me actually put what I said into on to the webpage itself and just pause for a second oh yeah re let me let me bring that up logging one of the items from the array would be better why don't I think of that all right let me go back it'll be a better demonstration in the video with really when it gets edited so and this is actually object labeling confidence okay also to make this also to make this easier to see let me actually console.log results index 0 label and results index 0 I believe it's called confidence so rather than have this big array logging in the console let me do this alright so now we need to have a 95 percent confidence and I'm gonna run this up 1 2 down great back well it doesn't know what that is zero one two three four five six seven eight nine nine trigga all right great just do something really quick I'm quickly adding background color white so to the HTML body because what I wanted then do just quickly before I finish this off but to finish this off let me just add a Dom element using the p5 Dom library I'm gonna just say result p4 results paragraph I'm going to say result P equals create P waiting and then right now I'm gonna say result P dot HTML whoops result label sorry I left my yeah actually so people are asking really interesting questions which I which I want to get to in a second all right then then I can turn these then I could turn these results into a string by using a string literal so back tick and then put curly brackets put a colon here and curly brackets and a closed back tick okay and let me also say result P style is it font size font size just 32 points so we'll be able to see it alright here we go ready for this one two five up down left right okay so you could imagine now what you could do with this for example you could control a game with your voice and in fact I'm gonna do that in one of my coding challenge videos so take a look in this video's description I'm gonna do a coding challenge where I program the Google dinosaur game and then I'm gonna add this sound classifier to have the dinosaur jump books there won't be a dinosaur it'll be a unicorn to have the unicorn jump when I say the key word up alright thanks for watching this additional ml 5 tutorial video about sound classification in the browser oh wait wait I forgot to answer these questions well it doesn't really matter I'll just answer these now reask shouldn't mention the browser asked for permission to use the mic it should I think that I have set maybe I should mention this in the video I mean I'm gonna do my wacky I'm gonna give meteo nice little editing challenge I just want to stop and mention that if you're following this along hopefully your browser is asking for permission to use the microphone the reason why that didn't happen here in this video is because I've already set my browser to allow use of the microphone on the p5 web editor pages but for security you can't just access anybody's microphone from a web page without the user giving permission so hopefully you saw that happen and if you didn't that might be why you run into an error if you haven't given that permission right it should ask permission right let me let's see like like if I go share and go to fullscreen or present and then I go to new incognito window yeah that's what you'll see oh you don't see this sorry that's what you'll see so Matthew you can also like screen grab this and like use this or something when we add that okay so I also want to mention one up I also want to mention that and what time is 1130 oh I'm gonna take a break now actually before I do the Google Drive dinosaur game so because I hours that I would take my break and look at a challenge on brilliant org but before I get to that also was asked re writes for some digits it picked it picks up with just a part of the word that's why you get multiple reads so incidentally something that's really interesting about this model that is not clear that I'm not showing you explicitly but I would like to come back to and I probably should mention this in the video is that if you can believe this it's actually doing image classification now let's think just think about that for a second how is this sound classification model doing image classification just think about that for a second then I'm gonna come over here and explain this to you I turn the whiteboard on oh why is this don't worry and you know maybe not sure maybe it will splice this in let's place this in okay everybody's saying how I'm ripping off of code bullet as if the Google dinosaur game isn't just like the most obvious thing to do there's no way to not just do the same thing that everybody else is doing okay so yes all right everybody's making good good good questions and why is all this stuff coming in here click over here okay sorry I also want to interrupt this video for a second to talk about how the sound classifier actually works this is kind of a surprising little tidbit and I'll come back to this more if at some point I create a video about training your own sound classifier now there's different ways you could do this this isn't the way to make a sound classifier but this is the way that this particular model works it's actually shockingly amazingly doing image classification so if you imagine we have this thing that's called a convolutional neural network this is the underlying architecture the structure of that machine learning model that does that does the classification typically this kind of model is something that we would put images in like we might have images of cats oh boy and images of dogs I don't know is a dog whatever that doesn't hold on we got to cut that I'll let you eternal images of cats we might have like an image of turtle no that's not really a turtle but whatever so the idea is that we're sending these images in and getting back a label and maybe a confidence score so it's the same idea the only thing is now we want to send in audio and get back a label like up or you know one and a confidence score so how would we convert sound into an image now again there are other nerve network architectures of which you could could receive sound data and maybe a more direct fashion but if you've ever looked at a graphic equalizer or some type of sound visualization system I've made examples like this in p5 you can draw something that's often referred to as the spectrogram which is basically a graph of all the various amplitudes of frequencies of the wave patterns of the sound itself so if we took like a onesecond spectrogram and made that into an image we could then send that image into a convolutional neural network saying that's the image that is produced from the spectrogram of somebody saying the word up so underneath the hood this machine learning system even though it's designed to work with audio data it first takes that audio data converts it into an image and then sends it through a very similar types of neural network architecture to standard image classification models and you can read more about that in that paper itself ok so let's look at the paper for a second to make sure I've right about this before we include that no I'm just I'm looking for where it says that explicitly but that's I remember reading about this and looking at so I'm gonna have researched that a little bit more to make sure I'm correct before we include that in the actual edited video o s Byrne is writing I just did my master's thesis of around sound separation spectrograms used to be the way to go however most people have now moved to 1d convolutions on the wave form directly so Hassan jito saying do the dinosaur game so s bird if you have any knowledge about this and can kind of like fact check what I just said in terms of this particular model I would love to hear about that I'm pretty sure yeah I'm pretty sure that's what it's doing because this model will actually draw the spec browser FFT and pretty sure that's what it's doing it's the spectrogram data it's not really image classification because it's not real but yeah anyway I think that's good enough okay all right time for some dinosaur game Shazaam doesn't use image classification but rather vector grouping the ideas the same okay okay so now now I'm changing this back to dinosaur game how's the font size here looks a little small actually that's better and what's the size of my background image I just see well I'm gonna I'm gonna we're gonna do the Google x for game very soon 800 by 450 you know what I just want to make this 600 so let's cut some of it off why why must you do this to me here we go 600 here we go there we go that's better it's kind of offkilter but that's fine just cuz I want to have more screen real estate okay great okay okay so our all right let's so okay so what it what is it it's 1130 I have till 1245 an hour and 10 minutes so I'm definitely gonna get to the dinosaur game and then control it with speech that's gonna be fun now I'm gonna do after a short short break and then maybe I'll get started talking about processing libraries and see if I can get to that as well okay so let's talk very briefly about brilliant so I am really thankful for a brilliant org to be the sponsor of the coding training livestreams brilliant is a website that i've been actually using myself quite a bit more recently mostly if I'm being honest to try to look for ideas for coding challenges because there are so many different types of puzzles and projects and courses that you can use and what's the nice thing about it is unlike watching a video tutorial which maybe you like to watch me at video tutorials there are actually interactive lessons where you try to answer questions and and and through diagrams and animations and and different different interactive features to sort of play around with these different ideas so one of my favorite thing the way that I like to use this so you can see here it's asking me to continue learning the computer science fundamentals so this is a course that I have looked at and talked about I did a coding challenge around programming stacks a while ago the stack data structure but what I want to look at is I want to look at one of the daily challenges today so let's look first together at how fast is an algorithm because this is a computer science one so I'm gonna click on this and let's read this through together and see if we can come up with an answer and then and answer it in the in the comments itself okay an algorithm is a computational process a set of instructions you can follow to get a desired result okay that's good I understand that so this is true I think computer scientists sometimes like to conceptually think about rhythms first and then program the algorithm on a computer later later on so and then ah so measuring the speed of algorithms is is a super important thing so actually what would be interesting to do is try to also write a little bit of code in JavaScript that benchmarks how long something takes to run maybe we can add that in as our little exploration here so but what this is saying is sometimes you want to be able to predict how long an algorithm is gonna take it's not just about like writing the code and then benchmarking it there's a there's a about this before there's big onotation or the order of an algorithm which kind of which describes sort of like amount of computational cycles for like the sort of worst case scenario there's different ways of thinking about it like these sort of average computation time or the worst case time this here is looking at a sorting algorithm which is usually a place to start and I've done a bunch of different sorting visualizations who I like this I kind of want to just program a nice little animation of things sorting so most sorting algorithms work by comparing two elements and then swapping and actually this relates to something that I want to do soon I want to do a coding challenge on Delaney or Delauney triangulation which involves looking at different ways to make triangles with a bunch of points and then flipping them which sorts a similar concept selection sort is is a way of looking over the array many times finding the largest from the smallest element and putting it in the end then the next one and putting them the next one and putting on the end so this is giving us some information about selection sort and how what the function what the speed of a selection sort which is n the number of elements in a list times n minus 1 one fewer divided by two so that makes sense because that's how many times you need to check all n elements then n minus 1 then n minus 2 that n minus 3 ok so here's our algorithm that we're gonna check ooh alec is pointing out that he made an animated bubble sort so maybe I can pull that up so let's check out alphas animated bubble sort code pen dot io / Alka oh you have too many code pens so I'm gonna have to just go to it directly pen mga kyk a slash right oh I love this oh whoa these look like little planets that is so cool I assume everyone's seen the hungarian dancing sorting video if you haven't you should check that out okay this is cool alright so thank you Alka for that all right so here's our algorithm for each of the N numbers in the sequence Oh to check okay so we're trying to check if a sequence is sorted so let me go over to the whiteboard here that doesn't actually work okay that's fine let me go over the whiteboard here and let's look at will come up with an array let's give it up n equals five so we're gonna start with N equals 5 and we're gonna I'm gonna make it sorted so let's start with an array that I know is sorted just to sort of look I think that'll make it easier to look at 1 3 7 9 12 arbitrary sequence of numbers sorted so the algorithm that we want to do is free is forever for each of the N numbers in the sequence compare it with the number to its right if there is a number there the sequence is sorted if every number is less than or equal to the number to its right so we could start looking at the just gonna give us multiple choice but let's not even look at the multiple choice yet alright so let's look at this so maybe in your head to think about it maybe you just know the answer already it's this is a this is a I would say one of the easier daily challenges nothing is super easy if this is programming and thinking about algorithms is new to you this could be very difficult but in terms of different sorting algorithms we've got terms like a basic level thing here so I want to check each element against the one after it so is one less than three yep is three less than seven yep is seven less than nine yep is nine less than 12 yep oh there's no more numbers I'm done checking this array is sorted because I got four checks and how many things what's the speed for it took me four it's not like it took me four kind of checks for computational cycles so for five elements for so I think we can extrapolate pretty easily here if we had ten elements how many times we're gonna have to check nine so I think the answer should be n minus one I don't know is that the answer you've got I mean I actually have not gone through and like checked with what it says on brilliant or what other people have said yet today so so let's go through here these are all of them this wouldn't be so crazy to answer this right I wouldn't be so crazy to answer this at n because you could sort of think of and that might be big onotation cuz big onotation is kind of not giving you the sort of exact number but sort of uh I guess the worstcase there will be n minus 1 but that the minus 1 is sort of irrelevant in terms of the order of the algorithm it's either like N or N squared or log n but let's pick n minus 1 let's hit submit got a one day sweet so I if you buy the way you use brilliant did you have a nice longer than one day streak like maybe tweet me an image a screenshot of your streak I'd be curious to see who's got the longest streak here of coding training viewers let's go continue and we could sort of see oh look now I can write an explanation so let's write an explanation I don't let's write an explanation of this so first of all even beyond an explanation let's make a little code example so I'm going to make an array and I'm gonna do I'm gonna just put these numbers in it and actually let's let's let's put random numbers in it so I'm gonna say a for let a equals zero is less than 5 I plus plus array index I equals a floor random 10 the thing is are we really it's going to be so unlikely for us to end up with a sorted array but that's fine and now what we're gonna do is we're gonna write this algorithm so I'm gonna say let sort it equals true so I'm going to assume that it's sorted I'm gonna assume that it's sorted and then I'm gonna do every single check and if it's not sorted if one of these happens to be greater than the one after it then I can say it's not sorted and of course I could break out as soon as one is not true I could break out but I'm not gonna bother with that so let's then say okay so we want to say now for let I equal 0 is less than array dot length I plus plus let's do this a is array index i B I can't type B equals array index i + 1 if a is greater than B then sorted is false now of course I could then add I could add a break here right I don't need to check any more because if it's either sorted or not sorted but just for the sake of argument let's do this and then I'm going to at the end say console dot log array and console dot log sorted so let's see what we get and we're gonna have an error amazingly we didn't get an error so javascript is so happy to just like go with the flow here let's do let's do a counter let's call this like N equals zero I'm gonna say n plus plus now of course we have I so I don't really need to do this but let's also console log n so it should be 4 right n minus 1 I got 5 why did I get 5 because I'm actually checking if the array has 5 things in it index 0 1 2 3 4 I'm checking index 4 with index 5 which is nonexistent and I thought I would get an error because I'm programming like Java or C I'll be like no I'm sorry you're off the edge of the show hey you're falling off the edge of the earth everything has to stop this program is shut down but but here javascript is very happy to just sort of like try it try to go along anyway so let's say but this so this should really be array length minus 1 because I don't need to check the last element against anything past it there's nothing past it just the second Alice teman it's the last so let's run this now and see can we could we possibly by doing this ever randomly get a sorted one what's the probability somebody should calculate this what's the probability of picking 5 numbers between 0 & 9 in a row that happened to be sorted it seems pretty unlikely let's uh let's make this 3 I think we'll have a pretty good chance with 3 there we go we got it sorted so it's that's true so we know our algorithm works we know it's n minus 1 because no matter how many numbers I put in like I could put a hundred numbers in 99 checks and it's false let's just do one more thing that's actually like look at how long it takes so one way to do that would be to say let now equal Millie's right so Millie's is a function it would be like system Millie's or system not milliseconds in native JavaScript but p5 has that there so we'd say and then I could say console dot log Millie's the current Millie's now and it's really not now I should say it saved time let's call it save time so now this would be how long the algorithm takes well that's weird I shouldn't get a decimal number am i Millie's should be a hold on I thought Millie's is only an integer number let's go here see what does it give us Oh so the middle east function actually gives us milliseconds floating point in milliseconds so this was actually less than a millisecond it took which makes sense you know we could try I assume if I were to make this like a hundred thousand then we might actually have an algorithm that takes a little bit longer did I make that more than a hundred thousand wait what did I just do I crashed the browser what just happened I have an infinite loop somewhere yes exit page uhoh what's the chance oh that's good safety let's make this ten thousand and let's see how long that takes yeah five milliseconds that's not crazy five milliseconds I think what I by the way what I really need to do is move the dock to there this will stop happening now so make it much either so five milliseconds that's ten thousand let's do a hundred thousand Milly's his performance dot now under the hood okay thank you yeah 100 thousand it shouldn't take that this long what's going on like filling an array with a hundred elements and just checking each element against each other should be super fast so weird let's wait a little longer any idea why this is taking so long do the dinosaur game yeah it's coming I'm sorry everybody actually probably whatever is in the title I should probably do it first which would make sense oh it's crashing the console of course smash thank you smash highlights in the chat of course of course it's crashing the console stop okay of course it can't handle console logging stop I yeah so let's see can I can i reclaim control of this browser probably not here we go a bench mark brilliant puzzle let's get rid of this let's go to 10,000 ok 1 and 1/2 milliseconds now watch this this should now with a hundred thousand right if it was about 1 and 1/2 milliseconds it should just be 15 milliseconds actually 1.8 I guess there's like some advantages in terms of you know just there's there's like time it takes to probably like get started with the loop once you're already in it but you can see it's like less than 2 milliseconds for a hundred thousand numbers let's do a million numbers 5 milliseconds okay so we fit the idea we're benchmarking it let me go back to just 100 and let me let's take this let's finish this off oh let's go back to here and let's say the answer is n minus 1 today on the coding train we programmed a javascript demonstration of the algorithm and confirmed and 1 speed based on and elements here is the code and then I think what I can also do is I can add this I want to make an image look at this isn't this amazing that it supports latex because you often need to do like math notation and stuff and then I can also do this which is always nice and let's let's make this a little nicer let's say let's do console.log array dot length elements speed equals N and whoops what did I miss here what's wrong back tick speed equals this looks right to me I'm like losing my mind here oh no I'm missing this here okay and then sorted well let's add this milliseconds let's add this so our code example will be finished let's run it uh nothing goes here here we go coding is hard there we go alright so let's do a nice little screenshot of this let's go over to the brilliant website let's do this and go to desktop grab that screen shot which is 1155 o 6 a.m. and preview explanation there we go all right I'm gonna post this I'm gonna post this and so you know if you're interested in trying out some of these challenges or commenting on this thread here please go to brilliant org slash coding train you can sign up for free if you're interested in a premium subscription which unlocks a variety of courses and additional materials you can get 20% off for the first 200 people to go to really not org slash coding train from this from that URL so thank you so much brilliant for sponsoring the coding train I'm gonna take a 5minute break which should give you plenty of time to go sign up and give this a try maybe comment on this or make a visualization of it and then when I come back yes I know it's been like an hour and a half the dinosaur game yet when I come back I am going to program the dinosaur game okay so I will see you in approximately five minutes apparently I messed this up here let's edit this the link is not going to oh whoops the link is not actually going to the sketch I'm gonna fix that there we go I don't know where mine went but I think I fixed it now okay I'll see you I'll see you all in five minutes as always I always forget this I'm gonna do this this star this star this star this star song never forget the Vista this is somebody composed that song for me shoot I muted myself what was so funny as I'm uted myself I'm like undressing oh you'd only imagined what people thought I was talking about alright I'm I think that sound is back okay everybody relax good see it but a wait till the chat stops panicking and you've caught up what I was talking about there in my attempt to be humorous because I am a human but are you [ __ ] it's what I am I really just want to see the chat stop saying that there's no audio eventually it will come back we're back okay so what I was saying two things says hello welcome I'm back I am doing the part you've all been waiting for that coding challenge and it's time for the coding trade coding challenge coding train theme song I also wanted to mention that I started the new fashion Trusteer apparently wearing your right here out of besides this this I'm sure is like what all the kids are dressing like these days I just note that the fashion trend started right here on the coding train right yes what you do is you get a brightly colored tshirt that's much bigger than some other shirt you have and it pokes out and it looks really extra super cool it helps if you have spindly arms and then I was explaining that the shirt that I'm actually wearing is the I will refactor that later shirt which you can get at design by humans comm / coding tree or something like that music is too loud sorry boy this is all a mess sorry about that everyone all right music loud is this an ad style is this actually a thing I didn't invent it alright we got to get we got to get a move on here so let's see just want to get no rights over here now now I'm trying I thought this might be interesting to try p5 collide just to use a library why not it also has opportunity to show je s deliver so let me open those up okay yeah okay all right ah designed by humans calm slash shop designed by humans calm slash shop / coding trained this is this is where you can get your very own I'll refactor that later shirt okay alright now we are ready to go all right I should definitely bring back the timer right I have not practiced this I have no idea what's gonna happen but we're gonna do it okay all right coding challenge this is gonna be the last thing that I do today sorry David and everybody else who's waiting for the processing library at least if I keep putting it there it'll make me sort of get to it eventually haha where's my train whistle do I even have a train whistle sound effect is the music too loud ah okay hello and welcome to a Cody challenge Google Chrome dinosaur game edition of course I don't have my train whistle I didn't bring with me today this is definitely not gonna go well nothing am i coding challenges ever go well but I'm gonna give this a try I'm an attempt to program quickly the Google Chrome dinosaur game I'm these my own images and stuff so will be the unicorn game of course I'm gonna use p5 chess the JavaScript library p5 Jeff and I'm going to interact with it in a unique way that you have to stick around for the end of the video I'll just tell you now I'm gonna try to control with my voice okay so you skip to the end maybe I'll be doing it there okay so here we go let's get started so what do I need to do so first I'm gonna make a I'm gonna add I'm in the p5 web editor and I'm gonna add a file I'm gonna call it a dino jf even though it's not let's call it unicorn unicorn ojs and that's gonna be my unicorn and what do I need I also need to have those are like cactus thingies I mean those are gonna be trains so I'm gonna make a train say s add file so let's start by creating the unicorn class unicorn so I'm gonna use objectoriented programming because you know I do this by the way is exactly the same as flappy bird it's like really just doing the same thing over again but whatever this is a nice beginner friendly challenge so and maybe using objectoriented programming is a little bit overkill but let's give the unicorn a X location at 50 and a Y location which will be height because it's sitting at the bottom of the window but maybe I'll say like height minus 50 right now and then I'm going to create a function called show and I'm going to draw it I'm just going to draw as a rectangle right now at this dot X this dot Y and I'll make it 50 comma 50 so this is the Unicorn class a unicorn object has an X and a Y and when I draw it it's a rectangle at that X&Y with a within height of 50 and those will probably need to be variables eventually so let me make a variable called unicorn I'm gonna say unicorn is a new unicorn and I'm gonna say here you know dot show and let's run this there we go okay so of course I forgot what I always forget which is that I've added some new JavaScript files and I need to reference them in my HTML unicorn and what was the other thing called train all right so that's a unicorn and what I want is let me play that game again how does it work it just sits there so every time I press the spacebar it jumps so let's get it to do that first let's get it to do that first okay so what does it need in order to be able to jump it needs a velocity a speed along the yaxis so let's call this V Y and we'll say that's zero and we'll write a function called jump which we will give it kind of this like instant force so we're gonna like push it up so I'm gonna say this dot V Y equals let's say like negative five that's moving it up and then I'm going to write a function called move which says this dot y plus equals this dot v y so what we should see now is if I say unicorn dot move and then if I add function key pressed and say if the key is the spacebar unicorn dot jump this really is basically the same as flappy bird so far then we should see that velocity kick in so I'm always moving it based on whatever that velocity is but the velocity is zero the speed is zero but as soon as I say jump it sets the speed to negative five and we should start to see it move up okay here we go and I'm moving along here I'm gonna press space there we go all right so we need gravity so we need some form of gravity which probably makes sense as a global variable but I'm just gonna since the gravity is really only gonna affect the Unicorn I'm gonna put it in here let's say it's a 0.5 so gravity is in a way account acting force so no matter what it's doing the gravity is always adjusting the speed of the unicorn the acceleration basically so what I could do now also in move is say this dot V y plus equal this dot gravity however I don't want to ever let you can say now it's gone I don't want to ever let the unicorn fall off the bottom there should be basically a ground level so I'm gonna to do that let's say this so let's make this fifty a size let's say R equals 50 so we're going to kind of use that for all the parts where we're drawing and then I'm also going to say I'm going to have a constraint so I'm gonna say this dot y equals constrain its current y value between zero and really the where it's sitting at the bottom which is also height minus this dot R so it's stuck there and now if I press whoops press space you can see it jumps now that's a very measly little jump we need to be able to jump much more so let's set this to like 25 now let's see what happens okay that's too much let's just set it to 10 I maybe I need to make the gravity stronger too so there's gonna be a lot of finetuning of this but let's just do that and let me let's set this to 25 whoops and maybe let's set the gravity to 2 there we go this feels a bit more like the dinosaur game so this is kind of sad let's make our unicorn look a little bit more exciting let's load an image so I have on the desktop here I have some images I have a background which will be the background of the game I have a unicorn this will be the character with a little angry equal sign sitting on it and then the train will be the thing that has to jump over so let's so what I'm going to do here is I'm going to add these files I'm going to add file and I'm going to drag them in to the web editor it uploaded all of them and then in here I'm gonna add preload and I'm gonna have let you image let T image and let background image and let's load all those you image equals load image unicorn dot PNG and we're do the same for T image and background image this is train and this is background let's change the background to O so what did I get wrong here background is actually a JPEG so let's have the background now B background image there we go and let's have the unicorn where is it be I'm gonna say image unicorn image there we go it's so tiny well it's a pixelated it's so sad let's change this to 150 that's but it's x value shouldn't be what it should be here there we go so there's our jumping unicorn I'm gonna make it wider timeout for a second oh I don't reset vy thank you so that's a bug German DK dev is pointing out a really important bug because right now why is going down and it really like affects no but I reset it directly to negative 25 so it's fine oh yeah yes I need to so that I need to fix right that's a problem that'll be a bug I need to fix so I'll fix that in a little bit let me make this wider with this over here but this is not a lot of screen real estate to work with so let me actually load a background image that's 800 pixels wide which I think will be a little more it will be a little better than 600 so matsya we're just going to edit this part because this is the 800 wide one there we go okay why is it so it's because it's shrinking the image like this is let me need actually just fix that too while we're here like I guess because it's so big let me change it to just two hundred I mean you're never gonna have it bigger than 150 so let me do that see what happens if will it replace it let's see oh no it doesn't interesting it renames it oops let's delete this one I don't know if this is gonna create some kind of weird like caching issue well let's do this there we go a little bit nicer okay all right if this dot y equals zero where where would I need to check that whoops okay so let's move along here ooh save from another window that's weird all right something bad happened does anybody logged into this by accident anybody who knows the coding training p5 web editor all right well let's try two I'm gonna have to leave yes go back here all right it's fine now okay okay yes don't worry Samuel everyone's asking good suggestions I'm gonna fix that but I'm gonna wait so cuz I'm gonna let myself cheat for a bit and I'll fix that bug later whoops it's really annoying how I have to click over here to get the focus all right my unicorn can jump and I've made the background a little wider which means now I need obstacles for it to jump over and those are going to be little train things so I'm gonna make another class call it a train choo choo I'm gonna give that a constructor these will have also an x and y so the X will be it's going to start off the edge and the Y will be actually also at the bottom so height I'll give it a size and this star will be 100 and then so now I need a show function and that I'm going to draw as an image like fingers are in the wrong place that T the train image at x and y this dot are the star and let's also add a move function and we'll say this dot X equals and so the train so it is a weird thing it's supposed to be oh this is gonna be a problem my fixed background is going to make this visually a problem and people on the chat are saying parallax background please alright so where maybe I'm gonna get to that this is gonna end up being a longer video if I implement that but really the unicorn is moving so the unicorn is moving but the X stays fixed the trains oh well the trains could be moving if their trains that's weird but they're supposed to be cactuses cacti they're standing still in the unicorns just approaching them but we're seeing it from the unicorns of you boy I've really botched this but what I'm gonna do is just move them by the whole scene is scrolling by three pixels and we'll figure out if we can parallax the background that maybe later what do I even mean by parallax to make it appear as if the background is changing but off in the distance so it's sort of moving at a different speed but for now let's just do this let's create an array called trains and we're going to say train in setup well actually you know we're gonna do in draw we're just going to randomly we're going to pick a random number between 0 & 1 and we'll say like 1 percent of the time we're going to say trains dot push we're gonna add a new train so it's gonna be irregular this is different than the flappy bird I made were the think that pipe sliggoo was irregular I thought the pipe I think the pipes were at regular intervals now there's a random chance of adding a new train and then all the trains that exist we're gonna say for all of the train that dodge say T in trains I'm gonna say T dot move T dot show all right let's see what happens do we have a train maybe I better increase it there we go oh look at that all right they're moving they're kind of slow I'm gonna jump over it oops okay let's make them move a little faster let's have them move by like eight pixels that's also time out for a second let me fix the size also just like 200 it really this is a bug in the web editor it really doesn't like me to delete a file it confuses it alright so hold on but I think we're gonna be okay okay so now the trains are moving a little faster let's see if I can successfully jump over them come on let's see some trains oh there we go okay no we got uh uh so we've got some tweaking we've got to do both this is a this is a nice way no oh look my unicorn can fly so I need to fix the fact I need to like not allow my unicorn to fly right it should only be able to jump if I'm at the bottom so let's fix that so to do that I need to go into unicorn and in the jump function I should only be allowed to jump if I'm sitting at the bottom so in other words if y is oh well if I'm at the bottom so as long as Y is equal to is this really gonna work I don't like to use equal checks but this is by definition sitting at the bottom so only if I'm sitting at the bottom can I jump so if Y is equal to that spot let's see if that works so let's jump o this dot Y this dot y come on trains oh yeah yep I can only jump when I'm at the bottom alright so that works so that fixed I think I need to be able to jump quite a bit higher 50 might be too much just doubling it whoops let's change it to 50 let's change the gravity to 3 still too much let's take that stripe 30 let's try 35 I should really use like a slider or something there we go I think this is gonna make the game more possible to win there's too many trains it actually doesn't seem weird that those trains are moving yeah I can make an easy pause for a second here okay um all right double jump is also possible in the game really no it seems like it jumps variable Heights though no all right okay maybe make a cool all right one thing that's bothering these the trains are going in front of the unicorn I know that doesn't really matter so much it's really doesn't matter but I kind of would prefer them to be behind so I'm gonna move this here I'm also gonna make the game a little easier to play I'm gonna reduce the number of trains so there's gonna be a much lower papa probability of there being a train let's see if I can actually play this game somewhat successfully even though I'm not doing the collision checking yet no I think if the trains move faster it would actually make it easier so let's actually double the speed of the trains oops come on train so this is really a problem with the p5 web editor I have to click over here here we go all right this looks like this game is now possible to play but I need to add collision detection so I've done this before and plenty of other coding challenges there's a pretty simple algorithm to just check if two rectangles are intersecting with each other or not I can just check their exes and why they're basically all the edges the left the right the top the bottom against each other but this is a nice opportunity for me to just explore a library that's out there in the world and this library is called p5 collide 2d and it actually has a function it called collide rectangle rectangle and it'll give me a boolean variable if I give it the XY with height of one rectangle and the XY with height of another rectangle so let's actually just use this library this is also a nice excuse for me to show you that github is now integrated with something called Jas deliver so this is an opensource content delivery network meaning if a javascript file is hosted on github i don't have to download that file and then add it to my project i can just link to it so i'm gonna go over here to github and you can see here it's this is the address i need to use so basically i'm looking for something like this actually I'm just going to sorry this is what I'm looking for any github oh no release commit or branch sorry I know you're looking for user repo at version I just want to get directory listing I think this is all I want I'm just gonna use the end one okay there's lots of different ways here that I can reference a file on github I think easiest the way for what I'm doing right now is just to reference its path and here's an example path so I'm gonna go over here to index.html I'm gonna add another script tag I'm gonna say script source equals I'm gonna paste that in closed script but this is not the path that I want I want the username which is be mor yen and then I want the path which is whoops to this file let me go back up here I want the path to let's get the minified version of the library and that would just be this right there in the root directory so I'm gonna put that in there and so now I'm referencing I think this is right but I don't think there is this library hasn't been published with like any kind of release right there's no releases or anything so now I'm just referencing that file let's see if that works not getting any errors let's see if I can call a function whoops let's see now if I can call this function I'm just going to include it right here and see if I get an error in draw let's run the sketch again Oh collide is not defined is it not finding that file oh yeah it didn't work fail to load resource so what is it that I need to do you should know this github convert to J's deliver there's a like a thing that'll show me how to do it so hold on hold on everybody should have figured this out in advance Oh Oh I must just have to do this it's probably this well the camera goes off I'm sure everybody the chat has already told me oh I didn't reference the repo thank you thank you so it's let's let me get it right M o RN p5 collide to D is it this full thing or look at your slack chat oh it's just that okay so I don't need this okay thank you let me go back I don't know where I was okay this is actually not correct I'm referencing the CDN URL the username but I also need the repo name so that should be P v dot collide to D slash this so this should now work okay and I should be able to use the collide the collide function so I'm gonna use this collide rectangle rectangle let me just call this in draw to see if that works and doesn't give me an error great no error and so now I can check when I'm going through all of the trains if unicorn hits T console.log game over okay so console log game over and then I'm actually gonna say no loop so I'm just gonna actually stop the sketch shut down the sketch completely which isn't a really thoughtful user experience design choice but it's what I'm gonna do for right now and then I just need to add a function here called hits and receives a train and I can say I can use this function which I need this dot X this dot Y this dot R this dot R and then I need exactly the same thing but with that particular train so instead of this I'm checking this rectangle with this trains rectangle and I'm going to put this in a variable called collide and I'm going to say if I'm gonna return that I can actually you know what I'm just returning this return that so return the true or false result of this collide function from that library and now let's run the let's run the game I'll wait for our first train game over let's see if I can play it now come on train is it going I can't tell I'm waiting for a train oh [ __ ] this space bar thing is really awful because the window is not in focus which is why it's gonna be awesome when I change the interaction this is this train is very late much like the coding train I can't jump though well there were so many trains a while your huh is there a lot of empty space or I should check this no it's pretty pretty close to the edge alright one more let me try one more time to try to successfully jump over a train I should make the rectangle a little bit smaller yeah my array of trains is filling up I definitely need to fix that whoops alright let's make the train a little bit smaller and actually let's make the unicorn smaller as well hopefully this will help make the game a little easier to play ok come on train I'm going to successfully jump over a train eventually oh shoot all right let's let's draw the bot let's lift debug this a little bit by drawing the box like very subtly so let's draw a very slight rectangle so we can see how bad we are how off we are and let's do the same thing in the train itself so this is what this is what we're actually checking there we go it helps to see the full box come on trains spawning a train with a mouse click would be a good idea okay we lost alright so there's obviously a lot of gameplay improvements that need to happen here one is I could be more thoughtful about you could see how there's something like wasted space here I should crop the image and the the actual rectangle a little bit smaller I could consider using a circle I could use a more complex shape but this is good enough for right now let's actually make it I you know I could also like just click the mouse in order to start it a train that actually might help things but let me comment out this and what I want to do just before I go before I finish that you're gonna make a version of this with a score and all sorts of nicer things and sounds but I've got to finish this off gotta finish this video I want to control the train with my voice so to do that I'm going to use ml 5jf which has a speech command machine learning model built into this javascript library so I've made a whole separate video about this particularly train model and how it works so I'm just going to add it pretty quickly into this video you can go watch the other one for more details but if you're looking for the documentation if I click on reference and go to sound classifier this is what I'm looking at doing so all I need to first thing I need to do is that well actually one thing is I need to go to get started and I need to get a script tag to be able to reference the library so I want to add the ml 5 library so I'm copying I'm going here to index.html so in addition to p5 collide to D I'm now adding ml 5 and I'm going to go here and I'm gonna in preload I'm gonna do let sound classifier I'm gonna create a variable in Creole ode I'm gonna say sound classifier equals ml 5 sound classifier and the model I'm loading is called speech commands 18w because this is a model that's been trained to recognize 18 particular words 0 the numbers 0 the digits 0 through 9 up down left right and a few other ones that are documented on this ml 5 web page let's go look that up real quick so if I go back to a sound classifier up down left right go stop yes No so those are the words it's trained to recognize and I actually also want to get this probability threshold so I'm gonna add this in here because I want it to be really sure I'm saying jump so I'm gonna make this 95 this means it's got to be 95% sure the confidence score that's coming from that particular model and how that model was trained and there's all paper you can read I've talked about that more in the other video ok so now that I have that in setup I could say sound classifier dot classify then I can get a function I'm going to call it got word so it's got a workout come in let's call it got command so this is a callback function that is going to trigger any time it gets a command it gets an error first error first callbacks and then the results so I'm to say if there's an error console I'm just gonna I'm just gonna console error the error otherwise if results index 0 dot label so results is an array with labels and confidence scores and the labels are the words and what I'm looking for is the word up if that label is up then unicorn jump so this is a really quick way of me looking for particular keyword from that library and and I'm also just going to console.log results index results index 0 dot label just to see if I'm getting other words also and we might as well log the confidence score just so we can see that that might be good for debugging as well so now that I've logged those two things I'm gonna run this Sketch up up up shoot but you can see it got up 95 percent okay let's see let's see if I could time this correctly get one successful jump I have to really anticipate it up a little bit of a delay this is silly I'm gonna add the thing where I click the mouse I'm gonna add the thing where I click the mouse and I can give myself a train and in fact let's comment out the random trains also I really should be more thoughtful about how I'm picking the truck like when the train should come like maybe there's a minimum distance between them if I've just added one can they can I can I have a longer train without other train cars no what's going on here there's a lot of narrative flaws and what's going on here but I'm just gonna add one myself up up and maybe what I'll yeah Oh up can I get two in a row up up wait one thing that I'm gonna do here is I'm gonna make the collision a little bit less extreme so I'm going to add a variable called buffer and I'm just gonna make that like 20 pixels right now so X plus buffer y plus buffer R minus buffer whoops so I'm making each one of these rectangles and actually I'm just going to say this let R equals this dot R minus buffer well let R 1 be that and R to be the trains are buffer so this will be R 1 this will be train X plus buffer train y plus buffer and then this is our so now it's a little smaller and I could actually draw this just just just so we can see it again I I'm not being super thoughtful about this but just a weekend just so we can debug this and make this game a little bit easier to play and probably still feel pretty realistic and let's go to the Train and let's do oops let's do the same thing oh wait why is it off I need to subtract buffer twice yeah right because I've shifting it over but only making it this much smaller it's still gonna end at the same place sokka's our music to draw what time is it 1249 I really have to go alright let me just change it to a circle I like that idea whoops well let me undo all that Matt's you're gonna cut that out of the final version unicorn yes okay my back at least of what I had before jump alright everyone is making the suggestion in the chat that I should change it to a circle so that'll actually kind of be like a round it'll give me a little wiggle room along the edges and make the intersection happen a little less often so let's actually go ahead and do that so I'm gonna go into where the only place where I'm doing this collision detection is where in the Unicorn under hits so I'm gonna change this to collide Circle Circle collide Circle Circle and circle to circle assumes ellipse mode Center so I'm gonna have to think of the circle as this the center point of the object which is not a big deal so the way that I'm going to do that let's make some separate variables let's say X 1 equals this dot X plus this dot R times 0.5 so this would be the middle this is the middle and then R is the is the diameter of the circle so that's fine and this is Y and then X 2 y 2 is the train train dot X train dot y train R train R and so now I want collide Circle Circle x 1 y 1 and then X 2 y 2 the question is is are for actually the radius or is it the diameter does it say circle diameter circle diameter so I'm good alright so let's try this and then this should really be oh this is kind of unfortunate this should now be an ellipse but oh you know what I can just do I can say ellipse mode corner he's perfect so let's draw the hit circles on under train let's do the same thing here and say ellipse there so this should now we should see here we go that's what it's gonna do okay here we go after click oh well what happened I mess something up because the game was already over let's go back to my hit's function the browser is really just like oh you know what is something running on this page let's close that it's really freezing up on me all right hold on this looks right dot are no I don't I didn't forget any this dots something has gone wrong here train X is there a mistake in the library oh whoops ah yes okay all right I passed our end twice which is very unnecessary you just give it the diameter not the radius even though I'm calling it our once and let's see what happens okay here we go ready everyone let's play this game jump jump wait why is my browser really freaking out um let's comment out let's comment out the debugging we're just gonna go for now we're gonna play this game or to comment out the debugging I'm gonna close this tab quick chrome give it a rest for a second come back oh it's over here now all right we're about to play this game Oh up its up I'm saved jump yeah there we go up up up all right ready everyone up up look Mickey I guess I can't use the music hey ready everyone oh oh shoot here we got everyone ready up this is gonna be fun format [ __ ] edit up up yes exactly all right everyone thus ends this coding challenge there are so many things that need to be out of this number one it makes the narrative is makes no sense why is there this unicorn standing still without any animation the trains are coming at it the background should be sort of like in parallax moving so probably it should be jumping over I should have just used cacti is that's the plural of cactus right there's no score there's no birds flying you could add you could add a flying asterisk I'm gonna when I upload this I'm gonna include when I when this video publishes and with the code I'll include a lot of the coding train characters which are designed by Jason hagglund illustrate and designed by Jason hagglund so I'm gonna include a whole bunch of those if people want to make a version of this game that we can all play online with speech commands let me try this I'm gonna just say goodbye by trying this one more sense and yes alka is pointing out that speech detection API in the browser might be lower latency but let's try this one more time up up up up up up up up oh okay goodbye everyone thank you very much and see you later on a future coding challenge need more parallax yeah no kidding alright everyone Oh Oh Simon is once really wants me to show his sorting so I will oblige working improved dot Simon Tiger dot r EP l KO woo so we can look at different sorting algorithms and watch them visual last year this is a really nice community contribution I didn't make so let me go to the kodi train comm so well a couple things I wanna point out this is the last coding challenge was came out on this channel over a month ago Wow not by that many days but a month and three days ago so when this one comes up which will likely be early next week you should go to this link on the coding train homepage go to to the challenge and add a link to a version that you make here and you can see there's a whole bunch here I've sure and I like to come and show these on the live stream when I can I also want to just point out though that under courses once again there are now this is also here so you can go to this page slash courses slash data and AP is and you can see all the videos that have been released from this new series but I just want to jump to this link and plug this one more time please check out if you if you have some time and you're interested in learning this stuff check out these videos and let me know what you think these were done there's a lot more work it was the cost more money frankly to be honest to like put this together this way but I think for sequenced content having some animations and some postproduction might be helpful for just kind of making the videos easier and more clear to watch so I would be curious to hear your feedback from there I don't know what people are talking about did I say jump again I keep saying jump why do I say jump it's up was I saying jump again alright maybe I need to redo this little ad just in case not jitneys another take all right we're gonna play this game one last time is that why it wouldn't recognize me when I try to do the music up up yeah just like the music alright let's play this game one last time up up okay I want to get at least four or five in a row up no up up up up oh shoot so you might get a double train up Oh up whoops this fact I have to refresh the page that restart the game is really terrible I did up okay Oh David is asking about the edited video on the AI cars yeah we don't know what to do with that one so match is gonna be reviewing it over the weekend I did a live stream where I made the neuro evolution steering cars oh it's one o'clock I got to go and that that was a four hour live stream and I'm trying to figure out a way to make that into like on less than one hour edited video so I think I'm gonna come back and record some additional content for that and edit that together so that'll hopefully come out relatively soon alright I've really got to go thank you everybody for tuning in to the coding train I will be back one day next week I don't know when I don't know why I don't know how but I will be back I am later this afternoon recording a documentation I mean actually if you were thinking about joining to become a patron or remember I will lie I feel like a private a member only live stream of that recording session but stay tuned up in the document this setup here thank you again to brilliant the sponsor of the coding drain live stream today go to breed org slash Cody trained to sign up and first two hundred subscribers will get 20% off brilliant earlier in this live stream I tried a puzzle on board and you should try check out my answer reply to that and try your own as well okay thanks everybody and I will see you in the future more lots more to come this summer very excited about all the content good bye look you want to get it's up right oh the music it's cuz of the music it can't hear me over the music up I would have kept this I cheated I use the spacebar up up up up alright everybody I'll see you later you
