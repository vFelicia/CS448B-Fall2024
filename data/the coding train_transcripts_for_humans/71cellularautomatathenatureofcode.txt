With timestamps:

00:02 - hi today we're going to talk about
00:04 - cellular
00:06 - automata uh the singular of cellular
00:08 - automata by the way is a cellular
00:10 - automaton so we're going to look at a
00:12 - cellular automaton but we're going to
00:14 - discuss cellular
00:17 - automata now why first of all what is a
00:20 - cellular automaton and why are we
00:22 - looking at this okay so first of all you
00:26 - know you might be just arriving here
00:27 - from nowhere which is totally fine but
00:30 - if you had just watched the previous
00:31 - video the last thing we talked about is
00:34 - right here behind me a flocking system a
00:37 - complex system a system of many simple
00:40 - agents that when they work together
00:42 - exhibit this um exhibit this complex
00:44 - intelligent Behavior so there's a lot
00:47 - going on in this system there's physics
00:50 - there's there's physics there's motion
00:52 - there's all sorts of stuff there's the
00:54 - neighborhoods are changing as these
00:55 - things move about the space one of the
00:57 - reasons to look at cellular automata is
01:00 - to say okay now that we achieved this
01:03 - complex system let's boil that down and
01:05 - try to create the simplest possible
01:08 - complex system ever what would that be
01:12 - what is the simplest possible agent
01:15 - which would have the simplest possible
01:17 - neighbors and the simplest possible set
01:19 - of rules as to how it interacts with its
01:21 - neighbors if we could design that system
01:24 - could we still achieve complexity so
01:26 - that's the question we want to answer
01:27 - when looking at cellular
01:31 - automata now what is one well okay first
01:34 - of all so this video is we're going to
01:36 - we're basically going to talk through
01:37 - the the two classic examples and we're
01:39 - going to do them in Reverse
01:40 - chronological order but our order is
01:42 - going to have some logic to it so I'm
01:44 - just going to move so we're going to go
01:45 - through um two uh kind of classic
01:50 - cellular automatons AATA ah this one is
01:54 - uh scrolling here by this is the Wolfram
01:57 - Elementary CA and this is Rule
02:01 - 30
02:03 - 30 it is in fact this is Rule 30 which
02:06 - we're going to get to what's rule 30
02:08 - even mean this is O so um we're going to
02:11 - talk about Wolfram in a little bit over
02:12 - here we have something called The Game
02:14 - of Life which is perhaps the most famous
02:17 - uh certainly the the first most famous
02:19 - cellular automata that um uh that that
02:23 - sort of arrived into popular culture
02:25 - with a with a well-known article in 1970
02:27 - in Scientific American so we're going to
02:29 - look at these two systems understand how
02:31 - they work understand how to write the
02:33 - code for them and then ask the question
02:36 - you know great we could just Implement
02:38 - these and change the colors and we have
02:39 - some interesting patterns but really we
02:41 - need to ask the question how does this
02:42 - way of thinking apply to the type of
02:45 - work we're doing in interactive media
02:47 - computer Graphics computational design
02:49 - all that sort of stuff so hopefully this
02:51 - video is going to kind of introduce the
02:52 - concepts Behind These two systems and
02:54 - the next couple videos we'll um walk
02:57 - through the code for them and the last
02:58 - video we'll kind of talk about
03:00 - uh other other possibilities in this
03:02 - realm okay do we feel good about that I
03:05 - feel good about that that yes so let's
03:07 - talk about let's define let's just say
03:09 - ca let's define a
03:12 - CA okay let's define a cellular
03:15 - automaton a cellular automaton is a grid
03:19 - of cells we're going to look at
03:21 - one-dimensional grids two-dimensional
03:23 - grids one dimensional grid for example
03:25 - just looks like this here are a whole
03:28 - bunch of cells sitting next to each
03:29 - other in one dimension which
03:31 - incidentally looks quite a bit like the
03:33 - diagram for an array so we can see how
03:35 - this is going to fit nicely in terms of
03:37 - programming these types of things okay
03:39 - now if a CA is a grid of cells each cell
03:44 - is defined by as a entity that has a
03:46 - state and we're going to look at a
03:48 - variety of possible States the simplest
03:51 - being a zero or a one right a binary
03:53 - State it's on or off alive or dead zero
03:56 - or one black or white and each cell also
03:59 - has a
04:01 - neighborhood this is very important
04:03 - because how a state a cell's State
04:06 - changes over time is going to be
04:08 - determined by the the the sum the the
04:12 - the by analyzing its neighbor State so
04:14 - this is really the third aspect of
04:16 - defining a CA which is that the state of
04:19 - a cell a cell State at any moment in
04:23 - time T is equal to a function of the
04:27 - neighborhood
04:31 - States at time T minus one so we have
04:34 - this idea of generations Generations
04:37 - over time the ca has a whole bunch of
04:39 - States if they're zero or ones and then
04:42 - we say hey at the next moment in time
04:44 - this state cell is somehow going to be
04:46 - calculated based on a neighborhood of
04:49 - States adding them together averaging
04:51 - them say what is the pattern that type
04:52 - of thing so this is how we Define a CA
04:57 - great so I think that actually strangely
05:00 - I'm trying different things wraps up
05:02 - this video and I I guess I'll give you
05:04 - an exercise which is kind of a bit of an
05:06 - insane one but you know many of you
05:08 - watching this or might be familiar with
05:10 - this already um many of you watching
05:12 - this might have never heard of a CA
05:14 - before if you haven't try to design for
05:18 - yourself a set of rules for how cell
05:21 - States would change over time for a
05:23 - onedimensional CA with zeros and ones
05:25 - now this is of course what we're going
05:26 - to look at in the next video the next
05:28 - video we're going to look at the Wolfram
05:30 - Elementary CA which is precisely this a
05:33 - one-dimensional CA where the states are
05:35 - zeros and ones and we're going to look
05:37 - at what are what's a possible set of
05:39 - rules for how those States change from
05:41 - generation to generation how do we
05:43 - Implement that in code and what results
05:44 - do we get but you know it's a little
05:45 - exercise to yourself you might try
05:47 - imagining this okay so I'm going to
05:49 - pause here and I'm just going to keep
05:51 - plowing through and but the the next
05:53 - stuff will be in another video how how
05:55 - do you feel about that great okay thanks

Cleaned transcript:

hi today we're going to talk about cellular automata uh the singular of cellular automata by the way is a cellular automaton so we're going to look at a cellular automaton but we're going to discuss cellular automata now why first of all what is a cellular automaton and why are we looking at this okay so first of all you know you might be just arriving here from nowhere which is totally fine but if you had just watched the previous video the last thing we talked about is right here behind me a flocking system a complex system a system of many simple agents that when they work together exhibit this um exhibit this complex intelligent Behavior so there's a lot going on in this system there's physics there's there's physics there's motion there's all sorts of stuff there's the neighborhoods are changing as these things move about the space one of the reasons to look at cellular automata is to say okay now that we achieved this complex system let's boil that down and try to create the simplest possible complex system ever what would that be what is the simplest possible agent which would have the simplest possible neighbors and the simplest possible set of rules as to how it interacts with its neighbors if we could design that system could we still achieve complexity so that's the question we want to answer when looking at cellular automata now what is one well okay first of all so this video is we're going to we're basically going to talk through the the two classic examples and we're going to do them in Reverse chronological order but our order is going to have some logic to it so I'm just going to move so we're going to go through um two uh kind of classic cellular automatons AATA ah this one is uh scrolling here by this is the Wolfram Elementary CA and this is Rule 30 30 it is in fact this is Rule 30 which we're going to get to what's rule 30 even mean this is O so um we're going to talk about Wolfram in a little bit over here we have something called The Game of Life which is perhaps the most famous uh certainly the the first most famous cellular automata that um uh that that sort of arrived into popular culture with a with a wellknown article in 1970 in Scientific American so we're going to look at these two systems understand how they work understand how to write the code for them and then ask the question you know great we could just Implement these and change the colors and we have some interesting patterns but really we need to ask the question how does this way of thinking apply to the type of work we're doing in interactive media computer Graphics computational design all that sort of stuff so hopefully this video is going to kind of introduce the concepts Behind These two systems and the next couple videos we'll um walk through the code for them and the last video we'll kind of talk about uh other other possibilities in this realm okay do we feel good about that I feel good about that that yes so let's talk about let's define let's just say ca let's define a CA okay let's define a cellular automaton a cellular automaton is a grid of cells we're going to look at onedimensional grids twodimensional grids one dimensional grid for example just looks like this here are a whole bunch of cells sitting next to each other in one dimension which incidentally looks quite a bit like the diagram for an array so we can see how this is going to fit nicely in terms of programming these types of things okay now if a CA is a grid of cells each cell is defined by as a entity that has a state and we're going to look at a variety of possible States the simplest being a zero or a one right a binary State it's on or off alive or dead zero or one black or white and each cell also has a neighborhood this is very important because how a state a cell's State changes over time is going to be determined by the the the sum the the the by analyzing its neighbor State so this is really the third aspect of defining a CA which is that the state of a cell a cell State at any moment in time T is equal to a function of the neighborhood States at time T minus one so we have this idea of generations Generations over time the ca has a whole bunch of States if they're zero or ones and then we say hey at the next moment in time this state cell is somehow going to be calculated based on a neighborhood of States adding them together averaging them say what is the pattern that type of thing so this is how we Define a CA great so I think that actually strangely I'm trying different things wraps up this video and I I guess I'll give you an exercise which is kind of a bit of an insane one but you know many of you watching this or might be familiar with this already um many of you watching this might have never heard of a CA before if you haven't try to design for yourself a set of rules for how cell States would change over time for a onedimensional CA with zeros and ones now this is of course what we're going to look at in the next video the next video we're going to look at the Wolfram Elementary CA which is precisely this a onedimensional CA where the states are zeros and ones and we're going to look at what are what's a possible set of rules for how those States change from generation to generation how do we Implement that in code and what results do we get but you know it's a little exercise to yourself you might try imagining this okay so I'm going to pause here and I'm just going to keep plowing through and but the the next stuff will be in another video how how do you feel about that great okay thanks
