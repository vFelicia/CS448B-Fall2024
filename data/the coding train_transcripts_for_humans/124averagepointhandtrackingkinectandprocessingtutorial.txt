With timestamps:

00:00 - hello in this video I'm going to
00:02 - demonstrate some really basic hand
00:04 - tracking with the might with the Kinect
00:06 - and I'm going to make a particle system
00:07 - come out of my hand that's what we're
00:09 - going to look at in this particular
00:10 - video so in the previous video what I
00:12 - did is create this sketch where I
00:14 - calibrated a minimum threshold and a
00:17 - maximum threshold so I'm only looking at
00:19 - depth pixels between those values so if
00:21 - I stand exactly here and move my hand
00:23 - around I can you can kind of see a
00:25 - pretty clean outline of my hand of
00:26 - course this breaks down if I stand too
00:28 - close or if I stand too far away but you
00:31 - know and so I should mention that
00:32 - ultimately this type of hand tracking
00:34 - might be better suited for the official
00:37 - Microsoft SDK now I'll get to that
00:38 - eventually using a PC and a different
00:42 - processing connect library but I think
00:44 - it's still nice to see these examples of
00:45 - how you can do this stuff with the raw
00:47 - depth okay so let's look at how you
00:49 - might do this so this is where we are
00:51 - we're looking for all pixels that are in
00:54 - between a minimum threshold and a
00:55 - maximum threshold so how might I find
00:58 - the center of all of those pixels right
01:01 - here in the center of my hand well the
01:03 - way that you find the center of
01:05 - something off sometimes called the
01:06 - centroid if you want to set sound like
01:08 - you're from the future let's look at the
01:10 - centroid is by finding the average
01:13 - location so let's say we have a
01:15 - collection of pixels you know that are
01:19 - loosely this is some strange like three
01:21 - fingered hand right these are all the
01:23 - pixels we care about we can plainly see
01:26 - that this is the sent about round the
01:28 - center but how would I find out the
01:30 - average well let's say you just had
01:32 - these X values this is the x value 0 3
01:38 - you know 4 8 12 to find the average of
01:42 - some numbers add them all together and
01:44 - then divide by the total 0 plus 3 plus 4
01:47 - plus 8 plus 12 divided by 1 2 3 4 5
01:50 - divided by 5 is the average so if we add
01:54 - up all add all X's and we add all Y's
02:00 - and we divided by total pixels not the
02:04 - total pixels in the entire image just
02:07 - the pixels that we've picked out that
02:08 - are in-between this minimum and maximum
02:10 - threshold then we'll find the center
02:13 - that area of pixels so let's look at
02:15 - that how do we inside that loop add up
02:17 - all the X's add up all the Y's divided
02:19 - by the total number of pixels it's
02:20 - actually a pretty simple thing to do
02:22 - this might be the shortest video I've
02:24 - ever made
02:25 - I'm going to start I need some value to
02:27 - keep track of the the sum of all the X
02:30 - pixels so I'll add that in then I need
02:33 - another variable to keep track of
02:36 - summing up all the Y pixels so I'll add
02:40 - that in then what I also need is just a
02:44 - total pixels 0 now I'm making all these
02:47 - floats because I think it's going to be
02:49 - a bit more accurate to use floating
02:51 - point math it doesn't really matter they
02:53 - could technically dig their integers
02:55 - there's no like pixel 3.21
02:56 - but Zillow simpler work with floats so
02:59 - this value is where I'm an add up on the
03:01 - X's this guys we're going to add up all
03:02 - the Y's this is going to be the total
03:04 - number of pixels remember that's not a
03:05 - fixed number like depending on where my
03:07 - hand is how many pixels is it picking up
03:09 - that's that's going to be the total once
03:12 - I have that it can divide some X by
03:13 - total sum Y by total and that's going to
03:15 - be average X and average Y so let's look
03:18 - at that so right here these are the
03:21 - pixels that count right these pixels
03:23 - right here are the ones that are pink
03:24 - those are the ones that are between the
03:26 - minimum maximum threshold that X is
03:28 - greater than 100 is just to get rid of
03:29 - the wall that's over here because the
03:31 - wall is hundred pixels and over so in
03:34 - order to do that now I'm going to say
03:36 - right in here I'm going to say sum X
03:40 - plus equal X sum Y plus equal Y I'm
03:44 - literally just adding up all the X's
03:46 - adding up all the Y's and then total
03:48 - pixels plus plus so for every single
03:51 - pixel just add one I need to add up the
03:53 - X values for the X the Y values for the
03:55 - Y and then figure out how many pixels
03:56 - are there and then at the end what do I
03:59 - got
03:59 - I don't need to draw this text on the
04:03 - screen anymore what do I need to say I
04:05 - need to say the average X right the
04:07 - average X is the sum x divided by the
04:09 - total pixels the average Y is some Y
04:14 - divided by total pixels and then now why
04:18 - don't I just draw let's make this a
04:20 - different color why don't I draw an
04:24 - ellipse at average X
04:26 - average why and one hunt I don't know
04:29 - what's what size should that ellipse be
04:31 - 64 by 64 so let's run this you can see
04:34 - there's a circle it's kind of going
04:35 - crazy right because there's nothing in
04:37 - but now you can see that circle is
04:39 - always around the center of my hand now
04:41 - one thing to notice if I put two hands
04:42 - here it's the center of each so the
04:44 - minute maybe I'll talk about how I might
04:46 - deal with that but you can see now I'm
04:48 - getting now it's not the center of my
04:49 - hand it's the center of all the pixels
04:51 - it's seeing so if my arm is in here it's
04:52 - getting the center but if I position my
04:54 - hand in a pretty good spot you can see I
04:57 - can get some pretty accurate thing going
04:59 - on here so let's make it do something a
05:01 - little bit more interesting just for the
05:02 - sake of I don't know this I don't know
05:05 - if there's a huge point to this but
05:06 - here's what's didn't I didn't I just fix
05:10 - this ah what's wrong here everybody
05:18 - I did this a second ago it's fine um so
05:23 - this is an example of a particle system
05:25 - where all the particles are coming out
05:26 - where the mouse is and you can see right
05:29 - here in the code there's just a little
05:31 - bit of a simple loop poetic comb it says
05:34 - add particle app Mouse X mess Y right so
05:37 - it's just as easy now as bringing all
05:40 - this particle system code over and
05:42 - saying instead of adding the particles
05:44 - that Mouse X mouth Y adds about average
05:47 - X average Y so let's see if we can make
05:50 - that happen I'm going to bring I'm going
05:52 - to do a little quick little I should
05:54 - have probably do like the cooking show
05:56 - thing where I have and now coming out of
05:57 - the oven are already pre-made this but
05:59 - I'm just going to copy paste everything
06:01 - over real quickly I'm going to bring the
06:03 - particle system object I'm going to put
06:05 - this in my setup over here and I'm going
06:10 - to put this stuff in draw and at the end
06:14 - here and then what do I need I need all
06:18 - this particle code so I don't actually
06:20 - need this camera params tab for this
06:22 - example Oh hold on a hand tracking sort
06:30 - of particles to call this I'm going to
06:33 - get rid of this tab can't camera prams
06:37 - and then I'm going to
06:40 - a new tab I really shouldn't be doing
06:42 - this in the video I pick a crash
06:44 - processing hold on no everything's fine
06:47 - I'm at a new tab god this was not this
06:50 - was not good you fast forward fast
06:51 - forward a minute I'm going to move the
06:53 - particle system over that was the
06:54 - particle class and a good at Duke it
06:57 - doesn't matter
06:58 - to move the particle over just imagine
07:00 - that I did that correctly I'm going to
07:01 - run this we can see right the particles
07:05 - that the circle is following my hand the
07:07 - particles are following the mouse how do
07:09 - I make those do the same exact thing now
07:12 - all I need to do is say make the
07:14 - particles not at the mouse but at
07:16 - average X average Y and you know what
07:18 - let's let's actually add about 10
07:22 - particles per frame to make it kind of
07:24 - make more particles and let's run this
07:27 - and we can see now as I put my hand here
07:29 - I can like control where the particle I
07:32 - can make this like fiery thing come out
07:34 - of my sock fiery but come out of my hand
07:36 - so you can see I'm now using my hand to
07:38 - control particles coming out I could do
07:41 - my tada dance and it works with anything
07:43 - like I can I can have part like this
07:46 - stuff like emanating from my Bubbe's
07:48 - like alien and like bursting out or
07:50 - something I don't this is all getting a
07:52 - little bit weird but you can see it can
07:54 - strike this pose and it's running kind
07:57 - of slow because I'm drawing like so many
07:59 - circles on the screen was a little bit
08:01 - unnecessary to like do that much but you
08:04 - can see anyway so I can make the
08:06 - particles move faster you can give to
08:07 - get where this is going here so this is
08:09 - one example of what you can do by having
08:12 - a kind of specific setup knowing where
08:13 - all the pixels are threshold again
08:15 - finding the center of something this is
08:18 - what you can do now let me say a couple
08:20 - more things before I go into the next
08:21 - scenario number one and let's let's turn
08:26 - the particles off for a second number
08:29 - one is we have this issue of one hand
08:31 - two hands the thing in the center well
08:35 - on one hand this is kind of cool and
08:36 - like I am a magician levitating a ball
08:41 - rub I mean I forgot that I was making a
08:45 - video for a second I'm one hand you that
08:47 - sort of in effect on its own feature not
08:48 - a bug type thing on the other hand you
08:50 - might actually want to have a circle for
08:53 - each
08:53 - and and in that sense you need to employ
08:55 - a more sophisticated blob detection
08:58 - mechanism for example you don't want
09:00 - just the average of all of the pixels
09:01 - you want the average of a bunch of
09:03 - pixels but don't include pixels that are
09:05 - over a certain distance threshold from
09:07 - other ones so this is something that I
09:08 - could potentially demonstrate in a
09:10 - future video in this series I'd be happy
09:11 - to add one in but also in this case one
09:14 - thing you can do if you have this very
09:15 - clean image you can pass it to a library
09:19 - that might do that type of edge
09:20 - detection blob detection contour
09:22 - detection for you and there's two
09:24 - libraries I'll try to link to them in
09:25 - the description that I might recommend
09:26 - one is called blob detection does kind
09:29 - of what you're thinking another library
09:31 - is called OpenCV which has a lot of
09:33 - computer vision functionality built into
09:34 - it but one of the things in it is blob
09:36 - detection so maybe I'll try to like show
09:38 - that at a certain point but you can see
09:40 - the basic idea here is still just
09:41 - working even without an extra
09:44 - sophisticated layer of looking for
09:45 - separate chunks okay thanks for watching
09:47 - this I think in the next video I have
09:49 - two more that I intended to do today
09:51 - although it is 12:10 I wanted to see if
09:52 - I could look at for the top like how do
09:54 - you find the highest pixel you or the
09:58 - cloak you know closest pixel is
09:59 - something good also fine but I think
10:00 - highest might be interesting because
10:01 - somebody here in ITP has a project that
10:04 - she's working on which is having
10:06 - somebody move up and down so I think
10:07 - that's a useful demonstration and then
10:08 - also maybe looking back at that grid
10:10 - again but averaging all of the depth
10:13 - points within cells of a grid okay
10:15 - that's what I intend to make next hit
10:17 - stop on the record button come on wait

Cleaned transcript:

hello in this video I'm going to demonstrate some really basic hand tracking with the might with the Kinect and I'm going to make a particle system come out of my hand that's what we're going to look at in this particular video so in the previous video what I did is create this sketch where I calibrated a minimum threshold and a maximum threshold so I'm only looking at depth pixels between those values so if I stand exactly here and move my hand around I can you can kind of see a pretty clean outline of my hand of course this breaks down if I stand too close or if I stand too far away but you know and so I should mention that ultimately this type of hand tracking might be better suited for the official Microsoft SDK now I'll get to that eventually using a PC and a different processing connect library but I think it's still nice to see these examples of how you can do this stuff with the raw depth okay so let's look at how you might do this so this is where we are we're looking for all pixels that are in between a minimum threshold and a maximum threshold so how might I find the center of all of those pixels right here in the center of my hand well the way that you find the center of something off sometimes called the centroid if you want to set sound like you're from the future let's look at the centroid is by finding the average location so let's say we have a collection of pixels you know that are loosely this is some strange like three fingered hand right these are all the pixels we care about we can plainly see that this is the sent about round the center but how would I find out the average well let's say you just had these X values this is the x value 0 3 you know 4 8 12 to find the average of some numbers add them all together and then divide by the total 0 plus 3 plus 4 plus 8 plus 12 divided by 1 2 3 4 5 divided by 5 is the average so if we add up all add all X's and we add all Y's and we divided by total pixels not the total pixels in the entire image just the pixels that we've picked out that are inbetween this minimum and maximum threshold then we'll find the center that area of pixels so let's look at that how do we inside that loop add up all the X's add up all the Y's divided by the total number of pixels it's actually a pretty simple thing to do this might be the shortest video I've ever made I'm going to start I need some value to keep track of the the sum of all the X pixels so I'll add that in then I need another variable to keep track of summing up all the Y pixels so I'll add that in then what I also need is just a total pixels 0 now I'm making all these floats because I think it's going to be a bit more accurate to use floating point math it doesn't really matter they could technically dig their integers there's no like pixel 3.21 but Zillow simpler work with floats so this value is where I'm an add up on the X's this guys we're going to add up all the Y's this is going to be the total number of pixels remember that's not a fixed number like depending on where my hand is how many pixels is it picking up that's that's going to be the total once I have that it can divide some X by total sum Y by total and that's going to be average X and average Y so let's look at that so right here these are the pixels that count right these pixels right here are the ones that are pink those are the ones that are between the minimum maximum threshold that X is greater than 100 is just to get rid of the wall that's over here because the wall is hundred pixels and over so in order to do that now I'm going to say right in here I'm going to say sum X plus equal X sum Y plus equal Y I'm literally just adding up all the X's adding up all the Y's and then total pixels plus plus so for every single pixel just add one I need to add up the X values for the X the Y values for the Y and then figure out how many pixels are there and then at the end what do I got I don't need to draw this text on the screen anymore what do I need to say I need to say the average X right the average X is the sum x divided by the total pixels the average Y is some Y divided by total pixels and then now why don't I just draw let's make this a different color why don't I draw an ellipse at average X average why and one hunt I don't know what's what size should that ellipse be 64 by 64 so let's run this you can see there's a circle it's kind of going crazy right because there's nothing in but now you can see that circle is always around the center of my hand now one thing to notice if I put two hands here it's the center of each so the minute maybe I'll talk about how I might deal with that but you can see now I'm getting now it's not the center of my hand it's the center of all the pixels it's seeing so if my arm is in here it's getting the center but if I position my hand in a pretty good spot you can see I can get some pretty accurate thing going on here so let's make it do something a little bit more interesting just for the sake of I don't know this I don't know if there's a huge point to this but here's what's didn't I didn't I just fix this ah what's wrong here everybody I did this a second ago it's fine um so this is an example of a particle system where all the particles are coming out where the mouse is and you can see right here in the code there's just a little bit of a simple loop poetic comb it says add particle app Mouse X mess Y right so it's just as easy now as bringing all this particle system code over and saying instead of adding the particles that Mouse X mouth Y adds about average X average Y so let's see if we can make that happen I'm going to bring I'm going to do a little quick little I should have probably do like the cooking show thing where I have and now coming out of the oven are already premade this but I'm just going to copy paste everything over real quickly I'm going to bring the particle system object I'm going to put this in my setup over here and I'm going to put this stuff in draw and at the end here and then what do I need I need all this particle code so I don't actually need this camera params tab for this example Oh hold on a hand tracking sort of particles to call this I'm going to get rid of this tab can't camera prams and then I'm going to a new tab I really shouldn't be doing this in the video I pick a crash processing hold on no everything's fine I'm at a new tab god this was not this was not good you fast forward fast forward a minute I'm going to move the particle system over that was the particle class and a good at Duke it doesn't matter to move the particle over just imagine that I did that correctly I'm going to run this we can see right the particles that the circle is following my hand the particles are following the mouse how do I make those do the same exact thing now all I need to do is say make the particles not at the mouse but at average X average Y and you know what let's let's actually add about 10 particles per frame to make it kind of make more particles and let's run this and we can see now as I put my hand here I can like control where the particle I can make this like fiery thing come out of my sock fiery but come out of my hand so you can see I'm now using my hand to control particles coming out I could do my tada dance and it works with anything like I can I can have part like this stuff like emanating from my Bubbe's like alien and like bursting out or something I don't this is all getting a little bit weird but you can see it can strike this pose and it's running kind of slow because I'm drawing like so many circles on the screen was a little bit unnecessary to like do that much but you can see anyway so I can make the particles move faster you can give to get where this is going here so this is one example of what you can do by having a kind of specific setup knowing where all the pixels are threshold again finding the center of something this is what you can do now let me say a couple more things before I go into the next scenario number one and let's let's turn the particles off for a second number one is we have this issue of one hand two hands the thing in the center well on one hand this is kind of cool and like I am a magician levitating a ball rub I mean I forgot that I was making a video for a second I'm one hand you that sort of in effect on its own feature not a bug type thing on the other hand you might actually want to have a circle for each and and in that sense you need to employ a more sophisticated blob detection mechanism for example you don't want just the average of all of the pixels you want the average of a bunch of pixels but don't include pixels that are over a certain distance threshold from other ones so this is something that I could potentially demonstrate in a future video in this series I'd be happy to add one in but also in this case one thing you can do if you have this very clean image you can pass it to a library that might do that type of edge detection blob detection contour detection for you and there's two libraries I'll try to link to them in the description that I might recommend one is called blob detection does kind of what you're thinking another library is called OpenCV which has a lot of computer vision functionality built into it but one of the things in it is blob detection so maybe I'll try to like show that at a certain point but you can see the basic idea here is still just working even without an extra sophisticated layer of looking for separate chunks okay thanks for watching this I think in the next video I have two more that I intended to do today although it is 1210 I wanted to see if I could look at for the top like how do you find the highest pixel you or the cloak you know closest pixel is something good also fine but I think highest might be interesting because somebody here in ITP has a project that she's working on which is having somebody move up and down so I think that's a useful demonstration and then also maybe looking back at that grid again but averaging all of the depth points within cells of a grid okay that's what I intend to make next hit stop on the record button come on wait
