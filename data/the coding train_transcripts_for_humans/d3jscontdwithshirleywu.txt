With timestamps:

00:00 - [Music]
00:19 - [Music]
00:28 - [Music]
00:35 - [Music]
00:48 - [Music]
01:02 - [Music]
01:13 - [Music]
01:18 - [Music]
01:24 - [Music]
01:30 - [Music]
01:42 - [Music]
01:59 - [Music]
02:12 - [Music]
02:20 - [Music]
02:43 - [Music]
02:55 - [Music]
03:06 - [Music]
03:21 - [Music]
03:31 - [Music]
03:43 - [Music]
04:05 - [Music]
04:25 - [Music]
04:58 - [Music]
05:16 - hello we're here we're live yes we're
05:21 - back surprised this is one of those rare
05:24 - occasions where a Kotick train episode
05:28 - is planned within like 15 minutes that's
05:31 - not entirely true because surely
05:32 - welcomed it again - surely whoo guests
05:34 - from last Friday's regularly-scheduled
05:37 - nothing nothing has ever regularly
05:38 - scheduled but somewhat consistently on
05:41 - Fridays I have been live streaming and
05:43 - we mostly surely but I'll say we since I
05:47 - was also here did a tutorial around
05:50 - working with d3.js for data
05:53 - visualization and it was completely my
05:55 - fault that I arrived so there was very
06:01 - little time I'm just checking the chat
06:05 - to make sure nobody is saying focus
06:06 - alert I will focus the camera I forgot
06:09 - to focus the camera so we're sought a
06:11 - soft focus I look nicer in some focus so
06:15 - we rushed through a lot of stuff and I
06:18 - felt like it wasn't fair - surely and so
06:21 - here we are back surely generously had
06:23 - an extra little bit extra time today
06:25 - Shirley's here actually at ITP doing a
06:27 - fellowship working on a bunch of really
06:29 - exciting social media and see you're
06:30 - making all these like physical things
06:32 - yes we talked about that for a minute
06:33 - why focus the camera yes okay so I don't
06:37 - know how to talk about this without any
06:38 - visual aid oh actually I could have a
06:40 - visual aid right I could just open up a
06:42 - browser yeah which you have hidden away
06:45 - so it's on the dock is on the left side
06:48 - it's just do this look at all these
06:51 - things that showed up okay yeah like
06:55 - typing but oh just black ops not
06:57 - actually on-screen oh no it's fine it
07:00 - will be now in a second okay there it is
07:02 - so I'm I might be because usually I do
07:06 - data visualization in the web so it's
07:08 - very I'm very digital but I've been
07:13 - wanting to kind of broaden my horizons
07:16 - and get more into the physical world so
07:19 - I've been auditing two of the classes
07:20 - here and one has to do
07:23 - douwe news and sensors and the other one
07:29 - and the other one has to do with
07:32 - fabrication so I'm gene two projects one
07:34 - final project with the students I'm and
07:37 - it's going to be a physical data
07:39 - visualization of women in computing
07:44 - uh-huh it's really exciting this is the
07:46 - one with the laser cut yeah like no no
07:50 - this is the one that we're still
07:52 - prototyping so it's gonna be like an
07:54 - actual installation you walk through and
07:57 - there's gonna be hanging lights and it's
08:00 - it's going to be hanging like orbs and
08:02 - then the idea is that as you walk
08:04 - through the orbs each of them are
08:06 - represent a woman that had a great
08:08 - contribution in computing but and the
08:12 - thing is that most of them we don't know
08:15 - about most of them so at the beginning
08:16 - of the installation they're all going to
08:18 - start out really dim because they're
08:20 - they're not very well known um and as
08:22 - people go through they're invited to
08:25 - kind of like I'm seeing or kind of
08:27 - interact with their read more about the
08:29 - women and there's gonna be details in
08:31 - the orb and every time someone reads
08:33 - more about them they couldn't glow
08:35 - brighter and a little bit brighter and a
08:37 - little bit brighter and the hope is that
08:38 - by the end of the exhibit like all of
08:41 - them will be lit up a lot more beautiful
08:43 - yeah and then so as you walk through um
08:46 - yeah so there's a lot of like kind of
08:48 - data encoding into it so it's gonna be
08:50 - my first like kind of big data
08:52 - installation that like people can
08:54 - actually walk through so that's the one
08:56 - I'm in working on that's what this tote
08:57 - switch is for and that I was playing
08:59 - with because then when someone interacts
09:02 - with I'm so I don't know if you can see
09:04 - but yeah I'm like as that switch is
09:07 - being tilted um the LED lights up and so
09:13 - that's gonna be how we control like when
09:15 - someone interacts with the orbit that's
09:16 - how we use Suns that they're like
09:18 - interacting with it and so the one that
09:21 - you saw with the laser cut out so this
09:23 - is kind of the prototyping for that like
09:25 - reforms for the orbs yeah yeah he's like
09:28 - mysterious look she's so cool she is
09:33 - prolific inventor and cool
09:35 - and CTO of One Laptop Per child um but
09:40 - yeah and then the other one you saw is
09:42 - and this one this one right okay and
09:44 - this is just for fabrication homework
09:47 - where I wanted to and these are some of
09:51 - the women Nobel laureates and this is
09:53 - this is a prototype base book and the
09:55 - idea is to light the LEDs from the
09:58 - bottom are sorry like the crystals from
10:01 - the bottom and so this is kind of the
10:04 - latest iteration I was working on
10:06 - yesterday so like then I'm they're color
10:09 - coded by the category of their award and
10:12 - as and so I'm gonna put the crystals on
10:15 - top of the lights and then it's gonna
10:16 - glow the different colors this is great
10:19 - so it's so fun to see because you know I
10:21 - somewhat of I would say like an anomaly
10:25 - here but so many people at this program
10:27 - at ITP and ima work with physical
10:30 - computing and fabrication and building
10:32 - physical devices and making
10:34 - three-dimensional objects that live in
10:36 - their work real world and I kind of fall
10:38 - back to my safe happy place of software
10:40 - which has its own problems and
10:41 - complexities but it's great to see I
10:44 - know that you have done so much work
10:45 - with data visualization on screen and
10:47 - the browser d3 that's what we're talking
10:49 - about that's we talked about of Friday
10:50 - we're talking about today so it's really
10:52 - I find it always exciting to see people
10:54 - move into I'd like to like break through
10:57 - that what could be scary like to and
11:00 - like start to make physical stuff but
11:01 - it's been such like a friendly
11:02 - supportive environment like I realized
11:05 - like how deeply I am in software so much
11:08 - still got like even the most obvious
11:11 - physical things I don't see like yes
11:13 - like earlier today I was talking to one
11:15 - of the residents and I was like oh I
11:18 - need to build in the switch and he's
11:19 - like no just unplug it and I'm like oh
11:21 - like I was sorry I was I was clicking
11:23 - like like a battery into an Arduino and
11:26 - I'm like oh now I should build a switch
11:28 - to like control on and off and he's like
11:30 - no you can just cool I am going to by
11:36 - the way I think I mentioned this but I'm
11:38 - wait I'm going to be waiting in two
11:39 - laser-cutting myself
11:41 - sai is a student here and I are going to
11:44 - work on I have a it's going to arrive
11:47 - sometime this week a box of 250
11:50 - train whistles and I'm gonna try to like
11:52 - laser-etched the coding train
11:54 - send them out is like patreon but I'm
11:56 - not I think I'm not gonna use Patriot
11:58 - but it's a longer story that I will get
11:59 - to at another maybe I'll talk about more
12:01 - in this Friday's live a little
12:02 - membership gifts for people okay so
12:07 - let's move let's move on because we we
12:10 - will hopefully won't be super rushed
12:12 - today but we're will be here until about
12:13 - five o'clock so that's about 45 that's a
12:17 - half an hour okay so I'm gonna kind of
12:20 - let Shirley take the lead here let me at
12:22 - least open up what I what we'd made
12:25 - before and I will try to in my own words
12:27 - kind of recap what we did and then you
12:30 - can tell me if I kind of understood it
12:31 - correctly oh and then we will also take
12:35 - your questions and Peter in can you
12:40 - explain how to iterate over the film's
12:42 - again so that would and that has to do
12:45 - with kind of like the interrupter exit
12:47 - stuff what so nothing we need to answer
12:50 - that right now I'm just trying to
12:51 - pinpoint where so I feel like there's
12:53 - two parts you could be talking about one
12:55 - when we loop through the data itself to
12:58 - calculate and use the scales and but
13:03 - he's probably talking about the enter
13:04 - update exit part where we're iterating
13:06 - through and the kind of SVG oh yeah so
13:11 - we'll make the jump like what we what we
13:12 - coded somewhat step by step last time
13:15 - was how to make one flower based on one
13:18 - movie but then we really quickly I don't
13:23 - think we again it was surely very
13:27 - quickly just added some code and so yes
13:28 - let's try to take some time to unpack
13:30 - that and I also would love to show a
13:34 - couple of the projects that people made
13:36 - based on yeah yeah so I know there were
13:40 - so let's so let me first recap and I'm
13:42 - gonna try to spend less than two minutes
13:43 - doing this so the first thing that I
13:45 - learned from Shirley is that syntax for
13:49 - creating a path in SVG yeah and for move
13:53 - C for curve two there was also L for
13:56 - line two yes and then and then that's
13:59 - really what so that's what's happening
14:00 - here
14:00 - this petal path is like
14:03 - start here start at the top curve to the
14:06 - bottom and then curve again back to the
14:08 - top and so this is a very simplistic
14:09 - design and maybe surely we'll touch on
14:12 - how you might make that more beautiful
14:15 - or you could look at her actual film
14:16 - what's it called again film bent flowers
14:18 - project to see so that's we learned then
14:21 - we could actually put that on an HTML
14:23 - page by creating an SVG element and all
14:27 - this is happening in a observable
14:29 - notebook which is like the p5 web minute
14:32 - or in the sense that I'm coding in the
14:34 - browser but very different in that it's
14:36 - got cells that can be executed
14:38 - separately users require a bunch of
14:40 - different syntax things ok then we
14:43 - loaded the d3 library that's the primary
14:46 - library we're using in these code
14:48 - examples then we loaded a JSON file that
14:53 - has all this information about movies in
14:55 - particular there the year they were
14:56 - released their box office yeah the
14:59 - number of the ratings things like that a
15:01 - lot of metadata metadata by the way then
15:04 - what we did was use a nominal just like
15:07 - source make this discussion much shorter
15:10 - we use the d3 library so if I go up here
15:13 - and look at the data we can see here's
15:14 - the movie die-hard - and all of the data
15:18 - associated with that movie then we use
15:20 - the d3 library to parse out two pieces
15:24 - of data their rating and what was the
15:27 - number of votes again soon number of
15:30 - IMDB votes so basically the number of
15:32 - people that like rated them ok so and
15:36 - those pieces of data were used to design
15:39 - the flower yes and so though all this
15:42 - functionality that you're seeing like
15:43 - extend scale linear quantize all these
15:47 - are d3 built-in T 3 functions
15:49 - that perform common operations on data
15:52 - like remap it from this range to this
15:55 - range or you know inverted or multiply
15:58 - it by this or that kind of stuff and so
16:01 - we did that and once that was done there
16:04 - is now this sort of crucial piece of
16:06 - code which i think is kind of what you
16:08 - want to react splain them yes in this
16:10 - crucial piece of code after the data is
16:13 - parsed and oh and remap to all the
16:16 - appropriate range
16:17 - it takes the data and makes the flowers
16:21 - out of it through this process called
16:23 - enter update exit but we're only using
16:25 - enter for this particular exam yes yeah
16:29 - and we were talking about I think going
16:34 - through the enter update I'd say and
16:36 - then kind of talking about steps of
16:38 - maybe what people that are watching
16:41 - might be able to do to kind of like
16:43 - complete the price right um and so do
16:47 - you want to do the which one I think you
16:50 - should start with replating more slowly
16:54 - any of the bits you thought you Russia's
16:55 - had to rush through and you can do that
16:57 - on the whiteboard let me turn the
16:59 - whiteboard camera on and I will keep an
17:04 - eye on the chat yes that'd be great I
17:05 - think I would love any questions to do
17:07 - with the enter update actually and I
17:08 - think that is Peters first question yeah
17:11 - and Simon is giving us some information
17:13 - about details of SVG tags yeah and so
17:18 - why don't let me just make sure this
17:19 - works if I switch to here whoops no
17:22 - that's the wrong button
18:46 - okay the audio should be back that was
18:49 - my fault
18:50 - so why I'm gonna alright I think I might
18:53 - know what's going on here this sound
19:05 - should be back and hopefully the white
19:08 - birds gonna be back in a second
19:10 - people can still hear me okay video
19:19 - capture device existing weird something
19:27 - happened
19:28 - create new
19:37 - okay everybody I realized that's the
19:39 - green screen
19:41 - that's no signal that's the computer
19:47 - this should be the whiteboard there we
19:49 - go we're back in business
19:52 - say I don't know what happened there
19:55 - so can say on something for a second
19:58 - Shirley hello okay your mic is good so
20:01 - now we're we're back in business so you
20:04 - can explain go back to whatever
20:06 - discussion if you wanted to have with
20:08 - the viewers and I will keep an eye on
20:09 - the chat okay sue we did this last
20:13 - Friday where I like super intensely
20:16 - rushed through inter update exit and
20:17 - that was the kind of the one that I
20:20 - wanted to go over and then if we have
20:23 - more questions about other parts of what
20:25 - we went over on Friday I would love to
20:26 - answer that too and but I'm gonna start
20:29 - with this and then hopefully like
20:30 - questions will come in as we're doing
20:32 - this and so what I wanted to do is kind
20:36 - of give a more concrete example of like
20:39 - um something that you might actually do
20:42 - when you're working with data are
20:45 - working with d3 and data um
20:47 - and so let's make this like hypothetical
20:50 - data set of I'm just gonna start with
20:53 - three so let's just say I want to draw
20:56 - like three circles and my and I want to
20:59 - like map my data to that so this is my
21:02 - data and let's see I'm just making
21:05 - things up right now let's see so my data
21:12 - is an array of three objects and each
21:14 - object has an ID and a radius number and
21:24 - so let's say that this is our SVG what
21:29 - our especially currently looks like and
21:31 - so we talked about last week about how
21:32 - and what d3 goes and does when we say d3
21:40 - next and we always have to go like the
21:43 - SVG
21:44 - and then when we say Dotson liked all
21:47 - and let's saying that this time we're
21:49 - trying to draw circles and some we're
21:51 - gonna select all circles that are in the
21:54 - SVG and right now what we said last week
21:58 - is there's nothing that exists in the
22:00 - SVG and so that would return an empty
22:03 - selection and then the three kind of
22:08 - most common things that you see in d3 or
22:13 - that you saw in d3 I think in version 4
22:17 - and before was this kind of pattern
22:19 - called data enter append and actually I
22:23 - think in version 5 or a newer version I
22:26 - think we now have a different it's a
22:29 - it's a different method and I'll cover
22:31 - this first and then I'll talk about the
22:33 - new method and because it's conceptually
22:36 - still the same the new method just makes
22:38 - the code part easier and and so we'll
22:41 - pass in let me just I always name is
22:46 - data and then I regret it and so we have
22:49 - values let me just call it vine use and
22:52 - we're gonna pass in values and this is
22:54 - the part that I kind of wanted to
22:56 - explain in more detail which is I'm in
22:59 - d3 dot data this method actually and can
23:03 - take in a potential second argument and
23:06 - we call that the key function and so I'm
23:10 - what the key function I'm if anybody's
23:14 - ever used react or view and that's
23:19 - probably really familiar to you because
23:23 - every time you try to render an array of
23:25 - something like they'll scream at you and
23:27 - be like for best practices enter a key
23:30 - function and and so that's the same
23:32 - concept but let me do this first and
23:40 - we'll say whatever M is so let me do
23:47 - this and then
23:49 - clean it and just watch out that
23:51 - actually the camera only gets to about
23:52 - here okay thank you
23:54 - um so I'm gonna stop this right here and
23:59 - I'm gonna kind of and go back to here
24:03 - and say and I'm gonna try and color code
24:07 - it so let me say that I'm my values here
24:13 - so like my actual data that I'm trying
24:18 - to bind are and this kind of like one
24:22 - five this ID is 1 and radius is 5 and
24:27 - then I'm trying to find you know ideas -
24:30 - and radius is 10 350 and so when d3 sees
24:38 - that is thought data what it's doing
24:41 - underneath the hood is it's going to
24:44 - take the bat this array of values in it
24:47 - and when you pass in data and it has to
24:51 - be an array or else you're going to get
24:52 - an error and and d3 is saying okay let's
24:57 - loop through each of these identify what
25:01 - the key is
25:03 - so this is where it's like I'm looping
25:06 - through each of the elements in the data
25:09 - and identifying what the key is so it's
25:12 - saying okay this key is one the key is
25:14 - to keys three and then they will look in
25:17 - the Dom and they will say okay is there
25:20 - any elements that are existing in the
25:24 - Dom that our circle elements um that
25:27 - have the key ID one key ID two key ID
25:32 - three and I'll be like oh no there isn't
25:34 - any of those and so it will be like okay
25:38 - so the UM
25:40 - there will be an enter a selection you
25:47 - keep going and there will be an enter
25:51 - selection that d3 calculates and this
25:55 - this function calculates and it's saying
25:58 - oh I need to I'm trying to figure out
26:01 - then let me let me have like an actual
26:04 - like color coding of like okay so all
26:07 - concepts are going to be in blue all
26:09 - data are gonna be green and all SVG
26:12 - elements are red from now on so it's
26:15 - gonna be called an enter selection and
26:20 - this says that because there's none of
26:25 - those things that match like all that
26:27 - criteria existing in the Dom that means
26:30 - I need to go and create three circle
26:34 - elements I'm and we're gonna get into it
26:37 - yes yes so if if those did exist would
26:42 - it did would just like grab those
26:44 - elements and okay so enter you enter the
26:50 - enter but most typically is sort of the
26:52 - first thing that happens based on the
26:53 - data and if this and the stuff isn't
26:55 - there so it creates them creates the Dom
26:58 - elements what do you do
26:59 - so d3 does not do anything for you you
27:02 - have to create it so you have the option
27:04 - so let me actually okay keep going keep
27:06 - going
27:06 - I mean so let me rephrase what I set up
27:09 - a little bit so it data the method data
27:13 - will say you need to like we we need to
27:18 - create three Dom and three circle
27:21 - element being able to match the data so
27:23 - it like has this data structure if you
27:26 - like actually look at the Dom element
27:27 - and like it has all this like it had it
27:30 - just says and I have three placeholders
27:32 - if you ever want to go and create three
27:35 - Dom element so that the reason why I'm
27:38 - making this like really like that
27:40 - distinction is then the reason why you
27:43 - do dot enter is because you're telling
27:48 - deep three okay I understand that there
27:51 - is something in the enter selection and
27:54 - so please give me return me these three
27:56 - placeholders and then when we do dot
28:00 - append we're saying for each of these
28:05 - placeholders
28:09 - actually make me so when I do thought of
28:15 - hand
28:16 - this makes the Dom element yes and we
28:20 - had G in our example because we this is
28:23 - an example so that's simplified that's
28:25 - just making some circles but ours made a
28:27 - group that we then put a hole at your
28:29 - petals and things yes perfect so
28:32 - actually let me do this over here so
28:34 - this is this over here is the enter like
28:40 - it's same return many enter selection
28:43 - and is it making these Dom elements the
28:46 - circles with the ID that's here in the
28:49 - data yes ooh I'm actually you know won't
28:52 - be fun let's actually go into our what
28:56 - we created and let's inspect the
28:58 - elements and actually can you
29:00 - console.log every group I'm in the so
29:05 - let me just finish drawing this really
29:07 - quick so here what enter does is give
29:10 - you back three placeholders and what
29:12 - append does is actually create these
29:14 - three Dom elements in the three circle
29:18 - elements in the Dom with the data bound
29:24 - to it and and when you when you
29:27 - console.log will be able to see what
29:29 - that so when you say console.log right
29:32 - now the result of this whole process is
29:34 - stored in a variable called flowers yes
29:37 - console.log that object okay like this
29:41 - yeah I'm like there we go sorry
29:48 - everybody I'm like all my buttons are in
29:49 - different places console.log flowers so
29:53 - if I run this
29:59 - then if I look at the console these are
30:07 - them that's that's our data this is and
30:10 - so this is actually what d3 will return
30:14 - you and when saying is that it has 135
30:18 - group elements and right and then the
30:23 - most I'm gonna do my code Vanna White
30:27 - okay so what the most important part of
30:30 - this so this is what like a Dom element
30:32 - looks great and what do three does is it
30:35 - kind of makes this oh yes the data in
30:38 - there that's the data so when people are
30:40 - like d3 binds the data like that's this
30:43 - is what they mean it actually like makes
30:45 - this little attribute or like call like
30:47 - underscore underscore data and then you
30:49 - can see this is this is the data we
30:52 - created here the pests sighs mumbles and
30:56 - the array of petals right okay and
31:01 - that's what we're gonna bout to use down
31:02 - here and so I think there was Peters
31:06 - question was like how did you loop
31:08 - through the film's and so what actually
31:13 - happens so actually do you want to come
31:17 - no yeah you're - what actually happens
31:20 - is and when we do any of these don't
31:24 - adder or that style right what's
31:26 - happening under the hood is that d3 is
31:28 - applying this function that we passed in
31:30 - to every single one of those Dom element
31:35 - G over here yeah so yes every single one
31:38 - of these Dom element and in every one of
31:41 - these functions we can actually see that
31:43 - right there and that sorry I'm
31:44 - interrupting you in the transform and
31:45 - the way we actually see that in there
31:48 - was like a there's a property there that
31:50 - would have that's dis translate in it a
31:52 - trance oh yeah I think it was there
31:55 - under T so that part is not actually no
31:59 - that's that's that's a part of just like
32:01 - HTML and SVG and so like basically d3 is
32:06 - just abstracting some like Dom
32:08 - manipulations stuff for you and
32:11 - but in this function transform it's
32:17 - probably under the transform one that
32:19 - you found this is yes because heart is
32:21 - really big yeah
32:26 - yes I don't know if you want to get into
32:30 - this no no jump definitely do not I was
32:33 - my fault
32:33 - go on but I'm so it's and and this
32:38 - function what we're doing is we're
32:40 - getting the data this data per group
32:44 - element and then and then we're
32:47 - evaluating it and d3 is looping through
32:51 - it under the hood and applying whatever
32:53 - is being returned to each of those group
32:55 - elements and and so that's how deeply
32:59 - I'm that's how we use d3 to kind of
33:02 - apply data to each element so usually
33:05 - after you've seen this there's a doubter
33:08 - doubter doubter doubter oh sorry yeah
33:12 - usually after you see this set of code
33:14 - you'll see da-da-da-da-da under don't
33:16 - either
33:17 - so actually what an adder is short for
33:19 - attribute oh yes which is a HTML
33:21 - elements can yes it has attributes one
33:24 - of which is this like style and three
33:35 - okay so this is what happens when we do
33:39 - enter and then I when the try and talk
33:44 - about update and exit question so we
33:49 - only needed enter in our example because
33:52 - we were just like creating a
33:54 - visualization yeah so if it's going to
33:56 - change over time or something different
33:58 - it's gonna happen later it's gonna
33:59 - animate or maybe that's why we would
34:02 - need to add update yeah so if if it's a
34:07 - static visualization you only need enter
34:09 - yes it animates you need update that's
34:13 - not enemy be like just changes value it
34:16 - changes value yeah so let's let me just
34:18 - show that really quickly really quickly
34:21 - by you let me say that now that we've
34:24 - drawn okay so in here I wish I'd like on
34:28 - my computer right now and I can just
34:29 - like cut this out and like
34:32 - like this over here and putting here but
34:34 - one of these days I'm because this is
34:39 - recorded I'm just gonna erase this so we
34:41 - have we have yeah room yeah I saw
34:44 - somewhere in the chat I was like no
34:46 - don't you erase or something okay it's
34:50 - all being saved for until as long as the
34:53 - it's not the internet apocalypse you'll
34:56 - be able to find this material okay so
34:59 - then let's see now that we've like you
35:02 - know created all of this
35:05 - I'm let's say now for whatever reason we
35:08 - want to show the second state of data or
35:11 - a second set of data and let's say that
35:13 - in the second thing I'm you know we have
35:16 - we still have let's say I'm ID two are
35:21 - ten but let's say like we have actually
35:24 - you know what and let's say in the
35:26 - second state the rainiest actually goes
35:30 - up to 20 and then let's say we have a
35:35 - new thing um and I'm gonna call it ID 4
35:41 - and this one is gonna have radius of 30
35:45 - I am making all of this up so just just
35:49 - to understand that for a second the idea
35:51 - here is that if these are all tied to
35:53 - circles this is now in a way a new value
35:58 - for a existing circle and this is now a
36:01 - new circle because the idea is the key
36:04 - for each piece of data yes
36:07 - so let's yeah exactly so let's go
36:11 - through that together and so I'm gonna
36:15 - say you know this was okay let me
36:18 - now I'm trying to decide how I want to
36:21 - go about this let's still go use these
36:24 - no I'll draw anyone so we have we now
36:30 - have three circles and this is I'm just
36:41 - only gonna draw the ID this is ID one
36:43 - two and three and the radius is 5 10 15
36:49 - this is the result after here after that
36:52 - yes thank you
36:54 - and then our new data okay our new data
37:05 - is ID 2 and radius 20 and ID for radius
37:13 - 30 so just like you said Dan do you want
37:17 - it do you want to do it well we would
37:20 - say we would say where do we have to say
37:24 - dot data again conceptually for us and
37:30 - so let's say that we want the very first
37:33 - add the order I usually do it is
37:35 - actually I exit first so you can exit
37:42 - after an enter actually you know I think
37:44 - you're right let's do it with the code
37:46 - ensue I'm gonna change I know but we
37:50 - needed that enter oh you don't have you
37:52 - just have update no enter I was so
37:56 - understanding with the enter that code
38:00 - we have is there only if we only need to
38:03 - enter we want to do all the call circles
38:13 - and then what I'm gonna do is first I'm
38:18 - gonna exit so this is concept I am now
38:21 - like getting completely I never used
38:24 - more than one color it's very amazing
38:27 - I should have actually
38:28 - I don't know things I get myself into
38:30 - the first step I want to do when I'm
38:33 - doing enter update exit the whole
38:35 - shebang is this part where I just tell
38:38 - d3 to do the calculate buying the data
38:40 - do the calculation then and what I do is
38:43 - I take circles that exit dot remove we
38:59 - would be this would happy happening like
39:01 - here so this okay I'm gonna make some
39:05 - more room for this circle thing so this
39:09 - will be on a new line right there yes
39:12 - yeah and I just wanted to it was okay I
39:17 - understood that this equals circles okay
39:23 - so okay so imagine that this is like in
39:27 - the guy okay um and so what's happening
39:30 - here is this is basically the like
39:34 - return value of data I'm and it's saying
39:36 - I'm and here another thing that that
39:39 - data would have done is say okay there's
39:45 - ID to ID for so this remains but these
39:50 - two need to go so these two are the exit
39:55 - selection and so I'm this we call the
40:02 - exit selection
40:07 - and it is the two circles with ID 1 & 3
40:15 - because they're not here because they're
40:18 - not in the new data that we're trying to
40:21 - render but we're here values is is here
40:27 - but I don't see anywhere you refer to
40:29 - Val - ok so very good point and you've
40:33 - caught me so technically speaking ok let
40:38 - me do this look that makes sense to me
40:40 - but how did it know to compare so oh you
40:43 - just said that oh you're just
40:45 - overwriting Davout the values changed
40:47 - yes it's kind of like isn't that the
40:48 - thing that react does or something it's
40:50 - just like something changed update stuff
40:52 - sorry you're catching me so I'm what I
40:59 - usually do is I put this whole enter
41:02 - like I put all of this code into a
41:05 - function and every time that you want to
41:08 - animate a new status set of data or you
41:11 - want to like somebody clicked on
41:14 - something you want to update the data
41:15 - you will then call them call that
41:17 - function and pass in the new values got
41:20 - it yeah ok
41:21 - sorry I was like trying to I get it
41:23 - again it totally makes sense so this is
41:26 - not an automatic process where this is
41:28 - always like looking at what the current
41:29 - values are it's a process by which you
41:32 - can sort of pull what's in the Dom and
41:35 - compare it to your data and update
41:37 - everything yeah so is that you need to
41:40 - do everything you need to do absolutely
41:43 - everything like reactant views and stuff
41:45 - like they're doing that's magically
41:47 - under p5 is like that as well you you
41:51 - have to draw nothing's gonna happen in
41:52 - p5 unless you're explicitly drawing yeah
41:54 - to me this feels like more automatic
41:57 - than peopIe but arguably it's the same
41:59 - idea actually and I think the difference
42:02 - is the mechanism by which things are
42:05 - drawn in p5 is this setup and draw
42:08 - function and here it's really about sort
42:10 - of starts more with the data and enter
42:13 - update exit
42:15 - the fundamental difference between d3
42:17 - and p5 is that p5 defaults to canvas you
42:21 - set up and drop you somehow sense
42:23 - because then like you set up the canvas
42:25 - and then you draw and then if you want
42:27 - to innovate you clear canvas redraw
42:30 - everything this is actually actually
42:31 - updating SVG elements yes because SVG
42:35 - elements will stay in the Dom and you
42:37 - need a way to be able to remove it or
42:40 - update it but I don't want to go too off
42:41 - the track here but my you in d3 you can
42:44 - also say use canvas instead of SVG and
42:47 - but your and your code doesn't have to
42:48 - change or it changes a little bit so
42:50 - actually the great thing is if you want
42:53 - to use canvas I don't think you need any
42:56 - of this code okay because with canvas
42:59 - like we said it's just about like clear
43:02 - draw clear draw and so with canvas what
43:05 - you might do like with canvas all you
43:07 - would do is in the same function that
43:09 - you're drawing instead of going through
43:12 - this whole hassle of a process and we
43:15 - would just pass in the new data clear
43:18 - the canvas just redraw the new data um
43:21 - and so you might be like why are we
43:25 - going through all this trouble because
43:26 - if you want to learn to you three every
43:29 - single example other than the one
43:31 - examples for canvas will have this whole
43:33 - pattern and it's really helpful to know
43:35 - what's going on yes Scotty okay could
43:38 - continue there's also a tangent about
43:39 - like SVG versus canvas and when you want
43:42 - to use which but that's a that's a whole
43:44 - tangent and but yeah so was I talking
43:48 - about
43:48 - oh okay so this exit this dot exit is
43:51 - basically telling d3 that I want to like
43:55 - please give me this exit selection which
43:57 - will include these two Dom elements and
44:00 - then this dot remove we will actually be
44:03 - that's the function that actually
44:05 - removes it from the dawn and so once we
44:09 - call this what's gonna happen to our SUV
44:13 - G is this gets delete it and this gets
44:16 - deleted so that's what the state looks
44:19 - like after this exit selection all right
44:22 - sorry after this code is
44:23 - executed so ID number four is not added
44:27 - because the exit is only forgiving you
44:29 - what's missing and removing and am I
44:31 - gonna guess correctly that update will
44:33 - add number four very close very close
44:38 - and dirt we need another enter yes
44:41 - Oh cuz we just put exit before enter yes
44:44 - oh that's you didn't actually we're not
44:45 - actually getting rid of enter and
44:47 - replacing with update yeah we're just we
44:50 - needed to add exit first yes who could
44:55 - you do them in any order cuz you're kind
44:56 - of setting up or it's important to do
44:58 - exit because here it says enter update
45:01 - exit so that's kind of what I was
45:02 - imagining over the years I'm like
45:07 - developed this order because and I
45:11 - reasoned it out once I'm or a few times
45:15 - and now I'll have to talk it through
45:18 - yeah okay but enter is gonna get us the
45:21 - missing one okay yeah there's a reason
45:23 - for it and I don't remember off the top
45:27 - of my head and but yeah so what we want
45:30 - to do and then this is where you can say
45:40 - length dot attribute like you can set
45:43 - your attributes and so what this does is
45:48 - like you guessed it will say okay in
45:53 - this SVG what's missing is the for and
46:00 - so we're gonna go and create oh - yeah -
46:07 - is still ten update we'll change that to
46:12 - 20 so exits for removing enter is for
46:16 - adding and update is for existing things
46:18 - with change data I love I love doing
46:26 - this actually because I always feel like
46:28 - I'm not like explain you know I don't
46:31 - know any of this stuff I I like
46:34 - I've tinkered with d3 but I'm just in
46:36 - that
46:37 - that that place you know you've been
46:39 - there everybody watching been there
46:40 - where you like don't know the thing but
46:41 - you found some example yes you just like
46:43 - move some stuff around and then you kind
46:44 - of got something and you move on
46:46 - like p5 I feel like I know that inner
46:48 - mechanics of how things work so I can go
46:50 - a little deeper but this is completely
46:52 - new to me I also a hundred percent agree
46:55 - with everybody that's like canvas mp5
46:58 - are easier to grok right cause I'm like
47:03 - you don't have to worry about like
47:05 - persisting Dom element removing them
47:08 - updating them and like all you have to
47:12 - worry about is cleared wrong cleared
47:14 - wrong
47:15 - mm and so like I think I honestly feel
47:18 - like p5 and canvas is the more fun one
47:20 - but like with um but like with d3 well
47:24 - so with indeed we can deal with HTML
47:29 - elements SVG elements canvas but you
47:32 - know I I think that's always important
47:33 - that people get into this trap of like
47:35 - oh should I be using this one or this
47:37 - one which one's better this one's better
47:38 - this one is no good I like my thing
47:40 - instead all of these libraries it's not
47:43 - a zero-sum game they all are tools that
47:45 - have their own value and like you might
47:48 - say like oh hi I've never programmed
47:50 - before oh why don't you take a look at
47:52 - p5 or hi I program in JavaScript I have
47:55 - this giant data set I want to visualize
47:56 - SVG I feel like oh why did you take a
47:58 - look at t3 yeah so it's not I think we
48:01 - can fall into that trap of like I have
48:02 - to like prove that the one that I like
48:04 - is the one that usually yeah like I
48:08 - don't these are all like you said like
48:10 - they're all tools yes use them where
48:13 - they make sense
48:13 - yes okay okay so the one last part and
48:17 - this is gonna be oh and then what I have
48:21 - to do is I have to remember this enter
48:25 - selection and here in this in this
48:32 - variable and this is the part that's
48:34 - going to be get a little bit weird if it
48:36 - hasn't already Dan and I'm realizing
48:39 - that I'm running out of space wish me
48:42 - luck I'm gonna
48:43 - gonna be over here I'm gonna just do
48:45 - this third part over here and so this is
48:48 - kind of going to be the update step and
48:51 - what I'm doing here is saying enter dot
48:56 - merge circles dot adder and whatever
49:09 - attributes but I've never said adder
49:11 - before in my whole life and you think I
49:14 - at Furtick you like what is this header
49:16 - no but that's probably a thing that's a
49:18 - way to say that it's a dr so this is
49:25 - probably that there's a lot of weird
49:27 - things and this is probably the weirdest
49:28 - one so what this is saying is I have my
49:31 - enter selection which was this for and
49:35 - I'm dog data this actually also returns
49:41 - you the update selection which is this
49:44 - too and so I'm saying go and give me
49:49 - this enter selection of for merge the
49:53 - selection with this update selection of
49:56 - two and then set the attributes whatever
50:00 - attributes I need in this case what I
50:02 - want is to set the attribute radius and
50:13 - do and then you know I want to use the
50:18 - DAR and this would be that would be here
50:21 - also right so the reason why I have this
50:25 - is because you don't so here it doesn't
50:30 - apply to us because I'm okay
50:34 - the best way to describe it is if you
50:37 - have attributes you want to set that
50:39 - will never change do right here so maybe
50:42 - I actually my fills red got it so that
50:49 - means that every time I create it can
50:51 - never update it will it will never I
50:54 - this attribute will never be updated and
50:57 - so I'll just do it on creation just
50:59 - because just because that's much more
51:00 - efficient you can you can put this down
51:02 - here and the same thing will happen but
51:04 - like I mean you just don't need to and
51:07 - I'll put any attributes that will that
51:09 - are data dependent off of this thing
51:12 - like chained off of this thing
51:14 - and so now that we have this one line
51:19 - this radius will become 20 and this is
51:27 - this is the code for enter update exit
51:32 - so I have an interesting question here
51:34 - so enter that's exactly to this function
51:37 - called enter exit maps exactly this
51:40 - function called exit but update its
51:43 - there's this onesie called merge so
51:45 - there is no actual function called
51:47 - update the process of updating is
51:49 - merging the existing circles with the
51:52 - new data so it's called merge is that
51:53 - kind of yeah so basically the update
51:56 - selection you can think of it as like
51:58 - and I think of the update selection as
52:02 - like whatever it is existing and then
52:05 - needs to be kept but yeah honestly it's
52:10 - it's a it's a little bit it's a little
52:11 - bit that one's a little bit weird of a
52:13 - one and so now that we've gone through
52:16 - all of this pain I'm let me show you the
52:20 - easier way to do it because I think I
52:22 - have this here so I just found over here
52:25 - this notebook for always is from 2012 so
52:29 - it must not be oh this is like it's got
52:32 - some examples of like enter we can see
52:35 - this in track merge they sure like that
52:37 - but what I was looking for was that
52:39 - somebody was telling me there's a new
52:40 - thing called joint go back to that go
52:43 - back to that and then go up and so this
52:46 - is basically I'm well actually that's
52:49 - not that's not even really this is only
52:51 - this is from like seven years ago like
52:54 - my Google search was a little off wait
52:55 - so the thing I wanted to show you is
52:58 - what someone leads yes that's what I was
53:00 - looking for it's called joy yeah data
53:02 - join so it's
53:04 - [Music]
53:05 - selection I'll join you try the d3
53:08 - selection that's what else and then do
53:11 - not find dot join selection not join
53:18 - yeah so yeah I'll let you stand over
53:21 - here you can point it over there people
53:23 - will be able to follow it more easily
53:24 - yeah so this stop join I think came out
53:31 - in a newer version of d3 and where it
53:35 - just abstracts away all of the pain that
53:38 - we went through and we went through this
53:41 - so that you can understand how it works
53:46 - by just do this so join is kind of like
53:53 - there's gonna be new stuff there's gonna
53:56 - be stuff that's gone there's gonna be
53:57 - stuff that was there but the you values
53:59 - changed joins gonna like account for on
54:03 - and update the Dom elements if you want
54:07 - like specific things to happen like if
54:11 - you still know you can you have these
54:13 - callback functions yeah do you like all
54:17 - the pain we just went through
54:18 - yeah no this do you like this is good
54:20 - because I you know it's it's Internet I
54:24 - kind of to me I have like encountered
54:26 - similar things like this like you can
54:28 - jump to use a weight and a sink in new
54:32 - fancy JavaScript it's not that new but
54:34 - like without looking back at what all
54:36 - this sort of like gobbledygook of
54:38 - promises are confusing what's going on
54:40 - so this to me is a little bit similar
54:42 - like yes we could have started with just
54:44 - this join but at least for me and in
54:47 - having seen d3 code before having this
54:51 - having this more sort of like full
54:53 - explanation of it
54:54 - now again it's like the reward you get
54:57 - your dessert yeah joy so I actually
55:00 - personally have never used before how
55:03 - new is this I'm I think soo a disclaimer
55:06 - I stopped using enter update exit period
55:12 - last March um when I started using view
55:16 - because
55:17 - reactive view again do all of this
55:19 - underneath the hood and so the way I
55:22 - actually like to Deb and it makes me
55:24 - faster developer is I use d3 to do all
55:28 - of that data translation so last week
55:30 - when we did all of those scales I use d3
55:33 - for that I use d3 to like calculate
55:36 - positions for me and like like XY
55:40 - positions SVG paths and and then when I
55:43 - actually need to go render to the Dom I
55:45 - use view so when I stopped using enter
55:48 - update exit so it must happen between
55:51 - last March and now so I personally never
55:55 - used it but I think if you don't want to
55:59 - use like if you only want to use d3 to
56:02 - draw um and do everything then I highly
56:05 - recommend checking out the data join
56:08 - somebody harp eat in the chat suggested
56:11 - looking at this let's see if this this
56:16 - particular example which explains enter
56:20 - update exit is this the one you're
56:21 - looking at I don't miss block yeah cool
56:23 - so thank you okay I can add a link to
56:25 - this in the video's description as well
56:26 - I wanted to show two things I don't know
56:28 - if you saw these but two people created
56:32 - let's start with this one actually so
56:34 - based on Friday stream two people made
56:37 - their own versions of this this one is
56:39 - by Stefan - Berg let me open it in a new
56:43 - window and we can see here film flowers
56:46 - based on the original so one thing I
56:47 - love about observable is how you can
56:49 - annotate with markdown so it's really
56:52 - nice to be able to do that I mean and
56:54 - and you can see the code is so much
56:58 - nicer yeah so these are beautiful you
57:01 - know it's something about also the with
57:04 - these kinds of projects the repetition
57:06 - and the arrangement of all the different
57:09 - flowers is really what kind of brings
57:12 - out the visual for me I feel like I had
57:16 - as soon was working on a project and it
57:19 - was like a sort of beautiful pattern but
57:21 - as soon as you could see like a hundred
57:24 - variations of them all in a grid you got
57:26 - other sense of what that pattern is like
57:28 - so that's really nice so this looks like
57:29 - pretty similar to what we did but just
57:32 - with a bit more thoughtfulness in terms
57:33 - of color and and the ranges but the
57:37 - other one that somebody made which will
57:39 - go here I'm Anthony McAteer or spectral
57:42 - flame I recognize that name from YouTube
57:44 - chat created something very similar but
57:48 - with a totally different data so let's
57:50 - look at this so this is popularity and
57:54 - contribution flowers of coding geometers
57:56 - so I have a playlist know what number
58:01 - I'm on 150 something there's like videos
58:03 - of like a coding challenge so they'll be
58:05 - I'm actually we could look at the data
58:06 - here whether they'll be like a star
58:07 - field a snake game all these different
58:09 - things so I guess what's interesting is
58:11 - to think about what first of all what is
58:15 - it what does it mean for something to be
58:16 - popular
58:17 - I suppose that's tied to maybe the
58:19 - number of views is that the right metric
58:21 - for popularity interesting question
58:22 - height of the background size of our
58:25 - items such as views the number of petals
58:27 - is how many contributions and
58:29 - contributions is a thing that if you go
58:31 - on to the coding train website and go to
58:34 - like coding challenges I'm pretty sure I
58:35 - think that 10 print 1 this has the most
58:38 - contributions so if I go to here you can
58:40 - see these are all like versions that
58:42 - people made after watching this video
58:45 - and seeing it's just this is the example
58:47 - of the pattern so this is like I like we
58:49 - were talking about I wanna make sure
58:50 - linear does this is like how would
58:52 - you're making an example like how far do
58:54 - you go with it like I you know do you
58:56 - want you add all the features do you
58:57 - make it beautiful or you take sort of
58:59 - leave stuff for the person who's going
59:01 - to receive the example to build on top
59:03 - of so it's hard to find that line but
59:07 - let's so let's take a look at this so if
59:09 - we look at this we can see here's all
59:11 - the data I'm and then here's the text is
59:15 - there and this I guess this is just the
59:18 - number of the number of what challenge
59:19 - it is that's the name of the challenge
59:21 - and then this what this down here and
59:24 - like what the curve because because
59:26 - there's a there's a difference in how
59:29 - sorry how long the arc is right Oh
59:34 - spectra is that spectral piano is in the
59:37 - chat
59:40 - actually clock has the most oh there
59:42 - he's there a little bit behind okay so
59:45 - you can ask your questions we'll get
59:46 - them yes I'm wondering sue there was
59:49 - wait there was popularity and that was
59:51 - the size and then the description up
59:54 - here says wait you could you could if
59:57 - you go down if you could just do this to
59:58 - hide it Oh God
59:59 - so it says views is size and height of
60:06 - the background number of petals is the
60:08 - number of contributions okay so maybe
60:10 - this is also tied to views maybe that's
60:12 - what so about the background yeah it
60:15 - makes sense because you can see this one
60:16 - over there has three petals in a much
60:19 - smaller arc whereas that snake game has
60:21 - a lot of petals at a much larger arc
60:26 - the background curve is just the views
60:28 - yeah got it
60:30 - okay cool I like I love also that you
60:33 - did this which is you can do this
60:36 - I'm very similar to in Illustrator you
60:39 - can do I'm sorry sorry we were you this
60:42 - one okay okay okay so this this text
60:46 - that um curves around the way you can do
60:49 - that is an SVG pad and then you can draw
60:52 - like a semicircle with like an SVG arc
60:55 - or some or a path arc um and then um you
60:59 - can say I want to have the text along it
61:01 - so that's really cool and and I think
61:05 - the same thing probably happened at the
61:07 - bottom because you can see like the 31
61:08 - and 32 point one there like following an
61:12 - arch so that's super cool and I also
61:13 - really love the different like you went
61:16 - above and beyond this is so awesome like
61:19 - look at the different like petal shapes
61:22 - there's one here there's this one that I
61:25 - think is a little bit so there's you
61:27 - know 1234 is different cuz cuz 35.2 is
61:31 - what we started with and then 31 is
61:33 - different and then the the traveling
61:36 - salesperson one is different yeah so
61:39 - there's 30 is different 31 is a
61:41 - different pedal the one down here's a
61:43 - different pedal the one traveling
61:45 - salesperson is a different cuddle yeah
61:48 - this is really awesome so I'm curious
61:50 - also spectral piano like so from the
61:53 - this is all in a playlist so certainly
61:55 - with the YouTube API which I have
61:57 - actually never investigated really in a
61:59 - video I should definitely do that you
62:01 - could get a JSON file that has all the
62:05 - videos in a playlist their name I
62:07 - presumably the number of views but the
62:08 - contributions is something that's on the
62:10 - coding train website which is separate
62:12 - from YouTube I wonder if that was done
62:14 - by scraping like the coding train github
62:17 - or just manually entered that's kind of
62:20 - an interesting so that's what's also I
62:21 - think what may not be so obvious to the
62:23 - viewer here is there's like a multiple
62:25 - levels this is not all information
62:27 - that's part of so that's great to see
62:30 - have other peb you done this film
62:33 - flowers example in different other
62:36 - workshops and things that people
62:37 - projects with their own data in a
62:39 - similar way I have no actually it's cool
62:43 - because I've gotten people that cuz I
62:46 - released it three and a half years ago
62:48 - and so people have done it with
62:49 - different like like different data sets
62:52 - and different visuals like there was
62:54 - someone that did I think every episode
62:57 - of Gilmore Girls
62:59 - I feel like instead of flowers it was
63:02 - toasters I think it was and like it was
63:06 - toast and different like jams or
63:07 - something
63:08 - and they were like you know it was
63:09 - inspired by her filament flowers there
63:11 - was like some other people that did like
63:13 - butterflies or something like that and
63:15 - then in the workshops I have held I'm
63:18 - like people have they didn't use a
63:21 - different data set but I'm the petals
63:23 - that they've done are like really
63:25 - beautiful yeah like we were staying at
63:28 - the I think the shangri-la I'm for one
63:31 - of the workshops and one of the students
63:34 - actually used the sangre lot like he
63:37 - like redid the shangri-la logo
63:40 - shangri-la logo and use that as the
63:43 - pedal oh and that was like I also
63:47 - thought you were on another his hey week
63:50 - was reminding me that we're well it's
63:52 - 5:05
63:52 - okay I built in a little extra buffer of
63:54 - my cell phone we're gonna finish up in
63:55 - the next five minutes so if there are
63:58 - other questions we can try to answer one
64:00 - or two but I wanted to mention because
64:02 - you were on nothing is it a twitch
64:04 - stream that's Jason learn with Jason
64:06 - yeah did you use you went through so
64:07 - like a kind of similar project on that
64:09 - event was something totally different
64:10 - he also wanted to do something with
64:11 - films likes film flowers um and but for
64:14 - him what we did was we got his YouTube
64:17 - data and we are making holy buckets okay
64:21 - oh wait oh is it still ongoing
64:22 - yeah so we are like part two now I don't
64:26 - know I don't there we go
64:30 - pardon - yeah yeah so we're still making
64:34 - the bus ooh that one is that we went and
64:38 - yeah so we design a whole buggy and
64:41 - we've like assigned different part and
64:43 - like data to different parts of the
64:46 - buggy and because he has an inside joke
64:48 - with his stream
64:49 - chant where instead of swearing he says
64:52 - holy buckets got it this looks like a
64:54 - bucket with wings and halo and like yeah
64:56 - it's very cute yeah so I so I'm I just
65:01 - pulled up I think what's the archive on
65:03 - YouTube but I believe that the the
65:05 - streams happen on Twitch actually I was
65:08 - I was I should look more at this I've
65:09 - been noticing that because I do most of
65:12 - this live streaming by myself I haven't
65:14 - really thought about how it would too
65:17 - much about how to do something with more
65:19 - than one person and I've noticed like
65:21 - people have nice setups that involve
65:22 - like you know a picture and picture and
65:25 - multiple screens and so anyway this has
65:26 - been great having you here is like a
65:28 - guest thank you for having I've had
65:29 - guests but thank you for going with the
65:33 - awkwardness of like this whiteboard
65:34 - where's table on everything I'm looking
65:38 - to see if there's any last questions
65:40 - Thank You Kate we c'mon for posting
65:43 - links in Twitch and then you used to
65:46 - stream like on your own Chad should I
65:48 - not be mentioning this you ever thinking
65:49 - of doing that again no I wanna do it
65:51 - next summer
65:52 - after life settles down yes okay good so
65:55 - you'll have to let bit I mean we'll stay
65:57 - in touch of course but you'll definitely
65:58 - have to let me know so I can alert the
66:00 - coding trained audience to chew and so
66:05 - we didn't make any changes to this code
66:07 - but hopefully now that we had Shirley
66:10 - back to more slowly talk through all of
66:14 - this wonderful stuff that this helps you
66:17 - understand some of it you still can if
66:19 - you would like make a project based on
66:22 - this example yeah yes gif it it's really
66:25 - had a few different exercise ideas
66:27 - because I think to kind of fully finish
66:30 - it um first thing would be um put the
66:35 - titles in so you can do that by creating
66:37 - a text within each group like a text
66:40 - element within each group and put in the
66:42 - titles of every movie on the flower and
66:45 - then we can also do another mapping and
66:50 - the mapping would be I'm the John rrah -
66:53 - the colors and then the third thing
66:57 - would be a map
66:59 - I'm what was it Oh different petal
67:04 - shapes for different parental guidance
67:07 - readings if you want to go through the
67:09 - rest of the exercise and all of that is
67:12 - in all of those features are in the
67:14 - version of the project that's on your
67:16 - website here yeah so there you go back
67:18 - up the look I'm a little bit so this is
67:20 - yeah the parental guidance reading yeah
67:25 - guidance reading and the the colors so
67:28 - those two are the last little bit if you
67:31 - want to go through it and like kind of
67:32 - finish the like try some other scales
67:36 - and clean up the yeah so I mean so you
67:42 - know you saw my kind of crude version
67:44 - that I hacked together and surely helped
67:46 - me with so that's kind of like the raw
67:47 - guts of everything you can see a much
67:49 - more polished version with more
67:51 - thoughtfulness and ideas about different
67:53 - designs so I think on one hand what you
67:56 - can do is exercise and is try to match
67:59 - some of this by adding color and shapes
68:01 - and more pieces of data but you could
68:03 - also create or get creative and make
68:05 - your own or I you know you could also
68:08 - like take the same visual motif but
68:11 - connected to a different data source
68:12 - yeah so many possibilities so maybe what
68:14 - we'll do we'll see how this goes but for
68:16 - now you if you make something you can
68:19 - the two places you could share it would
68:20 - be the comments of this video or the
68:22 - previous video you can also share it
68:24 - probably will see it more quickly or
68:26 - easily if you share it on Twitter so we
68:28 - have at Schiffman as me but more
68:30 - importantly at sxyw you yes so let's
68:36 - just
68:37 - we sxyw you Twitter and pull up
68:42 - Shirley's Twitter page here and so oh
68:45 - look there we are
68:46 - so at Shirley sxyw on Twitter and then
68:52 - I've been trying to what we'll also do
68:55 - is that create a page so now I'm looking
68:58 - for somewhere here there's a cuz it's
69:01 - not in this menu yet but there is a page
69:03 - for guests tutorials how the website
69:08 - works but there'll be a big I'll make a
69:10 - page on the website where people can
69:11 - also
69:12 - and it'll show up as a list like you
69:16 - know if I go to this one you can see the
69:17 - gears like people's versions they made
69:19 - them so we'll make a page like this that
69:21 - might take a few days violet is the they
69:25 - are the github community manager to help
69:27 - make that page so I'll be in touch with
69:28 - violet about that I'll put that together
69:32 - yeah well people we did we've been
69:34 - answering questions all okay okay so oh
69:40 - well okay we can ask we can ask one
69:43 - question and can't really see it I'm
69:45 - curious what she referring to Shirley
69:47 - thinks of the coal lots visualization
69:51 - I don't think so that was one of my more
69:53 - so I started this new series embarrassed
69:57 - called coding and coding in the Cabana
69:59 - as I'm making these videos at home I
70:02 - have a little garden and so this is a
70:06 - particular visualization of a
70:09 - mathematical number sequence called the
70:11 - coal Lots conjecture okay and it
70:13 - produces a pattern that looks like if
70:16 - the code still works what did I do to
70:20 - this code that it's like now it's
70:22 - decided to crash the browser oh there we
70:24 - go this takes a while to render it makes
70:25 - this pattern what's crazy about this is
70:27 - this is the math for this number
70:30 - sequence you take any number and if it's
70:33 - even the next number is itself divided
70:36 - by two or if it's odd you multiply it by
70:37 - 3 add 1 and divide that by 2 and it's a
70:40 - famous conjecture in mathematics because
70:43 - it's not prove it's not proved but any
70:46 - the conjectures that any number you
70:48 - start with you'll eventually that
70:51 - sequence will end up at 1 so and then
70:54 - this is a visualization of a variety of
70:57 - the paths of all these numbers based on
71:00 - even and odd making left or right turns
71:01 - and you get this like plant like
71:03 - structure this is no invention by any
71:06 - means of mine and most of the stuff that
71:09 - I did is based entirely on this
71:10 - numberphile video which about the
71:13 - koloff's conjecture and you can see it
71:16 - here and there's actually somebody I had
71:17 - I bought this book I don't have it here
71:19 - but there's somebody made a like a
71:21 - coloring book of all these like math
71:22 - algorithms it's wonderful anyway so so
71:24 - that was the one question
71:25 - you think of us it's really beautiful I
71:28 - should say damn that like um it's if I
71:32 - really think really deeply about it this
71:34 - is kind of really amazingly miraculous
71:37 - because I'm me getting into generative
71:41 - visualizations and generative data art
71:44 - is a lot thanks to your nature of cool
71:49 - okay
71:50 - and there was like a whole project I did
71:53 - where are you like washed your Perlin
71:55 - noise and that's hot and I like I like
71:57 - refer to your like fractal tree
71:59 - algorithm that does music San Francisco
72:03 - yeah that was like basically all like a
72:07 - majority of the visuals in there is
72:09 - based on like what you've taught so if I
72:12 - take a moment and like think about it
72:15 - really I need to I do want to say though
72:22 - actually
72:23 - is there a like a recent conference talk
72:27 - that has a video online of you showing
72:29 - some of these projects oh but people
72:34 - could just go to your website but here's
72:38 - not that outdated yeah no I know but I
72:42 - was just thinking like oh cuz you gave a
72:43 - presentation here about some of these
72:44 - projects that people got to see so
72:46 - someone seeing these projects you talk
72:47 - them through is really nice so yeah so
72:50 - anybody should check out the project I
72:52 - think that Shirley was referring to or
72:54 - that I was referring to just now is this
72:56 - one called send me love from SFMOMA so
72:58 - if you haven't already thank you so much
73:00 - visit Charlie's website thank you too
73:02 - should never know we might just come
73:04 - back tomorrow for like another half an
73:05 - hour you're like oh wait a second one
73:07 - more thing but we'll definitely will
73:09 - definitely continue I look forward to
73:12 - hearing from people in the audience and
73:14 - things that you make thank you for LOM
73:22 - l0m yeah so definitely I'm but you
73:25 - should stay tuned you don't need me to
73:27 - bring Shirley on the Internet to you if
73:29 - you wait till maybe this summer as life
73:32 - settles down you might be able to find
73:33 - Shirley live streaming on Twitch awesome
73:36 - okay so now I'm really overstayed my
73:39 - I used up all my buffer so I'm gonna
73:42 - switch this to put this music on and
73:47 - switch to the wallpaper goodbye everyone
73:48 - thank you so much for tuning in
73:56 - [Music]
74:05 - [Music]
74:12 - [Music]
74:19 - [Music]
74:51 - [Music]
75:00 - [Music]
75:07 - [Music]
75:20 - [Music]
75:34 - [Music]
75:45 - [Music]
75:50 - [Music]
75:55 - [Music]
76:02 - [Music]
76:14 - [Music]
76:31 - [Music]
76:44 - [Music]
76:52 - [Music]

Cleaned transcript:

hello we're here we're live yes we're back surprised this is one of those rare occasions where a Kotick train episode is planned within like 15 minutes that's not entirely true because surely welcomed it again surely whoo guests from last Friday's regularlyscheduled nothing nothing has ever regularly scheduled but somewhat consistently on Fridays I have been live streaming and we mostly surely but I'll say we since I was also here did a tutorial around working with d3.js for data visualization and it was completely my fault that I arrived so there was very little time I'm just checking the chat to make sure nobody is saying focus alert I will focus the camera I forgot to focus the camera so we're sought a soft focus I look nicer in some focus so we rushed through a lot of stuff and I felt like it wasn't fair surely and so here we are back surely generously had an extra little bit extra time today Shirley's here actually at ITP doing a fellowship working on a bunch of really exciting social media and see you're making all these like physical things yes we talked about that for a minute why focus the camera yes okay so I don't know how to talk about this without any visual aid oh actually I could have a visual aid right I could just open up a browser yeah which you have hidden away so it's on the dock is on the left side it's just do this look at all these things that showed up okay yeah like typing but oh just black ops not actually onscreen oh no it's fine it will be now in a second okay there it is so I'm I might be because usually I do data visualization in the web so it's very I'm very digital but I've been wanting to kind of broaden my horizons and get more into the physical world so I've been auditing two of the classes here and one has to do douwe news and sensors and the other one and the other one has to do with fabrication so I'm gene two projects one final project with the students I'm and it's going to be a physical data visualization of women in computing uhhuh it's really exciting this is the one with the laser cut yeah like no no this is the one that we're still prototyping so it's gonna be like an actual installation you walk through and there's gonna be hanging lights and it's it's going to be hanging like orbs and then the idea is that as you walk through the orbs each of them are represent a woman that had a great contribution in computing but and the thing is that most of them we don't know about most of them so at the beginning of the installation they're all going to start out really dim because they're they're not very well known um and as people go through they're invited to kind of like I'm seeing or kind of interact with their read more about the women and there's gonna be details in the orb and every time someone reads more about them they couldn't glow brighter and a little bit brighter and a little bit brighter and the hope is that by the end of the exhibit like all of them will be lit up a lot more beautiful yeah and then so as you walk through um yeah so there's a lot of like kind of data encoding into it so it's gonna be my first like kind of big data installation that like people can actually walk through so that's the one I'm in working on that's what this tote switch is for and that I was playing with because then when someone interacts with I'm so I don't know if you can see but yeah I'm like as that switch is being tilted um the LED lights up and so that's gonna be how we control like when someone interacts with the orbit that's how we use Suns that they're like interacting with it and so the one that you saw with the laser cut out so this is kind of the prototyping for that like reforms for the orbs yeah yeah he's like mysterious look she's so cool she is prolific inventor and cool and CTO of One Laptop Per child um but yeah and then the other one you saw is and this one this one right okay and this is just for fabrication homework where I wanted to and these are some of the women Nobel laureates and this is this is a prototype base book and the idea is to light the LEDs from the bottom are sorry like the crystals from the bottom and so this is kind of the latest iteration I was working on yesterday so like then I'm they're color coded by the category of their award and as and so I'm gonna put the crystals on top of the lights and then it's gonna glow the different colors this is great so it's so fun to see because you know I somewhat of I would say like an anomaly here but so many people at this program at ITP and ima work with physical computing and fabrication and building physical devices and making threedimensional objects that live in their work real world and I kind of fall back to my safe happy place of software which has its own problems and complexities but it's great to see I know that you have done so much work with data visualization on screen and the browser d3 that's what we're talking about that's we talked about of Friday we're talking about today so it's really I find it always exciting to see people move into I'd like to like break through that what could be scary like to and like start to make physical stuff but it's been such like a friendly supportive environment like I realized like how deeply I am in software so much still got like even the most obvious physical things I don't see like yes like earlier today I was talking to one of the residents and I was like oh I need to build in the switch and he's like no just unplug it and I'm like oh like I was sorry I was I was clicking like like a battery into an Arduino and I'm like oh now I should build a switch to like control on and off and he's like no you can just cool I am going to by the way I think I mentioned this but I'm wait I'm going to be waiting in two lasercutting myself sai is a student here and I are going to work on I have a it's going to arrive sometime this week a box of 250 train whistles and I'm gonna try to like laseretched the coding train send them out is like patreon but I'm not I think I'm not gonna use Patriot but it's a longer story that I will get to at another maybe I'll talk about more in this Friday's live a little membership gifts for people okay so let's move let's move on because we we will hopefully won't be super rushed today but we're will be here until about five o'clock so that's about 45 that's a half an hour okay so I'm gonna kind of let Shirley take the lead here let me at least open up what I what we'd made before and I will try to in my own words kind of recap what we did and then you can tell me if I kind of understood it correctly oh and then we will also take your questions and Peter in can you explain how to iterate over the film's again so that would and that has to do with kind of like the interrupter exit stuff what so nothing we need to answer that right now I'm just trying to pinpoint where so I feel like there's two parts you could be talking about one when we loop through the data itself to calculate and use the scales and but he's probably talking about the enter update exit part where we're iterating through and the kind of SVG oh yeah so we'll make the jump like what we what we coded somewhat step by step last time was how to make one flower based on one movie but then we really quickly I don't think we again it was surely very quickly just added some code and so yes let's try to take some time to unpack that and I also would love to show a couple of the projects that people made based on yeah yeah so I know there were so let's so let me first recap and I'm gonna try to spend less than two minutes doing this so the first thing that I learned from Shirley is that syntax for creating a path in SVG yeah and for move C for curve two there was also L for line two yes and then and then that's really what so that's what's happening here this petal path is like start here start at the top curve to the bottom and then curve again back to the top and so this is a very simplistic design and maybe surely we'll touch on how you might make that more beautiful or you could look at her actual film what's it called again film bent flowers project to see so that's we learned then we could actually put that on an HTML page by creating an SVG element and all this is happening in a observable notebook which is like the p5 web minute or in the sense that I'm coding in the browser but very different in that it's got cells that can be executed separately users require a bunch of different syntax things ok then we loaded the d3 library that's the primary library we're using in these code examples then we loaded a JSON file that has all this information about movies in particular there the year they were released their box office yeah the number of the ratings things like that a lot of metadata metadata by the way then what we did was use a nominal just like source make this discussion much shorter we use the d3 library so if I go up here and look at the data we can see here's the movie diehard and all of the data associated with that movie then we use the d3 library to parse out two pieces of data their rating and what was the number of votes again soon number of IMDB votes so basically the number of people that like rated them ok so and those pieces of data were used to design the flower yes and so though all this functionality that you're seeing like extend scale linear quantize all these are d3 builtin T 3 functions that perform common operations on data like remap it from this range to this range or you know inverted or multiply it by this or that kind of stuff and so we did that and once that was done there is now this sort of crucial piece of code which i think is kind of what you want to react splain them yes in this crucial piece of code after the data is parsed and oh and remap to all the appropriate range it takes the data and makes the flowers out of it through this process called enter update exit but we're only using enter for this particular exam yes yeah and we were talking about I think going through the enter update I'd say and then kind of talking about steps of maybe what people that are watching might be able to do to kind of like complete the price right um and so do you want to do the which one I think you should start with replating more slowly any of the bits you thought you Russia's had to rush through and you can do that on the whiteboard let me turn the whiteboard camera on and I will keep an eye on the chat yes that'd be great I think I would love any questions to do with the enter update actually and I think that is Peters first question yeah and Simon is giving us some information about details of SVG tags yeah and so why don't let me just make sure this works if I switch to here whoops no that's the wrong button okay the audio should be back that was my fault so why I'm gonna alright I think I might know what's going on here this sound should be back and hopefully the white birds gonna be back in a second people can still hear me okay video capture device existing weird something happened create new okay everybody I realized that's the green screen that's no signal that's the computer this should be the whiteboard there we go we're back in business say I don't know what happened there so can say on something for a second Shirley hello okay your mic is good so now we're we're back in business so you can explain go back to whatever discussion if you wanted to have with the viewers and I will keep an eye on the chat okay sue we did this last Friday where I like super intensely rushed through inter update exit and that was the kind of the one that I wanted to go over and then if we have more questions about other parts of what we went over on Friday I would love to answer that too and but I'm gonna start with this and then hopefully like questions will come in as we're doing this and so what I wanted to do is kind of give a more concrete example of like um something that you might actually do when you're working with data are working with d3 and data um and so let's make this like hypothetical data set of I'm just gonna start with three so let's just say I want to draw like three circles and my and I want to like map my data to that so this is my data and let's see I'm just making things up right now let's see so my data is an array of three objects and each object has an ID and a radius number and so let's say that this is our SVG what our especially currently looks like and so we talked about last week about how and what d3 goes and does when we say d3 next and we always have to go like the SVG and then when we say Dotson liked all and let's saying that this time we're trying to draw circles and some we're gonna select all circles that are in the SVG and right now what we said last week is there's nothing that exists in the SVG and so that would return an empty selection and then the three kind of most common things that you see in d3 or that you saw in d3 I think in version 4 and before was this kind of pattern called data enter append and actually I think in version 5 or a newer version I think we now have a different it's a it's a different method and I'll cover this first and then I'll talk about the new method and because it's conceptually still the same the new method just makes the code part easier and and so we'll pass in let me just I always name is data and then I regret it and so we have values let me just call it vine use and we're gonna pass in values and this is the part that I kind of wanted to explain in more detail which is I'm in d3 dot data this method actually and can take in a potential second argument and we call that the key function and so I'm what the key function I'm if anybody's ever used react or view and that's probably really familiar to you because every time you try to render an array of something like they'll scream at you and be like for best practices enter a key function and and so that's the same concept but let me do this first and we'll say whatever M is so let me do this and then clean it and just watch out that actually the camera only gets to about here okay thank you um so I'm gonna stop this right here and I'm gonna kind of and go back to here and say and I'm gonna try and color code it so let me say that I'm my values here so like my actual data that I'm trying to bind are and this kind of like one five this ID is 1 and radius is 5 and then I'm trying to find you know ideas and radius is 10 350 and so when d3 sees that is thought data what it's doing underneath the hood is it's going to take the bat this array of values in it and when you pass in data and it has to be an array or else you're going to get an error and and d3 is saying okay let's loop through each of these identify what the key is so this is where it's like I'm looping through each of the elements in the data and identifying what the key is so it's saying okay this key is one the key is to keys three and then they will look in the Dom and they will say okay is there any elements that are existing in the Dom that our circle elements um that have the key ID one key ID two key ID three and I'll be like oh no there isn't any of those and so it will be like okay so the UM there will be an enter a selection you keep going and there will be an enter selection that d3 calculates and this this function calculates and it's saying oh I need to I'm trying to figure out then let me let me have like an actual like color coding of like okay so all concepts are going to be in blue all data are gonna be green and all SVG elements are red from now on so it's gonna be called an enter selection and this says that because there's none of those things that match like all that criteria existing in the Dom that means I need to go and create three circle elements I'm and we're gonna get into it yes yes so if if those did exist would it did would just like grab those elements and okay so enter you enter the enter but most typically is sort of the first thing that happens based on the data and if this and the stuff isn't there so it creates them creates the Dom elements what do you do so d3 does not do anything for you you have to create it so you have the option so let me actually okay keep going keep going I mean so let me rephrase what I set up a little bit so it data the method data will say you need to like we we need to create three Dom and three circle element being able to match the data so it like has this data structure if you like actually look at the Dom element and like it has all this like it had it just says and I have three placeholders if you ever want to go and create three Dom element so that the reason why I'm making this like really like that distinction is then the reason why you do dot enter is because you're telling deep three okay I understand that there is something in the enter selection and so please give me return me these three placeholders and then when we do dot append we're saying for each of these placeholders actually make me so when I do thought of hand this makes the Dom element yes and we had G in our example because we this is an example so that's simplified that's just making some circles but ours made a group that we then put a hole at your petals and things yes perfect so actually let me do this over here so this is this over here is the enter like it's same return many enter selection and is it making these Dom elements the circles with the ID that's here in the data yes ooh I'm actually you know won't be fun let's actually go into our what we created and let's inspect the elements and actually can you console.log every group I'm in the so let me just finish drawing this really quick so here what enter does is give you back three placeholders and what append does is actually create these three Dom elements in the three circle elements in the Dom with the data bound to it and and when you when you console.log will be able to see what that so when you say console.log right now the result of this whole process is stored in a variable called flowers yes console.log that object okay like this yeah I'm like there we go sorry everybody I'm like all my buttons are in different places console.log flowers so if I run this then if I look at the console these are them that's that's our data this is and so this is actually what d3 will return you and when saying is that it has 135 group elements and right and then the most I'm gonna do my code Vanna White okay so what the most important part of this so this is what like a Dom element looks great and what do three does is it kind of makes this oh yes the data in there that's the data so when people are like d3 binds the data like that's this is what they mean it actually like makes this little attribute or like call like underscore underscore data and then you can see this is this is the data we created here the pests sighs mumbles and the array of petals right okay and that's what we're gonna bout to use down here and so I think there was Peters question was like how did you loop through the film's and so what actually happens so actually do you want to come no yeah you're what actually happens is and when we do any of these don't adder or that style right what's happening under the hood is that d3 is applying this function that we passed in to every single one of those Dom element G over here yeah so yes every single one of these Dom element and in every one of these functions we can actually see that right there and that sorry I'm interrupting you in the transform and the way we actually see that in there was like a there's a property there that would have that's dis translate in it a trance oh yeah I think it was there under T so that part is not actually no that's that's that's a part of just like HTML and SVG and so like basically d3 is just abstracting some like Dom manipulations stuff for you and but in this function transform it's probably under the transform one that you found this is yes because heart is really big yeah yes I don't know if you want to get into this no no jump definitely do not I was my fault go on but I'm so it's and and this function what we're doing is we're getting the data this data per group element and then and then we're evaluating it and d3 is looping through it under the hood and applying whatever is being returned to each of those group elements and and so that's how deeply I'm that's how we use d3 to kind of apply data to each element so usually after you've seen this there's a doubter doubter doubter doubter oh sorry yeah usually after you see this set of code you'll see dadadadada under don't either so actually what an adder is short for attribute oh yes which is a HTML elements can yes it has attributes one of which is this like style and three okay so this is what happens when we do enter and then I when the try and talk about update and exit question so we only needed enter in our example because we were just like creating a visualization yeah so if it's going to change over time or something different it's gonna happen later it's gonna animate or maybe that's why we would need to add update yeah so if if it's a static visualization you only need enter yes it animates you need update that's not enemy be like just changes value it changes value yeah so let's let me just show that really quickly really quickly by you let me say that now that we've drawn okay so in here I wish I'd like on my computer right now and I can just like cut this out and like like this over here and putting here but one of these days I'm because this is recorded I'm just gonna erase this so we have we have yeah room yeah I saw somewhere in the chat I was like no don't you erase or something okay it's all being saved for until as long as the it's not the internet apocalypse you'll be able to find this material okay so then let's see now that we've like you know created all of this I'm let's say now for whatever reason we want to show the second state of data or a second set of data and let's say that in the second thing I'm you know we have we still have let's say I'm ID two are ten but let's say like we have actually you know what and let's say in the second state the rainiest actually goes up to 20 and then let's say we have a new thing um and I'm gonna call it ID 4 and this one is gonna have radius of 30 I am making all of this up so just just to understand that for a second the idea here is that if these are all tied to circles this is now in a way a new value for a existing circle and this is now a new circle because the idea is the key for each piece of data yes so let's yeah exactly so let's go through that together and so I'm gonna say you know this was okay let me now I'm trying to decide how I want to go about this let's still go use these no I'll draw anyone so we have we now have three circles and this is I'm just only gonna draw the ID this is ID one two and three and the radius is 5 10 15 this is the result after here after that yes thank you and then our new data okay our new data is ID 2 and radius 20 and ID for radius 30 so just like you said Dan do you want it do you want to do it well we would say we would say where do we have to say dot data again conceptually for us and so let's say that we want the very first add the order I usually do it is actually I exit first so you can exit after an enter actually you know I think you're right let's do it with the code ensue I'm gonna change I know but we needed that enter oh you don't have you just have update no enter I was so understanding with the enter that code we have is there only if we only need to enter we want to do all the call circles and then what I'm gonna do is first I'm gonna exit so this is concept I am now like getting completely I never used more than one color it's very amazing I should have actually I don't know things I get myself into the first step I want to do when I'm doing enter update exit the whole shebang is this part where I just tell d3 to do the calculate buying the data do the calculation then and what I do is I take circles that exit dot remove we would be this would happy happening like here so this okay I'm gonna make some more room for this circle thing so this will be on a new line right there yes yeah and I just wanted to it was okay I understood that this equals circles okay so okay so imagine that this is like in the guy okay um and so what's happening here is this is basically the like return value of data I'm and it's saying I'm and here another thing that that data would have done is say okay there's ID to ID for so this remains but these two need to go so these two are the exit selection and so I'm this we call the exit selection and it is the two circles with ID 1 & 3 because they're not here because they're not in the new data that we're trying to render but we're here values is is here but I don't see anywhere you refer to Val ok so very good point and you've caught me so technically speaking ok let me do this look that makes sense to me but how did it know to compare so oh you just said that oh you're just overwriting Davout the values changed yes it's kind of like isn't that the thing that react does or something it's just like something changed update stuff sorry you're catching me so I'm what I usually do is I put this whole enter like I put all of this code into a function and every time that you want to animate a new status set of data or you want to like somebody clicked on something you want to update the data you will then call them call that function and pass in the new values got it yeah ok sorry I was like trying to I get it again it totally makes sense so this is not an automatic process where this is always like looking at what the current values are it's a process by which you can sort of pull what's in the Dom and compare it to your data and update everything yeah so is that you need to do everything you need to do absolutely everything like reactant views and stuff like they're doing that's magically under p5 is like that as well you you have to draw nothing's gonna happen in p5 unless you're explicitly drawing yeah to me this feels like more automatic than peopIe but arguably it's the same idea actually and I think the difference is the mechanism by which things are drawn in p5 is this setup and draw function and here it's really about sort of starts more with the data and enter update exit the fundamental difference between d3 and p5 is that p5 defaults to canvas you set up and drop you somehow sense because then like you set up the canvas and then you draw and then if you want to innovate you clear canvas redraw everything this is actually actually updating SVG elements yes because SVG elements will stay in the Dom and you need a way to be able to remove it or update it but I don't want to go too off the track here but my you in d3 you can also say use canvas instead of SVG and but your and your code doesn't have to change or it changes a little bit so actually the great thing is if you want to use canvas I don't think you need any of this code okay because with canvas like we said it's just about like clear draw clear draw and so with canvas what you might do like with canvas all you would do is in the same function that you're drawing instead of going through this whole hassle of a process and we would just pass in the new data clear the canvas just redraw the new data um and so you might be like why are we going through all this trouble because if you want to learn to you three every single example other than the one examples for canvas will have this whole pattern and it's really helpful to know what's going on yes Scotty okay could continue there's also a tangent about like SVG versus canvas and when you want to use which but that's a that's a whole tangent and but yeah so was I talking about oh okay so this exit this dot exit is basically telling d3 that I want to like please give me this exit selection which will include these two Dom elements and then this dot remove we will actually be that's the function that actually removes it from the dawn and so once we call this what's gonna happen to our SUV G is this gets delete it and this gets deleted so that's what the state looks like after this exit selection all right sorry after this code is executed so ID number four is not added because the exit is only forgiving you what's missing and removing and am I gonna guess correctly that update will add number four very close very close and dirt we need another enter yes Oh cuz we just put exit before enter yes oh that's you didn't actually we're not actually getting rid of enter and replacing with update yeah we're just we needed to add exit first yes who could you do them in any order cuz you're kind of setting up or it's important to do exit because here it says enter update exit so that's kind of what I was imagining over the years I'm like developed this order because and I reasoned it out once I'm or a few times and now I'll have to talk it through yeah okay but enter is gonna get us the missing one okay yeah there's a reason for it and I don't remember off the top of my head and but yeah so what we want to do and then this is where you can say length dot attribute like you can set your attributes and so what this does is like you guessed it will say okay in this SVG what's missing is the for and so we're gonna go and create oh yeah is still ten update we'll change that to 20 so exits for removing enter is for adding and update is for existing things with change data I love I love doing this actually because I always feel like I'm not like explain you know I don't know any of this stuff I I like I've tinkered with d3 but I'm just in that that that place you know you've been there everybody watching been there where you like don't know the thing but you found some example yes you just like move some stuff around and then you kind of got something and you move on like p5 I feel like I know that inner mechanics of how things work so I can go a little deeper but this is completely new to me I also a hundred percent agree with everybody that's like canvas mp5 are easier to grok right cause I'm like you don't have to worry about like persisting Dom element removing them updating them and like all you have to worry about is cleared wrong cleared wrong mm and so like I think I honestly feel like p5 and canvas is the more fun one but like with um but like with d3 well so with indeed we can deal with HTML elements SVG elements canvas but you know I I think that's always important that people get into this trap of like oh should I be using this one or this one which one's better this one's better this one is no good I like my thing instead all of these libraries it's not a zerosum game they all are tools that have their own value and like you might say like oh hi I've never programmed before oh why don't you take a look at p5 or hi I program in JavaScript I have this giant data set I want to visualize SVG I feel like oh why did you take a look at t3 yeah so it's not I think we can fall into that trap of like I have to like prove that the one that I like is the one that usually yeah like I don't these are all like you said like they're all tools yes use them where they make sense yes okay okay so the one last part and this is gonna be oh and then what I have to do is I have to remember this enter selection and here in this in this variable and this is the part that's going to be get a little bit weird if it hasn't already Dan and I'm realizing that I'm running out of space wish me luck I'm gonna gonna be over here I'm gonna just do this third part over here and so this is kind of going to be the update step and what I'm doing here is saying enter dot merge circles dot adder and whatever attributes but I've never said adder before in my whole life and you think I at Furtick you like what is this header no but that's probably a thing that's a way to say that it's a dr so this is probably that there's a lot of weird things and this is probably the weirdest one so what this is saying is I have my enter selection which was this for and I'm dog data this actually also returns you the update selection which is this too and so I'm saying go and give me this enter selection of for merge the selection with this update selection of two and then set the attributes whatever attributes I need in this case what I want is to set the attribute radius and do and then you know I want to use the DAR and this would be that would be here also right so the reason why I have this is because you don't so here it doesn't apply to us because I'm okay the best way to describe it is if you have attributes you want to set that will never change do right here so maybe I actually my fills red got it so that means that every time I create it can never update it will it will never I this attribute will never be updated and so I'll just do it on creation just because just because that's much more efficient you can you can put this down here and the same thing will happen but like I mean you just don't need to and I'll put any attributes that will that are data dependent off of this thing like chained off of this thing and so now that we have this one line this radius will become 20 and this is this is the code for enter update exit so I have an interesting question here so enter that's exactly to this function called enter exit maps exactly this function called exit but update its there's this onesie called merge so there is no actual function called update the process of updating is merging the existing circles with the new data so it's called merge is that kind of yeah so basically the update selection you can think of it as like and I think of the update selection as like whatever it is existing and then needs to be kept but yeah honestly it's it's a it's a little bit it's a little bit that one's a little bit weird of a one and so now that we've gone through all of this pain I'm let me show you the easier way to do it because I think I have this here so I just found over here this notebook for always is from 2012 so it must not be oh this is like it's got some examples of like enter we can see this in track merge they sure like that but what I was looking for was that somebody was telling me there's a new thing called joint go back to that go back to that and then go up and so this is basically I'm well actually that's not that's not even really this is only this is from like seven years ago like my Google search was a little off wait so the thing I wanted to show you is what someone leads yes that's what I was looking for it's called joy yeah data join so it's selection I'll join you try the d3 selection that's what else and then do not find dot join selection not join yeah so yeah I'll let you stand over here you can point it over there people will be able to follow it more easily yeah so this stop join I think came out in a newer version of d3 and where it just abstracts away all of the pain that we went through and we went through this so that you can understand how it works by just do this so join is kind of like there's gonna be new stuff there's gonna be stuff that's gone there's gonna be stuff that was there but the you values changed joins gonna like account for on and update the Dom elements if you want like specific things to happen like if you still know you can you have these callback functions yeah do you like all the pain we just went through yeah no this do you like this is good because I you know it's it's Internet I kind of to me I have like encountered similar things like this like you can jump to use a weight and a sink in new fancy JavaScript it's not that new but like without looking back at what all this sort of like gobbledygook of promises are confusing what's going on so this to me is a little bit similar like yes we could have started with just this join but at least for me and in having seen d3 code before having this having this more sort of like full explanation of it now again it's like the reward you get your dessert yeah joy so I actually personally have never used before how new is this I'm I think soo a disclaimer I stopped using enter update exit period last March um when I started using view because reactive view again do all of this underneath the hood and so the way I actually like to Deb and it makes me faster developer is I use d3 to do all of that data translation so last week when we did all of those scales I use d3 for that I use d3 to like calculate positions for me and like like XY positions SVG paths and and then when I actually need to go render to the Dom I use view so when I stopped using enter update exit so it must happen between last March and now so I personally never used it but I think if you don't want to use like if you only want to use d3 to draw um and do everything then I highly recommend checking out the data join somebody harp eat in the chat suggested looking at this let's see if this this particular example which explains enter update exit is this the one you're looking at I don't miss block yeah cool so thank you okay I can add a link to this in the video's description as well I wanted to show two things I don't know if you saw these but two people created let's start with this one actually so based on Friday stream two people made their own versions of this this one is by Stefan Berg let me open it in a new window and we can see here film flowers based on the original so one thing I love about observable is how you can annotate with markdown so it's really nice to be able to do that I mean and and you can see the code is so much nicer yeah so these are beautiful you know it's something about also the with these kinds of projects the repetition and the arrangement of all the different flowers is really what kind of brings out the visual for me I feel like I had as soon was working on a project and it was like a sort of beautiful pattern but as soon as you could see like a hundred variations of them all in a grid you got other sense of what that pattern is like so that's really nice so this looks like pretty similar to what we did but just with a bit more thoughtfulness in terms of color and and the ranges but the other one that somebody made which will go here I'm Anthony McAteer or spectral flame I recognize that name from YouTube chat created something very similar but with a totally different data so let's look at this so this is popularity and contribution flowers of coding geometers so I have a playlist know what number I'm on 150 something there's like videos of like a coding challenge so they'll be I'm actually we could look at the data here whether they'll be like a star field a snake game all these different things so I guess what's interesting is to think about what first of all what is it what does it mean for something to be popular I suppose that's tied to maybe the number of views is that the right metric for popularity interesting question height of the background size of our items such as views the number of petals is how many contributions and contributions is a thing that if you go on to the coding train website and go to like coding challenges I'm pretty sure I think that 10 print 1 this has the most contributions so if I go to here you can see these are all like versions that people made after watching this video and seeing it's just this is the example of the pattern so this is like I like we were talking about I wanna make sure linear does this is like how would you're making an example like how far do you go with it like I you know do you want you add all the features do you make it beautiful or you take sort of leave stuff for the person who's going to receive the example to build on top of so it's hard to find that line but let's so let's take a look at this so if we look at this we can see here's all the data I'm and then here's the text is there and this I guess this is just the number of the number of what challenge it is that's the name of the challenge and then this what this down here and like what the curve because because there's a there's a difference in how sorry how long the arc is right Oh spectra is that spectral piano is in the chat actually clock has the most oh there he's there a little bit behind okay so you can ask your questions we'll get them yes I'm wondering sue there was wait there was popularity and that was the size and then the description up here says wait you could you could if you go down if you could just do this to hide it Oh God so it says views is size and height of the background number of petals is the number of contributions okay so maybe this is also tied to views maybe that's what so about the background yeah it makes sense because you can see this one over there has three petals in a much smaller arc whereas that snake game has a lot of petals at a much larger arc the background curve is just the views yeah got it okay cool I like I love also that you did this which is you can do this I'm very similar to in Illustrator you can do I'm sorry sorry we were you this one okay okay okay so this this text that um curves around the way you can do that is an SVG pad and then you can draw like a semicircle with like an SVG arc or some or a path arc um and then um you can say I want to have the text along it so that's really cool and and I think the same thing probably happened at the bottom because you can see like the 31 and 32 point one there like following an arch so that's super cool and I also really love the different like you went above and beyond this is so awesome like look at the different like petal shapes there's one here there's this one that I think is a little bit so there's you know 1234 is different cuz cuz 35.2 is what we started with and then 31 is different and then the the traveling salesperson one is different yeah so there's 30 is different 31 is a different pedal the one down here's a different pedal the one traveling salesperson is a different cuddle yeah this is really awesome so I'm curious also spectral piano like so from the this is all in a playlist so certainly with the YouTube API which I have actually never investigated really in a video I should definitely do that you could get a JSON file that has all the videos in a playlist their name I presumably the number of views but the contributions is something that's on the coding train website which is separate from YouTube I wonder if that was done by scraping like the coding train github or just manually entered that's kind of an interesting so that's what's also I think what may not be so obvious to the viewer here is there's like a multiple levels this is not all information that's part of so that's great to see have other peb you done this film flowers example in different other workshops and things that people projects with their own data in a similar way I have no actually it's cool because I've gotten people that cuz I released it three and a half years ago and so people have done it with different like like different data sets and different visuals like there was someone that did I think every episode of Gilmore Girls I feel like instead of flowers it was toasters I think it was and like it was toast and different like jams or something and they were like you know it was inspired by her filament flowers there was like some other people that did like butterflies or something like that and then in the workshops I have held I'm like people have they didn't use a different data set but I'm the petals that they've done are like really beautiful yeah like we were staying at the I think the shangrila I'm for one of the workshops and one of the students actually used the sangre lot like he like redid the shangrila logo shangrila logo and use that as the pedal oh and that was like I also thought you were on another his hey week was reminding me that we're well it's 505 okay I built in a little extra buffer of my cell phone we're gonna finish up in the next five minutes so if there are other questions we can try to answer one or two but I wanted to mention because you were on nothing is it a twitch stream that's Jason learn with Jason yeah did you use you went through so like a kind of similar project on that event was something totally different he also wanted to do something with films likes film flowers um and but for him what we did was we got his YouTube data and we are making holy buckets okay oh wait oh is it still ongoing yeah so we are like part two now I don't know I don't there we go pardon yeah yeah so we're still making the bus ooh that one is that we went and yeah so we design a whole buggy and we've like assigned different part and like data to different parts of the buggy and because he has an inside joke with his stream chant where instead of swearing he says holy buckets got it this looks like a bucket with wings and halo and like yeah it's very cute yeah so I so I'm I just pulled up I think what's the archive on YouTube but I believe that the the streams happen on Twitch actually I was I was I should look more at this I've been noticing that because I do most of this live streaming by myself I haven't really thought about how it would too much about how to do something with more than one person and I've noticed like people have nice setups that involve like you know a picture and picture and multiple screens and so anyway this has been great having you here is like a guest thank you for having I've had guests but thank you for going with the awkwardness of like this whiteboard where's table on everything I'm looking to see if there's any last questions Thank You Kate we c'mon for posting links in Twitch and then you used to stream like on your own Chad should I not be mentioning this you ever thinking of doing that again no I wanna do it next summer after life settles down yes okay good so you'll have to let bit I mean we'll stay in touch of course but you'll definitely have to let me know so I can alert the coding trained audience to chew and so we didn't make any changes to this code but hopefully now that we had Shirley back to more slowly talk through all of this wonderful stuff that this helps you understand some of it you still can if you would like make a project based on this example yeah yes gif it it's really had a few different exercise ideas because I think to kind of fully finish it um first thing would be um put the titles in so you can do that by creating a text within each group like a text element within each group and put in the titles of every movie on the flower and then we can also do another mapping and the mapping would be I'm the John rrah the colors and then the third thing would be a map I'm what was it Oh different petal shapes for different parental guidance readings if you want to go through the rest of the exercise and all of that is in all of those features are in the version of the project that's on your website here yeah so there you go back up the look I'm a little bit so this is yeah the parental guidance reading yeah guidance reading and the the colors so those two are the last little bit if you want to go through it and like kind of finish the like try some other scales and clean up the yeah so I mean so you know you saw my kind of crude version that I hacked together and surely helped me with so that's kind of like the raw guts of everything you can see a much more polished version with more thoughtfulness and ideas about different designs so I think on one hand what you can do is exercise and is try to match some of this by adding color and shapes and more pieces of data but you could also create or get creative and make your own or I you know you could also like take the same visual motif but connected to a different data source yeah so many possibilities so maybe what we'll do we'll see how this goes but for now you if you make something you can the two places you could share it would be the comments of this video or the previous video you can also share it probably will see it more quickly or easily if you share it on Twitter so we have at Schiffman as me but more importantly at sxyw you yes so let's just we sxyw you Twitter and pull up Shirley's Twitter page here and so oh look there we are so at Shirley sxyw on Twitter and then I've been trying to what we'll also do is that create a page so now I'm looking for somewhere here there's a cuz it's not in this menu yet but there is a page for guests tutorials how the website works but there'll be a big I'll make a page on the website where people can also and it'll show up as a list like you know if I go to this one you can see the gears like people's versions they made them so we'll make a page like this that might take a few days violet is the they are the github community manager to help make that page so I'll be in touch with violet about that I'll put that together yeah well people we did we've been answering questions all okay okay so oh well okay we can ask we can ask one question and can't really see it I'm curious what she referring to Shirley thinks of the coal lots visualization I don't think so that was one of my more so I started this new series embarrassed called coding and coding in the Cabana as I'm making these videos at home I have a little garden and so this is a particular visualization of a mathematical number sequence called the coal Lots conjecture okay and it produces a pattern that looks like if the code still works what did I do to this code that it's like now it's decided to crash the browser oh there we go this takes a while to render it makes this pattern what's crazy about this is this is the math for this number sequence you take any number and if it's even the next number is itself divided by two or if it's odd you multiply it by 3 add 1 and divide that by 2 and it's a famous conjecture in mathematics because it's not prove it's not proved but any the conjectures that any number you start with you'll eventually that sequence will end up at 1 so and then this is a visualization of a variety of the paths of all these numbers based on even and odd making left or right turns and you get this like plant like structure this is no invention by any means of mine and most of the stuff that I did is based entirely on this numberphile video which about the koloff's conjecture and you can see it here and there's actually somebody I had I bought this book I don't have it here but there's somebody made a like a coloring book of all these like math algorithms it's wonderful anyway so so that was the one question you think of us it's really beautiful I should say damn that like um it's if I really think really deeply about it this is kind of really amazingly miraculous because I'm me getting into generative visualizations and generative data art is a lot thanks to your nature of cool okay and there was like a whole project I did where are you like washed your Perlin noise and that's hot and I like I like refer to your like fractal tree algorithm that does music San Francisco yeah that was like basically all like a majority of the visuals in there is based on like what you've taught so if I take a moment and like think about it really I need to I do want to say though actually is there a like a recent conference talk that has a video online of you showing some of these projects oh but people could just go to your website but here's not that outdated yeah no I know but I was just thinking like oh cuz you gave a presentation here about some of these projects that people got to see so someone seeing these projects you talk them through is really nice so yeah so anybody should check out the project I think that Shirley was referring to or that I was referring to just now is this one called send me love from SFMOMA so if you haven't already thank you so much visit Charlie's website thank you too should never know we might just come back tomorrow for like another half an hour you're like oh wait a second one more thing but we'll definitely will definitely continue I look forward to hearing from people in the audience and things that you make thank you for LOM l0m yeah so definitely I'm but you should stay tuned you don't need me to bring Shirley on the Internet to you if you wait till maybe this summer as life settles down you might be able to find Shirley live streaming on Twitch awesome okay so now I'm really overstayed my I used up all my buffer so I'm gonna switch this to put this music on and switch to the wallpaper goodbye everyone thank you so much for tuning in
