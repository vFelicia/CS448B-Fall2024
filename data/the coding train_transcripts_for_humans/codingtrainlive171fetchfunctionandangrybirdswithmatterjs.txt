With timestamps:

00:08 - [Music]
00:41 - [Music]
00:51 - [Music]
01:27 - [Music]
02:35 - good morning I almost forgot to unmute
02:39 - my mics welcome if you hear a little
02:42 - nasally extra nasally sound if my voice
02:45 - is a little quieter if I have a little
02:46 - less c'est quoi vous enthusiasm the
02:51 - enthusiasm is deep in my heart I'm
02:53 - getting over a cold and actually now
02:55 - that I'm getting to speak I think it
02:57 - worse than I thought but I don't want to
02:59 - cancel today because I've got some
03:00 - momentum with this every Wednesday thing
03:02 - and I dunno as a matter of fact that the
03:05 - next two weeks are a little I'm gonna
03:06 - try to keep this every Wednesday thing
03:08 - but I know for sure two weeks from now I
03:10 - won't be here on Wednesday and I'm not
03:13 - so sure about next week yet but I have
03:14 - some plans of extra bonus live streams
03:18 - so today might be a bit of a shorter at
03:24 - the so too
03:25 - you know very minor minor just a little
03:27 - bit of a cold it snowed here we had a
03:29 - snow day I was exciting thanks to
03:31 - everyone who indulged a little extra
03:34 - annoys loop video where I walked the
03:35 - streets of Brooklyn and talked into a
03:38 - camera I was wearing a baseball cap
03:40 - trying to channel my inner youthful
03:42 - youtuber I don't know how well I did but
03:45 - it was an attempt so I've got some what
03:49 - I view as exciting things to talk about
03:51 - and show too and I also just want to
03:55 - kind of reset a little bit because I
03:57 - think I've been obsessed as you may have
04:00 - noticed noise different noise algorithms
04:04 - classic Perlin noise simplex noise open
04:07 - simple
04:07 - noise and I've been doing a lot of
04:09 - videos about that I've been looking at
04:10 - techniques for looping noise by adding
04:13 - extra dimensions and using polar
04:15 - coordinates it's been glorious
04:17 - it's baby time for me to take a break
04:19 - from that although there's a little time
04:21 - towards the end of today I would like to
04:23 - apply the looping noise to the terrain
04:25 - code which is something that I said at
04:27 - the end of my video that I would do if I
04:30 - don't get to today I'll certainly
04:31 - release that code people are telling me
04:33 - the stream is very laggy oh all right
04:39 - I've been talking all this time and no
04:42 - one has been able to hear me so I do see
04:45 - here in my in my live control room
04:57 - YouTube live control room that I'm
04:58 - getting bad quality okay let's try
05:03 - restarting okay now it's fine
05:14 - I mean I'm tempted to just restart here
05:18 - let's restart it's fine now okay all
05:27 - right so now it was about art but
05:29 - apparently it's where he did anybody
05:30 - catch anything that I just said I
05:33 - suppose hopefully when this gets
05:36 - published Aggie the actual words that
05:40 - were coming out of my mouth will be
05:44 - heard on the archived version of this
05:46 - video is that true
05:51 - okay so all right let me just at least
05:58 - let me just repeat myself I don't know
06:00 - what else to do but repeat myself which
06:02 - is not a good idea considering the state
06:03 - that I'm in I have a day it's called a
06:07 - box of Kleenex mmm decoding train today
06:12 - is sponsored by the common cold it makes
06:15 - your head congestion your your brain is
06:17 - in a fog you shouldn't be live-streaming
06:19 - on youtube I I'm a little bit sick I
06:22 - thought I actually have felt when I woke
06:24 - up this morning I felt pretty good and I
06:25 - haven't been doing very much for talking
06:26 - very much it just started
06:28 - I realized I was a little shaky but I am
06:31 - going to proceed with today this will be
06:33 - a bit of a shorter stream than usual so
06:36 - that I don't overdo it but I wanted to
06:39 - make sure that I came here because I've
06:40 - got important things to say and
06:42 - important well I don't have anything
06:43 - important to say I've got things to say
06:45 - I've got stuff to code common cold
06:48 - you're not gonna get me down ah lag
06:55 - comes again alright now some of you are
06:57 - experiencing lag I almost the part where
07:00 - the words come out of my mouth there is
07:01 - a lot of lag in between there there's
07:04 - like a little loading animation that's
07:08 - in front of my eyes as I think and
07:10 - attempt to speak and I'm gonna go check
07:14 - the live control room it still says bad
07:17 - I'm tempted to restart why don't I just
07:22 - restart should I just restart I should
07:26 - probably start I'm getting mixed and
07:32 - getting mixed signals from the chat all
07:38 - right
07:48 - okay
07:49 - in theory I am back now I am going to
07:52 - look at my we'll see how this goes
07:55 - the good news is on everything to disk
07:58 - so nothing is lost and until the
08:01 - computer decides to die I see that
08:04 - people are saying still lag so doesn't
08:08 - seem to have corrected itself which is
08:11 - somewhat unfortunate let me just put on
08:15 - the waiting music sometimes takes a
08:17 - minute
08:18 - [Music]
08:28 - the question is is this on youtubes end
08:31 - or is it on my end it could be it could
08:35 - be the internet connection that I'm
08:37 - using here at NYU I am not streaming
08:39 - through Wi-Fi and streaming through the
08:41 - Ethernet cable plugged into the wall
08:43 - line so but I do have like a lot of
08:50 - things are lagging I've got suggest
08:53 - drugs so maybe this is all for the
08:56 - better I could come back later today
09:03 - [Music]
09:10 - it's very hard for me to do actually
09:16 - this will be fun let's try something
09:17 - let's try a little experiment here
09:19 - [Music]
10:00 - okay most of you probably can't see this
10:03 - but I'm gonna attempt to run this
10:05 - internet speed test what I did is I just
10:08 - used in open broadcast studio I'm doing
10:11 - like window capture to grab the browser
10:14 - window on the computer that I'm
10:15 - streaming from you can see my IP address
10:19 - now I'm broadcasting that out and let's
10:22 - see how this goes so I don't know if you
10:26 - can see this but it looks like I'm
10:27 - getting a download rate of about 430
10:31 - megabits and here comes the upload this
10:45 - should be good for streaming let's check
10:48 - my it still says bad ah I mean come on
10:54 - look at that can you see this this
10:58 - doesn't look like it's my on my end
11:00 - right
11:07 - oh all right so now it seems to be fine
11:13 - okay now it's working like okay well
11:20 - let's proceed then shall we
11:23 - I was kind of hoping in a weird sort of
11:26 - way I was hoping it was just gonna get
11:27 - worse good I think maybe I should be
11:29 - taking a break I know I know you're here
11:31 - to watch this live stream and you don't
11:33 - want me to be secretly hoping that the
11:35 - whole thing turns off so I can go
11:36 - downstairs and rest but if I'm being
11:40 - honest that's a for a moment that's how
11:42 - I felt okay so looks like my speedtest
11:48 - seemed to fix things oh it says good now
11:49 - okay so my YouTube live control room
11:52 - says good let me remove this window
11:56 - capture and I think I'm actually just
12:01 - going to delete that and I think I'll
12:04 - get started I've got going here there
12:06 - are teams of people all working 24/7
12:10 - rotating shifts of engineers curriculum
12:13 - writers as designers makeup hair costume
12:21 - design just to make this happen right a
12:24 - person named Dan Schiffman standing here
12:27 - talking to you live on the Internet all
12:33 - right he at least cover some important
12:35 - announcements I can't even hear myself
12:37 - speak that's how congested my head is
12:39 - it's not good
12:41 - all right browser and I have some
12:44 - announcements to make first
12:47 - congratulations to the mm oh I like I'm
12:53 - talking to the camera and then I turn
12:55 - over to refer to this thing that I have
12:57 - here and it just all I see is lag lag
12:59 - lag lag lag lag lag lag lag lag lag lag
13:01 - lag in it so that's good let me check
13:04 - the slack channel
13:07 - I bet it's encoding problems not network
13:11 - alka right i bets it's encoding problems
13:13 - not network so we're there would that be
13:16 - happening like you mean like on the OBS
13:18 - level or like you
13:20 - oh it's back the PC already isn't it
13:41 - well isn't it possible that this is a
13:42 - problem on youtubes end
13:44 - I mean nope okay on the bottom right of
13:50 - OB s I have a very green icon
13:53 - I have CPU 10.3% 30 frames per second
13:57 - and kilobytes per second 5100 70 people
14:14 - are telling you already view stats
14:18 - there's more information there okay view
14:25 - so I'm seeing view I don't see something
14:28 - just called stats here here I'm gonna
14:31 - share with you all I mean you can't
14:35 - really see this cuz it's lagging but I'm
14:42 - gonna show PS window let's see if I can
14:43 - do that a little behind the scenes here
14:45 - today on the coding train oh now it's
14:51 - ret OBS oh this is gonna be crazy
15:00 - [Music]
15:02 - uh-oh what have I done I guess I can't
15:08 - really share with you this without it
15:11 - yeah it's fine it's just got a nice
15:13 - little oh why is this here this is OBS
15:19 - it is red now if this was green before
15:22 - that was green before I did this view
15:33 - stats there we go ooh okay now it's bad
15:40 - now let me share this with you
15:59 - oops sorry everyone hold on
16:20 - there we go
16:27 - okay so I said that's the OBS stats okay
16:34 - I I'm now streaming again I've got the
16:43 - stats from OBS up here that you can see
16:46 - I don't have the chat open give me a
16:48 - second to get that I mean could it mean
16:51 - I can't imagine that having the chat
16:53 - open on this computer was somehow
16:55 - causing a problem going to do that every
16:56 - single live stream okay
17:10 - interestingly enough quality seems to be
17:12 - good now
17:18 - interesting okay here's the thing
17:21 - oh you know I'm recording two discs also
17:24 - okay well I am going to hide these
17:29 - windows I am I have the chat up I have
17:35 - this up okay here we go
17:41 - attempt number I don't know what at this
17:44 - point tip number three I guess uh-oh I
17:49 - see a racy read we just have a look here
17:57 - we're dropping some frames Network yeah
18:02 - it's the network okay black
18:11 - all right everyone ah Alka brings up a
18:21 - good point Alka brings up a good point
18:27 - which is that there I think there's a
18:32 - backup ingest server on YouTube that I
18:34 - could be I don't know if you are seeing
18:38 - this but I just switched to the yeah cup
18:40 - ingest server
18:41 - it's a configuration and let's see maybe
18:50 - don't blow your nose into the microphone
18:52 - today's comment alright since I've
18:57 - switched to the backup server has that
19:00 - changed anything I don't know what time
19:04 - what where you are in the time-space
19:07 - continuum so if you're giving me comment
19:09 - bad I need to know that you are hearing
19:13 - me talk about the backup ingest server
19:15 - and saying that it is still bad
19:25 - yeah okay thank you me I am take a look
19:28 - at oh yeah that's a lot of dropped
19:35 - frames Network okay so what I guess I
19:41 - could try just coming back in like a
19:42 - half an hour maybe I'll just do that how
19:44 - about we try that if I could just go on
19:47 - and do some stuff and you will only be
19:50 - able to hear and barely be able to watch
19:54 - I'm not sure what to do I got to make it
19:56 - just some music
19:57 - help me think
19:58 - [Music]
20:21 - [Music]
22:03 - [Applause]
22:05 - [Music]
22:23 - [Music]
22:34 - so I'm hearing from some folks that it's
22:39 - gotten a little better
22:42 - I do see right now that I'm only getting
22:44 - I'm only having 1/3 dropped frames which
22:48 - is pretty good so let me try let me just
22:55 - do a few things and I'm going to now
23:00 - ignore that this problem is happening
23:02 - and I and I'm going to turn off this
23:07 - monitoring and I'm going to proceed
23:21 - ping test okay hold on I'm gonna try one
23:25 - more thing
23:31 - all right so thanks for your patience
23:36 - everyone this this isn't going very well
23:38 - but I'm gonna I'm gonna just try to give
23:41 - this like 15 or 20 minutes to do some
23:43 - content and see where we are maybe my
23:46 - voice will start to get worse and I'll
23:48 - need to stop maybe the internet won't
23:49 - have fixed itself and I'll need to stop
23:51 - but me just standing here doing nothing
23:53 - seems kind of pointless so and just in
23:58 - case you're suggesting oh why don't you
24:00 - restart blah blah blah check your
24:03 - network connectivity restarted twice
24:05 - network connectivity is good there's
24:06 - dropped frames from OBS seems to be a
24:09 - network thing who knows on what end
24:11 - where but such is what's happening okay
24:16 - so I wanted to make a couple spins
24:20 - number one congratulations to the 2019
24:22 - processing foundation fellows check out
24:25 - this medium article on medium.com slash
24:28 - processing - foundation to see all the
24:31 - wonderful projects that are being funded
24:35 - by the processing foundation this spring
24:40 - and so I would love to tell you about
24:43 - all of these but I'm just going to
24:45 - scroll through them like I've just done
24:47 - and then I'm gonna close this window
24:49 - seems to be working fine now I also
24:51 - wanted to mention that processing
24:54 - foundation YouTube if you are not a
24:55 - subscriber please subscribe to the
24:58 - processing foundation's YouTube in
24:59 - particular there is a video that just
25:01 - came out today which is a three minute
25:03 - recap of processing Community Day in Los
25:06 - Angeles and to learn more about the
25:09 - processing foundation and its mission
25:11 - and initiatives and community day please
25:14 - check that video out and stay tuned now
25:22 - you let me actually click here to
25:24 - processing foundation's channel you can
25:26 - also check out the the livestream
25:29 - archive you'll notice that it's seven
25:31 - and a half hours because this is just an
25:33 - archive of all the talk
25:35 - from that day but matcha who I work with
25:38 - on the coding train and I are working to
25:40 - put together edited versions of all the
25:43 - talks which will be posted soon sometime
25:46 - in the next few weeks hopefully even so
25:48 - stay tuned for that please subscribe to
25:50 - the processing foundation YouTube
25:51 - consider also you know if you have the
25:55 - means and are able to if you can support
25:58 - the work of the processing foundation by
25:59 - becoming a member once a year I'll do
26:01 - like a specific fundraiser on the coding
26:03 - train for the processing foundation but
26:04 - prostate validation is a 501c3 tax
26:06 - exempt US nonprofit supported by some
26:11 - grants that we've been so lucky to get
26:13 - supported by the New York City
26:14 - Department of Education cs4 all
26:16 - initiative and probably almost more
26:18 - primarily supported by people you the
26:22 - viewers perhaps of this channel the the
26:24 - people who use processing p5.js and if
26:27 - you want to become a member you can go
26:30 - to here alright right now I'm just like
26:33 - blah blah blah blah blah blah to see if
26:35 - people are still saying lag really all
26:38 - I'm saying now the conference's look
26:39 - stable okay so I wanted to mention now I
26:44 - have another thing I want to mention
26:46 - which is so you may recall that I
26:50 - recently published coding challenge
26:52 - number 137 for D open simplex noise loop
26:57 - I've talked about Perlin noise classic
27:01 - Perlin noise from 1980 simplex noise
27:04 - from 2001 there's actually a different
27:06 - improved Perlin noise algorithm also
27:09 - around 2001 that was separate from
27:11 - simplex noise I believe I've gotten some
27:14 - of this right gotten some of it wrong
27:15 - I've conflated oversimplified some
27:18 - things one of the one of the mistakes I
27:20 - certainly made in this video was being
27:22 - too I talked about moving a loop looping
27:29 - noise in three discs by moving a plane
27:32 - along like the path of a torus which
27:35 - isn't exactly what I'm doing because I'm
27:37 - actually using four dimensional space to
27:39 - loop but so there have been some really
27:42 - nice threads and comments explaining
27:45 - some of the things I got wrong in the
27:47 - comments of the video so I highly
27:49 - urge you to check that out I just wanted
27:50 - to highlight this one particular comment
27:52 - from Ralph Tootsie who writes noise is
27:58 - indeed a confusing topic so many terms I
28:01 - will try to clarify for those who are
28:02 - confused there are many kinds of noise
28:06 - value gradient whirly Gabor Gabor gobble
28:11 - this is one I have not heard of him have
28:13 - to look that up wavelet etc when the
28:17 - algorithm uses a random number generator
28:18 - it is probably value noise the Hugo
28:22 - Elias article even though it's titled
28:24 - Perla noise is actually value noise so
28:27 - that's value noise is when a bunch of
28:31 - random numbers are picked and sampled
28:33 - and interpolated and smooth value noise
28:36 - okay that's a helpful clarification when
28:38 - the algorithm uses gradients the vectors
28:40 - on the grid points it's called gradient
28:42 - noise the most popular gradient noise
28:44 - algorithm is Perlin noise there are two
28:47 - iterations of Perlin noise the first is
28:51 - classical from version from 1983 and I
28:54 - believe this is the algorithm that's
28:57 - currently in processing and p5.js when
29:00 - you call the noise function then later
29:02 - Ken Perlin improved it by addressing a
29:04 - few issues to make what is known as
29:06 - improved Perlin noise so we could
29:08 - actually look this up improved Perlin
29:11 - noise and we would find that here I
29:16 - believe this is improved noise reference
29:19 - implementation this is from a
29:21 - corresponding SIGGRAPH 2002 paper which
29:24 - you can find right here improving noise
29:28 - and then let's finish this comment out
29:32 - then later Ken Perlin in photo then in
29:35 - 2001 Ken Perlin published simplex noise
29:38 - which is different from the two other
29:40 - perla noises but still is gradient noise
29:43 - so I assume that the first classic
29:46 - version and the improved noise are both
29:49 - operating I see that the lag is kind of
29:52 - happening again
29:57 - that the both of those are operating the
29:59 - gradients are happening on a rectangular
30:01 - or square grid
30:02 - it's noise on a symplectic grid or a
30:04 - grid of equilateral triangles and so
30:08 - there's an article about this that the
30:10 - author of this comments posts about
30:12 - improved perla noise which I will click
30:14 - on now and you can find that here so
30:18 - this is also a really nice reference and
30:22 - it was nice while I was working but it
30:26 - seems to be laggy again alright so I'm
30:28 - getting some stuff off my chest
30:30 - even in this lagged states be
30:32 - interesting to watch this back later I
30:40 - love how the YouTube chat moderation is
30:43 - smart enough to automatically flag
30:45 - comments that say subscribe to a
30:47 - particular channel that shall remain
30:49 - nameless in addition to just you know
30:55 - inappropriate language and that sort of
30:56 - thing okay
30:59 - sir please restart your Mac I have tried
31:04 - that twice I don't think that's gonna do
31:06 - anything so I think I am NOT going to
31:09 - restart my Mac some people are saying
31:13 - it's stable I'm gonna look at the
31:14 - control-room
31:15 - bad we are not receiving video day it's
31:20 - so funny that I have this cold because
31:22 - it really just it's so apt it just
31:25 - couldn't be a better match to lag the
31:29 - network lag and the head congestion it
31:32 - just feels like the same thing that's
31:34 - all mixed together so it's kind of
31:38 - appropriate there's a bad lag problem
31:40 - all right oh no what have I done what
31:43 - have I done I'm gonna close don't make
31:47 - me pull this car over I will close the
31:49 - chat window and not look at it for the
31:50 - rest of the livestream behave yourself
31:56 - well I like that the audio is not
31:58 - lagging because at least you can hear me
31:59 - and in terms of dropped frames alright
32:04 - let's move on to the next topic of today
32:09 - we're just gonna keep going and I'm
32:10 - probably gonna stop at about probably
32:12 - gonna stop in about 15-20 minutes if
32:15 - the lag keeps going I there's there's
32:26 - one thing that I wanted would do
32:27 - regardless of whether I'm live streaming
32:29 - I could stop I'm just as really this
32:31 - kind of like practice so let me talk
32:33 - about that a bit okay then I will take a
32:41 - break and come back a different time
32:42 - maybe I do want my free Friday morning
32:46 - no that would have been good oh boy Wow
32:52 - now it says it's not even receiving any
32:55 - data like it's completely stopped
32:58 - streaming yeah Wow oh it's back but bad
33:22 - the chat is really out of control all
33:32 - right I I'm sorry I'm gonna minimize the
33:35 - chat I it's I will take a peek at it I'm
33:38 - gonna just keep the slack channel open
33:41 - the slack channel is for members of the
33:45 - coding terrain through YouTube or
33:46 - through patreon but I think to assume
33:50 - that my record to disk is working and
33:52 - I'm going to talk through some stuff
33:55 - then I want to think through and begin
33:58 - working on so I would suggest you maybe
34:01 - go do something else but if you want to
34:03 - stick with me here I'm gonna I'm gonna
34:06 - probably be here for a like hunger to
34:08 - talk through some of this stuff okay I
34:12 - don't know that this will actually be a
34:14 - separate video but let's give this a try
34:16 - hi it's it's me dan from the coding tree
34:21 - I mean who else would it be
34:23 - I'm gonna just tell you about something
34:25 - that I'm working on that's slowly over
34:27 - time on the channel out of order I'm
34:29 - trying to work through an idea for a new
34:31 - playlist of videos if the idea is to
34:35 - hats and bolt skills around working with
34:38 - data and API is in JavaScript both
34:40 - client-side and server-side and I hope
34:43 - that this can be supported for people
34:45 - who are teaching courses on information
34:47 - visualization machine learning data data
34:51 - visualization data art self traffic
34:54 - people who are teaching for more fully
34:56 - fleshed out courses that involve project
34:59 - making and and critique and dialogue but
35:02 - and and so maybe those people that I'm
35:04 - imagining in my head who are teaching
35:06 - these courses could use some video
35:08 - resources they could point their
35:09 - students towards there are somewhat
35:11 - generic and will give foundational
35:12 - skills so there's a github repository
35:14 - hopefully by the time if you're watching
35:16 - this this will look totally different I
35:18 - am working on a lot of ideas for this
35:20 - it's at github calm slash coding train
35:22 - slash intro to data and api's there is a
35:26 - bit of a description here and a bit of
35:28 - an outline so I am going to be working
35:30 - on this outline and making
35:32 - adios out of order and then kind of
35:34 - synthesizing stuff together and making
35:36 - an intro video and hopefully by the end
35:38 - of April beginning of May the whole
35:40 - thing will be completed so that's what
35:43 - this playlist is things are gonna appear
35:45 - out of order give me feedback I might
35:47 - reduce some stuff add some stuff but I
35:50 - would say the central place for you to
35:52 - give me feedback is to come over here
35:53 - and go to the issues and I'm certainly
35:56 - gonna leave comments in this video but
35:58 - go over here to the issues and post your
36:00 - thoughts and ideas if you are a teacher
36:02 - who teaches this stuff and can give me
36:06 - ideas and thoughts about what would be
36:07 - specifically helpful that you would love
36:09 - to have as resources to point your
36:10 - students towards that's in particular
36:12 - what I'm looking for
36:13 - okay thanks very much and I'll see you
36:15 - in this playlist for some amount of time
36:18 - should you choose to be here if I okay
36:23 - all right ah boy my watch just told me
36:29 - what four times five is okay so I did
36:30 - that that's good I probably should have
36:35 - mentioned the learning link check but
36:37 - check I have I'm looking for a message
36:39 - here it actually is telling me that the
36:41 - stream rate is good right now
36:42 - which is kind of unbelievable I'm
36:44 - hesitant to check the chat and I know
36:47 - that this could be fleeting I just want
36:50 - to see something
37:10 - got it
37:16 - got it got it got it so anyway I should
37:22 - also mention that this new playlist that
37:25 - I'm developing is supported by YouTube
37:28 - itself through the learning incentive
37:31 - grants so this is good like looking back
37:34 - into my email to see what I'm supposed
37:36 - to say allowed to say okay um I I kind
37:41 - of want to like check the chat again if
37:50 - I see this black channel that it's
37:52 - stable dare I pull up the chat so I this
38:00 - will fit in somewhere in narrative see
38:02 - totally figure that out yet so what I'm
38:04 - gonna attempt to do right now is just do
38:08 - a short video tutorial like no more than
38:11 - 10 minutes there's gonna be 45 minutes
38:12 - I'm sure just about the function fetch
38:14 - okay let me make this bigger okay
38:24 - oh hello to Egypt that's kind of amazing
38:31 - to me that there are people watching in
38:32 - Egypt thank you I'm armor if I'm apology
38:35 - oh it's red I see red I see red that's
38:39 - not good okay I'm gonna just keep going
38:44 - with hello in this tutorial I am going
38:52 - to talk about the function fetch
38:55 - so the function fetch the JavaScript
38:57 - function fetch which is a JavaScript
39:00 - interface for accessing and manipulating
39:02 - parts of the HTTP pipeline whoa I hold
39:05 - on it starting over
39:10 - hello in this video I am going to talk
39:13 - to you about the function fetch and this
39:15 - is a building block a building block for
39:17 - many of the examples that I am going to
39:20 - demonstrate to you and show you how to
39:21 - do throughout the course of these videos
39:25 - I think
39:28 - well I like that it's okay at least it's
39:38 - lagging so that nobody can really see
39:40 - what I'm doing anyway hello in this
39:42 - video I'm going to talk to you about the
39:45 - function fetch and this function fetch
39:47 - will serve it as a building block for a
39:49 - lot of the different examples and other
39:50 - topics that I talk to you throughout
39:52 - this series working with data and api's
39:54 - so what is fetch okay so it's a global
39:57 - method that you can call in javascript
40:00 - in the browser so you know maybe there
40:03 - are some browsers that don't yet support
40:06 - fetch and this is a consideration as you
40:08 - deploy a project to a large worldwide
40:11 - audience but for right now we can kind
40:13 - of make the effect is something we can
40:14 - write into our JavaScript code and fetch
40:17 - will fetch something it will get us it
40:20 - does this HTTP hypertext Transfer
40:23 - Protocol thing to request data or
40:25 - actually you can use fetch it seems
40:27 - counterintuitive to send data as well so
40:30 - uh okay hold on I have to I have to fix
40:35 - my whiteboard hold on I have to fix the
40:47 - whiteboard and take off the drop the
40:51 - message about all the dropped frames
40:54 - okay okay coding train today is
41:10 - sponsored by the common cold
41:12 - I should have muted my microphone but I
41:17 - decided to not leave my microphones you
41:20 - could hear the sounds the authentic
41:22 - sounds of the common cold one thing I
41:25 - should recommend is when you have the
41:27 - common cold consider trimming your beard
41:29 - because everything's gross with all
41:32 - gross
41:46 - all right let's diagram out let's talk a
41:53 - bit more about the function fetch fetch
41:58 - fetch is a function that you call by the
42:01 - keyword the function name fetch and you
42:04 - can give it more than one argument now
42:07 - the easiest way to use to give it one
42:09 - single argument and this is a path so it
42:12 - could be a path to our local file it
42:14 - could be our URL path and you're saying
42:16 - hey I would like this uh
42:17 - or this text data or this JSON data or
42:20 - this tabular data it's comma separated
42:22 - value file any kind of data you can
42:26 - fetch it optionally you can give fetch a
42:29 - second argument which is really like a
42:32 - bunch of configuration options so in the
42:36 - case where you actually want to use
42:37 - fetch to post data to what you want to
42:41 - do is go into the body and pull the data
42:43 - out in some format that you want and
42:45 - I've made I pre made I wrote a list here
42:47 - of the kinds of ways you can do that so
42:50 - you can get let might understand so
42:52 - maybe if you're just loading a text file
42:53 - you're loading a Shakespeare play it's
42:56 - in a raw text file or URL you could then
42:58 - ask for that data as text if it's JSON
43:02 - data which is probably going to be the
43:04 - primary example the primary scenario and
43:07 - almost all of these examples throughout
43:09 - this um you would ask for the data as
43:11 - JSON blob is super interesting and
43:14 - actually I think the first example I
43:15 - want to demonstrate to you today is use
43:17 - blob blob kind of means I just want a
43:19 - blob I just want the binary just what
43:21 - the data itself so for an image that
43:24 - works really well because I just want
43:25 - like the the binary data of the pixels
43:27 - give that stuff to me that's a blob
43:30 - there's also form data which you can
43:32 - imagine if there's some if if you're
43:34 - fetching date if you're ma'am hmm I
43:37 - don't want to say about that
43:38 - oh there's also form data and array
43:41 - buffer and those might be some scenarios
43:43 - that we look at at some point also but
43:45 - wha how did how does this whole process
43:47 - happen so it's a two-step process the
43:49 - first process is to give
43:51 - the path then the body comes back and
43:53 - then you need to ask for one of these
43:57 - things and the way to to sequence these
44:00 - events everything in JavaScript with
44:03 - fetch happens asynchronously meaning
44:05 - you're waiting for something to happen
44:07 - and you'll get a callback an event but
44:10 - the fetch function works with something
44:12 - called promises and promises is a way of
44:14 - handling asynchronous events that's part
44:17 - of JavaScript es6 so if you've never
44:20 - encountered promises before you could
44:22 - pause this video right now and I have
44:23 - I'll link you to some other videos I've
44:25 - made about promises and some other
44:26 - resources and then come back but the key
44:29 - thing is that when when a promise is
44:33 - resolved when the asynchronous event is
44:36 - completed you then then you then it's
44:40 - funny that I'm writing the word then you
44:42 - can then ah this is making me crazy
44:45 - I'm just curious about that lag oh it's
44:47 - green it's green and by the way there
44:53 - are people I see people in the chat
44:54 - saying I can't handle all the lag please
44:57 - go do something else with your day this
44:58 - will be available later in archived form
45:01 - all sorts of stuff I don't want to give
45:12 - myself more room here or why with this
45:13 - way I don't want to start over now that
45:17 - have an idea of what I'm doing but
45:18 - whatever let me just at least go back
45:23 - here
45:29 - so how do you handle this asynchronous
45:32 - event how do you write code that you
45:35 - that acts on the data when it's voted
45:37 - and the way that that works is by using
45:40 - the keyword the function then and this
45:45 - is how you handle events with promises
45:48 - if so if I say fetch I give it say I
45:52 - have a local file that's an image
45:54 - rainbow dot JPEG I can say dot then and
46:02 - I can add a so when I this function here
46:08 - is going to be code that executes when
46:11 - it has finished loading the file the
46:14 - tricky thing here is I don't have the
46:17 - data ready in a format that I want so
46:20 - once it's loaded I have to write a
46:22 - function that then calls either blob or
46:24 - JSON or text in whatever to basically
46:27 - indicate what format I want the data to
46:29 - be prepared for me in and that triggers
46:32 - another asynchronous event so I can say
46:35 - dot then and here is where I can
46:38 - actually use the data so here's what I
46:41 - want to say for this convert the data to
46:43 - a blob which triggers another promise
46:46 - once it gets resolved then I can
46:49 - actually maybe show the image so this is
46:53 - the narrative to do this with these even
46:55 - newer keywords in JavaScript called a
46:57 - weight and async and I will kind of show
47:00 - you that really quickly at the end of
47:01 - this video because I might use that in
47:02 - some examples is the process fetch the
47:06 - path fetch fetch give it a path to your
47:09 - data image tags JSON etc wait for the
47:14 - response ask to prepare the data in or
47:17 - map that you want then get it in that
47:19 - format and use it it's read again
47:32 - let's write some code so I'm doing
47:36 - something which I haven't done very much
47:38 - on my channel oops hold on sorry let me
47:40 - actually open this stuff up
47:59 - okay
48:05 - let's write some code so I'm doing
48:07 - something that I haven't really ever
48:09 - done on this channel before come here I
48:11 - should say like might happen in previous
48:13 - videos let's write some code so I'm
48:20 - doing something that I do pretty rarely
48:21 - on this channel which I just have a
48:23 - plain index.html file and I'm gonna
48:26 - actually put my JavaScript in that file
48:29 - in a script tag then the HTML elements
48:32 - are here and there's no dependencies so
48:33 - fetch is Native you know I am using the
48:36 - most recent version of the Chrome
48:38 - browser so fetch is available to me in
48:41 - chin so I also happen to have in the
48:44 - folder hold on let me just pull that up
48:58 - I happen to have in the directory with
49:01 - the index.html file a image called
49:04 - rainbow JPEG and this image is a also
49:09 - happen to have in the same directory as
49:11 - my HTML file a an image file public
49:15 - domain image file of a rainbow so this
49:18 - is the file that I load with the fetch
49:19 - function so we can see there's only
49:24 - thing right now is I have an h1 element
49:27 - I have an any image element the source
49:30 - of that image is empty the ID is rainbow
49:33 - and I'm conflict so if I go to the
49:35 - browser hit refresh you can see I comp
49:37 - console.log about to fetch your rainbow
49:39 - and then it says fetch an image that
49:40 - should really say rainbow a rainbow ok
49:45 - so now what do I want to do I'm going to
49:48 - call the fetch function and I'm going to
49:50 - pass it rainbow JPEG so let's just
49:53 - refresh the page no but how do I
49:56 - actually get the stuff so I said that I
49:59 - need to do then right the idea is now
50:02 - I'm gonna say then and I'm gonna deal
50:04 - with getting the stuff here so let me
50:07 - just put a function in here an anonymous
50:10 - function and in here I'm gonna say
50:14 - function has an argument I'm gonna call
50:16 - it response so this is the respond the
50:20 - wrong window and nobody can tell
50:39 - so let me put in an anonymous function
50:43 - and in that function I'm gonna say
50:45 - console.log oh and this function should
50:48 - take an argument that argument is a
50:51 - response I'm gonna call it response I
50:52 - could call it anything I want like I'm
50:54 - even spelling it wrong I could call it
50:56 - unikitty but I'm gonna call it response
51:00 - because that makes sense that's where
51:01 - when when the promise has been resolved
51:04 - when I get the stuff so let's just say
51:05 - console.log response let's refresh the
51:08 - page and look there it is so there's
51:10 - lots of information headers the URL all
51:14 - sorts of stuff in here and this is the
51:16 - body I need to figure out I need to
51:18 - parse through what's in the body of this
51:20 - response in a way that I can use and the
51:23 - way that I'm going to do that is with
51:25 - the blob function so now I'm gonna say
51:28 - return response blob and I'm gonna
51:32 - streamline this code if you're if you've
51:34 - done JavaScript programming before and
51:36 - you're like you're like why aren't you
51:37 - using the arrow syntax and I'm gonna
51:40 - streamline this code in a minute but I'm
51:42 - gonna kind of write it in the long
51:43 - winded way first so returning response
51:46 - dot blob
51:47 - means there's an S and I can chain them
51:49 - and I think what I'd like to do is put
51:50 - this down well it's fine I'm gonna save
51:53 - and I'm gonna write another there we go
51:59 - I'm gonna write another function let's
52:01 - actually call it a a blob here and let's
52:06 - say console dot log blob so now you can
52:09 - see this is called a promise chain I'm
52:12 - fetching the rainbow then when I get the
52:15 - response
52:15 - I'm convert blob of data and then let's
52:18 - look at that blob of data let's look at
52:25 - what I got wrong
52:26 - whoops the camera went off
52:33 - by the way if you're just tuning it now
52:36 - they working but I'm kind of pushing
52:38 - forward anyway just because I've got
52:40 - some stuff that I've got to do start
52:42 - getting on these videos one let's this
52:46 - is actually really just based on the the
52:50 - example put out by Mozilla themselves
52:55 - let's look at what they do in their
52:58 - basic fetch name oh I have to do URL
53:04 - create object URL that's right yeah okay
53:12 - so the true story here is that I can't
53:16 - just insert the blob drainage dot source
53:19 - image source expects a path really
53:22 - usually you put you know I could
53:24 - actually just put image dot source
53:26 - rainbow jpg and you know we're gonna see
53:29 - that rainbow there but that's not what
53:31 - I'm doing here I'm trying to line
53:32 - demonstrating this is a little bit
53:33 - absurd II I don't want to demonstrate
53:34 - the process of loading the file and so
53:37 - loading the data of the file itself so I
53:40 - need to turn that data into path itself
53:43 - and I think I can say that through URL
53:46 - create object URL and then image so I
53:52 - need to make a URL out of that blob so
53:57 - let's look at this and we can see there
54:00 - we go there's the image and I'm just
54:02 - just just so you see what it looks like
54:05 - I'm going to console.log image source
54:09 - and you can see that's actually well now
54:14 - hold on that's not what I want to do
54:17 - just curious what's this do No
54:23 - yeah whatever let me do this part again
54:33 - let me pull up the documentation page so
54:38 - we have that
54:48 - sorry
55:08 - so the truth that the story here well oh
55:11 - it's green again everyone I look over
55:14 - the screen and people can actually maybe
55:15 - see me the true story here is that I
55:22 - can't simply just assign a blob of data
55:26 - to an HTML elements source property so
55:29 - what I need to do here is I actually
55:32 - need to create a URL out of that data
55:35 - and in fact that's what's expected there
55:37 - I mean I could actually just put the
55:38 - string rainbow dot jpg since the files
55:40 - there and that's a path but that's not
55:42 - what I'm doing here I'm trying to
55:43 - demonstrate the fetch function so I'm
55:45 - loading a local file getting the data so
55:48 - see with that file and then turning it
55:49 - back into a URL path then I can insert
55:52 - into a Dom element so the way to do that
55:54 - is with a particular function called a
55:57 - create object URL so this function is a
56:00 - function that takes a file blob or media
56:03 - source object and creates an object URL
56:04 - from it so now I can say URL URL create
56:11 - object URL blob and now this is the
56:15 - whole process
56:16 - fetch the rainbow turn the return the
56:20 - body of the response from that fetch
56:22 - operation to a blob of data turn that
56:24 - blob of data into a URL and insert it
56:27 - into an image elements source attribute
56:29 - and here we go back to here alright so
56:36 - this is the whole process but let's do a
56:38 - cups here to streamline the code I could
56:41 - have written it the way I'm about to
56:42 - show you originally but I'd like to step
56:44 - through things incrementally so one
56:46 - thing I could do is I can use arrow
56:48 - syntax which is a shorthand way of
56:50 - defining a function instead of using the
56:53 - keyword function I can say equals equals
56:57 - greater than which oh right and then
56:59 - here I can also do the same thing with
57:00 - the blob so this is a way of sort of
57:03 - streamlining shorthand the function now
57:05 - another thing I can do is I don't
57:07 - actually need to have this console dot
57:09 - log so I can actually remove these curly
57:13 - brackets and write and and remove the
57:16 - return keyword and actually just write
57:20 - it like this
57:22 - so when this is a really nice shorthand
57:25 - any error that occurs throughout this
57:27 - entire process will end up down here so
57:30 - I don't have to have a handling thing
57:31 - for every single one and you thought
57:34 - this video was over let's make one more
57:38 - small improvement on this let's actually
57:42 - run this and make sure it's working but
57:45 - oh-oh unexpected token error so I'm
57:48 - always making syntax errors when I'm
57:50 - writing code this this needs a
57:55 - parentheses right one more parenthesis
57:58 - there because oh and this should look
58:01 - like this ah there we go
58:02 - so this was all function I was so close
58:06 - that was way off when I just wrote there
58:09 - so hopefully I didn't confuse you there
58:11 - but sometimes I leave this nice for you
58:13 - to see the mistakes and kind of maybe
58:16 - correct them in your head while you're
58:17 - watching a go but so this is I'm taking
58:21 - the error and in fact cuz this is just
58:23 - one line of code I could also streamline
58:25 - this and get rid of this semicolon and
58:29 - now this is our final final result
58:32 - except for one more thing that I'm gonna
58:33 - do I'm gonna fetch the rainbow I'm going
58:35 - to turn the response into old I'm gonna
58:37 - get the blob I'm gonna insert it in the
58:38 - Dom element and if any error happens you
58:40 - do that and now I'm gonna refresh and
58:44 - look there we go we affect the rainbow
58:46 - now you know what fetch does just
58:49 - because I can I'm good as a little bit
58:51 - longer I'm gonna do one more thing if I
58:54 - wanted to I could write my own function
58:57 - called fetch rainbow find that function
59:01 - as a sync and I have a set of videos
59:04 - that goes through how this works in a
59:06 - bit more detail async sorry async
59:09 - function fetch rainbow and so you I'll
59:14 - refer you to those in this description
59:15 - of this video as well but basically what
59:17 - this allows me to do is call fetch using
59:22 - the keyword a wait so a wait is a
59:24 - keyword that allows me to write a
59:26 - sequence of that return promises without
59:29 - using dot vent so I can say just
59:33 - constant response equals fetch
59:35 - rainbow this is an asynchronous function
59:39 - so I need to say oh wait
59:40 - then I can say constant blob equals oh
59:44 - wait
59:44 - response blob and then I can just do
59:48 - these last two pieces right here and now
59:53 - we can see this is exam code but I'm
59:57 - using a weight and the async and await
60:00 - keywords so I'm writing an async
60:02 - function called fetch rainbow I fell I
60:05 - convert it to a blob then I insert it
60:08 - into the Dom element and let's just see
60:10 - if this works we still have the day all
60:15 - right so hopefully this video gives you
60:17 - a sense of what the fetch function is
60:19 - how you use it how it integrates with
60:21 - JavaScript promises as well as and
60:24 - weight keywords and this will give you
60:26 - the sort of foundational element for
60:28 - when fetch appears in all sorts of other
60:30 - examples and tutorials that involve from
60:33 - an API or some a local file or other
60:36 - things and in fact even though fetch is
60:39 - something that's just here in the
60:40 - browser I'm going to show you fetch in
60:43 - server-side program with JavaScript in
60:45 - know chess as well in a future video
60:46 - thanks for watching alright let me say I
60:56 - probably should have added the error
60:58 - handling here
61:08 - yeah let me see
61:24 - well it's still the lie I thought maybe
61:26 - the lag would sort of clean itself up
61:40 - yeah I've tried to fix um s snake ass
61:43 - did he try to fix it I tried to fix the
61:44 - lag many times I think it has to do with
61:46 - my cold frankly so let me I'm gonna and
62:01 - I wonder how I'm gonna add a little bit
62:04 - of stuff one more thing about writing
62:10 - your own asynchronous function using the
62:12 - async keyword this function right
62:15 - everything's happening asynchronously in
62:16 - here this is really just what's a
62:19 - syntactic sugar to make the way you
62:22 - write your code easier to read and
62:25 - follow but ultimately it's all about
62:26 - asynchronous events so this in fact by
62:29 - definition automatically returns a
62:32 - promise so I could just do something
62:35 - like say return yay right this is very
62:38 - silly but I'm just gonna return the word
62:40 - yay and then I could add if I wanted to
62:43 - check to have an event for when this
62:45 - finishes I can actually say dot then I
62:49 - can say response console dot log
62:53 - response and then I can also say dot
62:57 - catch go to another line please I could
63:01 - say dot catch and error console console
63:07 - dot log error so this is a very simple
63:10 - way of doing some type of error handling
63:12 - where I have now written the async the
63:16 - async function to use fetch to use fetch
63:19 - and when it's done I could return more
63:21 - information right I could actually
63:23 - design a whole sort of like protocol and
63:25 - do stuff here but I just want to see
63:26 - that it worked to console along that or
63:28 - if there was an error to console.log the
63:30 - error and I should get in the habit of
63:32 - saying console dot error instead of
63:34 - console dot log for an error itself okay
63:37 - to run this yeah and still works alright
63:40 - so this video hopefully what I've done
63:42 - now is shown you how to use the fetch
63:45 - function what is the fetch function what
63:47 - does it do
63:47 - how it integrates with JavaScript
63:49 - promises as well as the async and await
63:52 - keyword these are not the easiest topics
63:55 - to wrap your head around so you might
63:56 - want to refer to some of the
63:57 - supplementary material about promises
63:59 - and async await but this function fetch
64:02 - will serve the basis for so many other
64:04 - examples that you'll see throughout this
64:06 - series whether it's loading you know a
64:08 - CSV file of some tabular data it's
64:10 - loading a JSON file from an API URL
64:13 - you're going to need the fetch function
64:14 - and in fact the fetch function works
64:18 - you're a very loud piercing high-pitched
64:21 - noise and in fact the fetch function
64:24 - also can be used in node now it's not
64:26 - natively available in nodejs like it is
64:29 - in the browser but there's ways of
64:30 - gaining access to it and at some point
64:32 - when server-side program to become
64:33 - something we use here as well I will
64:35 - show you that too so maybe if you're
64:37 - trying to think of an exercise to do
64:39 - take exactly this code use your own
64:41 - image could you load multiple images
64:45 - more than one can is that high-pitched
64:48 - sound coming through I have to wait till
64:52 - it goes away I think someone's like
64:53 - wheeling furniture in the hallway and
64:55 - it's like squeaking it's like the
64:58 - highest pitched sound ever
65:12 - like oh I got snakes name wrong maybe
65:15 - it's just snake oh that high noise came
65:19 - through oh I'm gonna record the ending
65:21 - to this again I probably should just
65:23 - come back and do this whole thing
65:35 - see let's see what happens now maybe
65:41 - everything just needed to freeze and
65:42 - crash which is what just happened that
65:45 - was definitely an issue on my end where
65:47 - the open broadcast studio froze and oh
65:51 - this and I am not seeing the chat right
65:57 - now so I have no idea what's going on
65:59 - this has been quite a livestream day and
66:12 - I'm seeing green so I think the quality
66:15 - is quite good right now ironically maybe
66:20 - that's all we needed all right
66:24 - unfortunately the very bad news is when
66:27 - open broadcaster EO crashes it corrupts
66:30 - the recording to disk file so all of my
66:32 - like oh don't worry our recording goes
66:34 - to disk there must be a way to recover
66:37 - it because if I look at the file it says
66:45 - well notice our desktop it says it's 2
66:50 - gigabytes so there's a 2 gigabyte file
66:53 - there it just didn't the video didn't
66:55 - get closed out properly so I'm not able
66:58 - to open it but maybe there's a way to
66:59 - recover it if anybody knows please get
67:02 - in touch
67:03 - how to recover a record to disk file
67:05 - that's corrupted wide open broadcaster
67:07 - vo crashes please let me know
67:17 - ironically everything was working now
67:21 - let me try to do my little n spiel
67:34 - thanks X Nick I'd be worth the bet
67:40 - tasteful toasty rights might be worth
67:42 - mentioning you can fetch rainbow then
67:43 - console.log Oh instead of yes yes that
67:50 - is true okay
67:52 - oh ffmpeg will let me recover the file
67:59 - with broken end of file okay that's good
68:00 - to know that'll be great if that works I
68:02 - will try that if para Tosh if you could
68:07 - maybe get in touch Daniel at the coding
68:10 - train com if you know any F ffmpeg
68:12 - commands that's my sort of publicly
68:16 - available email address for this channel
68:18 - that you can write to okay
68:21 - well I still see in green this is kind
68:24 - of amazing I thanks tasteful toasty I'm
68:28 - gonna mention that so this wraps up this
68:33 - particular video this is the code that
68:35 - I'm gonna leave you with with one minor
68:38 - change it was pointed out to me recently
68:40 - that I could even streamline this a bit
68:44 - further because if all I'm doing is
68:46 - taking the response and passing it
68:48 - through a function like console.log I
68:50 - can actually just reference the function
68:52 - itself and I can do the same thing with
68:54 - the error so this is actually yet
68:56 - another slightly streamed will hide way
68:58 - of doing this and in the end in
69:00 - JavaScript there's always one more way
69:02 - you could remove a tiny little bit of
69:03 - code but sometimes I like to write it
69:05 - out in longer winded ways to be really
69:07 - clear and explicit of what's happening
69:08 - let's make sure this really does work
69:10 - still works okay so this is the code I'm
69:16 - leaving you with it uses the fetch
69:18 - function to pull data from a local file
69:21 - but that could be a URL path it it then
69:25 - takes that file converts the data in the
69:28 - body to a
69:29 - Bob takes that blob and makes a URL out
69:32 - of it and inserts it into a Dom element
69:33 - so we can see the image in the in the
69:36 - window itself in the browser page itself
69:38 - so what I would say to you is first of
69:41 - all try to get this to work yourself use
69:44 - your own image file what happens if you
69:47 - load a text file could you load a text
69:49 - file and then display all that text in a
69:51 - paragraph element that's a great
69:52 - exercise for you to try what if you want
69:54 - to load three image files could you do
69:56 - that in the loop with an array how would
69:58 - you do that so those are a couple
70:00 - exercises that I suggest that you try
70:02 - following watching this video and I will
70:04 - include solutions to those also in a
70:06 - links that are available in this video's
70:08 - description so thanks for watching and
70:09 - see you in the next video so Aria Mon
70:17 - asks on line 30 why didn't you do slash
70:21 - star instead of slash slash you know I I
70:24 - don't have a good reason there's really
70:25 - never a reason for anything I do other
70:26 - than arbitrariness and what I'm used to
70:28 - but I have like muscle memory for doing
70:31 - this which is a shortcut NBS code
70:33 - command slash I probably could configure
70:36 - it to command slash use the slash star
70:38 - because via everything you can do in BS
70:39 - code that's what I'm used to okay so I'm
70:43 - gonna put this aside this will become a
70:46 - video tutorial about fetch I might just
70:48 - come back and do it again but this is
70:50 - going into I have now made my first
70:52 - video for the data and API series this
70:57 - is coming somewhere in here oh boy this
71:05 - might actually be like the first video
71:08 - now that I think about it so I have to
71:11 - think about where this fits cuz I didn't
71:12 - actually use JSON data but but this this
71:17 - will go somewhere in here okay alright
71:23 - the stream seems to be working right no
71:25 - lag is there any lag right now cuz
71:33 - Oh Oh I did this wrong look at me
71:39 - always doing it wrong yes of course I
71:44 - did it wrong I meant to do that right
71:52 - like this is what I meant to do
71:54 - ah I will do that one more time okay
72:10 - here we go
72:11 - third time's the charm or in my case
72:15 - 30th time is the charm
72:35 - this wraps up the video this is the code
72:38 - that I'm gonna leave you with I will
72:40 - point out there is and it was point this
72:41 - was pointed out to me I I like to write
72:43 - things often in as long-winded way as
72:45 - possible to be clear and explicit about
72:47 - what's going on for teaching purposes
72:48 - but this this is what's also sometimes
72:51 - referred to as a lambda function this
72:53 - equal this arrow function syntax because
72:55 - I'm taking the response and passing it
72:58 - through console dot log I can actually
73:00 - just pass in two then the console log
73:04 - function itself the name of it as well
73:06 - as in catch just pass in the console dot
73:09 - error so this is this this is even
73:11 - condensing it down even further but of
73:13 - course if I needed to do more custom
73:15 - stuff I'd have to write a full function
73:17 - definition in there but let's just run
73:18 - this to make sure it looks but let's
73:21 - just run this to make sure it still
73:22 - works and it does all right so what are
73:26 - some things that you can do with this
73:28 - now now that you know how to use the
73:31 - fetch function try this exercise using
73:34 - exactly this code load a local txt file
73:37 - and display the data from that txt file
73:40 - in a Dom element instead of using an
73:42 - image another thing you might try is
73:45 - what if you have three images could you
73:47 - do this somehow in a loop could you
73:48 - write one function that does all three
73:51 - images how would you handle that so
73:54 - those are some exercises that you should
73:55 - that I would suggest completing before
73:57 - you move on to the next video and I will
73:58 - also include solutions to those
74:00 - exercises in this video's description so
74:03 - thanks for watching and see you in the
74:04 - next video in this series of videos that
74:07 - you're watching goodbye alright just get
74:14 - it right this time
74:15 - and now the stream is working it's noon
74:18 - I really have to go in like a half an
74:20 - hour my energy is sort of picking up
74:22 - though I'm gonna do my Angry Birds
74:23 - challenge because I got a I gotta leave
74:27 - today with something more than what I've
74:30 - got so far that's because of the lag it
74:33 - took me and whoops an hour and a half to
74:36 - just do like if hopefully what is
74:37 - ultimately just a 15 minute video about
74:40 - the fetch function
74:55 - okay alright everyone we're gonna have
74:59 - some fun now
75:23 - oops what is password here sorry I have
75:29 - to look up ah really all right I have to
75:36 - look up the password in my password
75:39 - manager give me a second here okay what
76:12 - is the minimum size code I can get away
76:16 - with can I get away with this 36 point
76:25 - can I get away with 32 point pull this
76:32 - over a tiny bit because I could
76:35 - permanent leave this open and
76:56 - it's amazing that this stream is totally
76:58 - working now 30-point would probably find
77:04 - is this a reasonable code size I really
77:09 - shouldn't I I don't like to use the web
77:11 - editor for challenges that are kind of
77:13 - complicated that I might need to do a
77:14 - lot of like serious debugging so
77:19 - hopefully this is okay usually use a
77:21 - bigger font but let's see so let's do
77:29 - this okay
77:32 - No 600 be fine all right all right
77:36 - everyone let me get the camera went off
77:48 - I'm gonna do something very ill-advised
77:50 - right now but I'm feeling my oats
77:53 - feeling my strength returning to my body
77:56 - my coffee is completely empty that's bad
78:00 - I'm getting notifications popping up
78:15 - just give me a second here
78:26 - this is such a bad idea
78:35 - [Music]
78:54 - pretty sure that's the right URL yep
79:06 - oh oh I forgot I need my coding trained
79:11 - characters oh I might be able to stay
79:14 - till one yeah I need my coding trained
79:17 - characters where are they just give me a
79:21 - second here
79:22 - [Music]
79:30 - [Music]
80:16 - [Music]
80:56 - [Music]
81:28 - so this URL I think has a mistake in it
81:33 - this is not the minified version it's
81:36 - looks like the minified version maybe
81:39 - it's not
81:40 - if dot min to the URL like this no I
81:51 - think I'm right because I've got matter
81:54 - Minjae s there yeah this is the non
81:57 - minified okay okay okay
82:20 - No
82:34 - oh oh I can just type in unpackage calm
82:38 - I didn't rise I could do that that's
82:41 - what you're saying I can just do unjust
82:43 - type this in it redirects me and then I
82:46 - can ah thank you
82:48 - Oh so I'm gonna do that great even
82:52 - better I'm gonna do that
82:53 - I don't even gonna keep track of that
83:04 - all right
83:31 - okay oh I wish all right I'm sorry to
83:39 - disappoint some of you who were
83:40 - particularly David I know who was hoping
83:43 - that I would talk about making a
83:44 - processing library that's unfortunately
83:46 - not gonna happen today but I'm gonna try
83:48 - to do this coding challenge I'm gonna
83:51 - let this be one video and I'm gonna
83:54 - really hope that the edited version of
83:56 - this is less than an hour and that the
83:59 - non edited version of this is also less
84:01 - than an hour but we'll see how this goes
84:07 - hello welcome to a coding challenge
84:10 - Angry Birds although my birds won't be
84:12 - angry they're gonna be loving loving
84:14 - Birds but maybe they won't even be Birds
84:16 - they'll be like cute little coding
84:17 - trained characters but that's not the
84:19 - point I am going to program a version a
84:23 - much simpler simplified version of an
84:26 - Angry Birds style clone I'm gonna use
84:27 - p5.js I'm gonna use a physics library
84:29 - called matter chess and I'm gonna get
84:31 - started in one moment but first let me
84:35 - diagram out what I'm going what I need
84:36 - so I'm gonna use an object-oriented
84:38 - programming approach I'm going to need
84:43 - something called like a box so this will
84:46 - be a box class I'm gonna need something
84:49 - like a bird we'll just call it a bird
84:50 - for right now this will be the bird
84:52 - class right the birds I mean it could be
84:53 - pigs or not but the point is I need that
84:56 - oh and I also need the ground so I'm
85:01 - gonna start my simplified Angry Birds is
85:04 - going to have a single box a single bird
85:07 - the box is sitting on the ground I'm
85:09 - going to want to toss the bird at the
85:12 - box and knock it over and from there
85:14 - glorious games throughout the universe
85:17 - that you will make maybe will follow I'm
85:19 - gonna do all this in the P 5 web editor
85:21 - which usually it's a pretty complicated
85:23 - project to try to do but I'm gonna I'm
85:25 - gonna do that anyway and then if I have
85:27 - time I think I'm gonna want to try to
85:29 - attach this particular bird in a
85:33 - slingshot like why use a constraint some
85:36 - type of spring-like connection to a
85:38 - little post so I could pull it back and
85:39 - let it go so let's see if I could get
85:41 - all of that
85:43 - and I'm not going to break out into song
85:44 - right now as much as I am tempted to do
85:46 - so all right so first I'm not gonna work
85:50 - so I'm gonna give this the physics
85:51 - library matter is gif this is the p5 web
85:59 - editor I'm going to use p5 for all of
86:01 - the drawing stuff and I'm gonna use the
86:03 - physics library matter AS for handling
86:06 - all of the physics now matter doc Jess
86:09 - does have rendering built into it but
86:11 - I'm gonna do things my sort of way of
86:13 - combining both libraries so that I can
86:15 - do all the rendering custom in p5 and
86:18 - maybe by the end of this video have some
86:20 - my coding trained characters inside of
86:22 - this little game that we make alright so
86:24 - first I want to take an object-oriented
86:26 - approach and I'm gonna do add file and I
86:28 - want to add I need a bird a s and I'm
86:33 - gonna I'm gonna make something called a
86:34 - box j s and I think I'm gonna be able to
86:36 - use the box for both the I'm gonna use
86:39 - the box class for both this thing that
86:42 - can actually get knocked over and the
86:44 - ground which needs to be something in
86:45 - mobile static so what does a box need to
86:49 - have a box needs to have it needs to
86:57 - have an X needs to have a Y needs to
87:02 - have a width and it needs to have a
87:04 - height and I'm gonna require that all of
87:07 - those arguments are passed in via the
87:10 - constructor then I'm going to and so I
87:14 - need to put the arguments in here X Y WH
87:17 - and I need to what do I need to do I
87:21 - need to I'm gonna write a show function
87:22 - and in here I'm just gonna say I'm going
87:25 - to use fill to make it white and I'm
87:28 - gonna say rectangle this dot X this dot
87:32 - y this dot W this dot H okay so this is
87:36 - the basic idea of a box class with no
87:38 - physics this is just the data about a
87:40 - box and this is me drawing it so now in
87:44 - the in the main sketch I'm going to say
87:47 - let a ground I'm gonna have a global
87:50 - variable called ground I'm going to say
87:52 - ground equals a new box and it's going
87:54 - to be the X is going to be at 0
87:56 - the Y is gonna be like height minus 20
87:59 - and the width will be the full width of
88:01 - the window and the height will be 20 and
88:04 - then I'm gonna say ground dot show now
88:07 - it's giving me all sorts of errors like
88:08 - it has no idea what a box is and the
88:10 - reason why it has no idea what a box is
88:12 - is because even though I added a new
88:13 - JavaScript file I didn't add it to my
88:15 - index on HTML so let me go and add it to
88:18 - index dot HTML box yes and there we go
88:22 - look step one is done I have the ground
88:26 - the ground is there now the next thing
88:29 - I'm going to do is I'm going to have a
88:31 - box I'm going to just call it a box a
88:33 - box is another new box and I'm let's put
88:37 - it over to the side in some arbitrary
88:39 - place and say box - oh there it is I
88:45 - want it to be tall I don't know what I'm
88:49 - doing exactly yet but something like
88:50 - this something like this maybe a little
88:54 - less you know what so this will be that
88:55 - it needs to sit over on the ground so
88:57 - let's put it over a little further and
88:59 - let's put it further down there close
89:04 - enough but I want to move it over some
89:06 - there we go
89:07 - okay so that's the thing that I need to
89:09 - throw my bird at now I need another
89:13 - class I'm going to add file and I'm
89:16 - gonna call this bird oh look when did I
89:18 - it's like knows what I'm gonna do in
89:20 - advance isn't that crazy
89:22 - I think I've written other things the p5
89:23 - editor with a bird died yes oh no I
89:26 - already did that I added it before no
89:28 - I'm just losing my mind you're watching
89:30 - me slowly lose my mind while being a
89:33 - person on the Internet coding stuff
89:34 - without a timer I'm not using the timer
89:37 - this time birdy jeaious class bird and
89:40 - I'm just you know I probably could maybe
89:43 - use inheritance here where I made some
89:44 - videos about recently but I'm just gonna
89:47 - do like a sort of horrible copy/paste
89:49 - job but I'm gonna change this to an R to
89:51 - indicate radius because my bird is going
89:55 - to be a circle and this dot R and now I
90:01 - can say let bird bird equals a new bird
90:07 - and it'll be at like you know 50 pixels
90:09 - over 3
90:10 - pixels down and with a raise of 25 and
90:13 - doesn't know what bird is yet again
90:16 - because I now also need to add bird je s
90:19 - to my index.html file okay where's my
90:24 - bird retweet ha ha ha
90:29 - be like the blue bird who always is blue
90:32 - I'm just reliving my high school musical
90:35 - singing days what was that what was that
90:38 - show anything goes I think anyway
90:40 - somewhere there's no video on the
90:42 - internet because I'm too old but if I
90:44 - was younger there'd be a video on the
90:45 - Internet of somewhere me in a musical in
90:48 - high school that aside I've got the bird
90:50 - so I've got the bird I've got the box
90:52 - these are all the elements so I have all
90:55 - the elements that I want in my scene
90:57 - ultimately I'm gonna want to have like a
90:59 - stack of boxes and use images to make
91:02 - this have more personality but the next
91:05 - thing that I need to do is add physics
91:08 - now I could use you know I could start
91:12 - doing adding some functions to do all
91:13 - the physics myself but I would like to
91:15 - use a physics engine the matter dot J's
91:18 - library is released through npm node
91:20 - package manager so I can go and
91:22 - everything NPM it's already like
91:24 - appearing in my cuz I looked for it
91:26 - before I started this but if I just go
91:27 - to unpick AG unpackage which is the
91:30 - content delivery network for NPM
91:32 - packages and do matter Jas and hit enter
91:35 - we can see this is the URL for the
91:37 - matter not Jas library I want to get the
91:39 - minified version of it so I'm an owl so
91:42 - admin J s so now I have this particular
91:45 - URL I can go back to the p5 web better
91:48 - index.html and I can I'm just gonna like
91:51 - paste it here for a second I'm gonna
91:53 - grab one of these these are the script
91:56 - tags for the p5 library right and so
91:59 - instead I've got p5 p5 Dom p5 sound and
92:04 - now I want to add matter chess as a
92:06 - library so these are now all of my
92:09 - libraries and all of my custom
92:12 - JavaScript code and if I go back to
92:13 - sketch touch yes and bring this back
92:16 - over here everything's still working
92:17 - let's make sure the matter dot library
92:19 - has loaded if I just say console.log
92:22 - matter we can
92:24 - yes stuff is coming out here the library
92:27 - is loaded that would obviously say if I
92:29 - had loaded that library I don't know
92:30 - what you're talking about all right now
92:31 - let's add some physics so whatever I I
92:35 - have a whole bunch of tutorials about
92:38 - the matter dot J's library so I don't
92:39 - need to spend you can where I can refer
92:41 - you to those if you want more background
92:43 - but basically I need to establish this
92:45 - idea of an engine object and a world
92:49 - object the world is talking about the
92:51 - environment and then each one of these
92:54 - things will be a body this will be a
92:56 - rectangular body this will be a
92:58 - rectangular body and this will be a
92:59 - circular body so my classes box and bird
93:03 - I'm going to make them wrappers to base
93:07 - to have inside of them a piece of data
93:09 - which refers to the actual matter dot j
93:11 - s body so the first thing that I need to
93:15 - do I think is let's have a a world and
93:20 - an engine and then I think I say engine
93:24 - equals matter well I think I better do
93:26 - this first engine equals matter dot
93:30 - engine create I don't know I'm guessing
93:33 - I think that's right I haven't done this
93:35 - before and then I think the world is
93:37 - actually created when I create the
93:39 - engine I can just grab it from the world
93:40 - so now I have the matter engine and the
93:44 - matter world then inside of my objects
93:51 - what I want to do let's just do the Box
93:54 - first
93:54 - so here instead of having an X a Y and a
93:58 - width and height although I think I
93:59 - might keep the width and a height just
94:01 - to store it I now want to add this body
94:05 - equals matter dot dot bodies dot
94:08 - rectangle this is a function that in the
94:11 - matter library will create a rectangular
94:14 - body object for me and I can give it I'm
94:19 - gonna do this first
94:20 - like I don't this box object no longer
94:23 - is going to have its own X&Y
94:25 - it's just going to give the matter body
94:28 - the X and the y so I'm going to say X Y
94:31 - I think this is actually what it gets
94:33 - and then I need to say matter dot world
94:36 - dot add to the world this dot body I
94:41 - need to actually put it in the world hmm
94:44 - so it's complaining to me oh no sorry so
95:03 - what happened to the box oh oh I took
95:07 - out this TEDx that Y so now the whole
95:09 - point of this is in show I want to ask I
95:12 - want to say hey matter I want to say
95:15 - give me give me a position which is this
95:20 - dot body's position and now I'm gonna
95:24 - draw the rectangle at paws X and paws
95:27 - dot Y now there may be a way in fact
95:32 - that I could dig into the body and get
95:36 - its width and height but I'm just going
95:38 - to store those out of convenience for
95:39 - myself to the size of these rectangles
95:41 - is never going to change so I can keep
95:43 - that there is a big issue here though
95:44 - which is that one is that once I start
95:48 - adding the physics the box could wobble
95:50 - meaning it could rotate so I'm also
95:52 - wanting I'm also going to want to get an
95:54 - angle and I am going to want to then
96:01 - draw it with rotation so I'm going to
96:03 - say push I'm going to say pop I'm going
96:06 - to say translate paws X paws dot Y and
96:15 - then the rectangles at 0 0 and I'm gonna
96:20 - rotate by that angle there's another
96:22 - little weird nuance here so I like for
96:25 - myself I like to think about placing the
96:28 - rectangle with the X Y in the corner and
96:30 - then the width and the height and that's
96:32 - the default behavior of a p5 but matter
96:36 - doctor asks when you make a rectangular
96:38 - or circular object the XY position for
96:41 - that object is always in the center so
96:43 - this actually I've told matter das where
96:45 - the object is and drawn it in a
96:47 - different place so I need to reconcile
96:49 - those two things
96:51 - so to reconcile those two things there's
96:54 - a few different ways I could do it one
96:56 - is first I should say rekt mode Center
96:59 - so that I'm drawing but now you can see
97:01 - everything's off in a weird place which
97:03 - is maybe fine maybe I just need to
97:05 - rethink where I'm placing the stuff for
97:07 - example the ground would be now at with
97:11 - / - 8 - 10 so that's the same thing so
97:16 - that's fine
97:16 - that's one way of doing it and my
97:18 - rectangle is in a weird place so but I'm
97:21 - not going to worry about that right now
97:22 - I'm gonna position stuff and I obviously
97:24 - could use some math to get it to rest
97:25 - perfectly on the ground but I'm not
97:27 - gonna worry about that still there's no
97:28 - physics happening why is there no
97:30 - physics happening I created the body I
97:32 - added it to the world it's because I'm
97:34 - not running the engine so the what I
97:37 - need to do draw is my loop so basically
97:39 - I need to say every time through draw
97:41 - step forward in time so I think I can
97:44 - just say engine run no it must be like
97:50 - this engine dot run engine I could also
97:54 - look it up in the documentation no I got
97:58 - for a second
98:09 - update I looked it up I probably could
98:14 - have shown you me looking it up but it's
98:15 - not how do you look this stuff up let me
98:17 - show you looking it up so if I go here
98:19 - and I go under engine and I scroll
98:21 - through here I could be like Oh where's
98:22 - that engine got run function what is
98:24 - there how interesting
98:27 - but that's not to say matter dot engine
98:29 - but that's actually not what I want I
98:31 - want to use update I think there's two
98:33 - different ways of doing things
98:35 - engine dot run will just set the engine
98:37 - running but I want to lockstep my p5
98:41 - animation loop with my matter physics
98:43 - engine so I'm gonna use update so and
98:46 - what I'm going to do then is in here I'm
98:49 - gonna say engine dot update but I need
98:51 - to say matter engine update and there we
98:55 - go well did you see that the physics is
98:59 - happening oh but the ground fell out
99:02 - below us we're thinking it's ok
99:06 - everybody we can violate the laws of
99:09 - physics and create an object with
99:11 - infinite mass that never moves the
99:13 - ground can be known as a static it can
99:16 - be a static object so objects that you
99:18 - create in matter DOTC ask the physics
99:20 - engines can be static or dynamic by
99:22 - default they're dynamic so the tricky
99:24 - thing here is I'm using the same box
99:26 - class to describe both the ground and
99:29 - that rectangle so I could separate them
99:31 - if they really are different or use
99:32 - inheritance but maybe and what oh why
99:36 - not let's use inheritance this will be
99:38 - fun I've been talking about inheritance
99:40 - let's use it so I had another file I
99:42 - don't know if this is the best technique
99:43 - I'm gonna call it ground and I'm gonna
99:46 - say class ground oh this there's a
99:50 - problem with this idea but it's fine
99:52 - extends extends extends extends what am
99:59 - i extending box and then I'm gonna say
100:03 - constructor it's going to get X Y width
100:06 - and a height I'm going to say super X Y
100:09 - width and height so now this is ground
100:12 - is a class that inherits everything from
100:16 - box if you don't know about inheritance
100:17 - I'll refer you to my video about that
100:19 - and I can go into sketch and I can now
100:22 - say
100:22 - ground equals new ground and it's not
100:26 - defined
100:31 - all right now what still still still
100:36 - class ground class ground constructor
100:40 - ground is not defined Oh Oh what have I
100:45 - done wrong
100:46 - [Music]
100:48 - where's my chat where's my help
100:55 - ground up Jas ground up Jay s-class
101:00 - ground extends box boxes not to fight
101:06 - oh wow something really crazy happened I
101:10 - kind of forgot that the order that
101:13 - usually doesn't matter for me because I
101:15 - don't have anything really happen until
101:17 - the setup function and draw and
101:18 - everything has loaded but I can't
101:20 - reference the ground dr.azz javascript
101:23 - file before box such as because it's
101:25 - extending box and as its loading the Dom
101:27 - its kind of look at the box file first
101:29 - so this actually is one of the rare
101:32 - instances where I've got to put this
101:33 - script tag before that one no no that's
101:37 - the bird yes this is gonna work any
101:39 - second now yes okay oh it still goes
101:42 - away so now I need to figure out how do
101:44 - I just change one thing to make this
101:47 - static can I do this this stop body is
101:50 - static equals true okay so this is the
101:55 - idea of I have a whole other kind of
101:57 - body that extends box it does everything
102:01 - the same way but I can set an additional
102:03 - variable is static to true and so now
102:06 - when this runs we've got our Angry Bird
102:09 - box thing over there and now we're ready
102:11 - to start working with our bird okay
102:13 - so let's work with our bird now so we
102:15 - need to get rid of the X in the Y I'm
102:18 - gonna say this stop body equals matter
102:20 - dot bodies dot circle X Y R I'm going to
102:27 - do the same thing I'm not going to worry
102:29 - about rotation so let me I'm gonna you
102:33 - know I probably I'm gonna sort of cheat
102:35 - a little bit by just copying the
102:36 - is over because I'm gonna feel like
102:37 - typing right now and then just change
102:39 - this to circle and this dot R and there
102:43 - we go and then I also should say matter
102:46 - dot
102:47 - no no just yeah matter dot world dot add
102:51 - this stop body to the world or this dot
102:57 - body to the world
102:58 - there we go you can see what's rolling
103:01 - away all right excellent
103:02 - so now here we're kind of almost there
103:05 - all I need to do is be like wait toss I
103:07 - want to be able to toss this thing so I
103:11 - want to be able to toss this bird over
103:14 - here to this rectangle how do I do that
103:16 - i okay maybe I do an if statement to see
103:19 - if I click the mouse inside it then I
103:21 - grab it well what are the nice things
103:23 - that matter dot J s provides is this
103:25 - very general thing called a mouse
103:27 - constraint so I can add I'm gonna add
103:31 - and this is a little tricky I'm
103:32 - definitely gonna have to look this up
103:33 - I'm gonna call this M constraint or like
103:38 - Mouse thing for those let's use M
103:43 - constraint for Mouse constraint and then
103:46 - I'm gonna say M constraint equals matter
103:49 - dot all right we're gonna have to look
103:50 - this up so we're gonna go here under
103:53 - constraint and what I want is a mouse a
103:59 - mouse constraint this is what I want I
104:01 - want a mouse constraint create engine
104:04 - options okay so this is what matter dot
104:08 - Mouse create constraint create so I'm
104:11 - gonna say mater dot mouse constraint was
104:16 - capital Mouse constraint dot create and
104:19 - give it the engine okay so look at this
104:23 - options dot mouse was undefined options
104:26 - dot element was undefined may not
104:28 - function as expected so matters is is
104:31 - giving me a nice warning here explaining
104:33 - that while you made this mouse
104:35 - constraint but you need to tell me where
104:37 - you're going to be clicking the mouse
104:39 - and where I am clicking the mouse is in
104:43 - the canvas so I could like it's as the
104:45 - canvas as a Dom element does it have an
104:47 - ID well one of the nice things about
104:49 - using p5 is
104:50 - I can just store in a variable the
104:53 - result of create canvas which is canvas
104:56 - stop which is this canvas object and I
104:59 - should be able to now say I should be
105:01 - able to give it some options and I'm not
105:06 - sure and then so I can add a second
105:08 - argument here which is options and I
105:11 - don't I think I need just give it mouse
105:13 - no I'm just gonna put things as null and
105:16 - then element no hmm so maybe this is
105:20 - canvas alt can't read property button of
105:26 - null one of these is like the canvas
105:29 - element timeout for a second
105:33 - yes yes alka thank you I'm gonna do that
105:39 - aliasing
105:49 - Oh
106:00 - alright I'm back after looking up if
106:03 - what I need to do so what I forgot is
106:05 - that I need this mouse so I need a
106:10 - separate mouse object that had that I
106:13 - can use to create and manipulate those
106:15 - mouse inputs one of the interesting
106:17 - things there's a live chat going on
106:18 - right now as I'm recording this and alka
106:21 - wrote a nice suggestion for aliasing all
106:23 - these matter dot things you notice how
106:25 - I'm trying to write matter dot matter
106:26 - not matter dot everywhere so I'm gonna
106:28 - actually just go over here and take I
106:30 - can I can use this I forget what this is
106:33 - called but this is kind of a newfangled
106:34 - JavaScript thing where I can basically
106:36 - just make a nice list of all these
106:38 - objects I want I'm an engine world mouse
106:42 - constraint and I'm going to maybe use
106:45 - constraint and I can just set that all
106:47 - equal to matter so basically this is me
106:51 - aliasing everything that's matter dot
106:53 - engine matter dot world matter dot
106:55 - bodies so in theory I should be able to
106:58 - just say engine now here this makes
107:00 - things a little bit easier just mouse
107:02 - constraint here so my code is a little
107:04 - bit more succinct and I'll go back and
107:06 - fix that in other places as necessary
107:09 - but what I need here is a mouse and I
107:13 - need to say constant M matter Mouse I'll
107:18 - just call it mouse equals Mouse dot
107:20 - create canvas alt so I need to make a
107:23 - mouse object with the Dom element
107:26 - associated with the canvas and then I
107:28 - believe I can just put this here under
107:31 - options and now here we go and we bring
107:34 - this all the way back dare I say oh no
107:38 - oh oh what did I forget I probably have
107:40 - to add it to the world world dot add
107:44 - world
107:46 - mm constraint yeah look now I can pick
107:53 - this stuff up and I can toss it oh look
107:55 - what I can do better
107:57 - yay Oh goodbye okay so in some ways I
108:01 - could consider that I'm done right this
108:04 - could be the end of the video you could
108:05 - make your own version you could add some
108:07 - graphics but let's do a little bit more
108:09 - with this timeout for is like I need to
108:11 - blow my nose
108:24 - this is disgusting vile of my dirty
108:27 - tissues over there okay so all right
108:37 - Simon I did see Simon first posted in
108:39 - the chat about aliasing and then I'm
108:41 - using the syntax the update then Alko
108:45 - replied with some different syntax so
108:46 - apologize apologies for the miss
108:48 - reference there
109:08 - yeah
109:14 - I'm thinking what am i doing next year
109:22 - that's add let's add the slingshot I
109:25 - think I should add the slingshot right I
109:32 - think I'll add the slingshot or should I
109:36 - add the more boxes let me add more boxes
109:46 - what's left to do I want to add a few
109:49 - more boxes I want to put images instead
109:52 - of these just these boxes and circles
109:55 - and I think I should try to add a
109:56 - slingshot even though right now I could
109:58 - kind of just toss it
110:00 - but let's okay well the first thing
110:01 - would be just adding more boxes so I'm
110:04 - gonna change box two boxes and I am
110:08 - going to now have a little for loop i 0
110:13 - i is less than 3 i plus plus and then
110:19 - I'm gonna say instead of a single box
110:21 - I'm gonna say boxes index I equals a new
110:25 - box and then Here I am going to then say
110:28 - for let box of boxes little for loop
110:32 - draw them all so now you can see oh look
110:34 - at that what's so crazy is when they I
110:36 - start them all at the same point that
110:37 - two objects cannot appear cannot occupy
110:41 - the same space in the world of physics
110:43 - so they like burst off from each other
110:44 - but let's do something like say 300
110:47 - minus I times 75 which will stack them
110:51 - so now I have a little stack of boxes
110:52 - and then I can toss it in there we go I
110:55 - couldn't knock them over
110:56 - Oh over so this is there something you
110:59 - want here to have physics engines work
111:01 - and how I'm going to create some balance
111:03 - in the system and you know one of the
111:06 - things there is I probably need to
111:07 - increase the number of iterations per
111:10 - update in order for it not to be able to
111:12 - move so fastest to jump over the stuff
111:15 - but let me just run this again I'm gonna
111:16 - really see if I can knock this thing's
111:18 - over yeah I knocked them over I could
111:20 - also play around with the the properties
111:24 - like restitution and friction
111:26 - which are physics attributes of each of
111:29 - these objects a restitution being
111:31 - elasticity or bounciness so maybe
111:33 - towards the end of this video I'll try
111:34 - adding that but now we're in pretty good
111:36 - shape
111:36 - so let me add the slingshot so there is
111:40 - so what I did right now is I created
111:43 - this idea of a mouse constraint and a
111:44 - mouse constraint is this very generic
111:46 - constraint that just like anytime I
111:49 - click on something it'll make a little
111:51 - spring-like connection between where I
111:53 - click the mouse and the object so I can
111:55 - move it around but what I want is
111:57 - actually to introduce a constraint maybe
111:59 - right here that's fixed and only
112:02 - attached to the bird and bird itself
112:05 - just say that again because I just hit
112:07 - my mic in case that made some horrible
112:08 - noise make it could make a constraint
112:13 - that's fixed and only that's fixed to
112:16 - this point and only attached to this
112:18 - particular bird and I think it's
112:21 - probably smart for me to wrap this into
112:24 - a class because I'm really going all in
112:26 - on this object-oriented programming
112:28 - approach so let me make another
112:29 - javascript file called sling shot j/s
112:34 - and let me just write out the outset
112:38 - remember that I need to refer to sling
112:43 - shot a s then class sling shot so what
112:53 - does a sling shot need so it needs I
112:56 - think it needs an x and a y like where
112:59 - is the point from which this object will
113:01 - be attached and then it needs oh no no
113:07 - that's not where these go needs an X and
113:09 - a Y and then it needs a body like what
113:33 - people are asking about my age in the
113:35 - chat just thing I use a very soft focus
113:37 - it makes me appear much younger you'd
113:38 - see if you took about that video of me I
113:40 - don't actually but on the street there's
113:42 - anyone whatever alright um what was I
113:45 - saying I need a point in a body so now
113:50 - I'm gonna create let's call this this
113:53 - stop sling call it equals constraint dot
113:58 - create and then options I think this is
114:03 - how that works
114:04 - and this should be constraint constraint
114:08 - so I'm gonna make up some options now so
114:12 - I need to configure that constraint so
114:15 - the constraint can be something that's
114:17 - between two bodies or between a point
114:19 - and a body so I'm going to make it
114:21 - between a point which is I'm gonna have
114:27 - to look this up a pause for a second I
114:30 - have to so I need to look in the
114:32 - documentation
114:33 - I said matter that engine and draw okay
114:36 - [Music]
114:42 - yeah yeah I knew that sorry
114:55 - the two things I want to be connected
114:57 - with this constraint are a point which
115:01 - I'll call point a this is in the in the
115:03 - matter digest documentation specs point
115:06 - a which is an object with an X which
115:09 - will be what I pass in and a Y which
115:10 - will be what I pass in and then also it
115:14 - needs a bot to be connected to something
115:16 - else body B so I think it could be body
115:19 - a and body B or point a and body B
115:21 - there's different ways you couldn't
115:22 - figure it but I want a point at a body I
115:24 - could make another body that's a static
115:26 - body I guess but a point is the
115:28 - equivalent to that so then the body is
115:30 - going to be oh I don't think I need an
115:33 - object you're just this particular body
115:37 - and that doesn't know semicolons then I
115:43 - want to say world dot add this to the
115:49 - world
115:49 - this dots link and the other things that
115:54 - are part of a constraint I believe I
115:58 - forget that actual is stiffness like how
116:01 - would the it's like a spring connection
116:03 - how stiff is it so I think that's
116:05 - actually just called stiffness and let's
116:07 - actually look in the matter J has
116:08 - documentation constraint and under
116:12 - properties body a damping ID label point
116:16 - a point B render render
116:19 - ba-ba-ba-ba-ba-ba-ba-ba-ba stiffness a
116:22 - value of 1 means the constraint should
116:24 - be very stiff a value of 0.2 means the
116:26 - constraint acts like a soft spring so
116:29 - let's just try just to start with let's
116:31 - try point 5 and then a length is very
116:35 - important what is the rest length of
116:37 - that spring let's make it like 20 pixels
116:40 - okay so now I've created this slingshot
116:44 - I also think it would make sense for me
116:47 - to draw it so I'm going to do a show I'm
116:51 - going to make a show function and I'm
116:53 - gonna say stroke 255 and I'm gonna draw
116:56 - a line well let's do let's do let's make
117:02 - pause a equal this dot sling dot Point a
117:07 - and pause be equals this dot dot sling
117:12 - body dot position these are the two
117:16 - things that the sling the string the
117:20 - spring the connection the constraint is
117:22 - attached to so draw a line from pause a
117:24 - dot X pause a dot y pause be dot X pause
117:29 - B dot y hmm oh I'm not I haven't so I
117:33 - think but I'm writing this class I
117:35 - didn't even make the slingshot so now I
117:37 - need to go into sketch KS and I'm gonna
117:41 - make a variable called slingshot I'm
117:44 - going to say slingshot equals a new
117:50 - slingshot and I need to give it a and a
117:54 - y which where did I make the bird fifty
117:56 - three hundred let's just put it at the
117:57 - same place and then I need to connect it
118:00 - to the bird's body you can see already
118:03 - look this is kind of like stuck
118:06 - somewhere right this is great but let me
118:10 - draw it because I think that'll make it
118:11 - more obvious slingshots show and what
118:19 - did I call it slingshot show slingshot
118:22 - show up pause B cannot Oh body B body B
118:28 - it's point a and body B so if I do this
118:30 - right you can see there it is now okay
118:33 - there's some goofiness here so one thing
118:36 - that's really weird is that if I drag
118:38 - the mouse off the mouse constraint gets
118:40 - confused and thinks it's stuck so that's
118:43 - just an interaction design problem and I
118:44 - have to iron out at some point let's
118:46 - change a few things like let's make the
118:49 - bird much smaller let's let's move
118:54 - everything over a little bit just to
118:57 - give me a little space here so now we
119:01 - can see and maybe I should make that
119:02 - rest length a little bit longer there we
119:06 - go and maybe the stiffness should be a
119:08 - little bit less there we go so I'm
119:10 - pulling this back the idea is I'm going
119:12 - to pull it back and let go and I want it
119:14 - to fly mmm interesting why is it kind of
119:20 - popping there is that the stiffness oh
119:24 - yeah maybe I wanted even less stiff okay
119:28 - so we're getting there I have this
119:31 - slingshot now now how do I release it
119:33 - whoa I have to come to come up with in a
119:37 - way of releasing this oh dear so when I
119:43 - release the mouse hmm how do I do this
119:52 - if it's moving at a particular speed
119:55 - if the velocity reaches a certain
119:57 - magnitude let's try that
120:17 - I need a way somehow to launch this bird
120:24 - off of the slingshot like the slingshot
120:26 - should be broken and it should well this
120:28 - constraint should be broken and it
120:30 - should go flying so first let me at
120:32 - least create a mechanism for that
120:34 - so let me write a function here and I'll
120:35 - call it fly and I think if I just say
120:39 - body um
120:40 - this dot sling body be equals no look if
120:45 - I just detach the body then the thing
120:49 - that's attached to it will go flying so
120:51 - let's just try in let's just add just as
120:54 - a test a key pressed function if key
120:59 - equals space then slingshot fly so again
121:04 - I need to figure out when it should be
121:06 - flying but if I just hit the spacebar
121:09 - ooh
121:10 - cannot read property position of null
121:13 - slingshot line 24 so okay so only if
121:20 - this starts like if there is a body
121:22 - attached then should I bother to draw
121:25 - the line okay so I need to also not draw
121:28 - the line if there's no body so let me
121:29 - run it and then hit there we go
121:31 - we can see now could I possibly time it
121:34 - like now my interaction is I have to do
121:36 - this yeah but I shouldn't have to hit
121:40 - the spacebar right I shouldn't have to
121:43 - hit the spacebar so how can I determine
121:45 - a time where I should have it fly what
121:51 - if I were to get it's the body's speed
121:55 - right so can I say console dot log body
121:59 - B sorry
122:08 - what if I could somehow get what if I
122:13 - could what if I could look at the body's
122:16 - velocity wait a sec I'm getting some
122:23 - suggestions so I don't want a pirate
122:30 - aschen the chance tank make it so when
122:31 - you release the mouse the event triggers
122:34 - that's not going to work I don't think
122:36 - oh I can't say world dot remove world
122:39 - dot this sling but I want to keep the
122:41 - sling because I'm gonna reattach it okay
122:45 - point 9 seconds later yeah I could do a
122:49 - set timeout that's an interesting idea
122:58 - so a suggestion came in the chat to just
123:01 - look at when the mouse is released I
123:03 - don't think I think this isn't gonna
123:04 - work
123:05 - timing wise but let's let's try it what
123:07 - if I just write function Mouse released
123:09 - which is a global p5 event for when I
123:11 - release the mouse and there I could just
123:14 - say slingshot fly so now I'm pulling
123:18 - this back and release the mouse see it
123:20 - didn't have a chance to move I before it
123:23 - could start pulling it so I could use
123:25 - like set timeout this is kind of
123:27 - ridiculous I could and then like do it
123:34 - in like 50 milliseconds later
123:37 - is that right maybe it maybe should be
123:41 - more like a hundred milliseconds later
123:42 - oh great that worked
123:52 - weirdly just giving it a little time
123:55 - later I was going to go through this
123:56 - whole thing of testing its speed you
123:59 - know what this is good enough I think
124:00 - you could probably those of you watching
124:02 - you might want to come up with a
124:03 - different solution but I'm surprised
124:05 - that this actually worked just a little
124:07 - set timeout just give it 100
124:09 - milliseconds later thank you to beta
124:10 - tester 704 who maybe was the one who
124:13 - suggested so this is great we have
124:16 - hangers now one thing I should say is
124:18 - like at some point I want to be able to
124:20 - like put
124:21 - put have a new bird and so there's a
124:24 - variety of ways I could do that let's
124:26 - use key pressed we'll just use a key
124:28 - press right now and I could say I could
124:32 - say this I could remake the bird and
124:35 - then I could say a slingshot dot attach
124:40 - this bird body and then in bird I'm
124:45 - sorry in slingshot I could say attach
124:48 - get a body and I could say this dot
124:51 - sling dot body B equals that new body so
124:55 - here now what I should be able to do is
124:57 - I should be able to let it fly
124:59 - knock the stuff over and then after I
125:02 - want to probably detect when it should
125:04 - do this I can hit space oh sorry yeah
125:07 - whoops space and then oh there isn't
125:11 - there's a big flaw here in my system
125:13 - I'm not gonna worry about it this is
125:15 - good enough because I could like first
125:17 - of all I can use the mouse constraint
125:18 - the mouse constraint will let me do
125:21 - anything and then I can also release
125:22 - when I release the Box also the bird
125:26 - gets released but you the view these
125:28 - things can be cleaned up
125:30 - these are interaction design problems
125:32 - there are better solutions but I've got
125:33 - this is kind of exciting I've got the
125:35 - basics of Angry Birds here all my rights
125:39 - you should utilize the concept of
125:40 - potential and kinetic energy for it it's
125:43 - of just a pure projectile thing so I
125:45 - would love to see somebody make a
125:47 - variation on this and and submit it to
125:50 - the coding train comm there's a way that
125:52 - you can submit your versions to end
125:53 - doing that but I just got one more thing
125:55 - I want to do I want to add some images
125:58 - to this I could add sounds but that's
126:01 - not really me I'm gonna add some images
126:03 - so give me a second I'm gonna be right
126:05 - back with some images
126:17 - [Music]
126:19 - now how do I get it to this yeah
126:38 - ah so Simon Says if I say world remove
126:41 - world this sling it would keep the sling
126:43 - just remove it from the world and I
126:45 - could add it back in that is that's
126:46 - actually and then I could actually just
126:48 - reuse the same bird but oh there's
126:54 - another big problem yes before I add the
127:03 - images there is kind of a big bug here
127:05 - that it really should fix which is that
127:06 - when I put the new bird in there's
127:10 - actually another Bert that old bird is
127:13 - still here I'm just not drawing it
127:14 - anymore maybe I want it there right it
127:16 - should actually is there or maybe I
127:17 - should remove it but probably before
127:20 - right now I should just say world dot
127:21 - remove bird body world and it's always
127:28 - it's the other way around so I believe
127:31 - this
127:32 - right let me let me see if I can show
127:34 - you what I mean right I'm going to shoot
127:38 - this over there now notice this is here
127:40 - it's going I'm not gonna see it anymore
127:42 - but I'm gonna try to shoot it right over
127:44 - there again see how it hit the invisible
127:46 - thing so let me remove it and that
127:49 - should that should fix that so if I do
127:51 - this and it's there and then I do this
127:54 - again oh I do this again anyway you can
127:59 - see it's gone it's removing it so there
128:01 - are different ways that I could approach
128:03 - this assignment in the chat is pointing
128:05 - out that instead of just making the body
128:07 - be of the slingshot null I could
128:09 - actually remove the slingshot
128:11 - I could reuse the same bird by just
128:13 - resetting its position so again you
128:16 - might make have a different take on this
128:17 - refactor this in a different way but
128:20 - I've got the basic idea down now I want
128:23 - to start adding images so what I've
128:24 - pulled up is I have my coding train
128:26 - characters um let's see this makes sense
128:29 - what's what would be good oh we should
128:31 - definitely use the this dot for those
128:34 - like rectangles and then maybe what I
128:37 - might have an angry bird this looks kind
128:39 - of angry or this maybe we'll use this
128:40 - little this little square thing to fly
128:43 - okay so let's grab the let's so let me
128:49 - let me edit these files a little bit
128:51 - be right back cuz there I couldn't do it
129:01 - in Photoshop and then I could like
129:02 - actually trim it to the edge but I'm
129:09 - just gonna do this myself good enough
129:14 - I'm gonna call this the dot I'm going to
129:21 - do image size let's make it like 75
129:31 - pixels high so 34 by 75 okay oh did I
129:38 - cut off its top I think I did I totally
129:41 - did
129:50 - there's a function in Photoshop like
129:53 - trim that I could use just lazy
130:01 - 75 no no I know I know I know
130:09 - 30 75 33 by 75 is the dot
130:15 - I guess I'm cutting off its top I don't
130:17 - care
130:18 - dot and then this will be my bird oh but
130:22 - I should have something's worth circular
130:23 - that's fine
130:29 - this should be oh you know what I can do
130:32 - oh I have the emoji ones that's what I
130:36 - should be doing
130:38 - actually I've a 30 by 30 so let me just
130:41 - get this I'm changing my mind let's move
130:49 - this over here
130:56 - oh this is already 30 by 30
131:06 - and so wait let's use let's use this the
131:13 - semicolon let's look at the emoji one
131:18 - this is what I meant - let's grab this
131:20 - one and let's do the oh maybe this will
131:27 - be good this will be good let's use this
131:35 - one or is the emoji one's gonna be
131:40 - better
131:43 - these are a little simpler no I like I
131:48 - like it being a more of us let's do this
131:55 - is that the emoji one is the full-size
131:57 - yeah so there's this is good I guess
132:06 - because it's
132:21 - sorry I'm like go spending way too much
132:23 - time with this use the dot for the bird
132:27 - upset blocks yeah and let's use the the
132:31 - equal sign yeah okay this is good
132:44 - [Music]
132:55 - okay is this think 100 100 is fine
133:13 - oops
133:27 - ah
133:39 - nevermind I give up
133:41 - where was that
133:55 - why-why-why I'm losing totally I'm like
134:01 - obsessively losing my mind here it's
134:03 - fine okay go back here thank you
134:16 - yeah clearly all right so I have all of
134:24 - these coding trained character image
134:27 - designed by Jason Haglund thank you for
134:30 - that I'm gonna use the dot for the bird
134:32 - it a little smiley dot and the angry
134:33 - equal-sized sign for the block now this
134:36 - block is square I think not rectangular
134:39 - so I'll probably need to do is upload
134:42 - these images to the web editor so the
134:45 - way that I will do that is by just going
134:47 - over here doing add file and then I can
134:51 - just drag these two images in you know I
134:54 - could put them in a folder or something
134:56 - but I'm and then we can see they're
134:57 - there so now I have dot PNG and equals
135:02 - PNG and you know they're there's
135:05 - probably a thoughtful way that I could
135:07 - think about what if I want different
135:09 - blocks to show different images but I'm
135:11 - just going to in a very simple way use
135:13 - the preload function of p5 I'm going to
135:16 - have a variable called dot image and a
135:19 - variable called box image and I'm going
135:23 - to say dot image equals load image dot
135:27 - dot PNG and box image equals load image
135:31 - what was what does it called equals dot
135:34 - PNG and let's first just change the bird
135:40 - to show instead it doesn't instead of a
135:45 - circle and that a fill I'm just gonna
135:47 - say image image and then I'm what was
135:50 - the name dot IMG Lulu and then I want to
135:56 - say image mode center and then I'm going
136:02 - to have to say this this dot R and this
136:05 - should be the start time
136:06 - - really if I'm thinking about that as a
136:08 - radius so there we go so we can see now
136:12 - I've got the little dot it's so tiny I
136:15 - should make it bigger what size did I
136:19 - give it I gave it the size of 16 I think
136:24 - the image is actually a hundred by 100
136:26 - so I could do this that's like very
136:27 - large but so let's make it 25 so this
136:30 - will be a good start
136:31 - and I think what I would prefer to do
136:34 - also is draw the slingshot behind the
136:37 - bird okay so now I have my dot there it
136:40 - goes now I just need to replace those
136:42 - blocks so the boxes when I make the box
136:46 - I am in sketch j/s when I make the box
136:50 - I'm giving them an x and a y and oh no
136:54 - no no where's that I'm giving them an X
137:00 - and a Y and a width and a height let's
137:03 - just let's just make them square right
137:05 - now I could have an image that's not
137:07 - square so they're much larger now but
137:10 - that's fine and then what I'm going to
137:13 - do is in box let's change it to image
137:18 - image what did I call it box image there
137:24 - we go oh we've got a problem so the
137:28 - ground is is messed up now because the
137:31 - ground is also the equals so and we also
137:35 - to say image mode center then the ground
137:38 - is this like smooshed equals but guess
137:41 - what not to worry
137:43 - I used inheritance oh I'm so happy I
137:45 - used inheritance and I could just
137:47 - override the show function and there's
137:50 - probably a more thoughtful way I could
137:51 - do this but I am just going to put this
137:57 - all in here and I'm just going to put
137:59 - this back to rect and back to this and
138:04 - now there we go
138:07 - so I now here we go
138:13 - I have my Angry Birds clothed with p5
138:18 - and madder Dutch a s and I'm gonna pull
138:20 - this back release it oh wow wait why did
138:27 - it make it so small so one thing I
138:30 - really I really need to do a lot of
138:32 - refactoring on this because I did
138:36 - something very silly here where I remake
138:38 - the perky but I use a different size
138:42 - which having a hard-coded value here is
138:44 - pretty bad all right let's try this one
138:47 - more time
138:49 - not this sound No ah no stop ah what's
138:53 - going on
138:58 - are you hearing music right now no okay
139:06 - wait wait wait wait wait I have an idea
139:08 - I have an idea let's add restitution so
139:13 - I'm gonna go to the bird and when I make
139:15 - the body I could also add some options
139:19 - for example one option might be
139:22 - restitution which is like elasticity
139:24 - let's give that a value of one value of
139:32 - 100 wait a sec let's look it up in the
139:39 - documentation body restitution
139:51 - always positive and in the range 0 to 1
139:55 - a value of zero means the collision
139:56 - would be a value would be perfectly
139:59 - inelastic and no bouncing would may
140:02 - occur a value of 0.8 means the body may
140:04 - bounce back with approximately 80% of
140:06 - its kinetic energy so let's try giving
140:11 - it a value of 0.8 Oh guess what I can
140:16 - make up this variable called option
140:18 - until the cows come home
140:20 - but if I don't actually put it in
140:22 - creating the body it's not gonna make
140:25 - any difference so now let's see how that
140:27 - changes things there we go it's kind of
140:32 - like Jenga we're just like slid out a
140:34 - little bit oh wait a sec okay oh the
140:39 - things have gone really off the rails
140:40 - here this is supposed to be twenty five
140:42 - and let's let's let's let's be a little
140:46 - bit more kind let's give it point five
140:48 - and let's also let's also go to the box
140:52 - box and let's give that also a
140:59 - restitution okay here we go this is my
141:04 - Angry Birds game made with PETA - Mater
141:08 - Dei s and coding trained characters
141:17 - [Music]
141:29 - thank you for watching this coding
141:31 - challenge I hope that you make a much
141:33 - better version of this with your own
141:36 - characters your own sounds your own
141:37 - interaction and maybe you'll even you
141:40 - know you could just imagine all the
141:41 - possibilities here so thanks for
141:43 - watching and please please share with me
141:45 - what you make check the link in the
141:47 - video's description for the page on the
141:49 - coding train calm which will have all
141:50 - the code for this as well as a
141:52 - processing version of this hopefully
141:54 - which is a as well as a place where you
141:57 - can submit your own version ok thanks
141:58 - very much and see you soon goodbye ok
142:08 - what's 110 that was an hour right but I
142:11 - had to stop a bunch of time so this will
142:13 - be less night that's all I'll give the
142:15 - birds some math add some friction yeah I
142:27 - should add friction give it math all
142:29 - those things re Aman says mom told me to
142:35 - sleep as soon as you finished go to
142:38 - sleep go to sleep
142:39 - re Aman alright this is done thanks for
142:44 - watching this Angry Birds coding
142:46 - challenge so now the stream is working I
142:48 - feel a little better in congestion feels
142:50 - even a little bit less and yeah let's
142:55 - let's I don't think I'm gonna do
142:58 - anything more with this stop I just want
143:04 - to play it file save so if you want this
143:12 - code you can just go directly to this
143:15 - URL coding train sketches this thing so
143:20 - I don't even have to upload it to github
143:21 - it will be there ground should be green
143:24 - yes and I'm gonna say I'm just curious
143:30 - full yeh alright here we go oh wait I
143:37 - need to do some thumbnails
143:41 - so let's so let me help
143:47 - Mathieu with a thumbnail although
143:52 - honestly I think is probably better just
143:54 - to have some green backgrounds and we
143:58 - can screenshot this marching cubes is
144:01 - definitely something I want to do
144:46 - okay that's good enough I should really
144:51 - probably do that while I'm not
144:52 - live-streaming
144:53 - it would make more sense oops p5 is not
145:06 - required for the matter library by any
145:08 - means it's just I'll kind of like using
145:11 - it matter has its own rendering okay
145:15 - here we go
145:25 - what's
145:35 - wastes like what is going on oh this is
145:39 - bad cuz I have to click into it first
145:43 - for focus and then it gets a mouse
145:46 - released no what's going on
145:51 - it broke am I losing my mind here did I
145:55 - mess up the code or does it just not
145:58 - work that's weird so why did it not work
146:06 - in full no I just like losing my mind
146:14 - does it have a problem once I do this no
146:17 - I was just losing my mind
146:26 - shouldn't you appropriately crop the
146:29 - square probably
146:38 - Oh something is wrong it went off the
146:41 - edge because the ground of the gopath
146:44 - hold on
146:45 - something is wrong here oh the square
146:54 - wasn't cropped let me fix that I didn't
147:04 - realize that this image is not cropped
147:16 - so and now it's actually what is it it
147:26 - is no didn't I just didn't I just crop
147:34 - it Oh somehow I didn't save it why
147:43 - didn't I just did that crop save so now
147:47 - thank you it is 84 by 100 so let me go
147:54 - here unfortunately this isn't going to
147:56 - make it into the video equals let me
148:03 - delete this file add file wish I had
148:11 - noticed that and then the boxes are
148:19 - actually 84 Simon is asking are the
148:27 - coding trained characters available I
148:29 - will make them available so where the
148:37 - boxes 84 so this is gonna be more
148:44 - elegant now yeah that's why they were
148:48 - like wider still they're acting
148:51 - super-weird
148:53 - do I have a mistake or is it just really
149:00 - not cropped at the bottom yeah I think
149:03 - it's right it's just awkward gifts the
149:13 - batter dot body set mass body body mass
149:16 - times 4 can I just do this this stop
149:27 - body x equals 4 no dumbass maybe not
149:39 - [Music]
149:42 - matter dot body set mass body this stop
149:51 - body just stop body this dot body dot
150:00 - mass times 4 oh yeah I was good
150:14 - maybe I should do a little interstitial
150:19 - here
151:15 - sorry interrupt I'm about to wrap this
151:17 - video up but I want to show you two
151:19 - quick improvements before I finish
151:45 - the first one is when I the first one is
151:50 - when I loaded my coding train equals
151:52 - character it was a square image and
151:54 - there was actually a lot of additional
151:55 - extra space on the on the width and so
151:59 - there was some funny physics happening
152:00 - that looked a little bit off so I've now
152:02 - actually cropped and re-uploaded that
152:04 - image so that it's 84 pixels by 100 the
152:07 - other thing that thanks to a suggestion
152:09 - I increased the mass of the bird's body
152:14 - so the the matter digest will give
152:17 - element some sort of default mass
152:19 - probably based on their size and their
152:21 - geometry and I just take the bodies and
152:24 - set its mass to its own mass times 4 and
152:27 - so now if I were to play my game one
152:33 - more time let's zoom in on this just
152:47 - been coding func okay oh it was supposed
152:51 - to be a loving scene they're just
152:53 - hugging each other as they knock into
152:54 - each other I don't know does that sound
152:56 - weird okay back to the end of this video
152:58 - I should just finish the video right
153:05 - there never mind about this back to the
153:10 - end I'm just gonna finish it up right
153:11 - now
153:12 - so this is my version there are so many
153:14 - flaws to what I've done here in terms of
153:16 - how I've organized the code there's like
153:18 - weirdness and the physics I haven't
153:19 - really been so thoughtful about the
153:21 - design the whole slingshot mechanic it's
153:23 - kind of off so there's a couple things
153:25 - you could do from here number one go to
153:26 - the coding train comm find the page for
153:29 - this challenge the source code will be
153:30 - there as well as any other supplementary
153:32 - links and you can submit your own
153:33 - version maybe you just want to improve
153:35 - the way I wrote the code to make it
153:37 - better organized so that people could
153:38 - see that maybe you want to make your own
153:40 - delightful design of a scene maybe you
153:42 - have a totally other game mechanic and
153:44 - idea for how the physics of this world
153:46 - should work maybe you actually want to
153:47 - build this out to be you have more
153:50 - features and levels and score there's so
153:52 - many possibilities so make your own
153:53 - version of this you don't need to use p5
153:56 - you don't even need
153:57 - matter these kind of concepts will
153:59 - extend to other drawing libraries and
154:01 - game engines you know phaser might be
154:03 - one that you would should take a look at
154:04 - even perhaps up you can check out the
154:06 - video from cats mall about using phaser
154:08 - and code pen that's on this channel and
154:10 - I will see you in a future coding
154:12 - challenge thank you look bye there's
154:20 - other properties that need to be updated
154:21 - and set mass handles it okay puppy pile
154:30 - bust that Walter Inception yeah okay
154:36 - I'm which one twenty I said it wasn't
154:39 - gonna do a three hour livestream today
154:40 - and somehow I managed to do that I
154:42 - definitely have to go so what happened
154:48 - to the sound oh it's just slow alright
154:53 - everybody thanks for tuning in to this
154:55 - week's sniffily episode of the coding
155:00 - train brought to you by the common cold
155:05 - my nose is red my head hurts
155:08 - and yet I'm here coding for you I won't
155:12 - really make this data in api's of course
155:14 - it's going to happen YouTube thank you
155:16 - for your support in making this course I
155:20 - hope you make you all of your own
155:22 - versions of this I would like to release
155:25 - these images and Creative Commons
155:28 - non-commercial yeah just like anyway
155:33 - so thanks for tuning in bye everybody
155:38 - [Music]
155:52 - wait a sec I haven't left yet I haven't
155:55 - thought there was a question in the chat
155:56 - our coding challenges are Wednesdays at
155:59 - the same hour so Wednesdays at 10:30
156:02 - a.m. Eastern Time is my regular timeslot
156:06 - I can tell you for sure that two weeks
156:09 - from today I will not be in New York so
156:11 - there will be no coding challenge when's
156:15 - on that Wednesday oh I have something
156:16 - else to announce I forgot about you I
156:19 - will mention a week from now I kind of
156:22 - have a conflict in the boarding so I'm
156:24 - hoping to still do Wednesday but a
156:25 - different time so stay tuned about that
156:29 - so the way to find out yes unfortunately
156:32 - by subscribing clicking alarm bell you
156:35 - know you don't have to but if you feel
156:37 - so inclined subscribe and click the
156:38 - alarm bell because when I schedule it
156:40 - you'll get a notification and I usually
156:42 - schedule the Wednesday time the day
156:44 - before the night before some time on
156:46 - Tuesday but you can feel mostly
156:48 - confident with some small exceptions
156:50 - that Wednesday 10:30 a.m.
156:51 - I forgot there's another thing I want to
156:53 - mention which is that I will be at the
156:55 - IO Festival which is a festival June 3rd
157:00 - to fix Oh I'm standing in front of this
157:02 - June 3rd to 6 2019 that's coming up
157:05 - pretty fast
157:05 - and look there I am Daniels Schiffman
157:09 - creative coding I'm on a mission
157:11 - apparently I'm trying to read this
157:13 - myspace really bad I need to I'm so I'm
157:18 - not giving a conference talk at this
157:19 - because that's not something I'm very
157:21 - good at I was just gonna do like a 45
157:23 - they have a 45-minute time slot I'm just
157:25 - going to do some live coding so if you
157:27 - have any ideas for what might work well
157:28 - in that context with a live audience I
157:30 - know other people have actually done it
157:32 - I do this stuff all the time here on
157:33 - YouTube but it's a little different
157:34 - performing so to speak in front of a
157:37 - live audience it's not something that
157:38 - I've really done so if you have any
157:39 - suggestions about what might be what
157:41 - might work well let me know the coding
157:44 - train what's your twiddle and what
157:46 - your Twitter handle at Schiffman or at
157:48 - the coating dream thanks everybody
157:51 - let's let's take you out with the polar
157:54 - to cartesian song oh and if you want to
157:59 - make remix versions of music things
158:01 - using my voice I really really enjoy
158:04 - that oh I was gonna make a video about
158:07 - how to contribute to the coding terrain
158:09 - comm website I have to go I have to go
158:12 - next time I'd give them the summer stuff
158:14 - I didn't get to oh well
158:18 - [Music]
158:27 - I'm gonna say once again coordinates
158:38 - [Music]
158:42 - coordinates
158:49 - [Music]
158:59 - auto-tuned and the internet will fix
159:01 - that for me
159:03 - [Music]
159:10 - coordinates
159:12 - [Music]
159:28 - [Music]
159:44 - [Music]
160:13 - [Music]
160:33 - this start this start the start that
160:35 - this start song never forget the vista
160:37 - miss somebody composed that song for me

Cleaned transcript:

good morning I almost forgot to unmute my mics welcome if you hear a little nasally extra nasally sound if my voice is a little quieter if I have a little less c'est quoi vous enthusiasm the enthusiasm is deep in my heart I'm getting over a cold and actually now that I'm getting to speak I think it worse than I thought but I don't want to cancel today because I've got some momentum with this every Wednesday thing and I dunno as a matter of fact that the next two weeks are a little I'm gonna try to keep this every Wednesday thing but I know for sure two weeks from now I won't be here on Wednesday and I'm not so sure about next week yet but I have some plans of extra bonus live streams so today might be a bit of a shorter at the so too you know very minor minor just a little bit of a cold it snowed here we had a snow day I was exciting thanks to everyone who indulged a little extra annoys loop video where I walked the streets of Brooklyn and talked into a camera I was wearing a baseball cap trying to channel my inner youthful youtuber I don't know how well I did but it was an attempt so I've got some what I view as exciting things to talk about and show too and I also just want to kind of reset a little bit because I think I've been obsessed as you may have noticed noise different noise algorithms classic Perlin noise simplex noise open simple noise and I've been doing a lot of videos about that I've been looking at techniques for looping noise by adding extra dimensions and using polar coordinates it's been glorious it's baby time for me to take a break from that although there's a little time towards the end of today I would like to apply the looping noise to the terrain code which is something that I said at the end of my video that I would do if I don't get to today I'll certainly release that code people are telling me the stream is very laggy oh all right I've been talking all this time and no one has been able to hear me so I do see here in my in my live control room YouTube live control room that I'm getting bad quality okay let's try restarting okay now it's fine I mean I'm tempted to just restart here let's restart it's fine now okay all right so now it was about art but apparently it's where he did anybody catch anything that I just said I suppose hopefully when this gets published Aggie the actual words that were coming out of my mouth will be heard on the archived version of this video is that true okay so all right let me just at least let me just repeat myself I don't know what else to do but repeat myself which is not a good idea considering the state that I'm in I have a day it's called a box of Kleenex mmm decoding train today is sponsored by the common cold it makes your head congestion your your brain is in a fog you shouldn't be livestreaming on youtube I I'm a little bit sick I thought I actually have felt when I woke up this morning I felt pretty good and I haven't been doing very much for talking very much it just started I realized I was a little shaky but I am going to proceed with today this will be a bit of a shorter stream than usual so that I don't overdo it but I wanted to make sure that I came here because I've got important things to say and important well I don't have anything important to say I've got things to say I've got stuff to code common cold you're not gonna get me down ah lag comes again alright now some of you are experiencing lag I almost the part where the words come out of my mouth there is a lot of lag in between there there's like a little loading animation that's in front of my eyes as I think and attempt to speak and I'm gonna go check the live control room it still says bad I'm tempted to restart why don't I just restart should I just restart I should probably start I'm getting mixed and getting mixed signals from the chat all right okay in theory I am back now I am going to look at my we'll see how this goes the good news is on everything to disk so nothing is lost and until the computer decides to die I see that people are saying still lag so doesn't seem to have corrected itself which is somewhat unfortunate let me just put on the waiting music sometimes takes a minute the question is is this on youtubes end or is it on my end it could be it could be the internet connection that I'm using here at NYU I am not streaming through WiFi and streaming through the Ethernet cable plugged into the wall line so but I do have like a lot of things are lagging I've got suggest drugs so maybe this is all for the better I could come back later today it's very hard for me to do actually this will be fun let's try something let's try a little experiment here okay most of you probably can't see this but I'm gonna attempt to run this internet speed test what I did is I just used in open broadcast studio I'm doing like window capture to grab the browser window on the computer that I'm streaming from you can see my IP address now I'm broadcasting that out and let's see how this goes so I don't know if you can see this but it looks like I'm getting a download rate of about 430 megabits and here comes the upload this should be good for streaming let's check my it still says bad ah I mean come on look at that can you see this this doesn't look like it's my on my end right oh all right so now it seems to be fine okay now it's working like okay well let's proceed then shall we I was kind of hoping in a weird sort of way I was hoping it was just gonna get worse good I think maybe I should be taking a break I know I know you're here to watch this live stream and you don't want me to be secretly hoping that the whole thing turns off so I can go downstairs and rest but if I'm being honest that's a for a moment that's how I felt okay so looks like my speedtest seemed to fix things oh it says good now okay so my YouTube live control room says good let me remove this window capture and I think I'm actually just going to delete that and I think I'll get started I've got going here there are teams of people all working 24/7 rotating shifts of engineers curriculum writers as designers makeup hair costume design just to make this happen right a person named Dan Schiffman standing here talking to you live on the Internet all right he at least cover some important announcements I can't even hear myself speak that's how congested my head is it's not good all right browser and I have some announcements to make first congratulations to the mm oh I like I'm talking to the camera and then I turn over to refer to this thing that I have here and it just all I see is lag lag lag lag lag lag lag lag lag lag lag lag lag in it so that's good let me check the slack channel I bet it's encoding problems not network alka right i bets it's encoding problems not network so we're there would that be happening like you mean like on the OBS level or like you oh it's back the PC already isn't it well isn't it possible that this is a problem on youtubes end I mean nope okay on the bottom right of OB s I have a very green icon I have CPU 10.3% 30 frames per second and kilobytes per second 5100 70 people are telling you already view stats there's more information there okay view so I'm seeing view I don't see something just called stats here here I'm gonna share with you all I mean you can't really see this cuz it's lagging but I'm gonna show PS window let's see if I can do that a little behind the scenes here today on the coding train oh now it's ret OBS oh this is gonna be crazy uhoh what have I done I guess I can't really share with you this without it yeah it's fine it's just got a nice little oh why is this here this is OBS it is red now if this was green before that was green before I did this view stats there we go ooh okay now it's bad now let me share this with you oops sorry everyone hold on there we go okay so I said that's the OBS stats okay I I'm now streaming again I've got the stats from OBS up here that you can see I don't have the chat open give me a second to get that I mean could it mean I can't imagine that having the chat open on this computer was somehow causing a problem going to do that every single live stream okay interestingly enough quality seems to be good now interesting okay here's the thing oh you know I'm recording two discs also okay well I am going to hide these windows I am I have the chat up I have this up okay here we go attempt number I don't know what at this point tip number three I guess uhoh I see a racy read we just have a look here we're dropping some frames Network yeah it's the network okay black all right everyone ah Alka brings up a good point Alka brings up a good point which is that there I think there's a backup ingest server on YouTube that I could be I don't know if you are seeing this but I just switched to the yeah cup ingest server it's a configuration and let's see maybe don't blow your nose into the microphone today's comment alright since I've switched to the backup server has that changed anything I don't know what time what where you are in the timespace continuum so if you're giving me comment bad I need to know that you are hearing me talk about the backup ingest server and saying that it is still bad yeah okay thank you me I am take a look at oh yeah that's a lot of dropped frames Network okay so what I guess I could try just coming back in like a half an hour maybe I'll just do that how about we try that if I could just go on and do some stuff and you will only be able to hear and barely be able to watch I'm not sure what to do I got to make it just some music help me think so I'm hearing from some folks that it's gotten a little better I do see right now that I'm only getting I'm only having 1/3 dropped frames which is pretty good so let me try let me just do a few things and I'm going to now ignore that this problem is happening and I and I'm going to turn off this monitoring and I'm going to proceed ping test okay hold on I'm gonna try one more thing all right so thanks for your patience everyone this this isn't going very well but I'm gonna I'm gonna just try to give this like 15 or 20 minutes to do some content and see where we are maybe my voice will start to get worse and I'll need to stop maybe the internet won't have fixed itself and I'll need to stop but me just standing here doing nothing seems kind of pointless so and just in case you're suggesting oh why don't you restart blah blah blah check your network connectivity restarted twice network connectivity is good there's dropped frames from OBS seems to be a network thing who knows on what end where but such is what's happening okay so I wanted to make a couple spins number one congratulations to the 2019 processing foundation fellows check out this medium article on medium.com slash processing foundation to see all the wonderful projects that are being funded by the processing foundation this spring and so I would love to tell you about all of these but I'm just going to scroll through them like I've just done and then I'm gonna close this window seems to be working fine now I also wanted to mention that processing foundation YouTube if you are not a subscriber please subscribe to the processing foundation's YouTube in particular there is a video that just came out today which is a three minute recap of processing Community Day in Los Angeles and to learn more about the processing foundation and its mission and initiatives and community day please check that video out and stay tuned now you let me actually click here to processing foundation's channel you can also check out the the livestream archive you'll notice that it's seven and a half hours because this is just an archive of all the talk from that day but matcha who I work with on the coding train and I are working to put together edited versions of all the talks which will be posted soon sometime in the next few weeks hopefully even so stay tuned for that please subscribe to the processing foundation YouTube consider also you know if you have the means and are able to if you can support the work of the processing foundation by becoming a member once a year I'll do like a specific fundraiser on the coding train for the processing foundation but prostate validation is a 501c3 tax exempt US nonprofit supported by some grants that we've been so lucky to get supported by the New York City Department of Education cs4 all initiative and probably almost more primarily supported by people you the viewers perhaps of this channel the the people who use processing p5.js and if you want to become a member you can go to here alright right now I'm just like blah blah blah blah blah blah to see if people are still saying lag really all I'm saying now the conference's look stable okay so I wanted to mention now I have another thing I want to mention which is so you may recall that I recently published coding challenge number 137 for D open simplex noise loop I've talked about Perlin noise classic Perlin noise from 1980 simplex noise from 2001 there's actually a different improved Perlin noise algorithm also around 2001 that was separate from simplex noise I believe I've gotten some of this right gotten some of it wrong I've conflated oversimplified some things one of the one of the mistakes I certainly made in this video was being too I talked about moving a loop looping noise in three discs by moving a plane along like the path of a torus which isn't exactly what I'm doing because I'm actually using four dimensional space to loop but so there have been some really nice threads and comments explaining some of the things I got wrong in the comments of the video so I highly urge you to check that out I just wanted to highlight this one particular comment from Ralph Tootsie who writes noise is indeed a confusing topic so many terms I will try to clarify for those who are confused there are many kinds of noise value gradient whirly Gabor Gabor gobble this is one I have not heard of him have to look that up wavelet etc when the algorithm uses a random number generator it is probably value noise the Hugo Elias article even though it's titled Perla noise is actually value noise so that's value noise is when a bunch of random numbers are picked and sampled and interpolated and smooth value noise okay that's a helpful clarification when the algorithm uses gradients the vectors on the grid points it's called gradient noise the most popular gradient noise algorithm is Perlin noise there are two iterations of Perlin noise the first is classical from version from 1983 and I believe this is the algorithm that's currently in processing and p5.js when you call the noise function then later Ken Perlin improved it by addressing a few issues to make what is known as improved Perlin noise so we could actually look this up improved Perlin noise and we would find that here I believe this is improved noise reference implementation this is from a corresponding SIGGRAPH 2002 paper which you can find right here improving noise and then let's finish this comment out then later Ken Perlin in photo then in 2001 Ken Perlin published simplex noise which is different from the two other perla noises but still is gradient noise so I assume that the first classic version and the improved noise are both operating I see that the lag is kind of happening again that the both of those are operating the gradients are happening on a rectangular or square grid it's noise on a symplectic grid or a grid of equilateral triangles and so there's an article about this that the author of this comments posts about improved perla noise which I will click on now and you can find that here so this is also a really nice reference and it was nice while I was working but it seems to be laggy again alright so I'm getting some stuff off my chest even in this lagged states be interesting to watch this back later I love how the YouTube chat moderation is smart enough to automatically flag comments that say subscribe to a particular channel that shall remain nameless in addition to just you know inappropriate language and that sort of thing okay sir please restart your Mac I have tried that twice I don't think that's gonna do anything so I think I am NOT going to restart my Mac some people are saying it's stable I'm gonna look at the controlroom bad we are not receiving video day it's so funny that I have this cold because it really just it's so apt it just couldn't be a better match to lag the network lag and the head congestion it just feels like the same thing that's all mixed together so it's kind of appropriate there's a bad lag problem all right oh no what have I done what have I done I'm gonna close don't make me pull this car over I will close the chat window and not look at it for the rest of the livestream behave yourself well I like that the audio is not lagging because at least you can hear me and in terms of dropped frames alright let's move on to the next topic of today we're just gonna keep going and I'm probably gonna stop at about probably gonna stop in about 1520 minutes if the lag keeps going I there's there's one thing that I wanted would do regardless of whether I'm live streaming I could stop I'm just as really this kind of like practice so let me talk about that a bit okay then I will take a break and come back a different time maybe I do want my free Friday morning no that would have been good oh boy Wow now it says it's not even receiving any data like it's completely stopped streaming yeah Wow oh it's back but bad the chat is really out of control all right I I'm sorry I'm gonna minimize the chat I it's I will take a peek at it I'm gonna just keep the slack channel open the slack channel is for members of the coding terrain through YouTube or through patreon but I think to assume that my record to disk is working and I'm going to talk through some stuff then I want to think through and begin working on so I would suggest you maybe go do something else but if you want to stick with me here I'm gonna I'm gonna probably be here for a like hunger to talk through some of this stuff okay I don't know that this will actually be a separate video but let's give this a try hi it's it's me dan from the coding tree I mean who else would it be I'm gonna just tell you about something that I'm working on that's slowly over time on the channel out of order I'm trying to work through an idea for a new playlist of videos if the idea is to hats and bolt skills around working with data and API is in JavaScript both clientside and serverside and I hope that this can be supported for people who are teaching courses on information visualization machine learning data data visualization data art self traffic people who are teaching for more fully fleshed out courses that involve project making and and critique and dialogue but and and so maybe those people that I'm imagining in my head who are teaching these courses could use some video resources they could point their students towards there are somewhat generic and will give foundational skills so there's a github repository hopefully by the time if you're watching this this will look totally different I am working on a lot of ideas for this it's at github calm slash coding train slash intro to data and api's there is a bit of a description here and a bit of an outline so I am going to be working on this outline and making adios out of order and then kind of synthesizing stuff together and making an intro video and hopefully by the end of April beginning of May the whole thing will be completed so that's what this playlist is things are gonna appear out of order give me feedback I might reduce some stuff add some stuff but I would say the central place for you to give me feedback is to come over here and go to the issues and I'm certainly gonna leave comments in this video but go over here to the issues and post your thoughts and ideas if you are a teacher who teaches this stuff and can give me ideas and thoughts about what would be specifically helpful that you would love to have as resources to point your students towards that's in particular what I'm looking for okay thanks very much and I'll see you in this playlist for some amount of time should you choose to be here if I okay all right ah boy my watch just told me what four times five is okay so I did that that's good I probably should have mentioned the learning link check but check I have I'm looking for a message here it actually is telling me that the stream rate is good right now which is kind of unbelievable I'm hesitant to check the chat and I know that this could be fleeting I just want to see something got it got it got it got it so anyway I should also mention that this new playlist that I'm developing is supported by YouTube itself through the learning incentive grants so this is good like looking back into my email to see what I'm supposed to say allowed to say okay um I I kind of want to like check the chat again if I see this black channel that it's stable dare I pull up the chat so I this will fit in somewhere in narrative see totally figure that out yet so what I'm gonna attempt to do right now is just do a short video tutorial like no more than 10 minutes there's gonna be 45 minutes I'm sure just about the function fetch okay let me make this bigger okay oh hello to Egypt that's kind of amazing to me that there are people watching in Egypt thank you I'm armor if I'm apology oh it's red I see red I see red that's not good okay I'm gonna just keep going with hello in this tutorial I am going to talk about the function fetch so the function fetch the JavaScript function fetch which is a JavaScript interface for accessing and manipulating parts of the HTTP pipeline whoa I hold on it starting over hello in this video I am going to talk to you about the function fetch and this is a building block a building block for many of the examples that I am going to demonstrate to you and show you how to do throughout the course of these videos I think well I like that it's okay at least it's lagging so that nobody can really see what I'm doing anyway hello in this video I'm going to talk to you about the function fetch and this function fetch will serve it as a building block for a lot of the different examples and other topics that I talk to you throughout this series working with data and api's so what is fetch okay so it's a global method that you can call in javascript in the browser so you know maybe there are some browsers that don't yet support fetch and this is a consideration as you deploy a project to a large worldwide audience but for right now we can kind of make the effect is something we can write into our JavaScript code and fetch will fetch something it will get us it does this HTTP hypertext Transfer Protocol thing to request data or actually you can use fetch it seems counterintuitive to send data as well so uh okay hold on I have to I have to fix my whiteboard hold on I have to fix the whiteboard and take off the drop the message about all the dropped frames okay okay coding train today is sponsored by the common cold I should have muted my microphone but I decided to not leave my microphones you could hear the sounds the authentic sounds of the common cold one thing I should recommend is when you have the common cold consider trimming your beard because everything's gross with all gross all right let's diagram out let's talk a bit more about the function fetch fetch fetch is a function that you call by the keyword the function name fetch and you can give it more than one argument now the easiest way to use to give it one single argument and this is a path so it could be a path to our local file it could be our URL path and you're saying hey I would like this uh or this text data or this JSON data or this tabular data it's comma separated value file any kind of data you can fetch it optionally you can give fetch a second argument which is really like a bunch of configuration options so in the case where you actually want to use fetch to post data to what you want to do is go into the body and pull the data out in some format that you want and I've made I pre made I wrote a list here of the kinds of ways you can do that so you can get let might understand so maybe if you're just loading a text file you're loading a Shakespeare play it's in a raw text file or URL you could then ask for that data as text if it's JSON data which is probably going to be the primary example the primary scenario and almost all of these examples throughout this um you would ask for the data as JSON blob is super interesting and actually I think the first example I want to demonstrate to you today is use blob blob kind of means I just want a blob I just want the binary just what the data itself so for an image that works really well because I just want like the the binary data of the pixels give that stuff to me that's a blob there's also form data which you can imagine if there's some if if you're fetching date if you're ma'am hmm I don't want to say about that oh there's also form data and array buffer and those might be some scenarios that we look at at some point also but wha how did how does this whole process happen so it's a twostep process the first process is to give the path then the body comes back and then you need to ask for one of these things and the way to to sequence these events everything in JavaScript with fetch happens asynchronously meaning you're waiting for something to happen and you'll get a callback an event but the fetch function works with something called promises and promises is a way of handling asynchronous events that's part of JavaScript es6 so if you've never encountered promises before you could pause this video right now and I have I'll link you to some other videos I've made about promises and some other resources and then come back but the key thing is that when when a promise is resolved when the asynchronous event is completed you then then you then it's funny that I'm writing the word then you can then ah this is making me crazy I'm just curious about that lag oh it's green it's green and by the way there are people I see people in the chat saying I can't handle all the lag please go do something else with your day this will be available later in archived form all sorts of stuff I don't want to give myself more room here or why with this way I don't want to start over now that have an idea of what I'm doing but whatever let me just at least go back here so how do you handle this asynchronous event how do you write code that you that acts on the data when it's voted and the way that that works is by using the keyword the function then and this is how you handle events with promises if so if I say fetch I give it say I have a local file that's an image rainbow dot JPEG I can say dot then and I can add a so when I this function here is going to be code that executes when it has finished loading the file the tricky thing here is I don't have the data ready in a format that I want so once it's loaded I have to write a function that then calls either blob or JSON or text in whatever to basically indicate what format I want the data to be prepared for me in and that triggers another asynchronous event so I can say dot then and here is where I can actually use the data so here's what I want to say for this convert the data to a blob which triggers another promise once it gets resolved then I can actually maybe show the image so this is the narrative to do this with these even newer keywords in JavaScript called a weight and async and I will kind of show you that really quickly at the end of this video because I might use that in some examples is the process fetch the path fetch fetch give it a path to your data image tags JSON etc wait for the response ask to prepare the data in or map that you want then get it in that format and use it it's read again let's write some code so I'm doing something which I haven't done very much on my channel oops hold on sorry let me actually open this stuff up okay let's write some code so I'm doing something that I haven't really ever done on this channel before come here I should say like might happen in previous videos let's write some code so I'm doing something that I do pretty rarely on this channel which I just have a plain index.html file and I'm gonna actually put my JavaScript in that file in a script tag then the HTML elements are here and there's no dependencies so fetch is Native you know I am using the most recent version of the Chrome browser so fetch is available to me in chin so I also happen to have in the folder hold on let me just pull that up I happen to have in the directory with the index.html file a image called rainbow JPEG and this image is a also happen to have in the same directory as my HTML file a an image file public domain image file of a rainbow so this is the file that I load with the fetch function so we can see there's only thing right now is I have an h1 element I have an any image element the source of that image is empty the ID is rainbow and I'm conflict so if I go to the browser hit refresh you can see I comp console.log about to fetch your rainbow and then it says fetch an image that should really say rainbow a rainbow ok so now what do I want to do I'm going to call the fetch function and I'm going to pass it rainbow JPEG so let's just refresh the page no but how do I actually get the stuff so I said that I need to do then right the idea is now I'm gonna say then and I'm gonna deal with getting the stuff here so let me just put a function in here an anonymous function and in here I'm gonna say function has an argument I'm gonna call it response so this is the respond the wrong window and nobody can tell so let me put in an anonymous function and in that function I'm gonna say console.log oh and this function should take an argument that argument is a response I'm gonna call it response I could call it anything I want like I'm even spelling it wrong I could call it unikitty but I'm gonna call it response because that makes sense that's where when when the promise has been resolved when I get the stuff so let's just say console.log response let's refresh the page and look there it is so there's lots of information headers the URL all sorts of stuff in here and this is the body I need to figure out I need to parse through what's in the body of this response in a way that I can use and the way that I'm going to do that is with the blob function so now I'm gonna say return response blob and I'm gonna streamline this code if you're if you've done JavaScript programming before and you're like you're like why aren't you using the arrow syntax and I'm gonna streamline this code in a minute but I'm gonna kind of write it in the long winded way first so returning response dot blob means there's an S and I can chain them and I think what I'd like to do is put this down well it's fine I'm gonna save and I'm gonna write another there we go I'm gonna write another function let's actually call it a a blob here and let's say console dot log blob so now you can see this is called a promise chain I'm fetching the rainbow then when I get the response I'm convert blob of data and then let's look at that blob of data let's look at what I got wrong whoops the camera went off by the way if you're just tuning it now they working but I'm kind of pushing forward anyway just because I've got some stuff that I've got to do start getting on these videos one let's this is actually really just based on the the example put out by Mozilla themselves let's look at what they do in their basic fetch name oh I have to do URL create object URL that's right yeah okay so the true story here is that I can't just insert the blob drainage dot source image source expects a path really usually you put you know I could actually just put image dot source rainbow jpg and you know we're gonna see that rainbow there but that's not what I'm doing here I'm trying to line demonstrating this is a little bit absurd II I don't want to demonstrate the process of loading the file and so loading the data of the file itself so I need to turn that data into path itself and I think I can say that through URL create object URL and then image so I need to make a URL out of that blob so let's look at this and we can see there we go there's the image and I'm just just just so you see what it looks like I'm going to console.log image source and you can see that's actually well now hold on that's not what I want to do just curious what's this do No yeah whatever let me do this part again let me pull up the documentation page so we have that sorry so the truth that the story here well oh it's green again everyone I look over the screen and people can actually maybe see me the true story here is that I can't simply just assign a blob of data to an HTML elements source property so what I need to do here is I actually need to create a URL out of that data and in fact that's what's expected there I mean I could actually just put the string rainbow dot jpg since the files there and that's a path but that's not what I'm doing here I'm trying to demonstrate the fetch function so I'm loading a local file getting the data so see with that file and then turning it back into a URL path then I can insert into a Dom element so the way to do that is with a particular function called a create object URL so this function is a function that takes a file blob or media source object and creates an object URL from it so now I can say URL URL create object URL blob and now this is the whole process fetch the rainbow turn the return the body of the response from that fetch operation to a blob of data turn that blob of data into a URL and insert it into an image elements source attribute and here we go back to here alright so this is the whole process but let's do a cups here to streamline the code I could have written it the way I'm about to show you originally but I'd like to step through things incrementally so one thing I could do is I can use arrow syntax which is a shorthand way of defining a function instead of using the keyword function I can say equals equals greater than which oh right and then here I can also do the same thing with the blob so this is a way of sort of streamlining shorthand the function now another thing I can do is I don't actually need to have this console dot log so I can actually remove these curly brackets and write and and remove the return keyword and actually just write it like this so when this is a really nice shorthand any error that occurs throughout this entire process will end up down here so I don't have to have a handling thing for every single one and you thought this video was over let's make one more small improvement on this let's actually run this and make sure it's working but ohoh unexpected token error so I'm always making syntax errors when I'm writing code this this needs a parentheses right one more parenthesis there because oh and this should look like this ah there we go so this was all function I was so close that was way off when I just wrote there so hopefully I didn't confuse you there but sometimes I leave this nice for you to see the mistakes and kind of maybe correct them in your head while you're watching a go but so this is I'm taking the error and in fact cuz this is just one line of code I could also streamline this and get rid of this semicolon and now this is our final final result except for one more thing that I'm gonna do I'm gonna fetch the rainbow I'm going to turn the response into old I'm gonna get the blob I'm gonna insert it in the Dom element and if any error happens you do that and now I'm gonna refresh and look there we go we affect the rainbow now you know what fetch does just because I can I'm good as a little bit longer I'm gonna do one more thing if I wanted to I could write my own function called fetch rainbow find that function as a sync and I have a set of videos that goes through how this works in a bit more detail async sorry async function fetch rainbow and so you I'll refer you to those in this description of this video as well but basically what this allows me to do is call fetch using the keyword a wait so a wait is a keyword that allows me to write a sequence of that return promises without using dot vent so I can say just constant response equals fetch rainbow this is an asynchronous function so I need to say oh wait then I can say constant blob equals oh wait response blob and then I can just do these last two pieces right here and now we can see this is exam code but I'm using a weight and the async and await keywords so I'm writing an async function called fetch rainbow I fell I convert it to a blob then I insert it into the Dom element and let's just see if this works we still have the day all right so hopefully this video gives you a sense of what the fetch function is how you use it how it integrates with JavaScript promises as well as and weight keywords and this will give you the sort of foundational element for when fetch appears in all sorts of other examples and tutorials that involve from an API or some a local file or other things and in fact even though fetch is something that's just here in the browser I'm going to show you fetch in serverside program with JavaScript in know chess as well in a future video thanks for watching alright let me say I probably should have added the error handling here yeah let me see well it's still the lie I thought maybe the lag would sort of clean itself up yeah I've tried to fix um s snake ass did he try to fix it I tried to fix the lag many times I think it has to do with my cold frankly so let me I'm gonna and I wonder how I'm gonna add a little bit of stuff one more thing about writing your own asynchronous function using the async keyword this function right everything's happening asynchronously in here this is really just what's a syntactic sugar to make the way you write your code easier to read and follow but ultimately it's all about asynchronous events so this in fact by definition automatically returns a promise so I could just do something like say return yay right this is very silly but I'm just gonna return the word yay and then I could add if I wanted to check to have an event for when this finishes I can actually say dot then I can say response console dot log response and then I can also say dot catch go to another line please I could say dot catch and error console console dot log error so this is a very simple way of doing some type of error handling where I have now written the async the async function to use fetch to use fetch and when it's done I could return more information right I could actually design a whole sort of like protocol and do stuff here but I just want to see that it worked to console along that or if there was an error to console.log the error and I should get in the habit of saying console dot error instead of console dot log for an error itself okay to run this yeah and still works alright so this video hopefully what I've done now is shown you how to use the fetch function what is the fetch function what does it do how it integrates with JavaScript promises as well as the async and await keyword these are not the easiest topics to wrap your head around so you might want to refer to some of the supplementary material about promises and async await but this function fetch will serve the basis for so many other examples that you'll see throughout this series whether it's loading you know a CSV file of some tabular data it's loading a JSON file from an API URL you're going to need the fetch function and in fact the fetch function works you're a very loud piercing highpitched noise and in fact the fetch function also can be used in node now it's not natively available in nodejs like it is in the browser but there's ways of gaining access to it and at some point when serverside program to become something we use here as well I will show you that too so maybe if you're trying to think of an exercise to do take exactly this code use your own image could you load multiple images more than one can is that highpitched sound coming through I have to wait till it goes away I think someone's like wheeling furniture in the hallway and it's like squeaking it's like the highest pitched sound ever like oh I got snakes name wrong maybe it's just snake oh that high noise came through oh I'm gonna record the ending to this again I probably should just come back and do this whole thing see let's see what happens now maybe everything just needed to freeze and crash which is what just happened that was definitely an issue on my end where the open broadcast studio froze and oh this and I am not seeing the chat right now so I have no idea what's going on this has been quite a livestream day and I'm seeing green so I think the quality is quite good right now ironically maybe that's all we needed all right unfortunately the very bad news is when open broadcaster EO crashes it corrupts the recording to disk file so all of my like oh don't worry our recording goes to disk there must be a way to recover it because if I look at the file it says well notice our desktop it says it's 2 gigabytes so there's a 2 gigabyte file there it just didn't the video didn't get closed out properly so I'm not able to open it but maybe there's a way to recover it if anybody knows please get in touch how to recover a record to disk file that's corrupted wide open broadcaster vo crashes please let me know ironically everything was working now let me try to do my little n spiel thanks X Nick I'd be worth the bet tasteful toasty rights might be worth mentioning you can fetch rainbow then console.log Oh instead of yes yes that is true okay oh ffmpeg will let me recover the file with broken end of file okay that's good to know that'll be great if that works I will try that if para Tosh if you could maybe get in touch Daniel at the coding train com if you know any F ffmpeg commands that's my sort of publicly available email address for this channel that you can write to okay well I still see in green this is kind of amazing I thanks tasteful toasty I'm gonna mention that so this wraps up this particular video this is the code that I'm gonna leave you with with one minor change it was pointed out to me recently that I could even streamline this a bit further because if all I'm doing is taking the response and passing it through a function like console.log I can actually just reference the function itself and I can do the same thing with the error so this is actually yet another slightly streamed will hide way of doing this and in the end in JavaScript there's always one more way you could remove a tiny little bit of code but sometimes I like to write it out in longer winded ways to be really clear and explicit of what's happening let's make sure this really does work still works okay so this is the code I'm leaving you with it uses the fetch function to pull data from a local file but that could be a URL path it it then takes that file converts the data in the body to a Bob takes that blob and makes a URL out of it and inserts it into a Dom element so we can see the image in the in the window itself in the browser page itself so what I would say to you is first of all try to get this to work yourself use your own image file what happens if you load a text file could you load a text file and then display all that text in a paragraph element that's a great exercise for you to try what if you want to load three image files could you do that in the loop with an array how would you do that so those are a couple exercises that I suggest that you try following watching this video and I will include solutions to those also in a links that are available in this video's description so thanks for watching and see you in the next video so Aria Mon asks on line 30 why didn't you do slash star instead of slash slash you know I I don't have a good reason there's really never a reason for anything I do other than arbitrariness and what I'm used to but I have like muscle memory for doing this which is a shortcut NBS code command slash I probably could configure it to command slash use the slash star because via everything you can do in BS code that's what I'm used to okay so I'm gonna put this aside this will become a video tutorial about fetch I might just come back and do it again but this is going into I have now made my first video for the data and API series this is coming somewhere in here oh boy this might actually be like the first video now that I think about it so I have to think about where this fits cuz I didn't actually use JSON data but but this this will go somewhere in here okay alright the stream seems to be working right no lag is there any lag right now cuz Oh Oh I did this wrong look at me always doing it wrong yes of course I did it wrong I meant to do that right like this is what I meant to do ah I will do that one more time okay here we go third time's the charm or in my case 30th time is the charm this wraps up the video this is the code that I'm gonna leave you with I will point out there is and it was point this was pointed out to me I I like to write things often in as longwinded way as possible to be clear and explicit about what's going on for teaching purposes but this this is what's also sometimes referred to as a lambda function this equal this arrow function syntax because I'm taking the response and passing it through console dot log I can actually just pass in two then the console log function itself the name of it as well as in catch just pass in the console dot error so this is this this is even condensing it down even further but of course if I needed to do more custom stuff I'd have to write a full function definition in there but let's just run this to make sure it looks but let's just run this to make sure it still works and it does all right so what are some things that you can do with this now now that you know how to use the fetch function try this exercise using exactly this code load a local txt file and display the data from that txt file in a Dom element instead of using an image another thing you might try is what if you have three images could you do this somehow in a loop could you write one function that does all three images how would you handle that so those are some exercises that you should that I would suggest completing before you move on to the next video and I will also include solutions to those exercises in this video's description so thanks for watching and see you in the next video in this series of videos that you're watching goodbye alright just get it right this time and now the stream is working it's noon I really have to go in like a half an hour my energy is sort of picking up though I'm gonna do my Angry Birds challenge because I got a I gotta leave today with something more than what I've got so far that's because of the lag it took me and whoops an hour and a half to just do like if hopefully what is ultimately just a 15 minute video about the fetch function okay alright everyone we're gonna have some fun now oops what is password here sorry I have to look up ah really all right I have to look up the password in my password manager give me a second here okay what is the minimum size code I can get away with can I get away with this 36 point can I get away with 32 point pull this over a tiny bit because I could permanent leave this open and it's amazing that this stream is totally working now 30point would probably find is this a reasonable code size I really shouldn't I I don't like to use the web editor for challenges that are kind of complicated that I might need to do a lot of like serious debugging so hopefully this is okay usually use a bigger font but let's see so let's do this okay No 600 be fine all right all right everyone let me get the camera went off I'm gonna do something very illadvised right now but I'm feeling my oats feeling my strength returning to my body my coffee is completely empty that's bad I'm getting notifications popping up just give me a second here this is such a bad idea pretty sure that's the right URL yep oh oh I forgot I need my coding trained characters oh I might be able to stay till one yeah I need my coding trained characters where are they just give me a second here so this URL I think has a mistake in it this is not the minified version it's looks like the minified version maybe it's not if dot min to the URL like this no I think I'm right because I've got matter Minjae s there yeah this is the non minified okay okay okay No oh oh I can just type in unpackage calm I didn't rise I could do that that's what you're saying I can just do unjust type this in it redirects me and then I can ah thank you Oh so I'm gonna do that great even better I'm gonna do that I don't even gonna keep track of that all right okay oh I wish all right I'm sorry to disappoint some of you who were particularly David I know who was hoping that I would talk about making a processing library that's unfortunately not gonna happen today but I'm gonna try to do this coding challenge I'm gonna let this be one video and I'm gonna really hope that the edited version of this is less than an hour and that the non edited version of this is also less than an hour but we'll see how this goes hello welcome to a coding challenge Angry Birds although my birds won't be angry they're gonna be loving loving Birds but maybe they won't even be Birds they'll be like cute little coding trained characters but that's not the point I am going to program a version a much simpler simplified version of an Angry Birds style clone I'm gonna use p5.js I'm gonna use a physics library called matter chess and I'm gonna get started in one moment but first let me diagram out what I'm going what I need so I'm gonna use an objectoriented programming approach I'm going to need something called like a box so this will be a box class I'm gonna need something like a bird we'll just call it a bird for right now this will be the bird class right the birds I mean it could be pigs or not but the point is I need that oh and I also need the ground so I'm gonna start my simplified Angry Birds is going to have a single box a single bird the box is sitting on the ground I'm going to want to toss the bird at the box and knock it over and from there glorious games throughout the universe that you will make maybe will follow I'm gonna do all this in the P 5 web editor which usually it's a pretty complicated project to try to do but I'm gonna I'm gonna do that anyway and then if I have time I think I'm gonna want to try to attach this particular bird in a slingshot like why use a constraint some type of springlike connection to a little post so I could pull it back and let it go so let's see if I could get all of that and I'm not going to break out into song right now as much as I am tempted to do so all right so first I'm not gonna work so I'm gonna give this the physics library matter is gif this is the p5 web editor I'm going to use p5 for all of the drawing stuff and I'm gonna use the physics library matter AS for handling all of the physics now matter doc Jess does have rendering built into it but I'm gonna do things my sort of way of combining both libraries so that I can do all the rendering custom in p5 and maybe by the end of this video have some my coding trained characters inside of this little game that we make alright so first I want to take an objectoriented approach and I'm gonna do add file and I want to add I need a bird a s and I'm gonna I'm gonna make something called a box j s and I think I'm gonna be able to use the box for both the I'm gonna use the box class for both this thing that can actually get knocked over and the ground which needs to be something in mobile static so what does a box need to have a box needs to have it needs to have an X needs to have a Y needs to have a width and it needs to have a height and I'm gonna require that all of those arguments are passed in via the constructor then I'm going to and so I need to put the arguments in here X Y WH and I need to what do I need to do I need to I'm gonna write a show function and in here I'm just gonna say I'm going to use fill to make it white and I'm gonna say rectangle this dot X this dot y this dot W this dot H okay so this is the basic idea of a box class with no physics this is just the data about a box and this is me drawing it so now in the in the main sketch I'm going to say let a ground I'm gonna have a global variable called ground I'm going to say ground equals a new box and it's going to be the X is going to be at 0 the Y is gonna be like height minus 20 and the width will be the full width of the window and the height will be 20 and then I'm gonna say ground dot show now it's giving me all sorts of errors like it has no idea what a box is and the reason why it has no idea what a box is is because even though I added a new JavaScript file I didn't add it to my index on HTML so let me go and add it to index dot HTML box yes and there we go look step one is done I have the ground the ground is there now the next thing I'm going to do is I'm going to have a box I'm going to just call it a box a box is another new box and I'm let's put it over to the side in some arbitrary place and say box oh there it is I want it to be tall I don't know what I'm doing exactly yet but something like this something like this maybe a little less you know what so this will be that it needs to sit over on the ground so let's put it over a little further and let's put it further down there close enough but I want to move it over some there we go okay so that's the thing that I need to throw my bird at now I need another class I'm going to add file and I'm gonna call this bird oh look when did I it's like knows what I'm gonna do in advance isn't that crazy I think I've written other things the p5 editor with a bird died yes oh no I already did that I added it before no I'm just losing my mind you're watching me slowly lose my mind while being a person on the Internet coding stuff without a timer I'm not using the timer this time birdy jeaious class bird and I'm just you know I probably could maybe use inheritance here where I made some videos about recently but I'm just gonna do like a sort of horrible copy/paste job but I'm gonna change this to an R to indicate radius because my bird is going to be a circle and this dot R and now I can say let bird bird equals a new bird and it'll be at like you know 50 pixels over 3 pixels down and with a raise of 25 and doesn't know what bird is yet again because I now also need to add bird je s to my index.html file okay where's my bird retweet ha ha ha be like the blue bird who always is blue I'm just reliving my high school musical singing days what was that what was that show anything goes I think anyway somewhere there's no video on the internet because I'm too old but if I was younger there'd be a video on the Internet of somewhere me in a musical in high school that aside I've got the bird so I've got the bird I've got the box these are all the elements so I have all the elements that I want in my scene ultimately I'm gonna want to have like a stack of boxes and use images to make this have more personality but the next thing that I need to do is add physics now I could use you know I could start doing adding some functions to do all the physics myself but I would like to use a physics engine the matter dot J's library is released through npm node package manager so I can go and everything NPM it's already like appearing in my cuz I looked for it before I started this but if I just go to unpick AG unpackage which is the content delivery network for NPM packages and do matter Jas and hit enter we can see this is the URL for the matter not Jas library I want to get the minified version of it so I'm an owl so admin J s so now I have this particular URL I can go back to the p5 web better index.html and I can I'm just gonna like paste it here for a second I'm gonna grab one of these these are the script tags for the p5 library right and so instead I've got p5 p5 Dom p5 sound and now I want to add matter chess as a library so these are now all of my libraries and all of my custom JavaScript code and if I go back to sketch touch yes and bring this back over here everything's still working let's make sure the matter dot library has loaded if I just say console.log matter we can yes stuff is coming out here the library is loaded that would obviously say if I had loaded that library I don't know what you're talking about all right now let's add some physics so whatever I I have a whole bunch of tutorials about the matter dot J's library so I don't need to spend you can where I can refer you to those if you want more background but basically I need to establish this idea of an engine object and a world object the world is talking about the environment and then each one of these things will be a body this will be a rectangular body this will be a rectangular body and this will be a circular body so my classes box and bird I'm going to make them wrappers to base to have inside of them a piece of data which refers to the actual matter dot j s body so the first thing that I need to do I think is let's have a a world and an engine and then I think I say engine equals matter well I think I better do this first engine equals matter dot engine create I don't know I'm guessing I think that's right I haven't done this before and then I think the world is actually created when I create the engine I can just grab it from the world so now I have the matter engine and the matter world then inside of my objects what I want to do let's just do the Box first so here instead of having an X a Y and a width and height although I think I might keep the width and a height just to store it I now want to add this body equals matter dot dot bodies dot rectangle this is a function that in the matter library will create a rectangular body object for me and I can give it I'm gonna do this first like I don't this box object no longer is going to have its own X&Y it's just going to give the matter body the X and the y so I'm going to say X Y I think this is actually what it gets and then I need to say matter dot world dot add to the world this dot body I need to actually put it in the world hmm so it's complaining to me oh no sorry so what happened to the box oh oh I took out this TEDx that Y so now the whole point of this is in show I want to ask I want to say hey matter I want to say give me give me a position which is this dot body's position and now I'm gonna draw the rectangle at paws X and paws dot Y now there may be a way in fact that I could dig into the body and get its width and height but I'm just going to store those out of convenience for myself to the size of these rectangles is never going to change so I can keep that there is a big issue here though which is that one is that once I start adding the physics the box could wobble meaning it could rotate so I'm also wanting I'm also going to want to get an angle and I am going to want to then draw it with rotation so I'm going to say push I'm going to say pop I'm going to say translate paws X paws dot Y and then the rectangles at 0 0 and I'm gonna rotate by that angle there's another little weird nuance here so I like for myself I like to think about placing the rectangle with the X Y in the corner and then the width and the height and that's the default behavior of a p5 but matter doctor asks when you make a rectangular or circular object the XY position for that object is always in the center so this actually I've told matter das where the object is and drawn it in a different place so I need to reconcile those two things so to reconcile those two things there's a few different ways I could do it one is first I should say rekt mode Center so that I'm drawing but now you can see everything's off in a weird place which is maybe fine maybe I just need to rethink where I'm placing the stuff for example the ground would be now at with / 8 10 so that's the same thing so that's fine that's one way of doing it and my rectangle is in a weird place so but I'm not going to worry about that right now I'm gonna position stuff and I obviously could use some math to get it to rest perfectly on the ground but I'm not gonna worry about that still there's no physics happening why is there no physics happening I created the body I added it to the world it's because I'm not running the engine so the what I need to do draw is my loop so basically I need to say every time through draw step forward in time so I think I can just say engine run no it must be like this engine dot run engine I could also look it up in the documentation no I got for a second update I looked it up I probably could have shown you me looking it up but it's not how do you look this stuff up let me show you looking it up so if I go here and I go under engine and I scroll through here I could be like Oh where's that engine got run function what is there how interesting but that's not to say matter dot engine but that's actually not what I want I want to use update I think there's two different ways of doing things engine dot run will just set the engine running but I want to lockstep my p5 animation loop with my matter physics engine so I'm gonna use update so and what I'm going to do then is in here I'm gonna say engine dot update but I need to say matter engine update and there we go well did you see that the physics is happening oh but the ground fell out below us we're thinking it's ok everybody we can violate the laws of physics and create an object with infinite mass that never moves the ground can be known as a static it can be a static object so objects that you create in matter DOTC ask the physics engines can be static or dynamic by default they're dynamic so the tricky thing here is I'm using the same box class to describe both the ground and that rectangle so I could separate them if they really are different or use inheritance but maybe and what oh why not let's use inheritance this will be fun I've been talking about inheritance let's use it so I had another file I don't know if this is the best technique I'm gonna call it ground and I'm gonna say class ground oh this there's a problem with this idea but it's fine extends extends extends extends what am i extending box and then I'm gonna say constructor it's going to get X Y width and a height I'm going to say super X Y width and height so now this is ground is a class that inherits everything from box if you don't know about inheritance I'll refer you to my video about that and I can go into sketch and I can now say ground equals new ground and it's not defined all right now what still still still class ground class ground constructor ground is not defined Oh Oh what have I done wrong where's my chat where's my help ground up Jas ground up Jay sclass ground extends box boxes not to fight oh wow something really crazy happened I kind of forgot that the order that usually doesn't matter for me because I don't have anything really happen until the setup function and draw and everything has loaded but I can't reference the ground dr.azz javascript file before box such as because it's extending box and as its loading the Dom its kind of look at the box file first so this actually is one of the rare instances where I've got to put this script tag before that one no no that's the bird yes this is gonna work any second now yes okay oh it still goes away so now I need to figure out how do I just change one thing to make this static can I do this this stop body is static equals true okay so this is the idea of I have a whole other kind of body that extends box it does everything the same way but I can set an additional variable is static to true and so now when this runs we've got our Angry Bird box thing over there and now we're ready to start working with our bird okay so let's work with our bird now so we need to get rid of the X in the Y I'm gonna say this stop body equals matter dot bodies dot circle X Y R I'm going to do the same thing I'm not going to worry about rotation so let me I'm gonna you know I probably I'm gonna sort of cheat a little bit by just copying the is over because I'm gonna feel like typing right now and then just change this to circle and this dot R and there we go and then I also should say matter dot no no just yeah matter dot world dot add this stop body to the world or this dot body to the world there we go you can see what's rolling away all right excellent so now here we're kind of almost there all I need to do is be like wait toss I want to be able to toss this thing so I want to be able to toss this bird over here to this rectangle how do I do that i okay maybe I do an if statement to see if I click the mouse inside it then I grab it well what are the nice things that matter dot J s provides is this very general thing called a mouse constraint so I can add I'm gonna add and this is a little tricky I'm definitely gonna have to look this up I'm gonna call this M constraint or like Mouse thing for those let's use M constraint for Mouse constraint and then I'm gonna say M constraint equals matter dot all right we're gonna have to look this up so we're gonna go here under constraint and what I want is a mouse a mouse constraint this is what I want I want a mouse constraint create engine options okay so this is what matter dot Mouse create constraint create so I'm gonna say mater dot mouse constraint was capital Mouse constraint dot create and give it the engine okay so look at this options dot mouse was undefined options dot element was undefined may not function as expected so matters is is giving me a nice warning here explaining that while you made this mouse constraint but you need to tell me where you're going to be clicking the mouse and where I am clicking the mouse is in the canvas so I could like it's as the canvas as a Dom element does it have an ID well one of the nice things about using p5 is I can just store in a variable the result of create canvas which is canvas stop which is this canvas object and I should be able to now say I should be able to give it some options and I'm not sure and then so I can add a second argument here which is options and I don't I think I need just give it mouse no I'm just gonna put things as null and then element no hmm so maybe this is canvas alt can't read property button of null one of these is like the canvas element timeout for a second yes yes alka thank you I'm gonna do that aliasing Oh alright I'm back after looking up if what I need to do so what I forgot is that I need this mouse so I need a separate mouse object that had that I can use to create and manipulate those mouse inputs one of the interesting things there's a live chat going on right now as I'm recording this and alka wrote a nice suggestion for aliasing all these matter dot things you notice how I'm trying to write matter dot matter not matter dot everywhere so I'm gonna actually just go over here and take I can I can use this I forget what this is called but this is kind of a newfangled JavaScript thing where I can basically just make a nice list of all these objects I want I'm an engine world mouse constraint and I'm going to maybe use constraint and I can just set that all equal to matter so basically this is me aliasing everything that's matter dot engine matter dot world matter dot bodies so in theory I should be able to just say engine now here this makes things a little bit easier just mouse constraint here so my code is a little bit more succinct and I'll go back and fix that in other places as necessary but what I need here is a mouse and I need to say constant M matter Mouse I'll just call it mouse equals Mouse dot create canvas alt so I need to make a mouse object with the Dom element associated with the canvas and then I believe I can just put this here under options and now here we go and we bring this all the way back dare I say oh no oh oh what did I forget I probably have to add it to the world world dot add world mm constraint yeah look now I can pick this stuff up and I can toss it oh look what I can do better yay Oh goodbye okay so in some ways I could consider that I'm done right this could be the end of the video you could make your own version you could add some graphics but let's do a little bit more with this timeout for is like I need to blow my nose this is disgusting vile of my dirty tissues over there okay so all right Simon I did see Simon first posted in the chat about aliasing and then I'm using the syntax the update then Alko replied with some different syntax so apologize apologies for the miss reference there yeah I'm thinking what am i doing next year that's add let's add the slingshot I think I should add the slingshot right I think I'll add the slingshot or should I add the more boxes let me add more boxes what's left to do I want to add a few more boxes I want to put images instead of these just these boxes and circles and I think I should try to add a slingshot even though right now I could kind of just toss it but let's okay well the first thing would be just adding more boxes so I'm gonna change box two boxes and I am going to now have a little for loop i 0 i is less than 3 i plus plus and then I'm gonna say instead of a single box I'm gonna say boxes index I equals a new box and then Here I am going to then say for let box of boxes little for loop draw them all so now you can see oh look at that what's so crazy is when they I start them all at the same point that two objects cannot appear cannot occupy the same space in the world of physics so they like burst off from each other but let's do something like say 300 minus I times 75 which will stack them so now I have a little stack of boxes and then I can toss it in there we go I couldn't knock them over Oh over so this is there something you want here to have physics engines work and how I'm going to create some balance in the system and you know one of the things there is I probably need to increase the number of iterations per update in order for it not to be able to move so fastest to jump over the stuff but let me just run this again I'm gonna really see if I can knock this thing's over yeah I knocked them over I could also play around with the the properties like restitution and friction which are physics attributes of each of these objects a restitution being elasticity or bounciness so maybe towards the end of this video I'll try adding that but now we're in pretty good shape so let me add the slingshot so there is so what I did right now is I created this idea of a mouse constraint and a mouse constraint is this very generic constraint that just like anytime I click on something it'll make a little springlike connection between where I click the mouse and the object so I can move it around but what I want is actually to introduce a constraint maybe right here that's fixed and only attached to the bird and bird itself just say that again because I just hit my mic in case that made some horrible noise make it could make a constraint that's fixed and only that's fixed to this point and only attached to this particular bird and I think it's probably smart for me to wrap this into a class because I'm really going all in on this objectoriented programming approach so let me make another javascript file called sling shot j/s and let me just write out the outset remember that I need to refer to sling shot a s then class sling shot so what does a sling shot need so it needs I think it needs an x and a y like where is the point from which this object will be attached and then it needs oh no no that's not where these go needs an X and a Y and then it needs a body like what people are asking about my age in the chat just thing I use a very soft focus it makes me appear much younger you'd see if you took about that video of me I don't actually but on the street there's anyone whatever alright um what was I saying I need a point in a body so now I'm gonna create let's call this this stop sling call it equals constraint dot create and then options I think this is how that works and this should be constraint constraint so I'm gonna make up some options now so I need to configure that constraint so the constraint can be something that's between two bodies or between a point and a body so I'm going to make it between a point which is I'm gonna have to look this up a pause for a second I have to so I need to look in the documentation I said matter that engine and draw okay yeah yeah I knew that sorry the two things I want to be connected with this constraint are a point which I'll call point a this is in the in the matter digest documentation specs point a which is an object with an X which will be what I pass in and a Y which will be what I pass in and then also it needs a bot to be connected to something else body B so I think it could be body a and body B or point a and body B there's different ways you couldn't figure it but I want a point at a body I could make another body that's a static body I guess but a point is the equivalent to that so then the body is going to be oh I don't think I need an object you're just this particular body and that doesn't know semicolons then I want to say world dot add this to the world this dots link and the other things that are part of a constraint I believe I forget that actual is stiffness like how would the it's like a spring connection how stiff is it so I think that's actually just called stiffness and let's actually look in the matter J has documentation constraint and under properties body a damping ID label point a point B render render bababababababababa stiffness a value of 1 means the constraint should be very stiff a value of 0.2 means the constraint acts like a soft spring so let's just try just to start with let's try point 5 and then a length is very important what is the rest length of that spring let's make it like 20 pixels okay so now I've created this slingshot I also think it would make sense for me to draw it so I'm going to do a show I'm going to make a show function and I'm gonna say stroke 255 and I'm gonna draw a line well let's do let's do let's make pause a equal this dot sling dot Point a and pause be equals this dot dot sling body dot position these are the two things that the sling the string the spring the connection the constraint is attached to so draw a line from pause a dot X pause a dot y pause be dot X pause B dot y hmm oh I'm not I haven't so I think but I'm writing this class I didn't even make the slingshot so now I need to go into sketch KS and I'm gonna make a variable called slingshot I'm going to say slingshot equals a new slingshot and I need to give it a and a y which where did I make the bird fifty three hundred let's just put it at the same place and then I need to connect it to the bird's body you can see already look this is kind of like stuck somewhere right this is great but let me draw it because I think that'll make it more obvious slingshots show and what did I call it slingshot show slingshot show up pause B cannot Oh body B body B it's point a and body B so if I do this right you can see there it is now okay there's some goofiness here so one thing that's really weird is that if I drag the mouse off the mouse constraint gets confused and thinks it's stuck so that's just an interaction design problem and I have to iron out at some point let's change a few things like let's make the bird much smaller let's let's move everything over a little bit just to give me a little space here so now we can see and maybe I should make that rest length a little bit longer there we go and maybe the stiffness should be a little bit less there we go so I'm pulling this back the idea is I'm going to pull it back and let go and I want it to fly mmm interesting why is it kind of popping there is that the stiffness oh yeah maybe I wanted even less stiff okay so we're getting there I have this slingshot now now how do I release it whoa I have to come to come up with in a way of releasing this oh dear so when I release the mouse hmm how do I do this if it's moving at a particular speed if the velocity reaches a certain magnitude let's try that I need a way somehow to launch this bird off of the slingshot like the slingshot should be broken and it should well this constraint should be broken and it should go flying so first let me at least create a mechanism for that so let me write a function here and I'll call it fly and I think if I just say body um this dot sling body be equals no look if I just detach the body then the thing that's attached to it will go flying so let's just try in let's just add just as a test a key pressed function if key equals space then slingshot fly so again I need to figure out when it should be flying but if I just hit the spacebar ooh cannot read property position of null slingshot line 24 so okay so only if this starts like if there is a body attached then should I bother to draw the line okay so I need to also not draw the line if there's no body so let me run it and then hit there we go we can see now could I possibly time it like now my interaction is I have to do this yeah but I shouldn't have to hit the spacebar right I shouldn't have to hit the spacebar so how can I determine a time where I should have it fly what if I were to get it's the body's speed right so can I say console dot log body B sorry what if I could somehow get what if I could what if I could look at the body's velocity wait a sec I'm getting some suggestions so I don't want a pirate aschen the chance tank make it so when you release the mouse the event triggers that's not going to work I don't think oh I can't say world dot remove world dot this sling but I want to keep the sling because I'm gonna reattach it okay point 9 seconds later yeah I could do a set timeout that's an interesting idea so a suggestion came in the chat to just look at when the mouse is released I don't think I think this isn't gonna work timing wise but let's let's try it what if I just write function Mouse released which is a global p5 event for when I release the mouse and there I could just say slingshot fly so now I'm pulling this back and release the mouse see it didn't have a chance to move I before it could start pulling it so I could use like set timeout this is kind of ridiculous I could and then like do it in like 50 milliseconds later is that right maybe it maybe should be more like a hundred milliseconds later oh great that worked weirdly just giving it a little time later I was going to go through this whole thing of testing its speed you know what this is good enough I think you could probably those of you watching you might want to come up with a different solution but I'm surprised that this actually worked just a little set timeout just give it 100 milliseconds later thank you to beta tester 704 who maybe was the one who suggested so this is great we have hangers now one thing I should say is like at some point I want to be able to like put put have a new bird and so there's a variety of ways I could do that let's use key pressed we'll just use a key press right now and I could say I could say this I could remake the bird and then I could say a slingshot dot attach this bird body and then in bird I'm sorry in slingshot I could say attach get a body and I could say this dot sling dot body B equals that new body so here now what I should be able to do is I should be able to let it fly knock the stuff over and then after I want to probably detect when it should do this I can hit space oh sorry yeah whoops space and then oh there isn't there's a big flaw here in my system I'm not gonna worry about it this is good enough because I could like first of all I can use the mouse constraint the mouse constraint will let me do anything and then I can also release when I release the Box also the bird gets released but you the view these things can be cleaned up these are interaction design problems there are better solutions but I've got this is kind of exciting I've got the basics of Angry Birds here all my rights you should utilize the concept of potential and kinetic energy for it it's of just a pure projectile thing so I would love to see somebody make a variation on this and and submit it to the coding train comm there's a way that you can submit your versions to end doing that but I just got one more thing I want to do I want to add some images to this I could add sounds but that's not really me I'm gonna add some images so give me a second I'm gonna be right back with some images now how do I get it to this yeah ah so Simon Says if I say world remove world this sling it would keep the sling just remove it from the world and I could add it back in that is that's actually and then I could actually just reuse the same bird but oh there's another big problem yes before I add the images there is kind of a big bug here that it really should fix which is that when I put the new bird in there's actually another Bert that old bird is still here I'm just not drawing it anymore maybe I want it there right it should actually is there or maybe I should remove it but probably before right now I should just say world dot remove bird body world and it's always it's the other way around so I believe this right let me let me see if I can show you what I mean right I'm going to shoot this over there now notice this is here it's going I'm not gonna see it anymore but I'm gonna try to shoot it right over there again see how it hit the invisible thing so let me remove it and that should that should fix that so if I do this and it's there and then I do this again oh I do this again anyway you can see it's gone it's removing it so there are different ways that I could approach this assignment in the chat is pointing out that instead of just making the body be of the slingshot null I could actually remove the slingshot I could reuse the same bird by just resetting its position so again you might make have a different take on this refactor this in a different way but I've got the basic idea down now I want to start adding images so what I've pulled up is I have my coding train characters um let's see this makes sense what's what would be good oh we should definitely use the this dot for those like rectangles and then maybe what I might have an angry bird this looks kind of angry or this maybe we'll use this little this little square thing to fly okay so let's grab the let's so let me let me edit these files a little bit be right back cuz there I couldn't do it in Photoshop and then I could like actually trim it to the edge but I'm just gonna do this myself good enough I'm gonna call this the dot I'm going to do image size let's make it like 75 pixels high so 34 by 75 okay oh did I cut off its top I think I did I totally did there's a function in Photoshop like trim that I could use just lazy 75 no no I know I know I know 30 75 33 by 75 is the dot I guess I'm cutting off its top I don't care dot and then this will be my bird oh but I should have something's worth circular that's fine this should be oh you know what I can do oh I have the emoji ones that's what I should be doing actually I've a 30 by 30 so let me just get this I'm changing my mind let's move this over here oh this is already 30 by 30 and so wait let's use let's use this the semicolon let's look at the emoji one this is what I meant let's grab this one and let's do the oh maybe this will be good this will be good let's use this one or is the emoji one's gonna be better these are a little simpler no I like I like it being a more of us let's do this is that the emoji one is the fullsize yeah so there's this is good I guess because it's sorry I'm like go spending way too much time with this use the dot for the bird upset blocks yeah and let's use the the equal sign yeah okay this is good okay is this think 100 100 is fine oops ah nevermind I give up where was that whywhywhy I'm losing totally I'm like obsessively losing my mind here it's fine okay go back here thank you yeah clearly all right so I have all of these coding trained character image designed by Jason Haglund thank you for that I'm gonna use the dot for the bird it a little smiley dot and the angry equalsized sign for the block now this block is square I think not rectangular so I'll probably need to do is upload these images to the web editor so the way that I will do that is by just going over here doing add file and then I can just drag these two images in you know I could put them in a folder or something but I'm and then we can see they're there so now I have dot PNG and equals PNG and you know they're there's probably a thoughtful way that I could think about what if I want different blocks to show different images but I'm just going to in a very simple way use the preload function of p5 I'm going to have a variable called dot image and a variable called box image and I'm going to say dot image equals load image dot dot PNG and box image equals load image what was what does it called equals dot PNG and let's first just change the bird to show instead it doesn't instead of a circle and that a fill I'm just gonna say image image and then I'm what was the name dot IMG Lulu and then I want to say image mode center and then I'm going to have to say this this dot R and this should be the start time really if I'm thinking about that as a radius so there we go so we can see now I've got the little dot it's so tiny I should make it bigger what size did I give it I gave it the size of 16 I think the image is actually a hundred by 100 so I could do this that's like very large but so let's make it 25 so this will be a good start and I think what I would prefer to do also is draw the slingshot behind the bird okay so now I have my dot there it goes now I just need to replace those blocks so the boxes when I make the box I am in sketch j/s when I make the box I'm giving them an x and a y and oh no no no where's that I'm giving them an X and a Y and a width and a height let's just let's just make them square right now I could have an image that's not square so they're much larger now but that's fine and then what I'm going to do is in box let's change it to image image what did I call it box image there we go oh we've got a problem so the ground is is messed up now because the ground is also the equals so and we also to say image mode center then the ground is this like smooshed equals but guess what not to worry I used inheritance oh I'm so happy I used inheritance and I could just override the show function and there's probably a more thoughtful way I could do this but I am just going to put this all in here and I'm just going to put this back to rect and back to this and now there we go so I now here we go I have my Angry Birds clothed with p5 and madder Dutch a s and I'm gonna pull this back release it oh wow wait why did it make it so small so one thing I really I really need to do a lot of refactoring on this because I did something very silly here where I remake the perky but I use a different size which having a hardcoded value here is pretty bad all right let's try this one more time not this sound No ah no stop ah what's going on are you hearing music right now no okay wait wait wait wait wait I have an idea I have an idea let's add restitution so I'm gonna go to the bird and when I make the body I could also add some options for example one option might be restitution which is like elasticity let's give that a value of one value of 100 wait a sec let's look it up in the documentation body restitution always positive and in the range 0 to 1 a value of zero means the collision would be a value would be perfectly inelastic and no bouncing would may occur a value of 0.8 means the body may bounce back with approximately 80% of its kinetic energy so let's try giving it a value of 0.8 Oh guess what I can make up this variable called option until the cows come home but if I don't actually put it in creating the body it's not gonna make any difference so now let's see how that changes things there we go it's kind of like Jenga we're just like slid out a little bit oh wait a sec okay oh the things have gone really off the rails here this is supposed to be twenty five and let's let's let's let's be a little bit more kind let's give it point five and let's also let's also go to the box box and let's give that also a restitution okay here we go this is my Angry Birds game made with PETA Mater Dei s and coding trained characters thank you for watching this coding challenge I hope that you make a much better version of this with your own characters your own sounds your own interaction and maybe you'll even you know you could just imagine all the possibilities here so thanks for watching and please please share with me what you make check the link in the video's description for the page on the coding train calm which will have all the code for this as well as a processing version of this hopefully which is a as well as a place where you can submit your own version ok thanks very much and see you soon goodbye ok what's 110 that was an hour right but I had to stop a bunch of time so this will be less night that's all I'll give the birds some math add some friction yeah I should add friction give it math all those things re Aman says mom told me to sleep as soon as you finished go to sleep go to sleep re Aman alright this is done thanks for watching this Angry Birds coding challenge so now the stream is working I feel a little better in congestion feels even a little bit less and yeah let's let's I don't think I'm gonna do anything more with this stop I just want to play it file save so if you want this code you can just go directly to this URL coding train sketches this thing so I don't even have to upload it to github it will be there ground should be green yes and I'm gonna say I'm just curious full yeh alright here we go oh wait I need to do some thumbnails so let's so let me help Mathieu with a thumbnail although honestly I think is probably better just to have some green backgrounds and we can screenshot this marching cubes is definitely something I want to do okay that's good enough I should really probably do that while I'm not livestreaming it would make more sense oops p5 is not required for the matter library by any means it's just I'll kind of like using it matter has its own rendering okay here we go what's wastes like what is going on oh this is bad cuz I have to click into it first for focus and then it gets a mouse released no what's going on it broke am I losing my mind here did I mess up the code or does it just not work that's weird so why did it not work in full no I just like losing my mind does it have a problem once I do this no I was just losing my mind shouldn't you appropriately crop the square probably Oh something is wrong it went off the edge because the ground of the gopath hold on something is wrong here oh the square wasn't cropped let me fix that I didn't realize that this image is not cropped so and now it's actually what is it it is no didn't I just didn't I just crop it Oh somehow I didn't save it why didn't I just did that crop save so now thank you it is 84 by 100 so let me go here unfortunately this isn't going to make it into the video equals let me delete this file add file wish I had noticed that and then the boxes are actually 84 Simon is asking are the coding trained characters available I will make them available so where the boxes 84 so this is gonna be more elegant now yeah that's why they were like wider still they're acting superweird do I have a mistake or is it just really not cropped at the bottom yeah I think it's right it's just awkward gifts the batter dot body set mass body body mass times 4 can I just do this this stop body x equals 4 no dumbass maybe not matter dot body set mass body this stop body just stop body this dot body dot mass times 4 oh yeah I was good maybe I should do a little interstitial here sorry interrupt I'm about to wrap this video up but I want to show you two quick improvements before I finish the first one is when I the first one is when I loaded my coding train equals character it was a square image and there was actually a lot of additional extra space on the on the width and so there was some funny physics happening that looked a little bit off so I've now actually cropped and reuploaded that image so that it's 84 pixels by 100 the other thing that thanks to a suggestion I increased the mass of the bird's body so the the matter digest will give element some sort of default mass probably based on their size and their geometry and I just take the bodies and set its mass to its own mass times 4 and so now if I were to play my game one more time let's zoom in on this just been coding func okay oh it was supposed to be a loving scene they're just hugging each other as they knock into each other I don't know does that sound weird okay back to the end of this video I should just finish the video right there never mind about this back to the end I'm just gonna finish it up right now so this is my version there are so many flaws to what I've done here in terms of how I've organized the code there's like weirdness and the physics I haven't really been so thoughtful about the design the whole slingshot mechanic it's kind of off so there's a couple things you could do from here number one go to the coding train comm find the page for this challenge the source code will be there as well as any other supplementary links and you can submit your own version maybe you just want to improve the way I wrote the code to make it better organized so that people could see that maybe you want to make your own delightful design of a scene maybe you have a totally other game mechanic and idea for how the physics of this world should work maybe you actually want to build this out to be you have more features and levels and score there's so many possibilities so make your own version of this you don't need to use p5 you don't even need matter these kind of concepts will extend to other drawing libraries and game engines you know phaser might be one that you would should take a look at even perhaps up you can check out the video from cats mall about using phaser and code pen that's on this channel and I will see you in a future coding challenge thank you look bye there's other properties that need to be updated and set mass handles it okay puppy pile bust that Walter Inception yeah okay I'm which one twenty I said it wasn't gonna do a three hour livestream today and somehow I managed to do that I definitely have to go so what happened to the sound oh it's just slow alright everybody thanks for tuning in to this week's sniffily episode of the coding train brought to you by the common cold my nose is red my head hurts and yet I'm here coding for you I won't really make this data in api's of course it's going to happen YouTube thank you for your support in making this course I hope you make you all of your own versions of this I would like to release these images and Creative Commons noncommercial yeah just like anyway so thanks for tuning in bye everybody wait a sec I haven't left yet I haven't thought there was a question in the chat our coding challenges are Wednesdays at the same hour so Wednesdays at 1030 a.m. Eastern Time is my regular timeslot I can tell you for sure that two weeks from today I will not be in New York so there will be no coding challenge when's on that Wednesday oh I have something else to announce I forgot about you I will mention a week from now I kind of have a conflict in the boarding so I'm hoping to still do Wednesday but a different time so stay tuned about that so the way to find out yes unfortunately by subscribing clicking alarm bell you know you don't have to but if you feel so inclined subscribe and click the alarm bell because when I schedule it you'll get a notification and I usually schedule the Wednesday time the day before the night before some time on Tuesday but you can feel mostly confident with some small exceptions that Wednesday 1030 a.m. I forgot there's another thing I want to mention which is that I will be at the IO Festival which is a festival June 3rd to fix Oh I'm standing in front of this June 3rd to 6 2019 that's coming up pretty fast and look there I am Daniels Schiffman creative coding I'm on a mission apparently I'm trying to read this myspace really bad I need to I'm so I'm not giving a conference talk at this because that's not something I'm very good at I was just gonna do like a 45 they have a 45minute time slot I'm just going to do some live coding so if you have any ideas for what might work well in that context with a live audience I know other people have actually done it I do this stuff all the time here on YouTube but it's a little different performing so to speak in front of a live audience it's not something that I've really done so if you have any suggestions about what might be what might work well let me know the coding train what's your twiddle and what your Twitter handle at Schiffman or at the coating dream thanks everybody let's let's take you out with the polar to cartesian song oh and if you want to make remix versions of music things using my voice I really really enjoy that oh I was gonna make a video about how to contribute to the coding terrain comm website I have to go I have to go next time I'd give them the summer stuff I didn't get to oh well I'm gonna say once again coordinates coordinates autotuned and the internet will fix that for me coordinates this start this start the start that this start song never forget the vista miss somebody composed that song for me
