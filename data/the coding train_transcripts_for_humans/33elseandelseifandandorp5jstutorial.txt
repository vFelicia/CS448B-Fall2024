With timestamps:

00:02 - - Hi, so this is third video.
00:04 - I'm going to wrap up this discussion
00:06 - about conditional statements
in JavaScript and p5.js here.
00:09 - So we've looked so far at
a conditional statement
00:11 - and what it's allowed us to do.
00:13 - It's allowed us to have something,
00:16 - have the draw loop execute
differently depending
00:19 - on something that's happening in the code.
00:20 - Whether it's where the
user's mouse is or where
00:24 - the shape is on the screen,
it changes direction,
00:26 - or it changes color.
00:27 - This has allowed us to
create different paths
00:29 - and have the program do
different things based
00:31 - on certain conditions that
evaluate to either true or false.
00:34 - And this is the essential topic here,
00:36 - but there are a few additional features
00:39 - to the way that you can
work with conditional logic
00:42 - that allow for other possibilities.
00:44 - And the first one I want to show you
00:45 - is just the keyword else.
00:48 - So if you think about it, you could say
00:50 - if it's very hot, turn
on the air conditioning.
00:54 - And I might add to that
statement if it's very hot
00:57 - turn on the air conditioning,
otherwise take a nap.
01:01 - I don't know why this
doesn't make any sense.
01:03 - But you get the idea,
this idea of otherwise.
01:05 - Else is essentially that otherwise.
01:07 - So if I were to say something like if,
01:10 - this is what we're familiar with,
01:12 - if mouseX is greater than 200,
01:15 - if this evaluates to
true, execute this code.
01:18 - And we know if it's false,
we don't execute the code
01:21 - that's in here.
01:21 - But what about in this
other case of otherwise.
01:24 - Else gives us an otherwise,
else do this other code.
01:29 - So we now created this sort
of sequence nested block.
01:33 - We have an open curly bracket
and a closed curly bracket.
01:37 - And then an else and then
another open curly bracket
01:39 - and a closed curly bracket.
01:41 - So what I want to do is go
find that previous example
01:43 - that I made where if the mouse
gets over the right-hand side
01:48 - of the screen the circle turns purple.
01:50 - So now what I want to do is say
if it's on the right-hand side
01:52 - of the screen have it draw a
circle or change the shape.
01:56 - So I'm going to, based on, here's an else.
02:01 - If it's on the right-hand
side of the screen do this.
02:03 - Otherwise do this other thing, okay?
02:05 - So this is where the else comes in.
02:07 - So let's look at that syntax now.
02:10 - Okay, over here, so we can see
this bit of code right here.
02:13 - This is where our if statement
is and now I'm going to add
02:18 - an else right here.
02:19 - So all I need to do that is type else
02:21 - and add another open
curly bracket and notice
02:23 - the editor itself just filled
02:25 - in that second curly bracket for me.
02:27 - So you can see if this
is true, do this code.
02:30 - Basically what we're saying
that if that's not true
02:32 - do this other code.
02:34 - So I'm going to, I
could've kept with color,
02:36 - but what I'm going to do is
I'm going to take this ellipse
02:38 - and put that here and then here
02:41 - I'm going to say draw a rectangle.
02:45 - So now we can see, and
I'll resume back out.
02:48 - We can see do this, otherwise do that.
02:51 - So let's run this code and we can see.
02:54 - Okay, well right now the
mouse is not greater than 300.
02:57 - So when it starts, the program's executing
03:01 - that otherwise statement
and as the mouse moves
03:03 - over we got the circle.
03:04 - So you can see that circle
is turning to a square based
03:08 - on where the mouse is.
03:09 - We've got this conditional logic, okay.
03:11 - Now there's more to this than that.
03:14 - So in addition to having an else,
03:16 - so one thing I should know
here is a conditional statement
03:19 - you can only ever have
one if and one else.
03:24 - But there's something that
you can put in between there.
03:33 - If mouseX is greater than
200, execute this code.
03:43 - Now I could say otherwise
execute some other piece of code.
03:47 - But I'm going to say something different.
03:49 - I'm going to say otherwise
if such and such.
03:53 - Else if mouseX is greater than 100,
04:01 - execute this bit of code.
04:03 - Else if mouseX is greater than 50,
04:10 - execute this bit of code.
04:11 - In all other cases else,
execute this bit of code.
04:15 - So these if statements can actually become
04:19 - this much longer piece of
logic where you're testing
04:22 - a whole bunch of different conditions.
04:24 - A kind of classic example of this.
04:26 - It doesn't really apply to drawing in p5,
04:28 - but to sort of this logic
04:29 - as a program that grades somebody.
04:32 - So you could say that
if the grade is greater
04:36 - than 90, assign the letter grade A.
04:39 - Otherwise, if it's greater than 80,
04:41 - assign the letter grade B.
04:42 - Otherwise, if it's greater
than 70, C, et cetera.
04:46 - So you can imagine there's a
bunch of different conditions
04:48 - that we're testing and you
have to start with an if.
04:51 - You don't have to start with
an else, but you can only
04:54 - have one otherwise in all other cases.
04:57 - And you can have as many else
ifs as you want in between.
05:00 - So again, this idea actually
makes a lot more sense
05:03 - in the context of a practical example
05:05 - and we can look at testing where
the mouse is on the screen.
05:09 - Is it here or is it here or
is it here or is it here?
05:12 - Which one of these conditions has it met?
05:14 - So I want to actually
put this in the code.
05:16 - But I'm going to do it in
a slightly different way.
05:18 - This is actually correct,
but I'm going to start
05:22 - with mouseX greater than
50, then 100 then 200,
05:24 - and reverse this order
and it's not going to work
05:27 - and I want to also discuss
why, which is sort of
05:28 - a key aspect about how else if works.
05:31 - This is a really tricky
interesting problem
05:33 - if you haven't seen this before.
05:34 - Okay, so now I'm over
here and I'm going to add,
05:37 - so I'm going to start with mouse.
05:43 - I really should've done color here because
05:44 - now I have to think of lots
more shapes, but it's fine.
05:47 - So if mouseX is greater than 50, a circle,
05:51 - else if mouseX is greater
than 150, do a rectangle,
05:56 - else if mouseX is greater
than 250, let's do a line.
06:04 - And you know what, I'm going
to do, just 'cause I'm,
06:06 - and then all other cases
do a point, 300, 200.
06:13 - Okay, so now we can see
I've strung together
06:16 - this conditional logic.
06:18 - And I'm going to kind of try
to zoom into it a little bit
06:20 - to make it a little bigger here.
06:21 - You can see, okay, if the
mouse is greater than 50,
06:24 - otherwise if it's greater than 150,
06:26 - otherwise if it's greater than
06:27 - otherwise draw a point.
06:28 - So I should see either
an ellipse, a rectangle,
06:31 - a line or a point.
06:32 - Now this is isn't going to
work, so keep your mind churning
06:35 - about why it's not.
06:36 - Okay, so there we go, we've
got a point which makes sense.
06:39 - In all other cases right,
which it's not greater
06:42 - than 50, 150, 250.
06:43 - It's not greater than any of
these, we should see a point.
06:46 - So now when I get to greater than 50,
06:48 - what do we get a circle.
06:50 - Now I should get to greater than 150,
06:52 - I should have a rectangle
or greater than 250 a line.
06:55 - So why are these not, why
are, why am I not seeing
07:01 - a rectangle or a line?
07:02 - Why, why, why, this is
the key distinction here.
07:06 - So one thing that's true
about this is as soon as any
07:12 - one of these evaluates to
true, the program kicks out
07:16 - of the if statement and goes
to the next lines of code
07:18 - that are below that if statement.
07:20 - Soon as any one of
these evaluates to true,
07:23 - it doesn't check the next one.
07:25 - So the order of these
is very, very important.
07:27 - Only one of these sections
of code can be executed.
07:31 - Not more than one.
07:32 - If you want more than one to be executed,
07:34 - there's a different way of doing it
07:35 - which I'll mention afterwards.
07:37 - But for a conditional statement,
this is one whole statement
07:41 - where if is joined with
else if, else if, and else.
07:44 - So only one of these can be evaluated.
07:45 - So let's go back here
and look at this again.
07:48 - Let's think about if mouseX
has the value of 275.
07:53 - Well in our minds, what
we want to happen is 275
07:56 - is greater than 250 so
we should see that line.
07:59 - But let's be the computer for the a second
08:01 - and go through this logic.
08:03 - MouseX is 275, is 275 greater
than 50, yes, it's true.
08:08 - It is greater than 250,
so an ellipse is drawn.
08:12 - And remember as soon as the
first thing evaluates to true
08:15 - we kick out of that and go to the end.
08:16 - So none of these others are checked.
08:18 - So the order of this really matters.
08:20 - If I had just checked if it
was greater than 250 first,
08:23 - then I would've found that one, right?
08:24 - So the order here is really important.
08:27 - So just in this particular scenario,
08:30 - the way that I've written this code,
08:31 - I need to check 250, then 150, then 50.
08:34 - And we can run this program
and we should see first
08:37 - we're starting with a
point then we get a line,
08:40 - then we get a square.
08:41 - And I put these kind of close
together, then a circle.
08:43 - So based on where the mouse is,
08:44 - a different shape is drawn.
08:46 - So this is a really sort of
crucial piece of information
08:49 - as to how these if statements work.
08:53 - Okay, so now it is true,
however, that I could also.
09:00 - I hesitate to do this,
but I could write this
09:03 - with it not being, without these else.
09:07 - So if I take out these
else, but leave maybe,
09:10 - I'm going to, else ifs, I'm
going to take out this one.
09:13 - Just three separate if statements.
09:15 - Let's look at what happens now.
09:17 - Try to think to yourself
what's going to happen here.
09:20 - So I'm going to run this.
09:22 - I've got a line, now I
see all three of those.
09:25 - So these now are not
related to each other.
09:27 - They're just three related
if statements on their own.
09:30 - So when the mouse is 275,
it's greater than 250,
09:33 - and greater than 150, and greater than 50.
09:35 - So all of these occur.
09:36 - However, if I string them
together with that else right
09:40 - then as soon as the first one is executed
09:43 - the next one is not checked.
09:44 - So these are essentially the
tools you have to work with
09:47 - and it really depends what
it is you want to implement.
09:51 - Okay, there's one other tool,
I'm looking at my watch.
09:56 - Almost to ten minutes here,
which is about the length
09:58 - I'm trying to keep these videos.
09:59 - There's one other tool that
I want to add to this video
10:02 - which is and and or.
10:06 - So let's look at this here.
10:10 - Another thing that you can add
into a conditional statement
10:17 - is an and or an or.
10:19 - So imagine if you said
something like this,
10:22 - if mouseX is greater than 50 and,
10:28 - now this isn't correct syntax,
I'm just going to write
10:30 - the word and here for a second.
10:31 - And mouseX is less than
100, I kind of right.
10:38 - What does this mean?
10:39 - If this is the canvas and this is pixel 50
10:44 - and this is pixel 100 what is and mouse X.
10:53 - So when does this evaluate to true?
10:55 - Well this evaluates to
true anytime the mouse
10:57 - is greater than 50.
11:00 - This evaluates to true anytime
the mouse is less than 100.
11:05 - Both of these together,
the whole statement
11:07 - only evaluates to true if
both of those are true.
11:10 - Which is all the area in
here if you think of it
11:13 - as the intersection.
11:14 - So with an and if can join
two Boolean expressions
11:17 - with an and they both
have to evaluate to true
11:20 - in order for the code here,
for the full statement
11:27 - to evaluate to true.
11:30 - Now you could also have an or here.
11:34 - If you put an or here,
only one of these needs
11:37 - to evaluate to true in
order for this whole,
11:41 - in order for this code
to be executed for this
11:46 - to evaluate to true.
11:47 - So let's think about this,
if mouseX is greater than 50
11:51 - or it's less than 100.
11:52 - Well guess what, that's every number
11:55 - that's ever been invented
or talked about ever
11:57 - in the history of the
universe of numbers, right?
11:59 - Because try to come up with
12:00 - a number that's either greater than 50
12:03 - or less than 100, every number.
12:05 - Two is less than 100,
57 is greater than 50,
12:08 - a 171 is greater than 50.
12:10 - So this is kind of like not
so much of a logical statement
12:13 - but it makes a lot of sense with an and.
12:16 - Now the one thing that I'll mention here
12:18 - is even though I'm using
the words and and or
12:21 - this is not actually the syntax.
12:23 - So the syntax for writing
an and into your code
12:27 - is two ampersands and
the syntax for writing
12:30 - an or into your code is two pipes.
12:34 - Pipe pipe, ampersand, ampersand.
12:37 - So I want to go now and
make two quick examples.
12:43 - I'm going to add an and
to our mouseX example
12:46 - and I'm going to add an or
to our bouncing ball example.
12:48 - You're going to see
how both of those work.
12:51 - Okay, so over here what
I would like to do now
12:55 - is I'm going to go back and I'm
just going to make a rectangle
13:00 - which is that 300, 200, 100,
100 and I'm going to say
13:03 - if mouseX is greater than 200
and mouseX is less than 300.
13:11 - So look at this, if
mouseX is greater than 200
13:14 - and less than 300, let's
see what that results in.
13:19 - Oops, sorry, I'm going to
draw the rectangle always
13:23 - and I'm going to change the fill color
13:28 - if this evaluates to true.
13:30 - Okay, so look at this,
the mouse it's not greater
13:34 - than 200 right now or okay oops, how come?
13:37 - Oh sorry, I did that wrong, I
want it to be greater than 300
13:43 - and less than 400, sorry
about that, my math was off.
13:46 - See look if the mouse
is over the rectangle
13:50 - it's turning purple, otherwise it's not.
13:52 - Of course, if I'm up here
also you can see as long
13:56 - as it's in between this
side of the rectangle
13:58 - and the other side of the
rectangle that fill is executed.
14:01 - So what I might say to
you as an exercise is
14:03 - can you add some more
ands to check if mouseY
14:07 - is greater than the top
and less than the bottom?
14:10 - And this would be the
code for a rollover here.
14:12 - So one of the things you're
going to see as we work
14:15 - with p5.js more and more and
more is that a lot of the.
14:21 - Is that we're going to
eventually be able to get
14:23 - a lot of the stuff for free.
14:24 - Like we're in the browser,
working in the browser,
14:27 - there's rollovers, there's buttons,
14:28 - there's all sorts of things.
14:29 - But as you start to learn to program
14:31 - and just drawing shapes, raw shapes,
14:33 - working with the pixels,
getting your hands dirty
14:35 - with the pixels in the canvas,
you might take some time
14:38 - to try to program a rollover.
14:40 - Try to program a button.
14:41 - That's actually something
I need a video about,
14:44 - something about checking
if the mouse is pressed.
14:46 - Anyway, there's a bunch of
videos, a bunch of other content
14:49 - here I didn't realize I need to make.
14:53 - But this is what can get you started.
14:54 - So try to make some rollovers.
14:56 - Can you put more than one on the screen?
14:57 - Can you get them to change
to different colors?
14:59 - Try things like that.
15:00 - I want to look very quickly at an or.
15:06 - So I'm going to back
also to my other example.
15:11 - And remember this example where
the ball gets to the right
15:18 - and turns around and goes back.
15:20 - When am I doing that?
15:21 - I'm doing that if x is greater than width.
15:24 - So what I want to say now is
if x gets to the right side
15:27 - turn around or if it gets to
the left side turn around.
15:30 - So what's the left side, if
the right side is greater
15:33 - than width, the left side
15:35 - is or if x is greater than zero.
15:38 - And by the way what's
another way I can take.
15:41 - Right when it gets to the right
15:43 - I want speed to become -3.
15:45 - When it gets to the left,
15:46 - I want speed to become +3.
15:48 - So -3, +3, -3, +3.
15:52 - What's a way you can change the number
15:53 - from positive to negative
to positive to negative
15:55 - to positive to negative?
15:57 - All we do is just multiple it by -1.
15:59 - So if I take speed and
said equal to itself
16:02 - times -1, what you will
see here is speed is 3
16:08 - and now is speed is -3.
16:11 - And now when it gets to
the left side, speed is +3.
16:14 - All right, so now you have this circle
16:16 - that's just bouncing back and forth.
16:18 - So this is again something you might start
16:19 - to play with with this example further top
16:22 - and bottom, changing
sides, changing color.
16:24 - Can you have more than
one circle on the screen
16:26 - which is a little bit
tricky right now because
16:28 - we haven't used, we
haven't looked at an array,
16:30 - which is a list of things.
16:31 - But that, so this kind of
fills in some gaps in my mind.
16:35 - I've thought of a lot of other gaps
16:36 - with conditional logic that
hopefully is helping you here.
16:40 - Okay, I'm going to stop this video
16:43 - and I might make one more.
16:44 - I thought of a couple other things
16:46 - that I wanted to mention
about conditional logic.
16:49 - And then I also need to make
some videos about loops.
16:52 - Okay, whoops, stop.

Cleaned transcript:

Hi, so this is third video. I'm going to wrap up this discussion about conditional statements in JavaScript and p5.js here. So we've looked so far at a conditional statement and what it's allowed us to do. It's allowed us to have something, have the draw loop execute differently depending on something that's happening in the code. Whether it's where the user's mouse is or where the shape is on the screen, it changes direction, or it changes color. This has allowed us to create different paths and have the program do different things based on certain conditions that evaluate to either true or false. And this is the essential topic here, but there are a few additional features to the way that you can work with conditional logic that allow for other possibilities. And the first one I want to show you is just the keyword else. So if you think about it, you could say if it's very hot, turn on the air conditioning. And I might add to that statement if it's very hot turn on the air conditioning, otherwise take a nap. I don't know why this doesn't make any sense. But you get the idea, this idea of otherwise. Else is essentially that otherwise. So if I were to say something like if, this is what we're familiar with, if mouseX is greater than 200, if this evaluates to true, execute this code. And we know if it's false, we don't execute the code that's in here. But what about in this other case of otherwise. Else gives us an otherwise, else do this other code. So we now created this sort of sequence nested block. We have an open curly bracket and a closed curly bracket. And then an else and then another open curly bracket and a closed curly bracket. So what I want to do is go find that previous example that I made where if the mouse gets over the righthand side of the screen the circle turns purple. So now what I want to do is say if it's on the righthand side of the screen have it draw a circle or change the shape. So I'm going to, based on, here's an else. If it's on the righthand side of the screen do this. Otherwise do this other thing, okay? So this is where the else comes in. So let's look at that syntax now. Okay, over here, so we can see this bit of code right here. This is where our if statement is and now I'm going to add an else right here. So all I need to do that is type else and add another open curly bracket and notice the editor itself just filled in that second curly bracket for me. So you can see if this is true, do this code. Basically what we're saying that if that's not true do this other code. So I'm going to, I could've kept with color, but what I'm going to do is I'm going to take this ellipse and put that here and then here I'm going to say draw a rectangle. So now we can see, and I'll resume back out. We can see do this, otherwise do that. So let's run this code and we can see. Okay, well right now the mouse is not greater than 300. So when it starts, the program's executing that otherwise statement and as the mouse moves over we got the circle. So you can see that circle is turning to a square based on where the mouse is. We've got this conditional logic, okay. Now there's more to this than that. So in addition to having an else, so one thing I should know here is a conditional statement you can only ever have one if and one else. But there's something that you can put in between there. If mouseX is greater than 200, execute this code. Now I could say otherwise execute some other piece of code. But I'm going to say something different. I'm going to say otherwise if such and such. Else if mouseX is greater than 100, execute this bit of code. Else if mouseX is greater than 50, execute this bit of code. In all other cases else, execute this bit of code. So these if statements can actually become this much longer piece of logic where you're testing a whole bunch of different conditions. A kind of classic example of this. It doesn't really apply to drawing in p5, but to sort of this logic as a program that grades somebody. So you could say that if the grade is greater than 90, assign the letter grade A. Otherwise, if it's greater than 80, assign the letter grade B. Otherwise, if it's greater than 70, C, et cetera. So you can imagine there's a bunch of different conditions that we're testing and you have to start with an if. You don't have to start with an else, but you can only have one otherwise in all other cases. And you can have as many else ifs as you want in between. So again, this idea actually makes a lot more sense in the context of a practical example and we can look at testing where the mouse is on the screen. Is it here or is it here or is it here or is it here? Which one of these conditions has it met? So I want to actually put this in the code. But I'm going to do it in a slightly different way. This is actually correct, but I'm going to start with mouseX greater than 50, then 100 then 200, and reverse this order and it's not going to work and I want to also discuss why, which is sort of a key aspect about how else if works. This is a really tricky interesting problem if you haven't seen this before. Okay, so now I'm over here and I'm going to add, so I'm going to start with mouse. I really should've done color here because now I have to think of lots more shapes, but it's fine. So if mouseX is greater than 50, a circle, else if mouseX is greater than 150, do a rectangle, else if mouseX is greater than 250, let's do a line. And you know what, I'm going to do, just 'cause I'm, and then all other cases do a point, 300, 200. Okay, so now we can see I've strung together this conditional logic. And I'm going to kind of try to zoom into it a little bit to make it a little bigger here. You can see, okay, if the mouse is greater than 50, otherwise if it's greater than 150, otherwise if it's greater than otherwise draw a point. So I should see either an ellipse, a rectangle, a line or a point. Now this is isn't going to work, so keep your mind churning about why it's not. Okay, so there we go, we've got a point which makes sense. In all other cases right, which it's not greater than 50, 150, 250. It's not greater than any of these, we should see a point. So now when I get to greater than 50, what do we get a circle. Now I should get to greater than 150, I should have a rectangle or greater than 250 a line. So why are these not, why are, why am I not seeing a rectangle or a line? Why, why, why, this is the key distinction here. So one thing that's true about this is as soon as any one of these evaluates to true, the program kicks out of the if statement and goes to the next lines of code that are below that if statement. Soon as any one of these evaluates to true, it doesn't check the next one. So the order of these is very, very important. Only one of these sections of code can be executed. Not more than one. If you want more than one to be executed, there's a different way of doing it which I'll mention afterwards. But for a conditional statement, this is one whole statement where if is joined with else if, else if, and else. So only one of these can be evaluated. So let's go back here and look at this again. Let's think about if mouseX has the value of 275. Well in our minds, what we want to happen is 275 is greater than 250 so we should see that line. But let's be the computer for the a second and go through this logic. MouseX is 275, is 275 greater than 50, yes, it's true. It is greater than 250, so an ellipse is drawn. And remember as soon as the first thing evaluates to true we kick out of that and go to the end. So none of these others are checked. So the order of this really matters. If I had just checked if it was greater than 250 first, then I would've found that one, right? So the order here is really important. So just in this particular scenario, the way that I've written this code, I need to check 250, then 150, then 50. And we can run this program and we should see first we're starting with a point then we get a line, then we get a square. And I put these kind of close together, then a circle. So based on where the mouse is, a different shape is drawn. So this is a really sort of crucial piece of information as to how these if statements work. Okay, so now it is true, however, that I could also. I hesitate to do this, but I could write this with it not being, without these else. So if I take out these else, but leave maybe, I'm going to, else ifs, I'm going to take out this one. Just three separate if statements. Let's look at what happens now. Try to think to yourself what's going to happen here. So I'm going to run this. I've got a line, now I see all three of those. So these now are not related to each other. They're just three related if statements on their own. So when the mouse is 275, it's greater than 250, and greater than 150, and greater than 50. So all of these occur. However, if I string them together with that else right then as soon as the first one is executed the next one is not checked. So these are essentially the tools you have to work with and it really depends what it is you want to implement. Okay, there's one other tool, I'm looking at my watch. Almost to ten minutes here, which is about the length I'm trying to keep these videos. There's one other tool that I want to add to this video which is and and or. So let's look at this here. Another thing that you can add into a conditional statement is an and or an or. So imagine if you said something like this, if mouseX is greater than 50 and, now this isn't correct syntax, I'm just going to write the word and here for a second. And mouseX is less than 100, I kind of right. What does this mean? If this is the canvas and this is pixel 50 and this is pixel 100 what is and mouse X. So when does this evaluate to true? Well this evaluates to true anytime the mouse is greater than 50. This evaluates to true anytime the mouse is less than 100. Both of these together, the whole statement only evaluates to true if both of those are true. Which is all the area in here if you think of it as the intersection. So with an and if can join two Boolean expressions with an and they both have to evaluate to true in order for the code here, for the full statement to evaluate to true. Now you could also have an or here. If you put an or here, only one of these needs to evaluate to true in order for this whole, in order for this code to be executed for this to evaluate to true. So let's think about this, if mouseX is greater than 50 or it's less than 100. Well guess what, that's every number that's ever been invented or talked about ever in the history of the universe of numbers, right? Because try to come up with a number that's either greater than 50 or less than 100, every number. Two is less than 100, 57 is greater than 50, a 171 is greater than 50. So this is kind of like not so much of a logical statement but it makes a lot of sense with an and. Now the one thing that I'll mention here is even though I'm using the words and and or this is not actually the syntax. So the syntax for writing an and into your code is two ampersands and the syntax for writing an or into your code is two pipes. Pipe pipe, ampersand, ampersand. So I want to go now and make two quick examples. I'm going to add an and to our mouseX example and I'm going to add an or to our bouncing ball example. You're going to see how both of those work. Okay, so over here what I would like to do now is I'm going to go back and I'm just going to make a rectangle which is that 300, 200, 100, 100 and I'm going to say if mouseX is greater than 200 and mouseX is less than 300. So look at this, if mouseX is greater than 200 and less than 300, let's see what that results in. Oops, sorry, I'm going to draw the rectangle always and I'm going to change the fill color if this evaluates to true. Okay, so look at this, the mouse it's not greater than 200 right now or okay oops, how come? Oh sorry, I did that wrong, I want it to be greater than 300 and less than 400, sorry about that, my math was off. See look if the mouse is over the rectangle it's turning purple, otherwise it's not. Of course, if I'm up here also you can see as long as it's in between this side of the rectangle and the other side of the rectangle that fill is executed. So what I might say to you as an exercise is can you add some more ands to check if mouseY is greater than the top and less than the bottom? And this would be the code for a rollover here. So one of the things you're going to see as we work with p5.js more and more and more is that a lot of the. Is that we're going to eventually be able to get a lot of the stuff for free. Like we're in the browser, working in the browser, there's rollovers, there's buttons, there's all sorts of things. But as you start to learn to program and just drawing shapes, raw shapes, working with the pixels, getting your hands dirty with the pixels in the canvas, you might take some time to try to program a rollover. Try to program a button. That's actually something I need a video about, something about checking if the mouse is pressed. Anyway, there's a bunch of videos, a bunch of other content here I didn't realize I need to make. But this is what can get you started. So try to make some rollovers. Can you put more than one on the screen? Can you get them to change to different colors? Try things like that. I want to look very quickly at an or. So I'm going to back also to my other example. And remember this example where the ball gets to the right and turns around and goes back. When am I doing that? I'm doing that if x is greater than width. So what I want to say now is if x gets to the right side turn around or if it gets to the left side turn around. So what's the left side, if the right side is greater than width, the left side is or if x is greater than zero. And by the way what's another way I can take. Right when it gets to the right I want speed to become 3. When it gets to the left, I want speed to become +3. So 3, +3, 3, +3. What's a way you can change the number from positive to negative to positive to negative to positive to negative? All we do is just multiple it by 1. So if I take speed and said equal to itself times 1, what you will see here is speed is 3 and now is speed is 3. And now when it gets to the left side, speed is +3. All right, so now you have this circle that's just bouncing back and forth. So this is again something you might start to play with with this example further top and bottom, changing sides, changing color. Can you have more than one circle on the screen which is a little bit tricky right now because we haven't used, we haven't looked at an array, which is a list of things. But that, so this kind of fills in some gaps in my mind. I've thought of a lot of other gaps with conditional logic that hopefully is helping you here. Okay, I'm going to stop this video and I might make one more. I thought of a couple other things that I wanted to mention about conditional logic. And then I also need to make some videos about loops. Okay, whoops, stop.
