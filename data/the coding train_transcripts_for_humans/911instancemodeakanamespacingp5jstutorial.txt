With timestamps:

00:00 - hello in this video I'm going to talk
00:03 - about something called p5.js instance
00:06 - mode what is that why would you want to
00:09 - use it what's the point of that well ok
00:12 - so by the way this is also sometimes we
00:15 - related or refer to as name spacing in
00:18 - JavaScript so what do I mean by name
00:19 - spacing instance mode that sort of thing
00:21 - so look at this
00:22 - a p5.js sketch a single global variable
00:25 - X a function setup and a function draw I
00:28 - hit run and we see this nice purplish
00:31 - circle moving about kind of painting on
00:34 - the screen you know this is the kind of
00:35 - stuff we do every day in our lives make
00:38 - these little p5 sketches with these
00:39 - purple circles that type of thing
00:41 - so where might this need borer then just
00:48 - this instance mode why would you need
00:50 - instance mode ok so here's one scenario
00:52 - let's say I wanted to do this create
00:56 - can't and let's make this canvas smaller
00:58 - 200 200 and let's make it what if I
01:01 - wanted to have two canvases in the
01:04 - window so when I run this sketch and I
01:06 - look at the browser page I would see
01:08 - somehow like two different canvases well
01:11 - clearly that doesn't work p5.js in its
01:14 - default global mode plain old regular
01:17 - way it's written you can't actually add
01:19 - two canvases to the page so this is one
01:22 - reason why you need instance mode here's
01:25 - another reason what if I were to say
01:29 - something like VAR window equals hello
01:39 - Oh wonder if this will break everything
01:42 - it's giving me a warning by the way
01:44 - let's run this okay so this happened to
01:47 - work but it's a little bit dangerous and
01:50 - let's see what the warning is right look
01:51 - at this redefinition of window so window
01:54 - is a very important key global variable
01:58 - that just exists in javascript in the
02:00 - browser it's a variable is referring to
02:01 - the window object this window that's the
02:04 - whole sort of like browser window itself
02:06 - but I want to have like a window
02:08 - variable in my p5.js sketch because I
02:10 - like the
02:11 - weird window and it's what I want to
02:12 - name my variable this is a problem
02:15 - because I don't want to mess with the
02:17 - global namespace so that sounds like a
02:21 - horrible thing global namespace and for
02:23 - the most part in your life I hope you
02:25 - don't have to worry about the global
02:26 - namespace but sometimes you do and in
02:28 - the way that you write p5.js code saying
02:32 - function set up function draw var X all
02:34 - those things are global variables that
02:36 - exist across all of your JavaScript code
02:39 - so if you also are incorporating other
02:42 - libraries like d3 or popcorn or some
02:47 - other thing that you might have variable
02:49 - names conflict with other things and
02:51 - this can be a problem so in essence name
02:53 - spacing is the act of saying all of the
02:57 - variables and things associated with my
02:59 - particular program are going to be under
03:01 - a particular name like I'm always gonna
03:04 - say instead of var X I'm always going to
03:06 - say Schiffman X instead of var window
03:09 - I'm always gonna say Schiffman dot
03:11 - window so Schiffman dot window can never
03:14 - conflict with the global window because
03:15 - it isn't the global window it's
03:17 - Schiffman dot window so these are the
03:19 - main two reasons if you're in some kind
03:22 - of complex scenario where namespacing
03:25 - having everything in your p5 sketch
03:26 - under a particular name becomes
03:28 - important to you or simply if you need
03:31 - more than one canvas on the screen Minh
03:35 - the screen in the window itself these
03:36 - are reasons why you need instance mode
03:37 - so hopefully that makes sense let's
03:39 - actually look at here's the thing though
03:41 - if you don't really need instance mode
03:42 - maybe you don't want instance mode
03:44 - because it's like a lot of extra code to
03:46 - write and it looks a little bit
03:47 - confusing but it is interesting and you
03:49 - might learn something you're still
03:51 - watching this video ok here we go so
03:53 - what I want to do is go back to this
03:57 - sketch just the way it was now where's
03:58 - the bottom of the editor window I'm
04:00 - zoomed in no wonder so let me move this
04:02 - back over here we look at where I am I'm
04:04 - standing next to the code great so the
04:06 - first thing I want to do is figure out
04:08 - how we're gonna write the instance mode
04:10 - oh I was gonna use the whiteboard I
04:12 - forget it add a new whiteboard I was
04:15 - gonna use but this video doesn't really
04:16 - merit it we'll see so basically what I
04:21 - what I want to do is I want to say
04:23 - something like
04:27 - this is the idea of namespacing I want
04:32 - to create a actual object right this is
04:35 - a p5 does this kind of magically before
04:38 - you you shouldn't be able to do what we
04:41 - just did just like write a SAP function
04:43 - and somehow it magically gets triggered
04:45 - and write a draw function and somehow
04:46 - magically it Luc's p5 is written this
04:49 - way so that you can kind of get started
04:51 - quickly and behind the scenes it's like
04:52 - looking for a global set up function
04:54 - looking for a global draw function but
04:56 - ultimately what exists is like a p5
04:59 - object and I'm calling it my p5 excuse
05:02 - me I want to make a new p5 object and
05:05 - that new p5 object should have in it all
05:07 - of the variables associated with my
05:09 - sketch and all of the that all of the
05:16 - functions associated I sketch the set up
05:18 - the draw all that sort of stuff so
05:23 - awkward edit just happened because I
05:26 - messed something up and went off on a
05:27 - tangent but I'm back now and the point
05:29 - where I left you was and I also made
05:31 - some changes in the code the very slight
05:33 - you know pause look at it nothing
05:34 - important but the point where I am at is
05:37 - instead of having all of this stuff in
05:39 - the global namespace a global X a global
05:42 - Y a global set up a global draw what I
05:45 - want is to smoosh everything inside of
05:48 - this object this new p5 object I'm
05:51 - making which I'm storing in a variable
05:52 - called my p5 so how do I do that well we
05:57 - see that there's this line of code that
05:58 - says my p5 equals a new p5 and then
06:01 - we're passing in this thing called
06:02 - sketch so sketch the variable sketch is
06:06 - actually going to serve essentially as
06:09 - the template the template for the thing
06:15 - that's actually going to run so I make a
06:17 - variable called sketch which it actually
06:19 - equals a function which is a little bit
06:21 - weird but this is just kind of how
06:22 - things wouldn't you don't know it
06:23 - something should be in JavaScript it
06:25 - probably should just be a function it's
06:26 - actually this is a closure and I don't I
06:28 - mean I'm just even saying that that's
06:30 - where I that's why I had to stop the
06:31 - video and start over it's over to go
06:33 - down
06:34 - that road but you can think of this
06:35 - function as the template for creating
06:38 - the p5 sketch so the line of code that
06:41 - says VAR my p5 equals new p5 is actually
06:44 - making the p5 sketch causing it to run
06:46 - and this thing called sketches where I'm
06:48 - going to put in all the pieces so
06:50 - without I need both of these things
06:53 - without the template I can't have the
06:55 - sketch but I can't make a sketch without
06:56 - the template so let's look at how we do
06:58 - that so notice how this function takes
07:01 - an argument and I arbitrarily called it
07:03 - P because P is the thing that I'm going
07:05 - to attach all the stuff that's gonna go
07:07 - in the sketch to I'm gonna say px equals
07:11 - 100 and py equals 100 and then I'm going
07:14 - to say P dot setup equals function and
07:18 - I'm going to say P draw equals function
07:21 - so now this you can see I'm filling in
07:24 - on name spacing everything I'm putting
07:26 - everything under this variable P P dot
07:29 - said eppie draw px and then we can see
07:32 - what's the other stuff that goes and set
07:34 - up I can copy this and get it and I can
07:38 - say P dot create canvas and P P dot
07:42 - background I can zoom out a little bit I
07:44 - can go down here and get all this stuff
07:46 - that was in draw and I can delete all of
07:49 - this now I don't need any of this global
07:51 - stuff anymore and I can paste this all
07:54 - in hearing say P dot fill P dot stroke
07:56 - and P dot ellipse and px and P dot y +
08:03 - PX I should make this in a song in P dot
08:05 - y and P dot random in P dot random but I
08:09 - don't need to say P 10 because 10 is a
08:11 - number okay and now I run this this work
08:17 - would I get wrong is there an error no
08:19 - error okay so hold on let's look at this
08:21 - this looks pretty good to me
08:23 - what I did is I created and you know
08:27 - what I wonder if this actually needs to
08:32 - be below yeah uncaught reference err so
08:36 - so interesting enough I Jenna I feel
08:37 - like muttering under my breath the
08:39 - mistake that I made but I need to
08:41 - declare the template first and fill
08:43 - everything in before I can actually make
08:45 - p5 object now I did get an error uncut
08:47 - reference our X is not defined line 14
08:50 - look at that x and y are no longer
08:52 - global variables they're named spaced
08:54 - under this thing called P P dot X P dot
08:58 - y and there we go now we have our sketch
09:01 - and I I wish this sketch wasn't so long
09:03 - I can remove a few line breaks here just
09:06 - so you can kind of see it all on this
09:07 - one page but you can see now here's the
09:09 - template for the sketch everything name
09:12 - space and now I'm creating that sketch
09:14 - now there's some interesting things
09:16 - going on here for example what if I'm
09:20 - gonna do something totally insane but
09:23 - what outside of this what if I were to
09:26 - say set time out this is a JavaScript
09:29 - function by the way a JavaScript
09:30 - function that allows you to do what a
09:34 - trigger event like I'm gonna reset
09:38 - background I'm off on a little bit of a
09:41 - tangent here but that's okay and I do
09:43 - that in 3 seconds 3,000 milliseconds
09:46 - then I'm gonna define that function
09:47 - reset background and in that function
09:51 - I'm gonna say my p5 dot background 2 v
09:57 - 51 so look at this that sketch that p5
10:02 - sketch is now inside of this object my
10:04 - p5 so elsewhere in the code right this
10:07 - is how I might use p5 in connection with
10:09 - another library if I'm in some other
10:11 - piece of code that's completely outside
10:13 - of the whole set of a drawn p5 thing I
10:15 - can reference that sketch call functions
10:17 - on it execute variables in it by saying
10:20 - my p5 so if I say my p5 dot X I'm
10:22 - talking about this particular X up here
10:26 - but remember in the template
10:28 - everything's getting attached to P which
10:30 - gets put into sketch and sketch then
10:33 - gets made into my p5 and after the fact
10:35 - now everything associated with that
10:36 - sketch is in the variable my p5 so let's
10:39 - see if this works and I can run this and
10:41 - we can count to three
10:42 - one one thousand two one thousand three
10:44 - one thousand right and if I change this
10:47 - to set interval we can say one one
10:49 - thousand two one thousand three one
10:51 - thousand background 1 1203 1,001 1,002
10:56 - thing went off you know what I should do
10:58 - is I should also say my p5x is in the
11:02 - middle now look at this my p5 dot y now
11:06 - look at this what's wrong with this
11:08 - something is horribly wrong here not
11:10 - horribly wrong here right remember
11:11 - everything is namespace width and height
11:13 - don't exist in the global world so I
11:15 - need to say my p5 dot with my P v dot
11:19 - height and I can run this now one one
11:22 - thousand two one thousand three one
11:23 - thousand one one thousand two one
11:25 - thousand three one thousand okay so you
11:28 - can see that this works and it's kind of
11:30 - a nice thing that you've got and you
11:32 - know it's hard to see on that camera
11:33 - went off but I'm gonna turn it back on
11:35 - it sorry it might be a little bit harder
11:36 - to see the the value here just in this
11:38 - sort of like trivial example but you
11:40 - could imagine if you've got a lot of
11:42 - code that this could be useful but one
11:44 - more thing let's do before we go in this
11:46 - video which is probably about 12 minutes
11:48 - so far is let's look at how this can
11:49 - allow you to have two canvases on the
11:52 - same page so what uh so let's look at
11:55 - that so one thing I could do is I could
11:57 - rename this to sketch one actually
12:00 - insanely you're something that's kind of
12:03 - insane before I even do that let's call
12:04 - this my p-51 and let's just do this my
12:08 - p5 to look at this and I'm gonna run
12:10 - this look at that too on the page opera
12:13 - so I could just duplicate that sketch by
12:15 - the way without oops and you know only
12:19 - one of them let's do this this reset
12:22 - background thing so I duplicate that
12:26 - sketch but notice only one of them is
12:29 - getting its background reset because I'm
12:30 - only referring to that one I'm after
12:31 - your following because I just like I'm
12:32 - thinking of this weird stuff on the fly
12:34 - but this is actually kind of great about
12:36 - instance mode I made this template for a
12:38 - sketch object-oriented programming
12:40 - hello I made this template for the
12:41 - sketch right and then I'm baking copies
12:45 - of it and I don't have to rewrite that
12:46 - code I could just duplicate it and we
12:48 - could write this in a loop but suddenly
12:49 - have hundreds of these on the page all
12:50 - the separate canvases but you'll notice
12:53 - that I could also say I could call this
12:55 - sketch one and I could call this sketch
13:02 - two and I could I'm gonna do something
13:06 - totally uninteresting here which is just
13:08 - basically have it be the same sketch but
13:10 - with
13:11 - different color and you can see now I
13:13 - have two sketches two canvases on the
13:16 - same page I can refer to them as my p-51
13:20 - I don't like my names here my p-51 in
13:25 - somewhere else
13:26 - so what instance mode allows you to do
13:28 - is take all the stuff that you would
13:30 - normally write globally and put it
13:33 - inside of this like function this
13:35 - closure function this function that and
13:37 - attach everything to this variable P px
13:40 - py p dot senate p draw then you have
13:42 - this template for making versions of
13:44 - that sketch that will appear on the page
13:46 - and you can control whether they get
13:48 - made yes or no so hopefully this makes
13:51 - sense to you and as you might find this
13:53 - useful in different scenarios where you
13:55 - need it I I'm often saying like oh I do
13:57 - that I think you need instant and now I
14:00 - can point people to this video and so
14:02 - ask your questions in the comments of
14:04 - trying if you make something like you
14:05 - know you're looking to do some kind of
14:07 - weird experiment maybe like fill the
14:09 - screen with a hundred copies of the same
14:10 - sketch and see what happens that way and
14:13 - also you know what happens when you
14:14 - start integrating the Dom library with
14:16 - this stuff that's kind of interesting to
14:17 - think about using p5 in conjunction with
14:20 - another library I mean spacing if try
14:22 - this stuff out if you do anything I
14:23 - share it in the comments below and I
14:25 - look forward to seeing you in another
14:27 - video in the future

Cleaned transcript:

hello in this video I'm going to talk about something called p5.js instance mode what is that why would you want to use it what's the point of that well ok so by the way this is also sometimes we related or refer to as name spacing in JavaScript so what do I mean by name spacing instance mode that sort of thing so look at this a p5.js sketch a single global variable X a function setup and a function draw I hit run and we see this nice purplish circle moving about kind of painting on the screen you know this is the kind of stuff we do every day in our lives make these little p5 sketches with these purple circles that type of thing so where might this need borer then just this instance mode why would you need instance mode ok so here's one scenario let's say I wanted to do this create can't and let's make this canvas smaller 200 200 and let's make it what if I wanted to have two canvases in the window so when I run this sketch and I look at the browser page I would see somehow like two different canvases well clearly that doesn't work p5.js in its default global mode plain old regular way it's written you can't actually add two canvases to the page so this is one reason why you need instance mode here's another reason what if I were to say something like VAR window equals hello Oh wonder if this will break everything it's giving me a warning by the way let's run this okay so this happened to work but it's a little bit dangerous and let's see what the warning is right look at this redefinition of window so window is a very important key global variable that just exists in javascript in the browser it's a variable is referring to the window object this window that's the whole sort of like browser window itself but I want to have like a window variable in my p5.js sketch because I like the weird window and it's what I want to name my variable this is a problem because I don't want to mess with the global namespace so that sounds like a horrible thing global namespace and for the most part in your life I hope you don't have to worry about the global namespace but sometimes you do and in the way that you write p5.js code saying function set up function draw var X all those things are global variables that exist across all of your JavaScript code so if you also are incorporating other libraries like d3 or popcorn or some other thing that you might have variable names conflict with other things and this can be a problem so in essence name spacing is the act of saying all of the variables and things associated with my particular program are going to be under a particular name like I'm always gonna say instead of var X I'm always going to say Schiffman X instead of var window I'm always gonna say Schiffman dot window so Schiffman dot window can never conflict with the global window because it isn't the global window it's Schiffman dot window so these are the main two reasons if you're in some kind of complex scenario where namespacing having everything in your p5 sketch under a particular name becomes important to you or simply if you need more than one canvas on the screen Minh the screen in the window itself these are reasons why you need instance mode so hopefully that makes sense let's actually look at here's the thing though if you don't really need instance mode maybe you don't want instance mode because it's like a lot of extra code to write and it looks a little bit confusing but it is interesting and you might learn something you're still watching this video ok here we go so what I want to do is go back to this sketch just the way it was now where's the bottom of the editor window I'm zoomed in no wonder so let me move this back over here we look at where I am I'm standing next to the code great so the first thing I want to do is figure out how we're gonna write the instance mode oh I was gonna use the whiteboard I forget it add a new whiteboard I was gonna use but this video doesn't really merit it we'll see so basically what I what I want to do is I want to say something like this is the idea of namespacing I want to create a actual object right this is a p5 does this kind of magically before you you shouldn't be able to do what we just did just like write a SAP function and somehow it magically gets triggered and write a draw function and somehow magically it Luc's p5 is written this way so that you can kind of get started quickly and behind the scenes it's like looking for a global set up function looking for a global draw function but ultimately what exists is like a p5 object and I'm calling it my p5 excuse me I want to make a new p5 object and that new p5 object should have in it all of the variables associated with my sketch and all of the that all of the functions associated I sketch the set up the draw all that sort of stuff so awkward edit just happened because I messed something up and went off on a tangent but I'm back now and the point where I left you was and I also made some changes in the code the very slight you know pause look at it nothing important but the point where I am at is instead of having all of this stuff in the global namespace a global X a global Y a global set up a global draw what I want is to smoosh everything inside of this object this new p5 object I'm making which I'm storing in a variable called my p5 so how do I do that well we see that there's this line of code that says my p5 equals a new p5 and then we're passing in this thing called sketch so sketch the variable sketch is actually going to serve essentially as the template the template for the thing that's actually going to run so I make a variable called sketch which it actually equals a function which is a little bit weird but this is just kind of how things wouldn't you don't know it something should be in JavaScript it probably should just be a function it's actually this is a closure and I don't I mean I'm just even saying that that's where I that's why I had to stop the video and start over it's over to go down that road but you can think of this function as the template for creating the p5 sketch so the line of code that says VAR my p5 equals new p5 is actually making the p5 sketch causing it to run and this thing called sketches where I'm going to put in all the pieces so without I need both of these things without the template I can't have the sketch but I can't make a sketch without the template so let's look at how we do that so notice how this function takes an argument and I arbitrarily called it P because P is the thing that I'm going to attach all the stuff that's gonna go in the sketch to I'm gonna say px equals 100 and py equals 100 and then I'm going to say P dot setup equals function and I'm going to say P draw equals function so now this you can see I'm filling in on name spacing everything I'm putting everything under this variable P P dot said eppie draw px and then we can see what's the other stuff that goes and set up I can copy this and get it and I can say P dot create canvas and P P dot background I can zoom out a little bit I can go down here and get all this stuff that was in draw and I can delete all of this now I don't need any of this global stuff anymore and I can paste this all in hearing say P dot fill P dot stroke and P dot ellipse and px and P dot y + PX I should make this in a song in P dot y and P dot random in P dot random but I don't need to say P 10 because 10 is a number okay and now I run this this work would I get wrong is there an error no error okay so hold on let's look at this this looks pretty good to me what I did is I created and you know what I wonder if this actually needs to be below yeah uncaught reference err so so interesting enough I Jenna I feel like muttering under my breath the mistake that I made but I need to declare the template first and fill everything in before I can actually make p5 object now I did get an error uncut reference our X is not defined line 14 look at that x and y are no longer global variables they're named spaced under this thing called P P dot X P dot y and there we go now we have our sketch and I I wish this sketch wasn't so long I can remove a few line breaks here just so you can kind of see it all on this one page but you can see now here's the template for the sketch everything name space and now I'm creating that sketch now there's some interesting things going on here for example what if I'm gonna do something totally insane but what outside of this what if I were to say set time out this is a JavaScript function by the way a JavaScript function that allows you to do what a trigger event like I'm gonna reset background I'm off on a little bit of a tangent here but that's okay and I do that in 3 seconds 3,000 milliseconds then I'm gonna define that function reset background and in that function I'm gonna say my p5 dot background 2 v 51 so look at this that sketch that p5 sketch is now inside of this object my p5 so elsewhere in the code right this is how I might use p5 in connection with another library if I'm in some other piece of code that's completely outside of the whole set of a drawn p5 thing I can reference that sketch call functions on it execute variables in it by saying my p5 so if I say my p5 dot X I'm talking about this particular X up here but remember in the template everything's getting attached to P which gets put into sketch and sketch then gets made into my p5 and after the fact now everything associated with that sketch is in the variable my p5 so let's see if this works and I can run this and we can count to three one one thousand two one thousand three one thousand right and if I change this to set interval we can say one one thousand two one thousand three one thousand background 1 1203 1,001 1,002 thing went off you know what I should do is I should also say my p5x is in the middle now look at this my p5 dot y now look at this what's wrong with this something is horribly wrong here not horribly wrong here right remember everything is namespace width and height don't exist in the global world so I need to say my p5 dot with my P v dot height and I can run this now one one thousand two one thousand three one thousand one one thousand two one thousand three one thousand okay so you can see that this works and it's kind of a nice thing that you've got and you know it's hard to see on that camera went off but I'm gonna turn it back on it sorry it might be a little bit harder to see the the value here just in this sort of like trivial example but you could imagine if you've got a lot of code that this could be useful but one more thing let's do before we go in this video which is probably about 12 minutes so far is let's look at how this can allow you to have two canvases on the same page so what uh so let's look at that so one thing I could do is I could rename this to sketch one actually insanely you're something that's kind of insane before I even do that let's call this my p51 and let's just do this my p5 to look at this and I'm gonna run this look at that too on the page opera so I could just duplicate that sketch by the way without oops and you know only one of them let's do this this reset background thing so I duplicate that sketch but notice only one of them is getting its background reset because I'm only referring to that one I'm after your following because I just like I'm thinking of this weird stuff on the fly but this is actually kind of great about instance mode I made this template for a sketch objectoriented programming hello I made this template for the sketch right and then I'm baking copies of it and I don't have to rewrite that code I could just duplicate it and we could write this in a loop but suddenly have hundreds of these on the page all the separate canvases but you'll notice that I could also say I could call this sketch one and I could call this sketch two and I could I'm gonna do something totally uninteresting here which is just basically have it be the same sketch but with different color and you can see now I have two sketches two canvases on the same page I can refer to them as my p51 I don't like my names here my p51 in somewhere else so what instance mode allows you to do is take all the stuff that you would normally write globally and put it inside of this like function this closure function this function that and attach everything to this variable P px py p dot senate p draw then you have this template for making versions of that sketch that will appear on the page and you can control whether they get made yes or no so hopefully this makes sense to you and as you might find this useful in different scenarios where you need it I I'm often saying like oh I do that I think you need instant and now I can point people to this video and so ask your questions in the comments of trying if you make something like you know you're looking to do some kind of weird experiment maybe like fill the screen with a hundred copies of the same sketch and see what happens that way and also you know what happens when you start integrating the Dom library with this stuff that's kind of interesting to think about using p5 in conjunction with another library I mean spacing if try this stuff out if you do anything I share it in the comments below and I look forward to seeing you in another video in the future
