With timestamps:

00:00 - hello welcome to a video tutorial about
00:02 - slit scanning in particular writing a
00:04 - slit scanning application with code with
00:07 - code written in the processing
00:09 - programming development environment and
00:10 - an eye follow-up video I'll also show
00:12 - you how to do this in the browser in
00:14 - JavaScript using p5.js so the first
00:16 - thing i want to talk about is what is
00:17 - slitscan so this is not an original idea
00:20 - of mine there are countless examples of
00:22 - slit scanning throughout the history of
00:24 - photography filmmaking computational
00:26 - design and I want to point you towards
00:28 - this online catalog written by goal on
00:30 - Levin I will include a link in maybe a
00:33 - YouTube annotation or in the description
00:34 - below take a look and read about all the
00:37 - different kinds of examples of scanning
00:39 - and where it's appeared throughout the
00:41 - history of art and all sorts of other
00:43 - things so first let's just talk about
00:46 - what slit scanning is so what slit
00:49 - scanning involves is it involves a
00:51 - source image you can see I have a live
00:54 - video coming from a webcam over here and
00:56 - it involves taking slices of that video
00:59 - and putting them next to each other over
01:01 - time what do I mean by that maybe if I
01:03 - draw a diagram over here on this
01:05 - whiteboard that will help make it more
01:07 - clear so let's say this is a video and
01:12 - this is a canvas now this thing is
01:19 - happening over time we're getting image
01:22 - after image after image frame by frame
01:24 - by frame in this video image and what I
01:28 - want to do is only ever take a single
01:30 - column of pixels and I could take a
01:35 - single column from anywhere in that
01:36 - image I'm going to choose to take it
01:38 - from the center probably makes the most
01:39 - sense for the sort of classic slit
01:41 - scanning effect so I want to take this
01:43 - just this column of pixels and I want to
01:46 - place this column right here then the
01:48 - next moment in time I want to take this
01:51 - column again and I want to place it
01:52 - right next to it and the next moment in
01:54 - time I want to take that column again
01:56 - and place it right next to it so those
01:58 - columns of pixels are going to be placed
02:00 - next to each other moment after moment
02:02 - after moment and if I come back over
02:04 - here you can see by the way that the the
02:08 - center I'm like what am I looking at the
02:10 - center pixels are all green
02:13 - if I'm not standing in the webcams view
02:16 - you'll just see a wash of green moving
02:19 - across the screen if I were to stand in
02:21 - the center but very very still you can
02:26 - see that same column of pixels is being
02:29 - copied again and again and again as I
02:32 - turn my head the effects change as I
02:35 - move my head in the effects change even
02:37 - more as I do the what's this called the
02:41 - wave the break boogie I don't know what
02:44 - it is snow is not that interesting in
02:46 - fact I could if I move at the exact
02:48 - speed of the slit scanning effects try
02:51 - to get almost end I knocked over a light
02:53 - everything's fine you can see almost
02:57 - right over here like an exact almost
02:59 - view of my face
03:00 - so you get the idea hopefully you now
03:02 - have a sense of what the slip scanning
03:03 - effect is let's figure out how to
03:05 - program it so obviously it's there a
03:10 - goal on actually includes right here
03:12 - some code for doing this in processing
03:14 - I'm going to write that code from
03:16 - scratch right now I'm going to leave
03:20 - that up there for reference let's open
03:21 - up processing that's the version that
03:24 - was running but let's make a new blank
03:25 - sketch so I want to do this entirely
03:29 - from scratch so I'm going to call this
03:32 - slit scan tutorial and I'm going to put
03:36 - this on the desktop okay so the first
03:40 - thing we need to do is we need to get
03:42 - that video image into processing and the
03:44 - way that we do that is by making a
03:46 - capture object and I'm going to call it
03:48 - video and I'm going to write the setup
03:50 - function I'm going to write the draw
03:51 - function I'm going to make so let's have
03:54 - the village start with low resolution
03:57 - just to kind of make things simple let's
03:59 - start with the thinking of the video
04:01 - coming in at 320 by 240 and so I want to
04:05 - make then though canvas 240 pixels high
04:07 - but a lot wider and I could make it any
04:09 - width right because I'm just I have as
04:12 - many I have put it could be as why does
04:14 - sometimes I want to copy that that
04:16 - column of pixels across so I'm going to
04:18 - say size and let's just start go with
04:20 - 640 by 240 then I want to make a new
04:23 - capture object the arguments that the
04:26 - capture
04:27 - Jack needs in order to connect to the
04:28 - camera are the keyword this I would love
04:32 - I could make a whole video just about
04:33 - the keyword this and I probably have but
04:35 - this is just referencing this particular
04:37 - sketch so the camera knows to
04:38 - communicate with this sketch and then I
04:40 - want to give a width and a height so
04:43 - there's lots of other things you can do
04:44 - when initializing the capture object if
04:46 - you have multiple cameras or you want a
04:48 - different frames per second but by
04:49 - default this is all I want to do then I
04:51 - need to say video start I want to start
04:55 - capturing from the camera now you'll
04:56 - notice I've got some red squiggly lines
04:59 - here it doesn't seem to know what
05:00 - capture is so the processing stuff for
05:04 - video capture movie comes from the video
05:07 - library which is it necessarily
05:09 - installed with processing by default I
05:11 - do have a video that it will refer to
05:12 - you too it's where it shows how to
05:14 - install the video library I already have
05:16 - it installed but I do need to have the
05:18 - import statement so I need to write
05:19 - import processing video dot star so once
05:22 - I have that you can see my errors go
05:25 - away if I were to hit run a sketch would
05:28 - come up and it wouldn't have anything in
05:30 - it you can't see this but there is a
05:31 - green light on my laptop showing that
05:34 - the camera is being accessed and we
05:35 - could kind of be sure about that by just
05:37 - saying image video zero comma zero and I
05:41 - would run it again and we would see the
05:43 - video image in the canvas it's not there
05:46 - why is it not there it's not there the
05:50 - reason it's not there is we forgot a
05:52 - crucial detail I need to continuously
05:54 - read from the camera so even though the
05:57 - camera is running I have a green light I
05:59 - need to read from the camera so I'm
06:01 - going to create a capture event function
06:04 - and a callback and event callback I'm
06:07 - going to give it a one argument a
06:09 - capture object and I'm going to say
06:10 - video dot read in there so what this is
06:13 - doing is it's saying this is an event
06:14 - callback that says every time there is a
06:17 - new image from the camera available read
06:19 - that image so this is your basic setup
06:21 - of how to get live video into processing
06:23 - create a capture object set its size put
06:27 - the call back in draw the video image so
06:29 - we've got our setup going here but I
06:32 - don't actually want to draw the video
06:33 - image what I want to do is copy just a
06:37 - single column of pixels from the
06:40 - Center of the video and put it here on
06:42 - the canvas in the processing window so
06:44 - how do I do that well it turns out there
06:47 - is a function in processing called copy
06:49 - why don't we just go to the browser for
06:51 - a second Chrome and I'm going to say
06:53 - copy I'm going to Google copy and
06:56 - processing and hopefully we're going to
06:59 - get this page and this is where you're
07:01 - going to see kind of how it works and
07:03 - you can see where is it as you can see
07:06 - like whoa this is crazy this is what the
07:08 - copy function does it takes like eight
07:10 - numbers that seems kind of insane
07:12 - another thing that's important here well
07:14 - what also it has this argument called a
07:16 - source so what I need to do with the
07:19 - copy function I'm going to come back to
07:20 - processing come back to this window and
07:23 - come back over here is figure out how
07:25 - does the copy function work in this
07:26 - context so the copy function needs nine
07:32 - we're going to use nine arguments one
07:35 - two three four five six seven eight nine
07:40 - the first argument the very first
07:43 - argument is the thing I want to copy
07:44 - from and what do I want to copy from I
07:47 - want to copy from that video itself the
07:49 - source video now even though I made it
07:52 - seem like it's going to be this overly
07:54 - complex thing I need nine arguments it's
07:56 - actually quite simple
07:57 - this is just the rectangle that I want
08:01 - to copy from and x and a y and width and
08:04 - a height so what part of this do I want
08:07 - to copy from maybe I just want these
08:08 - pixels and then this is the rectangle in
08:12 - the destination which is just the canvas
08:14 - by default of where I want to copy to so
08:17 - I could actually copy a rectangle of
08:18 - pixels like this and then copy it to a
08:20 - rectangle pixels like this and stretch
08:22 - it all the way out so you can just copy
08:24 - for a variety of things but actually all
08:26 - I want to do is copy one column of
08:29 - pixels from here to here so I should be
08:31 - able to do that if the rectangle it is a
08:33 - rectangle it will have an XY the top
08:36 - left the height will be the hot full
08:38 - height of the video and the width will
08:39 - just be one one column of pixels one
08:42 - width of one so let's try to do that and
08:45 - get that copying over here okay so I'm
08:49 - back over here and what I want to do now
08:50 - in draw is say
08:53 - let me give myself some space down here
08:55 - and I'm going to type in copy I want to
08:57 - copy from the video now I want the
09:00 - center so I want video dot width / -
09:04 - just just for the just to make things a
09:08 - little bit more concise I'm going to do
09:10 - that I'm going to put that in a separate
09:12 - variable so I want to get the center the
09:18 - top the top the width / 2 comma 0 is
09:23 - that point there now I want my rectangle
09:26 - that I'm copying to be one pixel wide
09:28 - and the full the video dot height I'm
09:31 - just putting these it's really
09:33 - unnecessary to put these in separate
09:34 - variables but I would like you to be
09:35 - able to see the code a little bit better
09:36 - there's so many arguments here so you
09:38 - can see that's my source rectangle and
09:40 - where do I want to put it let's put it
09:42 - at 0 0 1 H so that's where I'm copying
09:48 - it to right the top left of the canvas 1
09:51 - pixel wide all that same height because
09:53 - they both have the same height 240 240
09:56 - so let's run this then we should see now
09:59 - it's going you can see there it is look
10:03 - at that that's one column of pixels yeah
10:05 - I put my thumb over the camera it's
10:07 - black I move away it looks green that's
10:09 - one column of pixels copying always to
10:12 - there now I don't want it to copy always
10:15 - to there I want it to copy there and
10:17 - then I want to move to the right and
10:18 - then it will move to the right again and
10:19 - then we move to the right again so
10:21 - that's easy right all I need is this
10:23 - destination spot instead of it always
10:26 - being 0 I need it to be a moving target
10:28 - along the x-axis so I can add a variable
10:32 - a global variable I'll call it X it
10:34 - starts at 0 I'm going to put that right
10:37 - here and then I'm going to say x equals
10:39 - x plus 1 so every frame after you copy
10:42 - that column of pixels increase X by 1
10:45 - and we should have that slit scanning
10:51 - effect and you can see why does it look
10:55 - so much faster than it was doing before
10:56 - maybe because I have like 320 by 240 so
10:59 - let's make it just to sort of see let's
11:01 - make the size twelve eighty by 640 480
11:04 - sorry 480
11:06 - and make the capture 640 by 480 so we
11:09 - can see it at higher resolution and we
11:13 - should see here interesting I don't know
11:16 - what my code is a little bit different
11:18 - then go on say to me it looks like it's
11:20 - running faster than it was before but I
11:21 - don't don't specifically recall if maybe
11:23 - I just imagined so you can see the slit
11:25 - scanning effect happening it's working I
11:28 - can like do all sorts of things that
11:30 - have nothing is going on so that's how
11:33 - to make a slit scan look at that it ends
11:36 - maybe I want to go back to the beginning
11:37 - so it ends and maybe I want to go back
11:42 - to the beginning which I could say if X
11:44 - is greater than width then X goes back
11:46 - to 0 I could also use the modulus
11:47 - operator which you might have seen and I
11:50 - think this concludes how to make a slit
11:53 - scan in processing so in the next video
11:55 - I'm going to make a version of this in
11:58 - javascript in the browser and we'll see
12:00 - how it performs and then I also want to
12:02 - try to add some other effects to it so I
12:05 - might make a third video to do some
12:07 - different stuff with it but if you're
12:08 - thinking of something to try what
12:09 - happens if you were to make your splits
12:11 - can go vertically could you make a
12:13 - radial slit scan that goes around in a
12:15 - kind of radial path what happens if you
12:20 - don't always put the frames next to each
12:22 - other but you kind of like cycle them in
12:24 - different ways there's probably a lot of
12:26 - variations you could try to see what
12:27 - kinds of effects you get thanks for
12:29 - watching and write your questions in the
12:31 - comments subscribe what are the things
12:33 - you're supposed to say at the end of the
12:34 - video I don't know something like that

Cleaned transcript:

hello welcome to a video tutorial about slit scanning in particular writing a slit scanning application with code with code written in the processing programming development environment and an eye followup video I'll also show you how to do this in the browser in JavaScript using p5.js so the first thing i want to talk about is what is slitscan so this is not an original idea of mine there are countless examples of slit scanning throughout the history of photography filmmaking computational design and I want to point you towards this online catalog written by goal on Levin I will include a link in maybe a YouTube annotation or in the description below take a look and read about all the different kinds of examples of scanning and where it's appeared throughout the history of art and all sorts of other things so first let's just talk about what slit scanning is so what slit scanning involves is it involves a source image you can see I have a live video coming from a webcam over here and it involves taking slices of that video and putting them next to each other over time what do I mean by that maybe if I draw a diagram over here on this whiteboard that will help make it more clear so let's say this is a video and this is a canvas now this thing is happening over time we're getting image after image after image frame by frame by frame in this video image and what I want to do is only ever take a single column of pixels and I could take a single column from anywhere in that image I'm going to choose to take it from the center probably makes the most sense for the sort of classic slit scanning effect so I want to take this just this column of pixels and I want to place this column right here then the next moment in time I want to take this column again and I want to place it right next to it and the next moment in time I want to take that column again and place it right next to it so those columns of pixels are going to be placed next to each other moment after moment after moment and if I come back over here you can see by the way that the the center I'm like what am I looking at the center pixels are all green if I'm not standing in the webcams view you'll just see a wash of green moving across the screen if I were to stand in the center but very very still you can see that same column of pixels is being copied again and again and again as I turn my head the effects change as I move my head in the effects change even more as I do the what's this called the wave the break boogie I don't know what it is snow is not that interesting in fact I could if I move at the exact speed of the slit scanning effects try to get almost end I knocked over a light everything's fine you can see almost right over here like an exact almost view of my face so you get the idea hopefully you now have a sense of what the slip scanning effect is let's figure out how to program it so obviously it's there a goal on actually includes right here some code for doing this in processing I'm going to write that code from scratch right now I'm going to leave that up there for reference let's open up processing that's the version that was running but let's make a new blank sketch so I want to do this entirely from scratch so I'm going to call this slit scan tutorial and I'm going to put this on the desktop okay so the first thing we need to do is we need to get that video image into processing and the way that we do that is by making a capture object and I'm going to call it video and I'm going to write the setup function I'm going to write the draw function I'm going to make so let's have the village start with low resolution just to kind of make things simple let's start with the thinking of the video coming in at 320 by 240 and so I want to make then though canvas 240 pixels high but a lot wider and I could make it any width right because I'm just I have as many I have put it could be as why does sometimes I want to copy that that column of pixels across so I'm going to say size and let's just start go with 640 by 240 then I want to make a new capture object the arguments that the capture Jack needs in order to connect to the camera are the keyword this I would love I could make a whole video just about the keyword this and I probably have but this is just referencing this particular sketch so the camera knows to communicate with this sketch and then I want to give a width and a height so there's lots of other things you can do when initializing the capture object if you have multiple cameras or you want a different frames per second but by default this is all I want to do then I need to say video start I want to start capturing from the camera now you'll notice I've got some red squiggly lines here it doesn't seem to know what capture is so the processing stuff for video capture movie comes from the video library which is it necessarily installed with processing by default I do have a video that it will refer to you too it's where it shows how to install the video library I already have it installed but I do need to have the import statement so I need to write import processing video dot star so once I have that you can see my errors go away if I were to hit run a sketch would come up and it wouldn't have anything in it you can't see this but there is a green light on my laptop showing that the camera is being accessed and we could kind of be sure about that by just saying image video zero comma zero and I would run it again and we would see the video image in the canvas it's not there why is it not there it's not there the reason it's not there is we forgot a crucial detail I need to continuously read from the camera so even though the camera is running I have a green light I need to read from the camera so I'm going to create a capture event function and a callback and event callback I'm going to give it a one argument a capture object and I'm going to say video dot read in there so what this is doing is it's saying this is an event callback that says every time there is a new image from the camera available read that image so this is your basic setup of how to get live video into processing create a capture object set its size put the call back in draw the video image so we've got our setup going here but I don't actually want to draw the video image what I want to do is copy just a single column of pixels from the Center of the video and put it here on the canvas in the processing window so how do I do that well it turns out there is a function in processing called copy why don't we just go to the browser for a second Chrome and I'm going to say copy I'm going to Google copy and processing and hopefully we're going to get this page and this is where you're going to see kind of how it works and you can see where is it as you can see like whoa this is crazy this is what the copy function does it takes like eight numbers that seems kind of insane another thing that's important here well what also it has this argument called a source so what I need to do with the copy function I'm going to come back to processing come back to this window and come back over here is figure out how does the copy function work in this context so the copy function needs nine we're going to use nine arguments one two three four five six seven eight nine the first argument the very first argument is the thing I want to copy from and what do I want to copy from I want to copy from that video itself the source video now even though I made it seem like it's going to be this overly complex thing I need nine arguments it's actually quite simple this is just the rectangle that I want to copy from and x and a y and width and a height so what part of this do I want to copy from maybe I just want these pixels and then this is the rectangle in the destination which is just the canvas by default of where I want to copy to so I could actually copy a rectangle of pixels like this and then copy it to a rectangle pixels like this and stretch it all the way out so you can just copy for a variety of things but actually all I want to do is copy one column of pixels from here to here so I should be able to do that if the rectangle it is a rectangle it will have an XY the top left the height will be the hot full height of the video and the width will just be one one column of pixels one width of one so let's try to do that and get that copying over here okay so I'm back over here and what I want to do now in draw is say let me give myself some space down here and I'm going to type in copy I want to copy from the video now I want the center so I want video dot width / just just for the just to make things a little bit more concise I'm going to do that I'm going to put that in a separate variable so I want to get the center the top the top the width / 2 comma 0 is that point there now I want my rectangle that I'm copying to be one pixel wide and the full the video dot height I'm just putting these it's really unnecessary to put these in separate variables but I would like you to be able to see the code a little bit better there's so many arguments here so you can see that's my source rectangle and where do I want to put it let's put it at 0 0 1 H so that's where I'm copying it to right the top left of the canvas 1 pixel wide all that same height because they both have the same height 240 240 so let's run this then we should see now it's going you can see there it is look at that that's one column of pixels yeah I put my thumb over the camera it's black I move away it looks green that's one column of pixels copying always to there now I don't want it to copy always to there I want it to copy there and then I want to move to the right and then it will move to the right again and then we move to the right again so that's easy right all I need is this destination spot instead of it always being 0 I need it to be a moving target along the xaxis so I can add a variable a global variable I'll call it X it starts at 0 I'm going to put that right here and then I'm going to say x equals x plus 1 so every frame after you copy that column of pixels increase X by 1 and we should have that slit scanning effect and you can see why does it look so much faster than it was doing before maybe because I have like 320 by 240 so let's make it just to sort of see let's make the size twelve eighty by 640 480 sorry 480 and make the capture 640 by 480 so we can see it at higher resolution and we should see here interesting I don't know what my code is a little bit different then go on say to me it looks like it's running faster than it was before but I don't don't specifically recall if maybe I just imagined so you can see the slit scanning effect happening it's working I can like do all sorts of things that have nothing is going on so that's how to make a slit scan look at that it ends maybe I want to go back to the beginning so it ends and maybe I want to go back to the beginning which I could say if X is greater than width then X goes back to 0 I could also use the modulus operator which you might have seen and I think this concludes how to make a slit scan in processing so in the next video I'm going to make a version of this in javascript in the browser and we'll see how it performs and then I also want to try to add some other effects to it so I might make a third video to do some different stuff with it but if you're thinking of something to try what happens if you were to make your splits can go vertically could you make a radial slit scan that goes around in a kind of radial path what happens if you don't always put the frames next to each other but you kind of like cycle them in different ways there's probably a lot of variations you could try to see what kinds of effects you get thanks for watching and write your questions in the comments subscribe what are the things you're supposed to say at the end of the video I don't know something like that
