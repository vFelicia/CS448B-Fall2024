With timestamps:

00:00 - [Music]
00:20 - [Music]
00:27 - [Music]
01:10 - is the best
01:13 - [Music]
01:24 - [Applause]
01:26 - [Music]
01:44 - [Music]
02:15 - do
02:16 - [Music]
02:44 - [Music]
03:19 - [Music]
03:36 - [Music]
03:41 - do
03:43 - [Music]
04:23 - do
04:26 - [Music]
04:40 - hmm
04:43 - all right
04:44 - uh how's my audio it looks like it's
04:46 - quite loud
04:49 - uh let me see what i can do here i meant
04:51 - to adjust this
04:53 - well in
04:54 - advance oh no
04:57 - okay that's better maybe too quiet still
05:00 - the same
05:01 - that's better
05:02 - what's going on here
05:04 - okay
05:05 - um
05:10 - test one two
05:14 - test one two
05:16 - test test test test test test test test
05:18 - that's getting too loud that's getting
05:19 - too loud there we go all right everybody
05:22 - sorry about that
05:25 - audio sounds good it's fine all right
05:27 - hello everyone good morning
05:29 - it's morning for me i know that people
05:31 - are watching from all around the world i
05:33 - have forgotten to turn one of my lights
05:35 - on i don't know that it actually makes
05:36 - that much of a difference let me go
05:38 - ahead and take care of that now you can
05:39 - see it's a little bit brighter maybe
05:40 - it's too bright
05:42 - i'm going to hit start recording so that
05:44 - everything here is archived to disk
05:47 - just in case
05:50 - ah it's been a while since i did a live
05:52 - stream on youtube um i'm glad to be here
05:56 - uh having an interesting summer oh let's
05:59 - start off with something fun
06:02 - so i was recently at uh processing
06:04 - community day in copenhagen where i
06:06 - received this beautiful gift
06:09 - and i meant to pull up all the
06:10 - information about it i have to do that
06:11 - later perhaps this is
06:14 - and i don't know how well you can see
06:15 - this
06:16 - i'm looking at my monitor over to my
06:18 - left an authentic 1950s era danish train
06:22 - whistle the actual whistle
06:24 - that trained conductors in denmark an an
06:27 - actual not the an example of an actual
06:30 - whistle not a not a replica
06:33 - i have this whole
06:35 - beautifully
06:36 - printed
06:38 - and designed
06:44 - information sheet all about the uh
06:46 - history of this particular whistle and
06:48 - for the first time ever i don't know if
06:50 - anyone
06:51 - um
06:53 - uh if anyone in the chat was at
06:55 - processing community day copenhagen
06:57 - please say hello
06:58 - but thank you to the organizers of
07:00 - processing community today copenhagen
07:02 - for this whistle i hereby
07:05 - begin
07:06 - this
07:07 - first live stream of the coding train in
07:09 - a while on youtube with
07:12 - my new
07:13 - train whistle here we go everybody
07:15 - did i build that up enough for you
07:22 - wow
07:23 - i might have just blown out all of your
07:25 - ears all i saw was red on my audio
07:28 - monitor was that a problem
07:33 - uh thank you for asking about my health
07:36 - uh i
07:37 - uh one unfortunately came down with
07:39 - covid
07:41 - like a few weeks ago now to be honest
07:43 - it's taking me a little bit to feel i'm
07:45 - not i don't even know that i'm really
07:46 - 100 i mean i am
07:49 - testing negative and all the symptoms
07:50 - are mostly gone and if you can hear it
07:51 - in my voice there's still a little bit
07:53 - of congestion
07:54 - that i just can't seem to totally shake
07:57 - my energy level is a little bit low but
07:59 - i was just also very inactive for two
08:01 - weeks so i'm slowly getting back into
08:03 - the swing of things um thank you for
08:05 - asking okay so um
08:08 - but i'm very excited to be here with
08:10 - you uh uh-oh wucha is on airpods
08:15 - uh i hope you all are fine
08:18 - if the coding train ruins your hearing i
08:20 - don't know i don't know who who you can
08:22 - uh
08:23 - complain to i suppose it would be me
08:26 - all right
08:27 - um so
08:29 - i have a thing oh actually before i get
08:32 - going um let me just thank today's
08:34 - sponsor of the coding train
08:37 - uh these are my friends over at
08:40 - brilliant
08:43 - uh in fact um
08:45 - i was just watching some youtube videos
08:47 - this morning and brilliant ads kept
08:48 - popping up and i thought oh what is the
08:50 - universe telling me it's telling me to
08:52 - go live stream and talk about brilliant
08:54 - or it just knows that i love brilliant
08:56 - um and i think that you would too if you
08:58 - like the coding train and you like
08:59 - learning um the topic that i'm going to
09:02 - cover today is a continuation of
09:05 - uh reviewing my wave function collapse
09:07 - coding challenge which was a 80-minute
09:09 - coding challenge that i did over several
09:10 - live streams and one of the fundamental
09:12 - concepts in wave function collapse is
09:15 - the concept of entropy as applied at
09:17 - information theory and whenever you have
09:19 - some topic like that
09:21 - from science
09:22 - from math from
09:24 - from
09:25 - logic i mean from the world of
09:29 - learning
09:30 - is that a world what i'm trying to say
09:32 - to you is where do i turn when i want to
09:34 - learn more about a particular subject
09:35 - that i'm interested in making coding
09:37 - examples about i often turn to brilliant
09:39 - in fact when i come back later in this
09:42 - stream to look at the brilliant website
09:43 - a little more closely they have a whole
09:44 - course on information theory so i'm
09:46 - going to talk about entropy for a little
09:47 - while here and then we'll revisit that
09:49 - brilliant course on entropy and see how
09:51 - that is so anyway um you can sign up for
09:53 - free uh at brilliant.org codingtrain
09:55 - lots of interactive lessons i'll say
09:57 - i'll show you more about that later um
10:00 - you can sign up for free and if you want
10:01 - to unlock all their courses
10:03 - the first 200 people to do the show
10:05 - through that link will receive a 20 off
10:07 - the premium subscription all right
10:10 - back
10:10 - to the matter at hand beta hunter asks
10:14 - how was denmark oh my goodness i loved
10:18 - it
10:18 - i love denmark i also went to sweden
10:21 - um which i absolutely loved um and i
10:24 - just had a wonderful time and i can't
10:25 - wait to go back sometime so all of you
10:27 - um
10:28 - folks from anywhere around the world
10:30 - invite me i would love to come
10:32 - there's so many places i haven't been i
10:33 - could start listing them all um
10:39 - i'm getting a note from simon the uh
10:41 - intrepid
10:42 - uh
10:44 - the probably the person with the most
10:46 - knowledge of coding train
10:48 - history catalog
10:50 - everything
10:51 - uh
10:52 - that that that someone in the chat
10:54 - mentioned that the timer was ticking
10:56 - slowly meaning the the clock in the
10:58 - opening video
11:00 - it is rendered into a video that
11:02 - countdown i wonder if it is inaccurate
11:04 - not exact time
11:05 - i'll have to take a look at that have to
11:06 - investigate i would love to come to
11:08 - india
11:10 - um and hello from nigeria
11:13 - fox the bomb asks how do you take your
11:15 - coffee
11:16 - i like my coffee with oat milk either
11:19 - black
11:20 - i like a single espresso
11:22 - mess maybe with like one little sugar
11:24 - crystal in it maybe
11:26 - if i'm feeling saucy
11:28 - but mostly i like i like oat milk oat
11:30 - milk almond milk is good soy milk could
11:32 - fine with cashew milk is i love all the
11:34 - nut milks
11:36 - they're just i mean oat isn't a nut i
11:38 - guess but
11:40 - i don't like to talk about food on my
11:42 - video show i'm making all these
11:44 - references today to uh a whole podcast
11:47 - network of things that i listen to
11:49 - unnecessarily i could also do this
11:52 - uh because i've got some stuff coming up
11:54 - oh let's announce something
11:56 - you're going to have heard it here first
11:58 - let's see if i can
12:00 - why am i not signed in okay hold on
12:03 - everybody
12:04 - do you mind
12:08 - a bearing with me oh this is so sad
12:12 - hold on i have an idea
12:13 - i have an idea
12:16 - i really should be more prepared for
12:19 - this kind of stuff
12:22 - but i have an idea talk amongst
12:24 - yourselves ah yes i'm signed in
12:27 - okay
12:28 - um
12:30 - so i have to go to my studio hold on i'm
12:32 - giving you guys the scoop here i'm
12:34 - announcing something that well some of
12:36 - the members who are in the member
12:37 - discord know about
12:39 - um
12:40 - but i'm just i have to pull up a secret
12:42 - private link here that i'm going to make
12:44 - public later today
12:46 - let me get that link
12:48 - and
12:50 - let me bring it over here oh i closed
12:51 - that i probably shouldn't have closed
12:52 - that
12:53 - all right here we go
12:56 - yeah i'm signed out of youtube all right
12:58 - everybody
13:00 - if you thought you were excited about
13:02 - today's live stream which is mostly
13:04 - going to be a casual chatting reviewing
13:06 - a previous coding challenge and talking
13:08 - about things that i missed i want to try
13:10 - to explain
13:11 - i mean this is going to be practice
13:12 - because i'm going to have to come back
13:13 - to a video and try to explain shannon
13:16 - entropy in more detail a name for claude
13:19 - shannon
13:20 - i don't know how that's gonna go it's
13:21 - probably gonna be a bit of a mess um so
13:23 - i'll need you to help me through that
13:24 - but anyway
13:26 - live in two days uh
13:28 - i will be having a guest on today's on
13:30 - on saturday's stream uh dr christian
13:33 - hubicki who is a professor at florida
13:35 - state university runs a robotics lab is
13:38 - an expert in i think if i if i go here
13:41 - to the um
13:43 - there should be a video description here
13:44 - um if i do this um
13:46 - we can find out um director of the
13:48 - optimal robotics laboratory his research
13:50 - specializes in bipedal locomotion
13:52 - specifically optimization methods that
13:54 - apply to both legged legged leg robotics
13:57 - and biomechanics so uh christian um dr
14:00 - hubiki does a lot of work with uh
14:04 - the motion locomotion of actual physical
14:07 - robots and as you might be familiar with
14:10 - i do a lot of uh coding examples about
14:12 - simulation
14:14 - not really in not simulating uh robots
14:18 - or even um
14:20 - living creatures in their locomotion
14:22 - maybe maybe i've touched on i've done
14:23 - some kinematics videos i've done
14:26 - some reinforcement learning slash
14:28 - neuroevolution style things anyway uh um
14:32 - christian's gonna be here to teach me
14:34 - about
14:35 - robot controllers and the first one
14:37 - we're gonna look at hopefully this might
14:38 - be a little bit of a series over the
14:39 - next year um
14:41 - is a pid controller uh pro
14:45 - something integration derivative
14:48 - i know i've watched some youtube videos
14:50 - about it and i'm learning about it and
14:51 - he's going to code a simulation in
14:52 - python i'll work on it in p5.js that's
14:55 - happening
14:56 - this saturday um so this is just it's
14:58 - just unlisted right now i'll i just was
15:00 - like still working on the description
15:02 - and you know the thumbnail although i
15:04 - kind of like it um
15:06 - see if anybody can catch the easter egg
15:07 - in this thumbnail right here with these
15:09 - numbers um
15:11 - so uh
15:13 - so i would love uh i'd love for you to
15:14 - tune into this i'm really excited about
15:16 - it um we'll see how that goes okay
15:19 - um now
15:22 - back to today so
15:24 - uh
15:25 - i'm gonna make a
15:27 - a chat uh a list here
15:30 - of things that i'm gonna cover so first
15:33 - i want to follow up about the uh
15:35 - directional horizontal directional
15:37 - drilling let's write that down
15:39 - then we're going to look at wave
15:40 - function collapse
15:42 - and there's a whole bunch of things that
15:43 - i want to look at so i'm going to look
15:45 - at the
15:46 - the
15:47 - passenger showcase
15:50 - um i am going to
15:54 - look at um correct uh corrections and
15:57 - i'm going to look at youtube comments
15:59 - that people have made
16:00 - with some corrections or questions
16:03 - uh i am going to look at a
16:06 - corrections and next steps
16:10 - document
16:11 - and then anything else that comes up i
16:13 - will add here to my list
16:16 - um
16:18 - pete the paper boat says i made a ball
16:20 - balancing robot with a pid controller
16:22 - they're very cool so did you make a
16:24 - physical like an actual robot or a
16:25 - simulation
16:27 - i assume i guess when somebody says i
16:29 - made a robot they're generally making
16:31 - they're generally saying they made a
16:32 - physical robot just for me
16:34 - my mind goes to simulation pretty
16:36 - instantly all right
16:38 - um
16:42 - i'm trying to think of what else that i
16:44 - want to cover the numbers are purple in
16:47 - hex that's a good guess uh i didn't
16:51 - consider that
16:53 - but let's take a look
16:55 - uh let's do background
16:57 - let's go back to this uh
16:59 - oh did i close that window
17:01 - i don't remember what the numbers are
17:05 - 762687 that's a really cool guess i can
17:08 - use that for a future
17:11 - um
17:12 - this lovely purple so i didn't i didn't
17:14 - think of that but we do get this lovely
17:15 - purple from that hex code anybody else
17:18 - uh i would love to give a prize for
17:20 - somebody who gets it but i don't know i
17:22 - don't know how to like
17:24 - find the right person who got it first
17:25 - or whatever that seems scary and like
17:27 - problematic
17:31 - so uh all right let's see um
17:35 - let's go let's talk about let me let me
17:37 - go to the first thing on my list here so
17:39 - first of all
17:41 - in case you haven't seen it and there's
17:43 - a lot more to say and to come about the
17:46 - website this is the new coding train
17:48 - website it's um coming along
17:52 - i really have to thank there's too many
17:54 - people for me to name to thank
17:56 - but uh just to name of couple fun planet
18:00 - and k-phone 22
18:02 - have been the amount of times i've been
18:05 - recorded saying oops that's a good one
18:09 - it could be i haven't done an accounting
18:11 - of that i would love for somebody to do
18:12 - that um have been importing
18:15 - so much of the content from the old
18:17 - website over to the new website just the
18:20 - sort of volunteer effort from the
18:21 - community has been amazing um let's see
18:24 - who else i i i i shout out a couple
18:28 - names that jump to my mind but i think
18:30 - if i go here on to into the website's
18:32 - github and i go under insights and i go
18:35 - to contributors we can see here um these
18:39 - are all of these folks here um that i
18:41 - really just need to thank and um for
18:43 - contributing to the website and there's
18:45 - a long list because
18:48 - one of the exciting new things about the
18:50 - website is
18:51 - the passenger showcase
18:53 - so where where is that uh here it is so
18:56 - um
18:57 - so here is uh chris sears bezier arch
19:01 - synth wave animation uh based off of um
19:05 - the coding train bezier curve video
19:08 - and if i go to any of the challenges
19:11 - for example
19:14 - come on come on website you can do it
19:21 - what's happening
19:23 - twitter was down for a little while is
19:24 - the internet broken today
19:26 - i see by the way a simon is typing dot
19:29 - dot dot out of the corner of my eye and
19:31 - i just have to wonder
19:35 - so there is um jasper is asking about it
19:39 - i hesitate to show this because it's
19:41 - still in progress but on the about page
19:43 - i don't know why i can't get any of the
19:44 - pages on the website to load am i
19:47 - clicking incorrectly have i lost the
19:50 - ability to use the internet
19:53 - what is going on uh
19:55 - the number of minutes recording people
19:56 - are doing really great guesses about the
19:59 - 762687 that is not it number of minutes
20:02 - recorded on the coding train
20:04 - um
20:06 - the route challenge is broken what is
20:08 - going on
20:12 - how could this be
20:17 - ah
20:20 - what happened
20:22 - where's my like technical difficulty
20:24 - slide and music this is insane is the
20:27 - internet working i mean obviously i'm
20:29 - streaming you're seeing me i have a
20:30 - green light over there for my connection
20:33 - did netlify go down
20:38 - so interestingly enough this laptop is
20:40 - connected through a mesh
20:42 - wi-fi network and my streaming pc is
20:45 - hardwired into the ground basically
20:48 - uh and people are saying it works i
20:50 - think there's something wrong with the
20:51 - internet here
20:53 - on my
20:55 - on this particular laptop
20:59 - okay the editor shows up
21:05 - there we go
21:08 - all right that was a temporary little
21:09 - glitch there so here i am on the
21:11 - challenges page
21:13 - and i'm going to go to the most recent
21:15 - challenge horizontal directional
21:16 - drilling
21:18 - which was a collaboration with uh
21:20 - practical engineering
21:21 - so if you haven't checked out the
21:22 - practical engineering video about this
21:24 - topic please do
21:26 - i just kind of
21:27 - you know as every opportunity i have i
21:29 - like to alert people to the new website
21:31 - so if you are looking for all the
21:33 - metadata associated with a coding train
21:35 - video of course i expect that most
21:37 - people are going to find the videos on
21:38 - youtube and watch them on youtube the
21:41 - the reason for the website is to make
21:43 - finding the source code that goes with
21:45 - the video
21:46 - more easily
21:48 - any reference links that are in the
21:49 - video are linked here in the description
21:51 - as well as other related videos in
21:54 - particular i can just click over and we
21:56 - can see
21:57 - look at this
21:58 - sponsored live really see i love this
22:01 - this is just like it's like the universe
22:03 - knows
22:04 - i've clicked to a youtube video that's
22:06 - going to show me an ad before i could
22:08 - play it and it's as if i'm playing the
22:10 - ad that's the actual oh and when we got
22:12 - somebody join us remember so much is
22:14 - happening i'm gonna i don't want to skip
22:16 - the ad i feel like you can't skip the
22:17 - brilliant ad i gotta let it play all the
22:19 - way through this is amazing
22:21 - um
22:24 - it's interesting that i'm not signed in
22:26 - also and it just i don't know where it's
22:28 - pulling decide to show that ad and show
22:30 - all these recommendations but let's go
22:32 - here so this is the amazing video from
22:35 - practical engineering um
22:38 - uh yes i'm going to be talking about
22:39 - wave function collapse i i'm just kind
22:41 - of
22:42 - covering
22:43 - i'm being too long-winded about this but
22:45 - i just kind of recapping some recent
22:46 - things that are happening on the coding
22:47 - train so check out the practical
22:48 - engineering video um
22:51 - if you by the way i was going to say all
22:52 - these people have come to my channel now
22:55 - saying came here for practical
22:57 - engineering and you know i i've seen
22:59 - maybe that's not the people should leave
23:00 - comments with a little bit more
23:01 - substance to them i don't want to flood
23:03 - practical engineering's channel with
23:05 - spam but i just wanted to say like if
23:07 - you found this video from the coding
23:09 - train maybe send grady a little note
23:11 - just saying hello there you might
23:12 - appreciate that okay uh
23:16 - um okay
23:18 - yes yes yes simon thanks for that
23:20 - information i got to come back to that
23:22 - all right um so i'm closing this out so
23:25 - the reason why i'm showing this to you
23:27 - is
23:28 - uh you know when in the coding challenge
23:30 - i have this very very
23:35 - very basic simulation of toggling the
23:39 - bias of a
23:41 - horizontal directional drilling machine
23:44 - to carve out a path through the earth
23:48 - with no obstacles with no sensing with
23:51 - no particular goal and the prompt one of
23:54 - the prompts from the videos video that
23:57 - challenge was to ask people to submit
24:00 - and uh create their own variations of
24:03 - this and boy
24:05 - were my expectations wildly exceeded so
24:09 - if i go back to the challenge page on
24:12 - the website oh and that's over here
24:14 - and i go to the expanded game
24:17 - this is a github repository
24:20 - and i guess i should start protecting my
24:21 - main branches
24:23 - that has a little bit of documentation
24:25 - here in the readme and you can currently
24:27 - see now
24:29 - what the current version of the game
24:31 - looks like
24:32 - it's got a much more elaborate interface
24:35 - where you can reverse the drill start
24:37 - and stop
24:38 - there's obstacles there's this fog of
24:40 - uncertainty
24:42 - parameter which makes it so that you
24:43 - can't actually see the obstacles but you
24:45 - can kind of get this view
24:47 - of clues as to where those obstacles
24:49 - might be
24:51 - there's a target that you have to get to
24:53 - whoa i just kind of twisted my ankle
24:56 - there weirdly
24:57 - by the way i always like to show people
24:59 - this is um
25:00 - this is the full view of everything
25:02 - that's in my room here that's what i
25:03 - just kind of twisted my ankle like that
25:05 - for no particular reason um so let's
25:08 - play this game
25:09 - um lots of people have contributed to
25:11 - this i could head over to the insights
25:14 - as well and go to contributors
25:17 - and see
25:18 - all of these different names so thank
25:20 - you to everyone who's participated a
25:22 - special shout out to sergey who is a
25:25 - researcher in applied mathematics
25:27 - mathematics and has really been putting
25:29 - in a lot of effort into this game and
25:31 - simulation
25:32 - and i think um even did something which
25:34 - i was like which i maybe i should do for
25:36 - more of my coding train work which is
25:39 - added a
25:40 - citation link to cite this particular
25:44 - uh simulation and code example in an
25:47 - academic paper so we'll see maybe we can
25:49 - get the coding train cited in more
25:51 - academic papers that would be a fun
25:53 - thing once with our collaboration with a
25:55 - real life robot scientist maybe that
25:57 - where that's that's the future of the
25:59 - coding train here i mean i am i do teach
26:01 - at a university as my day job but you
26:03 - know it's i don't consider myself a um
26:06 - an academic per se i'm i'm a
26:09 - i'm not an academic i just play one on
26:11 - youtube
26:14 - uh okay uh ah so let's actually go ahead
26:16 - and play it now
26:18 - i'm gonna click over to it
26:20 - the interface as you can see is much
26:22 - more elaborate oh ah let's pause
26:25 - so one thing that's really wild first of
26:27 - all i love is that there's a whole
26:28 - animated
26:30 - drilling machine which is just people
26:32 - are still trying to guess
26:34 - 762 687 nobody's gotten it by the way
26:37 - you're off like you're the direction
26:39 - that people are going it's not uh it's
26:41 - not a data an amount of something
26:44 - related to the coding drain i'll just
26:46 - tell you they're often that that's not
26:47 - the that would have been that that's
26:49 - clever i probably should have thought of
26:50 - that but it's not um not what it is all
26:53 - right so first of all we love this
26:54 - animation
26:56 - let's see can i uh pull back a little
26:58 - bit here
26:59 - pullback doesn't seem to be working but
27:00 - maybe i didn't go far enough i can
27:02 - toggle the bias
27:04 - i can uncheck this fog of uncertainty so
27:07 - without it i can see the the geological
27:09 - layers
27:10 - and the actual obstacles let's put that
27:12 - back on
27:16 - visual instructions
27:17 - oh that just takes me to this image oh i
27:19 - think i might have like gone away there
27:21 - okay great i get to start again
27:24 - by the way there's also use by using
27:26 - random seed there's this nice persistent
27:28 - link to this level so you can see here
27:30 - in the uh query string we now have
27:33 - so maybe we should we should see is it a
27:35 - random c it's not this but this would be
27:37 - fun
27:38 - 7 6 2 6 8 7 let's play that one
27:42 - all right this looks like a good one i'm
27:43 - going to see if i can reach the goal
27:45 - i'll stop talking for a second
27:55 - i don't know what's just popping up
27:56 - there if that's a bug or
27:58 - that's supposed to be happening
28:01 - all right i need you can see that my
28:03 - path oh i'm not going to make it am i
28:05 - nope
28:08 - now uh this and you can see you get this
28:11 - whole kind of score uh like a reward
28:15 - for maybe the amount of time the
28:17 - distance you have the drill length
28:19 - i haven't actually done a deep dive into
28:21 - what the score has been this is wild
28:23 - can i pull back no so let's um let's
28:26 - let's refresh
28:27 - we'll try it again all right
28:29 - i think i'm going to be able to get it
28:31 - this one is not doesn't look like that
28:32 - hard a level just need to kind of toggle
28:35 - back and forth to kind of go straight
28:37 - here
28:40 - what is flashing there can anybody tell
28:41 - me
28:43 - all right this should get me there oh so
28:45 - close to this this should get me there
28:47 - oh come on bend back
28:50 - oh
28:51 - okay oops nope
28:54 - let's try this again i'm gonna get this
28:56 - one i need some dramatic music playing
29:00 - i need my dramatic music tracks
29:03 - at the ready
29:07 - okay come on
29:08 - i really gotta sneak around this one as
29:10 - close as possible i think this should do
29:12 - it
29:13 - come on bend bend
29:18 - the pop-up happens when a checkpoint is
29:20 - added the pull back oh there's
29:23 - checkpoints for pullback points okay uh
29:26 - calculator turned upside down says
29:27 - christiers no that's a good guess
29:30 - all right i feel like i you know me i'm
29:32 - like i have a problem when i'm streaming
29:34 - and like i refuse to just move on to the
29:36 - next thing even though when i clearly
29:38 - should is i'm super stubborn but um
29:41 - [Music]
29:43 - let's see here
29:45 - i mean it's possible that a given map is
29:47 - actually impossible
29:49 - i want to try to stay as close
29:51 - to
29:53 - that's possible oh no no no no no it's
29:56 - all about bending right around that was
29:58 - like stop pop
29:59 - oh no
30:03 - i'm gonna get it
30:04 - i see the path now
30:08 - this is harder than i thought it would
30:09 - be
30:10 - or maybe i just picked a really hard
30:12 - level
30:18 - uh see i once again i need to be bending
30:21 - right that's the key
30:23 - um
30:26 - i also should pause and pull back
30:29 - keyboard control might help me here i
30:30 - think there are keyboard controls
30:39 - there we go there we go that's going to
30:41 - get it right
30:42 - ah i was so close
30:45 - pause pause
30:48 - try going down further so you have more
30:50 - room to turn around oh that makes sense
30:52 - good tip everybody
30:55 - i don't know why i was trying to like
30:56 - that makes sense
30:58 - yeah now i see
31:00 - i was kind of taking the wrong approach
31:02 - i was trying to get as tight a turn as
31:04 - possible
31:05 - but actually oh yeah this is so much
31:07 - easier now
31:11 - there we go come on come on come on come
31:12 - on come on
31:13 - no
31:15 - no that comes that was oh man my pixel
31:18 - color detection is
31:20 - by the way this i could also take the
31:21 - randomness out the randomness is just a
31:23 - little bit of noise in there that
31:24 - doesn't make the turning as perfect but
31:28 - all right this is clearly the way to do
31:29 - it
31:32 - don't hit that obstacle
31:34 - close
31:35 - let's go all the way down those give me
31:37 - a lot of
31:39 - room to turn
31:43 - there we go
31:47 - we did it everybody
31:49 - yes train whistle what did i where did i
31:52 - put my new special train with so i put
31:53 - it away
31:56 - all right no it's fine there's too many
31:58 - steps to pull this back out all right
32:00 - everybody okay look at my score ah
32:03 - now we need we need like a share button
32:05 - so we can kind of like wordle tweet it
32:07 - out
32:08 - um
32:10 - all right we made it anyway so i'm
32:11 - really thrilled about this thank you for
32:13 - everybody who contributed
32:15 - there's still plenty more could be done
32:16 - i think a lot of work could probably be
32:18 - done on this to
32:19 - think about how this could be adapted
32:21 - for mobile i believe it does work on
32:23 - mobile but thinking about i think the
32:25 - interaction design as well as the aspect
32:28 - ratio
32:29 - of the sort of scene that you're looking
32:31 - at there's probably a lot of
32:31 - improvements that could be made there
32:33 - all right
32:35 - wow it's 10 35. by the way i have a hard
32:38 - out
32:39 - at noon today so this stream is going to
32:42 - end like promptly at 11 55 like no ifs
32:45 - ands or buts like and not one of those
32:47 - where i say i have to end and then i go
32:49 - an extra half an hour
32:51 - so really really really really stopping
32:52 - all right
32:54 - uh
32:55 - okay oh my back i haven't exercised
32:58 - because i haven't covered my whole body
33:00 - kind of just aches and is weak it's also
33:02 - really hot so it's kind of too hot to go
33:05 - running especially if i have been out of
33:07 - practice so i got to figure this out
33:08 - here got to get some more exercise in i
33:10 - have no ac by the way in the studio it's
33:12 - getting quite warm in here so i might
33:14 - need to start the opposite problem with
33:16 - the winter when it gets too cold in here
33:18 - but i might need to get a fan we'll see
33:24 - all right
33:26 - let's turn our attention back
33:29 - to wave
33:30 - function collapse
33:32 - uh yes christoph b amazon link in the
33:35 - description um so apologies for that so
33:38 - first of all i mean i don't know if i
33:39 - should just be addressing random things
33:41 - here but that's what the live streaming
33:42 - is for to chat with the audience so i'll
33:45 - address this um at one point i had a
33:48 - coding train affiliate shop with amazon
33:51 - so i would link to various books and
33:53 - different things uh from
33:55 - videos and you know i would earn like
33:57 - some small i think it's six percent
33:59 - commission on purchases made through
34:00 - that link
34:01 - at some point amazon cancelled my
34:04 - affiliate
34:05 - i violated some guidelines and maybe i
34:07 - put a link on a place that wasn't
34:08 - approved i have no idea what i did
34:11 - i sent some support emails and whatever
34:13 - appealed it never never rejected no
34:16 - response etc so i gave up first of all
34:19 - i'm not to be honest not a fan of amazon
34:22 - i don't i mean who is
34:24 - i don't know
34:26 - uh so i'm kind of like ah maybe this is
34:28 - a sign from the universe telling me stop
34:31 - uh linking to amazon but i do would like
34:34 - to be able to share
34:37 - um
34:38 - especially like uh
34:39 - books i think that i use for my own
34:42 - research and preparation i have two
34:43 - books that i've written that i could
34:45 - share links to so i was thinking of
34:47 - actually um setting up a store sort of
34:51 - storefront through oh this is not it
34:54 - it's a bookshop it's bookshop.org i
34:56 - think
34:57 - yeah
34:58 - is this it um so this is a um online
35:02 - bookstore that supports local bookstores
35:06 - um and um so i think i can create an
35:09 - account i just haven't had time
35:11 - to do this oh look and we have a new u.s
35:14 - put laureate
35:15 - um
35:16 - you should all listen to the commonplace
35:18 - poetry podcast shout out to friend of
35:20 - friend of coding train commonplace
35:22 - poetry podcast i believe this poet
35:24 - laureate was a guest at one point on
35:26 - that podcast um tell him the coding
35:28 - train sent you um anyway so uh somebody
35:32 - i would love someone to remind me about
35:33 - this because i keep meaning to set it up
35:35 - and then replace all the amazon links
35:37 - with bookshop
35:38 - so
35:39 - uh david suggests
35:42 - a
35:43 - treadmill under my standing desk and
35:44 - alexander says no ifs you say how about
35:47 - a switch
35:48 - [Music]
35:50 - all right that was a good one all right
35:51 - um
35:53 - let's see actually just out of curiosity
35:55 - can you even get
35:57 - the nature of code book here looks like
35:59 - you can
36:00 - so that's good i can link through here
36:02 - wonderful
36:04 - the irony here of course is that this
36:06 - book is printed the nature of code is
36:09 - the print version
36:11 - is uh
36:14 - amazon kindle direct basically so which
36:17 - wasn't what i originally set out to do i
36:19 - used a company called createspace at the
36:21 - time which was a print-on-demand service
36:23 - for self-published books
36:25 - um but
36:27 - amazon acquired them so actually this is
36:30 - a great question um and i was thinking
36:32 - of reaching out to some publishing
36:34 - contacts i am
36:35 - you know i have i'm having to eat my
36:37 - words here because all i do is say that
36:39 - i'm doing this and their hat progress
36:40 - has been made
36:42 - but i think i probably should take a
36:44 - couple weeks off from coding train video
36:47 - work and only work on the nature of code
36:48 - book i don't know if you would all
36:50 - accept that for me
36:51 - i mean sometimes i've gone for weeks at
36:52 - a time just for personal stuff and
36:54 - travel and i got covered and i have
36:57 - anxiety issues you know there's all
36:58 - sorts of reasons why i disappear and
37:00 - don't make a video for a month but what
37:02 - i'm saying is uh
37:04 - i'm really having trouble
37:08 - i think it's it's not really like a
37:10 - motivation thing because internally i
37:11 - feel very motivated to work on the
37:13 - nature of code but it's like it's a
37:14 - procrastination issue like i'll do
37:16 - anything to like avoid it
37:19 - so i wonder if i should um really just
37:22 - like close everything else out and just
37:24 - for two weeks like only work on this one
37:26 - idea i have was um using twitch streams
37:29 - as a as a mechanism for just like
37:31 - streaming me working on the book um it
37:33 - would be more of like a silent stream i
37:35 - don't know how distracting that would be
37:36 - how productive it would be but i'm
37:37 - thinking of doing that next week
37:39 - um
37:41 - all right
37:42 - nobody's gotten this yet i'm gonna
37:45 - i'm not gonna reveal it
37:47 - because um you know what you know why i
37:49 - think nobody's gotten this yet is
37:51 - because you have to be an old person
37:55 - uh i i'll have to explain why i'm
37:57 - realizing like
37:58 - you gen z folks you're not thinking on
38:01 - these terms
38:03 - uh so um
38:05 - uh and i want to give too much away
38:07 - there um
38:08 - but um
38:10 - if you write a switch statement in the
38:12 - stream
38:12 - [Music]
38:14 - i don't i didn't i don't get the joke
38:16 - about the switch statement
38:18 - uh okay
38:22 - all right twitch streams are better okay
38:25 - all right thanks for the feedback
38:26 - everybody all right i've got to move on
38:27 - to
38:28 - wave function collapse here
38:33 - all right so let's let's take a look
38:37 - at
38:40 - i think i have it featured here so i can
38:42 - just get right to it
38:44 - all right so first of all
38:47 - if you haven't watched this video yet i
38:49 - would love for you i mean you could you
38:51 - could go leave right now and watch it
38:53 - but i mean i would have no complaints if
38:55 - you did that in fact that might be a
38:56 - better use of your time
38:58 - it's quite long i would love to hear
39:01 - your feedback anecdotally and also based
39:04 - on the sort of youtube numbers for it
39:07 - you know part of me was thinking is this
39:08 - a mistake like should i have made a just
39:12 - ten minute explanation of the algorithm
39:14 - summary of it walkthrough of the code
39:17 - print done script it edit it publish it
39:20 - to youtube this is instead my sort of
39:22 - coding train style of an edited version
39:25 - of me building the whole project over
39:26 - hours and hours and hours little
39:28 - animations and hopefully some extra
39:30 - things to help you understand extra
39:32 - references but also a little like little
39:34 - animated jokes and funny moments some
39:36 - sound effects and that kind of thing so
39:39 - but it seems like if i have a big
39:41 - project to tackle like this this is a
39:43 - way of doing it and it has value for the
39:45 - audience so so far
39:48 - so good um
39:50 - if you are looking for the source code
39:52 - for it i'll just click on it right here
39:55 - um this is the p5 web editor um i'm
39:58 - going to dig into the source code a bit
39:59 - deeper and look at the what's currently
40:01 - in the github repository but we can see
40:03 - the algorithm here generating this pc
40:06 - board pcb board like pattern if you want
40:09 - to understand what it's doing you know
40:10 - that whole video will hopefully explain
40:12 - it to you
40:13 - um
40:16 - i really encourage you to take a look at
40:17 - these references different references of
40:20 - links of things if
40:22 - if you're watching the video and
40:23 - something i've referred to is not part
40:25 - of the list
40:26 - file an issue on the coding terrain
40:28 - website you can leave a youtube comment
40:30 - but those i sometimes miss
40:32 - um so file an issue on the coding train
40:34 - website send me a tweet um you can
40:37 - actually uh add it yourself through uh
40:39 - through a pull request so i love your
40:41 - contributions i also just want to
40:43 - highlight this tab which is you know i
40:45 - try to i've made
40:47 - references to many projects artworks
40:50 - games that in the video so you can find
40:53 - all of those here providing credits
40:55 - again if i missed something please let
40:58 - me know so i can add it
40:59 - um
41:00 - this by the way um
41:02 - this is 80 minutes long and is the
41:05 - edited version of what i did over three
41:08 - live streams so if you
41:11 - i would i was gonna say if you are
41:12 - insane but i i don't
41:14 - this is not for the faint of heart
41:16 - but if you might be
41:19 - uh
41:21 - so ketan
41:23 - ketan balakar got it
41:25 - although it's different it's put in a
41:27 - different way so ketan i don't think
41:29 - anybody oh no daniel franklin got it
41:32 - first
41:33 - daniel franklin uh if we can
41:34 - authenticate you i will send you a
41:36 - sticker pack a coding train sticker pack
41:38 - let me write this down youtube
41:40 - uh daniel franklin and somebody in the
41:43 - chat got it before please let me know
41:45 - um
41:47 - but i would love to send
41:48 - uh daniel franklin uh and you know it
41:51 - was just two messages later ketan
41:54 - cake time i'm gonna write down katan
41:56 - let's see if i can send kaitan a sticker
41:57 - pack also ketan
42:00 - baal
42:03 - these are youtube names writing them
42:05 - down i will review the chat i have to
42:06 - figure out how to authenticate you as a
42:08 - real life person but um
42:12 - mason sickler got it okay hold on scroll
42:16 - back in the chat
42:19 - uh
42:19 - [Music]
42:21 - i don't see it i you know this chat is
42:23 - being logged so i'll go back and review
42:25 - it mason sickler okay so i'm gonna write
42:27 - down mason sickler
42:29 - uh
42:30 - um yes if you on the keypad if you type
42:34 - out
42:36 - if
42:37 - uh is the audio oh
42:39 - no my audio is going um on the keypad if
42:41 - you type it out you'll get robots all
42:42 - right so not for the faint of heart um
42:45 - not for the faint of heart you this is
42:47 - about nine hours of me doing everything
42:48 - so if you were ever curious about how a
42:50 - coding train coding challenge gets
42:52 - edited into a video and you want to see
42:54 - the raw material it's all there for you
42:57 - uh nothing there's nothing hidden so the
42:59 - reality of everything i went through to
43:01 - produce that video is all there in these
43:03 - three live streams mason sickler looks
43:06 - like mason got it first chris sears also
43:09 - confirmed that in the coding train
43:11 - member discord by the way
43:13 - i didn't think we got a new member
43:15 - uh
43:17 - during this live stream
43:19 - ah
43:20 - pedro oh so here's the ah thank you so
43:23 - pedro brings up an excellent point um
43:26 - right the code for the rubik's cube
43:27 - challenge is not accessible through the
43:29 - link in the video could you update that
43:30 - so this is a major issue
43:32 - and um
43:34 - i haven't been able to go and update so
43:37 - let's go to the rubik's cube challenge
43:38 - and show you what's happening so coding
43:40 - train
43:41 - rubik's cube
43:45 - part one i'm gonna go to this one let's
43:47 - see if we get an ad no we no more ad for
43:49 - brilliant
43:50 - uh hack the planet okay let's
43:53 - skip this um
43:55 - i try to usually be logged in to youtube
43:57 - because i have youtube premium so that i
43:59 - don't show ads but all right so this is
44:01 - going to happen to you a lot here the
44:03 - youtube description also has a lot of
44:05 - the metadata associated with any given
44:06 - video less and i'm trying to improve
44:09 - that if i click here
44:12 - it's going to take me to page not found
44:15 - because there is no p one this is the
44:18 - wrong url
44:20 - but even
44:21 - so even if there were
44:23 - this would still take me to page unfound
44:24 - not found but this coding challenge has
44:26 - not been ported to the new website yet
44:28 - so if i go here under challenges and i
44:32 - start to search and i kind of page
44:34 - through actually finding a given
44:35 - challenge is also a little tricky that i
44:37 - want to work on but if i page through
44:39 - all the challenges i won't find it
44:42 - so
44:43 - um
44:44 - what i just want to see if that 404 page
44:47 - oh you know what's missing from here so
44:49 - here's another thing i just found this
44:51 - 404 page
44:53 - needs to link to the old website so i'm
44:55 - going to write this down
44:56 - 404 page
44:58 - link to old website
45:00 - so the old website is not gone you can
45:02 - still find it and it is i'm going to
45:04 - give you the url for it right now
45:06 - codingtrain.github.io
45:09 - website archive
45:12 - so it's um
45:14 - this your this is no longer being
45:16 - maintained don't file any bugs or issues
45:18 - something's broken on this website not
45:20 - gonna get fixed but if you're looking
45:22 - for old content that seems to be missing
45:25 - from the new website or something that
45:26 - was there before you can still find it
45:29 - i'm gonna go to coding challenges i'm to
45:30 - go to rubik's cube i'm going to go to
45:33 - the challenge and in theory the code
45:37 - should be like i know i did this in
45:38 - processing so i'm going to click there
45:39 - um
45:40 - the code should be here
45:42 - so here you found now the other thing
45:44 - i'll say is in all of this new
45:46 - reorganization
45:48 - there is a new
45:50 - github repo
45:56 - i think it's this
45:59 - there is also this github repo which
46:01 - just has all the code for all the coding
46:03 - challenges so if you just if you don't
46:05 - want to like be navigating through all
46:06 - the different websites links you can
46:08 - also just come to here and find
46:10 - uh rubik's cube one you can find the the
46:14 - code for it here you can um
46:17 - so um alexander said i am doing some
46:20 - redirects to the old website
46:22 - i didn't want to automate this because i
46:24 - really just want to like
46:25 - do away with the old website i don't
46:27 - want people having to go there so i
46:29 - think there's a little bit of a mental
46:30 - block with like i don't want to put in
46:32 - the effort to like redirect everything
46:33 - the point is to have the new website
46:36 - working and to go and update all my
46:38 - youtube descriptions if you would like
46:40 - to help with this
46:42 - what you can do is i'm going to go to
46:44 - thecodingtrain.com
46:45 - i'm going to go under guides and i'm
46:48 - going to look at this maintaining the
46:50 - website guide
46:51 - so if i click on this guide this guide
46:54 - will show you how to add a page to the
46:58 - coding train website for a video that
47:00 - doesn't exist
47:01 - and um
47:03 - you'll you'll see that if i go to
47:06 - the let's see if we can go to
47:09 - the repo i'm sure
47:11 - there is a link to it at some point here
47:16 - maybe this is an issue that it's not
47:18 - easily findable
47:22 - um
47:25 - just looking yeah
47:27 - huh
47:28 - well i know where it is is there a link
47:30 - to the github
47:32 - like right
47:33 - about maybe under the about
47:37 - there's a link to github here
47:40 - just curious where oh probably in the
47:44 - huh so i probably should
47:47 - maybe in the footer i mean it goes to
47:49 - the coding train github but actually
47:51 - have a link to very specifically to the
47:54 - the coding terrain website it's not a
47:55 - big deal it's the first pin repo so i'm
47:58 - i'm overthinking this all right
48:00 - if i go under pull requests you will see
48:02 - here that people are opening pull
48:05 - retracts this one's from kfon 22
48:08 - who uh has um opened a pull request for
48:11 - the chaos game coding challenge so and
48:14 - we can see so you can participate in
48:16 - this
48:17 - at this point kind of a volunteer effort
48:19 - with some um some maintainers who work
48:22 - on coding train projects um helping
48:24 - along with it so um but
48:27 - i will say this site uses gatsby
48:29 - and if i go here under redirects
48:33 - like i am specifically redirecting a few
48:36 - things so if there is uh like some of
48:38 - the most visited pages on the old site
48:40 - i'm like redirecting them to the correct
48:43 - website so if you want to pull request
48:45 - any redirects to this json file those
48:48 - will also uh work
48:50 - that would also be welcome
48:53 - um
48:54 - and yes so this has been uh i've talked
48:57 - about this to death on on other streams
48:59 - about the website i don't know what
49:00 - chris which specific aspect chris
49:02 - manning is referring to this could be
49:04 - automated it could be automated
49:07 - but the whole point of me doing this is
49:09 - that the old website has out of date
49:12 - links incomplete information so i don't
49:14 - want to automate bringing all the
49:16 - content over and just have a totally
49:17 - broken website so we're doing it page by
49:20 - page at a time so that everything is
49:22 - corrected and built out it's much more
49:23 - important to me i'd rather have
49:25 - something totally missing than there but
49:27 - broken and if you go through the site
49:29 - maintenance guide we've automated a lot
49:31 - of the steps for you that there's a
49:33 - starting template we've reformatted it
49:36 - in the json format but it does require a
49:38 - manual step to review all the content
49:41 - and correct it and update it to work on
49:43 - the new website um but maybe you're
49:45 - referring to automating all the
49:46 - redirects which i also could do but
49:48 - again i'm that if somebody wants to just
49:50 - take that on great but i'm trying to
49:53 - prioritize the things that are most
49:55 - important to me
49:56 - and my goal here is to have this website
49:58 - really finished and built out with all
50:00 - the content by the start of school in
50:02 - the fall because that tends to be when
50:04 - teachers and students and people around
50:06 - the world are using the resources on the
50:08 - website most
50:10 - okay thank you for the screenshot i also
50:12 - got a screenshot of the chat of mason
50:14 - sickler
50:16 - um okay
50:19 - so tomer is asking such a good question
50:21 - and i i've got to move on here
50:24 - to looking at the passenger showcase but
50:26 - do you look at passengers code only in
50:28 - p5.js
50:30 - no
50:32 - the answer to that is definitely a
50:34 - hundred percent distinctly a no
50:37 - the whole point of what i'm doing is i
50:39 - mean i love p5 you want to use p5 great
50:42 - there's a lot of reasons why you
50:43 - probably do and those they're good
50:45 - reasons but the point of what i'm doing
50:46 - is to share
50:48 - my passion for
50:49 - teaching code and trying code and
50:51 - struggling through code with you
50:54 - and for you to share what you make back
50:57 - with me and when you can you do apply
50:59 - something that i've tried in a different
51:01 - language in a different format in a
51:02 - different way that's the most exciting
51:04 - thing to me so please
51:06 - port it to unity python c plus plus uh
51:10 - do it by hand you want to make a wave
51:12 - function collapse quilt where you
51:14 - execute the algorithm by hand and sell
51:16 - it on etsy i mean you don't have to sell
51:17 - it but
51:18 - i would buy it i would buy that
51:20 - instantly insta buy insta purchase
51:22 - anybody wants to make a wave funk quilt
51:24 - physical thing like please go for it
51:27 - share it with me ah that's that's i
51:29 - would love that ro doc is here ah
51:31 - roadock perfect timing
51:34 - hi ro doc uh thank you for your
51:35 - membership i didn't even realize um
51:38 - yeah and i do want to start doing um
51:41 - more uh challenges in other languages as
51:43 - well but you know
51:45 - the list of things that i would like to
51:46 - do on this channel is very long and the
51:49 - reality is i get to one percent of it
51:53 - um all right so let's move on because
51:55 - i've spent too much time just kind of
51:57 - like rambling away here
51:59 - i'll remind you that even though there's
52:01 - a lot there's not a lot of code
52:02 - happening today
52:04 - although i do have some intention of
52:05 - writing some code we'll see if we'll get
52:07 - to it
52:08 - um
52:09 - saturday i'll be live streaming on
52:10 - saturday and doing a coding challenge so
52:12 - come back on saturday for my robot
52:15 - controllers with um
52:16 - with guest uh um dr christian vicki okay
52:20 - um let's close out a bunch of these tabs
52:22 - we've covered uh the horizontal
52:24 - directional drilling i'm gonna come back
52:26 - to brilliant in a second
52:28 - i've talked about bookshop
52:31 - this is the rubik's cube challenge
52:33 - look
52:34 - let's just compare look at this gray
52:37 - what year was this
52:39 - 2019
52:41 - you know i wonder though i think in my
52:43 - old studio the lighting was such that
52:45 - the gray didn't show up as much as the
52:47 - lighting in here i mean obviously i do
52:49 - have more gray hair
52:50 - a little self-conscious because i've
52:52 - been recently getting comments i used to
52:54 - yeah you used to only get comments of
52:55 - like wait i just found out how old you
52:57 - are you look like you're 27.
52:59 - now i've recently gotten comments like
53:00 - you look like you aged a lot in your
53:02 - videos which it's been a rough couple
53:03 - years for everybody not not even barely
53:06 - for me compared to i think what other
53:07 - people have been going through
53:10 - all right
53:11 - um
53:13 - all right now back to
53:16 - wave function collapse
53:20 - let's start looking at the python the
53:22 - python the passenger showcase let's see
53:24 - did so we have a little bit of an issue
53:26 - we're having a little bit of an issue
53:28 - with the website which somebody might
53:29 - actually be able to help with if you
53:31 - have experience with gatsby and netlify
53:34 - anybody here is like a gatsby slash
53:36 - deployment to netlify expert
53:39 - please get in touch
53:43 - are you not 27 no
53:45 - by the way my birthday is coming up just
53:48 - putting that out there in the universe
53:52 - is it bastille bastille day today
53:55 - um nothing wrong with i agree i by the
53:57 - way i have a very youthful demeanor
54:00 - i'm feeling my age the coven really got
54:02 - me
54:03 - uh you know i trip triple i had my
54:05 - booster had everything
54:07 - i probably had the variant i'm sure it
54:09 - was omicron which i know has been milder
54:11 - but i i had a rough i had a rough time
54:13 - with it and i have not recovered so
54:16 - fully recovered i have recovered um
54:18 - but i'm hoping it will uh slowly each
54:20 - week i'll um
54:22 - get even better i just i feel like
54:24 - cloudy in the head but i mean i also i'm
54:26 - just like i'm so neurotic about things
54:28 - that i think i might be over
54:29 - like overly like obsessively like
54:32 - analyzing every slight feeling anywhere
54:35 - that's like a possible symptom so
54:41 - all right
54:44 - now
54:45 - so rodak your contribution is not
54:48 - showing up here right now but i do want
54:50 - to show it so somebody remind me um if i
54:54 - haven't notcha code says help with
54:56 - netlify so i will
54:58 - my birthday's not for a couple weeks
55:00 - it's not today
55:04 - so all right so but let's start going
55:05 - through these so one by the way uh if
55:08 - you if you're not a fan or viewer of
55:11 - sable rafe
55:12 - and
55:13 - creative code news and the twitch
55:15 - his twitch channel i'm really inspired
55:18 - by what he does with reviewing
55:20 - projects that are made by his community
55:22 - i do actually think his methodology is
55:25 - better in the sense that there is a
55:28 - theme like
55:29 - flowers for the week whereas
55:32 - these projects shared by the community
55:34 - are tied to a particular algorithm or
55:36 - video but it works for the coding train
55:39 - and it is nice to be able to see
55:40 - a tutorial and see what people have done
55:42 - with that so i do think there's value in
55:43 - both but you should definitely check
55:45 - that out he does a wonderful job
55:46 - reviewing people's
55:47 - doing twitch streams weekly
55:49 - reviews submissions from the community
55:51 - and i would like to start doing more of
55:53 - the same so let's get right to it number
55:55 - one
55:57 - wave function collapse in python with
55:59 - backtracking so let's take a look at
56:00 - this we're going to go over and we can
56:04 - see here
56:05 - that
56:06 - this looks like a
56:08 - port
56:09 - of the wave function collapse algorithm
56:11 - in python and we can see oh look at this
56:14 - now dare i try to run this
56:17 - look at these ooh i love that there's a
56:18 - mondrian one
56:20 - look at these these are fantastic so
56:22 - this is the and by the way i want to
56:23 - address this mistake
56:25 - um that i made i mean what's what's a
56:28 - mistake you know there's a lot of
56:30 - artistic license here like
56:32 - why is this a mistake versus not a
56:34 - mistake but
56:35 - it's a mistake in the sense that if i
56:36 - were trying to reproduce the precise
56:40 - um
56:41 - and not yet yeah i'll be if it's not
56:43 - your code let me know if it's on the
56:45 - page or not um if it's on the page i'm
56:47 - going to get to it if it's not i need
56:49 - people to alert me to be able to look at
56:50 - it during the stream um
56:53 - the original sort of design for this
56:55 - would be to not have into these
56:57 - individual
56:58 - i'm trying to not step out of frame here
57:00 - and cut myself off but not have these
57:02 - little individual squares or these
57:04 - really thin
57:05 - uh thin sort of like rectangles
57:09 - um so that's a mistake that i'll address
57:11 - i really love this one
57:13 - like this is really cool looking
57:16 - uh as well i mean all these are great
57:18 - um i love this sort of like maze
57:20 - generator like thing
57:22 - so these are fantastic so
57:25 - um let's let's try it um that's what
57:28 - today is for
57:29 - let's try see if i can run this
57:32 - let's learn how to do it because i don't
57:33 - do a lot of python so i'm going to open
57:35 - up i'm going to um
57:38 - i'm going to go here
57:41 - and let's go back let's follow these
57:42 - instructions so let me clone this repo
57:53 - and so now i've got the repo i can go
57:55 - into it
57:58 - let's see here let's follow these so
58:01 - this is um
58:04 - these instructions here really have
58:06 - nothing to do with this particular
58:07 - project
58:08 - this has to do with creating a virtual
58:11 - environment so i don't know if you've
58:13 - ever programmed in python
58:15 - i have a video about this hopefully it's
58:17 - not too out of date if you're looking
58:18 - for it where i go through this a bit
58:19 - more detail but
58:21 - the python settings and configuration
58:23 - and dependencies and version that you
58:26 - have on your computer
58:28 - can get re can get tangled up in total
58:31 - spaghetti if you're just constantly like
58:34 - updating and installing things and
58:37 - different projects will not be
58:38 - compatible with certain versions of
58:40 - certain dependencies and it can be a
58:41 - total mess if you just use like one
58:44 - python environment the sort of like
58:46 - global environment of python on your
58:48 - computer
58:49 - actually if you're using online
58:50 - notebooks like a collab notebook that's
58:53 - in essence each notebook is its own kind
58:54 - of virtual environment but the idea here
58:57 - is to set up sort of a sandbox a blank
59:00 - slate version of python that's activated
59:02 - for this particular project so i could
59:04 - have the right version and all the
59:05 - dependencies et cetera so let's see if i
59:08 - can get this going
59:10 - so i think though i want to be uh what
59:12 - um
59:13 - what i would suggest doing is this is my
59:15 - this is actually my own name of
59:19 - of the virtual environment so i'm going
59:20 - to call this
59:22 - with w
59:24 - f
59:25 - c so i want to create a virtual
59:27 - environment called wave function
59:28 - collapse
59:30 - oh and you know what i've got to say
59:31 - python3
59:33 - because this command v env is the
59:36 - command for python version 3 which i
59:38 - have
59:43 - so that created that virtual environment
59:45 - and then
59:49 - i need to run this activation script
59:51 - essentially which is now in the folder
59:53 - wavefunction collapse
59:55 - which now i can see here i've activated
59:58 - that virtual environment so anything i
60:00 - do right now if i type python
60:04 - whoops
60:05 - python
60:08 - what happened
60:15 - yeah i i guess i need dash v is
60:16 - something else dash dash version we'll
60:19 - see the version of python i'm running
60:20 - for this particular
60:22 - virtual environment right because if i
60:25 - open up a new tab and type python
60:27 - version that's the global
60:29 - python on my computer and i have python
60:32 - 3
60:34 - installed under python 3. so i created a
60:37 - virtual
60:38 - a virtual environment python environment
60:40 - with python3 now let's go back
60:43 - and i need to install all the
60:45 - requirements the dependencies for this
60:47 - project
60:50 - numpy gotta love numpy
60:53 - opencv now this is interesting like what
60:54 - are these dependencies being used for
60:58 - like what
60:59 - in opencv
61:01 - is b is for this um
61:03 - wavefunction class project that's really
61:05 - interesting now
61:07 - let's just try running python simple pi
61:14 - building a tile sheet
61:15 - uh collapsing building the image
61:18 - and
61:19 - we should see there it is
61:22 - 11am look look at that one i made
61:24 - let's try doing another one
61:27 - now all their arguments where i can make
61:28 - it like higher resolution and stuff i'll
61:31 - have to look through
61:32 - that would be a really cool thing
61:34 - um i really like this one so let's run
61:37 - this one
61:40 - sheet 40x40 tile 7x7 so let's go look in
61:44 - the code
61:45 - and i also be curious like where did
61:46 - these designs come from like there are
61:49 - sort of the
61:50 - canonical example wave function collapse
61:53 - tiles that a lot of different uh
61:55 - examples and repositories use
61:58 - also i'm forgetting that i wanted to
61:59 - start with talking about something a
62:01 - 2007 phd dissertation called model
62:04 - synthesis which i think is a a neglected
62:07 - to reference specifically in my video
62:09 - but that's obviously a really key
62:11 - reference to the origins of the wave
62:13 - function collapse
62:15 - algorithm
62:17 - so let's look at abstract.
62:21 - so yeah so it looks like
62:23 - i could
62:24 - just do i'm just curious what if i
62:25 - change this to 80 by 80.
62:31 - it still says
62:33 - whoops
62:34 - still said 40 by 40.
62:36 - so i'm not so sure what's going on here
62:38 - fine you can install that
62:44 - i don't know if the log was just
62:46 - logging hard coding 40x40 but let's go
62:49 - to
62:50 - which one did i just do
62:52 - uh what should the file name be although
62:54 - i guess i can look at date modified
62:55 - abstract oh so that didn't work
62:59 - something about me changing it to 80 by
63:01 - caused it to fail let's go back
63:09 - 40 by 40 tile 7x7
63:14 - let's see take a look now
63:16 - yeah
63:18 - so i'm not sure
63:19 - i mean i have to dive deeper into the
63:20 - code but that's something that i would
63:22 - want to be able to uh and maybe it would
63:24 - make sense for me to say something like
63:26 - oh and i know you can't you might not be
63:28 - able to python
63:30 - abstract and then have you know like
63:33 - dimension be 80 or something i don't
63:35 - know i don't know what the uh
63:37 - the proper way to format the arguments
63:39 - but that would be kind of cool
63:42 - zachary that's a great question i'm i'm
63:45 - gonna keep going i wish i could i need
63:47 - to do a better job of collecting
63:48 - people's questions so i can answer them
63:49 - at the end but the the short answer is
63:51 - accurate about do i have online lectures
63:52 - from nyu i mean that's the short answer
63:55 - is yes um
63:57 - uh they're indistinguishable from a lot
63:58 - of my videos because i release them as
64:00 - like public-facing videos
64:02 - um okay
64:03 - so
64:04 - uh
64:06 - so i want to look a little more at the
64:08 - code just to sort of see like if we
64:10 - could
64:12 - learn anything from it
64:15 - but we can see the data structures look
64:17 - somewhat similar tiles tiles data
64:20 - left side data right side data
64:24 - um
64:26 - low tiles the rotation is here so this
64:29 - looks like
64:30 - a lot of
64:33 - similar kind of code to what i
64:34 - implemented
64:36 - probably with some optimization and
64:37 - improvements i would imagine i love that
64:40 - there's this function about defining the
64:41 - neighbors updating the neighbors
64:44 - find lowest entropy
64:47 - amazing so i love seeing this great work
64:52 - great work okay let's move on
64:55 - thank you
64:56 - uh
64:57 - to shrike for submitting this um let's
65:00 - take a look at wave function collab and
65:02 - i haven't looked at these i mean i've
65:03 - glanced at them but i haven't looked at
65:04 - all these wave function collapsed by
65:06 - asanka sovis
65:10 - so here we have a repo
65:13 - oh i love so first of all
65:16 - i always love to see a nice animated gif
65:19 - in a repos readme to give me a quick
65:21 - view of what's going on
65:24 - there is a blog post
65:26 - amazing that there's a blog post
65:29 - oh fantastic documentation
65:32 - uh
65:34 - explaining the set of tiles these are
65:36 - the ones that i used defining the rules
65:40 - tiles as a class
65:42 - so this is being done now in ah this
65:44 - looks like it's being done ported in
65:46 - processing small comment is a very
65:48 - nitpicky comment but i cannot help
65:50 - myself the convention would be to
65:52 - capitalize
65:54 - the names for a class
65:56 - lowercase for variable names capital for
65:59 - class names and i would recommend doing
66:02 - that um just purely it's just a purely
66:05 - for your own sort of sanity and
66:06 - documentation doesn't affect the
66:08 - functionality but you'll notice here p
66:10 - image is capitalized so that's one
66:11 - little nitpicky comment
66:13 - we can see
66:14 - the tile set
66:16 - creating a new tile object with the
66:17 - image
66:19 - this must be
66:21 - defining
66:24 - oh defining the sides
66:26 - the sides of the tile
66:30 - i'm just trying to understand what the
66:31 - second index value is
66:34 - um
66:37 - zero
66:39 - oh no these are the valid neighbors
66:40 - these these are the valid neighbors the
66:42 - index of the valid neighbors so this is
66:44 - done in looks like it's done more in the
66:46 - sort of first way that i did it
66:51 - function that returns all the tiles
66:52 - that's great
66:54 - i love this documentation where it's all
66:56 - explained this is fantastic work uh one
66:59 - of the awkward things about working in
67:01 - java
67:02 - oh asanka is there in the chat
67:05 - oh yeah i'm so so glad that the whole
67:07 - point of this i love that you're here in
67:08 - the chat wonderful um
67:11 - this is one i'm very impressed with that
67:12 - you did this because this is one of the
67:14 - real heartaches of working in java is to
67:16 - have to deal with these very long-winded
67:19 - um
67:21 - uh
67:22 - statically typed or i don't know if
67:24 - that's the right term but arraylists
67:27 - arrays in javascript are just so
67:29 - flexible and easy to mess with
67:30 - um conclusion
67:34 - um
67:37 - i'm intrigued why are you referencing
67:39 - purlin noise here i'm actually not
67:40 - reading this in detail
67:47 - and then thank you so thank you for but
67:48 - this is amazing um i want to make i want
67:50 - to
67:51 - share this
67:53 - remember to share this
67:55 - through the coding train
67:57 - twitter as well so um really great work
68:00 - um and i would love to see um
68:05 - i just really appreciate this this level
68:06 - of documentation all
68:08 - right um
68:17 - coding adventure that's really the term
68:19 - that's sebastian lags term so
68:22 - but uh uh but uh your coding challenge i
68:25 - guess is where i'm what i'm stuck with
68:27 - all right uh stefano silvreski aperiodic
68:30 - tiling
68:35 - a lot of people made the um okay
68:39 - be warned
68:40 - excellent documentation in the comments
68:42 - here
68:43 - it may take a while to find the right
68:45 - tiling if you're using a generic seed
68:48 - when it manages to complete the grid the
68:50 - output will always be an aperiodic
68:52 - tiling
68:53 - so a lot of people in the comments
68:54 - referenced
68:56 - wong or wang tiles
68:58 - so i need to do some more research uh
69:00 - yes here it is so i definitely would
69:02 - like to read this paper and maybe this
69:04 - is something for a future coding
69:06 - challenge
69:09 - am i doing something totally redundant
69:12 - if i
69:13 - have this as the topic of a future
69:15 - coding challenge or might i take other
69:17 - approaches to this concept of wang or
69:20 - wong titles i'm not sure the proper
69:21 - pronunciation by the way i already can
69:23 - hear my voice going and that's the sort
69:25 - of remnants of kovit i've just been
69:27 - congested sort of sore throat just has
69:29 - not totally gone away
69:31 - okay
69:32 - i know
69:34 - let's run this
69:38 - oh this is amazing
69:40 - this is this is absolutely beautiful and
69:41 - i wish i knew more about this to be able
69:43 - to
69:44 - explain and discuss it further
69:50 - so first of all that didn't seem to take
69:51 - a long time to find the seed at all
69:58 - and i wonder if it's
70:00 - ah i see
70:04 - interesting so ah so there is a hard
70:06 - coated seed in there
70:08 - so for 600 by 600 dimension equals 20
70:11 - like we could try this seed
70:24 - cool i'm actually also curious
70:27 - to up the dimensions to see what happens
70:34 - you know there's a real joy in just
70:36 - watching these
70:38 - go
70:39 - it's almost you can sort of imagine this
70:42 - crew of little tiny robots inside the
70:44 - computer trying to assemble this pattern
70:47 - so you know i always i always find this
70:49 - to be an interesting question
70:52 - is the sort of beauty of the algorithm
70:55 - in watching it execute animate or is it
70:58 - in the final result and these are not
71:00 - mutually exclusive and these are not yes
71:02 - or no questions but i think it's a
71:04 - really interesting
71:06 - discussion to be had and i certainly
71:09 - find
71:10 - both in the case of weight
71:12 - implementations of wave function
71:13 - collapse to be quite um
71:16 - ah stefano is there too i should try one
71:18 - less
71:20 - 1777
71:26 - i would love to hear from you uh stefano
71:29 - uh
71:30 - more about implement the actual rules
71:32 - for
71:33 - a periodic tiling what did you mean by
71:35 - that is this kind of a simulation of of
71:39 - sort of the idea of a periodic tiling as
71:42 - visualized through wave function
71:44 - collapse but there's a whole way of
71:46 - creating this pattern
71:47 - without
71:49 - um
71:52 - without
71:53 - using wave function collapse that uses
71:55 - another set of rules and do you think
71:57 - this would make sense for me to tackle
71:59 - as a coding challenge video
72:03 - anyway this is wonderful
72:06 - i'm always curious to look at um
72:09 - i don't know to what extent this looks
72:11 - quite similar to
72:14 - ah yeah so look at this so we can see
72:16 - this is really using my code base which
72:19 - is great i mean that's the whole idea of
72:20 - this and i'm intrigued to see
72:23 - that the um
72:25 - that these are done let's look one thing
72:27 - that i don't love about the p5 web
72:28 - editors don't let me preview these
72:30 - images
72:31 - so if i wanted to i have to just
72:32 - download the sketch
72:35 - but i'm curious to see
72:37 - what these tiles actually look like
72:40 - if it i mean just stop for a second
72:44 - and imagine i guess we can see because
72:45 - we can see the
72:47 - the outline of the grid here but it's
72:49 - almost like you imagine the tiles to be
72:51 - the single rectangle single squares that
72:53 - are rotated and we're actually laying
72:55 - them out in this rotated fashion but
72:57 - we're not uh and actually the tiles are
73:05 - oh why aren't these not previewing that
73:07 - was weird
73:10 - okay i'm at a loss here
73:14 - huh
73:17 - why did they not download anyway i i
73:19 - suppose you can imagine
73:21 - that's so strange
73:25 - i'm not going to i don't know if that's
73:26 - a bug in the p5 web adder or something
73:28 - happening
73:29 - the wave function collapse eventually
73:31 - finds an api italian with those 11 tiles
73:33 - there are actual rules to get a tiling
73:35 - with the wang tiles got it
73:37 - okay thank you for that comment
73:40 - this is so fun
73:48 - okay
73:48 - wonderful um by the way there's also i
73:50 - think a really great i think roon matson
73:53 - and his programming design systems
73:58 - has
74:03 - i thought roon for programming design
74:05 - systems has a nice article about
74:07 - symmetry
74:15 - might have seen it somewhere else
74:18 - maybe it's somewhere else and not in the
74:20 - book yet
74:21 - and but this is a wonderful resource if
74:22 - you haven't found it i haven't seen it
74:24 - before okay moving on i guess i you know
74:27 - so i'm gonna
74:30 - i
74:32 - i really thought i was gonna be able to
74:33 - do a lot more during this live stream
74:34 - and i do want to look at entropy and
74:36 - brilliant but let's keep going let's see
74:38 - if i can get through these
74:39 - before i do that okay
74:43 - so this is gurichi's wavefunction
74:45 - collapse we can see it's directly a fork
74:48 - and the change log here is there's a
74:50 - custom pattern
74:52 - so i wonder
74:55 - if um
74:58 - i'm just curious to see what was changed
75:00 - here
75:02 - circuit inspired so there's a new
75:04 - pattern here with a new set of rules
75:08 - that are noted with a different notation
75:11 - with this underscore all right so i
75:12 - think i need to clone this repo
75:14 - to sort of see oh oh wow
75:18 - look at these ah this is a dream so i'm
75:21 - curious i don't know if you're in the
75:22 - chat um whoever
75:25 - glitchy
75:27 - um
75:28 - but if you are in the chat please say
75:30 - hello because i'm really curious like
75:32 - where did you design these tiles
75:34 - yourself
75:35 - um
75:36 - and i need to find it whoops
75:39 - so let's clone this
75:46 - um
75:48 - i'm going to just make a directory
75:49 - called showcase i should have put the
75:50 - other one in it
75:52 - let's grab this repo
75:56 - let's run a server
75:58 - and see what we've got here
76:02 - wow
76:04 - this is beautiful
76:05 - so look at this pattern
76:07 - from these tiles
76:14 - this is very creative what i find so
76:19 - i mean it's like a circuit design but
76:22 - the sort of alpha blending and gradient
76:24 - of these patterns and
76:26 - it's just really beautiful
76:29 - and unique
76:32 - um
76:35 - if we look at the tiles
76:40 - let's look at these tiles
76:43 - this one is circuit inspired look so
76:45 - first of all there's a lot more tiles
76:46 - this has 20 tiles
76:51 - and we can sort of see like there are
76:53 - some very basic ones like that must
76:55 - connect off of this on the top we can
76:57 - sort of extrapolate what the rules might
76:59 - be
77:00 - um
77:03 - but that's just wonderful
77:05 - i'm always curious we can see that with
77:08 - all of these tiles and permutations it
77:10 - runs rather slow
77:12 - i'm just curious like how far we can
77:14 - maybe push it
77:18 - oops
77:22 - oops wrong one
77:27 - let's take a look at the code here
77:31 - and let's try
77:34 - 30.
77:37 - yeah let's try 30 just curious
77:43 - so now you can see it's running much
77:44 - slower so this is really a lot one thing
77:47 - i didn't pay attention to at all
77:49 - in wave function collapse
77:51 - is um optimizing to get the thing to run
77:54 - faster and if you dig into the algorithm
77:56 - deeper and look at a lot of people's
77:58 - implementations that's what a lot of
78:00 - work goes into but i i do believe that
78:02 - this there's the potential to run this
78:04 - quite a bit faster um i would imagine
78:07 - even just like the processing ports run
78:10 - faster just from sort of running in you
78:12 - know javascript in the browser with no
78:15 - kind of
78:18 - workers or webassembly or webgl or
78:21 - optimization generally run tends to run
78:22 - pretty slow but let's let this generate
78:27 - i'm also amazed at how well this is
78:29 - doing with not getting stuck
78:31 - again there's no
78:33 - i missed
78:34 - quite a few things about recursion and
78:37 - backtracking and various things to help
78:39 - the algorithm not get stuck in
78:41 - generating a pattern
78:44 - it looks like train schematics looks
78:46 - like a subway map yeah those are great
78:47 - comments all right so i'm going to move
78:49 - on but this is absolutely beautiful work
78:51 - thank you so much for sharing this
78:55 - i want it to finish though but i'm going
78:56 - to move on i'll run this more on my own
78:59 - oh you know it's also probably running
79:00 - slow because i've got these all these
79:01 - things running in the background
79:03 - uh okay
79:04 - we are now optimized performance oh
79:07 - fascinating okay so it looks like what
79:09 - we're going to get with this one is not
79:11 - a new design but optimized performance
79:14 - and let's see what we can learn from it
79:17 - so this is also a fork
79:20 - revamp the imperative for loops for
79:22 - higher order functional declarative
79:24 - version
79:25 - optimize several unoptimal loops and the
79:28 - biggest optimization is implementing
79:30 - updates just for proliferating cells
79:34 - also added the possibility to declare
79:36 - non-square rectangular canvas
79:39 - okay
79:44 - all right so let's look also original
79:46 - version computed array of valid options
79:48 - for every cell in every loop this is not
79:51 - optimal because the majority of cells
79:54 - don't change
79:56 - the majority doesn't change
80:00 - rules are set in a way that only cells
80:02 - which are adjacent to the collapsed
80:03 - cells
80:05 - is proliferating and therefore we are
80:07 - tracking the array of such proliferation
80:09 - cells and run entropy reduction only on
80:12 - those cells
80:13 - this increases performance a lot and
80:15 - allows computing much larger grids well
80:19 - here we go
80:22 - nacho codes did i um are you uh i'm
80:27 - ah oh wonderful did i are you glitchy
80:29 - i'm confused about which um
80:31 - did i look at yours or i'm not sorry
80:33 - about that i'm kind of trying to keep
80:35 - one eye on the chat but i'm not matching
80:37 - not your
80:38 - youtube name with a github name so let
80:40 - me know if i've looked at yours already
80:42 - or not
80:43 - uh
80:44 - so let's let's try running this first of
80:46 - all i would love to look at the commits
80:52 - so
80:55 - okay so first like
80:58 - i need to get better at
81:00 - um
81:01 - i need to get better at using some of
81:03 - these nice features of javascript
81:06 - like the spread operator
81:11 - um
81:14 - we can see here this is for calculating
81:17 - a rectangular grid that's super helpful
81:23 - you know again this is just using a
81:24 - higher order function by the way my
81:26 - understanding is that the higher order
81:28 - functions are really great can be really
81:31 - great for sort of code being concise but
81:34 - don't necessarily optimize the speed of
81:36 - anything and in fact are often slower
81:38 - than just a sort of raw for loop but i
81:40 - haven't done any deep dive into this
81:43 - um okay these are all just
81:45 - changing for but this i think is the
81:48 - sort of more significant change right
81:51 - this is where i'm drawing
81:54 - everything what is this doing
81:57 - this is just
82:00 - filtering things that are
82:02 - collapsed
82:04 - and then drawing those image
82:06 - ah so this is just the same but it's
82:07 - kind of like saying draw the collapsed
82:10 - ones draw all the non-collapsed ones
82:12 - and then
82:17 - huh i have to think about this more i'm
82:19 - not fully understanding
82:21 - why this third one is here because this
82:24 - seems to me like it would cover
82:26 - everything
82:27 - so i'm not entirely clear what this
82:29 - third one is
82:33 - um but that's i'll come back to that
82:35 - i'll have to look at that later i wanted
82:36 - to sort of look at
82:43 - so this is looking for the minimum
82:44 - entropy
82:48 - this is what i'm okay
82:50 - traversing the whole array every loop is
82:52 - not optimal in fact change proliferation
82:54 - is possible only in some cells
82:57 - non-collapse cells directly adjacent to
82:59 - collapse cells
83:01 - that makes sense
83:03 - so start with all ah
83:07 - so this is a really interesting
83:08 - optimization i understand now
83:11 - if we go back and look at my original
83:13 - code
83:14 - what i'm doing is looking at every cell
83:17 - in the grid and calculating
83:20 - what are the possible states it could be
83:22 - which tiles could fit here
83:25 - but
83:26 - i act what this is proposing that which
83:28 - seems correct to me i have no reason to
83:29 - believe it's not is i only need to do
83:31 - that analysis for cells that are
83:33 - adjacent to collapse cells and that
83:35 - aren't collapsed themselves presumably
83:38 - and so by creating a separate list
83:41 - of cells that need to be checked i only
83:44 - need to work through
83:46 - those that shorter amount
83:49 - and then uh that's what's happening
83:51 - through all of this i have no idea what
83:53 - this is doing i have to investigate uh
83:56 - what a javascript set is
83:58 - uh
84:00 - simon is offering some interesting
84:02 - comments saying that there is maybe an
84:04 - issue with this in that the recursive
84:06 - entropy reduction
84:09 - has never gotten around to um yeah so i
84:11 - would imagine there's
84:13 - a way of doing this with also the
84:15 - recursive entropy reduction that there's
84:17 - like a middle ground there but this is
84:19 - too much for me to cover right now um so
84:22 - let's just keep looking through this but
84:24 - this is fascinating okay so now i've
84:26 - looked through all the changes let's try
84:28 - running it and let's sort of put the
84:29 - pedal to the metal if you will
84:33 - i'm getting a little
84:35 - okay so now
84:39 - all right so
84:42 - i'm just going to rename this
84:44 - whoops
84:46 - just want to put these both in here
84:52 - now we're going to look at this one
84:55 - and let's run them side by side
85:06 - so let's see what's running here let's
85:08 - close this
85:10 - so this is my wave function collapse
85:15 - my original wave function collapse is
85:17 - running at oh hi from china thank you
85:19 - frog stud very kind of you um
85:22 - is running at port 8081
85:25 - whoops
85:26 - and the optimized version
85:29 - is running at 8082
85:31 - so let's go
85:35 - sorry this is tricky to manage this
85:38 - because they're all called wave function
85:39 - collapse
85:42 - so this is mine
85:48 - and i'm going to just set the same
85:50 - so let's set them both to 600 by 600
85:56 - and a dimension of
85:59 - 30.
86:00 - okay
86:01 - so this is mine is now set to that
86:04 - and then
86:09 - this is the showcase one
86:17 - let's also set it to 600 whoops
86:22 - 600 by 600
86:24 - ah what is going on here by 600
86:28 - and 30.
86:30 - let's just make sure this looks like the
86:31 - right changed code right
86:34 - no
86:37 - this does not look like the
86:41 - no it is because it's got no that's me i
86:43 - did that
86:44 - hmm
86:45 - wait a second
86:47 - how can i tell where i am
86:50 - all right i need to just rename it hold
86:52 - on
87:01 - this is the one i'm looking for let's
87:02 - call it
87:03 - optimized
87:04 - sorry i know you can't see that so i'm
87:06 - naming renaming them renaming this one
87:08 - wave function collapse optimized so i
87:10 - can actually tell what's going on
87:12 - because i can't tell right now
87:15 - uh
87:21 - and
87:22 - let's go to visual studio code sorry
87:25 - that i have so many things open here
87:26 - let's close this python one
87:29 - i'm going to close this
87:30 - one close this one so now let's open the
87:34 - code for this one
87:37 - we can see i'm the optimized one
87:40 - with
87:44 - dimensions 30 600 by 600 this is strange
87:47 - did i
87:49 - is it
87:50 - did i not clone the right one
87:55 - i think i didn't clone the right one
87:57 - by the way so get remote
88:00 - oh yeah so i totally just messed up i
88:03 - hope that chat is telling me this
88:04 - already
88:07 - and uh
88:08 - whale ai is explaining what the set the
88:11 - set is hold on i've totally screwed this
88:13 - up so thank you for everybody's patience
88:15 - here
88:16 - we're going to the optimized performance
88:21 - and let me make sure i'm getting the
88:22 - correct one which i can see here is v
88:24 - balco
88:31 - and then i'm going to rename that
88:35 - to optimized
88:42 - and we'll look at that in visual studio
88:44 - code
88:45 - okay
88:47 - ah so we're gonna change it to
88:49 - 30 by 30.
88:50 - i know i'm in the right one now and
88:54 - calculate cell size
88:57 - i'm just going to have to assume that
88:58 - this is going to
89:00 - work correctly
89:02 - 30 by 30
89:04 - and
89:10 - let's close out
89:13 - this is mine
89:14 - i'm just closing out all these extra
89:16 - tabs
89:18 - so i've got mine
89:20 - and i've got optimized
89:23 - optimized is running on port 8081
89:29 - and mine is running on 8082. so let's
89:32 - take a look at mine first
89:34 - so we can see the speed at which this is
89:36 - running you can get a kind of sense of
89:38 - it
89:41 - let me do a force refresh just to be
89:43 - sure
89:45 - up here okay
89:47 - now
89:52 - oh i don't know why that
89:54 - we paused that one
89:57 - and let's go look at 80 81.
90:04 - oh look at that yeah so this is way
90:07 - faster
90:10 - so definitely a major optimization and
90:14 - um
90:17 - i'm pretty
90:18 - sure this is the same
90:23 - looks like it's the same dimensions
90:26 - i also love how there's something
90:28 - marking
90:29 - what needs to be
90:31 - analyzed
90:32 - and
90:34 - yeah
90:40 - this is great so thank you for this i'm
90:42 - gonna have to dive deeper into this um i
90:44 - would definitely i don't know if um
90:49 - um
90:51 - v balco if you're watching right now
90:54 - i would certainly accept pull requests
90:57 - with some of these changes i might go a
90:59 - little easy on the higher order array
91:02 - functions
91:04 - but
91:04 - uh pull requesting this sort of that
91:07 - this like basic optimization i think um
91:10 - would be great i you know the original
91:12 - code will always stand in the p5 web
91:14 - editor version
91:15 - all right so i've got two more to look
91:17 - at
91:19 - before i start to look a little bit more
91:21 - at entropy
91:26 - and let's look at oh
91:29 - onacha codes not your codes did i get
91:32 - yours did i get yours let's look at uh
91:36 - gab rz's so first of all this is called
91:38 - pretty bad north so if you're not
91:41 - familiar with bad north
91:46 - bad north is a game i believe made by
91:49 - oscar stallberg it uses wave function
91:52 - collapse to create these 3d scenes
91:55 - i would love to say more about it i'm
91:57 - not an expert on it at all it's
91:58 - definitely one of the things i came
92:00 - across in my research about the wave
92:01 - function collapse algorithm
92:03 - townscaper i think it's the sort of
92:05 - newer
92:06 - it's i don't know what the relationship
92:08 - between bad north and the townscaper is
92:10 - but townscaper is certainly um
92:15 - let's see
92:19 - this is a great video to watch
92:22 - which you can sort of see
92:24 - wave function collapse
92:27 - in action in a 3d world uh with
92:30 - incredible um animation and visual
92:33 - design elements like way beyond anything
92:35 - that i've gotten close to doing
92:38 - um and so uh it looks like what we have
92:41 - here
92:43 - um
92:45 - i'm closing all these tabs
92:48 - is and let's go to the code version
92:52 - from gab bar rz
92:54 - uh a basic 3d implementation of a scene
92:59 - uh nope so not your codes where do i
93:01 - find yours
93:02 - is it is it somewhere like is it on
93:05 - twitter is it on the github issue was it
93:07 - merged but not showing up
93:10 - so let me know where i can find yours
93:11 - not your codes
93:15 - so this is really nice to see and i'm
93:17 - sorry that i'm running out of steam a
93:18 - little bit here towards the end of this
93:20 - stream and maybe not having as much
93:23 - mental fortitude to comment on some of
93:25 - these ones i'm getting to later uh this
93:27 - is one of the things i really wanted to
93:29 - discuss today
93:30 - you know i guess there's lots more
93:31 - follow-up streams i could do about wave
93:33 - function glass but a waiting system i
93:36 - did not and this also relates to the the
93:38 - proper calculation of entropy in
93:40 - particular shannon entropy
93:42 - um but
93:45 - to um
93:48 - uh so i just got a little lightheaded
93:50 - there um
93:52 - to
93:53 - um
93:55 - uh to think of every
93:58 - the possibility of a given image showing
94:00 - up in a tile let's say i have ten
94:02 - possible images that maybe they aren't
94:04 - all don't have equal probability um so
94:07 - thinking about the sort of weighted
94:09 - probability of a given uh like if we're
94:11 - creating a landscape like maybe water is
94:14 - more likely than land which is more
94:16 - likely than mountain or something like
94:18 - that so um and we can see here that
94:20 - there's a wonderful um
94:22 - discussion of a sort of set of to do's
94:25 - i'm just always curious to see
94:27 - if i can peek into
94:29 - you know this looks very similar to what
94:31 - i did everybody is updating and using
94:33 - the spread operator
94:36 - the tile class looks very similar i'm
94:38 - just trying to understand where
94:41 - the
94:42 - 3dness is and where the rules are
94:45 - defined
94:47 - now here they are
94:49 - oh i'm looking in the wrong code base
94:51 - where am i looking
94:53 - how did i get there that's so weird a
94:55 - cell no whoops
94:58 - oh my goodness look at me the interface
95:01 - it's looking like i've totally tricked
95:02 - myself
95:04 - i'm like looking at this and thinking
95:05 - this is a way for me to browse the code
95:07 - that's visual studio code in the
95:08 - background here are the co
95:10 - sorry about that everyone so we can look
95:12 - at grid
95:15 - we can see that
95:16 - um
95:18 - there are slots this term of slot there
95:20 - is sorting and looking at the entropy
95:24 - picking a new option i'm not going to be
95:26 - able to uh i was just sort of hoping to
95:27 - see if i could find
95:29 - uh the rules
95:31 - looks like there is this idea of sockets
95:34 - in a mesh so in 3d it's actually much
95:36 - more complex to connect all these
95:38 - neighbors so it looks like there's a
95:39 - probably a different way of looking at
95:40 - this
95:43 - but
95:44 - i suppose we could find
95:48 - grid.draw i'm sort of curious to see
95:56 - uh look look at the draw function i'm
95:57 - just here to see what
95:59 - uh slot.draw
96:01 - i just wanted to see what are the sort
96:03 - of like native shapes that are being
96:05 - um
96:07 - drawn
96:08 - and it's a
96:11 - it's drawing a particular model so each
96:14 - one of these
96:16 - cells is like a polygonal model that
96:18 - makes sense and i can restart it
96:26 - like what if i i want to close like
96:27 - lower the speed quite a bit
96:33 - yeah so this is great i encourage you to
96:34 - continue this i would love to see more
96:36 - examples
96:37 - not your code submitted it on the site
96:39 - okay so we are now done with
96:42 - the ones that have shown up here
96:45 - and i'm just going to explain to you
96:46 - something that's going on on the website
96:54 - and um
96:56 - so i'm first going to go here into
96:58 - issues so
97:00 - there's an issue happening where
97:03 - not all of the showcase projects are
97:06 - actually showing up on the website and i
97:07 - hope to have this resolved next week
97:09 - sometime
97:12 - now why is this occurring
97:17 - so what's happening is for whatever
97:20 - reason
97:21 - the netlify slash gatsby build process
97:25 - is does a lot of caching to speed up the
97:28 - build of the website and i'm not sure
97:30 - why but the passenger showcase doesn't
97:32 - always update and i was able to get it
97:36 - to update by running clear cache and
97:38 - deploy site
97:40 - you can see that it took an incredible
97:42 - it took 67 minutes to build the site
97:44 - that's not really a sustainable amount
97:46 - of time
97:48 - so i need to figure out how to and we
97:50 - had a little bit of discussion about
97:51 - this here but i need to figure out ways
97:53 - to optimize the build and or
97:56 - not
97:58 - be able to recognize when the passenger
98:00 - showcase has been updated and not have
98:03 - that cached my suspicion is and i have
98:06 - not done any actual analysis
98:08 - that
98:09 - my guess is somehow if i haven't made
98:11 - any changes to this page like the
98:13 - passenger showcase is stored in separate
98:15 - json files
98:17 - in the engine of the site
98:19 - so my suspicion is
98:21 - if i didn't like change the language of
98:24 - the description or change a time code
98:26 - that the page doesn't rebuild it just
98:29 - uses the cached page even if there are
98:31 - new showcase projects i have not this
98:34 - would be something that's happening in
98:35 - gatsby i have not investigated to know
98:37 - what this is true but it's the only
98:38 - thing i can think of because why is it
98:40 - that the showcase sometimes doesn't
98:41 - update even when we merged a pull
98:43 - request so if anybody knows or wants to
98:45 - help resolve that uh roon matson who's
98:48 - uh one of the designers from dsi who
98:50 - built and designed the site is going to
98:52 - be investigating this more next week
98:54 - we have scheduled some time to look at
98:56 - this together but if you have any ideas
98:58 - please let me know but
99:00 - good news is
99:02 - i can find
99:06 - so
99:08 - not your codes i don't see a pull
99:10 - request here
99:12 - but i'm going to go look at unless it
99:13 - was
99:14 - closed already i'm going to look at
99:16 - this one
99:18 - from raw deck
99:21 - so
99:22 - rodak123 so i'm going to have to
99:24 - manually go and look at your project
99:27 - train track car roads and tunnels in
99:30 - processing java so one thing um that i
99:32 - commented on this looks like you
99:34 - uploaded as the sample image one tile so
99:36 - first of all a plus for uploading a low
99:39 - a small image like the preview images
99:42 - shouldn't be they big images because it
99:44 - will cause the
99:45 - website build to take forever because
99:47 - gotta resize them all but this is too
99:49 - small i think so usually i think we want
99:51 - like a 400 by 400 or 800 by 800 image
99:54 - we're looking for but i'm just going to
99:56 - go direct to your your url
100:01 - try
100:02 - this.showcaseprojects.update i don't
100:03 - know if that's a real comment or not um
100:10 - and let's clone this one
100:22 - we've got thankfully we've got a
100:23 - different name and this looks like it is
100:25 - a processing sketch fantastic so we're
100:28 - going to open this up in processing
100:36 - i'm trying to keep this someone please
100:37 - help me find nacho codes project so we
100:39 - can look at it before i go
100:42 - i don't have a lot of time here
100:49 - oh wow so
100:51 - this i've always been wondering about
100:54 - so i want to i really want to add this
100:56 - it looks like so first of all this is
100:58 - fantastic i love of course it's like
101:00 - train tracks i mean this is amazing
101:02 - i love it
101:05 - train whistle for this one so one of the
101:07 - things i love about this is it looks
101:08 - like visually
101:10 - it's overlaying all of the possibilities
101:13 - with alpha transparency and i love the
101:16 - way that looks and kind of gives you a
101:17 - preview of what's to generate
101:19 - so i really want to add that to mine
101:21 - thank you so much for adding that to
101:22 - this i just love it so much
101:27 - uh
101:28 - 800 by 800 but it failed yeah rodak
101:31 - there are some issues um it looks like
101:33 - you have the um
101:36 - member icon please message me in discord
101:38 - and let's get a thread going in discord
101:41 - to try to help you sort this out um so
101:44 - we can get this on the website but this
101:45 - is just absolutely wonderful
101:48 - um
101:48 - and i'm sorry that i'm low on time here
101:50 - to look at this in more detail um but um
101:54 - we can just i can see the amount of
101:56 - effort and time oh look at all of these
101:59 - tiles there's so many where did you get
102:01 - these did you design them yourself is
102:03 - this from some other example it's just
102:05 - wonderful
102:06 - uh i'm going to run this one i'm talking
102:08 - okay
102:09 - last call
102:11 - wow i had this list of things i wanted
102:13 - to go over and do today which i'm not
102:14 - getting to clearly
102:16 - uh
102:16 - lego pc game just like this last call
102:19 - not your codes
102:23 - uh let's see if we can make a guess here
102:26 - not your codes
102:28 - nope
102:34 - youtube is it on youtube
102:36 - ah
102:41 - about
102:44 - studious gammar okay let's try this
102:50 - whoa okay
102:55 - we're looking
102:59 - you drew them ah wave function collapse
103:04 - oh we've got another
103:07 - wow
103:08 - amazing so first of all wonderful job
103:10 - updating this
103:12 - uh
103:13 - this looks like it's i really want to
103:15 - quickly run this
103:16 - so
103:17 - let's quickly run this
103:20 - i'm going to do i'm going to throw
103:21 - caution to the wind here
103:23 - and oh did i lose my python one
103:28 - where is it
103:30 - no
103:33 - ah is it this one
103:37 - yes
103:43 - um
103:46 - so uh i just wanted to activate that i'm
103:49 - just going to use the same throwing
103:50 - caution to the wind
103:53 - and i'm gonna use the uh
103:58 - uh
103:59 - same virtual environment which is
104:02 - oh whoops
104:04 - oh it's also called
104:05 - wave function collapse
104:14 - uh okay so now
104:17 - let's try doing this
104:21 - we're getting pillow and pie game so
104:24 - these i assume are for the graphics
104:26 - engine
104:31 - okay
104:32 - and
104:34 - we're just going to run
104:36 - main dot pi
104:40 - oh
104:41 - amazing oh look how fast this runs
104:44 - so it's great to see how fast this runs
104:46 - in python
104:48 - beautiful job so this is really cool
104:50 - that we have both a python script that
104:52 - just generates the image with no visual
104:55 - and now using pygame i assume is what's
104:57 - this engine for drawing it so wonderful
105:00 - work um jia codes i'm sorry that i'm
105:02 - running out of time here i would love to
105:04 - review this further i encourage everyone
105:05 - to check out um
105:07 - and run this themselves looks like i can
105:09 - go into
105:10 - a different directory to export an image
105:14 - and then maybe there are ways to change
105:16 - the tiles um r to restart
105:19 - look at that fantastic great work i love
105:22 - seeing these i'd be curious to hear more
105:24 - let's make sure we can get this on the
105:26 - website as well
105:28 - all right so um
105:31 - this is a little bit unorthodox here but
105:33 - one of the things i really wanted to
105:35 - talk about on today's stream was entropy
105:38 - and here we are i want to let's let's
105:41 - take the 10 minutes here and let's cover
105:44 - the topic of entropy and who do i have
105:47 - to help me cover the topic of entry v
105:49 - but none other than the sponsor uh you
105:52 - know pretty much the main sponsor of the
105:54 - coding train which is brilliant so if
105:56 - you like the coding train if you like
105:58 - learning and watching my videos
105:59 - hopefully you're inspired by them you
106:02 - maybe they're entertaining for you maybe
106:03 - you learned something but the best way
106:06 - to learn i really believe is by doing it
106:08 - yourself so maybe my videos uh encourage
106:12 - you
106:14 - hey if you want to bring me a kitten you
106:15 - can
106:17 - maybe my videos i we're fostering some
106:20 - kittens i thought maybe i would but my
106:22 - videos inspire you to learn um and try
106:24 - something yourself but brilliant is a
106:27 - website um there's an app
106:29 - tons of courses with interactive lessons
106:32 - and so many ways you can learn so
106:33 - whenever i'm trying to learn a topic i
106:36 - immediately go to the brilliant website
106:38 - so you can sign up for free please do so
106:40 - after the stream today so if you haven't
106:42 - uh sign up at brilliant.org codingtrain
106:44 - for free lets them know that you found
106:46 - brilliant through the coding train yay
106:47 - that's a nice thing for me for you um of
106:50 - course if you are uh interested and want
106:52 - to unlock all the courses i'm going to
106:54 - show you what you can get with a premium
106:55 - subscription and through that link the
106:57 - first 200 people to use it will get 20
106:59 - off so let's go back and actually look
107:02 - at the brilliant website
107:08 - and um i'm just going to show you
107:11 - here under courses
107:14 - all the different courses
107:15 - so first of all i want to just highlight
107:17 - this beautiful geometry course because
107:19 - if you like making pretty pictures with
107:21 - math with code you're going to get so
107:23 - many ideas from here so you know i've
107:26 - made i think i'm on coding challenge 173
107:28 - now i'm always looking for more ideas
107:31 - and more things that i could try as a
107:33 - coding challenge this is a literal
107:35 - treasure trove of stuff so i really
107:37 - encourage you to poke around the
107:38 - brilliant website if you're looking for
107:39 - ideas of things you can try with code um
107:42 - what i want to look for is
107:45 - um information theory
107:47 - oh i'm so likely to record i mean
107:50 - i'm literally extremely likely the fact
107:52 - that i'm recommending brilliant on a
107:54 - live stream i mean it's a sponsor
107:56 - i paid to do so but i i do do do i would
107:59 - recommend it regardless um information
108:04 - theory
108:06 - so
108:08 - let's go here knowledge and uncertainty
108:11 - so learn the math behind uncertainty can
108:14 - you put a number on how much you don't
108:16 - know sure you can when you learn
108:17 - something new how should it change your
108:19 - beliefs about how the world works
108:21 - this course gives you tools for managing
108:22 - uncertainty and interpreting information
108:24 - you'll learn cutting edge mathematics
108:26 - like information theory so the concept
108:28 - of entropy
108:30 - i want to come back and do i'll have to
108:32 - revisit this in a future live stream or
108:34 - video to get a little deeper into
108:36 - information theory and entropy
108:38 - um
108:39 - this course i um really has a wonderful
108:43 - set of uh interactive quizzes so let's
108:46 - get started i'm working through this for
108:47 - just a few minutes
108:49 - um and um
108:51 - let's let's try uh let's try just let's
108:53 - let's work together and see what this uh
108:55 - to see what this course is like it says
108:57 - it is said that we live in an
108:58 - information age indeed information is a
109:00 - powerful force that shapes our world and
109:02 - the range of human experience
109:08 - but what does it mean to have
109:09 - information is it something we can have
109:11 - more or less of how do we go about
109:12 - obtaining it
109:14 - so the answer to this question leads to
109:16 - three closely related ideas so
109:18 - information theory i'm basing oh i want
109:19 - to do so many videos on bayesian i mean
109:21 - i've had a little bit in the monte hall
109:23 - problem about bayesian inference but i
109:24 - want to do bayesian text classification
109:26 - spam detection sometime let's go on so
109:29 - we're going to start this journey with
109:30 - alice she's trying to figure out how to
109:32 - ask efficient questions that obtain the
109:34 - most information possible oh this is so
109:36 - good guess who by the way mind sweeper
109:38 - was a lot of people commented on my
109:40 - wavefunction class video why didn't you
109:41 - use mind sweeper which is a great game
109:43 - also to demonstrate information theory
109:45 - and entropy um i was watching a khan
109:48 - academy video about information theory
109:50 - that was talking about um
109:53 - thinking about this idea of a bits a
109:55 - single how much uh you can measure
109:57 - information in terms of bits and a bit
109:59 - being like how many yes or no questions
110:01 - do you need to ask
110:03 - flip a coin
110:04 - so let's keep going through this
110:07 - a terrible crime has been committed a
110:09 - rare and precious diamond was stolen
110:11 - here are the main suspects
110:14 - alice needs to find the criminal by
110:15 - asking a few yes or no questions as
110:17 - possible
110:18 - all right let's see if we can do this
110:21 - suppose alice's strategies go through
110:22 - the suspects one by one by asking was it
110:24 - audrey was it bill
110:26 - how oh this is so good this is such a
110:28 - great way to i hope i don't know i have
110:30 - to ask brilliant if i can use this in a
110:32 - video if i make a video more about
110:33 - entropy
110:34 - um
110:35 - but
110:36 - so
110:37 - um
110:38 - so how many so
110:40 - often so like entropy can be
110:42 - a measured there's almost like a
110:44 - measurement of surprise
110:46 - and i i can see where this is leading to
110:48 - because one of the ways to think about
110:51 - entropy and information theory is to get
110:53 - to the right answer how many yes no
110:55 - questions you need to ask so one way of
110:57 - doing this is just asking individually
110:59 - is it this person is it this person is
111:00 - it this person
111:02 - four four four four that would be
111:03 - sixteen
111:05 - so i guess
111:06 - i only need to ask 15 questions because
111:11 - um by the time you get to 15 the last
111:14 - question you'd be getting the right
111:15 - answer
111:16 - incorrect eight oh eight
111:19 - oh my brain
111:20 - my brain
111:22 - right because
111:23 - eight because
111:28 - wait what did i show the explanation
111:30 - here i think i'm
111:32 - one by one oh on average on average i
111:37 - always miss this ah such an important
111:39 - point see how i i
111:41 - supposedly have some level of expertise
111:43 - in this stuff and i mean it is i've been
111:45 - streaming for two hours and my
111:47 - still getting over like being sick like
111:49 - a week ago and
111:52 - it cut me some slack here but of course
111:54 - the whole point of this is not
111:56 - how that i would i i'm thinking about
111:58 - this is very similar to big o notation
112:01 - i was thinking about what is the maximum
112:04 - number of questions you would have to
112:05 - ask but this is on average i could get
112:07 - lucky and get it on the first try or i
112:09 - could have to ask all of them so on
112:11 - average since they all have an equal
112:13 - likelihood
112:14 - um uh um the average number of questions
112:17 - is 7.5 because 15 is really the right
112:19 - answer okay back to the problem okay
112:22 - let's keep going see this is what i love
112:23 - about brilliant it's giving me these
112:24 - interactive lessons with questions and
112:26 - then it's not the worst case and then if
112:30 - you get it um
112:32 - wrong there's a wonderful like that's
112:33 - the way to learn like i'm not going to
112:34 - forget that next time because i got it
112:36 - wrong um so i'm i'm kind of out of time
112:39 - here i would love to go through more of
112:41 - this what i wanted to do is just i just
112:43 - want to briefly look at um
112:46 - uh here like the thing that i want to
112:48 - skip to this or the bit is the perfect
112:50 - unit for measuring your uncertainty a
112:52 - bit relates to this idea of a single yes
112:55 - or no question and by the way what this
112:57 - is leading to is we could start to
112:59 - design our questions in different ways
113:01 - like
113:02 - uh is the person who committed the crime
113:04 - were they wearing glasses and that might
113:06 - eliminate a certain number and we could
113:08 - start to measure the uncertainty the
113:10 - bits the amount of surprise we have uh
113:13 - in terms of getting the right answer um
113:15 - in in more ways and then uh we can see
113:18 - this formula oh that formula right there
113:19 - this is what i wanted to dive deeper
113:21 - into and i should really use this
113:23 - formula in wave function collapse
113:25 - algorithm
113:28 - but i wanted to mention that here so i
113:30 - would encourage you if you want to learn
113:31 - more about information theory and
113:33 - entropy this is now using the flipping
113:35 - coins to check out brilliant
113:38 - it's a wonderful i'm so grateful to
113:40 - brilliant for sponsoring the coding
113:41 - train um you didn't see it here but a
113:44 - lot of the lessons have a lot of
113:45 - interactivity where you get to drag and
113:47 - dro drag and drop sliders or rearrange
113:49 - puzzle piece pieces they're really fun
113:51 - to play with
113:52 - just that doing that alone but also like
113:54 - gives you ideas of interactive things
113:56 - you could create uh it'd actually be
113:57 - interesting to think about making like a
113:58 - coding trend course on brilliance or
114:00 - something someday you have to consider
114:01 - that so anyway brilliant.org coding
114:03 - training sign up for free lets them know
114:04 - that you found it if you want to unlock
114:06 - all the courses um and all of their
114:08 - features um you can get 20 off of
114:10 - premium subscription it's also a great
114:11 - gift idea somebody's birthday i don't
114:13 - know somebody's birthday is coming up uh
114:15 - you can gift them a premium subscription
114:17 - you know if you don't know what to get
114:18 - somebody they have all the things you
114:20 - want to buy more plastic
114:23 - but they love learning they love math
114:24 - and science it's a great gift
114:26 - all right um please check out brilliant
114:29 - thank you for the sponsorship one last
114:30 - shout out before i go
114:32 - which i meant to cover earlier but um i
114:36 - want to just quickly
114:38 - click over to um
114:43 - the uh references here
114:46 - so this is the uh github oops you're not
114:49 - seeing this oh and thank you tony k for
114:51 - joining
114:53 - very kind of you make sure you sync your
114:54 - discord account um
114:58 - so uh one thing i wanted to mention that
115:00 - i that i would really encourage you to
115:01 - do a deep dive into in particular if
115:03 - you're interested in the tiled model
115:05 - is um to go and look through the um in
115:09 - the original wave function collapse repo
115:10 - which is what i
115:12 - based my coding challenge off of to go
115:14 - to the credits and hold on i'm looking
115:18 - for maybe i'm in the wrong
115:23 - ah yeah used work sorry to go to the
115:26 - used work um you should definitely look
115:28 - at all of these references i didn't do a
115:31 - i i probably should have done a better
115:33 - job of citing the sources for wave
115:36 - function collapse as i was citing wave
115:38 - function collapse but in particular i
115:40 - wanted to highlight a model synthesis
115:42 - um which is a particular algorithm that
115:46 - um paul merrill did a a phd thesis about
115:50 - um this is the thesis in 2009 and it's
115:53 - really really interesting
115:55 - highly detailed long read about a
115:57 - technique for essentially creating these
116:00 - tiled textures using
116:03 - again i haven't had the time to read
116:05 - this through in detail but a different
116:07 - heuristic a different methodology maybe
116:09 - a
116:10 - way of selecting the tiles
116:13 - that might have some advantages maybe
116:15 - there's some pros and some cons between
116:17 - model synthesis but the two are quite
116:18 - similar in interesting ways and i would
116:20 - encourage you to check out this original
116:22 - work um and uh you know i would say the
116:25 - overlapping model is really where wave
116:28 - function collapse takes this idea of
116:29 - model synthesis and
116:31 - placing tiles next to each other and
116:33 - really uh runs with it in this really
116:35 - amazing direction that i hope to get to
116:37 - in a i plan to in a future live stream
116:39 - slash coding challenge
116:41 - so that's all i've got for you today
116:43 - thank you again i didn't get to david
116:45 - snyder i didn't get to your correction
116:47 - so there's um
116:50 - there's a lot of things i made a whole
116:51 - google slides presentation unfortunately
116:53 - i just like out of time but um while
116:56 - we're here i'll just
116:58 - i would encourage you to
117:00 - check out um and help me like
117:02 - help contribute oh you're not seeing
117:04 - this help contribute to this um read me
117:07 - that's in the way function collapse
117:10 - repo because this is my plan so these
117:12 - are some things that i want to do and
117:14 - look at in the future work
117:17 - there was also like a really bizarre
117:19 - thing that happened to me with property
117:21 - names and david snyder submitted this
117:24 - excellent explanation and correction
117:26 - which i wanted to go over today but i've
117:27 - run out of time um but if you have ideas
117:30 - for how to approach the overlapping
117:32 - model things that i should do next steps
117:34 - in refactoring optimization corrections
117:36 - from the video this is my running list
117:38 - of things that i want to cover and do in
117:41 - future live streams and video
117:43 - all right everybody i'm sorry that i
117:45 - have to go i appreciate you all so much
117:47 - don't forget
117:48 - this saturday
117:50 - less than 48 hours from now i will be
117:52 - right here with dr christian hubicki
117:54 - from florida state university from his
117:56 - rob who runs a robotics lab there to
117:59 - talk about robot controllers and this
118:01 - i'm hoping is going to launch a whole
118:02 - new series eventually have some coding
118:04 - challenges on the coding train for
118:05 - simulating robot controllers so that
118:07 - will be happening on saturday at 11 am
118:10 - i've got to go i'm already a minute late
118:11 - to my next
118:12 - meeting
118:14 - no kittens today sorry everybody next
118:16 - time i'll bring you a kitten maybe as
118:17 - i'm playing the outdoor song if i can
118:19 - manage it i'll show you a kitten
118:21 - thanks everybody i will see you next
118:23 - time on the coding train
118:31 - [Music]
118:40 - do
118:41 - [Music]
118:51 - [Music]
118:54 - so
118:55 - [Music]
119:25 - [Music]
119:36 - [Music]
120:06 - [Music]
121:14 - you

Cleaned transcript:

is the best do do do hmm all right uh how's my audio it looks like it's quite loud uh let me see what i can do here i meant to adjust this well in advance oh no okay that's better maybe too quiet still the same that's better what's going on here okay um test one two test one two test test test test test test test test that's getting too loud that's getting too loud there we go all right everybody sorry about that audio sounds good it's fine all right hello everyone good morning it's morning for me i know that people are watching from all around the world i have forgotten to turn one of my lights on i don't know that it actually makes that much of a difference let me go ahead and take care of that now you can see it's a little bit brighter maybe it's too bright i'm going to hit start recording so that everything here is archived to disk just in case ah it's been a while since i did a live stream on youtube um i'm glad to be here uh having an interesting summer oh let's start off with something fun so i was recently at uh processing community day in copenhagen where i received this beautiful gift and i meant to pull up all the information about it i have to do that later perhaps this is and i don't know how well you can see this i'm looking at my monitor over to my left an authentic 1950s era danish train whistle the actual whistle that trained conductors in denmark an an actual not the an example of an actual whistle not a not a replica i have this whole beautifully printed and designed information sheet all about the uh history of this particular whistle and for the first time ever i don't know if anyone um uh if anyone in the chat was at processing community day copenhagen please say hello but thank you to the organizers of processing community today copenhagen for this whistle i hereby begin this first live stream of the coding train in a while on youtube with my new train whistle here we go everybody did i build that up enough for you wow i might have just blown out all of your ears all i saw was red on my audio monitor was that a problem uh thank you for asking about my health uh i uh one unfortunately came down with covid like a few weeks ago now to be honest it's taking me a little bit to feel i'm not i don't even know that i'm really 100 i mean i am testing negative and all the symptoms are mostly gone and if you can hear it in my voice there's still a little bit of congestion that i just can't seem to totally shake my energy level is a little bit low but i was just also very inactive for two weeks so i'm slowly getting back into the swing of things um thank you for asking okay so um but i'm very excited to be here with you uh uhoh wucha is on airpods uh i hope you all are fine if the coding train ruins your hearing i don't know i don't know who who you can uh complain to i suppose it would be me all right um so i have a thing oh actually before i get going um let me just thank today's sponsor of the coding train uh these are my friends over at brilliant uh in fact um i was just watching some youtube videos this morning and brilliant ads kept popping up and i thought oh what is the universe telling me it's telling me to go live stream and talk about brilliant or it just knows that i love brilliant um and i think that you would too if you like the coding train and you like learning um the topic that i'm going to cover today is a continuation of uh reviewing my wave function collapse coding challenge which was a 80minute coding challenge that i did over several live streams and one of the fundamental concepts in wave function collapse is the concept of entropy as applied at information theory and whenever you have some topic like that from science from math from from logic i mean from the world of learning is that a world what i'm trying to say to you is where do i turn when i want to learn more about a particular subject that i'm interested in making coding examples about i often turn to brilliant in fact when i come back later in this stream to look at the brilliant website a little more closely they have a whole course on information theory so i'm going to talk about entropy for a little while here and then we'll revisit that brilliant course on entropy and see how that is so anyway um you can sign up for free uh at brilliant.org codingtrain lots of interactive lessons i'll say i'll show you more about that later um you can sign up for free and if you want to unlock all their courses the first 200 people to do the show through that link will receive a 20 off the premium subscription all right back to the matter at hand beta hunter asks how was denmark oh my goodness i loved it i love denmark i also went to sweden um which i absolutely loved um and i just had a wonderful time and i can't wait to go back sometime so all of you um folks from anywhere around the world invite me i would love to come there's so many places i haven't been i could start listing them all um i'm getting a note from simon the uh intrepid uh the probably the person with the most knowledge of coding train history catalog everything uh that that that someone in the chat mentioned that the timer was ticking slowly meaning the the clock in the opening video it is rendered into a video that countdown i wonder if it is inaccurate not exact time i'll have to take a look at that have to investigate i would love to come to india um and hello from nigeria fox the bomb asks how do you take your coffee i like my coffee with oat milk either black i like a single espresso mess maybe with like one little sugar crystal in it maybe if i'm feeling saucy but mostly i like i like oat milk oat milk almond milk is good soy milk could fine with cashew milk is i love all the nut milks they're just i mean oat isn't a nut i guess but i don't like to talk about food on my video show i'm making all these references today to uh a whole podcast network of things that i listen to unnecessarily i could also do this uh because i've got some stuff coming up oh let's announce something you're going to have heard it here first let's see if i can why am i not signed in okay hold on everybody do you mind a bearing with me oh this is so sad hold on i have an idea i have an idea i really should be more prepared for this kind of stuff but i have an idea talk amongst yourselves ah yes i'm signed in okay um so i have to go to my studio hold on i'm giving you guys the scoop here i'm announcing something that well some of the members who are in the member discord know about um but i'm just i have to pull up a secret private link here that i'm going to make public later today let me get that link and let me bring it over here oh i closed that i probably shouldn't have closed that all right here we go yeah i'm signed out of youtube all right everybody if you thought you were excited about today's live stream which is mostly going to be a casual chatting reviewing a previous coding challenge and talking about things that i missed i want to try to explain i mean this is going to be practice because i'm going to have to come back to a video and try to explain shannon entropy in more detail a name for claude shannon i don't know how that's gonna go it's probably gonna be a bit of a mess um so i'll need you to help me through that but anyway live in two days uh i will be having a guest on today's on on saturday's stream uh dr christian hubicki who is a professor at florida state university runs a robotics lab is an expert in i think if i if i go here to the um there should be a video description here um if i do this um we can find out um director of the optimal robotics laboratory his research specializes in bipedal locomotion specifically optimization methods that apply to both legged legged leg robotics and biomechanics so uh christian um dr hubiki does a lot of work with uh the motion locomotion of actual physical robots and as you might be familiar with i do a lot of uh coding examples about simulation not really in not simulating uh robots or even um living creatures in their locomotion maybe maybe i've touched on i've done some kinematics videos i've done some reinforcement learning slash neuroevolution style things anyway uh um christian's gonna be here to teach me about robot controllers and the first one we're gonna look at hopefully this might be a little bit of a series over the next year um is a pid controller uh pro something integration derivative i know i've watched some youtube videos about it and i'm learning about it and he's going to code a simulation in python i'll work on it in p5.js that's happening this saturday um so this is just it's just unlisted right now i'll i just was like still working on the description and you know the thumbnail although i kind of like it um see if anybody can catch the easter egg in this thumbnail right here with these numbers um so uh so i would love uh i'd love for you to tune into this i'm really excited about it um we'll see how that goes okay um now back to today so uh i'm gonna make a a chat uh a list here of things that i'm gonna cover so first i want to follow up about the uh directional horizontal directional drilling let's write that down then we're going to look at wave function collapse and there's a whole bunch of things that i want to look at so i'm going to look at the the passenger showcase um i am going to look at um correct uh corrections and i'm going to look at youtube comments that people have made with some corrections or questions uh i am going to look at a corrections and next steps document and then anything else that comes up i will add here to my list um pete the paper boat says i made a ball balancing robot with a pid controller they're very cool so did you make a physical like an actual robot or a simulation i assume i guess when somebody says i made a robot they're generally making they're generally saying they made a physical robot just for me my mind goes to simulation pretty instantly all right um i'm trying to think of what else that i want to cover the numbers are purple in hex that's a good guess uh i didn't consider that but let's take a look uh let's do background let's go back to this uh oh did i close that window i don't remember what the numbers are 762687 that's a really cool guess i can use that for a future um this lovely purple so i didn't i didn't think of that but we do get this lovely purple from that hex code anybody else uh i would love to give a prize for somebody who gets it but i don't know i don't know how to like find the right person who got it first or whatever that seems scary and like problematic so uh all right let's see um let's go let's talk about let me let me go to the first thing on my list here so first of all in case you haven't seen it and there's a lot more to say and to come about the website this is the new coding train website it's um coming along i really have to thank there's too many people for me to name to thank but uh just to name of couple fun planet and kphone 22 have been the amount of times i've been recorded saying oops that's a good one it could be i haven't done an accounting of that i would love for somebody to do that um have been importing so much of the content from the old website over to the new website just the sort of volunteer effort from the community has been amazing um let's see who else i i i i shout out a couple names that jump to my mind but i think if i go here on to into the website's github and i go under insights and i go to contributors we can see here um these are all of these folks here um that i really just need to thank and um for contributing to the website and there's a long list because one of the exciting new things about the website is the passenger showcase so where where is that uh here it is so um so here is uh chris sears bezier arch synth wave animation uh based off of um the coding train bezier curve video and if i go to any of the challenges for example come on come on website you can do it what's happening twitter was down for a little while is the internet broken today i see by the way a simon is typing dot dot dot out of the corner of my eye and i just have to wonder so there is um jasper is asking about it i hesitate to show this because it's still in progress but on the about page i don't know why i can't get any of the pages on the website to load am i clicking incorrectly have i lost the ability to use the internet what is going on uh the number of minutes recording people are doing really great guesses about the 762687 that is not it number of minutes recorded on the coding train um the route challenge is broken what is going on how could this be ah what happened where's my like technical difficulty slide and music this is insane is the internet working i mean obviously i'm streaming you're seeing me i have a green light over there for my connection did netlify go down so interestingly enough this laptop is connected through a mesh wifi network and my streaming pc is hardwired into the ground basically uh and people are saying it works i think there's something wrong with the internet here on my on this particular laptop okay the editor shows up there we go all right that was a temporary little glitch there so here i am on the challenges page and i'm going to go to the most recent challenge horizontal directional drilling which was a collaboration with uh practical engineering so if you haven't checked out the practical engineering video about this topic please do i just kind of you know as every opportunity i have i like to alert people to the new website so if you are looking for all the metadata associated with a coding train video of course i expect that most people are going to find the videos on youtube and watch them on youtube the the reason for the website is to make finding the source code that goes with the video more easily any reference links that are in the video are linked here in the description as well as other related videos in particular i can just click over and we can see look at this sponsored live really see i love this this is just like it's like the universe knows i've clicked to a youtube video that's going to show me an ad before i could play it and it's as if i'm playing the ad that's the actual oh and when we got somebody join us remember so much is happening i'm gonna i don't want to skip the ad i feel like you can't skip the brilliant ad i gotta let it play all the way through this is amazing um it's interesting that i'm not signed in also and it just i don't know where it's pulling decide to show that ad and show all these recommendations but let's go here so this is the amazing video from practical engineering um uh yes i'm going to be talking about wave function collapse i i'm just kind of covering i'm being too longwinded about this but i just kind of recapping some recent things that are happening on the coding train so check out the practical engineering video um if you by the way i was going to say all these people have come to my channel now saying came here for practical engineering and you know i i've seen maybe that's not the people should leave comments with a little bit more substance to them i don't want to flood practical engineering's channel with spam but i just wanted to say like if you found this video from the coding train maybe send grady a little note just saying hello there you might appreciate that okay uh um okay yes yes yes simon thanks for that information i got to come back to that all right um so i'm closing this out so the reason why i'm showing this to you is uh you know when in the coding challenge i have this very very very basic simulation of toggling the bias of a horizontal directional drilling machine to carve out a path through the earth with no obstacles with no sensing with no particular goal and the prompt one of the prompts from the videos video that challenge was to ask people to submit and uh create their own variations of this and boy were my expectations wildly exceeded so if i go back to the challenge page on the website oh and that's over here and i go to the expanded game this is a github repository and i guess i should start protecting my main branches that has a little bit of documentation here in the readme and you can currently see now what the current version of the game looks like it's got a much more elaborate interface where you can reverse the drill start and stop there's obstacles there's this fog of uncertainty parameter which makes it so that you can't actually see the obstacles but you can kind of get this view of clues as to where those obstacles might be there's a target that you have to get to whoa i just kind of twisted my ankle there weirdly by the way i always like to show people this is um this is the full view of everything that's in my room here that's what i just kind of twisted my ankle like that for no particular reason um so let's play this game um lots of people have contributed to this i could head over to the insights as well and go to contributors and see all of these different names so thank you to everyone who's participated a special shout out to sergey who is a researcher in applied mathematics mathematics and has really been putting in a lot of effort into this game and simulation and i think um even did something which i was like which i maybe i should do for more of my coding train work which is added a citation link to cite this particular uh simulation and code example in an academic paper so we'll see maybe we can get the coding train cited in more academic papers that would be a fun thing once with our collaboration with a real life robot scientist maybe that where that's that's the future of the coding train here i mean i am i do teach at a university as my day job but you know it's i don't consider myself a um an academic per se i'm i'm a i'm not an academic i just play one on youtube uh okay uh ah so let's actually go ahead and play it now i'm gonna click over to it the interface as you can see is much more elaborate oh ah let's pause so one thing that's really wild first of all i love is that there's a whole animated drilling machine which is just people are still trying to guess 762 687 nobody's gotten it by the way you're off like you're the direction that people are going it's not uh it's not a data an amount of something related to the coding drain i'll just tell you they're often that that's not the that would have been that that's clever i probably should have thought of that but it's not um not what it is all right so first of all we love this animation let's see can i uh pull back a little bit here pullback doesn't seem to be working but maybe i didn't go far enough i can toggle the bias i can uncheck this fog of uncertainty so without it i can see the the geological layers and the actual obstacles let's put that back on visual instructions oh that just takes me to this image oh i think i might have like gone away there okay great i get to start again by the way there's also use by using random seed there's this nice persistent link to this level so you can see here in the uh query string we now have so maybe we should we should see is it a random c it's not this but this would be fun 7 6 2 6 8 7 let's play that one all right this looks like a good one i'm going to see if i can reach the goal i'll stop talking for a second i don't know what's just popping up there if that's a bug or that's supposed to be happening all right i need you can see that my path oh i'm not going to make it am i nope now uh this and you can see you get this whole kind of score uh like a reward for maybe the amount of time the distance you have the drill length i haven't actually done a deep dive into what the score has been this is wild can i pull back no so let's um let's let's refresh we'll try it again all right i think i'm going to be able to get it this one is not doesn't look like that hard a level just need to kind of toggle back and forth to kind of go straight here what is flashing there can anybody tell me all right this should get me there oh so close to this this should get me there oh come on bend back oh okay oops nope let's try this again i'm gonna get this one i need some dramatic music playing i need my dramatic music tracks at the ready okay come on i really gotta sneak around this one as close as possible i think this should do it come on bend bend the popup happens when a checkpoint is added the pull back oh there's checkpoints for pullback points okay uh calculator turned upside down says christiers no that's a good guess all right i feel like i you know me i'm like i have a problem when i'm streaming and like i refuse to just move on to the next thing even though when i clearly should is i'm super stubborn but um let's see here i mean it's possible that a given map is actually impossible i want to try to stay as close to that's possible oh no no no no no it's all about bending right around that was like stop pop oh no i'm gonna get it i see the path now this is harder than i thought it would be or maybe i just picked a really hard level uh see i once again i need to be bending right that's the key um i also should pause and pull back keyboard control might help me here i think there are keyboard controls there we go there we go that's going to get it right ah i was so close pause pause try going down further so you have more room to turn around oh that makes sense good tip everybody i don't know why i was trying to like that makes sense yeah now i see i was kind of taking the wrong approach i was trying to get as tight a turn as possible but actually oh yeah this is so much easier now there we go come on come on come on come on come on no no that comes that was oh man my pixel color detection is by the way this i could also take the randomness out the randomness is just a little bit of noise in there that doesn't make the turning as perfect but all right this is clearly the way to do it don't hit that obstacle close let's go all the way down those give me a lot of room to turn there we go we did it everybody yes train whistle what did i where did i put my new special train with so i put it away all right no it's fine there's too many steps to pull this back out all right everybody okay look at my score ah now we need we need like a share button so we can kind of like wordle tweet it out um all right we made it anyway so i'm really thrilled about this thank you for everybody who contributed there's still plenty more could be done i think a lot of work could probably be done on this to think about how this could be adapted for mobile i believe it does work on mobile but thinking about i think the interaction design as well as the aspect ratio of the sort of scene that you're looking at there's probably a lot of improvements that could be made there all right wow it's 10 35. by the way i have a hard out at noon today so this stream is going to end like promptly at 11 55 like no ifs ands or buts like and not one of those where i say i have to end and then i go an extra half an hour so really really really really stopping all right uh okay oh my back i haven't exercised because i haven't covered my whole body kind of just aches and is weak it's also really hot so it's kind of too hot to go running especially if i have been out of practice so i got to figure this out here got to get some more exercise in i have no ac by the way in the studio it's getting quite warm in here so i might need to start the opposite problem with the winter when it gets too cold in here but i might need to get a fan we'll see all right let's turn our attention back to wave function collapse uh yes christoph b amazon link in the description um so apologies for that so first of all i mean i don't know if i should just be addressing random things here but that's what the live streaming is for to chat with the audience so i'll address this um at one point i had a coding train affiliate shop with amazon so i would link to various books and different things uh from videos and you know i would earn like some small i think it's six percent commission on purchases made through that link at some point amazon cancelled my affiliate i violated some guidelines and maybe i put a link on a place that wasn't approved i have no idea what i did i sent some support emails and whatever appealed it never never rejected no response etc so i gave up first of all i'm not to be honest not a fan of amazon i don't i mean who is i don't know uh so i'm kind of like ah maybe this is a sign from the universe telling me stop uh linking to amazon but i do would like to be able to share um especially like uh books i think that i use for my own research and preparation i have two books that i've written that i could share links to so i was thinking of actually um setting up a store sort of storefront through oh this is not it it's a bookshop it's bookshop.org i think yeah is this it um so this is a um online bookstore that supports local bookstores um and um so i think i can create an account i just haven't had time to do this oh look and we have a new u.s put laureate um you should all listen to the commonplace poetry podcast shout out to friend of friend of coding train commonplace poetry podcast i believe this poet laureate was a guest at one point on that podcast um tell him the coding train sent you um anyway so uh somebody i would love someone to remind me about this because i keep meaning to set it up and then replace all the amazon links with bookshop so uh david suggests a treadmill under my standing desk and alexander says no ifs you say how about a switch all right that was a good one all right um let's see actually just out of curiosity can you even get the nature of code book here looks like you can so that's good i can link through here wonderful the irony here of course is that this book is printed the nature of code is the print version is uh amazon kindle direct basically so which wasn't what i originally set out to do i used a company called createspace at the time which was a printondemand service for selfpublished books um but amazon acquired them so actually this is a great question um and i was thinking of reaching out to some publishing contacts i am you know i have i'm having to eat my words here because all i do is say that i'm doing this and their hat progress has been made but i think i probably should take a couple weeks off from coding train video work and only work on the nature of code book i don't know if you would all accept that for me i mean sometimes i've gone for weeks at a time just for personal stuff and travel and i got covered and i have anxiety issues you know there's all sorts of reasons why i disappear and don't make a video for a month but what i'm saying is uh i'm really having trouble i think it's it's not really like a motivation thing because internally i feel very motivated to work on the nature of code but it's like it's a procrastination issue like i'll do anything to like avoid it so i wonder if i should um really just like close everything else out and just for two weeks like only work on this one idea i have was um using twitch streams as a as a mechanism for just like streaming me working on the book um it would be more of like a silent stream i don't know how distracting that would be how productive it would be but i'm thinking of doing that next week um all right nobody's gotten this yet i'm gonna i'm not gonna reveal it because um you know what you know why i think nobody's gotten this yet is because you have to be an old person uh i i'll have to explain why i'm realizing like you gen z folks you're not thinking on these terms uh so um uh and i want to give too much away there um but um if you write a switch statement in the stream i don't i didn't i don't get the joke about the switch statement uh okay all right twitch streams are better okay all right thanks for the feedback everybody all right i've got to move on to wave function collapse here all right so let's let's take a look at i think i have it featured here so i can just get right to it all right so first of all if you haven't watched this video yet i would love for you i mean you could you could go leave right now and watch it but i mean i would have no complaints if you did that in fact that might be a better use of your time it's quite long i would love to hear your feedback anecdotally and also based on the sort of youtube numbers for it you know part of me was thinking is this a mistake like should i have made a just ten minute explanation of the algorithm summary of it walkthrough of the code print done script it edit it publish it to youtube this is instead my sort of coding train style of an edited version of me building the whole project over hours and hours and hours little animations and hopefully some extra things to help you understand extra references but also a little like little animated jokes and funny moments some sound effects and that kind of thing so but it seems like if i have a big project to tackle like this this is a way of doing it and it has value for the audience so so far so good um if you are looking for the source code for it i'll just click on it right here um this is the p5 web editor um i'm going to dig into the source code a bit deeper and look at the what's currently in the github repository but we can see the algorithm here generating this pc board pcb board like pattern if you want to understand what it's doing you know that whole video will hopefully explain it to you um i really encourage you to take a look at these references different references of links of things if if you're watching the video and something i've referred to is not part of the list file an issue on the coding terrain website you can leave a youtube comment but those i sometimes miss um so file an issue on the coding train website send me a tweet um you can actually uh add it yourself through uh through a pull request so i love your contributions i also just want to highlight this tab which is you know i try to i've made references to many projects artworks games that in the video so you can find all of those here providing credits again if i missed something please let me know so i can add it um this by the way um this is 80 minutes long and is the edited version of what i did over three live streams so if you i would i was gonna say if you are insane but i i don't this is not for the faint of heart but if you might be uh so ketan ketan balakar got it although it's different it's put in a different way so ketan i don't think anybody oh no daniel franklin got it first daniel franklin uh if we can authenticate you i will send you a sticker pack a coding train sticker pack let me write this down youtube uh daniel franklin and somebody in the chat got it before please let me know um but i would love to send uh daniel franklin uh and you know it was just two messages later ketan cake time i'm gonna write down katan let's see if i can send kaitan a sticker pack also ketan baal these are youtube names writing them down i will review the chat i have to figure out how to authenticate you as a real life person but um mason sickler got it okay hold on scroll back in the chat uh i don't see it i you know this chat is being logged so i'll go back and review it mason sickler okay so i'm gonna write down mason sickler uh um yes if you on the keypad if you type out if uh is the audio oh no my audio is going um on the keypad if you type it out you'll get robots all right so not for the faint of heart um not for the faint of heart you this is about nine hours of me doing everything so if you were ever curious about how a coding train coding challenge gets edited into a video and you want to see the raw material it's all there for you uh nothing there's nothing hidden so the reality of everything i went through to produce that video is all there in these three live streams mason sickler looks like mason got it first chris sears also confirmed that in the coding train member discord by the way i didn't think we got a new member uh during this live stream ah pedro oh so here's the ah thank you so pedro brings up an excellent point um right the code for the rubik's cube challenge is not accessible through the link in the video could you update that so this is a major issue and um i haven't been able to go and update so let's go to the rubik's cube challenge and show you what's happening so coding train rubik's cube part one i'm gonna go to this one let's see if we get an ad no we no more ad for brilliant uh hack the planet okay let's skip this um i try to usually be logged in to youtube because i have youtube premium so that i don't show ads but all right so this is going to happen to you a lot here the youtube description also has a lot of the metadata associated with any given video less and i'm trying to improve that if i click here it's going to take me to page not found because there is no p one this is the wrong url but even so even if there were this would still take me to page unfound not found but this coding challenge has not been ported to the new website yet so if i go here under challenges and i start to search and i kind of page through actually finding a given challenge is also a little tricky that i want to work on but if i page through all the challenges i won't find it so um what i just want to see if that 404 page oh you know what's missing from here so here's another thing i just found this 404 page needs to link to the old website so i'm going to write this down 404 page link to old website so the old website is not gone you can still find it and it is i'm going to give you the url for it right now codingtrain.github.io website archive so it's um this your this is no longer being maintained don't file any bugs or issues something's broken on this website not gonna get fixed but if you're looking for old content that seems to be missing from the new website or something that was there before you can still find it i'm gonna go to coding challenges i'm to go to rubik's cube i'm going to go to the challenge and in theory the code should be like i know i did this in processing so i'm going to click there um the code should be here so here you found now the other thing i'll say is in all of this new reorganization there is a new github repo i think it's this there is also this github repo which just has all the code for all the coding challenges so if you just if you don't want to like be navigating through all the different websites links you can also just come to here and find uh rubik's cube one you can find the the code for it here you can um so um alexander said i am doing some redirects to the old website i didn't want to automate this because i really just want to like do away with the old website i don't want people having to go there so i think there's a little bit of a mental block with like i don't want to put in the effort to like redirect everything the point is to have the new website working and to go and update all my youtube descriptions if you would like to help with this what you can do is i'm going to go to thecodingtrain.com i'm going to go under guides and i'm going to look at this maintaining the website guide so if i click on this guide this guide will show you how to add a page to the coding train website for a video that doesn't exist and um you'll you'll see that if i go to the let's see if we can go to the repo i'm sure there is a link to it at some point here maybe this is an issue that it's not easily findable um just looking yeah huh well i know where it is is there a link to the github like right about maybe under the about there's a link to github here just curious where oh probably in the huh so i probably should maybe in the footer i mean it goes to the coding train github but actually have a link to very specifically to the the coding terrain website it's not a big deal it's the first pin repo so i'm i'm overthinking this all right if i go under pull requests you will see here that people are opening pull retracts this one's from kfon 22 who uh has um opened a pull request for the chaos game coding challenge so and we can see so you can participate in this at this point kind of a volunteer effort with some um some maintainers who work on coding train projects um helping along with it so um but i will say this site uses gatsby and if i go here under redirects like i am specifically redirecting a few things so if there is uh like some of the most visited pages on the old site i'm like redirecting them to the correct website so if you want to pull request any redirects to this json file those will also uh work that would also be welcome um and yes so this has been uh i've talked about this to death on on other streams about the website i don't know what chris which specific aspect chris manning is referring to this could be automated it could be automated but the whole point of me doing this is that the old website has out of date links incomplete information so i don't want to automate bringing all the content over and just have a totally broken website so we're doing it page by page at a time so that everything is corrected and built out it's much more important to me i'd rather have something totally missing than there but broken and if you go through the site maintenance guide we've automated a lot of the steps for you that there's a starting template we've reformatted it in the json format but it does require a manual step to review all the content and correct it and update it to work on the new website um but maybe you're referring to automating all the redirects which i also could do but again i'm that if somebody wants to just take that on great but i'm trying to prioritize the things that are most important to me and my goal here is to have this website really finished and built out with all the content by the start of school in the fall because that tends to be when teachers and students and people around the world are using the resources on the website most okay thank you for the screenshot i also got a screenshot of the chat of mason sickler um okay so tomer is asking such a good question and i i've got to move on here to looking at the passenger showcase but do you look at passengers code only in p5.js no the answer to that is definitely a hundred percent distinctly a no the whole point of what i'm doing is i mean i love p5 you want to use p5 great there's a lot of reasons why you probably do and those they're good reasons but the point of what i'm doing is to share my passion for teaching code and trying code and struggling through code with you and for you to share what you make back with me and when you can you do apply something that i've tried in a different language in a different format in a different way that's the most exciting thing to me so please port it to unity python c plus plus uh do it by hand you want to make a wave function collapse quilt where you execute the algorithm by hand and sell it on etsy i mean you don't have to sell it but i would buy it i would buy that instantly insta buy insta purchase anybody wants to make a wave funk quilt physical thing like please go for it share it with me ah that's that's i would love that ro doc is here ah roadock perfect timing hi ro doc uh thank you for your membership i didn't even realize um yeah and i do want to start doing um more uh challenges in other languages as well but you know the list of things that i would like to do on this channel is very long and the reality is i get to one percent of it um all right so let's move on because i've spent too much time just kind of like rambling away here i'll remind you that even though there's a lot there's not a lot of code happening today although i do have some intention of writing some code we'll see if we'll get to it um saturday i'll be live streaming on saturday and doing a coding challenge so come back on saturday for my robot controllers with um with guest uh um dr christian vicki okay um let's close out a bunch of these tabs we've covered uh the horizontal directional drilling i'm gonna come back to brilliant in a second i've talked about bookshop this is the rubik's cube challenge look let's just compare look at this gray what year was this 2019 you know i wonder though i think in my old studio the lighting was such that the gray didn't show up as much as the lighting in here i mean obviously i do have more gray hair a little selfconscious because i've been recently getting comments i used to yeah you used to only get comments of like wait i just found out how old you are you look like you're 27. now i've recently gotten comments like you look like you aged a lot in your videos which it's been a rough couple years for everybody not not even barely for me compared to i think what other people have been going through all right um all right now back to wave function collapse let's start looking at the python the python the passenger showcase let's see did so we have a little bit of an issue we're having a little bit of an issue with the website which somebody might actually be able to help with if you have experience with gatsby and netlify anybody here is like a gatsby slash deployment to netlify expert please get in touch are you not 27 no by the way my birthday is coming up just putting that out there in the universe is it bastille bastille day today um nothing wrong with i agree i by the way i have a very youthful demeanor i'm feeling my age the coven really got me uh you know i trip triple i had my booster had everything i probably had the variant i'm sure it was omicron which i know has been milder but i i had a rough i had a rough time with it and i have not recovered so fully recovered i have recovered um but i'm hoping it will uh slowly each week i'll um get even better i just i feel like cloudy in the head but i mean i also i'm just like i'm so neurotic about things that i think i might be over like overly like obsessively like analyzing every slight feeling anywhere that's like a possible symptom so all right now so rodak your contribution is not showing up here right now but i do want to show it so somebody remind me um if i haven't notcha code says help with netlify so i will my birthday's not for a couple weeks it's not today so all right so but let's start going through these so one by the way uh if you if you're not a fan or viewer of sable rafe and creative code news and the twitch his twitch channel i'm really inspired by what he does with reviewing projects that are made by his community i do actually think his methodology is better in the sense that there is a theme like flowers for the week whereas these projects shared by the community are tied to a particular algorithm or video but it works for the coding train and it is nice to be able to see a tutorial and see what people have done with that so i do think there's value in both but you should definitely check that out he does a wonderful job reviewing people's doing twitch streams weekly reviews submissions from the community and i would like to start doing more of the same so let's get right to it number one wave function collapse in python with backtracking so let's take a look at this we're going to go over and we can see here that this looks like a port of the wave function collapse algorithm in python and we can see oh look at this now dare i try to run this look at these ooh i love that there's a mondrian one look at these these are fantastic so this is the and by the way i want to address this mistake um that i made i mean what's what's a mistake you know there's a lot of artistic license here like why is this a mistake versus not a mistake but it's a mistake in the sense that if i were trying to reproduce the precise um and not yet yeah i'll be if it's not your code let me know if it's on the page or not um if it's on the page i'm going to get to it if it's not i need people to alert me to be able to look at it during the stream um the original sort of design for this would be to not have into these individual i'm trying to not step out of frame here and cut myself off but not have these little individual squares or these really thin uh thin sort of like rectangles um so that's a mistake that i'll address i really love this one like this is really cool looking uh as well i mean all these are great um i love this sort of like maze generator like thing so these are fantastic so um let's let's try it um that's what today is for let's try see if i can run this let's learn how to do it because i don't do a lot of python so i'm going to open up i'm going to um i'm going to go here and let's go back let's follow these instructions so let me clone this repo and so now i've got the repo i can go into it let's see here let's follow these so this is um these instructions here really have nothing to do with this particular project this has to do with creating a virtual environment so i don't know if you've ever programmed in python i have a video about this hopefully it's not too out of date if you're looking for it where i go through this a bit more detail but the python settings and configuration and dependencies and version that you have on your computer can get re can get tangled up in total spaghetti if you're just constantly like updating and installing things and different projects will not be compatible with certain versions of certain dependencies and it can be a total mess if you just use like one python environment the sort of like global environment of python on your computer actually if you're using online notebooks like a collab notebook that's in essence each notebook is its own kind of virtual environment but the idea here is to set up sort of a sandbox a blank slate version of python that's activated for this particular project so i could have the right version and all the dependencies et cetera so let's see if i can get this going so i think though i want to be uh what um what i would suggest doing is this is my this is actually my own name of of the virtual environment so i'm going to call this with w f c so i want to create a virtual environment called wave function collapse oh and you know what i've got to say python3 because this command v env is the command for python version 3 which i have so that created that virtual environment and then i need to run this activation script essentially which is now in the folder wavefunction collapse which now i can see here i've activated that virtual environment so anything i do right now if i type python whoops python what happened yeah i i guess i need dash v is something else dash dash version we'll see the version of python i'm running for this particular virtual environment right because if i open up a new tab and type python version that's the global python on my computer and i have python 3 installed under python 3. so i created a virtual a virtual environment python environment with python3 now let's go back and i need to install all the requirements the dependencies for this project numpy gotta love numpy opencv now this is interesting like what are these dependencies being used for like what in opencv is b is for this um wavefunction class project that's really interesting now let's just try running python simple pi building a tile sheet uh collapsing building the image and we should see there it is 11am look look at that one i made let's try doing another one now all their arguments where i can make it like higher resolution and stuff i'll have to look through that would be a really cool thing um i really like this one so let's run this one sheet 40x40 tile 7x7 so let's go look in the code and i also be curious like where did these designs come from like there are sort of the canonical example wave function collapse tiles that a lot of different uh examples and repositories use also i'm forgetting that i wanted to start with talking about something a 2007 phd dissertation called model synthesis which i think is a a neglected to reference specifically in my video but that's obviously a really key reference to the origins of the wave function collapse algorithm so let's look at abstract. so yeah so it looks like i could just do i'm just curious what if i change this to 80 by 80. it still says whoops still said 40 by 40. so i'm not so sure what's going on here fine you can install that i don't know if the log was just logging hard coding 40x40 but let's go to which one did i just do uh what should the file name be although i guess i can look at date modified abstract oh so that didn't work something about me changing it to 80 by caused it to fail let's go back 40 by 40 tile 7x7 let's see take a look now yeah so i'm not sure i mean i have to dive deeper into the code but that's something that i would want to be able to uh and maybe it would make sense for me to say something like oh and i know you can't you might not be able to python abstract and then have you know like dimension be 80 or something i don't know i don't know what the uh the proper way to format the arguments but that would be kind of cool zachary that's a great question i'm i'm gonna keep going i wish i could i need to do a better job of collecting people's questions so i can answer them at the end but the the short answer is accurate about do i have online lectures from nyu i mean that's the short answer is yes um uh they're indistinguishable from a lot of my videos because i release them as like publicfacing videos um okay so uh so i want to look a little more at the code just to sort of see like if we could learn anything from it but we can see the data structures look somewhat similar tiles tiles data left side data right side data um low tiles the rotation is here so this looks like a lot of similar kind of code to what i implemented probably with some optimization and improvements i would imagine i love that there's this function about defining the neighbors updating the neighbors find lowest entropy amazing so i love seeing this great work great work okay let's move on thank you uh to shrike for submitting this um let's take a look at wave function collab and i haven't looked at these i mean i've glanced at them but i haven't looked at all these wave function collapsed by asanka sovis so here we have a repo oh i love so first of all i always love to see a nice animated gif in a repos readme to give me a quick view of what's going on there is a blog post amazing that there's a blog post oh fantastic documentation uh explaining the set of tiles these are the ones that i used defining the rules tiles as a class so this is being done now in ah this looks like it's being done ported in processing small comment is a very nitpicky comment but i cannot help myself the convention would be to capitalize the names for a class lowercase for variable names capital for class names and i would recommend doing that um just purely it's just a purely for your own sort of sanity and documentation doesn't affect the functionality but you'll notice here p image is capitalized so that's one little nitpicky comment we can see the tile set creating a new tile object with the image this must be defining oh defining the sides the sides of the tile i'm just trying to understand what the second index value is um zero oh no these are the valid neighbors these these are the valid neighbors the index of the valid neighbors so this is done in looks like it's done more in the sort of first way that i did it function that returns all the tiles that's great i love this documentation where it's all explained this is fantastic work uh one of the awkward things about working in java oh asanka is there in the chat oh yeah i'm so so glad that the whole point of this i love that you're here in the chat wonderful um this is one i'm very impressed with that you did this because this is one of the real heartaches of working in java is to have to deal with these very longwinded um uh statically typed or i don't know if that's the right term but arraylists arrays in javascript are just so flexible and easy to mess with um conclusion um i'm intrigued why are you referencing purlin noise here i'm actually not reading this in detail and then thank you so thank you for but this is amazing um i want to make i want to share this remember to share this through the coding train twitter as well so um really great work um and i would love to see um i just really appreciate this this level of documentation all right um coding adventure that's really the term that's sebastian lags term so but uh uh but uh your coding challenge i guess is where i'm what i'm stuck with all right uh stefano silvreski aperiodic tiling a lot of people made the um okay be warned excellent documentation in the comments here it may take a while to find the right tiling if you're using a generic seed when it manages to complete the grid the output will always be an aperiodic tiling so a lot of people in the comments referenced wong or wang tiles so i need to do some more research uh yes here it is so i definitely would like to read this paper and maybe this is something for a future coding challenge am i doing something totally redundant if i have this as the topic of a future coding challenge or might i take other approaches to this concept of wang or wong titles i'm not sure the proper pronunciation by the way i already can hear my voice going and that's the sort of remnants of kovit i've just been congested sort of sore throat just has not totally gone away okay i know let's run this oh this is amazing this is this is absolutely beautiful and i wish i knew more about this to be able to explain and discuss it further so first of all that didn't seem to take a long time to find the seed at all and i wonder if it's ah i see interesting so ah so there is a hard coated seed in there so for 600 by 600 dimension equals 20 like we could try this seed cool i'm actually also curious to up the dimensions to see what happens you know there's a real joy in just watching these go it's almost you can sort of imagine this crew of little tiny robots inside the computer trying to assemble this pattern so you know i always i always find this to be an interesting question is the sort of beauty of the algorithm in watching it execute animate or is it in the final result and these are not mutually exclusive and these are not yes or no questions but i think it's a really interesting discussion to be had and i certainly find both in the case of weight implementations of wave function collapse to be quite um ah stefano is there too i should try one less 1777 i would love to hear from you uh stefano uh more about implement the actual rules for a periodic tiling what did you mean by that is this kind of a simulation of of sort of the idea of a periodic tiling as visualized through wave function collapse but there's a whole way of creating this pattern without um without using wave function collapse that uses another set of rules and do you think this would make sense for me to tackle as a coding challenge video anyway this is wonderful i'm always curious to look at um i don't know to what extent this looks quite similar to ah yeah so look at this so we can see this is really using my code base which is great i mean that's the whole idea of this and i'm intrigued to see that the um that these are done let's look one thing that i don't love about the p5 web editors don't let me preview these images so if i wanted to i have to just download the sketch but i'm curious to see what these tiles actually look like if it i mean just stop for a second and imagine i guess we can see because we can see the the outline of the grid here but it's almost like you imagine the tiles to be the single rectangle single squares that are rotated and we're actually laying them out in this rotated fashion but we're not uh and actually the tiles are oh why aren't these not previewing that was weird okay i'm at a loss here huh why did they not download anyway i i suppose you can imagine that's so strange i'm not going to i don't know if that's a bug in the p5 web adder or something happening the wave function collapse eventually finds an api italian with those 11 tiles there are actual rules to get a tiling with the wang tiles got it okay thank you for that comment this is so fun okay wonderful um by the way there's also i think a really great i think roon matson and his programming design systems has i thought roon for programming design systems has a nice article about symmetry might have seen it somewhere else maybe it's somewhere else and not in the book yet and but this is a wonderful resource if you haven't found it i haven't seen it before okay moving on i guess i you know so i'm gonna i i really thought i was gonna be able to do a lot more during this live stream and i do want to look at entropy and brilliant but let's keep going let's see if i can get through these before i do that okay so this is gurichi's wavefunction collapse we can see it's directly a fork and the change log here is there's a custom pattern so i wonder if um i'm just curious to see what was changed here circuit inspired so there's a new pattern here with a new set of rules that are noted with a different notation with this underscore all right so i think i need to clone this repo to sort of see oh oh wow look at these ah this is a dream so i'm curious i don't know if you're in the chat um whoever glitchy um but if you are in the chat please say hello because i'm really curious like where did you design these tiles yourself um and i need to find it whoops so let's clone this um i'm going to just make a directory called showcase i should have put the other one in it let's grab this repo let's run a server and see what we've got here wow this is beautiful so look at this pattern from these tiles this is very creative what i find so i mean it's like a circuit design but the sort of alpha blending and gradient of these patterns and it's just really beautiful and unique um if we look at the tiles let's look at these tiles this one is circuit inspired look so first of all there's a lot more tiles this has 20 tiles and we can sort of see like there are some very basic ones like that must connect off of this on the top we can sort of extrapolate what the rules might be um but that's just wonderful i'm always curious we can see that with all of these tiles and permutations it runs rather slow i'm just curious like how far we can maybe push it oops oops wrong one let's take a look at the code here and let's try 30. yeah let's try 30 just curious so now you can see it's running much slower so this is really a lot one thing i didn't pay attention to at all in wave function collapse is um optimizing to get the thing to run faster and if you dig into the algorithm deeper and look at a lot of people's implementations that's what a lot of work goes into but i i do believe that this there's the potential to run this quite a bit faster um i would imagine even just like the processing ports run faster just from sort of running in you know javascript in the browser with no kind of workers or webassembly or webgl or optimization generally run tends to run pretty slow but let's let this generate i'm also amazed at how well this is doing with not getting stuck again there's no i missed quite a few things about recursion and backtracking and various things to help the algorithm not get stuck in generating a pattern it looks like train schematics looks like a subway map yeah those are great comments all right so i'm going to move on but this is absolutely beautiful work thank you so much for sharing this i want it to finish though but i'm going to move on i'll run this more on my own oh you know it's also probably running slow because i've got these all these things running in the background uh okay we are now optimized performance oh fascinating okay so it looks like what we're going to get with this one is not a new design but optimized performance and let's see what we can learn from it so this is also a fork revamp the imperative for loops for higher order functional declarative version optimize several unoptimal loops and the biggest optimization is implementing updates just for proliferating cells also added the possibility to declare nonsquare rectangular canvas okay all right so let's look also original version computed array of valid options for every cell in every loop this is not optimal because the majority of cells don't change the majority doesn't change rules are set in a way that only cells which are adjacent to the collapsed cells is proliferating and therefore we are tracking the array of such proliferation cells and run entropy reduction only on those cells this increases performance a lot and allows computing much larger grids well here we go nacho codes did i um are you uh i'm ah oh wonderful did i are you glitchy i'm confused about which um did i look at yours or i'm not sorry about that i'm kind of trying to keep one eye on the chat but i'm not matching not your youtube name with a github name so let me know if i've looked at yours already or not uh so let's let's try running this first of all i would love to look at the commits so okay so first like i need to get better at um i need to get better at using some of these nice features of javascript like the spread operator um we can see here this is for calculating a rectangular grid that's super helpful you know again this is just using a higher order function by the way my understanding is that the higher order functions are really great can be really great for sort of code being concise but don't necessarily optimize the speed of anything and in fact are often slower than just a sort of raw for loop but i haven't done any deep dive into this um okay these are all just changing for but this i think is the sort of more significant change right this is where i'm drawing everything what is this doing this is just filtering things that are collapsed and then drawing those image ah so this is just the same but it's kind of like saying draw the collapsed ones draw all the noncollapsed ones and then huh i have to think about this more i'm not fully understanding why this third one is here because this seems to me like it would cover everything so i'm not entirely clear what this third one is um but that's i'll come back to that i'll have to look at that later i wanted to sort of look at so this is looking for the minimum entropy this is what i'm okay traversing the whole array every loop is not optimal in fact change proliferation is possible only in some cells noncollapse cells directly adjacent to collapse cells that makes sense so start with all ah so this is a really interesting optimization i understand now if we go back and look at my original code what i'm doing is looking at every cell in the grid and calculating what are the possible states it could be which tiles could fit here but i act what this is proposing that which seems correct to me i have no reason to believe it's not is i only need to do that analysis for cells that are adjacent to collapse cells and that aren't collapsed themselves presumably and so by creating a separate list of cells that need to be checked i only need to work through those that shorter amount and then uh that's what's happening through all of this i have no idea what this is doing i have to investigate uh what a javascript set is uh simon is offering some interesting comments saying that there is maybe an issue with this in that the recursive entropy reduction has never gotten around to um yeah so i would imagine there's a way of doing this with also the recursive entropy reduction that there's like a middle ground there but this is too much for me to cover right now um so let's just keep looking through this but this is fascinating okay so now i've looked through all the changes let's try running it and let's sort of put the pedal to the metal if you will i'm getting a little okay so now all right so i'm just going to rename this whoops just want to put these both in here now we're going to look at this one and let's run them side by side so let's see what's running here let's close this so this is my wave function collapse my original wave function collapse is running at oh hi from china thank you frog stud very kind of you um is running at port 8081 whoops and the optimized version is running at 8082 so let's go sorry this is tricky to manage this because they're all called wave function collapse so this is mine and i'm going to just set the same so let's set them both to 600 by 600 and a dimension of 30. okay so this is mine is now set to that and then this is the showcase one let's also set it to 600 whoops 600 by 600 ah what is going on here by 600 and 30. let's just make sure this looks like the right changed code right no this does not look like the no it is because it's got no that's me i did that hmm wait a second how can i tell where i am all right i need to just rename it hold on this is the one i'm looking for let's call it optimized sorry i know you can't see that so i'm naming renaming them renaming this one wave function collapse optimized so i can actually tell what's going on because i can't tell right now uh and let's go to visual studio code sorry that i have so many things open here let's close this python one i'm going to close this one close this one so now let's open the code for this one we can see i'm the optimized one with dimensions 30 600 by 600 this is strange did i is it did i not clone the right one i think i didn't clone the right one by the way so get remote oh yeah so i totally just messed up i hope that chat is telling me this already and uh whale ai is explaining what the set the set is hold on i've totally screwed this up so thank you for everybody's patience here we're going to the optimized performance and let me make sure i'm getting the correct one which i can see here is v balco and then i'm going to rename that to optimized and we'll look at that in visual studio code okay ah so we're gonna change it to 30 by 30. i know i'm in the right one now and calculate cell size i'm just going to have to assume that this is going to work correctly 30 by 30 and let's close out this is mine i'm just closing out all these extra tabs so i've got mine and i've got optimized optimized is running on port 8081 and mine is running on 8082. so let's take a look at mine first so we can see the speed at which this is running you can get a kind of sense of it let me do a force refresh just to be sure up here okay now oh i don't know why that we paused that one and let's go look at 80 81. oh look at that yeah so this is way faster so definitely a major optimization and um i'm pretty sure this is the same looks like it's the same dimensions i also love how there's something marking what needs to be analyzed and yeah this is great so thank you for this i'm gonna have to dive deeper into this um i would definitely i don't know if um um v balco if you're watching right now i would certainly accept pull requests with some of these changes i might go a little easy on the higher order array functions but uh pull requesting this sort of that this like basic optimization i think um would be great i you know the original code will always stand in the p5 web editor version all right so i've got two more to look at before i start to look a little bit more at entropy and let's look at oh onacha codes not your codes did i get yours did i get yours let's look at uh gab rz's so first of all this is called pretty bad north so if you're not familiar with bad north bad north is a game i believe made by oscar stallberg it uses wave function collapse to create these 3d scenes i would love to say more about it i'm not an expert on it at all it's definitely one of the things i came across in my research about the wave function collapse algorithm townscaper i think it's the sort of newer it's i don't know what the relationship between bad north and the townscaper is but townscaper is certainly um let's see this is a great video to watch which you can sort of see wave function collapse in action in a 3d world uh with incredible um animation and visual design elements like way beyond anything that i've gotten close to doing um and so uh it looks like what we have here um i'm closing all these tabs is and let's go to the code version from gab bar rz uh a basic 3d implementation of a scene uh nope so not your codes where do i find yours is it is it somewhere like is it on twitter is it on the github issue was it merged but not showing up so let me know where i can find yours not your codes so this is really nice to see and i'm sorry that i'm running out of steam a little bit here towards the end of this stream and maybe not having as much mental fortitude to comment on some of these ones i'm getting to later uh this is one of the things i really wanted to discuss today you know i guess there's lots more followup streams i could do about wave function glass but a waiting system i did not and this also relates to the the proper calculation of entropy in particular shannon entropy um but to um uh so i just got a little lightheaded there um to um uh to think of every the possibility of a given image showing up in a tile let's say i have ten possible images that maybe they aren't all don't have equal probability um so thinking about the sort of weighted probability of a given uh like if we're creating a landscape like maybe water is more likely than land which is more likely than mountain or something like that so um and we can see here that there's a wonderful um discussion of a sort of set of to do's i'm just always curious to see if i can peek into you know this looks very similar to what i did everybody is updating and using the spread operator the tile class looks very similar i'm just trying to understand where the 3dness is and where the rules are defined now here they are oh i'm looking in the wrong code base where am i looking how did i get there that's so weird a cell no whoops oh my goodness look at me the interface it's looking like i've totally tricked myself i'm like looking at this and thinking this is a way for me to browse the code that's visual studio code in the background here are the co sorry about that everyone so we can look at grid we can see that um there are slots this term of slot there is sorting and looking at the entropy picking a new option i'm not going to be able to uh i was just sort of hoping to see if i could find uh the rules looks like there is this idea of sockets in a mesh so in 3d it's actually much more complex to connect all these neighbors so it looks like there's a probably a different way of looking at this but i suppose we could find grid.draw i'm sort of curious to see uh look look at the draw function i'm just here to see what uh slot.draw i just wanted to see what are the sort of like native shapes that are being um drawn and it's a it's drawing a particular model so each one of these cells is like a polygonal model that makes sense and i can restart it like what if i i want to close like lower the speed quite a bit yeah so this is great i encourage you to continue this i would love to see more examples not your code submitted it on the site okay so we are now done with the ones that have shown up here and i'm just going to explain to you something that's going on on the website and um so i'm first going to go here into issues so there's an issue happening where not all of the showcase projects are actually showing up on the website and i hope to have this resolved next week sometime now why is this occurring so what's happening is for whatever reason the netlify slash gatsby build process is does a lot of caching to speed up the build of the website and i'm not sure why but the passenger showcase doesn't always update and i was able to get it to update by running clear cache and deploy site you can see that it took an incredible it took 67 minutes to build the site that's not really a sustainable amount of time so i need to figure out how to and we had a little bit of discussion about this here but i need to figure out ways to optimize the build and or not be able to recognize when the passenger showcase has been updated and not have that cached my suspicion is and i have not done any actual analysis that my guess is somehow if i haven't made any changes to this page like the passenger showcase is stored in separate json files in the engine of the site so my suspicion is if i didn't like change the language of the description or change a time code that the page doesn't rebuild it just uses the cached page even if there are new showcase projects i have not this would be something that's happening in gatsby i have not investigated to know what this is true but it's the only thing i can think of because why is it that the showcase sometimes doesn't update even when we merged a pull request so if anybody knows or wants to help resolve that uh roon matson who's uh one of the designers from dsi who built and designed the site is going to be investigating this more next week we have scheduled some time to look at this together but if you have any ideas please let me know but good news is i can find so not your codes i don't see a pull request here but i'm going to go look at unless it was closed already i'm going to look at this one from raw deck so rodak123 so i'm going to have to manually go and look at your project train track car roads and tunnels in processing java so one thing um that i commented on this looks like you uploaded as the sample image one tile so first of all a plus for uploading a low a small image like the preview images shouldn't be they big images because it will cause the website build to take forever because gotta resize them all but this is too small i think so usually i think we want like a 400 by 400 or 800 by 800 image we're looking for but i'm just going to go direct to your your url try this.showcaseprojects.update i don't know if that's a real comment or not um and let's clone this one we've got thankfully we've got a different name and this looks like it is a processing sketch fantastic so we're going to open this up in processing i'm trying to keep this someone please help me find nacho codes project so we can look at it before i go i don't have a lot of time here oh wow so this i've always been wondering about so i want to i really want to add this it looks like so first of all this is fantastic i love of course it's like train tracks i mean this is amazing i love it train whistle for this one so one of the things i love about this is it looks like visually it's overlaying all of the possibilities with alpha transparency and i love the way that looks and kind of gives you a preview of what's to generate so i really want to add that to mine thank you so much for adding that to this i just love it so much uh 800 by 800 but it failed yeah rodak there are some issues um it looks like you have the um member icon please message me in discord and let's get a thread going in discord to try to help you sort this out um so we can get this on the website but this is just absolutely wonderful um and i'm sorry that i'm low on time here to look at this in more detail um but um we can just i can see the amount of effort and time oh look at all of these tiles there's so many where did you get these did you design them yourself is this from some other example it's just wonderful uh i'm going to run this one i'm talking okay last call wow i had this list of things i wanted to go over and do today which i'm not getting to clearly uh lego pc game just like this last call not your codes uh let's see if we can make a guess here not your codes nope youtube is it on youtube ah about studious gammar okay let's try this whoa okay we're looking you drew them ah wave function collapse oh we've got another wow amazing so first of all wonderful job updating this uh this looks like it's i really want to quickly run this so let's quickly run this i'm going to do i'm going to throw caution to the wind here and oh did i lose my python one where is it no ah is it this one yes um so uh i just wanted to activate that i'm just going to use the same throwing caution to the wind and i'm gonna use the uh uh same virtual environment which is oh whoops oh it's also called wave function collapse uh okay so now let's try doing this we're getting pillow and pie game so these i assume are for the graphics engine okay and we're just going to run main dot pi oh amazing oh look how fast this runs so it's great to see how fast this runs in python beautiful job so this is really cool that we have both a python script that just generates the image with no visual and now using pygame i assume is what's this engine for drawing it so wonderful work um jia codes i'm sorry that i'm running out of time here i would love to review this further i encourage everyone to check out um and run this themselves looks like i can go into a different directory to export an image and then maybe there are ways to change the tiles um r to restart look at that fantastic great work i love seeing these i'd be curious to hear more let's make sure we can get this on the website as well all right so um this is a little bit unorthodox here but one of the things i really wanted to talk about on today's stream was entropy and here we are i want to let's let's take the 10 minutes here and let's cover the topic of entropy and who do i have to help me cover the topic of entry v but none other than the sponsor uh you know pretty much the main sponsor of the coding train which is brilliant so if you like the coding train if you like learning and watching my videos hopefully you're inspired by them you maybe they're entertaining for you maybe you learned something but the best way to learn i really believe is by doing it yourself so maybe my videos uh encourage you hey if you want to bring me a kitten you can maybe my videos i we're fostering some kittens i thought maybe i would but my videos inspire you to learn um and try something yourself but brilliant is a website um there's an app tons of courses with interactive lessons and so many ways you can learn so whenever i'm trying to learn a topic i immediately go to the brilliant website so you can sign up for free please do so after the stream today so if you haven't uh sign up at brilliant.org codingtrain for free lets them know that you found brilliant through the coding train yay that's a nice thing for me for you um of course if you are uh interested and want to unlock all the courses i'm going to show you what you can get with a premium subscription and through that link the first 200 people to use it will get 20 off so let's go back and actually look at the brilliant website and um i'm just going to show you here under courses all the different courses so first of all i want to just highlight this beautiful geometry course because if you like making pretty pictures with math with code you're going to get so many ideas from here so you know i've made i think i'm on coding challenge 173 now i'm always looking for more ideas and more things that i could try as a coding challenge this is a literal treasure trove of stuff so i really encourage you to poke around the brilliant website if you're looking for ideas of things you can try with code um what i want to look for is um information theory oh i'm so likely to record i mean i'm literally extremely likely the fact that i'm recommending brilliant on a live stream i mean it's a sponsor i paid to do so but i i do do do i would recommend it regardless um information theory so let's go here knowledge and uncertainty so learn the math behind uncertainty can you put a number on how much you don't know sure you can when you learn something new how should it change your beliefs about how the world works this course gives you tools for managing uncertainty and interpreting information you'll learn cutting edge mathematics like information theory so the concept of entropy i want to come back and do i'll have to revisit this in a future live stream or video to get a little deeper into information theory and entropy um this course i um really has a wonderful set of uh interactive quizzes so let's get started i'm working through this for just a few minutes um and um let's let's try uh let's try just let's let's work together and see what this uh to see what this course is like it says it is said that we live in an information age indeed information is a powerful force that shapes our world and the range of human experience but what does it mean to have information is it something we can have more or less of how do we go about obtaining it so the answer to this question leads to three closely related ideas so information theory i'm basing oh i want to do so many videos on bayesian i mean i've had a little bit in the monte hall problem about bayesian inference but i want to do bayesian text classification spam detection sometime let's go on so we're going to start this journey with alice she's trying to figure out how to ask efficient questions that obtain the most information possible oh this is so good guess who by the way mind sweeper was a lot of people commented on my wavefunction class video why didn't you use mind sweeper which is a great game also to demonstrate information theory and entropy um i was watching a khan academy video about information theory that was talking about um thinking about this idea of a bits a single how much uh you can measure information in terms of bits and a bit being like how many yes or no questions do you need to ask flip a coin so let's keep going through this a terrible crime has been committed a rare and precious diamond was stolen here are the main suspects alice needs to find the criminal by asking a few yes or no questions as possible all right let's see if we can do this suppose alice's strategies go through the suspects one by one by asking was it audrey was it bill how oh this is so good this is such a great way to i hope i don't know i have to ask brilliant if i can use this in a video if i make a video more about entropy um but so um so how many so often so like entropy can be a measured there's almost like a measurement of surprise and i i can see where this is leading to because one of the ways to think about entropy and information theory is to get to the right answer how many yes no questions you need to ask so one way of doing this is just asking individually is it this person is it this person is it this person four four four four that would be sixteen so i guess i only need to ask 15 questions because um by the time you get to 15 the last question you'd be getting the right answer incorrect eight oh eight oh my brain my brain right because eight because wait what did i show the explanation here i think i'm one by one oh on average on average i always miss this ah such an important point see how i i supposedly have some level of expertise in this stuff and i mean it is i've been streaming for two hours and my still getting over like being sick like a week ago and it cut me some slack here but of course the whole point of this is not how that i would i i'm thinking about this is very similar to big o notation i was thinking about what is the maximum number of questions you would have to ask but this is on average i could get lucky and get it on the first try or i could have to ask all of them so on average since they all have an equal likelihood um uh um the average number of questions is 7.5 because 15 is really the right answer okay back to the problem okay let's keep going see this is what i love about brilliant it's giving me these interactive lessons with questions and then it's not the worst case and then if you get it um wrong there's a wonderful like that's the way to learn like i'm not going to forget that next time because i got it wrong um so i'm i'm kind of out of time here i would love to go through more of this what i wanted to do is just i just want to briefly look at um uh here like the thing that i want to skip to this or the bit is the perfect unit for measuring your uncertainty a bit relates to this idea of a single yes or no question and by the way what this is leading to is we could start to design our questions in different ways like uh is the person who committed the crime were they wearing glasses and that might eliminate a certain number and we could start to measure the uncertainty the bits the amount of surprise we have uh in terms of getting the right answer um in in more ways and then uh we can see this formula oh that formula right there this is what i wanted to dive deeper into and i should really use this formula in wave function collapse algorithm but i wanted to mention that here so i would encourage you if you want to learn more about information theory and entropy this is now using the flipping coins to check out brilliant it's a wonderful i'm so grateful to brilliant for sponsoring the coding train um you didn't see it here but a lot of the lessons have a lot of interactivity where you get to drag and dro drag and drop sliders or rearrange puzzle piece pieces they're really fun to play with just that doing that alone but also like gives you ideas of interactive things you could create uh it'd actually be interesting to think about making like a coding trend course on brilliance or something someday you have to consider that so anyway brilliant.org coding training sign up for free lets them know that you found it if you want to unlock all the courses um and all of their features um you can get 20 off of premium subscription it's also a great gift idea somebody's birthday i don't know somebody's birthday is coming up uh you can gift them a premium subscription you know if you don't know what to get somebody they have all the things you want to buy more plastic but they love learning they love math and science it's a great gift all right um please check out brilliant thank you for the sponsorship one last shout out before i go which i meant to cover earlier but um i want to just quickly click over to um the uh references here so this is the uh github oops you're not seeing this oh and thank you tony k for joining very kind of you make sure you sync your discord account um so uh one thing i wanted to mention that i that i would really encourage you to do a deep dive into in particular if you're interested in the tiled model is um to go and look through the um in the original wave function collapse repo which is what i based my coding challenge off of to go to the credits and hold on i'm looking for maybe i'm in the wrong ah yeah used work sorry to go to the used work um you should definitely look at all of these references i didn't do a i i probably should have done a better job of citing the sources for wave function collapse as i was citing wave function collapse but in particular i wanted to highlight a model synthesis um which is a particular algorithm that um paul merrill did a a phd thesis about um this is the thesis in 2009 and it's really really interesting highly detailed long read about a technique for essentially creating these tiled textures using again i haven't had the time to read this through in detail but a different heuristic a different methodology maybe a way of selecting the tiles that might have some advantages maybe there's some pros and some cons between model synthesis but the two are quite similar in interesting ways and i would encourage you to check out this original work um and uh you know i would say the overlapping model is really where wave function collapse takes this idea of model synthesis and placing tiles next to each other and really uh runs with it in this really amazing direction that i hope to get to in a i plan to in a future live stream slash coding challenge so that's all i've got for you today thank you again i didn't get to david snyder i didn't get to your correction so there's um there's a lot of things i made a whole google slides presentation unfortunately i just like out of time but um while we're here i'll just i would encourage you to check out um and help me like help contribute oh you're not seeing this help contribute to this um read me that's in the way function collapse repo because this is my plan so these are some things that i want to do and look at in the future work there was also like a really bizarre thing that happened to me with property names and david snyder submitted this excellent explanation and correction which i wanted to go over today but i've run out of time um but if you have ideas for how to approach the overlapping model things that i should do next steps in refactoring optimization corrections from the video this is my running list of things that i want to cover and do in future live streams and video all right everybody i'm sorry that i have to go i appreciate you all so much don't forget this saturday less than 48 hours from now i will be right here with dr christian hubicki from florida state university from his rob who runs a robotics lab there to talk about robot controllers and this i'm hoping is going to launch a whole new series eventually have some coding challenges on the coding train for simulating robot controllers so that will be happening on saturday at 11 am i've got to go i'm already a minute late to my next meeting no kittens today sorry everybody next time i'll bring you a kitten maybe as i'm playing the outdoor song if i can manage it i'll show you a kitten thanks everybody i will see you next time on the coding train do so you
