With timestamps:

00:01 - [Music]
00:13 - [Music]
00:29 - [Music]
00:48 - sound check
00:48 - one two three uh now i have my mic
00:51 - unmuted but the caption
00:53 - system that i'm working is still going
00:56 - hello everybody
00:57 - i'm muting my mic again let me know how
00:59 - the audio is
00:59 - [Music]
01:05 - i actually was just noticing i think the
01:06 - music was a little bit loud
01:12 - [Music]
01:17 - [Music]
01:35 - [Music]
01:47 - [Music]
02:06 - do
02:08 - [Music]
02:19 - [Music]
02:33 - [Music]
02:46 - [Music]
02:54 - [Music]
03:02 - do
03:07 - [Music]
03:17 - [Music]
03:29 - [Music]
03:55 - [Music]
04:05 - [Music]
04:14 - [Music]
04:26 - do
04:28 - [Music]
04:39 - [Music]
04:40 - do
04:42 - [Music]
04:54 - so
04:59 - [Music]
05:22 - so
05:26 - [Music]
05:55 - [Music]
06:13 - hello welcome to another saturday
06:15 - afternoon here on
06:23 - the coding train i was wondering what my
06:25 - um
06:26 - live captioning system would do with the
06:28 - train whistle but it doesn't seem to
06:30 - have
06:30 - um i guess you're seeing the captions
06:33 - over here so when we're looking at them
06:34 - i need to look this way but my monitor
06:36 - to see them is over there so hey how are
06:37 - you all doing it's saturday it's
06:39 - february 13th tomorrow is valentine's
06:41 - day
06:42 - i love you you're my valentine the
06:44 - internet people who watch the coding
06:46 - train
06:47 - are officially my valentine um i don't
06:50 - know what that means
06:51 - why i'm saying it or if this is how i
06:53 - should be beginning the coding train
06:55 - today but that's what's in my heart
06:57 - and i'm just taking my heart out and
06:59 - showing it to you here that's also weird
07:02 - where am i going with this i just want
07:03 - to say that i love you you're great
07:06 - um so one of these days
07:10 - maybe um it won't a saturday we'll roll
07:12 - around and i'll feel like i had a really
07:13 - good night's sleep and i spent the day
07:15 - just leisurely like thinking about the
07:17 - kind of things i
07:18 - do in the live stream getting things set
07:20 - up and just turning things on and
07:22 - being here fully present and with all of
07:24 - my
07:25 - energy and enthusiasm today is not one
07:27 - of those days i'm definitely feeling
07:29 - scatterbrained
07:30 - quite tired it's been a long week it's
07:32 - been a very long
07:33 - year in the last year um
07:37 - and it is the dead of winter here in new
07:39 - york um
07:40 - there is lots of snow out there it's
07:42 - quite cold and icy
07:43 - i'm ready for that and i'm ready for the
07:46 - springtime but
07:47 - nevertheless um i am here
07:50 - um to be with you and before i go too
07:53 - much further
07:54 - let me briefly take a minute to
07:57 - thank today's sponsor of the coding
08:01 - train
08:02 - and those are my friends over at
08:05 - oh my too many buttons to press um let's
08:09 - try this
08:10 - curiosity stream okay wait wait
08:11 - everything's gonna be fine people i've
08:13 - got a way to move things around here
08:14 - nope nope
08:15 - wrong one no no no not that nope this
08:17 - one yep that's right no
08:18 - now move this up here oh now move this
08:20 - over here oh nope nope
08:22 - sorry i'm really i'm really uh in trying
08:24 - to
08:25 - work with some more captions here there
08:26 - we go there we go there we go
08:28 - so launched by media visionary john
08:31 - hendricks who founded the discovery
08:32 - channel
08:33 - back you know when there was actually
08:35 - documentaries there's a lot of reality
08:36 - tv on there now
08:37 - i kind of like reality tv but you know
08:40 - your honesty stream is the award-winning
08:42 - destination for documentary films
08:44 - and tv shows covering every topic from
08:45 - space exploration
08:47 - to adventure to the secret lives of wild
08:49 - animals so you can sign up with that
08:51 - link that's up there
08:52 - and in the chat actually pinned the
08:54 - comment in the chat and wait a second
08:56 - wait a second i have some breaking news
08:57 - coming in breaking news
09:02 - oh it's in this year breaking news
09:05 - because of valentine's day
09:07 - that discount that was previously
09:10 - 26 off is now 41
09:14 - off just for today and tomorrow so if
09:16 - you sign up it's 11.79
09:19 - for an h for the entire year that's the
09:21 - entire year by the way
09:23 - and you will also get access to the
09:25 - streaming video service nebula
09:27 - which is a streaming video service that
09:28 - i am a part of that i've talked about
09:30 - before on the channel
09:31 - when you sign up for this curiosity
09:32 - stream bundle using the link
09:35 - up there and in the chat so thank you
09:37 - curiosity stream for your
09:38 - sponsorship um moving back to
09:42 - um my this view over here i'm
09:45 - let's let's talk about for a minute what
09:47 - the plan is for today
09:49 - and let me see if i can get the chat
09:51 - back over here
09:52 - um i'm trying to be a bit more organized
09:55 - and i'm clearly
09:56 - failing at that quite
09:59 - quite a bit today um so what do i have
10:02 - on the docket
10:04 - what's on my coding train to-do list for
10:07 - today well
10:08 - the focus of
10:12 - the focus of um
10:16 - if you only knew the things that are
10:17 - swirling around in the back of my mind
10:19 - while i'm talking woof it's very hard to
10:22 - keep two
10:22 - entire sets of conversation in your own
10:25 - head going on at once
10:26 - i have a really difficult time with that
10:29 - um but this spring
10:30 - as i have mentioned many times before is
10:33 - i'm really dedicating myself to
10:35 - the nature of code and let me come back
10:38 - over here and have to move this back
10:39 - up top here um and so uh most recently
10:43 - on the channel i have been releasing i'm
10:47 - on chapter three right now so i'm
10:49 - putting out new videos
10:51 - uh several per week with
10:54 - lessons related to topics in the nature
10:57 - of code book
10:58 - and you can see that i'm almost done and
11:01 - i think i can maybe just go over here to
11:03 - learning nature of code and scroll on
11:05 - down
11:05 - there are two more um videos in the
11:09 - three point x
11:10 - series which is all about angles
11:13 - rotation trigonometry um
11:16 - angular motion um and polar coordinates
11:20 - lots of things there um and so
11:24 - um what i um what's coming
11:28 - up um next is um
11:32 - let's see well i'll just show you so
11:33 - this particular video
11:36 - ends with this example
11:39 - i'm gonna run it for you right now oh
11:41 - that's actually not the example i
11:43 - end with um this is the example i
11:47 - believe
11:48 - i'm not really sure but i end with
11:51 - yeah so just looking at graphing the
11:54 - sine wave graphing a
11:56 - sine wave in motion with animation now
11:59 - one of the things you can do
12:02 - with once you have this idea and you're
12:05 - able to
12:05 - graph a sine wave is you can take
12:09 - two sine waves and you can have
12:12 - different frequencies of those waves
12:14 - perhaps different amplitudes of those
12:15 - waves
12:16 - you can add them together and you get a
12:19 - new wave
12:20 - so let's see if i can pull up that's
12:21 - what the next video that i haven't
12:23 - released yet will be about
12:24 - it's already been recorded it's just
12:26 - about finished just haven't released it
12:27 - yet
12:28 - um this doesn't look like the one
12:32 - from let's see
12:35 - um from the actual video but let's see
12:38 - if i can three is there a 3.7
12:40 - is there anything here that says 3.7
12:43 - does anybody
12:44 - see basic polar 3.4 oscillating motion
12:46 - timer i'm playing with
12:48 - 3.8 i see a 3.8
12:52 - uh 3.3
12:56 - 3.3 weird what happened to
12:59 - i guess it's not uh add
13:04 - no additive wave wave
13:07 - sine wave graphing wave wow
13:10 - i wonder where this uh example went
13:15 - um let's look at this one this is not
13:18 - the example
13:19 - this is this is the visual result but
13:21 - this is this is code this is the example
13:23 - from
13:24 - um 2012 basically
13:27 - and i have updated it with a class for a
13:30 - wave and all sorts of things
13:34 - um i'm seeing some interesting questions
13:35 - in the chat that i would love to address
13:37 - but so this is the idea once you have
13:39 - multiple waves
13:40 - varying periods varying amplitudes add
13:43 - them together
13:43 - you can get results like that so stay
13:45 - tuned that's what's coming next now
13:46 - while i'm here let's foreshadow what's
13:49 - coming in 3.8
13:50 - so the prompt the homework assignment
13:52 - from week
13:54 - 3 chapter 3 of the nature of code one of
13:57 - the ideas
13:58 - is to think about how you can apply
14:01 - an oscillating motion to a particle
14:05 - moving around a canvas
14:06 - so this is the idea of like okay i have
14:08 - this idea of particles that are
14:10 - responding to forces and moving around
14:12 - and then they have this little arm that
14:14 - kind of pulls itself
14:16 - uh forward um as if it's maybe a wing
14:19 - or an arm or an appendage and i'm using
14:21 - an oscillating wave
14:23 - uh that's mapped to the object's
14:25 - velocity
14:26 - to um to visualize the locomotion
14:29 - of this particular object so that's
14:31 - where all this is going and if you want
14:32 - to look ahead
14:34 - those are the videos that are coming out
14:35 - but if you're kind of following along
14:37 - with the course that i'm actually
14:38 - teaching right now which is all here in
14:41 - this github repo
14:44 - what the actual homework for this week
14:46 - is uh this
14:47 - try using vectors so um if you want to
14:50 - kind of follow along with the course
14:52 - um where am i i'm actually in the videos
14:55 - for this
14:56 - week are the one the one point x series
14:59 - what are vectors vector math random
15:01 - vector static methods
15:02 - unit vector acceleration gravity and win
15:04 - oh no no no
15:05 - no just to 1.6 so um what i'm trying to
15:09 - do on my saturday streams is kind of do
15:11 - a quick homework assignment
15:13 - and i think what i would like to do for
15:16 - my homework assignment is continue what
15:18 - i did for my random walk homework
15:20 - assignment
15:21 - which was uh the self-avoiding walk so
15:23 - i'm gonna get to that um
15:30 - i'm looking at the um some of the chat
15:33 - messages here
15:35 - and people are asking about the um
15:39 - automated captions so um
15:42 - i um let me just speak to that for a
15:45 - minute
15:45 - um it's very important to me that the
15:48 - live streams that i do
15:49 - are accessible i have tried many
15:51 - different uh systems for captioning
15:53 - nothing honestly really beats a human
15:56 - um captioner um the there are automated
15:59 - youtube captions you can turn those on
16:01 - right now
16:01 - on youtube but there's a little settings
16:03 - and it will um it's an overlay through
16:05 - the youtube player itself
16:06 - i have not been too thrilled with the
16:08 - quality of those
16:09 - um and so right now i'm experi i noticed
16:12 - that through
16:13 - um nyu where i uh teach um
16:16 - nyu's zoom account through i think
16:18 - believe a service that's ai lot called
16:20 - ai live
16:22 - i can turn on captions in any zoom
16:24 - meeting so right now what i'm actually
16:26 - doing is i'm in a zoom meeting right now
16:29 - and i have the captions running and i'm
16:31 - just in
16:32 - open broadcast studio capturing that as
16:34 - an overlay
16:35 - i wanted to see how this worked um i
16:37 - know it's a big discussion i would love
16:39 - to hear from
16:40 - the uh community of anyone who actually
16:44 - uh
16:45 - uses watches videos with captions on i
16:49 - know there's a
16:50 - um there's different points of view i
16:52 - believe around whether captions should
16:54 - be
16:55 - i believe i'm going to get this wrong
16:57 - which is why i'm kind of stumbling over
16:58 - my words here but whether the captions
16:59 - should be
17:00 - always on or an option that you could
17:02 - turn on or off right now i'm gonna leave
17:04 - these on for today
17:05 - um just to sort of like see how good
17:07 - they are and then i might look into
17:10 - seeing if i can with an api get these
17:12 - captions directly into the youtube
17:14 - system so they could replace those and
17:15 - they could be something that people
17:16 - could turn on and off
17:18 - um so that's kind of what i am um
17:20 - thinking about and experimenting with
17:22 - um just to be clear it's just an overlay
17:25 - so i have a button right here
17:26 - they're gone they're back what i love
17:28 - about this which is kind of funny
17:30 - i'm gonna mute my microphone for a
17:31 - second ready
17:54 - sometimes that's what i mute my
17:55 - microphone for if i'm talking to my kids
17:57 - who came up to ask me a question
17:59 - but now the captions will still go i can
18:01 - i do have a button over here which will
18:03 - mute me in zoom
18:04 - so i can
18:14 - now no captions appear no
18:17 - wait a second that didn't mute zoom
18:23 - zoom mute button not working well i can
18:25 - manually mute myself and zoom
18:27 - all right all right enough with this i
18:30 - don't know what's going on anymore
18:33 - um okay
18:37 - so uh yeah
18:40 - hacker says in the chat yawn and that's
18:42 - exactly how i feel today i have to just
18:44 - be totally honest with you i
18:46 - didn't really feel like live streaming
18:48 - today
18:50 - some days it's just like it's hard
18:51 - people always write in my uh
18:53 - i get a lot of the um when harry met
18:55 - sally kind of um
18:57 - comments in my youtube videos like i'll
18:58 - have what he's having because i have a
19:00 - lot of energy and enthusiasm and that's
19:02 - a genuine feeling that i have
19:04 - when i record videos and i discover
19:06 - something and make tutorials i really do
19:08 - feel that
19:09 - genuine enthusiasm and excitement and
19:11 - passion for this kind of work that i'm
19:13 - doing
19:14 - but i am a human who gets tired
19:17 - and um especially during the semesters
19:19 - when i'm teaching
19:20 - and there's a lot going on family wise
19:22 - and you know i don't know if you noticed
19:24 - we're living
19:24 - in a global pandemic i definitely have
19:28 - a lot of privilege and a lot of things
19:30 - in my life that make things
19:31 - very comfortable and easy for me and i'm
19:33 - very grateful for that um so anyway
19:36 - but here i am i'm gonna i'm i'm um
19:39 - thanks for being here with me
19:41 - and let's get started and actually do
19:42 - some coding stuff
19:44 - uh oh so uh this is why so so um i
19:47 - wanted to just mention that actually i
19:48 - kind of am looking for some help here i
19:50 - feel like this assignment
19:52 - does isn't one of my better sets of
19:54 - prompts so this is the assignment um
19:56 - it's really this week is if for if
19:57 - you're if you're in the course
19:59 - it's kind of about oh you've never used
20:01 - vectors before
20:02 - you have used vectors before maybe
20:04 - conceptually but haven't used
20:06 - p5 vector or thought of the way that
20:08 - you're moving
20:09 - animating elements in a creative coding
20:11 - sketch
20:12 - with this concept of vectors so but i'm
20:14 - not so sure about the prompt here
20:16 - um all right so if you have ideas for
20:20 - that i would welcome that what else did
20:21 - i want to show
20:22 - so oh i also just wanted to mention i
20:24 - don't know if i have time for this but
20:26 - it is tomorrow is valentine's day
20:29 - and i have these wonderful i mean i
20:30 - don't want to call them wonderful
20:32 - it's up to you you decide whether
20:33 - they're wonderful or not i have these um
20:36 - coding challenges that i did um
20:39 - quite some time ago i guess two years
20:40 - ago in 2019
20:43 - um about uh heart this is a um this is
20:46 - really kind of insane i don't know if
20:47 - this heart curve is actually a
20:48 - mathematical function
20:50 - plotted with copolar coordinates that
20:51 - produces a heart
20:53 - there is this is one of my absolute
20:55 - favorite patterns
20:56 - in um kind of mathematical visualization
21:01 - the cardioid that appears when you
21:02 - visualize a times
21:04 - table um over around a circle um and so
21:07 - though i was just going to encourage
21:09 - people if you're looking for something
21:10 - to explore this weekend
21:12 - you know valentine's day is obviously
21:13 - like not a real holiday it's some kind
21:15 - of like
21:15 - you know such a capitalist trick to get
21:17 - us to buy things
21:19 - you know but expressing love is a nice
21:21 - thing i do also like chocolate
21:23 - just saying dark chocolate you know low
21:25 - low sugar now that sounds weird low
21:27 - sugar i just like
21:28 - i like you know what i really like is a
21:30 - good
21:31 - organic nut butter
21:35 - chocolate cup i'm such a loser
21:39 - i live in brooklyn and so when i when i
21:42 - think about like a reese's peanut butter
21:43 - cup
21:44 - which i'm sorry to buzz market reese's
21:47 - pieces not a sponsor
21:50 - i like to think about some artisanal
21:52 - handmade
21:53 - dark chocolate almond butter organic
21:56 - cup that i that costs like 7.99 at the
21:59 - local store
22:00 - all right i'm off on a terrible tangent
22:02 - here
22:03 - um tangent
22:09 - so take a look at those uh heart curve
22:13 - heart curve oh you know and by the way
22:15 - this is also a nice
22:16 - um excuse for me to look at some
22:20 - community contributions
22:22 - um this by the way i was just poking at
22:24 - this this morning on this beating heart
22:26 - with interactive equation editor by
22:28 - elizabeth hudnot that was submitted
22:30 - um this really is a cool website um
22:33 - i'm just gonna actually get rid of this
22:35 - preset uh
22:36 - link and take that off this is and i'm
22:39 - gonna
22:40 - go down here and say let's go this i
22:42 - discovered this just today by looking
22:44 - through the community contributions
22:45 - this is a website that has several
22:49 - different
22:49 - mathematical algorithms uh visualized
22:52 - um it's created by
22:56 - um elizabeth hudnot let's see we can go
22:58 - over this is um their github
23:01 - there's a codepen link here and
23:06 - lots of these i don't know that these
23:07 - are all based on my videos but there's a
23:09 - lot of crossover certainly between
23:11 - videos that i've made and what are here
23:12 - but if i go here to this graphing
23:14 - calculator one
23:15 - um click on this oh select i guess i
23:19 - have to click
23:21 - um oh i see i need to let's go
23:24 - directly to back to here and let's do
23:27 - let's go
23:28 - it's really cool like the equations can
23:30 - be just plugged in here
23:32 - and then it graphs them and then i can
23:35 - like do
23:36 - cool stuff like rotate it i saw it when
23:39 - um and play with all the various
23:42 - um parameters here so like what if i
23:44 - just change this from 16 to a 15.
23:47 - does it re-graph it
23:50 - i don't know what to do i don't know how
23:51 - to make this work close path
23:54 - do i have to like set set
23:57 - i don't know i don't know it's too
23:59 - exciting so play around with this
24:00 - it's really cool um a really excellent
24:04 - um a wonderful community contribution um
24:07 - that i found on the website so take a
24:09 - look at those
24:10 - uh i also wanted to just highlight um
24:13 - and maybe i'll come
24:14 - back to this uh in a little bit but one
24:16 - of the things
24:17 - you know the community contributions
24:19 - come in through these pull requests
24:20 - you can just um find them on the website
24:22 - if you go to any particular video
24:25 - like for example you could be right now
24:27 - watching this
24:28 - um the very first person to submit
24:33 - a community contribution of a creative
24:36 - project that you made from this video
24:37 - does not exist yet
24:38 - but i recently discovered it let's see
24:40 - if i can find this again i was looking
24:41 - at this this morning
24:44 - yes someone took uh this was from seven
24:47 - days over ago um
24:48 - m awesome forever who is definitely
24:51 - awesome forever
24:52 - took the bees and bombs gif recreation
24:56 - coding challenge and ported it over to
24:58 - roblox
25:00 - and we can see a gif animation
25:05 - of it right here in roblox which
25:08 - this just thrills me to no end i haven't
25:10 - actually shown this to my kids who are
25:12 - avid roblox
25:13 - enthusiasts um and i really feel like
25:16 - i've gotta get into this and learn how
25:18 - to do this a bit myself
25:19 - this is wild
25:24 - okay so i'm yeah so good suggestion oh
25:28 - this is an interesting idea i haven't
25:30 - thank you for this um suggestion i'm
25:32 - going to try something a little bit
25:33 - interesting here so i'm putting this
25:34 - here
25:36 - and then i'm going to move myself
25:40 - here we go there the captions
25:43 - are right below me let's see how that
25:46 - goes
25:47 - um let me just go over to p5 web editor
25:50 - it and it
25:51 - i think if i do this
25:54 - then uh the reason why i didn't put the
25:56 - captions over on this side
25:58 - was because i wanted to make sure it
26:00 - wasn't blocking the code
26:02 - if i look at code but now i'm realizing
26:06 - um this could work pretty well also a
26:08 - little bit higher up
26:09 - i feel it's giving me a little boost
26:12 - a little boost of confidence today live
26:14 - streaming
26:15 - it is blocking the console but i will
26:17 - deal with that when the time
26:19 - comes all right i really do need to get
26:23 - the captions like natively through an
26:24 - api this is just a window capture
26:27 - and you can see i actually it's very
26:28 - small i mean i don't mean to go off on a
26:30 - tangent here but
26:31 - the way that i'm capturing this from
26:33 - zoom is i act
26:35 - zoom i can do a window capture in open
26:38 - broadcast studio
26:39 - um and to see what that looks like i'm
26:41 - just going to show you this right now
26:43 - let's do oops no no let me show you what
26:46 - this looks like
26:47 - i'm going to go to window capture and
26:49 - i'm going to
26:51 - type in zoom test and i'm going to hit
26:55 - ok
26:56 - and name is already in use i already
26:58 - made something called zoomtest
27:00 - zoomtest2 and then oops it's getting
27:02 - this stream chat which is fine
27:04 - let's go to here zoom meaning so this is
27:07 - actually
27:08 - i'm gonna hit okay this is actually the
27:11 - zoom meeting right here
27:12 - and the captions in the zoom meeting are
27:14 - showing up
27:16 - right over there but they don't show up
27:18 - they're like this extra
27:20 - transparent overlay window that's part
27:22 - of zoom
27:23 - and obs just for what i actually spent
27:26 - like an hour today trying to get obs to
27:28 - find it
27:29 - and it would just not find it um so
27:32 - what i had to do was actually capture my
27:34 - entire display
27:36 - and then crop it around where the
27:37 - captions show up and then i'm sort of
27:39 - like
27:39 - blowing it up a little bit so they're
27:40 - kind of pixelated and not the best
27:42 - quality
27:43 - um but this i don't need anymore so but
27:46 - that's my zoom meeting that i'm in by
27:47 - myself what happens if i
27:48 - turn the video on there you can see
27:53 - exciting exciting times here on the
27:55 - coding train
27:56 - uh all right let's um let's remove this
28:01 - remove remove okay back
28:04 - to um the topic of today so my homework
28:08 - assignment for the random walk week and
28:10 - i by the way
28:11 - this is one of the strange things now
28:12 - about my live streams it used to be
28:14 - the opposite the live streams were where
28:17 - i would
28:18 - try a coding challenge and then
28:22 - um i would that would so people who
28:24 - watched the live streams would kind of
28:25 - see
28:26 - the sort of raw unfettered unedited
28:31 - hours of debugging coding challenge
28:34 - which i still think is something that i
28:35 - would like to get back to doing more of
28:37 - then i would edit something out of it
28:38 - and later like there would be a video
28:40 - um that would sort of like take that
28:42 - segment out of the live stream right now
28:44 - i'm actually recording the coding
28:46 - challenges not live streaming
28:48 - and then i'm coming in like playing
28:49 - around with them when i live stream
28:51 - so you can essentially getting a sneak
28:53 - peek on something that's coming out
28:54 - hopefully in the next week or two so let
28:56 - me go and grab the code for this
28:59 - and i have some things that i want to
29:00 - discuss and think about related to it
29:03 - um self
29:07 - yeah here it is coding challenge self
29:09 - avoiding walk
29:12 - and i think i might have showed this
29:13 - last week i actually i did a new version
29:15 - of it since the last time i showed it
29:17 - um and
29:20 - okay so what this
29:23 - is and let me move this up a tiny bit
29:26 - that'll help
29:30 - this is a um self-avoiding walk
29:34 - and what is it what it is attempting to
29:36 - do
29:37 - is there is it's taking the canvas and
29:40 - dividing it into
29:41 - a grid and every spot on the grid
29:45 - um sorry i'm like
29:48 - reading the chat and talking which is
29:50 - i've learned my lesson i shouldn't uh
29:53 - i shouldn't be doing that um
29:58 - every every cycle it can go
30:02 - left right up or down
30:06 - you know it's my own fault but
30:08 - everyone's giving me a lot of
30:09 - suggestions about how to improve
30:11 - the layout the captioning system and i'm
30:13 - paying attention to that while i'm
30:14 - trying to talk about self-voting walk i
30:16 - just i think i should stop paying
30:17 - attention to that
30:18 - see i told you today was just gonna it's
30:20 - i'm a little bit off
30:22 - i mean i'm i don't know what my on is
30:24 - but today i'm definitely off
30:28 - there are more people than i imagined
30:29 - watching this all right so but i'm going
30:31 - to get to doing some stuff with this in
30:32 - a second
30:33 - so i actually want to just um change
30:36 - this right now to make the spacing
30:38 - 50. so if the okay so now the spacing
30:42 - is 50. and i think i would also let me
30:44 - duplicate this
30:45 - actually because i want to explain
30:48 - what's going on here a bit more
30:52 - walk vectors homework and i'm going to
30:56 - try adding some vectors to this
30:58 - as well let's talk about vectors
31:01 - okay so first thing i want to do is
31:04 - change the spacing to 50
31:06 - and then i think i would like to draw
31:10 - some more information so people could
31:11 - see the grid here
31:13 - so let me do the following
31:17 - i'm going to say 4 let i equal 0
31:20 - i is less than the number of columns
31:26 - and i'm going to use j for the rows
31:31 - i've learned my lesson when i have auto
31:33 - refresh on be very careful about typing
31:35 - loops so you don't get it stuck
31:37 - in a forever loop
31:40 - then if i do rectangle i i'm spacing
31:43 - j times spacing spacing spacing
31:48 - i should get a grid of rectangles oh
31:50 - that's kind of crazy looking
31:52 - and i want to say
31:54 - [Music]
31:55 - stroke 255 fill 100
32:00 - stroke weight
32:04 - let's give the stroke weight one so i
32:07 - just wanted to i wanted you to be able
32:09 - to see this grid
32:10 - because the walker is moving and i think
32:14 - i'm going to do
32:15 - this and
32:19 - um let's have it actually be spacing
32:21 - minus one
32:23 - and these are all squares so i don't
32:26 - need this extra variable oh i don't have
32:28 - enough
32:29 - room
32:33 - how come that didn't work do i have to
32:35 - say square explicitly
32:38 - square is not defined by the way one of
32:39 - the things i've discovered
32:42 - is that my sketches tend to be using
32:44 - very old versions of p5
32:46 - and i should really make sure i update
32:48 - them i think 1.1.9 can anyone fact check
32:51 - on me that that's the more recent
32:53 - version
32:54 - uh let's go back to the sketch
32:57 - um there we go
33:00 - i guess i can just leave that at zero i
33:02 - don't know why so i wanted to see this
33:04 - all right so the idea is
33:06 - that the random walker it starts in the
33:10 - top left spot
33:11 - it can go from here one of three one of
33:14 - two
33:14 - to the right and down oh i should try
33:17 - this let's see what if i let it go
33:18 - diagonally
33:19 - this is essentially a graph each
33:22 - cell is a node and the edges are the
33:24 - connections just
33:26 - horizontal or vertical connections
33:29 - and so it's it's randomly walking
33:32 - and is and it not and it's not allowed
33:35 - to
33:36 - go back to a spot that it's previously
33:38 - been
33:39 - so eventually at a certain point it's
33:41 - going to get somewhere and be stuck
33:43 - so when it's stuck it backtracks and
33:45 - tries to go a different way and then
33:47 - backtrack some more if it gets stuck and
33:48 - tries to go a different way so in theory
33:50 - this is a brute force algorithm and
33:52 - eventually
33:54 - it's going to hit every spot
33:57 - and fill the space it's not doing that
34:00 - very quickly
34:02 - it takes a long time let's
34:05 - change the spacing to 100 to see if we
34:07 - can at least
34:08 - wait it out now with with a four by four
34:11 - there we go
34:12 - so we can see with four by four it just
34:14 - took you know
34:15 - i don't know what that was 10 seconds
34:17 - that was just a few seconds there
34:19 - to make its way through every single to
34:22 - hit every single spot
34:23 - in the graph without crossing over
34:26 - itself
34:28 - so what i've been trying to figure out
34:30 - is what
34:31 - is the big o notation for this
34:34 - particular brute force algorithm
34:36 - so this is for how many possible
34:40 - pathways does it need to check so if n
34:42 - is
34:43 - 4 there are n squared
34:46 - cells and then if it starts with one
34:50 - i mean how is it factorial like either
34:53 - it's kind of like the traveling sales
34:54 - person
34:56 - algorithm but it but it's it's not that
34:58 - exactly because it can't go from one
35:00 - node to any node
35:02 - um so the most recent version is 1.2.0
35:06 - everyone's telling me okay
35:08 - okay good to know good to know good to
35:10 - know
35:11 - 1.2 .0 and i don't know why i'm going to
35:14 - just get rid of the sound
35:17 - um and let's so i would love some help
35:20 - from people watching
35:23 - um hamilton right so the hamiltonian
35:25 - psycho oh
35:26 - joe bennett says o2 to the end
35:32 - and simon let's see if i can bring this
35:33 - up on the screen
35:36 - simon posted a nice message in the chat
35:40 - with a variety of and unfortunately it's
35:42 - too long for me to fit
35:44 - and the uh this system that i'm using
35:46 - which is called this stream chat which
35:48 - is wonderful
35:48 - somebody posts a link to it in the chat
35:50 - so people can find
35:52 - this it's a discord bot and a chat
35:55 - bot for live streaming works better with
35:57 - twitch but i use it with youtube
35:59 - that's made by some coding trained
36:01 - community members um
36:03 - uh simon here has posted a um
36:07 - a helpful explanation of different big o
36:09 - notations as well as
36:11 - instead of big no reminding me about p
36:15 - n p p space and exponential time
36:19 - so um i'm getting suggestions from joe
36:21 - of o2 to the n
36:24 - um sarob writes oh it's not o n squared
36:27 - so an o
36:28 - n squared algorithm would be something
36:30 - like
36:31 - um i was going to say blurring the image
36:36 - like an image processing algebra would
36:37 - be n squared assuming
36:38 - n is one of the you know if we're
36:41 - talking about a square is the width
36:43 - um and then the pixels goes is squared
36:46 - and thank you david for posting just
36:48 - stream chat
36:49 - evor is saying oh three to the n
36:52 - squared max three possible new cell and
36:54 - two for 2d grid that's kind of
36:56 - interesting
36:57 - but you have to think about like it's
36:59 - not just a matter of
37:02 - anyway it's it's a very very uh large
37:04 - number i was kind of
37:06 - thinking of it as like worst case
37:08 - scenario if i got rid of all the rules
37:11 - um is it really equivalent to n squared
37:14 - factorial
37:15 - because uh like it's ultimately
37:18 - something like the traveling sales
37:19 - person problem
37:20 - where i'm trying to find the most
37:22 - efficient route through n
37:24 - number of points which is an n factorial
37:26 - and then i'm kind of taking
37:28 - n as the width of the square so n
37:30 - squared factorial but
37:31 - you know here or there um
37:35 - so um but you'll see very quickly just
37:38 - even if i just go to
37:40 - um eight by eight
37:43 - like what is n squared factorial
37:46 - of eight by eight that's 64 factorial
37:53 - anybody know that off the top of their
37:54 - head
37:56 - um that's a one with 89 zeros
38:01 - so if that's really true
38:05 - there's no way i'm ever going to be able
38:07 - to see i mean
38:08 - without getting extremely lucky there's
38:10 - no way i'm ever going to be able to sit
38:11 - here and wait
38:12 - as it checks one possibility you know 60
38:16 - possibilities per second
38:17 - i was experimenting with this idea and
38:19 - you'll see it commented out in the code
38:21 - like let me have it try 500 000
38:25 - per frame
38:28 - so this is obviously going to move much
38:29 - faster but even so uh worst case
38:33 - o three to the end says heka
38:36 - um the the j sua roop says o
38:40 - two to the n squared
38:44 - yeah that i have to think this through
38:46 - and probably thinking this through while
38:47 - i'm live streaming is not the best
38:49 - idea but i wanted to point out that
38:51 - essentially
38:52 - um this is a um sounds like a question
38:55 - for brady hair and numberphile or matt
38:57 - parker yes
38:58 - indeed so i would like to explore this
39:02 - further but i'm noticing that there i
39:05 - you know there are particular techniques
39:08 - for making smarter decisions about how
39:11 - you can
39:12 - more up you know if we have obviously
39:13 - like i could no i think this is what the
39:15 - hamiltonian path
39:17 - gets at it's like it's very easy for me
39:19 - and i'll see if i can kind of like zoom
39:20 - over to this
39:21 - where i could just decide like well
39:23 - obviously if i start going down
39:24 - then over then up then oh then
39:28 - hey wait i have to if i start over here
39:31 - and just go
39:32 - up and then over i don't have very much
39:34 - space to work with and down
39:35 - and then over then up like i could
39:37 - actually design a path
39:39 - that i know would hit every spot with a
39:42 - kind of rule
39:43 - for any particular 2d uh
39:47 - space that goes in two dimensions
39:51 - you pro chris writes you probably need
39:53 - to estimate the average branching factor
39:55 - per cell
39:56 - yeah that makes sense
40:00 - um all right so what i wanted to explore
40:02 - so beyond like and we could see that
40:04 - beyond trying to uh solve this
40:07 - um i wanted to explore first of all i
40:10 - rather just enjoy the act of watching it
40:13 - take forever to try to figure this out
40:15 - it's quite pleasurable to me to sort of
40:17 - see it i'm doing its work
40:20 - um but what i wanted to explore here are
40:22 - two things one is i wanted to sort of
40:23 - like look at
40:24 - change the example around a little bit
40:25 - with vectors that was kind of my idea
40:29 - recursion i probably should i didn't use
40:31 - recursion for this if you could believe
40:33 - it
40:33 - although it definitely would have made
40:35 - sense too
40:38 - but um i wanted to look at um i believe
40:41 - i don't know if anybody knows any other
40:43 - keywords i can search for
40:44 - but hamiltonian path um let's take a
40:48 - look at this
40:50 - so this is a path uh hamiltonian cycle
40:54 - uh and i've never i haven't looked at
40:56 - this really other uh
40:57 - much beyond just this moment um okay
41:01 - are named after william rowan hamilton
41:03 - who this is not from hamilton the
41:05 - musical that's too bad
41:08 - um who invented no no it's hamilton
41:11 - puzzle
41:12 - blah blah blah blah blah blah blah blah
41:13 - blah blah where is there some pseudo
41:15 - code here
41:16 - uh is a path that visits each vertex of
41:18 - the graph
41:19 - exactly once a graph that contains a
41:21 - hamiltonian path is called a traceable
41:24 - graph
41:25 - a graph is hamiltonian connected if for
41:27 - every pair of vertices there is a
41:28 - hamiltonian path
41:29 - between the two vertices
41:33 - so i actually really like
41:36 - um one possible hamiltonian cycle
41:38 - through every vertex of a dodecahedron
41:41 - is shown in red
41:42 - like all paclionic tiles the
41:44 - dodecahedron is hamiltonian so this i'm
41:46 - kind of fascinated by
41:47 - and i'm almost more interested in
41:49 - starting over now with a new sketch
41:51 - and trying to look at visualizing um
41:54 - a hamiltonian path
41:58 - um through just sort of an arbitrary set
42:02 - of vertices
42:06 - the herschel graph is the smallest
42:08 - possible polyhedral graph that does not
42:09 - have a hamiltonian cycle
42:11 - interesting so
42:15 - um
42:19 - an algebraic uh solve
42:22 - so what is an algorithm ooh night tour
42:25 - is something i always have been meaning
42:27 - to explore on the channel
42:30 - i'm seeing a lot of things that i've
42:32 - been interested in that i haven't
42:33 - bothered to look at before
42:35 - so how how do i solve it
42:39 - um
42:42 - okay hamiltonian cycle hello look up
42:45 - shrom
42:46 - loner evolution it has a lot in common
42:49 - with random walks
42:50 - okay
42:55 - by the way i'm giving myself the first
42:57 - half of this live stream to play around
42:58 - with this
42:59 - in the second half i'm going to look at
43:01 - how to have a
43:03 - node sketch like render a p5 sketch i
43:06 - mean i don't know that i'll succeed at
43:07 - that but that's what i wanted to look
43:08 - into
43:09 - um okay
43:12 - whoa this looks like quite an
43:15 - interesting
43:15 - um visual result i like anything with a
43:18 - rainbow color
43:19 - as you know um
43:22 - this is an interesting this would be a
43:24 - cool coding challenge
43:26 - i'm gonna have to look at this a little
43:27 - bit on my own
43:29 - um but this definitely um this image
43:32 - appeals to me very much evolution on the
43:35 - upper half plane with
43:36 - hue indicating log of this formula
43:39 - fascinating
43:40 - oh i definitely want to um
43:44 - keep this
43:47 - now was this what was it called shrom
43:52 - has anybody suggested this no so let's
43:55 - make a quick
43:57 - uh issue
44:00 - always looking for new like this summer
44:02 - hopefully is going to be the summer of
44:03 - lots of new coding challenges once i'm
44:05 - finished with this semester no not a new
44:08 - repository i've lost my mind here
44:09 - issues new issue
44:13 - um and
44:17 - from evolution
44:21 - came up in live stream on
44:24 - saturday february 13th 2021
44:28 - and dare i say
44:31 - copy image address how do you do this in
44:34 - markdown
44:35 - is it this
44:40 - no i forget how in github markdown you
44:43 - show an image
44:48 - let's see um
44:53 - image oh it's just the image in
44:55 - parentheses with the exclamation point
44:56 - before it of course of course of course
44:59 - the exclamation goes here and then
45:02 - rainbow hue strom
45:05 - loner image let's see great
45:09 - all right so we are going to submit this
45:11 - issue
45:15 - when a walk gets stuck search for
45:16 - unreachable regions and then backtrack
45:18 - until all of them are open
45:21 - interesting that's what octopus is
45:23 - suggesting
45:26 - uh okay let's see here whoops wrong
45:29 - wrong wrong spot uh not what i meant to
45:32 - go to
45:32 - uh all right so i'm i'm in this
45:34 - hamiltonian path
45:36 - so let me look up hand oop ah what
45:39 - happened
45:40 - what happened
45:43 - um self-avoiding
45:46 - walk hamiltonian path
45:54 - hamiltonian let me just
45:58 - this is what happens when you live
45:59 - stream with absolutely no plan
46:01 - whatsoever to do
46:03 - uh square filling self-avoiding walk
46:05 - this is interesting
46:06 - polynomial time that fills a square grid
46:10 - with a random hamiltonian path starting
46:12 - at a particular point see this
46:13 - example
46:18 - right interesting
46:22 - that it looks like exactly what i want
46:24 - to do
46:28 - the following people by umans and len
46:30 - hart gives a polynomial time algorithm
46:32 - for finding a hamiltonian cycle in
46:34 - solid grid graphs for general grid
46:37 - graphs the problem is
46:38 - np complete whoa
46:42 - look at this nathan klisby's generator
46:45 - as cited by
46:46 - whoa this so this is what i want to do
46:50 - wild um
46:57 - what did i use does anybody remember
46:58 - what i used for my maze generation
47:01 - um
47:07 - um this page is not appearing does
47:10 - anyone know what i used for my
47:12 - remember what i used for my maze
47:13 - generation coding challenge
47:15 - i feel like this is i'm redoing
47:17 - something i looked at years ago this is
47:19 - really cool
47:23 - there's also that like pivot algorithm
47:25 - what's the i
47:26 - i feel like when i was reading up on
47:28 - this there's a pivot algorithm
47:31 - let's look at this the pivot algorithm
47:34 - works by taking a self-avoiding walk and
47:36 - randomly choosing a point on this walk
47:38 - then applying symmetrical
47:39 - transformations
47:41 - on the walk after the nth step to create
47:43 - a new walk
47:45 - oh boy i don't know if i'm realistically
47:48 - going to be able to read a paper
47:50 - about a particular algorithm while i'm
47:52 - live streaming
47:53 - and then implement it depth first search
47:57 - think hilbert curve yeah i did all this
48:00 - mazes have splits on the path which you
48:02 - don't want okay that's why it's a
48:03 - different problem
48:04 - thank you
48:09 - depth first search i've done let's hold
48:12 - on
48:13 - depth first search coding train
48:16 - a breath ferch have i not done a depth
48:20 - first search on coding train
48:27 - self avoiding walk
48:31 - scaling concepts and graphs theory
48:34 - self-avoiding walk
48:37 - on fractal complex networks
48:42 - i just want to see a picture if i see a
48:44 - picture of what i want to do then
48:46 - that's the time to read the paper
48:49 - okay this is looking good
48:52 - whoa yeah ooh
48:57 - the two by two flower and the two by
48:59 - three flower in the first second and
49:00 - third generations
49:02 - each line is replaced by parallel lines
49:05 - of length u
49:06 - and v in construction of the next
49:08 - generation
49:10 - fascinating okay this is definitely
49:12 - something that looks like i would want
49:13 - to implement
49:14 - looks really cool self-avoiding walk
49:17 - okay
49:18 - uh oh look at this in euclidean space
49:21 - the number of paths of length k
49:23 - which is written as ck on r to the n is
49:26 - believed to behave as
49:28 - uh okay and the mean square distance of
49:32 - pathway
49:33 - okay so this is there's hypotheses
49:37 - about how many whoops paths there are
49:43 - boy i'm really ah i've really gone down
49:45 - a rabbit hole here
49:46 - on my live stream
49:52 - okay okay interesting i'm gonna have to
49:54 - come back and read this paper
49:59 - a star was for finding the shortest path
50:01 - yeah
50:03 - uh i used a star yes yes i use breath
50:06 - for i've done breath first search but
50:07 - these are all for
50:08 - finding the like looking to get
50:12 - from point a to point b i'm not looking
50:14 - to get from point a to point b
50:16 - i'm looking to get uh
50:20 - to hit every single point without ever
50:23 - revisiting a previous point which is
50:25 - quite a different problem
50:29 - um all right i might have to give up on
50:32 - this
50:33 - right now and move just on to making
50:36 - this more interesting pivot algorithm
50:38 - and the self-avoiding walk
50:41 - introduction all right i'm going to have
50:43 - to read more on this later and come back
50:45 - to it
50:46 - um because i'm this is you know i i
50:48 - think what
50:49 - when i see what when i find like some
50:51 - clear written
50:52 - pseudo code for an algorithm that's when
50:54 - i started to feel like i could implement
50:55 - it live
50:56 - i could definitely imagine making up a
50:58 - way that
50:59 - i would imagine a hamiltonian path
51:01 - working but i think actually what i
51:02 - would like to try right now
51:04 - is rather than let me close this one i'm
51:06 - just curious what happens
51:08 - if i allow it to go diagonally
51:11 - so what if i write a self-avoiding walk
51:13 - but allow it to move diagonally
51:16 - and then could using p5 vec
51:19 - p5 vector help me with that so that's
51:21 - what i'm going to go
51:23 - look at how perfect snake ai is written
51:26 - when the snake is at max size it is just
51:28 - a self-avoiding walk that is such
51:30 - a great point from chris manny but i'm
51:32 - kind of running out of time that i
51:34 - allowed
51:34 - to play around with the self-avoiding
51:35 - walk so let's try to at least expand on
51:38 - this a little bit
51:38 - um this is my exercise so one of the
51:40 - things that i wanted to note here
51:43 - that i did is that
51:46 - i made a class for any given
51:50 - step that the walker would take left
51:52 - right
51:53 - left right down up and i think what i
51:57 - would like to just sort of see
51:58 - is if i actually have this
52:01 - extend p5 vector
52:04 - [Music]
52:13 - what will this get me so i want to just
52:17 - first be i want to be using uh vectors
52:20 - in p5 so
52:21 - i've leaped bounds ahead of where i am
52:24 - in the nature of code course
52:25 - because part of the nature of code
52:26 - course will look at object inheritance
52:29 - so this is if this if you're kind of
52:32 - more of a beginner in p5
52:33 - and you are in javascript and haven't
52:35 - worked with objects inheritance this
52:36 - will seem quite strange to you
52:37 - but already existing in p5 is a
52:40 - class called p5 vector which has
52:44 - which stores a separate x y and z so
52:46 - rather than make my own called
52:48 - step with an x y i can just extend
52:50 - inherit from p5 vector
52:53 - and now though i did something sort of
52:55 - weird where i
52:56 - i called it dx and dy so i'm just going
53:00 - to look for
53:00 - wherever i'm using that
53:04 - and move this over to give myself some
53:06 - more room
53:07 - um cannot read property okay so where
53:10 - do i use the dx of the step
53:17 - ah here it is this should now be x and
53:20 - this should now be y
53:21 - and by the way so i go through all of
53:23 - this code and what it means and why i'm
53:25 - doing it in the actual coding challenge
53:27 - and then this is also x and this is also
53:29 - y
53:30 - okay great so i just wanted to do that
53:32 - because i want to be
53:35 - back to where i started so let me hit
53:38 - save but with vectors because now i
53:40 - think
53:41 - uh i guess i'm not doing very much to
53:43 - add vectors to this but i wanted to see
53:44 - what happens like will this just work
53:46 - the way i've written this did i write it
53:48 - in a scalable way
53:50 - where i can now add diagonal options
53:53 - yeah look at that i can't believe i did
53:56 - that like i just gave it
53:59 - i wrote it in such a way where i'm
54:01 - allowing it to go diagonally just by
54:05 - so now i can go diagonally
54:08 - now let me and i kind of in a way i want
54:11 - to take out this extra
54:14 - because i want to see what it looks like
54:16 - like this um
54:18 - and let's now also
54:22 - um let me add two more
54:25 - and yeah now i think oh boy
54:29 - oh so it can cross itself because
54:32 - it's not about not being able to it
54:35 - couldn't cross itself before because it
54:37 - could only go left right up or down
54:39 - but it's just about going to a spot that
54:41 - it hasn't been before and when it's
54:42 - allowed to go diagonally it can do that
54:44 - so what if now i go back to making this
54:48 - something like 10.
54:53 - whoa this see i this is pretty cool
54:57 - um the question is does this make it
55:00 - harder for it to succeed or easier for
55:04 - it to succeed
55:06 - i would think harder
55:10 - and shreyaas asks does extends in
55:12 - javascript refer to inheritance and yes
55:14 - it does
55:16 - let's allow it to
55:21 - um just do like a bunch more
55:27 - per frame where is
55:34 - yeah interesting
55:39 - craziness what if i give it a much
55:42 - bigger space
55:44 - to work with this i apologize that this
55:46 - hasn't really gone anywhere it was
55:48 - it's like a big curiosity of mine i
55:49 - guess i'm just bringing it up
55:51 - and maybe later i'll get all sorts of
55:52 - interesting comments on the video of
55:54 - things i can research or look at
56:00 - but i do find these patterns to be quite
56:03 - interesting i have to get lucky
56:05 - basically for it to go get pretty far
56:08 - let's um let's let it try a hundred
56:11 - thousand
56:12 - per frame
56:17 - i feel like there could be some
56:18 - interesting things in terms of playing
56:20 - with color here with this
56:22 - um i feel like this is kind of also like
56:26 - some kind of like alien hieroglyphics
56:28 - like i've discovered some strange alien
56:31 - language here
56:32 - uh
56:36 - it will never cover all the points if it
56:38 - goes diagonal i think so says udeep
56:40 - that's an interesting question
56:45 - right so simon is pointing out that
56:49 - there's a difference between
56:51 - a walk that visits every edge like that
56:54 - goes along
56:55 - every connection between the nodes
56:58 - versus visiting every vertex every node
57:03 - i did want to investigate this further
57:08 - um but i think maybe i'm gonna have to
57:12 - move on from this right now
57:17 - it could detect when it gets stuck in a
57:19 - cave and backtrack
57:20 - out yeah that's can it move in arcs okay
57:23 - i love this
57:24 - thank you all right let's so uh
57:28 - let's try this is a really really
57:30 - awesome idea
57:31 - um so the way that i'm actually
57:32 - rendering it is
57:34 - with um vertex and i could use curve
57:38 - vertex
57:43 - and look at this that is really pretty
57:46 - wild looking
57:50 - now interestingly what happens if i just
57:53 - go back to the original way that it was
57:55 - without the diagonal options and keep in
57:57 - curve vertex
57:59 - actually i'm kind of curious about that
58:01 - didn't
58:03 - well yeah i guess you just get a kind of
58:05 - wonky
58:06 - string moving around almost that has a
58:09 - little curvy so that adding the
58:10 - diagonals in
58:11 - it really gives it a much more strange
58:14 - quality
58:15 - um there's also uh what happens if i use
58:19 - um bezier vertex
58:24 - that didn't work oh because bezier
58:25 - vertex a bezier curve
58:27 - by definition is always four
58:30 - points so it's the two end points and
58:33 - two
58:33 - anchor points and two control points
58:38 - um i'm just curious what if i
58:41 - um go back to something i know it can
58:43 - solve
58:44 - so um
58:49 - yeah it's pretty interesting to see this
58:52 - path that it's trying to do
58:57 - and the other thing about curve vertex
58:59 - which i always forget about is
59:01 - the end points are entry and exit points
59:03 - of the curve
59:05 - so what i should do
59:08 - here is duplicate them so i should add a
59:12 - curve
59:15 - vertex for path index zero dot x
59:19 - path index zero dot y
59:25 - this is the path there we go
59:28 - so i have the opening spot and now
59:33 - i might also a path path dot length
59:36 - minus one so i get the n spot
59:44 - duplicated
59:46 - this is pretty wild um
59:49 - like i would love for it to finish just
59:52 - once
59:53 - but i think i might need to go back to
59:56 - [Music]
59:58 - um
60:00 - there we go wait why didn't it finish
60:02 - the curve
60:03 - i did something wrong ah i put it after
60:06 - n shape there we go so this is
60:09 - actually quite interesting because i
60:12 - didn't intend to do this but i just
60:14 - created
60:14 - uh like almost like a glyph designer
60:18 - wow this is really cool actually
60:21 - like this is not at all my intention
60:26 - this is what so first of all i am so
60:28 - excited right now
60:29 - because i felt like this is
60:32 - basically one of my worst live streams
60:34 - ever and
60:36 - in a strange way i just made something
60:38 - that i really
60:39 - love i almost feel like this is some
60:42 - kind of
60:42 - like stylegan ai generated glyph and yet
60:46 - it's just random walk self-avoiding
60:49 - random walk paths and they're not it
60:50 - doesn't actually self-avoid and that it
60:52 - crosses itself
60:54 - that hits every spot now if i could
60:57 - optimize this algorithm to do it
60:59 - higher resolution like i really want
61:02 - like could i can i double it
61:07 - i mean the thing that i could do is not
61:09 - worry about
61:10 - i could just let it get stuck and not
61:12 - backtrack
61:15 - so if it's stuck like what if i say no
61:17 - loop
61:19 - just curious to see what i yeah so this
61:21 - is actually quite nice
61:22 - because i could just let it get stuck
61:24 - i'm generating these paths
61:31 - these are really quite amazing what
61:34 - could i do with
61:35 - color with this
61:39 - well you know this is my
61:43 - sort of like the limits of my ability to
61:46 - design with color
61:48 - but i'm going to say color mode
61:51 - hsb and then
61:54 - what if i were to say
61:58 - and
62:02 - oh i like watching it draw it also
62:04 - that's much more fun and
62:06 - and i think the dot at the end should go
62:08 - away
62:16 - right this yeah and i wonder if it
62:20 - should start at a random point
62:22 - right it's always starting in the top
62:24 - left so what if i have it
62:25 - start in a random point
62:29 - i had no idea that this is where i was
62:31 - going to go
62:32 - um so the spot always starts at
62:36 - grid zero zero so um let's do
62:42 - let's start at a random spot each time
62:49 - uh and so this is where we're going to
62:51 - start let's see if that works
63:00 - i feel like it's why is it losing the
63:01 - last one
63:06 - do you see that like it's oh i think
63:08 - because it's it deletes it because it's
63:09 - still doing
63:10 - one aspect of the backtracking
63:13 - um so let's not
63:17 - let's not backtrack yeah okay
63:20 - so this is my glyph generator
63:29 - i was going to add color to it right so
63:32 - um where is the color so if i have color
63:35 - mode
63:37 - hsb and i say like 100
63:40 - 255 255 100 is that how oh no no
63:44 - these are 100 100 oh no
63:47 - no sorry 100
63:54 - oh it goes up here sorry this is for
63:57 - that point
64:02 - okay so it's green good so this should
64:05 - be
64:08 - um oh this should be in here
64:13 - and then um let i
64:16 - equal oh let oh
64:19 - so i would like now i need a counter
64:21 - here so let's do
64:23 - let i equal i is less than path dot
64:27 - length
64:28 - i plus plus
64:32 - and then uh spot
64:36 - is path index i
64:42 - and then the hue is just out of
64:44 - curiosity i modulus
64:47 - modulus 360.
64:51 - oh i can't do oh it won't do a different
64:55 - color
64:56 - for each segment that's weird
65:01 - it's just doing it for the whole thing i
65:03 - mean that's
65:05 - why is that i thought i could do
65:07 - different colors for different segments
65:15 - so that's unfortunate i mean i know how
65:18 - i could do this by just drawing manual
65:20 - curves
65:23 - well
65:27 - am i missing something
65:32 - different color different segments
65:35 - begin shape and shape
65:40 - uh does this work in processing
65:44 - if like all right so i always thought
65:47 - this is how it worked let me open up
65:48 - processing
65:59 - yeah it's one shape somehow i thought
66:00 - you could internally
66:04 - change i know how i would do it with
66:05 - lines because i could just go back to
66:07 - drawing lines but
66:08 - let me just check how processing works
66:19 - so i'm going to make some vertices here
66:24 - it's going to make a quick triangle
66:34 - okay it's a quick triangle i'm going to
66:36 - say close
66:43 - actually i'm not going to say close
66:48 - stroke weight 8
66:51 - and stroke 0.
66:56 - oops
66:59 - no fill stroke 255 this is what i meant
67:02 - to do
67:03 - okay i'm just testing this so if i were
67:06 - to say here
67:09 - stroke 255 0 0. i'm just gonna
67:12 - i thought i could do something like this
67:20 - and it would interpolate the colors i
67:23 - don't know why i always imagined you can
67:24 - do this
67:27 - okay apparently not
67:31 - if you do a fill does it do it okay it's
67:33 - all the last color
67:38 - maybe you have to use like p shape in
67:40 - processing
67:45 - yeah i completely imagine this
67:49 - so i i i change
67:52 - renderer processing will let you
67:54 - multiple colors in one shape
67:56 - yeah but um oh vary the line
67:59 - thickness so that's the other can i vary
68:01 - the line thickness between vertices
68:08 - i don't think so
68:12 - oh well now i have a fill
68:20 - what happened to my okay
68:24 - yeah no so i it just takes
68:27 - it just does whatever the last thing is
68:31 - so i would have to manually draw them as
68:34 - separate
68:36 - curves the way what happens if
68:40 - i allow it to have a fill
68:51 - it's pretty interesting
68:55 - gradient could be it create a new so i
68:58 - could use arcs
69:02 - yeah i could use arcs i i could that's
69:05 - an interesting idea
69:06 - i do sort of like where this ended up
69:07 - though so i'm kind of fine with it
69:10 - um
69:14 - i i think i'm going to
69:17 - i'm going to let other people explore
69:19 - color on their own
69:22 - and
69:25 - i'm going to get rid i'm going to say
69:29 - where did i put the color
69:38 - but it is interesting to note how i can
69:41 - have a
69:41 - fill
69:46 - um
69:51 - i don't think having the clothes is
69:53 - quite unnecessary i think
69:55 - in the phil i'm going to go back
69:57 - interesting to explore
69:59 - but i um
70:03 - all right and one thing could be to have
70:05 - it keep going until it can like get back
70:06 - to itself so it always creates like a
70:08 - closed
70:08 - shape but i'm going to go back to no
70:14 - fill
70:16 - and
70:20 - just generate these patterns
70:24 - okay um
70:29 - i will save you could use a gradient i
70:32 - don't know about this gradient
70:35 - uh is there a gradient fill or stroke
70:37 - within
70:39 - uh p5 this is not something i'm aware of
70:45 - by the way what i want to do so first
70:48 - let me link this code
70:50 - where i wanted to go in the um second
70:52 - half of today's live stream i'm going to
70:54 - take a break and get to the second half
70:55 - now
70:56 - um so by the way if you're wondering
71:00 - what i'm showing you here this is the
71:01 - coding train discord
71:03 - i'll put post a link to it in the chat
71:05 - um this is
71:06 - this is a where this is where the
71:07 - community gets together and chats
71:09 - so if you need help with code or want to
71:11 - join the community and check out
71:12 - different things going on in the discord
71:13 - i highly encourage you to come and join
71:15 - um but also i tend to post like links to
71:18 - the code and different things that i'm
71:19 - doing here in this channel
71:21 - under live called links i also haven't
71:23 - been doing a good job of this but
71:25 - if you're looking for to get
71:26 - notifications
71:28 - um where do i find this under videos
71:32 - you can subscribe to this notifications
71:35 - role
71:36 - and then you will get notifications
71:37 - whenever i post a new video
71:39 - or schedule a new live stream so you can
71:41 - see this morning at 8 34 am
71:44 - i scheduled the live stream for today
71:46 - this is the wrong thumbnail
71:47 - ignore that um and so if you're if you
71:50 - want um notifications i think you just
71:51 - do exclamation point
71:53 - subscribe as a command bot command in
71:56 - the discord
71:57 - one thing i will say about the discord
71:59 - if you're about to join
72:01 - we're trying to see if i could get
72:03 - discord partner
72:04 - and you have to reach a certain number
72:06 - of members with a certain amount of
72:07 - engagement
72:09 - and so it looked it our engagement
72:11 - numbers go down if a lot of people join
72:12 - but never post
72:13 - so again don't post if you don't want to
72:17 - but if you feel so inclined to join post
72:19 - an introduction
72:21 - engage a bit with the community that
72:22 - will boost the numbers a little bit
72:24 - maybe i can get um
72:25 - discord partnership all right so
72:28 - where is um there is a gradient function
72:32 - in p5
72:33 - that's an example go
72:36 - set gradient
72:40 - is this a function in p5 or just no this
72:42 - is just an example
72:43 - of drawing grading for the line okay is
72:45 - there like a gradient fill
72:51 - prim's algorithm oh yeah i've used
72:54 - prim's algorithm i did a um
72:56 - a video on prim's algorithm
72:59 - unfortunately i did it kind of way
73:01 - before i was doing the coding challenges
73:04 - um and it's sort of buried oh but here
73:06 - we go
73:07 - yeah and like the code's not here i
73:09 - wonder if i can find it so
73:11 - yeah like you can see how this is so old
73:14 - that um
73:15 - it's using this old deprecated desktop
73:17 - editor i look
73:18 - quite different there but yeah i should
73:20 - revisit prim's algorithm
73:22 - um um as something to look at
73:25 - through for this as well
73:28 - um but i just i never occurred to me to
73:31 - render
73:32 - with curve vertex um the
73:36 - path through a graph space
73:39 - so this is quite nice all right
73:43 - all right so i need to take a break so
73:46 - uh it's time for me to
73:47 - um thank today's sponsor um curiosity
73:51 - stream i have something
73:52 - fun that i'm gonna try so um just give
73:55 - me a second here
73:57 - i gotta pull this up
74:00 - um so i have a wonderful little 30
74:03 - second
74:03 - spot uh from curio oh wait hold on a sec
74:06 - oh
74:09 - let's see here oh i messed i messed up
74:11 - um
74:13 - well this is not the sponsor segment yet
74:15 - because i'm totally having a technical
74:17 - issue how do i uh studio mode i need to
74:20 - do something real quick
74:22 - uh and then welcome it's not oh yeah
74:33 - why all right this is gonna play for a
74:39 - [Music]
74:40 - second
74:42 - okay hold on now we're gonna come back
74:44 - out of studio mode
74:45 - and we're gonna go here welcome to
74:50 - no not here not here not here where am i
74:53 - back to here no here here okay
74:56 - i'm really excited about this sorry um
74:59 - so
74:59 - i have this the sponsor today is
75:01 - curiosity stream and i'll talk a bit
75:02 - about curiosity stream right now
75:04 - um and you can go check out curiosity's
75:06 - stream at curiositystream.com
75:08 - codingtrain the discount by the way is
75:11 - for today and tomorrow
75:12 - only for 41 then it will revert back to
75:14 - i think the usual 26
75:16 - but um i have a quick um ad i want to
75:18 - play and
75:19 - um last week when i played this 30
75:21 - second spot um
75:23 - the i got a content id claim on the live
75:25 - stream
75:26 - so just from the audio so i am going to
75:30 - um narrate it i i wrote down the script
75:33 - and i will be the voice of the spot now
75:35 - this is very exciting
75:37 - here we go
75:40 - from the founder of the discovery
75:42 - channel comes a new independent
75:44 - streaming service
75:45 - curiosity stream home of groundbreaking
75:50 - documentaries
75:52 - an award-winning original series
75:57 - follow your curiosity
76:04 - this is curiosity stream
76:09 - okay um coming back to me here all right
76:12 - i don't know that
76:13 - might have been a total total fail there
76:16 - but i'm excited to tell you about
76:17 - curiosity stream so i
76:18 - i've talked about this before i'm part
76:20 - of a group of educational creators that
76:22 - teamed up to build a platform where
76:23 - creators don't have to worry
76:25 - about demonetization or the youtube
76:26 - algorithm and it's called
76:28 - nebula um we're partnering with
76:30 - curiositystream um nebula has ad-free
76:33 - content and experiments
76:34 - with different and experiments with
76:35 - different kinds of content so if you've
76:37 - never seen um nebula
76:39 - i'm going to just open up the page here
76:41 - nebula is
76:42 - a streaming service that's owned and
76:44 - operated by
76:45 - a group of creators they have nebula
76:47 - originals which are not available on
76:49 - youtube there's even nebula plus now
76:51 - that a lot of creators are doing with
76:52 - extended cuts and extra footage um
76:56 - and so um there's a nebula originals
76:58 - like tom scott money
77:00 - um and so now why am i why why is the
77:02 - sponsor curiosity stream but i'm talking
77:04 - about
77:04 - this streaming service called nebula
77:06 - well the reason
77:08 - is um curiosity stream loves educational
77:12 - creators and supporting more educational
77:14 - content so
77:14 - nebula worked out a deal where if you
77:16 - sign up with this coding train link
77:18 - that's at the top of the screen
77:20 - not only do you get access to curiosity
77:22 - stream but you also get nebula for free
77:25 - so this is not a trial this you're going
77:27 - to have this forever as long as you're a
77:28 - curiosity stream member
77:29 - so for a limited time actually today and
77:31 - tomorrow only curiosity stream is
77:33 - offering
77:34 - 41 off their annual plan
77:37 - that's less than 12 if my math is right
77:40 - per year
77:40 - for both curiosity extreme and nebula
77:43 - right it's the best deal in streaming
77:44 - that's the entire year
77:46 - it's like one dollar a month i think if
77:48 - i'm doing the math correctly
77:49 - um so uh you know a curiosity stream
77:52 - just to
77:53 - um open it up for a second here i'm just
77:56 - going to bring up the website
77:57 - so you can see sort of a range there's
77:59 - thousands of documentaries there you go
78:01 - um and um you can this weekend only
78:04 - get the 40 off you can see you can't see
78:06 - it because i have the banner up there
78:08 - um and now you can see it there get 40
78:10 - off um through the link curacao stream
78:12 - dot com slash coding train
78:14 - um it's a great way to support um my
78:17 - channel
78:17 - coding train and educational content for
78:19 - a whole year um since
78:21 - you know these days a lot of us are
78:23 - staying inside a lot more than usual
78:24 - you might as well be soothed by david
78:26 - attenborough's voice or watch chris
78:28 - hadfield in the space station
78:29 - or just watch tom scott torture your
78:31 - favorite youtubers on
78:32 - nebula the recommendation that i would
78:34 - give is dr hannah fry has a wonderful
78:36 - documentary series
78:38 - about maths on curiosity stream that
78:40 - i've been following and watching
78:41 - it's a really excellent i'm a huge fan
78:43 - of hannah fry
78:45 - so um that is something one that i would
78:47 - particularly recommend so click on the
78:48 - link in the description
78:49 - it's pinned in the chat um and i hope
78:52 - you check it out
78:53 - i'm going to take a short break if you
78:54 - want to go poke around and look at it
78:56 - right now maybe sign up and then i'll be
78:57 - back
78:58 - in two or three minutes to look at
79:00 - seeing if i can take my example
79:03 - and bring it over to see if i can render
79:05 - it from node
79:06 - we'll see if that works okay
79:15 - [Music]
79:16 - i'll be back in just a few minutes
79:24 - [Music]
79:40 - [Music]
79:47 - [Music]
79:48 - do
79:50 - [Music]
80:02 - do
80:04 - [Music]
80:16 - so
80:19 - [Music]
80:30 - do
80:35 - [Music]
80:43 - [Music]
80:58 - do
81:01 - [Music]
81:12 - [Music]
81:33 - [Music]
81:44 - [Music]
81:59 - [Music]
82:08 - do
82:12 - [Music]
82:20 - [Music]
82:30 - all right i'm back here let me so people
82:33 - were asking in the chat
82:34 - um who i was talking about so this is
82:36 - the series that i was watching
82:38 - um it's a series called magic numbers
82:40 - and this particular episode
82:42 - um dr hannah fry uh goes down to zip
82:45 - wire to learn more about newton's ideas
82:47 - on gravity so highly related to the
82:49 - i was watching this one in particular
82:50 - because it's related to the nature of
82:52 - code so
82:53 - i just wanted to like highlight that
82:55 - again thank you to curiositystream for
82:57 - your sponsorship
82:58 - you can get it once again this weekend
82:59 - only for the whole year at 41
83:02 - off plus you get nebula too okay um
83:05 - returning back to what i am here to do
83:09 - which is some coding stuff um
83:13 - let me close all these windows and get
83:16 - to here so this
83:17 - is my p5 sketch and what i would
83:20 - like to make happen is
83:23 - if i'm in discord
83:27 - i want to do something like type a
83:28 - command exclamation point
83:31 - generate and then i want to see
83:35 - come back to me
83:38 - a um an image
83:42 - that i generated obviously so so this is
83:44 - what and i've done this before and i
83:46 - know how to do this
83:48 - not with discord but i've done a series
83:50 - about doing this with a twitter bot
83:52 - to have a twitter bot generate a
83:55 - random walk image for example one one
83:58 - per hour
83:59 - and um the way that i did that
84:03 - is by running processing behind the
84:05 - scenes
84:06 - but it's quite tricky um to deploy
84:10 - processing generically to any sort of
84:14 - server environment
84:15 - it's got to have java you often have to
84:17 - set up a bunch of weird
84:18 - settings to like have it run in headless
84:20 - mode with no
84:21 - like windowing system so i would really
84:24 - like to look into
84:25 - and i know this is other people have
84:27 - looked into this and maybe i'm just
84:28 - missing like
84:29 - the post on the processing forum that
84:30 - explains how to do this precisely
84:32 - but i would like to look into um
84:37 - how to do this and so i think what i i
84:40 - think a way to do this would be with
84:41 - node canvas
84:44 - so this particular package is it is this
84:48 - actively it's from automatic industry
84:50 - interesting
84:51 - is this actively maintained i think
84:54 - chromium might be another way to do this
84:57 - um some kind of chromium-like thing um
85:00 - oh do i have to like install or to all
85:02 - sorts of extra weird things
85:04 - i can just say npm.install can oh i
85:06 - don't need to compile it
85:07 - okay build from source if you don't have
85:11 - supported os
85:12 - or processor architecture so what's
85:13 - supported hopefully
85:15 - whatever i use would be supported and
85:17 - then i can make a canvas
85:20 - and draw to it all right let's just try
85:23 - this
85:24 - the question is could i then once i do
85:27 - that
85:28 - could i use p5
85:33 - anybody have any ideas of something else
85:37 - i should try um okay
85:42 - so let's i'm gonna start just a new node
85:45 - project
85:46 - i will you know i don't know that i'll
85:47 - get to integrating this with the discord
85:49 - bot today
85:51 - um this by the way where where is this
85:53 - coming from this is all part of my
85:55 - project to generate to give everybody in
85:58 - the world or
85:59 - at least one million people in the world
86:02 - their own random number from this book
86:04 - that is then paired with a custom random
86:07 - walk design
86:09 - using the sequence of numbers in this
86:11 - book starting with their number
86:13 - and then have that etched onto a train
86:15 - whistle
86:16 - what's gonna happen this is what my life
86:19 - has become
86:20 - all right so do i want to install let's
86:22 - just remind me later about this let's go
86:23 - to uh the desktop
86:25 - and let's make a directory node cam
86:28 - let's just call this uh um
86:32 - walk generate walker generate bot
86:35 - i don't know let's go yeah sure generate
86:37 - bot
86:39 - uh and let's do uh make this a node
86:42 - project
86:45 - and open this up in visual studio code
86:51 - and uh make
86:54 - a file what is going on here
87:01 - new file no
87:05 - why is this not safe i'm just gonna do
87:07 - something really weird here just ignore
87:08 - me
87:10 - okay um so then let's just try
87:16 - npm install canvas
87:21 - let me look at the documentation here
87:22 - npm install canvas
87:25 - oops not here
87:29 - my sit am i sitting in front of the code
87:30 - i might be
87:35 - what oh
87:40 - all right let's see what happens this
87:41 - might take a while if it's got to
87:42 - install some weird um
87:46 - dependencies
87:52 - all right hold on i'm getting fun
87:53 - playing
87:59 - oh discord.js.guide has a neat guide on
88:02 - how to install canvas
88:04 - okay that's good for me to look at uh
88:07 - whoops
88:11 - um discord.js
88:15 - guide canvas
88:20 - oh interesting interesting so this is
88:24 - definitely what i want to do uh
88:27 - basic image loading
88:34 - canvas oh this is great to see thank you
88:36 - this is super useful for me
88:38 - so this is good okay awesome um
88:42 - you know i could just do this with
88:43 - native canvas i'm just using
88:45 - stroke and curve vertex so i don't
88:47 - necessarily need i would like to have p5
88:50 - but i think that i can get by without it
88:53 - um so let's
88:58 - let's go here and
89:02 - let's just try this example for a second
89:05 - so
89:06 - i don't want this example exactly
89:10 - so i don't want load image i'm not going
89:12 - to do that i'm going to create a canvas
89:14 - 200 200 and get a context that's 2d
89:18 - um let's write on this is fine
89:22 - let's draw a line under the text
89:26 - sure let's skip the image
89:33 - so if i just run this right now
89:38 - and let me make this somewhere where you
89:40 - can see it
89:45 - okay it ran so how would i use
89:48 - this oh
89:52 - so i want it's gonna save this to a file
89:55 - but i guess what i can do
89:57 - is i can do canvas to buffer and send it
90:00 - as a
90:01 - message attachment but what if i just
90:04 - wanna before i add the discord bot i
90:06 - want to just like look and see what i've
90:07 - got
90:08 - so how do i node canvas save
90:12 - image how to create and save an image
90:16 - with node.js and canvas
90:21 - uh install canvas get the context fill
90:24 - the rectangle
90:25 - all this stuff okay hey i know how to
90:28 - draw to it
90:30 - right buffer to buffer right for oh oh
90:33 - how easy
90:34 - oh this is this is going to actually be
90:36 - much easier than i thought i mean
90:38 - without minus the part that i don't have
90:40 - access to p5
90:42 - there's got to be a way that i could
90:43 - easily use the p5 functions though
90:46 - i could use p5 as a node module um i'm
90:48 - getting that comment
90:50 - um i will see if i can do that
90:54 - um the question is will that be
90:56 - compatible
90:58 - with this i guess maybe if i use
91:00 - instance mode with p5
91:02 - so um
91:07 - let's try this
91:13 - okay oh i need to um require
91:19 - fs
91:29 - oh this is going to be good for whenever
91:30 - i eventually remake those twitter bot
91:32 - videos
91:35 - all right awesome okay
91:38 - amazing so
91:42 - now the issue is make
91:46 - my own random walk design here the thing
91:49 - is
91:51 - what i'm doing is very little
91:56 - in terms of drawing so let's just
91:59 - let's not worry about p5 right now let
92:01 - me see if i can make this work and i'll
92:03 - i'll figure out coming back to p5 later
92:06 - um i am going to go to my i mean should
92:09 - i do
92:11 - i suppose i mean the idea was to try to
92:12 - like keep this
92:14 - weird algorithm pattern thingy
92:17 - this seems like a little bit much to do
92:20 - right now
92:21 - let's just try to get this to work with
92:23 - a regular random walk
92:25 - so um
92:30 - like where uh random i have that random
92:33 - whistle project
92:37 - [Music]
92:38 - um which i think could be a good place
92:41 - to start
92:44 - i'll just grab that code
92:50 - [Music]
92:52 - um
92:55 - which does this
93:02 - all right this is very silly what i'm
93:03 - doing but the point is
93:06 - anything can go here i'm just gonna do
93:09 - a random walk so i need to
93:13 - i need to learn uh
93:16 - html5 canvas so
93:20 - to do can uh fill rectangle
93:24 - uh canvas fillrect method oh i hate
93:29 - w3schools i don't know why
93:31 - it just it makes me crazy that uh so
93:33 - let's go here fill rectangle x y
93:36 - width height okay so this should be
93:40 - um context fill rectangle
93:45 - 0 0 200 200
93:50 - so let's let's make a variable with
94:01 - let's put these here
94:05 - so how do i set the color examples
94:09 - fill style equals green okay
94:14 - so i can do this fill style equals
94:17 - black
94:21 - let's comment all this out and let's see
94:24 - if this works
94:29 - all right do i have great okay great
94:32 - there's our png
94:33 - excellent now
94:36 - i'm going to make a variable x and y
94:44 - with divided by two height divided by
94:46 - two
94:50 - oh okay i'm gonna have to work on my
94:52 - random number generator
94:54 - let's not worry about the random seed
94:56 - right now
94:58 - um and i'm saying context
95:02 - fill oh that's the
95:06 - wait a second here oh because it's white
95:10 - i i forgot that that's how i designed it
95:12 - a white background
95:14 - and then fill style
95:17 - equals black
95:21 - let's see and then
95:26 - and i would say context
95:29 - oops fill rectangle
95:36 - x y step
95:39 - size step size okay
95:45 - then stroke weight
95:49 - all right let's skip that no stroke
95:52 - weight
95:54 - random okay so then i need to say math
95:59 - math.random times 4
96:01 - and floor math.4 with that that would be
96:04 - without p5
96:06 - move x and y and
96:10 - let's see do is this
96:13 - is this right let's try running this
96:19 - okay
96:23 - look at that is that my random walk
96:26 - i think so but um what was the
96:30 - dimensions i'm using in the random
96:32 - whistle project because the dimensions
96:34 - are specifically related to
96:37 - yeah um let's do this
96:40 - this is a little bit silly but let's uh
96:46 - i mean
96:49 - why not make it high resolution
96:53 - all right let's see what happens now
96:58 - so i made random nodes
97:01 - there we go look at that i generated
97:03 - that with node
97:05 - cool and this is what's going to get
97:07 - etched onto the whistle
97:10 - um so now i just need to add this to the
97:14 - discord bot i'm just looking at the chat
97:21 - here
97:23 - um all right
97:28 - okay so now oh boy
97:33 - can i really make this i've got oh i've
97:35 - got a half an hour here
97:36 - i think i can make this into a discord
97:38 - bot so we got to go to the coding train
97:41 - discord bot
97:48 - uh discord bot choo choo oh and i'm in
97:50 - this number database
97:52 - branch oh and i forgot that someone help
97:56 - okay
97:57 - so let's go to a new branch
98:00 - uh so i'm gonna go back to maine
98:04 - uh random generator
98:07 - and i don't know if david or kobe or
98:10 - somebody who's a moderator in discord
98:12 - can lock down the um
98:17 - bot testing channel again but that might
98:20 - be nice
98:21 - and i am going to go on to glitch where
98:23 - i have this deployed
98:28 - um choo choo bot discord and i'm going
98:32 - to turn it off
98:34 - on discord there really needs to be a
98:38 - button on discord
98:39 - i'm not on glitch to just disable an app
98:43 - but as those of you who've watched the
98:45 - way i disable it
98:46 - it's just by commenting it out um
98:50 - so let's head on over to
98:53 - uh discord and i'm gonna uh throw
98:56 - caution to the wind here
98:57 - and go to this bot testing channel
99:01 - i don't think i don't know if we have
99:02 - any discord moderators who are actually
99:04 - like actively
99:06 - paying attention right now
99:15 - so let me see if i can do this i'm going
99:18 - to move over to here
99:23 - um and
99:27 - let's see if i can do this i just want
99:29 - to go to bot testing
99:34 - and i'm just checking and people are
99:36 - typing in there so let's do edit channel
99:39 - permissions everyone
99:42 - does not have the ability to send
99:44 - messages anymore
99:47 - okay so i think um
99:51 - i think we are good to go
99:55 - oh nico is typing maybe because you're a
99:57 - station manager
99:59 - um
100:03 - should be oh nico did it should be
100:04 - locked now okay um
100:06 - let's just okay let me re-enable
100:10 - the bot
100:13 - make sure it still works
100:18 - okay all right i'm coming back to
100:21 - uh there all right so here we go so i'm
100:23 - on decoding train discord
100:25 - i am in the bot testing channel and if i
100:29 - say the two commands that are active as
100:30 - i say choo choo
100:32 - i get a message back and if i say gif i
100:35 - give it a keyword
100:36 - i get a gif back okay
100:40 - so now the next step that i need to do
100:43 - is disable the bot on glitch
100:47 - run it here and hopefully it's working
100:51 - now i'm gonna make sure it's still
100:53 - working uh
100:54 - gif okay so it's still working and
100:58 - i assume it came from here i guess i
101:00 - don't have any console logging going on
101:06 - all right um
101:09 - so now i need to install
101:15 - i need to get this going here so where
101:17 - where am i here
101:18 - uh let's go back let's um
101:23 - oh npm install canvas oh no i need to
101:25 - give make it a brand get branch
101:27 - uh image generator image generation
101:31 - get checkout image generation
101:34 - okay now i will
101:37 - uh npm install canvas
101:42 - right so i want a new command
101:49 - oh i need to open up this
101:57 - all right so this is this is all in
101:59 - preparation of me eventually adding this
102:02 - to my
102:02 - discord bot tutorials so i'm just going
102:04 - to sort of work it out
102:05 - now i want to add a command
102:10 - which will be called oh no okay in
102:12 - commands we'll add a command called
102:14 - generate.js
102:17 - and let's just go to chuchu.js and
102:21 - copy that in here
102:26 - and i'm just always going to say reply
102:29 - generate
102:31 - so now where in commands.js
102:35 - i need to add generate and add
102:38 - a require so i should have a new command
102:43 - here
102:44 - just called generate and let's see oops
102:47 - and this is called generate
102:49 - is that like okay yeah all right so i
102:51 - hopefully now
102:52 - if i run the bot and let me let me just
102:55 - run nodemon so it just restarts
103:00 - okay so i'm running the bot now locally
103:03 - on this laptop
103:05 - and if i type in here
103:09 - choo choo i get my message back
103:14 - interesting is it running in two places
103:16 - i'm running it in two places
103:18 - i'm running it in two places cancel that
103:20 - one i got two messages back
103:22 - now let me type generate uh
103:28 - why didn't i see a reply oh i got an
103:31 - error at least i got an error what did i
103:32 - miss
103:34 - replies is not defined well didn't i
103:37 - have replies in there still
103:40 - oh i forgot that this is here okay great
103:43 - so this is good oh no no no i forgot
103:45 - that i have nodemon going so restart it
103:50 - automatically
103:52 - that's weird
103:56 - oh was it not running yay okay
104:00 - so that works so now
104:03 - i believe this is really as easy as
104:06 - let me get my all of this code
104:13 - and i'm going to write a function
104:15 - generate
104:16 - image and then instead of
104:20 - writing it to a file i'm going to say
104:22 - return
104:23 - buffer and then here
104:27 - there was that discord guide
104:31 - attachment so i think i should be able
104:35 - to
104:35 - just
104:39 - do this now attachment
104:43 - is okay so let's say
104:46 - constant buffer equals
104:49 - generate image
104:52 - and let's put this stuff at the top
104:57 - and i actually don't need the file
104:58 - system i'm not going to save it to a
105:00 - file
105:00 - that's an interesting idea so
105:04 - constant buffer equals generate image
105:08 - then create a new message attachment
105:11 - with that buffer
105:12 - and call it uh random walk
105:18 - walk.png then say
105:24 - here is your random walk what's member
105:28 - is that like the person's name um
105:32 - you know what i'm not going to bother
105:34 - with that
105:36 - um send an attachment
105:40 - sen oh yeah and i need to say
105:42 - message.channel send
105:46 - what is the chance that this actually
105:48 - just works
105:56 - restarted
105:58 - typing generate
106:03 - well i got an error
106:07 - discord is not defined at
106:12 - generate.js line six
106:15 - new discord message attachment
106:18 - so what am i missing here in terms of
106:21 - the require
106:23 - i need to require discord.js okay
106:26 - very reasonable
106:30 - um let's try that
106:37 - this is gonna be really exciting if this
106:38 - works
106:42 - oh my god oh
106:46 - is it is it ready okay
106:49 - basically got it oh as you know viewers
106:51 - watching
106:52 - you want to bring me a cat
106:56 - uh this is greta she's about to appear
107:00 - in front of the camera
107:01 - she didn't auto focus on her she was
107:03 - very blurry
107:06 - i'm being brought a cat uh this is greta
107:09 - oh my god she is really attached to me
107:11 - right now oh okay okay okay
107:12 - here let's let's bring her a little
107:14 - closer um hello grandpa
107:16 - she is my valentine you are my valentine
107:21 - she's a very very very uh patient
107:24 - and tolerant kitty cat so as you as i've
107:28 - mentioned before my kids take a baking
107:29 - class on saturdays between 1
107:31 - and 3 p.m what did you make today
107:35 - chocolate truffles that sounds good and
107:37 - they're ready so i have to go downstairs
107:39 - to eat the chocolate truffles i will be
107:41 - down in 15 minutes
107:43 - um coming back to over here
107:47 - this is amazing that this worked
107:53 - um i am very excited to demonstrate this
107:57 - to my nature of code class
107:59 - so now what needs to happen is
108:02 - that any member well
108:06 - all right so there's i i what's next
108:09 - here
108:10 - i don't know how to even like proceed
108:12 - with this
108:14 - um i just like blowing my mind that this
108:17 - is now possible
108:18 - and it was so much easier than i
108:20 - imagined or it could
108:22 - it would be much easier if i could make
108:23 - this work with p5
108:26 - so how hard would that be
108:32 - this is a great start so first let me
108:33 - just commit this
108:38 - um so let me just add
108:41 - basic uh canvas image generation
108:44 - i can't believe how i'm just like for
108:47 - some reason in my head
108:48 - this was going to be kind of like
108:49 - basically impossible to do
108:51 - um and this was much easier than i
108:54 - thought
108:55 - um okay so now let me get push origin
108:58 - image generation
109:01 - so this is i don't want to deploy this
109:03 - yet because i have to think about more
109:05 - how this is going to work
109:09 - but um so
109:14 - generate random walk pattern
109:17 - uh this branch is where
109:21 - i am working on the random
109:24 - walk pattern that will be generated
109:28 - according to the uh
109:34 - um members assigned
109:38 - random number oh god what
109:42 - what am i doing all right so that's
109:44 - there
109:45 - i'm gonna leave that there for right now
109:46 - i'm not gonna merge it
109:50 - what is it that i want to do i wanna see
109:52 - if i can get this to work with p5
109:54 - because i would really like
109:57 - to be able to
110:02 - make examples that are direct ports of
110:05 - my p5
110:06 - stuff so
110:10 - people are telling me that i can just do
110:12 - that p5 is available as a node module
110:21 - so this is the actual p5 official p5 yes
110:25 - project and i can npm install it but can
110:29 - i work with it
110:30 - in node
110:34 - um well let's just see what happens
110:39 - uh well let's try npm install p5
110:48 - now if i were to say
110:56 - well i should go back to you know what i
110:58 - should go back to my
110:59 - other test let's go back to this
111:03 - test here so i'm going to go out of the
111:05 - discord bot code
111:07 - and just go right to this um let me move
111:10 - this over so it doesn't cover any of the
111:11 - code
111:12 - let me go let me let me try it with this
111:14 - so bear with me
111:16 - i got 10 more minutes here um
111:22 - generate bot okay
111:28 - so this is i now have
111:32 - p5 installed
111:36 - then i can say const p5 equals require
111:39 - p5
111:45 - console.log so i definitely need to use
111:48 - instance mode but how do i tie
111:51 - p5 to
111:55 - create canvas's require canvas
111:59 - can i assign can i create the canvas
112:03 - with node canvas and then use the p5
112:05 - functions to operate on it
112:07 - how would i do though uh oh we have a
112:10 - new member
112:11 - perfect timing i've been really
112:14 - plugging the membership stuff but wrong
112:17 - wrong button wrong button
112:20 - welcome shop i don't even know if you're
112:22 - somebody who's watching right now
112:24 - you might just be some random person oh
112:26 - no chef is watching
112:30 - you have just joined the coding train
112:33 - which means
112:34 - you will now have your very own random
112:36 - number assigned from this book
112:46 - 1485 that is row 6215 on page 125
112:51 - column three
112:55 - okay um
113:00 - so how all right let what if i
113:08 - i mean there is somebody made let's look
113:11 - at this
113:12 - node p5 no no no no canvas
113:16 - no this is um canvas p5
113:20 - node i've seen this
113:23 - is it p5 node
113:27 - this okay it's this that i'm looking for
113:29 - but it hasn't been
113:31 - updated in a while
113:35 - so how does this work
113:38 - basically
113:42 - oh it's the whole p5 library
113:45 - but it's requiring some other
113:49 - canvasy thing um got to be a way for me
113:54 - to do this
113:57 - does anybody know
114:04 - and nico's asking about the mongoose
114:06 - pete pull request i will i will
114:08 - uh attend to that before i sign off
114:10 - today
114:11 - um the question
114:14 - is
114:17 - all right well what happens when i just
114:19 - console log p5 the whole thing is there
114:20 - right
114:26 - this is ridiculous what i'm about to do
114:27 - but
114:33 - no window is not defined ah
114:38 - okay just by requiring it
114:43 - so how do i replace window
114:48 - is p5 this can i override it
114:52 - i just get an error just from requiring
114:55 - it
114:56 - this is bad all right what if i um let's
115:00 - see
115:01 - what's that error message does anybody
115:02 - encounter this window is not defined
115:04 - okay
115:08 - no.js okay so
115:12 - could i create
115:17 - like if i were to say this is silly but
115:20 - if i were to say like
115:22 - const window equals fake window
115:26 - and now run it i mean obviously i need
115:28 - to put something real there
115:32 - i i still get not defined
115:35 - let's get rid of this hold on
115:42 - window is not defined at p5
115:46 - node modules p5 lib 5 min min there's no
115:49 - way i'm going to find out where that is
115:58 - this is this is where all all all fails
116:02 - so this might be a prompt to viewers
116:05 - um
116:08 - say global.window is that how i would do
116:11 - it
116:12 - oh like do i just need to do like
116:14 - global.window
116:15 - is that how you do things in i just
116:17 - wanted to like show up as not not
116:18 - defined obviously
116:21 - ah yes cannot create property request
116:24 - animation frame
116:25 - on string fake window no problem
116:30 - okay i just gotta like hand it this
116:33 - other canvas somehow
116:35 - global.window uh
116:44 - equals make it an object
116:48 - can i do that
116:51 - cannot read property now of undefined
117:03 - like is that another like global
117:06 - variable it's looking for
117:08 - property now of undefined so what's the
117:12 - property it's looking for okay
117:16 - at constance um color never
117:22 - uh
117:24 - yeah i have to make a face so this is
117:25 - this is going to be a harder problem
117:27 - it's one that i'm not going to solve
117:28 - right now
117:29 - so i would love i'm going to i'm going
117:31 - to post this
117:33 - as a project so let me um
117:38 - let me comment this out
117:43 - how to make p5 work with the canvas
117:46 - from node canvas
117:50 - um i got a to do and also
117:54 - a clue is probably
117:57 - in
118:03 - this p5 node module but no no
118:06 - node p5 this this has not been
118:09 - maintained
118:11 - but a clue is probably in here but the
118:14 - issue with this
118:15 - that i have is that it looks like to me
118:19 - [Music]
118:22 - it is rewrite not
118:26 - prefix preload to work yeah i want to be
118:29 - able to make this work
118:30 - by pulling the actual p5 library and
118:33 - then just
118:34 - adding some stuff onto it i think this
118:37 - actually has the whole p5 library in it
118:39 - so it doesn't really help it might be
118:41 - good enough right now but it's not going
118:43 - to be able to
118:45 - stay in line as p5 changes
118:48 - jsdom oh it is usually used to test
118:51 - browser things in node
118:53 - okay
118:56 - right fake a fake window um
119:00 - yeah so
119:04 - i'm looking at the comments is super
119:06 - helpful so i wanted to try to avoid
119:08 - making a fake window but that's also a
119:11 - perfectly fine
119:13 - option i'm gonna just put this aside
119:16 - right now
119:17 - i'm going to say npm init
119:20 - and not npm in it uh git init
119:26 - uh um hold on let's go to github.com
119:30 - codingtrain let's make this a repo that
119:34 - people could play with
119:36 - um new repo
119:39 - um under coding train
119:42 - this is uh node
119:46 - node p p5 test
119:50 - uh public um
119:54 - skip this step i am skipping this step
119:58 - and then i need to
120:00 - [Music]
120:04 - do this
120:10 - um
120:12 - i don't know what i'm doing ah i no no
120:14 - no oh that was so bad
120:17 - i forgot that i need to get ignore um
120:21 - so hold on let me let me get rid of this
120:22 - get repo no nope
120:26 - nope nope nope
120:30 - what's the key command to see hidden
120:31 - files on a mac no
120:34 - there we go delete that um
120:38 - let's make a uh very quickly dot
120:41 - get ignore with all the node
120:45 - modules
120:50 - does that say git ignore it does say git
120:52 - ignore
121:00 - get init
121:03 - then git add
121:08 - okay git add everything
121:13 - yeah okay git commit oops git
121:17 - commit testing node canvas with p5
121:22 - then this is what i'm remembering get
121:24 - branch main
121:27 - okay then get remote at origin
121:32 - and get push ordermate okay
121:38 - so if you want to play around with this
121:40 - right now it is here oh i didn't make a
121:42 - readme
121:43 - um this is terrible what i'm doing i'm
121:46 - just going to do that
121:47 - and i will post this project
121:51 - into here
121:55 - so if anybody wants to explore this and
121:58 - comes up with a solution that might be
122:00 - useful for me
122:02 - please our suggestions please add it to
122:04 - if you have suggestions or ideas
122:06 - please add them to the issues uh here
122:10 - and certainly if you have uh if you get
122:12 - it to work and want to
122:13 - um post a solution through a pull
122:15 - request that is welcome
122:17 - as well and now
122:21 - um let me what was the last thing i want
122:24 - to do let's look at nico's
122:26 - um
122:29 - um this is the last thing that i'm gonna
122:32 - do here
122:33 - before i say sign off for the day
122:37 - uh random whistle is that what i was
122:39 - looking for no the discord bot
122:44 - um so the current the discord bot at
122:48 - present
122:49 - the way that i implemented it
122:52 - if i go to the new command oh oh i have
122:56 - to be in the
122:56 - in the branch that is the number db
122:59 - branch
123:00 - i added a new
123:04 - um i added a number a connection to a
123:07 -  database
123:09 - and then nothing really i don't really
123:12 - do anything here
123:14 - um i'm just right i didn't actually
123:17 - implement anything
123:19 - okay so i just implemented the
123:22 - client
123:23 - and then i heard from people that i
123:26 - should be
123:27 - using
123:31 - uh mongoose which i still don't
123:33 - understand what that is
123:35 - so there is a wonderful pull request
123:38 - here from grueselhouse
123:40 - for using mongoose
123:44 - and what is mongoose
123:48 - because my understanding was that this
123:50 - was going to make it simpler
123:53 - object or mongoose is an object data
123:55 - modeling library for mongodb
123:58 - it manages relationships between data
123:59 - provides schema validation is used to
124:01 - translate between objects and code
124:03 - and the represent representation of
124:05 - these those objects in mongodb okay so
124:06 - that makes sense to me
124:09 - in the sense that uh i i'm not
124:12 - i'm thinking about the database as just
124:14 - a place to store
124:17 - objects that i would have in my code to
124:19 - sort of save state
124:20 - and then come back to it so that makes
124:22 - sense
124:25 - um jawwad is asking about discord here's
124:27 - the uh
124:28 - okay so so but when i looked at the pull
124:32 - request
124:33 - if i'm being honest it made it look like
124:36 - oh this is
124:37 - confusing to me it seems to be adding a
124:39 - lot of extra stuff
124:40 - and that's what i was kind of trying to
124:42 - avoid but let's take a look
124:45 - at the new code
124:51 - so this here is
124:56 - um there's some other stuff being added
124:59 - all right okay so
125:03 - instead of so this is good instead of
125:06 - this goofy numbersdb
125:08 - connection the numbers database in this
125:09 - particular collection
125:11 - i'm looking at a model so i guess what
125:13 - is a model
125:22 - a mongoose model is a wrapper on the
125:24 - mongoose
125:25 - schema a mongoose schema defines the
125:27 - structure of the document values
125:28 - among interface of the database for
125:30 - creating querying updating
125:32 - so that sounds good i think i like this
125:35 - okay um all right so this makes sense
125:39 - and this i can oh mongoose js
125:42 - elegant mango okay so uh mongoose
125:45 - require mongoose
125:46 - oh i sort of think i'm understanding
125:48 - this now
125:50 - okay
125:54 - writing mongodb validation casting and
125:56 - business logic boilerplate is a drag
125:58 - that's why we wrote mongoose
125:59 - okay i'm starting to understand this now
126:02 - if i get a model
126:04 - of a cat then i can make a new cat with
126:08 - a name
126:09 - and save it to the database okay
126:15 - where's that pull request i was looking
126:16 - at
126:18 - um so this would be finding everything
126:21 - there's a number model and then if i
126:25 - want to
126:25 - save something
126:28 - i put a value in it so i think though i
126:32 - need
126:34 - oh oh like why do i need this whole
126:37 - extra database.js file
126:42 - it's time okay
126:46 - so i'm gonna look at this more this is
126:48 - what i wanted to avoid
126:50 - was having like this seemed like oh my
126:52 - god i'm adding all this extra stuff
126:54 - this whole extra javascript file it's
126:57 - loading models
126:58 - locally like um
127:02 - maybe this is only because and then i
127:04 - have this like number schema thing
127:07 - [Music]
127:08 - uh which seemed like a whole extra thing
127:11 - i'm doing so i have to look at this a
127:13 - little bit more
127:15 - but so is it true that i can eliminate
127:18 - this whole database.js file if i'm
127:21 - connecting to
127:22 - a mongodb in the cloud on atlas that's
127:25 - what i would like to do
127:27 - justin is reminding me that the kids are
127:29 - waiting and in fact they are
127:31 - you don't have another cat for me all
127:33 - right everybody
127:34 - so i'm going to investigate this more
127:37 - i'm going to have to
127:38 - um and um
127:41 - mongoose makes it easy to make no sql
127:43 - schema and retrieving the data
127:45 - so niko this is i just did it i wanted i
127:48 - want
127:48 - to be able to very easily what i imagine
127:51 - having in my tutorial is just like
127:55 - set up your mongodb online get the uri
127:58 - to it
127:59 - and then we have to learn something
128:00 - about what a mongoose model is and we
128:02 - can do safe safe save retrieve retrieve
128:03 - retrieve
128:04 - but this to me is there a way i can
128:06 - avoid this extra
128:09 - although maybe i maybe i shouldn't maybe
128:10 - i do want to have a manager
128:12 - and i need to make a whole video set
128:13 - about that that's my question here
128:15 - okay everybody it's been two hours
128:18 - thank you for joining me today in this
128:20 - live stream
128:22 - um if there's any last a few i'm going
128:24 - to let this is going to take me two
128:26 - minutes and 50 seconds
128:28 - to say goodbye here as i play this uh
128:30 - goodbye song
128:33 - i'm going to turn that music down um
128:36 - i am also just going to do a last thank
128:38 - you and reminder about today's sponsor
128:40 - curiosity stream
128:42 - slash coding train uh please check that
128:45 - out
128:46 - um only today and tomorrow 41 off the
128:49 - entire year subscription plus you get
128:51 - nebulous food for free
128:53 - um the channel asks do you still teach
128:55 - at nyu i do
128:56 - i definitely do and if you want to
128:58 - follow along what i'm kind of focusing
129:00 - on i've kind of
129:00 - got way off track here um
129:04 - uh check out the nature of code syllabus
129:07 - spring
129:08 - 21 um i am currently in the semester
129:11 - working on this particular week
129:13 - so this is the stuff that's active on
129:16 - recording new videos
129:19 - uh glenn says goodbye and thanks for the
129:22 - motivation
129:23 - i appreciate that very kind of you i'm
129:27 - glad that this is motivating
129:28 - oh finished with my
129:31 - uh do a video with cj i would love to do
129:34 - another video with cj again as well
129:36 - thank you for that suggestion
129:37 - riz
129:38 - [Music]
129:43 - lots of waving um this is
129:46 - it's nice to spend my saturday afternoon
129:48 - so stay tuned what's coming out next
129:50 - many more three-point x videos
129:53 - you should see the look on my daughter's
129:55 - face staring at me
129:58 - these puppy dog eyes opening wide
130:01 - sad face bye justin bye shreyas
130:07 - um i tend to be streaming on
130:10 - next saturday there will not be a live
130:13 - stream for sure
130:14 - um because i have another commitment on
130:17 - next saturday
130:18 - so i don't know when my next live stream
130:21 - but it has been recently on saturdays
130:22 - between 1 and 3 p.m
130:24 - it will definitely not be next saturday
130:26 - so hopefully there'll be another one is
130:27 - there another saturday in february after
130:29 - next week
130:30 - that'll be probably the last one i
130:32 - should also i should be doing the baking
130:34 - class right
130:35 - i should be doing the baking class not
130:37 - live streaming during your baking class
130:38 - would you agree with that
130:41 - there's a big nodding of a yes there uh
130:43 - gloria pickle um
130:45 - angel angela bell asked can we see your
130:47 - dog gloria pickle is not available she's
130:49 - not
130:50 - up here um i can pull up a picture of
130:53 - her probably
130:54 - but um but she's not available do a
130:58 - discord bot with some sort of front end
131:00 - um mini jimmy is programming pinball
131:02 - this afternoon thanks everybody
131:04 - i have to say goodbye now i will see you
131:06 - next week or not next week
131:07 - but stay tuned for all the videos that
131:09 - are coming out write things in the
131:11 - comments i really like reading them
131:12 - share your projects that you're making i
131:14 - really like seeing them and
131:16 - see you next time on the coding train
131:17 - goodbye everybody as always i always
131:20 - forget that this stock this stock is
131:30 - [Music]
132:00 - [Music]
132:03 - this dot
132:09 - [Music]
132:18 - this stuff i'm going to do this this
132:21 - star this dot this dot
132:22 - this dot song never forget the this dot
132:34 - [Music]
132:37 - i'm going to say once again here we go
132:48 - [Music]
132:50 - it's look forward to cartesian
132:55 - [Music]
133:00 - coordination
133:02 - [Music]
133:09 - autotune and the internet will fix that
133:11 - for me
133:16 - [Music]
133:27 - cartesian coordinates
133:31 - [Music]
133:41 - unicorns and rainbows and cupcakes what
133:43 - else
133:44 - is there yes kittens
133:47 - thank you very much kittens and rainbows
133:49 - and cupcakes notice that
133:51 - look what i get i'm really losing my
133:54 - mind
133:55 - okay let's do it
133:59 - [Music]
134:08 - the kids
134:14 - [Music]
134:25 - and kittens and kittens kids
134:41 - [Music]
134:59 - [Music]
135:11 - i feel just sort of like a nice feeling
135:14 - of relaxation
135:16 - everything's gonna be okay today dream
135:18 - is not broken it has not frozen this is
135:20 - a
135:20 - this is a wonderful thing okay we're
135:23 - gonna do it
135:24 - i'm really getting to something i need
135:25 - my sound effects
135:35 - [Music]
135:46 - that was invalid syntax i forgot
135:48 - [Music]
135:56 - all sorts of text generation analysis
135:58 - things
136:00 - that i will use continuously over and
136:02 - over again first thing i need to do
136:04 - is yes
136:09 - okay we're gonna do it kittens the
136:12 - kittens and kittens and kittens kittens
136:14 - and kittens and kittens and kittens
136:15 - kittens the kittens and kittens and
136:16 - kittens
136:23 - [Music]
136:29 - bye everybody have a good weekend

Cleaned transcript:

sound check one two three uh now i have my mic unmuted but the caption system that i'm working is still going hello everybody i'm muting my mic again let me know how the audio is i actually was just noticing i think the music was a little bit loud do do do do so so hello welcome to another saturday afternoon here on the coding train i was wondering what my um live captioning system would do with the train whistle but it doesn't seem to have um i guess you're seeing the captions over here so when we're looking at them i need to look this way but my monitor to see them is over there so hey how are you all doing it's saturday it's february 13th tomorrow is valentine's day i love you you're my valentine the internet people who watch the coding train are officially my valentine um i don't know what that means why i'm saying it or if this is how i should be beginning the coding train today but that's what's in my heart and i'm just taking my heart out and showing it to you here that's also weird where am i going with this i just want to say that i love you you're great um so one of these days maybe um it won't a saturday we'll roll around and i'll feel like i had a really good night's sleep and i spent the day just leisurely like thinking about the kind of things i do in the live stream getting things set up and just turning things on and being here fully present and with all of my energy and enthusiasm today is not one of those days i'm definitely feeling scatterbrained quite tired it's been a long week it's been a very long year in the last year um and it is the dead of winter here in new york um there is lots of snow out there it's quite cold and icy i'm ready for that and i'm ready for the springtime but nevertheless um i am here um to be with you and before i go too much further let me briefly take a minute to thank today's sponsor of the coding train and those are my friends over at oh my too many buttons to press um let's try this curiosity stream okay wait wait everything's gonna be fine people i've got a way to move things around here nope nope wrong one no no no not that nope this one yep that's right no now move this up here oh now move this over here oh nope nope sorry i'm really i'm really uh in trying to work with some more captions here there we go there we go there we go so launched by media visionary john hendricks who founded the discovery channel back you know when there was actually documentaries there's a lot of reality tv on there now i kind of like reality tv but you know your honesty stream is the awardwinning destination for documentary films and tv shows covering every topic from space exploration to adventure to the secret lives of wild animals so you can sign up with that link that's up there and in the chat actually pinned the comment in the chat and wait a second wait a second i have some breaking news coming in breaking news oh it's in this year breaking news because of valentine's day that discount that was previously 26 off is now 41 off just for today and tomorrow so if you sign up it's 11.79 for an h for the entire year that's the entire year by the way and you will also get access to the streaming video service nebula which is a streaming video service that i am a part of that i've talked about before on the channel when you sign up for this curiosity stream bundle using the link up there and in the chat so thank you curiosity stream for your sponsorship um moving back to um my this view over here i'm let's let's talk about for a minute what the plan is for today and let me see if i can get the chat back over here um i'm trying to be a bit more organized and i'm clearly failing at that quite quite a bit today um so what do i have on the docket what's on my coding train todo list for today well the focus of the focus of um if you only knew the things that are swirling around in the back of my mind while i'm talking woof it's very hard to keep two entire sets of conversation in your own head going on at once i have a really difficult time with that um but this spring as i have mentioned many times before is i'm really dedicating myself to the nature of code and let me come back over here and have to move this back up top here um and so uh most recently on the channel i have been releasing i'm on chapter three right now so i'm putting out new videos uh several per week with lessons related to topics in the nature of code book and you can see that i'm almost done and i think i can maybe just go over here to learning nature of code and scroll on down there are two more um videos in the three point x series which is all about angles rotation trigonometry um angular motion um and polar coordinates lots of things there um and so um what i um what's coming up um next is um let's see well i'll just show you so this particular video ends with this example i'm gonna run it for you right now oh that's actually not the example i end with um this is the example i believe i'm not really sure but i end with yeah so just looking at graphing the sine wave graphing a sine wave in motion with animation now one of the things you can do with once you have this idea and you're able to graph a sine wave is you can take two sine waves and you can have different frequencies of those waves perhaps different amplitudes of those waves you can add them together and you get a new wave so let's see if i can pull up that's what the next video that i haven't released yet will be about it's already been recorded it's just about finished just haven't released it yet um this doesn't look like the one from let's see um from the actual video but let's see if i can three is there a 3.7 is there anything here that says 3.7 does anybody see basic polar 3.4 oscillating motion timer i'm playing with 3.8 i see a 3.8 uh 3.3 3.3 weird what happened to i guess it's not uh add no additive wave wave sine wave graphing wave wow i wonder where this uh example went um let's look at this one this is not the example this is this is the visual result but this is this is code this is the example from um 2012 basically and i have updated it with a class for a wave and all sorts of things um i'm seeing some interesting questions in the chat that i would love to address but so this is the idea once you have multiple waves varying periods varying amplitudes add them together you can get results like that so stay tuned that's what's coming next now while i'm here let's foreshadow what's coming in 3.8 so the prompt the homework assignment from week 3 chapter 3 of the nature of code one of the ideas is to think about how you can apply an oscillating motion to a particle moving around a canvas so this is the idea of like okay i have this idea of particles that are responding to forces and moving around and then they have this little arm that kind of pulls itself uh forward um as if it's maybe a wing or an arm or an appendage and i'm using an oscillating wave uh that's mapped to the object's velocity to um to visualize the locomotion of this particular object so that's where all this is going and if you want to look ahead those are the videos that are coming out but if you're kind of following along with the course that i'm actually teaching right now which is all here in this github repo what the actual homework for this week is uh this try using vectors so um if you want to kind of follow along with the course um where am i i'm actually in the videos for this week are the one the one point x series what are vectors vector math random vector static methods unit vector acceleration gravity and win oh no no no no just to 1.6 so um what i'm trying to do on my saturday streams is kind of do a quick homework assignment and i think what i would like to do for my homework assignment is continue what i did for my random walk homework assignment which was uh the selfavoiding walk so i'm gonna get to that um i'm looking at the um some of the chat messages here and people are asking about the um automated captions so um i um let me just speak to that for a minute um it's very important to me that the live streams that i do are accessible i have tried many different uh systems for captioning nothing honestly really beats a human um captioner um the there are automated youtube captions you can turn those on right now on youtube but there's a little settings and it will um it's an overlay through the youtube player itself i have not been too thrilled with the quality of those um and so right now i'm experi i noticed that through um nyu where i uh teach um nyu's zoom account through i think believe a service that's ai lot called ai live i can turn on captions in any zoom meeting so right now what i'm actually doing is i'm in a zoom meeting right now and i have the captions running and i'm just in open broadcast studio capturing that as an overlay i wanted to see how this worked um i know it's a big discussion i would love to hear from the uh community of anyone who actually uh uses watches videos with captions on i know there's a um there's different points of view i believe around whether captions should be i believe i'm going to get this wrong which is why i'm kind of stumbling over my words here but whether the captions should be always on or an option that you could turn on or off right now i'm gonna leave these on for today um just to sort of like see how good they are and then i might look into seeing if i can with an api get these captions directly into the youtube system so they could replace those and they could be something that people could turn on and off um so that's kind of what i am um thinking about and experimenting with um just to be clear it's just an overlay so i have a button right here they're gone they're back what i love about this which is kind of funny i'm gonna mute my microphone for a second ready sometimes that's what i mute my microphone for if i'm talking to my kids who came up to ask me a question but now the captions will still go i can i do have a button over here which will mute me in zoom so i can now no captions appear no wait a second that didn't mute zoom zoom mute button not working well i can manually mute myself and zoom all right all right enough with this i don't know what's going on anymore um okay so uh yeah hacker says in the chat yawn and that's exactly how i feel today i have to just be totally honest with you i didn't really feel like live streaming today some days it's just like it's hard people always write in my uh i get a lot of the um when harry met sally kind of um comments in my youtube videos like i'll have what he's having because i have a lot of energy and enthusiasm and that's a genuine feeling that i have when i record videos and i discover something and make tutorials i really do feel that genuine enthusiasm and excitement and passion for this kind of work that i'm doing but i am a human who gets tired and um especially during the semesters when i'm teaching and there's a lot going on family wise and you know i don't know if you noticed we're living in a global pandemic i definitely have a lot of privilege and a lot of things in my life that make things very comfortable and easy for me and i'm very grateful for that um so anyway but here i am i'm gonna i'm i'm um thanks for being here with me and let's get started and actually do some coding stuff uh oh so uh this is why so so um i wanted to just mention that actually i kind of am looking for some help here i feel like this assignment does isn't one of my better sets of prompts so this is the assignment um it's really this week is if for if you're if you're in the course it's kind of about oh you've never used vectors before you have used vectors before maybe conceptually but haven't used p5 vector or thought of the way that you're moving animating elements in a creative coding sketch with this concept of vectors so but i'm not so sure about the prompt here um all right so if you have ideas for that i would welcome that what else did i want to show so oh i also just wanted to mention i don't know if i have time for this but it is tomorrow is valentine's day and i have these wonderful i mean i don't want to call them wonderful it's up to you you decide whether they're wonderful or not i have these um coding challenges that i did um quite some time ago i guess two years ago in 2019 um about uh heart this is a um this is really kind of insane i don't know if this heart curve is actually a mathematical function plotted with copolar coordinates that produces a heart there is this is one of my absolute favorite patterns in um kind of mathematical visualization the cardioid that appears when you visualize a times table um over around a circle um and so though i was just going to encourage people if you're looking for something to explore this weekend you know valentine's day is obviously like not a real holiday it's some kind of like you know such a capitalist trick to get us to buy things you know but expressing love is a nice thing i do also like chocolate just saying dark chocolate you know low low sugar now that sounds weird low sugar i just like i like you know what i really like is a good organic nut butter chocolate cup i'm such a loser i live in brooklyn and so when i when i think about like a reese's peanut butter cup which i'm sorry to buzz market reese's pieces not a sponsor i like to think about some artisanal handmade dark chocolate almond butter organic cup that i that costs like 7.99 at the local store all right i'm off on a terrible tangent here um tangent so take a look at those uh heart curve heart curve oh you know and by the way this is also a nice um excuse for me to look at some community contributions um this by the way i was just poking at this this morning on this beating heart with interactive equation editor by elizabeth hudnot that was submitted um this really is a cool website um i'm just gonna actually get rid of this preset uh link and take that off this is and i'm gonna go down here and say let's go this i discovered this just today by looking through the community contributions this is a website that has several different mathematical algorithms uh visualized um it's created by um elizabeth hudnot let's see we can go over this is um their github there's a codepen link here and lots of these i don't know that these are all based on my videos but there's a lot of crossover certainly between videos that i've made and what are here but if i go here to this graphing calculator one um click on this oh select i guess i have to click um oh i see i need to let's go directly to back to here and let's do let's go it's really cool like the equations can be just plugged in here and then it graphs them and then i can like do cool stuff like rotate it i saw it when um and play with all the various um parameters here so like what if i just change this from 16 to a 15. does it regraph it i don't know what to do i don't know how to make this work close path do i have to like set set i don't know i don't know it's too exciting so play around with this it's really cool um a really excellent um a wonderful community contribution um that i found on the website so take a look at those uh i also wanted to just highlight um and maybe i'll come back to this uh in a little bit but one of the things you know the community contributions come in through these pull requests you can just um find them on the website if you go to any particular video like for example you could be right now watching this um the very first person to submit a community contribution of a creative project that you made from this video does not exist yet but i recently discovered it let's see if i can find this again i was looking at this this morning yes someone took uh this was from seven days over ago um m awesome forever who is definitely awesome forever took the bees and bombs gif recreation coding challenge and ported it over to roblox and we can see a gif animation of it right here in roblox which this just thrills me to no end i haven't actually shown this to my kids who are avid roblox enthusiasts um and i really feel like i've gotta get into this and learn how to do this a bit myself this is wild okay so i'm yeah so good suggestion oh this is an interesting idea i haven't thank you for this um suggestion i'm going to try something a little bit interesting here so i'm putting this here and then i'm going to move myself here we go there the captions are right below me let's see how that goes um let me just go over to p5 web editor it and it i think if i do this then uh the reason why i didn't put the captions over on this side was because i wanted to make sure it wasn't blocking the code if i look at code but now i'm realizing um this could work pretty well also a little bit higher up i feel it's giving me a little boost a little boost of confidence today live streaming it is blocking the console but i will deal with that when the time comes all right i really do need to get the captions like natively through an api this is just a window capture and you can see i actually it's very small i mean i don't mean to go off on a tangent here but the way that i'm capturing this from zoom is i act zoom i can do a window capture in open broadcast studio um and to see what that looks like i'm just going to show you this right now let's do oops no no let me show you what this looks like i'm going to go to window capture and i'm going to type in zoom test and i'm going to hit ok and name is already in use i already made something called zoomtest zoomtest2 and then oops it's getting this stream chat which is fine let's go to here zoom meaning so this is actually i'm gonna hit okay this is actually the zoom meeting right here and the captions in the zoom meeting are showing up right over there but they don't show up they're like this extra transparent overlay window that's part of zoom and obs just for what i actually spent like an hour today trying to get obs to find it and it would just not find it um so what i had to do was actually capture my entire display and then crop it around where the captions show up and then i'm sort of like blowing it up a little bit so they're kind of pixelated and not the best quality um but this i don't need anymore so but that's my zoom meeting that i'm in by myself what happens if i turn the video on there you can see exciting exciting times here on the coding train uh all right let's um let's remove this remove remove okay back to um the topic of today so my homework assignment for the random walk week and i by the way this is one of the strange things now about my live streams it used to be the opposite the live streams were where i would try a coding challenge and then um i would that would so people who watched the live streams would kind of see the sort of raw unfettered unedited hours of debugging coding challenge which i still think is something that i would like to get back to doing more of then i would edit something out of it and later like there would be a video um that would sort of like take that segment out of the live stream right now i'm actually recording the coding challenges not live streaming and then i'm coming in like playing around with them when i live stream so you can essentially getting a sneak peek on something that's coming out hopefully in the next week or two so let me go and grab the code for this and i have some things that i want to discuss and think about related to it um self yeah here it is coding challenge self avoiding walk and i think i might have showed this last week i actually i did a new version of it since the last time i showed it um and okay so what this is and let me move this up a tiny bit that'll help this is a um selfavoiding walk and what is it what it is attempting to do is there is it's taking the canvas and dividing it into a grid and every spot on the grid um sorry i'm like reading the chat and talking which is i've learned my lesson i shouldn't uh i shouldn't be doing that um every every cycle it can go left right up or down you know it's my own fault but everyone's giving me a lot of suggestions about how to improve the layout the captioning system and i'm paying attention to that while i'm trying to talk about selfvoting walk i just i think i should stop paying attention to that see i told you today was just gonna it's i'm a little bit off i mean i'm i don't know what my on is but today i'm definitely off there are more people than i imagined watching this all right so but i'm going to get to doing some stuff with this in a second so i actually want to just um change this right now to make the spacing 50. so if the okay so now the spacing is 50. and i think i would also let me duplicate this actually because i want to explain what's going on here a bit more walk vectors homework and i'm going to try adding some vectors to this as well let's talk about vectors okay so first thing i want to do is change the spacing to 50 and then i think i would like to draw some more information so people could see the grid here so let me do the following i'm going to say 4 let i equal 0 i is less than the number of columns and i'm going to use j for the rows i've learned my lesson when i have auto refresh on be very careful about typing loops so you don't get it stuck in a forever loop then if i do rectangle i i'm spacing j times spacing spacing spacing i should get a grid of rectangles oh that's kind of crazy looking and i want to say stroke 255 fill 100 stroke weight let's give the stroke weight one so i just wanted to i wanted you to be able to see this grid because the walker is moving and i think i'm going to do this and um let's have it actually be spacing minus one and these are all squares so i don't need this extra variable oh i don't have enough room how come that didn't work do i have to say square explicitly square is not defined by the way one of the things i've discovered is that my sketches tend to be using very old versions of p5 and i should really make sure i update them i think 1.1.9 can anyone fact check on me that that's the more recent version uh let's go back to the sketch um there we go i guess i can just leave that at zero i don't know why so i wanted to see this all right so the idea is that the random walker it starts in the top left spot it can go from here one of three one of two to the right and down oh i should try this let's see what if i let it go diagonally this is essentially a graph each cell is a node and the edges are the connections just horizontal or vertical connections and so it's it's randomly walking and is and it not and it's not allowed to go back to a spot that it's previously been so eventually at a certain point it's going to get somewhere and be stuck so when it's stuck it backtracks and tries to go a different way and then backtrack some more if it gets stuck and tries to go a different way so in theory this is a brute force algorithm and eventually it's going to hit every spot and fill the space it's not doing that very quickly it takes a long time let's change the spacing to 100 to see if we can at least wait it out now with with a four by four there we go so we can see with four by four it just took you know i don't know what that was 10 seconds that was just a few seconds there to make its way through every single to hit every single spot in the graph without crossing over itself so what i've been trying to figure out is what is the big o notation for this particular brute force algorithm so this is for how many possible pathways does it need to check so if n is 4 there are n squared cells and then if it starts with one i mean how is it factorial like either it's kind of like the traveling sales person algorithm but it but it's it's not that exactly because it can't go from one node to any node um so the most recent version is 1.2.0 everyone's telling me okay okay good to know good to know good to know 1.2 .0 and i don't know why i'm going to just get rid of the sound um and let's so i would love some help from people watching um hamilton right so the hamiltonian psycho oh joe bennett says o2 to the end and simon let's see if i can bring this up on the screen simon posted a nice message in the chat with a variety of and unfortunately it's too long for me to fit and the uh this system that i'm using which is called this stream chat which is wonderful somebody posts a link to it in the chat so people can find this it's a discord bot and a chat bot for live streaming works better with twitch but i use it with youtube that's made by some coding trained community members um uh simon here has posted a um a helpful explanation of different big o notations as well as instead of big no reminding me about p n p p space and exponential time so um i'm getting suggestions from joe of o2 to the n um sarob writes oh it's not o n squared so an o n squared algorithm would be something like um i was going to say blurring the image like an image processing algebra would be n squared assuming n is one of the you know if we're talking about a square is the width um and then the pixels goes is squared and thank you david for posting just stream chat evor is saying oh three to the n squared max three possible new cell and two for 2d grid that's kind of interesting but you have to think about like it's not just a matter of anyway it's it's a very very uh large number i was kind of thinking of it as like worst case scenario if i got rid of all the rules um is it really equivalent to n squared factorial because uh like it's ultimately something like the traveling sales person problem where i'm trying to find the most efficient route through n number of points which is an n factorial and then i'm kind of taking n as the width of the square so n squared factorial but you know here or there um so um but you'll see very quickly just even if i just go to um eight by eight like what is n squared factorial of eight by eight that's 64 factorial anybody know that off the top of their head um that's a one with 89 zeros so if that's really true there's no way i'm ever going to be able to see i mean without getting extremely lucky there's no way i'm ever going to be able to sit here and wait as it checks one possibility you know 60 possibilities per second i was experimenting with this idea and you'll see it commented out in the code like let me have it try 500 000 per frame so this is obviously going to move much faster but even so uh worst case o three to the end says heka um the the j sua roop says o two to the n squared yeah that i have to think this through and probably thinking this through while i'm live streaming is not the best idea but i wanted to point out that essentially um this is a um sounds like a question for brady hair and numberphile or matt parker yes indeed so i would like to explore this further but i'm noticing that there i you know there are particular techniques for making smarter decisions about how you can more up you know if we have obviously like i could no i think this is what the hamiltonian path gets at it's like it's very easy for me and i'll see if i can kind of like zoom over to this where i could just decide like well obviously if i start going down then over then up then oh then hey wait i have to if i start over here and just go up and then over i don't have very much space to work with and down and then over then up like i could actually design a path that i know would hit every spot with a kind of rule for any particular 2d uh space that goes in two dimensions you pro chris writes you probably need to estimate the average branching factor per cell yeah that makes sense um all right so what i wanted to explore so beyond like and we could see that beyond trying to uh solve this um i wanted to explore first of all i rather just enjoy the act of watching it take forever to try to figure this out it's quite pleasurable to me to sort of see it i'm doing its work um but what i wanted to explore here are two things one is i wanted to sort of like look at change the example around a little bit with vectors that was kind of my idea recursion i probably should i didn't use recursion for this if you could believe it although it definitely would have made sense too but um i wanted to look at um i believe i don't know if anybody knows any other keywords i can search for but hamiltonian path um let's take a look at this so this is a path uh hamiltonian cycle uh and i've never i haven't looked at this really other uh much beyond just this moment um okay are named after william rowan hamilton who this is not from hamilton the musical that's too bad um who invented no no it's hamilton puzzle blah blah blah blah blah blah blah blah blah blah where is there some pseudo code here uh is a path that visits each vertex of the graph exactly once a graph that contains a hamiltonian path is called a traceable graph a graph is hamiltonian connected if for every pair of vertices there is a hamiltonian path between the two vertices so i actually really like um one possible hamiltonian cycle through every vertex of a dodecahedron is shown in red like all paclionic tiles the dodecahedron is hamiltonian so this i'm kind of fascinated by and i'm almost more interested in starting over now with a new sketch and trying to look at visualizing um a hamiltonian path um through just sort of an arbitrary set of vertices the herschel graph is the smallest possible polyhedral graph that does not have a hamiltonian cycle interesting so um an algebraic uh solve so what is an algorithm ooh night tour is something i always have been meaning to explore on the channel i'm seeing a lot of things that i've been interested in that i haven't bothered to look at before so how how do i solve it um okay hamiltonian cycle hello look up shrom loner evolution it has a lot in common with random walks okay by the way i'm giving myself the first half of this live stream to play around with this in the second half i'm going to look at how to have a node sketch like render a p5 sketch i mean i don't know that i'll succeed at that but that's what i wanted to look into um okay whoa this looks like quite an interesting um visual result i like anything with a rainbow color as you know um this is an interesting this would be a cool coding challenge i'm gonna have to look at this a little bit on my own um but this definitely um this image appeals to me very much evolution on the upper half plane with hue indicating log of this formula fascinating oh i definitely want to um keep this now was this what was it called shrom has anybody suggested this no so let's make a quick uh issue always looking for new like this summer hopefully is going to be the summer of lots of new coding challenges once i'm finished with this semester no not a new repository i've lost my mind here issues new issue um and from evolution came up in live stream on saturday february 13th 2021 and dare i say copy image address how do you do this in markdown is it this no i forget how in github markdown you show an image let's see um image oh it's just the image in parentheses with the exclamation point before it of course of course of course the exclamation goes here and then rainbow hue strom loner image let's see great all right so we are going to submit this issue when a walk gets stuck search for unreachable regions and then backtrack until all of them are open interesting that's what octopus is suggesting uh okay let's see here whoops wrong wrong wrong spot uh not what i meant to go to uh all right so i'm i'm in this hamiltonian path so let me look up hand oop ah what happened what happened um selfavoiding walk hamiltonian path hamiltonian let me just this is what happens when you live stream with absolutely no plan whatsoever to do uh square filling selfavoiding walk this is interesting polynomial time that fills a square grid with a random hamiltonian path starting at a particular point see this example right interesting that it looks like exactly what i want to do the following people by umans and len hart gives a polynomial time algorithm for finding a hamiltonian cycle in solid grid graphs for general grid graphs the problem is np complete whoa look at this nathan klisby's generator as cited by whoa this so this is what i want to do wild um what did i use does anybody remember what i used for my maze generation um um this page is not appearing does anyone know what i used for my remember what i used for my maze generation coding challenge i feel like this is i'm redoing something i looked at years ago this is really cool there's also that like pivot algorithm what's the i i feel like when i was reading up on this there's a pivot algorithm let's look at this the pivot algorithm works by taking a selfavoiding walk and randomly choosing a point on this walk then applying symmetrical transformations on the walk after the nth step to create a new walk oh boy i don't know if i'm realistically going to be able to read a paper about a particular algorithm while i'm live streaming and then implement it depth first search think hilbert curve yeah i did all this mazes have splits on the path which you don't want okay that's why it's a different problem thank you depth first search i've done let's hold on depth first search coding train a breath ferch have i not done a depth first search on coding train self avoiding walk scaling concepts and graphs theory selfavoiding walk on fractal complex networks i just want to see a picture if i see a picture of what i want to do then that's the time to read the paper okay this is looking good whoa yeah ooh the two by two flower and the two by three flower in the first second and third generations each line is replaced by parallel lines of length u and v in construction of the next generation fascinating okay this is definitely something that looks like i would want to implement looks really cool selfavoiding walk okay uh oh look at this in euclidean space the number of paths of length k which is written as ck on r to the n is believed to behave as uh okay and the mean square distance of pathway okay so this is there's hypotheses about how many whoops paths there are boy i'm really ah i've really gone down a rabbit hole here on my live stream okay okay interesting i'm gonna have to come back and read this paper a star was for finding the shortest path yeah uh i used a star yes yes i use breath for i've done breath first search but these are all for finding the like looking to get from point a to point b i'm not looking to get from point a to point b i'm looking to get uh to hit every single point without ever revisiting a previous point which is quite a different problem um all right i might have to give up on this right now and move just on to making this more interesting pivot algorithm and the selfavoiding walk introduction all right i'm going to have to read more on this later and come back to it um because i'm this is you know i i think what when i see what when i find like some clear written pseudo code for an algorithm that's when i started to feel like i could implement it live i could definitely imagine making up a way that i would imagine a hamiltonian path working but i think actually what i would like to try right now is rather than let me close this one i'm just curious what happens if i allow it to go diagonally so what if i write a selfavoiding walk but allow it to move diagonally and then could using p5 vec p5 vector help me with that so that's what i'm going to go look at how perfect snake ai is written when the snake is at max size it is just a selfavoiding walk that is such a great point from chris manny but i'm kind of running out of time that i allowed to play around with the selfavoiding walk so let's try to at least expand on this a little bit um this is my exercise so one of the things that i wanted to note here that i did is that i made a class for any given step that the walker would take left right left right down up and i think what i would like to just sort of see is if i actually have this extend p5 vector what will this get me so i want to just first be i want to be using uh vectors in p5 so i've leaped bounds ahead of where i am in the nature of code course because part of the nature of code course will look at object inheritance so this is if this if you're kind of more of a beginner in p5 and you are in javascript and haven't worked with objects inheritance this will seem quite strange to you but already existing in p5 is a class called p5 vector which has which stores a separate x y and z so rather than make my own called step with an x y i can just extend inherit from p5 vector and now though i did something sort of weird where i i called it dx and dy so i'm just going to look for wherever i'm using that and move this over to give myself some more room um cannot read property okay so where do i use the dx of the step ah here it is this should now be x and this should now be y and by the way so i go through all of this code and what it means and why i'm doing it in the actual coding challenge and then this is also x and this is also y okay great so i just wanted to do that because i want to be back to where i started so let me hit save but with vectors because now i think uh i guess i'm not doing very much to add vectors to this but i wanted to see what happens like will this just work the way i've written this did i write it in a scalable way where i can now add diagonal options yeah look at that i can't believe i did that like i just gave it i wrote it in such a way where i'm allowing it to go diagonally just by so now i can go diagonally now let me and i kind of in a way i want to take out this extra because i want to see what it looks like like this um and let's now also um let me add two more and yeah now i think oh boy oh so it can cross itself because it's not about not being able to it couldn't cross itself before because it could only go left right up or down but it's just about going to a spot that it hasn't been before and when it's allowed to go diagonally it can do that so what if now i go back to making this something like 10. whoa this see i this is pretty cool um the question is does this make it harder for it to succeed or easier for it to succeed i would think harder and shreyaas asks does extends in javascript refer to inheritance and yes it does let's allow it to um just do like a bunch more per frame where is yeah interesting craziness what if i give it a much bigger space to work with this i apologize that this hasn't really gone anywhere it was it's like a big curiosity of mine i guess i'm just bringing it up and maybe later i'll get all sorts of interesting comments on the video of things i can research or look at but i do find these patterns to be quite interesting i have to get lucky basically for it to go get pretty far let's um let's let it try a hundred thousand per frame i feel like there could be some interesting things in terms of playing with color here with this um i feel like this is kind of also like some kind of like alien hieroglyphics like i've discovered some strange alien language here uh it will never cover all the points if it goes diagonal i think so says udeep that's an interesting question right so simon is pointing out that there's a difference between a walk that visits every edge like that goes along every connection between the nodes versus visiting every vertex every node i did want to investigate this further um but i think maybe i'm gonna have to move on from this right now it could detect when it gets stuck in a cave and backtrack out yeah that's can it move in arcs okay i love this thank you all right let's so uh let's try this is a really really awesome idea um so the way that i'm actually rendering it is with um vertex and i could use curve vertex and look at this that is really pretty wild looking now interestingly what happens if i just go back to the original way that it was without the diagonal options and keep in curve vertex actually i'm kind of curious about that didn't well yeah i guess you just get a kind of wonky string moving around almost that has a little curvy so that adding the diagonals in it really gives it a much more strange quality um there's also uh what happens if i use um bezier vertex that didn't work oh because bezier vertex a bezier curve by definition is always four points so it's the two end points and two anchor points and two control points um i'm just curious what if i um go back to something i know it can solve so um yeah it's pretty interesting to see this path that it's trying to do and the other thing about curve vertex which i always forget about is the end points are entry and exit points of the curve so what i should do here is duplicate them so i should add a curve vertex for path index zero dot x path index zero dot y this is the path there we go so i have the opening spot and now i might also a path path dot length minus one so i get the n spot duplicated this is pretty wild um like i would love for it to finish just once but i think i might need to go back to um there we go wait why didn't it finish the curve i did something wrong ah i put it after n shape there we go so this is actually quite interesting because i didn't intend to do this but i just created uh like almost like a glyph designer wow this is really cool actually like this is not at all my intention this is what so first of all i am so excited right now because i felt like this is basically one of my worst live streams ever and in a strange way i just made something that i really love i almost feel like this is some kind of like stylegan ai generated glyph and yet it's just random walk selfavoiding random walk paths and they're not it doesn't actually selfavoid and that it crosses itself that hits every spot now if i could optimize this algorithm to do it higher resolution like i really want like could i can i double it i mean the thing that i could do is not worry about i could just let it get stuck and not backtrack so if it's stuck like what if i say no loop just curious to see what i yeah so this is actually quite nice because i could just let it get stuck i'm generating these paths these are really quite amazing what could i do with color with this well you know this is my sort of like the limits of my ability to design with color but i'm going to say color mode hsb and then what if i were to say and oh i like watching it draw it also that's much more fun and and i think the dot at the end should go away right this yeah and i wonder if it should start at a random point right it's always starting in the top left so what if i have it start in a random point i had no idea that this is where i was going to go um so the spot always starts at grid zero zero so um let's do let's start at a random spot each time uh and so this is where we're going to start let's see if that works i feel like it's why is it losing the last one do you see that like it's oh i think because it's it deletes it because it's still doing one aspect of the backtracking um so let's not let's not backtrack yeah okay so this is my glyph generator i was going to add color to it right so um where is the color so if i have color mode hsb and i say like 100 255 255 100 is that how oh no no these are 100 100 oh no no sorry 100 oh it goes up here sorry this is for that point okay so it's green good so this should be um oh this should be in here and then um let i equal oh let oh so i would like now i need a counter here so let's do let i equal i is less than path dot length i plus plus and then uh spot is path index i and then the hue is just out of curiosity i modulus modulus 360. oh i can't do oh it won't do a different color for each segment that's weird it's just doing it for the whole thing i mean that's why is that i thought i could do different colors for different segments so that's unfortunate i mean i know how i could do this by just drawing manual curves well am i missing something different color different segments begin shape and shape uh does this work in processing if like all right so i always thought this is how it worked let me open up processing yeah it's one shape somehow i thought you could internally change i know how i would do it with lines because i could just go back to drawing lines but let me just check how processing works so i'm going to make some vertices here it's going to make a quick triangle okay it's a quick triangle i'm going to say close actually i'm not going to say close stroke weight 8 and stroke 0. oops no fill stroke 255 this is what i meant to do okay i'm just testing this so if i were to say here stroke 255 0 0. i'm just gonna i thought i could do something like this and it would interpolate the colors i don't know why i always imagined you can do this okay apparently not if you do a fill does it do it okay it's all the last color maybe you have to use like p shape in processing yeah i completely imagine this so i i i change renderer processing will let you multiple colors in one shape yeah but um oh vary the line thickness so that's the other can i vary the line thickness between vertices i don't think so oh well now i have a fill what happened to my okay yeah no so i it just takes it just does whatever the last thing is so i would have to manually draw them as separate curves the way what happens if i allow it to have a fill it's pretty interesting gradient could be it create a new so i could use arcs yeah i could use arcs i i could that's an interesting idea i do sort of like where this ended up though so i'm kind of fine with it um i i think i'm going to i'm going to let other people explore color on their own and i'm going to get rid i'm going to say where did i put the color but it is interesting to note how i can have a fill um i don't think having the clothes is quite unnecessary i think in the phil i'm going to go back interesting to explore but i um all right and one thing could be to have it keep going until it can like get back to itself so it always creates like a closed shape but i'm going to go back to no fill and just generate these patterns okay um i will save you could use a gradient i don't know about this gradient uh is there a gradient fill or stroke within uh p5 this is not something i'm aware of by the way what i want to do so first let me link this code where i wanted to go in the um second half of today's live stream i'm going to take a break and get to the second half now um so by the way if you're wondering what i'm showing you here this is the coding train discord i'll put post a link to it in the chat um this is this is a where this is where the community gets together and chats so if you need help with code or want to join the community and check out different things going on in the discord i highly encourage you to come and join um but also i tend to post like links to the code and different things that i'm doing here in this channel under live called links i also haven't been doing a good job of this but if you're looking for to get notifications um where do i find this under videos you can subscribe to this notifications role and then you will get notifications whenever i post a new video or schedule a new live stream so you can see this morning at 8 34 am i scheduled the live stream for today this is the wrong thumbnail ignore that um and so if you're if you want um notifications i think you just do exclamation point subscribe as a command bot command in the discord one thing i will say about the discord if you're about to join we're trying to see if i could get discord partner and you have to reach a certain number of members with a certain amount of engagement and so it looked it our engagement numbers go down if a lot of people join but never post so again don't post if you don't want to but if you feel so inclined to join post an introduction engage a bit with the community that will boost the numbers a little bit maybe i can get um discord partnership all right so where is um there is a gradient function in p5 that's an example go set gradient is this a function in p5 or just no this is just an example of drawing grading for the line okay is there like a gradient fill prim's algorithm oh yeah i've used prim's algorithm i did a um a video on prim's algorithm unfortunately i did it kind of way before i was doing the coding challenges um and it's sort of buried oh but here we go yeah and like the code's not here i wonder if i can find it so yeah like you can see how this is so old that um it's using this old deprecated desktop editor i look quite different there but yeah i should revisit prim's algorithm um um as something to look at through for this as well um but i just i never occurred to me to render with curve vertex um the path through a graph space so this is quite nice all right all right so i need to take a break so uh it's time for me to um thank today's sponsor um curiosity stream i have something fun that i'm gonna try so um just give me a second here i gotta pull this up um so i have a wonderful little 30 second spot uh from curio oh wait hold on a sec oh let's see here oh i messed i messed up um well this is not the sponsor segment yet because i'm totally having a technical issue how do i uh studio mode i need to do something real quick uh and then welcome it's not oh yeah why all right this is gonna play for a second okay hold on now we're gonna come back out of studio mode and we're gonna go here welcome to no not here not here not here where am i back to here no here here okay i'm really excited about this sorry um so i have this the sponsor today is curiosity stream and i'll talk a bit about curiosity stream right now um and you can go check out curiosity's stream at curiositystream.com codingtrain the discount by the way is for today and tomorrow only for 41 then it will revert back to i think the usual 26 but um i have a quick um ad i want to play and um last week when i played this 30 second spot um the i got a content id claim on the live stream so just from the audio so i am going to um narrate it i i wrote down the script and i will be the voice of the spot now this is very exciting here we go from the founder of the discovery channel comes a new independent streaming service curiosity stream home of groundbreaking documentaries an awardwinning original series follow your curiosity this is curiosity stream okay um coming back to me here all right i don't know that might have been a total total fail there but i'm excited to tell you about curiosity stream so i i've talked about this before i'm part of a group of educational creators that teamed up to build a platform where creators don't have to worry about demonetization or the youtube algorithm and it's called nebula um we're partnering with curiositystream um nebula has adfree content and experiments with different and experiments with different kinds of content so if you've never seen um nebula i'm going to just open up the page here nebula is a streaming service that's owned and operated by a group of creators they have nebula originals which are not available on youtube there's even nebula plus now that a lot of creators are doing with extended cuts and extra footage um and so um there's a nebula originals like tom scott money um and so now why am i why why is the sponsor curiosity stream but i'm talking about this streaming service called nebula well the reason is um curiosity stream loves educational creators and supporting more educational content so nebula worked out a deal where if you sign up with this coding train link that's at the top of the screen not only do you get access to curiosity stream but you also get nebula for free so this is not a trial this you're going to have this forever as long as you're a curiosity stream member so for a limited time actually today and tomorrow only curiosity stream is offering 41 off their annual plan that's less than 12 if my math is right per year for both curiosity extreme and nebula right it's the best deal in streaming that's the entire year it's like one dollar a month i think if i'm doing the math correctly um so uh you know a curiosity stream just to um open it up for a second here i'm just going to bring up the website so you can see sort of a range there's thousands of documentaries there you go um and um you can this weekend only get the 40 off you can see you can't see it because i have the banner up there um and now you can see it there get 40 off um through the link curacao stream dot com slash coding train um it's a great way to support um my channel coding train and educational content for a whole year um since you know these days a lot of us are staying inside a lot more than usual you might as well be soothed by david attenborough's voice or watch chris hadfield in the space station or just watch tom scott torture your favorite youtubers on nebula the recommendation that i would give is dr hannah fry has a wonderful documentary series about maths on curiosity stream that i've been following and watching it's a really excellent i'm a huge fan of hannah fry so um that is something one that i would particularly recommend so click on the link in the description it's pinned in the chat um and i hope you check it out i'm going to take a short break if you want to go poke around and look at it right now maybe sign up and then i'll be back in two or three minutes to look at seeing if i can take my example and bring it over to see if i can render it from node we'll see if that works okay i'll be back in just a few minutes do do so do do do all right i'm back here let me so people were asking in the chat um who i was talking about so this is the series that i was watching um it's a series called magic numbers and this particular episode um dr hannah fry uh goes down to zip wire to learn more about newton's ideas on gravity so highly related to the i was watching this one in particular because it's related to the nature of code so i just wanted to like highlight that again thank you to curiositystream for your sponsorship you can get it once again this weekend only for the whole year at 41 off plus you get nebula too okay um returning back to what i am here to do which is some coding stuff um let me close all these windows and get to here so this is my p5 sketch and what i would like to make happen is if i'm in discord i want to do something like type a command exclamation point generate and then i want to see come back to me a um an image that i generated obviously so so this is what and i've done this before and i know how to do this not with discord but i've done a series about doing this with a twitter bot to have a twitter bot generate a random walk image for example one one per hour and um the way that i did that is by running processing behind the scenes but it's quite tricky um to deploy processing generically to any sort of server environment it's got to have java you often have to set up a bunch of weird settings to like have it run in headless mode with no like windowing system so i would really like to look into and i know this is other people have looked into this and maybe i'm just missing like the post on the processing forum that explains how to do this precisely but i would like to look into um how to do this and so i think what i i think a way to do this would be with node canvas so this particular package is it is this actively it's from automatic industry interesting is this actively maintained i think chromium might be another way to do this um some kind of chromiumlike thing um oh do i have to like install or to all sorts of extra weird things i can just say npm.install can oh i don't need to compile it okay build from source if you don't have supported os or processor architecture so what's supported hopefully whatever i use would be supported and then i can make a canvas and draw to it all right let's just try this the question is could i then once i do that could i use p5 anybody have any ideas of something else i should try um okay so let's i'm gonna start just a new node project i will you know i don't know that i'll get to integrating this with the discord bot today um this by the way where where is this coming from this is all part of my project to generate to give everybody in the world or at least one million people in the world their own random number from this book that is then paired with a custom random walk design using the sequence of numbers in this book starting with their number and then have that etched onto a train whistle what's gonna happen this is what my life has become all right so do i want to install let's just remind me later about this let's go to uh the desktop and let's make a directory node cam let's just call this uh um walk generate walker generate bot i don't know let's go yeah sure generate bot uh and let's do uh make this a node project and open this up in visual studio code and uh make a file what is going on here new file no why is this not safe i'm just gonna do something really weird here just ignore me okay um so then let's just try npm install canvas let me look at the documentation here npm install canvas oops not here my sit am i sitting in front of the code i might be what oh all right let's see what happens this might take a while if it's got to install some weird um dependencies all right hold on i'm getting fun playing oh discord.js.guide has a neat guide on how to install canvas okay that's good for me to look at uh whoops um discord.js guide canvas oh interesting interesting so this is definitely what i want to do uh basic image loading canvas oh this is great to see thank you this is super useful for me so this is good okay awesome um you know i could just do this with native canvas i'm just using stroke and curve vertex so i don't necessarily need i would like to have p5 but i think that i can get by without it um so let's let's go here and let's just try this example for a second so i don't want this example exactly so i don't want load image i'm not going to do that i'm going to create a canvas 200 200 and get a context that's 2d um let's write on this is fine let's draw a line under the text sure let's skip the image so if i just run this right now and let me make this somewhere where you can see it okay it ran so how would i use this oh so i want it's gonna save this to a file but i guess what i can do is i can do canvas to buffer and send it as a message attachment but what if i just wanna before i add the discord bot i want to just like look and see what i've got so how do i node canvas save image how to create and save an image with node.js and canvas uh install canvas get the context fill the rectangle all this stuff okay hey i know how to draw to it right buffer to buffer right for oh oh how easy oh this is this is going to actually be much easier than i thought i mean without minus the part that i don't have access to p5 there's got to be a way that i could easily use the p5 functions though i could use p5 as a node module um i'm getting that comment um i will see if i can do that um the question is will that be compatible with this i guess maybe if i use instance mode with p5 so um let's try this okay oh i need to um require fs oh this is going to be good for whenever i eventually remake those twitter bot videos all right awesome okay amazing so now the issue is make my own random walk design here the thing is what i'm doing is very little in terms of drawing so let's just let's not worry about p5 right now let me see if i can make this work and i'll i'll figure out coming back to p5 later um i am going to go to my i mean should i do i suppose i mean the idea was to try to like keep this weird algorithm pattern thingy this seems like a little bit much to do right now let's just try to get this to work with a regular random walk so um like where uh random i have that random whistle project um which i think could be a good place to start i'll just grab that code um which does this all right this is very silly what i'm doing but the point is anything can go here i'm just gonna do a random walk so i need to i need to learn uh html5 canvas so to do can uh fill rectangle uh canvas fillrect method oh i hate w3schools i don't know why it just it makes me crazy that uh so let's go here fill rectangle x y width height okay so this should be um context fill rectangle 0 0 200 200 so let's let's make a variable with let's put these here so how do i set the color examples fill style equals green okay so i can do this fill style equals black let's comment all this out and let's see if this works all right do i have great okay great there's our png excellent now i'm going to make a variable x and y with divided by two height divided by two oh okay i'm gonna have to work on my random number generator let's not worry about the random seed right now um and i'm saying context fill oh that's the wait a second here oh because it's white i i forgot that that's how i designed it a white background and then fill style equals black let's see and then and i would say context oops fill rectangle x y step size step size okay then stroke weight all right let's skip that no stroke weight random okay so then i need to say math math.random times 4 and floor math.4 with that that would be without p5 move x and y and let's see do is this is this right let's try running this okay look at that is that my random walk i think so but um what was the dimensions i'm using in the random whistle project because the dimensions are specifically related to yeah um let's do this this is a little bit silly but let's uh i mean why not make it high resolution all right let's see what happens now so i made random nodes there we go look at that i generated that with node cool and this is what's going to get etched onto the whistle um so now i just need to add this to the discord bot i'm just looking at the chat here um all right okay so now oh boy can i really make this i've got oh i've got a half an hour here i think i can make this into a discord bot so we got to go to the coding train discord bot uh discord bot choo choo oh and i'm in this number database branch oh and i forgot that someone help okay so let's go to a new branch uh so i'm gonna go back to maine uh random generator and i don't know if david or kobe or somebody who's a moderator in discord can lock down the um bot testing channel again but that might be nice and i am going to go on to glitch where i have this deployed um choo choo bot discord and i'm going to turn it off on discord there really needs to be a button on discord i'm not on glitch to just disable an app but as those of you who've watched the way i disable it it's just by commenting it out um so let's head on over to uh discord and i'm gonna uh throw caution to the wind here and go to this bot testing channel i don't think i don't know if we have any discord moderators who are actually like actively paying attention right now so let me see if i can do this i'm going to move over to here um and let's see if i can do this i just want to go to bot testing and i'm just checking and people are typing in there so let's do edit channel permissions everyone does not have the ability to send messages anymore okay so i think um i think we are good to go oh nico is typing maybe because you're a station manager um should be oh nico did it should be locked now okay um let's just okay let me reenable the bot make sure it still works okay all right i'm coming back to uh there all right so here we go so i'm on decoding train discord i am in the bot testing channel and if i say the two commands that are active as i say choo choo i get a message back and if i say gif i give it a keyword i get a gif back okay so now the next step that i need to do is disable the bot on glitch run it here and hopefully it's working now i'm gonna make sure it's still working uh gif okay so it's still working and i assume it came from here i guess i don't have any console logging going on all right um so now i need to install i need to get this going here so where where am i here uh let's go back let's um oh npm install canvas oh no i need to give make it a brand get branch uh image generator image generation get checkout image generation okay now i will uh npm install canvas right so i want a new command oh i need to open up this all right so this is this is all in preparation of me eventually adding this to my discord bot tutorials so i'm just going to sort of work it out now i want to add a command which will be called oh no okay in commands we'll add a command called generate.js and let's just go to chuchu.js and copy that in here and i'm just always going to say reply generate so now where in commands.js i need to add generate and add a require so i should have a new command here just called generate and let's see oops and this is called generate is that like okay yeah all right so i hopefully now if i run the bot and let me let me just run nodemon so it just restarts okay so i'm running the bot now locally on this laptop and if i type in here choo choo i get my message back interesting is it running in two places i'm running it in two places i'm running it in two places cancel that one i got two messages back now let me type generate uh why didn't i see a reply oh i got an error at least i got an error what did i miss replies is not defined well didn't i have replies in there still oh i forgot that this is here okay great so this is good oh no no no i forgot that i have nodemon going so restart it automatically that's weird oh was it not running yay okay so that works so now i believe this is really as easy as let me get my all of this code and i'm going to write a function generate image and then instead of writing it to a file i'm going to say return buffer and then here there was that discord guide attachment so i think i should be able to just do this now attachment is okay so let's say constant buffer equals generate image and let's put this stuff at the top and i actually don't need the file system i'm not going to save it to a file that's an interesting idea so constant buffer equals generate image then create a new message attachment with that buffer and call it uh random walk walk.png then say here is your random walk what's member is that like the person's name um you know what i'm not going to bother with that um send an attachment sen oh yeah and i need to say message.channel send what is the chance that this actually just works restarted typing generate well i got an error discord is not defined at generate.js line six new discord message attachment so what am i missing here in terms of the require i need to require discord.js okay very reasonable um let's try that this is gonna be really exciting if this works oh my god oh is it is it ready okay basically got it oh as you know viewers watching you want to bring me a cat uh this is greta she's about to appear in front of the camera she didn't auto focus on her she was very blurry i'm being brought a cat uh this is greta oh my god she is really attached to me right now oh okay okay okay here let's let's bring her a little closer um hello grandpa she is my valentine you are my valentine she's a very very very uh patient and tolerant kitty cat so as you as i've mentioned before my kids take a baking class on saturdays between 1 and 3 p.m what did you make today chocolate truffles that sounds good and they're ready so i have to go downstairs to eat the chocolate truffles i will be down in 15 minutes um coming back to over here this is amazing that this worked um i am very excited to demonstrate this to my nature of code class so now what needs to happen is that any member well all right so there's i i what's next here i don't know how to even like proceed with this um i just like blowing my mind that this is now possible and it was so much easier than i imagined or it could it would be much easier if i could make this work with p5 so how hard would that be this is a great start so first let me just commit this um so let me just add basic uh canvas image generation i can't believe how i'm just like for some reason in my head this was going to be kind of like basically impossible to do um and this was much easier than i thought um okay so now let me get push origin image generation so this is i don't want to deploy this yet because i have to think about more how this is going to work but um so generate random walk pattern uh this branch is where i am working on the random walk pattern that will be generated according to the uh um members assigned random number oh god what what am i doing all right so that's there i'm gonna leave that there for right now i'm not gonna merge it what is it that i want to do i wanna see if i can get this to work with p5 because i would really like to be able to make examples that are direct ports of my p5 stuff so people are telling me that i can just do that p5 is available as a node module so this is the actual p5 official p5 yes project and i can npm install it but can i work with it in node um well let's just see what happens uh well let's try npm install p5 now if i were to say well i should go back to you know what i should go back to my other test let's go back to this test here so i'm going to go out of the discord bot code and just go right to this um let me move this over so it doesn't cover any of the code let me go let me let me try it with this so bear with me i got 10 more minutes here um generate bot okay so this is i now have p5 installed then i can say const p5 equals require p5 console.log so i definitely need to use instance mode but how do i tie p5 to create canvas's require canvas can i assign can i create the canvas with node canvas and then use the p5 functions to operate on it how would i do though uh oh we have a new member perfect timing i've been really plugging the membership stuff but wrong wrong button wrong button welcome shop i don't even know if you're somebody who's watching right now you might just be some random person oh no chef is watching you have just joined the coding train which means you will now have your very own random number assigned from this book 1485 that is row 6215 on page 125 column three okay um so how all right let what if i i mean there is somebody made let's look at this node p5 no no no no canvas no this is um canvas p5 node i've seen this is it p5 node this okay it's this that i'm looking for but it hasn't been updated in a while so how does this work basically oh it's the whole p5 library but it's requiring some other canvasy thing um got to be a way for me to do this does anybody know and nico's asking about the mongoose pete pull request i will i will uh attend to that before i sign off today um the question is all right well what happens when i just console log p5 the whole thing is there right this is ridiculous what i'm about to do but no window is not defined ah okay just by requiring it so how do i replace window is p5 this can i override it i just get an error just from requiring it this is bad all right what if i um let's see what's that error message does anybody encounter this window is not defined okay no.js okay so could i create like if i were to say this is silly but if i were to say like const window equals fake window and now run it i mean obviously i need to put something real there i i still get not defined let's get rid of this hold on window is not defined at p5 node modules p5 lib 5 min min there's no way i'm going to find out where that is this is this is where all all all fails so this might be a prompt to viewers um say global.window is that how i would do it oh like do i just need to do like global.window is that how you do things in i just wanted to like show up as not not defined obviously ah yes cannot create property request animation frame on string fake window no problem okay i just gotta like hand it this other canvas somehow global.window uh equals make it an object can i do that cannot read property now of undefined like is that another like global variable it's looking for property now of undefined so what's the property it's looking for okay at constance um color never uh yeah i have to make a face so this is this is going to be a harder problem it's one that i'm not going to solve right now so i would love i'm going to i'm going to post this as a project so let me um let me comment this out how to make p5 work with the canvas from node canvas um i got a to do and also a clue is probably in this p5 node module but no no node p5 this this has not been maintained but a clue is probably in here but the issue with this that i have is that it looks like to me it is rewrite not prefix preload to work yeah i want to be able to make this work by pulling the actual p5 library and then just adding some stuff onto it i think this actually has the whole p5 library in it so it doesn't really help it might be good enough right now but it's not going to be able to stay in line as p5 changes jsdom oh it is usually used to test browser things in node okay right fake a fake window um yeah so i'm looking at the comments is super helpful so i wanted to try to avoid making a fake window but that's also a perfectly fine option i'm gonna just put this aside right now i'm going to say npm init and not npm in it uh git init uh um hold on let's go to github.com codingtrain let's make this a repo that people could play with um new repo um under coding train this is uh node node p p5 test uh public um skip this step i am skipping this step and then i need to do this um i don't know what i'm doing ah i no no no oh that was so bad i forgot that i need to get ignore um so hold on let me let me get rid of this get repo no nope nope nope nope what's the key command to see hidden files on a mac no there we go delete that um let's make a uh very quickly dot get ignore with all the node modules does that say git ignore it does say git ignore get init then git add okay git add everything yeah okay git commit oops git commit testing node canvas with p5 then this is what i'm remembering get branch main okay then get remote at origin and get push ordermate okay so if you want to play around with this right now it is here oh i didn't make a readme um this is terrible what i'm doing i'm just going to do that and i will post this project into here so if anybody wants to explore this and comes up with a solution that might be useful for me please our suggestions please add it to if you have suggestions or ideas please add them to the issues uh here and certainly if you have uh if you get it to work and want to um post a solution through a pull request that is welcome as well and now um let me what was the last thing i want to do let's look at nico's um um this is the last thing that i'm gonna do here before i say sign off for the day uh random whistle is that what i was looking for no the discord bot um so the current the discord bot at present the way that i implemented it if i go to the new command oh oh i have to be in the in the branch that is the number db branch i added a new um i added a number a connection to a database and then nothing really i don't really do anything here um i'm just right i didn't actually implement anything okay so i just implemented the client and then i heard from people that i should be using uh mongoose which i still don't understand what that is so there is a wonderful pull request here from grueselhouse for using mongoose and what is mongoose because my understanding was that this was going to make it simpler object or mongoose is an object data modeling library for mongodb it manages relationships between data provides schema validation is used to translate between objects and code and the represent representation of these those objects in mongodb okay so that makes sense to me in the sense that uh i i'm not i'm thinking about the database as just a place to store objects that i would have in my code to sort of save state and then come back to it so that makes sense um jawwad is asking about discord here's the uh okay so so but when i looked at the pull request if i'm being honest it made it look like oh this is confusing to me it seems to be adding a lot of extra stuff and that's what i was kind of trying to avoid but let's take a look at the new code so this here is um there's some other stuff being added all right okay so instead of so this is good instead of this goofy numbersdb connection the numbers database in this particular collection i'm looking at a model so i guess what is a model a mongoose model is a wrapper on the mongoose schema a mongoose schema defines the structure of the document values among interface of the database for creating querying updating so that sounds good i think i like this okay um all right so this makes sense and this i can oh mongoose js elegant mango okay so uh mongoose require mongoose oh i sort of think i'm understanding this now okay writing mongodb validation casting and business logic boilerplate is a drag that's why we wrote mongoose okay i'm starting to understand this now if i get a model of a cat then i can make a new cat with a name and save it to the database okay where's that pull request i was looking at um so this would be finding everything there's a number model and then if i want to save something i put a value in it so i think though i need oh oh like why do i need this whole extra database.js file it's time okay so i'm gonna look at this more this is what i wanted to avoid was having like this seemed like oh my god i'm adding all this extra stuff this whole extra javascript file it's loading models locally like um maybe this is only because and then i have this like number schema thing uh which seemed like a whole extra thing i'm doing so i have to look at this a little bit more but so is it true that i can eliminate this whole database.js file if i'm connecting to a mongodb in the cloud on atlas that's what i would like to do justin is reminding me that the kids are waiting and in fact they are you don't have another cat for me all right everybody so i'm going to investigate this more i'm going to have to um and um mongoose makes it easy to make no sql schema and retrieving the data so niko this is i just did it i wanted i want to be able to very easily what i imagine having in my tutorial is just like set up your mongodb online get the uri to it and then we have to learn something about what a mongoose model is and we can do safe safe save retrieve retrieve retrieve but this to me is there a way i can avoid this extra although maybe i maybe i shouldn't maybe i do want to have a manager and i need to make a whole video set about that that's my question here okay everybody it's been two hours thank you for joining me today in this live stream um if there's any last a few i'm going to let this is going to take me two minutes and 50 seconds to say goodbye here as i play this uh goodbye song i'm going to turn that music down um i am also just going to do a last thank you and reminder about today's sponsor curiosity stream slash coding train uh please check that out um only today and tomorrow 41 off the entire year subscription plus you get nebulous food for free um the channel asks do you still teach at nyu i do i definitely do and if you want to follow along what i'm kind of focusing on i've kind of got way off track here um uh check out the nature of code syllabus spring 21 um i am currently in the semester working on this particular week so this is the stuff that's active on recording new videos uh glenn says goodbye and thanks for the motivation i appreciate that very kind of you i'm glad that this is motivating oh finished with my uh do a video with cj i would love to do another video with cj again as well thank you for that suggestion riz lots of waving um this is it's nice to spend my saturday afternoon so stay tuned what's coming out next many more threepoint x videos you should see the look on my daughter's face staring at me these puppy dog eyes opening wide sad face bye justin bye shreyas um i tend to be streaming on next saturday there will not be a live stream for sure um because i have another commitment on next saturday so i don't know when my next live stream but it has been recently on saturdays between 1 and 3 p.m it will definitely not be next saturday so hopefully there'll be another one is there another saturday in february after next week that'll be probably the last one i should also i should be doing the baking class right i should be doing the baking class not live streaming during your baking class would you agree with that there's a big nodding of a yes there uh gloria pickle um angel angela bell asked can we see your dog gloria pickle is not available she's not up here um i can pull up a picture of her probably but um but she's not available do a discord bot with some sort of front end um mini jimmy is programming pinball this afternoon thanks everybody i have to say goodbye now i will see you next week or not next week but stay tuned for all the videos that are coming out write things in the comments i really like reading them share your projects that you're making i really like seeing them and see you next time on the coding train goodbye everybody as always i always forget that this stock this stock is this dot this stuff i'm going to do this this star this dot this dot this dot song never forget the this dot i'm going to say once again here we go it's look forward to cartesian coordination autotune and the internet will fix that for me cartesian coordinates unicorns and rainbows and cupcakes what else is there yes kittens thank you very much kittens and rainbows and cupcakes notice that look what i get i'm really losing my mind okay let's do it the kids and kittens and kittens kids i feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this is a this is a wonderful thing okay we're gonna do it i'm really getting to something i need my sound effects that was invalid syntax i forgot all sorts of text generation analysis things that i will use continuously over and over again first thing i need to do is yes okay we're gonna do it kittens the kittens and kittens and kittens kittens and kittens and kittens and kittens kittens the kittens and kittens and kittens bye everybody have a good weekend
