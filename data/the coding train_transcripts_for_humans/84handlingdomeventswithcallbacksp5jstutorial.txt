With timestamps:

00:00 - hi so this video if you if you're just
00:04 - watching these videos like any videos
00:05 - like any other other I was telling to
00:07 - tell you about this video this is a
00:08 - crucial crucial video if you're
00:11 - interested in JavaScript programming
00:12 - because even though ostensibly the topic
00:15 - is just about how to make a HTML button
00:17 - and how to make something happen on your
00:19 - canvas with that button there's a much
00:21 - bigger topic at play here callbacks
00:24 - javascript event callbacks functions as
00:27 - callbacks how to bind a particular set
00:30 - of code to a particular action on the
00:32 - page this is basically a building block
00:35 - behind how just about everything in
00:36 - JavaScript works so in this video even
00:38 - though we have a very small context I
00:40 - want to add a button to this page when I
00:42 - click that button maybe I want the color
00:44 - of that rectangle to change the how that
00:49 - happens how I'm going to make that
00:50 - happen is like the building block for
00:52 - just about anything you might want to do
00:53 - in the future of your life with
00:54 - programming but again sometimes it's
00:56 - good to not do programming and go do
00:57 - well things so don't get me wrong here
00:59 - okay so let's think about this for a
01:01 - second I'm going to come over here and
01:03 - use my whiteboard to think about the
01:05 - page for a second so this is what the
01:08 - page looks at looks like right now
01:09 - there's an h1 element a paragraph
01:12 - element and a canvas so the first thing
01:16 - that I want to do is I want to get a
01:17 - button appearing here so I want to see a
01:20 - button here the way that you get a
01:24 - button to appear there is with the p5
01:26 - function create button now of course as
01:31 - with any of the create functions it's
01:34 - also possible to add a button just in
01:37 - the HTML file itself and again it's
01:39 - there might be good reasons for doing it
01:41 - that way over this way but just because
01:43 - we're kind of rolling with the punches
01:44 - here and looking at all not worrying
01:46 - about those kind of questions too much
01:48 - I'm going to add the button with the
01:50 - p5.js Create button function so now I
01:54 - want something to happen on the canvas
01:56 - when I click the mouse now you know if
02:01 - you've watched some of the other videos
02:03 - or used P 5gs before you can write a
02:07 - function called Mouse pressed and
02:09 - anything you write into that function
02:12 - will execute happen when you click the
02:16 - mouse so in fact let's make that happen
02:18 - right now I'm going to come back over
02:22 - here and I'm going to say so what do I
02:23 - need I want the color maybe I want the
02:25 - color of the background to change so I'm
02:27 - going to make a variable called BBG for
02:29 - background color and I'm going to give
02:33 - that variable in setup a value of 200 so
02:40 - now when I run this you can see it's the
02:43 - same the it's a grayscale color with a
02:46 - value of 200 that's the background and
02:48 - then I'm going to add this function
02:51 - mousepressed
02:51 - and in mousepressed I'm going to change
02:54 - the color to a random grayscale color
02:58 - now you know for you when you're doing
03:00 - this make it RGB and give it three
03:01 - random numbers all sorts of ways you can
03:03 - do it but I'm just trying to demonstrate
03:04 - something simply I'm going to click
03:06 - click every time I click on the canvas
03:10 - you can see that the background is
03:12 - changing color by the way any time I
03:14 - click over here or down here or up here
03:18 - so you can think of this mousepressed
03:20 - function as kind of like this global
03:22 - function that any at Global's there it's
03:26 - kind of the right word it's also kind of
03:27 - the wrong word but what I mean by that
03:28 - is it's the mouse pressed event for like
03:30 - the entire universe the universe being
03:32 - this page what I want to do is I want to
03:36 - create a button and I'm going to say I'm
03:41 - going to give some ten when I say create
03:43 - button I'm going to give it some text
03:44 - and we're going to see look at that
03:46 - now there's a button on the page what I
03:48 - want to do is when I click on that
03:50 - button have the background change hey
03:51 - look it works
03:52 - I finished we convened this video now
03:54 - right wrong the problem is I can also
03:57 - still click here and it can also still
03:59 - click here and over here what I want to
04:01 - do is I want to say this mouse pressed
04:04 - function I want to attach that mouse
04:06 - press function somehow to that button so
04:09 - only this code executes only when the
04:12 - button is executed what I mean by that
04:14 - again over here in terms
04:15 - this diagram is I want to take this
04:17 - mouse press function and I want to make
04:20 - it a callback callback for that button
04:25 - meaning when the button is pressed the
04:28 - button calls back I don't know why
04:30 - you're calling back I like to call
04:31 - forward or whatever call sideways it
04:33 - really doesn't really matter here but
04:35 - the point is that the ILA when you press
04:38 - the button it calls back to the function
04:40 - and this code executes right now this
04:42 - global function executes anywhere how do
04:45 - you attach it to how do you attach a
04:48 - particular function to a particular
04:50 - object to sort of bind that event of the
04:53 - out of clicking that object to a
04:55 - particular set of code so before I could
04:57 - do this I actually want to change
04:59 - something about this example that I
05:00 - think will make this make a little bit
05:03 - more sense as I go forward so the first
05:05 - thing I'm going to do is I'm going to
05:06 - write another function called change
05:08 - color and I'm going to put this line of
05:12 - code in that function and then I'm going
05:15 - to call change color in here
05:17 - so this is ultimately exactly the same
05:20 - thing that I had before when I click the
05:23 - mouse call this change color function
05:25 - which when they change color function is
05:28 - executed it picks a new color that new
05:29 - color is the background so again same
05:31 - thing I can click anywhere I can click
05:33 - on the button I can click up here I get
05:35 - a new background color every single time
05:37 - so what I want to do next is go back
05:44 - over here I'm like doing this really
05:46 - slowly because this is so like important
05:48 - and maybe I'm doing this too slowly what
05:51 - I need to do is I'm right let's change
05:54 - how I've written this here really what I
05:56 - want to do is I want to take this change
05:59 - color function and attach that to the
06:03 - mouse pressed event for this button and
06:08 - what how do I have a reference to that
06:10 - button the way I have a reference to
06:13 - that button is by storing the result of
06:16 - create button in a variable with lost
06:19 - room here but I'm taking create button
06:21 - and storing the result of that in this
06:23 - Abell button now instead of writing a
06:27 - generic global all universe and compass
06:30 - ik mouse press function I am going to
06:33 - call mouse pressed on the button itself
06:38 - I want to say call this function Mouse
06:41 - pressed on the button and when I do that
06:43 - what I'm saying is when the mouse is
06:46 - pressed on the button
06:47 - I want something the thing that I pass
06:51 - into the parentheses here to happen when
06:53 - I press the mouse on the button I want
06:55 - this to happen when I press the mouse on
06:58 - the button I want this callback to be
07:00 - executed
07:00 - what is the callback change color so
07:03 - this is the crazy thing it's not so
07:05 - crazy really because it's how JavaScript
07:07 - works but it's a little bit insane that
07:09 - I can have a function name change color
07:12 - I can reference that function here
07:15 - telling the button to call this function
07:18 - when you press the mouse now this isn't
07:20 - magic this is the way the p5 library
07:23 - works and in fact a kind of crucial
07:26 - piece of information that I've forgotten
07:27 - to mention is this all works because
07:30 - there is there is the p5.js library and
07:34 - there is also something called the p5.js
07:37 - library so the Dom library is what is
07:40 - allowing some of this additional
07:41 - functionality to work some of that
07:44 - additional functionality is a mouse
07:46 - press event for every single Dom element
07:49 - paragraphs h1 tags I'm using button cuz
07:52 - it's a nice scenario so I have let's
07:55 - just get to it okay so over here now
07:57 - what I want to do is I don't want to
07:59 - call change color inside this global
08:02 - mousepressed anymore instead I want to
08:05 - have a button variable I want to say
08:07 - button equals create button I don't want
08:11 - to say button mouse pressed change color
08:14 - and so now here we are this is the
08:20 - moment of truth right let's look at this
08:23 - page right I could click here on the
08:25 - canvas nothing happens I could click
08:28 - here on this text up here nothing
08:31 - happens but now if I click on this
08:33 - button
08:34 - I only want to click on the button does
08:37 - the background color change and that's
08:39 - because I have said this particular
08:42 - function should execute when you press
08:43 - on the button this is really lovely
08:45 - because it went up some video some time
08:48 - ago I looked at like how do you know
08:51 - where you're clicking on the canvas we
08:52 - need a big if statement if you like the
08:54 - mouse let where you clicked is like
08:55 - greater than this part in less than this
08:57 - party greater this part in less than you
08:59 - have to do all this detection now all of
09:01 - that is handled for you by the browser
09:03 - itself and sort of manage for you by the
09:05 - p5.js library so um you know there's so
09:10 - much more to this and I think that I'm
09:12 - going to get to more and more scenarios
09:14 - as I look at more and more examples but
09:18 - I think this is just this is kind of a
09:19 - nice like place to stop for this
09:21 - particular video and I'd say to you for
09:23 - your exercises add a button add more
09:25 - than one button add 10 buttons add two
09:28 - buttons and see what you can get can you
09:30 - make something change color can you make
09:32 - something go faster can you what can you
09:34 - change on the page my camera just shut
09:36 - off which is good timing because I'm
09:38 - about to stop this video so in the next
09:40 - video what I'm going to look at is CSS
09:42 - and styling and how you can style
09:44 - element and I think what I do that'll
09:46 - sort of come back to more events and how
09:48 - you might change element Styles based on
09:52 - certain types of interaction okay I'm
09:56 - gonna now hit stop

Cleaned transcript:

hi so this video if you if you're just watching these videos like any videos like any other other I was telling to tell you about this video this is a crucial crucial video if you're interested in JavaScript programming because even though ostensibly the topic is just about how to make a HTML button and how to make something happen on your canvas with that button there's a much bigger topic at play here callbacks javascript event callbacks functions as callbacks how to bind a particular set of code to a particular action on the page this is basically a building block behind how just about everything in JavaScript works so in this video even though we have a very small context I want to add a button to this page when I click that button maybe I want the color of that rectangle to change the how that happens how I'm going to make that happen is like the building block for just about anything you might want to do in the future of your life with programming but again sometimes it's good to not do programming and go do well things so don't get me wrong here okay so let's think about this for a second I'm going to come over here and use my whiteboard to think about the page for a second so this is what the page looks at looks like right now there's an h1 element a paragraph element and a canvas so the first thing that I want to do is I want to get a button appearing here so I want to see a button here the way that you get a button to appear there is with the p5 function create button now of course as with any of the create functions it's also possible to add a button just in the HTML file itself and again it's there might be good reasons for doing it that way over this way but just because we're kind of rolling with the punches here and looking at all not worrying about those kind of questions too much I'm going to add the button with the p5.js Create button function so now I want something to happen on the canvas when I click the mouse now you know if you've watched some of the other videos or used P 5gs before you can write a function called Mouse pressed and anything you write into that function will execute happen when you click the mouse so in fact let's make that happen right now I'm going to come back over here and I'm going to say so what do I need I want the color maybe I want the color of the background to change so I'm going to make a variable called BBG for background color and I'm going to give that variable in setup a value of 200 so now when I run this you can see it's the same the it's a grayscale color with a value of 200 that's the background and then I'm going to add this function mousepressed and in mousepressed I'm going to change the color to a random grayscale color now you know for you when you're doing this make it RGB and give it three random numbers all sorts of ways you can do it but I'm just trying to demonstrate something simply I'm going to click click every time I click on the canvas you can see that the background is changing color by the way any time I click over here or down here or up here so you can think of this mousepressed function as kind of like this global function that any at Global's there it's kind of the right word it's also kind of the wrong word but what I mean by that is it's the mouse pressed event for like the entire universe the universe being this page what I want to do is I want to create a button and I'm going to say I'm going to give some ten when I say create button I'm going to give it some text and we're going to see look at that now there's a button on the page what I want to do is when I click on that button have the background change hey look it works I finished we convened this video now right wrong the problem is I can also still click here and it can also still click here and over here what I want to do is I want to say this mouse pressed function I want to attach that mouse press function somehow to that button so only this code executes only when the button is executed what I mean by that again over here in terms this diagram is I want to take this mouse press function and I want to make it a callback callback for that button meaning when the button is pressed the button calls back I don't know why you're calling back I like to call forward or whatever call sideways it really doesn't really matter here but the point is that the ILA when you press the button it calls back to the function and this code executes right now this global function executes anywhere how do you attach it to how do you attach a particular function to a particular object to sort of bind that event of the out of clicking that object to a particular set of code so before I could do this I actually want to change something about this example that I think will make this make a little bit more sense as I go forward so the first thing I'm going to do is I'm going to write another function called change color and I'm going to put this line of code in that function and then I'm going to call change color in here so this is ultimately exactly the same thing that I had before when I click the mouse call this change color function which when they change color function is executed it picks a new color that new color is the background so again same thing I can click anywhere I can click on the button I can click up here I get a new background color every single time so what I want to do next is go back over here I'm like doing this really slowly because this is so like important and maybe I'm doing this too slowly what I need to do is I'm right let's change how I've written this here really what I want to do is I want to take this change color function and attach that to the mouse pressed event for this button and what how do I have a reference to that button the way I have a reference to that button is by storing the result of create button in a variable with lost room here but I'm taking create button and storing the result of that in this Abell button now instead of writing a generic global all universe and compass ik mouse press function I am going to call mouse pressed on the button itself I want to say call this function Mouse pressed on the button and when I do that what I'm saying is when the mouse is pressed on the button I want something the thing that I pass into the parentheses here to happen when I press the mouse on the button I want this to happen when I press the mouse on the button I want this callback to be executed what is the callback change color so this is the crazy thing it's not so crazy really because it's how JavaScript works but it's a little bit insane that I can have a function name change color I can reference that function here telling the button to call this function when you press the mouse now this isn't magic this is the way the p5 library works and in fact a kind of crucial piece of information that I've forgotten to mention is this all works because there is there is the p5.js library and there is also something called the p5.js library so the Dom library is what is allowing some of this additional functionality to work some of that additional functionality is a mouse press event for every single Dom element paragraphs h1 tags I'm using button cuz it's a nice scenario so I have let's just get to it okay so over here now what I want to do is I don't want to call change color inside this global mousepressed anymore instead I want to have a button variable I want to say button equals create button I don't want to say button mouse pressed change color and so now here we are this is the moment of truth right let's look at this page right I could click here on the canvas nothing happens I could click here on this text up here nothing happens but now if I click on this button I only want to click on the button does the background color change and that's because I have said this particular function should execute when you press on the button this is really lovely because it went up some video some time ago I looked at like how do you know where you're clicking on the canvas we need a big if statement if you like the mouse let where you clicked is like greater than this part in less than this party greater this part in less than you have to do all this detection now all of that is handled for you by the browser itself and sort of manage for you by the p5.js library so um you know there's so much more to this and I think that I'm going to get to more and more scenarios as I look at more and more examples but I think this is just this is kind of a nice like place to stop for this particular video and I'd say to you for your exercises add a button add more than one button add 10 buttons add two buttons and see what you can get can you make something change color can you make something go faster can you what can you change on the page my camera just shut off which is good timing because I'm about to stop this video so in the next video what I'm going to look at is CSS and styling and how you can style element and I think what I do that'll sort of come back to more events and how you might change element Styles based on certain types of interaction okay I'm gonna now hit stop
