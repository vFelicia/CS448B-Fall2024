With timestamps:

00:00 - hello welcome to a coding challenge i am
00:02 - just thrilled to be here i have had a
00:04 - wonderful invitation from my friend
00:06 - grady over at practical engineering to
00:09 - work on a simulation of horizontal
00:12 - directional drilling now if you had
00:13 - asked me a year ago hey are you ever
00:16 - going to do a coding challenge about
00:17 - horizontal directional drilling would
00:19 - say like what's that and probably not
00:21 - that doesn't sound like a thing i would
00:22 - do but after some research after being
00:25 - taught about this from grady i am just
00:28 - fascinated and i think there is
00:30 - potential to create a fun playable 2d
00:34 - casual game where you are
00:36 - the horizontal directional driller so
00:38 - what is horizontal directional drilling
00:40 - well you don't need to listen to me
00:41 - explain to it i've linked to practical
00:43 - engineering's video on the topic it's
00:45 - very well researched gives you lots of
00:47 - context and backstory as well as many
00:50 - amazing demonstrations of doing it on
00:52 - big and small scales
00:54 - grady was also kind enough to send me
00:55 - this diagram which sort of shows a
00:57 - scenario of how it might play out with a
00:59 - whole lot of suggestions for how this
01:01 - could be turned into a game from
01:02 - practice mode hard mode and other ideas
01:05 - i'm going to try to take all of that
01:08 - and synthesize it down into the simplest
01:10 - case scenario diagram it here on the
01:12 - whiteboard and then code it up
01:18 - all right my artistic skills aside here
01:20 - is the scenario we're dealing with in an
01:22 - overly simplified manner especially
01:24 - given the fact that this is completely
01:26 - two-dimensional we need to run some pipe
01:28 - from point a
01:30 - to point b
01:32 - if there were no river we could just
01:33 - excavate drop the pipe in and back fill
01:36 - it in but this river is here and also
01:39 - maybe there's some other restrictions
01:40 - that we can't dig up all the land so
01:42 - could we sort of thread the needle so to
01:45 - speak how could we just thread a pipe in
01:46 - and curve it around and steer it that's
01:48 - what horizontal directional drilling
01:50 - does now it involves all sorts of real
01:52 - world considerations drilling fluid and
01:55 - materials i'm not going to concern
01:56 - myself with any of that i'm just going
01:58 - to look at the mechanic of how the
02:00 - controller steers the drill and create a
02:03 - simulation mini game out of that now
02:06 - again i have very little real world
02:07 - experience with this but a regular drill
02:10 - you know the drill bit might just look
02:11 - like this
02:13 - obviously with some ridges and edges and
02:15 - markings and stuff to make it you know
02:17 - cut into things for horizontal
02:19 - directional drilling also sometimes
02:20 - called directional boring the drill bit
02:22 - itself will usually have something askew
02:24 - at the end we can think of it as like oh
02:26 - it comes off and it kind of points down
02:29 - this is what gives it a bias
02:31 - so as it's going into the ground and
02:34 - drilling this bias will cause it to
02:37 - curve down
02:39 - so that the drill as it's inserted
02:42 - it could start curving down in a 3d
02:44 - world this bias might be something that
02:46 - we fully rotate but here in our 2d
02:48 - scenario i'm just going to think of it
02:49 - as either pointing down or pointing up
02:51 - so pointing down for negative one and we
02:53 - could flip it to pointing up
02:56 - if i flip it pointing up it's going to
02:58 - start to curve the other way
03:00 - the drill is always turning there's no
03:03 - way for it to go straight so the
03:05 - challenge is if i have a drill that's
03:07 - always turning either up or down left or
03:09 - right on or off plus one minus one how
03:12 - can i effectively steer it through a
03:14 - complex path there could be all sorts of
03:16 - other stuff in the way here there could
03:17 - be other lines we don't want to
03:18 - interrupt strange rock formations i
03:20 - don't know what's underneath the earth
03:21 - and what engineers really deal with but
03:23 - we've got to be able to get some kind of
03:25 - control over steering this i think we've
03:27 - got what we need though for me to be
03:28 - able to get started coding here's the
03:31 - base code i'm going to start with now if
03:32 - for some reason this is the first time
03:34 - you're watching the coding train hello
03:35 - welcome
03:38 - this is p5.js a javascript framework for
03:41 - creative coding i use it in almost all
03:43 - of my videos if you've never coded
03:45 - before i do happen to have a complete
03:47 - intro beginner series there will be
03:49 - things in this video that you don't
03:50 - understand if you haven't coded before
03:52 - but i'll try my best to walk you through
03:54 - it and then you can always refer back to
03:55 - some of my intro videos to fill in the
03:57 - gaps when i'm starting with the same
03:59 - scene here a canvas with some ground and
04:02 - a river and my drill is going to start
04:05 - somewhere around here on the left i'm
04:09 - going to use p5 vectors as the main data
04:12 - structure to keep track of where is the
04:14 - drill and what direction is it moving
04:17 - so first thing first a position variable
04:20 - for the drill
04:25 - and i've put a little dot in the canvas
04:26 - for where the drill is going to begin i
04:29 - have the drill position what else do i
04:31 - need well i need a variable to keep
04:33 - track of the drill direction like what
04:36 - direction is it currently drilling in as
04:39 - well as the bias is the bias of the
04:41 - drill bit pointing up or pointing down
04:44 - this is again a physical thing that's
04:46 - either flipped up or flipped down plus
04:48 - one or negative one
04:52 - dir for direction
04:54 - bias for bias and i'm going to
04:55 - initialize the bias as negative one
04:58 - and the direction as a vector
05:00 - pointing horizontally
05:02 - straight i mean i guess we could start
05:04 - maybe the drill should start pointing
05:05 - down i don't know what would be typical
05:08 - you have to go you can't go in the earth
05:10 - this way so yeah let's have it pointing
05:11 - down
05:13 - so the simplest thing i could do right
05:15 - now would be to write a function call it
05:16 - drill
05:18 - and then in that function i could add
05:20 - the direction to the position
05:23 - and if i were to then call drill here in
05:26 - draw which happens over and over again
05:28 - you can see the drill is moving down so
05:30 - obviously i need to add this idea of the
05:32 - bias and being able to steer it around
05:34 - but before i even do that i'd like to
05:37 - draw the full path i think that will
05:39 - really help us in terms of visualizing
05:41 - the process here
05:44 - i'm going to use an array and every time
05:46 - i move the position right before i move
05:49 - it let's make a copy of where it was
05:51 - that's essentially the previous position
05:54 - it's very important that i make a copy
05:56 - because these are objects if i just add
05:59 - the object directly without making a
06:00 - copy i'm adding a reference to it and
06:02 - then i just have many many many many
06:04 - references to the same point so when
06:06 - that point moves they all move then in
06:08 - draw i can use begin shape and end shape
06:10 - to connect all the previous points with
06:12 - a line
06:16 - loop through everything in the path
06:20 - and you can now see this black line
06:22 - trailing behind the red dot now instead
06:24 - of drawing that red dot i'd like to
06:26 - visualize the drill bit so we can see
06:28 - what's going on in which direction the
06:30 - bias is pointing so let me first just
06:32 - draw it as a line pointing down
06:36 - and now i want to rotate it a skew up or
06:38 - down
06:40 - up i don't know which way is what but to
06:42 - rotate this line i need to make use of
06:44 - transformation another topic that you
06:46 - may or may not be familiar with but
06:48 - luckily for you i have a whole set of
06:49 - videos about transformations in p5
06:51 - transformations come up any time you
06:53 - need to rotate something so i want to
06:54 - rotate by let's say pi divided by six
06:58 - it's like 30 degrees times the bias so
07:01 - positive or negative direction of course
07:02 - you can see now that's way in the wrong
07:04 - place this is where i need to translate
07:07 - to the point of origin to have the
07:08 - rotation work correctly
07:14 - and there you go so let's start it
07:15 - actually at entering in around 30
07:17 - degrees
07:19 - i could create a vector from an angle
07:22 - interesting hmm
07:24 - let's try flipping the bias oh let's add
07:27 - a button for that
07:31 - so what this bit of code does is it
07:33 - creates a button attaches a mouse
07:35 - pressed event to it and whenever the
07:37 - mouse is pressed that bias is multiplied
07:39 - by negative one making it positive or
07:41 - negative or vice versa but look at that
07:44 - the drill bit is not pointing in the
07:46 - direction that the drill is actually
07:47 - going it's always just flipping left or
07:49 - right from pointing down so we need to
07:51 - also incorporate the heading of the
07:53 - drill bit itself into where the bias is
07:55 - pointing
07:57 - i've made an error here where i
07:59 - originally drew the drill bit pointing
08:01 - down but all of the rotation and angles
08:03 - are relative to the horizontal axis so
08:05 - for all this to work nicely i should be
08:07 - drawing the drill bit pointing to the
08:09 - right
08:10 - i also made another error which is that
08:12 - the heading is the heading
08:14 - the bias is affecting whether i'm
08:16 - rotating to up or down based on that
08:18 - heading so i want to multiply the bias
08:20 - only by that offset which is pi divided
08:23 - by 6. there we go now we can see the
08:26 - drill bit
08:28 - toggling between pointing up down up
08:30 - down up down up now no matter what angle
08:34 - we start with for example 90 degrees
08:37 - it's still going to work
08:39 - i can even start from zero degrees
08:42 - and you can see i'm still able to toggle
08:44 - and visually everything's looking right
08:46 - i'm actually doing this live on twitch
08:47 - and the chat is asking a great question
08:49 - should we be using push and pop here and
08:52 - i don't need to because i'm not drawing
08:54 - anything else after drawing the drill
08:56 - bit but it would be really good to
08:57 - protect myself by using it this
09:00 - translate and rotate will affect
09:02 - anything that comes afterwards that
09:03 - drill function don't let that mislead
09:05 - you that's not drawing anything but one
09:07 - i might say logically it might make more
09:09 - sense to put drill at the beginning
09:11 - and then put a push and pop around here
09:16 - all right i kind of went about this in a
09:17 - strange order because i really was
09:19 - working on just visualizing all these
09:20 - elements the key here is actually taking
09:22 - the bias and having it affect the
09:24 - direction to which the drill turns
09:26 - remember it's always turning it's like a
09:28 - shark it's always got to turn it can't
09:30 - go straight that's not what a shark does
09:31 - the shark always keeps moving you get
09:32 - the idea though this begs the question
09:34 - how much does the drill actually turn
09:36 - now i'm sure again there are real world
09:37 - values for all of these things i'm going
09:39 - to make up a value
09:41 - i'm going to call it angle .01 a small
09:44 - incremental change and i'm going to say
09:46 - direction rotate by that angle times the
09:50 - bias oop
09:52 - my drill it's taking off to space i have
09:55 - defied all the laws of physics it's
09:57 - amazing let's have the bias pointing
09:59 - down to start and now here we go
10:02 - i'm gonna try to toggle that bias
10:05 - curve back
10:07 - i gotta get to the other side
10:09 - [Music]
10:12 - oh no oh no don't hit the water
10:15 - now you can see if i just keep toggling
10:16 - it over and over again i'm that's
10:18 - essentially how i'm getting to go in a
10:19 - straight line and can i make it to the
10:21 - other side
10:23 - come on keep going
10:25 - [Music]
10:27 - we did it horizontal directional
10:30 - drilling coding challenge complete so
10:33 - what's next here certainly i shouldn't
10:34 - be allowing the drill to sort of orbit
10:36 - in this strange way i need to add
10:38 - collision detection to see if it hits
10:40 - water maybe the scene should be
10:42 - procedurally generated in a different
10:44 - every time i could have an easy mode and
10:46 - a hard mode if you're actually doing
10:48 - this in real life you don't see
10:50 - everything underground and have a
10:52 - complete view of the entire world of
10:53 - what you're doing so i would encourage
10:55 - you to take this as a code base and see
10:58 - how you can expand it share it with me
11:00 - on the coding train website there's a
11:01 - form you can submit links to your
11:03 - versions of horizontal directional
11:04 - drilling but i also have made hopefully
11:07 - not right now but by the time you're
11:08 - watching this a fully playable version
11:10 - of this game
11:11 - that code will be on github i've made a
11:14 - list of all sorts of new features and
11:16 - ideas that could be added to this by the
11:18 - time you're watching this a lot of those
11:19 - will be implemented maybe there'll be
11:20 - some new ones so come check out play the
11:23 - demo enjoy it contribute to this make
11:25 - your own version share it with me and
11:28 - see you next time on the coding train
11:32 - [Music]

Cleaned transcript:

hello welcome to a coding challenge i am just thrilled to be here i have had a wonderful invitation from my friend grady over at practical engineering to work on a simulation of horizontal directional drilling now if you had asked me a year ago hey are you ever going to do a coding challenge about horizontal directional drilling would say like what's that and probably not that doesn't sound like a thing i would do but after some research after being taught about this from grady i am just fascinated and i think there is potential to create a fun playable 2d casual game where you are the horizontal directional driller so what is horizontal directional drilling well you don't need to listen to me explain to it i've linked to practical engineering's video on the topic it's very well researched gives you lots of context and backstory as well as many amazing demonstrations of doing it on big and small scales grady was also kind enough to send me this diagram which sort of shows a scenario of how it might play out with a whole lot of suggestions for how this could be turned into a game from practice mode hard mode and other ideas i'm going to try to take all of that and synthesize it down into the simplest case scenario diagram it here on the whiteboard and then code it up all right my artistic skills aside here is the scenario we're dealing with in an overly simplified manner especially given the fact that this is completely twodimensional we need to run some pipe from point a to point b if there were no river we could just excavate drop the pipe in and back fill it in but this river is here and also maybe there's some other restrictions that we can't dig up all the land so could we sort of thread the needle so to speak how could we just thread a pipe in and curve it around and steer it that's what horizontal directional drilling does now it involves all sorts of real world considerations drilling fluid and materials i'm not going to concern myself with any of that i'm just going to look at the mechanic of how the controller steers the drill and create a simulation mini game out of that now again i have very little real world experience with this but a regular drill you know the drill bit might just look like this obviously with some ridges and edges and markings and stuff to make it you know cut into things for horizontal directional drilling also sometimes called directional boring the drill bit itself will usually have something askew at the end we can think of it as like oh it comes off and it kind of points down this is what gives it a bias so as it's going into the ground and drilling this bias will cause it to curve down so that the drill as it's inserted it could start curving down in a 3d world this bias might be something that we fully rotate but here in our 2d scenario i'm just going to think of it as either pointing down or pointing up so pointing down for negative one and we could flip it to pointing up if i flip it pointing up it's going to start to curve the other way the drill is always turning there's no way for it to go straight so the challenge is if i have a drill that's always turning either up or down left or right on or off plus one minus one how can i effectively steer it through a complex path there could be all sorts of other stuff in the way here there could be other lines we don't want to interrupt strange rock formations i don't know what's underneath the earth and what engineers really deal with but we've got to be able to get some kind of control over steering this i think we've got what we need though for me to be able to get started coding here's the base code i'm going to start with now if for some reason this is the first time you're watching the coding train hello welcome this is p5.js a javascript framework for creative coding i use it in almost all of my videos if you've never coded before i do happen to have a complete intro beginner series there will be things in this video that you don't understand if you haven't coded before but i'll try my best to walk you through it and then you can always refer back to some of my intro videos to fill in the gaps when i'm starting with the same scene here a canvas with some ground and a river and my drill is going to start somewhere around here on the left i'm going to use p5 vectors as the main data structure to keep track of where is the drill and what direction is it moving so first thing first a position variable for the drill and i've put a little dot in the canvas for where the drill is going to begin i have the drill position what else do i need well i need a variable to keep track of the drill direction like what direction is it currently drilling in as well as the bias is the bias of the drill bit pointing up or pointing down this is again a physical thing that's either flipped up or flipped down plus one or negative one dir for direction bias for bias and i'm going to initialize the bias as negative one and the direction as a vector pointing horizontally straight i mean i guess we could start maybe the drill should start pointing down i don't know what would be typical you have to go you can't go in the earth this way so yeah let's have it pointing down so the simplest thing i could do right now would be to write a function call it drill and then in that function i could add the direction to the position and if i were to then call drill here in draw which happens over and over again you can see the drill is moving down so obviously i need to add this idea of the bias and being able to steer it around but before i even do that i'd like to draw the full path i think that will really help us in terms of visualizing the process here i'm going to use an array and every time i move the position right before i move it let's make a copy of where it was that's essentially the previous position it's very important that i make a copy because these are objects if i just add the object directly without making a copy i'm adding a reference to it and then i just have many many many many references to the same point so when that point moves they all move then in draw i can use begin shape and end shape to connect all the previous points with a line loop through everything in the path and you can now see this black line trailing behind the red dot now instead of drawing that red dot i'd like to visualize the drill bit so we can see what's going on in which direction the bias is pointing so let me first just draw it as a line pointing down and now i want to rotate it a skew up or down up i don't know which way is what but to rotate this line i need to make use of transformation another topic that you may or may not be familiar with but luckily for you i have a whole set of videos about transformations in p5 transformations come up any time you need to rotate something so i want to rotate by let's say pi divided by six it's like 30 degrees times the bias so positive or negative direction of course you can see now that's way in the wrong place this is where i need to translate to the point of origin to have the rotation work correctly and there you go so let's start it actually at entering in around 30 degrees i could create a vector from an angle interesting hmm let's try flipping the bias oh let's add a button for that so what this bit of code does is it creates a button attaches a mouse pressed event to it and whenever the mouse is pressed that bias is multiplied by negative one making it positive or negative or vice versa but look at that the drill bit is not pointing in the direction that the drill is actually going it's always just flipping left or right from pointing down so we need to also incorporate the heading of the drill bit itself into where the bias is pointing i've made an error here where i originally drew the drill bit pointing down but all of the rotation and angles are relative to the horizontal axis so for all this to work nicely i should be drawing the drill bit pointing to the right i also made another error which is that the heading is the heading the bias is affecting whether i'm rotating to up or down based on that heading so i want to multiply the bias only by that offset which is pi divided by 6. there we go now we can see the drill bit toggling between pointing up down up down up down up now no matter what angle we start with for example 90 degrees it's still going to work i can even start from zero degrees and you can see i'm still able to toggle and visually everything's looking right i'm actually doing this live on twitch and the chat is asking a great question should we be using push and pop here and i don't need to because i'm not drawing anything else after drawing the drill bit but it would be really good to protect myself by using it this translate and rotate will affect anything that comes afterwards that drill function don't let that mislead you that's not drawing anything but one i might say logically it might make more sense to put drill at the beginning and then put a push and pop around here all right i kind of went about this in a strange order because i really was working on just visualizing all these elements the key here is actually taking the bias and having it affect the direction to which the drill turns remember it's always turning it's like a shark it's always got to turn it can't go straight that's not what a shark does the shark always keeps moving you get the idea though this begs the question how much does the drill actually turn now i'm sure again there are real world values for all of these things i'm going to make up a value i'm going to call it angle .01 a small incremental change and i'm going to say direction rotate by that angle times the bias oop my drill it's taking off to space i have defied all the laws of physics it's amazing let's have the bias pointing down to start and now here we go i'm gonna try to toggle that bias curve back i gotta get to the other side oh no oh no don't hit the water now you can see if i just keep toggling it over and over again i'm that's essentially how i'm getting to go in a straight line and can i make it to the other side come on keep going we did it horizontal directional drilling coding challenge complete so what's next here certainly i shouldn't be allowing the drill to sort of orbit in this strange way i need to add collision detection to see if it hits water maybe the scene should be procedurally generated in a different every time i could have an easy mode and a hard mode if you're actually doing this in real life you don't see everything underground and have a complete view of the entire world of what you're doing so i would encourage you to take this as a code base and see how you can expand it share it with me on the coding train website there's a form you can submit links to your versions of horizontal directional drilling but i also have made hopefully not right now but by the time you're watching this a fully playable version of this game that code will be on github i've made a list of all sorts of new features and ideas that could be added to this by the time you're watching this a lot of those will be implemented maybe there'll be some new ones so come check out play the demo enjoy it contribute to this make your own version share it with me and see you next time on the coding train
