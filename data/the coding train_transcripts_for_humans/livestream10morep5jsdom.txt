With timestamps:

00:00 - for about an hour or so I had a little
00:03 - lunch I walked around
00:06 - outside I'm back I'm going to uh start
00:10 - from where uh I left off from before but
00:12 - kind of start over a little bit too I
00:14 - was looking the first thing I where I
00:17 - ended off last time when I was streaming
00:18 - is I was attempting to look at how you
00:21 - can use the parent and child functions
00:24 - with P5 variables not just IDs
00:28 - specifying elements that are in uh a Dom
00:31 - element so all you what I'm talking
00:33 - about here is always uh appending or
00:37 - putting a Dom element in as a child of
00:39 - another Dom element the question is
00:41 - where are you accessing that Dom element
00:43 - from are you referring to an the idea of
00:45 - it or do you already have a reference to
00:47 - it in a variable and in the examples I
00:48 - showed before had a reference to it with
00:51 - a variable with a with an ID and now I'm
00:53 - going to do it with a variable by the
00:54 - way I'm just going to repeat that
00:55 - sentence again as soon as I record the
00:57 - actual video that I will uh make as a
00:58 - standalone video that I will upload so I
01:00 - repeat this every single time I
01:02 - apologize if you've watched these live
01:03 - streams before but this is the Raw live
01:05 - stream it will get archived it will all
01:07 - be there and periodically I will hit a
01:09 - button called I will hit a record button
01:11 - and pretend I'm making a video Lesson
01:13 - and then I will hit a stop button and
01:14 - that little section will be saved at its
01:16 - own Standalone chunk there is a chat
01:18 - where you can ask questions you can also
01:20 - tell me when the microphone cuts out or
01:21 - if the audio or the picture isn't clear
01:23 - so let me know right now if you can hear
01:24 - me okay uh if everything looks okay uh
01:28 - over here as well and a little bit out
01:29 - of out of focus when I come forward
01:31 - which is good because you know it
01:32 - reduces the amount of u imperfections in
01:34 - my face many imperfections I have a lot
01:37 - of imperfections many many imperfections
01:39 - and here I have this like green glow
01:41 - around me which is a little bit strange
01:42 - so um I don't know if there's actually
01:44 - anybody watching say hi if you're
01:46 - watching um um but uh I'm looking at my
01:50 - um dashboard but I'm just going to get
01:53 - started so this is the I'm reminding
01:54 - myself this is the example that I'm
01:56 - going to work with let me minimize this
01:58 - list um um and when I click here it
02:02 - makes an image
02:04 - okay okay so um and I'm ready oh there
02:08 - are some people watching all good you
02:10 - guys are back that's so nice it makes me
02:12 - feel warm inside to see people there
02:14 - oops and this I can't open up too much
02:17 - okay um so here we
02:25 - go in this video I want to look again at
02:29 - the parent child function so it's a bit
02:31 - of a review of that function but I want
02:32 - to look at it in a slightly different
02:34 - context before the main reason uh that
02:38 - that that I looked at the parent
02:39 - function was to take a Dom element that
02:42 - I generated in code and insert it into
02:45 - another place in sort of the existing
02:47 - HTML so which is fine and then to do
02:50 - that you just you reference the ID of an
02:53 - HTML element here I want to look at how
02:55 - do you use the parent child function
02:57 - with elements that you've generated in
02:58 - code which is ultimately the same thing
03:00 - but it's another chance to look at it
03:02 - and just also it's to make the point by
03:04 - the way the thing you can pass into that
03:06 - parent or child function is a P5
03:09 - variable that has a reference to a Dom
03:10 - element so you know that that
03:11 - explanation may not have made any sense
03:13 - let's look at an example that I've
03:14 - started to get some context here so um
03:18 - actually let's just look so what's going
03:19 - to be this is by the way the HTML file
03:21 - is empty so everything in this example
03:23 - I'm generating through code so first I
03:26 - made a make a paragraph that says this
03:27 - is a link it has a little gray
03:29 - background and a little bit of padding
03:31 - then I make an link an anchor tag with
03:33 - the word apples and I'm handling if you
03:36 - click on that tag with an event called
03:38 - add photo and that add photo function uh
03:42 - generates a image element boy a lot of
03:45 - stuff going on there so right first we
03:48 - have the paragraph element that's made
03:51 - here then I have the link element that's
03:53 - made here and when I click on that link
03:56 - an image appears which is happens uh
03:59 - down here image create image now this is
04:01 - important this is different than load
04:04 - image I'm like looking where am I
04:05 - looking at ah this is different than
04:07 - load image load image is something I
04:09 - looked at in previous videos where you
04:10 - load a file and then draw that file into
04:13 - your canvas here the create image
04:19 - function actually
04:24 - makes an image Dom element just like you
04:28 - might type in HTML image source equals
04:31 - and this Source equals could be the name
04:33 - of the image file or it could actually
04:35 - be a full URL to another image so this
04:38 - is a way of inserting an image as its
04:40 - own Dom element separate from drawing an
04:42 - image to the canvas on the page that's
04:43 - kind of an interesting topic of how you
04:45 - might do things with that in for another
04:48 - time but here just showing you yet
04:50 - another create function another HTML tag
04:53 - the image tag source being the attribute
04:56 - what is that image's source and uh over
04:59 - here here so we can see the result of
05:01 - all of this uh again I'm going to look
05:03 - at the output here click click click so
05:07 - what I want to see happen is I want this
05:11 - beautiful gray padded box I want the
05:14 - link to the apples the apples clicking
05:16 - thing to be in that box and I want those
05:19 - apples to get inserted also in that box
05:22 - I want everything to be in that box so
05:25 - here we look at and say p is the object
05:29 - that is the paragraph a is the object
05:32 - the Dom element object which is actually
05:33 - a P5 element object a is the link and
05:37 - image is the image so if I wanted a to
05:41 - go into p and this by the way I get this
05:45 - confused all the time which one is it a.
05:49 - parent P or is it p. par a you could
05:53 - make a case for both of those right you
05:55 - could make a case for you want a to be
05:58 - parented by P or you want P to parent a
06:03 - which one was it I honestly can't
06:05 - remember CU now that I'm even like
06:07 - asking this question I confused myself
06:09 - so my let's go with my first instinct
06:11 - which is that I want a to have as its
06:14 - parent P the action is being applied to
06:17 - a and the action is make its parent P
06:18 - I'm pretty sure that's right and you can
06:21 - see there that worked so now the Apple's
06:24 - link is inside the paragraph So the
06:26 - difference is it appears up there rather
06:28 - than as a separate thing below and now
06:30 - when I click apples those images get
06:32 - added below which actually is maybe a
06:34 - nice effect but what I could say is also
06:38 - like image. parent P so now and I've got
06:43 - a problem again as soon as I do this
06:45 - what's wrong this is not a global
06:47 - variable so I don't have access to that
06:49 - variable scope down here so I'm going to
06:52 - make that a global variable and I'm
06:54 - going to say p equals create p and I'm
06:57 - going to run this and now when I click
06:58 - apples those images are now also inside
07:01 - that paragraph element so this is just
07:05 - and incidentally let's just let's just
07:07 - remind ourselves I could have said p.ch
07:09 - child image and this if my mind is
07:13 - working correctly these are identical I
07:16 - want image to be parented by the
07:19 - paragraph or I want the paragraph to
07:22 - child the image right so that's the
07:25 - action that's the way of thinking about
07:26 - it honestly a better way of thinking
07:28 - about it would be to look it up in the
07:29 - p5js documentation I will include a link
07:31 - to that below and I'm sure it will say
07:33 - it there but this is something that
07:34 - certainly does confuse me um but uh in
07:37 - general I stick to the parent function
07:40 - um and there you go so this is a
07:41 - scenario that you are looking at now I
07:44 - um I want to look at this also because I
07:47 - think we could kind of raise the stakes
07:49 - here a little bit so this is probably a
07:51 - good place to stop watching this video
07:54 - but I'm going to go on anyway and what
07:56 - I'm going to do is I'm going to make a
08:00 - whole lot of these like what if I make a
08:02 - whole bunch of these let's think about
08:05 - this four VAR I equals z i is less than
08:10 - uh five let's just do five right now I
08:13 - ++ and I'm going to put a loop around
08:16 - all of this code and I don't I don't
08:18 - want the global variable
08:20 - anymore and here I'm going to comment
08:23 - this I'm going to comment out what's
08:24 - going on here so first I just want to
08:26 - see the result here so the nice thing
08:29 - that you can see here is this principle
08:30 - still applies right now we're making a
08:34 - paragraph a link link gets parented by
08:36 - that paragraph another paragraph a link
08:39 - link gets parented by that paragraph now
08:40 - for you I might say as an exercise could
08:43 - you make each one of these paragraphs
08:44 - have different content could you make
08:46 - one a link called apples and one a link
08:49 - called blueberries one a link called
08:51 - bananas bananas depending on where you
08:54 - are in the world
08:56 - um um but uh so that might be something
08:59 - that you add to yourself and maybe I'll
09:01 - work on that another time so but the
09:03 - point of this now is this is a nice
09:04 - opportunity for us to remind ourselves
09:07 - that now this ad photo call back when
09:11 - it's
09:11 - triggered what if I want to do the same
09:14 - thing what if I want to get the images
09:16 - inside right when I click on this one
09:19 - the images should appear inside that one
09:21 - when I click on this one the images
09:23 - should here inside that one this is a
09:25 - pretty tricky problem but it is doable
09:28 - and it us uses something that you
09:31 - haven't used before that I'm excited to
09:33 - show you so let's see how we can make
09:35 - this work so the question is what do I
09:38 - put here so first let's ask the question
09:41 - what do I even have access to well I
09:44 - have access to the keyword this do you
09:48 - remember that keyword this what is this
09:51 - referring to it's referring to the Dom
09:55 - element that triggered the call back ad
09:58 - photo the specific one a so the link so
10:03 - this would be parenting the image by the
10:05 - link and we could do that and let's run
10:08 - that let's see if that at least gives us
10:10 - something so that actually is working
10:12 - the weird thing is this is actually part
10:13 - of the link which is kind of an
10:14 - interesting effect all of these are part
10:16 - of that same link I click on any of them
10:17 - I keep adding but I wanted them to be
10:19 - separate just inserted into the
10:22 - paragraph right so this works it's nice
10:25 - how could I get access to the paragraph
10:28 - okay
10:30 - let's let's make a
10:32 - diagram so over here let's think about
10:36 - what's actually on the
10:38 - page I have
10:41 - paragraph which has inside it an anchor
10:44 - followed by another paragraph which has
10:47 - inside it an anchor so what I previously
10:50 - just did is I took that
10:53 - image and inserted it the image of the
10:56 - apple and inserted it as part of the
10:58 - anchor but what I want to
11:00 - do is I want to take that image and
11:04 - insert it as part of the
11:08 - paragraph paragraph is a child of
11:13 - body anchor is a child of paragraph and
11:16 - my new image I want to insert as a child
11:21 - of
11:22 - paragraph but the only thing I have is a
11:25 - reference is to this well what if I
11:28 - could reference this anchor tag and ask
11:30 - hey who's your parent who where's your
11:33 - it's like when you're at the playground
11:34 - and a there's a child who's doing
11:36 - something and you say where's your you
11:38 - don't want to know about this but I
11:39 - spend a lot of time with my own children
11:40 - in a playground and this sort of like
11:41 - relates to it in a second but then it's
11:43 - like a weird thing that I'm talking
11:44 - about so back to
11:47 - this I want to know who's your parent a
11:51 - and so there's a way that P5 will give
11:53 - you that right if I say
11:56 - parent with a argu arent I'm saying
12:00 - assign this element's parent to this
12:03 - other element if I say parent with no
12:07 - argument parent blank I'm asking P5 to
12:10 - tell me who the current parent is so
12:12 - look at this come back over here I can
12:15 - say now I can say VAR paragraph equals
12:19 - IM uh sorry this.
12:22 - parent this is me asking this you're the
12:25 - anchor tag this anchor tag who is your
12:27 - parent oh your parent is this paragraph
12:30 - great make the image part of that
12:33 - paragraph and I'm now going to run this
12:36 - and you can see T I mean it looks the
12:39 - same but this is no longer a link so
12:41 - it's now been parented by the paragraph
12:44 - and by the way um so this is sort of the
12:46 - end of this except I actually have a
12:48 - couple things I wanted to another thing
12:49 - I wanted to add to this which I think
12:51 - would be interesting oh I got this is
12:52 - great I'm going to add something to this
12:54 - which I think would be interesting uh
12:56 - let's just do that now I have something
12:57 - else that I want to show you towards the
12:58 - end of this video already 10 minutes in
13:01 - but there's a few this is this is going
13:02 - sort of well so I'm not ready to stop
13:04 - just yet so let's let's add what I want
13:07 - to add to this is something like okay so
13:08 - what I want to add and let's put this in
13:11 - the HTML
13:12 - file uh which has some extra style stuff
13:15 - that I'm not using take that out um let
13:18 - me add a button button ID equals
13:21 - clear clear and I'm going say clear
13:24 - images so I want to add to the body of
13:27 - the page and I'll put it ins inside a
13:30 - paragraph just so it has some padding
13:33 - around it I want to add onto the page a
13:36 - button at the top and that button is
13:38 - clear images and when I press that
13:41 - button I want to remove all the images
13:43 - that have been added how do I do
13:46 - this now in theory oh you know there's a
13:50 - bunch of let's think about this for a
13:51 - second oh so there's an there's an
13:52 - there's actually a quick way that I
13:53 - could do this without even the way that
13:55 - I was thinking I was going to do this so
13:56 - there's two different ways we could
13:57 - think about this number one is let's
13:59 - come back to this diagram now that this
14:01 - is working let's think about what we
14:04 - have a paragraph with an anchor inside
14:07 - it and an image and maybe another image
14:10 - right another paragraph with an anchor
14:13 - inside it and an image right we have a
14:15 - bunch of paragraph elements with things
14:18 - inside of it and I want to just how can
14:20 - I find all of the images on the page
14:23 - that's right give me all the images on
14:24 - the page
14:26 - well here is a way I could find all the
14:29 - images on the page you know about this
14:31 - because I did this in a previous video
14:34 - select
14:36 - all IMG select all IMG would suddenly
14:40 - give you an array of all the image
14:43 - elements anywhere on the page no matter
14:45 - where they are in that page so this is
14:47 - useful if I could get all those images
14:48 - elements maybe I could do something to
14:50 - remove them all from the page so while I
14:52 - could do it this way and I'll say you do
14:54 - it this way after you watch this video
14:55 - if you're following along do it with
14:57 - select all as an exercise I'm going to
14:59 - do it a slightly different way because
15:02 - sometimes you might not be able to
15:03 - easily use select all and what you're
15:05 - doing what if instead you just kept your
15:08 - own array of Dom elements and this is
15:10 - not an uncommon
15:13 - practice uh actually I don't know what a
15:15 - common or uncommon practice is because I
15:16 - don't do any of this for real I'm just
15:18 - figuring it out and making videos about
15:20 - it so it's not an uncommon practice in
15:21 - my making video examples about it anyway
15:24 - so if I come back to the code I might
15:26 - say VAR images equals array
15:29 - so I'm creating a global variable that's
15:31 - an array where anytime I make one of
15:33 - these elements I'll store a version of
15:35 - it so I have this for myself and in that
15:38 - case anytime I make an image
15:41 - element I can say image. push I'm sorry
15:45 - images. push image so this is me adding
15:50 - that image object to this array which is
15:52 - a global variable so now anywhere in
15:54 - this code I have access to all of those
15:57 - image objects
15:59 - this can be very useful because for
16:01 - example um I could I could do something
16:04 - I could remove oh I could remove them
16:06 - one at a time which would be kind of an
16:08 - interesting thing to do we could we
16:09 - could do that or I could remove them all
16:12 - at once I could apply a style to all of
16:13 - them let's look at just removing them
16:15 - all at once so albeit this is an array
16:18 - that I could fill with select all I'm
16:20 - making it myself so let's take a look at
16:24 - uh how I might do this so first of all
16:27 - what's on the page there's this but
16:28 - button how do I get access to that
16:30 - button that button is made in the HTML
16:32 - file with an ID called clear so I just
16:34 - need to use select so I need to say VAR
16:37 - button equals
16:39 - select button oh no I called it
16:43 - clear and then I want to handle when
16:46 - it's pressed with I don't know clear
16:49 - stuff I'll write a function called clear
16:53 - stuff and here is where I can do a loop
16:57 - I already have that array that HS all
16:59 - the image objects in it for index I from
17:02 - zero to the length of the array so for
17:05 - every single element in that
17:07 - array uh what was it called uh images.
17:11 - length i++ now this images
17:16 - indexi do
17:18 - something so right here now I know it's
17:20 - showing me syntax errors but this is now
17:22 - me saying I whenever I made an image
17:24 - element I put it into that array hoay
17:27 - for me so now I have this like back it's
17:29 - like a backup it's like redundancy like
17:30 - I just I'm making all these elements and
17:32 - in case I ever need to refer back to
17:34 - them I've got them all in this array
17:35 - sure I could get them with select all
17:37 - but I'm really cautious and worried
17:38 - about it I'm going to make my own array
17:40 - so now I could apply a style to them I
17:42 - could change their source to show a
17:44 - different image but just to demonstrate
17:46 - removing stuff that's there's a P5 Dom
17:50 - Library function called remove and
17:52 - remove does is actually removes it from
17:55 - the page which by the way is different
17:56 - than hide so I could use hide which is
18:00 - going to hide it make it so you don't
18:02 - see it but the element is still actually
18:04 - there as part of the sort of like active
18:06 - page so it could show it again if I
18:08 - remove it it's gone it's deleted it's
18:10 - not coming back so let's not worry about
18:13 - hide so much right now let's add remove
18:15 - so all that I've done is now anytime I
18:18 - add one of these
18:21 - images all of those images wherever
18:23 - they've been added all of those images
18:26 - are now part of this array
18:29 - so now all I need to do when I hit clear
18:33 - is it will Loop through the whole array
18:35 - and remove them all and there you go and
18:37 - now I can add some more
18:40 - again and I can hit clear and it works
18:43 - again now one thing I probably should do
18:46 - is once I've actually removed them I
18:48 - could probably reset the array back to
18:50 - blank it worked anyway but I might want
18:52 - to just sort like clear that array
18:54 - because I don't need references to those
18:55 - objects which have now since been
18:57 - removed so this is Hope showing you a
18:59 - bit more of stuff that you can do this
19:01 - is I'm showing you again just to sort of
19:03 - recap a little bit I can make stuff in
19:06 - the HTML file and access it through
19:08 - select by an ID like I did with that
19:10 - button I can make elements dynamically
19:13 - in a loop like I did with create p and
19:15 - then I could also make other elements
19:17 - parent them to those elements have
19:19 - things inside then later I could make
19:21 - elements that are based on of an event
19:23 - and I could know which Dom element
19:25 - triggered that event and then I could
19:27 - know what's the parent of that Dom
19:28 - element that triggered the event and put
19:30 - other things in that Dom element so
19:32 - there's a lot of pieces to this example
19:34 - but hopefully this is showing you kind
19:35 - of a bit of the spectrum now of how you
19:37 - might write HTML write JavaScript to
19:40 - generate control style select select all
19:43 - that sort of thing I think I have um two
19:45 - more uh videos that I want to make one
19:47 - is about how you might drag and drop a
19:49 - file into the browser and use the
19:51 - contents of that file and then I keep
19:53 - looking over here because I'm looking at
19:54 - the time and then another uh video just
19:57 - to show you about sort of controlling
19:59 - interface elements kind of in a
20:01 - zombified way so they just like act on
20:02 - their own which I think it's kind of
20:03 - interesting so uh that's the end of this
20:06 - particular rather long 17-minute video
20:08 - and I'll be back with another
20:11 - one okay I'm going to check the
20:13 - chat and
20:16 - um uh thanks for listening
20:19 - folks uh hopefully that made sense and
20:22 - that was like kind of a useful example
20:24 - by the way I'm saving all these examples
20:25 - the camera just went off good timing I'm
20:27 - saving all these examp examples and
20:29 - they're all in a GitHub
20:32 - repository uh called video Lesson
20:35 - materials I wonder if I just Google
20:37 - video Lesson material shiftman GitHub so
20:40 - when I make uh an example in theory U I
20:44 - know I'm standing in front of this so
20:45 - let me just come over here um uh under
20:48 - here in this GitHub repository under
20:49 - code usually the examples are found here
20:52 - I need a better way of integrating this
20:53 - all together possibly in like a website
20:55 - or something like that but at least you
20:57 - can look and find stuff here I'm not
20:58 - very good at updating this so you send
21:01 - me an email to remind me or I don't know
21:03 - some other way of contacting me that
21:04 - uses the internet um but also uh if
21:07 - you're typing along and you want to
21:08 - submit a poll request to this repository
21:09 - that's super helpful to me and thank you
21:11 - to uh Kenny Lao from China who has like
21:15 - submitted so many of these uh and also
21:17 - Osama from ITP who submitted a few too
21:20 - thank you guys for for helping me out
21:21 - here okay uh so I need to look back at
21:24 - my
21:27 - list where's my video library list so I
21:30 - got this so things that I haven't
21:33 - done are passing an argument into a
21:36 - callback event which requires the
21:38 - closure uh I would like to get to that I
21:41 - don't know if I'm going to do that today
21:42 - it's a little beyond the scope of this
21:44 - is like a crazy long list of Dom videos
21:46 - I've somehow made um I want to do drag
21:48 - and drop which I think is just like a
21:50 - kind of fun useful thing um and then
21:53 - look at controlling interface elements
21:54 - maybe I'll maybe I don't know it's 215
21:58 - got another 45 minutes here I think
21:59 - before I need to move on so let me do
22:01 - the drag and drop so I need to get set
22:03 - up for that um um let me get set up for
22:07 - that so uh here I'm going to hit the
22:09 - play play ad button while I get set up
22:13 - there's only six I'm not going to tort
22:14 - you with the play ad button I just find
22:15 - it so funny that it's there uh okay so
22:18 - let me save
22:20 - as um uh drag and
22:26 - drop uh and uh let me delete all
22:36 - this
22:39 - and
22:42 - uh um let
22:45 - me create sorry uh create
22:48 - canvas uh
22:50 - 200200 background
22:53 - zero and then in the index.html file I'm
22:56 - going to add a like a
22:59 - uh ID equals drop
23:02 - zone and then I will style It Drop Zone
23:08 - with uh some padding oh this needs to be
23:11 - in
23:14 - style uh I'm going to add some I should
23:17 - probably do this in the video but in the
23:19 - interest of time I'm going to prepare
23:20 - this in advance uh border style dashed I
23:26 - don't know border weight or something
23:28 - let's see if this
23:31 - works and then I'm going to say uh drag
23:35 - your file here so let's do this oh that
23:38 - worked good enough so you can see the
23:41 - idea here is that what I want to create
23:43 - is an example where you drag a file from
23:46 - your hard drive into that area and it's
23:48 - an image file it's displays in the
23:50 - canvas and then after I do that I'll
23:52 - switch it so you can like drag the file
23:53 - just right onto the canvas which is kind
23:54 - of the same thing um
23:58 - so uh so now what I need in order to do
24:00 - that is a bunch of
24:02 - images so I'm going to go to my go-to
24:04 - ridiculous thing that I've been doing
24:06 - it's my little running running gag about
24:09 - rainbows
24:12 - unicorns uh so uh let's see uh view
24:17 - image let me save no seriously uh save
24:22 - image as
24:25 - rainbow Buzz Marketing this website here
24:28 - know mean to be doing uh and then uh
24:31 - let's get um this one too uh view
24:35 - image save as a rainbow 2.
24:40 - JPEG and now uh I need a
24:48 - unicorn
24:50 - uh uh this is a good I don't know this
24:52 - is a good one uh view image uh save
24:56 - image as a unicorn
25:00 - uh and
25:04 - uh
25:06 - microbiology this is a recent interest
25:08 - of
25:10 - minees uh here we go some
25:13 - bacteria uh save image as
25:18 - bacteria okay there we go I've got a
25:20 - bunch of images and so the idea here now
25:23 - is that I'm going to drag these images
25:25 - here and when I drag them here they will
25:27 - appear in into the canvas okay so uh
25:30 - anybody have any questions comments
25:32 - worries concerns add them into the chat
25:35 - I'll see them in about 15 seconds I'm
25:37 - going to pause and drink some water over
25:40 - here hopefully everything's still
25:50 - working I'm going to cycle the cameras
26:02 - and come back
26:08 - here uh okay I'm racing oh I'm over here
26:12 - by the way oh this camera's off I'm
26:14 - tripping over things if you guys are
26:16 - watching this you're very
26:20 - kind
26:24 - okay where is thumpkin by the way that's
26:27 - the song that is always been in my head
26:29 - constantly while making these videos and
26:31 - I keep saying I'm going to sing it in
26:32 - while during a break but I can't
26:33 - remember what it's called and I think
26:35 - I'm singing fjaka it's like the same
26:37 - tune okay I think I'm ready for this
26:39 - anybody have any comments nope uh
26:41 - there's a few of you three or four of
26:42 - you watching I'm going to record this
26:44 - okay so um uh let's delete this apples.
26:49 - jpeg it's
26:50 - unnecessary and hit
26:53 - save uh and uh that's good okay here we
26:59 - go which one of these pens is good this
27:01 - one looks like it'll be
27:03 - okay uh and here we go oh I'm going to
27:07 - start over
27:12 - here in this video I'm going to look at
27:14 - a feature of JavaScript in the browser
27:16 - but something that's also built into the
27:18 - p5js framework in a in a nice way that
27:21 - allows you to drag a file a text file an
27:25 - image file a Json file any sort of file
27:27 - what's Json maybe you don't know what
27:29 - that
27:29 - is it's a thing that I'll talk about in
27:32 - another video that I'm sing this Isa
27:35 - which is speak singing is sort of I
27:37 - don't know what I'm talking about let me
27:38 - start this video I don't want that in
27:40 - the video I'll do myre Ste of jokes in
27:43 - another another
27:45 - time hello I don't need to say
27:50 - hello
27:53 - okay in this video I want to look at a
27:55 - feature of web browsers and something
27:57 - you can do in JavaScript in general but
27:59 - also this thing is built into the p5js
28:00 - library in a rather nice way that I
28:02 - enjoy and this feature is dragging a
28:05 - file into the browser and making use of
28:08 - that file and that file could be an
28:10 - image it could be a text file it could
28:12 - be some sort of data file data is a
28:14 - thing that I'm going to get into in some
28:16 - future videos there's different kinds of
28:17 - data formats so there's lots of
28:19 - potential to what you could do if you
28:21 - ask the user to say hey give me an image
28:24 - and I'll do something that's really
28:25 - exciting and interesting in the browser
28:27 - with that image or give give me 100
28:28 - images and even that so let's look at
28:30 - how that that works so first of all what
28:32 - I mean by that and I guess I probably
28:34 - don't need this diagram but I'm going to
28:35 - Draw It Anyway is on the web page I'm
28:38 - going to make an area on the page right
28:40 - so I'm going to have a canvas and I want
28:43 - an area on the page where if I have some
28:45 - sort of file if I drag that file and
28:48 - release it there and if this is an image
28:51 - I want to see that image then suddenly
28:52 - appear and be drawn into the canvas so
28:55 - how do you do that let's go and look so
28:57 - I've set this up in advance I have this
29:01 - particular example and you can see it's
29:03 - got exactly what I'm talking about this
29:05 - canvas is made with the create canvas
29:07 - function and you can see background is
29:08 - called so you can see that it has a
29:10 - black background then there above the
29:12 - canvas is this like dashed area on the
29:16 - screen that says drag your file here now
29:18 - where did that come from that is written
29:21 - into the HTML file so I'm going to go
29:23 - over here and look at the uh canceled
29:26 - look at the HTML file and you can see
29:28 - there it is there's just a paragraph
29:30 - element drag your file here I gave it an
29:33 - ID called Drop Zone because I'm going to
29:35 - need to refer to it hey that's the
29:37 - paragraph element that I want to be able
29:38 - to drop something onto and then also
29:41 - I've just written some style some Styles
29:43 - referring to that drop zone and maybe
29:45 - just so it's a little bit more visible I
29:47 - might say font size is 36 point and
29:50 - maybe I'll do something like width is
29:52 - 50% so by the way this is also something
29:54 - that you might not have seen before uh
29:56 - there's all of these units that are are
29:58 - happening in CSS PX for pixels so I
30:01 - actually like the number of pixels want
30:03 - that padding point for something that
30:05 - has to do with typography that I'm sure
30:07 - somebody understands much better than I
30:09 - do but you know the larger the point the
30:11 - larger the font size but also percentage
30:13 - being relative so this Dom element is
30:15 - always just going to be 50% the size of
30:18 - the page which you'll see now if I hit
30:21 - run again you can see as I resize the
30:23 - page that Dom element doesn't have a
30:26 - fixed size it's always just 50 50 % of
30:28 - the page that's a nice little tidbit
30:29 - that I'm adding into this video so how
30:31 - do I make it so that I can drag a file
30:33 - there incidentally what happens if I
30:35 - drag a file right now I drag this file
30:37 - over here I drop it and I've lost I'm
30:39 - gone from the page look and you can see
30:41 - that what is it that that file is just
30:42 - literally opened up in the page it's the
30:44 - file of bacteria I don't know I was
30:46 - trying to do something other than
30:47 - rainbows and unicorns but maybe bacteria
30:49 - I went in the wrong direction but it's
30:51 - interesting okay so um so I need to I
30:54 - need to get this working so first of all
30:57 - I need to add some JavaScript events to
31:00 - this element I want to handle the event
31:02 - so the browser handled that event for me
31:04 - right when you drag the file into the
31:06 - browser it assumes like Oh I'm a browser
31:08 - you're dragging me a file I'll open it I
31:10 - want to say to the browser no no no no
31:11 - no no no no no no I'm in charge here
31:13 - don't do what you're going to do I got
31:14 - something else for you I got something
31:15 - else planned so if I come over here and
31:18 - I first I need to do is get uh I'm going
31:21 - to make a variable and I'm going to call
31:22 - Select so select and let's make this a
31:25 - global variable because I might want to
31:27 - access it in other places I'm going to
31:29 - say select the drop zone now something
31:32 - that I'm doing here which might you
31:34 - might find a little bit confusing but I
31:35 - I find this to be just so convenient I
31:37 - like to just name my variable with the
31:39 - same name as the ID it's absolutely not
31:41 - required the ID can be totally that and
31:43 - nobody knows whether or cares whether
31:45 - they're the same just you the programmer
31:47 - for me it's a little bit convenient but
31:49 - I don't want you to be confused that
31:50 - there's some like matching happening
31:52 - there that's just I happen to name the
31:53 - variable the same name as the ID okay so
31:56 - what's next
31:58 - you know that you can attach an event to
32:01 - an area by referencing that event uh as
32:05 - a function called on that object so the
32:07 - mouse pressed event the changed event
32:09 - the input event the the mouse over the
32:11 - mouse out these are all events that I've
32:13 - looked at in previous videos I've got a
32:16 - new event for you I don't remember what
32:18 - it's called but I do know there's one
32:20 - that's drag drag over so the drag over
32:24 - event let's handle that with a function
32:27 - called highlight
32:28 - okay so I'm going to say uh function
32:33 - highlight uh drop
32:36 - zone. style a background color and let's
32:40 - give it a little
32:43 - gray let Zoom back out here so now this
32:47 - should at least I've handled one event
32:49 - drag
32:51 - over okay so now if I take this file and
32:53 - drag it over here you can see it becomes
32:55 - gray now it's never not becoming gray
32:57 - but at least at least I've got that
32:58 - event so this by the way has nothing to
33:00 - do so far this has nothing to do with
33:02 - the file I'm just handling an event if
33:05 - you drag over it if I move the mouse
33:06 - over it doesn't do anything if I drag
33:08 - the mouse over it without a file it
33:10 - doesn't do anything this is an event
33:11 - only for when I drag a file over it you
33:13 - can see it becomes gray so that's one
33:16 - thing I can do now what if I want if I'm
33:19 - like dragging a file and I'm like no no
33:20 - no bad idea bad idea take the file out
33:22 - maybe I want to unhighlight it right so
33:24 - I could then say uh I can't remember
33:27 - what it's called but I think it's drag
33:28 - out UNH highlight and I'll just reset
33:32 - the background color oops I'm going to
33:34 - write another function and I'm going to
33:37 - reset the background color to white now
33:40 - you might be asking yourself a question
33:42 - and I need to get to this in another
33:44 - video but you might be ask question like
33:47 - what what do I need these two functions
33:49 - for I could really have just one
33:50 - function that accepts an argument white
33:52 - or black I mean white or gray and then I
33:55 - could say drag over call that function
33:57 - with gray white gray drag out call that
34:00 - function with white this is actually
34:03 - quite possible in JavaScript I'm doing
34:04 - it this way for convenience because
34:06 - again the other way requires a sort of
34:08 - some trickiness for how do I get an
34:10 - argument kind of into those functions I
34:12 - would love to get to that remind me
34:14 - remind me remind me I will remember I'm
34:15 - going to think of a good scenario and
34:17 - try to make a nice video that because
34:18 - it's sort of like a fundamental aspect
34:20 - of JavaScript it uses this thing called
34:22 - a
34:22 - closure okay so but we're not doing that
34:25 - right now I'm not doing that right now
34:26 - I'm going to leave this as two separate
34:28 - functions but you're right to ask that
34:29 - question you being the metaphorical
34:32 - person who I think I'm talking to I mean
34:34 - you're yeah okay so um oh undefined is
34:37 - not a function line eight drag probably
34:41 - drag out is wrong so how do we figure
34:44 - this out I should stop being so like I'm
34:46 - just going to imagine what the P5 Dom
34:48 - API has in it and I should probably go
34:50 - and look this stuff up so if you were
34:52 - doing this and you got this error and
34:54 - you wanted to figure out how to find it
34:56 - you could open up a browser you could go
34:57 - to pjs. org I'm going to click
35:00 - on this you should be able to find this
35:03 - under reference and I'm sure that will
35:04 - change at some point soon but an easier
35:06 - way to find I'm going go under libraries
35:08 - and I'm going to go to P5 Dom and now
35:10 - I'm going to see oh look at all these
35:12 - look at all of these methods and look at
35:14 - that I called it drag out but we can see
35:17 - here the me the the the event is
35:19 - actually called drag leave that's the
35:21 - name of the function drag Le by the way
35:23 - there's add class and remove class huh
35:25 - interestingly
35:26 - class think of something that happened
35:28 - in a previous video and I wonder if that
35:29 - should actually be changed but anyway
35:31 - it's a side topic I'll have to think
35:33 - about that in my own time so drag leave
35:36 - is the name of the function that I
35:37 - wanted so I'm going to minimize that and
35:39 - come back and I could have clicked on it
35:41 - to see some more information but I don't
35:42 - need to do that right now I feel
35:44 - confident that I could just type drag
35:46 - leave here and now I can run this again
35:48 - and here we go file leave file leave
35:51 - look at that what a nice little I'm so
35:53 - good at user interface interaction
35:56 - design I'm being s sarcastic because I'm
35:59 - not good at that um but you can see this
36:01 - is a bit more intuitive at least to be
36:02 - able to handle these types of events of
36:04 - when you have the thing over when you
36:05 - have the thing out so but we're missing
36:08 - kind of the exciting thing this is just
36:09 - like nothing's going to happen like if I
36:12 - look that's the same thing happen that
36:14 - event the drop event when I let go of
36:16 - the mouse when I perform this release
36:18 - action this is me miming the release
36:19 - action um I need to handle that event
36:21 - and that event is
36:23 - handled with the drop function
36:28 - now what goes in here let's think about
36:31 - this for a second so let me comment this
36:33 - out and run this there there are two
36:37 - things that have to happen and this is
36:39 - tricky one thing that has to happen is I
36:41 - need to read that file the other thing
36:44 - that needs to happen is I might want uh
36:47 - there's okay well actually there really
36:48 - aren't two things I was thinking there
36:50 - there aren't intuitively there aren't
36:52 - two things there's one moment right I
36:54 - drop so the moment I drop I might want
36:56 - to handle that event by like applying
36:58 - some style to it like UNH highlighting
37:00 - it and then I also want to read the file
37:02 - that's been dropped but those are
37:04 - actually divided into two separate
37:06 - callbacks and there's a really good
37:08 - reason for that and the good reason for
37:10 - that is that I might want to take all of
37:12 - these images what if I drag all of these
37:14 - images into the browser I need a call
37:16 - back to handle each file one at a time
37:19 - but there's only one moment of dropping
37:22 - so um so in that sense and I forget
37:24 - which is which let's go back to the
37:26 - reference so oops uh let me go back to
37:29 - the reference here and I'm going to
37:31 - click on this drop event and you can see
37:33 - we could read this uh call back callback
37:36 - so look at this call the first call back
37:39 - is triggered when files are dropped so
37:41 - that's the event the actual event of
37:43 - dropping the files then the second call
37:46 - back is to when the file is loaded and
37:48 - actually this also happen at separate
37:49 - times because what if you drag and drop
37:51 - a like 500 megabit megabyte image file
37:54 - right that drop moment happens instantly
37:57 - but it might take the browser quite a
37:58 - while to read that very large file so
38:00 - that's why those are two separate events
38:02 - so I can go back to my code and I can
38:05 - say you know what when I drop it I also
38:07 - want to
38:08 - unhighlight the box right that's uh I
38:11 - want to UNH highlight it and then I want
38:13 - to handle the file so I'm out as I'm I'm
38:16 - doing two things when as soon as I drop
38:18 - it UNH highlight the box and also
38:21 - trigger a new function got
38:23 - file function got file
38:27 - file now interestingly enough so let's
38:30 - just run this and at least see now when
38:32 - I drag the Unicorn over here uh let's
38:35 - just only the unicorn please uh it
38:38 - highlights it UNH highlights it
38:39 - highlights it UNH highlights let's drop
38:40 - it it UNH highlights and I've overridden
38:44 - the default browser Behavior the default
38:46 - browser Behavior would have been to open
38:48 - that file but I've now overridden that
38:51 - by whatever goes here so now I can do
38:53 - whatever I want and not only can I do
38:55 - whatever I want I can do whatever I want
38:56 - with the data in that file for example I
39:00 - could say create image file now I don't
39:04 - think this is actually going to work I
39:06 - know it's not going to work because
39:07 - that's so but let's let's try it with
39:09 - this rainbow right it something appeared
39:12 - there but it's like a broken image so
39:15 - this thing here the argument that comes
39:17 - into the function this might be actually
39:20 - something rather new to you I'm
39:21 - realizing because most of our callbacks
39:23 - like highlight or unhighlight don't have
39:26 - data that arrives with it so this is a
39:28 - new scenario this callback P5 is not
39:30 - only triggering the call back when the
39:32 - file is ready to be loaded but it's also
39:34 - handing a variable and inside that
39:36 - variable is just P5 is like such a nice
39:38 - wonderful friend that P5 is like look
39:40 - I'm going to hand you I'm going to call
39:42 - this function I'm going to hand you this
39:43 - variable and I'm going to fill that
39:44 - variable for you with all the data
39:46 - associated with that file so this file
39:48 - variable is actually an instance of a P5
39:51 - file object and there's all this
39:52 - information like I know how big the file
39:55 - is what its name is there's lots of
39:57 - metadata asso away that file and
39:59 - something that's in that file is a
40:01 - property called data and that data might
40:03 - just be the text that's in the file it
40:05 - might be the the other some other data
40:08 - format that's in the file or it might be
40:10 - image data so if I say create image
40:13 - file.
40:15 - data now watch this
40:19 - oh okay let's look at the reference did
40:22 - I you sure I saved that I ran that I I'm
40:25 - pretty sure that was right but you know
40:26 - we have a little bit of a problem
40:27 - problem here it's not working so let me
40:28 - go back to the reference and I'm going
40:31 - to go to the reference and I want to
40:34 - look for
40:36 - file file this is where this is this is
40:39 - this um where's the P5 file object
40:42 - somebody find it for me
40:45 - quickly uh P5 image P5 do file I'm not
40:49 - seeing it um so you know some reason
40:52 - it's not in the reference which it
40:54 - probably should be I'm going to I'm
40:56 - taking drastic measures here and I'm
40:58 - going to go to the p5js GitHub
41:00 - repository I should actually just look
41:02 - for an you know what I should look for
41:03 - an example that does this there's
41:05 - actually an example that I I was going
41:06 - to go into the repository just going to
41:08 - look you know fast forward through the
41:10 - video like 30 seconds or a minute you
41:11 - could skip this part but I'm going to go
41:13 - look for under uh learning maybe or
41:17 - under Dom let's look at uh let's uh uh
41:21 - under P5 element I'm going to look for
41:23 - the drop this is probably not the right
41:25 - place yeah yeah yeah no I want under ex
41:28 - examples uh Dom random random Dom uh
41:33 - drop there we go uh uh uh file. data
41:38 - well by golly I was right wasn't I
41:41 - create image file. dat so that's what I
41:43 - meant to do why didn't that
41:45 - work uh let's just okay let's be a
41:47 - little bit more methodical about this
41:49 - maybe something else is going wrong that
41:50 - I don't know about so for example um
41:54 - let's look let's see if there's some of
41:56 - the metadata is there I'm going to say
41:57 - create P file. name uh create P file.
42:02 - type create p
42:05 - file. file. siiz and uh so there there
42:10 - are all all a file has all this metadata
42:12 - so with it its name its type it size
42:14 - those are all strength that's just data
42:16 - and data should actually be the image
42:17 - stuff so let's run this and let me drag
42:20 - in this rainbow file and you can see
42:23 - undefined drop undefined oh you know
42:26 - what I wonder if I guess what I think I
42:29 - might have done I know what I did I
42:32 - probably revers the order of those I
42:34 - reverse the order of those uh callbacks
42:37 - so this is a very common thing that
42:39 - happens aren't you enjoying the fact
42:41 - that I just mess this stuff up all the
42:42 - time I really hope you are so this is
42:45 - this is something so you know we've
42:47 - looked at this and realized like the
42:48 - call back is triggering I mean of course
42:50 - it's triggering because they two
42:52 - callbacks both of them are triggering
42:54 - but I'm triggering them probably in the
42:55 - wrong order so let's go back to the P5
42:58 - reference uh uh
43:01 - libraries Dom and let's look at this
43:04 - drop
43:05 - function right here and let's read this
43:09 - again the first call back triggers when
43:11 - the files are dro the second call back
43:14 - triggers to receive the loaded file
43:16 - isn't that the way I did
43:18 - it uh first call back but but I have a
43:21 - feeling the reference it wasn't entirely
43:23 - my mistake I have a feeling the
43:25 - reference misled me
43:28 - let's switch the order of these it's
43:31 - probably the first argument is the call
43:33 - back to handle the file and the second
43:35 - argument is the call back to handle the
43:39 - event the just the dropping event so
43:41 - let's try this
43:42 - again and here we go yay so I've got my
43:48 - and let's let's do something where I say
43:50 - VAR image equals create image I say
43:52 - image do uh size 100 100 and I'm going
43:57 - to do create P I'm going to just Join
44:00 - one string
44:04 - uh so I'm going to take this out just to
44:06 - make this a little shorter now let's
44:08 - look at this again and to make a bigger
44:09 - window we can have this nice moment
44:11 - where I drag the Unicorn here there's
44:13 - our unicorn I drag the rainbow here
44:15 - there's the rainbow I drag another
44:17 - rainbow here there's that so you can see
44:20 - here the files are coming in I'm adding
44:22 - them to the page and also I get
44:24 - information how big was the file what
44:25 - was the name of the file I could use
44:27 - that information I'm just sort of like
44:28 - spitting it right back
44:30 - so this is interesting hopefully I mean
44:33 - so I'm not really doing anything with
44:34 - that and also I should mention let's
44:36 - just prove that this works I'm going to
44:38 - uh refresh this page to start over let's
44:40 - drag all of the images all at once and
44:43 - there you go all of them appear so it's
44:45 - handled that call back was triggered
44:46 - many many times for each image um so I
44:49 - want to do one more thing which I think
44:50 - is just kind of like makes the seam a
44:52 - bit more magical so you can have a Dom
44:55 - element that has like a doted line and
44:57 - says drag your file here but anything
45:00 - can be a Dom element that you drag stuff
45:02 - onto even like a button could or a
45:04 - slider could even that barely makes any
45:05 - sense but let's actually do something to
45:07 - this example I'm going to do save as uh
45:10 - drag and drop two I'm going to say you
45:13 - know what forget about this Drop Zone
45:15 - thing take that out of there take that
45:18 - out of there why
45:21 - not store the canvas in a variable and
45:25 - say canvas do drag over canvas. drag
45:28 - leave canvas. drop so look at this if I
45:31 - run this now I can just take this image
45:34 - and drag it over the canvas drop zone is
45:36 - not defined uh all right we don't I
45:38 - don't need any of this styling stuff
45:39 - anymore to be honest with you I don't
45:41 - I'm deciding like not to care about that
45:43 - I can do something much simpler I can
45:45 - just use the single call back of
45:47 - dropping it you know I'm not just
45:49 - skipping the visual feedback part right
45:51 - so anything can be a drag and drop
45:54 - element and now let's think about this
45:58 - even more in a different way what if
45:59 - when I drag the element onto the canvas
46:02 - I want to see the image in the canvas so
46:05 - what can I do I can just call the image
46:07 - function image 00 0 with height so this
46:13 - is the difference again between making a
46:16 - Dom Element image and then drawing and
46:19 - versus drawing an image into a canvas
46:22 - the image function draws that image
46:23 - whether it's through load image or
46:25 - create image into the canvas create
46:27 - image makes the Dom element so now we
46:29 - should be able to see this uh that now
46:32 - I'm only seeing the top left corner of
46:34 - the image because they're kind of small
46:36 - I'm surprised about that because I'm
46:38 - drawing it supposedly uh with the width
46:41 - and height of the um of so I'm kind of
46:44 - surprised I feel like that's a little
46:45 - bit of a P5 bug there I don't know why
46:47 - that's not working I have to examine
46:49 - that but also the thing I wanted to show
46:51 - you is that I don't even though I might
46:54 - have to do it this way to create the
46:56 - image via um this uh uh to create the
47:01 - image uh as a way of like getting the
47:03 - data from the file I can use I can use
47:06 - the P5 function image. hiide so I can
47:09 - make that Dom element purely to open
47:12 - that file and then I can hide it
47:15 - instantly and then draw it into the
47:17 - canvas I'm actually sort of surprised
47:19 - this is working because I I realized
47:20 - that I was sort of thinking I mean that
47:22 - there might be another problem
47:23 - associated with this oh but now it's
47:25 - working I don't know what I missed with
47:26 - the width and height before for um maybe
47:28 - that oh that size thing probably messed
47:30 - things up but you can see look at this
47:31 - that was a transparent image so you can
47:33 - see now the as I drag and drop the
47:35 - images onto the canvas I see the image
47:37 - there so that concludes this particular
47:40 - video um where what I was hoping to
47:42 - demonstrate I think I did which is the
47:44 - idea that you can create an any element
47:47 - on the page and you can handle when
47:48 - you've dragging a file over it when you
47:50 - decide you're not going to drag that
47:52 - file over it and when you actually drop
47:53 - that file and if it's an image file you
47:55 - can use that image to display the image
47:58 - data and um in some other video in the
48:01 - future I'll probably show you how to do
48:02 - it with a text file and do something
48:03 - like word counting the text file but
48:04 - that's that you might um investigate the
48:06 - load strings function and sort of see uh
48:10 - how you might do that um I don't have a
48:12 - good exercise I can't think of one I'll
48:13 - write something in the description okay
48:15 - thanks and I think I have one more sort
48:17 - of Dom video to make after this
48:20 - one okay uh hello live stream all five
48:24 - of you uh um
48:27 - uh I don't know if anybody's still
48:28 - watching but some people it it claims
48:30 - that people are watching I'm going to
48:31 - just take a short break for myself here
48:33 - for like a minute and drink a little bit
48:34 - of water if you have any questions or
48:37 - feedback please add them into the
48:54 - chat okay so
48:57 - the last thing that I want to do is um
49:01 - just sort of demonstrate automatic
49:03 - control of interface Elements which I
49:06 - don't know exactly what practical use
49:09 - this has but I think it's sort of
49:11 - interesting and weird and so um I do
49:15 - that with a text field and with a
49:18 - slider and uh yeah I almost want to do
49:23 - this with pearly noise which would be
49:25 - kind of weird interesting but then I
49:26 - have to explain plar and noise and I
49:29 - have to do that in a different video I
49:30 - think uh okay um so this is the last uh
49:34 - one it's like very hot in here I'm going
49:36 - to open the window a little bit more get
49:38 - some air in here let me think let me get
49:40 - myself set up for
49:42 - this um I'm going to
49:45 - make a new
49:49 - example called Zombie
49:52 - Dom and
49:58 - uh I'm going to take out all this
50:01 - stuff and I'm going to take out all this
50:06 - stuff and I'm going to run this and it's
50:08 - empty and blank which works and I'm
50:13 - going to do this and I'm going to say
50:14 - function
50:15 - setup no
50:18 - canvas uh
50:20 - function
50:23 - draw okay so um
50:32 - uh uh okay sorry uh I
50:37 - am think I'm ready for this
50:40 - here any um I'm trying to think of what
50:44 - I'm going to look at I think I'll just
50:45 - I'm probably just going to use the
50:47 - computer for this one I don't think I
50:48 - need the Whiteboard uh to demonstrate
50:51 - this idea
50:54 - okay close this
50:58 - and this is the last one except I didn't
50:59 - do this even though I I came across the
51:02 - scenario in the previous video where
51:04 - that would have been useful for to
51:05 - remind myself I should have written that
51:06 - down somebody remind me uh okay I'm GNA
51:09 - minimize this uh I've got this this
51:12 - opens up over here um let's do this to
51:15 - this just to like put it over here which
51:17 - I think will be good enough okay uh
51:19 - great so I'm ready I think this is the
51:21 - last video I'm going to record today
51:23 - it's about
51:24 - 2:45 I did 2 hours and 20 minutes
51:26 - morning I've now done almost an hour
51:28 - which is three and a half hours today
51:31 - which it's probably more than I should
51:32 - do in one
51:33 - day but Thursday is the day that I have
51:36 - to do this um and so here we go checking
51:38 - the
51:39 - chat uh and I'm going to close this
51:42 - laptop and get
51:49 - started hold on I need some water again
52:07 - so this is really a bonus video I just
52:08 - want to do something weird with dom
52:10 - manipulation that I'm kind of going to
52:11 - just make up on the Fly although I did
52:13 - make an example like this a couple weeks
52:15 - ago I've looked at it since then so
52:17 - hopefully this is going to work out and
52:18 - what I want to show you how to do is to
52:20 - take innerface elements that normally
52:22 - you would ask the user to manipulate
52:23 - like move a slider or type some text
52:26 - into a text input box and I want to show
52:28 - you how to just control those pro
52:30 - control those things programmatically as
52:32 - if they're like there's a zombie
52:34 - controlling your computer so first of
52:36 - all I have a P5 sketch here I have the
52:39 - P5 editor this is sort of like a bit of
52:41 - a standalone video so some of you might
52:43 - be coming to it from not having seen P5
52:45 - before go to p5js dog download the
52:48 - editor look at the reference you can use
52:49 - that for this uh quick little project so
52:52 - let's give it let's hit this button we
52:54 - can see there's absolutely nothing
52:55 - appearing in the browser because I
52:57 - haven't added anything now let's create
53:00 - a
53:01 - variable called
53:03 - slider and I'm going to say slider
53:05 - equals create slider and remember when
53:08 - you create a slider you need a minimum
53:10 - and a maximum and a starting range I
53:12 - don't really it doesn't really matter so
53:14 - much so I'm in this case so I'm going to
53:16 - create a slider with minimum goes from
53:17 - zero maximum goes to 100 and it starts
53:20 - at 50 uh it's very loud outside so I'm
53:23 - going to close the window and I'm back
53:26 - you can see the slider is there and now
53:27 - I can do what anyone would normally do
53:29 - with a slider I can slide it back and
53:31 - forth I could use the slider to control
53:33 - myself
53:35 - watch nobody cares that I'm doing this
53:37 - but it amused me for a second okay so uh
53:41 - that's normally what you do and you
53:42 - would tie the slider to an alpha value
53:44 - or to some parameter in a flocking
53:46 - system whatever kind of creative coding
53:48 - thing you're doing today but what if you
53:50 - wanted to actually set the value of that
53:52 - slider so one thing you can actually do
53:55 - is okay so if you want to get sorry if
53:57 - you want to get the value of the slider
53:59 - you say slider. value and so let me make
54:02 - it between 0 and 255 and I can see now I
54:05 - have no canvas let me create the canvas
54:09 - just so it's there and you can see now
54:12 - that the canvas is there and as I move
54:13 - the slider it's changing the background
54:15 - color this is again what you might
54:17 - normally do
54:20 - now another way I could change the value
54:23 - of the slider is actually to just call
54:25 - the value function but give it an
54:28 - argument so the argument I'm going to
54:30 - give it is the number right now
54:34 - 151 so you can see that now the slider
54:37 - even though it started at 50 as soon as
54:40 - draw executed I set its value to 151
54:43 - well draw is animating looping over and
54:45 - over again what if I made that sum
54:47 - variable like for example VAR X = 151
54:52 - and slider. x and x = x plus some random
54:56 - amount between like5 and five now let me
55:00 - run that and you can see look the slider
55:02 - is moving on its own I have my first
55:05 - zombie slider there it is just moving
55:08 - around I don't ever have to operate the
55:09 - computer again it's just going to do it
55:11 - for me great so uh but let's go a little
55:15 - bit further with this first of all let's
55:17 - use something called a sine wave I would
55:19 - uh I'll link below to some other video
55:21 - where I talk about sine waves I'm saying
55:24 - I'm going to link below I better do it
55:25 - right in the comments if I didn't do it
55:26 - and I'll add it but let's use a sine
55:29 - wave so let's say instead that x equals
55:32 - the
55:35 - value VAR x equals the value of the of a
55:39 - sign of something sign of some angle so
55:42 - now I need a variable called
55:44 - angle and I need it equal to zero now I
55:48 - might as well take just a brief moment
55:51 - to come over here to this whiteboard
55:52 - which I said I wasn't going to need and
55:54 - talk about what you get out of the sign
55:56 - function I said I was going to link to
55:57 - another video but I feel obligated to
55:58 - just offer a quick explanation if you've
56:01 - ever seen a drawing of the sign function
56:04 - CA this is not going well that camera
56:05 - shut off you ever seen a drawing of the
56:07 - sign function it looks something like
56:09 - this uh the range uh uh the range goes
56:14 - from between one to negative one I
56:18 - should start over but I'm not going to
56:20 - um the range goes between one and
56:22 - negative 1 the xaxis being this angle
56:25 - that's moving through time in a way that
56:27 - you can think so depending on what the
56:28 - value of the angle is I'm going to get
56:30 - between one and negative 1 so here that
56:34 - was that was like the worst explanation
56:35 - ever just go to the thing that's that
56:38 - explains the sign function you haven't
56:39 - looked at it before um so what I want to
56:42 - do is get this the sign of some
56:46 - angle and if I do that it's stuck there
56:49 - at the bottom right the result of the
56:51 - sign function is always a value between
56:53 - -1 and 1 now there happens to be another
56:56 - another function in P5 called the map
56:58 - function and I definitely have a video
56:59 - that's only about the map function I'll
57:01 - also link to that below but what I can
57:03 - do with the map function is I can say
57:05 - hey the sign function goes between -1
57:07 - and one that's the range of the sign
57:10 - function but the range of my slider is
57:12 - between 0 and 255 or 0 and 100 whatever
57:14 - it was between 0 and 255 so map the
57:19 - result of the sign function which is
57:21 - somewhere between negative 1 and 1 to
57:22 - the between 0 and 255 so now I'm going
57:26 - to do that oh unexpected
57:29 - number line 12 I don't I don't oh cuz uh
57:33 - I forgot a comma here there we go and
57:35 - you can see ah so s of zero happens to
57:39 - be the value zero which then happens to
57:42 - be halfway between negative 1 and one
57:44 - which is halfway which gets mapped to
57:46 - 127 about and you can see it's now in
57:48 - the middle now what if I took that angle
57:51 - and incremented it over time I could
57:54 - maybe get the slider to oscillate
57:57 - nicely angle plus equal 0.01 now the
58:01 - angle the unit of measurement is in
58:02 - radians and in that other set of videos
58:04 - that I'm looking to there'll be an
58:05 - explanation of
58:06 - that and you can see look at that this
58:09 - nice little the slider is moving nicely
58:11 - slowly and it's coming to the end and it
58:13 - eases off and you know we could maybe
58:15 - make that move a little bit faster by
58:17 - incrementing the angle a bit more each
58:19 - frame and now I've got this slider
58:21 - that's like oscillating automatically
58:23 - it's kind of like dancing
58:26 - I'm trying to do it with it but I can't
58:28 - so this was fun and all well and good
58:30 - but let's do something more with this
58:32 - first of all forget about this silly
58:34 - canvas thing that was nice to be able to
58:36 - see that the slider is still actively
58:38 - controlling the canvas but forget about
58:41 - that forget about background What If
58:43 - instead I make an array of
58:46 - Sliders and I were to say for VAR I
58:50 - equals z i is less than 10 I ++ and I'm
58:54 - going to make all those sliders
58:58 - in an array so make all those Sliders in
59:00 - an array and then let's do exactly the
59:03 - same thing down here let's set all of
59:06 - their
59:10 - values to the value of this sign
59:12 - function and here we go and I run it
59:15 - look at that all of the sliders are now
59:17 - oscillating back and forth is that
59:19 - lovely and then I don't know 10 didn't
59:22 - seem like very many let's make 50 of
59:24 - them oop
59:26 - oh and I I I hardcoded that I should
59:28 - really say sliders do length let's make
59:31 - 50 of them you see all them moving I
59:32 - don't know I'm just going crazy let's
59:33 - make a 100 of them I want to fill the
59:35 - page with sliders you can see now I've
59:36 - got a 100 sliders dancing back and
59:39 - forth now interestingly
59:42 - enough if I'm working with a sine
59:46 - wave and I have one thing
59:50 - oscillating back and forth and I have
59:53 - another thing oscillating back and forth
59:55 - and I have another thing oscillating
59:56 - back and forth what if each one of those
59:58 - was just a little bit behind the other
60:00 - one right so when this one is over here
60:03 - this one is over here and then this
60:04 - one's over here and then this one gets
60:06 - the end and comes back and then this one
60:07 - gets the end there's just a little bit
60:08 - of offset so they're kind of like
60:10 - dancing with each other in a way and we
60:11 - could we could play some music and dance
60:13 - the slide dance the night away with the
60:15 - sliders that's what I do by the way I
60:17 - have no social life so I go home and I
60:19 - dance the night away with
60:21 - sliders think about that for a minute
60:23 - why don't you then donate there's donate
60:26 - button but I don't know what you would
60:28 - donate to to the cause of sad dancing
60:30 - slider people but the point is what if I
60:32 - could get each one slightly offset from
60:35 - the other
60:36 - one maybe I could have another
60:41 - variable uh I could say
60:44 - offset equals
60:46 - zero angle plus
60:50 - offset and then
60:53 - offset plus equal 0.0 2 3 four five
60:57 - making that number up doesn't really
60:59 - matter the two five the point is I want
61:03 - each one of those to oscillate based on
61:05 - that angle but one of them should be 025
61:08 - ahead and the other one should be 0.5
61:10 - ahead and the other one should be 075
61:13 - ahead I think I'm doing the math right
61:14 - let's just see if that
61:16 - works there we go Dan save the night
61:19 - away with the SL so you can see here I'm
61:21 - just zoma controlling these sliders
61:24 - they're all slightly offset from each
61:25 - other I could play around like what if I
61:27 - really make them offset from each other
61:29 - uh whoa now I've got this crazy pattern
61:31 - here um where all the sliders I could
61:33 - arrange them in a different way I could
61:35 - have them like paint make a little
61:36 - picture I could all use them to control
61:38 - things I could style them so there's
61:40 - lots of possibilities the point that I'm
61:42 - making this video is to
61:44 - say I don't know anything about the web
61:47 - or design or how to make anything look
61:49 - right or do anything
61:50 - practical
61:52 - but uh so I'm sometimes trying weird
61:55 - things out and happen but the point of
61:56 - what I'm saying that's not the point of
61:58 - what I'm saying the point of what I'm
61:59 - saying is the browser could be an
62:01 - experimental canvas for you what kinds
62:04 - of things exist as elements in the
62:05 - browser that we use every day in these
62:07 - standard ways and what might happen if
62:09 - you subvert those standard ways and do
62:12 - all sort and do different things with
62:14 - them that might not be expected this is
62:15 - a very simplistic almost sort of like
62:18 - first approach to that but it's
62:19 - something that's worth looking into uh
62:21 - and playing around with I I want to keep
62:23 - doing stuff to it but I'm like stopping
62:26 - the other thing that you might think
62:27 - about doing is having a you know a text
62:30 - input box and how you can use the value
62:32 - function to set what's in the tech how
62:34 - might you make it appear that someone's
62:35 - typing into that text input box um
62:38 - without there being a person there and
62:40 - suddenly hitting a submit button that
62:42 - that you know so how might you make a
62:43 - page feel as if it's interacting with
62:45 - itself um and you know you could also do
62:48 - something when you move one slider oh we
62:51 - should try this okay so let's stop this
62:54 - okay what are we you stop the the video
62:56 - now and go do some go outside and play
62:57 - Frisbee or whatever and go socialize
62:59 - with your friends or have a nice cup of
63:02 - chamomile tea to relax meditate all
63:03 - these things are much more important
63:04 - than what I'm going to do next but if
63:06 - you're still here I'm going to do one
63:08 - more thing with this what if I have them
63:09 - all move when I move one of them
63:12 - slightly offset from the one I'm moving
63:14 - I don't even know if that would work I
63:16 - shouldn't try to do this right now this
63:17 - was going so well I'll just add this one
63:19 - so for
63:21 - example
63:22 - uh let's say what I want to do is hand
63:25 - Le just the first slider the input event
63:30 - first uh uh adjust sliders so if you
63:36 - remember the input event is an event
63:38 - that gets fired any time there is a
63:41 - change to the value of a Dom element
63:44 - such as a slider so I'm I don't need
63:48 - this uh draw function anymore I'm going
63:51 - to rename this to adjust
63:54 - sliders and I'm going to say start from
63:56 - Slider
63:58 - one slider I value slider index z. I'm
64:02 - making this simple so here what I've
64:05 - done now is I've said anytime you change
64:08 - sliders zero the first element in the
64:10 - array call this function adjust sliders
64:12 - Loop through all the other ones starting
64:14 - with one and change their value to the
64:17 - value of the first one so here we go and
64:20 - I can say anytime I move this they all
64:22 - move but so I'm going to leave that at
64:24 - that you could they take this what if
64:26 - when you move they all kind of like move
64:29 - sporadically but kind of like with that
64:30 - one what if when you move it causes them
64:32 - to sort of Ripple first one moves then
64:34 - the next one moves then the next one
64:35 - moves and you get this kind of like
64:37 - dancing this is Dancing with sliders so
64:39 - how could you if you actually interact
64:42 - with one and it makes the other ones do
64:43 - something uh anyway uh I'm I'm kind of
64:46 - off the beaten path here think of your
64:48 - own write your in the comments to
64:49 - wherever you're seeing this video write
64:51 - some other ideas of things that might be
64:52 - more interesting than what I'm thinking
64:53 - of I would love to make some more
64:55 - examples in this direction or maybe
64:56 - share things that you've made in that
64:58 - way so um this
65:00 - concludes a many many many videos that
65:02 - I've made about Dom manipulation HTML
65:06 - and CSS with the P5 GS Library I'm sure
65:08 - I missed a lot of things there are a
65:10 - bunch of these videos where things
65:11 - didn't work or I was like kind of
65:12 - confused send me your feedback write
65:15 - your letters of Complaint to Brian
65:17 - Williams I mean uh me um uh here at ITP
65:22 - uh the address is 721 Broadway
65:26 - I think that's okay to mention it's on
65:27 - the internet um uh you can send
65:29 - something in the mail I like things in
65:30 - the mail um and uh I will uh the next
65:34 - section of videos that I'm hoping to
65:35 - make possibly tomorrow but definitely
65:37 - next week if not tomorrow is about
65:40 - working with data so how do you work
65:41 - with a data file that you might load
65:43 - that has information in it how do you
65:45 - connect to an API like a weather API or
65:47 - the New York Times API or this wonderful
65:49 - API called the word Nick API that's one
65:50 - of my favorite apis so that's what I'm
65:52 - going to look at in the next set of
65:53 - videos that I get to uh next so thanks
65:56 - for tuning
65:58 - in which sounds ridiculous and um I
66:02 - don't know let stop now thanks
66:05 - okay
66:07 - okay uh so that's uh finishing up the
66:10 - live stream from today uh there are a
66:13 - few of you still here um I'll Stick
66:15 - Around for just like a few minutes just
66:16 - if you had a question type it into the
66:19 - chat um and I'll keep my I'm keeping my
66:22 - eye on it and otherwise I'm going to
66:24 - turn off the Stream in uh the next few
66:28 - minutes uh an hour in that's pretty good
66:30 - two hours this morning an hour now
66:32 - that's I think three hours is probably
66:34 - my limit for the day although I'm kind
66:35 - of like you know uh too many ideas are
66:39 - floating my head of other things to
66:40 - record
66:53 - okay okay uh
66:56 - I'm looking at the
66:58 - chat looking at the stream Health it
67:00 - says it's very
67:02 - healthy looking at a button that says I
67:04 - can share that I'm doing this change the
67:08 - thumbnail uh okay I don't see anyone uh
67:11 - asking any questions so I'm going to
67:12 - sign off for today I hope you enjoyed
67:15 - this I I really enjoy this even though
67:18 - it I feel like um a little bit like I'm
67:20 - just like repeating myself or making the
67:22 - same bad jokes all the time but I'll um
67:25 - you know
67:27 - come back fresh another day uh and
67:29 - thanks and it's very awkward to say
67:32 - goodbye to people that don't exist
67:33 - someday I'm going to do this with like
67:36 - with actual people in the room that
67:37 - might be a nice thing to do okay I'm
67:39 - hitting stop goodbye

Cleaned transcript:

for about an hour or so I had a little lunch I walked around outside I'm back I'm going to uh start from where uh I left off from before but kind of start over a little bit too I was looking the first thing I where I ended off last time when I was streaming is I was attempting to look at how you can use the parent and child functions with P5 variables not just IDs specifying elements that are in uh a Dom element so all you what I'm talking about here is always uh appending or putting a Dom element in as a child of another Dom element the question is where are you accessing that Dom element from are you referring to an the idea of it or do you already have a reference to it in a variable and in the examples I showed before had a reference to it with a variable with a with an ID and now I'm going to do it with a variable by the way I'm just going to repeat that sentence again as soon as I record the actual video that I will uh make as a standalone video that I will upload so I repeat this every single time I apologize if you've watched these live streams before but this is the Raw live stream it will get archived it will all be there and periodically I will hit a button called I will hit a record button and pretend I'm making a video Lesson and then I will hit a stop button and that little section will be saved at its own Standalone chunk there is a chat where you can ask questions you can also tell me when the microphone cuts out or if the audio or the picture isn't clear so let me know right now if you can hear me okay uh if everything looks okay uh over here as well and a little bit out of out of focus when I come forward which is good because you know it reduces the amount of u imperfections in my face many imperfections I have a lot of imperfections many many imperfections and here I have this like green glow around me which is a little bit strange so um I don't know if there's actually anybody watching say hi if you're watching um um but uh I'm looking at my um dashboard but I'm just going to get started so this is the I'm reminding myself this is the example that I'm going to work with let me minimize this list um um and when I click here it makes an image okay okay so um and I'm ready oh there are some people watching all good you guys are back that's so nice it makes me feel warm inside to see people there oops and this I can't open up too much okay um so here we go in this video I want to look again at the parent child function so it's a bit of a review of that function but I want to look at it in a slightly different context before the main reason uh that that that I looked at the parent function was to take a Dom element that I generated in code and insert it into another place in sort of the existing HTML so which is fine and then to do that you just you reference the ID of an HTML element here I want to look at how do you use the parent child function with elements that you've generated in code which is ultimately the same thing but it's another chance to look at it and just also it's to make the point by the way the thing you can pass into that parent or child function is a P5 variable that has a reference to a Dom element so you know that that explanation may not have made any sense let's look at an example that I've started to get some context here so um actually let's just look so what's going to be this is by the way the HTML file is empty so everything in this example I'm generating through code so first I made a make a paragraph that says this is a link it has a little gray background and a little bit of padding then I make an link an anchor tag with the word apples and I'm handling if you click on that tag with an event called add photo and that add photo function uh generates a image element boy a lot of stuff going on there so right first we have the paragraph element that's made here then I have the link element that's made here and when I click on that link an image appears which is happens uh down here image create image now this is important this is different than load image I'm like looking where am I looking at ah this is different than load image load image is something I looked at in previous videos where you load a file and then draw that file into your canvas here the create image function actually makes an image Dom element just like you might type in HTML image source equals and this Source equals could be the name of the image file or it could actually be a full URL to another image so this is a way of inserting an image as its own Dom element separate from drawing an image to the canvas on the page that's kind of an interesting topic of how you might do things with that in for another time but here just showing you yet another create function another HTML tag the image tag source being the attribute what is that image's source and uh over here here so we can see the result of all of this uh again I'm going to look at the output here click click click so what I want to see happen is I want this beautiful gray padded box I want the link to the apples the apples clicking thing to be in that box and I want those apples to get inserted also in that box I want everything to be in that box so here we look at and say p is the object that is the paragraph a is the object the Dom element object which is actually a P5 element object a is the link and image is the image so if I wanted a to go into p and this by the way I get this confused all the time which one is it a. parent P or is it p. par a you could make a case for both of those right you could make a case for you want a to be parented by P or you want P to parent a which one was it I honestly can't remember CU now that I'm even like asking this question I confused myself so my let's go with my first instinct which is that I want a to have as its parent P the action is being applied to a and the action is make its parent P I'm pretty sure that's right and you can see there that worked so now the Apple's link is inside the paragraph So the difference is it appears up there rather than as a separate thing below and now when I click apples those images get added below which actually is maybe a nice effect but what I could say is also like image. parent P so now and I've got a problem again as soon as I do this what's wrong this is not a global variable so I don't have access to that variable scope down here so I'm going to make that a global variable and I'm going to say p equals create p and I'm going to run this and now when I click apples those images are now also inside that paragraph element so this is just and incidentally let's just let's just remind ourselves I could have said p.ch child image and this if my mind is working correctly these are identical I want image to be parented by the paragraph or I want the paragraph to child the image right so that's the action that's the way of thinking about it honestly a better way of thinking about it would be to look it up in the p5js documentation I will include a link to that below and I'm sure it will say it there but this is something that certainly does confuse me um but uh in general I stick to the parent function um and there you go so this is a scenario that you are looking at now I um I want to look at this also because I think we could kind of raise the stakes here a little bit so this is probably a good place to stop watching this video but I'm going to go on anyway and what I'm going to do is I'm going to make a whole lot of these like what if I make a whole bunch of these let's think about this four VAR I equals z i is less than uh five let's just do five right now I ++ and I'm going to put a loop around all of this code and I don't I don't want the global variable anymore and here I'm going to comment this I'm going to comment out what's going on here so first I just want to see the result here so the nice thing that you can see here is this principle still applies right now we're making a paragraph a link link gets parented by that paragraph another paragraph a link link gets parented by that paragraph now for you I might say as an exercise could you make each one of these paragraphs have different content could you make one a link called apples and one a link called blueberries one a link called bananas bananas depending on where you are in the world um um but uh so that might be something that you add to yourself and maybe I'll work on that another time so but the point of this now is this is a nice opportunity for us to remind ourselves that now this ad photo call back when it's triggered what if I want to do the same thing what if I want to get the images inside right when I click on this one the images should appear inside that one when I click on this one the images should here inside that one this is a pretty tricky problem but it is doable and it us uses something that you haven't used before that I'm excited to show you so let's see how we can make this work so the question is what do I put here so first let's ask the question what do I even have access to well I have access to the keyword this do you remember that keyword this what is this referring to it's referring to the Dom element that triggered the call back ad photo the specific one a so the link so this would be parenting the image by the link and we could do that and let's run that let's see if that at least gives us something so that actually is working the weird thing is this is actually part of the link which is kind of an interesting effect all of these are part of that same link I click on any of them I keep adding but I wanted them to be separate just inserted into the paragraph right so this works it's nice how could I get access to the paragraph okay let's let's make a diagram so over here let's think about what's actually on the page I have paragraph which has inside it an anchor followed by another paragraph which has inside it an anchor so what I previously just did is I took that image and inserted it the image of the apple and inserted it as part of the anchor but what I want to do is I want to take that image and insert it as part of the paragraph paragraph is a child of body anchor is a child of paragraph and my new image I want to insert as a child of paragraph but the only thing I have is a reference is to this well what if I could reference this anchor tag and ask hey who's your parent who where's your it's like when you're at the playground and a there's a child who's doing something and you say where's your you don't want to know about this but I spend a lot of time with my own children in a playground and this sort of like relates to it in a second but then it's like a weird thing that I'm talking about so back to this I want to know who's your parent a and so there's a way that P5 will give you that right if I say parent with a argu arent I'm saying assign this element's parent to this other element if I say parent with no argument parent blank I'm asking P5 to tell me who the current parent is so look at this come back over here I can say now I can say VAR paragraph equals IM uh sorry this. parent this is me asking this you're the anchor tag this anchor tag who is your parent oh your parent is this paragraph great make the image part of that paragraph and I'm now going to run this and you can see T I mean it looks the same but this is no longer a link so it's now been parented by the paragraph and by the way um so this is sort of the end of this except I actually have a couple things I wanted to another thing I wanted to add to this which I think would be interesting oh I got this is great I'm going to add something to this which I think would be interesting uh let's just do that now I have something else that I want to show you towards the end of this video already 10 minutes in but there's a few this is this is going sort of well so I'm not ready to stop just yet so let's let's add what I want to add to this is something like okay so what I want to add and let's put this in the HTML file uh which has some extra style stuff that I'm not using take that out um let me add a button button ID equals clear clear and I'm going say clear images so I want to add to the body of the page and I'll put it ins inside a paragraph just so it has some padding around it I want to add onto the page a button at the top and that button is clear images and when I press that button I want to remove all the images that have been added how do I do this now in theory oh you know there's a bunch of let's think about this for a second oh so there's an there's an there's actually a quick way that I could do this without even the way that I was thinking I was going to do this so there's two different ways we could think about this number one is let's come back to this diagram now that this is working let's think about what we have a paragraph with an anchor inside it and an image and maybe another image right another paragraph with an anchor inside it and an image right we have a bunch of paragraph elements with things inside of it and I want to just how can I find all of the images on the page that's right give me all the images on the page well here is a way I could find all the images on the page you know about this because I did this in a previous video select all IMG select all IMG would suddenly give you an array of all the image elements anywhere on the page no matter where they are in that page so this is useful if I could get all those images elements maybe I could do something to remove them all from the page so while I could do it this way and I'll say you do it this way after you watch this video if you're following along do it with select all as an exercise I'm going to do it a slightly different way because sometimes you might not be able to easily use select all and what you're doing what if instead you just kept your own array of Dom elements and this is not an uncommon practice uh actually I don't know what a common or uncommon practice is because I don't do any of this for real I'm just figuring it out and making videos about it so it's not an uncommon practice in my making video examples about it anyway so if I come back to the code I might say VAR images equals array so I'm creating a global variable that's an array where anytime I make one of these elements I'll store a version of it so I have this for myself and in that case anytime I make an image element I can say image. push I'm sorry images. push image so this is me adding that image object to this array which is a global variable so now anywhere in this code I have access to all of those image objects this can be very useful because for example um I could I could do something I could remove oh I could remove them one at a time which would be kind of an interesting thing to do we could we could do that or I could remove them all at once I could apply a style to all of them let's look at just removing them all at once so albeit this is an array that I could fill with select all I'm making it myself so let's take a look at uh how I might do this so first of all what's on the page there's this but button how do I get access to that button that button is made in the HTML file with an ID called clear so I just need to use select so I need to say VAR button equals select button oh no I called it clear and then I want to handle when it's pressed with I don't know clear stuff I'll write a function called clear stuff and here is where I can do a loop I already have that array that HS all the image objects in it for index I from zero to the length of the array so for every single element in that array uh what was it called uh images. length i++ now this images indexi do something so right here now I know it's showing me syntax errors but this is now me saying I whenever I made an image element I put it into that array hoay for me so now I have this like back it's like a backup it's like redundancy like I just I'm making all these elements and in case I ever need to refer back to them I've got them all in this array sure I could get them with select all but I'm really cautious and worried about it I'm going to make my own array so now I could apply a style to them I could change their source to show a different image but just to demonstrate removing stuff that's there's a P5 Dom Library function called remove and remove does is actually removes it from the page which by the way is different than hide so I could use hide which is going to hide it make it so you don't see it but the element is still actually there as part of the sort of like active page so it could show it again if I remove it it's gone it's deleted it's not coming back so let's not worry about hide so much right now let's add remove so all that I've done is now anytime I add one of these images all of those images wherever they've been added all of those images are now part of this array so now all I need to do when I hit clear is it will Loop through the whole array and remove them all and there you go and now I can add some more again and I can hit clear and it works again now one thing I probably should do is once I've actually removed them I could probably reset the array back to blank it worked anyway but I might want to just sort like clear that array because I don't need references to those objects which have now since been removed so this is Hope showing you a bit more of stuff that you can do this is I'm showing you again just to sort of recap a little bit I can make stuff in the HTML file and access it through select by an ID like I did with that button I can make elements dynamically in a loop like I did with create p and then I could also make other elements parent them to those elements have things inside then later I could make elements that are based on of an event and I could know which Dom element triggered that event and then I could know what's the parent of that Dom element that triggered the event and put other things in that Dom element so there's a lot of pieces to this example but hopefully this is showing you kind of a bit of the spectrum now of how you might write HTML write JavaScript to generate control style select select all that sort of thing I think I have um two more uh videos that I want to make one is about how you might drag and drop a file into the browser and use the contents of that file and then I keep looking over here because I'm looking at the time and then another uh video just to show you about sort of controlling interface elements kind of in a zombified way so they just like act on their own which I think it's kind of interesting so uh that's the end of this particular rather long 17minute video and I'll be back with another one okay I'm going to check the chat and um uh thanks for listening folks uh hopefully that made sense and that was like kind of a useful example by the way I'm saving all these examples the camera just went off good timing I'm saving all these examp examples and they're all in a GitHub repository uh called video Lesson materials I wonder if I just Google video Lesson material shiftman GitHub so when I make uh an example in theory U I know I'm standing in front of this so let me just come over here um uh under here in this GitHub repository under code usually the examples are found here I need a better way of integrating this all together possibly in like a website or something like that but at least you can look and find stuff here I'm not very good at updating this so you send me an email to remind me or I don't know some other way of contacting me that uses the internet um but also uh if you're typing along and you want to submit a poll request to this repository that's super helpful to me and thank you to uh Kenny Lao from China who has like submitted so many of these uh and also Osama from ITP who submitted a few too thank you guys for for helping me out here okay uh so I need to look back at my list where's my video library list so I got this so things that I haven't done are passing an argument into a callback event which requires the closure uh I would like to get to that I don't know if I'm going to do that today it's a little beyond the scope of this is like a crazy long list of Dom videos I've somehow made um I want to do drag and drop which I think is just like a kind of fun useful thing um and then look at controlling interface elements maybe I'll maybe I don't know it's 215 got another 45 minutes here I think before I need to move on so let me do the drag and drop so I need to get set up for that um um let me get set up for that so uh here I'm going to hit the play play ad button while I get set up there's only six I'm not going to tort you with the play ad button I just find it so funny that it's there uh okay so let me save as um uh drag and drop uh and uh let me delete all this and uh um let me create sorry uh create canvas uh 200200 background zero and then in the index.html file I'm going to add a like a uh ID equals drop zone and then I will style It Drop Zone with uh some padding oh this needs to be in style uh I'm going to add some I should probably do this in the video but in the interest of time I'm going to prepare this in advance uh border style dashed I don't know border weight or something let's see if this works and then I'm going to say uh drag your file here so let's do this oh that worked good enough so you can see the idea here is that what I want to create is an example where you drag a file from your hard drive into that area and it's an image file it's displays in the canvas and then after I do that I'll switch it so you can like drag the file just right onto the canvas which is kind of the same thing um so uh so now what I need in order to do that is a bunch of images so I'm going to go to my goto ridiculous thing that I've been doing it's my little running running gag about rainbows unicorns uh so uh let's see uh view image let me save no seriously uh save image as rainbow Buzz Marketing this website here know mean to be doing uh and then uh let's get um this one too uh view image save as a rainbow 2. JPEG and now uh I need a unicorn uh uh this is a good I don't know this is a good one uh view image uh save image as a unicorn uh and uh microbiology this is a recent interest of minees uh here we go some bacteria uh save image as bacteria okay there we go I've got a bunch of images and so the idea here now is that I'm going to drag these images here and when I drag them here they will appear in into the canvas okay so uh anybody have any questions comments worries concerns add them into the chat I'll see them in about 15 seconds I'm going to pause and drink some water over here hopefully everything's still working I'm going to cycle the cameras and come back here uh okay I'm racing oh I'm over here by the way oh this camera's off I'm tripping over things if you guys are watching this you're very kind okay where is thumpkin by the way that's the song that is always been in my head constantly while making these videos and I keep saying I'm going to sing it in while during a break but I can't remember what it's called and I think I'm singing fjaka it's like the same tune okay I think I'm ready for this anybody have any comments nope uh there's a few of you three or four of you watching I'm going to record this okay so um uh let's delete this apples. jpeg it's unnecessary and hit save uh and uh that's good okay here we go which one of these pens is good this one looks like it'll be okay uh and here we go oh I'm going to start over here in this video I'm going to look at a feature of JavaScript in the browser but something that's also built into the p5js framework in a in a nice way that allows you to drag a file a text file an image file a Json file any sort of file what's Json maybe you don't know what that is it's a thing that I'll talk about in another video that I'm sing this Isa which is speak singing is sort of I don't know what I'm talking about let me start this video I don't want that in the video I'll do myre Ste of jokes in another another time hello I don't need to say hello okay in this video I want to look at a feature of web browsers and something you can do in JavaScript in general but also this thing is built into the p5js library in a rather nice way that I enjoy and this feature is dragging a file into the browser and making use of that file and that file could be an image it could be a text file it could be some sort of data file data is a thing that I'm going to get into in some future videos there's different kinds of data formats so there's lots of potential to what you could do if you ask the user to say hey give me an image and I'll do something that's really exciting and interesting in the browser with that image or give give me 100 images and even that so let's look at how that that works so first of all what I mean by that and I guess I probably don't need this diagram but I'm going to Draw It Anyway is on the web page I'm going to make an area on the page right so I'm going to have a canvas and I want an area on the page where if I have some sort of file if I drag that file and release it there and if this is an image I want to see that image then suddenly appear and be drawn into the canvas so how do you do that let's go and look so I've set this up in advance I have this particular example and you can see it's got exactly what I'm talking about this canvas is made with the create canvas function and you can see background is called so you can see that it has a black background then there above the canvas is this like dashed area on the screen that says drag your file here now where did that come from that is written into the HTML file so I'm going to go over here and look at the uh canceled look at the HTML file and you can see there it is there's just a paragraph element drag your file here I gave it an ID called Drop Zone because I'm going to need to refer to it hey that's the paragraph element that I want to be able to drop something onto and then also I've just written some style some Styles referring to that drop zone and maybe just so it's a little bit more visible I might say font size is 36 point and maybe I'll do something like width is 50% so by the way this is also something that you might not have seen before uh there's all of these units that are are happening in CSS PX for pixels so I actually like the number of pixels want that padding point for something that has to do with typography that I'm sure somebody understands much better than I do but you know the larger the point the larger the font size but also percentage being relative so this Dom element is always just going to be 50% the size of the page which you'll see now if I hit run again you can see as I resize the page that Dom element doesn't have a fixed size it's always just 50 50 % of the page that's a nice little tidbit that I'm adding into this video so how do I make it so that I can drag a file there incidentally what happens if I drag a file right now I drag this file over here I drop it and I've lost I'm gone from the page look and you can see that what is it that that file is just literally opened up in the page it's the file of bacteria I don't know I was trying to do something other than rainbows and unicorns but maybe bacteria I went in the wrong direction but it's interesting okay so um so I need to I need to get this working so first of all I need to add some JavaScript events to this element I want to handle the event so the browser handled that event for me right when you drag the file into the browser it assumes like Oh I'm a browser you're dragging me a file I'll open it I want to say to the browser no no no no no no no no no no I'm in charge here don't do what you're going to do I got something else for you I got something else planned so if I come over here and I first I need to do is get uh I'm going to make a variable and I'm going to call Select so select and let's make this a global variable because I might want to access it in other places I'm going to say select the drop zone now something that I'm doing here which might you might find a little bit confusing but I I find this to be just so convenient I like to just name my variable with the same name as the ID it's absolutely not required the ID can be totally that and nobody knows whether or cares whether they're the same just you the programmer for me it's a little bit convenient but I don't want you to be confused that there's some like matching happening there that's just I happen to name the variable the same name as the ID okay so what's next you know that you can attach an event to an area by referencing that event uh as a function called on that object so the mouse pressed event the changed event the input event the the mouse over the mouse out these are all events that I've looked at in previous videos I've got a new event for you I don't remember what it's called but I do know there's one that's drag drag over so the drag over event let's handle that with a function called highlight okay so I'm going to say uh function highlight uh drop zone. style a background color and let's give it a little gray let Zoom back out here so now this should at least I've handled one event drag over okay so now if I take this file and drag it over here you can see it becomes gray now it's never not becoming gray but at least at least I've got that event so this by the way has nothing to do so far this has nothing to do with the file I'm just handling an event if you drag over it if I move the mouse over it doesn't do anything if I drag the mouse over it without a file it doesn't do anything this is an event only for when I drag a file over it you can see it becomes gray so that's one thing I can do now what if I want if I'm like dragging a file and I'm like no no no bad idea bad idea take the file out maybe I want to unhighlight it right so I could then say uh I can't remember what it's called but I think it's drag out UNH highlight and I'll just reset the background color oops I'm going to write another function and I'm going to reset the background color to white now you might be asking yourself a question and I need to get to this in another video but you might be ask question like what what do I need these two functions for I could really have just one function that accepts an argument white or black I mean white or gray and then I could say drag over call that function with gray white gray drag out call that function with white this is actually quite possible in JavaScript I'm doing it this way for convenience because again the other way requires a sort of some trickiness for how do I get an argument kind of into those functions I would love to get to that remind me remind me remind me I will remember I'm going to think of a good scenario and try to make a nice video that because it's sort of like a fundamental aspect of JavaScript it uses this thing called a closure okay so but we're not doing that right now I'm not doing that right now I'm going to leave this as two separate functions but you're right to ask that question you being the metaphorical person who I think I'm talking to I mean you're yeah okay so um oh undefined is not a function line eight drag probably drag out is wrong so how do we figure this out I should stop being so like I'm just going to imagine what the P5 Dom API has in it and I should probably go and look this stuff up so if you were doing this and you got this error and you wanted to figure out how to find it you could open up a browser you could go to pjs. org I'm going to click on this you should be able to find this under reference and I'm sure that will change at some point soon but an easier way to find I'm going go under libraries and I'm going to go to P5 Dom and now I'm going to see oh look at all these look at all of these methods and look at that I called it drag out but we can see here the me the the the event is actually called drag leave that's the name of the function drag Le by the way there's add class and remove class huh interestingly class think of something that happened in a previous video and I wonder if that should actually be changed but anyway it's a side topic I'll have to think about that in my own time so drag leave is the name of the function that I wanted so I'm going to minimize that and come back and I could have clicked on it to see some more information but I don't need to do that right now I feel confident that I could just type drag leave here and now I can run this again and here we go file leave file leave look at that what a nice little I'm so good at user interface interaction design I'm being s sarcastic because I'm not good at that um but you can see this is a bit more intuitive at least to be able to handle these types of events of when you have the thing over when you have the thing out so but we're missing kind of the exciting thing this is just like nothing's going to happen like if I look that's the same thing happen that event the drop event when I let go of the mouse when I perform this release action this is me miming the release action um I need to handle that event and that event is handled with the drop function now what goes in here let's think about this for a second so let me comment this out and run this there there are two things that have to happen and this is tricky one thing that has to happen is I need to read that file the other thing that needs to happen is I might want uh there's okay well actually there really aren't two things I was thinking there there aren't intuitively there aren't two things there's one moment right I drop so the moment I drop I might want to handle that event by like applying some style to it like UNH highlighting it and then I also want to read the file that's been dropped but those are actually divided into two separate callbacks and there's a really good reason for that and the good reason for that is that I might want to take all of these images what if I drag all of these images into the browser I need a call back to handle each file one at a time but there's only one moment of dropping so um so in that sense and I forget which is which let's go back to the reference so oops uh let me go back to the reference here and I'm going to click on this drop event and you can see we could read this uh call back callback so look at this call the first call back is triggered when files are dropped so that's the event the actual event of dropping the files then the second call back is to when the file is loaded and actually this also happen at separate times because what if you drag and drop a like 500 megabit megabyte image file right that drop moment happens instantly but it might take the browser quite a while to read that very large file so that's why those are two separate events so I can go back to my code and I can say you know what when I drop it I also want to unhighlight the box right that's uh I want to UNH highlight it and then I want to handle the file so I'm out as I'm I'm doing two things when as soon as I drop it UNH highlight the box and also trigger a new function got file function got file file now interestingly enough so let's just run this and at least see now when I drag the Unicorn over here uh let's just only the unicorn please uh it highlights it UNH highlights it highlights it UNH highlights let's drop it it UNH highlights and I've overridden the default browser Behavior the default browser Behavior would have been to open that file but I've now overridden that by whatever goes here so now I can do whatever I want and not only can I do whatever I want I can do whatever I want with the data in that file for example I could say create image file now I don't think this is actually going to work I know it's not going to work because that's so but let's let's try it with this rainbow right it something appeared there but it's like a broken image so this thing here the argument that comes into the function this might be actually something rather new to you I'm realizing because most of our callbacks like highlight or unhighlight don't have data that arrives with it so this is a new scenario this callback P5 is not only triggering the call back when the file is ready to be loaded but it's also handing a variable and inside that variable is just P5 is like such a nice wonderful friend that P5 is like look I'm going to hand you I'm going to call this function I'm going to hand you this variable and I'm going to fill that variable for you with all the data associated with that file so this file variable is actually an instance of a P5 file object and there's all this information like I know how big the file is what its name is there's lots of metadata asso away that file and something that's in that file is a property called data and that data might just be the text that's in the file it might be the the other some other data format that's in the file or it might be image data so if I say create image file. data now watch this oh okay let's look at the reference did I you sure I saved that I ran that I I'm pretty sure that was right but you know we have a little bit of a problem problem here it's not working so let me go back to the reference and I'm going to go to the reference and I want to look for file file this is where this is this is this um where's the P5 file object somebody find it for me quickly uh P5 image P5 do file I'm not seeing it um so you know some reason it's not in the reference which it probably should be I'm going to I'm taking drastic measures here and I'm going to go to the p5js GitHub repository I should actually just look for an you know what I should look for an example that does this there's actually an example that I I was going to go into the repository just going to look you know fast forward through the video like 30 seconds or a minute you could skip this part but I'm going to go look for under uh learning maybe or under Dom let's look at uh let's uh uh under P5 element I'm going to look for the drop this is probably not the right place yeah yeah yeah no I want under ex examples uh Dom random random Dom uh drop there we go uh uh uh file. data well by golly I was right wasn't I create image file. dat so that's what I meant to do why didn't that work uh let's just okay let's be a little bit more methodical about this maybe something else is going wrong that I don't know about so for example um let's look let's see if there's some of the metadata is there I'm going to say create P file. name uh create P file. type create p file. file. siiz and uh so there there are all all a file has all this metadata so with it its name its type it size those are all strength that's just data and data should actually be the image stuff so let's run this and let me drag in this rainbow file and you can see undefined drop undefined oh you know what I wonder if I guess what I think I might have done I know what I did I probably revers the order of those I reverse the order of those uh callbacks so this is a very common thing that happens aren't you enjoying the fact that I just mess this stuff up all the time I really hope you are so this is this is something so you know we've looked at this and realized like the call back is triggering I mean of course it's triggering because they two callbacks both of them are triggering but I'm triggering them probably in the wrong order so let's go back to the P5 reference uh uh libraries Dom and let's look at this drop function right here and let's read this again the first call back triggers when the files are dro the second call back triggers to receive the loaded file isn't that the way I did it uh first call back but but I have a feeling the reference it wasn't entirely my mistake I have a feeling the reference misled me let's switch the order of these it's probably the first argument is the call back to handle the file and the second argument is the call back to handle the event the just the dropping event so let's try this again and here we go yay so I've got my and let's let's do something where I say VAR image equals create image I say image do uh size 100 100 and I'm going to do create P I'm going to just Join one string uh so I'm going to take this out just to make this a little shorter now let's look at this again and to make a bigger window we can have this nice moment where I drag the Unicorn here there's our unicorn I drag the rainbow here there's the rainbow I drag another rainbow here there's that so you can see here the files are coming in I'm adding them to the page and also I get information how big was the file what was the name of the file I could use that information I'm just sort of like spitting it right back so this is interesting hopefully I mean so I'm not really doing anything with that and also I should mention let's just prove that this works I'm going to uh refresh this page to start over let's drag all of the images all at once and there you go all of them appear so it's handled that call back was triggered many many times for each image um so I want to do one more thing which I think is just kind of like makes the seam a bit more magical so you can have a Dom element that has like a doted line and says drag your file here but anything can be a Dom element that you drag stuff onto even like a button could or a slider could even that barely makes any sense but let's actually do something to this example I'm going to do save as uh drag and drop two I'm going to say you know what forget about this Drop Zone thing take that out of there take that out of there why not store the canvas in a variable and say canvas do drag over canvas. drag leave canvas. drop so look at this if I run this now I can just take this image and drag it over the canvas drop zone is not defined uh all right we don't I don't need any of this styling stuff anymore to be honest with you I don't I'm deciding like not to care about that I can do something much simpler I can just use the single call back of dropping it you know I'm not just skipping the visual feedback part right so anything can be a drag and drop element and now let's think about this even more in a different way what if when I drag the element onto the canvas I want to see the image in the canvas so what can I do I can just call the image function image 00 0 with height so this is the difference again between making a Dom Element image and then drawing and versus drawing an image into a canvas the image function draws that image whether it's through load image or create image into the canvas create image makes the Dom element so now we should be able to see this uh that now I'm only seeing the top left corner of the image because they're kind of small I'm surprised about that because I'm drawing it supposedly uh with the width and height of the um of so I'm kind of surprised I feel like that's a little bit of a P5 bug there I don't know why that's not working I have to examine that but also the thing I wanted to show you is that I don't even though I might have to do it this way to create the image via um this uh uh to create the image uh as a way of like getting the data from the file I can use I can use the P5 function image. hiide so I can make that Dom element purely to open that file and then I can hide it instantly and then draw it into the canvas I'm actually sort of surprised this is working because I I realized that I was sort of thinking I mean that there might be another problem associated with this oh but now it's working I don't know what I missed with the width and height before for um maybe that oh that size thing probably messed things up but you can see look at this that was a transparent image so you can see now the as I drag and drop the images onto the canvas I see the image there so that concludes this particular video um where what I was hoping to demonstrate I think I did which is the idea that you can create an any element on the page and you can handle when you've dragging a file over it when you decide you're not going to drag that file over it and when you actually drop that file and if it's an image file you can use that image to display the image data and um in some other video in the future I'll probably show you how to do it with a text file and do something like word counting the text file but that's that you might um investigate the load strings function and sort of see uh how you might do that um I don't have a good exercise I can't think of one I'll write something in the description okay thanks and I think I have one more sort of Dom video to make after this one okay uh hello live stream all five of you uh um uh I don't know if anybody's still watching but some people it it claims that people are watching I'm going to just take a short break for myself here for like a minute and drink a little bit of water if you have any questions or feedback please add them into the chat okay so the last thing that I want to do is um just sort of demonstrate automatic control of interface Elements which I don't know exactly what practical use this has but I think it's sort of interesting and weird and so um I do that with a text field and with a slider and uh yeah I almost want to do this with pearly noise which would be kind of weird interesting but then I have to explain plar and noise and I have to do that in a different video I think uh okay um so this is the last uh one it's like very hot in here I'm going to open the window a little bit more get some air in here let me think let me get myself set up for this um I'm going to make a new example called Zombie Dom and uh I'm going to take out all this stuff and I'm going to take out all this stuff and I'm going to run this and it's empty and blank which works and I'm going to do this and I'm going to say function setup no canvas uh function draw okay so um uh uh okay sorry uh I am think I'm ready for this here any um I'm trying to think of what I'm going to look at I think I'll just I'm probably just going to use the computer for this one I don't think I need the Whiteboard uh to demonstrate this idea okay close this and this is the last one except I didn't do this even though I I came across the scenario in the previous video where that would have been useful for to remind myself I should have written that down somebody remind me uh okay I'm GNA minimize this uh I've got this this opens up over here um let's do this to this just to like put it over here which I think will be good enough okay uh great so I'm ready I think this is the last video I'm going to record today it's about 245 I did 2 hours and 20 minutes morning I've now done almost an hour which is three and a half hours today which it's probably more than I should do in one day but Thursday is the day that I have to do this um and so here we go checking the chat uh and I'm going to close this laptop and get started hold on I need some water again so this is really a bonus video I just want to do something weird with dom manipulation that I'm kind of going to just make up on the Fly although I did make an example like this a couple weeks ago I've looked at it since then so hopefully this is going to work out and what I want to show you how to do is to take innerface elements that normally you would ask the user to manipulate like move a slider or type some text into a text input box and I want to show you how to just control those pro control those things programmatically as if they're like there's a zombie controlling your computer so first of all I have a P5 sketch here I have the P5 editor this is sort of like a bit of a standalone video so some of you might be coming to it from not having seen P5 before go to p5js dog download the editor look at the reference you can use that for this uh quick little project so let's give it let's hit this button we can see there's absolutely nothing appearing in the browser because I haven't added anything now let's create a variable called slider and I'm going to say slider equals create slider and remember when you create a slider you need a minimum and a maximum and a starting range I don't really it doesn't really matter so much so I'm in this case so I'm going to create a slider with minimum goes from zero maximum goes to 100 and it starts at 50 uh it's very loud outside so I'm going to close the window and I'm back you can see the slider is there and now I can do what anyone would normally do with a slider I can slide it back and forth I could use the slider to control myself watch nobody cares that I'm doing this but it amused me for a second okay so uh that's normally what you do and you would tie the slider to an alpha value or to some parameter in a flocking system whatever kind of creative coding thing you're doing today but what if you wanted to actually set the value of that slider so one thing you can actually do is okay so if you want to get sorry if you want to get the value of the slider you say slider. value and so let me make it between 0 and 255 and I can see now I have no canvas let me create the canvas just so it's there and you can see now that the canvas is there and as I move the slider it's changing the background color this is again what you might normally do now another way I could change the value of the slider is actually to just call the value function but give it an argument so the argument I'm going to give it is the number right now 151 so you can see that now the slider even though it started at 50 as soon as draw executed I set its value to 151 well draw is animating looping over and over again what if I made that sum variable like for example VAR X = 151 and slider. x and x = x plus some random amount between like5 and five now let me run that and you can see look the slider is moving on its own I have my first zombie slider there it is just moving around I don't ever have to operate the computer again it's just going to do it for me great so uh but let's go a little bit further with this first of all let's use something called a sine wave I would uh I'll link below to some other video where I talk about sine waves I'm saying I'm going to link below I better do it right in the comments if I didn't do it and I'll add it but let's use a sine wave so let's say instead that x equals the value VAR x equals the value of the of a sign of something sign of some angle so now I need a variable called angle and I need it equal to zero now I might as well take just a brief moment to come over here to this whiteboard which I said I wasn't going to need and talk about what you get out of the sign function I said I was going to link to another video but I feel obligated to just offer a quick explanation if you've ever seen a drawing of the sign function CA this is not going well that camera shut off you ever seen a drawing of the sign function it looks something like this uh the range uh uh the range goes from between one to negative one I should start over but I'm not going to um the range goes between one and negative 1 the xaxis being this angle that's moving through time in a way that you can think so depending on what the value of the angle is I'm going to get between one and negative 1 so here that was that was like the worst explanation ever just go to the thing that's that explains the sign function you haven't looked at it before um so what I want to do is get this the sign of some angle and if I do that it's stuck there at the bottom right the result of the sign function is always a value between 1 and 1 now there happens to be another another function in P5 called the map function and I definitely have a video that's only about the map function I'll also link to that below but what I can do with the map function is I can say hey the sign function goes between 1 and one that's the range of the sign function but the range of my slider is between 0 and 255 or 0 and 100 whatever it was between 0 and 255 so map the result of the sign function which is somewhere between negative 1 and 1 to the between 0 and 255 so now I'm going to do that oh unexpected number line 12 I don't I don't oh cuz uh I forgot a comma here there we go and you can see ah so s of zero happens to be the value zero which then happens to be halfway between negative 1 and one which is halfway which gets mapped to 127 about and you can see it's now in the middle now what if I took that angle and incremented it over time I could maybe get the slider to oscillate nicely angle plus equal 0.01 now the angle the unit of measurement is in radians and in that other set of videos that I'm looking to there'll be an explanation of that and you can see look at that this nice little the slider is moving nicely slowly and it's coming to the end and it eases off and you know we could maybe make that move a little bit faster by incrementing the angle a bit more each frame and now I've got this slider that's like oscillating automatically it's kind of like dancing I'm trying to do it with it but I can't so this was fun and all well and good but let's do something more with this first of all forget about this silly canvas thing that was nice to be able to see that the slider is still actively controlling the canvas but forget about that forget about background What If instead I make an array of Sliders and I were to say for VAR I equals z i is less than 10 I ++ and I'm going to make all those sliders in an array so make all those Sliders in an array and then let's do exactly the same thing down here let's set all of their values to the value of this sign function and here we go and I run it look at that all of the sliders are now oscillating back and forth is that lovely and then I don't know 10 didn't seem like very many let's make 50 of them oop oh and I I I hardcoded that I should really say sliders do length let's make 50 of them you see all them moving I don't know I'm just going crazy let's make a 100 of them I want to fill the page with sliders you can see now I've got a 100 sliders dancing back and forth now interestingly enough if I'm working with a sine wave and I have one thing oscillating back and forth and I have another thing oscillating back and forth and I have another thing oscillating back and forth what if each one of those was just a little bit behind the other one right so when this one is over here this one is over here and then this one's over here and then this one gets the end and comes back and then this one gets the end there's just a little bit of offset so they're kind of like dancing with each other in a way and we could we could play some music and dance the slide dance the night away with the sliders that's what I do by the way I have no social life so I go home and I dance the night away with sliders think about that for a minute why don't you then donate there's donate button but I don't know what you would donate to to the cause of sad dancing slider people but the point is what if I could get each one slightly offset from the other one maybe I could have another variable uh I could say offset equals zero angle plus offset and then offset plus equal 0.0 2 3 four five making that number up doesn't really matter the two five the point is I want each one of those to oscillate based on that angle but one of them should be 025 ahead and the other one should be 0.5 ahead and the other one should be 075 ahead I think I'm doing the math right let's just see if that works there we go Dan save the night away with the SL so you can see here I'm just zoma controlling these sliders they're all slightly offset from each other I could play around like what if I really make them offset from each other uh whoa now I've got this crazy pattern here um where all the sliders I could arrange them in a different way I could have them like paint make a little picture I could all use them to control things I could style them so there's lots of possibilities the point that I'm making this video is to say I don't know anything about the web or design or how to make anything look right or do anything practical but uh so I'm sometimes trying weird things out and happen but the point of what I'm saying that's not the point of what I'm saying the point of what I'm saying is the browser could be an experimental canvas for you what kinds of things exist as elements in the browser that we use every day in these standard ways and what might happen if you subvert those standard ways and do all sort and do different things with them that might not be expected this is a very simplistic almost sort of like first approach to that but it's something that's worth looking into uh and playing around with I I want to keep doing stuff to it but I'm like stopping the other thing that you might think about doing is having a you know a text input box and how you can use the value function to set what's in the tech how might you make it appear that someone's typing into that text input box um without there being a person there and suddenly hitting a submit button that that you know so how might you make a page feel as if it's interacting with itself um and you know you could also do something when you move one slider oh we should try this okay so let's stop this okay what are we you stop the the video now and go do some go outside and play Frisbee or whatever and go socialize with your friends or have a nice cup of chamomile tea to relax meditate all these things are much more important than what I'm going to do next but if you're still here I'm going to do one more thing with this what if I have them all move when I move one of them slightly offset from the one I'm moving I don't even know if that would work I shouldn't try to do this right now this was going so well I'll just add this one so for example uh let's say what I want to do is hand Le just the first slider the input event first uh uh adjust sliders so if you remember the input event is an event that gets fired any time there is a change to the value of a Dom element such as a slider so I'm I don't need this uh draw function anymore I'm going to rename this to adjust sliders and I'm going to say start from Slider one slider I value slider index z. I'm making this simple so here what I've done now is I've said anytime you change sliders zero the first element in the array call this function adjust sliders Loop through all the other ones starting with one and change their value to the value of the first one so here we go and I can say anytime I move this they all move but so I'm going to leave that at that you could they take this what if when you move they all kind of like move sporadically but kind of like with that one what if when you move it causes them to sort of Ripple first one moves then the next one moves then the next one moves and you get this kind of like dancing this is Dancing with sliders so how could you if you actually interact with one and it makes the other ones do something uh anyway uh I'm I'm kind of off the beaten path here think of your own write your in the comments to wherever you're seeing this video write some other ideas of things that might be more interesting than what I'm thinking of I would love to make some more examples in this direction or maybe share things that you've made in that way so um this concludes a many many many videos that I've made about Dom manipulation HTML and CSS with the P5 GS Library I'm sure I missed a lot of things there are a bunch of these videos where things didn't work or I was like kind of confused send me your feedback write your letters of Complaint to Brian Williams I mean uh me um uh here at ITP uh the address is 721 Broadway I think that's okay to mention it's on the internet um uh you can send something in the mail I like things in the mail um and uh I will uh the next section of videos that I'm hoping to make possibly tomorrow but definitely next week if not tomorrow is about working with data so how do you work with a data file that you might load that has information in it how do you connect to an API like a weather API or the New York Times API or this wonderful API called the word Nick API that's one of my favorite apis so that's what I'm going to look at in the next set of videos that I get to uh next so thanks for tuning in which sounds ridiculous and um I don't know let stop now thanks okay okay uh so that's uh finishing up the live stream from today uh there are a few of you still here um I'll Stick Around for just like a few minutes just if you had a question type it into the chat um and I'll keep my I'm keeping my eye on it and otherwise I'm going to turn off the Stream in uh the next few minutes uh an hour in that's pretty good two hours this morning an hour now that's I think three hours is probably my limit for the day although I'm kind of like you know uh too many ideas are floating my head of other things to record okay okay uh I'm looking at the chat looking at the stream Health it says it's very healthy looking at a button that says I can share that I'm doing this change the thumbnail uh okay I don't see anyone uh asking any questions so I'm going to sign off for today I hope you enjoyed this I I really enjoy this even though it I feel like um a little bit like I'm just like repeating myself or making the same bad jokes all the time but I'll um you know come back fresh another day uh and thanks and it's very awkward to say goodbye to people that don't exist someday I'm going to do this with like with actual people in the room that might be a nice thing to do okay I'm hitting stop goodbye
