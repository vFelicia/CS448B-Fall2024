With timestamps:

00:01 - [Music]
00:20 - [Music]
01:04 - [Music]
01:34 - [Music]
02:01 - [Applause]
02:03 - [Music]
03:20 - [Music]
03:56 - [Music]
04:03 - good mornings sound check one two three
04:07 - this is Dan on the train barreling down
04:10 - the tracks towards the station
04:12 - let me know in the chat the sound levels
04:14 - seem good
04:19 - [Music]
05:18 - [Music]
06:17 - good morning happy Thursday on the
06:21 - coding train Oh deep breath in with me
06:27 - your host Dan all aboard
06:29 - good morning I think today is gonna go
06:32 - just fine and dandy and really well
06:34 - because we will be beginning as usual
06:38 - with the ceremonial reading of the
06:41 - random numbers now
06:42 - today is February 20th 2020 that is a
06:47 - lot of twos and some zeros so let's find
06:50 - our way to page 20 15 16 17 19 20 in our
06:56 - book of random numbers and perhaps we
06:59 - will go down to the 20th row 1 2 3 4 5 6
07:04 - 7 8 9 10 11 12 13 14 15
07:07 - I'm sorry did you think you were
07:08 - watching coding tutorials I deliver 15 5
07:13 - 10 15 16 17 18 19 20 all right and
07:17 - today's numbers on the coding train are
07:23 - five ten fifty hmm
07:25 - eighty-eight thousand two hundred
07:27 - thirty-five forty thousand four hundred
07:29 - and thirteen twenty two thousand forty
07:31 - one eighty two thousand six hundred
07:33 - thirty eight thirty one thousand nine
07:35 - hundred twenty three eighty seven
07:37 - thousand eight hundred and fifty one
07:40 - sixty thousand one hundred ninety ninety
07:43 - eight thousand four hundred and twenty
07:45 - eighty three thousand six hundred
07:46 - twenty-three and twenty two thousand two
07:48 - hundred and fifty-six
07:50 - ah I can't hear anything says offbeat
07:55 - stuff I'm assuming that offbeat is a
07:57 - little offbeat today and that only
07:59 - offbeat is not able to hear what I'm
08:01 - saying I'm out of breath strangely hmm
08:05 - I'm very very very very tired this
08:09 - morning it's morning for me it's about
08:10 - 9:30 a.m. this is my second live stream
08:16 - of this week and if I'm being honest I
08:22 - really shouldn't be here today because I
08:24 - have this personal commitment personal
08:28 - goal to be working on the nature of code
08:33 - book 2nd edition
08:35 - in JavaScript and I have been working on
08:38 - edits of this book and I am all the way
08:42 - through chapter 4 I am now working on
08:47 - chapter 4 edits which I started over the
08:50 - summer and I've been I've had this file
08:54 - open on my computer since I last live
08:56 - streamed on Monday really since Tuesday
08:59 - afternoon and I have this file open and
09:02 - I keep trying to get to editing it and I
09:06 - haven't had any time so what would not
09:09 - be a better time than the two and a half
09:11 - hours I happen to have free this morning
09:13 - to livestream so I really really need to
09:16 - carve out the time to work on this and I
09:18 - know there's a crazy solution that some
09:20 - of you have suggested which is why don't
09:23 - you just work on it during the live
09:24 - stream which is an excellent idea and
09:28 - one that I hope that I will do at some
09:30 - point in the future but here I am I am
09:34 - committed to four
09:35 - livestreams per month and here is my
09:38 - second or third second I think in
09:41 - February and so I'm going to do and I'm
09:45 - in the videos that I'm making that go
09:46 - along with this book I'm Way behind
09:48 - chapter 4 and today I'll be doing videos
09:50 - about chapter 2 so all in all there's a
09:52 - lot to do and I am going to try to get
09:55 - to it and the reason why I brought the
09:58 - number 4 there is I think in light of
10:01 - this squeezing out of the time to do all
10:03 - the things I think I'm going to move to
10:08 - at least for February March and April
10:11 - three live streams for months with
10:14 - hopefully that carving out a little
10:16 - extra time to work on the nature of code
10:17 - book as well as my love my true love
10:23 - which is to code in the Cabana Oh Cabana
10:28 - there was a day a few weeks ago where I
10:31 - said it was snowing out and the freezing
10:36 - cold was fasting on my mustachio and I
10:40 - was looking at the hilbert curve patter
10:41 - and typing away and thinking
10:44 - before visualization satisfying and
10:47 - relaxing and then all the people of the
10:50 - internet came and they watched the video
10:53 - hoes they traveled in their minds to the
10:57 - Cabana
11:00 - and there they were making their own
11:04 - versions of the hilbert curve so many
11:08 - beautiful variations of artistic which I
11:14 - showed on last livestream and I would
11:15 - really like to do more this so here's my
11:18 - goal now I'm setting this out into the
11:20 - universe through my lips to your ears
11:23 - and your reading of the captions I am
11:29 - going to my goal is to do and I may I'm
11:32 - gonna hit it people don't make their
11:34 - goals that happens especially people of
11:37 - the internet making content three live
11:40 - streams this is my second for this month
11:42 - so the third for this month will be next
11:44 - week and one Cabana video so I suppose
11:50 - this one will count for February and I
11:53 - want to do the next one for March now
11:56 - the topic I actually want to do for the
11:58 - next Cabana video is marching squares oh
12:03 - and there's a wonderful video for you
12:07 - know there's basically if there's two
12:08 - YouTube channels that I think I refer to
12:10 - the most in terms of the content that
12:12 - I'm doing one is sebastien legs which is
12:15 - right up here Lag I I've gone over this
12:21 - so many times with Sebastian in my mind
12:23 - practice it and then when it comes down
12:25 - to the moment of saying
12:27 - Sebastian's name I forget but and then
12:30 - the three blue one Brown videos which I
12:33 - used a to form a basis of the hilbert
12:35 - curve video and I really want to do
12:36 - marching squares yeah Jason G is like
12:41 - it's a oh my sunny I look at the chat
12:45 - and people are discussing what the word
12:47 - Cabana is which I guess Cabana would be
12:49 - the authentic pronunciation for the
12:53 - Catalan Spanish word a small wooden
12:56 - house I mean it's really a shed a shed
12:58 - is a more accurate term but I I read
13:01 - that as romanticized because I wrote
13:03 - mantis sizing the garden shed into a
13:06 - Cabana
13:08 - um but David I know David is watching
13:11 - and David is the volunteer maintainer of
13:14 - the wheel the wheel is sort of this
13:16 - nebulous thing that I aspire to have as
13:19 - like a really functional aspect of the
13:21 - coding train the wheel abacus there's
13:24 - maybe I'm there's some kind of link here
13:25 - the wheel of the train itself where I
13:27 - like to sometimes not I can't pick what
13:29 - I'm gonna do
13:29 - so I spin a wheel and it tells me what
13:32 - to do with a bunch of options so I
13:34 - haven't really figured out the way to
13:36 - fully embrace the wheel of the coding
13:40 - train but I use it from time to time and
13:44 - maybe I don't know if it's ready or
13:46 - available I did spin it last time to
13:49 - pick the Hilbert curve it actually
13:50 - landed on Z something Z Z Z curve or Z
13:53 - function I don't remember which I've
13:56 - been doing some research decided that
13:58 - the Hilbert curve was an appropriate
13:59 - analog for that spot so I would like to
14:03 - spin the wheel again maybe from the next
14:04 - caba√±a topic today if I can sort of like
14:06 - get that up and sort of figure out
14:08 - what's gonna go on there but the topic
14:12 - oh okay before before I get into the
14:15 - topic I want to brace um I want to
14:16 - address a comment in the chat for briefs
14:19 - writes I stole your code about the
14:22 - Fourier series so I want us to try as a
14:24 - community to get away from the term I
14:27 - stole this code to do this now there is
14:33 - something which would be stealing is a
14:35 - thing and people can steal objects and
14:38 - all sorts of other types of things and
14:40 - perhaps there I think the words steal
14:43 - with code is probably appropriate in
14:45 - some contexts but I think we use it we
14:48 - I'm saying people that I hear me myself
14:51 - and other people that I hear talk about
14:52 - this over use it to really mean
14:55 - something much more positive which is I
14:58 - made something based on your code thank
15:00 - you for releasing your code in an
15:02 - open-source way with a proper license
15:04 - that allows me to make this creative
15:06 - project and then give you credit back so
15:09 - there is no stealing of the code the
15:11 - code from my examples it's exact
15:14 - intention is for you to reuse it
15:17 - and I actually released them those code
15:19 - examples are released under the MIT
15:21 - license which does not require you to
15:23 - credit back so you're under no
15:25 - obligation to and I you know me
15:27 - personally it's weird feels weird for me
15:28 - to say please credit me cuz I don't I
15:30 - don't feel like I want to say that or
15:32 - feel a neat need for that but in my own
15:35 - work in practice it feels very important
15:38 - to me that I credit any code that I'm
15:40 - using from somebody else and so I try to
15:44 - overdo it I'm sure I make mistakes and
15:46 - I'm sure I've written code that I that's
15:49 - sort of copied and pasted from somewhere
15:51 - and I didn't think think through
15:53 - carefully enough and I missed crediting
15:55 - it or whatever so I welcome feedback and
15:59 - people to help point out where I can do
16:02 - a better job at that but that's
16:03 - something that I feel like is very
16:04 - important okay Delta X Delta Y says
16:11 - factorial stole from multiplication
16:13 - which stole from addition and Simon is
16:18 - linking me to the to-do list ah the
16:20 - to-do list issue number one 904 coding
16:28 - train website issues one 904 1904 what's
16:34 - something had happened in 1904 great so
16:37 - I could use this as my spin the wheel
16:41 - yeah
16:42 - or at least I could pull something so
16:44 - many things to make video tutorials on
16:47 - one thing that I thank you for
16:49 - maintaining this by the way a gypsy
16:52 - dangerous and Simon Tiger this is so
16:54 - helpful and awesome I want to talk about
16:58 - what I'm doing today but there's
16:59 - something else just popped into my head
17:00 - here ah yes announcement remember I said
17:04 - three live streams per month this is my
17:06 - second next one would be next week
17:11 - actually because I mean you know never
17:15 - you know every commitment I make is this
17:17 - what loose commit things go wrong it's
17:20 - scheduling why is a lot for me you know
17:23 - I have some things family and this like
17:25 - full-time salary page up here at NYU
17:28 - that do
17:29 - really require me to be in certain
17:31 - places at very precise times and you
17:35 - know for better or worse the YouTube
17:36 - stuff I can be a little fungible about
17:39 - if that's the right term but I want to
17:42 - mention that coding garden which you
17:45 - might know the coding garden from its
17:46 - raids the coding coding garden with CJ
17:51 - is a YouTube channel which is I like to
17:54 - mention it whenever possible because it
17:57 - is an excellent complement to the coding
18:00 - train in particular if you're looking
18:02 - for full stack web development a lot
18:04 - most of my stuff is a little goofy math
18:08 - algorithms visualizations are informal
18:10 - coding computer maybe some computer
18:12 - science topics which have a sort of
18:14 - formality to them but coding garden with
18:19 - CJ is you know if you're looking for
18:21 - some professional development and
18:22 - there's plenty more to it than that
18:24 - but it's a nice complement to the stuff
18:25 - that I'm doing and CJ and I are planning
18:27 - a collaboration next week next Wednesday
18:29 - I believe February 26 to look at how to
18:31 - program a discord bot so I think the
18:34 - idea is the CJ could correct me if I'm
18:36 - wrong no no I don't coding garden is
18:38 - watching okay great
18:40 - so here I'm talking about this now I
18:42 - think there's a way I'm thinking about
18:44 - it and CJ's in the chat so maybe CJ can
18:46 - offer his point of view the way that I'm
18:49 - thinking about this is I know nothing
18:50 - about discord BOTS other than you know
18:52 - my sort of like loose sense of what they
18:54 - are and how they work knowing how to
18:56 - program other kinds of BOTS and so I'm
18:58 - going to go on the Cody garden and CJ
19:01 - will maybe teach me a little bit about
19:02 - how to program a discord bot and we'll
19:04 - tinker around and make something and
19:05 - then that will lend itself to me we're
19:08 - turning back to the coding train to
19:09 - maybe do a set of tutorials about how to
19:11 - make a discord bot that's kind of my
19:14 - idea okay so that's on the horizon next
19:20 - week another thought appeared in my head
19:24 - while I was talking about this thought
19:29 - but I can't I can't pull it out of my
19:31 - brain right now like I suppose it'll
19:33 - come back to me all righty then so what
19:37 - is happening today
19:42 - let's see give me em give me a little
19:44 - moment to feel way to looking for
19:54 - something I am working on something that
19:58 - I don't want that I need to find before
20:00 - I alright in progress you might be aware
20:26 - that YouTube has a new feature called a
20:28 - learning playlist my ml5 Jess videos are
20:31 - in the learning playlist my intro to
20:34 - programming at p5 jasser and I love
20:36 - learning playlist the github getting
20:38 - github videos are learning playlist I am
20:39 - now attempting to put together please go
20:42 - to Pikachu Oh see if anybody could guess
20:51 - what this is
20:53 - okay I'm back to important things it's
20:57 - okay to love Pokemon at my age and
21:00 - especially if you have if I have
21:01 - children who also love the Pokemon and
21:03 - I'm just I'm bonding with them through
21:05 - the Pokemon but I'm not getting them
21:08 - their own phone they are not old enough
21:09 - for their own phone and their own app
21:11 - they do not need it what's the
21:14 - expression wait till eight not eight
21:15 - years old eighth grade I'm putting this
21:18 - out there all right now you don't need
21:19 - to be involved with this kind of
21:20 - decision-making parental decision making
21:22 - I do have Butchie I do I have younger
21:26 - viewers to the Kodi crane not right now
21:28 - cuz you're in school maybe you're like
21:29 - in Europe or something or India or some
21:32 - other part of the world where it's
21:33 - evening time and you're not in school
21:34 - you are watching I need some help this
21:38 - parenting thing is very hard okay way
21:40 - back back to this oh it's getting warm
21:45 - in here
21:46 - whew oh gotta catch them all yes ah oh
21:50 - yeah I am working on a new this what
21:53 - happened a lot faster if I didn't just
21:55 - like
21:55 - go off on all these tangents human-based
21:57 - algorithm learning Arnab says I am in
21:59 - eighth grade so Arnab you are you know
22:03 - perhaps at the appropriate do you have
22:04 - your home phone like okay yes a bunch of
22:08 - people are saying they're in India I
22:10 - just picked Europe and India arbitrarily
22:11 - you know incidentally if you're curious
22:13 - I haven't checked this recently but the
22:15 - last time I checked us was the in terms
22:19 - of viewership and I don't mean the live
22:20 - viewership I just mean the overall
22:22 - viewership across everything u.s. is the
22:24 - first country listed Germany is off in a
22:27 - second which I find interesting and
22:29 - India has been quite consistently
22:31 - recently in the third spot so thank you
22:34 - India for that if you can thank a
22:36 - country all right
22:39 - Arnab says yes I have my own phone if
22:42 - we're up to me says zero I would ban
22:44 - smartphones from kids till they were 16
22:46 - offbeats dust says I am in tenth grade
22:49 - flip phone what about a flip phone
22:51 - Argentina here I love by the way with
22:53 - everybody in the chat and Mr Mugabe says
22:55 - I'm in eighth grade too
22:59 - Mike says I didn't kill myself up till I
23:01 - was 30 guess what I had some of those
23:06 - really old early Nokia phones when would
23:09 - I have had those early 2000s I think
23:13 - okay my parents got me a cell phone at
23:18 - 13 and smart phone at 16 okay good
23:22 - see you so everybody has very reasonable
23:24 - parents out there I'm glad okay I gotta
23:26 - get back to this I'm on a ticking clock
23:29 - here everybody and Dane says I'm from
23:32 - Germany
23:32 - Samsung Z flip but the chat is really
23:35 - fun to read I have to like stop myself
23:37 - here and there because it becomes Peru
23:38 - and Brazil and hello okay not looking at
23:42 - the chat looking at you we are here
23:44 - together this I'm not looking over here
23:46 - because when I look over here at my
23:47 - monitor I also see the chat that's my
23:49 - monitor it's not my monitor here it's
23:50 - over there I look out of the corner of
23:52 - my eye well behind the scenes here I
23:53 - wanna see
23:57 - so this is the way it works oh it's
24:01 - flipped that's the camera and this is me
24:04 - and then over here is where I see like
24:07 - this monitor on the wall that has all
24:08 - the chat and all that sort of stuff okay
24:10 - oh it's still there sound board is here
24:16 - you can't see it okay 200 people
24:23 - watching and everyone is chatting yes I
24:25 - am in the discord chat David Schneider I
24:28 - am in live chat
24:29 - I see people saying in the live chat
24:32 - what age they got a cellphone hat there
24:36 - it's very useful for me these live
24:38 - streams where I can just ask questions
24:39 - and I get a like a wide survey of people
24:42 - in the fans of the coding trainer not
24:45 - that you're all fans some of you might
24:46 - be
24:46 - Speight watching it's that a thing okay
24:54 - this is my project for this these three
24:59 - months I would say I hope to have this
25:00 - completed by the end of May this is what
25:03 - it looks like in progress and all these
25:05 - videos are unlisted and still being
25:07 - finalized you know if you want to join
25:10 - as a member of the coding train you will
25:11 - get a little bit of early access to this
25:13 - stuff but ultimately it's gonna be out
25:16 - within a few days of you know sharing it
25:19 - with the members but it's helpful for me
25:20 - sometimes to share videos with a smaller
25:22 - group to make sure there isn't like a
25:23 - major issue so that's on the horizon
25:28 - one of the things that's interesting
25:29 - about this and let me see if I can get
25:31 - over here is that what I don't play
25:34 - don't play the video is that there are a
25:38 - lot of older videos that will be in this
25:41 - playlist
25:42 - so I'm trying some of these I'm remaking
25:44 - and putting like interstitials in and
25:46 - then others are just videos that I made
25:47 - from before where I am currently is I
25:53 - there are three vector P v vector
25:55 - tutorials ready to go and they need
25:58 - maybe maybe some like minor edits and
26:00 - then we'll get uploaded and released
26:02 - I've recorded more of them on Monday
26:06 - when I did my last livestream those are
26:08 - currently being edited thank you to
26:10 - much is in the editing car of the Train
26:14 - it's like next to the cafe car you know
26:17 - what my favorite car is the quiet car oh
26:19 - I love the quiet car and today today
26:28 - close this I am going to start going
26:33 - over the making new video tutorials to
26:37 - go along with chapter two forces so this
26:42 - is the topic for today I don't expect to
26:44 - get too far with this I mean I would be
26:48 - awesome if somehow like by the end of
26:51 - today which the by the end I mean around
26:53 - noon so I'm about two hours from now I
26:56 - somehow got through all the examples in
26:59 - this chapter but if I'm looking back on
27:01 - how things generally go on the coda
27:03 - train I'll be glad if I sort of get 10
27:05 - somewhere with 20 minutes of usable
27:07 - content into that learning playlist so
27:09 - if you haven't watched before you know
27:12 - that what I'm really full all in on this
27:15 - a thing now at least in this time where
27:18 - the live streams are raw unedited
27:22 - processed video but essentially a
27:24 - process a session of me attempting to
27:27 - put together stuff that will go into the
27:28 - edited videos so you can really just
27:31 - turn this off and go do something else
27:34 - so many things in life that you could do
27:37 - I'm trying to think of what a suggestion
27:39 - could be cup of tea and read a book you
27:45 - could go for you couldn't do some
27:47 - exercise you could call a friend
27:50 - somebody who haven't been in touch with
27:52 - in a long time you feel like you really
27:54 - you know you missed them call them text
27:57 - them message them go visit them and then
28:00 - if none of those options seem good I
28:02 - guess you know you could be here with me
28:05 - and this sort of like nonsense because
28:07 - ultimately the point of this is to then
28:10 - take this material and put it into a
28:12 - format that students might watch in the
28:14 - context of some kind of curriculum
28:19 - 30 minutes of usable footage and an
28:22 - hour-and-a-half of rambling is truer
28:24 - words have never been spoken
28:30 - okay week one says spike watching I
28:33 - meant Speight watch I don't hope Foligno
28:35 - buddy has spite I don't know I was
28:37 - trying to say a different word and that
28:38 - sounded sort of very mean-spirited but
28:41 - spike watching procession processing
28:47 - alright alright everyone but I think I'm
28:49 - I think I can get going here let me I'll
28:52 - get myself organized oh let me also give
29:08 - a quick shout out to the sponsor of
29:10 - today's coding training live session
29:12 - brilliant org I looked at the homepage
29:15 - of brilliant that org right before I
29:18 - started and there's a puzzle challenge
29:21 - the daily challenges so great and so
29:24 - exactly aligned with a coding challenge
29:26 - I previously did so after I get there
29:27 - about you know half an hour 45 minutes
29:29 - of some tutorial stuff I'm gonna come
29:31 - back and look at that challenge but if
29:33 - you're interested in learning more about
29:34 - brilliant org
29:35 - which to me is one of my favorite
29:36 - websites to learn and discover and and
29:39 - expand my brain and find topics more
29:43 - information about topics that I'm
29:44 - interested in interactive lessons you
29:46 - can go to brilliant org slash coding
29:47 - trained sign up for free there's lots of
29:50 - stuff you can do for free on the website
29:51 - that I really enjoy I have two accounts
29:54 - of paid one in two free one because I'm
29:55 - always curious so actually I'm quite
29:56 - surprised with how much you can do with
29:57 - the free account but then if you want to
29:59 - unlock all the courses and you go
30:01 - through that link you'll get a 20%
30:02 - discount least the first 200 people who
30:04 - get that use that code will get a 20%
30:06 - discount okay thank you for brilliant
30:09 - for the sponsorship I'm so grateful and
30:12 - happy for this opportunity okay
30:15 - who Ashish writes why are you not coding
30:20 - oh boy oh boy I hate to tell you this
30:26 - I I got nothing I got no answer all
30:30 - right Speer says great work as ever I'm
30:33 - preparing a workshop I'm making music
30:35 - from neat algorithms tomorrow with your
30:38 - soothing voice in the background all
30:41 - right I got to know more about this
30:44 - curious
30:45 - by the way nobody took the time out
30:48 - getting to the tutorials
30:50 - Aashish I hear ya Ashish I'm getting
30:53 - there
30:53 - it's been a while there was like in the
30:57 - early days of the coding train there was
30:58 - like this swell of energy around the
31:01 - internet for people making weird like
31:04 - mashups of my voice and music and I just
31:07 - loved them and there's like this crazy
31:08 - one with that one there's the it's well
31:14 - known if I may say so myself
31:16 - this song there's the Perlin noise
31:19 - random dishonest there's a polar to
31:25 - Cartesian
31:27 - [Music]
31:32 - I love but no it's made one of these in
31:36 - quite some time
31:36 - am I just not inspiring the youth of
31:39 - today to go out and make their tunes are
31:43 - you all just too busy on tick tock now
31:46 - ah please ah
31:51 - you know maybe I could offer you like a
31:54 - little something something a little Cody
31:55 - train t-shirt I don't know I'll I missed
31:57 - those tunes and I need some new ones if
32:01 - you want to find all of them by the way
32:02 - it was Christian Petersen SoundCloud
32:06 - coding train where there's a whole like
32:09 - playlist of them yeah
32:10 - Daniel Schiffman coding train remixes
32:14 - and actually every time I go here I'm
32:17 - reminded that there are more that I
32:18 - don't know about so and I'm where's
32:24 - that's Ben Larson these days love this
32:26 - refactor song this one I'm done no
32:31 - that's it yeah yeah that's that one
32:33 - Bitcoin millionaire I'm a little afraid
32:36 - to press play on this one I know you
32:47 - can't really hear this sorry it's so
32:49 - when I play some of my laptop it doesn't
32:50 - go out through the audio yo lack C has
32:55 - made a bunch so the loading song
33:03 - floating floating it's the loading song
33:06 - so let's see if this works okay so
33:17 - scratch that there's a bunch here that I
33:19 - have yet that I gotta like download and
33:21 - get going here that I can play and are
33:24 - not right to the refactor song is my
33:25 - ringtone that's pretty amazing
33:30 - [Music]
33:46 - okay all right remember remember I was
33:50 - getting myself ready
33:52 - [Music]
33:59 - oh I remember the other thing I wanted
34:13 - to talk about six came back to me yeah
34:30 - this is where I left left oh great
34:33 - [Music]
34:42 - I remembered the other thing I wanted to
34:43 - mention which was processing Foundation
34:47 - fellowships so the three main components
34:51 - of my sort of work life these days are
34:54 - the coding train which is what you're
34:57 - watching right now ITP and ima which are
35:01 - to undergraduate graduate program at New
35:03 - York University Tisch School of the Arts
35:05 - where I teach and then also the
35:08 - processing foundation the processing
35:09 - foundation is a non-profit it maintains
35:14 - the coding platforms processing p5
35:16 - pressing PI and some other related tools
35:18 - we have a mission around empowering
35:24 - people of all interests and backgrounds
35:25 - to learn to program and a lot of other
35:27 - types of initiatives that go along with
35:29 - that mission and one of which is the
35:31 - fellowship program and the the 2020
35:36 - fellowships were recently announced so I
35:38 - don't think I went did I go through
35:39 - these already on Monday I might have but
35:45 - let me briefly just mention them because
35:47 - some of the projects might interest you
35:48 - and you might like to follow them more
35:49 - closely Aaron I think I have to get a
35:53 - weird deja vu that I was going through
35:55 - this actually live so somebody stop me
35:59 - if I was strange coming from someone
36:03 - with a name called offbeat complaining
36:05 - about how I go off-topic but it is true
36:09 - Aaron Davey is going to start a cosy
36:11 - coding which is a
36:13 - weekly twitch streams I think you're
36:14 - gonna be interested in that if you're
36:15 - watching this you're definitely
36:16 - interested in that I'm gonna be working
36:18 - with Aaron on this Abdullah is working
36:22 - on a teaching code and language to
36:27 - children education in southern Morocco
36:28 - Michael O'Donnell is working on p5.js
36:32 - activities for children eight to twelve
36:35 - George is working on OpenCV library with
36:39 - processing and kalila is working on
36:43 - accessibility and text and visual is
36:47 - related to the Americans with Disability
36:49 - Act in watt and seung-hyun they are
36:51 - working on p5.js in Korea and there's a
36:55 - lot more specifics I just gave you a
36:56 - really really brief overview but I'm
36:58 - check these projects out and if you're
37:00 - interested in participating or
37:01 - contributing or so porting this work
37:03 - there's a variety of ways you can do it
37:04 - one of which is to go right to the
37:06 - support the support tab and make a
37:10 - donation
37:10 - so I much prefer if you were to if you
37:13 - had funds you wanted to put into the
37:15 - world of coding and creative coding you
37:18 - know I would much prefer that you donate
37:20 - to the processing foundation then to the
37:22 - coding train directly no you're welcome
37:23 - to do both if that fits your fancy but
37:26 - processing foundation needs needs a lot
37:28 - of support okay and I am just quite fine
37:32 - thank you very much all right
37:41 - well people the world has arrived I've
37:43 - wasted enough time that there now
37:45 - quite a few people watching and I think
37:47 - I can get on to doing some coding so let
37:55 - me make sure I have all of the tricks of
37:58 - the trade here going here's my
38:01 - whiteboard I'm gonna write up here
38:06 - chapter two forces okay how's this
38:13 - looking everybody think I'm ready to get
38:16 - started
38:25 - caps lock is on okay
38:33 - okay I got it stuff we give the chat so
38:45 - I have to I have to screw my head back
38:49 - on here so let's actually let's make a
38:52 - little outline for myself just so I can
38:55 - kind of imagine what's going on
38:59 - so the first so the first if I'm
39:08 - thinking about the tutorials that will
39:09 - end up in this section first is what is
39:13 - a force and then the apply force
39:16 - function then we're say dealing with
39:25 - mass and gravity then I'm going to you
39:40 - know like two objects then I'm going to
39:47 - look at friction drag gravitational
39:56 - attraction honestly I think that might
40:00 - be the whole kit and caboodle here let's
40:04 - look through the chapter
40:18 - I'm actually rewritten this chapter
40:20 - quite a bit but okay
40:33 - [Music]
40:35 - then I think what I want to do is
40:38 - attraction I mean I sort of have a
40:40 - coding challenge about this so I might
40:42 - not need to and this wall force
40:53 - okay
40:56 - all right so this is my outline this is
41:00 - these so if if all goes according to
41:03 - plan which it never does there will be
41:05 - six videos in the chapter 2 section I
41:08 - will feel quite satisfied if I can get
41:12 - to here today so that's kind of my goal
41:18 - okay
41:25 - let me go back up to the top I think I
41:32 - can leave this here
41:36 - offbeat right sigh offbeat I really like
41:40 - appreciating offbeats chat maybe he
41:42 - needs to prepare a little bit beforehand
41:44 - and have you watched the guns mean
41:47 - before I guess not my sort of thing is
41:51 - not prepared beforehand I agree it would
41:54 - be nice and maybe would even make this
41:56 - better someday perhaps okay
42:12 - all right
42:14 - let me duplicate this
42:21 - two forces one
42:33 - I really have trouble getting started
42:35 - because but I'm going to just get
42:37 - started
42:47 - in here we go
42:55 - just just as a little like just to
42:59 - Center myself here ninety one thousand
43:13 - sixty nine seventy four thousand six
43:15 - hundred and three seventy eight thousand
43:18 - five thousand one hundred and fifty
43:42 - okay I gotta start having a really hard
43:47 - time the script would really help
43:52 - welcome to chapter 2 of the nature of
43:56 - code forces so I want to begin this
43:59 - chapter with a discussion of Newton's
44:01 - laws of motion that was something
44:10 - horrible
44:12 - oh I you know what I forgot to set my
44:17 - record to disc hang it's good thing I
44:19 - had a little like momentary brain freeze
44:21 - there this is recording and I'm gonna
44:24 - say multi court or go and we're just
44:28 - gonna hope that this works I will check
44:29 - it in a little bit so now I just need to
44:32 - get this up I need to get this up and
44:38 - this there we go
44:46 - hello and welcome to chapter two of the
44:49 - nature of code forces so I want to start
44:53 - with this discussion by talking about
44:55 - Newton's laws of motion so by no means
44:59 - is anything I'm going to do be a really
45:02 - accurate robust physics simulation but
45:05 - at a minimum I want to examine what the
45:07 - basic laws of motion are the basic
45:09 - principles behind how things move and
45:12 - just make sure that the code I'm writing
45:15 - you know fits with that for the most
45:17 - part so let's start with those laws of
45:20 - motion do I want to come over here yeah
45:26 - I will I'm going to come over here
45:45 - and hold on let's look here
45:56 - law number one
46:10 - this is how it is often referred to most
46:13 - informally an object at rest stays at
46:16 - rest however I think a more accurate way
46:21 - to own an object
46:35 - I bet you'll change gee
46:44 - I make this little bigger yeah let's do
46:49 - that
46:53 - don't anger the physics however a more
46:58 - accurate way statement of this might be
47:00 - an object at rest stays at rest in an
47:02 - object in motion stays in motion at a
47:04 - constant speed and direction unless
47:06 - acted upon by an unbalanced force so
47:10 - that's a bit of a mouthful of stuff but
47:12 - let's unpack that for a moment
47:22 - let's think about this in the context of
47:24 - our p5 canvas and the object being a
47:29 - circle that I'm drawing on that canvas
47:31 - if this circle is going to obey Newton's
47:35 - first law it shouldn't move but if it's
47:42 - not moved if it's not moving there's no
47:45 - reason for it to start moving or if it
47:48 - is moving at a particular velocity
47:50 - vector there's no reason for that
47:53 - velocity vector to ever change unless
47:55 - acted upon by a force the definition
48:03 - that I offered over here says unbalanced
48:06 - force because it is true that
48:17 - yeah
48:21 - the definition that I offered over here
48:24 - says unused the definition that I
48:29 - offered over here uses the term
48:30 - unbalanced force so something that's
48:32 - very important about this concept of
48:34 - staying at rest are staying at a
48:36 - constant velocity is that it's not just
48:39 - whether the force is there or not
48:41 - but whether the net force the sum of all
48:44 - the forces in the environments add up to
48:46 - something non zero for example with my
48:51 - marker here the there's a force of
48:54 - gravity for example with my marker here
49:03 - there's a force of gravity pulling it
49:05 - down presumably towards the center of
49:08 - the earth but there's also some other
49:09 - forces that I'm applying to it to keep
49:12 - it up better pushing it up and so you
49:14 - know if I try my best to balance the
49:17 - force balance the force then it won't
49:19 - move at all this is maybe a better
49:28 - diagram it's showing this circle this
49:31 - one
49:38 - this is maybe a better diagram it's
49:40 - showing this ball as referenced by this
49:43 - circle not moving because the force of
49:47 - gravity the tension force in the force
49:49 - of these breaths all balance out they're
49:52 - all equal they all set down to zero I
49:56 - know do I want to equilibrium this
50:12 - diagram is another excellent this
50:17 - diagram is another example of this so
50:19 - all of these forces balance themselves
50:21 - out and this object is at a state of
50:23 - equilibrium meaning it won't start
50:24 - moving or if it were it's velocity would
50:27 - remain constant
50:37 - and the reason I'm harping on this so
50:39 - much is I really want to make sure when
50:41 - I go to write the next bits of code that
50:43 - I'm going to write that the simulation
50:45 - obeys this law but in order for it to
50:48 - obey this law in the first place I have
50:50 - got to understand using the term force
50:52 - all over the place it's really important
50:54 - that I think I take a moment now to
50:55 - define what I mean by force
51:30 - a force is a vector that causes an
51:34 - object with mass to accelerate that is
51:37 - the technical definition that I am going
51:39 - to use for force here's the good news
51:43 - vector check we've got that I just did a
51:47 - whole section of videos about what is a
51:49 - vector so we can understand force as a
51:51 - vector here's more good news for you
51:53 - accelerate check we just did we I just
51:59 - did a video tutorial about how to apply
52:01 - acceleration in a p5 sketch so if we can
52:05 - create a vector and somehow have that
52:08 - vector affect the object's acceleration
52:11 - then we are implementing a force and if
52:14 - we can the way that we implement and if
52:17 - the way that we implement the force in
52:19 - our code obeys this law then we are
52:24 - golden yeah the moon oh boy all this
52:33 - stuff I forgot about the moon and
52:34 - magnetic field the Kreg writes watching
52:37 - live is too painful I agree just think
52:40 - about how painful it is to do this live
52:42 - you know I think of all the pain that
52:44 - I'm in then suffering I've actually got
52:46 - a big smile on my face I really quite
52:48 - enjoyed this all right and what do I
52:55 - want to say next
53:02 - all right
53:12 - let's now move on to Newton's second law
53:16 - Oh actually let me say something now one
53:31 - thing here mass is not something that I
53:33 - have discussed or used or implemented as
53:37 - a property of any of the things I've
53:39 - done so far so let's put a question mark
53:41 - there and return to that which leads me
53:43 - to Newton's second law F equals M times
53:53 - a or force equals mass times
53:58 - acceleration this is the fundamental law
54:04 - by which everything I do in just about
54:07 - every example throughout the entire
54:09 - nature of code will be fundamentally
54:11 - tied to we can also read I can also
54:20 - restate this law okay okay okay sorry I
54:23 - can also describe this law as a
54:25 - restatement of the definition of force
54:28 - force is a vector that causes an object
54:32 - with mass to accelerate
54:49 - let's look back
54:56 - oh yeah have a bunch of stuff in here
55:03 - let me just give me a second here
55:11 - I'm just gonna take this out for a
55:12 - second
55:23 - yeah there you go all right sorry okay
55:32 - isn't general theory of relatively the
55:35 - newest theory of gravity yes yes yes
55:37 - maybe I need to address that
55:52 - I think I'm okay is that I'm noting K
56:00 - week Mons comment in the discord
56:02 - supporter chat and a little bit
56:04 - concerned about the way that I wrote
56:06 - stuff on the whiteboard but I think I'm
56:09 - kind of okay alright so hold on where
56:17 - was I here
56:25 - we're turning back to the code for a
56:27 - second you can see here that we're
56:35 - turning back to the code for a moment I
56:36 - have these two lines of code velocity ad
56:40 - acceleration position ad velocity
57:11 - and in this example everything starts
57:14 - with acceleration I'm calculating an
57:17 - acceleration based on a vector that
57:19 - points from the object moving to the
57:23 - mouse itself so if everything starts
57:25 - with acceleration maybe I need to
57:28 - rethink the way that I'm describing this
57:30 - formula and a different way that I could
57:35 - consider it is acceleration equals force
57:44 - divided by mass the idea being that if I
57:53 - introduce some force like let's say
57:56 - there's a wind force with a magnitude
57:59 - and direction
58:00 - that I want to send put into this
58:02 - environment if I have that force I could
58:05 - take that force divided by this object's
58:07 - mass and that would become the object's
58:10 - acceleration which would then affect its
58:12 - velocity which would then affect its
58:14 - position and this is the technique the
58:17 - strategy by which everything I do is
58:19 - going to be built upon
58:28 - [Music]
58:38 - I'm really ready to start putting this
58:40 - in code but there's a few things I want
58:42 - to address before I get there
58:43 - number one is you might cute number one
58:56 - I'm really ready to start implementing
58:58 - this in code but before I do so there's
59:00 - that there's a few things I want to
59:01 - address one is you might hear the term
59:03 - when looking at how physics engines are
59:05 - built the term integration and this is
59:10 - actually one way of doing integration
59:14 - this specific way is actually is
59:15 - referred to as euler integration now why
59:19 - is it called integration I'm getting
59:20 - into the weeds here into the math aspect
59:23 - of this but it is important and I think
59:24 - this will help you as you move forward
59:26 - and do more of this stuff when you see
59:27 - the lingo popping up here and there in
59:33 - calculus there's the concept of a
59:35 - derivative and I can think you might you
59:38 - might typically see this as written as
59:39 - like DX over DT meaning the change in X
59:44 - over time the change in X with the
59:47 - change in time this is actually what
59:54 - velocity is doing velocity as is is DX
59:59 - DT if X is position velocity is the
60:01 - change in position over time
60:04 - acceleration is the change in velocity
60:06 - over time so there is a process so
60:11 - velocity can be thought of as the
60:12 - derivative of position and acceleration
60:15 - can be thought of as the derivative of
60:17 - velocity but I'm not going in that
60:20 - direction I'm not starting with position
60:22 - and then figuring out what's the
60:23 - velocity and then figure out what's the
60:25 - acceleration I'm going in the other way
60:27 - I'm starting with what's the
60:28 - acceleration and then changing the
60:30 - velocity and then changing and taking
60:31 - the velocity and changing the position
60:33 - so the other direction of doing the
60:35 - derivative is integration the integral
60:38 - so that's why this process is tied to
60:41 - calculus and the concept of integration
60:43 - the big difference here is that calculus
60:46 - being the study in a way of
60:48 - infinitesimally small time steps
60:52 - these time steps are quite large if I'm
60:55 - only doing 130 times per second 30 times
61:00 - per second I'm applying this algorithm 1
61:04 - 2 3 4 5 6
61:05 - I can't I can't count that fast
61:16 - this algorithm is just being applied 30
61:19 - times per second but time as I move my
61:22 - arm back and forth are you seeing this
61:24 - animation at 30 frames per second maybe
61:26 - because you're watching a video which is
61:27 - then recording me and playing it back at
61:29 - 30 frames per second but the actual
61:31 - physical time space that I'm in is very
61:34 - continuous there's no time step the time
61:37 - step is infinitesimally small and if I
61:39 - were doing an accurate calculation of a
61:41 - physics simulation I would need to take
61:43 - that under consideration instead I'm
61:46 - using a technique called Euler
61:47 - integration which allows me to have
61:49 - fixed time steps which are rather large
61:51 - and it's wildly inaccurate and I'll come
61:54 - maybe circle back to this as I look in
61:56 - future videos about other integration
61:58 - techniques there's things there's berlet
62:00 - physics and there's runge-kutta
62:02 - integration I probably didn't say that
62:05 - correctly and so maybe I could circle
62:06 - back when we look at other physics
62:08 - libraries that might have slightly more
62:09 - robust methodologies underneath the hood
62:12 - but the reason why I like this
62:14 - methodology is number one it works just
62:16 - fine like I just want my particles to
62:19 - spiral around the screen in pretty ways
62:20 - and two it's really fast and really easy
62:23 - to implement so it has its advantages in
62:26 - terms of the kinds of examples and
62:28 - demonstrations that I want to show you
62:38 - physicists are screaming Planck time I'm
62:43 - gonna need some like sanity checks on my
62:45 - explanations here in the supporter chat
62:48 - if I have like really gone way off and
62:52 - [Music]
63:02 - and Planck also also I know there's so
63:08 - much more to this you know before you
63:10 - start typing your comments in the chat
63:11 - about the theory of relativity and
63:14 - space-time continuum and Planck time and
63:16 - also plumb time I don't even know how to
63:18 - say it just just just realize that this
63:21 - is not my goal here it's not to go in
63:24 - depth into the physics of this and I'm
63:25 - glad to include in this video's
63:27 - description other resources that do but
63:28 - to take these ideas these core kind of
63:31 - like classic concepts and then work out
63:33 - a way to implement them in code
63:45 - exactly to be included
64:17 - all right I'm seeing a lot of typing
64:19 - going on
64:26 - I'll also mention there is a third law
64:28 - Newton's third law which is often stated
64:30 - as for every action there is an equal
64:32 - and opposite reaction which I'll say is
64:35 - quite misleading and I've written some
64:36 - text here in the nature code book about
64:38 - that I think a different way of stating
64:41 - that law is forces whoops that Mouse was
64:45 - not in the way momento okay no I can't
64:49 - talk about momentum I should also
64:54 - mention there is a third law Newton's
64:57 - third law which is often stated as for
64:59 - every action there is an equal and
65:01 - opposite reaction that's a little bit
65:03 - misleading and I've written some
65:04 - thoughts about that here another way of
65:06 - stating that law is forces always occur
65:08 - in pairs the two two forces are an equal
65:11 - strength but in opposite directions so
65:14 - to be honest this law is not so
65:16 - meaningful to me right now if you trust
65:18 - me it's kind of important but in terms
65:21 - of the simulation that I want to start
65:22 - with I am NOT going to bother to
65:25 - simulate every possible reaction and
65:27 - opposite interaction of every force
65:29 - within the system but this will come up
65:32 - again and I will look at this law when
65:34 - in a future video as part of this
65:36 - section I look at gravitational
65:38 - attraction and how two bodies both
65:41 - attract each other and those forces have
65:43 - an equal and opposite and the and those
65:49 - forces are an equal strength but in the
65:51 - opposite direction okay
65:59 - yeah that the changing the time step
66:02 - thing is important
66:08 - okay
66:19 - oh this is going pretty well
66:23 - I might say I mean yeah I sort of felt
66:27 - kind of cruddy this morning and I'm
66:30 - quite surprised with how I feel like
66:31 - this is going ah let me just check
66:34 - because it's going so well I'm gonna
66:36 - take a minute here to check my recording
66:38 - system which has been having lots of
66:40 - problems I mean ultimately these videos
66:42 - can always just be edited out of what
66:45 - you're actually seeing so what you're
66:47 - actually seeing is being recorded to
66:48 - disk and I've never had a problem with
66:49 - but behind the scenes I'm recording
66:52 - separately the different camp the the
66:54 - green-screen thing the screen capture oh
66:56 - I meant to let me actually do this as a
66:59 - backup give me a second here screen
67:04 - recording let me just do this as a
67:05 - backup no oh wait hold on
67:08 - options I want to make sure I have a mic
67:12 - yeah that's fine record so I'm also
67:16 - going to record it here because
67:18 - sometimes it's helpful when it when
67:20 - Matthew and I are putting this together
67:22 - to have all of the raw stuff so let me
67:24 - just check if you if you don't mind I'm
67:26 - gonna just check for a second talk
67:30 - amongst yourselves
67:35 - [Music]
67:56 - [Music]
68:41 - [Music]
69:00 - all right I realized what's the point of
69:02 - me checking it like if it's not working
69:04 - what am I gonna do but it's like it's
69:07 - hard for me to tell it looks like it
69:08 - might be a tiny bit glitchy but it's
69:10 - only wasn't like obviously really bad so
69:12 - I'll just sort of like hope that it's
69:14 - working I'm gonna hit record again now
69:17 - it's recording again actually I think
69:19 - it's better if I don't minimize that
69:21 - let's just maybe superstition I play
69:23 - here let me go back to here okay all
69:30 - right
69:46 - all right my phone stop we'll get your
69:49 - phone stop looking at your phone during
69:51 - a live stream laughs it should be
69:53 - obvious I'm talking to myself not you
69:55 - you're fine you can look at your phone
69:57 - you weren't told you look at your phone
69:58 - now if you're taking a class or
70:00 - attending somebody's presentation it's a
70:03 - little bit rude to look at your phone
70:04 - during it I mean I admit it I've done it
70:06 - I tried not to I try to give my full
70:08 - attention put a smile on my face and nod
70:11 - my head when I'm listening to somebody
70:13 - speak or present but you I can't tell
70:16 - look at your phone it's no problem
70:19 - all right so next up I mean this could
70:29 - in theory be its own I think I'm going
70:32 - to just man I never know when to break
70:36 - these videos up in theory that this
70:39 - could have been the end but I think I'll
70:41 - just keep going and add some code
70:43 - because it is a little it's just a few
70:45 - quick quick things that I want to do all
70:48 - right
70:50 - [Music]
71:06 - okay
71:12 - to start implementing Newton's second
71:14 - law in code I'm going to build off of
71:16 - the example I finished with in the
71:18 - previous video in the vectors section so
71:21 - there I have this single mover object it
71:23 - starts at location 200 200 yeah you
71:28 - don't want to say location position
71:29 - position position position position
71:33 - position position when I was a physics
71:39 - man Donald Deedle Deedle zidle okay
71:43 - position I knew some other lyrics that I
71:47 - could keep going with it to get started
71:51 - implementing Newton's second law in code
71:53 - I want to build off of the example that
71:55 - I finished with in the previous section
71:57 - on vectors so here I have this mover
71:59 - object it starts at a position 200 202
72:02 - functions are called update and show so
72:04 - if I run it it's the acceleration is
72:06 - being calculated as a vector pointing
72:08 - towards the mouse you could think of it
72:10 - as a force a gravitational attraction
72:13 - force pulling into the mouse now it's
72:15 - not really that I mean of course it's
72:16 - not really that it's just some like
72:17 - pixels on a screen but it's not even I'm
72:19 - not even using the formula for
72:21 - gravitational attraction so I'm going to
72:22 - circle back to that and and make some
72:24 - changes to this kind of idea later but
72:27 - right now what I want to do is change
72:30 - the way the internals of the mover
72:33 - object works because right now the
72:35 - acceleration is being calculated right
72:38 - here in update and I don't want to do
72:40 - that instead I want to write a function
72:43 - that's basically Newton's second law so
72:50 - I want to write a function I'm not gonna
72:52 - change its name in a moment that it
72:53 - implements this particularly law now the
72:56 - law again is force equals mass times
72:59 - acceleration
73:00 - but I've rewritten it to acceleration
73:02 - equals force divided by mass guess what
73:05 - let's just pretend for a moment that the
73:07 - world we live in the world that I'm
73:09 - programming in there's no concept of
73:11 - mass in fact everything in this entire
73:13 - universe has a mass of 1 if I were to do
73:18 - that and I'm rewriting the law as force
73:22 - equals whoops
73:30 - so in that case going back to this law
73:33 - of force equals mass weight which is 1 1
73:39 - times acceleration is really just same
73:41 - as force equals acceleration or
73:43 - acceleration equals force so these are
73:45 - the same concepts meaning I could just
73:53 - say this dot acceleration equals force
73:56 - there we go this is the simplified
73:59 - version of Newton's second law in code
74:02 - I'm gonna change the name to apply force
74:08 - the idea being that what I want to do is
74:11 - take a force that exists in the
74:14 - environment not something calculated
74:16 - from within the object that's going to
74:18 - be important later in some of the other
74:19 - videos I'll do but right now imagine a
74:21 - wind force external to the object or a
74:23 - gravitational pull maybe pulling it down
74:25 - along the y axis external to the object
74:33 - for example let gravity equal create
74:39 - vector zero comma one I'm making a
74:43 - vector that points down and then I want
74:45 - to say mover apply force gravity let's
74:51 - run this code remember this is the apply
74:55 - force it sets the force you could accept
74:58 - the acceleration remember this is the
75:03 - apply force function it sets the
75:04 - acceleration equal to the force and then
75:06 - that acceleration is added to velocity
75:07 - and that velocity is added to position
75:09 - oh oh that's not good
75:19 - oh I forgot that I'm programming in a
75:27 - class and in a class I don't use the
75:30 - keyword function to define an instance
75:32 - method of that class I just say apply
75:34 - force oh there we go look at that
75:43 - there's that force of gravity pulling it
75:46 - down
75:55 - I'm thinking I mean as you could
75:57 - probably tell
76:07 - now this sketch is a little bit sad
76:09 - because the ball falls and it never
76:11 - comes back so just for the purpose of
76:15 - demonstration I'm going to add an
76:18 - artificial constraint to this particular
76:20 - sketch where one of the things to do is
76:22 - I'm going to look at this bottom edge
76:23 - and if this circle reaches the bottom
76:27 - edge I'm going to take its velocity and
76:29 - reverse it now really if I were doing
76:31 - physics simulation I would think about
76:33 - this as an object with a different mass
76:35 - and what kind of forces are happening
76:36 - when it hits that object but I'm going
76:38 - to just bypass all of that with a quick
76:40 - shortcut I will come back and look at
76:41 - that a little later maybe but I'm gonna
76:43 - bypass that with a quick shortcut of
76:45 - just inverting the velocity
76:54 - and you're gonna do that by adding a
76:56 - function called edges to keep track of
76:58 - when the object hits the hits an edge
77:30 - so this is really your classic bouncing
77:32 - ball code and I have another video that
77:34 - kind of goes through this algorithm more
77:36 - specifically but what I'm looking for is
77:38 - anytime that Y position E is at the
77:41 - bottom of the canvas or below right
77:43 - because it might test thing if it's
77:44 - equal to height is not going to be any
77:46 - good if it's not precisely equal could
77:48 - easily move past then I'm going to shove
77:51 - it back up to height because if it goes
77:52 - too far and it turns around it could get
77:54 - stuck so I'm going to make sure even if
77:55 - it goes past height I set its position
77:57 - to height and then reverse its velocity
77:58 - and let's take a look oh that didn't
78:02 - work oh why didn't it work you know it's
78:04 - one thing to write a function it's
78:05 - another thing to call it so let's say
78:08 - mover edges and there we are so now this
78:14 - gravitational force is pulling the
78:16 - object down and it's bouncing up and
78:18 - down now why is it going off to the
78:19 - right a little bit it's going off to the
78:25 - right because I gave it an initial
78:27 - random velocity it's also interesting
78:29 - that it did get stuck weird why did that
78:33 - happen
78:45 - hmm
78:48 - I'll examine that as we go but I want to
78:51 - just change this now for simplicity to
78:53 - just giving it an initial velocity of
78:56 - zero and let's examine if Newton's first
79:03 - law is working Wow why did it nicely
79:11 - slow down and stop like that
79:19 - I really should I really shouldn't read
79:20 - the chat I don't know if this is
79:21 - referring to me like dry food stuck in
79:23 - my teeth
79:23 - somebody's talking about how I don't
79:24 - brush my teeth either talk about
79:25 - somebody else why do we look at the chat
79:27 - why why that's weird
79:32 - no I I was going to address this and I
79:35 - was gonna do something like this which
79:41 - would actually cause it to do what is
79:49 - there some kind of rounding thing going
79:51 - on well I think it's just shoving it
79:54 - back up it's got less time to go back up
79:59 - to the top to regain its full velocity
80:01 - that's what's going down there
80:05 - okay I just you know
80:23 - it's actually kind of like what I wanted
80:25 - to do well it's also just wildly
80:31 - inaccurate because of the Euler method
80:44 - I mean do I really care to address this
80:52 - all right we'll interestingly you notice
80:55 - how it's like slowing down and
80:56 - eventually getting a kind of losing its
80:58 - bounce and stopping in a weird sort of
81:00 - way that's kind of what I wanted to do
81:02 - that feels realistic but I can't see in
81:04 - the code why it's doing that because
81:06 - really I'm reversing its velocity
81:08 - there's nothing causing it it should go
81:09 - all the way back up to the top and then
81:10 - all the way back down there all the way
81:11 - back up to the top and this I think is
81:13 - because of this boiler integration I'm
81:15 - not looking at continuous time and
81:17 - there's a lot of inaccuracies here not
81:18 - to mention the fact that I'm violating
81:20 - all the principles of time and space
81:21 - by just resetting its position back to
81:23 - the height if it got below the height so
81:25 - it's losing some time where it might
81:27 - regain its velocity moving back up so
81:28 - there's all sorts of goofy stuff going
81:30 - on here and these are the kinds of
81:31 - things that as a programmer working with
81:34 - this in a creative context ultimately
81:36 - I'm going to be massaging and sort of
81:38 - like tweaking things to get it to feel
81:40 - right whatever the whatever the types of
81:42 - application that is that I'm wanting to
81:44 - create but right now I just want to test
81:49 - if Newton's second law is at play and
81:53 - I'm going to test that by doing this
82:07 - if only if the mouse is pressed apply
82:10 - this force of gravity
82:12 - meaning the net force is currently zero
82:16 - so the object is at rest now I am going
82:19 - to apply the force I mean like I forgot
82:31 - a really important detail I didn't
82:32 - forget this detail I knew I had to get
82:34 - to it but it actually just came up right
82:36 - now
82:37 - so why not get to it now weird right I'm
82:40 - like I'm applying gravity but when I let
82:43 - go I think the gravity should stop being
82:45 - applied because I'm no longer pressing
82:46 - the mouse but the gravity still seems to
82:49 - be there why is that well there's a flaw
82:52 - in the way that I program this and the
82:55 - flaw is that I'm setting the
82:57 - acceleration equal to force I'm not I'm
83:02 - sorry the flaw is that I'm setting the
83:04 - acceleration equal to force if the force
83:06 - goes away I don't set the acceleration
83:09 - back to zero but I should so one of the
83:11 - strange things about this Euler
83:13 - integration algorithm is that while
83:16 - velocity and position are accumulating
83:18 - over time acceleration is just a
83:22 - function a calculation based on at any
83:25 - given in time at any given moment in
83:27 - time what are the forces in the
83:29 - environment so at any given time we
83:32 - should start with an acceleration of
83:33 - zero and only there only is an
83:36 - acceleration if right
83:40 - there only is an acceleration if there
83:43 - is a nonzero force
83:51 - so there's a variety of ways I could
83:53 - implement this I could have like a reset
83:55 - function that resets the force to zero
84:02 - so there's a variety of ways that I
84:04 - could handle this I'm gonna just I think
84:08 - for simplicity just say this dot
84:10 - acceleration set zero zero so this is me
84:13 - just clearing the force out at the end
84:17 - of every animation cycle so now let's
84:21 - see if Newton's second law sorry first
84:24 - law first law is really at play and the
84:26 - second one set seriously can I do
84:34 - something where Oh interesting
84:40 - oops another bug cannot read property
84:46 - set of undefined as I haven't given
84:48 - acceleration of value until I've applied
84:50 - the force so this is just a flaw in how
84:53 - I've written the constructor I also need
84:55 - to say initialize a starting
84:59 - acceleration of zero and now here we go
85:03 - the object is staying at rest there's no
85:05 - force I click the mouse but I let go of
85:09 - the mouth and it just flew off let's
85:11 - make the gravity less strong I'm gonna
85:14 - change this to zero point one I'm
85:16 - holding down the mouse there's gravity I
85:18 - let go the gravity is gone the object
85:21 - keeps its constant velocity because
85:24 - there's no force acting on it
85:36 - let's try also now adding a second force
85:41 - into the environment so there's one
85:42 - force pointing straight down called
85:44 - gravity let's add another force called
85:47 - wind and point it to the right let's get
85:54 - rid of the if mouse is pressed I'm going
85:55 - to
86:01 - let's get rid of the if mouse is pressed
86:03 - I'll come back to that in a little bit
86:16 - so now I've got gravity pointing down
86:20 - and wind pointing to the right now of
86:23 - course I couldn't just made one force
86:25 - with this as the X component and this is
86:27 - the Y component but I'm demonstrating an
86:30 - idea that as you start to build these
86:32 - kinds of simulations there might be a
86:33 - variety of forces that are at play or
86:36 - not at play based on any number of
86:37 - factors and you can now separate those
86:39 - out into different vectors and
86:41 - individually apply them to your object
86:42 - let's run this sketch and see what
86:44 - happens wait a second now this this I
86:48 - anticipated this error why is gravity
86:51 - not being applied I only see wind
86:55 - alright let's change the order here
86:58 - let's put wind I don't know let's like
87:01 - move the code around a little bit like
87:02 - let's declare wind and gravity there but
87:04 - now apply them like this I don't know is
87:06 - that gonna do anything
87:07 - wait now only gravity is being applied
87:09 - but not the wind
87:11 - think about this go back into the mover
87:16 - what's wrong this that acceleration
87:20 - equals force so stepping through the
87:23 - code mover apply wind this nut
87:28 - acceleration equals wind mover apply
87:30 - gravity this dot acceleration equals
87:33 - gravity
87:34 - I just overrode over wrote the wind the
87:37 - wind is ignored because I take gravity
87:39 - and put it into acceleration as I was
87:44 - diagramming this and describing it I
87:46 - think a couple of times I used this term
87:48 - net force for the sum of all forces or
87:53 - this idea of force accumulation meaning
87:56 - the object's acceleration is a result of
88:00 - the sum of all the forces in its
88:02 - environment at any given time wind and
88:05 - gravity both act on the object and both
88:07 - get added into the acceleration so this
88:14 - apply force function shouldn't actually
88:16 - set acceleration equal to force but
88:19 - rather it should call ad this dot
88:24 - acceleration dot add force I can call
88:26 - apply force as many times as I want and
88:29 - all and
88:31 - I can call apply force as many times as
88:33 - I want and add up all the forces into
88:36 - the acceleration there we go now the
88:40 - visual result of that isn't super
88:42 - interesting let's make it a little more
88:44 - interesting by saying
89:00 - and I'll make the gravity a little
89:02 - stronger so now the wind will only be
89:07 - applied if I click the mouse but gravity
89:09 - will always be applied let's see if this
89:11 - works there's the ball bouncing and now
89:15 - I'm going to click the mouse and the
89:17 - wind oh let's add some more edges
90:01 - so now I've added a check for the right
90:03 - and left edges and make sure the X
90:05 - slides back onto the edge and the
90:07 - velocity is reversed and there's a lot
90:09 - there's probably a more elegant and
90:10 - efficient and shorter way to write this
90:12 - but I'm just putting it in there to get
90:13 - it to work let's see how the forces are
90:16 - going gravity and now I'm gonna click
90:18 - the mouse and wind is happening you can
90:20 - see that it's all the wind is like
90:21 - pushing it in that direction but let's
90:23 - let go of the mouse and now the wind is
90:25 - no longer there and it's bouncing back
90:27 - and forth the X velocity is constant now
90:32 - because there's no X component to the
90:35 - net force but I could add the wind back
90:37 - in and we can see now it's pushing it to
90:40 - the side I could also just sort of
90:42 - increase the relative strength of these
90:44 - forces just to see what that looks like
90:46 - and we can kind of see that here and we
90:48 - see I already have a pretty interesting
90:51 - and dynamic simulation going
90:59 - there is something important I wanted to
91:01 - say about this
91:09 - yeah
91:11 - I think
91:26 - I'm trying to think of what else I want
91:28 - to say about this oh yes thank you
91:34 - tio actually just mentioned in the chat
91:36 - was in my head to do that and then I
91:38 - forgot this is a small detail and not
91:46 - super important in terms of what I'm
91:48 - doing but it would be nice to actually
91:49 - have the edge of the circle sorry but it
91:55 - would be nice to actually have the de
91:57 - ball reverse its course when the edge of
92:00 - the circle hits the edge of the canvas
92:01 - rather than the center of the circle so
92:04 - in that sense I could add another
92:05 - variable for our to keep track of the
92:08 - object's radiance radius
92:23 - so I'm going to say this dot R equals 16
92:28 - and then draw the ellipsis this dot R
92:31 - times 2 and then use this dot R as a and
92:35 - then use this dot R to determine where
92:38 - the edges
92:48 - let me have it move a little slower so
92:49 - this is hopefully a little more visible
92:51 - ooo ooo I forgot something
92:57 - I've got to set it back to this dot R
93:06 - there we go so that's a little bit more
93:09 - realistic in terms of like where it's
93:11 - actually bouncing in terms of hitting
93:15 - the edge
93:24 - if there was that
93:27 - all right we go back to my outline
93:30 - because when we just understand what's
93:32 - coming next two objects dealing with
93:36 - mass and gravity great
93:51 - now this is something you can start
93:54 - working with I mean think about the way
93:56 - that I've created this forces now I've
94:05 - got something hopefully you can start
94:07 - working with think about the way that I
94:08 - created these forces
94:09 - I just hard-coded some numbers in there
94:12 - maybe the wind force is a result of some
94:14 - other kinds of algorithm maybe it's
94:16 - coming from a data source maybe it's
94:17 - using Perlin noise maybe the interaction
94:19 - isn't just whether I click the mouse or
94:20 - not maybe there's more than one object
94:22 - in the scene maybe you're using color
94:24 - and other types of designs to create a
94:26 - pattern but this is something that you
94:29 - can use as a foundation to build
94:31 - examples upon now I want to do more with
94:34 - this so one thing that I've completely
94:37 - ignored here is this concept of mass
94:42 - it's kind of like little jerky of the
94:46 - animation but I'm not yes there's a
94:54 - couple things I want there's a couple
94:56 - things that I want to add here which I'm
94:57 - going to do so in the next video or two
95:00 - one is the concept of mass is completely
95:03 - ignored so how do I deal with mass and
95:06 - how could I have this mover have
95:08 - different mass
95:29 - this is hopefully a foundation upon
95:31 - which you can build an example or a
95:33 - project no I kept up trouble at the end
95:36 - of these videos alright I got it I got
95:38 - it I got it so this is a good stopping
95:42 - point for this example I think there's a
95:43 - lot of twists you could do on this I
95:45 - mean first of all I've just hard coded
95:47 - numbers here for wind and gravity there
95:49 - might be other ways you think about
95:51 - calculating those for example you could
95:52 - actually pull from like a weather API
95:54 - and get the actual wind and have that
95:56 - effect this object or you could use
95:57 - Perlin noise maybe these vectors are
95:59 - like changing over time for some other
96:01 - reason or there's more than two forces
96:03 - so many ways you could go in this
96:05 - direction but this is a bit of a
96:06 - foundation upon which you could build a
96:08 - simple interactive simulation there are
96:11 - two a couple of different things that I
96:13 - want to do with this example which I'll
96:14 - do in two separate videos
96:15 - number one is there's no concept of mass
96:17 - here so what would it mean if I added to
96:19 - the mover object a mass property and how
96:22 - would I use that mass value and actually
96:25 - bring that back into the true the true
96:33 - Newton's second law force equals mass
96:35 - times acceleration so I want to bring
96:37 - back mass bring back mass then I also
96:42 - want to investigate other forces that I
96:44 - can look up the sort of like real world
96:46 - formula for and see if I could implement
96:49 - those and the first one I'll do is
96:50 - friction for example there's this thing
96:51 - happening where the ball comes to a
96:53 - resting point but then it just rolls
96:55 - back and forth could I simulate sort of
96:57 - friction of it against the edge and have
96:59 - it slow down and reach a stopping point
97:10 - so the next video I'll start with mass
97:13 - and then I'll look at friction and keep
97:14 - going from there finishing up with
97:16 - looking at the real formula for
97:18 - gravitational attraction and how I might
97:20 - implement that in code so maybe I'll see
97:22 - you maybe I won't and go on with your
97:23 - day may the force be with you I said it
97:25 - I said it I said it goodbye
97:31 - all right everyone that was good it's
97:36 - time for a short break I've got another
97:38 - hour to go before I take my short break
97:42 - I am going to thank the sponsor of the
97:45 - coding train of brilliant org I mean do
97:47 - you like the math and physics stuff let
97:49 - me tell you something if you like the
97:51 - math and physics stuff I think you're
97:53 - going to like brilliant dot-org so I'm
97:55 - brilliant org is a website it has many
97:59 - many many things on it it has it's a
98:03 - problem-solving website with a hands-on
98:05 - approach there's 60 interactive courses
98:07 - in math science and computer science it
98:10 - helps you achieve your goals and stem
98:12 - one small commitment to learning at a
98:13 - time because you could just do like a
98:15 - quick little five minutes every day ten
98:16 - minutes fifteen minutes you could spend
98:18 - all day on brilliant or you could just
98:19 - do it a little bit um I enjoy looking it
98:21 - on the subway so I spend a lot of time
98:23 - commuting and that's like a really
98:24 - helpful time for me to do a quick puzzle
98:28 - so one of the things about it is that
98:30 - that's great in relation to things I'm
98:32 - doing my channel is it has a computer
98:34 - science fundamentals course and a
98:36 - fundamental algorithms course so
98:37 - algorithms are the bedrock of any
98:39 - education computer science and studying
98:41 - them usually involves fighting through
98:43 - the specifics that details of syntax and
98:46 - so one of the wonderful things about the
98:48 - fundamentals of algorithms course and
98:51 - computer science courses on brilliant is
98:52 - it allows you to really think abstractly
98:53 - about the concepts and do a lot of
98:55 - different interactive puzzles I will say
98:59 - there's drag-and-drop program big with
99:01 - pseudocode and then all sorts of other
99:03 - fun stuff and it just it kind of like
99:05 - the video was there and it's looping and
99:08 - it's not at the point where I want it to
99:09 - be right now because after these puzzles
99:12 - when it gets to this spot woods new
99:14 - what's new about brilliant I don't how
99:16 - new it is but it's new to me is that
99:17 - they've actually built Python now into
99:19 - it into the browser so while I use
99:21 - JavaScript mostly in Java in my
99:23 - tutorials
99:24 - Python is another great language that
99:25 - you might be interested in learning and
99:26 - it's part of a lot of introduction to
99:28 - computer science curriculum and you can
99:30 - actually like type and do a lot of the
99:32 - lessons with interactive Python right in
99:34 - the browser so I'm gonna let that pop
99:36 - back up again and see they have a new
99:39 - chemistry course which is also pretty
99:41 - interesting and a lot of other
99:42 - interactive content I really like their
99:44 - math fundamentals course there's the
99:45 - Python stuff as well so now what I like
99:50 - to do before I take my break and I'm so
99:55 - excited about what I saw was there is
99:57 - I'd like to go to the brilliant website
99:58 - and look at what the days one of the
100:02 - daily challenges so this way I don't
100:04 - look at one ray only and the reason why
100:06 - I'm excited about this is raycasting
100:10 - coding train this really relates to my
100:15 - coding challenge 1:45 so I'm gonna
100:18 - quickly try to like solve this solve
100:22 - this puzzle I looked at it earlier I
100:24 - didn't actually click on the answer but
100:25 - I think it's gonna be an easy issue one
100:27 - to do we'll see and be interesting for
100:31 - those of you when I take a break if you
100:33 - want to sign up for brilliant and offer
100:34 - your own take maybe there's something in
100:35 - this code example that can actually link
100:38 - up with it ok so let's look and I'm ok
100:42 - so today's challenge a sealed box
100:44 - contains a blue light a green light and
100:47 - a red light on the wall let me get the
100:49 - chat back up here so I can see it so
100:52 - it's now not seeing it had a red light
100:58 - on what the other three walls are
100:59 - covered with perfect mirrors to see
101:01 - inside the box there was a narrow eye
101:03 - piece which makes an angle of 60 degrees
101:05 - with the wall which i think is what's
101:06 - right here this is the eye piece
101:08 - interesting how the arrow is pointing in
101:10 - that direction oh because we're seeing
101:12 - we're seeing the light come back in
101:13 - that's where you're looking so we've got
101:14 - to find where I'm thinking of the the
101:17 - sort of like the vector coming out and
101:20 - where it's going to go it's obviously
101:21 - not going to reflect like this right the
101:22 - angle of what do you call it incidents
101:24 - anyway this should like reflect ego
101:26 - equally so if this is 60 degrees this is
101:29 - 30 degrees so the reflection should come
101:32 - off 30 degrees so I think the idea is
101:35 - that I've got to solve
101:37 - or which color it's gonna end up on so I
101:39 - can use what they can use this
101:40 - interactive thing here and I need want
101:42 - it to be 30 degrees 30 degrees it should
101:45 - be that then I'm gonna go to the next
101:48 - angle right and then that should be 60
101:56 - right 60 and then the next angle would
102:01 - be 30 like that and then the next angle
102:06 - would once again I soon be 60 are no 30
102:09 - yeah it looks like yeah not 60 yeah
102:12 - that's also a 30 degree angle so looks
102:13 - like this so the answer should be green
102:14 - I don't did I do this right I think I
102:21 - did
102:27 - I'm gonna click on green I'm gonna click
102:30 - Submit anybody want to stop me stop me
102:34 - now
102:40 - all right I got it right so what I like
102:45 - about that as I could see other people's
102:47 - explanations and I could write my own I
102:52 - mean if I had the time wouldn't it be
102:55 - nice to just make a p5 sketch that
102:57 - re-implemented all this interactivity
102:58 - and this is the thing this is why I like
103:00 - because I got these ideas are like oh I
103:02 - would love to make a p5 sketch that
103:04 - basically does this interaction and I
103:06 - kind of have already because that's
103:08 - ultimately what's happening in this
103:10 - raycasting coding challenge it's just
103:13 - sending out lots and lots of rays of
103:15 - light and I'm not doing the reflection I
103:16 - just realized I'm not doing the
103:17 - reflection here so that would be an
103:19 - interesting thing to add to this the
103:20 - reflection I know the community
103:21 - contributions have reflections there you
103:25 - go so you know if you if you just seem
103:28 - so that gets of interest to you and you
103:30 - want to take a minute to sign up now I
103:32 - take a short break go to brilliant org
103:34 - slash coding drain you can sign up for
103:35 - free and put your own answer into that
103:37 - puzzle I mean I guess you probably put
103:38 - green in but you know maybe you put your
103:40 - own explanation in there if you make an
103:42 - explanation right in there share with me
103:43 - I'd love to find out about it and I will
103:46 - see you back in about five minutes oh
103:48 - and of course if you want to unlock all
103:50 - the courses on brilliant
103:52 - you can if you go through that link and
103:54 - order a premium subscription the first
103:56 - 200 people to do that will get 20% off
103:58 - and that unlocks the full all the
104:00 - content that's on brilliant work all
104:05 - right I've seen about five minutes
104:09 - [Music]
104:30 - [Music]
105:15 - [Music]
105:45 - [Music]
106:11 - [Applause]
106:13 - [Music]
107:30 - [Music]
108:06 - [Music]
108:25 - [Music]
109:22 - all right
109:23 - I am back thank you again - brilliant
109:26 - dot-org for the sponsorship of the
109:28 - coding train I hope you enjoyed this
109:30 - daily puzzle and I am now moving back on
109:34 - to where I left off Titan
109:39 - oh you surely so sorry Titan I can't
109:41 - it's hard for me to like keep track of
109:43 - things that fly by in the chat very
109:45 - quickly during the livestream but maybe
109:46 - somebody who is in the supporter group
109:48 - on discord can capture the link and
109:52 - share it with me later but discord is
109:56 - the best place to share stuff with me
109:58 - after the fact or social media you can
110:00 - tag me at shipment on Twitter is
110:02 - probably what I check the most okay so
110:08 - now let me close this stuff and let me
110:12 - do duplicate and I'm going to forces -
110:19 - and we're gonna add mass all right so
110:28 - I'm trying to think I have I'm gonna I'm
110:30 - gonna go until noon so that's about 45
110:33 - minutes two and a half hours I mean two
110:36 - hours is my like wish for a live stream
110:38 - I often get into three hours and Beyond
110:42 - because sometimes it's hard to stop but
110:45 - I typically I don't think that I as
110:48 - wacky as it sometimes gets if I get a
110:50 - little punchy I don't think I could
110:52 - produce a ton of valuable contractor two
110:54 - and a half hours so that's probably
110:56 - that's certainly where I'll stop today
110:59 - oh I forgot to get water I'm a dumb-dumb
111:02 - okay I might have to take another short
111:05 - break to get water this is finished
111:07 - alright so I'm trying to think so the
111:15 - next two things are mass and friction
111:22 - usually a pretty short while mass will
111:25 - be short okay
111:35 - I am going to erase some of this stuff
112:10 - okay
112:18 - okay
112:27 - I mean my goal is to get through mass
112:29 - and friction and then I'll be coming
112:34 - back to this stuff oh if you can't see
112:35 - me my goal is to get through mass and
112:37 - friction and then I'll be coming back to
112:39 - this stuff four five and six on the next
112:42 - livestream which will most likely be a
112:43 - week from today
112:52 - welcome back I should ask people in the
112:56 - previous one to try mass and friction
112:58 - but I've got to get water
113:01 - I'm really sorry everybody it's very
113:03 - very fast for me to get water
113:05 - it was completely mean what's the point
113:07 - of me taking a five-minute break if I
113:08 - don't actually go get the water during
113:10 - it I don't know I did some other stuff I
113:14 - checked my messages I went to the
113:17 - bathroom you know do that so let me just
113:21 - give me it's gonna be like I've said but
113:23 - around 60 seconds for me to get water
113:25 - okay
113:29 - [Music]
113:54 - [Music]
114:23 - I went got water he probably drank all
114:47 - of it so I need to go back again
114:49 - [Music]
114:58 - hopefully that will time you welcome
115:08 - back in the previous video on chapter I
115:12 - like how people are counting in the chat
115:23 - welcome back in the previous video in
115:26 - this section on forces I built this
115:28 - particular example where there are two
115:30 - forces at play a gravity force that's
115:33 - always being applied to the mover object
115:35 - and when I click the mouse a wind force
115:37 - is being applied to the mover object
115:38 - what I want to do in this video is look
115:42 - at how I might consider this mover
115:45 - object to have the property mass and how
115:48 - that might affect how the gravity and
115:50 - wind forces behave and in truth for me
115:53 - be able to demonstrate this effectively
115:55 - it's only meaningful if I have two
115:57 - objects with different masses because if
116:00 - I just have one scaling the mass is just
116:02 - something that we ultimately scale the
116:04 - strength the relative strength of those
116:06 - forces so let's quickly add a second
116:08 - object to this example
116:58 - now you might already be thinking for
117:00 - yourself yeah
117:01 - what did you just do there if you're
117:03 - gonna have more than one object should
117:05 - you use an array or isn't there a
117:06 - different way of doing this and yes yes
117:08 - yes and ultimately what I want to do
117:11 - with these examples is build arrays into
117:13 - them to collect many objects and sort of
117:16 - add and subtract them from the canvas
117:18 - itself but just for demonstration
117:19 - purposes I'm gonna leave these as two
117:22 - separate variables mover a and mover B
117:24 - I'm going to apply both forces to them
117:27 - and call update edges and show on both
117:29 - of them let's see if that works there we
117:32 - go let's apply the wind kind of
117:35 - interesting to see them now doing
117:37 - something there you could see how
117:38 - they're kind of in lockstep together
117:40 - maybe mass will change that
117:59 - sorry
118:08 - looking into the mover class itself
118:10 - where should I incorporate mass well I
118:13 - do have this variable this dot R which
118:16 - is being used for the size of the
118:20 - ellipse I could add another variable
118:25 - this dot mass let's just set it to one
118:35 - I'm thinking I know what I want to do
118:39 - here
118:51 - so both are bouncing and responding to
118:54 - the wind force now let's think about
118:56 - where I want to add mass so looking at
118:59 - the mover object there's position
119:01 - velocity acceleration and R and R is a
119:03 - property that is tied to the size that
119:06 - I'm drawing the ellipse let's just add
119:09 - mass as its own property for a moment
119:11 - this dot mass equals 1 oh so many things
119:20 - are gonna come up with this ah so good
119:21 - so good and remember the reason for
119:28 - adding mass in is Newton's second law
119:31 - force equals mass times acceleration or
119:34 - acceleration equals force divided looks
119:40 - I might actually not get to the friction
119:46 - because this is there's more to this
119:47 - than I thought
119:54 - the reason why I want to do this is
119:56 - remember Newton's second law ha force
119:58 - equals mass times acceleration or
120:00 - restated as acceleration equals force
120:04 - divided by mass and remember the way
120:07 - that I'm implementing this is all of the
120:10 - forces divided by mass are being
120:12 - accumulated into the object's
120:14 - acceleration so first and foremost I
120:17 - need to add this I need to incorporate
120:19 - this divided by mass into my apply force
120:22 - function
120:33 - right here I can then say force dot
120:36 - divided by this mass right before I add
120:42 - the force into the acceleration before I
120:45 - add the force into the acceleration
120:47 - divided by mass let's try running this
120:53 - okay good same result well the mass is
120:55 - just one so let's now add mass equals
120:59 - two which I should see the acceleration
121:01 - the force of rains the same but these
121:04 - the strength of the acceleration should
121:06 - be divided by two divide it in half
121:12 - wait what's going on
121:14 - ah something's weird going on why are
121:16 - they different they shouldn't be
121:17 - different they don't have different
121:18 - masses something crazy is going on think
121:22 - about this do you remember this video I
121:28 - made a little while ago where I talked
121:30 - about static functions that will do like
121:33 - a flash battle you should decide
121:35 - let's do like a weird flashback thing do
121:38 - you remember no a few videos back I
121:40 - spent all this time talking about static
121:43 - functions so we'll do some clip there
121:48 - there was a purpose to that there was a
121:51 - meaning to know there was a reason for
121:53 - that and that reason that moment is
121:55 - right now this is the case where I want
121:58 - to divide force by mass but I don't want
122:01 - to affect the actual force the wind is
122:06 - not being divided by half the wind is
122:08 - going into the object and the object is
122:11 - going to divide it by half to put it in
122:13 - the acceleration but the wind must
122:14 - remain the same the issue here is I am
122:17 - actually taking this force and dividing
122:20 - it by half so I want a new vector and
122:22 - I'll just call that F for simplicity and
122:25 - I want to say F is the result of
122:30 - dividing force by this dot mass I don't
122:34 - want the force to be affected I just
122:36 - want to divide it by mass before I put
122:38 - it in the acceleration and this isn't
122:40 - this is happening because right here
122:42 - this wind vector is being applied twice
122:45 - so wind gets
122:46 - / half-sari not divided by half ah am I
122:50 - saying / half again
122:53 - wind wind gets divided in half
123:00 - / - wind is divided by two and is
123:05 - smaller when it goes in to move or be
123:07 - it's the same wind in both of those but
123:09 - both of those objects should divide wind
123:12 - by its own mass before adding it to the
123:15 - acceleration so this static version oh
123:18 - my goodness of the divide function which
123:22 - is what I meant to put there this static
123:25 - version of the divide function I kind of
123:34 - just go back for a second
123:35 - cuz I've got I got it this all got
123:37 - convoluted
123:55 - except I don't remember what I was doing
124:00 - well it'll all get figured out later
124:05 - this is the very reason the moment right
124:08 - now where static methods are important
124:12 - and we're going to make oh I I whatever
124:14 - I did before it was so much better all
124:16 - right fine
124:17 - keep that I want to divide force by mass
124:30 - but not the actual force vector itself I
124:34 - just want to take that vector get a copy
124:37 - of it divide it by mass and then add
124:40 - that to the acceleration the reason is
124:42 - because out here right I'm taking this
124:44 - wind vector and applying it to a and B
124:47 - and I don't want a to mess with it
124:49 - because I it wind should stay the same
124:51 - when it applies to B but this function
124:53 - itself is actually taking that force
124:56 - vector and dividing it by two and
124:58 - changing its value so there's different
125:00 - ways I could do it I could make a copy
125:01 - of it and then divide it but I could
125:03 - also use the static version of divide in
125:06 - other words I could say and I need a new
125:09 - vector to store the result in I'll just
125:11 - call it f p5 vector dot divide this dot
125:15 - mass so instead of oh sorry force
125:20 - Commodus dot mass shoot p5 dot vector
125:26 - dot p5 cup p5 dot vector dot divide
125:33 - force by this dot mass so here I am
125:38 - saying take that force divided it by
125:41 - mass and store the result in a new
125:44 - vector F and then that vector F is what
125:47 - gets applied to the acceleration itself
125:54 - oh and of course I need to remove this
125:57 - line of code which I'm no longer want
125:59 - and there we go so now math is playing a
126:03 - role but so now math is playing a role
126:13 - but it's not actually adjusting the
126:16 - forces I don't know what else to say
126:20 - so now mass is playing a role but it's
126:23 - not affecting externally the environment
126:26 - and it's just a property of the object
126:27 - that's affecting the way the force
126:30 - changes the acceleration so let's take
126:33 - the logical next step and give each of
126:36 - these objects a different mass no I'm
126:40 - going to add a third property to the
126:42 - constructor call it m and then in when I
126:47 - create the objects let's give one a mass
126:49 - of two and one a mass of four and again
126:54 - I'm just picking numbers out of a hat
126:55 - totally arbitrary so remember the one on
126:58 - the right will have a higher mass than
127:00 - the one on the left so interesting this
127:04 - this is correct according to Newton's
127:08 - second law right if acceleration is
127:12 - force divided by mass if an object has a
127:15 - larger mass it will accelerate less and
127:18 - this makes sense think about the force
127:20 - that you have to apply to an object an
127:22 - object with a greater mass is going to
127:25 - be you're gonna need a much stronger
127:27 - force to get it to accelerate than
127:29 - something with a much smaller mass think
127:31 - of a bowling ball this is a ping-pong
127:32 - ball how much force do you need to apply
127:34 - to get those both to accelerate equally
127:39 - but something weird is going on here
127:42 - right because maybe what's the thing
127:46 - with is it dropping the dropping like
127:49 - the objects from a tower it's like
127:51 - Galileo yeah got Galileo's Leaning Tower
127:56 - of Pisa experiment
128:09 - something is really wrong here something
128:15 - is really wrong here might have heard of
128:18 - Galileo's famous Leaning Tower of Pisa
128:21 - experiment where in 15 the late 1500s
128:36 - gravity is not the force the force
128:38 - equals weight is weight equals yet
128:43 - that's a good point I'm kind of not
128:46 - using my terminology super correctly it
128:51 - should really be called weight yeah yeah
128:54 - no I know so I'm gonna I'm gonna get
128:57 - this this is where I'm going David but
128:59 - thank you for that because then I can
129:00 - change I'm actually gonna change this to
129:03 - call it weight so uh just bear with me
129:05 - for a second we'll see if I address that
129:20 - something is not right here
129:23 - you might recall or have heard about
129:27 - Galileo's famous Leaning Tower of Pisa
129:29 - experiment where you know that's the
129:32 - story goes the late 1600s Galileo was
129:35 - said to have dropped two spheres of
129:37 - different masses from the top of the
129:40 - Leaning Tower of Pisa and did they fall
129:42 - did one fall faster than the other
129:45 - no they fought they fell at the same
129:47 - rate independent of their mass and the
129:57 - reason for this is because the formula
130:01 - for gravitational attraction or the
130:03 - force the weight of an object weight is
130:06 - actually a force right yeah
130:17 - yeah
130:21 - the weight of an object weight being the
130:24 - force gravitational cavity I'm really
130:26 - using the wrong term here I really
130:28 - should be saying the gravitational
130:29 - acceleration the force is the weight and
130:32 - the weight of an object is scaled
130:34 - according to its mass the bigger the
130:37 - mass the bigger the force the smaller
130:41 - the mass the smaller the force so this
130:44 - would actually be accurate
130:54 - so for this to work more accurately I
130:57 - should really say let wait a
131:00 - P five dot vector multiply gravity times
131:08 - mover a dot mass and weight B is that
131:19 - same thing multiplying mover B's mass
131:22 - and then I'm going to apply weight a and
131:25 - weight B so this is a little bit I'm
131:27 - like sort of fudging things a little bit
131:29 - just to like take this gravitational
131:31 - vector and then multiply scale it
131:33 - according to mass before I apply it in
131:35 - worth then gets divided by mass let's
131:37 - just see if this works
131:39 - perfect they're both falling at the same
131:41 - rate now let's apply wind well the
131:45 - acceleration is different as it should
131:47 - be because wind the wind force the
131:50 - acceleration of the object according to
131:52 - wind is not scaled according to its well
131:59 - it's the way it should be
132:02 - the wind the acceleration due to wind is
132:07 - less when the mass is larger and that's
132:10 - the way it should be but visually this
132:12 - is very hard to kind of watch here
132:27 - and the chat is kind of saying a lot of
132:30 - interesting things this is the thing is
132:33 - it's kind of hard to see what's going on
132:35 - here because I'm drawing them at the
132:37 - same size so this is a nice moment for
132:39 - us to think about if I have two objects
132:47 - this is a nice moment for us to think
132:49 - about if I have two objects and I'm
132:51 - gonna just erase this here so let me
132:53 - erase all this if I have an object
133:02 - whoops if I have object a whose mass
133:15 - only times gonna do this if I have
133:19 - object any and the mass of object a is 2
133:24 - and then I have object B and the mass of
133:28 - object B is 4 well certainly if the
133:32 - density of these things is the same but
133:34 - what is the density I mean these are
133:36 - just pixels but let's let's consider the
133:37 - density to be the same then I might want
133:40 - to draw mass B object be larger than
133:43 - object a so one idea could be like oh
133:45 - the radius could be equal to the mass so
133:48 - here the radius is 2 and here the radius
133:51 - is 4 but that's not really the right
133:54 - scale because what should really map at
134:00 - least in my mind to the mass is the area
134:06 - so the area of this should be twice the
134:09 - area of this what's the formula for the
134:12 - area of a circle PI R squared so in that
134:18 - sense I think a proper mapping would be
134:22 - to take the square root of the mass
134:45 - in other words yeah
134:50 - right because and why is that well let's
134:56 - say then that the radius is to let's say
134:59 - the sorry the square root of the mass
135:02 - yeah let's say in this case the radius
135:06 - is square root of 2 and in this case the
135:09 - radius is square root of 4 well pi the
135:13 - surface the surface area the area PI R
135:16 - squared would be 2 pi and here PI R
135:19 - squared would be 4 pi whereas if I used
135:22 - 2 & 4 I would have 4 pi and 16 pi
135:26 - because I'd be squaring 2 I get for
135:28 - squaring 4 I get 16 so take that mass
135:31 - take the square root of it and apply
135:33 - that to the objects radius
135:46 - in other words this dot r equals the
135:50 - square root of this dot mass let's take
135:53 - a look at what this looks like okay well
135:57 - those things are so tiny there's so tiny
136:00 - so I'm gonna scale it arbitrarily
136:03 - multiply it by 10 and we can see this
136:07 - object has a higher mass now why are
136:10 - they kind of bouncing out of think now
136:12 - well it's because they're they're
136:13 - hitting the bottom at different times
136:15 - because their size is larger which is
136:17 - fine I kind of that's visually what I
136:19 - want and now you'll see the acceleration
136:21 - of the smaller one be much higher with
136:24 - the wind okay
136:32 - I think I got to the end here yes
136:48 - ultimately I'm making a ton of arbitrary
136:51 - decisions here but I'm trying to make
136:53 - these decisions based on the way that I
136:56 - understand these aspects of physics
136:58 - working and I'm sure you could think of
137:00 - some improvements to make on those
137:01 - things and those decisions and so I hope
137:03 - maybe now what you could do is what are
137:06 - some other ways you might think about
137:07 - visually representing objects of
137:10 - different math what if they have
137:11 - different densities or they're made of
137:13 - different material or how might you have
137:15 - other forces in the environment that
137:17 - play a role in how this world is
137:20 - visualized but the next step okay
137:32 - let me sort of say that again because
137:33 - now I know where I'm going with this
137:39 - ultimately I'm making so many arbitrary
137:42 - decisions here and there's many
137:44 - inaccuracies but I'm attempting to at
137:46 - least take the ideas from real-world
137:49 - physics and apply them to the best of my
137:51 - ability in a way that feels accurate so
137:54 - one of the things I might suggest to you
137:55 - are there things that you see that I've
137:57 - missed things that I've that are
137:59 - inaccuracies or don't feel right to you
138:01 - in terms of how if these were physical
138:03 - materials they would behave certainly
138:04 - they would collide with each other
138:06 - that's an interesting that's a whole
138:07 - other can of worms dope and then I'll
138:08 - come back to another time but what types
138:10 - of elements can you apply to this could
138:13 - you add an array now could you think
138:14 - about how you visually design these
138:17 - objects maybe you want to represent
138:18 - different masses in a different way
138:20 - through color or some other way of
138:21 - visually indicating that but for me the
138:24 - thing that I want to do now is I want to
138:26 - revisit essentially what I'm doing in
138:29 - these two lines of code where I say let
138:31 - wind equal create vector number comma
138:34 - number let gravity equal create vector
138:36 - number comma number is there not a
138:39 - better way or a different way that I
138:41 - might approach the calculation of a
138:43 - force vector in the environment and that
138:46 - ultimately is looking up a formula for
138:48 - how a force is calculated based on the
138:50 - properties and conditions on the
138:51 - environment and so the three forces I
138:53 - want to look at our friction drag which
138:57 - is kind of like friction but different
138:59 - now I'll explain that as well as
139:00 - gravitational attraction between bodies
139:03 - and space so I'm gonna look at those as
139:05 - kind of case studies in different
139:06 - formulas maybe you'll have some ideas of
139:09 - ways you can look at other forces or
139:11 - invent your own forces but I'm gonna
139:13 - return at least in the next video and
139:14 - just think about friction specifically
139:16 - when these two objects are in contact
139:19 - with the edge how might they act how am
139:22 - i how might they how might they
139:25 - realistically slow down as if there's a
139:28 - contact friction between those objects
139:30 - and the surface or the edge of the
139:32 - canvas itself
139:36 - all right I think - unfortunately mm-hmm
139:47 - well that's good I got through to
139:49 - additional video tutorials today I mean
139:53 - I'm gonna get to spring forces don't
139:55 - worry all is coming do I have time to do
140:02 - the friction I don't really I kind of
140:04 - want to like eat out an extra 10 minutes
140:06 - let's see part of me well you know I
140:09 - should spin the wheel for the Cabana and
140:16 - by the way Dierker all is asking bigger
140:19 - should go high after balance shouldn't
140:21 - it so there's lots of things that it
140:22 - should do that are inaccurate here for a
140:25 - variety of reasons one of which is just
140:27 - the euler integration technique of this
140:29 - or large time steps but yeah you know
140:33 - maybe there's some ways to revisit that
140:35 - to make it feel more accurate okay okay
140:52 - let me just at least look here
141:02 - let me look at the exam I don't think I
141:04 - think I'm going to stop for today and
141:07 - come back to friction in the next the
141:09 - next time I'm here but I just want to
141:14 - look at this example
141:17 - yeah so this is where I did it and only
141:21 - if it contacts edge it was curious to
141:24 - see how I did it in yeah that's
141:30 - interesting
141:38 - I mean to probably eat this out right
141:40 - now
142:01 - mmm
142:16 - all right everyone I'm going to be
142:22 - sensible and I'm going to stop here but
142:26 - this is nice cuz I do have 10 more
142:28 - minutes so I could answer some questions
142:30 - and possibly spin the wheel so I don't
142:34 - know if if at some point I if the wheel
142:37 - if there is still a particular let's go
142:41 - to the thing is I just want to do the
142:45 - marching squares as the next coding in
142:47 - the Cabana video so I want to spin the
142:49 - wheel and then if it doesn't land on
142:51 - marching squares I'm gonna complain I
142:53 - think it's fine for me to do marching
142:55 - squares let's go back to that to-do list
142:57 - and just sort of see what's there and I
143:02 - can I'll answer some questions I'm gonna
143:03 - keep an eye on the chat
143:18 - to do list oops sorry so these are these
143:25 - are topics that I could do in the Cabana
143:33 - Xavier is asking what is your roadmap
143:35 - concerning forces videos so pretty much
143:39 - if you follow along oh I know what I'm
143:41 - gonna show actually I'm gonna take ten
143:43 - minutes to show this because this will
143:44 - be this will be good
143:45 - and um Alka I know if you're still
143:49 - watching I meant to get in touch with
143:50 - you because about the build system for
143:54 - nature of code because I know you your
143:56 - your messages may be expressed interest
143:58 - in working on that which so be glad to
144:00 - be in touch about that but the road map
144:04 - is really following along this book
144:06 - table of contents I'm making some tweaks
144:11 - and changes to it based on rewrites of
144:13 - the book and ultimately this is what I
144:17 - want to look at but if what's coming
144:19 - after here is is then chapter three
144:22 - where I deals with oscillation and so
144:25 - there'll be a pendulum people a task in
144:27 - springs in ultimately once I get to
144:30 - Chapter three
144:31 - so this is where I'm going here Alka is
144:37 - still watching okay good so what I
144:40 - wanted to do what I want to do actually
144:41 - in the last 10 minutes is I want to show
144:44 - people how the how you can on your own
144:47 - get the latest version of the nature of
144:50 - code book that's in progress because I'm
144:52 - not really publishing it anywhere I'm
144:54 - sharing some PDFs in the discord with
144:57 - the supporter group but you could
144:59 - actually just build it yourself and so
145:02 - let's go into documents here let's make
145:06 - a directory called nature of code and
145:09 - what I'm gonna do requires you having
145:11 - node basically just node installed in
145:13 - your computer and so if I go to the book
145:18 - github repo this is the repository that
145:22 - has all of the content of the book so
145:24 - the book is written in HTML and I'm
145:27 - currently editing chapter 4
145:30 - and there's been I've gotten through a
145:32 - round of edits on these chapters and
145:34 - then there are a lot of issues that I
145:36 - still need to address that are being
145:38 - tracked here this is an open source
145:41 - project I welcome contributions to it I
145:43 - am I would like to hire some people to
145:45 - actually like have some accountability
145:47 - and a schedule for working on this so
145:49 - that's something that I'm figuring out
145:51 - but what I want to look at is if you
145:57 - want let's just see I definitely have
145:59 - this working on my sort of main computer
146:02 - but let's just see if there's so
146:03 - assuming you have node installed first
146:07 - thing I should do is clone this repo
146:08 - let's do that oh shoot
146:15 - I messed something up in terms of my
146:18 - permissions so I'm just gonna clone it
146:20 - using HTTP so I'm cloning this repo
146:27 - which is another fancy term for
146:28 - downloading the entire repo we can see
146:31 - there it is and by the way if you're
146:34 - wondering about this sudden move to like
146:37 - terminal I term and all this stuff if
146:39 - you go to the coding drain comm under
146:41 - more under workflow this is at least the
146:45 - latest set of videos that kind of have
146:47 - about the different tools I'm using like
146:49 - git and node and all this other stuff so
146:53 - you know these are it's to some extent a
146:55 - little bit out of date but they're
146:56 - there's a recent as I've guy should make
146:58 - a workflow 20/20 video at some point if
147:01 - I have time okay so now I'm gonna keep
147:04 - with following these instructions I'm
147:05 - gonna install the global the node module
147:11 - magic book globally see if this works as
147:14 - a
147:24 - oh Carlos spot behind said Carlos Luisa
147:27 - saying tried to compile it but there was
147:29 - some error with images to the PDF so
147:32 - let's see if I encounter that error so
147:34 - the the magic book module installed
147:37 - successfully by the way you don't notice
147:39 - that it installed Prince XML so Prince
147:43 - XML is the engine I've referenced it
147:45 - before it whoops
147:47 - it's the engine that does the actual PDF
147:49 - rendering and so yeah so it does the PDF
147:57 - rendering and there's some limitations
147:59 - and some caveats with that but let's
148:01 - just keep going
148:02 - so now now I need to also install all
148:07 - the other dependencies for the nature of
148:09 - codebook itself I'm gonna run npm
148:12 - install that should be good and then I
148:16 - want to I'm gonna look at the code as it
148:19 - stands because what's really important
148:21 - here is this magic book JSON file which
148:25 - includes a lot of the configuration for
148:28 - the build process so right now it's
148:30 - building the entire book because it's
148:32 - building everything that's in files but
148:34 - if I wanted to just build and I'm gonna
148:37 - do this right now actually if I wanted
148:39 - to it just for example just build the
148:41 - forces chapter I could do this so I'm
148:44 - gonna just hard code I'm gonna just
148:46 - change this to just the fort cuz it'll
148:47 - run much faster so I'm gonna do that and
148:49 - you see it's it's building it's doing a
148:51 - PDF build with some print settings the
148:55 - layout is in this file there's CSS and
148:57 - this file then the images are here so
149:00 - this if there's something wrong with
149:01 - this path that's what the the viewer
149:06 - might be referring to and fonts and then
149:10 - this is for the HTML build which
149:13 - probably needs the most amount of
149:14 - attention and work so now I'm going to
149:16 - say I think if I just say magic book
149:18 - build it should do it now ah so I'm
149:23 - having a problem why is this happening
149:26 - to me
149:26 - this is happening to me on a lot of
149:28 - different computers I'm using where it's
149:31 - not finding the global modules it
149:33 - probably has to do with my
149:38 - z a I'm using zsh as my shell and I have
149:44 - a feeling that the path is messed up
149:50 - yeah why I need to add just see
149:55 - something here where's the like other
150:05 - because it's gone but add a lot of fixed
150:13 - global node permissions this is the
150:16 - webpage that I always look at and yeah I
150:21 - need this I think I think this has to be
150:25 - in my Z Z SHRC file
150:40 - it should if that should happen
150:41 - automatically but for whatever reason it
150:45 - didn't so if I now say oops
150:57 - should be else a magic book Bilbao yep
151:00 - okay so that fix that to now it's
151:02 - building the book and it finished so now
151:04 - if I go and look at this in build there
151:09 - should be two folders build one which is
151:11 - the PDF and you can see there it is
151:13 - so now I have the new and the reason why
151:17 - this P is up here because I don't have
151:19 - the paid Prince license on this computer
151:23 - that I'm using but to actually create
151:26 - the book I do have a purchased version
151:28 - of Prince so which unlocks other
151:30 - possibilities and you can see the book
151:32 - here it is
151:33 - there's some issues probably maybe like
151:35 - some layout weirdness and this is one of
151:37 - the things that I need to work more on
151:39 - is the how the math notation is being
151:40 - rendered and other sort of things I mean
151:43 - I'm I would would love a designer to
151:45 - just like jump in and redesign this with
151:48 - CSS and all of that so but you can see
151:51 - now I've built the book let's go back to
151:53 - see if the full thing builds so if I go
151:56 - back to a magic book JSON and if I
152:07 - change this to start GML let's try
152:10 - building the whole thing again this is
152:13 - gonna take much longer
152:18 - HTML book finished and by the way so the
152:24 - HTML build the goal for this and it
152:27 - doesn't it's it's not there it's not
152:29 - anywhere close to there is that
152:31 - basically what it builds would then just
152:34 - drop in right here so I would run the
152:37 - build process and then push it to the
152:39 - website and the new version book but I
152:41 - don't have that working this is still
152:43 - the same ultimately essentially with
152:45 - some tiny little changes the same exact
152:48 - text from 2012 so so the ultimate goal
152:53 - for this project is for me to do all the
152:56 - rewrites as well as have the build
153:00 - process working to build the pdf version
153:02 - of the book with a nice clean fixed up
153:05 - design and the web version of the book
153:08 - which a nice clean fixed up design
153:10 - and that the web version of the book
153:12 - would ultimately also include and some
153:16 - of this site is in progress like these
153:18 - were these are these should be these I
153:20 - think a lot of this was actually done I
153:21 - have to go back and revisit everything
153:23 - but the newer web version would these
153:25 - would be embeds of the p5 web editor so
153:28 - you could get right to the p5 web editor
153:30 - from any of these examples running so if
153:33 - you have experience with web development
153:37 - node in particular HTML and CSS PDF
153:42 - renderings a lot of weird things book
153:45 - design all of the above any any
153:47 - combination of some of these skills and
153:49 - you have time in your schedule to
153:51 - allocate to this project you there right
153:55 - now I would say join the discord and
153:58 - maybe at some point I will post a Google
154:00 - Form there where people could if there's
154:01 - enough interest people could fill out
154:04 - their information there and I would have
154:06 - some kind of process to pick a couple
154:07 - people to work on this but this is also
154:09 - an open source project so anybody can
154:11 - jump in but you know if you're going to
154:13 - try to fix some of the stuff or work on
154:14 - it I would say please file a github
154:16 - issue just to let me know so there's not
154:17 - a lot of duplication of work and yeah so
154:25 - yeah Anagha saying what about that game
154:28 - that Mike Boyd built that you want to
154:30 - recreate there's so many things that I
154:32 - mentioned that I intend and want to do
154:34 - that I don't get to so that would be a
154:37 - great thing for me to revisit etc okay
154:49 - all right so I think I'm at the end now
154:56 - it's noon noon o'clock I'll take a
154:59 - couple more questions stay tuned there's
155:02 - so many edited videos that are like in
155:04 - process he's gonna be like a couple days
155:06 - where like a zillion new videos come out
155:08 - on the
155:08 - train but they're all being just out of
155:10 - these live streams if you're watching
155:11 - the live stream
155:12 - they won't manage you so much so I'm I'm
155:16 - here to answer a few questions if they
155:18 - pop up in the chat projectile motion
155:21 - that's a great idea that's one of the
155:23 - exercises in clothing drink it's an
155:26 - album watch example what's one of the
155:30 - exercises in putting trim so I think
155:34 - that'll be good maybe the challenges the
155:36 - exercises I could do is like coding
155:38 - challenge videos thank you all so much
155:49 - for joining me with this sort of stuff
155:52 - that I'm doing for giving me feedback
155:54 - for learning and creating stuff for
155:57 - teaching this stuff to other people all
155:59 - the things that the community does and I
156:01 - really appreciate and enjoy the next
156:04 - live stream will be a walk I was gonna
156:06 - say a week from today but zooming all
156:08 - goes according to plan stay tuned for a
156:10 - guest appearance on the coding garden
156:13 - just coding guarded next Wednesday
156:15 - warning time Easter time February 26
156:18 - thank you John for your nice feedback
156:21 - six o'clock in France no need to salute
156:26 - no just a friendly like is good enough
156:30 - for me also you can revisit vector field
156:33 - part of the nature of code it comes up
156:35 - in a thymus agent so the extent that I
156:38 - can get through all the material vector
156:40 - fields is on those
156:41 - [Music]
156:46 - thank you - brilliant be a sponsor of
156:49 - the coding train you can check out
156:51 - brilliant acquitting org slash coding
156:52 - train there's a fun daily challenge from
156:55 - today all that stuff ah coming soon new
157:02 - emojis coding train join the discord
157:05 - [Music]
157:07 - I've got people watching still join the
157:10 - discord
157:10 - somebody please Poe of choo-choo yeah
157:13 - choo-choo
157:16 - join the discord somebody who's watching
157:17 - could you please post the link to the
157:19 - discord in the chat in addition you know
157:22 - I I don't mean this as I I really from
157:27 - my heart I'm telling you about this in
157:30 - case this is something you would enjoy
157:31 - in your life it doesn't means it's
157:34 - everything what we find whether people
157:36 - buy this stuff or not but especially
157:39 - like the coded drink notebooks are
157:40 - really nice and I used one if you want
157:43 - in the in the recent coding in the
157:47 - Cabana video so there is this new store
157:48 - that I should mention I actually have
157:50 - not seen one of these pins in real life
157:52 - so if anybody has ordered or has one of
157:55 - these pins please take a photo of it if
157:58 - you're wearing it or wherever you have
157:59 - it and share that with me I would love
158:01 - to see that and I have a personal vested
158:04 - interest in these hoodies getting made
158:06 - but they'll only get made if there's
158:07 - enough pre-war earth so if that's
158:08 - something it might interest you I'm
158:10 - that's a little just a little like push
158:12 - for me to get your coding train hoodie
158:15 - so I'll mention that and the discord
158:18 - those are those are things that I wanted
158:21 - to mention as well
158:22 - [Music]
158:26 - s√©rgio ask a great question is discord
158:29 - only for patreon so this is new the
158:32 - discord is a public discord that anybody
158:34 - can join there is a code of conduct that
158:37 - I ask you to read and adhere to those
158:39 - policies and if you have questions about
158:42 - that you can reach out to me also SCI
158:45 - who is the coding trade community
158:46 - manager SCI at the coding training comm
158:49 - there are some channels for supporters
158:51 - of the coding train through youtube
158:53 - memberships and patreon stuff but the
158:57 - help channels and other channels are all
158:59 - publicly available to anyone so that's
159:01 - kind of like where I suggest asking your
159:05 - coding questions or or if they're
159:06 - processing or p5 specific you can also
159:08 - use the processing forum thanks
159:18 - everybody I will play you out with a
159:20 - bunch of the coding train remixes I'm
159:23 - gonna see if I can get one of the new
159:25 - ones going but I didn't know cuz I
159:27 - couldn't rewire some stuff and play from
159:29 - sound without directly so stay tuned for
159:31 - some of those other coding train remixes
159:33 - that I will post that I will play as the
159:35 - altro sequence plays thank you everybody
159:41 - know you are all wonderful good bye choo
159:47 - choo as always I always forget to dis
159:55 - stop
160:06 - [Music]
160:35 - [Music]
160:53 - I'm gonna do this this star this star
160:56 - the star this star song never forget
160:58 - this start somebody composed that song
161:01 - for me our work is not defined in line
161:05 - six little known as I always I always
161:07 - forget the ditch there is a second this
161:10 - dot song that was created by F looper
161:12 - who created the Perlin noise song so
161:14 - here I'd rarely played this but I'm
161:16 - gonna play right now if there's another
161:18 - version of the distant song different
161:19 - tune totally different I'll listen to
161:21 - this in a while stop this stop dis stop
161:23 - I'm gonna do this stuff this star this
161:25 - God decide that this starts on never
161:27 - forget to this star with somebody
161:28 - compose that song for me
161:30 - okay
161:36 - this
161:40 - [Music]
162:01 - firework firework is not defined okay
162:03 - line 6 as always I always forget to dis
162:06 - stop it stop it stop it sucks on the
162:08 - firework firework is not defined
162:10 - ok line 6 that's always I always forget
162:13 - the dis stop this stop this stop it's on
162:16 - loan for turbo fire firework firework is
162:18 - on the side so get the line stick that's
162:21 - always I always forget the dist on this
162:23 - stop this stop it sucks on the firework
162:25 - firework it doesn't
162:27 - line 6 that's always I always can get
162:29 - the disc top this stop this stop sawing
162:31 - firework is not defined line 6 yep as
162:35 - always I always forget the dip stop this
162:37 - stop this stop I'm gonna do this stuff
162:39 - this dot this dot decide that this dots
162:41 - on never forget - this - could somebody
162:43 - compose that song for me
162:45 - ok firework is not too fun
162:51 - [Music]
163:17 - and is there at the end so now I've got
164:36 - the load is anyway there was an error
164:38 - the song didn't load and then there's a
164:40 - callback that's like it's loading it's
164:42 - loading it's the loading song it's
164:44 - loading
164:45 - it's loading it's the loading song so
164:47 - let's see if this works now loading
164:51 - loading loading
165:00 - [Music]
165:13 - [Music]
165:44 - [Music]
165:52 - [Music]
166:09 - [Music]
166:12 - the loading song of course I could do
166:17 - sound synthesis myself
166:23 - [Music]
166:33 - [Music]
166:48 - [Music]
166:55 - [Music]
167:04 - hello I started I was at what I remember
168:27 - I don't have long or short term memory
168:29 - but some on these recurrent neural
168:31 - networks for text generation and then I
168:34 - my hope is that I will be coming back to
168:35 - this playlist again after this semester
168:38 - is over or towards the end of the
168:40 - semester if I'm finished
168:41 - so anytime stay in touch with people on
168:50 - Twitter and I wouldn't recommend to you
168:53 - will be seen as a guest on my channel
168:56 - Suraj as a channel about deep learning
168:58 - and also the new video that just came
169:00 - out from one of my favorite channels
169:02 - three blue one brown when what is a
169:06 - neural network learning or what so now
169:08 - the internet competition will learn a
169:11 - part to come out before ten point eight
169:18 - the answer is almost a definite yes
169:21 - so please write all of your complaints
169:23 - in the comments here I'm going to read
169:25 - them I'm going to sit with some sort of
169:27 - like meditative cucumber I'm asking on
169:31 - all of your feedback about why students
169:34 - right now I'm doing now a for a while
169:38 - and eventually these videos thank you
169:41 - for watching this short little video
169:46 - [Music]
169:59 - unicorns and rainbows and cupcakes what
170:02 - else is there
170:04 - yes kittens thank you very much kittens
170:07 - and rainbows and cupcakes notice that
170:09 - look what I get I'm really losing my
170:12 - mind
170:16 - [Music]
170:30 - [Music]
171:18 - [Music]
171:29 - I feel just sort of like a nice feeling
171:32 - of relaxation everything's gonna be okay
171:35 - today dream is not broken it has not
171:37 - frozen this isn't this is a wonderful
171:39 - thing okay we're gonna do I'm really
171:42 - getting to something I need my sound
171:48 - [Music]
171:59 - unicorns that was invalid syntax I
172:06 - forgot
172:10 - I will use the team asleep over and over
172:13 - again all sorts of text generation
172:16 - analysis things that I will use
172:19 - continuously over and over again to do
172:23 - [Music]
172:33 - the kids the kids again
172:37 - the kittens
172:42 - [Music]
172:51 - yes this dot neighbor counts

Cleaned transcript:

good mornings sound check one two three this is Dan on the train barreling down the tracks towards the station let me know in the chat the sound levels seem good good morning happy Thursday on the coding train Oh deep breath in with me your host Dan all aboard good morning I think today is gonna go just fine and dandy and really well because we will be beginning as usual with the ceremonial reading of the random numbers now today is February 20th 2020 that is a lot of twos and some zeros so let's find our way to page 20 15 16 17 19 20 in our book of random numbers and perhaps we will go down to the 20th row 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 I'm sorry did you think you were watching coding tutorials I deliver 15 5 10 15 16 17 18 19 20 all right and today's numbers on the coding train are five ten fifty hmm eightyeight thousand two hundred thirtyfive forty thousand four hundred and thirteen twenty two thousand forty one eighty two thousand six hundred thirty eight thirty one thousand nine hundred twenty three eighty seven thousand eight hundred and fifty one sixty thousand one hundred ninety ninety eight thousand four hundred and twenty eighty three thousand six hundred twentythree and twenty two thousand two hundred and fiftysix ah I can't hear anything says offbeat stuff I'm assuming that offbeat is a little offbeat today and that only offbeat is not able to hear what I'm saying I'm out of breath strangely hmm I'm very very very very tired this morning it's morning for me it's about 930 a.m. this is my second live stream of this week and if I'm being honest I really shouldn't be here today because I have this personal commitment personal goal to be working on the nature of code book 2nd edition in JavaScript and I have been working on edits of this book and I am all the way through chapter 4 I am now working on chapter 4 edits which I started over the summer and I've been I've had this file open on my computer since I last live streamed on Monday really since Tuesday afternoon and I have this file open and I keep trying to get to editing it and I haven't had any time so what would not be a better time than the two and a half hours I happen to have free this morning to livestream so I really really need to carve out the time to work on this and I know there's a crazy solution that some of you have suggested which is why don't you just work on it during the live stream which is an excellent idea and one that I hope that I will do at some point in the future but here I am I am committed to four livestreams per month and here is my second or third second I think in February and so I'm going to do and I'm in the videos that I'm making that go along with this book I'm Way behind chapter 4 and today I'll be doing videos about chapter 2 so all in all there's a lot to do and I am going to try to get to it and the reason why I brought the number 4 there is I think in light of this squeezing out of the time to do all the things I think I'm going to move to at least for February March and April three live streams for months with hopefully that carving out a little extra time to work on the nature of code book as well as my love my true love which is to code in the Cabana Oh Cabana there was a day a few weeks ago where I said it was snowing out and the freezing cold was fasting on my mustachio and I was looking at the hilbert curve patter and typing away and thinking before visualization satisfying and relaxing and then all the people of the internet came and they watched the video hoes they traveled in their minds to the Cabana and there they were making their own versions of the hilbert curve so many beautiful variations of artistic which I showed on last livestream and I would really like to do more this so here's my goal now I'm setting this out into the universe through my lips to your ears and your reading of the captions I am going to my goal is to do and I may I'm gonna hit it people don't make their goals that happens especially people of the internet making content three live streams this is my second for this month so the third for this month will be next week and one Cabana video so I suppose this one will count for February and I want to do the next one for March now the topic I actually want to do for the next Cabana video is marching squares oh and there's a wonderful video for you know there's basically if there's two YouTube channels that I think I refer to the most in terms of the content that I'm doing one is sebastien legs which is right up here Lag I I've gone over this so many times with Sebastian in my mind practice it and then when it comes down to the moment of saying Sebastian's name I forget but and then the three blue one Brown videos which I used a to form a basis of the hilbert curve video and I really want to do marching squares yeah Jason G is like it's a oh my sunny I look at the chat and people are discussing what the word Cabana is which I guess Cabana would be the authentic pronunciation for the Catalan Spanish word a small wooden house I mean it's really a shed a shed is a more accurate term but I I read that as romanticized because I wrote mantis sizing the garden shed into a Cabana um but David I know David is watching and David is the volunteer maintainer of the wheel the wheel is sort of this nebulous thing that I aspire to have as like a really functional aspect of the coding train the wheel abacus there's maybe I'm there's some kind of link here the wheel of the train itself where I like to sometimes not I can't pick what I'm gonna do so I spin a wheel and it tells me what to do with a bunch of options so I haven't really figured out the way to fully embrace the wheel of the coding train but I use it from time to time and maybe I don't know if it's ready or available I did spin it last time to pick the Hilbert curve it actually landed on Z something Z Z Z curve or Z function I don't remember which I've been doing some research decided that the Hilbert curve was an appropriate analog for that spot so I would like to spin the wheel again maybe from the next caba√±a topic today if I can sort of like get that up and sort of figure out what's gonna go on there but the topic oh okay before before I get into the topic I want to brace um I want to address a comment in the chat for briefs writes I stole your code about the Fourier series so I want us to try as a community to get away from the term I stole this code to do this now there is something which would be stealing is a thing and people can steal objects and all sorts of other types of things and perhaps there I think the words steal with code is probably appropriate in some contexts but I think we use it we I'm saying people that I hear me myself and other people that I hear talk about this over use it to really mean something much more positive which is I made something based on your code thank you for releasing your code in an opensource way with a proper license that allows me to make this creative project and then give you credit back so there is no stealing of the code the code from my examples it's exact intention is for you to reuse it and I actually released them those code examples are released under the MIT license which does not require you to credit back so you're under no obligation to and I you know me personally it's weird feels weird for me to say please credit me cuz I don't I don't feel like I want to say that or feel a neat need for that but in my own work in practice it feels very important to me that I credit any code that I'm using from somebody else and so I try to overdo it I'm sure I make mistakes and I'm sure I've written code that I that's sort of copied and pasted from somewhere and I didn't think think through carefully enough and I missed crediting it or whatever so I welcome feedback and people to help point out where I can do a better job at that but that's something that I feel like is very important okay Delta X Delta Y says factorial stole from multiplication which stole from addition and Simon is linking me to the todo list ah the todo list issue number one 904 coding train website issues one 904 1904 what's something had happened in 1904 great so I could use this as my spin the wheel yeah or at least I could pull something so many things to make video tutorials on one thing that I thank you for maintaining this by the way a gypsy dangerous and Simon Tiger this is so helpful and awesome I want to talk about what I'm doing today but there's something else just popped into my head here ah yes announcement remember I said three live streams per month this is my second next one would be next week actually because I mean you know never you know every commitment I make is this what loose commit things go wrong it's scheduling why is a lot for me you know I have some things family and this like fulltime salary page up here at NYU that do really require me to be in certain places at very precise times and you know for better or worse the YouTube stuff I can be a little fungible about if that's the right term but I want to mention that coding garden which you might know the coding garden from its raids the coding coding garden with CJ is a YouTube channel which is I like to mention it whenever possible because it is an excellent complement to the coding train in particular if you're looking for full stack web development a lot most of my stuff is a little goofy math algorithms visualizations are informal coding computer maybe some computer science topics which have a sort of formality to them but coding garden with CJ is you know if you're looking for some professional development and there's plenty more to it than that but it's a nice complement to the stuff that I'm doing and CJ and I are planning a collaboration next week next Wednesday I believe February 26 to look at how to program a discord bot so I think the idea is the CJ could correct me if I'm wrong no no I don't coding garden is watching okay great so here I'm talking about this now I think there's a way I'm thinking about it and CJ's in the chat so maybe CJ can offer his point of view the way that I'm thinking about this is I know nothing about discord BOTS other than you know my sort of like loose sense of what they are and how they work knowing how to program other kinds of BOTS and so I'm going to go on the Cody garden and CJ will maybe teach me a little bit about how to program a discord bot and we'll tinker around and make something and then that will lend itself to me we're turning back to the coding train to maybe do a set of tutorials about how to make a discord bot that's kind of my idea okay so that's on the horizon next week another thought appeared in my head while I was talking about this thought but I can't I can't pull it out of my brain right now like I suppose it'll come back to me all righty then so what is happening today let's see give me em give me a little moment to feel way to looking for something I am working on something that I don't want that I need to find before I alright in progress you might be aware that YouTube has a new feature called a learning playlist my ml5 Jess videos are in the learning playlist my intro to programming at p5 jasser and I love learning playlist the github getting github videos are learning playlist I am now attempting to put together please go to Pikachu Oh see if anybody could guess what this is okay I'm back to important things it's okay to love Pokemon at my age and especially if you have if I have children who also love the Pokemon and I'm just I'm bonding with them through the Pokemon but I'm not getting them their own phone they are not old enough for their own phone and their own app they do not need it what's the expression wait till eight not eight years old eighth grade I'm putting this out there all right now you don't need to be involved with this kind of decisionmaking parental decision making I do have Butchie I do I have younger viewers to the Kodi crane not right now cuz you're in school maybe you're like in Europe or something or India or some other part of the world where it's evening time and you're not in school you are watching I need some help this parenting thing is very hard okay way back back to this oh it's getting warm in here whew oh gotta catch them all yes ah oh yeah I am working on a new this what happened a lot faster if I didn't just like go off on all these tangents humanbased algorithm learning Arnab says I am in eighth grade so Arnab you are you know perhaps at the appropriate do you have your home phone like okay yes a bunch of people are saying they're in India I just picked Europe and India arbitrarily you know incidentally if you're curious I haven't checked this recently but the last time I checked us was the in terms of viewership and I don't mean the live viewership I just mean the overall viewership across everything u.s. is the first country listed Germany is off in a second which I find interesting and India has been quite consistently recently in the third spot so thank you India for that if you can thank a country all right Arnab says yes I have my own phone if we're up to me says zero I would ban smartphones from kids till they were 16 offbeats dust says I am in tenth grade flip phone what about a flip phone Argentina here I love by the way with everybody in the chat and Mr Mugabe says I'm in eighth grade too Mike says I didn't kill myself up till I was 30 guess what I had some of those really old early Nokia phones when would I have had those early 2000s I think okay my parents got me a cell phone at 13 and smart phone at 16 okay good see you so everybody has very reasonable parents out there I'm glad okay I gotta get back to this I'm on a ticking clock here everybody and Dane says I'm from Germany Samsung Z flip but the chat is really fun to read I have to like stop myself here and there because it becomes Peru and Brazil and hello okay not looking at the chat looking at you we are here together this I'm not looking over here because when I look over here at my monitor I also see the chat that's my monitor it's not my monitor here it's over there I look out of the corner of my eye well behind the scenes here I wanna see so this is the way it works oh it's flipped that's the camera and this is me and then over here is where I see like this monitor on the wall that has all the chat and all that sort of stuff okay oh it's still there sound board is here you can't see it okay 200 people watching and everyone is chatting yes I am in the discord chat David Schneider I am in live chat I see people saying in the live chat what age they got a cellphone hat there it's very useful for me these live streams where I can just ask questions and I get a like a wide survey of people in the fans of the coding trainer not that you're all fans some of you might be Speight watching it's that a thing okay this is my project for this these three months I would say I hope to have this completed by the end of May this is what it looks like in progress and all these videos are unlisted and still being finalized you know if you want to join as a member of the coding train you will get a little bit of early access to this stuff but ultimately it's gonna be out within a few days of you know sharing it with the members but it's helpful for me sometimes to share videos with a smaller group to make sure there isn't like a major issue so that's on the horizon one of the things that's interesting about this and let me see if I can get over here is that what I don't play don't play the video is that there are a lot of older videos that will be in this playlist so I'm trying some of these I'm remaking and putting like interstitials in and then others are just videos that I made from before where I am currently is I there are three vector P v vector tutorials ready to go and they need maybe maybe some like minor edits and then we'll get uploaded and released I've recorded more of them on Monday when I did my last livestream those are currently being edited thank you to much is in the editing car of the Train it's like next to the cafe car you know what my favorite car is the quiet car oh I love the quiet car and today today close this I am going to start going over the making new video tutorials to go along with chapter two forces so this is the topic for today I don't expect to get too far with this I mean I would be awesome if somehow like by the end of today which the by the end I mean around noon so I'm about two hours from now I somehow got through all the examples in this chapter but if I'm looking back on how things generally go on the coda train I'll be glad if I sort of get 10 somewhere with 20 minutes of usable content into that learning playlist so if you haven't watched before you know that what I'm really full all in on this a thing now at least in this time where the live streams are raw unedited processed video but essentially a process a session of me attempting to put together stuff that will go into the edited videos so you can really just turn this off and go do something else so many things in life that you could do I'm trying to think of what a suggestion could be cup of tea and read a book you could go for you couldn't do some exercise you could call a friend somebody who haven't been in touch with in a long time you feel like you really you know you missed them call them text them message them go visit them and then if none of those options seem good I guess you know you could be here with me and this sort of like nonsense because ultimately the point of this is to then take this material and put it into a format that students might watch in the context of some kind of curriculum 30 minutes of usable footage and an hourandahalf of rambling is truer words have never been spoken okay week one says spike watching I meant Speight watch I don't hope Foligno buddy has spite I don't know I was trying to say a different word and that sounded sort of very meanspirited but spike watching procession processing alright alright everyone but I think I'm I think I can get going here let me I'll get myself organized oh let me also give a quick shout out to the sponsor of today's coding training live session brilliant org I looked at the homepage of brilliant that org right before I started and there's a puzzle challenge the daily challenges so great and so exactly aligned with a coding challenge I previously did so after I get there about you know half an hour 45 minutes of some tutorial stuff I'm gonna come back and look at that challenge but if you're interested in learning more about brilliant org which to me is one of my favorite websites to learn and discover and and expand my brain and find topics more information about topics that I'm interested in interactive lessons you can go to brilliant org slash coding trained sign up for free there's lots of stuff you can do for free on the website that I really enjoy I have two accounts of paid one in two free one because I'm always curious so actually I'm quite surprised with how much you can do with the free account but then if you want to unlock all the courses and you go through that link you'll get a 20% discount least the first 200 people who get that use that code will get a 20% discount okay thank you for brilliant for the sponsorship I'm so grateful and happy for this opportunity okay who Ashish writes why are you not coding oh boy oh boy I hate to tell you this I I got nothing I got no answer all right Speer says great work as ever I'm preparing a workshop I'm making music from neat algorithms tomorrow with your soothing voice in the background all right I got to know more about this curious by the way nobody took the time out getting to the tutorials Aashish I hear ya Ashish I'm getting there it's been a while there was like in the early days of the coding train there was like this swell of energy around the internet for people making weird like mashups of my voice and music and I just loved them and there's like this crazy one with that one there's the it's well known if I may say so myself this song there's the Perlin noise random dishonest there's a polar to Cartesian I love but no it's made one of these in quite some time am I just not inspiring the youth of today to go out and make their tunes are you all just too busy on tick tock now ah please ah you know maybe I could offer you like a little something something a little Cody train tshirt I don't know I'll I missed those tunes and I need some new ones if you want to find all of them by the way it was Christian Petersen SoundCloud coding train where there's a whole like playlist of them yeah Daniel Schiffman coding train remixes and actually every time I go here I'm reminded that there are more that I don't know about so and I'm where's that's Ben Larson these days love this refactor song this one I'm done no that's it yeah yeah that's that one Bitcoin millionaire I'm a little afraid to press play on this one I know you can't really hear this sorry it's so when I play some of my laptop it doesn't go out through the audio yo lack C has made a bunch so the loading song floating floating it's the loading song so let's see if this works okay so scratch that there's a bunch here that I have yet that I gotta like download and get going here that I can play and are not right to the refactor song is my ringtone that's pretty amazing okay all right remember remember I was getting myself ready oh I remember the other thing I wanted to talk about six came back to me yeah this is where I left left oh great I remembered the other thing I wanted to mention which was processing Foundation fellowships so the three main components of my sort of work life these days are the coding train which is what you're watching right now ITP and ima which are to undergraduate graduate program at New York University Tisch School of the Arts where I teach and then also the processing foundation the processing foundation is a nonprofit it maintains the coding platforms processing p5 pressing PI and some other related tools we have a mission around empowering people of all interests and backgrounds to learn to program and a lot of other types of initiatives that go along with that mission and one of which is the fellowship program and the the 2020 fellowships were recently announced so I don't think I went did I go through these already on Monday I might have but let me briefly just mention them because some of the projects might interest you and you might like to follow them more closely Aaron I think I have to get a weird deja vu that I was going through this actually live so somebody stop me if I was strange coming from someone with a name called offbeat complaining about how I go offtopic but it is true Aaron Davey is going to start a cosy coding which is a weekly twitch streams I think you're gonna be interested in that if you're watching this you're definitely interested in that I'm gonna be working with Aaron on this Abdullah is working on a teaching code and language to children education in southern Morocco Michael O'Donnell is working on p5.js activities for children eight to twelve George is working on OpenCV library with processing and kalila is working on accessibility and text and visual is related to the Americans with Disability Act in watt and seunghyun they are working on p5.js in Korea and there's a lot more specifics I just gave you a really really brief overview but I'm check these projects out and if you're interested in participating or contributing or so porting this work there's a variety of ways you can do it one of which is to go right to the support the support tab and make a donation so I much prefer if you were to if you had funds you wanted to put into the world of coding and creative coding you know I would much prefer that you donate to the processing foundation then to the coding train directly no you're welcome to do both if that fits your fancy but processing foundation needs needs a lot of support okay and I am just quite fine thank you very much all right well people the world has arrived I've wasted enough time that there now quite a few people watching and I think I can get on to doing some coding so let me make sure I have all of the tricks of the trade here going here's my whiteboard I'm gonna write up here chapter two forces okay how's this looking everybody think I'm ready to get started caps lock is on okay okay I got it stuff we give the chat so I have to I have to screw my head back on here so let's actually let's make a little outline for myself just so I can kind of imagine what's going on so the first so the first if I'm thinking about the tutorials that will end up in this section first is what is a force and then the apply force function then we're say dealing with mass and gravity then I'm going to you know like two objects then I'm going to look at friction drag gravitational attraction honestly I think that might be the whole kit and caboodle here let's look through the chapter I'm actually rewritten this chapter quite a bit but okay then I think what I want to do is attraction I mean I sort of have a coding challenge about this so I might not need to and this wall force okay all right so this is my outline this is these so if if all goes according to plan which it never does there will be six videos in the chapter 2 section I will feel quite satisfied if I can get to here today so that's kind of my goal okay let me go back up to the top I think I can leave this here offbeat right sigh offbeat I really like appreciating offbeats chat maybe he needs to prepare a little bit beforehand and have you watched the guns mean before I guess not my sort of thing is not prepared beforehand I agree it would be nice and maybe would even make this better someday perhaps okay all right let me duplicate this two forces one I really have trouble getting started because but I'm going to just get started in here we go just just as a little like just to Center myself here ninety one thousand sixty nine seventy four thousand six hundred and three seventy eight thousand five thousand one hundred and fifty okay I gotta start having a really hard time the script would really help welcome to chapter 2 of the nature of code forces so I want to begin this chapter with a discussion of Newton's laws of motion that was something horrible oh I you know what I forgot to set my record to disc hang it's good thing I had a little like momentary brain freeze there this is recording and I'm gonna say multi court or go and we're just gonna hope that this works I will check it in a little bit so now I just need to get this up I need to get this up and this there we go hello and welcome to chapter two of the nature of code forces so I want to start with this discussion by talking about Newton's laws of motion so by no means is anything I'm going to do be a really accurate robust physics simulation but at a minimum I want to examine what the basic laws of motion are the basic principles behind how things move and just make sure that the code I'm writing you know fits with that for the most part so let's start with those laws of motion do I want to come over here yeah I will I'm going to come over here and hold on let's look here law number one this is how it is often referred to most informally an object at rest stays at rest however I think a more accurate way to own an object I bet you'll change gee I make this little bigger yeah let's do that don't anger the physics however a more accurate way statement of this might be an object at rest stays at rest in an object in motion stays in motion at a constant speed and direction unless acted upon by an unbalanced force so that's a bit of a mouthful of stuff but let's unpack that for a moment let's think about this in the context of our p5 canvas and the object being a circle that I'm drawing on that canvas if this circle is going to obey Newton's first law it shouldn't move but if it's not moved if it's not moving there's no reason for it to start moving or if it is moving at a particular velocity vector there's no reason for that velocity vector to ever change unless acted upon by a force the definition that I offered over here says unbalanced force because it is true that yeah the definition that I offered over here says unused the definition that I offered over here uses the term unbalanced force so something that's very important about this concept of staying at rest are staying at a constant velocity is that it's not just whether the force is there or not but whether the net force the sum of all the forces in the environments add up to something non zero for example with my marker here the there's a force of gravity for example with my marker here there's a force of gravity pulling it down presumably towards the center of the earth but there's also some other forces that I'm applying to it to keep it up better pushing it up and so you know if I try my best to balance the force balance the force then it won't move at all this is maybe a better diagram it's showing this circle this one this is maybe a better diagram it's showing this ball as referenced by this circle not moving because the force of gravity the tension force in the force of these breaths all balance out they're all equal they all set down to zero I know do I want to equilibrium this diagram is another excellent this diagram is another example of this so all of these forces balance themselves out and this object is at a state of equilibrium meaning it won't start moving or if it were it's velocity would remain constant and the reason I'm harping on this so much is I really want to make sure when I go to write the next bits of code that I'm going to write that the simulation obeys this law but in order for it to obey this law in the first place I have got to understand using the term force all over the place it's really important that I think I take a moment now to define what I mean by force a force is a vector that causes an object with mass to accelerate that is the technical definition that I am going to use for force here's the good news vector check we've got that I just did a whole section of videos about what is a vector so we can understand force as a vector here's more good news for you accelerate check we just did we I just did a video tutorial about how to apply acceleration in a p5 sketch so if we can create a vector and somehow have that vector affect the object's acceleration then we are implementing a force and if we can the way that we implement and if the way that we implement the force in our code obeys this law then we are golden yeah the moon oh boy all this stuff I forgot about the moon and magnetic field the Kreg writes watching live is too painful I agree just think about how painful it is to do this live you know I think of all the pain that I'm in then suffering I've actually got a big smile on my face I really quite enjoyed this all right and what do I want to say next all right let's now move on to Newton's second law Oh actually let me say something now one thing here mass is not something that I have discussed or used or implemented as a property of any of the things I've done so far so let's put a question mark there and return to that which leads me to Newton's second law F equals M times a or force equals mass times acceleration this is the fundamental law by which everything I do in just about every example throughout the entire nature of code will be fundamentally tied to we can also read I can also restate this law okay okay okay sorry I can also describe this law as a restatement of the definition of force force is a vector that causes an object with mass to accelerate let's look back oh yeah have a bunch of stuff in here let me just give me a second here I'm just gonna take this out for a second yeah there you go all right sorry okay isn't general theory of relatively the newest theory of gravity yes yes yes maybe I need to address that I think I'm okay is that I'm noting K week Mons comment in the discord supporter chat and a little bit concerned about the way that I wrote stuff on the whiteboard but I think I'm kind of okay alright so hold on where was I here we're turning back to the code for a second you can see here that we're turning back to the code for a moment I have these two lines of code velocity ad acceleration position ad velocity and in this example everything starts with acceleration I'm calculating an acceleration based on a vector that points from the object moving to the mouse itself so if everything starts with acceleration maybe I need to rethink the way that I'm describing this formula and a different way that I could consider it is acceleration equals force divided by mass the idea being that if I introduce some force like let's say there's a wind force with a magnitude and direction that I want to send put into this environment if I have that force I could take that force divided by this object's mass and that would become the object's acceleration which would then affect its velocity which would then affect its position and this is the technique the strategy by which everything I do is going to be built upon I'm really ready to start putting this in code but there's a few things I want to address before I get there number one is you might cute number one I'm really ready to start implementing this in code but before I do so there's that there's a few things I want to address one is you might hear the term when looking at how physics engines are built the term integration and this is actually one way of doing integration this specific way is actually is referred to as euler integration now why is it called integration I'm getting into the weeds here into the math aspect of this but it is important and I think this will help you as you move forward and do more of this stuff when you see the lingo popping up here and there in calculus there's the concept of a derivative and I can think you might you might typically see this as written as like DX over DT meaning the change in X over time the change in X with the change in time this is actually what velocity is doing velocity as is is DX DT if X is position velocity is the change in position over time acceleration is the change in velocity over time so there is a process so velocity can be thought of as the derivative of position and acceleration can be thought of as the derivative of velocity but I'm not going in that direction I'm not starting with position and then figuring out what's the velocity and then figure out what's the acceleration I'm going in the other way I'm starting with what's the acceleration and then changing the velocity and then changing and taking the velocity and changing the position so the other direction of doing the derivative is integration the integral so that's why this process is tied to calculus and the concept of integration the big difference here is that calculus being the study in a way of infinitesimally small time steps these time steps are quite large if I'm only doing 130 times per second 30 times per second I'm applying this algorithm 1 2 3 4 5 6 I can't I can't count that fast this algorithm is just being applied 30 times per second but time as I move my arm back and forth are you seeing this animation at 30 frames per second maybe because you're watching a video which is then recording me and playing it back at 30 frames per second but the actual physical time space that I'm in is very continuous there's no time step the time step is infinitesimally small and if I were doing an accurate calculation of a physics simulation I would need to take that under consideration instead I'm using a technique called Euler integration which allows me to have fixed time steps which are rather large and it's wildly inaccurate and I'll come maybe circle back to this as I look in future videos about other integration techniques there's things there's berlet physics and there's rungekutta integration I probably didn't say that correctly and so maybe I could circle back when we look at other physics libraries that might have slightly more robust methodologies underneath the hood but the reason why I like this methodology is number one it works just fine like I just want my particles to spiral around the screen in pretty ways and two it's really fast and really easy to implement so it has its advantages in terms of the kinds of examples and demonstrations that I want to show you physicists are screaming Planck time I'm gonna need some like sanity checks on my explanations here in the supporter chat if I have like really gone way off and and Planck also also I know there's so much more to this you know before you start typing your comments in the chat about the theory of relativity and spacetime continuum and Planck time and also plumb time I don't even know how to say it just just just realize that this is not my goal here it's not to go in depth into the physics of this and I'm glad to include in this video's description other resources that do but to take these ideas these core kind of like classic concepts and then work out a way to implement them in code exactly to be included all right I'm seeing a lot of typing going on I'll also mention there is a third law Newton's third law which is often stated as for every action there is an equal and opposite reaction which I'll say is quite misleading and I've written some text here in the nature code book about that I think a different way of stating that law is forces whoops that Mouse was not in the way momento okay no I can't talk about momentum I should also mention there is a third law Newton's third law which is often stated as for every action there is an equal and opposite reaction that's a little bit misleading and I've written some thoughts about that here another way of stating that law is forces always occur in pairs the two two forces are an equal strength but in opposite directions so to be honest this law is not so meaningful to me right now if you trust me it's kind of important but in terms of the simulation that I want to start with I am NOT going to bother to simulate every possible reaction and opposite interaction of every force within the system but this will come up again and I will look at this law when in a future video as part of this section I look at gravitational attraction and how two bodies both attract each other and those forces have an equal and opposite and the and those forces are an equal strength but in the opposite direction okay yeah that the changing the time step thing is important okay oh this is going pretty well I might say I mean yeah I sort of felt kind of cruddy this morning and I'm quite surprised with how I feel like this is going ah let me just check because it's going so well I'm gonna take a minute here to check my recording system which has been having lots of problems I mean ultimately these videos can always just be edited out of what you're actually seeing so what you're actually seeing is being recorded to disk and I've never had a problem with but behind the scenes I'm recording separately the different camp the the greenscreen thing the screen capture oh I meant to let me actually do this as a backup give me a second here screen recording let me just do this as a backup no oh wait hold on options I want to make sure I have a mic yeah that's fine record so I'm also going to record it here because sometimes it's helpful when it when Matthew and I are putting this together to have all of the raw stuff so let me just check if you if you don't mind I'm gonna just check for a second talk amongst yourselves all right I realized what's the point of me checking it like if it's not working what am I gonna do but it's like it's hard for me to tell it looks like it might be a tiny bit glitchy but it's only wasn't like obviously really bad so I'll just sort of like hope that it's working I'm gonna hit record again now it's recording again actually I think it's better if I don't minimize that let's just maybe superstition I play here let me go back to here okay all right all right my phone stop we'll get your phone stop looking at your phone during a live stream laughs it should be obvious I'm talking to myself not you you're fine you can look at your phone you weren't told you look at your phone now if you're taking a class or attending somebody's presentation it's a little bit rude to look at your phone during it I mean I admit it I've done it I tried not to I try to give my full attention put a smile on my face and nod my head when I'm listening to somebody speak or present but you I can't tell look at your phone it's no problem all right so next up I mean this could in theory be its own I think I'm going to just man I never know when to break these videos up in theory that this could have been the end but I think I'll just keep going and add some code because it is a little it's just a few quick quick things that I want to do all right okay to start implementing Newton's second law in code I'm going to build off of the example I finished with in the previous video in the vectors section so there I have this single mover object it starts at location 200 200 yeah you don't want to say location position position position position position position position when I was a physics man Donald Deedle Deedle zidle okay position I knew some other lyrics that I could keep going with it to get started implementing Newton's second law in code I want to build off of the example that I finished with in the previous section on vectors so here I have this mover object it starts at a position 200 202 functions are called update and show so if I run it it's the acceleration is being calculated as a vector pointing towards the mouse you could think of it as a force a gravitational attraction force pulling into the mouse now it's not really that I mean of course it's not really that it's just some like pixels on a screen but it's not even I'm not even using the formula for gravitational attraction so I'm going to circle back to that and and make some changes to this kind of idea later but right now what I want to do is change the way the internals of the mover object works because right now the acceleration is being calculated right here in update and I don't want to do that instead I want to write a function that's basically Newton's second law so I want to write a function I'm not gonna change its name in a moment that it implements this particularly law now the law again is force equals mass times acceleration but I've rewritten it to acceleration equals force divided by mass guess what let's just pretend for a moment that the world we live in the world that I'm programming in there's no concept of mass in fact everything in this entire universe has a mass of 1 if I were to do that and I'm rewriting the law as force equals whoops so in that case going back to this law of force equals mass weight which is 1 1 times acceleration is really just same as force equals acceleration or acceleration equals force so these are the same concepts meaning I could just say this dot acceleration equals force there we go this is the simplified version of Newton's second law in code I'm gonna change the name to apply force the idea being that what I want to do is take a force that exists in the environment not something calculated from within the object that's going to be important later in some of the other videos I'll do but right now imagine a wind force external to the object or a gravitational pull maybe pulling it down along the y axis external to the object for example let gravity equal create vector zero comma one I'm making a vector that points down and then I want to say mover apply force gravity let's run this code remember this is the apply force it sets the force you could accept the acceleration remember this is the apply force function it sets the acceleration equal to the force and then that acceleration is added to velocity and that velocity is added to position oh oh that's not good oh I forgot that I'm programming in a class and in a class I don't use the keyword function to define an instance method of that class I just say apply force oh there we go look at that there's that force of gravity pulling it down I'm thinking I mean as you could probably tell now this sketch is a little bit sad because the ball falls and it never comes back so just for the purpose of demonstration I'm going to add an artificial constraint to this particular sketch where one of the things to do is I'm going to look at this bottom edge and if this circle reaches the bottom edge I'm going to take its velocity and reverse it now really if I were doing physics simulation I would think about this as an object with a different mass and what kind of forces are happening when it hits that object but I'm going to just bypass all of that with a quick shortcut I will come back and look at that a little later maybe but I'm gonna bypass that with a quick shortcut of just inverting the velocity and you're gonna do that by adding a function called edges to keep track of when the object hits the hits an edge so this is really your classic bouncing ball code and I have another video that kind of goes through this algorithm more specifically but what I'm looking for is anytime that Y position E is at the bottom of the canvas or below right because it might test thing if it's equal to height is not going to be any good if it's not precisely equal could easily move past then I'm going to shove it back up to height because if it goes too far and it turns around it could get stuck so I'm going to make sure even if it goes past height I set its position to height and then reverse its velocity and let's take a look oh that didn't work oh why didn't it work you know it's one thing to write a function it's another thing to call it so let's say mover edges and there we are so now this gravitational force is pulling the object down and it's bouncing up and down now why is it going off to the right a little bit it's going off to the right because I gave it an initial random velocity it's also interesting that it did get stuck weird why did that happen hmm I'll examine that as we go but I want to just change this now for simplicity to just giving it an initial velocity of zero and let's examine if Newton's first law is working Wow why did it nicely slow down and stop like that I really should I really shouldn't read the chat I don't know if this is referring to me like dry food stuck in my teeth somebody's talking about how I don't brush my teeth either talk about somebody else why do we look at the chat why why that's weird no I I was going to address this and I was gonna do something like this which would actually cause it to do what is there some kind of rounding thing going on well I think it's just shoving it back up it's got less time to go back up to the top to regain its full velocity that's what's going down there okay I just you know it's actually kind of like what I wanted to do well it's also just wildly inaccurate because of the Euler method I mean do I really care to address this all right we'll interestingly you notice how it's like slowing down and eventually getting a kind of losing its bounce and stopping in a weird sort of way that's kind of what I wanted to do that feels realistic but I can't see in the code why it's doing that because really I'm reversing its velocity there's nothing causing it it should go all the way back up to the top and then all the way back down there all the way back up to the top and this I think is because of this boiler integration I'm not looking at continuous time and there's a lot of inaccuracies here not to mention the fact that I'm violating all the principles of time and space by just resetting its position back to the height if it got below the height so it's losing some time where it might regain its velocity moving back up so there's all sorts of goofy stuff going on here and these are the kinds of things that as a programmer working with this in a creative context ultimately I'm going to be massaging and sort of like tweaking things to get it to feel right whatever the whatever the types of application that is that I'm wanting to create but right now I just want to test if Newton's second law is at play and I'm going to test that by doing this if only if the mouse is pressed apply this force of gravity meaning the net force is currently zero so the object is at rest now I am going to apply the force I mean like I forgot a really important detail I didn't forget this detail I knew I had to get to it but it actually just came up right now so why not get to it now weird right I'm like I'm applying gravity but when I let go I think the gravity should stop being applied because I'm no longer pressing the mouse but the gravity still seems to be there why is that well there's a flaw in the way that I program this and the flaw is that I'm setting the acceleration equal to force I'm not I'm sorry the flaw is that I'm setting the acceleration equal to force if the force goes away I don't set the acceleration back to zero but I should so one of the strange things about this Euler integration algorithm is that while velocity and position are accumulating over time acceleration is just a function a calculation based on at any given in time at any given moment in time what are the forces in the environment so at any given time we should start with an acceleration of zero and only there only is an acceleration if right there only is an acceleration if there is a nonzero force so there's a variety of ways I could implement this I could have like a reset function that resets the force to zero so there's a variety of ways that I could handle this I'm gonna just I think for simplicity just say this dot acceleration set zero zero so this is me just clearing the force out at the end of every animation cycle so now let's see if Newton's second law sorry first law first law is really at play and the second one set seriously can I do something where Oh interesting oops another bug cannot read property set of undefined as I haven't given acceleration of value until I've applied the force so this is just a flaw in how I've written the constructor I also need to say initialize a starting acceleration of zero and now here we go the object is staying at rest there's no force I click the mouse but I let go of the mouth and it just flew off let's make the gravity less strong I'm gonna change this to zero point one I'm holding down the mouse there's gravity I let go the gravity is gone the object keeps its constant velocity because there's no force acting on it let's try also now adding a second force into the environment so there's one force pointing straight down called gravity let's add another force called wind and point it to the right let's get rid of the if mouse is pressed I'm going to let's get rid of the if mouse is pressed I'll come back to that in a little bit so now I've got gravity pointing down and wind pointing to the right now of course I couldn't just made one force with this as the X component and this is the Y component but I'm demonstrating an idea that as you start to build these kinds of simulations there might be a variety of forces that are at play or not at play based on any number of factors and you can now separate those out into different vectors and individually apply them to your object let's run this sketch and see what happens wait a second now this this I anticipated this error why is gravity not being applied I only see wind alright let's change the order here let's put wind I don't know let's like move the code around a little bit like let's declare wind and gravity there but now apply them like this I don't know is that gonna do anything wait now only gravity is being applied but not the wind think about this go back into the mover what's wrong this that acceleration equals force so stepping through the code mover apply wind this nut acceleration equals wind mover apply gravity this dot acceleration equals gravity I just overrode over wrote the wind the wind is ignored because I take gravity and put it into acceleration as I was diagramming this and describing it I think a couple of times I used this term net force for the sum of all forces or this idea of force accumulation meaning the object's acceleration is a result of the sum of all the forces in its environment at any given time wind and gravity both act on the object and both get added into the acceleration so this apply force function shouldn't actually set acceleration equal to force but rather it should call ad this dot acceleration dot add force I can call apply force as many times as I want and all and I can call apply force as many times as I want and add up all the forces into the acceleration there we go now the visual result of that isn't super interesting let's make it a little more interesting by saying and I'll make the gravity a little stronger so now the wind will only be applied if I click the mouse but gravity will always be applied let's see if this works there's the ball bouncing and now I'm going to click the mouse and the wind oh let's add some more edges so now I've added a check for the right and left edges and make sure the X slides back onto the edge and the velocity is reversed and there's a lot there's probably a more elegant and efficient and shorter way to write this but I'm just putting it in there to get it to work let's see how the forces are going gravity and now I'm gonna click the mouse and wind is happening you can see that it's all the wind is like pushing it in that direction but let's let go of the mouse and now the wind is no longer there and it's bouncing back and forth the X velocity is constant now because there's no X component to the net force but I could add the wind back in and we can see now it's pushing it to the side I could also just sort of increase the relative strength of these forces just to see what that looks like and we can kind of see that here and we see I already have a pretty interesting and dynamic simulation going there is something important I wanted to say about this yeah I think I'm trying to think of what else I want to say about this oh yes thank you tio actually just mentioned in the chat was in my head to do that and then I forgot this is a small detail and not super important in terms of what I'm doing but it would be nice to actually have the edge of the circle sorry but it would be nice to actually have the de ball reverse its course when the edge of the circle hits the edge of the canvas rather than the center of the circle so in that sense I could add another variable for our to keep track of the object's radiance radius so I'm going to say this dot R equals 16 and then draw the ellipsis this dot R times 2 and then use this dot R as a and then use this dot R to determine where the edges let me have it move a little slower so this is hopefully a little more visible ooo ooo I forgot something I've got to set it back to this dot R there we go so that's a little bit more realistic in terms of like where it's actually bouncing in terms of hitting the edge if there was that all right we go back to my outline because when we just understand what's coming next two objects dealing with mass and gravity great now this is something you can start working with I mean think about the way that I've created this forces now I've got something hopefully you can start working with think about the way that I created these forces I just hardcoded some numbers in there maybe the wind force is a result of some other kinds of algorithm maybe it's coming from a data source maybe it's using Perlin noise maybe the interaction isn't just whether I click the mouse or not maybe there's more than one object in the scene maybe you're using color and other types of designs to create a pattern but this is something that you can use as a foundation to build examples upon now I want to do more with this so one thing that I've completely ignored here is this concept of mass it's kind of like little jerky of the animation but I'm not yes there's a couple things I want there's a couple things that I want to add here which I'm going to do so in the next video or two one is the concept of mass is completely ignored so how do I deal with mass and how could I have this mover have different mass this is hopefully a foundation upon which you can build an example or a project no I kept up trouble at the end of these videos alright I got it I got it I got it so this is a good stopping point for this example I think there's a lot of twists you could do on this I mean first of all I've just hard coded numbers here for wind and gravity there might be other ways you think about calculating those for example you could actually pull from like a weather API and get the actual wind and have that effect this object or you could use Perlin noise maybe these vectors are like changing over time for some other reason or there's more than two forces so many ways you could go in this direction but this is a bit of a foundation upon which you could build a simple interactive simulation there are two a couple of different things that I want to do with this example which I'll do in two separate videos number one is there's no concept of mass here so what would it mean if I added to the mover object a mass property and how would I use that mass value and actually bring that back into the true the true Newton's second law force equals mass times acceleration so I want to bring back mass bring back mass then I also want to investigate other forces that I can look up the sort of like real world formula for and see if I could implement those and the first one I'll do is friction for example there's this thing happening where the ball comes to a resting point but then it just rolls back and forth could I simulate sort of friction of it against the edge and have it slow down and reach a stopping point so the next video I'll start with mass and then I'll look at friction and keep going from there finishing up with looking at the real formula for gravitational attraction and how I might implement that in code so maybe I'll see you maybe I won't and go on with your day may the force be with you I said it I said it I said it goodbye all right everyone that was good it's time for a short break I've got another hour to go before I take my short break I am going to thank the sponsor of the coding train of brilliant org I mean do you like the math and physics stuff let me tell you something if you like the math and physics stuff I think you're going to like brilliant dotorg so I'm brilliant org is a website it has many many many things on it it has it's a problemsolving website with a handson approach there's 60 interactive courses in math science and computer science it helps you achieve your goals and stem one small commitment to learning at a time because you could just do like a quick little five minutes every day ten minutes fifteen minutes you could spend all day on brilliant or you could just do it a little bit um I enjoy looking it on the subway so I spend a lot of time commuting and that's like a really helpful time for me to do a quick puzzle so one of the things about it is that that's great in relation to things I'm doing my channel is it has a computer science fundamentals course and a fundamental algorithms course so algorithms are the bedrock of any education computer science and studying them usually involves fighting through the specifics that details of syntax and so one of the wonderful things about the fundamentals of algorithms course and computer science courses on brilliant is it allows you to really think abstractly about the concepts and do a lot of different interactive puzzles I will say there's draganddrop program big with pseudocode and then all sorts of other fun stuff and it just it kind of like the video was there and it's looping and it's not at the point where I want it to be right now because after these puzzles when it gets to this spot woods new what's new about brilliant I don't how new it is but it's new to me is that they've actually built Python now into it into the browser so while I use JavaScript mostly in Java in my tutorials Python is another great language that you might be interested in learning and it's part of a lot of introduction to computer science curriculum and you can actually like type and do a lot of the lessons with interactive Python right in the browser so I'm gonna let that pop back up again and see they have a new chemistry course which is also pretty interesting and a lot of other interactive content I really like their math fundamentals course there's the Python stuff as well so now what I like to do before I take my break and I'm so excited about what I saw was there is I'd like to go to the brilliant website and look at what the days one of the daily challenges so this way I don't look at one ray only and the reason why I'm excited about this is raycasting coding train this really relates to my coding challenge 145 so I'm gonna quickly try to like solve this solve this puzzle I looked at it earlier I didn't actually click on the answer but I think it's gonna be an easy issue one to do we'll see and be interesting for those of you when I take a break if you want to sign up for brilliant and offer your own take maybe there's something in this code example that can actually link up with it ok so let's look and I'm ok so today's challenge a sealed box contains a blue light a green light and a red light on the wall let me get the chat back up here so I can see it so it's now not seeing it had a red light on what the other three walls are covered with perfect mirrors to see inside the box there was a narrow eye piece which makes an angle of 60 degrees with the wall which i think is what's right here this is the eye piece interesting how the arrow is pointing in that direction oh because we're seeing we're seeing the light come back in that's where you're looking so we've got to find where I'm thinking of the the sort of like the vector coming out and where it's going to go it's obviously not going to reflect like this right the angle of what do you call it incidents anyway this should like reflect ego equally so if this is 60 degrees this is 30 degrees so the reflection should come off 30 degrees so I think the idea is that I've got to solve or which color it's gonna end up on so I can use what they can use this interactive thing here and I need want it to be 30 degrees 30 degrees it should be that then I'm gonna go to the next angle right and then that should be 60 right 60 and then the next angle would be 30 like that and then the next angle would once again I soon be 60 are no 30 yeah it looks like yeah not 60 yeah that's also a 30 degree angle so looks like this so the answer should be green I don't did I do this right I think I did I'm gonna click on green I'm gonna click Submit anybody want to stop me stop me now all right I got it right so what I like about that as I could see other people's explanations and I could write my own I mean if I had the time wouldn't it be nice to just make a p5 sketch that reimplemented all this interactivity and this is the thing this is why I like because I got these ideas are like oh I would love to make a p5 sketch that basically does this interaction and I kind of have already because that's ultimately what's happening in this raycasting coding challenge it's just sending out lots and lots of rays of light and I'm not doing the reflection I just realized I'm not doing the reflection here so that would be an interesting thing to add to this the reflection I know the community contributions have reflections there you go so you know if you if you just seem so that gets of interest to you and you want to take a minute to sign up now I take a short break go to brilliant org slash coding drain you can sign up for free and put your own answer into that puzzle I mean I guess you probably put green in but you know maybe you put your own explanation in there if you make an explanation right in there share with me I'd love to find out about it and I will see you back in about five minutes oh and of course if you want to unlock all the courses on brilliant you can if you go through that link and order a premium subscription the first 200 people to do that will get 20% off and that unlocks the full all the content that's on brilliant work all right I've seen about five minutes all right I am back thank you again brilliant dotorg for the sponsorship of the coding train I hope you enjoyed this daily puzzle and I am now moving back on to where I left off Titan oh you surely so sorry Titan I can't it's hard for me to like keep track of things that fly by in the chat very quickly during the livestream but maybe somebody who is in the supporter group on discord can capture the link and share it with me later but discord is the best place to share stuff with me after the fact or social media you can tag me at shipment on Twitter is probably what I check the most okay so now let me close this stuff and let me do duplicate and I'm going to forces and we're gonna add mass all right so I'm trying to think I have I'm gonna I'm gonna go until noon so that's about 45 minutes two and a half hours I mean two hours is my like wish for a live stream I often get into three hours and Beyond because sometimes it's hard to stop but I typically I don't think that I as wacky as it sometimes gets if I get a little punchy I don't think I could produce a ton of valuable contractor two and a half hours so that's probably that's certainly where I'll stop today oh I forgot to get water I'm a dumbdumb okay I might have to take another short break to get water this is finished alright so I'm trying to think so the next two things are mass and friction usually a pretty short while mass will be short okay I am going to erase some of this stuff okay okay I mean my goal is to get through mass and friction and then I'll be coming back to this stuff oh if you can't see me my goal is to get through mass and friction and then I'll be coming back to this stuff four five and six on the next livestream which will most likely be a week from today welcome back I should ask people in the previous one to try mass and friction but I've got to get water I'm really sorry everybody it's very very fast for me to get water it was completely mean what's the point of me taking a fiveminute break if I don't actually go get the water during it I don't know I did some other stuff I checked my messages I went to the bathroom you know do that so let me just give me it's gonna be like I've said but around 60 seconds for me to get water okay I went got water he probably drank all of it so I need to go back again hopefully that will time you welcome back in the previous video on chapter I like how people are counting in the chat welcome back in the previous video in this section on forces I built this particular example where there are two forces at play a gravity force that's always being applied to the mover object and when I click the mouse a wind force is being applied to the mover object what I want to do in this video is look at how I might consider this mover object to have the property mass and how that might affect how the gravity and wind forces behave and in truth for me be able to demonstrate this effectively it's only meaningful if I have two objects with different masses because if I just have one scaling the mass is just something that we ultimately scale the strength the relative strength of those forces so let's quickly add a second object to this example now you might already be thinking for yourself yeah what did you just do there if you're gonna have more than one object should you use an array or isn't there a different way of doing this and yes yes yes and ultimately what I want to do with these examples is build arrays into them to collect many objects and sort of add and subtract them from the canvas itself but just for demonstration purposes I'm gonna leave these as two separate variables mover a and mover B I'm going to apply both forces to them and call update edges and show on both of them let's see if that works there we go let's apply the wind kind of interesting to see them now doing something there you could see how they're kind of in lockstep together maybe mass will change that sorry looking into the mover class itself where should I incorporate mass well I do have this variable this dot R which is being used for the size of the ellipse I could add another variable this dot mass let's just set it to one I'm thinking I know what I want to do here so both are bouncing and responding to the wind force now let's think about where I want to add mass so looking at the mover object there's position velocity acceleration and R and R is a property that is tied to the size that I'm drawing the ellipse let's just add mass as its own property for a moment this dot mass equals 1 oh so many things are gonna come up with this ah so good so good and remember the reason for adding mass in is Newton's second law force equals mass times acceleration or acceleration equals force divided looks I might actually not get to the friction because this is there's more to this than I thought the reason why I want to do this is remember Newton's second law ha force equals mass times acceleration or restated as acceleration equals force divided by mass and remember the way that I'm implementing this is all of the forces divided by mass are being accumulated into the object's acceleration so first and foremost I need to add this I need to incorporate this divided by mass into my apply force function right here I can then say force dot divided by this mass right before I add the force into the acceleration before I add the force into the acceleration divided by mass let's try running this okay good same result well the mass is just one so let's now add mass equals two which I should see the acceleration the force of rains the same but these the strength of the acceleration should be divided by two divide it in half wait what's going on ah something's weird going on why are they different they shouldn't be different they don't have different masses something crazy is going on think about this do you remember this video I made a little while ago where I talked about static functions that will do like a flash battle you should decide let's do like a weird flashback thing do you remember no a few videos back I spent all this time talking about static functions so we'll do some clip there there was a purpose to that there was a meaning to know there was a reason for that and that reason that moment is right now this is the case where I want to divide force by mass but I don't want to affect the actual force the wind is not being divided by half the wind is going into the object and the object is going to divide it by half to put it in the acceleration but the wind must remain the same the issue here is I am actually taking this force and dividing it by half so I want a new vector and I'll just call that F for simplicity and I want to say F is the result of dividing force by this dot mass I don't want the force to be affected I just want to divide it by mass before I put it in the acceleration and this isn't this is happening because right here this wind vector is being applied twice so wind gets / halfsari not divided by half ah am I saying / half again wind wind gets divided in half / wind is divided by two and is smaller when it goes in to move or be it's the same wind in both of those but both of those objects should divide wind by its own mass before adding it to the acceleration so this static version oh my goodness of the divide function which is what I meant to put there this static version of the divide function I kind of just go back for a second cuz I've got I got it this all got convoluted except I don't remember what I was doing well it'll all get figured out later this is the very reason the moment right now where static methods are important and we're going to make oh I I whatever I did before it was so much better all right fine keep that I want to divide force by mass but not the actual force vector itself I just want to take that vector get a copy of it divide it by mass and then add that to the acceleration the reason is because out here right I'm taking this wind vector and applying it to a and B and I don't want a to mess with it because I it wind should stay the same when it applies to B but this function itself is actually taking that force vector and dividing it by two and changing its value so there's different ways I could do it I could make a copy of it and then divide it but I could also use the static version of divide in other words I could say and I need a new vector to store the result in I'll just call it f p5 vector dot divide this dot mass so instead of oh sorry force Commodus dot mass shoot p5 dot vector dot p5 cup p5 dot vector dot divide force by this dot mass so here I am saying take that force divided it by mass and store the result in a new vector F and then that vector F is what gets applied to the acceleration itself oh and of course I need to remove this line of code which I'm no longer want and there we go so now math is playing a role but so now math is playing a role but it's not actually adjusting the forces I don't know what else to say so now mass is playing a role but it's not affecting externally the environment and it's just a property of the object that's affecting the way the force changes the acceleration so let's take the logical next step and give each of these objects a different mass no I'm going to add a third property to the constructor call it m and then in when I create the objects let's give one a mass of two and one a mass of four and again I'm just picking numbers out of a hat totally arbitrary so remember the one on the right will have a higher mass than the one on the left so interesting this this is correct according to Newton's second law right if acceleration is force divided by mass if an object has a larger mass it will accelerate less and this makes sense think about the force that you have to apply to an object an object with a greater mass is going to be you're gonna need a much stronger force to get it to accelerate than something with a much smaller mass think of a bowling ball this is a pingpong ball how much force do you need to apply to get those both to accelerate equally but something weird is going on here right because maybe what's the thing with is it dropping the dropping like the objects from a tower it's like Galileo yeah got Galileo's Leaning Tower of Pisa experiment something is really wrong here something is really wrong here might have heard of Galileo's famous Leaning Tower of Pisa experiment where in 15 the late 1500s gravity is not the force the force equals weight is weight equals yet that's a good point I'm kind of not using my terminology super correctly it should really be called weight yeah yeah no I know so I'm gonna I'm gonna get this this is where I'm going David but thank you for that because then I can change I'm actually gonna change this to call it weight so uh just bear with me for a second we'll see if I address that something is not right here you might recall or have heard about Galileo's famous Leaning Tower of Pisa experiment where you know that's the story goes the late 1600s Galileo was said to have dropped two spheres of different masses from the top of the Leaning Tower of Pisa and did they fall did one fall faster than the other no they fought they fell at the same rate independent of their mass and the reason for this is because the formula for gravitational attraction or the force the weight of an object weight is actually a force right yeah yeah the weight of an object weight being the force gravitational cavity I'm really using the wrong term here I really should be saying the gravitational acceleration the force is the weight and the weight of an object is scaled according to its mass the bigger the mass the bigger the force the smaller the mass the smaller the force so this would actually be accurate so for this to work more accurately I should really say let wait a P five dot vector multiply gravity times mover a dot mass and weight B is that same thing multiplying mover B's mass and then I'm going to apply weight a and weight B so this is a little bit I'm like sort of fudging things a little bit just to like take this gravitational vector and then multiply scale it according to mass before I apply it in worth then gets divided by mass let's just see if this works perfect they're both falling at the same rate now let's apply wind well the acceleration is different as it should be because wind the wind force the acceleration of the object according to wind is not scaled according to its well it's the way it should be the wind the acceleration due to wind is less when the mass is larger and that's the way it should be but visually this is very hard to kind of watch here and the chat is kind of saying a lot of interesting things this is the thing is it's kind of hard to see what's going on here because I'm drawing them at the same size so this is a nice moment for us to think about if I have two objects this is a nice moment for us to think about if I have two objects and I'm gonna just erase this here so let me erase all this if I have an object whoops if I have object a whose mass only times gonna do this if I have object any and the mass of object a is 2 and then I have object B and the mass of object B is 4 well certainly if the density of these things is the same but what is the density I mean these are just pixels but let's let's consider the density to be the same then I might want to draw mass B object be larger than object a so one idea could be like oh the radius could be equal to the mass so here the radius is 2 and here the radius is 4 but that's not really the right scale because what should really map at least in my mind to the mass is the area so the area of this should be twice the area of this what's the formula for the area of a circle PI R squared so in that sense I think a proper mapping would be to take the square root of the mass in other words yeah right because and why is that well let's say then that the radius is to let's say the sorry the square root of the mass yeah let's say in this case the radius is square root of 2 and in this case the radius is square root of 4 well pi the surface the surface area the area PI R squared would be 2 pi and here PI R squared would be 4 pi whereas if I used 2 & 4 I would have 4 pi and 16 pi because I'd be squaring 2 I get for squaring 4 I get 16 so take that mass take the square root of it and apply that to the objects radius in other words this dot r equals the square root of this dot mass let's take a look at what this looks like okay well those things are so tiny there's so tiny so I'm gonna scale it arbitrarily multiply it by 10 and we can see this object has a higher mass now why are they kind of bouncing out of think now well it's because they're they're hitting the bottom at different times because their size is larger which is fine I kind of that's visually what I want and now you'll see the acceleration of the smaller one be much higher with the wind okay I think I got to the end here yes ultimately I'm making a ton of arbitrary decisions here but I'm trying to make these decisions based on the way that I understand these aspects of physics working and I'm sure you could think of some improvements to make on those things and those decisions and so I hope maybe now what you could do is what are some other ways you might think about visually representing objects of different math what if they have different densities or they're made of different material or how might you have other forces in the environment that play a role in how this world is visualized but the next step okay let me sort of say that again because now I know where I'm going with this ultimately I'm making so many arbitrary decisions here and there's many inaccuracies but I'm attempting to at least take the ideas from realworld physics and apply them to the best of my ability in a way that feels accurate so one of the things I might suggest to you are there things that you see that I've missed things that I've that are inaccuracies or don't feel right to you in terms of how if these were physical materials they would behave certainly they would collide with each other that's an interesting that's a whole other can of worms dope and then I'll come back to another time but what types of elements can you apply to this could you add an array now could you think about how you visually design these objects maybe you want to represent different masses in a different way through color or some other way of visually indicating that but for me the thing that I want to do now is I want to revisit essentially what I'm doing in these two lines of code where I say let wind equal create vector number comma number let gravity equal create vector number comma number is there not a better way or a different way that I might approach the calculation of a force vector in the environment and that ultimately is looking up a formula for how a force is calculated based on the properties and conditions on the environment and so the three forces I want to look at our friction drag which is kind of like friction but different now I'll explain that as well as gravitational attraction between bodies and space so I'm gonna look at those as kind of case studies in different formulas maybe you'll have some ideas of ways you can look at other forces or invent your own forces but I'm gonna return at least in the next video and just think about friction specifically when these two objects are in contact with the edge how might they act how am i how might they how might they realistically slow down as if there's a contact friction between those objects and the surface or the edge of the canvas itself all right I think unfortunately mmhmm well that's good I got through to additional video tutorials today I mean I'm gonna get to spring forces don't worry all is coming do I have time to do the friction I don't really I kind of want to like eat out an extra 10 minutes let's see part of me well you know I should spin the wheel for the Cabana and by the way Dierker all is asking bigger should go high after balance shouldn't it so there's lots of things that it should do that are inaccurate here for a variety of reasons one of which is just the euler integration technique of this or large time steps but yeah you know maybe there's some ways to revisit that to make it feel more accurate okay okay let me just at least look here let me look at the exam I don't think I think I'm going to stop for today and come back to friction in the next the next time I'm here but I just want to look at this example yeah so this is where I did it and only if it contacts edge it was curious to see how I did it in yeah that's interesting I mean to probably eat this out right now mmm all right everyone I'm going to be sensible and I'm going to stop here but this is nice cuz I do have 10 more minutes so I could answer some questions and possibly spin the wheel so I don't know if if at some point I if the wheel if there is still a particular let's go to the thing is I just want to do the marching squares as the next coding in the Cabana video so I want to spin the wheel and then if it doesn't land on marching squares I'm gonna complain I think it's fine for me to do marching squares let's go back to that todo list and just sort of see what's there and I can I'll answer some questions I'm gonna keep an eye on the chat to do list oops sorry so these are these are topics that I could do in the Cabana Xavier is asking what is your roadmap concerning forces videos so pretty much if you follow along oh I know what I'm gonna show actually I'm gonna take ten minutes to show this because this will be this will be good and um Alka I know if you're still watching I meant to get in touch with you because about the build system for nature of code because I know you your your messages may be expressed interest in working on that which so be glad to be in touch about that but the road map is really following along this book table of contents I'm making some tweaks and changes to it based on rewrites of the book and ultimately this is what I want to look at but if what's coming after here is is then chapter three where I deals with oscillation and so there'll be a pendulum people a task in springs in ultimately once I get to Chapter three so this is where I'm going here Alka is still watching okay good so what I wanted to do what I want to do actually in the last 10 minutes is I want to show people how the how you can on your own get the latest version of the nature of code book that's in progress because I'm not really publishing it anywhere I'm sharing some PDFs in the discord with the supporter group but you could actually just build it yourself and so let's go into documents here let's make a directory called nature of code and what I'm gonna do requires you having node basically just node installed in your computer and so if I go to the book github repo this is the repository that has all of the content of the book so the book is written in HTML and I'm currently editing chapter 4 and there's been I've gotten through a round of edits on these chapters and then there are a lot of issues that I still need to address that are being tracked here this is an open source project I welcome contributions to it I am I would like to hire some people to actually like have some accountability and a schedule for working on this so that's something that I'm figuring out but what I want to look at is if you want let's just see I definitely have this working on my sort of main computer but let's just see if there's so assuming you have node installed first thing I should do is clone this repo let's do that oh shoot I messed something up in terms of my permissions so I'm just gonna clone it using HTTP so I'm cloning this repo which is another fancy term for downloading the entire repo we can see there it is and by the way if you're wondering about this sudden move to like terminal I term and all this stuff if you go to the coding drain comm under more under workflow this is at least the latest set of videos that kind of have about the different tools I'm using like git and node and all this other stuff so you know these are it's to some extent a little bit out of date but they're there's a recent as I've guy should make a workflow 20/20 video at some point if I have time okay so now I'm gonna keep with following these instructions I'm gonna install the global the node module magic book globally see if this works as a oh Carlos spot behind said Carlos Luisa saying tried to compile it but there was some error with images to the PDF so let's see if I encounter that error so the the magic book module installed successfully by the way you don't notice that it installed Prince XML so Prince XML is the engine I've referenced it before it whoops it's the engine that does the actual PDF rendering and so yeah so it does the PDF rendering and there's some limitations and some caveats with that but let's just keep going so now now I need to also install all the other dependencies for the nature of codebook itself I'm gonna run npm install that should be good and then I want to I'm gonna look at the code as it stands because what's really important here is this magic book JSON file which includes a lot of the configuration for the build process so right now it's building the entire book because it's building everything that's in files but if I wanted to just build and I'm gonna do this right now actually if I wanted to it just for example just build the forces chapter I could do this so I'm gonna just hard code I'm gonna just change this to just the fort cuz it'll run much faster so I'm gonna do that and you see it's it's building it's doing a PDF build with some print settings the layout is in this file there's CSS and this file then the images are here so this if there's something wrong with this path that's what the the viewer might be referring to and fonts and then this is for the HTML build which probably needs the most amount of attention and work so now I'm going to say I think if I just say magic book build it should do it now ah so I'm having a problem why is this happening to me this is happening to me on a lot of different computers I'm using where it's not finding the global modules it probably has to do with my z a I'm using zsh as my shell and I have a feeling that the path is messed up yeah why I need to add just see something here where's the like other because it's gone but add a lot of fixed global node permissions this is the webpage that I always look at and yeah I need this I think I think this has to be in my Z Z SHRC file it should if that should happen automatically but for whatever reason it didn't so if I now say oops should be else a magic book Bilbao yep okay so that fix that to now it's building the book and it finished so now if I go and look at this in build there should be two folders build one which is the PDF and you can see there it is so now I have the new and the reason why this P is up here because I don't have the paid Prince license on this computer that I'm using but to actually create the book I do have a purchased version of Prince so which unlocks other possibilities and you can see the book here it is there's some issues probably maybe like some layout weirdness and this is one of the things that I need to work more on is the how the math notation is being rendered and other sort of things I mean I'm I would would love a designer to just like jump in and redesign this with CSS and all of that so but you can see now I've built the book let's go back to see if the full thing builds so if I go back to a magic book JSON and if I change this to start GML let's try building the whole thing again this is gonna take much longer HTML book finished and by the way so the HTML build the goal for this and it doesn't it's it's not there it's not anywhere close to there is that basically what it builds would then just drop in right here so I would run the build process and then push it to the website and the new version book but I don't have that working this is still the same ultimately essentially with some tiny little changes the same exact text from 2012 so so the ultimate goal for this project is for me to do all the rewrites as well as have the build process working to build the pdf version of the book with a nice clean fixed up design and the web version of the book which a nice clean fixed up design and that the web version of the book would ultimately also include and some of this site is in progress like these were these are these should be these I think a lot of this was actually done I have to go back and revisit everything but the newer web version would these would be embeds of the p5 web editor so you could get right to the p5 web editor from any of these examples running so if you have experience with web development node in particular HTML and CSS PDF renderings a lot of weird things book design all of the above any any combination of some of these skills and you have time in your schedule to allocate to this project you there right now I would say join the discord and maybe at some point I will post a Google Form there where people could if there's enough interest people could fill out their information there and I would have some kind of process to pick a couple people to work on this but this is also an open source project so anybody can jump in but you know if you're going to try to fix some of the stuff or work on it I would say please file a github issue just to let me know so there's not a lot of duplication of work and yeah so yeah Anagha saying what about that game that Mike Boyd built that you want to recreate there's so many things that I mentioned that I intend and want to do that I don't get to so that would be a great thing for me to revisit etc okay all right so I think I'm at the end now it's noon noon o'clock I'll take a couple more questions stay tuned there's so many edited videos that are like in process he's gonna be like a couple days where like a zillion new videos come out on the train but they're all being just out of these live streams if you're watching the live stream they won't manage you so much so I'm I'm here to answer a few questions if they pop up in the chat projectile motion that's a great idea that's one of the exercises in clothing drink it's an album watch example what's one of the exercises in putting trim so I think that'll be good maybe the challenges the exercises I could do is like coding challenge videos thank you all so much for joining me with this sort of stuff that I'm doing for giving me feedback for learning and creating stuff for teaching this stuff to other people all the things that the community does and I really appreciate and enjoy the next live stream will be a walk I was gonna say a week from today but zooming all goes according to plan stay tuned for a guest appearance on the coding garden just coding guarded next Wednesday warning time Easter time February 26 thank you John for your nice feedback six o'clock in France no need to salute no just a friendly like is good enough for me also you can revisit vector field part of the nature of code it comes up in a thymus agent so the extent that I can get through all the material vector fields is on those thank you brilliant be a sponsor of the coding train you can check out brilliant acquitting org slash coding train there's a fun daily challenge from today all that stuff ah coming soon new emojis coding train join the discord I've got people watching still join the discord somebody please Poe of choochoo yeah choochoo join the discord somebody who's watching could you please post the link to the discord in the chat in addition you know I I don't mean this as I I really from my heart I'm telling you about this in case this is something you would enjoy in your life it doesn't means it's everything what we find whether people buy this stuff or not but especially like the coded drink notebooks are really nice and I used one if you want in the in the recent coding in the Cabana video so there is this new store that I should mention I actually have not seen one of these pins in real life so if anybody has ordered or has one of these pins please take a photo of it if you're wearing it or wherever you have it and share that with me I would love to see that and I have a personal vested interest in these hoodies getting made but they'll only get made if there's enough prewar earth so if that's something it might interest you I'm that's a little just a little like push for me to get your coding train hoodie so I'll mention that and the discord those are those are things that I wanted to mention as well s√©rgio ask a great question is discord only for patreon so this is new the discord is a public discord that anybody can join there is a code of conduct that I ask you to read and adhere to those policies and if you have questions about that you can reach out to me also SCI who is the coding trade community manager SCI at the coding training comm there are some channels for supporters of the coding train through youtube memberships and patreon stuff but the help channels and other channels are all publicly available to anyone so that's kind of like where I suggest asking your coding questions or or if they're processing or p5 specific you can also use the processing forum thanks everybody I will play you out with a bunch of the coding train remixes I'm gonna see if I can get one of the new ones going but I didn't know cuz I couldn't rewire some stuff and play from sound without directly so stay tuned for some of those other coding train remixes that I will post that I will play as the altro sequence plays thank you everybody know you are all wonderful good bye choo choo as always I always forget to dis stop I'm gonna do this this star this star the star this star song never forget this start somebody composed that song for me our work is not defined in line six little known as I always I always forget the ditch there is a second this dot song that was created by F looper who created the Perlin noise song so here I'd rarely played this but I'm gonna play right now if there's another version of the distant song different tune totally different I'll listen to this in a while stop this stop dis stop I'm gonna do this stuff this star this God decide that this starts on never forget to this star with somebody compose that song for me okay this firework firework is not defined okay line 6 as always I always forget to dis stop it stop it stop it sucks on the firework firework is not defined ok line 6 that's always I always forget the dis stop this stop this stop it's on loan for turbo fire firework firework is on the side so get the line stick that's always I always forget the dist on this stop this stop it sucks on the firework firework it doesn't line 6 that's always I always can get the disc top this stop this stop sawing firework is not defined line 6 yep as always I always forget the dip stop this stop this stop I'm gonna do this stuff this dot this dot decide that this dots on never forget this could somebody compose that song for me ok firework is not too fun and is there at the end so now I've got the load is anyway there was an error the song didn't load and then there's a callback that's like it's loading it's loading it's the loading song it's loading it's loading it's the loading song so let's see if this works now loading loading loading the loading song of course I could do sound synthesis myself hello I started I was at what I remember I don't have long or short term memory but some on these recurrent neural networks for text generation and then I my hope is that I will be coming back to this playlist again after this semester is over or towards the end of the semester if I'm finished so anytime stay in touch with people on Twitter and I wouldn't recommend to you will be seen as a guest on my channel Suraj as a channel about deep learning and also the new video that just came out from one of my favorite channels three blue one brown when what is a neural network learning or what so now the internet competition will learn a part to come out before ten point eight the answer is almost a definite yes so please write all of your complaints in the comments here I'm going to read them I'm going to sit with some sort of like meditative cucumber I'm asking on all of your feedback about why students right now I'm doing now a for a while and eventually these videos thank you for watching this short little video unicorns and rainbows and cupcakes what else is there yes kittens thank you very much kittens and rainbows and cupcakes notice that look what I get I'm really losing my mind I feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this isn't this is a wonderful thing okay we're gonna do I'm really getting to something I need my sound unicorns that was invalid syntax I forgot I will use the team asleep over and over again all sorts of text generation analysis things that I will use continuously over and over again to do the kids the kids again the kittens yes this dot neighbor counts
