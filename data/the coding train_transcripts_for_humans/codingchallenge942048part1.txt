With timestamps:

00:00 - oh is that the coding train I see coming
00:04 - along the tracks oh I will when it's
00:07 - brought us today oh look it's the game
00:11 - 2048 so this is a much much requested
00:14 - and often not a not whatever the
00:17 - opposite of requests it is suggested
00:19 - that I don't attempt this Kody
00:21 - challenging many of you watching this
00:23 - are probably familiar with this game if
00:25 - you are not this game is a sliding block
00:28 - puzzle created by the developer
00:31 - Gabrielle cerulean in a weekend it
00:33 - became extraordinarily popular is now
00:35 - actually open source you could go and
00:37 - check out the code that is written in an
00:40 - excellent way I'm sure much better than
00:42 - whatever code that I'm going to write in
00:44 - this video this of course is a game that
00:46 - is a very similar to threes and another
00:50 - game 1024 so there's a lot of this game
00:54 - comes from a long line of sliding puzzle
00:56 - add numbers together I can't believe I'm
00:58 - still wearing this games so what am I
01:01 - doing here so I have attempted to make
01:03 - my own version of the game and I really
01:06 - what I've discovered in this process
01:08 - which I've already completed this and
01:09 - you could see how ugly mine is compared
01:11 - to this one is that object-oriented
01:13 - programming would really help me because
01:15 - one of the main things that's missing
01:16 - right now look at this not from here
01:19 - because look at this beautiful look at
01:20 - all these beautiful animations is I
01:22 - don't have any animations but I have the
01:24 - functionality of the game I even have
01:26 - some some little things in here that you
01:29 - could learn from perhaps I don't know so
01:32 - uh this is why I'm here this took like a
01:35 - long time and I had a lot of problems
01:37 - and I couldn't solve a whole bunch of
01:39 - things that you would think that I would
01:41 - be able to solve but I really had
01:42 - trouble with that and the coding
01:44 - challenge is apparently it's in
01:46 - something like 2048 parts so it's
01:49 - actually right now it's only in four
01:51 - parts if I come back and do the
01:52 - animation so I'm sure it'll be five
01:53 - parts if you can make it through all of
01:55 - these parts I will I don't know if I
01:58 - could somehow give you a medal I would
02:00 - that would be amazing
02:01 - but I would love to hear your feedback
02:03 - get your suggestions for improvements
02:05 - you can make your own version of this
02:07 - your own twist on this game and you
02:09 - could submit it at the coding training
02:10 - com instructions are there link in this
02:13 - video's description for how to do that
02:14 - so part 1 is pretty long parts two and
02:17 - three are kind of short and part four we
02:20 - don't speak we don't speak about the
02:21 - part four
02:22 - you don't speak about the part four so
02:24 - enjoy I hope to see you sometime again
02:27 - in the future I'm going to go take a
02:29 - trip on the coding train to the in the
02:32 - corner and wonder what I'm doing with my
02:35 - life train goodbye so what is the core
02:39 - let's let me first before I get started
02:40 - coding I really am very pessimistic
02:42 - about this let me try to talk through my
02:46 - understanding of how the game works and
02:48 - what kind of code stuff I might need all
02:52 - right so the game by definition is
02:56 - played on a four by four grid now again
03:01 - there are obviously variations of this
03:03 - this is not their their predecessors to
03:05 - 2048 of the same game with slightly
03:07 - different designs and flavors and ideas
03:09 - but the core idea of the 2048 game is
03:13 - four by four grid it starts I think with
03:16 - two random spots filled in with either a
03:18 - two or a four and then you can press a
03:22 - key right up left down obviously on a
03:28 - mobile or touch version you can swipe
03:29 - and you send all the votes so if I swipe
03:33 - to the right I send all the values this
03:35 - way so the two and the four would end up
03:37 - here then maybe a new value pops in if a
03:41 - two pops in here and I swipe to the
03:43 - right again numbers that are the same
03:46 - will combine so these twos will combine
03:50 - into a four and so let's go back and
03:53 - look at that and we can kind of see
03:55 - let's see that happening here right as I
03:57 - press down nothing happens I press to
04:00 - the left everything goes the left of
04:02 - four moves to the left at two uh let me
04:04 - move that to up and then let me move
04:06 - that over those two six teens will
04:08 - combine and those two twos will combine
04:10 - and these two twos will combine there we
04:12 - go not give you down so you get the idea
04:13 - so what do I need
04:15 - well actually interestingly enough all I
04:18 - need to figure out
04:21 - if I have basically four you know I have
04:24 - a matrix a two-dimensional array but
04:26 - it's really just an array of arrays and
04:28 - I did too many of it so if I have four
04:31 - if I can figure out how to just condense
04:34 - things to one direction one direction
04:37 - then I don't know any one direction
04:40 - songs otherwise I would started like
04:42 - singing as a joke but I don't actually
04:43 - know the name one direction anyway I'm
04:47 - more of like a ninety eight to greet 98
04:49 - degrees I don't even remember whatever
04:51 - was in the like 1940s when I was a
04:53 - teenager okay so yes 2048 if I can just
05:00 - get them figure out how to do it in one
05:02 - direction then if the user or the player
05:05 - presses up I could kind of just rotate
05:08 - the whole thing and go in that direction
05:09 - so so let's let's see if we can figure
05:11 - this out it alright so let's start
05:12 - writing some code I'm going to say I'm
05:16 - gonna have a variable called grid and
05:17 - guess what I'm just gonna hard-coded I
05:21 - feel okay with that do you feel okay
05:23 - with that
05:24 - obviously what is it it's going to start
05:25 - as it needs it's basically this right I
05:29 - need to have four arrays of zeros and
05:34 - let's see if yeah there we go this is
05:38 - that's the book 2048 board I could try
05:41 - to say like new array and fill and math
05:44 - and all that stuff all these like but
05:46 - this is gonna work there we go so now
05:49 - what do I need to do first the first
05:51 - thing that I need to do is for each is
05:56 - unless write a function to do this is
05:58 - add add num add I don't know what's add
06:03 - spot I don't know how to call this
06:05 - add number so what the add number
06:08 - function should do is it should pick a
06:10 - random location that does not already
06:13 - that has a zero and it should add a two
06:17 - or a four there so what I'll do is so
06:24 - first I should check first I need to
06:26 - check is the whole board full of
06:29 - everything that's not is there are there
06:30 - any zero spots so let's make a list of
06:33 - all of the in
06:34 - all the possible spots that I can add so
06:36 - I'm gonna say I'm gonna make an array
06:38 - called options and now what I'm gonna do
06:44 - is how could I use to get the index
06:47 - values out I'm just gonna loop through
06:49 - it so I'm gonna use I and J I kind of
06:55 - have this idea that I'm gonna use all
06:57 - these fancy array functions you're just
06:59 - gonna loop through it I and J and I'm
07:02 - gonna say if grid I J equals 0 this is a
07:09 - valid spot options dot push and I'll
07:15 - just make a little array with I and J I
07:18 - and J in it oh maybe I'll make an object
07:21 - X I Y J ok so I'm going to put a little
07:27 - object in that array now what I'm going
07:30 - to do is once I'm done I'm going to say
07:34 - let spot equal a random option so if
07:41 - options length is greater than 0 then I
07:47 - can pick a spot and then I'm going to
07:48 - say grid spot dot X spot dot y spot dot
07:58 - y equals and I can I basically want to
08:04 - pick I don't want to pick a 2 or a 4 so
08:07 - I can use a ternary operator whoo I've
08:12 - gone totally nuts today which basically
08:14 - what a ternary operator does is it says
08:16 - what kind of pick a random number and
08:20 - okay hold on I'm gonna pick a random
08:22 - number R is a random number between 0
08:24 - and 1 and I'm gonna say is are greater
08:28 - than 0.5 if it is give me a 2 otherwise
08:34 - give me a 4 I think and I don't know if
08:37 - this should be in parentheses or not I
08:39 - don't think I need it so this is a nice
08:41 - little way of just giving me based on
08:43 - whether R is greater than 0.5 give me a
08:45 - 2 or a 4 I've got a written in their
08:47 - statement but everybody
08:48 - Wayans when I don't use the ternary
08:49 - operator so I'm gonna try using it and
08:51 - who knows if I got it right so let's in
08:54 - setup I'm going to say console dot log
08:56 - table I'm gonna say add number add
09:01 - number and console dot table grid
09:06 - console table is a really nice way to
09:11 - display a array in the browser in the
09:17 - end of JavaScript console in the browser
09:18 - so let me do this so I look at that look
09:21 - at that let's do it again
09:23 - 2 & 2 2 & 2 all right so in a way like
09:28 - almost 100 just do this the entire thing
09:31 - in the console and not draw anything
09:33 - because I could just do the whole thing
09:34 - in the console and play the game but I
09:36 - think it's gonna be much easier if I can
09:37 - represent what we're seeing in the
09:39 - console in the canvas so let's put that
09:42 - into draw so here I'm gonna this is my
09:46 - nested loop that I'm going to be using
09:48 - constantly and I am going to first draw
09:53 - a rectangle and I guess though the size
09:57 - is always going to be the width divided
09:58 - by 4 you know I think I can probably for
10:02 - right now just say it's a hundred like I
10:04 - can hard code a lot of stuff cuz it's
10:05 - 400 by 400 refactor later and so I'm
10:09 - gonna draw a rectangle at I x WJ x w w w
10:14 - and I'm gonna say no fill stroke weight
10:21 - to stroke zero and let's make the
10:26 - background 255 and I should see a nice
10:31 - grid now there we go I've got my nice
10:36 - grid now what I should do and this is
10:39 - almost like too big I don't need that
10:41 - much space okay now and I'm gonna move
10:43 - this over a little bit so I'm not
10:44 - staying in front of it so much I am
10:46 - going to now I should also say if grid I
10:51 - J is not equal to 0 I could draw the
10:55 - number there now let's just use the text
10:58 - function in P 5 so I'm gonna say
11:00 - text-align:center
11:02 - our text I want to draw the value so I
11:08 - should actually just let me get the
11:10 - value the value is grid I J and so I'm
11:17 - going to draw that value at x w- w / -
11:23 - that's kind of like the center J times W
11:27 - minus J divided by 2 W divided by 2
11:30 - what does that do and I'm gonna say text
11:34 - size 64 I don't know fill 0 no stroke
11:42 - this should be rendering it and I should
11:45 - I should just put this in its own
11:46 - function just to kind of like get out of
11:49 - here function draw grid and I'll call
11:54 - that in draw so let's see how this goes
11:58 - yeah that's not so horrible I've seen
12:00 - worse so let's - W divided by 4 about
12:05 - oops Oh what happened here J times oh
12:10 - wait oh wait does the text draw from
12:18 - let's see this so I'm seeing a 4 times
12:21 - Oh interestingly I am seeing things in
12:25 - the wrong differently than I'm seeing
12:27 - them here because the way that I'm
12:28 - treating columns and rows and I think
12:30 - I'm drawing stuff above so it actually
12:34 - should be J times W plus W divided by 2
12:45 - why do I sometimes get one thing
12:49 - text-align text-align:center Center
12:52 - that's what I meant to do thank you
12:54 - text-align:center Center there we go
12:58 - I knew those that's what I wanted to do
13:00 - but why am i sometimes getting only one
13:03 - number hold on let's say I let's
13:10 - actually draw the let's draw the
13:14 - coordinates
13:17 - look at me
13:19 - I have everything shifted over wrong
13:21 - that's clearly the problem so my ex
13:24 - location is I times I times W minus plus
13:31 - what am i do the minus four it's a plus
13:33 - I lost my mind
13:34 - oh what a terrible error that's much
13:36 - better sorry you had to sit through that
13:40 - so now it's fine and now I can put the
13:44 - value there there we go so now this
13:47 - should work this is my opening board no
13:49 - matter what whoo okay we're getting
13:52 - there
13:53 - 20:48 here we come so now what's the
13:56 - deal I'm just gonna say for right now
14:00 - whenever I hit the spacebar
14:02 - I'm gonna send everything to the right
14:05 - okay so let's think about this there's
14:07 - if I have an array of numbers there's so
14:11 - many different ways you could approach
14:12 - this problem when I'm sure I'm not going
14:13 - to do it in the most efficient or
14:15 - sensical way but the first thing that I
14:17 - would do like let's say let's say this
14:20 - is the row the first thing that I would
14:23 - do is just pack everything to the right
14:29 - so that any empty spots would be left on
14:32 - the left side so let's first do that so
14:35 - that's let's write a function called
14:37 - slide and I'm gonna give it an argument
14:41 - a row now I know that I probably am
14:43 - mixing up my rows and columns have to
14:45 - figure that out later but I'm going to
14:47 - assume row it's just a single array and
14:49 - what I want to do is I want to look
14:51 - through I'm gonna take that row and I
14:54 - want to filter out I could use filter to
14:58 - I mean it's sort of silly I just want to
15:01 - move everything over if it's not a zero
15:02 - so let's try using let's let's try using
15:04 - some array functions I'm gonna say row
15:07 - equals I'm gonna want to return I'm
15:11 - gonna so I'm gonna we're going to return
15:14 - an array so array equals Rho dot filter
15:21 - so this is actually going to keep
15:23 - everything that is not a zero in the
15:27 - same order this is kind of crazy but
15:29 - filter
15:29 - is a function that takes any value and
15:32 - let me just and that and that because
15:35 - there's a true or false test just
15:37 - seriously then I'm gonna say return
15:38 - array so first I'm just gonna oh no
15:43 - don't and then what I need to do is I
15:45 - need to say I need to add two I need to
15:49 - add however many so whatever many their
15:51 - rates are like the missing is all I
15:55 - could just sort no I can't sort it
15:58 - missing equals 4 minus array dot length
16:02 - and I'm just going to I'm gonna say let
16:10 - zeros equal an array of missing size
16:17 - filled with zeros and then I should be
16:21 - able to just say array dot put now what
16:26 - how do you put something on the front of
16:27 - the array push would go on the back
16:30 - which maybe is fine because I could be
16:33 - sliding that other way just be sliding
16:35 - the other way so I'm gonna say push the
16:38 - zeros and then return the array let's
16:43 - let me just test this function out right
16:45 - so the idea here let me get rid of this
16:49 - console this console dot table stuff
16:54 - where is that yeah I don't need that
16:58 - anymore so let's say I haven't or let's
17:01 - say I want to say slide and my array is
17:03 - zero zero two four okay so push doesn't
17:10 - do that it doesn't push I use can cat
17:13 - maybe can cat
17:15 - where's I slide array can cat zeros no
17:23 - oh it makes a new array it makes a new
17:27 - array okay so I need to say array equals
17:30 - array can cat zeros okay there we go now
17:34 - let's take a look at this let's get out
17:36 - of here
17:37 - go back to here there we go
17:40 - it's slide
17:42 - everything to the left yeah and let's
17:45 - just try some other things slide 4 0 2 4
17:55 - 4 2 oh yes that's good everything's
17:57 - going that way which is fine I don't
17:58 - care which direction that's fine with me
18:00 - so now I should say every time I press a
18:08 - key
18:09 - I'm just can use the spacebar right now
18:11 - if key key equals space what I want to
18:16 - do is loop over loop over the grid and
18:23 - say grid index I equals slide grid index
18:28 - I right so this is sliding them over for
18:32 - each one oh they're going up so that's
18:38 - great so after I do that right each time
18:41 - after each time I play play the game
18:44 - like this is one this is one move so to
18:46 - speak then I should add a number again
18:49 - add another 2 or a 4 randomly great this
18:58 - appears to be doing what it's supposed
18:59 - to be doing be nice to have an animation
19:01 - but there is no animation now there's no
19:03 - more room left that's fine ok ok all
19:06 - right so now I need to combine so just
19:09 - like I have this slide function now I
19:12 - need a combined function so assuming
19:19 - that I've slid everything one way or the
19:21 - other what I need to do is if there are
19:27 - two that match starting from the back
19:30 - they should be combined into one number
19:32 - all right I know this is where I ran
19:36 - into a problem before someone's I'm
19:38 - gonna need somebody who vodka goes live
19:39 - to help me oh if nothing moves no tiles
19:43 - should be added ok ok I gotta get to
19:46 - that later yes so that's a part of the
19:47 - game we don't if if you're done if
19:50 - nothing can move you can't add another
19:51 - tile but I will I will
19:52 - I remind me I need to fix that I need to
19:55 - fix that
19:56 - so let's do combine so if I have a row
19:59 - what I want to do kind of use reduce
20:03 - filter then I could loop through it for
20:06 - sure so let's let me try doing this very
20:08 - manually right now let me loop from the
20:13 - back right let me loop from the back all
20:20 - the way down and first I want to say and
20:25 - I actually just want to go to here
20:27 - because I want to say a is the this one
20:34 - right the current one that I'm at like
20:37 - the last one and B is row I minus one
20:44 - and if a equals B then row I should
20:52 - equal a plus B and row I minus 1 should
20:56 - equal 0
20:58 - and then I shouldn't do any more so I'm
21:01 - going to say break so this is again I'm
21:06 - gonna need to do more but this and this
21:08 - probably way for me to write this
21:09 - shorter but I'm just gonna go from the
21:11 - back and check the last two like I'm
21:14 - gonna check so if this is so we fit got
21:19 - but I've already slid everything so if
21:21 - it's like this I'm gonna check this one
21:23 - versus this one if they're the same this
21:25 - becomes 0 and this becomes 4 now if this
21:30 - were here I still have to do more I've
21:32 - got a slide again but let's see here now
21:38 - I should be able to now I should say
21:44 - where I want to slide the grid oh and so
21:48 - hold on oh I'm actually operating on the
21:52 - row itself so in this case I don't need
21:58 - to I'm up this is a little bit this is a
22:00 - little awkward I'm making a new array to
22:02 - send back and here I'm operating on that
22:04 - array so this is a bit awkward but I'm
22:05 - just going to remember that so I'm just
22:08 - gonna write a comments operating
22:10 - arrey itself making new array and so now
22:17 - I'm gonna say after I slide I'm gonna
22:20 - combine so I'm gonna combine let's see
22:24 - if this works okay I forget what I just
22:28 - press spacebar and everything goes up oh
22:30 - boy
22:31 - error error cannot read properties zero
22:33 - of undefined at add number sketchy-ass
22:36 - line 20 sketch touch a s line 20 if grid
22:43 - o had number oh oh I messed up something
22:47 - Oh
22:49 - because silly me silly me if I am not
22:56 - returning her this is terrible
22:58 - so let me actually just say return the
23:03 - row even though it's the same array I
23:04 - can return a reference to itself and
23:06 - that's going to fix it now here's the
23:10 - thing this is I don't think this is
23:12 - working so those two should combine to
23:18 - be a four they're not at the moment and
23:20 - something weird is going on so let me
23:21 - look at my code again all right let me
23:24 - be try to let me try to be smart about
23:25 - this here and let's try to do some work
23:27 - in the console so if I say combined 0 4
23:32 - 2 2 that's right 0 4 2 2 those two get
23:39 - combined now I need to slide that slide
23:42 - zero four zero four and that's lid the
23:48 - other way so I'm combining the opposite
23:51 - way that I'm sliding which is definitely
23:53 - a problem
23:55 - so maybe what I should do is just slide
23:59 - the other way around which would be let
24:07 - me think about this I could just reverse
24:09 - it right but that's probably a bad idea
24:14 - what I should just do is right I could
24:19 - no no no I can just say zeros
24:23 - cat array right I could just put the
24:28 - zeros on the other side yeah that should
24:30 - do it
24:30 - right so now if I say combine zero four
24:33 - two two zero four zero four then slide
24:36 - zero zero four four okay this seems
24:39 - right now so now hit spacebar eight yep
24:44 - they've slid down to four two two two
24:49 - four yep yep okay this is working now
24:55 - okay now I'm sure there's going to be
24:57 - lots of scenarios that aren't correct so
24:59 - what I need to do also is after I
25:02 - combine where we need to slide again
25:08 - right because and so really what I what
25:12 - I kind of want is I need a I operate row
25:19 - row equals operate on the row so let me
25:23 - make this one function where I get an
25:28 - array and I say row equals slide row
25:37 - equals combined row equals slide and
25:40 - then return row so I just want to do
25:43 - this in a function I'm in some ways this
25:46 - is kind of silly and what I'm doing here
25:47 - but I just want this to be a separate
25:49 - function so I can call it myself
25:52 - so now up sketched out 48 returned I
25:56 - forgot my R okay so now what I want to
25:59 - do is I want to say operate on zero zero
26:04 - two two that should now be zero zero
26:07 - zero four operate is not defined I
26:12 - didn't refresh I is not defined Oh silly
26:17 - me these are no longer grid index I
26:24 - these are row okay we're we're moving
26:27 - along here operate all right that's good
26:31 - okay operate that's right
26:35 - now here's what's going to be wrong
26:38 - right this now should be zero zero four
26:44 - four is that correct so I need to do it
26:47 - one more time
26:49 - but I need to be careful because this
26:55 - should not go to eight so how do I
26:59 - consider those two as different
27:01 - scenarios I mean certainly right if I
27:06 - just run this again it can only happen
27:09 - twice because there's only four spots
27:11 - but this isn't going to be correct
27:13 - because like this oh I didn't did i
27:20 - refresh this gave me the correct
27:25 - response but this is going to give me
27:29 - the incorrect this should be zero to
27:30 - four this would be zero two four four
27:35 - and I got zero two zero eight because
27:38 - the four and the four combined so I
27:40 - suppose what I could do is the second
27:44 - time I do combine alright the second
27:47 - time I do combine I could start from the
27:50 - second-to-last spot right just start
27:53 - from the second-to-last spot or do
27:58 - combine twice before sliding that's an
28:01 - interesting idea
28:02 - well this actually do the trick so let's
28:06 - say operate two four two two zero two
28:11 - four four that is correct
28:13 - Oh interesting
28:17 - can anybody let me think of I think that
28:19 - actually worked
28:20 - are there any other scenarios that
28:22 - wouldn't work like operate zero two two
28:28 - four let's try this one this should be
28:35 - zero zero zero four ah
28:37 - that's not right oh is that or is this
28:39 - correct this is this wouldn't work right
28:43 - this should give me zero zero four four
28:44 - right it is zero zero four four
28:47 - so the
28:49 - Raik so actually am I just being silly
29:00 - and I just need to do combined once but
29:01 - get rid of the break and so let me think
29:05 - about this look it's a look at the
29:06 - combine if I get rid of the break ah so
29:13 - I think here's what I could do so let's
29:16 - let's say I have this is the case that's
29:20 - a little bit weird
29:21 - I have zero for two - if I do this and
29:34 - now try to combine again and then slide
29:38 - these won't go together but and if I do
29:43 - this then I this should give me zero
29:54 - four zero four and then slide they will
29:56 - go together so I think I'm thinking this
29:59 - through I think that I can actually I
30:02 - knew it'd get rid of the break and just
30:08 - come back all combined once and call
30:10 - slide again after that's correct that's
30:18 - correct
30:20 - well is another one of my scenarios and
30:23 - that is correct
30:29 - the break is so silly I thought I was
30:31 - being smart by getting out of there but
30:34 - actually I just need to combine
30:35 - everything and then slide everything ha
30:37 - ha ha okay wonderful I think we're just
30:41 - about kind of done right so now I need
30:45 - to whoops uh-oh what did I do
30:47 - rose not to find a key pressed oh yeah I
30:50 - messed something up
30:52 - where's that line 38 oh look at silly me
30:58 - these are grid index I and down here I'm
31:03 - passing it to RO so they're row here
31:05 - very silly thing that I've done here
31:07 - okay so now I hit space yep
31:13 - this to me is the behavior of the game
31:16 - now here's the thing yeah here's the
31:20 - thing
31:20 - I shouldn't be adding numbers if nothing
31:23 - moved so one thing I have to check is if
31:25 - anything moved so one thing that I might
31:28 - do is right here I might create what I
31:35 - what I think I'd like to do is let past
31:39 - equal copy grid so let me make a
31:43 - function copy grid we're past equals
31:53 - this is very silly but I'm just gonna do
31:56 - this past equals the new a new
32:03 - two-dimensional array and then our copy
32:06 - new no no grid extra I'm going to call
32:13 - it extra extra equals a new copy then
32:15 - I'm just going to for I'm going to use
32:18 - my nested loop which I have somewhere
32:21 - else I'm sure I could just you slice or
32:26 - something but I just don't have it
32:28 - within me right now why do 2048 extra i
32:33 - J equals grid I J okay so I'm just and
32:38 - then I'm gonna say return extra
32:40 - so that's just a total copy of the
32:42 - two-dimensional array so past so past is
32:46 - past is now a copy and now this is the
32:50 - new grid so I can check to see if
32:52 - anything changed so I can say changed
32:57 - equals compare copy and grid okay so I'm
33:02 - gonna write another function this is all
33:03 - very silly but called compare where I
33:06 - have two different matrices and I'm
33:12 - gonna say if a does not equal to be
33:21 - returned something changed return true
33:25 - so true means something change I'm gonna
33:27 - check every spot as soon as something's
33:29 - not equal something moved and then if I
33:32 - get all the way to the end I'll just
33:33 - return false so now I should only add a
33:40 - number if changed now add a number okay
33:45 - here we go oops
33:48 - so p5 doesn't like that I call it
33:50 - something copy so I'm gonna call this
33:52 - copy grid and I'm gonna do this so now I
33:59 - should be able to say whoops OOP cannot
34:03 - read property 0 under spine at compare
34:05 - sketch dot J's line 37 so a and B in
34:15 - compare oh and this is called this
34:20 - should be passed this is why shouldn't
34:23 - use the word copy this is passed that
34:26 - should be passed oh yeah no nothing's
34:30 - moving so I don't get a new number
34:33 - nothing's moving so I don't get a new
34:35 - number got a new number got a new number
34:38 - got a new number got a new number
34:41 - nothing's moving got any number all
34:43 - right
34:45 - so ends part 1 of 2048 where I have the
34:50 - entire game mechanic but only for going
34:52 - in one direction one direction I'm going
34:56 - to take a short break and have a part
34:58 - two to the 2048 challenge where I deal
35:01 - with the rotation of the matrix I and I
35:03 - hope you enjoy watching that part and
35:05 - then the game will be finished
35:10 - [Music]
35:15 - you

Cleaned transcript:

oh is that the coding train I see coming along the tracks oh I will when it's brought us today oh look it's the game 2048 so this is a much much requested and often not a not whatever the opposite of requests it is suggested that I don't attempt this Kody challenging many of you watching this are probably familiar with this game if you are not this game is a sliding block puzzle created by the developer Gabrielle cerulean in a weekend it became extraordinarily popular is now actually open source you could go and check out the code that is written in an excellent way I'm sure much better than whatever code that I'm going to write in this video this of course is a game that is a very similar to threes and another game 1024 so there's a lot of this game comes from a long line of sliding puzzle add numbers together I can't believe I'm still wearing this games so what am I doing here so I have attempted to make my own version of the game and I really what I've discovered in this process which I've already completed this and you could see how ugly mine is compared to this one is that objectoriented programming would really help me because one of the main things that's missing right now look at this not from here because look at this beautiful look at all these beautiful animations is I don't have any animations but I have the functionality of the game I even have some some little things in here that you could learn from perhaps I don't know so uh this is why I'm here this took like a long time and I had a lot of problems and I couldn't solve a whole bunch of things that you would think that I would be able to solve but I really had trouble with that and the coding challenge is apparently it's in something like 2048 parts so it's actually right now it's only in four parts if I come back and do the animation so I'm sure it'll be five parts if you can make it through all of these parts I will I don't know if I could somehow give you a medal I would that would be amazing but I would love to hear your feedback get your suggestions for improvements you can make your own version of this your own twist on this game and you could submit it at the coding training com instructions are there link in this video's description for how to do that so part 1 is pretty long parts two and three are kind of short and part four we don't speak we don't speak about the part four you don't speak about the part four so enjoy I hope to see you sometime again in the future I'm going to go take a trip on the coding train to the in the corner and wonder what I'm doing with my life train goodbye so what is the core let's let me first before I get started coding I really am very pessimistic about this let me try to talk through my understanding of how the game works and what kind of code stuff I might need all right so the game by definition is played on a four by four grid now again there are obviously variations of this this is not their their predecessors to 2048 of the same game with slightly different designs and flavors and ideas but the core idea of the 2048 game is four by four grid it starts I think with two random spots filled in with either a two or a four and then you can press a key right up left down obviously on a mobile or touch version you can swipe and you send all the votes so if I swipe to the right I send all the values this way so the two and the four would end up here then maybe a new value pops in if a two pops in here and I swipe to the right again numbers that are the same will combine so these twos will combine into a four and so let's go back and look at that and we can kind of see let's see that happening here right as I press down nothing happens I press to the left everything goes the left of four moves to the left at two uh let me move that to up and then let me move that over those two six teens will combine and those two twos will combine and these two twos will combine there we go not give you down so you get the idea so what do I need well actually interestingly enough all I need to figure out if I have basically four you know I have a matrix a twodimensional array but it's really just an array of arrays and I did too many of it so if I have four if I can figure out how to just condense things to one direction one direction then I don't know any one direction songs otherwise I would started like singing as a joke but I don't actually know the name one direction anyway I'm more of like a ninety eight to greet 98 degrees I don't even remember whatever was in the like 1940s when I was a teenager okay so yes 2048 if I can just get them figure out how to do it in one direction then if the user or the player presses up I could kind of just rotate the whole thing and go in that direction so so let's let's see if we can figure this out it alright so let's start writing some code I'm going to say I'm gonna have a variable called grid and guess what I'm just gonna hardcoded I feel okay with that do you feel okay with that obviously what is it it's going to start as it needs it's basically this right I need to have four arrays of zeros and let's see if yeah there we go this is that's the book 2048 board I could try to say like new array and fill and math and all that stuff all these like but this is gonna work there we go so now what do I need to do first the first thing that I need to do is for each is unless write a function to do this is add add num add I don't know what's add spot I don't know how to call this add number so what the add number function should do is it should pick a random location that does not already that has a zero and it should add a two or a four there so what I'll do is so first I should check first I need to check is the whole board full of everything that's not is there are there any zero spots so let's make a list of all of the in all the possible spots that I can add so I'm gonna say I'm gonna make an array called options and now what I'm gonna do is how could I use to get the index values out I'm just gonna loop through it so I'm gonna use I and J I kind of have this idea that I'm gonna use all these fancy array functions you're just gonna loop through it I and J and I'm gonna say if grid I J equals 0 this is a valid spot options dot push and I'll just make a little array with I and J I and J in it oh maybe I'll make an object X I Y J ok so I'm going to put a little object in that array now what I'm going to do is once I'm done I'm going to say let spot equal a random option so if options length is greater than 0 then I can pick a spot and then I'm going to say grid spot dot X spot dot y spot dot y equals and I can I basically want to pick I don't want to pick a 2 or a 4 so I can use a ternary operator whoo I've gone totally nuts today which basically what a ternary operator does is it says what kind of pick a random number and okay hold on I'm gonna pick a random number R is a random number between 0 and 1 and I'm gonna say is are greater than 0.5 if it is give me a 2 otherwise give me a 4 I think and I don't know if this should be in parentheses or not I don't think I need it so this is a nice little way of just giving me based on whether R is greater than 0.5 give me a 2 or a 4 I've got a written in their statement but everybody Wayans when I don't use the ternary operator so I'm gonna try using it and who knows if I got it right so let's in setup I'm going to say console dot log table I'm gonna say add number add number and console dot table grid console table is a really nice way to display a array in the browser in the end of JavaScript console in the browser so let me do this so I look at that look at that let's do it again 2 & 2 2 & 2 all right so in a way like almost 100 just do this the entire thing in the console and not draw anything because I could just do the whole thing in the console and play the game but I think it's gonna be much easier if I can represent what we're seeing in the console in the canvas so let's put that into draw so here I'm gonna this is my nested loop that I'm going to be using constantly and I am going to first draw a rectangle and I guess though the size is always going to be the width divided by 4 you know I think I can probably for right now just say it's a hundred like I can hard code a lot of stuff cuz it's 400 by 400 refactor later and so I'm gonna draw a rectangle at I x WJ x w w w and I'm gonna say no fill stroke weight to stroke zero and let's make the background 255 and I should see a nice grid now there we go I've got my nice grid now what I should do and this is almost like too big I don't need that much space okay now and I'm gonna move this over a little bit so I'm not staying in front of it so much I am going to now I should also say if grid I J is not equal to 0 I could draw the number there now let's just use the text function in P 5 so I'm gonna say textaligncenter our text I want to draw the value so I should actually just let me get the value the value is grid I J and so I'm going to draw that value at x w w / that's kind of like the center J times W minus J divided by 2 W divided by 2 what does that do and I'm gonna say text size 64 I don't know fill 0 no stroke this should be rendering it and I should I should just put this in its own function just to kind of like get out of here function draw grid and I'll call that in draw so let's see how this goes yeah that's not so horrible I've seen worse so let's W divided by 4 about oops Oh what happened here J times oh wait oh wait does the text draw from let's see this so I'm seeing a 4 times Oh interestingly I am seeing things in the wrong differently than I'm seeing them here because the way that I'm treating columns and rows and I think I'm drawing stuff above so it actually should be J times W plus W divided by 2 why do I sometimes get one thing textalign textaligncenter Center that's what I meant to do thank you textaligncenter Center there we go I knew those that's what I wanted to do but why am i sometimes getting only one number hold on let's say I let's actually draw the let's draw the coordinates look at me I have everything shifted over wrong that's clearly the problem so my ex location is I times I times W minus plus what am i do the minus four it's a plus I lost my mind oh what a terrible error that's much better sorry you had to sit through that so now it's fine and now I can put the value there there we go so now this should work this is my opening board no matter what whoo okay we're getting there 2048 here we come so now what's the deal I'm just gonna say for right now whenever I hit the spacebar I'm gonna send everything to the right okay so let's think about this there's if I have an array of numbers there's so many different ways you could approach this problem when I'm sure I'm not going to do it in the most efficient or sensical way but the first thing that I would do like let's say let's say this is the row the first thing that I would do is just pack everything to the right so that any empty spots would be left on the left side so let's first do that so that's let's write a function called slide and I'm gonna give it an argument a row now I know that I probably am mixing up my rows and columns have to figure that out later but I'm going to assume row it's just a single array and what I want to do is I want to look through I'm gonna take that row and I want to filter out I could use filter to I mean it's sort of silly I just want to move everything over if it's not a zero so let's try using let's let's try using some array functions I'm gonna say row equals I'm gonna want to return I'm gonna so I'm gonna we're going to return an array so array equals Rho dot filter so this is actually going to keep everything that is not a zero in the same order this is kind of crazy but filter is a function that takes any value and let me just and that and that because there's a true or false test just seriously then I'm gonna say return array so first I'm just gonna oh no don't and then what I need to do is I need to say I need to add two I need to add however many so whatever many their rates are like the missing is all I could just sort no I can't sort it missing equals 4 minus array dot length and I'm just going to I'm gonna say let zeros equal an array of missing size filled with zeros and then I should be able to just say array dot put now what how do you put something on the front of the array push would go on the back which maybe is fine because I could be sliding that other way just be sliding the other way so I'm gonna say push the zeros and then return the array let's let me just test this function out right so the idea here let me get rid of this console this console dot table stuff where is that yeah I don't need that anymore so let's say I haven't or let's say I want to say slide and my array is zero zero two four okay so push doesn't do that it doesn't push I use can cat maybe can cat where's I slide array can cat zeros no oh it makes a new array it makes a new array okay so I need to say array equals array can cat zeros okay there we go now let's take a look at this let's get out of here go back to here there we go it's slide everything to the left yeah and let's just try some other things slide 4 0 2 4 4 2 oh yes that's good everything's going that way which is fine I don't care which direction that's fine with me so now I should say every time I press a key I'm just can use the spacebar right now if key key equals space what I want to do is loop over loop over the grid and say grid index I equals slide grid index I right so this is sliding them over for each one oh they're going up so that's great so after I do that right each time after each time I play play the game like this is one this is one move so to speak then I should add a number again add another 2 or a 4 randomly great this appears to be doing what it's supposed to be doing be nice to have an animation but there is no animation now there's no more room left that's fine ok ok all right so now I need to combine so just like I have this slide function now I need a combined function so assuming that I've slid everything one way or the other what I need to do is if there are two that match starting from the back they should be combined into one number all right I know this is where I ran into a problem before someone's I'm gonna need somebody who vodka goes live to help me oh if nothing moves no tiles should be added ok ok I gotta get to that later yes so that's a part of the game we don't if if you're done if nothing can move you can't add another tile but I will I will I remind me I need to fix that I need to fix that so let's do combine so if I have a row what I want to do kind of use reduce filter then I could loop through it for sure so let's let me try doing this very manually right now let me loop from the back right let me loop from the back all the way down and first I want to say and I actually just want to go to here because I want to say a is the this one right the current one that I'm at like the last one and B is row I minus one and if a equals B then row I should equal a plus B and row I minus 1 should equal 0 and then I shouldn't do any more so I'm going to say break so this is again I'm gonna need to do more but this and this probably way for me to write this shorter but I'm just gonna go from the back and check the last two like I'm gonna check so if this is so we fit got but I've already slid everything so if it's like this I'm gonna check this one versus this one if they're the same this becomes 0 and this becomes 4 now if this were here I still have to do more I've got a slide again but let's see here now I should be able to now I should say where I want to slide the grid oh and so hold on oh I'm actually operating on the row itself so in this case I don't need to I'm up this is a little bit this is a little awkward I'm making a new array to send back and here I'm operating on that array so this is a bit awkward but I'm just going to remember that so I'm just gonna write a comments operating arrey itself making new array and so now I'm gonna say after I slide I'm gonna combine so I'm gonna combine let's see if this works okay I forget what I just press spacebar and everything goes up oh boy error error cannot read properties zero of undefined at add number sketchyass line 20 sketch touch a s line 20 if grid o had number oh oh I messed up something Oh because silly me silly me if I am not returning her this is terrible so let me actually just say return the row even though it's the same array I can return a reference to itself and that's going to fix it now here's the thing this is I don't think this is working so those two should combine to be a four they're not at the moment and something weird is going on so let me look at my code again all right let me be try to let me try to be smart about this here and let's try to do some work in the console so if I say combined 0 4 2 2 that's right 0 4 2 2 those two get combined now I need to slide that slide zero four zero four and that's lid the other way so I'm combining the opposite way that I'm sliding which is definitely a problem so maybe what I should do is just slide the other way around which would be let me think about this I could just reverse it right but that's probably a bad idea what I should just do is right I could no no no I can just say zeros cat array right I could just put the zeros on the other side yeah that should do it right so now if I say combine zero four two two zero four zero four then slide zero zero four four okay this seems right now so now hit spacebar eight yep they've slid down to four two two two four yep yep okay this is working now okay now I'm sure there's going to be lots of scenarios that aren't correct so what I need to do also is after I combine where we need to slide again right because and so really what I what I kind of want is I need a I operate row row equals operate on the row so let me make this one function where I get an array and I say row equals slide row equals combined row equals slide and then return row so I just want to do this in a function I'm in some ways this is kind of silly and what I'm doing here but I just want this to be a separate function so I can call it myself so now up sketched out 48 returned I forgot my R okay so now what I want to do is I want to say operate on zero zero two two that should now be zero zero zero four operate is not defined I didn't refresh I is not defined Oh silly me these are no longer grid index I these are row okay we're we're moving along here operate all right that's good okay operate that's right now here's what's going to be wrong right this now should be zero zero four four is that correct so I need to do it one more time but I need to be careful because this should not go to eight so how do I consider those two as different scenarios I mean certainly right if I just run this again it can only happen twice because there's only four spots but this isn't going to be correct because like this oh I didn't did i refresh this gave me the correct response but this is going to give me the incorrect this should be zero to four this would be zero two four four and I got zero two zero eight because the four and the four combined so I suppose what I could do is the second time I do combine alright the second time I do combine I could start from the secondtolast spot right just start from the secondtolast spot or do combine twice before sliding that's an interesting idea well this actually do the trick so let's say operate two four two two zero two four four that is correct Oh interesting can anybody let me think of I think that actually worked are there any other scenarios that wouldn't work like operate zero two two four let's try this one this should be zero zero zero four ah that's not right oh is that or is this correct this is this wouldn't work right this should give me zero zero four four right it is zero zero four four so the Raik so actually am I just being silly and I just need to do combined once but get rid of the break and so let me think about this look it's a look at the combine if I get rid of the break ah so I think here's what I could do so let's let's say I have this is the case that's a little bit weird I have zero for two if I do this and now try to combine again and then slide these won't go together but and if I do this then I this should give me zero four zero four and then slide they will go together so I think I'm thinking this through I think that I can actually I knew it'd get rid of the break and just come back all combined once and call slide again after that's correct that's correct well is another one of my scenarios and that is correct the break is so silly I thought I was being smart by getting out of there but actually I just need to combine everything and then slide everything ha ha ha okay wonderful I think we're just about kind of done right so now I need to whoops uhoh what did I do rose not to find a key pressed oh yeah I messed something up where's that line 38 oh look at silly me these are grid index I and down here I'm passing it to RO so they're row here very silly thing that I've done here okay so now I hit space yep this to me is the behavior of the game now here's the thing yeah here's the thing I shouldn't be adding numbers if nothing moved so one thing I have to check is if anything moved so one thing that I might do is right here I might create what I what I think I'd like to do is let past equal copy grid so let me make a function copy grid we're past equals this is very silly but I'm just gonna do this past equals the new a new twodimensional array and then our copy new no no grid extra I'm going to call it extra extra equals a new copy then I'm just going to for I'm going to use my nested loop which I have somewhere else I'm sure I could just you slice or something but I just don't have it within me right now why do 2048 extra i J equals grid I J okay so I'm just and then I'm gonna say return extra so that's just a total copy of the twodimensional array so past so past is past is now a copy and now this is the new grid so I can check to see if anything changed so I can say changed equals compare copy and grid okay so I'm gonna write another function this is all very silly but called compare where I have two different matrices and I'm gonna say if a does not equal to be returned something changed return true so true means something change I'm gonna check every spot as soon as something's not equal something moved and then if I get all the way to the end I'll just return false so now I should only add a number if changed now add a number okay here we go oops so p5 doesn't like that I call it something copy so I'm gonna call this copy grid and I'm gonna do this so now I should be able to say whoops OOP cannot read property 0 under spine at compare sketch dot J's line 37 so a and B in compare oh and this is called this should be passed this is why shouldn't use the word copy this is passed that should be passed oh yeah no nothing's moving so I don't get a new number nothing's moving so I don't get a new number got a new number got a new number got a new number got a new number nothing's moving got any number all right so ends part 1 of 2048 where I have the entire game mechanic but only for going in one direction one direction I'm going to take a short break and have a part two to the 2048 challenge where I deal with the rotation of the matrix I and I hope you enjoy watching that part and then the game will be finished you
