With timestamps:

00:00 - hello welcome to another guest tutorial
00:01 - today we have for you Val head val is a
00:05 - web technologists she is the author of
00:07 - designing interface animation I highly
00:11 - recommend you check out her book and
00:12 - with Sara Dresner who you might have
00:14 - seen in another guest tutorial video she
00:17 - and Sarah traveled internationally to do
00:19 - workshops called learn web animation
00:21 - from the experts web animation workshops
00:24 - comm so you can check out the link to
00:26 - Val's book and web animation workshops
00:29 - we're tough in the video description
00:31 - look at this next workshop is in New
00:33 - York u December 8th that's tomorrow
00:35 - so if you're I don't know if you're
00:37 - probably kick travel back in time and
00:38 - fly to New York but check out here for
00:40 - their next location and hopefully want
00:41 - to check out their workshops so umm
00:43 - Val's going to show you how to make a
00:44 - nice little springy animation using p5
00:46 - GS which is a framework that I use in a
00:48 - lot of my videos and we were just
00:49 - talking about how a lot of times when
00:50 - people do is go and try to find this
00:52 - like complicated physics engine to do
00:53 - that but you can actually do it quite
00:54 - simply in a way that Val is going to
00:56 - show you how to do which is really
00:57 - exciting so we hope you enjoy the
00:59 - tutorial yes so hi everyone I'm Val head
01:02 - and in this little short tutorial I'm
01:05 - gonna show you how to make some really
01:06 - easy spring animations a lot of times if
01:09 - you wanted to create things maybe that
01:11 - looked like this or even like something
01:14 - that follows your mouse a little bit
01:15 - like that people will pull in like a
01:17 - whole physics engine or an entire
01:19 - library just to get a little bit of
01:21 - springiness to make it like real physics
01:22 - but i'm going to show you how to kind of
01:25 - fake the physics and make your own
01:27 - spring easing yourself in a very easy
01:29 - way and I'm going to show you this using
01:31 - p5.js so it'll be in canvas with
01:34 - JavaScript but really you can use this
01:36 - technique anywhere you kind of have
01:37 - access to like run a function every
01:39 - frame so you could do it in like regular
01:41 - JavaScript with a function running on
01:42 - requestanimationframe or any other
01:45 - programming language where you have a
01:46 - function running every frame because
01:48 - we're basically just going to update
01:49 - some math on every frame of the
01:51 - animation so right now to start out I
01:53 - have this little pink ball and it is
01:55 - following the X to the x position of my
01:58 - mouse so it's just following my mouse
02:00 - along the x position wherever it goes
02:02 - and it's kind of well boring because
02:05 - it's not doing any fun stuff like
02:06 - springing yet so to make it that happen
02:08 - right now we've just got a target of our
02:10 - mouse
02:10 - position which is the mouse x from p5.js
02:13 - and we're just saying like hey ball go
02:15 - use the position of our mouse for your x
02:18 - position so we're drawing the circle at
02:19 - you know the mouse position and 200 so
02:22 - it's just moving along that x axis but
02:24 - let's make this a little bit more
02:25 - springy so we have two values that we're
02:29 - going to use for the spring and they're
02:30 - just up here we've got one value for
02:32 - drag which is a value that needs to be
02:34 - less than one for it to work because
02:36 - we're going to take this away from the
02:38 - velocity of each frame so if it's one
02:40 - nothing gets taken away and if it's less
02:42 - than one a little bit gets taken away if
02:44 - it's like point zero one a whole ton
02:46 - gets taken away and that probably won't
02:48 - look good but we'll see that in a second
02:49 - and then we have this variable of
02:51 - strength which essentially represents
02:53 - the strength of our spring and that has
02:55 - to be very small or it doesn't have to
02:56 - be very small but it looks best when
02:57 - it's very small a good way to think
03:00 - about it actually if you are doing these
03:02 - sort of spring animations you can
03:04 - imagine the thing that you're animating
03:05 - is like attached to a fixed point with a
03:07 - spring kind of like this image from the
03:09 - wiki Commons right here where this
03:12 - rectangle is attached to something with
03:14 - a spring and when you pull it away it
03:16 - just kind of like oscillates back and
03:17 - forth until it eventually gets goes back
03:19 - to rest so a lot of the physics engines
03:22 - or if you want to get super physics see
03:24 - about it you might use something like
03:25 - Hookes law and know the spring constant
03:27 - but we're not gonna do any of that we're
03:29 - essentially going to create two forces
03:31 - one pulling the spring away from where
03:33 - it wants to be and some forces pulling
03:34 - it back as well so if you're into really
03:37 - exact physics sorry all right so back to
03:41 - our ball and we'll have our two
03:43 - variables for Dragon for strength so
03:45 - let's start actually using dragon
03:47 - strength while we calculate where our
03:49 - ball should be on any given frame so
03:51 - right now we have our position equals
03:53 - studying the position equal to Mouse X
03:55 - but I'm going to get rid of that so we
03:56 - can make it more interesting and we'll
03:58 - start calculating exactly the position
04:01 - the ball should be in kind of like the
04:02 - velocity it should have for each
04:04 - individual frame because you always want
04:06 - it to be heading towards the mouse
04:07 - position and then it'll get closer and
04:09 - closer and eventually rest there after
04:11 - springing around a little bit we don't
04:12 - want it to get there like right away we
04:14 - want it to be kind of a little bit
04:16 - behind where the mouse is so I'm going
04:18 - to start by creating a variable called
04:19 - force and this is going to be our target
04:22 - which is
04:24 - is - the position of where our ball is
04:27 - right now the idea being that this
04:30 - particular spring animation is based on
04:32 - the mouse position and when the mouse
04:33 - moves the ball is going to go there if
04:35 - the mouse moves really far we'll
04:37 - consider that stretching the spring
04:38 - really far and have it'll have a lot of
04:40 - force if we move the mouse only a little
04:42 - bit we're just stretching the spring a
04:43 - tiny little bit and we don't have as
04:45 - much force so that's kind of faking that
04:47 - sense of the the force that's pulling
04:50 - the spring apart or the action that's
04:51 - pulling the spring away from where it
04:53 - wants to be so we'll take our other
04:55 - force and we'll actually like
04:57 - x equal it to our strength so what we're
04:59 - essentially doing is saying our strength
05:00 - equals itself times the force what this
05:04 - is gonna do since our strength is a very
05:05 - small number it's gonna take a little
05:07 - bit away from the force which makes
05:09 - sense right if you're pulling the spring
05:10 - and the spring is a very strong rigid
05:12 - spring it's gonna take a lot more force
05:14 - to to pull it apart so we kind of faked
05:16 - that better the physics by multiplying
05:19 - the number of force which should be
05:20 - something somewhat large if our mouse
05:21 - moves far by a small number of our
05:24 - strength which was point one I believe
05:27 - so we'll multiply that by our strength
05:29 - and we have some strength there too so
05:31 - now we want to adjust the velocity of
05:33 - the ball because for each frame in that
05:36 - ball can have some velocity when it
05:38 - first starts out it'll be zero of course
05:39 - it hasn't moved at all but as soon as we
05:41 - move our mouse and the ball starts
05:42 - moving it'll have some existing velocity
05:45 - and we don't want to completely wipe
05:46 - that out so we'll use our velocity which
05:49 - is a variable we declared further up and
05:50 - we're going to times equal that to our
05:53 - drag so that's going to do a very
05:55 - similar thing to our force the velocity
05:57 - is how far the ball wants to go but drag
05:59 - is kind of taking away from that
06:01 - velocity can remember our drag is equal
06:04 - to 0.75 so whatever our velocity is
06:06 - we're taking away just 0.25 of it on
06:10 - every frame so it's getting slowed down
06:12 - a little bit on every frame then we'll
06:15 - take our velocity and we will add our
06:17 - force to it plus equals force
06:23 - and that's going to since the force is
06:26 - what's pulling it kind of a way are like
06:28 - lengthening this spring if you want to
06:29 - think of it that way
06:30 - I'm the velocity and force are working
06:32 - together in the same direction so we'll
06:33 - add that force on there after we've
06:35 - taken away the drag and then once we're
06:37 - done those simple multiplications and
06:39 - additions and totally fake physics we
06:42 - can set our position which is the x
06:44 - position rather of our ball to what
06:46 - we've just found out for velocities so
06:47 - our position is plus equals our velocity
06:49 - the idea being that for every frame our
06:52 - velocity is going to be some you know
06:53 - essentially positive amount or some
06:56 - amount that it makes the ball move
06:58 - further than it is right now or maybe
07:00 - the other way you know it might go in
07:01 - either direction but by adding the
07:03 - velocity the current position we just
07:05 - keep moving along in our spring whether
07:06 - it's left or right or however it is so
07:09 - then once we have that in our draw loop
07:12 - we're also drawing our circle like we
07:14 - saw before and we're drawing it at the
07:15 - position which is the thing we did all
07:18 - that kind of fake physics math for
07:20 - drawing it right there and at 200 pixels
07:22 - so if we save this and run it assuming I
07:25 - did everything right Oh run now we have
07:30 - a little bit of spring to our ball
07:32 - so it's following our mouse position
07:34 - only on the x axis but we have a spring
07:36 - just on that x axis as well of course
07:39 - this is a lot more fun when you do it on
07:41 - both the x and y axis which will you
07:44 - know give you something a little bit
07:45 - more like this and in this particular
07:46 - one I also did it with p5.js and I use
07:49 - vectors to do the x and y coordinates
07:51 - together at the same time because that's
07:53 - pretty fun to save that time but by
07:55 - doing it in both the x and y axis it's a
07:57 - lot more fun to show you a little bit
08:00 - how the drag and the strength factors
08:02 - work together I made this little pen so
08:04 - this is the one that we were just
08:05 - looking at with our drag factor of 0.75
08:07 - and our strength of 0.1 it's kind of you
08:10 - know soft springy if we raise that drag
08:13 - even more so we take less away from the
08:16 - velocity every time we get a very much
08:18 - more springy spring this one will make
08:22 - you dizzy if we increase the strength of
08:24 - our spring which is essentially like the
08:26 - spring being so rigid or just like made
08:28 - of really you know something that
08:29 - resists being pulled and we get a much
08:31 - more like staccato kind of spring with
08:35 - this little s
08:36 - with this little drag it looks kind of
08:39 - like we have blurred vision so mo you
08:41 - might take our drag down a little bit
08:42 - and this is just like a really subtle
08:44 - one so you can see even with just these
08:46 - two variables of like dragons strength
08:49 - you can create some very different
08:50 - Springs just with some simple
08:52 - multiplication it's not real physics
08:54 - it's not you know emulating any
08:56 - particular spring in the real world but
08:58 - it does look pretty springing and it's
09:00 - really responsive so why not some places
09:03 - is pretty good for we saw it as like a
09:05 - mouse chaser thing that's fun anything
09:07 - that's like scaling up and down on
09:09 - interaction this was a particular fun
09:11 - one to make that could be like a menu or
09:13 - something where you just have various
09:15 - thoughts bringing out of each other out
09:17 - of the same position there's a lot you
09:18 - can do with Springs and Springs don't
09:20 - have to be hard you can kind of invent
09:22 - them yourself just with a little bit of
09:23 - dragon strength multiplication so I hope
09:26 - you found that tutorial fun and it was
09:28 - really great to be on this channel with
09:30 - you
09:35 - [Music]
09:40 - you

Cleaned transcript:

hello welcome to another guest tutorial today we have for you Val head val is a web technologists she is the author of designing interface animation I highly recommend you check out her book and with Sara Dresner who you might have seen in another guest tutorial video she and Sarah traveled internationally to do workshops called learn web animation from the experts web animation workshops comm so you can check out the link to Val's book and web animation workshops we're tough in the video description look at this next workshop is in New York u December 8th that's tomorrow so if you're I don't know if you're probably kick travel back in time and fly to New York but check out here for their next location and hopefully want to check out their workshops so umm Val's going to show you how to make a nice little springy animation using p5 GS which is a framework that I use in a lot of my videos and we were just talking about how a lot of times when people do is go and try to find this like complicated physics engine to do that but you can actually do it quite simply in a way that Val is going to show you how to do which is really exciting so we hope you enjoy the tutorial yes so hi everyone I'm Val head and in this little short tutorial I'm gonna show you how to make some really easy spring animations a lot of times if you wanted to create things maybe that looked like this or even like something that follows your mouse a little bit like that people will pull in like a whole physics engine or an entire library just to get a little bit of springiness to make it like real physics but i'm going to show you how to kind of fake the physics and make your own spring easing yourself in a very easy way and I'm going to show you this using p5.js so it'll be in canvas with JavaScript but really you can use this technique anywhere you kind of have access to like run a function every frame so you could do it in like regular JavaScript with a function running on requestanimationframe or any other programming language where you have a function running every frame because we're basically just going to update some math on every frame of the animation so right now to start out I have this little pink ball and it is following the X to the x position of my mouse so it's just following my mouse along the x position wherever it goes and it's kind of well boring because it's not doing any fun stuff like springing yet so to make it that happen right now we've just got a target of our mouse position which is the mouse x from p5.js and we're just saying like hey ball go use the position of our mouse for your x position so we're drawing the circle at you know the mouse position and 200 so it's just moving along that x axis but let's make this a little bit more springy so we have two values that we're going to use for the spring and they're just up here we've got one value for drag which is a value that needs to be less than one for it to work because we're going to take this away from the velocity of each frame so if it's one nothing gets taken away and if it's less than one a little bit gets taken away if it's like point zero one a whole ton gets taken away and that probably won't look good but we'll see that in a second and then we have this variable of strength which essentially represents the strength of our spring and that has to be very small or it doesn't have to be very small but it looks best when it's very small a good way to think about it actually if you are doing these sort of spring animations you can imagine the thing that you're animating is like attached to a fixed point with a spring kind of like this image from the wiki Commons right here where this rectangle is attached to something with a spring and when you pull it away it just kind of like oscillates back and forth until it eventually gets goes back to rest so a lot of the physics engines or if you want to get super physics see about it you might use something like Hookes law and know the spring constant but we're not gonna do any of that we're essentially going to create two forces one pulling the spring away from where it wants to be and some forces pulling it back as well so if you're into really exact physics sorry all right so back to our ball and we'll have our two variables for Dragon for strength so let's start actually using dragon strength while we calculate where our ball should be on any given frame so right now we have our position equals studying the position equal to Mouse X but I'm going to get rid of that so we can make it more interesting and we'll start calculating exactly the position the ball should be in kind of like the velocity it should have for each individual frame because you always want it to be heading towards the mouse position and then it'll get closer and closer and eventually rest there after springing around a little bit we don't want it to get there like right away we want it to be kind of a little bit behind where the mouse is so I'm going to start by creating a variable called force and this is going to be our target which is is the position of where our ball is right now the idea being that this particular spring animation is based on the mouse position and when the mouse moves the ball is going to go there if the mouse moves really far we'll consider that stretching the spring really far and have it'll have a lot of force if we move the mouse only a little bit we're just stretching the spring a tiny little bit and we don't have as much force so that's kind of faking that sense of the the force that's pulling the spring apart or the action that's pulling the spring away from where it wants to be so we'll take our other force and we'll actually like x equal it to our strength so what we're essentially doing is saying our strength equals itself times the force what this is gonna do since our strength is a very small number it's gonna take a little bit away from the force which makes sense right if you're pulling the spring and the spring is a very strong rigid spring it's gonna take a lot more force to to pull it apart so we kind of faked that better the physics by multiplying the number of force which should be something somewhat large if our mouse moves far by a small number of our strength which was point one I believe so we'll multiply that by our strength and we have some strength there too so now we want to adjust the velocity of the ball because for each frame in that ball can have some velocity when it first starts out it'll be zero of course it hasn't moved at all but as soon as we move our mouse and the ball starts moving it'll have some existing velocity and we don't want to completely wipe that out so we'll use our velocity which is a variable we declared further up and we're going to times equal that to our drag so that's going to do a very similar thing to our force the velocity is how far the ball wants to go but drag is kind of taking away from that velocity can remember our drag is equal to 0.75 so whatever our velocity is we're taking away just 0.25 of it on every frame so it's getting slowed down a little bit on every frame then we'll take our velocity and we will add our force to it plus equals force and that's going to since the force is what's pulling it kind of a way are like lengthening this spring if you want to think of it that way I'm the velocity and force are working together in the same direction so we'll add that force on there after we've taken away the drag and then once we're done those simple multiplications and additions and totally fake physics we can set our position which is the x position rather of our ball to what we've just found out for velocities so our position is plus equals our velocity the idea being that for every frame our velocity is going to be some you know essentially positive amount or some amount that it makes the ball move further than it is right now or maybe the other way you know it might go in either direction but by adding the velocity the current position we just keep moving along in our spring whether it's left or right or however it is so then once we have that in our draw loop we're also drawing our circle like we saw before and we're drawing it at the position which is the thing we did all that kind of fake physics math for drawing it right there and at 200 pixels so if we save this and run it assuming I did everything right Oh run now we have a little bit of spring to our ball so it's following our mouse position only on the x axis but we have a spring just on that x axis as well of course this is a lot more fun when you do it on both the x and y axis which will you know give you something a little bit more like this and in this particular one I also did it with p5.js and I use vectors to do the x and y coordinates together at the same time because that's pretty fun to save that time but by doing it in both the x and y axis it's a lot more fun to show you a little bit how the drag and the strength factors work together I made this little pen so this is the one that we were just looking at with our drag factor of 0.75 and our strength of 0.1 it's kind of you know soft springy if we raise that drag even more so we take less away from the velocity every time we get a very much more springy spring this one will make you dizzy if we increase the strength of our spring which is essentially like the spring being so rigid or just like made of really you know something that resists being pulled and we get a much more like staccato kind of spring with this little s with this little drag it looks kind of like we have blurred vision so mo you might take our drag down a little bit and this is just like a really subtle one so you can see even with just these two variables of like dragons strength you can create some very different Springs just with some simple multiplication it's not real physics it's not you know emulating any particular spring in the real world but it does look pretty springing and it's really responsive so why not some places is pretty good for we saw it as like a mouse chaser thing that's fun anything that's like scaling up and down on interaction this was a particular fun one to make that could be like a menu or something where you just have various thoughts bringing out of each other out of the same position there's a lot you can do with Springs and Springs don't have to be hard you can kind of invent them yourself just with a little bit of dragon strength multiplication so I hope you found that tutorial fun and it was really great to be on this channel with you you
