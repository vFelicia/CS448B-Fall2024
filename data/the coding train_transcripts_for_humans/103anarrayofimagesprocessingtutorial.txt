With timestamps:

00:01 - Okay, so here we are again. In this video. I want to look, just talk about and look at the scenario
00:06 - where you have an array of images. You know, we've been looking at these little experiments where, "Hey, I load a...
00:12 - Some animal and I displayed it on the screen alright load a flower, and I just displayed it on the screen."
00:16 - What if I want to have a hundred different flower images or what if I want have a hundred different animal images?
00:21 - Certainly having a hundred different image variables isn't going to be that sustainable an array of course is the perfect scenario here and
00:28 - just as we have a you know in the same way that we have an integer called x
00:34 - We could have an array of integers
00:37 - You know called nums. We can have the same exact thing with a PImage so I can make a PImage array
00:47 - Here we have
00:52 - ten PImage object just in this array by just declaring the variable name the type using the square brackets and then
01:00 - Specifying the size of the array and we could use an array list and other things that we may or may not have seen
01:06 - in videos. That's what... Okay, so why would we want to do this? So there's several scenarios.
01:11 - One scenario is that we simply want... by way I made myself a little smaller here.
01:15 - I don't know if this is better, but one is that we might just want to do a slideshow.
01:18 - So if we have a whole lot of images, and we either want to show them in sequence
01:24 - automatically or every time the user clicks the mouse we go to the next image that might be something we want to do and
01:29 - this example is in Learning Processing and there will be a link to it below somewhere.
01:34 - Another thing we might actually want to do is draw an animation. Now looking at this you might think:
01:39 - "Okay, the point of doing animation in Processing is that we have an algorithm
01:43 - and I'm using variables in the sine-wave been doing this thing and all this kind of stuff to make shapes change
01:48 - color and grow and shrink and move and all that sort of stuff on the screen.
01:51 - But you know something that might happen to us for example if we look here
01:55 - These are just a whole lot of stick figure PNGs and each one of these is a frame of an animation sequence.
02:02 - Maybe you have you've done this in another environment and what you want to do is display that animation
02:07 - sequence back in Processing. So a way that you could do that is load an array of images and show them one at a time.
02:14 - Now this is kind of a sophisticated example which I will link to this one below and which involves a lot. Like, there's
02:20 - image sequence, there's a whole bunch of them on the screen, there's also, there's the actual sequence
02:24 - It's moving its x y position. Some of them are moving faster than others.
02:27 - So there's a lot of steps to creating this particular sequence.
02:31 - I do have some simpler ones which I will also point you to, but the scenario that I want to look at right now
02:36 - together, just to get get kind of used to the basics of using an array, is this one. So sorry..
02:42 - we gotta get back to our bubbles.
02:45 - And remember we have these nice bubbles on the screen, and what are they doing? They're floating to the top.
02:50 - This is what we had before only now instead of two bubble objects
02:55 - We now have an array of five bubble objects
02:57 - and I loaded an image of a flower so certainly I could do what we just did a moment ago, and
03:05 - Change from the ellipse to the flower and now I have these five flowers moving up, but if I look at the Data Folder here
03:13 - What I'll actually see is I have three flower images, and what if I want to...
03:19 - randomly each
03:20 - Object should display a different flower image. How would I do that so let's come back over here again.
03:26 - We know we have this image array
03:29 - so
03:31 - What we could do is say alright. There's ten images
03:34 - I can refer to any individual image by its index
03:39 - So one thing that I might do in setup first is simply load each
03:44 - individual image into a slot in that array
03:47 - So right, I have image 0 it should be flower 1, I have image 1 it should be flower 2, I have image 2 it
03:53 - should be flower 3. Certainly I think there's a flaw in the way
03:56 - I numbered those images and in fact even though that might be your instinct to say oh
04:00 - I have a bunch of images. Let me let me let me
04:03 - let me
04:05 - Name them one two and three.
04:07 - I think it would make a lot more sense, and I'm just going to change this here to be flower zero.
04:13 - flower 1 and flower 2. Just to emphasize that the way we count with an array is by
04:22 - starting from zero. Okay, so now I have my image my PImage flower. I'm going to make this flowers and
04:29 - I'm going to have three of them. Obviously you could do it with a lot more. Now flowers
04:35 - zero, I want to load image zero.
04:39 - flowers 1, I
04:41 - want to load image one and
04:44 - flowers 2, I want to load flower two. Now looking at this you might say to yourself
04:51 - "Down here we made all the bubbles we used a loop. i goes from 0 to the length of the bubbles.
04:57 - Let's make all the bubbles." Here something very similar is going on, but I load in each image individually.
05:03 - You know the way, the reason why I did that is I have a whole bunch of file names
05:07 - and I need to like manually type in those file names, but these file names also have a relationship. flower zero, flower one flower
05:12 - two, so actually there isn't any reason why I couldn't just say...
05:16 - for int i = 0; i < 3; i++ and
05:21 - really when I said three, I really mean the length of the array and then
05:26 - I could say flowers index i and this is kind of what I want to write right?
05:32 - I want to say
05:33 - for every flower, flower zero, flowers one flowers two, Load flower 0 flower 1.
05:39 - But this string is actually flower i .jpg, I don't have an image called flower i
05:44 - We're going to get into strings of data in some videos that are going to come later after I do these images one.
05:49 - But a trick that we can do with strings is I can actually say flower +
05:54 - i + jpeg. So what this is doing is it's saying: "Start with the string flower, f-l-o-w-e-r.
06:01 - Then take whatever the value of i is and tack it in with that, zero, one or two and then tack
06:06 - .jpg on to it. So when I run this okay
06:10 - Flower I need to call this flowers. I've loaded all the flowers, but we have an error.
06:15 - What did I say here? I said flower... flower now I have an array. So if I want to draw flowers 0.
06:24 - Now I have those flowers. If I want to draw it with flowers 1. Now
06:31 - I have those red flowers and now flowers two.
06:35 - Now I have those yellow flowers and you can see my aspect ratios are off.
06:39 - So this is something I would encourage you to figure out how to correct with this particular example.
06:44 - But what I want is...
06:46 - Some variable... some flowe... some bubbles to draw a flower zero, some bubbles to draw flower one, some bubbles to draw a flower two.
06:52 - How are we going to do that?
06:54 - We need each object to store a reference to its own image. Now in truth
07:00 - you might be thinking actually the object doesn't have to store a reference to its own image
07:04 - it just needs to store a reference to the index into the array. Right? The flower... if I'm a bubble object
07:10 - I just need to store a zero one or two and that will tell me which image to grab but I think a
07:15 - more scalable and more flexible... a solution that I want to demonstrate here is what if the object itself...
07:22 - somehow...
07:25 - gets its own
07:27 - image in the constructor, so when the object is made it stores a reference to that image
07:32 - And then we don't have to dig / go to any global variable down here.
07:36 - We just need to display that particular image. The question is how do we get the image here? Well...
07:42 - How did we get the x, how do we get the y, how do we get the diameter?
07:45 - We receive those as arguments to the constructor. We pass those in...
07:50 - We have made it up, so you know, I passed them 100 times plus
07:52 - i times 100 and 300 and then a random size; these are the pieces of data that I'm passing in to make each bubble. Now
07:59 - what I want to do is say...
08:00 - pass in
08:02 - flowers index
08:03 - 0
08:04 - Right so I want to just pass it one more piece of data in addition to the xy and the size I want to give
08:09 - it an image. So if I pass that image here, and I say
08:13 - PImage temp...
08:15 - tempImg, now I
08:18 - can assign that
08:22 - image to this particular bubble, and we're done. So the bubble in addition to storing
08:29 - variables that keep track of where it is on the screen also stores a variable about what image
08:33 - it's going to display and then it receives that image in the constructor and then uses that image to draw itself and now if we
08:39 - run this I
08:41 - have all the pink flowers, I'm going to change this value to 1...
08:45 - I have all the red flowers and to change this value to two and I have all the yellow flowers
08:51 - Let's do one more step here right. Now sometimes
08:55 - I want to pass in a zero, sometimes I wanna pass in a one. Sometimes I want to pass in a two.
08:59 - How could I make that decision I could use i. I could use random. Let's use random.
09:05 - Int index equals random between zero and three and really instead of three
09:11 - I want to zero between zero and the length of the array.
09:15 - So this is giving me a
09:18 - random value between
09:19 - zero and the length of the array.
09:20 - Converting it into an integer. If the length of that array is three I'm going to have a zero or a one or a two.
09:27 - Let's use that index here and
09:30 - now we can see when we run it each of our bubbles has a different file. We didn't get a red flower.
09:35 - That's so sad let's run this again.
09:38 - Now we got a red flower only one.
09:40 - But two yellow, two pink and one red. So we can see this is the power of using an array and you can start to
09:46 - imagine... Hmmm
09:48 - There's more to this here. Even though we're using an array.
09:51 - The object itself has a reference to its own image.
09:54 - So let's say, we're pulling images from Google image search some web service some API somewhere.
10:00 - We could have some other mechanism that grabs those images and passes them into objects to use for its own internal display.
10:07 - So this is a very powerful way of thinking through this problem of...
10:11 - Keeping of having kind of an engine that loads the images and the objects themselves then receiving those images as inputs.
10:18 - So you know there's various things you could try here you could think about what if you made each one of these an image sequence?
10:23 - That's kind of a difficult problem.
10:26 - You might just simply figure like try, try the same idea with your own images.
10:32 - I'm trying to think of other things you could add to
10:34 - this example which I can't think of. I don't know I'll write it somewhere. Somewhere brilliant someday sometime if I can. Okay,
10:41 - So this is it, now in the sense that this is not it at all.
10:44 - This is it for sort of like walking through the beginning, the basic
10:47 - first ideas of using images what we really want to get to which is what I'm going to start doing the next set of videos
10:52 - Is what if we don't just use images as things we draw out of the screen?
10:56 - What if we invent our own images through an algorithm. If we could set the pixels of every... if we could individually set the pixel...
11:03 - Every pixel in our Processing window. You know the world is our oyster.
11:06 - What could we not possibly draw, anything if we have access to every single pixel on the screen.
11:10 - So that's what I want to start looking at next. Okay.
11:13 - Goodbye

Cleaned transcript:

Okay, so here we are again. In this video. I want to look, just talk about and look at the scenario where you have an array of images. You know, we've been looking at these little experiments where, "Hey, I load a... Some animal and I displayed it on the screen alright load a flower, and I just displayed it on the screen." What if I want to have a hundred different flower images or what if I want have a hundred different animal images? Certainly having a hundred different image variables isn't going to be that sustainable an array of course is the perfect scenario here and just as we have a you know in the same way that we have an integer called x We could have an array of integers You know called nums. We can have the same exact thing with a PImage so I can make a PImage array Here we have ten PImage object just in this array by just declaring the variable name the type using the square brackets and then Specifying the size of the array and we could use an array list and other things that we may or may not have seen in videos. That's what... Okay, so why would we want to do this? So there's several scenarios. One scenario is that we simply want... by way I made myself a little smaller here. I don't know if this is better, but one is that we might just want to do a slideshow. So if we have a whole lot of images, and we either want to show them in sequence automatically or every time the user clicks the mouse we go to the next image that might be something we want to do and this example is in Learning Processing and there will be a link to it below somewhere. Another thing we might actually want to do is draw an animation. Now looking at this you might think "Okay, the point of doing animation in Processing is that we have an algorithm and I'm using variables in the sinewave been doing this thing and all this kind of stuff to make shapes change color and grow and shrink and move and all that sort of stuff on the screen. But you know something that might happen to us for example if we look here These are just a whole lot of stick figure PNGs and each one of these is a frame of an animation sequence. Maybe you have you've done this in another environment and what you want to do is display that animation sequence back in Processing. So a way that you could do that is load an array of images and show them one at a time. Now this is kind of a sophisticated example which I will link to this one below and which involves a lot. Like, there's image sequence, there's a whole bunch of them on the screen, there's also, there's the actual sequence It's moving its x y position. Some of them are moving faster than others. So there's a lot of steps to creating this particular sequence. I do have some simpler ones which I will also point you to, but the scenario that I want to look at right now together, just to get get kind of used to the basics of using an array, is this one. So sorry.. we gotta get back to our bubbles. And remember we have these nice bubbles on the screen, and what are they doing? They're floating to the top. This is what we had before only now instead of two bubble objects We now have an array of five bubble objects and I loaded an image of a flower so certainly I could do what we just did a moment ago, and Change from the ellipse to the flower and now I have these five flowers moving up, but if I look at the Data Folder here What I'll actually see is I have three flower images, and what if I want to... randomly each Object should display a different flower image. How would I do that so let's come back over here again. We know we have this image array so What we could do is say alright. There's ten images I can refer to any individual image by its index So one thing that I might do in setup first is simply load each individual image into a slot in that array So right, I have image 0 it should be flower 1, I have image 1 it should be flower 2, I have image 2 it should be flower 3. Certainly I think there's a flaw in the way I numbered those images and in fact even though that might be your instinct to say oh I have a bunch of images. Let me let me let me let me Name them one two and three. I think it would make a lot more sense, and I'm just going to change this here to be flower zero. flower 1 and flower 2. Just to emphasize that the way we count with an array is by starting from zero. Okay, so now I have my image my PImage flower. I'm going to make this flowers and I'm going to have three of them. Obviously you could do it with a lot more. Now flowers zero, I want to load image zero. flowers 1, I want to load image one and flowers 2, I want to load flower two. Now looking at this you might say to yourself "Down here we made all the bubbles we used a loop. i goes from 0 to the length of the bubbles. Let's make all the bubbles." Here something very similar is going on, but I load in each image individually. You know the way, the reason why I did that is I have a whole bunch of file names and I need to like manually type in those file names, but these file names also have a relationship. flower zero, flower one flower two, so actually there isn't any reason why I couldn't just say... for int i = 0; i < 3; i++ and really when I said three, I really mean the length of the array and then I could say flowers index i and this is kind of what I want to write right? I want to say for every flower, flower zero, flowers one flowers two, Load flower 0 flower 1. But this string is actually flower i .jpg, I don't have an image called flower i We're going to get into strings of data in some videos that are going to come later after I do these images one. But a trick that we can do with strings is I can actually say flower + i + jpeg. So what this is doing is it's saying "Start with the string flower, flower. Then take whatever the value of i is and tack it in with that, zero, one or two and then tack .jpg on to it. So when I run this okay Flower I need to call this flowers. I've loaded all the flowers, but we have an error. What did I say here? I said flower... flower now I have an array. So if I want to draw flowers 0. Now I have those flowers. If I want to draw it with flowers 1. Now I have those red flowers and now flowers two. Now I have those yellow flowers and you can see my aspect ratios are off. So this is something I would encourage you to figure out how to correct with this particular example. But what I want is... Some variable... some flowe... some bubbles to draw a flower zero, some bubbles to draw flower one, some bubbles to draw a flower two. How are we going to do that? We need each object to store a reference to its own image. Now in truth you might be thinking actually the object doesn't have to store a reference to its own image it just needs to store a reference to the index into the array. Right? The flower... if I'm a bubble object I just need to store a zero one or two and that will tell me which image to grab but I think a more scalable and more flexible... a solution that I want to demonstrate here is what if the object itself... somehow... gets its own image in the constructor, so when the object is made it stores a reference to that image And then we don't have to dig / go to any global variable down here. We just need to display that particular image. The question is how do we get the image here? Well... How did we get the x, how do we get the y, how do we get the diameter? We receive those as arguments to the constructor. We pass those in... We have made it up, so you know, I passed them 100 times plus i times 100 and 300 and then a random size; these are the pieces of data that I'm passing in to make each bubble. Now what I want to do is say... pass in flowers index 0 Right so I want to just pass it one more piece of data in addition to the xy and the size I want to give it an image. So if I pass that image here, and I say PImage temp... tempImg, now I can assign that image to this particular bubble, and we're done. So the bubble in addition to storing variables that keep track of where it is on the screen also stores a variable about what image it's going to display and then it receives that image in the constructor and then uses that image to draw itself and now if we run this I have all the pink flowers, I'm going to change this value to 1... I have all the red flowers and to change this value to two and I have all the yellow flowers Let's do one more step here right. Now sometimes I want to pass in a zero, sometimes I wanna pass in a one. Sometimes I want to pass in a two. How could I make that decision I could use i. I could use random. Let's use random. Int index equals random between zero and three and really instead of three I want to zero between zero and the length of the array. So this is giving me a random value between zero and the length of the array. Converting it into an integer. If the length of that array is three I'm going to have a zero or a one or a two. Let's use that index here and now we can see when we run it each of our bubbles has a different file. We didn't get a red flower. That's so sad let's run this again. Now we got a red flower only one. But two yellow, two pink and one red. So we can see this is the power of using an array and you can start to imagine... Hmmm There's more to this here. Even though we're using an array. The object itself has a reference to its own image. So let's say, we're pulling images from Google image search some web service some API somewhere. We could have some other mechanism that grabs those images and passes them into objects to use for its own internal display. So this is a very powerful way of thinking through this problem of... Keeping of having kind of an engine that loads the images and the objects themselves then receiving those images as inputs. So you know there's various things you could try here you could think about what if you made each one of these an image sequence? That's kind of a difficult problem. You might just simply figure like try, try the same idea with your own images. I'm trying to think of other things you could add to this example which I can't think of. I don't know I'll write it somewhere. Somewhere brilliant someday sometime if I can. Okay, So this is it, now in the sense that this is not it at all. This is it for sort of like walking through the beginning, the basic first ideas of using images what we really want to get to which is what I'm going to start doing the next set of videos Is what if we don't just use images as things we draw out of the screen? What if we invent our own images through an algorithm. If we could set the pixels of every... if we could individually set the pixel... Every pixel in our Processing window. You know the world is our oyster. What could we not possibly draw, anything if we have access to every single pixel on the screen. So that's what I want to start looking at next. Okay. Goodbye
