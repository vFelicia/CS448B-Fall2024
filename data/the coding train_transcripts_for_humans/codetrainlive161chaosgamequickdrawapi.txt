With timestamps:

00:00 - [Music]
01:12 - okay okay okay okay okay now you can
01:19 - hear me right it's never a kodick train
01:26 - without I know I just got to wait till
01:28 - the chat like the other wait till the
01:31 - chat catches up and realizes that I am
01:33 - talking that you can hear me now ah
01:37 - still talking to himself no joke okay oh
01:40 - I just got to wait for this all right
01:42 - [Music]
01:46 - all right let's let's let's let's begin
01:50 - again hello good morning welcome my name
02:08 - is Dan and this is the coding train oh I
02:11 - said so many interesting and important
02:13 - and funny and elusive illuminating and
02:16 - exciting and magnificent things that I
02:19 - cannot possibly remember it's not a
02:23 - coding train if I don't start with my
02:26 - mic muted by accident every once in a
02:28 - while anyway so why am I here what's
02:31 - going on it's Monday I'm wearing a
02:34 - t-shirt this couldn't possibly be the
02:37 - coding train it's like cold outside I'm
02:41 - wearing the t-shirts see I had a whole
02:42 - thing
02:55 - good morning and welcome to a very
02:58 - special edition of the coding train on a
03:00 - Monday so it's been a while since I've
03:02 - been here I haven't done a live stream
03:04 - for several weeks now I was at this
03:07 - wonderful event that was really fun and
03:09 - exciting called thinker con I'm wearing
03:11 - the thinker con t-shirt and so I was not
03:15 - able to livestream on that Friday and
03:17 - then this past Friday it was a holiday
03:20 - here in the United States other what
03:21 - known as a Thanksgiving so I was not
03:24 - able to livestream on Friday and I just
03:27 - I just I felt the the the sort of need
03:35 - to put some ideas to typing onto screen
03:39 - to Internet
03:41 - so welcome so I'm here this by the way
03:44 - is actually live I noticed there was
03:48 - some confusion at the beginning of the
03:50 - chat before asking is this a premiere or
03:52 - is this live you can have something
03:59 - recorded that is premiered live that you
04:02 - can chat with or you could actually be
04:04 - live or I could be live but I'm actually
04:06 - 30 seconds in the past by the time you
04:10 - see it and then you could be watching
04:12 - this it's a point in the future I
04:13 - recorded there's so many possibilities
04:15 - that's so confusing but right now at
04:17 - this very moment I am live here and I am
04:20 - going to program some stuff so I'm
04:27 - checking out the chat so I'm not gonna
04:30 - be here for super long I will go back to
04:32 - my usual Friday schedule I do I am here
04:37 - though to talk about a few things for at
04:40 - least an hour let me open up a web
04:43 - browser and let me first go to something
04:51 - which I'm very excited about so you
04:53 - might have recently remember that I did
04:56 - a challenge a coding challenge where I
04:58 - attempted to create a logo interpreter
05:01 - logo being the programming language
05:04 - invented in 1967 where you can control
05:07 - this little turtle that moves around the
05:09 - screen and make graphics and I did my
05:11 - cruddy little version of it that I
05:14 - thought was my best attempt on my
05:16 - channel and then you the people created
05:21 - something unbelievable
05:23 - so I'm gonna go to github.com slash
05:26 - coding train slash logo so this is the
05:32 - no I'm not signed in but that's fine
05:34 - this is the community version I'm gonna
05:38 - go here to contributors all of these
05:42 - people have contributed code to this
05:45 - version of the logo project and if I go
05:51 - here and click on this live web demo
05:57 - link I will be here and you'll see look
05:59 - at this okay there's like a design
06:05 - there's the actual syntax highlighting
06:09 - there's a little menu here where I can
06:12 - like pick look and it supports color it
06:15 - hexadecimal with repeat and syntax
06:17 - highlighting and I can look at these
06:18 - different I can look at these different
06:22 - things that are here and I could type my
06:25 - own look at this the coding train logo
06:27 - is here this is unbelievable I don't
06:29 - know what this this but does recenter oh
06:30 - that's crazy oh I can like move it
06:32 - around this is just unbelievable I know
06:42 - how to do all this stuff it's
06:43 - unbelievable to me so thank you everyone
06:45 - I'm really excited about the future
06:48 - possibilities of what we can do in this
06:50 - channel using this so so I will try to
06:54 - do this periodically where a particular
06:57 - coding challenge is put into a separate
07:00 - repository that people can contribute to
07:02 - I don't have difficulty managing all
07:05 - this stuff and I'm figuring out new and
07:08 - interesting ways of doing that for
07:09 - example and sometimes someone just
07:11 - emerges the tasteful toasty on github is
07:14 - now the
07:16 - has permissions to this repository to
07:18 - review and merge pull requests so that's
07:21 - really exciting I do also want to
07:22 - mention then though that if you go to
07:24 - the coding train comm and these are the
07:29 - two these are the two-part coding
07:30 - challenges that for any of these
07:32 - challenges you can also submit no you
07:36 - can also so in addition to contributing
07:37 - to maybe a community version if you've
07:40 - made your own version that's hosted
07:42 - somewhere on your own you can submit
07:45 - that as well so I don't know yeah you
07:47 - can see look at this here I think I
07:49 - showed these already but there is a 3d
07:51 - logo experiment that was submitted here
07:54 - which actually look at this this is
07:56 - amazing that submitted by Dave be soft
07:59 - calm which implements a version of logo
08:02 - where you can run it run it with a 3d
08:05 - render oh my goodness so so much amazing
08:08 - stuff ok so I wanted to mention that
08:13 - what else is coming coming so I am going
08:18 - to it is almost December and I am
08:21 - planning to do a holiday extravaganza
08:24 - but waiting mean I have no plan yet and
08:28 - that will be a fundraiser for the
08:30 - processing foundation so I just want to
08:31 - mention that you don't need to wait for
08:33 - the fundraiser processing foundation is
08:35 - a nun for-profit foundation in the
08:41 - United States that supports a variety of
08:45 - initiatives you can see all the
08:46 - information here on the website and if
08:49 - you go here to support you can find a
08:51 - way to support so I will do a fundraiser
08:52 - at some point for processing I think
08:54 - tomorrow is giving Tuesday so pre giving
08:58 - Tuesday announcement there you go ok so
09:02 - the next thing that I'm going to do is
09:05 - the chaos game
09:14 - okay let's move this so many
09:19 - possibilities here oh I like this
09:21 - oh we can make this one look at this oh
09:25 - boy boy boy so many oh ok so the reason
09:33 - why I'm doing this is at the finger con
09:35 - let me let me thank a few people let me
09:39 - open up thinker con here so I want to
09:46 - thank in particular the organizers of
09:49 - thinker con smarter every day Destin if
09:52 - you're not familiar with a smarter every
09:54 - day channel you probably would enjoy it
09:57 - Sabrina
09:58 - Emily and a Henry from minutephysics I
10:02 - don't know why I don't see Henry here
10:03 - and Robert Quaritch from radio lab or
10:05 - the organizers of this conference it was
10:07 - really fun I got to see the festival the
10:11 - spoken nerd which was mind-blowing the
10:13 - awesome I mean I am the target audience
10:16 - for that joke it was really fun
10:19 - and I was lucky enough to get to do a
10:23 - short 10 minute demo I did this demo
10:26 - with James loss let's see author of the
10:34 - I think it's the algorithm archive I
10:38 - think that's the name of his project I'm
10:43 - pretty sure I'm pretty sure that's a
10:46 - project he has a project like this it's
10:50 - got to be the algorithm archive right oh
10:51 - yeah yeah yeah okay
10:53 - and his YouTube channel is Lee iOS OS
10:56 - and I've mentioned I've mentioned his
10:59 - channel before because I used his video
11:00 - on the hypercube to create my hypercube
11:02 - challenge he also has a twitch channel
11:04 - where he does a lot of live streaming so
11:09 - so I'm gonna mention these things
11:17 - algorithm archive thinker Khan
11:20 - so we did a kind of coding competition
11:23 - we had 50
11:24 - and each program the Chaos game next to
11:26 - each other he was using like Julia and
11:28 - some kind of crazy in VI or something
11:33 - text editor and I was just using my
11:35 - usual p5.js web editor which I'm also
11:38 - going to use right now let me just do
11:47 - this okay and I'm going to call this a
11:56 - chaos game chaos game number file there
12:03 - is also a number file video video which
12:07 - I will reference okay
12:19 - all right so this is what I'm going to
12:24 - do today so Johnny Joestar asks is this
12:33 - not supposed to go on twitch to know so
12:36 - I do not live stream to twitch at one
12:39 - point I was live streaming to to
12:41 - multiple platforms and I for for better
12:44 - or worse I have sort of landed on
12:46 - YouTube as my primary platform for both
12:49 - live-streaming and shorter edited
12:52 - versions of things that happen on the
12:54 - live stream so let's just get started
12:56 - here playing the chaos game oh oh oh
13:00 - before I forget how do I find this okay
13:06 - a doctor circuit I think twitter.com
13:08 - doctor circuit doctor circuit sb espen
13:14 - Sunday Larson is a coded train viewer
13:17 - musician programmer from Norway has his
13:22 - own YouTube channel that you could find
13:23 - created for me music ever that I will
13:29 - premiere at this moment
13:48 - okay thank you
13:51 - spen for this amazing to know how quiet
13:54 - if that was loud super loud or super
13:56 - quiet but I on using that off okay all
14:06 - right
14:06 - let's see Cass game coding challenge
14:13 - this is I think gonna be finally I'm
14:15 - gonna do this in two parts because I'm
14:17 - going to do a really simple version with
14:19 - just a triangle first and then I'm gonna
14:20 - do another version with a more of a
14:26 - variety okay I'm looking for my train
14:31 - whistle here it is
14:34 - alright let me reset I almost want to
14:38 - have a timer here but nothing ever
14:43 - nothing good ever comes from the timer
14:50 - okay the volume was pretty good I
14:52 - wouldn't change it okay all right
15:09 - hello welcome to a cup okay that's okay
15:13 - that's so good okay me me me me me me me
15:23 - me my alright hello welcome to a Cody
15:32 - couch coding challenge last last try
15:38 - last try everybody hello and welcome to
15:44 - a coding challenge the Chaos game doll
15:48 - alright so why am I doing this coding
15:50 - challenge I recently was lucky enough to
15:52 - attend this amazing event finger Con in
15:55 - Huntsville Alabama thank you to smarter
15:57 - every day and the other organizers of
16:00 - thinker con this was a mind-blowing
16:03 - event and at this event I was I had the
16:06 - chance to do a live demo of some coding
16:09 - in front of people it's a rocket was
16:12 - nuts was a Saturn rocket look kind of
16:14 - like this and I did this with James
16:17 - sloth who is the author of the algorithm
16:19 - archive has a YouTube channel as well
16:22 - you might remember references to his
16:24 - youtube channel in the have his youtube
16:35 - channel up the iOS OS know what is a
16:45 - hypercube
16:51 - come on seriously seriously
17:09 - what happened to his was always the
17:13 - first one
17:17 - look here's mine how come I don't have
17:23 - my B you too premium on just sign in
17:29 - this is oh boy oh boy don't I have
17:40 - YouTube premium ok everybody just take a
17:49 - moment here we go here we go there we go
17:55 - learning is something I've always
17:57 - enjoyed ok hold on a sec I want to thank
18:14 - the right people here don't worry this
18:20 - is this is all gonna happen in a moment
18:23 - but if I have a little okay so Destin
18:34 - Justin smarter everyday Sandlin Dustin's
18:41 - sand Lynn Henry Henry minute physics I
18:48 - got to get everybody's name that I want
18:51 - to thank Henry Reich Emily graslie
19:04 - Emily graslie Sabrina Cruz Robert
19:15 - Krulwich
19:18 - okay yes I'm using an invisible computer
19:21 - isn't that amazing
19:23 - this is my my script over here I have a
19:27 - script okay how can I hold on I'm just
19:33 - gonna add let me let me do this you
19:35 - you've got to realize that half the time
19:38 - on the coding train live is just me
19:40 - taking care of stuff that I need to take
19:41 - care of so I'm over here and let's say I
19:45 - have YouTube where do I find my YouTube
19:47 - premium that I'm logged in over here and
19:50 - then I have like family sharing so
19:54 - family premium family so I have this
19:57 - manage so how do i yeah family sharing
20:09 - settings one two three four five six you
20:16 - can share with up to six members so I
20:21 - just need to share listen you two delete
20:26 - add a family member so my family member
20:32 - now I have a new family member it's
20:34 - coding train choo choo coding train choo
20:39 - choo at gmail.com
20:48 - and send join my family now I have no
20:56 - idea what's gonna happen here so I'm
20:58 - whoops I am going to now I'm going to
21:05 - just I'm gonna do this for a second I
21:07 - forgot to have a keyboard shortcut for
21:09 - this ah there we go
21:11 - I am going to go into the email I don't
21:15 - I just want to I don't know what's in
21:16 - the email of that account have never
21:18 - logged into it you're invited to join a
21:20 - Google family group accept invitation
21:26 - get started join family welcome to the
21:37 - family everybody so now if I go here and
21:40 - it refresh learning there we go alright
21:44 - no more ads thank you okay
21:49 - uh now remember how I was about to do a
21:52 - coding challenge it's like ten fifty I
21:59 - don't have any water okay here we go
22:07 - everyone back to select channel chat yes
22:15 - okay
22:16 - Oh where's my alright okay here we go
22:32 - actually maybe what I should do is know
22:48 - sorry everybody here
22:57 - hold on this is the actual code from
23:00 - thinker con which might make sense for
23:03 - me to start with this let me just get
23:10 - rid of some
23:23 - and of course I made some silly err
23:29 - counters not to find
23:43 - all right
23:57 - okay James sloths and what is the name
24:03 - Leo Leo SOS Lea iOS OS okay all right
24:10 - here we go a little jogging little
24:14 - exercise
24:27 - hello and welcome to a coding challenge
24:29 - the Chaos game okay this is exactly what
24:32 - I'm going to make in this coding
24:34 - challenge Thank You Prasanth
24:37 - Kumar for these super chat no more super
24:42 - chats please it rubs me hello and
24:48 - welcome to a coding challenge the Chaos
24:50 - game this is exactly what I'm going to
24:51 - make in this coding challenge why am I
24:54 - going to make it so recently I was very
24:56 - lucky to attend this amazing event
24:57 - called thinker con I'm wearing my
24:59 - t-shirt from thinker con um thank you to
25:01 - the organisers of thinker con Destin
25:04 - Sandlin from smarter every day and Henry
25:06 - Reich and Emily graslie and Sabrina Cruz
25:08 - and Robert Cole rich this one event was
25:10 - mind-blowing Lee awesome and amazing I
25:12 - met so many wonderful people
25:14 - links to finger con and various other
25:17 - YouTube channels related in the this
25:20 - video's description so while I was there
25:22 - I met for the first time in person a
25:25 - james schloss who is the author of the
25:28 - algorithm archive a wonderful website
25:30 - with many sorts of algorithms in it read
25:33 - more about it also from the YouTube
25:35 - channel that I have no idea how to
25:37 - pronounce still but only iOS OS and I've
25:42 - used a lot of his videos before as
25:43 - inspiration and ideas okay so James and
25:47 - I did a live coding demo in person at
25:50 - thinker Khan creating this the Chaos
25:54 - game so what is the Chaos game
25:56 - well the Chaos game the Chaos game I
26:00 - have to explain what it is now
26:02 - No that was that was pretty good that
26:04 - was pretty good cast game pretty good
26:07 - originally
26:13 - oh yeah then I have the numberphile
26:19 - video yeah
26:24 - the Chaos game is a
26:45 - silly wasn't gonna cry who's no crying
26:48 - encoding all right the Chaos game refers
27:01 - to a method of picking random points and
27:04 - iteratively moving point the previous
27:08 - point you picked to the next point in oh
27:10 - you know what there's not really a good
27:11 - way for me to explain it to you other
27:13 - than diagramming it and actually just
27:15 - writing the code for it for more
27:16 - background on the cast game I certainly
27:18 - would suggest this particular video from
27:21 - numberphile so what what what's amazing
27:24 - to me about the cast game is it's
27:25 - there's a very that's a very very simple
27:28 - idea so the way we're going to play the
27:30 - Chaos game is we are going to have a two
27:33 - dimensional space that two dimensional
27:37 - space is going to start with a set of
27:39 - seed points now I'm going to for the
27:42 - moment just create three sort of fixed
27:44 - seed points in the form of a triangle of
27:47 - course heading three points are
27:48 - basically gonna make a triangle let's
27:50 - roll on one line but that's another
27:51 - topic for another day and then what I'm
27:54 - going to do is I am just going to pick a
27:57 - random point anywhere that was such a
28:01 - fail
28:06 - third try is the charm
28:09 - third charms the third okay I got a
28:14 - random point and now I'm gonna start
28:17 - with this random point then if I were
28:19 - somebody who didn't code what I would
28:23 - have to this is the problem what I don't
28:34 - live stream often enough I have a lot of
28:36 - trouble I'm just gonna start what I want
28:40 - to do this with no edits whatsoever so
28:44 - you the viewing audience it's just gonna
28:47 - have to bear with me I promise that I am
28:50 - NOT going to stop again
28:54 - just needed a little warm-up just needed
28:58 - to kind of get myself going for the day
29:00 - and now here we go this will all be over
29:17 - soon in more ways than one
29:23 - hello welcome to a coding challenge the
29:26 - trolls game so this is the Chaos game
29:29 - playing out right behind me um this is
29:32 - actually code that I wrote at this
29:33 - wonderful event that I recently got the
29:35 - chance to attend called thinker con
29:38 - thank you to the organisers of thicker
29:41 - con Destin Sandlin Henry Reich Emily
29:43 - graslie Sabrina Cruz and Robert Krulwich
29:45 - links to their information and websites
29:48 - in this video description
29:49 - this was like a mind-blowing ly awesome
29:51 - event and while I was there I programmed
29:54 - in front of people underneath a rocket a
29:56 - Saturn rocket depicted here with James
30:00 - schloss now I never met James floss in
30:02 - person before but you might remember
30:03 - that I've used
30:05 - James floss is a YouTube channel as
30:08 - inspiration for other videos like the
30:12 - tesseract over here so James and I I
30:15 - think he used like Julia and like VI but
30:17 - I programmed this Chaos game algorithm
30:20 - in the P 5 web editor and that's exactly
30:23 - what I'm gonna do right now in homage to
30:25 - the wonderful time I had at thinker con
30:27 - so what is the cast game so first of all
30:29 - I would recommend this numberphile video
30:32 - about the Chaos game for background - it
30:35 - is an iterative process of picking
30:36 - random points and and doing some math
30:40 - with those points and seeing what
30:41 - happens afterwards so rather than try to
30:43 - define it you can of course always read
30:45 - the Wikipedia page
30:46 - very tempted to do a dramatic reading of
30:48 - it I'm just going to describe to you how
30:50 - it works
30:50 - over here on the whiteboard so let's say
30:53 - we have a two dimensional plane this is
30:55 - a two dimensional plane and what I'm
30:57 - going to do is I'm going to start with a
30:58 - set of seed points so and maybe I'm
31:00 - going to put those points
31:02 - as an equilateral triangle but as you'll
31:04 - see eventually at some point I could
31:06 - have 4c points 5c points I could put
31:09 - them anywhere and then what I'm going to
31:11 - do is I'm going to play the Chaos game
31:13 - and the first thing I'm gonna do is pick
31:14 - a random point on the wall here we go
31:22 - first try earlier today earlier I was
31:24 - doing another take and I'd have to do
31:26 - that like six times I'm very lucky now
31:28 - okay so so this is my first random point
31:32 - now what I'm going to do is I need to
31:33 - pick a random number one two or three a
31:36 - B or C zero one or two
31:38 - how do I do that do I have a I don't
31:41 - know I'll just pick one from my my oh I
31:42 - have a book of random numbers five four
31:53 - one five seven so why don't we do seven
31:55 - modulus three right 7 divided by 3 is 2
31:58 - remainder one so I picked a one zero one
32:01 - two
32:01 - so if this was zero this was one this
32:05 - was two what I'm going to do now is move
32:07 - half way to this point and now I have
32:11 - another point aha okay now pick another
32:14 - so there is number nine eight eight one
32:22 - eight so I just use the last digit 8
32:24 - modulus 3 is 8 divided by 3 is 2
32:28 - remainder 2 so 0 1 2 so now I'm going to
32:33 - go half way to this point and I could
32:35 - keep doing this over and over again
32:37 - and if you watch the numberphile video
32:39 - you'll see somebody do this actually
32:40 - physically with rulers and pens and all
32:44 - sorts of artistic talent I have none of
32:46 - those things so but I do know a little
32:50 - bit about programming and so this is
32:52 - something I can program so let's
32:53 - actually go program this and then see
32:55 - what happens all right so I'm going to
33:00 - use the p5 GS web editor this is I think
33:02 - a simple enough project I'm gonna go
33:05 - here I'm just going to go to the editor
33:09 - home page here and I'm going to
33:12 - this chaos Game one safe all right so
33:17 - let's start this off so I've got my two
33:20 - dimensional canvas what I need first are
33:23 - those seed points so I'm going to do
33:26 - this in a very simple way and then
33:40 - [Music]
33:44 - all right thank you by the way to
33:46 - Espinosa and dr. serpent on Twitter who
33:50 - created the our factor this later song
33:51 - which is like my new favorite world
33:53 - links to more about essence music in
33:57 - this video's description okay so I'm
34:00 - creating these three points you know you
34:02 - don't you know what I'm gonna put them
34:03 - in a random spot I'm gonna make the seed
34:05 - points themselves actually random why
34:10 - not right so I'm gonna have it at point
34:12 - a point B and a point C so I need three
34:20 - points ax am i standing in front of the
34:22 - code a kind of M so let me move this
34:24 - over and let me move this over let me
34:27 - give myself let me just use a window
34:30 - width and window height so I cover the
34:36 - whole thing and then I'm gonna make it a
34:38 - black background we're good alright so
34:42 - what I want to do now is let me draw
34:44 - those points so I'm going to say stroke
34:46 - 255 stroke weight eight so I just want
34:50 - to see those points a X I just want to
34:52 - see them so we should see three points
34:58 - now how come I don't see any points ah
35:03 - because I am drawing the background over
35:05 - and over and draw so let's do this here
35:07 - okay so every time I run this sketch I
35:10 - am going to now have three new points
35:13 - alright so now let's play the chaos game
35:17 - so what I am then I need a kind of
35:20 - global X Y we need a global X Y and what
35:24 - I'm going to do with that is I am also
35:27 - going to have X Y be some other random
35:33 - point and what I'm going to do in draw
35:39 - is say stroke let's make it like a nice
35:43 - RGB color and I'm going to draw a point
35:47 - at X Y and we can see okay there it is
35:49 - so this is right every time I run this I
35:51 - have my three seed points and I have
35:53 - this new pink dot which is the X Y so
35:56 - now what do I need to do what I need to
35:58 - do is I need to say let me pick one of
36:01 - those three points and move halfway
36:03 - there so the first thing I need to do
36:06 - here is just pick a random number one
36:12 - two or three right but this is going to
36:15 - give me a floating-point number so what
36:17 - I want to say now actually is give me
36:20 - floor that which will take off the
36:21 - decimal place and then if I get a zero
36:24 - I'm going to do one thing otherwise if I
36:27 - get a one I'm gonna do another thing and
36:29 - and I know I know there's all but just
36:32 - remember I know I'm overusing the sound
36:36 - effect right now but it's the first day
36:38 - I have to use it it makes me so happy so
36:47 - if I pick zero what I want to do is move
36:50 - half way I want to move half way right
36:55 - to this point guess what I could use
36:57 - some math right I could take the X of
36:59 - this the X of this / - I've got a new X
37:01 - but there is actually a function in p5
37:03 - called lerp lerp stands for linear
37:06 - interpolation meaning interpolate from
37:08 - one number to the other in a linear
37:11 - fashion by some amount so if I want to
37:13 - linearly but I want to linear
37:17 - interpolate if I want to learn from this
37:19 - point to this point by point five watch
37:23 - what I get to do fifty percent that's
37:24 - halfway there so I'm going to say x
37:26 - equals ler X ax 0.5 then I'm gonna do
37:32 - the same thing for Y and then I'm going
37:38 - to do here I'm gonna do it with BX look
37:42 - it's already happening the cast game is
37:45 - already happening over here
37:46 - look now I only have two points so you
37:49 - can see all the points end up just on
37:51 - that one line right every time I restart
37:53 - this all the points end up going between
37:56 - point a point zero and one but now let's
37:59 - make some magic happen
38:01 - whoops let's do the last possibility
38:06 - let's plug in the see
38:10 - and see what happens okay here we go
38:13 - what's going on do I see some pattern
38:17 - emerging here well I am playing the
38:20 - Chaos game this looks like it could be
38:22 - kind of familiar let's be a little bit
38:25 - more methodical about this let me
38:27 - actually start with an equal a perfect
38:31 - equilateral triangle I don't know what I
38:34 - mean by perfect but then what I'm going
38:37 - to do what do I need to do an
38:38 - equilateral triangle boy this is an
38:40 - equilateral triangle has an angle of 60
38:47 - degrees so if I want to figure out from
38:51 - this top point how far down and how far
38:54 - over to go I just need to use the angle
38:57 - 60 degrees and cosine and sine I've
39:00 - probably got some video where I explain
39:01 - that right so I need to go you know what
39:05 - I should just do forget the equal I know
39:09 - I said I wasn't going to do any edits I
39:10 - feel like the equilateral triangle is a
39:13 - bit of a digression that I don't need to
39:16 - have in this of it well that's a nice
39:18 - one so let's let me go back
39:30 - so actually this won't be an equilateral
39:32 - triangle but it'll be simpler let me
39:34 - just put these seed points at the
39:37 - corners and then I so so I'm gonna put
39:41 - these seed points at the corners and
39:43 - then we're going to see what happens and
39:46 - then let's so we can start to see
39:48 - something emerging here this pattern
39:50 - that's emerging it's happening kind of
39:52 - slowly so what I might like to do a
39:55 - couple things I might like to do first
39:57 - of all I think it's I'm gonna make the
39:59 - points a little less thick then I'm also
40:02 - going to give them a little bit of alpha
40:05 - again I have no artistic talent so I
40:07 - shouldn't do what I'm doing and then I'm
40:09 - going to draw 100 of them each time
40:15 - through draw there we go there we go
40:18 - look what's happening so pretty so
40:20 - beautiful let's forget about the Alpha
40:24 - all right oh and you know we can do
40:25 - which is fun why not
40:27 - what happens if I give it different
40:28 - colors like here if I pick zero let's
40:33 - try this one color if I pick one let's
40:40 - try a different color and we can sort it
40:42 - and we can see now
40:51 - we can see there are actually three
40:53 - different sections in a way of this what
40:56 - is it called say it with me
40:58 - sierpinski triangle so this is what's
41:00 - amazing the chaos game this very simple
41:02 - algorithm will produce a perfect
41:05 - rendering of a fractal pattern this one
41:08 - very famously is known as the sierpinski
41:11 - triangle very little code I've got the
41:13 - sierpinski triangle right there
41:14 - so this coding challenge is actually
41:16 - complete but it's not over I mean the
41:19 - video is gonna end at some point when I
41:21 - stop rambling but let's think about some
41:23 - things that we could do for example
41:25 - anytime you make something like this you
41:27 - might think to yourself what are some
41:28 - parameters that I could start tweaking
41:30 - well why should I bother why should I
41:33 - start with only three seed points why
41:35 - should I only have why should I only go
41:38 - 50% of the way each time there why
41:41 - should I have an equal probability of
41:43 - going to each one aren't there some
41:45 - other things we could apply to this so
41:47 - this is now your exercise create your
41:51 - own version of this could you make an
41:53 - array of seed points could you vary the
41:56 - distance the the the percentage did a
41:59 - distance you go to each point could you
42:01 - vary the probabilities of how you pick
42:03 - each point what else could you do with
42:04 - color how could you render this could
42:06 - you connect the lines could you use
42:07 - different shapes what if you did this
42:10 - without and you had to erase the
42:13 - background so you're actually like
42:14 - piling up all the points in this big
42:16 - array there's so many possibilities I'm
42:18 - gonna come back in the second part and
42:21 - at least do the part I'm gonna refactor
42:23 - this later but not too much later where
42:26 - I'm gonna at least make this an array of
42:28 - seed points and and play around with
42:31 - that 50% value so I'm gonna do that much
42:33 - don't watch that video yet if it exists
42:36 - if it doesn't exist who can't watch it
42:37 - try this on your own and then share with
42:39 - me your results and then you'll see my
42:41 - extra little step with this and that'll
42:45 - be that okay if you're looking for the
42:47 - code by the way when especially when I
42:48 - do something in the p5 web editor you
42:52 - can just go to this particular URL which
42:55 - will also be in the video's description
42:55 - and I do have a page about this
42:58 - challenge also on the coding range
43:00 - okay thanks and see you the next time
43:07 - all right okay
43:11 - whoo-hoo all right so that was number
43:20 - one I'm just gonna move right on
43:30 - dr. circuit
43:45 - all right
43:52 - all right so let me do duplicate
44:09 - ooh I like this that's crazy okay
44:30 - all right
44:41 - hello and welcome to coding challenge
44:43 - the Chaos game pop dude
44:45 - electric boogaloo thank you - Espen
44:51 - Larsen dr. circuit on Twitter for
44:53 - creating the I will refractor this later
44:54 - song this coding challenge is in honor
44:56 - of that song because guess what later is
44:59 - now I will refactor this now so what I'm
45:03 - gonna do in this coding challenge is
45:05 - expand this idea of the Kaos game
45:08 - instead of merely creating the
45:10 - sierpinski triangle I'm going to make a
45:12 - version of this where there could be
45:13 - more than three points seed points and
45:16 - that as the points move as the newly
45:19 - random point move moves from point to
45:21 - point to point I I might move by a
45:25 - different percentage than 50% so if you
45:28 - didn't watch the previous coding
45:30 - challenge where I made this you could
45:31 - pause now and go watch that or you could
45:33 - just stay here with me right now let's
45:34 - be together let's be friends on the
45:35 - Internet programming stuff okay so the
45:38 - first thing that I want to do to
45:39 - refactor this again but I'm not gonna
45:42 - overdo it use it sparingly otherwise
45:44 - people will get irritated and annoyed
45:46 - and I'm sure I will hear about it um the
45:48 - first thing I want to do is I am going
45:49 - to make a array called seed maybe I
45:54 - should call it seed points let's just
45:56 - call it points I don't know let's call
45:57 - it points and instead of having a X a Y
46:02 - what I'm going to do in this array let's
46:05 - get rid of this first I just want to
46:08 - recreate this exactly I am going to say
46:12 - I'm gonna have three points and I'm
46:16 - gonna create a new point which is a
46:18 - vector I'm going to use vector create
46:20 - vector function to make a new point
46:23 - anywhere randomly in the canvas
46:26 - I know I've run a little bit out of
46:28 - space here but that's fine :
46:33 - and then I'm gonna say points push V
46:37 - okay and then I am going to have a point
46:41 - called current which is also going to be
46:47 - a vector a random vector I'm good there
46:52 - we go there we go so now what I can do
46:57 - is again I have just refactored this two
47:00 - instead of having separate XY variables
47:03 - for all four points I have an array that
47:05 - keeps my three seed points and I have my
47:07 - current point in and all current point
47:09 - is a separate variable and both of those
47:10 - are p5 vectors a vector being an object
47:13 - that can hold an X Y and a Z but I'm not
47:16 - gonna use the Z right now although you
47:19 - should do this in 3d but I'm not going
47:22 - to all right so then I'm going to say
47:24 - for let P of points and I'm gonna say a
47:31 - point P X P dot Y so we should see there
47:36 - we go those are my first three seed
47:38 - points and then what I'm going to do
47:41 - here is random the length and this is
47:47 - actually now oh you know what I don't
47:50 - even need to do this guess what the
47:52 - random function in p5 I'm gonna say like
47:57 - next equal to random function and p5
47:59 - will give me a random object out of that
48:02 - array now if I want to pick them with a
48:04 - different probability I'd have to do
48:05 - something different but here this next
48:08 - is now going to be one of those three
48:10 - points randomly and then all I need to
48:12 - do is say stroke I'm gonna still give it
48:15 - this color and then I'm gonna say next
48:22 - dot x equals alert this so I'm LARPing
48:28 - but I'm gonna lurk between next and and
48:33 - the current oh and current is the result
48:38 - of that so the current is the thing
48:39 - that's moving and it really doesn't
48:41 - matter but I like to think of it in this
48:43 - order current is moving and then I think
48:45 - there's a lack sealer vector function so
48:48 - I could do this in one line of code
48:49 - that's another reactor this later now so
48:55 - there we go and then all I need to do
49:00 - is draw the point let's give all I need
49:08 - to do is draw that point and here we go
49:14 - look at this tada now one thing I should
49:17 - probably do is also reset it let's write
49:21 - it let's actually all this stuff here is
49:25 - kind of the process of let's write a
49:28 - function of resetting like I want right
49:31 - now it's like resetting every time I
49:32 - change the code because the p5 editors
49:34 - can figure to like relaunch the sketch
49:36 - but I think what I would prefer to do
49:38 - here is write my own function called
49:39 - reset it's a nice refactoring and I need
49:44 - to empty the array and I'm going to say
49:49 - points equals here so this function
49:53 - reset will just sort of reseed the
49:56 - environments and I could do something I
49:58 - could do it whenever I click the mouse
49:59 - but just for right now I can say if
50:01 - frame count modulus like 100 equals zero
50:04 - then reset so what that's gonna do is
50:07 - every 100 frames right because a modulus
50:11 - of the number 100 will equal zero
50:12 - anytime then frame count is divisible by
50:15 - 100 with a remainder of zero so you can
50:17 - see over and over again this is gonna so
50:20 - no I'm here I have refactored this but
50:23 - now that I have refactored this okay so
50:29 - for example I can just do this no oh
50:33 - yeah look now interestingly enough I
50:37 - don't really get a pattern that's super
50:41 - interesting to look at with four points
50:44 - kind of accidentally I sometimes M and
50:48 - so what happens if I have eight points
50:50 - whoa this is crazy now probably what I
50:53 - would want to do what might make sense
50:55 - for me to do is place these points
50:58 - around a circle just I mean it's
51:00 - interesting to have them randomly but I
51:01 - think I would prefer just in sort of
51:03 - figuring out what I want to do with this
51:05 - to have all those points around a circle
51:08 - right so you can think about actually
51:09 - this was a way of getting my equal
51:11 - triangle that I was looking for so what
51:13 - if I have eight points and then I get
51:15 - some kind of like hexagon octagon
51:17 - septagon whatever the number of sides is
51:20 - based on the number of points for three
51:22 - points it's a triangle so you can you
51:24 - could sort of do the math there of
51:25 - what's gonna be if I increase the number
51:26 - of points so let's actually not reset
51:29 - them randomly but let's reset them and
51:36 - in that sense I don't need to this can
51:39 - actually just be in setup and always
51:41 - keep these same seed points and what I'm
51:43 - going to do is say I'm gonna have an
51:46 - angle which is going to equal to pi
51:50 - divided by eight so let's make a I'm
51:54 - gonna use Const for a constant just to
51:56 - be have fun I'm gonna call that n oh oh
52:00 - I didn't did I not switch back all right
52:08 - don't worry everybody I have figured it
52:10 - out camera camera camera I know so hold
52:18 - on I'm gonna go back
52:25 - alright alright here we go
52:30 - alright alright so what I'm gonna do
52:36 - here actually is uh I'm gonna have a
52:38 - fixed set of points right so the points
52:40 - are I'm just gonna do once in setup and
52:43 - what I'm gonna do is I'm gonna use the
52:45 - constant Const N equals 8 and I know I
52:49 - could be using constant other places the
52:51 - code if you want to know more about
52:52 - Const I made a video about it where I
52:54 - got a bunch of things wrong five
52:56 - different resource for that but so I
52:59 - just now I'm making n points and what
53:01 - I'm going to do is say the angle is two
53:04 - pi divided by I that's a bad idea
53:07 - because I don't want to divide by zero
53:10 - so all right well we'll say oh it's I
53:16 - know what it is it's I times two pi
53:20 - divided by n that's what it is right
53:22 - because I want to have I'm looking for
53:25 - and if look if n is four for example I
53:28 - want zero degrees 90 degrees 180 degrees
53:32 - 270 degrees it's probably gonna go the
53:34 - other way because the screen is flipped
53:36 - but that's the idea so now what I'm
53:38 - going to do is say create vector at some
53:44 - number like let's just do 200 times
53:46 - cosine of the angle oh you know what I
53:49 - think there's P 5 vector from P 5 dot
53:54 - vector from angle I think as a function
53:57 - hangul so that's gonna make a vector
53:59 - from that angle and then I can say V dot
54:05 - V V dot multiply 100 and that's working
54:15 - but I need to translate to width / 2
54:19 - height divided by 2 and now we have
54:25 - these points in the center of course I
54:27 - also if I want to I need to do that here
54:30 - okay so there we go
54:32 - we can see now I've created eight points
54:34 - around and let's actually use
54:38 - let's make that a little why is this
54:40 - down here oh oh there's a weird mistake
54:44 - goofy mistake happening Oh cuz when I
54:49 - reset this is this is kind of you know
54:55 - what I'm gonna do the translate is fine
54:58 - but it's bothering me I'm just gonna
55:00 - make life easier on myself and say add
55:03 - width / 2 height / - right I'm just
55:06 - gonna move that to the center manually
55:08 - by adding that to the vector okay
55:10 - now what I want to do is multiply it by
55:13 - like width / 2 or something okay great
55:15 - so now you see those are all my points
55:18 - we're still playing the Kaos game now
55:20 - what I want to do is I am going to have
55:23 - a variable called percent and I also I
55:28 - just want to make like a lot more points
55:30 - really quickly so I can just sort of see
55:32 - the pattern and what I'm gonna do now is
55:35 - I am going to try I'm going to when I
55:39 - lurk I'm going to lurk by that percent
55:44 - and let's try different values so let's
55:49 - try so let's go back to 0.5 and this is
55:52 - what I get
55:54 - let's try 0.25 interesting let's try
56:00 - point 1 let's try and end of for 0.25 6
56:09 - do I need like we could something more
56:11 - interesting I just could have sworn when
56:14 - I thought about this earlier I'd get
56:15 - more interesting patterns timeout for a
56:17 - second
56:29 - all right let me think about this
56:31 - could've sworn when I was looking at
56:36 - this page here
56:48 - inside a pentagon oh but the current
56:54 - cannot be the same
56:59 - let's try Pentagon
57:08 - they're up I just should have picked
57:10 - five
57:11 - [Laughter]
57:31 - alright I'm back Neko monsoon in the
57:35 - chat said try three just to see if you
57:37 - didn't break anything so I made the
57:39 - point N equals I made n equal three with
57:43 - the percentage of point five and we can
57:44 - see I have the sierpinski triangle
57:46 - actually if you look on the Wikipedia
57:49 - page for Kaos game you'll start to see a
57:51 - bunch of these a point inside a square
57:54 - repeatedly jumps half the distance
57:56 - towards a randomly chosen vertex but the
57:58 - currently chosen vertex cannot be two
58:00 - places away from the previously chosen
58:03 - vertex so this is interesting right so I
58:05 - could actually start to create some of
58:09 - these patterns by modifying how I pick a
58:12 - particular point so this one actually
58:14 - would be nice let's do the Pentagon one
58:16 - a point inside a Pentagon repeatly jumps
58:18 - half of the distance but the current
58:20 - chosen vertex cannot be the same this is
58:22 - going to be an easy one for us to
58:23 - implement we just need to get a new
58:25 - random number that's not the same as the
58:27 - previous one so so let's go back here
58:31 - let's first make this five okay so we
58:34 - can see even with five a Pentagon we're
58:37 - kind of getting a somewhat of an
58:39 - interesting pattern here and I might I
58:41 - don't know why I obsess over this sort
58:43 - of stuff but I kind of feel like let's
58:45 - give this just like a little bit of
58:47 - alpha and make the stroke weight one and
58:50 - do like a thousand points all right so
58:54 - we could just sort of see this pattern
58:55 - more quickly okay now what was I doing
59:01 - so what I want to do now is not allow
59:04 - the next point to be the same as what
59:07 - was previously chosen and so there's a
59:10 - variety of ways I could do this but
59:11 - actually I could just create a way of I
59:15 - could just create a way of ignoring it
59:17 - if it happens to be the same one so
59:20 - let's say previous I'm gonna create a
59:24 - variable called previous and right here
59:27 - when I pick previous equals next and I'm
59:31 - gonna say as long as next is not equal
59:34 - to previous then I can do this stuff so
59:39 - now look at this
59:41 - there we go the Chaos game Pentagon with
59:44 - one slight modification and you know
59:48 - what I I don't want it to keep resetting
59:50 - I just want it to I want to tell it not
59:56 - to reset and I want to go to share full
60:04 - screen and I'm gonna put this in a
60:07 - different window and we're gonna bring
60:09 - this up here and we're just going to
60:10 - enjoy this now okay here we go we're
60:14 - done
60:14 - chaos game thank you very much look at
60:17 - this it's so beautiful intricate and
60:19 - amazing so I now encourage you now you
60:22 - have really got something right you can
60:24 - start to make a variety of patterns and
60:27 - here's the thing one thing that you
60:29 - could do that actually is really it you
60:31 - could think about that I didn't do if we
60:32 - go up here look at this this is actually
60:35 - a little sort of animated gif showing
60:37 - you the process of actually moving the
60:39 - points from one spot to another and then
60:41 - sort of branching out so imagine what
60:43 - you could do if instead of just picking
60:44 - all the points and layering them you
60:46 - actually created a system or you animate
60:48 - the process of building this pattern and
60:51 - you can see you can see maybe you can
60:53 - recreate some of these other patterns by
60:55 - doing this rules this one would be a
60:57 - nice one to create you could try
61:00 - different percentages and see what you
61:03 - make so thank you for watching this
61:06 - second part of the chaos game I think we
61:09 - are done with all the cast games stuff
61:10 - I'm going to do if you make your own
61:13 - version of this please visit the coding
61:15 - train comm link that's in this video's
61:17 - description there there are instructions
61:19 - for how to submit a leg to the version
61:22 - of the cast game that you made yourself
61:23 - you can share with me your images or
61:25 - gifts on twitter at Schiffman or at the
61:27 - coding train hashtag coding chaos game
61:32 - and I'll see you in a future Kotick
61:34 - jaunt all right I don't know maybe I
61:36 - will
61:55 - all right everyone I think we got a
61:58 - couple coding challenges out of that I
62:02 - got my equilateral triangle in the end
62:05 - at least yes I did
62:08 - I'm just curious here I sort of thought
62:13 - varying the percentage would be
62:14 - interesting but apparently not so much
62:18 - ooh that's kind of cool
62:20 - so I guess it is maybe the idea was Oh
62:24 - going the hole going further is what I
62:28 - should have done right right it's all
62:36 - about going further uh okay hold on I
62:48 - got to come back we got to include this
62:53 - I don't need a record scratch sound
62:59 - effect I guess this could be done in
63:07 - post that's just not gonna want to add
63:09 - it I mean for a good reason I don't
63:11 - think we should do a record scratch wait
63:16 - wait wait wait wait
63:17 - let's refactor this now and actually I'm
63:19 - not actually gonna refactor it I
63:21 - realized something when I was playing
63:23 - with the percentage earlier and making
63:25 - it lower I started to get much noisier
63:29 - images and of course this is true
63:30 - because I'm not going very far and so
63:33 - the points are sort of layering on top
63:35 - of each other and I'm just getting kind
63:37 - of a cloud of points but what if instead
63:40 - of going halfway there and that's
63:45 - actually I don't I know I'm being kind
63:47 - of a lunatic about this stuff let me
63:48 - just make these white instead of going
63:51 - halfway there what if I go 75% of the
63:55 - way there
63:55 - so actually going further will start to
63:57 - yield some interesting patterns and you
64:00 - can see here now if I say 15 look at
64:03 - this so this is now
64:04 - fifteen points going 75 percent of the
64:08 - way there you know and by the way maybe
64:11 - if I were to make oh and that's 90
64:13 - percent of the way there if I were to
64:14 - make some sort of slider where I vary
64:17 - the number of points I could go back to
64:18 - putting these points all in a random
64:20 - location that would be kind of
64:21 - interesting let's do that now just
64:23 - curious so where where do I let's do
64:27 - this let's just really quickly I'm just
64:29 - curious to see I got a stop
64:30 - you should I shouldn't be doing this you
64:34 - should be doing this right so you could
64:36 - see okay I don't know that got it so
64:38 - anyway so that's this is a clue to you
64:40 - of what you could now make right that I
64:42 - told you to share with me right
64:44 - you could vary that percentage vary the
64:46 - number of points vary where the seed
64:48 - point starts animate oh so many
64:50 - possibilities okay see you later
64:52 - good bye okay let me put this back
65:01 - however to five and
65:11 - and back 2.5 and there we go and there
65:17 - we go
65:25 - X Nick is asking what if your percent
65:29 - gets larger than one that's an
65:30 - interesting question
65:31 - oh yeah what time is it 11:30 Akari oh
65:37 - part 3 says LOM probably not but I'm I'm
65:43 - about ready to go I have to just check
65:45 - something here
66:01 - just checking sorry I like to look at my
66:03 - email okay all right I don't see the
66:20 - demon faces
66:21 - we'd have to stare at this more later
66:24 - okay
66:25 - close these things out so I wanted to
66:29 - also I wanted to let me sign in here
66:48 - oh thank you to oliver harris a new
66:51 - member of the coding train
67:00 - authentication code
67:14 - all right I'm pretty sure now that's so
67:18 - all right so you might recall that
67:21 - somewhat recently I created the
67:31 - quick-draw a quick-draw coding challenge
67:35 - right here where I I use the quick-draw
67:38 - data set the Google quick-draw data set
67:42 - to replay drawings that people all
67:46 - around the world have made various
67:48 - things like cats and rainbows and so on
67:50 - and so forth so to do this I downloaded
67:52 - very large data files full of JSON data
67:56 - of all of the drawing information and
67:58 - then I spun up a little note server to
68:00 - pass individual drawings to a JavaScript
68:03 - web client and so now you know timing
68:08 - wise it's sort of ironically as soon as
68:10 - I did that almost like to the day the
68:13 - Google really creative lab released an
68:16 - api to it called a web component so I
68:23 - wanted to explore this in kind of like a
68:25 - part two the question is do I need to
68:31 - sign up for an API key so no no not
68:39 - quick-draw data set I'm already there a
68:43 - quick-draw component sorry this is what
68:44 - I'm looking for so I do need an API key
68:49 - okay so how do I get an API key
68:58 - I don't want to do it with NPM install
69:04 - join the quick-draw API Google Group API
69:08 - services library okay so let me okay
69:16 - let's do this
69:18 - whoa MoMA this seems weird doesn't make
69:25 - any sense
69:33 - I think that's a mistake on there is it
69:43 - like console google.com or something
69:50 - yeah maybe it's here api's and services
70:04 - the library quick draw quick know does
70:20 - anybody know what I'm looking for here
70:22 - [Music]
70:24 - this is API slash library this is so
70:29 - weird
70:33 - no quick draw API
70:45 - there's a quick web demo
71:01 - this is so weird
71:07 - why is it taking me to Pantheon Corp I
71:11 - mean this does not feel like where I
71:14 - should be logging in
71:24 - does anybody discovered where do I
71:30 - really need to search is it is it really
71:36 - as simple as reading the instructions
71:42 - and actually searching for this more
71:52 - precisely okay let's try this
71:58 - No
72:13 - consult developers.google.com let's try
72:16 - that that's where I want to try this
72:25 - yeah this is what I'm looking for
72:46 - hmm
72:51 - cloud google.com well I might have to
72:58 - come back to this the API is just not
73:02 - public yet oh but it's right here this
73:09 - is not a private component
73:29 - all right well maybe I'll use this API
73:31 - key of self-hosting huh
73:44 - quick draw files Oh appspot look at this
74:01 - like for example let's see this
74:11 - Drock component rjs oh the readme says
74:18 - to join the group which says they'll
74:19 - give you access to the API alright so
74:23 - I'm gonna come back I think I'm gonna
74:26 - I'm gonna join that group and come back
74:28 - next time and look at that API thank you
74:34 - which is good because I kind of have to
74:36 - go anyway I wanted to do this sort of
74:38 - thing cork on thing Google Creative Lab
74:41 - is and I don't know what what count
74:43 - Chris is asking is Google Creative Lab
74:46 - an official Google github account oh do
74:50 - I just have to literally join the group
74:54 - ok let's do that I just kind of would
74:59 - prefer to join it from so let me get an
75:02 - API key different a slightly different
75:05 - way for a second because I'd rather
75:08 - actually whoops or actually you know
75:12 - what this is fine all right let's
75:21 - all right let's let's
75:31 - all right let's do this
75:34 - let's join group
75:49 - okay so you can now see and enable the
75:53 - quick-draw API in your own project at
75:55 - Google cloud really it's so weird why is
76:00 - it still MoMA inside Google maybe that's
76:03 - really where I'm supposed to be going
76:06 - but there it is
76:13 - private create quick-draw coding train
76:58 - okay
77:17 - okay what API is do I have
77:23 - I should probably actually show how to
77:29 - do this in the video enable okay
77:43 - okay can I delete this
77:54 - library Oh Google Oh Google why why do
78:02 - you do this to me how do I delete it and
78:06 - I want a new project
78:07 - delete ah
78:18 - so delete this oh come on delete yes
78:38 - okay
78:41 - okay I don't think anyone watching the
78:43 - video is gonna be able to follow this
78:45 - and then I should be able to do me I am
78:52 - so me if you're actually watching I
78:53 - should be able to just do a once I have
78:56 - the API key I should just be able to do
78:58 - make a call to quick draw files
79:02 - appspot.com with with with just a get
79:12 - request right to get just like the JSON
79:16 - back like what I want to do is just get
79:19 - the data like I want to draw it myself
79:23 - fetch image data draw image now oh yeah
79:26 - like this drawing API middle one this is
79:29 - what I want to do so category ID equals
79:34 - or random API key format JSON okay great
79:41 - so this is this is what I need okay all
79:45 - right
80:00 - okay
80:14 - okay so now and
80:31 - okay okay
80:37 - all right everybody so give me a second
80:45 - here
80:50 - remind me later okay
81:08 - oops Oh
81:18 - I definitely need to go eat only new
81:25 - tasks I open up go into Chrome
81:49 - where there I should probably not do
81:58 - this now oh boy oh I just want to get
82:11 - this open I here we go
82:19 - I know the camera went out okay
82:35 - okay everybody I should definitely go
82:37 - eat lunch but said I was going to do
82:48 - this so
82:54 - dude you hear that that was my stomach
82:56 - growling I don't know if that came in
82:59 - through the microphone or not I don't
83:03 - think I need the thinker Khan shirt
83:04 - anymore I was wearing that for so let me
83:09 - this will work better for the microphone
83:12 - I'm sorry this is gonna make some weird
83:14 - sound for a second
83:23 - apologies for all the scratchy scratchy
83:32 - okay
83:38 - all right oh that mean okay
83:48 - well the problem if I go and have lunch
83:51 - which I should do I won't be coming back
83:56 - so I'm not doing this now or not
83:59 - probably should practice this first yeah
84:07 - okay and here we go
84:29 - all right here we go hello welcome to a
84:39 - follow-up coding challenge quick draw
84:41 - again thingamabob quick draw API web
84:44 - component addition so previously in a
84:47 - coding challenge I downloaded a large
84:51 - data file from the Google quick-draw
84:54 - dataset I talked about what the Google
84:55 - quick-draw dataset is it's just a
84:57 - collection of millions and millions of
84:59 - these doodles that people made playing
85:00 - the Google quick-draw game and I created
85:04 - a node server locally on my computer to
85:07 - open that very large data file and pass
85:09 - information about the drawings to a
85:11 - JavaScript program that would read that
85:13 - information and then replay the drawings
85:15 - in a canvas basically almost to the day
85:19 - that I released that coding challenge
85:21 - Google came out with something new
85:23 - called the quick-draw component and what
85:26 - the quick-draw web component is it
85:28 - allows you to actually using markup and
85:31 - importing a JavaScript file just
85:33 - actually embed quick-draw doodles in a
85:37 - web page I'm not going to do that in
85:39 - this video what I'm gonna do is actually
85:41 - show you how to use the API directly to
85:44 - pull the data from the drawing yourself
85:46 - so that you can draw it in a canvas so
85:48 - I'm gonna do what I'm gonna do just to
85:50 - be clear I know that wasn't clear at all
85:51 - I'm gonna do exactly what I did in the
85:53 - previous coding challenge but instead of
85:56 - downloading a very large data file and
85:58 - spinning up my own node server I'm just
86:00 - gonna ask the Google API itself for a
86:03 - drawing and then I'm gonna go eat lunch
86:07 - we should probably eat lunch now well
86:09 - maybe I maybe like pizza or something I
86:11 - don't not a big pizza eater but we'll
86:12 - pick some food themed drawing and just
86:15 - to be sure that I it's actually working
86:17 - to do it this way I am going to do this
86:19 - in the p5 web editor so that I can be
86:21 - sure that you could be sure that I'm not
86:23 - like secretly downloading a big file
86:25 - running a node server somewhere why
86:26 - would I do that though
86:28 - captain disillusion will come for me if
86:30 - I cry to fake something on my channel I
86:33 - was hoping that maybe it something in
86:35 - post just got added there got doubt it
86:37 - like a rainbow
86:39 - okay uh-huh so here's the thing it's a
86:41 - bit confusing because this is so new
86:44 - this API is available it's out there but
86:47 - it's a bit confusing to use it so the
86:48 - first thing you're going to want to do
86:49 - is go to this github repository quick
86:55 - draw
86:55 - - component and then down here somewhere
86:58 - in here you're going to want to find
87:00 - this join the quick draw API Google
87:03 - group now by the time you're watching
87:04 - this this may have changed but I will
87:07 - hopefully keep the code up-to-date but
87:09 - maybe the signup process will have
87:10 - changed so as soon as you go to the
87:12 - Google quick draw API Google Group I
87:14 - joined I'll end up this page click join
87:15 - you'll need some sort of Google account
87:17 - then you're gonna want to go to your
87:19 - Google API dashboard so here I am I'm at
87:22 - console developers.google.com slash API
87:25 - slash dashboard there are a lot of API
87:28 - is there that you could look at and what
87:30 - I'm gonna do is now search for
87:33 - quick-draw I made a project by accident
87:36 - which I didn't mean to but this is what
87:38 - I'm looking for quick-draw exclamation
87:41 - point data API private now this will not
87:44 - appear for you to you unless you join
87:46 - that Google group so that's a little bit
87:48 - of the confusing thing at least at the
87:49 - time that I'm doing this today November
87:51 - something 2018 it's like the 25th 26
87:54 - something like that all right
87:56 - so I'm gonna click here - oh and I need
88:00 - to make a project so I'm gonna call this
88:02 - project so I want to first create a
88:04 - project just try to click enable I'm
88:05 - gonna do this call this coding train
88:07 - test I'm gonna hit create and then I'm
88:11 - gonna go back and search again for
88:13 - quick-draw quick comma draw and I'm
88:20 - gonna grab this here no okay it's so
88:26 - hard to use these API services I'm gonna
88:28 - get this quick-draw API this is where I
88:31 - am select a project okay no I created a
88:35 - project oh oh here we are somehow I made
88:38 - it to the coding train test project you
88:40 - want to create a project and get to your
88:42 - coding train you're well you're not
88:43 - gonna call it Cody right get to your
88:45 - project page now I'm going to find that
88:48 - API it takes a minute for the project to
88:52 - it should actually be created I think I
88:54 - was going too quickly there I'm gonna go
88:55 - to quick draw data API ah there we go
88:57 - now I'm on this page now I'm gonna click
89:00 - enable and I'm in able ngey API
89:04 - okay so now I have this API enable the
89:06 - next thing that I want to do is go here
89:08 - under credentials because I'm going to
89:10 - need an API key so I'm gonna go here
89:12 - under credentials create credential yeah
89:19 - this looks good
89:21 - what API are using that's what I'm using
89:23 - look here's my API key fantastic so
89:28 - here's the thing I am going to
89:29 - regenerate this API key as soon as I
89:31 - finish this video so you won't be able
89:34 - to use it you'll have to create your own
89:35 - and I'm going to copy it copy it and I'm
89:40 - going to very quickly just over here now
89:43 - in my code I'm just going to add it at
89:46 - the top as a comment so I always
89:48 - remember it okay so here's the thing I
89:50 - should mention that this while you can
89:53 - do you can use the API I'm gonna do that
89:56 - right now if you're going to use this
89:58 - for a large project you might want to
90:00 - actually consider self hosting the API
90:01 - which is kind of what I did in the
90:03 - previous video but actually using
90:04 - Google's code which is probably much
90:06 - more robust and it's a lot more
90:08 - possibilities but once I have my API key
90:10 - all I need to do and I'm gonna scroll
90:12 - down here to API middle where I just
90:16 - need to go to this particular URL so
90:19 - let's grab this URL I am going to I'm
90:24 - gonna use the load JSON function in p5
90:26 - I'm gonna paste this in here so now what
90:29 - I want to do is I want to say drawing
90:30 - category I know that cat is a category
90:32 - I'm gonna say ID so I could ask for a
90:35 - very specific drawing but I think I can
90:37 - actually just say random to get a random
90:38 - one and then get my API key and then I
90:43 - mean I don't is animated I don't want it
90:46 - animated and format equals I want it
90:49 - JSON like I want to get that JSON so
90:51 - let's see if I take this URL now not
90:57 - found
91:00 - all right what do we think I did wrong
91:04 - pause for a second hear me I am so me
91:08 - how did you get your successful get
91:10 - request he looking over there animated
91:20 - what if I don't give it an ID ah okay oh
91:28 - oh look at that interesting
91:32 - okay great
91:34 - oh hello I'm alright I'm back so
91:43 - interestingly enough even though the
91:45 - documentation says ID required ID number
91:51 - or random I thought this mint means I
91:54 - can actually type random into the URL
91:56 - query string but maybe not because now
91:59 - if I go back here and I just zoom in up
92:01 - here and get rid of ID equals random
92:04 - just start with key I can see there we
92:07 - go each time I do this I'm going to get
92:09 - a random cat drawing here in JSON so
92:13 - look at this lovely
92:15 - alright so great we're now using this
92:17 - API so I can go back here I can go back
92:21 - to my code and I'm gonna say I'm gonna
92:25 - say a constant URL equals so I'm just
92:29 - gonna save this and obviously I would
92:31 - want to do something more I could do so
92:33 - much hereby I could actually form the
92:35 - URL with the particular category but cat
92:39 - aghori but right now I am just going to
92:43 - keep that and I'm gonna in setup I'm
92:45 - gonna say load JSON URL got I'm gonna
92:50 - give it a callback got cat and I'm gonna
92:52 - write this got cat function drawing and
92:58 - I'm just going to say console dot log
93:00 - drawing so let's see that in p5 if I
93:05 - actually and I'm going to take we get
93:08 - rid of the draw function if I've
93:10 - actually got there we go
93:12 - drawing so this
93:14 - looks like there it is so you can see
93:16 - down here in the console all that data
93:18 - came in so all that data came in so I've
93:20 - got the cat and now guess what I can
93:23 - draw it okay so let's just make this 255
93:27 - 255 so oh I wonder if this is the
93:30 - simplified data so it actually probably
93:34 - isn't to simplify data or maybe it is
93:46 - I'm gonna be fine lots of github issues
93:49 - timeout for a second
93:52 - I like that solar liner wrote Dan is a
93:57 - dad confirmed I know exactly what solar
93:59 - liner is referring to do we know is this
94:04 - the simplified data will return raw
94:11 - time-based data Oh otherwise simplified
94:14 - data
94:17 - good where was I
94:31 - so looking back at the documentation I
94:34 - just realized is Anna made is animated
94:37 - if I set that to true I will get the
94:39 - data back that actually has the timing
94:41 - information related to how the user drew
94:44 - the drawing in down to the millisecond
94:47 - but which in my previous coding
94:48 - challenge I didn't bother to use I just
94:50 - use this simplified data which is just
94:52 - the x and y values of the particular
94:55 - path that the user that the user drew
94:58 - and it also is reduced normalized to 255
95:04 - by 255 pixels square so I want to use
95:06 - the simplified data just to make my life
95:08 - easier because as I mentioned I need to
95:09 - go get something to eat
95:10 - is Pizza one of the categories it's the
95:14 - only food one that I could think of you
95:16 - know that's like you know vegan quinoa
95:19 - Bowl or something is one of the
95:21 - categories let's try pizza
95:25 - yeah looks like pizza came in or
95:28 - something so now what I'm going to do
95:30 - here is in got cat I'm now gonna call it
95:33 - got pizza got pizza what I'm going to do
95:38 - I really I could just go to my previous
95:40 - code do I dare
95:42 - I couldn't we actually probably rewrite
95:44 - this code it's a lunchtime you go up the
95:48 - other video I'll link to the time in the
95:49 - video or actually write this portion
95:51 - right now I'm gonna go to github.com
95:54 - slash coding train website and I'm gonna
95:58 - go to coding challenges all the way down
96:00 - to quick reading challenge 122 quick
96:03 - draw sketch is and this is the code
96:06 - right here where I in draw where I draw
96:12 - that particular pattern let's look at
96:18 - this basically actually here's the thing
96:21 - this whole thing there's no reason for
96:23 - me to rewrite this just to prove that
96:25 - this works this is the entire code and I
96:30 - am going to go back to my code I'm going
96:35 - to paste my entire thing in here the
96:38 - only thing I'm going to change is
96:40 - instead of my own node server
96:42 - / cat I am going to go to the particular
96:45 - URL now there might be some slight
96:47 - differences here but let's see what
96:49 - happens I don't see a cat let's try that
97:04 - again
97:07 - blocked by Coors I don't have the chorus
97:13 - problem before
97:30 - also that Kors arrow should have coming
97:33 - up in
97:44 - Oh
98:02 - guess what everybody
98:04 - oops hold on guess what everybody so
98:13 - before I had made it actually was the
98:16 - error that yes reload the site
98:34 - so Mattoon when we edit this like I
98:36 - don't need to go and find that Coors
98:38 - thing because that was a red herring I
98:41 - don't know why I got that error but this
98:44 - is the problem Oh guess what I found the
98:48 - problem when I made my own node server
98:52 - I sent the data back for the drawing in
98:56 - a drawing property of the data boy that
99:00 - was a terrible way to explain it I wrote
99:02 - my own node server so I had the actual
99:04 - data for the sketch the drawing the
99:06 - doodle embedded inside of the data
99:08 - coming back dot drawing but that's not
99:10 - the case with the Google API the cat or
99:12 - the pizza is just the data itself so if
99:16 - I now do this and now hit run
99:25 - come on pizza
99:40 - huh
99:45 - it's a good that's a very long timpani
99:48 - effect
99:55 - oh it just didn't work for the first one
100:01 - why is that it needs like a minute so
100:11 - weird what is going on
100:26 - I'm getting it sometimes and not other
100:32 - times
100:38 - so weird
100:45 - I'm getting the Coors error
100:57 - look I'm getting it in various places I
101:04 - think
101:19 - I think this is a weird p5 web Google
101:23 - API is also dot drawing seriously so
101:27 - that wasn't the problem
101:28 - oh it is not drawing I'm just a lunatic
101:41 - all right that that never mind Matt's
101:43 - yeah it is the cores issue but it was
101:46 - like I got it in my you know i refresh
101:57 - the page hold on a sec
102:10 - we get really auto-refresh
102:20 - oh do you think it like
102:47 - I think this is there's some weird stuff
102:50 - with the web editor which is really
102:52 - unfortunate
102:55 - [Music]
103:09 - oops
103:34 - Oh No alright alright that's promising
103:46 - it's not the web editor
104:09 - you know just
104:13 - oh I'm over my API limits oh that's the
104:19 - problem okay probably because I was
104:25 - requesting it so often war I know it's
104:34 - hold on
104:41 - where where where is my console there we
104:45 - go okay can I do you think somebody used
104:51 - my key crazily
105:01 - yes somehow I think I've been foiled by
105:04 - somebody watching me cuz there's no way
105:07 - I made seventeen thousand eight hundred
105:12 - ninety nine yeah look at this watch
105:13 - here's the problem yeah this is the
105:21 - problem all right I'm gonna have to kill
105:25 - my key regenerate something and not make
105:30 - it public while I'm live-streaming why
105:32 - why can't we can't this is why we can't
105:34 - have nice things people I might actually
105:38 - just have to leave and come back and do
105:40 - this another time unfortunately or
105:41 - actually uh me I am so me could I
105:44 - perhaps use your key I promise
105:48 - can I use your key can you generate me a
105:51 - key and what I'll do is I'll put it in
105:56 - the code without I mean I maybe I can
106:06 - just generate my own new key I could
106:12 - have also like locked it to my IP
106:14 - address or something but
106:40 - okay thank you so I'm getting a new key
106:44 - and I will make my screen invisible when
106:52 - I get it
107:04 - [Music]
107:12 - okay I've got the key let me just get
107:15 - put it in a way that I can transfer it
107:16 - really quickly oh are you kidding me
107:19 - oh I have to like to factor again oh
107:28 - wait hold on don't worry everybody this
107:40 - will be ready in a second
107:48 - yeah I'll make a new sketch - I don't
107:53 - know what a minute I I've got a way
107:55 - around this
107:56 - I will secret
108:11 - okay create secret just okay all right
108:18 - scream going away so what I'm doing now
108:22 - is I'm getting that key you can't see
108:27 - what I'm doing I'm getting this key
108:35 - getting messages Here I am going to
108:50 - I am going to put the key in the code
108:54 - you won't be able to see that and then
109:06 - what I'm going to do oh shoot ah hold on
109:16 - everybody hopefully I didn't mess up
109:17 - shoot I might have messed up I won't say
109:21 - what I did that I might have messed up
109:23 - though
109:37 - heíd address bar do I hide the address
109:43 - bar in Chrome
109:57 - how do I hide the address bar in chrome
110:08 - I'll be back here
110:23 - how do I hide the address bar in chrome
110:27 - f11 nope that didn't work that's
110:33 - probably like a PC thing make sure this
110:40 - actually works
111:34 - I don't want to go into full-screen
111:36 - because oh woops sorry as soon as I get
111:51 - this to work
112:01 - and I will come back live
112:13 - there we go okay so I have it working
112:28 - oh that's all I need to do is hide the
112:38 - address bar there's got to be it go to
112:41 - about flags and the compact Flags
112:53 - compact
112:57 - address
113:07 - address book settings compact the
113:30 - address
113:32 - seriously won't i can't hide the address
113:36 - bar I have an idea actually all right
113:38 - fine
113:48 - okay
113:59 - alright I'm not going I'm just gonna
114:02 - delete the URL from the address bar use
114:07 - tape to hide it okay this is a working
114:13 - version I deleted the URL from the
114:17 - address bar cannot know where this oh
114:20 - you know there's oh my goodness there's
114:22 - an easy way to follow oh it's a way to
114:24 - find this ah you know what deleting the
114:29 - address bar is is no good because but
114:33 - anyway I just got a move on to finish
114:35 - this before somebody gets it because
114:36 - it's way too easy to get it okay I just
114:42 - realized okay okay
114:47 - I'm back actually so the problem that I
114:50 - was having was not a cores error or some
114:53 - other error there was no error the
114:55 - problem was the people of the internet
114:57 - that's why we can't have nice things
114:58 - somebody used my took my API key and
115:01 - started using it and I exceeded my quota
115:04 - so I have a new API key and I'm going to
115:06 - you can't sorry just run it quickly
115:14 - oh wait hold on we could do it quickly
115:24 - [Music]
115:25 - hi I'm back and I'm moving very quickly
115:28 - because the reason it wasn't working
115:30 - look at my code wasn't some mistake I
115:32 - made wasn't the dreaded cours error it
115:35 - was that I exceeded my quota now how
115:36 - could I possibly have exceeded my quota
115:38 - because I certainly did not make
115:42 - something like 19,000 API requests in
115:47 - the last few minutes and in fact
115:48 - somebody watching this this is why we
115:50 - can't have nice things people must have
115:53 - taken the API key so I have a different
115:55 - API key and because I've talked with you
115:57 - long it probably also just got used but
115:59 - let's hope it's here in this sketch I'm
116:03 - gonna run it for 29 err so let me show
116:16 - you what the error is I thought this was
116:19 - a cours error but it's actually the
116:21 - server responded with the error for 29
116:23 - and for 29 is a issue with the key so
116:27 - I'm gonna I'm gonna I'm gonna conquer
116:29 - this I'm going away I'm gonna generate a
116:32 - new key and then I'm going to
116:34 - immediately run it for the first time
116:36 - live before anybody can possibly get it
116:43 - okay can I the question is can i
116:50 - generate a new key myself that's valid
116:59 - okay I know how to do this goodbye
117:02 - screen this is so sad I'm not gonna be
117:09 - able to have luxury of this I just want
117:11 - you to know whoever you are on the
117:12 - Internet
117:13 - this is definitely one that I should not
117:15 - have done live I guess no this is the
117:23 - old key whatever you saw was the old key
117:29 - so whatever you saw was the old key okay
117:33 - hold on I am going to
117:37 - sign up at mentioned me in slack if
117:42 - somebody has a key faster than I can
117:44 - make another one for myself so whack a
117:52 - no one managed to copy the key from the
117:54 - screen but there's a way to pull up the
117:56 - sketch that I'm writing in the web
117:58 - editor if I was not using the web editor
118:00 - nobody be able to get the key
118:01 - I should just not use the web editor you
118:04 - know what I'm just going to not use the
118:06 - web editor next time but let me just get
118:11 - another key join group I'm joining from
118:20 - my real Google account and then console
118:27 - dot developers.google.com
118:39 - password feels best plan I know okay
118:43 - that just seems like all this extra
118:45 - programming I guess I should do that
118:54 - it's gonna go here and moderate the chat
119:01 - also while I'm here okay oops I'm
119:17 - determined to do this quick
119:38 - sorry me I am Sammy
119:56 - creating a credential okay I have
120:00 - another API key
120:11 - we have another API key thinking here
120:26 - let me get my API key
120:40 - okay have my new API key let's make sure
120:43 - this actually works okay I'm getting
120:53 - drawings now what's gonna autosave shoot
121:02 - you're right about the password field
121:08 - two lines of code what's two lines of
121:11 - code the password field it feels like a
121:13 - lot more than okay I'm gonna do it okay
121:15 - I am going to okay
121:35 - all right don't worry this is not the
121:37 - actual key all right so what I'm gonna
121:46 - do is I'm going to put this at the end
121:50 - and key equals then I am going to here
122:12 - how am I doing this I'm creating like a
122:20 - create input how do I make something a
122:27 - password field
122:46 - how do i password field password input
122:50 - field how do I do that in HTML input
122:53 - type equals password okay
122:57 - [Music]
122:58 - type password know type password oh oh
123:19 - man sir yes okay okay all right great
123:26 - okay and then
123:35 - Plus API key key
123:56 - key input let's call this key input key
124:02 - input equals API key sorry I'm thinking
124:13 - I really need to go eat key no API key
124:17 - all right all right all right I'm gonna
124:25 - do this as part of the coding challenge
124:27 - even though it's irrelevant but you've
124:35 - who hints equals API key I like that all
124:38 - right oh but I just gonna move quickly
124:49 - all right
124:50 - all right I'm gonna I'm gonna conquer
124:52 - you Internet what I'm gonna do here
124:54 - thank you to me I am so me for this
124:56 - suggestion all right I'm gonna conquer
125:01 - you Internet thank you to me I am sue me
125:03 - for this suggestion what I'm gonna do
125:05 - I've already started doing this I'm
125:06 - gonna create an input field key input
125:08 - I'm gonna say key input equals equals
125:11 - create input with nothing in it so oh
125:16 - let me know do I put Auto refresh here
125:18 - oh and let me uncomment this out okay so
125:21 - now we should see there's this input
125:24 - field right so what I'm gonna do now is
125:26 - I'm gonna say key input dot attribute
125:28 - this is all the p5 Dom library type is a
125:32 - password so what this means is anything
125:35 - that I type in here you can't see and
125:38 - then when I call new cat I'm actually
125:42 - going to say I'm gonna get the API key
125:45 - is key input dot value so I'm gonna get
125:48 - the input from the value it's not
125:52 - speaking anymore I'm going to yes I'm
125:55 - gonna get the API key from there and
125:57 - then I'm going to with what I did to
125:59 - this URL is I just left it with key
126:02 - equals blank at the end so now I am
126:07 - going to say plus API key so if the API
126:12 - key is in here if the API key is in here
126:17 - then what will happen is it will pull it
126:23 - from there you won't be able to see it
126:25 - it will pass it to that you won't need
126:27 - to do this
126:28 - you don't need to be crazy I'm just here
126:30 - trying to defeat the internet and
126:33 - unfortunately I might have made a
126:35 - mistake but hold on so I'm gonna get rid
126:38 - of this screen behind me I'm gonna go
126:41 - get my API key
126:44 - I'm gonna put it in my clipboard I'm
126:49 - gonna put this back and gonna paste it
126:52 - in
127:02 - Oh syntax error
127:14 - syntax error what's going on
127:34 - oh I'm not calling you cat I forgot I
127:42 - had new cat commented out because I was
127:44 - so worried
127:51 - mmm hold on hold on I guess the sequence
127:58 - doesn't matter here play No
128:15 - what is going on
128:24 - but wait why do I have this error now
128:29 - it's really 12:40 this is what always
128:33 - happens to me
128:34 - cannot read property value of undefined
128:37 - sketch line 19 what what
128:58 - what is going on oh okay
129:12 - I didn't have okay new cat was commented
129:16 - out so I need to actually call new cat I
129:19 - also need to call new cat after I create
129:22 - that input field
129:23 - okay I'm gonna defeat the Internet here
129:26 - here we go
129:27 - alright the input field is there I now
129:32 - will make this go away I am now quickly
129:36 - going to get my API key coming back here
129:41 - this is coming back and pasting it in
129:44 - here 4:01 that's good
130:03 - my sequence is off I guess I should make
130:08 - a button let's let's make a button yeah
130:35 - this is gonna be fun format yet alright
130:39 - new cat is commented out that was a
130:41 - problem I think what I can want to also
130:43 - do is create a button like start and
130:52 - then I'm going to say start start equals
130:57 - create button start equals create button
131:00 - start and then we say start mousepressed
131:04 - new cat so now okay now I should the
131:11 - sequence should be I'm gonna I'm gonna
131:13 - win the work I'm gonna paste my API key
131:16 - in there then I'm gonna click the start
131:19 - button then I should start seeing my
131:22 - cats and they won't be cats
131:23 - they'll be pizza because I'm gonna go
131:25 - eat lunch but prodigious a salad
131:32 - disappear
131:34 - captain disappear lusion rookie quick
131:41 - get my API key then paste this in here
131:49 - you can see it again now I'm gonna hit
131:51 - start
132:04 - thank you very much I can get another
132:10 - pizza
132:11 - there we go every time I press Start
132:13 - we'll get a pizza I win
132:19 - internet so you won't have to go
132:23 - and so defeat it nobody nobody won here
132:26 - basically we all lost so anyway you can
132:30 - see now there was a point to this the
132:33 - whole point to this was that the exact
132:37 - same code I wrote in the previous coding
132:39 - challenge I can now run from anywhere by
132:46 - using the official quick-draw API from
132:48 - Google I might have to just come back
132:50 - and do this video again but it's going
132:53 - to exist in some form because this was
132:54 - all too insane so yeah so goodbye
133:02 - everybody
133:03 - I am going to take this away so that
133:08 - nobody sees my key by accident and I
133:11 - will see you in a future challenge
133:15 - [Music]
133:24 - all right I got to go everybody that's
133:27 - it I don't know if I'm coming back on
133:29 - Friday now I should be right back on
133:31 - Friday I will be doing something on
133:32 - Friday I I would take questions and
133:35 - stuff but it is 12:45 I'm probably like
133:39 - unbelievably late for something
133:41 - let me just check the calendar here to
133:46 - make sure okay I'm okay I have a little
133:51 - bit of time but I really have to go so
133:58 - so anyway so so yeah so thanks for
134:01 - watching thanks for tuning in this has
134:03 - been the coding train when I will just
134:06 - say - I will take you out with thank you
134:09 - - Espen Larson's
134:24 - [Music]
134:28 - now I have to sit here press this button
134:31 - to stop streaming

Cleaned transcript:

okay okay okay okay okay now you can hear me right it's never a kodick train without I know I just got to wait till the chat like the other wait till the chat catches up and realizes that I am talking that you can hear me now ah still talking to himself no joke okay oh I just got to wait for this all right all right let's let's let's let's begin again hello good morning welcome my name is Dan and this is the coding train oh I said so many interesting and important and funny and elusive illuminating and exciting and magnificent things that I cannot possibly remember it's not a coding train if I don't start with my mic muted by accident every once in a while anyway so why am I here what's going on it's Monday I'm wearing a tshirt this couldn't possibly be the coding train it's like cold outside I'm wearing the tshirts see I had a whole thing good morning and welcome to a very special edition of the coding train on a Monday so it's been a while since I've been here I haven't done a live stream for several weeks now I was at this wonderful event that was really fun and exciting called thinker con I'm wearing the thinker con tshirt and so I was not able to livestream on that Friday and then this past Friday it was a holiday here in the United States other what known as a Thanksgiving so I was not able to livestream on Friday and I just I just I felt the the the sort of need to put some ideas to typing onto screen to Internet so welcome so I'm here this by the way is actually live I noticed there was some confusion at the beginning of the chat before asking is this a premiere or is this live you can have something recorded that is premiered live that you can chat with or you could actually be live or I could be live but I'm actually 30 seconds in the past by the time you see it and then you could be watching this it's a point in the future I recorded there's so many possibilities that's so confusing but right now at this very moment I am live here and I am going to program some stuff so I'm checking out the chat so I'm not gonna be here for super long I will go back to my usual Friday schedule I do I am here though to talk about a few things for at least an hour let me open up a web browser and let me first go to something which I'm very excited about so you might have recently remember that I did a challenge a coding challenge where I attempted to create a logo interpreter logo being the programming language invented in 1967 where you can control this little turtle that moves around the screen and make graphics and I did my cruddy little version of it that I thought was my best attempt on my channel and then you the people created something unbelievable so I'm gonna go to github.com slash coding train slash logo so this is the no I'm not signed in but that's fine this is the community version I'm gonna go here to contributors all of these people have contributed code to this version of the logo project and if I go here and click on this live web demo link I will be here and you'll see look at this okay there's like a design there's the actual syntax highlighting there's a little menu here where I can like pick look and it supports color it hexadecimal with repeat and syntax highlighting and I can look at these different I can look at these different things that are here and I could type my own look at this the coding train logo is here this is unbelievable I don't know what this this but does recenter oh that's crazy oh I can like move it around this is just unbelievable I know how to do all this stuff it's unbelievable to me so thank you everyone I'm really excited about the future possibilities of what we can do in this channel using this so so I will try to do this periodically where a particular coding challenge is put into a separate repository that people can contribute to I don't have difficulty managing all this stuff and I'm figuring out new and interesting ways of doing that for example and sometimes someone just emerges the tasteful toasty on github is now the has permissions to this repository to review and merge pull requests so that's really exciting I do also want to mention then though that if you go to the coding train comm and these are the two these are the twopart coding challenges that for any of these challenges you can also submit no you can also so in addition to contributing to maybe a community version if you've made your own version that's hosted somewhere on your own you can submit that as well so I don't know yeah you can see look at this here I think I showed these already but there is a 3d logo experiment that was submitted here which actually look at this this is amazing that submitted by Dave be soft calm which implements a version of logo where you can run it run it with a 3d render oh my goodness so so much amazing stuff ok so I wanted to mention that what else is coming coming so I am going to it is almost December and I am planning to do a holiday extravaganza but waiting mean I have no plan yet and that will be a fundraiser for the processing foundation so I just want to mention that you don't need to wait for the fundraiser processing foundation is a nun forprofit foundation in the United States that supports a variety of initiatives you can see all the information here on the website and if you go here to support you can find a way to support so I will do a fundraiser at some point for processing I think tomorrow is giving Tuesday so pre giving Tuesday announcement there you go ok so the next thing that I'm going to do is the chaos game okay let's move this so many possibilities here oh I like this oh we can make this one look at this oh boy boy boy so many oh ok so the reason why I'm doing this is at the finger con let me let me thank a few people let me open up thinker con here so I want to thank in particular the organizers of thinker con smarter every day Destin if you're not familiar with a smarter every day channel you probably would enjoy it Sabrina Emily and a Henry from minutephysics I don't know why I don't see Henry here and Robert Quaritch from radio lab or the organizers of this conference it was really fun I got to see the festival the spoken nerd which was mindblowing the awesome I mean I am the target audience for that joke it was really fun and I was lucky enough to get to do a short 10 minute demo I did this demo with James loss let's see author of the I think it's the algorithm archive I think that's the name of his project I'm pretty sure I'm pretty sure that's a project he has a project like this it's got to be the algorithm archive right oh yeah yeah yeah okay and his YouTube channel is Lee iOS OS and I've mentioned I've mentioned his channel before because I used his video on the hypercube to create my hypercube challenge he also has a twitch channel where he does a lot of live streaming so so I'm gonna mention these things algorithm archive thinker Khan so we did a kind of coding competition we had 50 and each program the Chaos game next to each other he was using like Julia and some kind of crazy in VI or something text editor and I was just using my usual p5.js web editor which I'm also going to use right now let me just do this okay and I'm going to call this a chaos game chaos game number file there is also a number file video video which I will reference okay all right so this is what I'm going to do today so Johnny Joestar asks is this not supposed to go on twitch to know so I do not live stream to twitch at one point I was live streaming to to multiple platforms and I for for better or worse I have sort of landed on YouTube as my primary platform for both livestreaming and shorter edited versions of things that happen on the live stream so let's just get started here playing the chaos game oh oh oh before I forget how do I find this okay a doctor circuit I think twitter.com doctor circuit doctor circuit sb espen Sunday Larson is a coded train viewer musician programmer from Norway has his own YouTube channel that you could find created for me music ever that I will premiere at this moment okay thank you spen for this amazing to know how quiet if that was loud super loud or super quiet but I on using that off okay all right let's see Cass game coding challenge this is I think gonna be finally I'm gonna do this in two parts because I'm going to do a really simple version with just a triangle first and then I'm gonna do another version with a more of a variety okay I'm looking for my train whistle here it is alright let me reset I almost want to have a timer here but nothing ever nothing good ever comes from the timer okay the volume was pretty good I wouldn't change it okay all right hello welcome to a cup okay that's okay that's so good okay me me me me me me me me my alright hello welcome to a Cody couch coding challenge last last try last try everybody hello and welcome to a coding challenge the Chaos game doll alright so why am I doing this coding challenge I recently was lucky enough to attend this amazing event finger Con in Huntsville Alabama thank you to smarter every day and the other organizers of thinker con this was a mindblowing event and at this event I was I had the chance to do a live demo of some coding in front of people it's a rocket was nuts was a Saturn rocket look kind of like this and I did this with James sloth who is the author of the algorithm archive has a YouTube channel as well you might remember references to his youtube channel in the have his youtube channel up the iOS OS know what is a hypercube come on seriously seriously what happened to his was always the first one look here's mine how come I don't have my B you too premium on just sign in this is oh boy oh boy don't I have YouTube premium ok everybody just take a moment here we go here we go there we go learning is something I've always enjoyed ok hold on a sec I want to thank the right people here don't worry this is this is all gonna happen in a moment but if I have a little okay so Destin Justin smarter everyday Sandlin Dustin's sand Lynn Henry Henry minute physics I got to get everybody's name that I want to thank Henry Reich Emily graslie Emily graslie Sabrina Cruz Robert Krulwich okay yes I'm using an invisible computer isn't that amazing this is my my script over here I have a script okay how can I hold on I'm just gonna add let me let me do this you you've got to realize that half the time on the coding train live is just me taking care of stuff that I need to take care of so I'm over here and let's say I have YouTube where do I find my YouTube premium that I'm logged in over here and then I have like family sharing so family premium family so I have this manage so how do i yeah family sharing settings one two three four five six you can share with up to six members so I just need to share listen you two delete add a family member so my family member now I have a new family member it's coding train choo choo coding train choo choo at gmail.com and send join my family now I have no idea what's gonna happen here so I'm whoops I am going to now I'm going to just I'm gonna do this for a second I forgot to have a keyboard shortcut for this ah there we go I am going to go into the email I don't I just want to I don't know what's in the email of that account have never logged into it you're invited to join a Google family group accept invitation get started join family welcome to the family everybody so now if I go here and it refresh learning there we go alright no more ads thank you okay uh now remember how I was about to do a coding challenge it's like ten fifty I don't have any water okay here we go everyone back to select channel chat yes okay Oh where's my alright okay here we go actually maybe what I should do is know sorry everybody here hold on this is the actual code from thinker con which might make sense for me to start with this let me just get rid of some and of course I made some silly err counters not to find all right okay James sloths and what is the name Leo Leo SOS Lea iOS OS okay all right here we go a little jogging little exercise hello and welcome to a coding challenge the Chaos game okay this is exactly what I'm going to make in this coding challenge Thank You Prasanth Kumar for these super chat no more super chats please it rubs me hello and welcome to a coding challenge the Chaos game this is exactly what I'm going to make in this coding challenge why am I going to make it so recently I was very lucky to attend this amazing event called thinker con I'm wearing my tshirt from thinker con um thank you to the organisers of thinker con Destin Sandlin from smarter every day and Henry Reich and Emily graslie and Sabrina Cruz and Robert Cole rich this one event was mindblowing Lee awesome and amazing I met so many wonderful people links to finger con and various other YouTube channels related in the this video's description so while I was there I met for the first time in person a james schloss who is the author of the algorithm archive a wonderful website with many sorts of algorithms in it read more about it also from the YouTube channel that I have no idea how to pronounce still but only iOS OS and I've used a lot of his videos before as inspiration and ideas okay so James and I did a live coding demo in person at thinker Khan creating this the Chaos game so what is the Chaos game well the Chaos game the Chaos game I have to explain what it is now No that was that was pretty good that was pretty good cast game pretty good originally oh yeah then I have the numberphile video yeah the Chaos game is a silly wasn't gonna cry who's no crying encoding all right the Chaos game refers to a method of picking random points and iteratively moving point the previous point you picked to the next point in oh you know what there's not really a good way for me to explain it to you other than diagramming it and actually just writing the code for it for more background on the cast game I certainly would suggest this particular video from numberphile so what what what's amazing to me about the cast game is it's there's a very that's a very very simple idea so the way we're going to play the Chaos game is we are going to have a two dimensional space that two dimensional space is going to start with a set of seed points now I'm going to for the moment just create three sort of fixed seed points in the form of a triangle of course heading three points are basically gonna make a triangle let's roll on one line but that's another topic for another day and then what I'm going to do is I am just going to pick a random point anywhere that was such a fail third try is the charm third charms the third okay I got a random point and now I'm gonna start with this random point then if I were somebody who didn't code what I would have to this is the problem what I don't live stream often enough I have a lot of trouble I'm just gonna start what I want to do this with no edits whatsoever so you the viewing audience it's just gonna have to bear with me I promise that I am NOT going to stop again just needed a little warmup just needed to kind of get myself going for the day and now here we go this will all be over soon in more ways than one hello welcome to a coding challenge the trolls game so this is the Chaos game playing out right behind me um this is actually code that I wrote at this wonderful event that I recently got the chance to attend called thinker con thank you to the organisers of thicker con Destin Sandlin Henry Reich Emily graslie Sabrina Cruz and Robert Krulwich links to their information and websites in this video description this was like a mindblowing ly awesome event and while I was there I programmed in front of people underneath a rocket a Saturn rocket depicted here with James schloss now I never met James floss in person before but you might remember that I've used James floss is a YouTube channel as inspiration for other videos like the tesseract over here so James and I I think he used like Julia and like VI but I programmed this Chaos game algorithm in the P 5 web editor and that's exactly what I'm gonna do right now in homage to the wonderful time I had at thinker con so what is the cast game so first of all I would recommend this numberphile video about the Chaos game for background it is an iterative process of picking random points and and doing some math with those points and seeing what happens afterwards so rather than try to define it you can of course always read the Wikipedia page very tempted to do a dramatic reading of it I'm just going to describe to you how it works over here on the whiteboard so let's say we have a two dimensional plane this is a two dimensional plane and what I'm going to do is I'm going to start with a set of seed points so and maybe I'm going to put those points as an equilateral triangle but as you'll see eventually at some point I could have 4c points 5c points I could put them anywhere and then what I'm going to do is I'm going to play the Chaos game and the first thing I'm gonna do is pick a random point on the wall here we go first try earlier today earlier I was doing another take and I'd have to do that like six times I'm very lucky now okay so so this is my first random point now what I'm going to do is I need to pick a random number one two or three a B or C zero one or two how do I do that do I have a I don't know I'll just pick one from my my oh I have a book of random numbers five four one five seven so why don't we do seven modulus three right 7 divided by 3 is 2 remainder one so I picked a one zero one two so if this was zero this was one this was two what I'm going to do now is move half way to this point and now I have another point aha okay now pick another so there is number nine eight eight one eight so I just use the last digit 8 modulus 3 is 8 divided by 3 is 2 remainder 2 so 0 1 2 so now I'm going to go half way to this point and I could keep doing this over and over again and if you watch the numberphile video you'll see somebody do this actually physically with rulers and pens and all sorts of artistic talent I have none of those things so but I do know a little bit about programming and so this is something I can program so let's actually go program this and then see what happens all right so I'm going to use the p5 GS web editor this is I think a simple enough project I'm gonna go here I'm just going to go to the editor home page here and I'm going to this chaos Game one safe all right so let's start this off so I've got my two dimensional canvas what I need first are those seed points so I'm going to do this in a very simple way and then all right thank you by the way to Espinosa and dr. serpent on Twitter who created the our factor this later song which is like my new favorite world links to more about essence music in this video's description okay so I'm creating these three points you know you don't you know what I'm gonna put them in a random spot I'm gonna make the seed points themselves actually random why not right so I'm gonna have it at point a point B and a point C so I need three points ax am i standing in front of the code a kind of M so let me move this over and let me move this over let me give myself let me just use a window width and window height so I cover the whole thing and then I'm gonna make it a black background we're good alright so what I want to do now is let me draw those points so I'm going to say stroke 255 stroke weight eight so I just want to see those points a X I just want to see them so we should see three points now how come I don't see any points ah because I am drawing the background over and over and draw so let's do this here okay so every time I run this sketch I am going to now have three new points alright so now let's play the chaos game so what I am then I need a kind of global X Y we need a global X Y and what I'm going to do with that is I am also going to have X Y be some other random point and what I'm going to do in draw is say stroke let's make it like a nice RGB color and I'm going to draw a point at X Y and we can see okay there it is so this is right every time I run this I have my three seed points and I have this new pink dot which is the X Y so now what do I need to do what I need to do is I need to say let me pick one of those three points and move halfway there so the first thing I need to do here is just pick a random number one two or three right but this is going to give me a floatingpoint number so what I want to say now actually is give me floor that which will take off the decimal place and then if I get a zero I'm going to do one thing otherwise if I get a one I'm gonna do another thing and and I know I know there's all but just remember I know I'm overusing the sound effect right now but it's the first day I have to use it it makes me so happy so if I pick zero what I want to do is move half way I want to move half way right to this point guess what I could use some math right I could take the X of this the X of this / I've got a new X but there is actually a function in p5 called lerp lerp stands for linear interpolation meaning interpolate from one number to the other in a linear fashion by some amount so if I want to linearly but I want to linear interpolate if I want to learn from this point to this point by point five watch what I get to do fifty percent that's halfway there so I'm going to say x equals ler X ax 0.5 then I'm gonna do the same thing for Y and then I'm going to do here I'm gonna do it with BX look it's already happening the cast game is already happening over here look now I only have two points so you can see all the points end up just on that one line right every time I restart this all the points end up going between point a point zero and one but now let's make some magic happen whoops let's do the last possibility let's plug in the see and see what happens okay here we go what's going on do I see some pattern emerging here well I am playing the Chaos game this looks like it could be kind of familiar let's be a little bit more methodical about this let me actually start with an equal a perfect equilateral triangle I don't know what I mean by perfect but then what I'm going to do what do I need to do an equilateral triangle boy this is an equilateral triangle has an angle of 60 degrees so if I want to figure out from this top point how far down and how far over to go I just need to use the angle 60 degrees and cosine and sine I've probably got some video where I explain that right so I need to go you know what I should just do forget the equal I know I said I wasn't going to do any edits I feel like the equilateral triangle is a bit of a digression that I don't need to have in this of it well that's a nice one so let's let me go back so actually this won't be an equilateral triangle but it'll be simpler let me just put these seed points at the corners and then I so so I'm gonna put these seed points at the corners and then we're going to see what happens and then let's so we can start to see something emerging here this pattern that's emerging it's happening kind of slowly so what I might like to do a couple things I might like to do first of all I think it's I'm gonna make the points a little less thick then I'm also going to give them a little bit of alpha again I have no artistic talent so I shouldn't do what I'm doing and then I'm going to draw 100 of them each time through draw there we go there we go look what's happening so pretty so beautiful let's forget about the Alpha all right oh and you know we can do which is fun why not what happens if I give it different colors like here if I pick zero let's try this one color if I pick one let's try a different color and we can sort it and we can see now we can see there are actually three different sections in a way of this what is it called say it with me sierpinski triangle so this is what's amazing the chaos game this very simple algorithm will produce a perfect rendering of a fractal pattern this one very famously is known as the sierpinski triangle very little code I've got the sierpinski triangle right there so this coding challenge is actually complete but it's not over I mean the video is gonna end at some point when I stop rambling but let's think about some things that we could do for example anytime you make something like this you might think to yourself what are some parameters that I could start tweaking well why should I bother why should I start with only three seed points why should I only have why should I only go 50% of the way each time there why should I have an equal probability of going to each one aren't there some other things we could apply to this so this is now your exercise create your own version of this could you make an array of seed points could you vary the distance the the the percentage did a distance you go to each point could you vary the probabilities of how you pick each point what else could you do with color how could you render this could you connect the lines could you use different shapes what if you did this without and you had to erase the background so you're actually like piling up all the points in this big array there's so many possibilities I'm gonna come back in the second part and at least do the part I'm gonna refactor this later but not too much later where I'm gonna at least make this an array of seed points and and play around with that 50% value so I'm gonna do that much don't watch that video yet if it exists if it doesn't exist who can't watch it try this on your own and then share with me your results and then you'll see my extra little step with this and that'll be that okay if you're looking for the code by the way when especially when I do something in the p5 web editor you can just go to this particular URL which will also be in the video's description and I do have a page about this challenge also on the coding range okay thanks and see you the next time all right okay whoohoo all right so that was number one I'm just gonna move right on dr. circuit all right all right so let me do duplicate ooh I like this that's crazy okay all right hello and welcome to coding challenge the Chaos game pop dude electric boogaloo thank you Espen Larsen dr. circuit on Twitter for creating the I will refractor this later song this coding challenge is in honor of that song because guess what later is now I will refactor this now so what I'm gonna do in this coding challenge is expand this idea of the Kaos game instead of merely creating the sierpinski triangle I'm going to make a version of this where there could be more than three points seed points and that as the points move as the newly random point move moves from point to point to point I I might move by a different percentage than 50% so if you didn't watch the previous coding challenge where I made this you could pause now and go watch that or you could just stay here with me right now let's be together let's be friends on the Internet programming stuff okay so the first thing that I want to do to refactor this again but I'm not gonna overdo it use it sparingly otherwise people will get irritated and annoyed and I'm sure I will hear about it um the first thing I want to do is I am going to make a array called seed maybe I should call it seed points let's just call it points I don't know let's call it points and instead of having a X a Y what I'm going to do in this array let's get rid of this first I just want to recreate this exactly I am going to say I'm gonna have three points and I'm gonna create a new point which is a vector I'm going to use vector create vector function to make a new point anywhere randomly in the canvas I know I've run a little bit out of space here but that's fine and then I'm gonna say points push V okay and then I am going to have a point called current which is also going to be a vector a random vector I'm good there we go there we go so now what I can do is again I have just refactored this two instead of having separate XY variables for all four points I have an array that keeps my three seed points and I have my current point in and all current point is a separate variable and both of those are p5 vectors a vector being an object that can hold an X Y and a Z but I'm not gonna use the Z right now although you should do this in 3d but I'm not going to all right so then I'm going to say for let P of points and I'm gonna say a point P X P dot Y so we should see there we go those are my first three seed points and then what I'm going to do here is random the length and this is actually now oh you know what I don't even need to do this guess what the random function in p5 I'm gonna say like next equal to random function and p5 will give me a random object out of that array now if I want to pick them with a different probability I'd have to do something different but here this next is now going to be one of those three points randomly and then all I need to do is say stroke I'm gonna still give it this color and then I'm gonna say next dot x equals alert this so I'm LARPing but I'm gonna lurk between next and and the current oh and current is the result of that so the current is the thing that's moving and it really doesn't matter but I like to think of it in this order current is moving and then I think there's a lack sealer vector function so I could do this in one line of code that's another reactor this later now so there we go and then all I need to do is draw the point let's give all I need to do is draw that point and here we go look at this tada now one thing I should probably do is also reset it let's write it let's actually all this stuff here is kind of the process of let's write a function of resetting like I want right now it's like resetting every time I change the code because the p5 editors can figure to like relaunch the sketch but I think what I would prefer to do here is write my own function called reset it's a nice refactoring and I need to empty the array and I'm going to say points equals here so this function reset will just sort of reseed the environments and I could do something I could do it whenever I click the mouse but just for right now I can say if frame count modulus like 100 equals zero then reset so what that's gonna do is every 100 frames right because a modulus of the number 100 will equal zero anytime then frame count is divisible by 100 with a remainder of zero so you can see over and over again this is gonna so no I'm here I have refactored this but now that I have refactored this okay so for example I can just do this no oh yeah look now interestingly enough I don't really get a pattern that's super interesting to look at with four points kind of accidentally I sometimes M and so what happens if I have eight points whoa this is crazy now probably what I would want to do what might make sense for me to do is place these points around a circle just I mean it's interesting to have them randomly but I think I would prefer just in sort of figuring out what I want to do with this to have all those points around a circle right so you can think about actually this was a way of getting my equal triangle that I was looking for so what if I have eight points and then I get some kind of like hexagon octagon septagon whatever the number of sides is based on the number of points for three points it's a triangle so you can you could sort of do the math there of what's gonna be if I increase the number of points so let's actually not reset them randomly but let's reset them and in that sense I don't need to this can actually just be in setup and always keep these same seed points and what I'm going to do is say I'm gonna have an angle which is going to equal to pi divided by eight so let's make a I'm gonna use Const for a constant just to be have fun I'm gonna call that n oh oh I didn't did I not switch back all right don't worry everybody I have figured it out camera camera camera I know so hold on I'm gonna go back alright alright here we go alright alright so what I'm gonna do here actually is uh I'm gonna have a fixed set of points right so the points are I'm just gonna do once in setup and what I'm gonna do is I'm gonna use the constant Const N equals 8 and I know I could be using constant other places the code if you want to know more about Const I made a video about it where I got a bunch of things wrong five different resource for that but so I just now I'm making n points and what I'm going to do is say the angle is two pi divided by I that's a bad idea because I don't want to divide by zero so all right well we'll say oh it's I know what it is it's I times two pi divided by n that's what it is right because I want to have I'm looking for and if look if n is four for example I want zero degrees 90 degrees 180 degrees 270 degrees it's probably gonna go the other way because the screen is flipped but that's the idea so now what I'm going to do is say create vector at some number like let's just do 200 times cosine of the angle oh you know what I think there's P 5 vector from P 5 dot vector from angle I think as a function hangul so that's gonna make a vector from that angle and then I can say V dot V V dot multiply 100 and that's working but I need to translate to width / 2 height divided by 2 and now we have these points in the center of course I also if I want to I need to do that here okay so there we go we can see now I've created eight points around and let's actually use let's make that a little why is this down here oh oh there's a weird mistake goofy mistake happening Oh cuz when I reset this is this is kind of you know what I'm gonna do the translate is fine but it's bothering me I'm just gonna make life easier on myself and say add width / 2 height / right I'm just gonna move that to the center manually by adding that to the vector okay now what I want to do is multiply it by like width / 2 or something okay great so now you see those are all my points we're still playing the Kaos game now what I want to do is I am going to have a variable called percent and I also I just want to make like a lot more points really quickly so I can just sort of see the pattern and what I'm gonna do now is I am going to try I'm going to when I lurk I'm going to lurk by that percent and let's try different values so let's try so let's go back to 0.5 and this is what I get let's try 0.25 interesting let's try point 1 let's try and end of for 0.25 6 do I need like we could something more interesting I just could have sworn when I thought about this earlier I'd get more interesting patterns timeout for a second all right let me think about this could've sworn when I was looking at this page here inside a pentagon oh but the current cannot be the same let's try Pentagon they're up I just should have picked five [Laughter] alright I'm back Neko monsoon in the chat said try three just to see if you didn't break anything so I made the point N equals I made n equal three with the percentage of point five and we can see I have the sierpinski triangle actually if you look on the Wikipedia page for Kaos game you'll start to see a bunch of these a point inside a square repeatedly jumps half the distance towards a randomly chosen vertex but the currently chosen vertex cannot be two places away from the previously chosen vertex so this is interesting right so I could actually start to create some of these patterns by modifying how I pick a particular point so this one actually would be nice let's do the Pentagon one a point inside a Pentagon repeatly jumps half of the distance but the current chosen vertex cannot be the same this is going to be an easy one for us to implement we just need to get a new random number that's not the same as the previous one so so let's go back here let's first make this five okay so we can see even with five a Pentagon we're kind of getting a somewhat of an interesting pattern here and I might I don't know why I obsess over this sort of stuff but I kind of feel like let's give this just like a little bit of alpha and make the stroke weight one and do like a thousand points all right so we could just sort of see this pattern more quickly okay now what was I doing so what I want to do now is not allow the next point to be the same as what was previously chosen and so there's a variety of ways I could do this but actually I could just create a way of I could just create a way of ignoring it if it happens to be the same one so let's say previous I'm gonna create a variable called previous and right here when I pick previous equals next and I'm gonna say as long as next is not equal to previous then I can do this stuff so now look at this there we go the Chaos game Pentagon with one slight modification and you know what I I don't want it to keep resetting I just want it to I want to tell it not to reset and I want to go to share full screen and I'm gonna put this in a different window and we're gonna bring this up here and we're just going to enjoy this now okay here we go we're done chaos game thank you very much look at this it's so beautiful intricate and amazing so I now encourage you now you have really got something right you can start to make a variety of patterns and here's the thing one thing that you could do that actually is really it you could think about that I didn't do if we go up here look at this this is actually a little sort of animated gif showing you the process of actually moving the points from one spot to another and then sort of branching out so imagine what you could do if instead of just picking all the points and layering them you actually created a system or you animate the process of building this pattern and you can see you can see maybe you can recreate some of these other patterns by doing this rules this one would be a nice one to create you could try different percentages and see what you make so thank you for watching this second part of the chaos game I think we are done with all the cast games stuff I'm going to do if you make your own version of this please visit the coding train comm link that's in this video's description there there are instructions for how to submit a leg to the version of the cast game that you made yourself you can share with me your images or gifts on twitter at Schiffman or at the coding train hashtag coding chaos game and I'll see you in a future Kotick jaunt all right I don't know maybe I will all right everyone I think we got a couple coding challenges out of that I got my equilateral triangle in the end at least yes I did I'm just curious here I sort of thought varying the percentage would be interesting but apparently not so much ooh that's kind of cool so I guess it is maybe the idea was Oh going the hole going further is what I should have done right right it's all about going further uh okay hold on I got to come back we got to include this I don't need a record scratch sound effect I guess this could be done in post that's just not gonna want to add it I mean for a good reason I don't think we should do a record scratch wait wait wait wait wait let's refactor this now and actually I'm not actually gonna refactor it I realized something when I was playing with the percentage earlier and making it lower I started to get much noisier images and of course this is true because I'm not going very far and so the points are sort of layering on top of each other and I'm just getting kind of a cloud of points but what if instead of going halfway there and that's actually I don't I know I'm being kind of a lunatic about this stuff let me just make these white instead of going halfway there what if I go 75% of the way there so actually going further will start to yield some interesting patterns and you can see here now if I say 15 look at this so this is now fifteen points going 75 percent of the way there you know and by the way maybe if I were to make oh and that's 90 percent of the way there if I were to make some sort of slider where I vary the number of points I could go back to putting these points all in a random location that would be kind of interesting let's do that now just curious so where where do I let's do this let's just really quickly I'm just curious to see I got a stop you should I shouldn't be doing this you should be doing this right so you could see okay I don't know that got it so anyway so that's this is a clue to you of what you could now make right that I told you to share with me right you could vary that percentage vary the number of points vary where the seed point starts animate oh so many possibilities okay see you later good bye okay let me put this back however to five and and back 2.5 and there we go and there we go X Nick is asking what if your percent gets larger than one that's an interesting question oh yeah what time is it 1130 Akari oh part 3 says LOM probably not but I'm I'm about ready to go I have to just check something here just checking sorry I like to look at my email okay all right I don't see the demon faces we'd have to stare at this more later okay close these things out so I wanted to also I wanted to let me sign in here oh thank you to oliver harris a new member of the coding train authentication code all right I'm pretty sure now that's so all right so you might recall that somewhat recently I created the quickdraw a quickdraw coding challenge right here where I I use the quickdraw data set the Google quickdraw data set to replay drawings that people all around the world have made various things like cats and rainbows and so on and so forth so to do this I downloaded very large data files full of JSON data of all of the drawing information and then I spun up a little note server to pass individual drawings to a JavaScript web client and so now you know timing wise it's sort of ironically as soon as I did that almost like to the day the Google really creative lab released an api to it called a web component so I wanted to explore this in kind of like a part two the question is do I need to sign up for an API key so no no not quickdraw data set I'm already there a quickdraw component sorry this is what I'm looking for so I do need an API key okay so how do I get an API key I don't want to do it with NPM install join the quickdraw API Google Group API services library okay so let me okay let's do this whoa MoMA this seems weird doesn't make any sense I think that's a mistake on there is it like console google.com or something yeah maybe it's here api's and services the library quick draw quick know does anybody know what I'm looking for here this is API slash library this is so weird no quick draw API there's a quick web demo this is so weird why is it taking me to Pantheon Corp I mean this does not feel like where I should be logging in does anybody discovered where do I really need to search is it is it really as simple as reading the instructions and actually searching for this more precisely okay let's try this No consult developers.google.com let's try that that's where I want to try this yeah this is what I'm looking for hmm cloud google.com well I might have to come back to this the API is just not public yet oh but it's right here this is not a private component all right well maybe I'll use this API key of selfhosting huh quick draw files Oh appspot look at this like for example let's see this Drock component rjs oh the readme says to join the group which says they'll give you access to the API alright so I'm gonna come back I think I'm gonna I'm gonna join that group and come back next time and look at that API thank you which is good because I kind of have to go anyway I wanted to do this sort of thing cork on thing Google Creative Lab is and I don't know what what count Chris is asking is Google Creative Lab an official Google github account oh do I just have to literally join the group ok let's do that I just kind of would prefer to join it from so let me get an API key different a slightly different way for a second because I'd rather actually whoops or actually you know what this is fine all right let's all right let's let's all right let's do this let's join group okay so you can now see and enable the quickdraw API in your own project at Google cloud really it's so weird why is it still MoMA inside Google maybe that's really where I'm supposed to be going but there it is private create quickdraw coding train okay okay what API is do I have I should probably actually show how to do this in the video enable okay okay can I delete this library Oh Google Oh Google why why do you do this to me how do I delete it and I want a new project delete ah so delete this oh come on delete yes okay okay I don't think anyone watching the video is gonna be able to follow this and then I should be able to do me I am so me if you're actually watching I should be able to just do a once I have the API key I should just be able to do make a call to quick draw files appspot.com with with with just a get request right to get just like the JSON back like what I want to do is just get the data like I want to draw it myself fetch image data draw image now oh yeah like this drawing API middle one this is what I want to do so category ID equals or random API key format JSON okay great so this is this is what I need okay all right okay okay so now and okay okay all right everybody so give me a second here remind me later okay oops Oh I definitely need to go eat only new tasks I open up go into Chrome where there I should probably not do this now oh boy oh I just want to get this open I here we go I know the camera went out okay okay everybody I should definitely go eat lunch but said I was going to do this so dude you hear that that was my stomach growling I don't know if that came in through the microphone or not I don't think I need the thinker Khan shirt anymore I was wearing that for so let me this will work better for the microphone I'm sorry this is gonna make some weird sound for a second apologies for all the scratchy scratchy okay all right oh that mean okay well the problem if I go and have lunch which I should do I won't be coming back so I'm not doing this now or not probably should practice this first yeah okay and here we go all right here we go hello welcome to a followup coding challenge quick draw again thingamabob quick draw API web component addition so previously in a coding challenge I downloaded a large data file from the Google quickdraw dataset I talked about what the Google quickdraw dataset is it's just a collection of millions and millions of these doodles that people made playing the Google quickdraw game and I created a node server locally on my computer to open that very large data file and pass information about the drawings to a JavaScript program that would read that information and then replay the drawings in a canvas basically almost to the day that I released that coding challenge Google came out with something new called the quickdraw component and what the quickdraw web component is it allows you to actually using markup and importing a JavaScript file just actually embed quickdraw doodles in a web page I'm not going to do that in this video what I'm gonna do is actually show you how to use the API directly to pull the data from the drawing yourself so that you can draw it in a canvas so I'm gonna do what I'm gonna do just to be clear I know that wasn't clear at all I'm gonna do exactly what I did in the previous coding challenge but instead of downloading a very large data file and spinning up my own node server I'm just gonna ask the Google API itself for a drawing and then I'm gonna go eat lunch we should probably eat lunch now well maybe I maybe like pizza or something I don't not a big pizza eater but we'll pick some food themed drawing and just to be sure that I it's actually working to do it this way I am going to do this in the p5 web editor so that I can be sure that you could be sure that I'm not like secretly downloading a big file running a node server somewhere why would I do that though captain disillusion will come for me if I cry to fake something on my channel I was hoping that maybe it something in post just got added there got doubt it like a rainbow okay uhhuh so here's the thing it's a bit confusing because this is so new this API is available it's out there but it's a bit confusing to use it so the first thing you're going to want to do is go to this github repository quick draw component and then down here somewhere in here you're going to want to find this join the quick draw API Google group now by the time you're watching this this may have changed but I will hopefully keep the code uptodate but maybe the signup process will have changed so as soon as you go to the Google quick draw API Google Group I joined I'll end up this page click join you'll need some sort of Google account then you're gonna want to go to your Google API dashboard so here I am I'm at console developers.google.com slash API slash dashboard there are a lot of API is there that you could look at and what I'm gonna do is now search for quickdraw I made a project by accident which I didn't mean to but this is what I'm looking for quickdraw exclamation point data API private now this will not appear for you to you unless you join that Google group so that's a little bit of the confusing thing at least at the time that I'm doing this today November something 2018 it's like the 25th 26 something like that all right so I'm gonna click here oh and I need to make a project so I'm gonna call this project so I want to first create a project just try to click enable I'm gonna do this call this coding train test I'm gonna hit create and then I'm gonna go back and search again for quickdraw quick comma draw and I'm gonna grab this here no okay it's so hard to use these API services I'm gonna get this quickdraw API this is where I am select a project okay no I created a project oh oh here we are somehow I made it to the coding train test project you want to create a project and get to your coding train you're well you're not gonna call it Cody right get to your project page now I'm going to find that API it takes a minute for the project to it should actually be created I think I was going too quickly there I'm gonna go to quick draw data API ah there we go now I'm on this page now I'm gonna click enable and I'm in able ngey API okay so now I have this API enable the next thing that I want to do is go here under credentials because I'm going to need an API key so I'm gonna go here under credentials create credential yeah this looks good what API are using that's what I'm using look here's my API key fantastic so here's the thing I am going to regenerate this API key as soon as I finish this video so you won't be able to use it you'll have to create your own and I'm going to copy it copy it and I'm going to very quickly just over here now in my code I'm just going to add it at the top as a comment so I always remember it okay so here's the thing I should mention that this while you can do you can use the API I'm gonna do that right now if you're going to use this for a large project you might want to actually consider self hosting the API which is kind of what I did in the previous video but actually using Google's code which is probably much more robust and it's a lot more possibilities but once I have my API key all I need to do and I'm gonna scroll down here to API middle where I just need to go to this particular URL so let's grab this URL I am going to I'm gonna use the load JSON function in p5 I'm gonna paste this in here so now what I want to do is I want to say drawing category I know that cat is a category I'm gonna say ID so I could ask for a very specific drawing but I think I can actually just say random to get a random one and then get my API key and then I mean I don't is animated I don't want it animated and format equals I want it JSON like I want to get that JSON so let's see if I take this URL now not found all right what do we think I did wrong pause for a second hear me I am so me how did you get your successful get request he looking over there animated what if I don't give it an ID ah okay oh oh look at that interesting okay great oh hello I'm alright I'm back so interestingly enough even though the documentation says ID required ID number or random I thought this mint means I can actually type random into the URL query string but maybe not because now if I go back here and I just zoom in up here and get rid of ID equals random just start with key I can see there we go each time I do this I'm going to get a random cat drawing here in JSON so look at this lovely alright so great we're now using this API so I can go back here I can go back to my code and I'm gonna say I'm gonna say a constant URL equals so I'm just gonna save this and obviously I would want to do something more I could do so much hereby I could actually form the URL with the particular category but cat aghori but right now I am just going to keep that and I'm gonna in setup I'm gonna say load JSON URL got I'm gonna give it a callback got cat and I'm gonna write this got cat function drawing and I'm just going to say console dot log drawing so let's see that in p5 if I actually and I'm going to take we get rid of the draw function if I've actually got there we go drawing so this looks like there it is so you can see down here in the console all that data came in so all that data came in so I've got the cat and now guess what I can draw it okay so let's just make this 255 255 so oh I wonder if this is the simplified data so it actually probably isn't to simplify data or maybe it is I'm gonna be fine lots of github issues timeout for a second I like that solar liner wrote Dan is a dad confirmed I know exactly what solar liner is referring to do we know is this the simplified data will return raw timebased data Oh otherwise simplified data good where was I so looking back at the documentation I just realized is Anna made is animated if I set that to true I will get the data back that actually has the timing information related to how the user drew the drawing in down to the millisecond but which in my previous coding challenge I didn't bother to use I just use this simplified data which is just the x and y values of the particular path that the user that the user drew and it also is reduced normalized to 255 by 255 pixels square so I want to use the simplified data just to make my life easier because as I mentioned I need to go get something to eat is Pizza one of the categories it's the only food one that I could think of you know that's like you know vegan quinoa Bowl or something is one of the categories let's try pizza yeah looks like pizza came in or something so now what I'm going to do here is in got cat I'm now gonna call it got pizza got pizza what I'm going to do I really I could just go to my previous code do I dare I couldn't we actually probably rewrite this code it's a lunchtime you go up the other video I'll link to the time in the video or actually write this portion right now I'm gonna go to github.com slash coding train website and I'm gonna go to coding challenges all the way down to quick reading challenge 122 quick draw sketch is and this is the code right here where I in draw where I draw that particular pattern let's look at this basically actually here's the thing this whole thing there's no reason for me to rewrite this just to prove that this works this is the entire code and I am going to go back to my code I'm going to paste my entire thing in here the only thing I'm going to change is instead of my own node server / cat I am going to go to the particular URL now there might be some slight differences here but let's see what happens I don't see a cat let's try that again blocked by Coors I don't have the chorus problem before also that Kors arrow should have coming up in Oh guess what everybody oops hold on guess what everybody so before I had made it actually was the error that yes reload the site so Mattoon when we edit this like I don't need to go and find that Coors thing because that was a red herring I don't know why I got that error but this is the problem Oh guess what I found the problem when I made my own node server I sent the data back for the drawing in a drawing property of the data boy that was a terrible way to explain it I wrote my own node server so I had the actual data for the sketch the drawing the doodle embedded inside of the data coming back dot drawing but that's not the case with the Google API the cat or the pizza is just the data itself so if I now do this and now hit run come on pizza huh it's a good that's a very long timpani effect oh it just didn't work for the first one why is that it needs like a minute so weird what is going on I'm getting it sometimes and not other times so weird I'm getting the Coors error look I'm getting it in various places I think I think this is a weird p5 web Google API is also dot drawing seriously so that wasn't the problem oh it is not drawing I'm just a lunatic all right that that never mind Matt's yeah it is the cores issue but it was like I got it in my you know i refresh the page hold on a sec we get really autorefresh oh do you think it like I think this is there's some weird stuff with the web editor which is really unfortunate oops Oh No alright alright that's promising it's not the web editor you know just oh I'm over my API limits oh that's the problem okay probably because I was requesting it so often war I know it's hold on where where where is my console there we go okay can I do you think somebody used my key crazily yes somehow I think I've been foiled by somebody watching me cuz there's no way I made seventeen thousand eight hundred ninety nine yeah look at this watch here's the problem yeah this is the problem all right I'm gonna have to kill my key regenerate something and not make it public while I'm livestreaming why why can't we can't this is why we can't have nice things people I might actually just have to leave and come back and do this another time unfortunately or actually uh me I am so me could I perhaps use your key I promise can I use your key can you generate me a key and what I'll do is I'll put it in the code without I mean I maybe I can just generate my own new key I could have also like locked it to my IP address or something but okay thank you so I'm getting a new key and I will make my screen invisible when I get it okay I've got the key let me just get put it in a way that I can transfer it really quickly oh are you kidding me oh I have to like to factor again oh wait hold on don't worry everybody this will be ready in a second yeah I'll make a new sketch I don't know what a minute I I've got a way around this I will secret okay create secret just okay all right scream going away so what I'm doing now is I'm getting that key you can't see what I'm doing I'm getting this key getting messages Here I am going to I am going to put the key in the code you won't be able to see that and then what I'm going to do oh shoot ah hold on everybody hopefully I didn't mess up shoot I might have messed up I won't say what I did that I might have messed up though heíd address bar do I hide the address bar in Chrome how do I hide the address bar in chrome I'll be back here how do I hide the address bar in chrome f11 nope that didn't work that's probably like a PC thing make sure this actually works I don't want to go into fullscreen because oh woops sorry as soon as I get this to work and I will come back live there we go okay so I have it working oh that's all I need to do is hide the address bar there's got to be it go to about flags and the compact Flags compact address address book settings compact the address seriously won't i can't hide the address bar I have an idea actually all right fine okay alright I'm not going I'm just gonna delete the URL from the address bar use tape to hide it okay this is a working version I deleted the URL from the address bar cannot know where this oh you know there's oh my goodness there's an easy way to follow oh it's a way to find this ah you know what deleting the address bar is is no good because but anyway I just got a move on to finish this before somebody gets it because it's way too easy to get it okay I just realized okay okay I'm back actually so the problem that I was having was not a cores error or some other error there was no error the problem was the people of the internet that's why we can't have nice things somebody used my took my API key and started using it and I exceeded my quota so I have a new API key and I'm going to you can't sorry just run it quickly oh wait hold on we could do it quickly hi I'm back and I'm moving very quickly because the reason it wasn't working look at my code wasn't some mistake I made wasn't the dreaded cours error it was that I exceeded my quota now how could I possibly have exceeded my quota because I certainly did not make something like 19,000 API requests in the last few minutes and in fact somebody watching this this is why we can't have nice things people must have taken the API key so I have a different API key and because I've talked with you long it probably also just got used but let's hope it's here in this sketch I'm gonna run it for 29 err so let me show you what the error is I thought this was a cours error but it's actually the server responded with the error for 29 and for 29 is a issue with the key so I'm gonna I'm gonna I'm gonna conquer this I'm going away I'm gonna generate a new key and then I'm going to immediately run it for the first time live before anybody can possibly get it okay can I the question is can i generate a new key myself that's valid okay I know how to do this goodbye screen this is so sad I'm not gonna be able to have luxury of this I just want you to know whoever you are on the Internet this is definitely one that I should not have done live I guess no this is the old key whatever you saw was the old key so whatever you saw was the old key okay hold on I am going to sign up at mentioned me in slack if somebody has a key faster than I can make another one for myself so whack a no one managed to copy the key from the screen but there's a way to pull up the sketch that I'm writing in the web editor if I was not using the web editor nobody be able to get the key I should just not use the web editor you know what I'm just going to not use the web editor next time but let me just get another key join group I'm joining from my real Google account and then console dot developers.google.com password feels best plan I know okay that just seems like all this extra programming I guess I should do that it's gonna go here and moderate the chat also while I'm here okay oops I'm determined to do this quick sorry me I am Sammy creating a credential okay I have another API key we have another API key thinking here let me get my API key okay have my new API key let's make sure this actually works okay I'm getting drawings now what's gonna autosave shoot you're right about the password field two lines of code what's two lines of code the password field it feels like a lot more than okay I'm gonna do it okay I am going to okay all right don't worry this is not the actual key all right so what I'm gonna do is I'm going to put this at the end and key equals then I am going to here how am I doing this I'm creating like a create input how do I make something a password field how do i password field password input field how do I do that in HTML input type equals password okay type password know type password oh oh man sir yes okay okay all right great okay and then Plus API key key key input let's call this key input key input equals API key sorry I'm thinking I really need to go eat key no API key all right all right all right I'm gonna do this as part of the coding challenge even though it's irrelevant but you've who hints equals API key I like that all right oh but I just gonna move quickly all right all right I'm gonna I'm gonna conquer you Internet what I'm gonna do here thank you to me I am so me for this suggestion all right I'm gonna conquer you Internet thank you to me I am sue me for this suggestion what I'm gonna do I've already started doing this I'm gonna create an input field key input I'm gonna say key input equals equals create input with nothing in it so oh let me know do I put Auto refresh here oh and let me uncomment this out okay so now we should see there's this input field right so what I'm gonna do now is I'm gonna say key input dot attribute this is all the p5 Dom library type is a password so what this means is anything that I type in here you can't see and then when I call new cat I'm actually going to say I'm gonna get the API key is key input dot value so I'm gonna get the input from the value it's not speaking anymore I'm going to yes I'm gonna get the API key from there and then I'm going to with what I did to this URL is I just left it with key equals blank at the end so now I am going to say plus API key so if the API key is in here if the API key is in here then what will happen is it will pull it from there you won't be able to see it it will pass it to that you won't need to do this you don't need to be crazy I'm just here trying to defeat the internet and unfortunately I might have made a mistake but hold on so I'm gonna get rid of this screen behind me I'm gonna go get my API key I'm gonna put it in my clipboard I'm gonna put this back and gonna paste it in Oh syntax error syntax error what's going on oh I'm not calling you cat I forgot I had new cat commented out because I was so worried mmm hold on hold on I guess the sequence doesn't matter here play No what is going on but wait why do I have this error now it's really 1240 this is what always happens to me cannot read property value of undefined sketch line 19 what what what is going on oh okay I didn't have okay new cat was commented out so I need to actually call new cat I also need to call new cat after I create that input field okay I'm gonna defeat the Internet here here we go alright the input field is there I now will make this go away I am now quickly going to get my API key coming back here this is coming back and pasting it in here 401 that's good my sequence is off I guess I should make a button let's let's make a button yeah this is gonna be fun format yet alright new cat is commented out that was a problem I think what I can want to also do is create a button like start and then I'm going to say start start equals create button start equals create button start and then we say start mousepressed new cat so now okay now I should the sequence should be I'm gonna I'm gonna win the work I'm gonna paste my API key in there then I'm gonna click the start button then I should start seeing my cats and they won't be cats they'll be pizza because I'm gonna go eat lunch but prodigious a salad disappear captain disappear lusion rookie quick get my API key then paste this in here you can see it again now I'm gonna hit start thank you very much I can get another pizza there we go every time I press Start we'll get a pizza I win internet so you won't have to go and so defeat it nobody nobody won here basically we all lost so anyway you can see now there was a point to this the whole point to this was that the exact same code I wrote in the previous coding challenge I can now run from anywhere by using the official quickdraw API from Google I might have to just come back and do this video again but it's going to exist in some form because this was all too insane so yeah so goodbye everybody I am going to take this away so that nobody sees my key by accident and I will see you in a future challenge all right I got to go everybody that's it I don't know if I'm coming back on Friday now I should be right back on Friday I will be doing something on Friday I I would take questions and stuff but it is 1245 I'm probably like unbelievably late for something let me just check the calendar here to make sure okay I'm okay I have a little bit of time but I really have to go so so anyway so so yeah so thanks for watching thanks for tuning in this has been the coding train when I will just say I will take you out with thank you Espen Larson's now I have to sit here press this button to stop streaming
