With timestamps:

00:00 - part two of a fin 111 seventh analysis
00:03 - okay here we go
00:04 - so the first thing that I need to do is
00:07 - I want to load this file so so let's
00:14 - let's make a variable I'm gonna call it
00:16 - a fin again a fin equals low JSON eighth
00:20 - a fin 111 JSON and I just want to see
00:24 - that that worked I'm gonna say console
00:26 - that log a fin okay so we're starting up
00:29 - and I just want to see great so we can
00:31 - see that that list has been loaded which
00:32 - is wonderful now the next thing I need
00:34 - is I want to have a place so let's add
00:39 - some stuff here a fin sentiment demo
00:45 - let's say type here and make a text area
00:53 - of like this text area ID equals text
01:04 - text area okay so now I should have on
01:10 - the HTML page we should see whoops I
01:14 - definitely did something wrong text area
01:18 - text area there we go okay so we should
01:23 - see Oh a global function text because
01:27 - your code has already used it so I think
01:28 - that's bad idea too
01:30 - so let's call this txt okay so we can
01:34 - see here that now how do I by the way
01:36 - with text area I kind of just want it to
01:38 - already start as like a slightly bigger
01:39 - thing which is kind of unnecessary I'm
01:41 - gonna say columns equals 50 so that's
01:44 - good and rows equals 10
01:49 - okay so now I can the idea here is that
01:52 - what I want to do is as I type here
01:55 - I am happy how are you what I want to do
02:01 - is I want to live calculate the
02:04 - sentiment of this text and have it
02:06 - appear below even as I press every
02:07 - single key so first I need to bind some
02:11 - sort of event so I needed an event for
02:13 - every time I type into this text area so
02:15 - first of all I need access to this text
02:17 - area in JavaScript and I can do that
02:19 - with the Select function if I were
02:20 - jQuery I'd use that dollar sign thing or
02:22 - document dot get element by ID and with
02:25 - a regular JavaScript so I called ID was
02:28 - txt so what I need to do is say VAR t x2
02:33 - equals select by the ID txt and then the
02:37 - event that I want to track is called an
02:40 - input event there's a changed event
02:42 - there's a change event and an input
02:44 - event it's a little weird and in job in
02:46 - the browser the changed event is only if
02:47 - I hit like enter or tab so I like
02:50 - finished my action but the input event
02:52 - happens any time I press a key at all so
02:54 - text input I'm gonna call this event
02:57 - typing and I'm gonna say now function
03:00 - typing and I'm just gonna say console
03:03 - dot log txt value so what I want to see
03:07 - is as I'm typing I just want to see that
03:10 - I have access to the words that are in
03:12 - what I'm typing okay so let's refresh
03:15 - this and say hello how are you and you
03:19 - can see that this is working that as I
03:22 - type what I'm typing every time I hit a
03:24 - key it comes out in the console there
03:28 - okay so that's perfect that's what I
03:30 - want now I can start to calculate the
03:32 - sentiment score so what should I how
03:36 - should I calculate the sentiment score
03:37 - the first thing I need to do is split up
03:40 - the text by words and I can use a
03:42 - regular expression see my videos about
03:44 - regular expressions using the split
03:46 - function so I'm gonna say var I'm gonna
03:48 - say tokens I'm gonna say words words
03:50 - equals txt dot split and then I want to
03:53 - split by a regular expression and a
03:55 - regular expression in JavaScript is a
03:57 - string like a sequence of characters
03:59 - that goes between forward slashes rather
04:02 - than between quotes and it defines a
04:04 - pattern in the text I have a whole set
04:05 - of videos all about regular expressions
04:07 - what the pattern is what separates the
04:10 - words so whitespace commas periods
04:13 - punctuation whitespace that sort of
04:15 - things basically I'm gonna do something
04:17 - kind of silly and simple here I'm gonna
04:18 - say anything that's not a letter or
04:22 - number
04:23 - and so there's I can actually just say
04:27 - /w so this is /w is any letter or number
04:32 - and backslash capital W is any non
04:34 - letter non number and I could also say
04:37 - maybe I should say or an apostrophe
04:39 - oh no but that's included no one I
04:40 - should have let it be or not anyway
04:42 - whatever this will be good enough for
04:44 - now you can refer there's you can spend
04:46 - your life dupatta to trying to define
04:48 - the best regular expression for
04:49 - splitting tokenizing a sentence into
04:52 - words or words a paragraph in descent
04:54 - into sentences or essay into paragraphs
04:56 - all that sort of thing okay so I'm gonna
04:59 - do that and then I'm just gonna see that
05:01 - this works I'm gonna say console dot log
05:03 - words just to check that hello Oh
05:07 - txt dot split is not a function well of
05:09 - course it's not a function because txt
05:14 - oh I can't come up with variable names
05:20 - were text input fine equals T X T dot
05:24 - value so I want to get the value that's
05:28 - the contents and then I need to split
05:30 - that so that's good that I checked that
05:32 - and now I'm gonna say hello this is a
05:36 - test so you can see as I type it's
05:39 - splitting up into an array of words
05:41 - perfect so now I need to iterate over
05:43 - that array of words so I need to say for
05:46 - VAR I equals 0 is less than words dot
05:50 - length I plus plus now here's to
05:53 - something that's important let's go back
05:55 - to our a fin 111 list notice something
05:58 - here all of these words are entirely
06:01 - lowercase there is not a single
06:04 - uppercase letter in this particular word
06:07 - list so one thing I definitely want to
06:09 - do is when I'm in my code the first
06:13 - thing I want to do is say word equals
06:15 - words index i dot to lowercase because
06:19 - when I look up to see what its score is
06:21 - I need a lowercase word so now now that
06:25 - I've done that then I want to say does
06:31 - does that word exist so if a fin word
06:39 - but does it exist now I could use this
06:41 - has I should probably use the has owned
06:43 - property thing so this is me asking like
06:46 - this will if let's say the word is cat
06:48 - if cat is in the F in word list I'm
06:51 - gonna get the score for cat like three
06:53 - maybe kitten would be like four I don't
06:56 - know Catherine kittens they're equal I
06:58 - love anyone I'm so worried about
07:00 - offending words and their positive
07:03 - negative score very strange personality
07:06 - I have okay but there was a point to
07:08 - what I was saying which is that that
07:14 - right if cat exists I'll get the score
07:17 - like for if it doesn't I'll get
07:18 - undefined which will evaluate to false
07:20 - but there's a weird sort of issue here
07:22 - like sometimes like there might be like
07:24 - some built in JavaScript properties that
07:26 - happen to have the same word as a word
07:27 - and they'll in the essay so to be a
07:30 - hundred percent sure I can say has own
07:33 - property this will evaluate to true or
07:36 - false if word is a particular property
07:40 - of this list that I've developed that's
07:42 - not part of the sort of JavaScript
07:43 - object thingy language itself whatever
07:46 - okay so if it does first of all I need
07:49 - to say score equals zero I can say score
07:53 - plus equals effing word so now I can
07:57 - look up the score and add it and then
07:58 - what I'm gonna do is let's let's add a
08:02 - little area for results I'm gonna say
08:06 - PID equals
08:09 - score and let's I'm gonna add some
08:13 - things p score comparative and what else
08:20 - maybe I'll do a word list just so we can
08:23 - see everything on the page so okay so I
08:26 - added three paragraphs because I want to
08:28 - like report some information on the page
08:30 - so the first thing I can do now in
08:32 - JavaScript here is say I can save our
08:38 - score P equals select score and then say
08:43 - scorpio HTML is the score
08:50 - this is sort of I have there's better
08:52 - ways I could do this but this will work
08:53 - just fine Comparative select comparative
08:59 - and then the comparative is the score /
09:06 - words length so the score divided by the
09:09 - number of words in the file and then
09:12 - also maybe word list select word list
09:19 - and word list HTML oh I'm not saving the
09:23 - words so let's make a list so let's
09:29 - let's make a list we'll call it scored
09:32 - words and it's an empty array and if I
09:35 - ever find one of those I'm gonna say
09:37 - scored words don't push the word oh and
09:42 - maybe : its score something like that so
09:49 - you know this I'm not being very
09:50 - thoughtful about the design of the
09:52 - display of the results but comparative
09:56 - okay but let's see if this works
09:59 - hello oh uncaught reference error score
10:02 - words is not defined scored words scored
10:07 - words and Oh scored words I don't know
10:12 - what I'm doing here okay let's try this
10:15 - so okay let's try typing I love kittens
10:19 - and rainbows also unicorns and the color
10:25 - purple and pink and red green and blue I
10:30 - am happy so so very very happy and
10:34 - joyful so you can see Oh some couple
10:39 - things are wrong here this is not at all
10:42 - correct so what's happening here it's
10:45 - getting the information from the it's
10:50 - getting the information from the JSON
10:52 - file and it's adding those numbers
10:54 - together it's saying 3 plus 3 plus 3
10:56 - plus 3 equals 3 3 3 3 3 so it's not
11:00 - adding them as numbers it thinks
11:02 - everything is a string
11:02 - which is also I'm getting some goofy
11:04 - results here so one thing that I need to
11:07 - do here is make sure that when I get
11:11 - that score I convert it to a number so
11:15 - let's fix that right that that score
11:17 - that's coming out of the word listen I
11:18 - need to convert it to a number I should
11:21 - have just happy sad not so sad but not
11:27 - so happy okay happy and joyful and full
11:31 - of scared fear for things that scream
11:38 - and monsters but I like I still
11:42 - recording because it dies by my weird
11:46 - nonsensical typing so you can see I'm
11:48 - now getting now I'm seeing some weird
11:51 - stuff going on here which might just be
11:54 - the fact that I'm not being very
11:55 - thoughtful about how I display the
11:57 - information but let's do some more tests
12:00 - here if I say sad okay that works
12:03 - exactly what I would expect let me move
12:05 - this over here right I got a total score
12:08 - of negative two comparative is negative
12:09 - two because it's negative two divided by
12:11 - one word total if I say happy right okay
12:14 - so this is working and abandoned I
12:17 - remember was in there is negative one so
12:20 - it's just the formatting so what so
12:21 - we're really done I could copy and paste
12:23 - some text like I don't know if I go to
12:26 - kittens Wikipedia let's get some text
12:33 - about kittens and see what happens if I
12:39 - paste it in here we can see I got a
12:43 - score of four comparative of 0.04 this
12:46 - is positive text the words that I got
12:50 - were solid and enjoy I should get a
12:53 - score of six
12:59 - so something is wrong here right what
13:02 - did I forget I made it there's a bug in
13:03 - my code oh I put the score once again
13:09 - I'm conflating the total score and the
13:13 - individual word score so I should really
13:15 - if I want to be thoughtful about this
13:16 - boy I'm terrible this was stuff I should
13:20 - really say var score equals I don't
13:23 - think it was that at all I think it was
13:26 - this was my problem all along so I want
13:30 - to make sure I have a difference between
13:33 - the individual words score and the
13:37 - actual total score that I'm adding up
13:40 - and so this is the total score and this
13:43 - is the total score and the in the things
13:46 - that I'm putting into the list just add
13:55 - some padding here for formatting now
13:58 - happy-sad this is better yes no no no no
14:06 - no no no no no no no okay so there we go
14:13 - you can see now I have real-time
14:15 - sentiment analysis where I could be much
14:18 - you know if you're watching this video
14:19 - if you're gonna make something with this
14:21 - you could be so much more thoughtful in
14:23 - terms of how you display the results
14:25 - whether it's color of visualization
14:27 - formatting the numbers nicely formatting
14:29 - the list of words in a different way but
14:31 - you have the basic framework for it here
14:34 - I will show you that there is a major
14:35 - issue with this particular approach okay
14:40 - so here's a particular issue here is my
14:43 - text that I am going to type right now I
14:47 - am NOT sad I am not at all unhappy I am
14:54 - not feeling worse today so you can see
14:58 - I've got a really really negative score
15:01 - of negative six even though I said I'm
15:03 - not sad I am not at all unhappy
15:05 - I'm not feeling worse today because this
15:07 - particular technique is only looking at
15:10 - the raw counts
15:12 - words and those scores if I want it to
15:15 - be a little more thoughtful about this I
15:17 - could try to add a little bit of natural
15:19 - language processing for example the
15:21 - JavaScript library NLP compromise that I
15:23 - demonstrated can look for um if a
15:26 - statement is a negation and you could
15:28 - perhaps invert the score and then of
15:30 - course I could use a more sophisticated
15:31 - not training methodology I'm actually
15:34 - not using a word list but having a
15:36 - machine learning system learn about
15:38 - positive text learn about negative text
15:40 - based on just word frequencies and words
15:43 - being next to each other and that sort
15:44 - of thing in a much more open-ended way
15:45 - but this hopefully should get you
15:47 - started on something if you're
15:49 - interested in its text analysis and how
15:51 - you might apply this to what type of
15:53 - data source and how you might show the
15:55 - result or how you might create an
15:56 - interface for people to type into and
15:58 - give us some information back ok um so
16:02 - in the chat Gaurav writes you must be
16:06 - sad that's why you were insisting on it
16:08 - very much and you know what I think
16:09 - maybe this is a smarter sentiment
16:11 - analysis technique tonight than I knew
16:14 - because maybe it can read in between the
16:15 - lines ok thanks very much for watching
16:17 - this sentiment analysis video and I'll
16:20 - see you in other videos in the future
16:22 - perhaps

Cleaned transcript:

part two of a fin 111 seventh analysis okay here we go so the first thing that I need to do is I want to load this file so so let's let's make a variable I'm gonna call it a fin again a fin equals low JSON eighth a fin 111 JSON and I just want to see that that worked I'm gonna say console that log a fin okay so we're starting up and I just want to see great so we can see that that list has been loaded which is wonderful now the next thing I need is I want to have a place so let's add some stuff here a fin sentiment demo let's say type here and make a text area of like this text area ID equals text text area okay so now I should have on the HTML page we should see whoops I definitely did something wrong text area text area there we go okay so we should see Oh a global function text because your code has already used it so I think that's bad idea too so let's call this txt okay so we can see here that now how do I by the way with text area I kind of just want it to already start as like a slightly bigger thing which is kind of unnecessary I'm gonna say columns equals 50 so that's good and rows equals 10 okay so now I can the idea here is that what I want to do is as I type here I am happy how are you what I want to do is I want to live calculate the sentiment of this text and have it appear below even as I press every single key so first I need to bind some sort of event so I needed an event for every time I type into this text area so first of all I need access to this text area in JavaScript and I can do that with the Select function if I were jQuery I'd use that dollar sign thing or document dot get element by ID and with a regular JavaScript so I called ID was txt so what I need to do is say VAR t x2 equals select by the ID txt and then the event that I want to track is called an input event there's a changed event there's a change event and an input event it's a little weird and in job in the browser the changed event is only if I hit like enter or tab so I like finished my action but the input event happens any time I press a key at all so text input I'm gonna call this event typing and I'm gonna say now function typing and I'm just gonna say console dot log txt value so what I want to see is as I'm typing I just want to see that I have access to the words that are in what I'm typing okay so let's refresh this and say hello how are you and you can see that this is working that as I type what I'm typing every time I hit a key it comes out in the console there okay so that's perfect that's what I want now I can start to calculate the sentiment score so what should I how should I calculate the sentiment score the first thing I need to do is split up the text by words and I can use a regular expression see my videos about regular expressions using the split function so I'm gonna say var I'm gonna say tokens I'm gonna say words words equals txt dot split and then I want to split by a regular expression and a regular expression in JavaScript is a string like a sequence of characters that goes between forward slashes rather than between quotes and it defines a pattern in the text I have a whole set of videos all about regular expressions what the pattern is what separates the words so whitespace commas periods punctuation whitespace that sort of things basically I'm gonna do something kind of silly and simple here I'm gonna say anything that's not a letter or number and so there's I can actually just say /w so this is /w is any letter or number and backslash capital W is any non letter non number and I could also say maybe I should say or an apostrophe oh no but that's included no one I should have let it be or not anyway whatever this will be good enough for now you can refer there's you can spend your life dupatta to trying to define the best regular expression for splitting tokenizing a sentence into words or words a paragraph in descent into sentences or essay into paragraphs all that sort of thing okay so I'm gonna do that and then I'm just gonna see that this works I'm gonna say console dot log words just to check that hello Oh txt dot split is not a function well of course it's not a function because txt oh I can't come up with variable names were text input fine equals T X T dot value so I want to get the value that's the contents and then I need to split that so that's good that I checked that and now I'm gonna say hello this is a test so you can see as I type it's splitting up into an array of words perfect so now I need to iterate over that array of words so I need to say for VAR I equals 0 is less than words dot length I plus plus now here's to something that's important let's go back to our a fin 111 list notice something here all of these words are entirely lowercase there is not a single uppercase letter in this particular word list so one thing I definitely want to do is when I'm in my code the first thing I want to do is say word equals words index i dot to lowercase because when I look up to see what its score is I need a lowercase word so now now that I've done that then I want to say does does that word exist so if a fin word but does it exist now I could use this has I should probably use the has owned property thing so this is me asking like this will if let's say the word is cat if cat is in the F in word list I'm gonna get the score for cat like three maybe kitten would be like four I don't know Catherine kittens they're equal I love anyone I'm so worried about offending words and their positive negative score very strange personality I have okay but there was a point to what I was saying which is that that right if cat exists I'll get the score like for if it doesn't I'll get undefined which will evaluate to false but there's a weird sort of issue here like sometimes like there might be like some built in JavaScript properties that happen to have the same word as a word and they'll in the essay so to be a hundred percent sure I can say has own property this will evaluate to true or false if word is a particular property of this list that I've developed that's not part of the sort of JavaScript object thingy language itself whatever okay so if it does first of all I need to say score equals zero I can say score plus equals effing word so now I can look up the score and add it and then what I'm gonna do is let's let's add a little area for results I'm gonna say PID equals score and let's I'm gonna add some things p score comparative and what else maybe I'll do a word list just so we can see everything on the page so okay so I added three paragraphs because I want to like report some information on the page so the first thing I can do now in JavaScript here is say I can save our score P equals select score and then say scorpio HTML is the score this is sort of I have there's better ways I could do this but this will work just fine Comparative select comparative and then the comparative is the score / words length so the score divided by the number of words in the file and then also maybe word list select word list and word list HTML oh I'm not saving the words so let's make a list so let's let's make a list we'll call it scored words and it's an empty array and if I ever find one of those I'm gonna say scored words don't push the word oh and maybe its score something like that so you know this I'm not being very thoughtful about the design of the display of the results but comparative okay but let's see if this works hello oh uncaught reference error score words is not defined scored words scored words and Oh scored words I don't know what I'm doing here okay let's try this so okay let's try typing I love kittens and rainbows also unicorns and the color purple and pink and red green and blue I am happy so so very very happy and joyful so you can see Oh some couple things are wrong here this is not at all correct so what's happening here it's getting the information from the it's getting the information from the JSON file and it's adding those numbers together it's saying 3 plus 3 plus 3 plus 3 equals 3 3 3 3 3 so it's not adding them as numbers it thinks everything is a string which is also I'm getting some goofy results here so one thing that I need to do here is make sure that when I get that score I convert it to a number so let's fix that right that that score that's coming out of the word listen I need to convert it to a number I should have just happy sad not so sad but not so happy okay happy and joyful and full of scared fear for things that scream and monsters but I like I still recording because it dies by my weird nonsensical typing so you can see I'm now getting now I'm seeing some weird stuff going on here which might just be the fact that I'm not being very thoughtful about how I display the information but let's do some more tests here if I say sad okay that works exactly what I would expect let me move this over here right I got a total score of negative two comparative is negative two because it's negative two divided by one word total if I say happy right okay so this is working and abandoned I remember was in there is negative one so it's just the formatting so what so we're really done I could copy and paste some text like I don't know if I go to kittens Wikipedia let's get some text about kittens and see what happens if I paste it in here we can see I got a score of four comparative of 0.04 this is positive text the words that I got were solid and enjoy I should get a score of six so something is wrong here right what did I forget I made it there's a bug in my code oh I put the score once again I'm conflating the total score and the individual word score so I should really if I want to be thoughtful about this boy I'm terrible this was stuff I should really say var score equals I don't think it was that at all I think it was this was my problem all along so I want to make sure I have a difference between the individual words score and the actual total score that I'm adding up and so this is the total score and this is the total score and the in the things that I'm putting into the list just add some padding here for formatting now happysad this is better yes no no no no no no no no no no no okay so there we go you can see now I have realtime sentiment analysis where I could be much you know if you're watching this video if you're gonna make something with this you could be so much more thoughtful in terms of how you display the results whether it's color of visualization formatting the numbers nicely formatting the list of words in a different way but you have the basic framework for it here I will show you that there is a major issue with this particular approach okay so here's a particular issue here is my text that I am going to type right now I am NOT sad I am not at all unhappy I am not feeling worse today so you can see I've got a really really negative score of negative six even though I said I'm not sad I am not at all unhappy I'm not feeling worse today because this particular technique is only looking at the raw counts words and those scores if I want it to be a little more thoughtful about this I could try to add a little bit of natural language processing for example the JavaScript library NLP compromise that I demonstrated can look for um if a statement is a negation and you could perhaps invert the score and then of course I could use a more sophisticated not training methodology I'm actually not using a word list but having a machine learning system learn about positive text learn about negative text based on just word frequencies and words being next to each other and that sort of thing in a much more openended way but this hopefully should get you started on something if you're interested in its text analysis and how you might apply this to what type of data source and how you might show the result or how you might create an interface for people to type into and give us some information back ok um so in the chat Gaurav writes you must be sad that's why you were insisting on it very much and you know what I think maybe this is a smarter sentiment analysis technique tonight than I knew because maybe it can read in between the lines ok thanks very much for watching this sentiment analysis video and I'll see you in other videos in the future perhaps
