With timestamps:

00:00 - welcome to another p5.js JavaScript
00:02 - video tutorials thingamabob that I'm
00:05 - making I you might be wondering oh my
00:06 - goodness that's the processing website I
00:08 - thought this was a p5.js video well the
00:11 - reason why I'm referencing in this is
00:12 - that there is a nice tutorial on the
00:13 - processing website I say it's nice but
00:16 - maybe it's not whatever it's a tutorial
00:17 - and it's about two-dimensional arrays
00:19 - and you can sort of see if you're
00:22 - working in a programming language like
00:23 - Java that there's a very specific way to
00:26 - define an array as two dimensions
00:28 - because I say I want to have integers
00:30 - and I'm gonna have not just one set of
00:32 - square brackets meaning it's an array a
00:33 - list of things I'm gonna have two sets
00:35 - of square brackets meaning it's a
00:37 - two-dimensional array but in JavaScript
00:39 - there's it's a little bit weird and funk
00:42 - funny and I don't really know how to do
00:44 - it I mean I've kind of done it before
00:45 - I'm gonna see what happens with this
00:46 - video to talk about two-dimensional
00:48 - arrays in JavaScript but I might
00:49 - reference you this tutorial to look at
00:51 - just sort of to get some context if you
00:53 - want to take a look at it so first
00:54 - though before I start looking at code
00:58 - let's think about what what we mean what
01:00 - do I mean when I'm talking about a
01:01 - two-dimensional array so this is kind of
01:03 - like a visualization of an array this
01:06 - array has four spots in it it might have
01:08 - numbers like four negative three seven
01:10 - eight and each one of those spots has an
01:13 - index zero one two three so I can
01:16 - reference I could say give me you know
01:19 - array index two and what will I get I
01:24 - will get the value seven because that's
01:26 - what's in array index two now in a lot
01:29 - of programming scenarios your data
01:31 - appears to you in your mind or in your
01:34 - on your pencil a napkin sketch more like
01:36 - this you know pixels look like this if
01:38 - you're programming any kind of board
01:40 - game that's a grid base type thing a
01:43 - southern automata lots of things kind of
01:46 - work like this in which case you kind of
01:48 - want to think of columns and rows and
01:51 - let's just to make them not the same
01:54 - right so I might want to think of a spot
01:57 - like this as three comma one and if this
02:01 - were an array this would be array index
02:07 - three index one so instead of a single
02:11 - index into a linear one dimension
02:13 - list I have to into indices one being
02:17 - the columns and one being the rows and
02:20 - they're the first one followed by the
02:21 - second one but what is this really in
02:23 - the computer's memory the thing that you
02:25 - have to realize and be aware of is this
02:28 - structure doesn't really exist like so
02:30 - this is a nice way of us to draw B my
02:33 - drawing skills are terrible but that
02:34 - aside visualizing the grid is helpful
02:37 - for our human brains to be understand it
02:39 - but really what this actually is if I
02:41 - were to do this is to say let's take
02:42 - this array which has you know five
02:47 - things in it and let's put it in another
02:49 - array that has two things in it right
02:55 - this is an array of two things and each
02:58 - one of those things has five things in
03:00 - it so a two dimensional array really in
03:02 - the computer's memory is simply an array
03:05 - of arrays and if I were to come back to
03:09 - this particular oh I left that tutorial
03:14 - two dimensional array shoot why do I
03:18 - close that window if I come back to this
03:21 - tutorial you can see the idea here that
03:27 - this is a one dimensional array and
03:29 - here's a two dimensional array which is
03:30 - just really an array of a bunch of
03:32 - arrays but you can kind of look at it
03:34 - like this to think of it as a grid which
03:37 - is very useful so how might you make
03:40 - this work in JavaScript now let's go and
03:43 - actually look at the code some
03:47 - JavaScript code so I have a JavaScript
03:49 - sketch which is doing really nothing
03:51 - here and let's say what I want to do is
03:54 - I want to have some amount of columns
03:58 - like 10 and some amount of rows like 10
04:01 - and I want to be able to say look
04:08 - through all of the columns and all of
04:14 - the rows and what I want to do is I want
04:19 - to draw a rectangle I'm using some
04:24 - hard-coded numbers here
04:25 - but I want to draw a rectangle and I'm
04:32 - going to say stroke zero fill 255 okay
04:37 - so I don't have any array or
04:39 - two-dimensional array at all whoa what
04:42 - did I do wrong here look at that so
04:43 - first I've got a problem here that I did
04:45 - something wrong oh this has to be j j is
04:49 - not defined this would also have to be j
04:52 - thank you very much
04:54 - i'm trying to get a nice nested loop so
04:56 - i can see just the grid pattern so now
04:59 - what i want to do is i want to have a
05:01 - two-dimensional array which is a lookup
05:03 - table which has a color for every single
05:06 - one of these cells in this grid so i
05:08 - want to be able to what i want to be
05:10 - able to say is something like this fill
05:12 - colors i j right i want to be able to
05:17 - say there's some 2-dimensional array
05:19 - structure that looks like this and you
05:22 - know in the array red is here pink is
05:24 - here purple is here right those colors
05:26 - are stored in that two-dimensional array
05:28 - so how do i create this structure well
05:33 - the way that you create an array is like
05:38 - this this is now that's creating an
05:39 - empty array of javascript and you might
05:41 - think okay well this is what i do this
05:44 - does not work that does i don't even
05:45 - know what let's see what sort of weird
05:47 - error we get unexpected token so it's
05:51 - just like that's just totally a syntax
05:52 - error so that doesn't work what i can do
05:56 - however this is a little bit crazy and
05:59 - let me um comment this out for a second
06:02 - and actually i'm just going to use the
06:03 - console here to show you some
06:05 - possibilities so i'm going to make a
06:07 - variable called r which is an array okay
06:11 - so that's now if i go here and just type
06:13 - r we have an empty array now if I were
06:17 - to say our index 0 equals 5 now you can
06:21 - see that's the array it has one thing in
06:23 - it if I were to say our index 1 is 15
06:27 - now I can see the array has 5 and 15 in
06:31 - it now let me make an array again now
06:35 - look at this what if I say our index 0
06:37 - equals an array
06:38 - and our index one equals an array and
06:41 - now what do I have I have a
06:43 - two-dimensional array I have an array of
06:45 - two arrays now those two arrays are
06:47 - empty so they don't have anything in it
06:49 - but if I had done our index 0 equals 1
06:52 - comma 5 comma 9 and our index 1 equals
06:56 - you know negative 3 comma 9 comma 15 now
07:01 - I have to I have an array of two arrays
07:05 - in it so this is now the data structure
07:07 - it's really about creating an array and
07:09 - each spot in that array or multiple
07:11 - arrays this sort of explains the idea
07:13 - but what's a nice elegant way of doing
07:15 - that in code well there's a few
07:17 - different approaches we could take
07:18 - number one I could say in setup right I
07:22 - I want to have this loop where I go
07:24 - through all the columns in the rows oops
07:32 - sorry I've got to comment this stuff
07:35 - back in everything's gone out of crazy
07:38 - whack okay so I now have this loop what
07:42 - I could do is I could say for every
07:44 - column colors index I is an empty array
07:51 - right now let's look again I want to
07:54 - keep that let's go to the sketch and
07:56 - let's look at what colors is it's now an
07:58 - array of a race but all those arrays are
08:01 - empty so what can I do here in here I
08:04 - could say colors index I which is that
08:07 - array index J is random 255 so now if we
08:14 - do this again and I look at what colors
08:16 - is you can see I now have an array of an
08:19 - array so and they all have a number in
08:21 - it so this is now a two-dimensional
08:23 - array an array of an array it's hard for
08:25 - me to visualize it in the console the
08:26 - way I want to sort of like think of it
08:28 - as a matrix but we can use it as such
08:30 - because now I could put this code back
08:32 - and instead of having fill 255 I could
08:37 - actually get those get those values from
08:40 - the array and here we go and you can see
08:43 - now every single one is pulling a color
08:45 - from the array randomly so that's one
08:48 - way of doing it let's think about
08:51 - another
08:52 - way of doing it another thing I could do
08:53 - is if I know in advance I could say new
08:56 - array calls and then I could also say
09:01 - new array
09:03 - oh and then I don't have to say this
09:08 - here right because well hold on a sec I
09:14 - lost my train of thought this gets
09:16 - confusing right
09:17 - I couldn't advance specify the size in
09:20 - that case I know there's an array with a
09:27 - number of columns and then I could say
09:29 - here yeah yeah sorry and then I could
09:32 - say colors index I is a new array with
09:36 - the number of rows in that case I
09:38 - wouldn't actually even have to put
09:39 - anything in it in a way we could refresh
09:42 - it I'm going to get some errors because
09:43 - there's nothing in it
09:44 - but you can see now the array is already
09:46 - filled it's already sort of there has no
09:48 - default values but I can use the I can
09:52 - use the new array function to to kind of
09:55 - specify the size in advance which is
09:57 - just something to sort of see the other
09:59 - thing that I might consider doing I kind
10:00 - of like the way I had it before better
10:02 - was sort of somehow less confusing to me
10:05 - but there's another thing that I might
10:07 - consider doing is I might consider
10:09 - writing a function called something like
10:11 - make 2d array and and give it the
10:17 - arguments column and rows and then I
10:19 - could say var a row R equals new array
10:24 - columns and then for VAR I equals 0 is
10:28 - less than R dot length I plus plus R
10:32 - index I equals new array rows so this
10:36 - would be kind of like a generic function
10:38 - I think this is kind of a nice thing to
10:39 - maybe have in your code which you could
10:41 - just write a function that you give it a
10:43 - width and a height essentially and it
10:44 - just makes an array makes it array with
10:46 - the right number of columns and then for
10:49 - every single column it makes an array
10:50 - with the right number of rows and so
10:52 - then if I were to run this code and I
10:56 - were to say things like make make 2d
10:59 - array you know 10 comma 3 you can see oh
11:03 - I didn't return it I got a
11:05 - they returned that array you can see
11:09 - that I'm automatically getting a
11:11 - two-dimensional array I could say make
11:12 - it you know 2 , you know 100 and you can
11:17 - see I've got an array of 2 arrays with
11:19 - 100 so that's kind of useful to that
11:20 - anywhere in your code then suddenly you
11:23 - need um you need a particular two
11:26 - dimensional rain I think this I just see
11:28 - in the chat this this this particular
11:29 - suggestion is coming up so ok so these
11:33 - are some more about two-dimensional
11:34 - arrays in JavaScript it's probably going
11:36 - to be the thing that I would say if you
11:37 - were looking for an exercise to try at
11:39 - the end of this is fill your array and
11:41 - and let's actually let's actually let's
11:44 - actually do this sorry I'm going to I'm
11:47 - going to do this I'm going to say now
11:49 - colors equals make 2d array calls rows
11:54 - and just make sure this still works so
11:57 - that still works so now I've kind of
11:59 - like made this generic function that I
12:00 - can use I think that's pretty useful and
12:02 - I was going to say for you what I might
12:04 - think about doing is instead of just
12:06 - saying random 255 here how could you
12:08 - make a cell object or an optic what
12:11 - would you do if you have a
12:11 - two-dimensional array of objects what
12:13 - might you store in those objects that
12:14 - might be an interesting thing to think
12:16 - of yes and there's some other
12:19 - suggestions in the chat of how you could
12:21 - use different data types for the array
12:23 - and it can get filled automatically with
12:25 - zeros and stuff like that but there you
12:26 - know those are sort of a side comment so
12:28 - hopefully this helps you and that you'll
12:29 - be able to use this function to make a
12:31 - 2d array in your p5 GS or other
12:33 - JavaScript project thanks for watching
12:36 - see you soon

Cleaned transcript:

welcome to another p5.js JavaScript video tutorials thingamabob that I'm making I you might be wondering oh my goodness that's the processing website I thought this was a p5.js video well the reason why I'm referencing in this is that there is a nice tutorial on the processing website I say it's nice but maybe it's not whatever it's a tutorial and it's about twodimensional arrays and you can sort of see if you're working in a programming language like Java that there's a very specific way to define an array as two dimensions because I say I want to have integers and I'm gonna have not just one set of square brackets meaning it's an array a list of things I'm gonna have two sets of square brackets meaning it's a twodimensional array but in JavaScript there's it's a little bit weird and funk funny and I don't really know how to do it I mean I've kind of done it before I'm gonna see what happens with this video to talk about twodimensional arrays in JavaScript but I might reference you this tutorial to look at just sort of to get some context if you want to take a look at it so first though before I start looking at code let's think about what what we mean what do I mean when I'm talking about a twodimensional array so this is kind of like a visualization of an array this array has four spots in it it might have numbers like four negative three seven eight and each one of those spots has an index zero one two three so I can reference I could say give me you know array index two and what will I get I will get the value seven because that's what's in array index two now in a lot of programming scenarios your data appears to you in your mind or in your on your pencil a napkin sketch more like this you know pixels look like this if you're programming any kind of board game that's a grid base type thing a southern automata lots of things kind of work like this in which case you kind of want to think of columns and rows and let's just to make them not the same right so I might want to think of a spot like this as three comma one and if this were an array this would be array index three index one so instead of a single index into a linear one dimension list I have to into indices one being the columns and one being the rows and they're the first one followed by the second one but what is this really in the computer's memory the thing that you have to realize and be aware of is this structure doesn't really exist like so this is a nice way of us to draw B my drawing skills are terrible but that aside visualizing the grid is helpful for our human brains to be understand it but really what this actually is if I were to do this is to say let's take this array which has you know five things in it and let's put it in another array that has two things in it right this is an array of two things and each one of those things has five things in it so a two dimensional array really in the computer's memory is simply an array of arrays and if I were to come back to this particular oh I left that tutorial two dimensional array shoot why do I close that window if I come back to this tutorial you can see the idea here that this is a one dimensional array and here's a two dimensional array which is just really an array of a bunch of arrays but you can kind of look at it like this to think of it as a grid which is very useful so how might you make this work in JavaScript now let's go and actually look at the code some JavaScript code so I have a JavaScript sketch which is doing really nothing here and let's say what I want to do is I want to have some amount of columns like 10 and some amount of rows like 10 and I want to be able to say look through all of the columns and all of the rows and what I want to do is I want to draw a rectangle I'm using some hardcoded numbers here but I want to draw a rectangle and I'm going to say stroke zero fill 255 okay so I don't have any array or twodimensional array at all whoa what did I do wrong here look at that so first I've got a problem here that I did something wrong oh this has to be j j is not defined this would also have to be j thank you very much i'm trying to get a nice nested loop so i can see just the grid pattern so now what i want to do is i want to have a twodimensional array which is a lookup table which has a color for every single one of these cells in this grid so i want to be able to what i want to be able to say is something like this fill colors i j right i want to be able to say there's some 2dimensional array structure that looks like this and you know in the array red is here pink is here purple is here right those colors are stored in that twodimensional array so how do i create this structure well the way that you create an array is like this this is now that's creating an empty array of javascript and you might think okay well this is what i do this does not work that does i don't even know what let's see what sort of weird error we get unexpected token so it's just like that's just totally a syntax error so that doesn't work what i can do however this is a little bit crazy and let me um comment this out for a second and actually i'm just going to use the console here to show you some possibilities so i'm going to make a variable called r which is an array okay so that's now if i go here and just type r we have an empty array now if I were to say our index 0 equals 5 now you can see that's the array it has one thing in it if I were to say our index 1 is 15 now I can see the array has 5 and 15 in it now let me make an array again now look at this what if I say our index 0 equals an array and our index one equals an array and now what do I have I have a twodimensional array I have an array of two arrays now those two arrays are empty so they don't have anything in it but if I had done our index 0 equals 1 comma 5 comma 9 and our index 1 equals you know negative 3 comma 9 comma 15 now I have to I have an array of two arrays in it so this is now the data structure it's really about creating an array and each spot in that array or multiple arrays this sort of explains the idea but what's a nice elegant way of doing that in code well there's a few different approaches we could take number one I could say in setup right I I want to have this loop where I go through all the columns in the rows oops sorry I've got to comment this stuff back in everything's gone out of crazy whack okay so I now have this loop what I could do is I could say for every column colors index I is an empty array right now let's look again I want to keep that let's go to the sketch and let's look at what colors is it's now an array of a race but all those arrays are empty so what can I do here in here I could say colors index I which is that array index J is random 255 so now if we do this again and I look at what colors is you can see I now have an array of an array so and they all have a number in it so this is now a twodimensional array an array of an array it's hard for me to visualize it in the console the way I want to sort of like think of it as a matrix but we can use it as such because now I could put this code back and instead of having fill 255 I could actually get those get those values from the array and here we go and you can see now every single one is pulling a color from the array randomly so that's one way of doing it let's think about another way of doing it another thing I could do is if I know in advance I could say new array calls and then I could also say new array oh and then I don't have to say this here right because well hold on a sec I lost my train of thought this gets confusing right I couldn't advance specify the size in that case I know there's an array with a number of columns and then I could say here yeah yeah sorry and then I could say colors index I is a new array with the number of rows in that case I wouldn't actually even have to put anything in it in a way we could refresh it I'm going to get some errors because there's nothing in it but you can see now the array is already filled it's already sort of there has no default values but I can use the I can use the new array function to to kind of specify the size in advance which is just something to sort of see the other thing that I might consider doing I kind of like the way I had it before better was sort of somehow less confusing to me but there's another thing that I might consider doing is I might consider writing a function called something like make 2d array and and give it the arguments column and rows and then I could say var a row R equals new array columns and then for VAR I equals 0 is less than R dot length I plus plus R index I equals new array rows so this would be kind of like a generic function I think this is kind of a nice thing to maybe have in your code which you could just write a function that you give it a width and a height essentially and it just makes an array makes it array with the right number of columns and then for every single column it makes an array with the right number of rows and so then if I were to run this code and I were to say things like make make 2d array you know 10 comma 3 you can see oh I didn't return it I got a they returned that array you can see that I'm automatically getting a twodimensional array I could say make it you know 2 , you know 100 and you can see I've got an array of 2 arrays with 100 so that's kind of useful to that anywhere in your code then suddenly you need um you need a particular two dimensional rain I think this I just see in the chat this this this particular suggestion is coming up so ok so these are some more about twodimensional arrays in JavaScript it's probably going to be the thing that I would say if you were looking for an exercise to try at the end of this is fill your array and and let's actually let's actually let's actually do this sorry I'm going to I'm going to do this I'm going to say now colors equals make 2d array calls rows and just make sure this still works so that still works so now I've kind of like made this generic function that I can use I think that's pretty useful and I was going to say for you what I might think about doing is instead of just saying random 255 here how could you make a cell object or an optic what would you do if you have a twodimensional array of objects what might you store in those objects that might be an interesting thing to think of yes and there's some other suggestions in the chat of how you could use different data types for the array and it can get filled automatically with zeros and stuff like that but there you know those are sort of a side comment so hopefully this helps you and that you'll be able to use this function to make a 2d array in your p5 GS or other JavaScript project thanks for watching see you soon
