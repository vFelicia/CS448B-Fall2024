With timestamps:

00:02 - hello this is a tutorial video for p5.js
00:05 - about a particular function a function I
00:08 - really love called crea graphics and I
00:11 - kind of shock that I haven't made this
00:12 - video yet because this is one of the
00:14 - classic things that comes up in every
00:16 - single intro programming graphics course
00:19 - that I've ever taught so let's take a
00:21 - look at the problem so let's say I'm
00:23 - just I just learned to program and I'm
00:25 - making a very simple sketch where what I
00:28 - want to do is I want to say if mouse is
00:31 - pressed draw draw an ellipse at Mouse X
00:38 - mouse Y and make that ellipse 64 pixels
00:44 - in diameter and make that ellipse white
00:48 - with a stroke of white all right
00:51 - so this is a very simple sketch all it's
00:53 - doing is when I press the mouse I'm
00:56 - gonna draw an ellipse now notice that
00:57 - background isn't set up so here's what
01:02 - I'm doing now let's say what I want to
01:05 - do is I want to see it I want to see
01:09 - also something animate overtop of this
01:12 - you know an example that of that could
01:14 - be like I want to actually draw
01:15 - something well let's just do that right
01:16 - now
01:17 - what if I wanted to draw alka suggested
01:18 - this and the chat draw a pen or
01:20 - something where the mouse is so let's
01:24 - let's just have a another circle stand
01:27 - in for that pen so I'm gonna make a
01:29 - circle that's a that's a different color
01:31 - and a little bit smaller
01:34 - also at Mouse X Mouse why it's always
01:38 - going to be there because and maybe it
01:41 - changes color or something when I click
01:43 - the mouse I don't know but let's okay so
01:46 - I'm gonna put that other circle there oh
01:48 - well that's whoa whoa okay so this is no
01:52 - good because I'm drawing the background
01:55 - and set up everything everything
01:57 - everything across a trail I never erased
02:00 - that background how could I have
02:03 - something that I'm drawing to not erase
02:06 - the background and something that I'm
02:09 - drawing where I do erase the background
02:11 - well
02:13 - great graphics is the answer to this
02:15 - question what create graphics does is it
02:19 - allows you to make this this canvas this
02:21 - thing right here I can make when I say
02:24 - create canvas I've made this what create
02:26 - graphics does is it actually makes
02:28 - another canvas the only thing that's
02:30 - different it's the canvas in the
02:31 - computer's mind you don't see it it's
02:33 - stored in memory so I'm gonna say this
02:38 - I'm gonna say whoops let's call this
02:42 - I don't often call it canvas but let me
02:45 - what's another set of canvas context
02:48 - graphics I'm just gonna call this a
02:49 - graphics and I'm going to say in setup
02:52 - graphics equals create graphics and I'm
02:56 - gonna also make it 400 by 300 now what
03:00 - I'm going to do is whenever I want to
03:03 - draw on to that off-screen thing in the
03:06 - computer's mind I'm going to say graphic
03:09 - stock background and if mouse is pressed
03:11 - graphics fill graphics dot stroke
03:15 - graphics dot ellipse so anything that I
03:19 - want to draw to that off-screen canvas
03:21 - that's not the one that I see I can now
03:24 - reference it and again graphics is my
03:26 - made-up variable name this could be
03:28 - kitten canvas kitten graphics whatever
03:31 - it is I've just created this off-screen
03:33 - buffer okay so now let's refresh this
03:35 - whoa what's going on here I don't see it
03:37 - so you have to remember just because you
03:40 - draw something doesn't mean it's there
03:43 - and you see it once you've made this
03:45 - off-screen canvas you have to explicitly
03:47 - add it to the screen so I'm gonna do
03:50 - that now how do I do that
03:51 - I'm going to say image graphics 0 0 so
03:58 - the way that you take an off-screen
03:59 - canvas and place it you is with the
04:02 - image function as if it was like a JPEG
04:03 - you loaded it's the same thing it's a
04:05 - rectangle of pixels of some size with
04:07 - some stuff happening in it all right so
04:09 - let's look at this now and we can see
04:11 - look at that
04:11 - so now and now look whoa what's going on
04:14 - so this is the sad truth the sad truth
04:18 - is I've run afoul
04:20 - of the world that we live in today Oh
04:22 - back in the day when I used to program
04:25 - with the snow up to here we didn't have
04:27 - these screens with multiple disel
04:31 - densities and high blah blah blah retina
04:35 - this and high-density this there's a
04:36 - little bit of an issue going on which is
04:38 - that I am working with a high density
04:41 - display and so in that case there's
04:44 - actually four pixels for everyone and
04:47 - it's kind of mismatched what's happening
04:49 - in the off-screen buffer the off-screen
04:50 - canvas and that the on screen one so I'm
04:53 - gonna have to do something just to fix
04:56 - this right now I hope this doesn't
04:57 - happen to you I'm just gonna say pixel
04:58 - density one so I would say hey whatever
05:00 - its kind of screen you're on just ignore
05:02 - that and just have a regular pixel
05:05 - density of one and that should hopefully
05:06 - fix this and you can see it did so you
05:09 - can see now that I have this animating
05:13 - circle and I have the background canvas
05:16 - if you didn't want to use pixel density
05:19 - one because you're kind of losing some
05:21 - quality or something it was really
05:22 - important that you're doing you could
05:24 - also not say pixel density one double
05:28 - the number of pixels for the off-screen
05:30 - graphics in other words for the the
05:32 - default canvas is going to be handled
05:34 - for you but now I could double those
05:36 - pixels and then shrink them down when I
05:40 - show them and I think this would then
05:42 - it's the same thing but I've retained
05:44 - it's hard for you to see this I don't
05:45 - know you can see this see the quality of
05:47 - that particular ellipse let's see if
05:49 - this shows through versus if I say pixel
05:52 - density one and go back to this let me
06:00 - go backwards again and there we go you
06:04 - can kind can you see the difference
06:05 - there there's sort of a little bit of
06:06 - fuzziness but anyway this is not the
06:09 - primary thing that I'm that I want to
06:11 - talk about I want to just look at the
06:12 - fact that create graphics is a way of
06:14 - creating this off-screen off-screen so
06:18 - there's a lot that you could do with
06:19 - this for example let's just let's say I
06:24 - am not actually going to draw this draw
06:30 - with the mouse so I'm gonna have a very
06:32 - called X and set that to a variable
06:36 - called X and a variable called Y I'm
06:39 - gonna set those two 5050 I'm going to
06:42 - how to make a create graphics that's 100
06:44 - by hundred I'm going to have the I'm
06:48 - gonna draw the ellipse there and I'm
06:51 - gonna say X plus equals some random
06:54 - number I'm just going to move I'm gonna
06:57 - move x and y around randomly and let's
07:01 - make this smaller so let's see what
07:04 - happens here and I'm actually also going
07:08 - to add a background to draw so look so
07:12 - now I have that and let's just see just
07:14 - to see what's going on here let's make
07:17 - the background for the graphics object
07:18 - this so you can see that is now that's
07:21 - an off-screen element that I'm drawing
07:24 - onto the screen so there's no reason why
07:26 - I couldn't do something like oh let me
07:29 - draw twice and now I see the same
07:33 - pattern repeating and maybe what I could
07:35 - actually do is say push and a translate
07:42 - you know 200 comma 200 rotate by some
07:47 - angle and draw the image again say pop
07:52 - and I could create an angle variable and
07:55 - now I could say angle plus equals 0.01
08:01 - whoops
08:03 - angle my iki still does not work and you
08:06 - can see now and let's make that go a
08:08 - little faster and let's say image mode
08:14 - Center and here we go we can see now
08:17 - this that thing that I'm drawing an
08:20 - off-screen canvas is spinning so it's a
08:22 - way of creating there's so many ways we
08:24 - could mix and match these you know I
08:26 - could certainly I could tint it so once
08:29 - it's a separate image there's no reason
08:32 - why I can't manipulate and actually what
08:34 - I'm gonna do in another video which is
08:37 - going to be in a different playlist but
08:38 - I'm gonna look at how I could take a 2d
08:41 - graphics context and make it a texture
08:44 - in a 3d world which will expand
08:46 - this idea even further so Kelly in the
08:50 - chat is asking is the create graphics
08:52 - context always a rectangle would there
08:54 - be any way to make it polygonal if I
08:58 - pronounced that word correctly now yes I
09:02 - mean yes and no so by definition an
09:06 - image on the computer is a rectangular
09:09 - grid of pixels there is no other way it
09:13 - can be still because it is actually just
09:14 - an array of numbers of colors however
09:17 - there's no reason why we couldn't have
09:19 - certain pixels be transparent let me
09:22 - show you what I mean by that what if I
09:24 - actually never okay so first of all let
09:27 - me fix this let me put this somewhere
09:30 - where we can see it that first version
09:34 - of the image let me put it at a 100
09:36 - comma 100 so we can see this is the sort
09:40 - of plain canvas that I'm drawing on this
09:43 - is the one spinning around why not
09:46 - what if I wanted to appear circular well
09:50 - there's no reason why I had to draw that
09:51 - background on it an off-screen canvas
09:54 - will actually begin as fully transparent
09:56 - look what happens now so look at this
09:59 - when it's fully transparent you know
10:02 - it's still rectangular I can't expand
10:05 - off of it but there's I could create the
10:08 - illusion of it being circular so now
10:10 - what I could do is I could have said at
10:11 - the beginning draw an ellipse that's at
10:14 - the middle that has a diameter of 100
10:17 - and make that ellipse which I gray whoa
10:23 - oops I forgot this is a classic mistake
10:26 - I wanted to make that ellipse gray but I
10:29 - forgot to say graphics dot fill so now
10:33 - it looks like I have this like circular
10:35 - thing and by the way I could there's no
10:39 - reason why I couldn't just move that one
10:41 - around with the mouse so it looks like
10:47 - it's a circular thing you get to behind
10:49 - this one now the thing is it's actually
10:52 - not circular I'm getting lucky but you
10:54 - could see how that thing walked off of
10:55 - that circle so I would probably have to
10:57 - do something one thing
10:58 - I could do there's probably a way that I
11:02 - could I could always keep those edge
11:04 - pixels transparent or I could constrain
11:06 - the motion of that particular lips I
11:08 - mean I'm just like spinning my wheels
11:10 - spinning my gears here just trying
11:12 - random things I'm gonna pause for a
11:15 - second to see if anybody else in the
11:16 - chat has any questions of any features I
11:17 - could add a couple notes have come in
11:20 - from the chat that are worth mentioning
11:21 - one is that everything in p5 is wrapping
11:24 - native html5 canvas functionality and
11:28 - there is a clip function that's part of
11:30 - the native html5 canvas so that's
11:32 - something that you could investigate
11:33 - perhaps using as well I haven't looked
11:36 - into that but I will look into that
11:37 - there's all I'm also being told breaking
11:40 - news that I forgot about this that if I
11:42 - wanted to dynamically figure out the
11:45 - scaling the pixel density function I'll
11:48 - show you this if so if I call pixel
11:51 - density with a number this is me
11:54 - specifically setting a pixel density but
11:56 - if I call it without an argument it's
11:58 - actually going to return to me the
12:00 - current pixel density which is 1 because
12:02 - I said it but if I don't set it and I
12:07 - call it you can see that it's 2 so this
12:08 - is something that this is something that
12:10 - I could potentially use to dynamically
12:13 - determine the pixel density and scale
12:17 - the off-screen canvas to read the write
12:19 - the same as the onscreen canvas but
12:20 - again that's a little bit of an aside
12:22 - here so here's here's some exercises for
12:25 - you to try you can if you make of
12:27 - something you can share it in the
12:28 - comments or tweet me at Schiffman but
12:30 - one thing to do could you make a
12:31 - particle system where the elements of
12:34 - the particles the the each particle is
12:36 - actually an off-screen canvas that has
12:38 - some kind of like algorithmic thing
12:39 - happening on it could you create a
12:42 - drawing system where the user gets to
12:45 - draw and then the drawing is shown it
12:47 - tiled in multiple different ways so that
12:51 - I you know what if you used like instead
12:53 - of either just erasing the background or
12:55 - not erasing the background what if you
12:56 - use like an alpha as part of the
12:59 - background so you see these um kind of
13:01 - like fading trails there's a lot of
13:02 - possible things that you could look at
13:05 - it do so I hope you make some more stuff
13:07 - with create graphics
13:09 - in p5 and if you're interested in
13:12 - looking at this same topic but applied
13:14 - in WebGL look for a link in this video's
13:16 - description to that okay thank you
13:18 - goodbye
13:23 - [Music]

Cleaned transcript:

hello this is a tutorial video for p5.js about a particular function a function I really love called crea graphics and I kind of shock that I haven't made this video yet because this is one of the classic things that comes up in every single intro programming graphics course that I've ever taught so let's take a look at the problem so let's say I'm just I just learned to program and I'm making a very simple sketch where what I want to do is I want to say if mouse is pressed draw draw an ellipse at Mouse X mouse Y and make that ellipse 64 pixels in diameter and make that ellipse white with a stroke of white all right so this is a very simple sketch all it's doing is when I press the mouse I'm gonna draw an ellipse now notice that background isn't set up so here's what I'm doing now let's say what I want to do is I want to see it I want to see also something animate overtop of this you know an example that of that could be like I want to actually draw something well let's just do that right now what if I wanted to draw alka suggested this and the chat draw a pen or something where the mouse is so let's let's just have a another circle stand in for that pen so I'm gonna make a circle that's a that's a different color and a little bit smaller also at Mouse X Mouse why it's always going to be there because and maybe it changes color or something when I click the mouse I don't know but let's okay so I'm gonna put that other circle there oh well that's whoa whoa okay so this is no good because I'm drawing the background and set up everything everything everything across a trail I never erased that background how could I have something that I'm drawing to not erase the background and something that I'm drawing where I do erase the background well great graphics is the answer to this question what create graphics does is it allows you to make this this canvas this thing right here I can make when I say create canvas I've made this what create graphics does is it actually makes another canvas the only thing that's different it's the canvas in the computer's mind you don't see it it's stored in memory so I'm gonna say this I'm gonna say whoops let's call this I don't often call it canvas but let me what's another set of canvas context graphics I'm just gonna call this a graphics and I'm going to say in setup graphics equals create graphics and I'm gonna also make it 400 by 300 now what I'm going to do is whenever I want to draw on to that offscreen thing in the computer's mind I'm going to say graphic stock background and if mouse is pressed graphics fill graphics dot stroke graphics dot ellipse so anything that I want to draw to that offscreen canvas that's not the one that I see I can now reference it and again graphics is my madeup variable name this could be kitten canvas kitten graphics whatever it is I've just created this offscreen buffer okay so now let's refresh this whoa what's going on here I don't see it so you have to remember just because you draw something doesn't mean it's there and you see it once you've made this offscreen canvas you have to explicitly add it to the screen so I'm gonna do that now how do I do that I'm going to say image graphics 0 0 so the way that you take an offscreen canvas and place it you is with the image function as if it was like a JPEG you loaded it's the same thing it's a rectangle of pixels of some size with some stuff happening in it all right so let's look at this now and we can see look at that so now and now look whoa what's going on so this is the sad truth the sad truth is I've run afoul of the world that we live in today Oh back in the day when I used to program with the snow up to here we didn't have these screens with multiple disel densities and high blah blah blah retina this and highdensity this there's a little bit of an issue going on which is that I am working with a high density display and so in that case there's actually four pixels for everyone and it's kind of mismatched what's happening in the offscreen buffer the offscreen canvas and that the on screen one so I'm gonna have to do something just to fix this right now I hope this doesn't happen to you I'm just gonna say pixel density one so I would say hey whatever its kind of screen you're on just ignore that and just have a regular pixel density of one and that should hopefully fix this and you can see it did so you can see now that I have this animating circle and I have the background canvas if you didn't want to use pixel density one because you're kind of losing some quality or something it was really important that you're doing you could also not say pixel density one double the number of pixels for the offscreen graphics in other words for the the default canvas is going to be handled for you but now I could double those pixels and then shrink them down when I show them and I think this would then it's the same thing but I've retained it's hard for you to see this I don't know you can see this see the quality of that particular ellipse let's see if this shows through versus if I say pixel density one and go back to this let me go backwards again and there we go you can kind can you see the difference there there's sort of a little bit of fuzziness but anyway this is not the primary thing that I'm that I want to talk about I want to just look at the fact that create graphics is a way of creating this offscreen offscreen so there's a lot that you could do with this for example let's just let's say I am not actually going to draw this draw with the mouse so I'm gonna have a very called X and set that to a variable called X and a variable called Y I'm gonna set those two 5050 I'm going to how to make a create graphics that's 100 by hundred I'm going to have the I'm gonna draw the ellipse there and I'm gonna say X plus equals some random number I'm just going to move I'm gonna move x and y around randomly and let's make this smaller so let's see what happens here and I'm actually also going to add a background to draw so look so now I have that and let's just see just to see what's going on here let's make the background for the graphics object this so you can see that is now that's an offscreen element that I'm drawing onto the screen so there's no reason why I couldn't do something like oh let me draw twice and now I see the same pattern repeating and maybe what I could actually do is say push and a translate you know 200 comma 200 rotate by some angle and draw the image again say pop and I could create an angle variable and now I could say angle plus equals 0.01 whoops angle my iki still does not work and you can see now and let's make that go a little faster and let's say image mode Center and here we go we can see now this that thing that I'm drawing an offscreen canvas is spinning so it's a way of creating there's so many ways we could mix and match these you know I could certainly I could tint it so once it's a separate image there's no reason why I can't manipulate and actually what I'm gonna do in another video which is going to be in a different playlist but I'm gonna look at how I could take a 2d graphics context and make it a texture in a 3d world which will expand this idea even further so Kelly in the chat is asking is the create graphics context always a rectangle would there be any way to make it polygonal if I pronounced that word correctly now yes I mean yes and no so by definition an image on the computer is a rectangular grid of pixels there is no other way it can be still because it is actually just an array of numbers of colors however there's no reason why we couldn't have certain pixels be transparent let me show you what I mean by that what if I actually never okay so first of all let me fix this let me put this somewhere where we can see it that first version of the image let me put it at a 100 comma 100 so we can see this is the sort of plain canvas that I'm drawing on this is the one spinning around why not what if I wanted to appear circular well there's no reason why I had to draw that background on it an offscreen canvas will actually begin as fully transparent look what happens now so look at this when it's fully transparent you know it's still rectangular I can't expand off of it but there's I could create the illusion of it being circular so now what I could do is I could have said at the beginning draw an ellipse that's at the middle that has a diameter of 100 and make that ellipse which I gray whoa oops I forgot this is a classic mistake I wanted to make that ellipse gray but I forgot to say graphics dot fill so now it looks like I have this like circular thing and by the way I could there's no reason why I couldn't just move that one around with the mouse so it looks like it's a circular thing you get to behind this one now the thing is it's actually not circular I'm getting lucky but you could see how that thing walked off of that circle so I would probably have to do something one thing I could do there's probably a way that I could I could always keep those edge pixels transparent or I could constrain the motion of that particular lips I mean I'm just like spinning my wheels spinning my gears here just trying random things I'm gonna pause for a second to see if anybody else in the chat has any questions of any features I could add a couple notes have come in from the chat that are worth mentioning one is that everything in p5 is wrapping native html5 canvas functionality and there is a clip function that's part of the native html5 canvas so that's something that you could investigate perhaps using as well I haven't looked into that but I will look into that there's all I'm also being told breaking news that I forgot about this that if I wanted to dynamically figure out the scaling the pixel density function I'll show you this if so if I call pixel density with a number this is me specifically setting a pixel density but if I call it without an argument it's actually going to return to me the current pixel density which is 1 because I said it but if I don't set it and I call it you can see that it's 2 so this is something that this is something that I could potentially use to dynamically determine the pixel density and scale the offscreen canvas to read the write the same as the onscreen canvas but again that's a little bit of an aside here so here's here's some exercises for you to try you can if you make of something you can share it in the comments or tweet me at Schiffman but one thing to do could you make a particle system where the elements of the particles the the each particle is actually an offscreen canvas that has some kind of like algorithmic thing happening on it could you create a drawing system where the user gets to draw and then the drawing is shown it tiled in multiple different ways so that I you know what if you used like instead of either just erasing the background or not erasing the background what if you use like an alpha as part of the background so you see these um kind of like fading trails there's a lot of possible things that you could look at it do so I hope you make some more stuff with create graphics in p5 and if you're interested in looking at this same topic but applied in WebGL look for a link in this video's description to that okay thank you goodbye
