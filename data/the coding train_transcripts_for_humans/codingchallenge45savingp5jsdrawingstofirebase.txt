With timestamps:

00:00 - welcome to today's coding challenge
00:02 - today's coding challenge is to build a
00:05 - web application that allows users to
00:07 - make a little doodle drawing in a canvas
00:09 - and then have that drawing saved to a
00:13 - firebase database and then create a
00:15 - gallery of all those drawings are a way
00:17 - for users to like click and find their
00:19 - previous drawings something like that
00:20 - so the first thing I need to do and I'm
00:21 - going to use it I'm going to use first
00:23 - of all you might want to check out my
00:25 - shared canvas tutorial series which
00:28 - showed how to have use WebSockets to
00:30 - have a kind of collaborative whiteboard
00:31 - so this is kind of connected to that in
00:33 - some ways but I'm gonna use the p5.js
00:36 - javascript library - for canvas drawing
00:39 - and I'm gonna use firebase for saving
00:41 - the data and I have a whole tutorial
00:43 - series about firebase if that's new -
00:45 - you could go back and watch those and
00:46 - then come back here if you like deep
00:49 - breath okay so actually I already have a
00:51 - little usually I do these coding
00:52 - challenges with no code whatsoever but I
00:54 - have a little bit so far because I have
00:56 - the firebase configuration stuff already
00:59 - in my code because I don't want to have
01:00 - to like type all that out and if you
01:02 - want to know how to get this fire base
01:03 - configuration stuff go back and watch my
01:05 - firebase tutorials okay so the first
01:07 - thing that I need to do is I want to I'd
01:09 - make the canvas a little bit bigger 400
01:12 - 400 let's just actually do 200 200 and
01:14 - then I'm gonna make a draw function and
01:17 - I'm gonna add a background so now I want
01:21 - to just see that I have a canvas perfect
01:22 - so now what I want to do is figure out a
01:25 - way to store points as I click and drag
01:29 - the mouse hmm
01:31 - let's see so let's use the I think I
01:36 - want to use the I think I could just do
01:39 - actually I'm just gonna do this a little
01:41 - bit silly this is gonna fix this later
01:45 - but I'm it just used in the draw loop if
01:47 - mouse is pressed then I need to have I
01:51 - need to create an object which is a
01:53 - drawing and that object and actually I'm
02:00 - gonna make that object and array right
02:03 - because i drawing is gonna be an array
02:05 - of points let's just start with that
02:06 - if mouse is pressed drawing dot push
02:11 - and I'm gonna say I'm gonna save our
02:14 - point equals an object which has an X
02:18 - which is Mouse x and a y which is Mouse
02:23 - y and I want to push that point into the
02:28 - drawing so now if I drag the mouse
02:32 - around and I look at in the console that
02:35 - drawing object you can see it's a big
02:36 - array of all these x and y positions so
02:39 - obvious I would like to see something
02:40 - where I'm drawing so I can say I can
02:42 - write a loop to look at everything in
02:47 - that array and I can say at the
02:50 - beginning I can say begin shape at the
02:53 - end I can say n shape and these are all
02:55 - p5.js functions then I can just say
02:57 - vertex drawing index I dot X drawing
03:01 - index i dot Y and I can say a stroke 255
03:07 - stroke I'm gonna make it kind of thick
03:09 - stroke weight 4 and no fill so I'm gonna
03:12 - make a generic path just a shape with no
03:14 - fill and as I do this I've got the dry
03:17 - now look what's happening though every
03:18 - time I lift the mouse I only have one
03:21 - array so as I add new points it connects
03:24 - to the previous ones so I got to make
03:26 - this actually a little bit more
03:27 - sophisticated what I want and this is I
03:29 - didn't do this in the shared canvas
03:30 - example but I'm gonna do this in here
03:32 - what I actually want is every time I
03:35 - press the mouse I want to start a new
03:39 - cycle of drawing so I'm actually going
03:42 - to create tie some events I'm gonna say
03:45 - canvas mousepressed and I'm gonna say
03:50 - start drawing and then I'm gonna say
03:53 - canvas mouse released and I don't need
03:59 - to start drawing I don't know I'm gonna
04:00 - call it start path like the drawing is
04:02 - going to be an array of paths n paths so
04:06 - what I want is I also need a variable m
04:09 - to call it current path which is also
04:11 - going to be an array so now I need a
04:14 - function current path a start path
04:20 - and what I'm going to do there is I'm
04:22 - say current path equals array what I
04:26 - want to do now is end path I want that
04:31 - current path to get added to the drawing
04:38 - drawing dot push current path so when I
04:43 - press the mouse down I starting a new
04:45 - path when I release the mouse I've ended
04:48 - that path and that full path that array
04:51 - goes into the drawing so these points
04:53 - don't get added to the drawing they get
04:55 - added to the current path so if we look
04:58 - at that now here I'm not loop I'm
05:00 - looping through the drawing and then the
05:03 - drawing is now I need two loops an array
05:06 - of paths so for every drawing I say a
05:12 - path equals drawing index I and then for
05:17 - every and then I need to I can't use I
05:19 - again for every spot in the path set a
05:25 - vertex and begin shape should be here
05:31 - which I should have a begin shape and an
05:33 - end shape for each path ok so now I kind
05:37 - of changed a lot of stuff who knows if I
05:38 - have some bloods in there I'm sure I do
05:40 - I always tend to have bugs but the idea
05:42 - here is that the drawing is now an array
05:45 - of paths and each path is an array of
05:47 - points so let's see what happens now the
05:53 - only thing is I don't see it until I
05:56 - release because I'm only drawing the
05:58 - path when it's created so I also want to
06:00 - make sure and there might be a more
06:02 - efficient way that I could do this
06:04 - actually all I need to do this is
06:07 - actually really easy as it I actually
06:09 - just want to I actually don't even need
06:13 - the end path because I want to put the
06:17 - path in the array oh no sorry sorry
06:21 - sorry that I moved the wrong thing ah
06:26 - whoops
06:28 - current paths push point right the
06:31 - drawing can get that current path as
06:34 - soon as it starts I actually don't need
06:35 - to tell it when to stop because oh I
06:40 - shouldn't I could be using if mouse is
06:42 - pressed here I could just get I was
06:44 - gonna put a different variable and to
06:45 - know when I start and stop but so I
06:48 - actually don't need to tell it to stop
06:49 - because it'll stop as soon as I release
06:51 - let's see if this works n path is not
06:54 - defined so I think that I don't need
06:57 - this release anymore that could be
06:59 - useful in other context and I can do
07:01 - this there we go so this is a full
07:03 - drawing and we can see what is the
07:04 - drawing the draw is four different
07:08 - arrays this array is 43 points this
07:10 - array is 46 points this array is 29
07:13 - points so now I have a thing so all I
07:15 - need now is a Save button because if I
07:18 - have a Save button I can now send this
07:21 - drawing to firebase that was the whole
07:23 - point of this video in the first place
07:25 - so I have a little doodle machine and
07:26 - now I need to save that drawing to
07:28 - firebase and you can imagine by the way
07:30 - you could add color to this all sorts of
07:32 - things I'm checking to make sure audio
07:33 - and everything is working okay so let's
07:35 - think about I have the firebase code
07:38 - when do I want to send the drawing to
07:40 - firebase okay so I'm gonna add first of
07:44 - all I'm gonna do stuff in HTML here so
07:46 - I'm gonna do div ID equals a canvas
07:51 - container just to like have the canvas
07:54 - placed in a particular div and so when I
07:57 - create the canvas I can say canvas
08:01 - parent canvas container there we go yay
08:11 - so that still works and now what I want
08:14 - to do is add a Save button button ID
08:20 - equals Save button and say save
08:26 - so I should see now a button that says
08:29 - save so now all I need to do is in my
08:31 - code I need to get access to that button
08:36 - so here in setup I want to say save I
08:42 - probably don't need this as a global
08:43 - variable so I'm gonna save our Save
08:45 - button equals select the ID I called it
08:50 - Save button and then I could say save
08:52 - button mouse pressed save drawing and
08:58 - I'm going to now I need a function I'm
09:01 - just gonna put it at the bottom function
09:03 - save button save drawing and at the end
09:09 - in this function what do I need to do I
09:11 - need to connect to firebase so I need to
09:13 - make up a new reference I'm gonna call
09:15 - it firebase
09:19 - dot and we'll call it drawings and then
09:23 - I need to do what reference dot push
09:26 - current Oh what the drawing it's already
09:34 - and I'm like well what object do I put
09:36 - it's already in an object now I wonder
09:38 - if there's an issue if you know there
09:40 - might be some metadata that I want to
09:42 - also add to the drawing or something in
09:44 - which case it might actually make sense
09:46 - to make this an object like like what if
09:51 - I wanted to put name like later what if
09:53 - I wanted to have the name associated
09:55 - with the drawing so I'm just gonna do
09:57 - this right now
09:58 - and I'm just gonna have the name
09:59 - hard-coded in there sorry I have an
10:01 - issue where something came up on my
10:03 - previous screen here so so this is just
10:06 - to show you that later in case you want
10:08 - to add other data that I can kind of
10:10 - wrap it in an object so what I should
10:13 - see now when I so I'm gonna make a
10:15 - drawing and I'm going to write my name
10:18 - de hey and I'm gonna put a little
10:24 - rainbow on top for whatever reason i'ma
10:28 - hit save and I got I got an error Oh
10:32 - firebase reference is not a function and
10:34 - look at this by the way I have a real
10:36 - problem where I clicking this like
10:38 - extends the drawing so that were
10:39 - obviously gonna have
10:40 - to fix by it's not it's database dot
10:42 - reference so let's fix that other
10:45 - problem to this start path is happening
10:51 - it should happen only when I oh now see
10:55 - is this is a problem mouse is pressed is
10:58 - a global variable across everything so
11:03 - this is why this is why I need the
11:05 - released event so what I need here is to
11:07 - add released again and I need a boolean
11:10 - variable like I'm gonna call it is
11:11 - drawing it's gonna be set to false and
11:14 - when I press the mouse so only if is
11:17 - drawing is true
11:19 - should I be adding points so when I
11:20 - start the path is drawing equals true
11:24 - and when I'm done is drawing equals
11:29 - false and that way when I click on the
11:31 - button it doesn't think that I'm drawing
11:34 - so let's try this again and let me also
11:36 - by the way just to see that I'm gonna
11:38 - show you one thing that I didn't show in
11:39 - my firebase tutorials which is when I
11:41 - send the data where do I do that I can
11:44 - also have a call back I'm gonna call it
11:47 - data sent and I'm gonna write that as a
11:50 - separate function of course I could use
11:52 - anonymous functions but status and I'm
11:56 - just gonna say console.log status so
11:58 - that should give me a success message
12:00 - and I'm also gonna say var result and
12:04 - I'm gonna say console dot log result dot
12:08 - key just to see that things are working
12:10 - so let's try this again
12:12 - I'm gonna make a nice rainbow and I'm
12:15 - gonna hit save I got a key I got a no
12:18 - probably cuz there wasn't an error so
12:20 - there's probably this probably is like
12:21 - error status but let's just assume that
12:25 - it worked let's go to the console oh my
12:28 - goodness so by the way this is what
12:31 - happens when you publish your keys on a
12:34 - live stream and have public security
12:37 - rules other people are creating entries
12:39 - in the database I'm not gonna go in and
12:41 - look it's just in case there's some
12:42 - unpleasant language in any of them but
12:45 - thank you for all your hello messages
12:47 - into my database I'm gonna go into
12:49 - drawings and look at this drawing you
12:51 - look named an drawing and you look at
12:53 - it's an array the first element has all
12:56 - of these points in it
12:59 - the second element has all of these
13:01 - points in it so all of the data for that
13:03 - drawing is now in the database we're
13:06 - done I mean we're done with half of this
13:08 - okay for the next step in this
13:10 - particular application that I want to do
13:12 - is create a listing below of all the
13:15 - available drawings and a way that I can
13:17 - click on them and see them and I'm going
13:20 - to do this right here now in this coding
13:22 - challenge so something that I can do is
13:25 - that I can create and I show this in my
13:27 - firebase tutorials is I can create a I
13:30 - can say database I can I can look at the
13:34 - reference database dot ref drawings and
13:41 - I can say ref dot on value which is an
13:45 - event that will get triggered whenever
13:46 - anything has ever changed in the
13:48 - database ref on value got data error
13:53 - error data in case there is an error and
13:55 - now I can just have a call back and I'm
13:58 - gonna go all the way down to the bottom
13:59 - again and I'm gonna say got data like
14:01 - and I'm gonna say air data and just in
14:07 - case there's an error I want to be able
14:08 - to see that in the console and now in
14:11 - got data I want to say var drawings
14:18 - equals data Val and then I want to get
14:22 - all the keys object object dot keys
14:27 - drawings and then I want to iterate over
14:30 - all the keys and say console and each
14:40 - key is keys index I and I want to look
14:43 - at I just want to look at the key first
14:46 - so I'm just gonna look at all the keys
14:47 - let's see if this works so now we can
14:50 - see that that came out here in the
14:53 - console the key for one drawing you know
14:56 - to make another drawing heart that's a
14:59 - terrible heart save and we can see I now
15:02 - got two keys and I can actually add and
15:05 - I can actually make a whole nother end
15:07 - three just for this drawing and I could
15:09 - hit save and now I have three keys and I
15:11 - don't know what I got undefined for but
15:13 - I'm not going to worry about that right
15:15 - now so hopefully if I go back to the
15:17 - firebase console we can see that there
15:19 - are three drawings in here now and
15:20 - everybody else hello
15:22 - everybody has hacked my database and is
15:24 - giving all these hello messages which I
15:26 - love to see hello Oklahoma where the
15:28 - wind falls I really should I'm such a
15:32 - I'm not showing my musical-theater
15:34 - stripes here by like getting the lyrics
15:37 - wrong to Oklahoma someday I'll be able
15:40 - to reference that better okay so now
15:41 - what I want to do is create a clickable
15:43 - list here where any of them that I click
15:45 - on I could actually look at that
15:47 - particular drawing so what I want to do
15:49 - is go into index.html and and I'm going
15:57 - to add a ordered list and I'm going to
16:04 - give that a ID like drawing list and in
16:10 - the code I'm going to instead of console
16:14 - logging the keys I'm going to say an ela
16:16 - I'm going to create an Li element and
16:19 - it's going to it's going to just have
16:23 - the key in it just going to do that just
16:25 - to sort of like see that that works and
16:27 - I'm going to say Li dot parent drawing
16:32 - list so if we do this if i refresh this
16:36 - page we should see that the drawing the
16:39 - the elements are down here I have those
16:41 - drawings ordered by key and I should
16:44 - probably give them a name would be again
16:46 - I could add name to this which would be
16:47 - a much better thing to display or date
16:49 - created all sorts of things that you
16:51 - could think about doing after the fact
16:52 - if you want to improve on this but what
16:54 - I really want to do is make those
16:55 - clickable so I'm gonna just make this
17:00 - I'm gonna actually make this an empty an
17:04 - empty element and I'm gonna create a
17:08 - span element with actually I'm gonna
17:12 - create an a element a link element which
17:17 - is create a
17:19 - with the key in it and then I'm going to
17:23 - create an event called show drawing so
17:27 - and then I'm going to parent that to the
17:30 - Li elements so I have a full list the
17:34 - list has Li elements and inside each Li
17:37 - of element is a link and when I click on
17:40 - those I should show the drawing so now I
17:41 - need a function called show drawing and
17:45 - I just want a console dot log this dot
17:48 - HTML so we should see I just want to see
17:51 - the content of what's in when I click on
17:55 - it the HTML function will give me the
17:57 - content of the Dom element associated
17:58 - with this event oh boy made this
18:01 - compliment Oh undefined undefined
18:02 - undefined well look at that click oh boy
18:05 - tried to go to a link okay so what do I
18:08 - need to do here so I should create a
18:13 - oh-oh-oh
18:15 - that's where it's going and it's got the
18:17 - key in it sorry
18:18 - so I messed up when I do use create e I
18:21 - need to give it the place where it's
18:23 - supposed to link to which I'm just going
18:24 - to use the pound symbol because I'm
18:26 - actually handling they'll click in
18:28 - JavaScript and key is the content so
18:30 - that should be better and let me go back
18:33 - it's still oh there we go so now you can
18:36 - see all these links and when I click on
18:38 - them I've got the ID so now what I want
18:41 - to do is when I click on any one of
18:42 - these I want to retrieve it
18:46 - retrieve the drawing from the database
18:48 - how do I retrieve the drawing from the
18:51 - database so similarly to how I asked for
18:53 - all of the data I'm actually going to
18:55 - ask for one piece of data in a very
18:56 - similar way so I'm going to down here in
19:00 - show drawing I know that the key is
19:03 - actually the thing now I'm probably
19:04 - going to ultimately need to store the
19:06 - key in a different way but it's kind of
19:07 - convenient that if the key is is the
19:09 - content of that link so I can just pull
19:11 - it out so once I have that key I can say
19:14 - VAR f equals database dot dot ref
19:22 - database dot ref sorry what is it what
19:28 - was it drawings and then I can use the
19:30 - path slash Plus that
19:33 - Euler key and then I can say ref on
19:37 - value.i you know what I must make a
19:41 - function called one drawing and I can
19:44 - also have air data I can use that same
19:46 - callback for an error and then I can
19:48 - have this function one drawing which
19:51 - gets data VAR the drawing equals data
19:57 - Val and I'm just going to console.log it
20:01 - so now this should be every single one
20:04 - of those links when I click on it will
20:06 - go to the database and ask look in the
20:08 - database not in the drawings right
20:10 - remember the database has this nice tree
20:14 - here so when I look just at drawings I
20:16 - get all of these but if I do drawing /id
20:19 - I get what's in here so let's try that
20:22 - now and see if this works
20:24 - oops I need to go back to the page hit
20:27 - refresh and I'm gonna click and look at
20:30 - that it came back the drawing with this
20:32 - array of data I'm gonna click here I got
20:35 - a different drawing notes dan is
20:36 - hard-coded in there so they all look
20:38 - like they're the same you can see this
20:39 - is different this drawing only had two
20:41 - strokes in it there was a rancher so
20:43 - this is actually working and guess what
20:44 - I can do now I can all I need to do is
20:48 - say current drawing equals drawing dot
20:53 - drawing now I'm using the horse drawing
20:54 - way too much because it's what's named
20:57 - here so so I'm just gonna say like DB
21:01 - drawing just to like have it DB drawing
21:05 - so a DB drawing dot drawing I don't know
21:07 - if this is making it better or worse but
21:10 - now we should see that when I hit
21:12 - refresh here click here ooh
21:14 - so setting current drawing was kind of a
21:16 - good idea but I just realized in the
21:19 - main draw loop I'm I'm only drawing the
21:21 - things that are in the drawing or in the
21:25 - drawing array so actually current
21:27 - drawing the current path so actually
21:29 - what I need to do sorry is say drawing
21:33 - equals D is not currently there's no
21:35 - current drawing drawing equals DB
21:37 - drawing so let's try this and now if I
21:40 - click here there we go so if I click on
21:42 - any of these I have my previous drawings
21:44 - and if I annotate the
21:46 - if I add to it and hit save it should be
21:50 - in the database oh I forgot to clear
21:51 - that and I have all of these and the
21:53 - last one is the new one hey that's
21:55 - pretty great oh I kind of finished but I
21:58 - made a mistake which is I didn't clear
22:00 - the list when I add new data so I need
22:03 - to do that too
22:04 - okay so I'd like to add a couple more
22:06 - features to this web application before
22:08 - I finish up one is I need a button to
22:11 - like clear the drawing because once
22:12 - there's a drawing here there's no way
22:14 - for me to start over a new drawing so
22:16 - the first thing that I want to do is
22:18 - just add another button and I'm gonna go
22:20 - to index.html and I'll add a button I'll
22:24 - call it a clear button and I'll say
22:27 - clear and then I'm gonna refresh the
22:30 - page we see that the clear button is
22:31 - there so now what I need to do is in the
22:34 - JavaScript code what I need to do is
22:39 - find where I'm doing stuff with buttons
22:41 - and I'm going to use the same technique
22:45 - by using the p5 Dom libraries function
22:48 - select to select the Clear button and
22:51 - then the Clear button will get an event
22:53 - called clear drawing and remember the
22:56 - drawing is just this array so if I want
22:59 - to clear the drawing oh this is like a
23:01 - very simple thing to do and I know I
23:03 - could just put an anonymous function
23:04 - here but for clarity I'm kind of just
23:06 - doing this I don't know if it's actually
23:07 - for clarity this might be worse but I'm
23:09 - going to I'm going to go - to the bottom
23:12 - like code and write this callback
23:14 - function clear drawing and all I need to
23:16 - do there is reset the array to nothing
23:20 - so now I can draw something right
23:25 - da-da-dah I can hit clear I can start
23:27 - over a smiley face
23:29 - I can hit clear I could load up one of
23:31 - these drawings I could hit clear and
23:32 - start over or I can load this and I
23:34 - could start up on it so you're starting
23:36 - to think there's a lot of possibilities
23:37 - here of some kind of exquisite corpse
23:39 - style collaborative drawing editing
23:41 - thing so you know I don't have color I
23:43 - don't have there's so much you could add
23:45 - to this if you want to like build off of
23:46 - this and make some sort of exciting
23:48 - thing I hope you do okay so now we have
23:50 - the Clear button
23:50 - what's another feature I want to add
23:52 - well one thing that's a bit of a problem
23:53 - is I'm gonna add another drawing
23:55 - I love hearts so I'm going to just do
23:58 - some more hearts I'm gonna do a drawing
24:00 - with three hearts now watch what happens
24:01 - when I hit save it updates the list but
24:06 - it's really hard to see because again if
24:08 - you're gonna work on my work I would
24:09 - renate how to add a name field and add a
24:12 - name for all these but what you're
24:13 - seeing here is that it's duplicating the
24:17 - whole list again when I add just one so
24:19 - something that I need to do and I did
24:21 - this in another example recently is I
24:23 - want to find where I'm creating that
24:25 - list which is right here and I want to
24:28 - give every one of these elements a class
24:30 - and I'm gonna just call it a listing so
24:35 - this I'm gonna give this and this is
24:37 - again p5 Dom library as a class function
24:39 - that gives it a listing class and then
24:42 - when I when I oh oh I'm sorry I'm in the
24:48 - right place already so this is the part
24:50 - where I create that so before I create
24:52 - it I want to and it's probably more
24:55 - efficient way to do this because I could
24:58 - just sort of request from the database
24:59 - just anything new or I could be more
25:01 - thoughtful about this but I'm just gonna
25:03 - kind of do this thing where I clear the
25:04 - whole list so so I'm gonna just make a
25:08 - variable called ELT for elements and I'm
25:10 - gonna do select all and I'm gonna say
25:12 - dot listing and then I'm going to loop
25:15 - through all of those elements and call
25:21 - the p5 Dom library function remove which
25:24 - removes the Dom element from the page so
25:27 - before I generate the list I'm gonna
25:28 - clear it because I'm gonna get all the
25:29 - data from the database again so now we
25:32 - should have i refresh the page we can
25:34 - see here are all my drawings and now I'm
25:36 - going to clear and make another drawing
25:38 - which I'm gonna try to make a cube my
25:42 - kids love to draw 3d cubes it's like
25:44 - sort of this like fascinating thing for
25:46 - like little kids okay so I did that hit
25:48 - save and we can see now that's just
25:49 - there so dynamically added to the page
25:51 - so we really really really gotten far
25:54 - along in a way this is done I could say
25:56 - like okay well I want to do something to
25:58 - add a feature to edit a drawing update a
26:01 - record in the database delete a drawing
26:03 - from the database
26:04 - those are things I'm going to leave for
26:05 - you to investigate you know again all
26:07 - the documentation for this is at this
26:10 - URL fire
26:11 - google.com slash slash slash read and
26:14 - write so this is where you can see where
26:15 - these functions on value that sort of
26:17 - thing
26:18 - but what I want to do oh you know what I
26:22 - realized I did something which I really
26:24 - should probably change there's two more
26:26 - features one is this is the function I
26:30 - wrote earlier to show one individual
26:32 - drawing so whenever I call ref dot on
26:35 - like I did with all the data I'm I'm
26:38 - tying an event to that record in the
26:40 - database forever so if that record ever
26:42 - changes this event will trigger again
26:44 - and a lot of times you want that but in
26:46 - this case I might want to just only get
26:48 - the data from the database just once and
26:49 - I can actually change this from on to
26:52 - once so once will not tie that event
26:54 - forever but just one time so now I'm
26:57 - gonna hit R if I'm the wrong page I'm
26:59 - gonna hit refresh let's hopefully this
27:01 - still works and you can see this still
27:03 - works but if I add a drawing it will
27:06 - refresh the whole thing okay so we're
27:07 - still in the Sun but something that
27:08 - would be really good to add to this what
27:10 - if I what if what I want to do is be is
27:15 - be able to share my drawing with
27:17 - somebody else well right now the only
27:20 - way to do that is to is to sort of email
27:26 - somebody the ID and then tell them to go
27:28 - to this page and click on the ID what if
27:30 - I could encode into the URL something
27:32 - like question mark ID equals my drawing
27:36 - and so what if each one of those
27:38 - drawings could have a permalink where
27:40 - you could share that permalink and the
27:41 - drawing would show up so here's how I'm
27:44 - gonna start doing that the first thing I
27:45 - want to do is just create that permalink
27:47 - so when I'm making these listings in
27:49 - addition to this link that dynamically
27:51 - updates the drawing on the page I'm
27:53 - gonna do exactly the same thing again
27:55 - I'm gonna say create a but instead I'm
27:59 - gonna say question mark ID equals plus
28:01 - key that's the link and then what I
28:05 - wanted to say is I'm just gonna say
28:07 - permalink and then what I'm going to do
28:09 - so let's do this and we should see now
28:11 - oh and I need to parent it also oh and
28:14 - this should be I'll just call this perma
28:16 - and I'm gonna say perma dot parent li so
28:20 - it also goes in that list and you can
28:22 - see now on up you can see now I have the
28:25 - this and then also these permalinks now
28:27 - the spacing is all up so obviously with
28:29 - CSS and thinking about styling and be
28:32 - more thoughtful about the HTML I'm just
28:33 - gonna do something quick which is like
28:35 - perma dot style this is a p5 Dom library
28:39 - for adding some CSS Styles I don't mean
28:41 - if I just add some padding will that do
28:43 - it make it I can differentiate between
28:45 - those two yeah so now I can see I have
28:48 - the permalink and the actual so this is
28:52 - now showing me the drawings and now if I
28:54 - click on one of these it goes to the
28:56 - page where the drawing does not show up
28:58 - but look what happens it you are it
29:00 - creates a URL query string with ID
29:02 - equals this so I can have the page read
29:06 - that URL query string how do I do that
29:08 - well there's lots of ways you could do
29:09 - it but since I'm using the p5.js
29:11 - framework there is a p5.js function for
29:15 - this so I'm gonna go to the p5.js org
29:17 - slash reference oops that's the website
29:20 - a reference and I'm gonna have to look
29:22 - for this URL ah so get URL params so
29:27 - there's three functions here but I can
29:29 - actually just get the parameters that
29:31 - are on the page in an object so if I
29:33 - look at the reference for this all I
29:35 - need to do is call get URL params so I'm
29:38 - going to do that in setup so I'm gonna
29:40 - come back here to setup and I'm gonna
29:43 - say well I'm gonna do this right at the
29:47 - beginning actually and I'm going to say
29:49 - params equals get URL params with this
29:52 - right and I'm just gonna say console dot
29:55 - log params so I'm gonna go back to the
29:58 - page Here I am into the the code I'm
30:01 - gonna open up the console so I can see
30:02 - it I'm gonna hit refresh and you can see
30:04 - this is what came in an object with a
30:07 - field ID which is the key from the
30:08 - database that's all I needed
30:10 - perfect right so and you can see that if
30:15 - I delete that from the URL path and just
30:18 - go I'm getting an empty object so what I
30:20 - can actually do here is I can say if
30:23 - params ID exists if that object has an
30:28 - ID then what do all first of all this
30:32 - has got to happen you know this has got
30:34 - to happen after I connect to the
30:35 - database so I'm gonna do the
30:38 - down here and then didn't I already have
30:41 - a function that's like show drawing
30:43 - right this shows a drawing for a
30:46 - particular key now here's the thing I
30:49 - kind of I should probably give this an
30:51 - argument so I'm gonna put argument here
30:55 - so if I already have the key if I don't
30:58 - have the key right this is a way of
31:00 - having a function optionally take an
31:02 - argument so on the one hand it's an
31:07 - event that comes from that link and it
31:08 - gets the key from the Dom element but I
31:10 - can also just call that function with a
31:12 - key so I can say if I don't have the key
31:15 - then key equals this otherwise though if
31:21 - I just create it with the key and so
31:24 - where do I do that in in in I'm sorry
31:28 - but didn't set up right so much
31:30 - scrolling right here if I have an ID I
31:33 - can just say now show drawing with with
31:36 - params ID so this should now and let's
31:39 - let's see if this works
31:41 - let's do console dot log params ID so
31:45 - make sure that this actually goes here
31:47 - so let's just look to the I'm now
31:50 - loading it and it's empty so I don't see
31:52 - anything and I can still UPS alright
31:55 - first argument was an invalid path so I
31:58 - messed up that function somehow let's
32:01 - see what happened here oh you know what
32:06 - it must have arguments when it's as the
32:10 - callback so this didn't work what a nice
32:12 - idea let's let me let me actually figure
32:15 - this out and I'm this been making this
32:17 - video a little bit longer but I think
32:18 - it's gonna be worth it let's look at the
32:22 - arguments array you can always say
32:23 - arguments to look at what are the
32:25 - arguments for a function in JavaScript
32:26 - whether you've specified them as actual
32:29 - parameters in the function definition or
32:31 - not so what I want to do is do this
32:33 - click on here so the argument it passes
32:37 - it a mouse event so and so the first
32:42 - element is a mouse event so I can
32:45 - probably say something like if key
32:48 - is not an instant instance of this is
32:53 - really silly what I'm doing when I could
32:54 - just write a separate function but let's
32:57 - see if this works I don't know if that
32:59 - actually is going to work if ki is an
33:01 - instance of a mouse event let's see what
33:05 - happens there oh that worked so what I'm
33:08 - doing now is I'm using this I'm
33:10 - repurposing the same function for two
33:12 - different uses on the one hand I want to
33:14 - be able to call the function with a key
33:16 - on the other hand I want this function
33:17 - just to happen as part of a mouse
33:19 - pressed event and key what I call it
33:21 - with a key will actually be a key but
33:23 - otherwise it might be a mouse event so
33:25 - I'm gonna override whatever it is by
33:27 - getting it from HTML fit it so now we
33:30 - can see I've got the blank object and
33:33 - everything works but I can now go to the
33:35 - Poorna link which refreshes the page and
33:38 - gets that because the key comes in
33:39 - permalink every time i refresh the page
33:42 - it could come up with that drawing and I
33:44 - could add something to it like it could
33:46 - make this a weird alien face or
33:47 - something and I'm gonna hit save and now
33:50 - I have all these drawings here are all
33:54 - my drawings I could click on and let me
33:55 - make this a little smaller so you can
33:57 - see then I can click on all the drawings
33:59 - and I have a permalink to all these
34:01 - drawings so how do I control click or
34:02 - option click it'll open in a new command
34:05 - click it'll open it in a new tab so I'm
34:07 - command clicking on all of these and we
34:09 - can see their separate pages that load
34:12 - these drawings from the database
34:13 - automatically so this really brings us
34:15 - to the end of this tutorial this is a
34:18 - p5.js sketch that allows users to create
34:21 - their own drawing UI can write a message
34:23 - to all thank you I was gonna try to
34:25 - write thank you for watching and it's
34:26 - gonna take me way too long
34:27 - plus my doodling mouse handwriting is
34:30 - terrible thank you I can make a drawing
34:32 - I can hit save it adds it to the
34:35 - database I can on the same page click
34:37 - between the drawings and I can also get
34:39 - a permalink so this page anytime i
34:41 - refresh the page starts with that
34:43 - drawing I could obviously make a
34:44 - separate page I could make them here's
34:46 - what you should do if you're watching
34:47 - this and want to do an exercise grab
34:49 - this code it'll be in the description
34:51 - linked the code for this will be linked
34:53 - on github obviously you'll have to
34:54 - create your own firebase database I'll
34:56 - probably take out the keys I guess but
35:00 - rework this to make a separate
35:02 - you that shows like a gallery of all the
35:04 - drawings and you know there's been a lot
35:06 - of wonderful collaborative drawing
35:07 - applications on the web I'm thinking of
35:09 - Aaron Koblin sheep market I think I'll
35:12 - link to that in this video's description
35:13 - as well as you can see as a kind of nice
35:17 - inspiration for this kind of project so
35:19 - thank you for watching and I don't know
35:22 - if this this might ended up being a long
35:23 - video I've lost my Dell
35:24 - but that concludes the database p5.js
35:28 - sketch for saving a drawing into a
35:31 - database and having a gallery of
35:32 - drawings example and if you make
35:33 - something with this please share it with
35:34 - me on Twitter at Schiffman please share
35:37 - a link in the comments ask your
35:38 - questions in the comments and I look
35:41 - forward to seeing you in another video
35:42 - tutorial soon okay bye bye
35:48 - [Music]

Cleaned transcript:

welcome to today's coding challenge today's coding challenge is to build a web application that allows users to make a little doodle drawing in a canvas and then have that drawing saved to a firebase database and then create a gallery of all those drawings are a way for users to like click and find their previous drawings something like that so the first thing I need to do and I'm going to use it I'm going to use first of all you might want to check out my shared canvas tutorial series which showed how to have use WebSockets to have a kind of collaborative whiteboard so this is kind of connected to that in some ways but I'm gonna use the p5.js javascript library for canvas drawing and I'm gonna use firebase for saving the data and I have a whole tutorial series about firebase if that's new you could go back and watch those and then come back here if you like deep breath okay so actually I already have a little usually I do these coding challenges with no code whatsoever but I have a little bit so far because I have the firebase configuration stuff already in my code because I don't want to have to like type all that out and if you want to know how to get this fire base configuration stuff go back and watch my firebase tutorials okay so the first thing that I need to do is I want to I'd make the canvas a little bit bigger 400 400 let's just actually do 200 200 and then I'm gonna make a draw function and I'm gonna add a background so now I want to just see that I have a canvas perfect so now what I want to do is figure out a way to store points as I click and drag the mouse hmm let's see so let's use the I think I want to use the I think I could just do actually I'm just gonna do this a little bit silly this is gonna fix this later but I'm it just used in the draw loop if mouse is pressed then I need to have I need to create an object which is a drawing and that object and actually I'm gonna make that object and array right because i drawing is gonna be an array of points let's just start with that if mouse is pressed drawing dot push and I'm gonna say I'm gonna save our point equals an object which has an X which is Mouse x and a y which is Mouse y and I want to push that point into the drawing so now if I drag the mouse around and I look at in the console that drawing object you can see it's a big array of all these x and y positions so obvious I would like to see something where I'm drawing so I can say I can write a loop to look at everything in that array and I can say at the beginning I can say begin shape at the end I can say n shape and these are all p5.js functions then I can just say vertex drawing index I dot X drawing index i dot Y and I can say a stroke 255 stroke I'm gonna make it kind of thick stroke weight 4 and no fill so I'm gonna make a generic path just a shape with no fill and as I do this I've got the dry now look what's happening though every time I lift the mouse I only have one array so as I add new points it connects to the previous ones so I got to make this actually a little bit more sophisticated what I want and this is I didn't do this in the shared canvas example but I'm gonna do this in here what I actually want is every time I press the mouse I want to start a new cycle of drawing so I'm actually going to create tie some events I'm gonna say canvas mousepressed and I'm gonna say start drawing and then I'm gonna say canvas mouse released and I don't need to start drawing I don't know I'm gonna call it start path like the drawing is going to be an array of paths n paths so what I want is I also need a variable m to call it current path which is also going to be an array so now I need a function current path a start path and what I'm going to do there is I'm say current path equals array what I want to do now is end path I want that current path to get added to the drawing drawing dot push current path so when I press the mouse down I starting a new path when I release the mouse I've ended that path and that full path that array goes into the drawing so these points don't get added to the drawing they get added to the current path so if we look at that now here I'm not loop I'm looping through the drawing and then the drawing is now I need two loops an array of paths so for every drawing I say a path equals drawing index I and then for every and then I need to I can't use I again for every spot in the path set a vertex and begin shape should be here which I should have a begin shape and an end shape for each path ok so now I kind of changed a lot of stuff who knows if I have some bloods in there I'm sure I do I always tend to have bugs but the idea here is that the drawing is now an array of paths and each path is an array of points so let's see what happens now the only thing is I don't see it until I release because I'm only drawing the path when it's created so I also want to make sure and there might be a more efficient way that I could do this actually all I need to do this is actually really easy as it I actually just want to I actually don't even need the end path because I want to put the path in the array oh no sorry sorry sorry that I moved the wrong thing ah whoops current paths push point right the drawing can get that current path as soon as it starts I actually don't need to tell it when to stop because oh I shouldn't I could be using if mouse is pressed here I could just get I was gonna put a different variable and to know when I start and stop but so I actually don't need to tell it to stop because it'll stop as soon as I release let's see if this works n path is not defined so I think that I don't need this release anymore that could be useful in other context and I can do this there we go so this is a full drawing and we can see what is the drawing the draw is four different arrays this array is 43 points this array is 46 points this array is 29 points so now I have a thing so all I need now is a Save button because if I have a Save button I can now send this drawing to firebase that was the whole point of this video in the first place so I have a little doodle machine and now I need to save that drawing to firebase and you can imagine by the way you could add color to this all sorts of things I'm checking to make sure audio and everything is working okay so let's think about I have the firebase code when do I want to send the drawing to firebase okay so I'm gonna add first of all I'm gonna do stuff in HTML here so I'm gonna do div ID equals a canvas container just to like have the canvas placed in a particular div and so when I create the canvas I can say canvas parent canvas container there we go yay so that still works and now what I want to do is add a Save button button ID equals Save button and say save so I should see now a button that says save so now all I need to do is in my code I need to get access to that button so here in setup I want to say save I probably don't need this as a global variable so I'm gonna save our Save button equals select the ID I called it Save button and then I could say save button mouse pressed save drawing and I'm going to now I need a function I'm just gonna put it at the bottom function save button save drawing and at the end in this function what do I need to do I need to connect to firebase so I need to make up a new reference I'm gonna call it firebase dot and we'll call it drawings and then I need to do what reference dot push current Oh what the drawing it's already and I'm like well what object do I put it's already in an object now I wonder if there's an issue if you know there might be some metadata that I want to also add to the drawing or something in which case it might actually make sense to make this an object like like what if I wanted to put name like later what if I wanted to have the name associated with the drawing so I'm just gonna do this right now and I'm just gonna have the name hardcoded in there sorry I have an issue where something came up on my previous screen here so so this is just to show you that later in case you want to add other data that I can kind of wrap it in an object so what I should see now when I so I'm gonna make a drawing and I'm going to write my name de hey and I'm gonna put a little rainbow on top for whatever reason i'ma hit save and I got I got an error Oh firebase reference is not a function and look at this by the way I have a real problem where I clicking this like extends the drawing so that were obviously gonna have to fix by it's not it's database dot reference so let's fix that other problem to this start path is happening it should happen only when I oh now see is this is a problem mouse is pressed is a global variable across everything so this is why this is why I need the released event so what I need here is to add released again and I need a boolean variable like I'm gonna call it is drawing it's gonna be set to false and when I press the mouse so only if is drawing is true should I be adding points so when I start the path is drawing equals true and when I'm done is drawing equals false and that way when I click on the button it doesn't think that I'm drawing so let's try this again and let me also by the way just to see that I'm gonna show you one thing that I didn't show in my firebase tutorials which is when I send the data where do I do that I can also have a call back I'm gonna call it data sent and I'm gonna write that as a separate function of course I could use anonymous functions but status and I'm just gonna say console.log status so that should give me a success message and I'm also gonna say var result and I'm gonna say console dot log result dot key just to see that things are working so let's try this again I'm gonna make a nice rainbow and I'm gonna hit save I got a key I got a no probably cuz there wasn't an error so there's probably this probably is like error status but let's just assume that it worked let's go to the console oh my goodness so by the way this is what happens when you publish your keys on a live stream and have public security rules other people are creating entries in the database I'm not gonna go in and look it's just in case there's some unpleasant language in any of them but thank you for all your hello messages into my database I'm gonna go into drawings and look at this drawing you look named an drawing and you look at it's an array the first element has all of these points in it the second element has all of these points in it so all of the data for that drawing is now in the database we're done I mean we're done with half of this okay for the next step in this particular application that I want to do is create a listing below of all the available drawings and a way that I can click on them and see them and I'm going to do this right here now in this coding challenge so something that I can do is that I can create and I show this in my firebase tutorials is I can create a I can say database I can I can look at the reference database dot ref drawings and I can say ref dot on value which is an event that will get triggered whenever anything has ever changed in the database ref on value got data error error data in case there is an error and now I can just have a call back and I'm gonna go all the way down to the bottom again and I'm gonna say got data like and I'm gonna say air data and just in case there's an error I want to be able to see that in the console and now in got data I want to say var drawings equals data Val and then I want to get all the keys object object dot keys drawings and then I want to iterate over all the keys and say console and each key is keys index I and I want to look at I just want to look at the key first so I'm just gonna look at all the keys let's see if this works so now we can see that that came out here in the console the key for one drawing you know to make another drawing heart that's a terrible heart save and we can see I now got two keys and I can actually add and I can actually make a whole nother end three just for this drawing and I could hit save and now I have three keys and I don't know what I got undefined for but I'm not going to worry about that right now so hopefully if I go back to the firebase console we can see that there are three drawings in here now and everybody else hello everybody has hacked my database and is giving all these hello messages which I love to see hello Oklahoma where the wind falls I really should I'm such a I'm not showing my musicaltheater stripes here by like getting the lyrics wrong to Oklahoma someday I'll be able to reference that better okay so now what I want to do is create a clickable list here where any of them that I click on I could actually look at that particular drawing so what I want to do is go into index.html and and I'm going to add a ordered list and I'm going to give that a ID like drawing list and in the code I'm going to instead of console logging the keys I'm going to say an ela I'm going to create an Li element and it's going to it's going to just have the key in it just going to do that just to sort of like see that that works and I'm going to say Li dot parent drawing list so if we do this if i refresh this page we should see that the drawing the the elements are down here I have those drawings ordered by key and I should probably give them a name would be again I could add name to this which would be a much better thing to display or date created all sorts of things that you could think about doing after the fact if you want to improve on this but what I really want to do is make those clickable so I'm gonna just make this I'm gonna actually make this an empty an empty element and I'm gonna create a span element with actually I'm gonna create an a element a link element which is create a with the key in it and then I'm going to create an event called show drawing so and then I'm going to parent that to the Li elements so I have a full list the list has Li elements and inside each Li of element is a link and when I click on those I should show the drawing so now I need a function called show drawing and I just want a console dot log this dot HTML so we should see I just want to see the content of what's in when I click on it the HTML function will give me the content of the Dom element associated with this event oh boy made this compliment Oh undefined undefined undefined well look at that click oh boy tried to go to a link okay so what do I need to do here so I should create a ohohoh that's where it's going and it's got the key in it sorry so I messed up when I do use create e I need to give it the place where it's supposed to link to which I'm just going to use the pound symbol because I'm actually handling they'll click in JavaScript and key is the content so that should be better and let me go back it's still oh there we go so now you can see all these links and when I click on them I've got the ID so now what I want to do is when I click on any one of these I want to retrieve it retrieve the drawing from the database how do I retrieve the drawing from the database so similarly to how I asked for all of the data I'm actually going to ask for one piece of data in a very similar way so I'm going to down here in show drawing I know that the key is actually the thing now I'm probably going to ultimately need to store the key in a different way but it's kind of convenient that if the key is is the content of that link so I can just pull it out so once I have that key I can say VAR f equals database dot dot ref database dot ref sorry what is it what was it drawings and then I can use the path slash Plus that Euler key and then I can say ref on value.i you know what I must make a function called one drawing and I can also have air data I can use that same callback for an error and then I can have this function one drawing which gets data VAR the drawing equals data Val and I'm just going to console.log it so now this should be every single one of those links when I click on it will go to the database and ask look in the database not in the drawings right remember the database has this nice tree here so when I look just at drawings I get all of these but if I do drawing /id I get what's in here so let's try that now and see if this works oops I need to go back to the page hit refresh and I'm gonna click and look at that it came back the drawing with this array of data I'm gonna click here I got a different drawing notes dan is hardcoded in there so they all look like they're the same you can see this is different this drawing only had two strokes in it there was a rancher so this is actually working and guess what I can do now I can all I need to do is say current drawing equals drawing dot drawing now I'm using the horse drawing way too much because it's what's named here so so I'm just gonna say like DB drawing just to like have it DB drawing so a DB drawing dot drawing I don't know if this is making it better or worse but now we should see that when I hit refresh here click here ooh so setting current drawing was kind of a good idea but I just realized in the main draw loop I'm I'm only drawing the things that are in the drawing or in the drawing array so actually current drawing the current path so actually what I need to do sorry is say drawing equals D is not currently there's no current drawing drawing equals DB drawing so let's try this and now if I click here there we go so if I click on any of these I have my previous drawings and if I annotate the if I add to it and hit save it should be in the database oh I forgot to clear that and I have all of these and the last one is the new one hey that's pretty great oh I kind of finished but I made a mistake which is I didn't clear the list when I add new data so I need to do that too okay so I'd like to add a couple more features to this web application before I finish up one is I need a button to like clear the drawing because once there's a drawing here there's no way for me to start over a new drawing so the first thing that I want to do is just add another button and I'm gonna go to index.html and I'll add a button I'll call it a clear button and I'll say clear and then I'm gonna refresh the page we see that the clear button is there so now what I need to do is in the JavaScript code what I need to do is find where I'm doing stuff with buttons and I'm going to use the same technique by using the p5 Dom libraries function select to select the Clear button and then the Clear button will get an event called clear drawing and remember the drawing is just this array so if I want to clear the drawing oh this is like a very simple thing to do and I know I could just put an anonymous function here but for clarity I'm kind of just doing this I don't know if it's actually for clarity this might be worse but I'm going to I'm going to go to the bottom like code and write this callback function clear drawing and all I need to do there is reset the array to nothing so now I can draw something right dadadah I can hit clear I can start over a smiley face I can hit clear I could load up one of these drawings I could hit clear and start over or I can load this and I could start up on it so you're starting to think there's a lot of possibilities here of some kind of exquisite corpse style collaborative drawing editing thing so you know I don't have color I don't have there's so much you could add to this if you want to like build off of this and make some sort of exciting thing I hope you do okay so now we have the Clear button what's another feature I want to add well one thing that's a bit of a problem is I'm gonna add another drawing I love hearts so I'm going to just do some more hearts I'm gonna do a drawing with three hearts now watch what happens when I hit save it updates the list but it's really hard to see because again if you're gonna work on my work I would renate how to add a name field and add a name for all these but what you're seeing here is that it's duplicating the whole list again when I add just one so something that I need to do and I did this in another example recently is I want to find where I'm creating that list which is right here and I want to give every one of these elements a class and I'm gonna just call it a listing so this I'm gonna give this and this is again p5 Dom library as a class function that gives it a listing class and then when I when I oh oh I'm sorry I'm in the right place already so this is the part where I create that so before I create it I want to and it's probably more efficient way to do this because I could just sort of request from the database just anything new or I could be more thoughtful about this but I'm just gonna kind of do this thing where I clear the whole list so so I'm gonna just make a variable called ELT for elements and I'm gonna do select all and I'm gonna say dot listing and then I'm going to loop through all of those elements and call the p5 Dom library function remove which removes the Dom element from the page so before I generate the list I'm gonna clear it because I'm gonna get all the data from the database again so now we should have i refresh the page we can see here are all my drawings and now I'm going to clear and make another drawing which I'm gonna try to make a cube my kids love to draw 3d cubes it's like sort of this like fascinating thing for like little kids okay so I did that hit save and we can see now that's just there so dynamically added to the page so we really really really gotten far along in a way this is done I could say like okay well I want to do something to add a feature to edit a drawing update a record in the database delete a drawing from the database those are things I'm going to leave for you to investigate you know again all the documentation for this is at this URL fire google.com slash slash slash read and write so this is where you can see where these functions on value that sort of thing but what I want to do oh you know what I realized I did something which I really should probably change there's two more features one is this is the function I wrote earlier to show one individual drawing so whenever I call ref dot on like I did with all the data I'm I'm tying an event to that record in the database forever so if that record ever changes this event will trigger again and a lot of times you want that but in this case I might want to just only get the data from the database just once and I can actually change this from on to once so once will not tie that event forever but just one time so now I'm gonna hit R if I'm the wrong page I'm gonna hit refresh let's hopefully this still works and you can see this still works but if I add a drawing it will refresh the whole thing okay so we're still in the Sun but something that would be really good to add to this what if I what if what I want to do is be is be able to share my drawing with somebody else well right now the only way to do that is to is to sort of email somebody the ID and then tell them to go to this page and click on the ID what if I could encode into the URL something like question mark ID equals my drawing and so what if each one of those drawings could have a permalink where you could share that permalink and the drawing would show up so here's how I'm gonna start doing that the first thing I want to do is just create that permalink so when I'm making these listings in addition to this link that dynamically updates the drawing on the page I'm gonna do exactly the same thing again I'm gonna say create a but instead I'm gonna say question mark ID equals plus key that's the link and then what I wanted to say is I'm just gonna say permalink and then what I'm going to do so let's do this and we should see now oh and I need to parent it also oh and this should be I'll just call this perma and I'm gonna say perma dot parent li so it also goes in that list and you can see now on up you can see now I have the this and then also these permalinks now the spacing is all up so obviously with CSS and thinking about styling and be more thoughtful about the HTML I'm just gonna do something quick which is like perma dot style this is a p5 Dom library for adding some CSS Styles I don't mean if I just add some padding will that do it make it I can differentiate between those two yeah so now I can see I have the permalink and the actual so this is now showing me the drawings and now if I click on one of these it goes to the page where the drawing does not show up but look what happens it you are it creates a URL query string with ID equals this so I can have the page read that URL query string how do I do that well there's lots of ways you could do it but since I'm using the p5.js framework there is a p5.js function for this so I'm gonna go to the p5.js org slash reference oops that's the website a reference and I'm gonna have to look for this URL ah so get URL params so there's three functions here but I can actually just get the parameters that are on the page in an object so if I look at the reference for this all I need to do is call get URL params so I'm going to do that in setup so I'm gonna come back here to setup and I'm gonna say well I'm gonna do this right at the beginning actually and I'm going to say params equals get URL params with this right and I'm just gonna say console dot log params so I'm gonna go back to the page Here I am into the the code I'm gonna open up the console so I can see it I'm gonna hit refresh and you can see this is what came in an object with a field ID which is the key from the database that's all I needed perfect right so and you can see that if I delete that from the URL path and just go I'm getting an empty object so what I can actually do here is I can say if params ID exists if that object has an ID then what do all first of all this has got to happen you know this has got to happen after I connect to the database so I'm gonna do the down here and then didn't I already have a function that's like show drawing right this shows a drawing for a particular key now here's the thing I kind of I should probably give this an argument so I'm gonna put argument here so if I already have the key if I don't have the key right this is a way of having a function optionally take an argument so on the one hand it's an event that comes from that link and it gets the key from the Dom element but I can also just call that function with a key so I can say if I don't have the key then key equals this otherwise though if I just create it with the key and so where do I do that in in in I'm sorry but didn't set up right so much scrolling right here if I have an ID I can just say now show drawing with with params ID so this should now and let's let's see if this works let's do console dot log params ID so make sure that this actually goes here so let's just look to the I'm now loading it and it's empty so I don't see anything and I can still UPS alright first argument was an invalid path so I messed up that function somehow let's see what happened here oh you know what it must have arguments when it's as the callback so this didn't work what a nice idea let's let me let me actually figure this out and I'm this been making this video a little bit longer but I think it's gonna be worth it let's look at the arguments array you can always say arguments to look at what are the arguments for a function in JavaScript whether you've specified them as actual parameters in the function definition or not so what I want to do is do this click on here so the argument it passes it a mouse event so and so the first element is a mouse event so I can probably say something like if key is not an instant instance of this is really silly what I'm doing when I could just write a separate function but let's see if this works I don't know if that actually is going to work if ki is an instance of a mouse event let's see what happens there oh that worked so what I'm doing now is I'm using this I'm repurposing the same function for two different uses on the one hand I want to be able to call the function with a key on the other hand I want this function just to happen as part of a mouse pressed event and key what I call it with a key will actually be a key but otherwise it might be a mouse event so I'm gonna override whatever it is by getting it from HTML fit it so now we can see I've got the blank object and everything works but I can now go to the Poorna link which refreshes the page and gets that because the key comes in permalink every time i refresh the page it could come up with that drawing and I could add something to it like it could make this a weird alien face or something and I'm gonna hit save and now I have all these drawings here are all my drawings I could click on and let me make this a little smaller so you can see then I can click on all the drawings and I have a permalink to all these drawings so how do I control click or option click it'll open in a new command click it'll open it in a new tab so I'm command clicking on all of these and we can see their separate pages that load these drawings from the database automatically so this really brings us to the end of this tutorial this is a p5.js sketch that allows users to create their own drawing UI can write a message to all thank you I was gonna try to write thank you for watching and it's gonna take me way too long plus my doodling mouse handwriting is terrible thank you I can make a drawing I can hit save it adds it to the database I can on the same page click between the drawings and I can also get a permalink so this page anytime i refresh the page starts with that drawing I could obviously make a separate page I could make them here's what you should do if you're watching this and want to do an exercise grab this code it'll be in the description linked the code for this will be linked on github obviously you'll have to create your own firebase database I'll probably take out the keys I guess but rework this to make a separate you that shows like a gallery of all the drawings and you know there's been a lot of wonderful collaborative drawing applications on the web I'm thinking of Aaron Koblin sheep market I think I'll link to that in this video's description as well as you can see as a kind of nice inspiration for this kind of project so thank you for watching and I don't know if this this might ended up being a long video I've lost my Dell but that concludes the database p5.js sketch for saving a drawing into a database and having a gallery of drawings example and if you make something with this please share it with me on Twitter at Schiffman please share a link in the comments ask your questions in the comments and I look forward to seeing you in another video tutorial soon okay bye bye
