With timestamps:

00:01 - Hi.
00:02 - So I made a couple,
a bunch of videos
00:05 - about conditional statements.
00:06 - And I recalled, or I thought
of during one of them
00:09 - that there's sort
of a key element
00:10 - here that I think would be
worth noting and spending
00:12 - a little bit of time on in its
own, short, little video, which
00:16 - I am attempting
to make right now.
00:17 - I was trying to be perky
because I'm really, inside,
00:20 - I feel like lying
down and taking a nap.
00:22 - OK.
00:23 - So what is the
topic of this video?
00:25 - And what I want to talk about
is what if you had a variable
00:29 - and instead of assigning
the value of that variable
00:32 - to say a number or perhaps a
string or perhaps an image--
00:36 - these are some things
that you may or may not
00:38 - have seen so far--
00:39 - what if the value of
that variable, I'm
00:43 - going to call it like going,
were equal to true itself
00:49 - or false?
00:50 - So in fact, this is a data type.
00:52 - Now as you know, anytime
you declare a variable,
00:55 - you just say var and the
name of the variable.
00:58 - And then it's up to you
to assign it a value.
01:00 - Most of the examples
we've seen so far,
01:02 - we give those variables numbers.
01:04 - Numbers are useful.
01:05 - They can be used to
specify coordinates
01:07 - on the screen, sizes of
shapes, colors, red components
01:10 - of the color, the
transparency of the color.
01:12 - Numbers generally are being
used over and over again,
01:14 - everywhere in the code.
01:15 - However, it can be useful to
have your own variable that
01:19 - is either set to true or false.
01:21 - Now before I get to
that, one of the reasons
01:23 - why I'm mentioning
this to you is
01:26 - there also happens to be
a variable built into P5.
01:29 - Right?
01:29 - There are the variables built
into P5 that you likely know
01:33 - about, mouse x and mouse y.
01:36 - These variables are numbers.
01:38 - They hold the
coordinate as to where
01:40 - the mouse is on the screen.
01:41 - But there is also a variable
called mouse is pressed.
01:48 - And this particular variable
is, its data type is Boolean,
01:55 - meaning it's either
true or false.
02:00 - So if this is relevant because--
02:01 - why is this relevant?
02:03 - This is relevant because
sometimes you want to know,
02:05 - is the mouse being
pressed or is it not.
02:07 - Now, earlier in a previous
video-- at some point,
02:10 - in some life where I
made this other video--
02:12 - there happened to be
a function, a function
02:15 - called mouse pressed.
02:19 - And I stated at the time that
this function is an event,
02:29 - meaning the code that you
write inside this function gets
02:32 - executed instantly the
moment the mouse is pressed.
02:36 - So why is there a mouse
pressed event, but also
02:39 - a Boolean variable to check
whether the mouse is pressed
02:43 - or not?
02:44 - And the distinction comes
down to the following.
02:46 - And this is a really
key distinction,
02:48 - which is totally built into
the way that you live your life
02:50 - and use a computer
but you may not
02:52 - have thought about
it in such detail
02:54 - because it's kind
of like just sort
02:55 - of like inherent way of being.
02:57 - But there's a difference
between clicking the mouse--
03:00 - I want to click the mouse to
instigate something-- versus I
03:02 - want to hold down the mouse
to have something happen
03:05 - continuously while I'm
holding down the mouse.
03:08 - And in essence, the
Boolean variable
03:10 - is something you
want to use when
03:12 - you want to test if the
mouse is being held down.
03:15 - And the function mouse
pressed is the function
03:17 - you want to use when the
mouse, for the event,
03:19 - the moment is the
mouse is being clicked.
03:21 - All the stuff that happens after
that, is it being held down?
03:24 - There's also a mouse
released function
03:25 - for knowing when it's released.
03:27 - But I digress.
03:28 - So let's look at the
distinction between these two.
03:31 - And I'm not sure exactly
how I'm going to do this.
03:33 - But I'm going to go back to the
example, the rollover example
03:36 - and see if we can kind of play
around with this idea of it
03:38 - as a button versus a rollover.
03:41 - OK.
03:41 - So let's look, let's
review this example.
03:45 - Since the last time you saw this
example-- because in my fantasy
03:47 - world people are just
watching these videos
03:49 - one after another
in sequence, which
03:51 - I don't know if it's true.
03:52 - I don't know if
anybody's watching.
03:54 - I'm doing this anyway.
03:55 - You don't have to watch.
03:56 - It's just something I do to
entertain myself during my day.
03:59 - And so I'm going
to hit run this.
04:01 - And you can see I
did a couple things.
04:02 - One is I used this
function rectMode.
04:06 - So now the rectangle is being
drawn according to its center.
04:09 - And then I adjusted
the coordinates
04:11 - and I added the y-coordinate.
04:13 - So this if statement
has become very long.
04:15 - I'm checking if mouse x is
between the left and right hand
04:18 - side of the rectangle,
between the top and bottom.
04:20 - So you can see this
works perfectly now.
04:24 - It only changes color
if the mouse is anywhere
04:26 - within that rectangle.
04:27 - So we've got a rollover.
04:28 - Now what if I wanted to, when
you're inside the circle,
04:37 - do something when
the mouse is pressed?
04:39 - Sorry.
04:40 - OK.
04:41 - I know what I'm doing here.
04:42 - So let's look at that if
mouse is pressed variable.
04:46 - So I'm going to actually add
just a completely separate
04:49 - if statement.
04:51 - And I'm going to say, if
mouse is pressed background.
04:54 - And I actually, I think
I want to put this--
04:57 - yeah.
04:58 - I want to put this
above that one.
05:00 - Actually, it doesn't
really matter.
05:02 - But I'm going to put it up
here just for a second, just
05:06 - to kind of keep it all together.
05:09 - So look, I've added
another if statement.
05:12 - Sorry.
05:12 - I lost my train of thought here,
but everything will come back.
05:15 - So if the mouse is pressed,
change the background.
05:17 - So remember, this is different
than I click the mouse
05:20 - and one thing
happens at the event.
05:22 - Now I'm checking, this is
the mouse pressed, in draw.
05:25 - So what I'm trying
to do here is check,
05:27 - is the user holding
down the mouse.
05:29 - This is how this is used.
05:31 - OK?
05:32 - So now, if I click the mouse--
05:35 - I'm holding it down, you
can't see here-- watch this.
05:37 - This is going to be a
really crazy moment for you.
05:41 - This is my computer rising
in this like mechanical desk
05:45 - thing.
05:45 - Yeah.
05:45 - This didn't really help.
05:46 - But to show you
this computer, I'm
05:48 - going to now hold
down the mouse.
05:50 - It is green.
05:51 - I am now letting go.
05:52 - It is not green.
05:54 - So I have this
interaction, which
05:57 - is different than I click the
mouse and it's green forever.
06:01 - We're going to have to
sort of see how to do that.
06:03 - The other thing
what I want to do
06:05 - is only actually have
this happen when I'm on,
06:08 - if I'm on this rollover.
06:11 - So let's figure that out.
06:14 - So it's kind of
silly but the way
06:16 - I'm going to do it right now is
take this if statement, whoa,
06:19 - and put it inside
this if statement.
06:21 - Now I probably could figure
out a way of joining this
06:24 - with another and, but what I'm
saying here is look at this.
06:28 - Look at this.
06:29 - This is kind of
exciting and different.
06:31 - If the mouse-- let me
put this back down--
06:37 - if the mouse is within that
rectangle and it's pressed,
06:41 - change the background.
06:42 - But it doesn't matter
whether it's pressed or not.
06:44 - If it's within that rectangle,
always change the highlight.
06:46 - So we can see the logic
here that I now have--
06:51 - I always have this rollover.
06:52 - It's going to get highlighted
as soon as the mouse is
06:55 - over there.
06:55 - I could click anywhere around
it , it doesn't change color.
06:58 - But now when I click here, but
only when I'm holding it down.
07:03 - OK?
07:04 - So now, that's using
the if mouse is pressed.
07:09 - What if I wanted this--
07:11 - this is like a button
that you hold down.
07:13 - It's like if you
had a light at home
07:14 - and wanted to have
the light on, you just
07:16 - always had to hold down
the button, the switch.
07:18 - As soon as you left,
it like turned off.
07:20 - So with your light at home, you
want to press it, it goes on.
07:23 - You leave and come back later,
you could press it again.
07:25 - Now for this to happen, we
need an entire other kind of,
07:31 - we need another variable.
07:33 - OK?
07:34 - And we need to use the
mouse pressed event.
07:35 - So we're going to piece
these things together.
07:37 - So now we have a rollover
where you hold down-- how am I,
07:40 - seven minutes--
07:40 - you hold down the mouse,
it turns the light on.
07:43 - What I want to do is
press the little button,
07:45 - turn the light on, press the
button, turn the light off.
07:47 - This is kind of like
strangely such a simple thing.
07:50 - So a bit of a tricky interaction
problem, tricky programming
07:55 - logic, something
like that problem.
07:57 - Let's figure it out.
07:58 - OK.
07:58 - So ultimately,
what I want now is
08:07 - to have my own-- the way to do
this is not to use the mouse
08:12 - is pressed variable.
08:13 - That has a value that's just
built into the operating
08:16 - system, into P5, into
JavaScript, into the browser.
08:18 - It knows whether the
mouse is pressed or not.
08:20 - I want to have my own variable.
08:23 - I want to have a
variable and call it on.
08:25 - Might be something, might be an
issue with using this term on.
08:28 - But for now, I think
it's going to be OK.
08:30 - And I'm going to start
with on equal to false.
08:33 - So when the program first
runs, the light is off.
08:36 - When on is false,
the light is off.
08:38 - And in Draw, what I
essentially want to do
08:45 - is I want to say if on,
then set the background
08:51 - to some other color.
08:52 - Otherwise, set the background
to some other color.
08:56 - So this is the idea here.
08:58 - If I have my own
Boolean variable that's
09:00 - either false or
true, I could just
09:02 - change the value
of that variable
09:04 - somewhere else in the code.
09:05 - When I click the mouse,
turn this to true
09:08 - and the light will always be on.
09:09 - Then I have to
figure out when do I
09:10 - set it back equal to false.
09:12 - So let's take a look at
doing this with this.
09:16 - Now in theory, I should
upload all these code examples
09:18 - somewhere.
09:18 - And I've got to figure
out a way to do that.
09:19 - But at the very least,
what I'm going to do
09:21 - is Save Project As
Conditionals button.
09:26 - And hopefully, that
previous one will be saved.
09:29 - So I'm going to take some
of this code for a second
09:32 - and just stick it at the
bottom and put it in comments.
09:37 - Because I might need
to refer to it later.
09:39 - So down here, we might need to
get back this rollover code.
09:42 - And maybe we need to look at
the if mouse is pressed thing
09:44 - again.
09:44 - But right now,
instead, what I want
09:46 - to do is just add at the
top, var on equals false.
09:52 - And here, I want to say if on,
background, a green background,
09:59 - otherwise a black background.
10:01 - So let's look at that.
10:02 - This is just a
simple if statement.
10:05 - If on, otherwise background.
10:07 - Now there's actually like, I
can't believe I didn't even
10:09 - mention this really.
10:10 - Because we've looked at
this with mouse is pressed.
10:12 - And we looked at
this with, on is just
10:15 - sort of intuitive to me.
10:17 - But always before, when you
had a Boolean expression,
10:21 - you needed to have some sort
of like relational operator
10:24 - like if mouse x is
greater than 100.
10:27 - Here I just said that
the whole point of this
10:30 - is this evaluates
to true or false.
10:32 - That's sort of off the edge or
there's a bit of glare there.
10:34 - But this evaluates
to true or false.
10:37 - A variable with
type Boolean, you
10:39 - don't need to check
anything about it.
10:42 - It itself just has the
value true or false.
10:45 - It evaluates to true or false.
10:46 - That's what it, that's
its total purpose in life.
10:48 - You could technically say this.
10:52 - You could say if
on equals true--
10:57 - and this would be
the same thing,
10:59 - like if on has the value true.
11:01 - But this is redundant.
11:02 - So this might actually help
you sort of think about it.
11:04 - Because this is really
what's going on.
11:06 - But code-wise, it's a little
bit shorter to just write if on,
11:10 - and then open curly bracket.
11:12 - OK?
11:12 - So now I'm coming
back over here.
11:14 - And we see that now if on,
green, otherwise, black.
11:18 - So I'm going to run this.
11:20 - You can see there's no green
because on is set to false
11:23 - and I'm not setting
it to true anywhere.
11:25 - Now, if on is set to true,
I'm going to hard code that.
11:29 - Now, the background is green.
11:31 - Because on is true, so this
code is being executed.
11:34 - So now the difference between
wanting to do something
11:38 - when the mouse is held down
versus instigated event
11:41 - the moment the mouse
is clicked is I
11:43 - need to add function
mouse pressed.
11:49 - So instead of before--
11:50 - remember with the
holding down the mouse,
11:52 - I had this if mouse
pressed in Draw--
11:54 - now I want to have this event.
11:56 - And what I can't
do, I don't want
11:58 - to put draw the green
background here.
12:00 - Right?
12:00 - Remember, draw is
always looping.
12:02 - So drawing code
here in this case
12:04 - doesn't really make sense
because it will just
12:06 - get overwritten by
what happens in Draw.
12:07 - What I want to do is change
the state of the program.
12:10 - How do I change the
state of the program?
12:12 - Well, on starts as false.
12:15 - That's its initial value.
12:16 - And when I run the program,
it's false, it's black.
12:19 - What I want to do is say,
when I click the mouse,
12:22 - set on equal to true,
or on equals true.
12:29 - So now, on equals true.
12:32 - Let's click the mouse.
12:34 - Ta-da, it's on.
12:35 - Click the mouse again,
it didn't turn off.
12:37 - Also, when I run this
again, I can click out here
12:41 - and it turns to on.
12:42 - So how do I get
it only to turn to
12:45 - on if I'm within the
bounds of that rectangle?
12:48 - Well, that's an easy thing.
12:49 - That's why saved this code.
12:51 - We can now, inside mouse
pressed, test for--
12:59 - oops-- we can test
for the location.
13:04 - So the thing that
I've added right here
13:05 - is now when the mouse
is pressed, first check
13:09 - to see where the mouse is.
13:10 - And only if it's within that
rectangle, set it equal to on.
13:13 - So let's run this again.
13:14 - OK.
13:14 - I'm clicking all
around the outside.
13:17 - Nothing's happening.
13:18 - Now I'm going to
click in the center.
13:19 - Here it comes.
13:20 - It turns on.
13:22 - Now I want it to turn off.
13:23 - So this is a tricky one.
13:26 - If it's on, if it's
true, it should go off.
13:30 - Otherwise, if it's
off, it should become--
13:32 - I already confused myself.
13:34 - We wanted to toggle its state.
13:36 - True becomes false,
false becomes true.
13:38 - True becomes false,
false becomes true.
13:40 - And I could actually
type this out.
13:41 - I could diagram this for you.
13:43 - But I'm just going to
kind of type it out.
13:44 - I'm going to say, if on is
true, on should be false.
13:51 - Otherwise, on should be true.
13:54 - Now this is kind of like, aw.
13:56 - The camera shut off.
13:57 - Here, I'm turning it back on.
13:59 - So this is definitely, again,
is like a point of confusion.
14:02 - Now the camera turned off.
14:03 - But I don't need to
go over there anymore.
14:04 - This is definitely a
point of confusion.
14:06 - It's tricky, like sort of
very circular weird logic.
14:09 - But think about it.
14:10 - If it's on, turn it off.
14:12 - Otherwise, it must have
been off so turn it on.
14:15 - So let's see if that works.
14:19 - Yay.
14:19 - So now I have this button.
14:21 - Every time I press it, I change
the state of the program.
14:25 - Pretty exciting.
14:25 - Now this, however,
can be condensed
14:28 - all into one line of code.
14:29 - And it involves an
operator that I--
14:31 - this is perfect
cause I was like,
14:33 - what operator did I forget--
14:34 - the not operator is
something that I forgot.
14:37 - So let me-- oh, I do
need to come over here.
14:39 - So I need to turn
this camera back on.
14:42 - So I want to look here
at the not operator.
14:49 - So we know that I
could say something
14:52 - like if mouse x is greater
than 100, do something.
14:58 - And I could invert
this, like the opposite
15:00 - of if it's greater than 100
would be kind of like less than
15:03 - or equal to 100.
15:05 - But I can also say
if it's not true
15:08 - that it's greater than
100, do something.
15:11 - And then not operator
is an exclamation point.
15:17 - So for example, if not
on, what does this mean?
15:27 - Do something.
15:28 - So I have a variable on.
15:30 - It's equal to false.
15:33 - Does this code get
executed, yes or no?
15:37 - Not false is true.
15:39 - So this expression
together evaluates to true.
15:42 - Therefore this code
does get evaluated.
15:47 - So let me make another
statement to you.
15:50 - And this is like whoo, really,
this is like very uncomfortable
15:54 - here.
15:55 - We're going to do
it on equals not on.
16:00 - What does that mean?
16:01 - I want to set the value of
this variable to not itself.
16:05 - So if its value is
false, not false is true.
16:09 - If its value is true,
not true is false.
16:12 - So this, much like we had
that expression speed equals
16:17 - speed times negative 1,
this reversed the polarity
16:22 - of a number.
16:23 - 3 becomes negative 3,
negative 3 becomes 3.
16:25 - Take a number, multiply
it by negative 1,
16:27 - makes a negative positive,
a positive negative.
16:30 - This expression takes
a Boolean value,
16:32 - makes false true or true false.
16:35 - So if I come back over
here and look at this,
16:37 - I could take all
of this right here,
16:40 - which has this effect of
toggling the Boolean variable,
16:43 - and I could just change
it to one line of code,
16:47 - on equals not on.
16:48 - And I'm going to run this.
16:52 - The light goes on and off.
16:53 - I've got a button.
16:54 - I can click outside
and nothing happens.
16:55 - I click inside-- now we
lost our little rollover.
16:58 - So I'm going to also
add that back in,
17:02 - which is just about
highlighting the color.
17:08 - And so we don't need the
mouse is pressed part anymore.
17:15 - And so all we're
doing here-- sorry--
17:18 - is I wanted to add it also.
17:20 - So notice, if I want to
check is the mouse over it,
17:23 - continuously, that's something
I need to do in draw.
17:26 - But at the moment
the mouse is pressed,
17:28 - I also need to check is the
mouse over it for the button.
17:32 - So this now has
the functionality
17:35 - of if I'm over it,
it's highlighted.
17:37 - But only if I click
does that button engage.
17:41 - So I have a couple of
things to say about this.
17:43 - Number one is anytime you
notice two pieces of code
17:47 - in your program that are
basically identical, you should
17:50 - ask yourself the question, is
there a better way to do this.
17:53 - Now we haven't, we need to get
further down the road here.
17:56 - But maybe there's a
way we could create
17:58 - our own function that tested
if the mouse is over a given
18:02 - point.
18:03 - And we kind of can
do that in two places
18:04 - without having to copy and
paste in the same code.
18:06 - That's something we're
going to see later, that I'm
18:08 - going to show you later.
18:09 - The other thing to think about
here that's super interesting,
18:12 - again, I think
it's a point that I
18:13 - started with is we just spent--
18:15 - oh my god, this is 20
minutes, this video crazy--
18:18 - 20 minutes just looking
at how to make a button
18:22 - happen, you know,
rollover versus a button.
18:24 - And what's interesting
about working in P5
18:27 - and in the browser is later,
as I get to further topics,
18:30 - I would like to show you how you
can add buttons and interface
18:33 - elements that you
get essentially
18:35 - for free that are part of the
native browser environments.
18:37 - They're HTML elements.
18:39 - There are elements that
you can add to a web page
18:42 - with a little bit of--
18:43 - actually, code in P5 will
let you just create one.
18:46 - And you can kind of
hook different events.
18:47 - And the P5 is going to
take care of a lot of this
18:50 - is the mouse over it or
did the mouse press it,
18:53 - that type of thing.
18:54 - But I think there's
a moment here,
18:55 - as you're just starting
out programming, working
18:57 - in the raw canvas, that
it's worthwhile to try
18:59 - to program some of these button
and rollover kind of elements.
19:03 - And it's just good practice
and kind of gets you working
19:06 - with all this logic stuff.
19:07 - And it'll be interesting
to compare to it later.
19:09 - So I would say if you're
trying to think of an exercise
19:10 - to sort of piggyback off of this
is you might have some stuff,
19:13 - try putting this kind
of button on a sketch
19:15 - where there's something
moving around the screen.
19:17 - And when you press
the button, can you
19:19 - make the thing move in
a different direction
19:21 - or change its size or what kind
of other types of things can
19:24 - you hook into like a button
like this besides just changing
19:27 - the background color.
19:28 - OK.
19:28 - Hopefully that
was useful to you.
19:30 - I am now going to
stop this video
19:32 - and I'm going to move on to
making some videos about loops.
19:37 - Stop recording.

Cleaned transcript:

Hi. So I made a couple, a bunch of videos about conditional statements. And I recalled, or I thought of during one of them that there's sort of a key element here that I think would be worth noting and spending a little bit of time on in its own, short, little video, which I am attempting to make right now. I was trying to be perky because I'm really, inside, I feel like lying down and taking a nap. OK. So what is the topic of this video? And what I want to talk about is what if you had a variable and instead of assigning the value of that variable to say a number or perhaps a string or perhaps an image these are some things that you may or may not have seen so far what if the value of that variable, I'm going to call it like going, were equal to true itself or false? So in fact, this is a data type. Now as you know, anytime you declare a variable, you just say var and the name of the variable. And then it's up to you to assign it a value. Most of the examples we've seen so far, we give those variables numbers. Numbers are useful. They can be used to specify coordinates on the screen, sizes of shapes, colors, red components of the color, the transparency of the color. Numbers generally are being used over and over again, everywhere in the code. However, it can be useful to have your own variable that is either set to true or false. Now before I get to that, one of the reasons why I'm mentioning this to you is there also happens to be a variable built into P5. Right? There are the variables built into P5 that you likely know about, mouse x and mouse y. These variables are numbers. They hold the coordinate as to where the mouse is on the screen. But there is also a variable called mouse is pressed. And this particular variable is, its data type is Boolean, meaning it's either true or false. So if this is relevant because why is this relevant? This is relevant because sometimes you want to know, is the mouse being pressed or is it not. Now, earlier in a previous video at some point, in some life where I made this other video there happened to be a function, a function called mouse pressed. And I stated at the time that this function is an event, meaning the code that you write inside this function gets executed instantly the moment the mouse is pressed. So why is there a mouse pressed event, but also a Boolean variable to check whether the mouse is pressed or not? And the distinction comes down to the following. And this is a really key distinction, which is totally built into the way that you live your life and use a computer but you may not have thought about it in such detail because it's kind of like just sort of like inherent way of being. But there's a difference between clicking the mouse I want to click the mouse to instigate something versus I want to hold down the mouse to have something happen continuously while I'm holding down the mouse. And in essence, the Boolean variable is something you want to use when you want to test if the mouse is being held down. And the function mouse pressed is the function you want to use when the mouse, for the event, the moment is the mouse is being clicked. All the stuff that happens after that, is it being held down? There's also a mouse released function for knowing when it's released. But I digress. So let's look at the distinction between these two. And I'm not sure exactly how I'm going to do this. But I'm going to go back to the example, the rollover example and see if we can kind of play around with this idea of it as a button versus a rollover. OK. So let's look, let's review this example. Since the last time you saw this example because in my fantasy world people are just watching these videos one after another in sequence, which I don't know if it's true. I don't know if anybody's watching. I'm doing this anyway. You don't have to watch. It's just something I do to entertain myself during my day. And so I'm going to hit run this. And you can see I did a couple things. One is I used this function rectMode. So now the rectangle is being drawn according to its center. And then I adjusted the coordinates and I added the ycoordinate. So this if statement has become very long. I'm checking if mouse x is between the left and right hand side of the rectangle, between the top and bottom. So you can see this works perfectly now. It only changes color if the mouse is anywhere within that rectangle. So we've got a rollover. Now what if I wanted to, when you're inside the circle, do something when the mouse is pressed? Sorry. OK. I know what I'm doing here. So let's look at that if mouse is pressed variable. So I'm going to actually add just a completely separate if statement. And I'm going to say, if mouse is pressed background. And I actually, I think I want to put this yeah. I want to put this above that one. Actually, it doesn't really matter. But I'm going to put it up here just for a second, just to kind of keep it all together. So look, I've added another if statement. Sorry. I lost my train of thought here, but everything will come back. So if the mouse is pressed, change the background. So remember, this is different than I click the mouse and one thing happens at the event. Now I'm checking, this is the mouse pressed, in draw. So what I'm trying to do here is check, is the user holding down the mouse. This is how this is used. OK? So now, if I click the mouse I'm holding it down, you can't see here watch this. This is going to be a really crazy moment for you. This is my computer rising in this like mechanical desk thing. Yeah. This didn't really help. But to show you this computer, I'm going to now hold down the mouse. It is green. I am now letting go. It is not green. So I have this interaction, which is different than I click the mouse and it's green forever. We're going to have to sort of see how to do that. The other thing what I want to do is only actually have this happen when I'm on, if I'm on this rollover. So let's figure that out. So it's kind of silly but the way I'm going to do it right now is take this if statement, whoa, and put it inside this if statement. Now I probably could figure out a way of joining this with another and, but what I'm saying here is look at this. Look at this. This is kind of exciting and different. If the mouse let me put this back down if the mouse is within that rectangle and it's pressed, change the background. But it doesn't matter whether it's pressed or not. If it's within that rectangle, always change the highlight. So we can see the logic here that I now have I always have this rollover. It's going to get highlighted as soon as the mouse is over there. I could click anywhere around it , it doesn't change color. But now when I click here, but only when I'm holding it down. OK? So now, that's using the if mouse is pressed. What if I wanted this this is like a button that you hold down. It's like if you had a light at home and wanted to have the light on, you just always had to hold down the button, the switch. As soon as you left, it like turned off. So with your light at home, you want to press it, it goes on. You leave and come back later, you could press it again. Now for this to happen, we need an entire other kind of, we need another variable. OK? And we need to use the mouse pressed event. So we're going to piece these things together. So now we have a rollover where you hold down how am I, seven minutes you hold down the mouse, it turns the light on. What I want to do is press the little button, turn the light on, press the button, turn the light off. This is kind of like strangely such a simple thing. So a bit of a tricky interaction problem, tricky programming logic, something like that problem. Let's figure it out. OK. So ultimately, what I want now is to have my own the way to do this is not to use the mouse is pressed variable. That has a value that's just built into the operating system, into P5, into JavaScript, into the browser. It knows whether the mouse is pressed or not. I want to have my own variable. I want to have a variable and call it on. Might be something, might be an issue with using this term on. But for now, I think it's going to be OK. And I'm going to start with on equal to false. So when the program first runs, the light is off. When on is false, the light is off. And in Draw, what I essentially want to do is I want to say if on, then set the background to some other color. Otherwise, set the background to some other color. So this is the idea here. If I have my own Boolean variable that's either false or true, I could just change the value of that variable somewhere else in the code. When I click the mouse, turn this to true and the light will always be on. Then I have to figure out when do I set it back equal to false. So let's take a look at doing this with this. Now in theory, I should upload all these code examples somewhere. And I've got to figure out a way to do that. But at the very least, what I'm going to do is Save Project As Conditionals button. And hopefully, that previous one will be saved. So I'm going to take some of this code for a second and just stick it at the bottom and put it in comments. Because I might need to refer to it later. So down here, we might need to get back this rollover code. And maybe we need to look at the if mouse is pressed thing again. But right now, instead, what I want to do is just add at the top, var on equals false. And here, I want to say if on, background, a green background, otherwise a black background. So let's look at that. This is just a simple if statement. If on, otherwise background. Now there's actually like, I can't believe I didn't even mention this really. Because we've looked at this with mouse is pressed. And we looked at this with, on is just sort of intuitive to me. But always before, when you had a Boolean expression, you needed to have some sort of like relational operator like if mouse x is greater than 100. Here I just said that the whole point of this is this evaluates to true or false. That's sort of off the edge or there's a bit of glare there. But this evaluates to true or false. A variable with type Boolean, you don't need to check anything about it. It itself just has the value true or false. It evaluates to true or false. That's what it, that's its total purpose in life. You could technically say this. You could say if on equals true and this would be the same thing, like if on has the value true. But this is redundant. So this might actually help you sort of think about it. Because this is really what's going on. But codewise, it's a little bit shorter to just write if on, and then open curly bracket. OK? So now I'm coming back over here. And we see that now if on, green, otherwise, black. So I'm going to run this. You can see there's no green because on is set to false and I'm not setting it to true anywhere. Now, if on is set to true, I'm going to hard code that. Now, the background is green. Because on is true, so this code is being executed. So now the difference between wanting to do something when the mouse is held down versus instigated event the moment the mouse is clicked is I need to add function mouse pressed. So instead of before remember with the holding down the mouse, I had this if mouse pressed in Draw now I want to have this event. And what I can't do, I don't want to put draw the green background here. Right? Remember, draw is always looping. So drawing code here in this case doesn't really make sense because it will just get overwritten by what happens in Draw. What I want to do is change the state of the program. How do I change the state of the program? Well, on starts as false. That's its initial value. And when I run the program, it's false, it's black. What I want to do is say, when I click the mouse, set on equal to true, or on equals true. So now, on equals true. Let's click the mouse. Tada, it's on. Click the mouse again, it didn't turn off. Also, when I run this again, I can click out here and it turns to on. So how do I get it only to turn to on if I'm within the bounds of that rectangle? Well, that's an easy thing. That's why saved this code. We can now, inside mouse pressed, test for oops we can test for the location. So the thing that I've added right here is now when the mouse is pressed, first check to see where the mouse is. And only if it's within that rectangle, set it equal to on. So let's run this again. OK. I'm clicking all around the outside. Nothing's happening. Now I'm going to click in the center. Here it comes. It turns on. Now I want it to turn off. So this is a tricky one. If it's on, if it's true, it should go off. Otherwise, if it's off, it should become I already confused myself. We wanted to toggle its state. True becomes false, false becomes true. True becomes false, false becomes true. And I could actually type this out. I could diagram this for you. But I'm just going to kind of type it out. I'm going to say, if on is true, on should be false. Otherwise, on should be true. Now this is kind of like, aw. The camera shut off. Here, I'm turning it back on. So this is definitely, again, is like a point of confusion. Now the camera turned off. But I don't need to go over there anymore. This is definitely a point of confusion. It's tricky, like sort of very circular weird logic. But think about it. If it's on, turn it off. Otherwise, it must have been off so turn it on. So let's see if that works. Yay. So now I have this button. Every time I press it, I change the state of the program. Pretty exciting. Now this, however, can be condensed all into one line of code. And it involves an operator that I this is perfect cause I was like, what operator did I forget the not operator is something that I forgot. So let me oh, I do need to come over here. So I need to turn this camera back on. So I want to look here at the not operator. So we know that I could say something like if mouse x is greater than 100, do something. And I could invert this, like the opposite of if it's greater than 100 would be kind of like less than or equal to 100. But I can also say if it's not true that it's greater than 100, do something. And then not operator is an exclamation point. So for example, if not on, what does this mean? Do something. So I have a variable on. It's equal to false. Does this code get executed, yes or no? Not false is true. So this expression together evaluates to true. Therefore this code does get evaluated. So let me make another statement to you. And this is like whoo, really, this is like very uncomfortable here. We're going to do it on equals not on. What does that mean? I want to set the value of this variable to not itself. So if its value is false, not false is true. If its value is true, not true is false. So this, much like we had that expression speed equals speed times negative 1, this reversed the polarity of a number. 3 becomes negative 3, negative 3 becomes 3. Take a number, multiply it by negative 1, makes a negative positive, a positive negative. This expression takes a Boolean value, makes false true or true false. So if I come back over here and look at this, I could take all of this right here, which has this effect of toggling the Boolean variable, and I could just change it to one line of code, on equals not on. And I'm going to run this. The light goes on and off. I've got a button. I can click outside and nothing happens. I click inside now we lost our little rollover. So I'm going to also add that back in, which is just about highlighting the color. And so we don't need the mouse is pressed part anymore. And so all we're doing here sorry is I wanted to add it also. So notice, if I want to check is the mouse over it, continuously, that's something I need to do in draw. But at the moment the mouse is pressed, I also need to check is the mouse over it for the button. So this now has the functionality of if I'm over it, it's highlighted. But only if I click does that button engage. So I have a couple of things to say about this. Number one is anytime you notice two pieces of code in your program that are basically identical, you should ask yourself the question, is there a better way to do this. Now we haven't, we need to get further down the road here. But maybe there's a way we could create our own function that tested if the mouse is over a given point. And we kind of can do that in two places without having to copy and paste in the same code. That's something we're going to see later, that I'm going to show you later. The other thing to think about here that's super interesting, again, I think it's a point that I started with is we just spent oh my god, this is 20 minutes, this video crazy 20 minutes just looking at how to make a button happen, you know, rollover versus a button. And what's interesting about working in P5 and in the browser is later, as I get to further topics, I would like to show you how you can add buttons and interface elements that you get essentially for free that are part of the native browser environments. They're HTML elements. There are elements that you can add to a web page with a little bit of actually, code in P5 will let you just create one. And you can kind of hook different events. And the P5 is going to take care of a lot of this is the mouse over it or did the mouse press it, that type of thing. But I think there's a moment here, as you're just starting out programming, working in the raw canvas, that it's worthwhile to try to program some of these button and rollover kind of elements. And it's just good practice and kind of gets you working with all this logic stuff. And it'll be interesting to compare to it later. So I would say if you're trying to think of an exercise to sort of piggyback off of this is you might have some stuff, try putting this kind of button on a sketch where there's something moving around the screen. And when you press the button, can you make the thing move in a different direction or change its size or what kind of other types of things can you hook into like a button like this besides just changing the background color. OK. Hopefully that was useful to you. I am now going to stop this video and I'm going to move on to making some videos about loops. Stop recording.
