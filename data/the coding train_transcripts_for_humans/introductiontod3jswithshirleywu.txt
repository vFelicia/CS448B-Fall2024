With timestamps:

00:01 - [Music]
00:10 - [Music]
01:19 - [Music]
01:27 - [Music]
01:45 - [Music]
01:52 - [Music]
02:24 - [Music]
02:30 - [Music]
02:40 - [Music]
03:06 - [Music]
04:18 - [Music]
04:52 - [Music]
05:34 - okay now I'm live mu yeah they were I
05:37 - use hello everyone welcome to a very
05:42 - special episode of the coding train with
05:48 - a guest Shirley woo I would I would say
05:51 - before the train whistle I think it's
05:53 - not sanitary I get a bell you can ring
05:56 - out what you just my only one well I
05:59 - don't know you can do it there you go
06:01 - okay there are sounds I'm sorry well
06:03 - have a little time some technical
06:05 - difficulties in getting started this is
06:10 - a little awkward we're gonna kind of
06:11 - figure this out as we go I have this
06:16 - tendency to like look over here because
06:18 - a little behind the scenes here this is
06:20 - where I have the monitor and I can see
06:22 - the chat and we can like sort of see
06:24 - what the mic levels are but if we stand
06:26 - like this the whole time we're looking
06:28 - that way okay I try to talk to the
06:31 - picture over there on the camera and you
06:33 - can also just talk we could talk to each
06:34 - other I like to people I will get to
06:37 - introducing Shirley in a minute let me
06:39 - just kind of like lay some that is sort
06:44 - of like to give you the context of
06:45 - what's about to happen here today I will
06:48 - note it's around 4:15 p.m. Eastern Time
06:51 - there is an event happening in the space
06:53 - of NYU at 6:00 p.m. so we have to end
06:57 - around 5 or 10 of and if for some reason
07:00 - everything goes wrong we don't finish
07:01 - we'll come back another time yeah that's
07:04 - what's gonna happen to much higher vests
07:05 - um so but this is a unique episode live
07:09 - stream of the coding train in the sense
07:11 - that I I'm going to learn something new
07:14 - taught by Shirley and in fact a little
07:18 - technical magic here is can i this is
07:21 - okay right yeah I my stream deck is
07:24 - failing so I can't seem to set up a
07:25 - button but I'm gonna come over here and
07:27 - I'm gonna click something on the
07:28 - interface here like this boom and that's
07:31 - my screen two different screens so I'm
07:35 - gonna try leave it as yours right now
07:37 - sure like to you so that when we get to
07:39 - the point of view introducing yourself
07:41 - you might have stuff there so okay
07:46 - welcome maybe your
07:47 - like what am I even watching this is the
07:49 - coding train I am your host I try to
07:57 - stream doctor conductor a conductor can
08:01 - you by the way can everybody hear surely
08:03 - okay okay
08:03 - lots of noise from one of the two mics
08:05 - hi maybe dance mic since it makes noise
08:08 - when he moves somebody has a loose my
08:11 - choir well we can we can test this
08:13 - pretty easy number one is I can put this
08:18 - on and I can hear so try go hello hello
08:21 - hello is all sounds very good to me
08:26 - actually my name is Shirley okay I'm
08:34 - gonna mute my mic for a second okay
08:36 - Shirley just talk my name is Shirley uh
08:41 - yeah okay
08:44 - my name is Dan and my mic is back on
08:47 - Mike is definitely dance oh it's
08:53 - happening as I move around maybe it's
08:55 - just loose connection here okay let me
08:58 - try this
08:59 - probably just oh that's
09:06 - yeah I can make it happen okay I think
09:09 - we're okay right now it's me and I I
09:11 - think I had like a weird connection all
09:14 - right I'm gonna assume for the moment
09:16 - now one thing you should be aware of
09:17 - what you're looking at the chat
09:20 - everybody's about behind us okay so
09:23 - anything we say it takes about 36 the
09:25 - chat to actually see it
09:27 - got it so sometimes the messages are
09:28 - very hard to Oh
09:30 - it's interacting with my hair yeah I
09:32 - think it might have been but I think
09:34 - it's I think it's okay I think it really
09:35 - was my mic because as I was a thing I
09:37 - shifted some wires I heard lots of crazy
09:40 - same thing so I think we're good people
09:43 - are saying that my sound is low it's
09:46 - really bad all mine
09:48 - it's got worse I wonder is it better if
09:52 - I stand further away is there some kind
09:53 - of receiver issue all right hold on I'm
09:58 - gonna put that what's weird is I don't
10:00 - hear that glitching in like me trying to
10:06 - well now I hear something
10:08 - but that's cuz you're doing that okay so
10:10 - now I shouldn't get anywhere near my
10:14 - hair
10:19 - okay this sounds perfect to me
10:25 - all right everyone I'm holding up three
10:29 - fingers so tell me if three fingers
10:35 - right now say three sounds good sounds
10:38 - bad cuz it in my in the mater it sounds
10:43 - perfect I heard it
10:52 - Oh what is it is it this movement so
10:55 - take out let's hold on sick we're gonna
10:58 - we're gonna do a little debugging of
10:59 - this I'm just going to move us remove us
11:02 - from the picture okay um why don't you
11:05 - take the whole thing off and let's just
11:07 - put the receiver on the table it's like
11:10 - it's gonna make some noise everybody
11:12 - yeah I heard it there as I have a
11:15 - feeling it's like oh not good okay and
11:22 - then straight just hold it as I swing
11:24 - put it attach it okay same way you had
11:27 - it before but I'm gonna have to move
11:29 - around yeah I know but let's just see if
11:31 - we get it working okay I think maybe so
11:38 - we you can't see us right now but we
11:41 - moved some things around and does it
11:44 - sound okay we have to wait around 20
11:46 - seconds say something okay now they can
11:55 - see us again
11:56 - okay I think it's okay now because I'm
12:01 - not here I think this something was
12:05 - happening here okay it sounds good okay
12:10 - okay so I think were sounds alright now
12:15 - I think we're okay with the sound we're
12:17 - gonna just work like this and then as
12:18 - soon as you have to move oh well put
12:21 - this back into your pocket or something
12:22 - you know that - yeah it's fine yeah it
12:26 - should be fine I think maybe you think
12:28 - you could probably put it in like you
12:29 - could clip it to your back pocket it
12:31 - might have just been this
12:32 - was getting like underneath something or
12:34 - whatever anyway I'm just gonna leave it
12:37 - on the table right back back to your
12:38 - regularly scheduled program maybe we
12:40 - will make an edited version of the first
12:44 - 20 but your eyes if this happens every
12:46 - time this is not an anomaly I always am
12:49 - having like weird technical things okay
12:52 - setup is so intense I know I know when I
12:55 - used to stream II used to just literally
12:57 - be my computer and I don't think I ever
13:00 - had technical difficulties so I'm gonna
13:03 - skip with some of the pleasantries
13:05 - because I want us to I want to say keep
13:06 - track of time here this is a special
13:08 - occasion
13:09 - with Shirley here I'm going to so what's
13:12 - happening first of all thank you to the
13:14 - node our sponsor do you have websites
13:16 - you host on the internet yeah so if you
13:19 - like Shirley has websites you know the
13:21 - Internet the node is a cloud server that
13:23 - you could use it in about halfway
13:24 - through the live stream I'll come back
13:25 - and tell you a little about the node and
13:27 - you and I can get a coupon through the
13:29 - coding train really just by going to the
13:30 - node calm slash coding tree
13:32 - but what we're gonna do today is I most
13:35 - of my tutorials most of the videos that
13:37 - I do involve a JavaScript library called
13:40 - p5 you know p5 surely is a amazing
13:45 - superstar data artist if you're not
13:48 - familiar with her work you should
13:50 - definitely check out her website which I
13:52 - think you have here right now I win this
13:57 - video descriptions link and some of the
13:59 - moderators could maybe post it in the
14:05 - YouTube chat a link to Shirley's website
14:07 - ok yeah don't worry so much we'll we'll
14:10 - figure this out oh and actually what I'm
14:13 - gonna do here I forgot one little
14:14 - technical piece that I'm gonna add I'm
14:16 - actually gonna record all of the
14:18 - separate outputs I'm not recording your
14:20 - laptop screen I just realize that's fine
14:23 - [Music]
14:33 - a little bit so and Shirley uses a
14:40 - variety of different tools I'm imagining
14:42 - for your work but one of the tools you
14:44 - use very frequently is Vegas one is d3
14:47 - 83 so d3 is a JavaScript library it's
14:51 - also has a little dumb bird yeah but
14:53 - it's pretty different so and I I want to
14:56 - say that I've never used d3 but that's
14:58 - not entirely true I think I've tried to
15:00 - use it once or twice but I couldn't
15:03 - remember what I did the last time and so
15:07 - what this is gonna be this is somewhat
15:09 - similar to when npj was here PJ showed
15:11 - me a little bit about react Shirley is
15:13 - going to teach me how to use d3 and
15:17 - we're gonna make it's got a little
15:18 - workshop planned I'm the student Shirley
15:20 - is the teacher and I'm gonna attempt to
15:22 - code over here on my laptop which one
15:25 - will kind of switch back and forth so
15:28 - maybe what we could do to get started
15:30 - with is if Shirley if you want to take a
15:33 - minute to introduce yourself I kind of
15:35 - did a little bit but if there's anything
15:37 - I missed that you want to say about your
15:38 - work or things your do or other things
15:40 - you want to plug you could do that it
15:43 - I'm gonna just add one more technical
15:45 - feature which is I want to be recording
15:47 - to disk your laptop screen ok because if
15:49 - we decide to make like an edited version
15:51 - of this that gets published as like a
15:53 - standalone d3 tutorial without a lot of
15:55 - the extra nonsense of figuring out Mike
15:57 - stuff I work with a video editor and he
16:01 - puts all the stuff together but if we're
16:02 - not recording this we won't yeah oh you
16:04 - know we could do though a much simpler
16:05 - solution so I'm I'm just gonna do a
16:07 - screen capture yeah I mean I could set
16:10 - it up but this is gonna be much quicker
16:12 - so I'm just gonna do a new screen
16:13 - recording and I think you could just do
16:19 - the whole screen yeah but I wanted to
16:21 - just see if it has sound but doesn't
16:22 - matter it's like extra I'm just gonna do
16:24 - this and now it is it's recording
16:26 - alright that's a much simpler solution
16:27 - and I won't worry about I have this
16:29 - other setup that records all the video
16:31 - signals I don't think I focused the
16:33 - camera stay there stand there you know
16:38 - when we got this last minute add a
16:39 - second laptop yeah that was my fault
16:42 - I was all set up and ready to go and
16:44 - then I was like damn maybe it's good to
16:46 - have a second laptop so I'm just gonna
16:48 - of you could just stand still for a
16:50 - second okay so I'm gonna focus the
16:52 - camera and there we go that's better
16:55 - great okay so I think we're good
17:00 - technology wise we have your laptop if I
17:03 - want to switch to my laptop I need to
17:06 - use this mouse so I'm just gonna get it
17:08 - ready and I just click this button back
17:11 - to my laptop so that's how I'm gonna do
17:13 - it and I'm gonna leave it at yours
17:16 - mm-hmm and say take it away tell me what
17:20 - you hi your name is Shirley yes how
17:23 - about I just read this okay my name is
17:25 - Shirley I'm an independent you can talk
17:27 - that's right okay Kay so I hi my name is
17:31 - Shirley I'm my title that I've given
17:34 - myself is independent creator of data
17:36 - visualizations I'm and that doesn't
17:39 - really mean anything I'm just a
17:40 - freelancer and I work with clients
17:44 - um around the world mostly on I'm like
17:50 - tech company's media companies
17:52 - journalism companies and I work with
17:54 - them and their data to tell visual
17:57 - stories um and so some of the things
18:00 - I've done before is um this one so this
18:03 - one is this is really funny because the
18:05 - first time we met um we were like doing
18:08 - it was we met because we did a thing
18:11 - with mpj m-money cool yes and then we
18:14 - were like 40 minutes into like a
18:16 - livestream or like a recording um and
18:19 - then I started showing this project and
18:21 - Dan was like wait I know this project I
18:24 - spent a lot of time poking through this
18:27 - project
18:27 - did you really oh yes definitely I'm a
18:29 - musical theater geek nerd I've seen
18:32 - Hamilton a bunch of times how many times
18:34 - twice I have to get to see Evita this
18:39 - weekend I'm very exciting I've seen it
18:41 - three times okay okay
18:44 - yeah yeah so that's one of the projects
18:46 - that did really well I've also worked
18:48 - with the Guardian on something a lot
18:49 - more serious about homelessness so I
18:52 - just I'm yeah my job is I try to take
18:56 - datasets that you know maybe when it's
18:59 - just numbers I'm it might seem cold or
19:02 - hard to understand and try to convey
19:05 - them in a way that's compelling and
19:08 - maybe even emotional um and for today
19:11 - what we want to do is I had this project
19:14 - and I just realized this is the first
19:16 - project I ever published after I went
19:18 - freelance so that was three and a half
19:19 - years ago um and it's this visualization
19:22 - of the top summer blockbusters since
19:24 - I've been alive um and each of these
19:28 - flowers represent a movie and each of
19:31 - the petals are parental guidance ratings
19:33 - and colors are genres I'm and then the
19:37 - number of petals and the size of the
19:39 - petals correspond with like IMDB data so
19:42 - for example like this is um IMDB data
19:45 - out of ten in size I'm and so you know
19:48 - there's like some one of them they're
19:50 - like you know Dark Knight Rises really
19:52 - big beautiful and I love Harry Potter
19:55 - instruction and the one that I love
19:58 - showing is 1997 Batman there Robin and
20:03 - how cute it's so tiny today we're gonna
20:08 - recreate this okay these by the way or
20:11 - very have a visual quality very similar
20:13 - to some of the coding challenges I've
20:15 - done with polar roses so if you use
20:18 - polar coordinates to kind of loop around
20:21 - the path of a circle but adjust the
20:22 - angle and the radius as you're moving
20:24 - and you loop around you could get these
20:26 - rows like patterns yeah so I have this
20:28 - most recently I think I did a video
20:30 - around the more arose which is the
20:32 - particular way of doing this anyway just
20:33 - have to link that together yeah and so
20:36 - that's what we're doing today and we
20:39 - talked about this and I was like I'm
20:40 - gonna go into this and having prepped
20:42 - absolutely nothing about that is how I'm
20:45 - Siri no prep and so it's just gonna be
20:49 - pure like we're just gonna be thinking
20:50 - through this together
20:51 - great yes so do you want to get started
20:54 - or do you want to do anything Allison oh
20:55 - this is good let's get started
20:57 - we're on a time crunch yes okay so let's
21:01 - switch back to your I'm gonna
21:02 - unfortunately I couldn't get my stream
21:04 - deck button to work so do this manually
21:06 - but now I'm here and I need to go to a
21:09 - web browser now I usually use the p5 web
21:13 - editor which you know most people have
21:16 - watched the channel I've seen which
21:17 - looks like this
21:18 - I can type JavaScript code here if I run
21:20 - this run the sketch I see the canvas
21:23 - output here but amazing amazing
21:28 - invisible Cup but we're going to use a
21:32 - different web editor today yeah it's
21:34 - called observable I'm observable hq.com
21:38 - I think I'm just going to google it and
21:40 - I don't know it's gonna be a good yeah
21:45 - so this is kind of the newest iteration
21:49 - of I'm the creator of d3 right is also
21:55 - behind this and it's kind of like I
21:57 - think of it as I'm a Jupiter notebook
21:59 - but on the web and kind of tailored for
22:03 - data visualization so you know a lot of
22:05 - people in the audience are probably
22:06 - familiar with Jupiter notebooks because
22:08 - it's a thing that's out there that a lot
22:09 - of a tool that you use but it's not
22:11 - something that I use regularly on this
22:12 - channel so Jupiter notebook is a page
22:17 - essentially that you can run in a web
22:18 - browser type in Python code and execute
22:21 - it and what's special about it is you
22:23 - can execute like I think are called
22:26 - cells like little blocks one at a time
22:28 - for these and so that's what we're
22:29 - seeing here but the difference is we can
22:32 - do that these like little cells we're
22:34 - gonna do that with JavaScript yeah okay
22:35 - so how do I get started do I need to
22:38 - create an account you can't just like
22:39 - yes I can let's see if I do sign it with
22:41 - github let's try that all right I'm
22:44 - gonna authorize it
22:46 - there we go everybody okay so now this
22:52 - this is this is definitely the first
22:53 - time I've used observable myself I've
22:55 - looked at a lot of observable notebooks
22:57 - I have a kind of memory that it's got
23:00 - it's a little bit of its own way of
23:02 - doing things that's different from maybe
23:04 - a traditional JavaScript workflow is
23:06 - that true or yeah so I only really
23:08 - reckon
23:09 - this for prototyping um obviously like
23:12 - if you want to them make a website or
23:14 - something you would go and like doing
23:16 - the index.html or something I'm vibing
23:19 - for this it would be fun too so you want
23:22 - to be editing in these cells so where is
23:24 - this and what I can call this oh oh I
23:26 - see yeah so then you can okay and then
23:37 - when I hit run shift shift return is
23:40 - there shortcut all right okay people
23:44 - tell me this is this is a little bit
23:45 - smaller than the font size I usually use
23:47 - but I can also zoom into it
23:49 - and I can yeah I'll do this that's good
23:52 - okay and I'm giving us this much it's
23:55 - always confusing this much space so that
23:57 - we don't stand in front of it I think
23:58 - we're good okay all right so I mean the
24:01 - very first thing that we can do is just
24:04 - create one of the petal shapes I mean so
24:06 - this is where I kind of wanted to talk
24:08 - through SVG paths together with you okay
24:10 - I'm and I'm maybe the way we can do this
24:14 - is first we draw on the board okay then
24:18 - we put it in okay okay i man so so I'm
24:22 - gonna switch the camera to the
24:23 - whiteboard yes and you're just gonna
24:25 - have to take that oh that's right thank
24:26 - you for the room right there and you
24:29 - have a marker I'm just gonna stand over
24:31 - here
24:31 - I like how everything is set up for Dan
24:33 - so it's like everything oh oh and I'm
24:36 - gonna plug this is um this is a new
24:39 - sweater
24:39 - um it's designed by Georgia loopy who is
24:42 - an amazing data artisan designer um and
24:46 - this sweater is a data visualization of
24:49 - Ada Lovelace and her algorithm for the
24:51 - Babbage engine yeah so please don't ask
24:55 - me how to read it because I haven't
24:56 - decoded it yet
24:58 - um but I was just really excited to like
25:00 - wear this on your live code um yeah okay
25:05 - so let's do s we G paths together so Dan
25:09 - I know you work a lot mp5 so I'm
25:11 - guessing over here I'm guessing that
25:13 - you're extremely familiar with like
25:15 - canvas like okay I'm gonna put it in
25:17 - here and I hope I'm gonna put it in
25:19 - another pocket and I let me know with
25:22 - the
25:22 - if audio ever goes crazy we've got the
25:26 - mic in Shirley's pocket
25:27 - yes a different pocket different pocket
25:29 - look good to me okay so I'm gonna we're
25:32 - gonna see sue I know you use a lot of
25:34 - canvas and you make a lot of shapes in
25:35 - campus um but for SPG today I wanted to
25:39 - talk about like SVG paths there's like
25:42 - so much room up there that can't reach
25:44 - um and so what that looks like is
25:48 - actually should I start from SVG and
25:50 - what SVG is yes sure so I'm you probably
25:53 - cover a lot of canvas oh my writing is
25:56 - so it's okay it's it's much bigger
25:58 - people write a little bit bigger I would
26:00 - say I'm on it it's this is a tiny little
26:02 - monitor that's not that people are
26:05 - seeing im sue with canvas right bigger
26:08 - um thank you so with canvas I'm it is
26:14 - one Dom element um and the way you draw
26:19 - to it is that you literally it's
26:21 - literally drawing pixels on the canvas
26:23 - and you will say like draw a circle or
26:26 - like fill right or like you have dark or
26:29 - something like that and it's just
26:31 - drawing and filling pixels um and with
26:34 - SVG SVG elements are actually Dom
26:38 - elements so for each individual SVG
26:40 - element like if we want to draw a circle
26:42 - it's a circle element if we want to draw
26:44 - a rectangle it's a rectangle element I'm
26:46 - and so on and so forth
26:48 - so I'm the way I like to think about it
26:51 - is canvas it's kind of like Photoshop
26:53 - I'm an SVG is like illustrator so um
26:58 - today I just want to cover SVG paths
27:01 - because I think SVG paths are extremely
27:03 - powerful and if you just master it you
27:05 - can like create any shapes that you want
27:07 - so for those flowers we're going to use
27:11 - SVG path to create individual petals and
27:15 - so one one point of reference for this
27:16 - is when I've done things in processing
27:18 - it's also bitmapped images but
27:21 - processing has a PDF renderer where I
27:23 - can save out those stuff I'm drawing as
27:26 - oh oh that's one thing that I've done
27:29 - from time to time and then you can blow
27:30 - something up much higher resolution and
27:32 - SVG stands for scalable vector graphics
27:35 - yeah right an illustrator if you draw in
27:38 - Illustrator and you're super familiar
27:39 - with illustrator that exports the SVG to
27:42 - and vice versa you can import SVG into
27:44 - illustrator and so the for path SVG path
27:49 - looks at the base it looks like this
27:52 - oh we know no sorry I it looks like huh
27:58 - and you want to the one thing you need
28:03 - is this attribute called D and this is
28:06 - where you put in your path string and
28:09 - what I mean by a path string is that
28:12 - there's a series of commands that you
28:14 - can use and today I just want to talk
28:15 - about em now and see and they stand for
28:20 - move to line - well your handwriting is
28:26 - so much better than mine really yes - oh
28:31 - you know one of the things I was like
28:34 - kinda excited but kind of like
28:35 - apprehensive about it's like your level
28:37 - of energy on your videos it's like so
28:39 - intense and I'm like I don't know if I'm
28:41 - gonna like be able to match it but at
28:43 - the same time that might be too much
28:44 - yeah I like Topher like both of us to be
28:47 - at that level it's okay I'm so yeah so
28:49 - the San Fran - line - Kurt - I'm in some
28:52 - move - is I'm probably the most straight
28:56 - forward which is I'm like translate in
28:59 - p5 I would assume translate is moving
29:02 - from one point to another the difference
29:05 - in X and a difference in Y or you're
29:06 - moving to a direct location yeah so move
29:08 - to a little bit different the way that I
29:10 - think about it is move - it's like if
29:12 - you take a pen or pencil and you drop
29:16 - that pen or pencil onto the XY point
29:18 - right that's how I think of move to line
29:22 - - is then draw a line from there to the
29:26 - next to where you're where you move to -
29:28 - then to the next x1 yes exactly so and
29:31 - the way I think about El line - is that
29:35 - it just says if when when you
29:37 - when you're I'm if your pen is on the
29:42 - paper draw a straight line to that point
29:45 - um and that means that L always needs to
29:50 - be chained with something before it
29:52 - because I'm like you can't draw a line
29:56 - if your pen isn't on the paper yet so
29:58 - you always need to start your path
29:59 - string with an M and then you can try
30:03 - and chain like MLL and whatever you want
30:06 - yeah okay and then curve to is I think
30:10 - the funnest one it has a little bit of a
30:12 - tricky like and syntax but once I
30:18 - explain it it will make a lot of sense
30:19 - and I just realized I need multiple
30:21 - different colors oh wait and that's is
30:24 - that something we have I'm sorry I
30:30 - forgot about this and I'm gonna try my
30:33 - best with just these are like a dotted
30:35 - line I knew Mike three four different
30:39 - colors so it's not we'll see okay see
30:42 - I'm okay soo alright this is Maya okay
30:47 - so I'm gonna call it px 1 px 2 these are
30:57 - the control points yeah so you know
30:59 - again people might not be familiar with
31:01 - with this but if they're a p5 user this
31:05 - sounds like it's just like the bezier
31:07 - curve function where you have two
31:10 - endpoints and two control points exactly
31:13 - so this is exactly the same maps to that
31:15 - idea yeah so this is basically um yeah
31:19 - so if you in canvas is exactly the same
31:22 - thing and so let me explain the syntax
31:26 - really and there's a really nice
31:29 - reference I we're writing this out
31:30 - there's a really nice reference in rune
31:33 - Manson's programming design systems book
31:35 - which has a whole page about what a
31:37 - Bezier curve is and has some interactive
31:39 - ways of playing with it I'll show to you
31:41 - later Fitz I'm so then I'm this is just
31:46 - like you say control point one control
31:48 - point two and end
31:50 - and so let's say for example we have you
31:53 - know a string a path string that says m
31:57 - 0 0 and then let's say we say C and
32:03 - can't let's start drawing it so this is
32:05 - yeah yeah 0 0 so this is the M so this
32:10 - is why I like to use different colors so
32:12 - it's like really visually clear what
32:15 - each one of them is and I like to think
32:18 - of it as like let's say I'm gonna end up
32:21 - at a hundred comma and zero and so we
32:28 - have zero zero and I think of it as I'm
32:30 - drawing I'm gonna draw a straight line
32:33 - to a hundred zero and then I'm I have
32:39 - these kind of like implicit anchor
32:42 - points and that then I can take and kind
32:46 - of like put it like drag it where I
32:48 - wherever I want and let's say I want to
32:51 - drag the anchor point to here and that's
32:54 - roughly I would say maybe 20 20
32:59 - maybe that's the anchor point is 20 20
33:02 - and then this anchor point maybe is 80
33:05 - 20 and so I'll write that in 2020 80 20
33:11 - and this path string would give me this
33:18 - curve right
33:19 - so basically exactly how it's it's
33:22 - called it's this curve to is a Bezier
33:24 - Bezier curve too and I'm so if if anyone
33:31 - works with illustrator that's basically
33:33 - an illustrator how you draw a curve is
33:36 - you start from a starting point you like
33:38 - make a line to your ending point and
33:41 - then you get two anchor points that you
33:42 - can drag around yeah so here's a really
33:44 - nice reference I'll just switch over to
33:45 - it for a second this is a reference here
33:48 - that's showing how Bezier curves are
33:50 - calculated and I think if I go down
33:53 - somewhere here I
33:55 - remember this nice way of interacting
33:57 - with this yes this one yeah this this is
34:02 - a little bit different but so I think
34:05 - this one is a cube a brick okay oh yeah
34:08 - sorry this is a quadratic this one yes
34:11 - so that one is a quadratic Bezier curve
34:13 - and this was a cubic the cubic and we're
34:16 - doing cubic so yeah and the reason why I
34:18 - like teaching the cubic Bezier curve is
34:21 - because I think it gives much more
34:23 - options than the quadratic one right
34:25 - um and so yeah so this is how to do an
34:29 - SVG path and so what I like to do here
34:32 - now is then ask you to draw a petal
34:36 - shape or design a petal shape and then
34:39 - kind of like figure out approximately
34:43 - where the points are and write this path
34:47 - string so design it here on the
34:49 - whiteboard not just tinker around yeah
34:51 - designing here first okay because I
34:53 - think it gives you like oh okay so maybe
34:55 - I'll use up here yeah yeah yeah okay so
34:59 - in other words a single petal so if I
35:01 - think about a flower like a single petal
35:04 - might look like this yes and UK I just
35:09 - went a little bit too high but so I'll
35:10 - cut it off a little and you can get
35:13 - creative well what's wrong with that
35:15 - what's of it so I could use two
35:18 - different curves yes so I would start
35:21 - here uh-huh and curve like up to here
35:23 - yes and then I would still be here and
35:26 - curve back down to here yes so I would
35:29 - do a first a move so I first need to get
35:32 - to this point can I just get it at that
35:33 - point zero-zero sure so I would do em
35:36 - mm-hmm zero zero yes and then I need two
35:42 - control points
35:43 - oh no no the M is just moved now I need
35:46 - curve - yeah curve - I need three pairs
35:48 - of XY z-- yes the first two being the
35:51 - control points right so and how is in p5
35:54 - hmm if I'm in a p5 canvas the Cartesian
35:58 - plane is such that zero zeros in the top
36:00 - left and it goes this way and Y goes is
36:02 - am I going positive and it's exactly the
36:05 - same
36:06 - so I would be if I want my first control
36:09 - point to be like over here yeah it would
36:11 - be negative pixels yes negative pixels
36:16 - yeah if I say like negative 10 negative
36:20 - 10
36:22 - yes and then I might want to go up here
36:25 - good this is not as creative as maybe I
36:28 - could be a Yankee then I could say
36:30 - negative 10 because I'm still the same X
36:33 - want me to go further up so I'm just
36:35 - saying like negative 40 do you want do
36:38 - you want uh do you race them yes I guess
36:41 - so
36:41 - it was afraid to a race so I'm gonna say
36:45 - negative 10 negative 40 and then the
36:50 - last would be the anchor point we know
36:53 - that's the last point the left yeah so
36:56 - those though these two of those are
36:58 - anchoring could I think of them as
37:00 - control points those control points good
37:02 - job point I think of this as an anchor
37:04 - but I don't think that's not the right
37:05 - terminology you know what I think we're
37:06 - just making a determine logic ma'am
37:08 - somebody in the chat is already telling
37:10 - us exactly what the terminology is
37:12 - supposed to accept for 30 seconds and so
37:18 - then this last point I want it to be
37:19 - back to zero
37:20 - yeah and negative 50 well I just
37:23 - considered this to be like a height of
37:26 - 50 pixels yes and then I can curve right
37:29 - back to down to here yes so this will be
37:31 - easier because I'm just gonna now go
37:33 - over ten and then down to negative forty
37:36 - then over ten and down to negative ten
37:39 - and then back to zero zero yes perfect
37:42 - so this is my code that I need to type
37:44 - into here yeah inside the observable
37:47 - notebook yes um do you want to just draw
37:50 - the two control points on the other side
37:52 - I mean this is not drawn to scale that's
37:55 - okay too
37:57 - now that we have this and let's go back
38:00 - to yeah so I'm gonna go back to I'm
38:02 - gonna put you this marker here one and
38:04 - then I'm gonna go back to here and then
38:08 - do I make a new cell mate and you cell
38:09 - and I'm am I not using d3 right now I'm
38:12 - just writing SVG stuff do it quickly
38:14 - I'm new so this one right now is just a
38:17 - cell so
38:18 - what we can do here is let's declare a
38:21 - variable and we're just it's gonna be
38:23 - global to this notebook and so let's
38:26 - just call this like pedals let you sweat
38:30 - No
38:30 - so it's global so those I just don't
38:33 - even know just just the variable name
38:35 - pedal yeah okay or petal shape or
38:38 - whatever you want to call petal path
38:39 - whatever you want to call it and usually
38:42 - you can either do it as a string or yeah
38:46 - I think stream might make sense just the
38:49 - path string that you yeah like this
38:51 - no no just just okay and that's going
38:55 - I'm usually like very good with my
38:57 - buttons the thing that's going right in
38:58 - here yes yes perfect okay so so I could
39:02 - say M zero comma zero control negative
39:11 - 40 zero just no no comma no space no
39:16 - delimiter just go right to the next
39:17 - thing you can put in I think I'm so like
39:20 - this would be I can do that I'm so you
39:22 - can also between each of I like to so oh
39:25 - wait no comma after the C oh yeah and
39:31 - then I like to put a place between here
39:33 - and then no comma here
39:35 - no come on yeah because is easier to
39:38 - read from I got it and so I'm like even
39:41 - like this could I do
39:42 - or that's bad no you like the SU SVG you
39:46 - will like read that fine it's very
39:48 - easygoing about this yeah so it's just
39:50 - easier for me to read it mmm and then
39:53 - close the string and then if you run the
39:57 - let's just look right I think that looks
39:59 - right and also see it there if that's
40:04 - easier
40:05 - oh that's right yeah okay I'm gonna run
40:07 - it yes perfect it just showed it to me
40:10 - again
40:11 - yes so this is that's showing me like
40:13 - what's in the memory right now yes okay
40:18 - so let's make another new cell and then
40:22 - let's just draw this so I think we
40:25 - should just be able to say HTML and then
40:28 - back ticks so kind of like how we do the
40:30 - MD
40:30 - like this is actually like I'm gonna put
40:33 - some HTML on the page
40:34 - yeah I think that's how we can do it
40:35 - I've never tried to do this and then and
40:38 - then you can close that close the back
40:41 - tick I mean but now I need to go in yes
40:43 - I think you can just do SVG in there I
40:46 - might be really wrong uh and then you
40:49 - can write HTML in there yeah and do like
40:51 - SVG and then I do path yeah and then you
40:55 - say equals petal path like this yeah I
40:58 - think I could be completely wrong but
41:02 - this is you know try like that yeah I
41:04 - think so let's see so I'm using this
41:06 - particular syntax because this is that
41:09 - new fancy way and like including a
41:15 - variable expression and so it's the same
41:17 - here okay yeah let's see if it oh yes um
41:20 - okay so um let's go inspect element and
41:23 - see if it drew the path or not inspect
41:25 - this yeah it's just a Dom element yeah
41:29 - so then if we open up maybe we can make
41:31 - it bigger for people ooh perfect
41:33 - so looks but only enough but I don't see
41:38 - any die not don't even specify a color
41:40 - or something like that
41:41 - so oh you know why is this M looks like
41:47 - the quotes are in there because I think
41:49 - you need to go back and put quotes
41:52 - around the back but there's another
41:55 - reason why it's not showing up and we'll
41:57 - talk about that after you do those like
42:00 - this yeah and then run again and there's
42:02 - gonna be the next reason why it's not
42:04 - showing up is because and I'll do wait
42:07 - Len okay let me try this okay so this is
42:10 - the zero zero of SVG and you are drawing
42:13 - a petal oh you are drawing a petal up
42:16 - here see you're not gonna see it so I
42:19 - need to start I'm like from over here so
42:22 - what we can do with SVG is SVG also has
42:26 - something called transform transform
42:28 - that's what translate yeah so we can
42:30 - after the D let's put in like a
42:32 - transform here oh no no like in like a
42:37 - different that's a different attribute
42:38 - oh you mean like this yeah is equal to
42:44 - quo to translate I have a keyboard issue
42:48 - I'm going to that they fixed this
42:52 - butterfly keyboard is a disaster
42:54 - giving okay sorry unrelated topic but I
42:59 - like seriously this keyboard is making
43:00 - me so crazy okay transfer I never
43:02 - upgrade them like you then you made a
43:05 - good decision I made a bad decision you
43:06 - still want to translate down because
43:10 - because you're translating basically
43:13 - you're translating over no I well you
43:16 - you what the why you still want to
43:17 - translate it down yet so do you want a
43:31 - few minutes no no that's good right I'm
43:34 - and I'm just gonna say I'm asking ya I
43:39 - mean no no this is good and the there's
43:44 - there's other attributes like fill and
43:46 - stroke that would set the all that so
43:48 - similar to how you draw on canvas its
43:50 - let their SVG attributes yeah sooo it's
43:53 - essentially a lot of the same
43:55 - functionality as canvas it will
43:57 - translate over really easily
43:59 - they just the interfaces on it okay I'm
44:02 - and suit another thing I'm just gonna
44:05 - say right now this this is okay right
44:07 - now but I like to set the width and
44:09 - height of the SVG as attributes or the
44:11 - width and height attributes because one
44:13 - of the co most common mistakes that
44:15 - people will you have when they first
44:18 - start with SVG is you can think of SVG
44:21 - as kind of like a window into the SVG
44:24 - world right so there's like things being
44:26 - rendered here and you're just getting a
44:28 - little viewport yeah and if your
44:30 - viewport is too small and like you know
44:32 - you've rendered your data like down here
44:34 - you won't ever see it and I've seen so
44:36 - many frustrated people and so if you do
44:39 - that it would be cut off right because
44:41 - now you're but oh no 25 math math it's
44:48 - hard yeah what we can do is we can like
44:52 - set another variable and just say that
44:55 - the size is 50 that like the side
44:57 - of the pedal is 50 and now you can go
44:59 - around like four later we can use that
45:02 - as a very mean set a variable up here so
45:04 - you can't you well you can't do multiple
45:07 - variables in the cell you have to have
45:09 - you have to do yourself new cell for the
45:12 - variable and then I would do like petal
45:13 - size
45:14 - yeah is 50 yeah and then you can move
45:18 - then you can use that later - like
45:20 - programmatically oh but I would want
45:22 - that to be in here right
45:23 - no no Oh cuz I would do that use a
45:26 - transform but like scale it Oh true like
45:29 - or if you yeah for the translate leader
45:31 - but these are heart the the path values
45:34 - are hard-coded that's right so if I
45:37 - wanted to suddenly make it bigger you
45:39 - would use a transform scale transform
45:41 - scale okay you got it
45:42 - so we'll get there okay got it okay so
45:44 - the next thing we want to do now that we
45:46 - have a petal is this is saving
45:48 - automatically yeah man automagically
45:50 - okay so if you want to go to or I can
45:55 - show it here okay so here you might
46:01 - notice I'm we have the petals oh and
46:03 - then I can I can really quickly run
46:05 - through these like so this one you know
46:07 - I drew the G I drew like a like a curve
46:11 - down to the bottom and then I think I
46:14 - have maybe another oh yeah I drew a
46:17 - curve down to the bottom by like that
46:18 - anchor point I like did at the same line
46:21 - as like the bottom one and then I drew
46:23 - another curve the PG I drew three curves
46:27 - the pg-13 was fun cuz that was one curve
46:30 - one line one line one curve yeah I'm so
46:34 - like once you know these plots you can
46:36 - decode how these yeah like sheeps are
46:38 - made my thing is usually I just do the
46:40 - simplest basic version without a lot of
46:42 - flair and the audience you will be
46:45 - amazed what they can make
46:46 - so take Shirley's work as inspiration
46:49 - for how you might design your petal if
46:51 - you have to be following a lot I'm very
46:53 - happy with ya
46:54 - so the next thing we want to do so this
46:57 - is where we're actually going to get
46:59 - into d3 and and one of the things that
47:03 - we saw on your laptop's are on there I
47:04 - want to explain some things so
47:10 - d3 is this sort of big library that has
47:15 - a lot of functionality and but what's
47:19 - what it's really good for is translating
47:22 - raw data into what you need for the
47:24 - browser to render so today and I'm just
47:29 - gonna well so there's a lot of like
47:30 - things that it makes easy for us like
47:33 - calculating positions of I'm like no
47:37 - downlink graphs and I'm you know giving
47:41 - us different like XY positions for oh
47:47 - not this one
47:48 - oh I'm sorry for like drawing trees so
47:59 - like it will calculate XY positions and
48:02 - like SVG paths for all of that um but
48:05 - today what we want to do is use
48:08 - something called scales c3 scales and
48:11 - and this is something I use in basically
48:13 - like every one of my projects I'm and so
48:16 - what scales does is I'm essentially
48:21 - translate one thing one thing into
48:27 - another I think maybe and p5 you have
48:29 - like dot map I think it map is a
48:32 - function that will take a value with a
48:34 - given range and Reap and map it to a new
48:37 - range yeah yeah exactly that's what
48:39 - scales do for d3 so like just different
48:41 - vocabulary yes and so for example we
48:45 - have like linear scales that do like you
48:48 - know linear leaf and and the map
48:51 - function just does it as like a linear
48:53 - scale ok so there's not a way there's
48:55 - obviously other ways you can think of a
48:58 - range and map the value but so it sounds
49:00 - like d3 has a lot of yeah capabilities
49:02 - in terms of how you different kinds of
49:05 - scales like logarithmic scale and that
49:06 - type of thing yeah so we have like power
49:08 - long time like again like map as input
49:12 - like if you have like a date like a
49:14 - JavaScript date object because a lot of
49:16 - times in data you have like dates and
49:18 - years and you want to like map that to
49:20 - like the exposition you
49:22 - use scale time and one of my personal
49:25 - favorites is quantized like which is
49:28 - basically you give it a continuous input
49:32 - and then you give it a discrete output
49:36 - and when you um and then when you pass
49:40 - in your numbers it would map to so like
49:45 - I know this is very much like the
49:47 - machine learning examples I've been
49:49 - doing what to mean you'd put in map to a
49:50 - classification but in this case you know
49:53 - need machine learning is it's just
49:54 - really the literal range yeah divide it
49:57 - up yeah yes so the reason why I'm
49:59 - talking about this is because now I want
50:02 - us to do some mapping from the data I'm
50:07 - to each of these kind of attributes so I
50:11 - think what we want to do is let's do a
50:15 - mapping for the number of petals and so
50:18 - you can imagine it's from the number of
50:21 - int B votes to the number of petals and
50:26 - so that's the scale quantized from
50:28 - earlier because it's a continuous
50:31 - continuous input but then you you you
50:35 - can't have like you know five point five
50:37 - petals right like you want five petals
50:39 - or six petals or seven so I have like
50:42 - five to I think nine or ten okay and
50:46 - then we'll use a scale linear to do from
50:50 - the IMDb rateing
50:51 - to the side to the scale it's like just
50:56 - work with number of petals and size of
50:58 - the flower yeah those two things and so
51:01 - let's actually just get into the
51:06 - observable and I just realized that
51:10 - maybe I also want to give you the data
51:14 - okay so should I switch to my laptop or
51:18 - so on yours thank you wait let me let me
51:24 - let me pull up the date up first so the
51:26 - data should be on my film flowers baby
51:30 - so on their film flowers I have movies
51:33 - dot JSON okay
51:35 - so I can should I pull that up here yeah
51:37 - actually that might be the easier thing
51:38 - to do and then switch to here now we're
51:42 - back to this laptop and I'm going to
51:44 - github.com slash what's your sxyw you
51:49 - okay and then i'm and then you can do
51:52 - slash you're not following me github is
52:00 - that i don't know i don't notice that
52:04 - there's like a follow you're probably
52:09 - the only person now that i follow up get
52:13 - flowers yeah so also it seems like we're
52:18 - about to get the data which is kind of
52:20 - like a new stage so we can take like i
52:22 - often like to take a break in the middle
52:23 - just for a couple minutes okay so maybe
52:25 - now is a good time to do that as as i
52:27 - get the data okay okay so do I need to
52:33 - how how is this gonna come into
52:36 - observable because I also could take a
52:37 - break and let people do that okay so
52:39 - there's two ways
52:40 - um so let me let me just looks good yeah
52:43 - raw so that we can get to the actual URL
52:45 - okay there's two ways um if you want to
52:49 - copy that I'm and then I'm gonna show
52:51 - you the first way because I think it's
52:53 - the closest to how we actually will
52:55 - develop okay we're gonna we're gonna get
52:57 - the data into observable and then
52:59 - everyone who's watching if you're
53:01 - following along hopefully you have your
53:03 - own pedal design or an exact replica of
53:05 - my pedal design and then the data into
53:08 - observable and we'll take a short break
53:10 - to make sure everybody has that answer
53:11 - any questions and come back and finish
53:13 - that problem okay okay so I'm what we
53:16 - want to do is two steps I'm first let's
53:19 - go down here make a new cell and say D 3
53:23 - is equal to require D 3 so you can use
53:26 - require and do I put that in quotes yeah
53:29 - so this is interesting because if with a
53:33 - p5 web editor that it works with just
53:37 - referencing other JavaScript libraries
53:39 - through a script tag in the HTML page
53:41 - whereas if you're working in node or if
53:43 - you're even using the JavaScript modules
53:46 - which is the thing that I don't really
53:47 - know about
53:48 - that's what they'll learn you can say
53:51 - there's like the import syntax to but
53:53 - that require I use commonly and have
53:56 - used in video tutorials when I'm working
53:58 - with nodejs so if I want to use a
54:00 - JavaScript package and node I'll require
54:02 - it and so I guess somehow d3 underneath
54:06 - the hood so this is and this makes sense
54:11 - in this sort of like notebook style
54:13 - because in Python you just say like
54:14 - import numpy oh yeah so this is the
54:16 - equivalent of that yeah okay so I would
54:17 - then I would run this yes and then you
54:19 - get that oh and look I can like debug
54:22 - right here like I have a little mini
54:24 - JavaScript cop I have the entire d3
54:26 - library specification right here in an
54:28 - object well yes
54:30 - okay and do I need a new cell yes please
54:33 - and then you can say data is equal to
54:41 - getting a new computer just for the
54:43 - keyboard if you can believe that we are
54:44 - you gonna get a new computer that's the
54:46 - old Mac no they're just really this is
54:49 - the not a sponsor although Apple if you
54:51 - want to send me a laptop I'll take it
54:53 - but the new 16 inch pro they've
54:57 - redesigned the keyboard and the reviews
55:00 - I've read online seem to say like it's a
55:02 - much nicer keyboard and it actually has
55:03 - an escape button I mean there is a thing
55:09 - called an external keyboard I have I do
55:10 - use that often when I'm sitting at my
55:12 - desk I'll just use an external keyboard
55:13 - but it's too much stuff in here back to
55:16 - our scheduled programming data equals
55:18 - yes t3 dot JSON so that's like loading
55:22 - JSON file I could put a URL in there yes
55:26 - just do this perfect and then can I kind
55:30 - of look at what's in there yeah you can
55:32 - you can open it oh it's there yeah isn't
55:35 - it awesome that is so cool
55:37 - so what I love about this it just sort
55:39 - of like a little bit of an issue but
55:43 - nobody can see that doesn't show up now
55:45 - I'm here silly you have that very
55:47 - embarrassing so what I love about this
55:51 - is having this sort of like a console
55:55 - debugging built right in which I imagine
55:57 - when you're working with data and the
55:59 - step by step process is
56:00 - super useful okay so we're gonna take
56:02 - just like we're not gonna sometimes like
56:03 - a 500 a very short break but because I
56:08 - also am very excited to tell you about
56:11 - some new things I learned about the
56:14 - sponsor of the coding train Linode
56:18 - recently so let me just pull this up
56:20 - over here so okay so we're making a
56:23 - project in d3 it observable but you said
56:26 - you just use observable for a
56:27 - prototyping I only talked at some point
56:30 - you would finish the project and you
56:32 - need to put it somewhere there's a
56:33 - variety of different ways you can host a
56:35 - website and people watching this know
56:36 - how to do that but one way is using a
56:38 - virtual server so lonoa provides virtual
56:40 - servers that make it easy and affordable
56:42 - to host your own app site project or
56:44 - anything else you might you may want to
56:47 - want to live on the Internet so a lot of
56:49 - things in my tutorials I make note
56:50 - applications I'm this little machine
56:52 - learning stuff the Twitter bot is kind
56:54 - of like the obvious one where you have
56:55 - to deploy that to a server somewhere and
56:58 - all these kind of projects you can use
57:00 - with the node server they also have to
57:02 - like one-click thing which is very
57:04 - convenient you know because if you
57:05 - wouldn't like install WordPress for
57:06 - example if ever tried to install
57:08 - WordPress with like a console it's crazy
57:10 - you just go you log on you click it you
57:11 - have WordPress installed you have game
57:14 - servers they have 24/7 customer support
57:16 - but what I'm excited to tell you about
57:18 - which I'm yet to experiment with what
57:20 - I'm planning to is they also have GPU
57:23 - instances so I have some tutorials
57:25 - around training a machine learning model
57:27 - in particular using tensorflow
57:29 - to train this thing called a car RNN
57:32 - model which is like a text generator so
57:34 - if you have like your favorite poet you
57:36 - have a favorite poet so but if you if
57:44 - you had some text that you're excited to
57:46 - like feed into a machine learning system
57:47 - I have a tutorial which which shows you
57:50 - how to do that on a server and so what
57:53 - you bet you do but you need is a GPU and
57:55 - sola node has GPU instances they have a
57:57 - Quadro r-tx 6000 which is like a very
58:01 - exciting sounding name for a GPU so you
58:04 - can do machine learning rate tracing
58:06 - another AI so if you're interested in
58:08 - trying the node all you need to do is
58:11 - look at the link in the description of
58:13 - this
58:13 - video will take you right Tula no calm
58:15 - slash coding train but also you can just
58:17 - use the coupon code entrain 20 that's
58:20 - one word coding train to zero because
58:23 - you'll get twenty dollars in free credit
58:24 - which you can use to deploy your site so
58:26 - all I'm gonna I'm going to look back
58:29 - through all my video tutorials and see
58:31 - what kind of like websites I've made and
58:32 - certifications and think about which of
58:34 - those I can try on node ok so sometimes
58:40 - what I'll do is just also give ourselves
58:42 - a minute here just in case and I often
58:45 - do to break guys sort of like we could
58:47 - just keep going but I'm gonna so but let
58:50 - me come back to the screen here and so
58:55 - there's two things you can do now while
58:57 - we're taking a break
58:58 - one is sign up for the node that helps
59:02 - support the work that I do here on the
59:03 - coding tray lets them know that you
59:04 - found out about it for me as well as
59:07 - make sure you've got your code set up
59:09 - here so I'm gonna just mute us for a
59:11 - second yes I want to just say I'm I
59:15 - threw that there's a high from Alice Amy
59:18 - Catherine cam emoji that's my studio
59:21 - office in this up
59:22 - hi okay so I'm just gonna like make sure
59:30 - we we're all set for the next stage I'm
59:34 - enough where I'm gonna like take a
59:35 - minute also to look at the chat so if
59:36 - you're struggling to follow along ask a
59:39 - question in the chat then we could kind
59:41 - of answer and we'll just going to take a
59:43 - very short I'm gonna say two-minute
59:45 - break
59:57 - [Music]
60:05 - [Music]
60:22 - [Music]
60:29 - [Music]
61:02 - [Music]
61:07 - [Music]
61:17 - [Music]
61:43 - [Music]
61:44 - all right the mic is back I'm like we're
61:50 - back so what it's the Big Finish Burrell
61:52 - is now discovering is that the
61:55 - ventilation of this room is terrible
61:57 - yeah so that's actually one of the main
61:58 - reasons for taking a break open the door
62:00 - and all the cool air so I'm sorry
62:05 - they'll hate to tell you about that
62:06 - before you were like I'm gonna wear this
62:07 - wonderful sweater all this like
62:14 - expensive fancy equipment
62:15 - [Music]
62:17 - okay so I think we're air we've got
62:20 - about 45 minutes left of this session so
62:24 - we're gonna keep pushing through and try
62:27 - to see if we can take some next steps to
62:29 - pull stuff from the data and then put it
62:32 - into this s yes yeah okay I'm so I think
62:36 - our goal for today is drawing one flower
62:39 - with data and if and there's stress
62:41 - school is drawing all of them with data
62:43 - okay okay I'm okay I usually like to
62:45 - give it exercise to the viewers to do
62:47 - after and then they could share stuff on
62:49 - Twitter or if I make a page on the kodi
62:52 - train website there's a way for people
62:53 - to share their projects so what we'll do
62:55 - well we can also give up prompt whatever
62:57 - we don't get to we can ask ok yours to
62:59 - complete and you'll be amazed at what
63:00 - they'll do yeah well actually I'm
63:02 - actually now thinking it might be even
63:04 - easier to potentially what we'll see
63:07 - what see ok I'm ok so the next thing
63:10 - we're gonna do is yeah a new cell and by
63:13 - the way you can like reorder reorder and
63:15 - give these cells and they'll be fine um
63:17 - and so now we're gonna start with a
63:20 - curly brace like ah yeah and then we can
63:24 - close their curly brace and then
63:27 - everything in these curly braces and
63:29 - observable will be executed as
63:32 - JavaScript oh oh because I'm I'm not
63:36 - doing this is this is not JavaScript
63:39 - like the pedal path up you mean it is
63:41 - but it's sorry
63:42 - yes I should read that everything in
63:46 - there will be that you can do multi-line
63:48 - JavaScript so this is not a d3 thing
63:53 - we're doing right now yeah and I could
63:56 - put like character turns in there and
63:58 - then I can just type my JavaScript in
64:00 - yeah I'm and so let's say there's this
64:03 - is a like one thing that's gonna be
64:05 - different from if you do like an
64:07 - index.html and because in index.html you
64:12 - were just like create and a just like
64:14 - SVG elements yes and but here what we're
64:16 - gonna do is I think we're gonna call it
64:19 - cost
64:20 - I'm SVG really no one should be like me
64:27 - it's good to use Const people should use
64:29 - just like no it's I have a hang-up let's
64:34 - use Const that's good bar no no VAR bar
64:37 - is worse okay I'm cons just the correct
64:41 - thing to use okay DOM and all caps dot
64:45 - SVG uh-huh and open paren you should
64:50 - always just be telling me what I am and
64:55 - you want to pass in that width I'm and
64:58 - so how about we use the pedal size we
65:00 - had early so like use the variable yeah
65:02 - and so it will go in there okay comma
65:05 - and then let's say petal size again the
65:07 - width and height um well actually so
65:10 - petal size is just fifty and you can
65:11 - imagine if we rotate them all around oh
65:14 - then we will probably want double that
65:16 - for both yeah so this we're gonna try
65:20 - just drawing one petal for now okay I'm
65:23 - sorry one flower field we're now on two
65:25 - flowers good I'm and then let's do our
65:29 - scales so the first thing we wanted was
65:33 - a scale linear um to do translate I'm
65:38 - the IMDb rateing - sighs great so if you
65:44 - open up this data uh-huh and let's open
65:47 - up one of the objects some of these
65:49 - names are great days of thunder mm I
65:52 - just realized yeah
65:55 - I don't know that's embarrassing or just
65:59 - I am but we need to do some really easy
66:04 - data cleaning like we and like they're
66:07 - all in strings we want these numbers as
66:09 - numbers but that's gonna be fine I'm I'm
66:13 - so yeah so I think what we need is IMDb
66:16 - rateing and i'm DB votes for for this
66:18 - book so let's go down below and i'm
66:21 - let's and it's in a variable called data
66:26 - yes so what we want to do is let's go
66:29 - let's make up a scaling a linear it's
66:32 - call it cost us let's call it a size
66:36 - scale okay is equal to d 3 dot scale
66:40 - linear like that and then like open
66:49 - paren close paren i'm and then for this
66:52 - we need a domain and the range and so
66:56 - for us to get the domain we need to get
66:59 - that from the data but we could also
67:01 - like kind of make it up if we wanted to
67:03 - I mean I'm not I'm just saying like like
67:07 - we know the ratings are between 0 and 10
67:09 - aren't they no bad idea okay okay I just
67:17 - mean we're prototyping we're
67:19 - experimenting we're playing around here
67:20 - like good okay I want it I want to give
67:24 - people good habits okay good habits
67:26 - everybody don't I have lots of bad
67:28 - habits we're gonna do is we're gonna use
67:31 - something called a d3 scale no no sorry
67:36 - d3 - array I'm and in d3 - array we have
67:43 - something called extent and what that
67:45 - does is we pass in I'm in array and then
67:50 - oh and it gives you the minimum maximum
67:53 - back yeah okay that's good we should do
67:56 - that so I'm gonna say
68:04 - so what I could I do something like
68:07 - min/max equals because it's never this
68:12 - bad I said instead and then the array on
68:16 - passing is just data yeah but do I need
68:18 - to give it like what field I'm looking
68:19 - for so in and then comma and then you're
68:22 - gonna pass it a function that's the
68:24 - iterate I'm sorry it's a accessor so
68:27 - pass in a function I would you say can I
68:30 - do some crazy magic like this yeah you
68:33 - can't okay and but you want to give it
68:35 - the su and what so but you want to pass
68:39 - as input the d like like the individual
68:42 - element element okay like i record what
68:45 - do you use so we use we say D oh D oh
68:50 - okay yeah and then we say and then you
68:53 - say yeah yeah perfect
68:55 - so I want the extent the minimum and
68:58 - maximum in the array and I'm using a
69:03 - function to say which element of the
69:04 - array so this is like what would you
69:07 - normally name this I said min max but
69:09 - like we call this like extent just
69:11 - seemed like raiding min Max or something
69:15 - basically yeah and then I would do the
69:18 - same thing for what was the other
69:19 - variable we want actually just do one
69:21 - variable right now knowing you're both
69:24 - so what was the other ones yeah so votes
69:28 - min Max and I would just say I am deeps
69:31 - IMDB votes yeah okay okay and then so
69:37 - then inside skill we will pass in that
69:40 - rating min max but we need them in oh it
69:43 - just it it's a no it's an array with the
69:47 - next zero is the min do you want to just
69:49 - a console on oh you can console log and
69:52 - console log like I just type console
69:54 - long and then but then you just have to
69:56 - open up your oh it doesn't show up some
69:59 - magic way no it just console logs in
70:03 - okay yeah oh yeah undefined
70:06 - oh oh oh wait do you want to go back to
70:10 - yeah open up Jurassic Park we can do
70:12 - Jurassic Park
70:14 - let's say oh because of it it's a string
70:17 - because it's a string I need to convert
70:19 - it to a number that's probably yes I
70:22 - like you a plus like parse or do you do
70:25 - plus what's plus so plus is a shorthand
70:28 - for parse int oh really like in in all
70:32 - the world
70:33 - no no I didn't I have to run it I didn't
70:35 - oh and you didn't run it so what are we
70:38 - doing no but I didn't run it again we
70:41 - did what are we doing wrong let's see so
70:46 - how about tonight the chat is very good
70:55 - at telling me what we do wrong while you
70:56 - look okay it's an object not an array it
71:01 - is Oh stupid me okay so we have to turn
71:04 - that into an array Thank You chat so
71:06 - then what we want to do here is say we
71:09 - can say thought then and then we can say
71:13 - let's just get the values oh I use low -
71:16 - sorry I'm so used to using low - I'm
71:18 - gonna go grab low - okay then I'll
71:23 - explain it I would like take it over
71:24 - your computer I'm sorry I'm sorry
71:29 - yeah so this is low - I'm and it's just
71:33 - really easy yeah it's like a library
71:35 - that lets you do stuff with the
71:37 - underscore isn't that called underscore
71:39 - used to the first iteration what's
71:41 - called underscore - is underscore alone
71:43 - - is an extension under squash day okay
71:46 - mmm you're sure is great but wait wait
71:49 - you can require it below you're gonna
71:51 - use it yeah you can require things
71:53 - anywhere so that's why you can so now
71:56 - this made it an array yeah cuz you lo
71:59 - dashed it yes and then now if I run this
72:02 - then this should work
72:04 - and there we go okay got it
72:07 - okay so but the plus is like parsing it
72:10 - so what goes in scale linearly I have to
72:13 - do them individually because well scale
72:16 - linear if you want to look at UM the
72:18 - scale than your and then sir we also
72:22 - undo we want number of petals yes
72:24 - so like petal scale or no pedal number
72:26 - scale
72:27 - yeah I call it numb pedal scare no pedal
72:30 - scale yeah and then I want the votes min
72:33 - max yes and you want scale quantize
72:38 - because you want to go from linear
72:41 - I'm sorry continuous to discrete and so
72:44 - right now what you're doing so let me
72:46 - just pick something which is sorry I'm
72:49 - just for like something like just so we
72:52 - know and what they are I like to just
72:56 - put them into domain so we know that
72:58 - this is the domain oh so okay sorry you
73:01 - explained it I'll type it and domain so
73:04 - d3 has like its own set of vocabulary
73:06 - range so domain is you can think of it
73:09 - as input I also would like to think of
73:11 - it as the raw data and the output they
73:15 - call range so dot range it's like kind
73:18 - of like that makes okay and so after
73:21 - domain let's do a dot range and let's
73:26 - say the scale this is what I'm mapping
73:28 - it to yes so I know my size was like
73:32 - this is a size that's the size of 50 yes
73:36 - so I would say that's like the biggest
73:37 - it would be I could do like 25 to 75 or
73:39 - something that that's the that's a great
73:41 - intuition um but because we're going to
73:44 - use the size scale we're going to use
73:46 - range and form scale yeah so we probably
73:48 - want a range of 0 to 100 where it's
73:51 - probably 0.25 or something okay I'm and
73:56 - the syntax is we have to pass it in as
73:59 - an array oh so like this and then this
74:04 - range is discrete yes the options so I
74:07 - could have like 5 petals 7 petals or 10
74:09 - petals or something yeah yeah yeah is
74:11 - that like a weird person I just put it
74:14 - in there I mean you can do whatever you
74:16 - want
74:16 - okay all right seven petals are my
74:20 - personal favorite well you said 10 sound
74:27 - effects is the buzzer for like if you're
74:31 - I don't know okay
74:32 - usually I'm just here by myself we can't
74:36 - fest some more
74:37 - are we getting distracted well I like
74:39 - this one
74:42 - I'm but the way that you can think of it
74:45 - is I'm now I don't know what I'm saying
74:51 - [Music]
74:56 - what was I saying yeah we we were good
74:58 - we have scale linear we have scale
75:01 - quantize yes okay so now that we have
75:04 - the scales
75:05 - let's go calculate I'm what we're gonna
75:08 - draw right and so let's call it cost
75:13 - let's see constant flowers let's just go
75:16 - and make all the flowers all the flowers
75:17 - cuz we could make one and then we could
75:19 - just change the index from the array and
75:22 - then we see different ones you let's
75:23 - make them all all right yes I should say
75:26 - that this if anybody's watching who this
75:30 - is their first time coding this is
75:32 - pretty difficult I think in terms to
75:34 - follow roses there's a lot of Titanic
75:37 - terminology so that's one of the reasons
75:39 - why I enjoy p5 because it's it tries at
75:43 - least as best as can to give you this
75:45 - very like friendly starting point what's
75:47 - wonderful about this is like in one line
75:50 - of code we've kind of like parse you
75:53 - know it's like a Barrett Mount one line
75:55 - of code but very little bit of code we'd
75:56 - like parse this data file we're like
75:58 - getting min max we're scaling the range
76:00 - we have quantize Bob all that all these
76:02 - like really common set of things you
76:06 - would want to do when working with data
76:07 - and yeah I'm very succinct way but I
76:10 - could imagine for somebody who's new to
76:12 - this this could be hard to follow yeah
76:13 - it's a different way of thinking
76:14 - exactly but let's make the flower I'm
76:17 - you want to make one flower let's make
76:21 - it I don't know what does the chat have
76:23 - an opinion and the chat is gonna say
76:28 - make all the flowers let's make all the
76:29 - flowers let's let me call the flowers
76:31 - does that make you nervous it does well
76:34 - let's do it wait you know we have a half
76:35 - an hour okay let's just make one flower
76:37 - let's make one flower and see what
76:39 - happens okay let's just yeah flower is
76:41 - equal to okay and then let's create in
76:44 - the object like like a blank object the
76:47 - object literal okay yeah I and I'm so to
76:52 - create the flower
76:54 - we need um let's see
76:58 - let's just let's just decide that we're
77:00 - gonna there's the data has 135 things in
77:03 - it should we just go with Days of
77:05 - Thunder
77:06 - dick 0 I mean we could be here for a
77:11 - very long time trying to pick what
77:12 - movies do that sure where's gum let's do
77:14 - four it's got more stuff there's also
77:17 - Pocahontas Gump is right here no yeah I
77:20 - want to look through all okay all right
77:22 - oh wait here this is I feel like
77:29 - whichever one I pick there's gonna
77:30 - there's gonna be at something I really
77:32 - do like this movie wall-e to be on sir
77:34 - you should do wall-e okay but I feel
77:36 - like that's I liked I like to be
77:37 - family-friendly when all possible I
77:39 - think there's no risk here with Wally
77:40 - it's rated G yes index 92 okay okay do
77:46 - you want to just like do like a Const
77:49 - index or something just so you don't
77:50 - have yes okay I got wall-e equals 92 I
77:55 - just said I just realized something
77:56 - which is I was like do you want to
77:58 - create a variable so you don't have to
77:59 - write 292 over and over and now you have
78:01 - to write Wally over yeah but we get to
78:03 - type Wally I wish I had like a Wally
78:05 - like sounder baby something laid out
78:07 - okay so let's think about what we need
78:09 - to draw this flower um do you want to
78:12 - take a look at my flowers again um okay
78:16 - so to draw this flower and we need
78:20 - actually we might well am I gonna can I
78:23 - use oh I gotta like minimize this here
78:26 - can I use this pedal path yeah so let's
78:30 - do this
78:31 - I'm like I don't I just do like a little
78:33 - loop and like just keep rotating it
78:35 - around to draw the flower yes
78:38 - so I'm but you need data okay okay so
78:42 - I'm gonna draw it but we're not gonna
78:43 - draw it we're gonna draw it even with
78:45 - the data right now yes we're gonna draw
78:47 - with the data right now um and so let's
78:50 - do this let's um figure out the number
78:54 - of petals we need so let's go below
78:56 - Wally and say um yeah num vettel's
79:02 - and num petal scale is a function that
79:05 - we can
79:08 - none petal scale oh yeah there it is I
79:10 - was looking for that and then we can
79:13 - pass in the data data index Molly yeah
79:20 - and it's called a votes I am DB no I
79:23 - need those votes yeah and then we want
79:26 - to plus it we want to do a plus
79:28 - beforehand so that it becomes it's not a
79:31 - thing you can do in JavaScript like
79:33 - anywhere I think this is a thing if you
79:36 - work with a lot of data like cleaning
79:38 - data I like to type of car siient would
79:40 - you like to know no I want the plus here
79:42 - okay and then I just passed that in yeah
79:45 - okay great and then and then I'm gonna
79:47 - do the size right Jeff sighs I mean I
79:52 - could call this pedal size sure and
79:54 - that's going to be the size scale and
79:57 - then the rating yes yes um you already
80:01 - have something called pedal certain skin
80:03 - size above pea-sized at all pet size
80:08 - sure it's your bar variable naming is
80:15 - not my strong suit
80:16 - I don't know if anybody is that good on
80:19 - it um okay so now we have do you want to
80:21 - console.log and both of those or do you
80:24 - you're like I don't
80:25 - well it's keep we're good okay I feel
80:28 - confident okay soon normally I would
80:30 - it's good practice console.log the
80:32 - reason why I'm sort of avoiding it is
80:33 - kind of have this like very small you
80:35 - know I don't I guess like I guess I
80:37 - could console I just feel like I'm not
80:39 - sure yeah it's great when something goes
80:42 - wrong
80:43 - well console.log okay super for the pet
80:46 - for the flower let's I just put in the
80:49 - size let's just you know one of the
80:52 - things we want like Oh should I do that
80:54 - object structuring thing you mean where
80:56 - I just do this yeah sure I'm wait we not
81:01 - yet for the numpad else oh okay so the
81:02 - way that we want to think about the
81:04 - numpad else is and that that's purely a
81:07 - number right that is about me five seven
81:09 - or eleven use the loop and yes yes and
81:14 - so what we want to do is we want to
81:17 - create an object within this
81:19 - object okay and we want to create so
81:25 - let's kind of yeah go and then say let's
81:29 - call it pedals okay I think I see where
81:33 - you're going
81:33 - yeah and then there is a function and
81:36 - underscore called x or low - so if you
81:39 - do underscore x and then you pass in num
81:43 - paddles this is crazy and we need to
81:49 - know and then you have a and then you
81:52 - pass in a function after the known
81:54 - pedals and the input you get is I so the
81:59 - index so what's happening here is
82:02 - loading this low - Tata what it does is
82:05 - it iterates the number of times so let's
82:10 - see num pad else is fine it's just like
82:12 - a for loop with I yeah okay okay thank
82:15 - you yes thank you hmm and so what I want
82:19 - to do there is a return another object I
82:22 - don't have to say return now because no
82:24 - well if you want to create an object you
82:27 - you need to do their curly braces and
82:29 - then return curly braces and then but
82:35 - you need to wrap that in curly Oh for
82:38 - the one if it's just one line of code
82:40 - I don't like okay let's let me be
82:43 - long-winded about it and then we'll sort
82:45 - of see what arrow syntax we exactly need
82:47 - but yes I can do this I'm and then in
82:50 - here what we want is the rotation your
82:56 - petal got it so I'm going to its that is
83:01 - in radians or degrees basically an SVG
83:10 - is degrees there so like in other words
83:16 - I'm gonna say uh I divided by how many
83:19 - total petals do I have num petals 360
83:24 - times I like this you mean yeah
83:28 - [Music]
83:31 - that's but this is just returning of
83:33 - value wait no no no wait is that right
83:37 - is that well because yes yes yes yes yes
83:42 - yes you're right yes I'm well I wanted
83:45 - to return an object because oh you mean
83:48 - I just but so I put like angle agrees or
83:51 - whatever you want because I also want to
83:54 - return the petal path got it and I'll
83:58 - explain why I'm and you mean this thing
84:02 - your your petal path yeah and the reason
84:06 - for it is once we go and do all of the
84:09 - flowers I was thinking that we can I was
84:11 - thinking that we'll go and do like three
84:14 - other petal paths so that your flowers
84:18 - can look different
84:19 - got it I'm pretty sure that I can skip
84:22 - the return because this is just an
84:25 - object literal it's one line of code
84:27 - it'll get returned before it doesn't
84:32 - work for you know but maybe won't work
84:34 - for you we'll find out yeah okay so now
84:38 - do you want to run that oh yeah let's
84:40 - splits console.log flower I definitely
84:42 - have to come to like this and then what
84:45 - I'm gonna do just want to console
84:47 - logging actually well so so I think if I
84:50 - do this clear the console and this is
84:52 - what I'm running mm-hmm so there's
84:54 - nothing in that array so that's a
84:59 - mistake right there should be stuff in
85:00 - there there should be so what did I do
85:02 - wrong so let's let's also console.log
85:05 - known petals to make sure that we do
85:07 - right I have to copy paste everything so
85:12 - that I don't have to type if we did
85:15 - oh it's undefined ah okay so something
85:19 - went wrong with numb petals non petal
85:25 - scale is this way of quantizing the
85:28 - range actually correct yeah it's at sea
85:37 - I think they're talking about something
85:39 - else I think they're talking about the
85:41 - yeah okay um scale quantized let's find
85:48 - scale quantize Shirley's looking up
85:54 - something in the documentation which in
85:55 - theory I could show you know we're right
85:57 - we're right look range 1 to 4 so that's
86:01 - right okay so hold on let's right now
86:03 - our issue is not this our issue is just
86:07 - number when we run this we get undefined
86:11 - at numpad yes so let's go and let's log
86:16 - plus data Wally yeah and plus data Wally
86:20 - I'm de bruit loads okay yes so let me
86:24 - say to console logs we're gonna look at
86:29 - plus data Wally and we're gonna look at
86:33 - if you do a comma in the same console
86:36 - log it will sorry no you're absolutely
86:41 - right man not a number hold on oh it's
86:45 - running it automatically for me okay we
86:47 - got this and then I am it's got a comma
86:53 - okay so we have to the plus won't work
86:58 - with the comma yes one thing that I've
87:07 - used is this I think this works
87:09 - oh yeah let's try a parse int no parse
87:16 - int will just go until the comma
87:18 - oh no but I didn't console.log oh oh
87:25 - it'll just go until the comma let's do
87:29 - it
87:30 - 705 ya ain't go so let's try I mean we
87:32 - could obviously number mmm what did I do
87:37 - it again I can't tell ya so so that's
87:40 - not so we do have to do we could just
87:41 - use parse in and it's okay Dana's kind
87:43 - of a little bit so how do I remove
87:48 - I do a string replace oh yeah just a
87:51 - replace and so I can just do replace any
87:55 - commas with nothing yeah so if this I
88:01 - run this I see that and now I can use
88:05 - plus again yeah so this and I probably
88:08 - should put that in a separate variable
88:09 - or something but I'm gonna just all
88:14 - right here let's see let's see what
88:18 - order don't do that you have to console
88:24 - like oh I have to come no I have console
88:26 - logging on pencils
88:27 - oh you are Oh cuz it went to the scale
88:30 - yeah yeah it it made a 10 because we
88:32 - quantized it ah it's not undefined it oh
88:35 - we know it's because in I'm DB votes we
88:38 - have to do the replace there so we
88:41 - should do it here
88:42 - yeah dot rib please right right right
88:47 - right right right right right so there's
88:49 - a definitely a more efficient way to do
88:51 - this at the source somehow probably but
88:52 - this will do yeah yeah we should we
88:54 - should have done it at the source we
88:57 - should have done the data cleaning out
88:58 - the source yeah but it's 10 makes sense
89:00 - it's a lot of votes you don't think it
89:03 - should be 10 no can we it still you're
89:09 - gonna have a hundred pedals okay I'm
89:12 - more satisfied with this answer okay
89:14 - great you're gonna have a hundred no I
89:15 - was I was giving it we're gonna give it
89:19 - some little divet are you only gonna
89:21 - have one pedal I'm just like okay 1215
89:32 - this is just a demonstration I'm sorry
89:37 - the beautiful creative minds of the
89:40 - viewers will design something okay okay
89:44 - so now I think we can go back to this
89:47 - yeah and we can take a look at our
89:49 - flower and we should see 15 define
89:53 - things yes now to see 15 under but at
89:57 - least we have fit so let's try return
90:00 - and
90:01 - you have to do the curly braces around
90:03 - those oh right okay let's try that
90:05 - interesting that that didn't work yeah I
90:08 - wish it weren't like that and then we've
90:12 - got yeah look at that
90:14 - well that's cool this is like the
90:16 - craziest kind of coding thing I've ever
90:18 - done I'm gonna know cuz I just like it's
90:22 - bothering me that it's wrapping the code
90:24 - but I'm gonna I'll live with that we can
90:26 - we can I can move more closer to you
90:28 - know the other way is the way you need
90:30 - to move oh it's fine it's not we're good
90:36 - we're good
90:37 - we've got our flour we have our data
90:39 - okay now comes the hard part and I
90:42 - should really call this movie index
90:44 - because we're gonna change it it's not
90:46 - gonna be wallet no you know what we
90:48 - should be doing we should be calling
90:50 - this D is equal to data because later on
90:57 - oh yeah and also this would make our
90:59 - code so much less insane because then we
91:02 - could just have D yes then we can just
91:05 - have D we don't need this console.log
91:08 - anymore and then this this is still the
91:12 - same this will be okay so much more
91:14 - readable okay cool okay so this is a
91:16 - heart and there just to point this out I
91:18 - think we could have when we loaded the
91:21 - data here we could have cleaned up the
91:23 - commas there yes
91:24 - so that would have a good practice clean
91:26 - up the commas up there okay share with
91:28 - me your observable notebook that does
91:30 - that okay
91:30 - so we have seven minutes to do the heart
91:33 - of hardest part okay okay all right so
91:35 - I'm gonna go explain okay deets re-enter
91:38 - update is it okay brilliant your your oh
91:44 - it went just went it overheated it's
91:47 - okay it's gonna it's easy to turn this
91:49 - one is not overheating because I have a
91:50 - fan all right so I'm gonna try and
91:54 - explain this really quick okay so d3 has
91:58 - something called enter update exit and
92:04 - for those that use things like me act or
92:07 - view and etc this is basically how the
92:11 - concept is how I'm reacting view and
92:14 - those all this like virtual Dom does the
92:15 - update underneath the hood and and
92:17 - conceptually what's happening is I'm
92:20 - with d3 the way that you need to think
92:23 - about things isn't by the Dom elements
92:27 - but rather you need to kind of like flip
92:31 - your mindset and think about it data
92:34 - first
92:35 - so d3 is called data-driven documents
92:37 - and this is why I'm so let's say we have
92:40 - a data set of five numbers let's just
92:42 - make it really easy we'll just say like
92:44 - 0 5 10 20 a hundred let's say and what
92:53 - we want to do is use our data to dictate
92:58 - the Dom elements we created so um it's
93:02 - called enter update exit because in d3
93:06 - the most common set of functions you'll
93:12 - see is something that's like a dot so
93:18 - let's I'm gonna start just writing this
93:20 - code let's say we select the SVG with d3
93:25 - select that's like an HTML select my
93:32 - brains your select your that's like
93:36 - going that's finding the Dom element SVG
93:38 - pulling it out and putting it in a
93:39 - variable into yeah and we're giving the
93:42 - SVG element to d3 got i'm i've already
93:45 - I'm assuming let me let me put it into
93:48 - quotes actually sue and we can pass in
93:51 - any sort of a CSS selector in here and
93:53 - d3 will go and find it
93:55 - I'm and then the next line you'll
93:57 - commonly see is select all and I'm gonna
94:02 - say path because that's the SVG element
94:05 - we want by right now let me okay so I'm
94:10 - gonna do this I'm gonna draw let's
94:14 - pretend this is our SVG canvas I'm and
94:19 - right now there's no there's no Dom
94:21 - elements so what are we selecting
94:23 - and the answer is were selecting nothing
94:26 - okay this is going to return you an
94:29 - empty selection so we can put stuff in
94:32 - there
94:32 - by entering updating and then exiting
94:34 - yes so we see we call this function
94:38 - called data and we pass in I'm gonna say
94:42 - I want to call this data which is gonna
94:46 - get confusing for us in a bit um but
94:49 - we're gonna pass in do you want to give
94:52 - it another name so that's what what is
94:55 - that in our example right now ah that's
94:58 - the is that the wali oh that's a good
95:01 - point
95:01 - okay so let's call this I'm you know
95:05 - what let's call this the I'm trying to
95:08 - I'm trying to I like the flower data
95:11 - it's like the individual data from that
95:13 - one flower I'm gonna let's separate this
95:15 - away from our flowers and say this is
95:17 - just conceptual got it and because if we
95:20 - try to use the actual numbers okay low
95:21 - too confusing so let's just say it's
95:23 - conceptual and it's I'm you know our
95:27 - numbers let's say values or something
95:30 - that's a better one yeah values and this
95:37 - is will pass in values and and we want
95:41 - to also actually let's just do this I'm
95:44 - and what this function does is it
95:47 - returns and something I'm it returns
95:52 - okay actually I'm gonna I'm only today
95:55 - gonna explain enter because we have no
95:57 - time for update next day I'm so this is
96:00 - enter dot append okay that's it and in
96:11 - this series of four functions is what
96:14 - you see the most often in d3 let me
96:17 - explain what's happening so a dog data
96:20 - d3 will go and look at this set of
96:24 - values so if you like okay this is a SVG
96:26 - and this is our data and we have 0 5 10
96:31 - 20 100 we have 5 elements
96:34 - and hey look there's no we see
96:38 - absolutely no elements okay that means
96:40 - we have to enter all of them and that
96:44 - means in this enter that enter what's
96:46 - happening is so data will say okay what
96:49 - we need to do to make our Dom be the
96:53 - same as our data is that we need to go
96:55 - and create five elements and bind each
97:00 - of these data to those five elements got
97:03 - it so a dot enter I'm you that's how
97:06 - you're accessing this enter selection
97:08 - and in the dot append you're actually
97:10 - creating the path elements in the DOM
97:13 - and so what it would do is like let's
97:15 - say these are our path elements so you
97:18 - have multiple path elements within one
97:20 - SVG yes
97:22 - so this whole function will create these
97:27 - five path elements in this SVG and it
97:31 - will in the SVG I'm sorry in the path
97:34 - element itself it will remember this
97:37 - zero this fine this 10 this 20 and this
97:42 - 100 got it and then what we might want
97:46 - to do is paint adder let's say these are
97:49 - circles yes and and then I'm gonna say
97:53 - this is a circle and we can say I want
98:01 - the radius to be my data and so I'm like
98:07 - doing a little thing but like this is a
98:09 - function you're getting 0 5 10 20 that's
98:13 - where you return the individual element
98:15 - from the data array which is called
98:16 - values in our case yes so yeah so this
98:19 - is gonna be like drawing a circle with
98:22 - zero radius five radius ten radius 20
98:25 - radius 100 radius and and so that's
98:28 - that's that's what's happening so and
98:31 - when we say like update and exit then
98:34 - what DT does is when we call this dot
98:38 - data function it will let's say we now
98:40 - have these three these two elements in
98:43 - our SVG
98:45 - because we created it before now we're
98:47 - like okay this is the new data set that
98:50 - we want to update you then i'm d3 we'll
98:54 - know I'm okay we need to we we already
99:01 - have two elements and we need to create
99:04 - three more so that we can match it got
99:07 - it and I'm gonna go this this might be a
99:11 - little too much information what do you
99:13 - think then go crazy move
99:14 - why if we pass in a key a key function
99:17 - let's say that I'm just gonna say that
99:19 - the key for each of these elements is
99:22 - the data itself and let's say that this
99:25 - data so let's say that this is I'm five
99:30 - and this is 50 then d3 one know that we
99:38 - want to keep this one we want to enter
99:44 - [Music]
99:45 - these four and then that we want to exit
99:51 - this 50 okay that but we don't need that
99:54 - right now because we're gonna have a
99:55 - back set of data we just want data enter
99:59 - a pen and and do we have time for that
100:03 - yeah let's do it okay are you sure yeah
100:07 - great let's creep this far okay
100:11 - so I'm gonna say d3 select direct I make
100:15 - a new cell I'm still doing it here okay
100:17 - we can do it here I'm the one thing is
100:19 - that we need to return the SVG element
100:21 - at the every end yeah so I would say
100:24 - like return SVG just there yeah but here
100:27 - I'm gonna say d3 select yes I'm
100:32 - selecting the SVG and then now I'm gonna
100:35 - chain all these functions so now I'm
100:38 - gonna select oh I see
100:40 - ah that's why it's doing that select all
100:42 - yes the path is what I'm doing here yes
100:45 - and then I'm going to the data in this
100:49 - case is the flower hour
100:56 - sighs petals okay
101:00 - the data is the flap I'm looking over
101:02 - here the weight force that's helping me
101:03 - I don't need this extra function right
101:06 - could just enter this right now
101:07 - yeah don't you the key function and I
101:09 - don't need any arguments to enter that's
101:11 - just yeah that's here I go I'm entering
101:12 - the data yes
101:14 - and with each record but this is not an
101:17 - array so it's each property oh I'm sorry
101:19 - you you have to put that into an array
101:21 - oh okay because it's just one otherwise
101:23 - we could have done our magic stuff up
101:26 - here we could have made all the flowers
101:28 - yes out of that full right we could have
101:30 - made flowers and made all these objects
101:32 - each one got it yeah okay so we have
101:35 - this one we're just entering the one but
101:37 - still and then we append oh and I think
101:41 - I'm gonna just is it crazy for me to do
101:42 - this oh you need the dot though yeah
101:46 - that's her hmm and then a pen yes and
101:50 - then this I'm appending to the Dom yes
101:53 - I'm appending just the path yes so what
101:57 - you don't need to specify what's going
101:59 - on in here with what path so trying bad
102:02 - try executing that and then let's
102:07 - inspect if we go back up uh-huh let's
102:10 - inspect this Oh
102:12 - so I execute it and then I'm gonna do
102:14 - inspect and extra Zoe I can you inspect
102:20 - right here perfect I see the view box
102:26 - SVG mm-hmm but there's no okay let's go
102:31 - back and see what we did wrong don't oh
102:34 - oh oh sorry I'm too right now and the
102:37 - little bit of difference is that we
102:39 - don't need a quotation marks here
102:40 - because that's the SVG variable yeah so
102:44 - this is the actual SVG right man it's
102:46 - this one right here yes it's that the
102:48 - thing that's starting everything yes oh
102:52 - and that you do running it I don't have
102:53 - to click that I just know who was a
102:55 - command enter like this a shift enter
102:57 - shift enter yeah and then inspect oh man
103:03 - why does it do that okay but I mean
103:05 - they're just in the wrong place
103:06 - oh yeah we do right here it yeah perfect
103:14 - path we have one path why do we only
103:17 - have what we only have one open we
103:19 - approach that multiple pedals
103:20 - oh we no no okay can we hold on hon um
103:22 - it is because and we only have one
103:25 - flower so actually I'm I'm gonna just uh
103:28 - actually select all the groups SVG has a
103:35 - thing called that group l oh you mean
103:37 - actually just say groups IgG like this
103:40 - yeah within quotes yes okay we're gonna
103:43 - make a bunch of paths we're gonna make a
103:45 - bunch of groups groups and so um do you
103:48 - trust me can i yeah we don't have much
103:50 - better sorry uh so what we're gonna do
103:54 - is and we're just gonna call this
103:58 - flowers and and what this does is makes
104:04 - a group element for each flower we have
104:11 - which right now is just one and so like
104:14 - you said we should be seeing one group
104:18 - element in here okay I see that and then
104:22 - what we want to do because we've
104:25 - structured our data this way we've
104:27 - structure we have like a date like an
104:29 - object like a nested object right and so
104:31 - now we want to do is for each flower we
104:35 - want to select all the paths but that
104:40 - each flag on it for each flowers like to
104:43 - all the poo and then we're gonna go get
104:44 - the petal yes we're gonna get past for
104:48 - each flower group we're going to get
104:51 - past the data that's been bound on it
104:53 - and the data that's been found is this
104:56 - data so then we can access the dida
104:59 - paddles and which means that it's going
105:02 - to return our array of petals that's
105:05 - that's right yeah right here I'm bad at
105:10 - this right here and and we can say enter
105:14 - append path and now we should be able to
105:19 - go up here in spa
105:20 - the SVG and hopefully in each group we
105:26 - will see the correct number of passes
105:29 - awesome but the paths don't have paths
105:31 - in them no so now I think you should do
105:35 - the honors for this one so go here for
105:38 - each of the paths let's give it the D
105:43 - attribute so dot adder oh this is now
105:46 - giving an attribute and then yeah so so
105:48 - in quotations oh yeah like the first
105:50 - thing we learned yes
105:52 - yeah that's it all the way up wherever
105:54 - that was Thanks
105:55 - right there yeah equals yeah okay it's
105:58 - all coming together
105:59 - yeah get where you're going to pass in
106:02 - the function where the input is the
106:05 - variable D and then we're gonna say oh I
106:10 - don't think okay okay um is gonna be
106:13 - just a d dot petal path because that's
106:15 - what we have we have the petal path
106:18 - right here and that's what we're
106:20 - accessing and so now if you close it run
106:25 - it but where are we getting the angles
106:30 - not yet not yet not yet okay and so now
106:34 - if you run it I it's because you need to
106:39 - turn right things oh yes I'm in soo no
106:43 - let's do dot utter on the path and do
106:48 - transform D and then that's where you
106:56 - can a string literal right okay yes I
107:00 - forgot what the transform looks like
107:02 - somewhere up here right yes transform
107:05 - but and rotate I just rotate for this
107:08 - one I'll tell you why in a bit
107:10 - um you do yes perfect but you want to
107:15 - close that in parentheses a rotate
107:18 - parental and paren close paren and now
107:22 - we should be able to see something is
107:25 - correct
107:28 - I'm terminus floor so that just but I
107:35 - can just translate that a tiny bit and
107:37 - then the reason why we have the group
107:39 - element is so that you can translate no
107:42 - don't don't do that one you want to be
107:44 - transforming the entire power of this
107:47 - adder well you wanna you don't want that
107:50 - transform transform and then I can just
107:58 - make something up here like translate
108:03 - like I can just move it over a little
108:05 - bit right now yes I'm really excited
108:19 - Oh whoo man Justin move it over enough I
108:22 - think you should move it over I the
108:25 - pedal signs that you declare laptop or
108:28 - you can do that too
108:30 - where where did I do that why not use it
108:32 - we're not using size scale right now
108:34 - which we could but we're not yeah well
108:36 - then do run this there we go okay so now
108:41 - I could change the movie right I could
108:44 - say like go back to Days of Thunder and
108:48 - we only have three pedals and do you
108:53 - want to put the size in there oh yeah we
108:59 - got we got this okay we totally got this
109:03 - okay so I'm in the transform part
109:06 - instead we can do we can return a
109:11 - function again and I'm gonna make this
109:13 - into a string literal oh I see what
109:16 - you're gonna do and here I'm gonna say
109:23 - mm 0.5 pedals signs pedal sighs don't
109:30 - you wanted to divide it by two or no no
109:32 - because we did for B I did do other
109:38 - people got it though yeah do you wanna
109:42 - do this last part is like so rushed idea
109:46 - that I never I always go like an hour
109:49 - longer than I think that I'm gonna go I
109:50 - never have something yeah but look look
109:54 - at this though pet size and now if you
109:56 - do one to go to wall-e again cuz it has
110:01 - 92 that's awesome and if I wanted to
110:07 - just just say like right now it's just
110:09 - using default stroke and fill those
110:11 - would go as attributes and they would
110:14 - end up like right down here you can
110:16 - either do them on the path or the group
110:18 - group they'll inherit the attributes
110:20 - right yes I'm gonna do a really quick
110:22 - thing and in the next few minutes I'm
110:24 - gonna do it all the rivers in the next
110:27 - three minutes okay all the flowers I'm
110:29 - going to show you that we did all of
110:31 - hard work already okay and the rest is
110:34 - actually just gonna magically happen
110:37 - okay okay so I'm gonna say I'm gonna oh
110:46 - yeah yeah I'm gonna explain it I'm so
110:49 - we're gonna say this is flowers data and
110:51 - we're going to go through all of our
110:53 - data and we're gonna loop through them
110:57 - and we're going to for each of them
111:01 - return the same okay return the same
111:08 - information and I'm going to just put
111:11 - these calculations into my function for
111:16 - looping through instead I'm and then if
111:20 - we've done this part correctly then we
111:22 - should have flowers data and seriously
111:28 - if we did this part correctly and I hope
111:31 - we did then we should draw all the
111:34 - flowers on top but so you see that a
111:36 - little translate to put them next to
111:37 - each other you're putting that in there
111:43 - I'll go talk to the camera okay game
111:45 - thank you everybody for watching I'm
111:47 - sorry this is gonna end very abruptly so
111:49 - I'm just warning you Shirley's adding a
111:51 - little bit more codes getting very
111:52 - abruptly a very appropriate song for
111:54 - right now would be this thank you 8i 2.0
112:01 - brockman new members so like I said this
112:03 - is gonna end very abruptly
112:05 - we're not sleep yet you have about 30
112:08 - seconds to get to this tonight I'll be
112:12 - back next week sometime if you know and
112:16 - maybe sure I surely will and I will
112:18 - discuss this and if there's anything I
112:20 - can do to like revisit this to kind of
112:21 - clean up or explain one last thing but
112:24 - as soon as this is over well soon as I
112:26 - get to it I'm gonna take the link to
112:29 - this observable notebook I noticed it
112:30 - says private so I'm gonna make it no
112:32 - longer private and then I will add a
112:34 - link to the observable notebook in this
112:36 - video's description so you'll be able to
112:39 - find that observable notebook and if you
112:40 - make stuff with it I think tweet it at
112:42 - me at Schiffman or surely on Twitter is
112:45 - at sxyw you I want to have like I need a
112:49 - button then it just like pops up here
112:51 - one of these days all these overlay
112:52 - stuff sxyw you yeah yes got it
112:56 - so tweet it at us so like a little
112:58 - snapshot of the flowers you make like
113:01 - snapshots nother thing people say
113:03 - screenshots whatever and then also maybe
113:06 - a link to your observable how and and
113:09 - because we'd love to sort of check that
113:10 - out I'm curious to see what people do
113:12 - with this alright how are we with our
113:13 - flowers I tried to do something fans
113:16 - don't awesome I love it and but I'm
113:19 - gonna do one thing one extraneous thing
113:24 - because then it will make it a lot
113:26 - prettier you can't resist
113:30 - I can't I'm sorry I'm sorry we got this
113:33 - doh oh okay Kay Kay Kay Kay okay this is
113:37 - actually proving to be more than I
113:39 - expected but we're committed now okay so
113:43 - I'm committed to this and I don't I'm
113:49 - not even gonna explain it you're your
113:53 - keyboard is hard disaster
113:56 - [Music]
114:02 - okay maybe it's not interpolate okay
114:05 - let's do interpolate warm we're gonna
114:08 - make it work we're gonna make it work
114:13 - the attribute d3 dot interpolate warm
114:16 - and then it takes a number between 0 and
114:19 - oh no it's 360 oh no no no no no no that
114:28 - is that that is the right thing down on
114:30 - petals numb petals I you know what
114:36 - Dena and we'll divide by 360 it needs to
114:39 - be a number between 0 and 1 like a
114:50 - rainbow colored thing no you're not
114:55 - allowed to do anything we're code have
114:57 - to stop you have to stop first of all
114:58 - it's now officially eighty degrees in
115:00 - this room oh my god because I had that
115:02 - decay and they fixed the air it was like
115:04 - working really well now it's like super
115:05 - hot in here again I'm very sorry this is
115:08 - good and super abruptly thank you so
115:10 - much for doing this thank you for people
115:12 - will ask their questions that comes up I
115:14 - will if you have questions and I can't
115:16 - answer them I will bug surely and answer
115:18 - them thank you everybody for tuning in
115:20 - and watching please make something with
115:22 - this I'm gonna I guess this is the URL
115:25 - even I just can I quickly make this
115:28 - public kind of just a published publish
115:32 - and people oh and it's actually just
115:35 - like this yeah so there this should be
115:37 - easy for people to find on somebody if
115:39 - somebody could post it in the chat that
115:40 - will be great I'll add it to the video
115:42 - description like an hour from now
115:43 - probably and thank you so much see you
115:46 - next week
115:47 - [Applause]
115:56 - [Music]

Cleaned transcript:

okay now I'm live mu yeah they were I use hello everyone welcome to a very special episode of the coding train with a guest Shirley woo I would I would say before the train whistle I think it's not sanitary I get a bell you can ring out what you just my only one well I don't know you can do it there you go okay there are sounds I'm sorry well have a little time some technical difficulties in getting started this is a little awkward we're gonna kind of figure this out as we go I have this tendency to like look over here because a little behind the scenes here this is where I have the monitor and I can see the chat and we can like sort of see what the mic levels are but if we stand like this the whole time we're looking that way okay I try to talk to the picture over there on the camera and you can also just talk we could talk to each other I like to people I will get to introducing Shirley in a minute let me just kind of like lay some that is sort of like to give you the context of what's about to happen here today I will note it's around 415 p.m. Eastern Time there is an event happening in the space of NYU at 600 p.m. so we have to end around 5 or 10 of and if for some reason everything goes wrong we don't finish we'll come back another time yeah that's what's gonna happen to much higher vests um so but this is a unique episode live stream of the coding train in the sense that I I'm going to learn something new taught by Shirley and in fact a little technical magic here is can i this is okay right yeah I my stream deck is failing so I can't seem to set up a button but I'm gonna come over here and I'm gonna click something on the interface here like this boom and that's my screen two different screens so I'm gonna try leave it as yours right now sure like to you so that when we get to the point of view introducing yourself you might have stuff there so okay welcome maybe your like what am I even watching this is the coding train I am your host I try to stream doctor conductor a conductor can you by the way can everybody hear surely okay okay lots of noise from one of the two mics hi maybe dance mic since it makes noise when he moves somebody has a loose my choir well we can we can test this pretty easy number one is I can put this on and I can hear so try go hello hello hello is all sounds very good to me actually my name is Shirley okay I'm gonna mute my mic for a second okay Shirley just talk my name is Shirley uh yeah okay my name is Dan and my mic is back on Mike is definitely dance oh it's happening as I move around maybe it's just loose connection here okay let me try this probably just oh that's yeah I can make it happen okay I think we're okay right now it's me and I I think I had like a weird connection all right I'm gonna assume for the moment now one thing you should be aware of what you're looking at the chat everybody's about behind us okay so anything we say it takes about 36 the chat to actually see it got it so sometimes the messages are very hard to Oh it's interacting with my hair yeah I think it might have been but I think it's I think it's okay I think it really was my mic because as I was a thing I shifted some wires I heard lots of crazy same thing so I think we're good people are saying that my sound is low it's really bad all mine it's got worse I wonder is it better if I stand further away is there some kind of receiver issue all right hold on I'm gonna put that what's weird is I don't hear that glitching in like me trying to well now I hear something but that's cuz you're doing that okay so now I shouldn't get anywhere near my hair okay this sounds perfect to me all right everyone I'm holding up three fingers so tell me if three fingers right now say three sounds good sounds bad cuz it in my in the mater it sounds perfect I heard it Oh what is it is it this movement so take out let's hold on sick we're gonna we're gonna do a little debugging of this I'm just going to move us remove us from the picture okay um why don't you take the whole thing off and let's just put the receiver on the table it's like it's gonna make some noise everybody yeah I heard it there as I have a feeling it's like oh not good okay and then straight just hold it as I swing put it attach it okay same way you had it before but I'm gonna have to move around yeah I know but let's just see if we get it working okay I think maybe so we you can't see us right now but we moved some things around and does it sound okay we have to wait around 20 seconds say something okay now they can see us again okay I think it's okay now because I'm not here I think this something was happening here okay it sounds good okay okay so I think were sounds alright now I think we're okay with the sound we're gonna just work like this and then as soon as you have to move oh well put this back into your pocket or something you know that yeah it's fine yeah it should be fine I think maybe you think you could probably put it in like you could clip it to your back pocket it might have just been this was getting like underneath something or whatever anyway I'm just gonna leave it on the table right back back to your regularly scheduled program maybe we will make an edited version of the first 20 but your eyes if this happens every time this is not an anomaly I always am having like weird technical things okay setup is so intense I know I know when I used to stream II used to just literally be my computer and I don't think I ever had technical difficulties so I'm gonna skip with some of the pleasantries because I want us to I want to say keep track of time here this is a special occasion with Shirley here I'm going to so what's happening first of all thank you to the node our sponsor do you have websites you host on the internet yeah so if you like Shirley has websites you know the Internet the node is a cloud server that you could use it in about halfway through the live stream I'll come back and tell you a little about the node and you and I can get a coupon through the coding train really just by going to the node calm slash coding tree but what we're gonna do today is I most of my tutorials most of the videos that I do involve a JavaScript library called p5 you know p5 surely is a amazing superstar data artist if you're not familiar with her work you should definitely check out her website which I think you have here right now I win this video descriptions link and some of the moderators could maybe post it in the YouTube chat a link to Shirley's website ok yeah don't worry so much we'll we'll figure this out oh and actually what I'm gonna do here I forgot one little technical piece that I'm gonna add I'm actually gonna record all of the separate outputs I'm not recording your laptop screen I just realize that's fine a little bit so and Shirley uses a variety of different tools I'm imagining for your work but one of the tools you use very frequently is Vegas one is d3 83 so d3 is a JavaScript library it's also has a little dumb bird yeah but it's pretty different so and I I want to say that I've never used d3 but that's not entirely true I think I've tried to use it once or twice but I couldn't remember what I did the last time and so what this is gonna be this is somewhat similar to when npj was here PJ showed me a little bit about react Shirley is going to teach me how to use d3 and we're gonna make it's got a little workshop planned I'm the student Shirley is the teacher and I'm gonna attempt to code over here on my laptop which one will kind of switch back and forth so maybe what we could do to get started with is if Shirley if you want to take a minute to introduce yourself I kind of did a little bit but if there's anything I missed that you want to say about your work or things your do or other things you want to plug you could do that it I'm gonna just add one more technical feature which is I want to be recording to disk your laptop screen ok because if we decide to make like an edited version of this that gets published as like a standalone d3 tutorial without a lot of the extra nonsense of figuring out Mike stuff I work with a video editor and he puts all the stuff together but if we're not recording this we won't yeah oh you know we could do though a much simpler solution so I'm I'm just gonna do a screen capture yeah I mean I could set it up but this is gonna be much quicker so I'm just gonna do a new screen recording and I think you could just do the whole screen yeah but I wanted to just see if it has sound but doesn't matter it's like extra I'm just gonna do this and now it is it's recording alright that's a much simpler solution and I won't worry about I have this other setup that records all the video signals I don't think I focused the camera stay there stand there you know when we got this last minute add a second laptop yeah that was my fault I was all set up and ready to go and then I was like damn maybe it's good to have a second laptop so I'm just gonna of you could just stand still for a second okay so I'm gonna focus the camera and there we go that's better great okay so I think we're good technology wise we have your laptop if I want to switch to my laptop I need to use this mouse so I'm just gonna get it ready and I just click this button back to my laptop so that's how I'm gonna do it and I'm gonna leave it at yours mmhmm and say take it away tell me what you hi your name is Shirley yes how about I just read this okay my name is Shirley I'm an independent you can talk that's right okay Kay so I hi my name is Shirley I'm my title that I've given myself is independent creator of data visualizations I'm and that doesn't really mean anything I'm just a freelancer and I work with clients um around the world mostly on I'm like tech company's media companies journalism companies and I work with them and their data to tell visual stories um and so some of the things I've done before is um this one so this one is this is really funny because the first time we met um we were like doing it was we met because we did a thing with mpj mmoney cool yes and then we were like 40 minutes into like a livestream or like a recording um and then I started showing this project and Dan was like wait I know this project I spent a lot of time poking through this project did you really oh yes definitely I'm a musical theater geek nerd I've seen Hamilton a bunch of times how many times twice I have to get to see Evita this weekend I'm very exciting I've seen it three times okay okay yeah yeah so that's one of the projects that did really well I've also worked with the Guardian on something a lot more serious about homelessness so I just I'm yeah my job is I try to take datasets that you know maybe when it's just numbers I'm it might seem cold or hard to understand and try to convey them in a way that's compelling and maybe even emotional um and for today what we want to do is I had this project and I just realized this is the first project I ever published after I went freelance so that was three and a half years ago um and it's this visualization of the top summer blockbusters since I've been alive um and each of these flowers represent a movie and each of the petals are parental guidance ratings and colors are genres I'm and then the number of petals and the size of the petals correspond with like IMDB data so for example like this is um IMDB data out of ten in size I'm and so you know there's like some one of them they're like you know Dark Knight Rises really big beautiful and I love Harry Potter instruction and the one that I love showing is 1997 Batman there Robin and how cute it's so tiny today we're gonna recreate this okay these by the way or very have a visual quality very similar to some of the coding challenges I've done with polar roses so if you use polar coordinates to kind of loop around the path of a circle but adjust the angle and the radius as you're moving and you loop around you could get these rows like patterns yeah so I have this most recently I think I did a video around the more arose which is the particular way of doing this anyway just have to link that together yeah and so that's what we're doing today and we talked about this and I was like I'm gonna go into this and having prepped absolutely nothing about that is how I'm Siri no prep and so it's just gonna be pure like we're just gonna be thinking through this together great yes so do you want to get started or do you want to do anything Allison oh this is good let's get started we're on a time crunch yes okay so let's switch back to your I'm gonna unfortunately I couldn't get my stream deck button to work so do this manually but now I'm here and I need to go to a web browser now I usually use the p5 web editor which you know most people have watched the channel I've seen which looks like this I can type JavaScript code here if I run this run the sketch I see the canvas output here but amazing amazing invisible Cup but we're going to use a different web editor today yeah it's called observable I'm observable hq.com I think I'm just going to google it and I don't know it's gonna be a good yeah so this is kind of the newest iteration of I'm the creator of d3 right is also behind this and it's kind of like I think of it as I'm a Jupiter notebook but on the web and kind of tailored for data visualization so you know a lot of people in the audience are probably familiar with Jupiter notebooks because it's a thing that's out there that a lot of a tool that you use but it's not something that I use regularly on this channel so Jupiter notebook is a page essentially that you can run in a web browser type in Python code and execute it and what's special about it is you can execute like I think are called cells like little blocks one at a time for these and so that's what we're seeing here but the difference is we can do that these like little cells we're gonna do that with JavaScript yeah okay so how do I get started do I need to create an account you can't just like yes I can let's see if I do sign it with github let's try that all right I'm gonna authorize it there we go everybody okay so now this this is this is definitely the first time I've used observable myself I've looked at a lot of observable notebooks I have a kind of memory that it's got it's a little bit of its own way of doing things that's different from maybe a traditional JavaScript workflow is that true or yeah so I only really reckon this for prototyping um obviously like if you want to them make a website or something you would go and like doing the index.html or something I'm vibing for this it would be fun too so you want to be editing in these cells so where is this and what I can call this oh oh I see yeah so then you can okay and then when I hit run shift shift return is there shortcut all right okay people tell me this is this is a little bit smaller than the font size I usually use but I can also zoom into it and I can yeah I'll do this that's good okay and I'm giving us this much it's always confusing this much space so that we don't stand in front of it I think we're good okay all right so I mean the very first thing that we can do is just create one of the petal shapes I mean so this is where I kind of wanted to talk through SVG paths together with you okay I'm and I'm maybe the way we can do this is first we draw on the board okay then we put it in okay okay i man so so I'm gonna switch the camera to the whiteboard yes and you're just gonna have to take that oh that's right thank you for the room right there and you have a marker I'm just gonna stand over here I like how everything is set up for Dan so it's like everything oh oh and I'm gonna plug this is um this is a new sweater um it's designed by Georgia loopy who is an amazing data artisan designer um and this sweater is a data visualization of Ada Lovelace and her algorithm for the Babbage engine yeah so please don't ask me how to read it because I haven't decoded it yet um but I was just really excited to like wear this on your live code um yeah okay so let's do s we G paths together so Dan I know you work a lot mp5 so I'm guessing over here I'm guessing that you're extremely familiar with like canvas like okay I'm gonna put it in here and I hope I'm gonna put it in another pocket and I let me know with the if audio ever goes crazy we've got the mic in Shirley's pocket yes a different pocket different pocket look good to me okay so I'm gonna we're gonna see sue I know you use a lot of canvas and you make a lot of shapes in campus um but for SPG today I wanted to talk about like SVG paths there's like so much room up there that can't reach um and so what that looks like is actually should I start from SVG and what SVG is yes sure so I'm you probably cover a lot of canvas oh my writing is so it's okay it's it's much bigger people write a little bit bigger I would say I'm on it it's this is a tiny little monitor that's not that people are seeing im sue with canvas right bigger um thank you so with canvas I'm it is one Dom element um and the way you draw to it is that you literally it's literally drawing pixels on the canvas and you will say like draw a circle or like fill right or like you have dark or something like that and it's just drawing and filling pixels um and with SVG SVG elements are actually Dom elements so for each individual SVG element like if we want to draw a circle it's a circle element if we want to draw a rectangle it's a rectangle element I'm and so on and so forth so I'm the way I like to think about it is canvas it's kind of like Photoshop I'm an SVG is like illustrator so um today I just want to cover SVG paths because I think SVG paths are extremely powerful and if you just master it you can like create any shapes that you want so for those flowers we're going to use SVG path to create individual petals and so one one point of reference for this is when I've done things in processing it's also bitmapped images but processing has a PDF renderer where I can save out those stuff I'm drawing as oh oh that's one thing that I've done from time to time and then you can blow something up much higher resolution and SVG stands for scalable vector graphics yeah right an illustrator if you draw in Illustrator and you're super familiar with illustrator that exports the SVG to and vice versa you can import SVG into illustrator and so the for path SVG path looks at the base it looks like this oh we know no sorry I it looks like huh and you want to the one thing you need is this attribute called D and this is where you put in your path string and what I mean by a path string is that there's a series of commands that you can use and today I just want to talk about em now and see and they stand for move to line well your handwriting is so much better than mine really yes oh you know one of the things I was like kinda excited but kind of like apprehensive about it's like your level of energy on your videos it's like so intense and I'm like I don't know if I'm gonna like be able to match it but at the same time that might be too much yeah I like Topher like both of us to be at that level it's okay I'm so yeah so the San Fran line Kurt I'm in some move is I'm probably the most straight forward which is I'm like translate in p5 I would assume translate is moving from one point to another the difference in X and a difference in Y or you're moving to a direct location yeah so move to a little bit different the way that I think about it is move it's like if you take a pen or pencil and you drop that pen or pencil onto the XY point right that's how I think of move to line is then draw a line from there to the next to where you're where you move to then to the next x1 yes exactly so and the way I think about El line is that it just says if when when you when you're I'm if your pen is on the paper draw a straight line to that point um and that means that L always needs to be chained with something before it because I'm like you can't draw a line if your pen isn't on the paper yet so you always need to start your path string with an M and then you can try and chain like MLL and whatever you want yeah okay and then curve to is I think the funnest one it has a little bit of a tricky like and syntax but once I explain it it will make a lot of sense and I just realized I need multiple different colors oh wait and that's is that something we have I'm sorry I forgot about this and I'm gonna try my best with just these are like a dotted line I knew Mike three four different colors so it's not we'll see okay see I'm okay soo alright this is Maya okay so I'm gonna call it px 1 px 2 these are the control points yeah so you know again people might not be familiar with with this but if they're a p5 user this sounds like it's just like the bezier curve function where you have two endpoints and two control points exactly so this is exactly the same maps to that idea yeah so this is basically um yeah so if you in canvas is exactly the same thing and so let me explain the syntax really and there's a really nice reference I we're writing this out there's a really nice reference in rune Manson's programming design systems book which has a whole page about what a Bezier curve is and has some interactive ways of playing with it I'll show to you later Fitz I'm so then I'm this is just like you say control point one control point two and end and so let's say for example we have you know a string a path string that says m 0 0 and then let's say we say C and can't let's start drawing it so this is yeah yeah 0 0 so this is the M so this is why I like to use different colors so it's like really visually clear what each one of them is and I like to think of it as like let's say I'm gonna end up at a hundred comma and zero and so we have zero zero and I think of it as I'm drawing I'm gonna draw a straight line to a hundred zero and then I'm I have these kind of like implicit anchor points and that then I can take and kind of like put it like drag it where I wherever I want and let's say I want to drag the anchor point to here and that's roughly I would say maybe 20 20 maybe that's the anchor point is 20 20 and then this anchor point maybe is 80 20 and so I'll write that in 2020 80 20 and this path string would give me this curve right so basically exactly how it's it's called it's this curve to is a Bezier Bezier curve too and I'm so if if anyone works with illustrator that's basically an illustrator how you draw a curve is you start from a starting point you like make a line to your ending point and then you get two anchor points that you can drag around yeah so here's a really nice reference I'll just switch over to it for a second this is a reference here that's showing how Bezier curves are calculated and I think if I go down somewhere here I remember this nice way of interacting with this yes this one yeah this this is a little bit different but so I think this one is a cube a brick okay oh yeah sorry this is a quadratic this one yes so that one is a quadratic Bezier curve and this was a cubic the cubic and we're doing cubic so yeah and the reason why I like teaching the cubic Bezier curve is because I think it gives much more options than the quadratic one right um and so yeah so this is how to do an SVG path and so what I like to do here now is then ask you to draw a petal shape or design a petal shape and then kind of like figure out approximately where the points are and write this path string so design it here on the whiteboard not just tinker around yeah designing here first okay because I think it gives you like oh okay so maybe I'll use up here yeah yeah yeah okay so in other words a single petal so if I think about a flower like a single petal might look like this yes and UK I just went a little bit too high but so I'll cut it off a little and you can get creative well what's wrong with that what's of it so I could use two different curves yes so I would start here uhhuh and curve like up to here yes and then I would still be here and curve back down to here yes so I would do a first a move so I first need to get to this point can I just get it at that point zerozero sure so I would do em mmhmm zero zero yes and then I need two control points oh no no the M is just moved now I need curve yeah curve I need three pairs of XY z yes the first two being the control points right so and how is in p5 hmm if I'm in a p5 canvas the Cartesian plane is such that zero zeros in the top left and it goes this way and Y goes is am I going positive and it's exactly the same so I would be if I want my first control point to be like over here yeah it would be negative pixels yes negative pixels yeah if I say like negative 10 negative 10 yes and then I might want to go up here good this is not as creative as maybe I could be a Yankee then I could say negative 10 because I'm still the same X want me to go further up so I'm just saying like negative 40 do you want do you want uh do you race them yes I guess so it was afraid to a race so I'm gonna say negative 10 negative 40 and then the last would be the anchor point we know that's the last point the left yeah so those though these two of those are anchoring could I think of them as control points those control points good job point I think of this as an anchor but I don't think that's not the right terminology you know what I think we're just making a determine logic ma'am somebody in the chat is already telling us exactly what the terminology is supposed to accept for 30 seconds and so then this last point I want it to be back to zero yeah and negative 50 well I just considered this to be like a height of 50 pixels yes and then I can curve right back to down to here yes so this will be easier because I'm just gonna now go over ten and then down to negative forty then over ten and down to negative ten and then back to zero zero yes perfect so this is my code that I need to type into here yeah inside the observable notebook yes um do you want to just draw the two control points on the other side I mean this is not drawn to scale that's okay too now that we have this and let's go back to yeah so I'm gonna go back to I'm gonna put you this marker here one and then I'm gonna go back to here and then do I make a new cell mate and you cell and I'm am I not using d3 right now I'm just writing SVG stuff do it quickly I'm new so this one right now is just a cell so what we can do here is let's declare a variable and we're just it's gonna be global to this notebook and so let's just call this like pedals let you sweat No so it's global so those I just don't even know just just the variable name pedal yeah okay or petal shape or whatever you want to call petal path whatever you want to call it and usually you can either do it as a string or yeah I think stream might make sense just the path string that you yeah like this no no just just okay and that's going I'm usually like very good with my buttons the thing that's going right in here yes yes perfect okay so so I could say M zero comma zero control negative 40 zero just no no comma no space no delimiter just go right to the next thing you can put in I think I'm so like this would be I can do that I'm so you can also between each of I like to so oh wait no comma after the C oh yeah and then I like to put a place between here and then no comma here no come on yeah because is easier to read from I got it and so I'm like even like this could I do or that's bad no you like the SU SVG you will like read that fine it's very easygoing about this yeah so it's just easier for me to read it mmm and then close the string and then if you run the let's just look right I think that looks right and also see it there if that's easier oh that's right yeah okay I'm gonna run it yes perfect it just showed it to me again yes so this is that's showing me like what's in the memory right now yes okay so let's make another new cell and then let's just draw this so I think we should just be able to say HTML and then back ticks so kind of like how we do the MD like this is actually like I'm gonna put some HTML on the page yeah I think that's how we can do it I've never tried to do this and then and then you can close that close the back tick I mean but now I need to go in yes I think you can just do SVG in there I might be really wrong uh and then you can write HTML in there yeah and do like SVG and then I do path yeah and then you say equals petal path like this yeah I think I could be completely wrong but this is you know try like that yeah I think so let's see so I'm using this particular syntax because this is that new fancy way and like including a variable expression and so it's the same here okay yeah let's see if it oh yes um okay so um let's go inspect element and see if it drew the path or not inspect this yeah it's just a Dom element yeah so then if we open up maybe we can make it bigger for people ooh perfect so looks but only enough but I don't see any die not don't even specify a color or something like that so oh you know why is this M looks like the quotes are in there because I think you need to go back and put quotes around the back but there's another reason why it's not showing up and we'll talk about that after you do those like this yeah and then run again and there's gonna be the next reason why it's not showing up is because and I'll do wait Len okay let me try this okay so this is the zero zero of SVG and you are drawing a petal oh you are drawing a petal up here see you're not gonna see it so I need to start I'm like from over here so what we can do with SVG is SVG also has something called transform transform that's what translate yeah so we can after the D let's put in like a transform here oh no no like in like a different that's a different attribute oh you mean like this yeah is equal to quo to translate I have a keyboard issue I'm going to that they fixed this butterfly keyboard is a disaster giving okay sorry unrelated topic but I like seriously this keyboard is making me so crazy okay transfer I never upgrade them like you then you made a good decision I made a bad decision you still want to translate down because because you're translating basically you're translating over no I well you you what the why you still want to translate it down yet so do you want a few minutes no no that's good right I'm and I'm just gonna say I'm asking ya I mean no no this is good and the there's there's other attributes like fill and stroke that would set the all that so similar to how you draw on canvas its let their SVG attributes yeah sooo it's essentially a lot of the same functionality as canvas it will translate over really easily they just the interfaces on it okay I'm and suit another thing I'm just gonna say right now this this is okay right now but I like to set the width and height of the SVG as attributes or the width and height attributes because one of the co most common mistakes that people will you have when they first start with SVG is you can think of SVG as kind of like a window into the SVG world right so there's like things being rendered here and you're just getting a little viewport yeah and if your viewport is too small and like you know you've rendered your data like down here you won't ever see it and I've seen so many frustrated people and so if you do that it would be cut off right because now you're but oh no 25 math math it's hard yeah what we can do is we can like set another variable and just say that the size is 50 that like the side of the pedal is 50 and now you can go around like four later we can use that as a very mean set a variable up here so you can't you well you can't do multiple variables in the cell you have to have you have to do yourself new cell for the variable and then I would do like petal size yeah is 50 yeah and then you can move then you can use that later like programmatically oh but I would want that to be in here right no no Oh cuz I would do that use a transform but like scale it Oh true like or if you yeah for the translate leader but these are heart the the path values are hardcoded that's right so if I wanted to suddenly make it bigger you would use a transform scale transform scale okay you got it so we'll get there okay got it okay so the next thing we want to do now that we have a petal is this is saving automatically yeah man automagically okay so if you want to go to or I can show it here okay so here you might notice I'm we have the petals oh and then I can I can really quickly run through these like so this one you know I drew the G I drew like a like a curve down to the bottom and then I think I have maybe another oh yeah I drew a curve down to the bottom by like that anchor point I like did at the same line as like the bottom one and then I drew another curve the PG I drew three curves the pg13 was fun cuz that was one curve one line one line one curve yeah I'm so like once you know these plots you can decode how these yeah like sheeps are made my thing is usually I just do the simplest basic version without a lot of flair and the audience you will be amazed what they can make so take Shirley's work as inspiration for how you might design your petal if you have to be following a lot I'm very happy with ya so the next thing we want to do so this is where we're actually going to get into d3 and and one of the things that we saw on your laptop's are on there I want to explain some things so d3 is this sort of big library that has a lot of functionality and but what's what it's really good for is translating raw data into what you need for the browser to render so today and I'm just gonna well so there's a lot of like things that it makes easy for us like calculating positions of I'm like no downlink graphs and I'm you know giving us different like XY positions for oh not this one oh I'm sorry for like drawing trees so like it will calculate XY positions and like SVG paths for all of that um but today what we want to do is use something called scales c3 scales and and this is something I use in basically like every one of my projects I'm and so what scales does is I'm essentially translate one thing one thing into another I think maybe and p5 you have like dot map I think it map is a function that will take a value with a given range and Reap and map it to a new range yeah yeah exactly that's what scales do for d3 so like just different vocabulary yes and so for example we have like linear scales that do like you know linear leaf and and the map function just does it as like a linear scale ok so there's not a way there's obviously other ways you can think of a range and map the value but so it sounds like d3 has a lot of yeah capabilities in terms of how you different kinds of scales like logarithmic scale and that type of thing yeah so we have like power long time like again like map as input like if you have like a date like a JavaScript date object because a lot of times in data you have like dates and years and you want to like map that to like the exposition you use scale time and one of my personal favorites is quantized like which is basically you give it a continuous input and then you give it a discrete output and when you um and then when you pass in your numbers it would map to so like I know this is very much like the machine learning examples I've been doing what to mean you'd put in map to a classification but in this case you know need machine learning is it's just really the literal range yeah divide it up yeah yes so the reason why I'm talking about this is because now I want us to do some mapping from the data I'm to each of these kind of attributes so I think what we want to do is let's do a mapping for the number of petals and so you can imagine it's from the number of int B votes to the number of petals and so that's the scale quantized from earlier because it's a continuous continuous input but then you you you can't have like you know five point five petals right like you want five petals or six petals or seven so I have like five to I think nine or ten okay and then we'll use a scale linear to do from the IMDb rateing to the side to the scale it's like just work with number of petals and size of the flower yeah those two things and so let's actually just get into the observable and I just realized that maybe I also want to give you the data okay so should I switch to my laptop or so on yours thank you wait let me let me let me pull up the date up first so the data should be on my film flowers baby so on their film flowers I have movies dot JSON okay so I can should I pull that up here yeah actually that might be the easier thing to do and then switch to here now we're back to this laptop and I'm going to github.com slash what's your sxyw you okay and then i'm and then you can do slash you're not following me github is that i don't know i don't notice that there's like a follow you're probably the only person now that i follow up get flowers yeah so also it seems like we're about to get the data which is kind of like a new stage so we can take like i often like to take a break in the middle just for a couple minutes okay so maybe now is a good time to do that as as i get the data okay okay so do I need to how how is this gonna come into observable because I also could take a break and let people do that okay so there's two ways um so let me let me just looks good yeah raw so that we can get to the actual URL okay there's two ways um if you want to copy that I'm and then I'm gonna show you the first way because I think it's the closest to how we actually will develop okay we're gonna we're gonna get the data into observable and then everyone who's watching if you're following along hopefully you have your own pedal design or an exact replica of my pedal design and then the data into observable and we'll take a short break to make sure everybody has that answer any questions and come back and finish that problem okay okay so I'm what we want to do is two steps I'm first let's go down here make a new cell and say D 3 is equal to require D 3 so you can use require and do I put that in quotes yeah so this is interesting because if with a p5 web editor that it works with just referencing other JavaScript libraries through a script tag in the HTML page whereas if you're working in node or if you're even using the JavaScript modules which is the thing that I don't really know about that's what they'll learn you can say there's like the import syntax to but that require I use commonly and have used in video tutorials when I'm working with nodejs so if I want to use a JavaScript package and node I'll require it and so I guess somehow d3 underneath the hood so this is and this makes sense in this sort of like notebook style because in Python you just say like import numpy oh yeah so this is the equivalent of that yeah okay so I would then I would run this yes and then you get that oh and look I can like debug right here like I have a little mini JavaScript cop I have the entire d3 library specification right here in an object well yes okay and do I need a new cell yes please and then you can say data is equal to getting a new computer just for the keyboard if you can believe that we are you gonna get a new computer that's the old Mac no they're just really this is the not a sponsor although Apple if you want to send me a laptop I'll take it but the new 16 inch pro they've redesigned the keyboard and the reviews I've read online seem to say like it's a much nicer keyboard and it actually has an escape button I mean there is a thing called an external keyboard I have I do use that often when I'm sitting at my desk I'll just use an external keyboard but it's too much stuff in here back to our scheduled programming data equals yes t3 dot JSON so that's like loading JSON file I could put a URL in there yes just do this perfect and then can I kind of look at what's in there yeah you can you can open it oh it's there yeah isn't it awesome that is so cool so what I love about this it just sort of like a little bit of an issue but nobody can see that doesn't show up now I'm here silly you have that very embarrassing so what I love about this is having this sort of like a console debugging built right in which I imagine when you're working with data and the step by step process is super useful okay so we're gonna take just like we're not gonna sometimes like a 500 a very short break but because I also am very excited to tell you about some new things I learned about the sponsor of the coding train Linode recently so let me just pull this up over here so okay so we're making a project in d3 it observable but you said you just use observable for a prototyping I only talked at some point you would finish the project and you need to put it somewhere there's a variety of different ways you can host a website and people watching this know how to do that but one way is using a virtual server so lonoa provides virtual servers that make it easy and affordable to host your own app site project or anything else you might you may want to want to live on the Internet so a lot of things in my tutorials I make note applications I'm this little machine learning stuff the Twitter bot is kind of like the obvious one where you have to deploy that to a server somewhere and all these kind of projects you can use with the node server they also have to like oneclick thing which is very convenient you know because if you wouldn't like install WordPress for example if ever tried to install WordPress with like a console it's crazy you just go you log on you click it you have WordPress installed you have game servers they have 24/7 customer support but what I'm excited to tell you about which I'm yet to experiment with what I'm planning to is they also have GPU instances so I have some tutorials around training a machine learning model in particular using tensorflow to train this thing called a car RNN model which is like a text generator so if you have like your favorite poet you have a favorite poet so but if you if you had some text that you're excited to like feed into a machine learning system I have a tutorial which which shows you how to do that on a server and so what you bet you do but you need is a GPU and sola node has GPU instances they have a Quadro rtx 6000 which is like a very exciting sounding name for a GPU so you can do machine learning rate tracing another AI so if you're interested in trying the node all you need to do is look at the link in the description of this video will take you right Tula no calm slash coding train but also you can just use the coupon code entrain 20 that's one word coding train to zero because you'll get twenty dollars in free credit which you can use to deploy your site so all I'm gonna I'm going to look back through all my video tutorials and see what kind of like websites I've made and certifications and think about which of those I can try on node ok so sometimes what I'll do is just also give ourselves a minute here just in case and I often do to break guys sort of like we could just keep going but I'm gonna so but let me come back to the screen here and so there's two things you can do now while we're taking a break one is sign up for the node that helps support the work that I do here on the coding tray lets them know that you found out about it for me as well as make sure you've got your code set up here so I'm gonna just mute us for a second yes I want to just say I'm I threw that there's a high from Alice Amy Catherine cam emoji that's my studio office in this up hi okay so I'm just gonna like make sure we we're all set for the next stage I'm enough where I'm gonna like take a minute also to look at the chat so if you're struggling to follow along ask a question in the chat then we could kind of answer and we'll just going to take a very short I'm gonna say twominute break all right the mic is back I'm like we're back so what it's the Big Finish Burrell is now discovering is that the ventilation of this room is terrible yeah so that's actually one of the main reasons for taking a break open the door and all the cool air so I'm sorry they'll hate to tell you about that before you were like I'm gonna wear this wonderful sweater all this like expensive fancy equipment okay so I think we're air we've got about 45 minutes left of this session so we're gonna keep pushing through and try to see if we can take some next steps to pull stuff from the data and then put it into this s yes yeah okay I'm so I think our goal for today is drawing one flower with data and if and there's stress school is drawing all of them with data okay okay I'm okay I usually like to give it exercise to the viewers to do after and then they could share stuff on Twitter or if I make a page on the kodi train website there's a way for people to share their projects so what we'll do well we can also give up prompt whatever we don't get to we can ask ok yours to complete and you'll be amazed at what they'll do yeah well actually I'm actually now thinking it might be even easier to potentially what we'll see what see ok I'm ok so the next thing we're gonna do is yeah a new cell and by the way you can like reorder reorder and give these cells and they'll be fine um and so now we're gonna start with a curly brace like ah yeah and then we can close their curly brace and then everything in these curly braces and observable will be executed as JavaScript oh oh because I'm I'm not doing this is this is not JavaScript like the pedal path up you mean it is but it's sorry yes I should read that everything in there will be that you can do multiline JavaScript so this is not a d3 thing we're doing right now yeah and I could put like character turns in there and then I can just type my JavaScript in yeah I'm and so let's say there's this is a like one thing that's gonna be different from if you do like an index.html and because in index.html you were just like create and a just like SVG elements yes and but here what we're gonna do is I think we're gonna call it cost I'm SVG really no one should be like me it's good to use Const people should use just like no it's I have a hangup let's use Const that's good bar no no VAR bar is worse okay I'm cons just the correct thing to use okay DOM and all caps dot SVG uhhuh and open paren you should always just be telling me what I am and you want to pass in that width I'm and so how about we use the pedal size we had early so like use the variable yeah and so it will go in there okay comma and then let's say petal size again the width and height um well actually so petal size is just fifty and you can imagine if we rotate them all around oh then we will probably want double that for both yeah so this we're gonna try just drawing one petal for now okay I'm sorry one flower field we're now on two flowers good I'm and then let's do our scales so the first thing we wanted was a scale linear um to do translate I'm the IMDb rateing sighs great so if you open up this data uhhuh and let's open up one of the objects some of these names are great days of thunder mm I just realized yeah I don't know that's embarrassing or just I am but we need to do some really easy data cleaning like we and like they're all in strings we want these numbers as numbers but that's gonna be fine I'm I'm so yeah so I think what we need is IMDb rateing and i'm DB votes for for this book so let's go down below and i'm let's and it's in a variable called data yes so what we want to do is let's go let's make up a scaling a linear it's call it cost us let's call it a size scale okay is equal to d 3 dot scale linear like that and then like open paren close paren i'm and then for this we need a domain and the range and so for us to get the domain we need to get that from the data but we could also like kind of make it up if we wanted to I mean I'm not I'm just saying like like we know the ratings are between 0 and 10 aren't they no bad idea okay okay I just mean we're prototyping we're experimenting we're playing around here like good okay I want it I want to give people good habits okay good habits everybody don't I have lots of bad habits we're gonna do is we're gonna use something called a d3 scale no no sorry d3 array I'm and in d3 array we have something called extent and what that does is we pass in I'm in array and then oh and it gives you the minimum maximum back yeah okay that's good we should do that so I'm gonna say so what I could I do something like min/max equals because it's never this bad I said instead and then the array on passing is just data yeah but do I need to give it like what field I'm looking for so in and then comma and then you're gonna pass it a function that's the iterate I'm sorry it's a accessor so pass in a function I would you say can I do some crazy magic like this yeah you can't okay and but you want to give it the su and what so but you want to pass as input the d like like the individual element element okay like i record what do you use so we use we say D oh D oh okay yeah and then we say and then you say yeah yeah perfect so I want the extent the minimum and maximum in the array and I'm using a function to say which element of the array so this is like what would you normally name this I said min max but like we call this like extent just seemed like raiding min Max or something basically yeah and then I would do the same thing for what was the other variable we want actually just do one variable right now knowing you're both so what was the other ones yeah so votes min Max and I would just say I am deeps IMDB votes yeah okay okay and then so then inside skill we will pass in that rating min max but we need them in oh it just it it's a no it's an array with the next zero is the min do you want to just a console on oh you can console log and console log like I just type console long and then but then you just have to open up your oh it doesn't show up some magic way no it just console logs in okay yeah oh yeah undefined oh oh oh wait do you want to go back to yeah open up Jurassic Park we can do Jurassic Park let's say oh because of it it's a string because it's a string I need to convert it to a number that's probably yes I like you a plus like parse or do you do plus what's plus so plus is a shorthand for parse int oh really like in in all the world no no I didn't I have to run it I didn't oh and you didn't run it so what are we doing no but I didn't run it again we did what are we doing wrong let's see so how about tonight the chat is very good at telling me what we do wrong while you look okay it's an object not an array it is Oh stupid me okay so we have to turn that into an array Thank You chat so then what we want to do here is say we can say thought then and then we can say let's just get the values oh I use low sorry I'm so used to using low I'm gonna go grab low okay then I'll explain it I would like take it over your computer I'm sorry I'm sorry yeah so this is low I'm and it's just really easy yeah it's like a library that lets you do stuff with the underscore isn't that called underscore used to the first iteration what's called underscore is underscore alone is an extension under squash day okay mmm you're sure is great but wait wait you can require it below you're gonna use it yeah you can require things anywhere so that's why you can so now this made it an array yeah cuz you lo dashed it yes and then now if I run this then this should work and there we go okay got it okay so but the plus is like parsing it so what goes in scale linearly I have to do them individually because well scale linear if you want to look at UM the scale than your and then sir we also undo we want number of petals yes so like petal scale or no pedal number scale yeah I call it numb pedal scare no pedal scale yeah and then I want the votes min max yes and you want scale quantize because you want to go from linear I'm sorry continuous to discrete and so right now what you're doing so let me just pick something which is sorry I'm just for like something like just so we know and what they are I like to just put them into domain so we know that this is the domain oh so okay sorry you explained it I'll type it and domain so d3 has like its own set of vocabulary range so domain is you can think of it as input I also would like to think of it as the raw data and the output they call range so dot range it's like kind of like that makes okay and so after domain let's do a dot range and let's say the scale this is what I'm mapping it to yes so I know my size was like this is a size that's the size of 50 yes so I would say that's like the biggest it would be I could do like 25 to 75 or something that that's the that's a great intuition um but because we're going to use the size scale we're going to use range and form scale yeah so we probably want a range of 0 to 100 where it's probably 0.25 or something okay I'm and the syntax is we have to pass it in as an array oh so like this and then this range is discrete yes the options so I could have like 5 petals 7 petals or 10 petals or something yeah yeah yeah is that like a weird person I just put it in there I mean you can do whatever you want okay all right seven petals are my personal favorite well you said 10 sound effects is the buzzer for like if you're I don't know okay usually I'm just here by myself we can't fest some more are we getting distracted well I like this one I'm but the way that you can think of it is I'm now I don't know what I'm saying what was I saying yeah we we were good we have scale linear we have scale quantize yes okay so now that we have the scales let's go calculate I'm what we're gonna draw right and so let's call it cost let's see constant flowers let's just go and make all the flowers all the flowers cuz we could make one and then we could just change the index from the array and then we see different ones you let's make them all all right yes I should say that this if anybody's watching who this is their first time coding this is pretty difficult I think in terms to follow roses there's a lot of Titanic terminology so that's one of the reasons why I enjoy p5 because it's it tries at least as best as can to give you this very like friendly starting point what's wonderful about this is like in one line of code we've kind of like parse you know it's like a Barrett Mount one line of code but very little bit of code we'd like parse this data file we're like getting min max we're scaling the range we have quantize Bob all that all these like really common set of things you would want to do when working with data and yeah I'm very succinct way but I could imagine for somebody who's new to this this could be hard to follow yeah it's a different way of thinking exactly but let's make the flower I'm you want to make one flower let's make it I don't know what does the chat have an opinion and the chat is gonna say make all the flowers let's make all the flowers let's let me call the flowers does that make you nervous it does well let's do it wait you know we have a half an hour okay let's just make one flower let's make one flower and see what happens okay let's just yeah flower is equal to okay and then let's create in the object like like a blank object the object literal okay yeah I and I'm so to create the flower we need um let's see let's just let's just decide that we're gonna there's the data has 135 things in it should we just go with Days of Thunder dick 0 I mean we could be here for a very long time trying to pick what movies do that sure where's gum let's do four it's got more stuff there's also Pocahontas Gump is right here no yeah I want to look through all okay all right oh wait here this is I feel like whichever one I pick there's gonna there's gonna be at something I really do like this movie walle to be on sir you should do walle okay but I feel like that's I liked I like to be familyfriendly when all possible I think there's no risk here with Wally it's rated G yes index 92 okay okay do you want to just like do like a Const index or something just so you don't have yes okay I got walle equals 92 I just said I just realized something which is I was like do you want to create a variable so you don't have to write 292 over and over and now you have to write Wally over yeah but we get to type Wally I wish I had like a Wally like sounder baby something laid out okay so let's think about what we need to draw this flower um do you want to take a look at my flowers again um okay so to draw this flower and we need actually we might well am I gonna can I use oh I gotta like minimize this here can I use this pedal path yeah so let's do this I'm like I don't I just do like a little loop and like just keep rotating it around to draw the flower yes so I'm but you need data okay okay so I'm gonna draw it but we're not gonna draw it we're gonna draw it even with the data right now yes we're gonna draw with the data right now um and so let's do this let's um figure out the number of petals we need so let's go below Wally and say um yeah num vettel's and num petal scale is a function that we can none petal scale oh yeah there it is I was looking for that and then we can pass in the data data index Molly yeah and it's called a votes I am DB no I need those votes yeah and then we want to plus it we want to do a plus beforehand so that it becomes it's not a thing you can do in JavaScript like anywhere I think this is a thing if you work with a lot of data like cleaning data I like to type of car siient would you like to know no I want the plus here okay and then I just passed that in yeah okay great and then and then I'm gonna do the size right Jeff sighs I mean I could call this pedal size sure and that's going to be the size scale and then the rating yes yes um you already have something called pedal certain skin size above peasized at all pet size sure it's your bar variable naming is not my strong suit I don't know if anybody is that good on it um okay so now we have do you want to console.log and both of those or do you you're like I don't well it's keep we're good okay I feel confident okay soon normally I would it's good practice console.log the reason why I'm sort of avoiding it is kind of have this like very small you know I don't I guess like I guess I could console I just feel like I'm not sure yeah it's great when something goes wrong well console.log okay super for the pet for the flower let's I just put in the size let's just you know one of the things we want like Oh should I do that object structuring thing you mean where I just do this yeah sure I'm wait we not yet for the numpad else oh okay so the way that we want to think about the numpad else is and that that's purely a number right that is about me five seven or eleven use the loop and yes yes and so what we want to do is we want to create an object within this object okay and we want to create so let's kind of yeah go and then say let's call it pedals okay I think I see where you're going yeah and then there is a function and underscore called x or low so if you do underscore x and then you pass in num paddles this is crazy and we need to know and then you have a and then you pass in a function after the known pedals and the input you get is I so the index so what's happening here is loading this low Tata what it does is it iterates the number of times so let's see num pad else is fine it's just like a for loop with I yeah okay okay thank you yes thank you hmm and so what I want to do there is a return another object I don't have to say return now because no well if you want to create an object you you need to do their curly braces and then return curly braces and then but you need to wrap that in curly Oh for the one if it's just one line of code I don't like okay let's let me be longwinded about it and then we'll sort of see what arrow syntax we exactly need but yes I can do this I'm and then in here what we want is the rotation your petal got it so I'm going to its that is in radians or degrees basically an SVG is degrees there so like in other words I'm gonna say uh I divided by how many total petals do I have num petals 360 times I like this you mean yeah that's but this is just returning of value wait no no no wait is that right is that well because yes yes yes yes yes yes you're right yes I'm well I wanted to return an object because oh you mean I just but so I put like angle agrees or whatever you want because I also want to return the petal path got it and I'll explain why I'm and you mean this thing your your petal path yeah and the reason for it is once we go and do all of the flowers I was thinking that we can I was thinking that we'll go and do like three other petal paths so that your flowers can look different got it I'm pretty sure that I can skip the return because this is just an object literal it's one line of code it'll get returned before it doesn't work for you know but maybe won't work for you we'll find out yeah okay so now do you want to run that oh yeah let's splits console.log flower I definitely have to come to like this and then what I'm gonna do just want to console logging actually well so so I think if I do this clear the console and this is what I'm running mmhmm so there's nothing in that array so that's a mistake right there should be stuff in there there should be so what did I do wrong so let's let's also console.log known petals to make sure that we do right I have to copy paste everything so that I don't have to type if we did oh it's undefined ah okay so something went wrong with numb petals non petal scale is this way of quantizing the range actually correct yeah it's at sea I think they're talking about something else I think they're talking about the yeah okay um scale quantized let's find scale quantize Shirley's looking up something in the documentation which in theory I could show you know we're right we're right look range 1 to 4 so that's right okay so hold on let's right now our issue is not this our issue is just number when we run this we get undefined at numpad yes so let's go and let's log plus data Wally yeah and plus data Wally I'm de bruit loads okay yes so let me say to console logs we're gonna look at plus data Wally and we're gonna look at if you do a comma in the same console log it will sorry no you're absolutely right man not a number hold on oh it's running it automatically for me okay we got this and then I am it's got a comma okay so we have to the plus won't work with the comma yes one thing that I've used is this I think this works oh yeah let's try a parse int no parse int will just go until the comma oh no but I didn't console.log oh oh it'll just go until the comma let's do it 705 ya ain't go so let's try I mean we could obviously number mmm what did I do it again I can't tell ya so so that's not so we do have to do we could just use parse in and it's okay Dana's kind of a little bit so how do I remove I do a string replace oh yeah just a replace and so I can just do replace any commas with nothing yeah so if this I run this I see that and now I can use plus again yeah so this and I probably should put that in a separate variable or something but I'm gonna just all right here let's see let's see what order don't do that you have to console like oh I have to come no I have console logging on pencils oh you are Oh cuz it went to the scale yeah yeah it it made a 10 because we quantized it ah it's not undefined it oh we know it's because in I'm DB votes we have to do the replace there so we should do it here yeah dot rib please right right right right right right right right so there's a definitely a more efficient way to do this at the source somehow probably but this will do yeah yeah we should we should have done it at the source we should have done the data cleaning out the source yeah but it's 10 makes sense it's a lot of votes you don't think it should be 10 no can we it still you're gonna have a hundred pedals okay I'm more satisfied with this answer okay great you're gonna have a hundred no I was I was giving it we're gonna give it some little divet are you only gonna have one pedal I'm just like okay 1215 this is just a demonstration I'm sorry the beautiful creative minds of the viewers will design something okay okay so now I think we can go back to this yeah and we can take a look at our flower and we should see 15 define things yes now to see 15 under but at least we have fit so let's try return and you have to do the curly braces around those oh right okay let's try that interesting that that didn't work yeah I wish it weren't like that and then we've got yeah look at that well that's cool this is like the craziest kind of coding thing I've ever done I'm gonna know cuz I just like it's bothering me that it's wrapping the code but I'm gonna I'll live with that we can we can I can move more closer to you know the other way is the way you need to move oh it's fine it's not we're good we're good we've got our flour we have our data okay now comes the hard part and I should really call this movie index because we're gonna change it it's not gonna be wallet no you know what we should be doing we should be calling this D is equal to data because later on oh yeah and also this would make our code so much less insane because then we could just have D yes then we can just have D we don't need this console.log anymore and then this this is still the same this will be okay so much more readable okay cool okay so this is a heart and there just to point this out I think we could have when we loaded the data here we could have cleaned up the commas there yes so that would have a good practice clean up the commas up there okay share with me your observable notebook that does that okay so we have seven minutes to do the heart of hardest part okay okay all right so I'm gonna go explain okay deets reenter update is it okay brilliant your your oh it went just went it overheated it's okay it's gonna it's easy to turn this one is not overheating because I have a fan all right so I'm gonna try and explain this really quick okay so d3 has something called enter update exit and for those that use things like me act or view and etc this is basically how the concept is how I'm reacting view and those all this like virtual Dom does the update underneath the hood and and conceptually what's happening is I'm with d3 the way that you need to think about things isn't by the Dom elements but rather you need to kind of like flip your mindset and think about it data first so d3 is called datadriven documents and this is why I'm so let's say we have a data set of five numbers let's just make it really easy we'll just say like 0 5 10 20 a hundred let's say and what we want to do is use our data to dictate the Dom elements we created so um it's called enter update exit because in d3 the most common set of functions you'll see is something that's like a dot so let's I'm gonna start just writing this code let's say we select the SVG with d3 select that's like an HTML select my brains your select your that's like going that's finding the Dom element SVG pulling it out and putting it in a variable into yeah and we're giving the SVG element to d3 got i'm i've already I'm assuming let me let me put it into quotes actually sue and we can pass in any sort of a CSS selector in here and d3 will go and find it I'm and then the next line you'll commonly see is select all and I'm gonna say path because that's the SVG element we want by right now let me okay so I'm gonna do this I'm gonna draw let's pretend this is our SVG canvas I'm and right now there's no there's no Dom elements so what are we selecting and the answer is were selecting nothing okay this is going to return you an empty selection so we can put stuff in there by entering updating and then exiting yes so we see we call this function called data and we pass in I'm gonna say I want to call this data which is gonna get confusing for us in a bit um but we're gonna pass in do you want to give it another name so that's what what is that in our example right now ah that's the is that the wali oh that's a good point okay so let's call this I'm you know what let's call this the I'm trying to I'm trying to I like the flower data it's like the individual data from that one flower I'm gonna let's separate this away from our flowers and say this is just conceptual got it and because if we try to use the actual numbers okay low too confusing so let's just say it's conceptual and it's I'm you know our numbers let's say values or something that's a better one yeah values and this is will pass in values and and we want to also actually let's just do this I'm and what this function does is it returns and something I'm it returns okay actually I'm gonna I'm only today gonna explain enter because we have no time for update next day I'm so this is enter dot append okay that's it and in this series of four functions is what you see the most often in d3 let me explain what's happening so a dog data d3 will go and look at this set of values so if you like okay this is a SVG and this is our data and we have 0 5 10 20 100 we have 5 elements and hey look there's no we see absolutely no elements okay that means we have to enter all of them and that means in this enter that enter what's happening is so data will say okay what we need to do to make our Dom be the same as our data is that we need to go and create five elements and bind each of these data to those five elements got it so a dot enter I'm you that's how you're accessing this enter selection and in the dot append you're actually creating the path elements in the DOM and so what it would do is like let's say these are our path elements so you have multiple path elements within one SVG yes so this whole function will create these five path elements in this SVG and it will in the SVG I'm sorry in the path element itself it will remember this zero this fine this 10 this 20 and this 100 got it and then what we might want to do is paint adder let's say these are circles yes and and then I'm gonna say this is a circle and we can say I want the radius to be my data and so I'm like doing a little thing but like this is a function you're getting 0 5 10 20 that's where you return the individual element from the data array which is called values in our case yes so yeah so this is gonna be like drawing a circle with zero radius five radius ten radius 20 radius 100 radius and and so that's that's that's what's happening so and when we say like update and exit then what DT does is when we call this dot data function it will let's say we now have these three these two elements in our SVG because we created it before now we're like okay this is the new data set that we want to update you then i'm d3 we'll know I'm okay we need to we we already have two elements and we need to create three more so that we can match it got it and I'm gonna go this this might be a little too much information what do you think then go crazy move why if we pass in a key a key function let's say that I'm just gonna say that the key for each of these elements is the data itself and let's say that this data so let's say that this is I'm five and this is 50 then d3 one know that we want to keep this one we want to enter these four and then that we want to exit this 50 okay that but we don't need that right now because we're gonna have a back set of data we just want data enter a pen and and do we have time for that yeah let's do it okay are you sure yeah great let's creep this far okay so I'm gonna say d3 select direct I make a new cell I'm still doing it here okay we can do it here I'm the one thing is that we need to return the SVG element at the every end yeah so I would say like return SVG just there yeah but here I'm gonna say d3 select yes I'm selecting the SVG and then now I'm gonna chain all these functions so now I'm gonna select oh I see ah that's why it's doing that select all yes the path is what I'm doing here yes and then I'm going to the data in this case is the flower hour sighs petals okay the data is the flap I'm looking over here the weight force that's helping me I don't need this extra function right could just enter this right now yeah don't you the key function and I don't need any arguments to enter that's just yeah that's here I go I'm entering the data yes and with each record but this is not an array so it's each property oh I'm sorry you you have to put that into an array oh okay because it's just one otherwise we could have done our magic stuff up here we could have made all the flowers yes out of that full right we could have made flowers and made all these objects each one got it yeah okay so we have this one we're just entering the one but still and then we append oh and I think I'm gonna just is it crazy for me to do this oh you need the dot though yeah that's her hmm and then a pen yes and then this I'm appending to the Dom yes I'm appending just the path yes so what you don't need to specify what's going on in here with what path so trying bad try executing that and then let's inspect if we go back up uhhuh let's inspect this Oh so I execute it and then I'm gonna do inspect and extra Zoe I can you inspect right here perfect I see the view box SVG mmhmm but there's no okay let's go back and see what we did wrong don't oh oh oh sorry I'm too right now and the little bit of difference is that we don't need a quotation marks here because that's the SVG variable yeah so this is the actual SVG right man it's this one right here yes it's that the thing that's starting everything yes oh and that you do running it I don't have to click that I just know who was a command enter like this a shift enter shift enter yeah and then inspect oh man why does it do that okay but I mean they're just in the wrong place oh yeah we do right here it yeah perfect path we have one path why do we only have what we only have one open we approach that multiple pedals oh we no no okay can we hold on hon um it is because and we only have one flower so actually I'm I'm gonna just uh actually select all the groups SVG has a thing called that group l oh you mean actually just say groups IgG like this yeah within quotes yes okay we're gonna make a bunch of paths we're gonna make a bunch of groups groups and so um do you trust me can i yeah we don't have much better sorry uh so what we're gonna do is and we're just gonna call this flowers and and what this does is makes a group element for each flower we have which right now is just one and so like you said we should be seeing one group element in here okay I see that and then what we want to do because we've structured our data this way we've structure we have like a date like an object like a nested object right and so now we want to do is for each flower we want to select all the paths but that each flag on it for each flowers like to all the poo and then we're gonna go get the petal yes we're gonna get past for each flower group we're going to get past the data that's been bound on it and the data that's been found is this data so then we can access the dida paddles and which means that it's going to return our array of petals that's that's right yeah right here I'm bad at this right here and and we can say enter append path and now we should be able to go up here in spa the SVG and hopefully in each group we will see the correct number of passes awesome but the paths don't have paths in them no so now I think you should do the honors for this one so go here for each of the paths let's give it the D attribute so dot adder oh this is now giving an attribute and then yeah so so in quotations oh yeah like the first thing we learned yes yeah that's it all the way up wherever that was Thanks right there yeah equals yeah okay it's all coming together yeah get where you're going to pass in the function where the input is the variable D and then we're gonna say oh I don't think okay okay um is gonna be just a d dot petal path because that's what we have we have the petal path right here and that's what we're accessing and so now if you close it run it but where are we getting the angles not yet not yet not yet okay and so now if you run it I it's because you need to turn right things oh yes I'm in soo no let's do dot utter on the path and do transform D and then that's where you can a string literal right okay yes I forgot what the transform looks like somewhere up here right yes transform but and rotate I just rotate for this one I'll tell you why in a bit um you do yes perfect but you want to close that in parentheses a rotate parental and paren close paren and now we should be able to see something is correct I'm terminus floor so that just but I can just translate that a tiny bit and then the reason why we have the group element is so that you can translate no don't don't do that one you want to be transforming the entire power of this adder well you wanna you don't want that transform transform and then I can just make something up here like translate like I can just move it over a little bit right now yes I'm really excited Oh whoo man Justin move it over enough I think you should move it over I the pedal signs that you declare laptop or you can do that too where where did I do that why not use it we're not using size scale right now which we could but we're not yeah well then do run this there we go okay so now I could change the movie right I could say like go back to Days of Thunder and we only have three pedals and do you want to put the size in there oh yeah we got we got this okay we totally got this okay so I'm in the transform part instead we can do we can return a function again and I'm gonna make this into a string literal oh I see what you're gonna do and here I'm gonna say mm 0.5 pedals signs pedal sighs don't you wanted to divide it by two or no no because we did for B I did do other people got it though yeah do you wanna do this last part is like so rushed idea that I never I always go like an hour longer than I think that I'm gonna go I never have something yeah but look look at this though pet size and now if you do one to go to walle again cuz it has 92 that's awesome and if I wanted to just just say like right now it's just using default stroke and fill those would go as attributes and they would end up like right down here you can either do them on the path or the group group they'll inherit the attributes right yes I'm gonna do a really quick thing and in the next few minutes I'm gonna do it all the rivers in the next three minutes okay all the flowers I'm going to show you that we did all of hard work already okay and the rest is actually just gonna magically happen okay okay so I'm gonna say I'm gonna oh yeah yeah I'm gonna explain it I'm so we're gonna say this is flowers data and we're going to go through all of our data and we're gonna loop through them and we're going to for each of them return the same okay return the same information and I'm going to just put these calculations into my function for looping through instead I'm and then if we've done this part correctly then we should have flowers data and seriously if we did this part correctly and I hope we did then we should draw all the flowers on top but so you see that a little translate to put them next to each other you're putting that in there I'll go talk to the camera okay game thank you everybody for watching I'm sorry this is gonna end very abruptly so I'm just warning you Shirley's adding a little bit more codes getting very abruptly a very appropriate song for right now would be this thank you 8i 2.0 brockman new members so like I said this is gonna end very abruptly we're not sleep yet you have about 30 seconds to get to this tonight I'll be back next week sometime if you know and maybe sure I surely will and I will discuss this and if there's anything I can do to like revisit this to kind of clean up or explain one last thing but as soon as this is over well soon as I get to it I'm gonna take the link to this observable notebook I noticed it says private so I'm gonna make it no longer private and then I will add a link to the observable notebook in this video's description so you'll be able to find that observable notebook and if you make stuff with it I think tweet it at me at Schiffman or surely on Twitter is at sxyw you I want to have like I need a button then it just like pops up here one of these days all these overlay stuff sxyw you yeah yes got it so tweet it at us so like a little snapshot of the flowers you make like snapshots nother thing people say screenshots whatever and then also maybe a link to your observable how and and because we'd love to sort of check that out I'm curious to see what people do with this alright how are we with our flowers I tried to do something fans don't awesome I love it and but I'm gonna do one thing one extraneous thing because then it will make it a lot prettier you can't resist I can't I'm sorry I'm sorry we got this doh oh okay Kay Kay Kay Kay okay this is actually proving to be more than I expected but we're committed now okay so I'm committed to this and I don't I'm not even gonna explain it you're your keyboard is hard disaster okay maybe it's not interpolate okay let's do interpolate warm we're gonna make it work we're gonna make it work the attribute d3 dot interpolate warm and then it takes a number between 0 and oh no it's 360 oh no no no no no no that is that that is the right thing down on petals numb petals I you know what Dena and we'll divide by 360 it needs to be a number between 0 and 1 like a rainbow colored thing no you're not allowed to do anything we're code have to stop you have to stop first of all it's now officially eighty degrees in this room oh my god because I had that decay and they fixed the air it was like working really well now it's like super hot in here again I'm very sorry this is good and super abruptly thank you so much for doing this thank you for people will ask their questions that comes up I will if you have questions and I can't answer them I will bug surely and answer them thank you everybody for tuning in and watching please make something with this I'm gonna I guess this is the URL even I just can I quickly make this public kind of just a published publish and people oh and it's actually just like this yeah so there this should be easy for people to find on somebody if somebody could post it in the chat that will be great I'll add it to the video description like an hour from now probably and thank you so much see you next week
