With timestamps:

00:00 - hello this is a train welcome its
00:03 - flowing into the station and it's
00:04 - brought with us a map of the world and
00:06 - what the craft of the world is showing
00:07 - you is little dots everywhere and
00:09 - earthquake has occurred in the last 30
00:11 - days and the dots are actually sized
00:13 - according to the magnitude that
00:14 - earthquake and that's exactly what I'm
00:16 - going to build in this particular coding
00:18 - challenge so a little while ago I built
00:20 - this from scratch and it involves a lot
00:23 - of pieces so the point of this coding
00:25 - challenge is really to learn about the
00:27 - idea of mapping data in a world like the
00:31 - earth that the sphere in the
00:32 - two-dimensional space so you need to
00:34 - learn about projections latitude
00:36 - longitude how to convert latitude
00:37 - longitude to pixel XY space and how to
00:40 - do that based on what you're how to get
00:41 - a data source in how to then draw it and
00:43 - so that's what I'm doing the pieces here
00:45 - is I'm getting this image of the world
00:46 - map from an API called mat box yet but
00:50 - certainly you could you know you have
00:51 - your own image you drew an image you
00:52 - design an image you got it from
00:53 - somewhere else as long as you know how
00:55 - that image was made you can you can do
00:57 - the same kind of project that I'm doing
00:58 - in this particular video I'm also
01:00 - getting earthquake data from the USGS
01:02 - the United States the US Geological
01:04 - Survey they have lots of wonderful
01:06 - scientific data that you can experiment
01:08 - with and then I'm using p5.js to draw
01:11 - the image of the world and then draw all
01:13 - these circles now one thing I want to
01:15 - mention is towards the end of this video
01:17 - I work on something to try to scale the
01:20 - size of the circles according to the
01:23 - magnitude of the earthquake and I have a
01:25 - little bit of math backwards for
01:26 - probably about five minutes of the video
01:27 - someone in the chat points it out and
01:29 - then I correct it so if you're watching
01:31 - and you realize like oh no my reference
01:32 - backwards there that's what happens but
01:34 - by the end I'm pretty sure I have the
01:35 - math right but if I have it wrong boy do
01:37 - I know that I'm going to hear about it
01:38 - in the comment so I look forward to
01:40 - hearing your feedback your suggestion I
01:41 - hope you make something with this you
01:42 - share it with me at shipment on Twitter
01:45 - and that you enjoy this ride on the
01:49 - coding train see you soon okay I'm
01:52 - starting this coding challenge now here
01:55 - we go so the first thing I'm going to do
01:57 - there's a lot of pieces to this but the
01:59 - first thing I want to do is just see the
02:00 - map of the world on the screen on the
02:03 - canvas I want to draw it and you know
02:04 - there's a lot of your ways you could do
02:06 - this you could find some JPEGs go draw
02:09 - your own map you could scan them half
02:12 - the question you have to answer for
02:13 - yourself by the way though one thing you
02:15 - have to remember is right the earth is a
02:17 - sphere so and I'm going to do this
02:19 - visualization in a 2d space a flat
02:22 - two-dimensional space so when you take
02:24 - the information that's wrapped around
02:26 - the sphere and peel it off into a
02:29 - two-dimensional space you have to apply
02:31 - some math and what that is typically
02:33 - referred to as a projection there are a
02:35 - lot of different math projections this
02:39 - is one from 1482 this is not something
02:41 - related just to coding and computer
02:43 - graphics the idea of how do you
02:44 - represent spherical information
02:46 - spherical imagery on a two-dimensional
02:48 - service a surface there there are lots
02:51 - try out history I'm gonna scroll all the
02:52 - way down here there's one that's kind of
02:54 - I think a nice tip find it now
02:57 - illustration of what I'm talking about
02:59 - you could imagine if you had an orange
03:00 - and you peel the orange and you
03:02 - flattened out the peel what would it
03:04 - look like it might look like this one
03:05 - over here Mercator Mercator projection
03:09 - is one of the kind of standard ones and
03:13 - you know this this looks kind of like a
03:16 - little bit oh this is like Mercator
03:17 - projection now you can see though that
03:19 - what happens is things that are close to
03:21 - the top or close to the bottom when you
03:24 - sort of stretch out the poles of the
03:25 - earth become really really large so
03:28 - Greenland over here is incredibly
03:30 - massive as compared to say Africa which
03:32 - is kind of close to this which is there
03:33 - right with the equator which is not at
03:35 - all accurate so I think there are a lot
03:37 - of complex questions about the sort of
03:39 - you know Western view essentially of a
03:42 - lot of these map projections and I think
03:46 - that's a really interesting topic but
03:47 - I'm getting way off track here but it's
03:49 - important to mention really think about
03:51 - how you're presenting information and
03:54 - what you're highlighting and what you
03:55 - know what's up versus down what's center
03:57 - versus and so there's a lot of design
03:58 - considerations that I think are very
03:59 - important to mention but what I'm going
04:01 - to use is something of a standard these
04:03 - days called web Mercator and web
04:06 - Mercator is used from what I understand
04:09 - by most of the online mapping tutorials
04:11 - refine like Google Maps Open Street Map
04:13 - MapQuest
04:15 - that even exists probably does overlay
04:17 - all these who loves MapQuest out there I
04:19 - apologize I'm sorry it's wonderful I'm
04:21 - going to MapQuest that do you say that
04:23 - so they might said it anyway um so
04:25 - this is going on way too long okay so
04:28 - what I got to do what I'm going to do is
04:30 - I'm going to grab a map image from Matt
04:34 - box and then I need to understand what
04:36 - projection it's using so that I can
04:38 - apply the math to convert my latitude
04:40 - longitude to an XY location in that
04:42 - pixel canvas okay so the map map box you
04:46 - can you can find out information at Matt
04:48 - box.com you'll have to sign up for an
04:49 - account and get an API key and all that
04:52 - sort of stuff I'll include links in this
04:53 - video's description to where you can do
04:54 - that and I'm going to use something
04:56 - called a static map so Matt box has a
04:58 - lot of features that you can embed a map
05:00 - that's zoomable and you can put those
05:01 - little pins in it and do all sorts of
05:03 - stuff with it I just want to use it to
05:04 - get an image so the way that I can get
05:07 - an image for example is through a call
05:11 - an HTTP request to a particular URL so
05:14 - I'm going to grab this URL and what I'm
05:17 - going to do is I'm going to go to my
05:19 - code and I'm going to say I'm going to
05:21 - add a function preload and I'm going to
05:26 - say I'm going to have a variable called
05:28 - map image and I'm going to say map image
05:31 - equal load image and notice here that
05:35 - there's this piece of the code it says
05:36 - your access token so this will work
05:38 - right now if I were to run it I need to
05:40 - get my API token which I'm going to do
05:42 - right over here I already am on the page
05:44 - and it's right here I'm going to click
05:47 - copy so if you just go to this
05:49 - particular URL that's where you can
05:50 - create your own access token if you can
05:53 - painstakingly copy behind if you want
05:55 - I'll probably regenerate it later and
05:58 - then it won't work but okay so I put
06:00 - that in and then what I want to do is
06:02 - I'm going to say create canvas now
06:05 - you'll notice there are a bunch of
06:06 - arguments in here this is in this path
06:09 - this is the latitude longitude of the
06:11 - center that's the zoom level and then
06:13 - somewhere in here at 600 by 600 that's
06:15 - the pixel resolution that I'm getting so
06:18 - I'm going to now go and say create
06:20 - canvas 600 600 and then I'm just going
06:26 - to say image map image at 0-0 so if all
06:29 - goes according to plan when I go and run
06:32 - this code in the browser we see there it
06:34 - is whoa what kind of crazy
06:37 - angles Matt fig did I get oh my good so
06:40 - I wanted a flat nap
06:41 - I might have to adjust the API calls I
06:47 - just made interesting to see that it
06:49 - does that what I wanted is a oh I'm in
06:54 - the class I'm no oh dark
06:57 - I think dark beat so there's a lot of
06:59 - things like dark v.9 here using them so
07:04 - why is it angled oh you know what it is
07:06 - it's because there's a lot of arguments
07:08 - here there's latitude longitude we can
07:10 - look at the documentation zoom level and
07:13 - then this is like an angle I think so if
07:15 - I change this to zero
07:18 - there we go I flattened it so I don't
07:20 - know what the default is is this
07:22 - somewhere I'm guessing like in like San
07:24 - Francisco or something could possibly be
07:26 - but what I want to do now is I want to
07:28 - see a world map so I'm going to change
07:30 - the latitude and longitude I'm just
07:31 - going to change it to zero zero which is
07:33 - going to be at lab right there and then
07:35 - not really the center of the world this
07:36 - is a sphere like what's the center huh
07:38 - but our latitude longitude Center I'm
07:41 - going to change the zoom level to like 4
07:44 - and then I'm going to hit refresh and we
07:47 - see oh let me zoom out some more I'm
07:49 - actually the change the zoom level to 1
07:50 - and we can see there we go so I've got
07:52 - the world map now I want to see a wider
07:56 - picture of the world map so I'm going to
07:58 - change let's change this to 1024 by 512
08:03 - I think this should behave nicely for us
08:05 - up but if I do that I want to change
08:08 - create canvas to 1024 512 so let's
08:12 - refresh that whoops oh it's just super
08:15 - big now
08:16 - whoops nope sorry I got a zoom out here
08:19 - a little bit so there you go so now you
08:21 - can see I've got the world map with this
08:23 - dark theme and there it is in my p5.js
08:26 - canvas we're getting somewhere
08:27 - now if I wanted to do more of this I
08:30 - would suggest if you're watching and you
08:31 - actually pull this code I would probably
08:32 - do something where I make assess avaria
08:36 - Buhl's
08:36 - for width and height and zoom level and
08:38 - all that sort of thing but I'm just
08:39 - going to leave this stuff kind of
08:40 - constant for right now I am going to
08:43 - though
08:45 - I am yes not only that stuff constant
08:47 - right now so now that I have got what I
08:48 - need to do is figure out let's say I
08:51 - have a latitude longitude so let's say I
08:53 - have a latitude longitude that is the
08:55 - latitude of zero longitude is zero now
08:58 - it might be worth me refreshing your
09:00 - memory if latitude and longitude are
09:02 - familiar concepts to you but you've sort
09:04 - of forgotten what exactly they are and
09:06 - how they work so let's say I were to try
09:08 - to draw as best as I could spear and I
09:12 - can kind of represent it with these
09:13 - lines and by the way what are these
09:15 - lines these lines are longitude so
09:18 - longitude are the line I can think of
09:20 - them as like long because they go too
09:21 - long up and down but there are the
09:23 - vertical lines and they're really going
09:24 - to map to our X location because we're
09:25 - going to take this and kind of unfurl it
09:29 - so to speak
09:29 - onto into a flat rectangle so we want
09:32 - those longitude lines to end up like
09:35 - this so these are the X values our
09:38 - longitude and then the Y values are
09:41 - latitude and you know this being perhaps
09:44 - like a zero zero the Y values then being
09:48 - latitude okay now there's another sort
09:50 - of key aspect of this what is the range
09:52 - of these values so they are described as
09:55 - angle essentially good because there's
09:57 - angles of rotation in the way around the
09:58 - center of the earth and so if there's a
10:01 - full rotation of 360 degrees we can kind
10:04 - of go all the way this way to 180
10:06 - degrees and then go all the way this way
10:08 - to negative hundred eighty degrees the
10:10 - thing is I'm going to need to use
10:12 - radians as a measurement in my code and
10:14 - so that's something we're going to have
10:15 - to sort of think about this is PI and
10:17 - this is negative PI and I have other
10:19 - videos that kind of go over the basics
10:20 - of radians and units of measurements
10:22 - that you could be watching try to find
10:23 - if that's a new copped concept for you
10:26 - now latitude on the other hand will gone
10:29 - all the way around it's just going
10:31 - halfway up and halfway down in a way so
10:33 - the range is between 90 and negative 90
10:35 - and I probably got that wrong I think 90
10:37 - is north and negative 90 is up by the
10:39 - way if you look up the lat lunch your
10:41 - latitude with you if you google like a
10:43 - latitude longitude latitude of New York
10:45 - City you'll find the number will be
10:47 - something like 74 degrees west
10:50 - so 74 degrees this is actually 180
10:53 - degrees west this is 180 degrees east
10:56 - this is 90 degrees north
10:58 - this is 90 degrees south so the negative
11:00 - numbers are what we need to use in the
11:01 - math but you'll often see them listed as
11:03 - north south west east which is something
11:05 - you might need to convert depending on
11:06 - what how your data is formatted okay so
11:08 - hopefully that clarifies that a little
11:10 - bit so I'm actually going to what I'm
11:13 - going to come back over here and I'm
11:15 - going to do a couple things I'm going to
11:16 - do I'm not absolutely called center
11:17 - latitude Center longitude and then I'm
11:20 - just going to have a variable called
11:21 - latitude a variable longitude I would
11:23 - like to pick a city somewhere in the
11:25 - world that's not the United States that
11:27 - may be I know approximately where it is
11:30 - even though I've got the sort of bad
11:32 - American sense of geography so let's
11:35 - look for a city where where there a lot
11:40 - of trains well this lot trains did
11:42 - Europe and Asia ever where there's
11:45 - trains that's a bad bad clip let me let
11:47 - me look for let's look for Shanghai
11:49 - latitude longitude so you're seeing here
11:54 - we've got thirty one point two three
11:56 - zero four North 100 to one point four
11:58 - seven three East so let's take this into
12:01 - our code and let's put that here I'm
12:04 - going to just comment this put this in
12:06 - comments here so the latitude is the
12:09 - north number and the longitude is the
12:12 - East number and it's not negative if
12:14 - we're west it would be negative and what
12:17 - I want to do now is draw is draw the
12:21 - location it converts to its X&Y so what
12:24 - I need to do here and I don't need the
12:25 - draw function I need to figure out how
12:28 - do I convert those things ah guess what
12:30 - we're going to just look up the formula
12:32 - it's going to look kind of terrifying
12:33 - but I think I'm going to write it for
12:35 - you in code and it will hopefully be
12:37 - possible so here we are in web Mercator
12:39 - and web Mercator is based on what what
12:43 - we need to do is to calculate this X&Y
12:45 - we need to apply this formula so the
12:49 - reason why this number is 128 is web the
12:52 - standard of web Mercator is that it's
12:55 - giving you the XY for a square where the
12:57 - top left is 0 0 and the bottom right is
13:00 - 256 256 so the centre is 128 128 I think
13:04 - actually nap box does but tiles that are
13:07 - 512 so I think I actually need to change
13:09 - that number to 2
13:10 - 56 so that really depends on the kind of
13:12 - again the system you're using the zoom
13:14 - level is this value of how far zoomed in
13:17 - or zoomed out this lambda here is
13:19 - longitude and the letter of the greek
13:22 - letter fee is latitude so if i write
13:26 - this code and i'm just going to kind of
13:28 - do this a little bit i'm going to write
13:29 - a function called i'm going to write a
13:32 - separate function for x and y i could
13:33 - wrap this into one function i'm going to
13:35 - write a function called web Merc I'm
13:38 - just gonna call it Merc Merc X and it
13:41 - takes Merc X takes in a longitude value
13:44 - and now what I like to do sometimes with
13:46 - formulas like this is I'd like to break
13:48 - them into parts rather unnecessary but I
13:51 - think it'll make us less likely to make
13:53 - a mistake so I'm going to just do the
13:55 - first part I'm going to call it a and
13:57 - that is 128 divided by PI times 2 to the
14:01 - zoom level right so 180 divided by PI
14:05 - times 2 to the zoom level so what is
14:08 - this we've the zoom level is right now
14:10 - is something that I've defined here as 1
14:13 - so this is something that I could make
14:15 - into a variable I really should make it
14:16 - into a variable and I'm going to say
14:18 - zoom equals 1
14:20 - so again I should put that in here but
14:24 - I'm gonna leave that out right now okay
14:25 - so so now the zoom is taken care of
14:29 - great you know what I could do actually
14:31 - is whenever I could give this Merc X
14:34 - argument longitude and zoom level but
14:36 - I'll just use it as a global variable
14:37 - okay that's barrei now I'm going to say
14:40 - var be the second part if I go back to
14:42 - the formula is just the longitude plus
14:45 - pi okay so longitude plus pi but guess
14:49 - what one thing I need to make sure I'm
14:52 - going to have an issue I'll get to it
14:54 - later
14:54 - whether its degrees or radians is
14:56 - important the formula is assuming
14:57 - longitude is going to come in in Radian
14:59 - so I have to make sure I remember that
15:00 - now I can just say return a times B
15:02 - right because it's this 128 divided by
15:06 - PI times 2 the zoom level times the
15:10 - longview plus pi okay great now let's
15:12 - write 1 for y Merc why latitude and we
15:18 - can see here that the parts a little bit
15:19 - more complex once this part a is exactly
15:22 - the same let's make part
15:24 - be just this tangent part of the
15:26 - equation so I'm going to say Part B is a
15:30 - tangent of pi divided by 4 plus C which
15:38 - is the latitude divided by 2 latitude /
15:40 - - okay
15:41 - that's B and C is law pi minus log of B
15:47 - so PI minus log of B now you might
15:50 - notice right here that this says Ln Ln
15:54 - means natural log so logs have a log
15:58 - what a logarithm is that merits or of a
16:00 - separate video but if you see LM it
16:01 - means natural log base E which is a
16:03 - special wonderful number but in in most
16:07 - of programming frameworks if you have
16:10 - the log function it's doing by default a
16:12 - natural log and you can obviously adjust
16:13 - that to a different base but so this dis
16:16 - mapped to it perfectly here log of B
16:17 - okay so now I need to say a times a a
16:25 - times c right a times c because b is
16:29 - just for the purpose of this so a times
16:31 - C this is now giving me the Y location
16:33 - okay I think we're doing well here now
16:36 - what we can do is say um so one thing
16:39 - I'm going to do which is kind of
16:41 - unnecessary but I need help a lot of
16:44 - people I don't even get messages of how
16:46 - I don't need to do this but it helps me
16:48 - think about it I actually would like to
16:50 - work from the center so I'm going to
16:53 - translate with / Q height divided by two
16:56 - if I do that look that moves the origin
17:00 - point from the top left to the center
17:01 - and I'm going to go to my code I'm going
17:04 - to refresh it and you're going to see
17:06 - now the image is the origin is in the
17:08 - center so I'm going to change image mode
17:10 - to center so that now the image is drawn
17:13 - from the center so now I'm back the
17:16 - reason why I'm doing that it's a little
17:17 - bit weird but what I want to do is I
17:21 - want to draw everything the value that
17:24 - I'm going to get from this math is
17:26 - relative to a center point so it's going
17:29 - to be a little easier for me to kind of
17:30 - figure that out this way so what I want
17:32 - to do first is I want to say var Center
17:36 - X E
17:37 - old Merc ex of launch of longitude
17:44 - sender longitude and center y equals
17:50 - merc y of center latitude then i want to
17:56 - say x equals merc x mercs x of that of
18:02 - the longitude this is the Beijing I mean
18:04 - sorry Shanghai longitude and then the
18:08 - Shanghai latitude and then what I want
18:11 - to do is where I'm going to position
18:13 - them on the screen is the difference
18:15 - between those two points
18:17 - so if CX CY is the center wherever that
18:20 - is relative to the center of the window
18:22 - is its location - that center location
18:24 - so now I should be able to say let's
18:27 - make a nice little circle with some
18:30 - alpha and let's draw an ellipse at that
18:34 - x + y 20 by 20 pixels let's not be
18:37 - afraid
18:37 - let's hit refresh Earth okay so it's not
18:40 - there what's the problem
18:41 - I forgot about my units of measurement
18:43 - so this is definitely a problem here
18:45 - which is that these measurements are in
18:47 - degrees and the fact is the calculations
18:51 - are assuming radians so what I need to
18:54 - do is convert these things beat them to
18:56 - rating so I'm just going to add a line
18:57 - of code here that says longitude equals
19:00 - radians longitude and I'm going to say
19:03 - latitude equals radians latitudes and
19:06 - and the reason why I'm going to do this
19:08 - is I know that when I go get that
19:09 - earthquake data I'm going to get values
19:11 - and degrees because I've looked at that
19:13 - data before okay so now I'm gonna hit
19:15 - refresh it's there but it's not in the
19:17 - right spot the reason it's not in the
19:18 - right spot is remember I said map that
19:20 - box actually uses tiles 512 by 512 and
19:23 - so I'm going to change these to 256 256
19:28 - and I'm gonna hit refresh and there we
19:30 - go that looks right to me
19:31 - somebody tell me that's not where
19:32 - Shanghai is let's go to the other side
19:35 - and let's look at Vancouver Vancouver
19:38 - latitude and longitude and let's try
19:42 - that out
19:42 - I'm going to grab this here and put this
19:45 - into my code and so now I need a
19:50 - latitude of forty nine point two eight
19:53 - to seven and in the longitude not of one
19:56 - twenty three point one 207 positive
19:59 - because it's West I need to add the
20:02 - negative number there okay and here we
20:04 - go let's go back to our code it refresh
20:06 - there somebody tell me that's not where
20:08 - Vancouver is I'm pretty sure I've
20:09 - pinpointed it now that circle is kind of
20:11 - large really shouldn't I shouldn't do
20:13 - anything that might cause me to discover
20:15 - a mistake but I'm just going to make
20:16 - that circle a little bit smaller hit
20:19 - refresh and I think that's that looks
20:22 - right dead-on where Vancouver is right
20:23 - somebody from Canada tell me if I've got
20:25 - that wrong okay so we're doing well here
20:28 - so now I've actually done almost
20:31 - everything because what I have now is a
20:33 - framework for re4 taking the latitude
20:36 - longitude and converting it to an XY
20:37 - that I can draw so let's go get some
20:40 - data that has lots of latitude and
20:41 - longitude in it so the data that I'm
20:43 - going to use is from the US Geological
20:45 - Survey here is the page usgs science for
20:51 - a changing world let me tell you
20:52 - something
20:52 - science very important wonderful thing
20:55 - I'm all about the science I wish I knew
20:57 - more about science and what they have
20:59 - what USGS website is in addition to lots
21:02 - of things I'm on a page which I'll link
21:03 - to in this video's description is it'll
21:05 - give me a data feeds of earthquakes so I
21:07 - could get just significant earthquakes
21:08 - in the past hour I think just to get
21:11 - some data but not too much data let's
21:13 - get all earthquakes in the past day so
21:15 - I'm going to copy paste this link
21:18 - address and I'm going to go to my code
21:20 - and in preload I'm going to say
21:23 - earthquakes
21:26 - I'm going to make a variable called
21:28 - earthquakes and in the preload function
21:31 - only move this low I need more space to
21:33 - look at this code I'm going to go here
21:35 - and I'm going to say earthquakes equals
21:39 - load strings there and I'm now notice
21:43 - what it's actually loading it's a CSV
21:46 - file so that file is actually a comma
21:49 - separated value file it's essentially a
21:50 - spreadsheet and I can look at it this is
21:53 - a different one but if I go to the I
21:55 - downloaded one already which is right
21:57 - here this is actually everything from
21:59 - the last month and you can see here it's
22:01 - a
22:02 - it's a table it's a table which starts
22:04 - at time latitude longitude here's the
22:07 - time here's the latitude here's the
22:09 - longitude and here is then there's some
22:13 - other things magnitude is something
22:15 - thatís I want to look at because we can
22:16 - use magnitude to decide how large to
22:18 - maybe draw something on what color to
22:19 - draw something but I'm going to leave
22:21 - most of those kind of interesting design
22:22 - decisions to you to do something more
22:24 - creative with or maybe you're going to
22:25 - do map different kind of data but what I
22:28 - really want to focus on it's just first
22:29 - getting those latitude and longitude so
22:32 - the way I can do this now is there is a
22:35 - function in p5 called load table this is
22:37 - such a simple bit of data that actually
22:38 - think using load strings a little bit
22:40 - simpler I'm going to redo this challenge
22:41 - making a 3ds version of it in processing
22:44 - and use load table there just to show
22:45 - the difference that will come sometime
22:47 - eventually so now what I'm going to do
22:49 - here in setup is once I have the data
22:52 - I'm going to say for VAR I equals 0 I is
22:55 - less than earth quakes dot length so low
22:59 - string will give you an array of strings
23:02 - each string being a line in that data
23:04 - file so all I need to do with each one
23:06 - of those is call a function called split
23:09 - so I'm going to save our data equals
23:12 - earth quakes index I dot split then I'm
23:18 - going to write something kind of weird
23:19 - here so what I want to do is say what is
23:23 - the delimiter that I want to split
23:24 - everything up by what I want to split
23:26 - everything up by a comma but why didn't
23:29 - I just put a comma in quote because
23:30 - normally in JavaScript you'd put a
23:31 - yellow string in quotes I use these
23:33 - forward slashes this is something known
23:35 - as a regular expression which is a
23:36 - sophisticated way to match a particular
23:38 - pattern of text and I'll link in this
23:41 - video's description to a whole set of
23:42 - tutorials on regular expressions but
23:44 - here we get simply the only pattern I
23:45 - want to match is a single comma so
23:47 - that's going to be easy so now if I do
23:49 - that I'm just going to say console dot
23:51 - log data and let's take a look at what
23:54 - we get in the console I'm going to kind
23:56 - of move this over here we can see I'm
23:58 - getting a whole bunch of a arrays so I
24:01 - get an array and I can see here the
24:03 - first element is the timestamp the
24:04 - second element is the I believe it's
24:06 - latitude first then longitude yeah it
24:08 - has to because that's negative 166 some
24:10 - other data about the earthquake this 2.2
24:12 - is the magnitude on the Richter scale
24:14 - and the chapel 20 odd split with the
24:16 - comma with it with quotes as a string
24:17 - does work also but in case you end up
24:20 - wanting to do more elaborate splitting
24:21 - it's kind of useful to have the option
24:23 - of a regular expression okay so I am
24:26 - going to now I am going to what am I
24:32 - doing here
24:33 - so what do I want to do the latitude is
24:36 - the first it's not the first if I go
24:40 - back to this it's this is element 0
24:42 - element 1 element 2 so latitude is index
24:44 - 1 of that array latitude is data index 1
24:49 - longitude is data index 2 and then guess
24:53 - what all you do is take this this exact
24:56 - same code once I get that latitude
24:58 - longitude convert it to X&Y draw a
25:01 - little circle and now we will see I'm
25:04 - gonna take out this console.log
25:05 - something I need that and move over here
25:08 - and I'm hit refresh and there we go
25:10 - these are all the earthquakes that have
25:13 - happened in the last what was it the
25:16 - last hour I think did I do
25:17 - let's go get the last now that we see
25:20 - this is working let's go grab let's go
25:23 - wrap all earthquakes from the past 30
25:26 - days that's going to be a lot to
25:30 - ambitious of me so I'm going to I'm
25:33 - going to just paste this here and I'm
25:36 - going to do this and I'm going to
25:38 - comment out this line of code so I can
25:41 - now which is awkward to do here I'm
25:44 - gonna paste this end up time I must have
25:47 - gotten rid of a quote or something yep
25:48 - got rid of the end there ok so so many
25:51 - ways I could make this code a little bit
25:54 - nicer but that should do now I'm going
25:55 - to refresh we go it's going to take a
25:57 - little while a lot of data actually
25:59 - didn't take that long look at that so
26:00 - you can see all the earthquakes from the
26:03 - last month and you know things that I
26:05 - could do to this I could first of all I
26:10 - could think about zooming in on a
26:12 - certain part by changing the zoom level
26:13 - on the width and the height of the map
26:15 - and that sort of thing you want to be
26:16 - careful you know again the way that the
26:19 - way that map box works if you start
26:20 - playing around with a zoom I would if
26:22 - you want I would I would not make
26:23 - with our height greater than 1024 and it
26:25 - actually seems to work really nicely if
26:27 - you keep that as a multiple of like 256
26:29 - or but I don't think that should be
26:31 - required but you know play around with
26:33 - it I could you could change but also you
26:36 - could just think about animating it you
26:37 - could look and one thing I would like to
26:39 - do that I think is worth doing is just
26:41 - drawing these with the size based on
26:44 - magnitude so let's figure out let's look
26:46 - at how we would do that so right now
26:49 - where I'm drawing the size is just here
26:52 - 8 comma 8 so what is the actual size in
26:55 - the data it is latitude longitude depth
26:59 - magnitude so I'm just going to use the
27:01 - magnitude which is one two three index
27:03 - four so let's go back to the code and
27:06 - I'm going to say var M for magnitude or
27:13 - magnitude equals data index three now
27:17 - I'm gonna do something wildly not
27:19 - accurate but I'm just going to get
27:20 - started with its just so we can see
27:21 - something I'm going to say var diameter
27:26 - equals map the magnitude from a range
27:28 - from zero to ten to arrange from zero to
27:31 - two to a sixty so I'm just going to take
27:34 - that Richter scale magnitude and map it
27:37 - again there's lots of mathematical
27:38 - problems what I'm doing but just to get
27:39 - something on the screen that's got some
27:41 - difference I'm gonna put this D now into
27:43 - here and we can run this oh boy look at
27:46 - that ah we've got some what did I do
27:49 - wrong
27:49 - did I get the wrong oh I said three
27:51 - should be four I was using the wrong
27:53 - value okay so we can see we've got
27:55 - something but look at this there aren't
27:57 - really lots of earthquakes of such like
27:59 - large magnitudes happening all the time
28:01 - all over the place and the reason why
28:03 - this is there's a couple reasons why
28:05 - this is terribly inaccurate and we find
28:09 - my eraser two fundamental reasons number
28:13 - one is magnitude on the Richter scale
28:16 - for earthquakes is measured if I'm
28:18 - correct in a logarithmic scale meaning
28:22 - if I have a earthquake of magnitude five
28:26 - and I have an earthquake of magnitude
28:28 - six this earthquake is actually ten
28:32 - times as powerful as the earthquake of
28:34 - magnitude five some research at tell me
28:36 - about
28:37 - that wrong I can come back and correct
28:39 - it so that's one thing so I need to
28:41 - think about drawing the other thing
28:43 - that's really quite important is here is
28:44 - when I take a circle and I give it a
28:47 - diet in it let's say it has a diameter
28:48 - of four which means it has a radius of
28:51 - two and then I have another circle that
28:53 - has a diameter twice the size of eight
28:56 - which means a radius of four the thing
29:00 - that I'm seeing visually is the area of
29:02 - it and the area is PI R squared so the
29:06 - area of this is four pi and the area of
29:08 - this is 16 PI so I'm actually drawing
29:11 - this is something that is four times as
29:14 - large as this but the radius is only
29:15 - twice so I need to account for that when
29:17 - I'm visualizing stuff using circles
29:19 - that's kind of an important you know if
29:21 - I were just doing population for example
29:22 - I wouldn't map population directly to
29:25 - diameter I would map it to the square
29:28 - odd map into the square root square root
29:30 - of population to diameter something like
29:32 - that we're going to get that right as we
29:33 - come over here if we come back over here
29:35 - now I can start to implement some of
29:37 - this math into the actual code itself so
29:39 - looking at the code the magnitude what I
29:43 - want to do with the magnitude really if
29:45 - if the magnitude is five and the Richter
29:48 - magnitude of six is ten times that what
29:50 - I could say its magnitude equals itself
29:53 - to the tenth power so this is kind of
29:56 - unknown inverse logarithm logarithmic
30:00 - again it's inverse logarithm I'm going
30:02 - to actually set it to the power of ten
30:04 - now the other thing I want to do is take
30:06 - the square root of it because ultimately
30:07 - I'm going to map that to the diameter of
30:10 - a particular ellipse so I also want to
30:12 - say magnitude equals the square root of
30:14 - itself so now this mapping instead of
30:18 - going from zero to ten meaning to
30:20 - Memphis to sort of maximum on the
30:22 - Richter scale of ten I don't know if
30:23 - that's an actual maximum I should look
30:24 - up the Richter scale but what I want to
30:27 - do is get a new maximum so I'm going to
30:31 - say var mag max equals power the square
30:37 - root of ten to the tenth power
30:39 - so if ten is my maximum magnet
30:42 - dude then I want to make that the
30:45 - maximum and then so the mapping now goes
30:47 - from here to here and let's take a look
30:49 - at that and we can see now almost
30:52 - everything has disappeared because most
30:54 - of the earthquakes are small but there
30:56 - was I believe recently I saw in the news
30:58 - a very large earthquake I don't know I
31:00 - should look this up where this was but
31:02 - I'm pretty sure I've got things accurate
31:04 - here we could we could look into the
31:05 - data and see what this is
31:06 - I could also try to make this a bit more
31:08 - everything a bit more visible one thing
31:10 - is I could say give me a stroke of color
31:13 - to put around the circles and I can also
31:15 - you know make this 180 for example to
31:18 - really sort of like emphasize so now we
31:19 - can see you can see lots and lots of
31:21 - tiny earthquakes up along here
31:23 - lots and lots of tiny earthquakes here
31:25 - and really some larger ones over and
31:27 - around here so I think we've done it
31:29 - this is now mapping earthquakes I did it
31:37 - wrong I totally did it wrong stop
31:40 - everything it's not thank you this is
31:44 - not correct it should actually reverse
31:47 - the logarithm it has to be 10 to the
31:52 - magnitudes power right I'm sorry about
31:54 - that y'all everybody screaming about at
31:56 - me watching this video I wonder if I
31:57 - should just go all the way back and redo
31:58 - this because GUI or watching it but
32:00 - maybe it's fine to have this wrong so I
32:02 - just go back so in other words 10 to the
32:06 - 4 is 10 times 10 times 10 times 10 10 to
32:12 - the 5 is is 10 to the 4 times 10 so this
32:16 - is really how it works so I actually had
32:18 - it quite wrong there so let's take a
32:19 - look at that and that should you know
32:22 - it's really the same idea but it's going
32:24 - to you know make it a bit more right
32:25 - this would actually looks fine because
32:26 - both of these worked 10 so I think
32:28 - they're worth quick you're going to get
32:29 - quite a bit smaller actually the small
32:31 - ones and you can see there we go so I
32:32 - got the similar effect apologies for
32:34 - that mathematical error and now I think
32:38 - you know those of you injure you can
32:40 - enjoy see the process about how I
32:41 - constantly make mistakes but I think I
32:42 - have it right here now and I could
32:44 - change the mapping I could change the
32:45 - color
32:46 - alka in the chat made a great suggestion
32:48 - of if you wanted
32:49 - sighs here see if you can create a time
32:51 - lapse version of it so I actually use
32:52 - the time stamp and now to see the
32:54 - earthquakes all pop up over time over 30
32:56 - days but how that all happened in 30
32:58 - seconds you could also write it so that
33:00 - your refresh the data query so if you
33:02 - look here on the webpage here on the on
33:07 - the webpage here I'm on the wrong
33:09 - webpage if you look here on what am I
33:11 - looking for uh the USGS website you can
33:13 - see that you can get every five minutes
33:14 - earthquakes updated from the past hour
33:16 - so this would be interesting to think
33:18 - about how you might animate them and
33:19 - refresh the data every five minute so I
33:21 - hope that you code here will be linked I
33:24 - hope that you make something with this I
33:27 - or even if you just use this to create
33:30 - some other types of mapping project
33:32 - please share it with me share in the
33:33 - comments or share that shipment on
33:35 - Twitter thanks for watching and another
33:37 - coding challenge
33:39 - [Music]

Cleaned transcript:

hello this is a train welcome its flowing into the station and it's brought with us a map of the world and what the craft of the world is showing you is little dots everywhere and earthquake has occurred in the last 30 days and the dots are actually sized according to the magnitude that earthquake and that's exactly what I'm going to build in this particular coding challenge so a little while ago I built this from scratch and it involves a lot of pieces so the point of this coding challenge is really to learn about the idea of mapping data in a world like the earth that the sphere in the twodimensional space so you need to learn about projections latitude longitude how to convert latitude longitude to pixel XY space and how to do that based on what you're how to get a data source in how to then draw it and so that's what I'm doing the pieces here is I'm getting this image of the world map from an API called mat box yet but certainly you could you know you have your own image you drew an image you design an image you got it from somewhere else as long as you know how that image was made you can you can do the same kind of project that I'm doing in this particular video I'm also getting earthquake data from the USGS the United States the US Geological Survey they have lots of wonderful scientific data that you can experiment with and then I'm using p5.js to draw the image of the world and then draw all these circles now one thing I want to mention is towards the end of this video I work on something to try to scale the size of the circles according to the magnitude of the earthquake and I have a little bit of math backwards for probably about five minutes of the video someone in the chat points it out and then I correct it so if you're watching and you realize like oh no my reference backwards there that's what happens but by the end I'm pretty sure I have the math right but if I have it wrong boy do I know that I'm going to hear about it in the comment so I look forward to hearing your feedback your suggestion I hope you make something with this you share it with me at shipment on Twitter and that you enjoy this ride on the coding train see you soon okay I'm starting this coding challenge now here we go so the first thing I'm going to do there's a lot of pieces to this but the first thing I want to do is just see the map of the world on the screen on the canvas I want to draw it and you know there's a lot of your ways you could do this you could find some JPEGs go draw your own map you could scan them half the question you have to answer for yourself by the way though one thing you have to remember is right the earth is a sphere so and I'm going to do this visualization in a 2d space a flat twodimensional space so when you take the information that's wrapped around the sphere and peel it off into a twodimensional space you have to apply some math and what that is typically referred to as a projection there are a lot of different math projections this is one from 1482 this is not something related just to coding and computer graphics the idea of how do you represent spherical information spherical imagery on a twodimensional service a surface there there are lots try out history I'm gonna scroll all the way down here there's one that's kind of I think a nice tip find it now illustration of what I'm talking about you could imagine if you had an orange and you peel the orange and you flattened out the peel what would it look like it might look like this one over here Mercator Mercator projection is one of the kind of standard ones and you know this this looks kind of like a little bit oh this is like Mercator projection now you can see though that what happens is things that are close to the top or close to the bottom when you sort of stretch out the poles of the earth become really really large so Greenland over here is incredibly massive as compared to say Africa which is kind of close to this which is there right with the equator which is not at all accurate so I think there are a lot of complex questions about the sort of you know Western view essentially of a lot of these map projections and I think that's a really interesting topic but I'm getting way off track here but it's important to mention really think about how you're presenting information and what you're highlighting and what you know what's up versus down what's center versus and so there's a lot of design considerations that I think are very important to mention but what I'm going to use is something of a standard these days called web Mercator and web Mercator is used from what I understand by most of the online mapping tutorials refine like Google Maps Open Street Map MapQuest that even exists probably does overlay all these who loves MapQuest out there I apologize I'm sorry it's wonderful I'm going to MapQuest that do you say that so they might said it anyway um so this is going on way too long okay so what I got to do what I'm going to do is I'm going to grab a map image from Matt box and then I need to understand what projection it's using so that I can apply the math to convert my latitude longitude to an XY location in that pixel canvas okay so the map map box you can you can find out information at Matt box.com you'll have to sign up for an account and get an API key and all that sort of stuff I'll include links in this video's description to where you can do that and I'm going to use something called a static map so Matt box has a lot of features that you can embed a map that's zoomable and you can put those little pins in it and do all sorts of stuff with it I just want to use it to get an image so the way that I can get an image for example is through a call an HTTP request to a particular URL so I'm going to grab this URL and what I'm going to do is I'm going to go to my code and I'm going to say I'm going to add a function preload and I'm going to say I'm going to have a variable called map image and I'm going to say map image equal load image and notice here that there's this piece of the code it says your access token so this will work right now if I were to run it I need to get my API token which I'm going to do right over here I already am on the page and it's right here I'm going to click copy so if you just go to this particular URL that's where you can create your own access token if you can painstakingly copy behind if you want I'll probably regenerate it later and then it won't work but okay so I put that in and then what I want to do is I'm going to say create canvas now you'll notice there are a bunch of arguments in here this is in this path this is the latitude longitude of the center that's the zoom level and then somewhere in here at 600 by 600 that's the pixel resolution that I'm getting so I'm going to now go and say create canvas 600 600 and then I'm just going to say image map image at 00 so if all goes according to plan when I go and run this code in the browser we see there it is whoa what kind of crazy angles Matt fig did I get oh my good so I wanted a flat nap I might have to adjust the API calls I just made interesting to see that it does that what I wanted is a oh I'm in the class I'm no oh dark I think dark beat so there's a lot of things like dark v.9 here using them so why is it angled oh you know what it is it's because there's a lot of arguments here there's latitude longitude we can look at the documentation zoom level and then this is like an angle I think so if I change this to zero there we go I flattened it so I don't know what the default is is this somewhere I'm guessing like in like San Francisco or something could possibly be but what I want to do now is I want to see a world map so I'm going to change the latitude and longitude I'm just going to change it to zero zero which is going to be at lab right there and then not really the center of the world this is a sphere like what's the center huh but our latitude longitude Center I'm going to change the zoom level to like 4 and then I'm going to hit refresh and we see oh let me zoom out some more I'm actually the change the zoom level to 1 and we can see there we go so I've got the world map now I want to see a wider picture of the world map so I'm going to change let's change this to 1024 by 512 I think this should behave nicely for us up but if I do that I want to change create canvas to 1024 512 so let's refresh that whoops oh it's just super big now whoops nope sorry I got a zoom out here a little bit so there you go so now you can see I've got the world map with this dark theme and there it is in my p5.js canvas we're getting somewhere now if I wanted to do more of this I would suggest if you're watching and you actually pull this code I would probably do something where I make assess avaria Buhl's for width and height and zoom level and all that sort of thing but I'm just going to leave this stuff kind of constant for right now I am going to though I am yes not only that stuff constant right now so now that I have got what I need to do is figure out let's say I have a latitude longitude so let's say I have a latitude longitude that is the latitude of zero longitude is zero now it might be worth me refreshing your memory if latitude and longitude are familiar concepts to you but you've sort of forgotten what exactly they are and how they work so let's say I were to try to draw as best as I could spear and I can kind of represent it with these lines and by the way what are these lines these lines are longitude so longitude are the line I can think of them as like long because they go too long up and down but there are the vertical lines and they're really going to map to our X location because we're going to take this and kind of unfurl it so to speak onto into a flat rectangle so we want those longitude lines to end up like this so these are the X values our longitude and then the Y values are latitude and you know this being perhaps like a zero zero the Y values then being latitude okay now there's another sort of key aspect of this what is the range of these values so they are described as angle essentially good because there's angles of rotation in the way around the center of the earth and so if there's a full rotation of 360 degrees we can kind of go all the way this way to 180 degrees and then go all the way this way to negative hundred eighty degrees the thing is I'm going to need to use radians as a measurement in my code and so that's something we're going to have to sort of think about this is PI and this is negative PI and I have other videos that kind of go over the basics of radians and units of measurements that you could be watching try to find if that's a new copped concept for you now latitude on the other hand will gone all the way around it's just going halfway up and halfway down in a way so the range is between 90 and negative 90 and I probably got that wrong I think 90 is north and negative 90 is up by the way if you look up the lat lunch your latitude with you if you google like a latitude longitude latitude of New York City you'll find the number will be something like 74 degrees west so 74 degrees this is actually 180 degrees west this is 180 degrees east this is 90 degrees north this is 90 degrees south so the negative numbers are what we need to use in the math but you'll often see them listed as north south west east which is something you might need to convert depending on what how your data is formatted okay so hopefully that clarifies that a little bit so I'm actually going to what I'm going to come back over here and I'm going to do a couple things I'm going to do I'm not absolutely called center latitude Center longitude and then I'm just going to have a variable called latitude a variable longitude I would like to pick a city somewhere in the world that's not the United States that may be I know approximately where it is even though I've got the sort of bad American sense of geography so let's look for a city where where there a lot of trains well this lot trains did Europe and Asia ever where there's trains that's a bad bad clip let me let me look for let's look for Shanghai latitude longitude so you're seeing here we've got thirty one point two three zero four North 100 to one point four seven three East so let's take this into our code and let's put that here I'm going to just comment this put this in comments here so the latitude is the north number and the longitude is the East number and it's not negative if we're west it would be negative and what I want to do now is draw is draw the location it converts to its X&Y so what I need to do here and I don't need the draw function I need to figure out how do I convert those things ah guess what we're going to just look up the formula it's going to look kind of terrifying but I think I'm going to write it for you in code and it will hopefully be possible so here we are in web Mercator and web Mercator is based on what what we need to do is to calculate this X&Y we need to apply this formula so the reason why this number is 128 is web the standard of web Mercator is that it's giving you the XY for a square where the top left is 0 0 and the bottom right is 256 256 so the centre is 128 128 I think actually nap box does but tiles that are 512 so I think I actually need to change that number to 2 56 so that really depends on the kind of again the system you're using the zoom level is this value of how far zoomed in or zoomed out this lambda here is longitude and the letter of the greek letter fee is latitude so if i write this code and i'm just going to kind of do this a little bit i'm going to write a function called i'm going to write a separate function for x and y i could wrap this into one function i'm going to write a function called web Merc I'm just gonna call it Merc Merc X and it takes Merc X takes in a longitude value and now what I like to do sometimes with formulas like this is I'd like to break them into parts rather unnecessary but I think it'll make us less likely to make a mistake so I'm going to just do the first part I'm going to call it a and that is 128 divided by PI times 2 to the zoom level right so 180 divided by PI times 2 to the zoom level so what is this we've the zoom level is right now is something that I've defined here as 1 so this is something that I could make into a variable I really should make it into a variable and I'm going to say zoom equals 1 so again I should put that in here but I'm gonna leave that out right now okay so so now the zoom is taken care of great you know what I could do actually is whenever I could give this Merc X argument longitude and zoom level but I'll just use it as a global variable okay that's barrei now I'm going to say var be the second part if I go back to the formula is just the longitude plus pi okay so longitude plus pi but guess what one thing I need to make sure I'm going to have an issue I'll get to it later whether its degrees or radians is important the formula is assuming longitude is going to come in in Radian so I have to make sure I remember that now I can just say return a times B right because it's this 128 divided by PI times 2 the zoom level times the longview plus pi okay great now let's write 1 for y Merc why latitude and we can see here that the parts a little bit more complex once this part a is exactly the same let's make part be just this tangent part of the equation so I'm going to say Part B is a tangent of pi divided by 4 plus C which is the latitude divided by 2 latitude / okay that's B and C is law pi minus log of B so PI minus log of B now you might notice right here that this says Ln Ln means natural log so logs have a log what a logarithm is that merits or of a separate video but if you see LM it means natural log base E which is a special wonderful number but in in most of programming frameworks if you have the log function it's doing by default a natural log and you can obviously adjust that to a different base but so this dis mapped to it perfectly here log of B okay so now I need to say a times a a times c right a times c because b is just for the purpose of this so a times C this is now giving me the Y location okay I think we're doing well here now what we can do is say um so one thing I'm going to do which is kind of unnecessary but I need help a lot of people I don't even get messages of how I don't need to do this but it helps me think about it I actually would like to work from the center so I'm going to translate with / Q height divided by two if I do that look that moves the origin point from the top left to the center and I'm going to go to my code I'm going to refresh it and you're going to see now the image is the origin is in the center so I'm going to change image mode to center so that now the image is drawn from the center so now I'm back the reason why I'm doing that it's a little bit weird but what I want to do is I want to draw everything the value that I'm going to get from this math is relative to a center point so it's going to be a little easier for me to kind of figure that out this way so what I want to do first is I want to say var Center X E old Merc ex of launch of longitude sender longitude and center y equals merc y of center latitude then i want to say x equals merc x mercs x of that of the longitude this is the Beijing I mean sorry Shanghai longitude and then the Shanghai latitude and then what I want to do is where I'm going to position them on the screen is the difference between those two points so if CX CY is the center wherever that is relative to the center of the window is its location that center location so now I should be able to say let's make a nice little circle with some alpha and let's draw an ellipse at that x + y 20 by 20 pixels let's not be afraid let's hit refresh Earth okay so it's not there what's the problem I forgot about my units of measurement so this is definitely a problem here which is that these measurements are in degrees and the fact is the calculations are assuming radians so what I need to do is convert these things beat them to rating so I'm just going to add a line of code here that says longitude equals radians longitude and I'm going to say latitude equals radians latitudes and and the reason why I'm going to do this is I know that when I go get that earthquake data I'm going to get values and degrees because I've looked at that data before okay so now I'm gonna hit refresh it's there but it's not in the right spot the reason it's not in the right spot is remember I said map that box actually uses tiles 512 by 512 and so I'm going to change these to 256 256 and I'm gonna hit refresh and there we go that looks right to me somebody tell me that's not where Shanghai is let's go to the other side and let's look at Vancouver Vancouver latitude and longitude and let's try that out I'm going to grab this here and put this into my code and so now I need a latitude of forty nine point two eight to seven and in the longitude not of one twenty three point one 207 positive because it's West I need to add the negative number there okay and here we go let's go back to our code it refresh there somebody tell me that's not where Vancouver is I'm pretty sure I've pinpointed it now that circle is kind of large really shouldn't I shouldn't do anything that might cause me to discover a mistake but I'm just going to make that circle a little bit smaller hit refresh and I think that's that looks right deadon where Vancouver is right somebody from Canada tell me if I've got that wrong okay so we're doing well here so now I've actually done almost everything because what I have now is a framework for re4 taking the latitude longitude and converting it to an XY that I can draw so let's go get some data that has lots of latitude and longitude in it so the data that I'm going to use is from the US Geological Survey here is the page usgs science for a changing world let me tell you something science very important wonderful thing I'm all about the science I wish I knew more about science and what they have what USGS website is in addition to lots of things I'm on a page which I'll link to in this video's description is it'll give me a data feeds of earthquakes so I could get just significant earthquakes in the past hour I think just to get some data but not too much data let's get all earthquakes in the past day so I'm going to copy paste this link address and I'm going to go to my code and in preload I'm going to say earthquakes I'm going to make a variable called earthquakes and in the preload function only move this low I need more space to look at this code I'm going to go here and I'm going to say earthquakes equals load strings there and I'm now notice what it's actually loading it's a CSV file so that file is actually a comma separated value file it's essentially a spreadsheet and I can look at it this is a different one but if I go to the I downloaded one already which is right here this is actually everything from the last month and you can see here it's a it's a table it's a table which starts at time latitude longitude here's the time here's the latitude here's the longitude and here is then there's some other things magnitude is something thatís I want to look at because we can use magnitude to decide how large to maybe draw something on what color to draw something but I'm going to leave most of those kind of interesting design decisions to you to do something more creative with or maybe you're going to do map different kind of data but what I really want to focus on it's just first getting those latitude and longitude so the way I can do this now is there is a function in p5 called load table this is such a simple bit of data that actually think using load strings a little bit simpler I'm going to redo this challenge making a 3ds version of it in processing and use load table there just to show the difference that will come sometime eventually so now what I'm going to do here in setup is once I have the data I'm going to say for VAR I equals 0 I is less than earth quakes dot length so low string will give you an array of strings each string being a line in that data file so all I need to do with each one of those is call a function called split so I'm going to save our data equals earth quakes index I dot split then I'm going to write something kind of weird here so what I want to do is say what is the delimiter that I want to split everything up by what I want to split everything up by a comma but why didn't I just put a comma in quote because normally in JavaScript you'd put a yellow string in quotes I use these forward slashes this is something known as a regular expression which is a sophisticated way to match a particular pattern of text and I'll link in this video's description to a whole set of tutorials on regular expressions but here we get simply the only pattern I want to match is a single comma so that's going to be easy so now if I do that I'm just going to say console dot log data and let's take a look at what we get in the console I'm going to kind of move this over here we can see I'm getting a whole bunch of a arrays so I get an array and I can see here the first element is the timestamp the second element is the I believe it's latitude first then longitude yeah it has to because that's negative 166 some other data about the earthquake this 2.2 is the magnitude on the Richter scale and the chapel 20 odd split with the comma with it with quotes as a string does work also but in case you end up wanting to do more elaborate splitting it's kind of useful to have the option of a regular expression okay so I am going to now I am going to what am I doing here so what do I want to do the latitude is the first it's not the first if I go back to this it's this is element 0 element 1 element 2 so latitude is index 1 of that array latitude is data index 1 longitude is data index 2 and then guess what all you do is take this this exact same code once I get that latitude longitude convert it to X&Y draw a little circle and now we will see I'm gonna take out this console.log something I need that and move over here and I'm hit refresh and there we go these are all the earthquakes that have happened in the last what was it the last hour I think did I do let's go get the last now that we see this is working let's go grab let's go wrap all earthquakes from the past 30 days that's going to be a lot to ambitious of me so I'm going to I'm going to just paste this here and I'm going to do this and I'm going to comment out this line of code so I can now which is awkward to do here I'm gonna paste this end up time I must have gotten rid of a quote or something yep got rid of the end there ok so so many ways I could make this code a little bit nicer but that should do now I'm going to refresh we go it's going to take a little while a lot of data actually didn't take that long look at that so you can see all the earthquakes from the last month and you know things that I could do to this I could first of all I could think about zooming in on a certain part by changing the zoom level on the width and the height of the map and that sort of thing you want to be careful you know again the way that the way that map box works if you start playing around with a zoom I would if you want I would I would not make with our height greater than 1024 and it actually seems to work really nicely if you keep that as a multiple of like 256 or but I don't think that should be required but you know play around with it I could you could change but also you could just think about animating it you could look and one thing I would like to do that I think is worth doing is just drawing these with the size based on magnitude so let's figure out let's look at how we would do that so right now where I'm drawing the size is just here 8 comma 8 so what is the actual size in the data it is latitude longitude depth magnitude so I'm just going to use the magnitude which is one two three index four so let's go back to the code and I'm going to say var M for magnitude or magnitude equals data index three now I'm gonna do something wildly not accurate but I'm just going to get started with its just so we can see something I'm going to say var diameter equals map the magnitude from a range from zero to ten to arrange from zero to two to a sixty so I'm just going to take that Richter scale magnitude and map it again there's lots of mathematical problems what I'm doing but just to get something on the screen that's got some difference I'm gonna put this D now into here and we can run this oh boy look at that ah we've got some what did I do wrong did I get the wrong oh I said three should be four I was using the wrong value okay so we can see we've got something but look at this there aren't really lots of earthquakes of such like large magnitudes happening all the time all over the place and the reason why this is there's a couple reasons why this is terribly inaccurate and we find my eraser two fundamental reasons number one is magnitude on the Richter scale for earthquakes is measured if I'm correct in a logarithmic scale meaning if I have a earthquake of magnitude five and I have an earthquake of magnitude six this earthquake is actually ten times as powerful as the earthquake of magnitude five some research at tell me about that wrong I can come back and correct it so that's one thing so I need to think about drawing the other thing that's really quite important is here is when I take a circle and I give it a diet in it let's say it has a diameter of four which means it has a radius of two and then I have another circle that has a diameter twice the size of eight which means a radius of four the thing that I'm seeing visually is the area of it and the area is PI R squared so the area of this is four pi and the area of this is 16 PI so I'm actually drawing this is something that is four times as large as this but the radius is only twice so I need to account for that when I'm visualizing stuff using circles that's kind of an important you know if I were just doing population for example I wouldn't map population directly to diameter I would map it to the square odd map into the square root square root of population to diameter something like that we're going to get that right as we come over here if we come back over here now I can start to implement some of this math into the actual code itself so looking at the code the magnitude what I want to do with the magnitude really if if the magnitude is five and the Richter magnitude of six is ten times that what I could say its magnitude equals itself to the tenth power so this is kind of unknown inverse logarithm logarithmic again it's inverse logarithm I'm going to actually set it to the power of ten now the other thing I want to do is take the square root of it because ultimately I'm going to map that to the diameter of a particular ellipse so I also want to say magnitude equals the square root of itself so now this mapping instead of going from zero to ten meaning to Memphis to sort of maximum on the Richter scale of ten I don't know if that's an actual maximum I should look up the Richter scale but what I want to do is get a new maximum so I'm going to say var mag max equals power the square root of ten to the tenth power so if ten is my maximum magnet dude then I want to make that the maximum and then so the mapping now goes from here to here and let's take a look at that and we can see now almost everything has disappeared because most of the earthquakes are small but there was I believe recently I saw in the news a very large earthquake I don't know I should look this up where this was but I'm pretty sure I've got things accurate here we could we could look into the data and see what this is I could also try to make this a bit more everything a bit more visible one thing is I could say give me a stroke of color to put around the circles and I can also you know make this 180 for example to really sort of like emphasize so now we can see you can see lots and lots of tiny earthquakes up along here lots and lots of tiny earthquakes here and really some larger ones over and around here so I think we've done it this is now mapping earthquakes I did it wrong I totally did it wrong stop everything it's not thank you this is not correct it should actually reverse the logarithm it has to be 10 to the magnitudes power right I'm sorry about that y'all everybody screaming about at me watching this video I wonder if I should just go all the way back and redo this because GUI or watching it but maybe it's fine to have this wrong so I just go back so in other words 10 to the 4 is 10 times 10 times 10 times 10 10 to the 5 is is 10 to the 4 times 10 so this is really how it works so I actually had it quite wrong there so let's take a look at that and that should you know it's really the same idea but it's going to you know make it a bit more right this would actually looks fine because both of these worked 10 so I think they're worth quick you're going to get quite a bit smaller actually the small ones and you can see there we go so I got the similar effect apologies for that mathematical error and now I think you know those of you injure you can enjoy see the process about how I constantly make mistakes but I think I have it right here now and I could change the mapping I could change the color alka in the chat made a great suggestion of if you wanted sighs here see if you can create a time lapse version of it so I actually use the time stamp and now to see the earthquakes all pop up over time over 30 days but how that all happened in 30 seconds you could also write it so that your refresh the data query so if you look here on the webpage here on the on the webpage here I'm on the wrong webpage if you look here on what am I looking for uh the USGS website you can see that you can get every five minutes earthquakes updated from the past hour so this would be interesting to think about how you might animate them and refresh the data every five minute so I hope that you code here will be linked I hope that you make something with this I or even if you just use this to create some other types of mapping project please share it with me share in the comments or share that shipment on Twitter thanks for watching and another coding challenge
