With timestamps:

00:01 - okay this is a very important moment a
00:04 - very important moment we are about to
00:08 - build build the foundation for
00:11 - everything we're going to do in all of
00:12 - these videos by looking at a new concept
00:15 - essentially a key key new concept so
00:18 - before we get to this key new concept
00:20 - which you might be wondering what it is
00:21 - we're going to just sort of revisit
00:23 - where we left off a couple videos ago we
00:25 - were building this example we had a
00:26 - bouncing ball around the screen we've
00:28 - changed it instead of a bouncing ball
00:30 - it's called a mover object because when
00:33 - you make a raise of ball objects you
00:36 - start seeing balls all the time and
00:37 - people start seeing anyway that's not
00:39 - your problem it's my problem but I've
00:41 - gotten past it and we now have a mover
00:43 - object and I changed a few things I'm
00:45 - going to run this sketch and you can see
00:47 - instead of bouncing off the edge it's I
00:49 - want to get to the bottom it goes to the
00:50 - top when it gets to the right it goes to
00:51 - the left minor details so what's
00:53 - important about this okay so if you
00:55 - recall if we look at the class we can
00:58 - see here that we have an object with two
01:00 - vectors location describes where it is
01:03 - velocity describes the change in
01:07 - location over time and what do we do in
01:09 - the update function we add velocity to
01:11 - location and down further below we have
01:14 - a display function where we draw the
01:15 - object at that location that is our
01:17 - model here that is our model but we at
01:21 - this moment are going to change this
01:24 - model you know so okay well let's just
01:26 - say you look at this and you think
01:28 - really I'm watching all these videos for
01:30 - hours and hours and hours and author is
01:32 - a circle it's kind of moving across the
01:34 - screen hey well so sorry I just got off
01:39 - on that tangent there what is it what
01:41 - would you what would your next instinct
01:43 - be your next insig might be I know I'm
01:45 - going to change velocity I'm a change
01:46 - location I'll make location do something
01:48 - different outside location on Tech's
01:49 - school this or velocity lexical does not
01:51 - make it random to do all sorts of stuff
01:52 - no this is not the purpose of this video
01:57 - at my recording recording I don't have
01:58 - to restart this one this is not the
02:00 - purpose here we're going to make work as
02:02 - an exercise to ourselves we are going to
02:04 - limit what we can do and we're going to
02:06 - say from this moment on not forever and
02:08 - ever because I'm sure you the point is
02:09 - to break all these rules here
02:11 - we're going to say we
02:13 - are not going to mess with velocity
02:16 - we're not going to mess with location
02:17 - these are just these variables are going
02:20 - to exist in the state that they are
02:21 - velocity codes allegation but we are
02:23 - instead going to add a new vector so
02:27 - let's try to let's get this makes me
02:30 - feel weird I keep looking back and forth
02:31 - let's go over to the whiteboard so okay
02:34 - so if we were to rewrite that function
02:36 - just so we remember we have it over here
02:38 - we have this update method oh right we
02:44 - have an object it has a location vector
02:50 - it has a velocity vector I didn't really
02:57 - I don't know whatever I'm gonna hurt you
02:59 - rerecorded this huh doing it worse this
03:01 - time but I don't care I'll do it again
03:04 - tomorrow get it again forever and ever
03:06 - we have an update method it's very late
03:10 - the day I have this rule to record these
03:12 - videos of the warning when I feel sort
03:13 - of my brain is working and I feel
03:15 - energized but stuffs got to get done
03:18 - stuffs got to happen okay we have an
03:20 - update method what are we doing that
03:21 - update method we add velocity to
03:28 - location what's going on here we have a
03:31 - processing window we have an object it
03:34 - has a position vector it has an x and a
03:36 - y we're drawing it there as a circle
03:38 - that's the location vector maybe it has
03:41 - a velocity which says that we had
03:42 - velocity location so now it's over here
03:44 - we have velocity location so now it's
03:46 - over here we have lost the location so
03:47 - now it's over here great so here's the
03:50 - thing location changes over time by
03:53 - velocity we want velocity to change our
03:56 - instinct might be and this is what I was
03:57 - getting to before it I couldn't just
03:59 - make it happen all at once I might say
04:01 - velocity x equals a random amount
04:03 - velocity dot y equals a random amount or
04:04 - maybe velocity x minus equals point one
04:08 - I try to like figure out some way to
04:10 - change those variables but no we need to
04:13 - do this in a much more formal way what
04:14 - we need is to say we need to add another
04:18 - vector to this mover object that other
04:21 - vector we're going to add is a vector
04:23 - that we are going to call acceleration
04:26 - and just as location changes by velocity
04:29 - over time velocity is going to change by
04:36 - acceleration over time and this makes a
04:39 - lot of sense if you think about it right
04:40 - if you're driving a car and you think of
04:42 - pressing on the gas you're accelerating
04:44 - that car pressing on the brake you're
04:46 - decelerating the car but this analogy
04:48 - only takes us so far because you know
04:52 - you're thinking of speeding up and
04:53 - slowing down what would be really is
04:55 - important to realize is that
04:56 - acceleration is any change in velocity
04:58 - we could be changing the magnitude of
04:59 - our velocity or the direction of our
05:02 - velocity a turn a speeding up is slowing
05:04 - down it is a vector that adjusts
05:07 - velocity over time so so this is this is
05:11 - the exercise we have to ourselves this
05:13 - is our physics engine here this is our
05:15 - methodology acceleration changes
05:17 - velocity velocity changes ocation we
05:19 - don't ever set velocity to anything
05:21 - directly we don't ever set location to
05:23 - anything directly we now need an
05:25 - algorithm for acceleration we need to
05:28 - figure out what should acceleration be
05:30 - and so what I want to do in the rest of
05:32 - this video is add this stuff to our
05:34 - example and then look at a couple
05:36 - scenarios for what might some algorithms
05:39 - might be for computing an acceleration
05:42 - and see what types of effects we get
05:43 - okay I feel good about this had a little
05:46 - problem there for a second but we're
05:47 - moving on we're at five and a half
05:48 - minutes or so and so far we're good okay
05:50 - so here we are over here again and let's
05:54 - look at our class so we know we need to
05:57 - add to our object and acceleration we
06:00 - know that we need to give that
06:02 - acceleration an initial value and just
06:05 - to simplify things also let's give the
06:08 - velocity so velocity and acceleration
06:10 - both start at zero let's run this sketch
06:13 - again and what do we get a circle that
06:15 - doesn't move all this time and it's just
06:17 - a circle the center of the screen it's
06:19 - like it's a nice very happy circle no
06:22 - there's nothing nothing to say - you
06:23 - have to move actually moving is very
06:25 - good for you and that's the standing
06:27 - thing I think actually it's anyway never
06:28 - mind okay
06:30 - these are pixels who cares okay so but
06:33 - we do need to add this other line of
06:34 - code velocity dot add acceleration so
06:37 - now our physics engine is at work
06:39 - acceleration goes into
06:40 - velocity velocity goes into location
06:42 - okay so now we need an algorithm for
06:44 - computing acceleration and I wrote down
06:45 - a couple possibilities over there
06:47 - there's another whiteboard that you
06:48 - can't see I wrote down some
06:49 - possibilities I hope the cameras don't
06:51 - shut off they're not going to
06:52 - everything's going to be fine
06:54 - so - there's three that we're going to
06:57 - do here one is we're to look at a
06:58 - constant acceleration great week a
07:01 - probably figure that up pretty quickly
07:02 - we're going to look at a random
07:04 - acceleration and then we're also going
07:06 - to look at acceleration towards the
07:08 - mouse although I think I may just say
07:10 - that for the next video and have the
07:11 - entire video look at how you might have
07:13 - a dynamic acceleration that is a vector
07:14 - always pointing towards the mouse which
07:16 - is kind of an interesting prospect if
07:17 - you think about it okay so let's first
07:19 - look at constant acceleration well in
07:21 - fact this is a constant acceleration the
07:23 - acceleration is zero but let's give it a
07:24 - quantity I don't know what makes sense
07:26 - let's have it accelerate along the X I
07:28 - don't know five comma zero that sounds
07:29 - good right whoa okay so quickly out of
07:32 - control and I don't know what it's doing
07:33 - now so something we have to realize here
07:35 - is that we are living in a world of
07:38 - pixels I mean we're not let me rephrase
07:44 - that this is a world of pixels we live
07:48 - in a physical world where we talk to
07:49 - each other and we shake hands and we hug
07:51 - and we say hi and we eat food I don't
07:54 - know do things it's late I'm getting a
07:56 - little tired ignore me
07:58 - this is pixels the point of what I'm
08:00 - saying is five pixels per frame with
08:02 - acceleration it's kind of insane
08:04 - remember we're adding that acceleration
08:06 - to velocity every frame 5 10 15 20 25 30
08:09 - 35 30 French 30 times per second 60
08:12 - times per second we're going to be
08:13 - moving 120 pixels in per frame in a
08:16 - couple seconds that's insane
08:17 - so I went off on a tangent but the point
08:20 - is when we're looking at acceleration
08:21 - values we need to think of small
08:23 - quantities we're gonna have to be tuning
08:25 - our physics engines appropriately to
08:27 - pixels and acceleration in this case
08:29 - makes sense with small numbers so a
08:32 - point O one let's see and we have our
08:33 - it's moving along it's getting faster
08:35 - and faster look at it go it's speeding
08:37 - up it's getting faster right you can see
08:39 - this is constant acceleration the
08:41 - object's speed we can see is getting
08:43 - faster and faster every frame as
08:45 - acceleration accumulates into velocity
08:48 - again you might be wondering after all
08:50 - this time it's just a circle moving
08:51 - across the screen and it's just getting
08:53 - faster I know
08:54 - but these are the building blocks and
08:55 - and you will obviously be more creative
08:57 - in this okay but let's look at this for
08:59 - a second and understand that
09:01 - acceleration doesn't just affect the
09:04 - speed of something we're noticing that
09:05 - because of the the velocity is being
09:07 - starting at zero but let's say I have
09:09 - the velocity actually start moving
09:10 - downwards at a rate of two pixels per
09:13 - frame look at what's happening to that
09:14 - it's accelerating to the right it's
09:16 - almost as if there's a wind force
09:17 - pushing it to the right it's started
09:19 - moving down but it's accelerating
09:20 - further and further to the right so this
09:22 - is really what's key here if you ever
09:25 - dreamt about programming smooth organic
09:28 - flowing motion of all different types of
09:31 - things then what you needed is to have a
09:35 - location velocity acceleration and you
09:37 - need to calculate that acceleration so
09:38 - this you can see it's speeding up faster
09:40 - and faster this is just still a constant
09:43 - acceleration the world is going to get
09:45 - much more interesting when we don't have
09:47 - a constant acceleration when
09:48 - acceleration changes over time based on
09:50 - any number of factors the simplest way I
09:52 - can think to demonstrate to you that to
09:53 - you right now would be let's give it a
09:55 - random acceleration so let's look at
09:57 - that so first let me stop that sketch
10:01 - let me put acceleration back to velocity
10:03 - back to zero acceleration back to zero
10:04 - and now in the update method we're
10:06 - actually going to compute an
10:08 - acceleration acceleration and you might
10:11 - think okay I'm going to make a new P
10:12 - vector and I'm going to give it some
10:14 - random amount bah-bah-bah so that's all
10:16 - well and good but one thing I should
10:18 - mention about the vector class is that
10:20 - the vector class actually as a function
10:22 - built into it which will give you a
10:24 - random unit vector this is incredibly
10:27 - valuable gives you a vector of length
10:28 - one at any direction that way anytime
10:30 - you want boom random direction you got
10:32 - one and you can scale it because it's a
10:34 - normalized unit vector you can scale it
10:36 - very easily so let's look at how we
10:38 - would do that we say P vector dot random
10:41 - 2d now notice that we have to specify 2d
10:46 - here this is one of the times where we
10:48 - want to make sure we don't get a random
10:49 - 3d vector because if we get the Z
10:51 - component we could potentially have the
10:53 - XO y component at 0 anyway we want a
10:55 - unit vector that's in two dimensions
10:57 - it's just X and y so if I run this let's
10:59 - take a look at what happens we can see
11:01 - look at it it's kind of accelerating
11:03 - randomly it's actually getting out of
11:04 - control really fast so again this is a
11:07 - kind of where I need to bring something
11:09 - up again with you guys this is not
11:11 - physics in any real way this is there's
11:14 - no world of things and grab forces and
11:18 - Malec Tron's and antimatter and the Sun
11:22 - that's going to explode in a hundred
11:24 - million years and their evolution this
11:26 - this is not the real world this is
11:27 - pixels on the screen ok so that most of
11:30 - the time we are just trying to create
11:32 - the feeling of something realistic then
11:34 - actually perfectly simulating the
11:36 - realism in some uber amazing scientific
11:39 - way and so one of the things that we'll
11:40 - often do is kind of happen you might
11:43 - call it a cheat but I should method I
11:45 - would I totally do not allow the world
11:47 - word cheating when it comes to
11:49 - programming this stuff because it's all
11:51 - cheating there is no cheating or not
11:52 - cheating none of this is real right
11:54 - there is no this is just a wall by the
11:56 - way
11:57 - wall is green there there's nothing here
11:59 - I can't get past it
12:00 - but anyway the screen is over here
12:03 - whatever what but all of that says that
12:07 - one thing that's often useful to do is
12:09 - say something like velocity dot limit v
12:12 - what that limit function does is it says
12:14 - you know what I'm going to introduce an
12:15 - artificial constraint over this program
12:17 - the velocity can never be have a
12:20 - magnitude greater than 5 if it if it
12:21 - ever has a magnitude greater than 5
12:23 - shrink it down to 5 if it's less than 5
12:24 - it's fine so that's what that limit
12:26 - function done with does which can
12:27 - actually be pretty darn valuable so you
12:30 - see here actually here we go we have
12:32 - this kind of nervous jittery x' moving
12:34 - thing and we've created it only by
12:38 - affecting the object's acceleration so
12:40 - we could we could now scale that we
12:42 - could make it more jittery less Yuri the
12:43 - point of this is that this is your
12:45 - exercise this is your job right now
12:47 - using this foundation and the example
12:50 - I'll link to it below if you're watching
12:51 - this on Vimeo or through another
12:53 - whatever wherever I put these I'm going
12:55 - to link to the example below that has
12:56 - this basic model try to create see if
12:59 - you how much personality you can put
13:01 - into the motion of something just by
13:02 - drawing a simple shape and only by
13:04 - affecting its acceleration if you're
13:05 - stuck for an idea see if you can make it
13:07 - dynamic like it's always following the
13:09 - mouse what if it accelerates towards the
13:11 - mouse and that's what we're going to
13:12 - look at in in the next video another
13:14 - couple ideas is what happens if you use
13:15 - Perlin noise what happens if you use I'm
13:17 - recording this right what happens if you
13:19 - use Gaussian distribution of
13:22 - acceleration values there's there's any
13:24 - number of possibilities just make
13:25 - something up try but whatever you do
13:27 - just only change I'm going to just
13:30 - highlight this right here only work with
13:32 - this part of the code see how far you
13:33 - can get just by messing with
13:34 - acceleration okay so in the next video
13:36 - we're going to look at accelerating
13:38 - towards the mouse we're cutting on it
13:39 - that's an exercise you can either just
13:40 - go right ahead or you can try it and
13:42 - then look at the video which will
13:43 - provide the answer and the exciting
13:45 - thing about all of this is that we're
13:48 - going to see soon how acceleration is
13:50 - the key to fulfilling Newton's laws of
13:52 - motion I don't know if that makes sense
13:55 - but it's getting late and I think I'll
13:58 - probably take a break and do some more
13:59 - of this tomorrow morning you don't need
14:00 - to know that somebody edit this right
14:02 - did I say this already
14:04 - somebody just download all these videos
14:05 - and edit them and like airbrush me or
14:07 - something to make it look better replace
14:09 - me with a puppet of a dinosaur or
14:10 - something I don't know you guys are good
14:13 - at this computer stuff okay I got to
14:15 - find the button to stop recording this
14:16 - time it was recording okay

Cleaned transcript:

okay this is a very important moment a very important moment we are about to build build the foundation for everything we're going to do in all of these videos by looking at a new concept essentially a key key new concept so before we get to this key new concept which you might be wondering what it is we're going to just sort of revisit where we left off a couple videos ago we were building this example we had a bouncing ball around the screen we've changed it instead of a bouncing ball it's called a mover object because when you make a raise of ball objects you start seeing balls all the time and people start seeing anyway that's not your problem it's my problem but I've gotten past it and we now have a mover object and I changed a few things I'm going to run this sketch and you can see instead of bouncing off the edge it's I want to get to the bottom it goes to the top when it gets to the right it goes to the left minor details so what's important about this okay so if you recall if we look at the class we can see here that we have an object with two vectors location describes where it is velocity describes the change in location over time and what do we do in the update function we add velocity to location and down further below we have a display function where we draw the object at that location that is our model here that is our model but we at this moment are going to change this model you know so okay well let's just say you look at this and you think really I'm watching all these videos for hours and hours and hours and author is a circle it's kind of moving across the screen hey well so sorry I just got off on that tangent there what is it what would you what would your next instinct be your next insig might be I know I'm going to change velocity I'm a change location I'll make location do something different outside location on Tech's school this or velocity lexical does not make it random to do all sorts of stuff no this is not the purpose of this video at my recording recording I don't have to restart this one this is not the purpose here we're going to make work as an exercise to ourselves we are going to limit what we can do and we're going to say from this moment on not forever and ever because I'm sure you the point is to break all these rules here we're going to say we are not going to mess with velocity we're not going to mess with location these are just these variables are going to exist in the state that they are velocity codes allegation but we are instead going to add a new vector so let's try to let's get this makes me feel weird I keep looking back and forth let's go over to the whiteboard so okay so if we were to rewrite that function just so we remember we have it over here we have this update method oh right we have an object it has a location vector it has a velocity vector I didn't really I don't know whatever I'm gonna hurt you rerecorded this huh doing it worse this time but I don't care I'll do it again tomorrow get it again forever and ever we have an update method it's very late the day I have this rule to record these videos of the warning when I feel sort of my brain is working and I feel energized but stuffs got to get done stuffs got to happen okay we have an update method what are we doing that update method we add velocity to location what's going on here we have a processing window we have an object it has a position vector it has an x and a y we're drawing it there as a circle that's the location vector maybe it has a velocity which says that we had velocity location so now it's over here we have velocity location so now it's over here we have lost the location so now it's over here great so here's the thing location changes over time by velocity we want velocity to change our instinct might be and this is what I was getting to before it I couldn't just make it happen all at once I might say velocity x equals a random amount velocity dot y equals a random amount or maybe velocity x minus equals point one I try to like figure out some way to change those variables but no we need to do this in a much more formal way what we need is to say we need to add another vector to this mover object that other vector we're going to add is a vector that we are going to call acceleration and just as location changes by velocity over time velocity is going to change by acceleration over time and this makes a lot of sense if you think about it right if you're driving a car and you think of pressing on the gas you're accelerating that car pressing on the brake you're decelerating the car but this analogy only takes us so far because you know you're thinking of speeding up and slowing down what would be really is important to realize is that acceleration is any change in velocity we could be changing the magnitude of our velocity or the direction of our velocity a turn a speeding up is slowing down it is a vector that adjusts velocity over time so so this is this is the exercise we have to ourselves this is our physics engine here this is our methodology acceleration changes velocity velocity changes ocation we don't ever set velocity to anything directly we don't ever set location to anything directly we now need an algorithm for acceleration we need to figure out what should acceleration be and so what I want to do in the rest of this video is add this stuff to our example and then look at a couple scenarios for what might some algorithms might be for computing an acceleration and see what types of effects we get okay I feel good about this had a little problem there for a second but we're moving on we're at five and a half minutes or so and so far we're good okay so here we are over here again and let's look at our class so we know we need to add to our object and acceleration we know that we need to give that acceleration an initial value and just to simplify things also let's give the velocity so velocity and acceleration both start at zero let's run this sketch again and what do we get a circle that doesn't move all this time and it's just a circle the center of the screen it's like it's a nice very happy circle no there's nothing nothing to say you have to move actually moving is very good for you and that's the standing thing I think actually it's anyway never mind okay these are pixels who cares okay so but we do need to add this other line of code velocity dot add acceleration so now our physics engine is at work acceleration goes into velocity velocity goes into location okay so now we need an algorithm for computing acceleration and I wrote down a couple possibilities over there there's another whiteboard that you can't see I wrote down some possibilities I hope the cameras don't shut off they're not going to everything's going to be fine so there's three that we're going to do here one is we're to look at a constant acceleration great week a probably figure that up pretty quickly we're going to look at a random acceleration and then we're also going to look at acceleration towards the mouse although I think I may just say that for the next video and have the entire video look at how you might have a dynamic acceleration that is a vector always pointing towards the mouse which is kind of an interesting prospect if you think about it okay so let's first look at constant acceleration well in fact this is a constant acceleration the acceleration is zero but let's give it a quantity I don't know what makes sense let's have it accelerate along the X I don't know five comma zero that sounds good right whoa okay so quickly out of control and I don't know what it's doing now so something we have to realize here is that we are living in a world of pixels I mean we're not let me rephrase that this is a world of pixels we live in a physical world where we talk to each other and we shake hands and we hug and we say hi and we eat food I don't know do things it's late I'm getting a little tired ignore me this is pixels the point of what I'm saying is five pixels per frame with acceleration it's kind of insane remember we're adding that acceleration to velocity every frame 5 10 15 20 25 30 35 30 French 30 times per second 60 times per second we're going to be moving 120 pixels in per frame in a couple seconds that's insane so I went off on a tangent but the point is when we're looking at acceleration values we need to think of small quantities we're gonna have to be tuning our physics engines appropriately to pixels and acceleration in this case makes sense with small numbers so a point O one let's see and we have our it's moving along it's getting faster and faster look at it go it's speeding up it's getting faster right you can see this is constant acceleration the object's speed we can see is getting faster and faster every frame as acceleration accumulates into velocity again you might be wondering after all this time it's just a circle moving across the screen and it's just getting faster I know but these are the building blocks and and you will obviously be more creative in this okay but let's look at this for a second and understand that acceleration doesn't just affect the speed of something we're noticing that because of the the velocity is being starting at zero but let's say I have the velocity actually start moving downwards at a rate of two pixels per frame look at what's happening to that it's accelerating to the right it's almost as if there's a wind force pushing it to the right it's started moving down but it's accelerating further and further to the right so this is really what's key here if you ever dreamt about programming smooth organic flowing motion of all different types of things then what you needed is to have a location velocity acceleration and you need to calculate that acceleration so this you can see it's speeding up faster and faster this is just still a constant acceleration the world is going to get much more interesting when we don't have a constant acceleration when acceleration changes over time based on any number of factors the simplest way I can think to demonstrate to you that to you right now would be let's give it a random acceleration so let's look at that so first let me stop that sketch let me put acceleration back to velocity back to zero acceleration back to zero and now in the update method we're actually going to compute an acceleration acceleration and you might think okay I'm going to make a new P vector and I'm going to give it some random amount bahbahbah so that's all well and good but one thing I should mention about the vector class is that the vector class actually as a function built into it which will give you a random unit vector this is incredibly valuable gives you a vector of length one at any direction that way anytime you want boom random direction you got one and you can scale it because it's a normalized unit vector you can scale it very easily so let's look at how we would do that we say P vector dot random 2d now notice that we have to specify 2d here this is one of the times where we want to make sure we don't get a random 3d vector because if we get the Z component we could potentially have the XO y component at 0 anyway we want a unit vector that's in two dimensions it's just X and y so if I run this let's take a look at what happens we can see look at it it's kind of accelerating randomly it's actually getting out of control really fast so again this is a kind of where I need to bring something up again with you guys this is not physics in any real way this is there's no world of things and grab forces and Malec Tron's and antimatter and the Sun that's going to explode in a hundred million years and their evolution this this is not the real world this is pixels on the screen ok so that most of the time we are just trying to create the feeling of something realistic then actually perfectly simulating the realism in some uber amazing scientific way and so one of the things that we'll often do is kind of happen you might call it a cheat but I should method I would I totally do not allow the world word cheating when it comes to programming this stuff because it's all cheating there is no cheating or not cheating none of this is real right there is no this is just a wall by the way wall is green there there's nothing here I can't get past it but anyway the screen is over here whatever what but all of that says that one thing that's often useful to do is say something like velocity dot limit v what that limit function does is it says you know what I'm going to introduce an artificial constraint over this program the velocity can never be have a magnitude greater than 5 if it if it ever has a magnitude greater than 5 shrink it down to 5 if it's less than 5 it's fine so that's what that limit function done with does which can actually be pretty darn valuable so you see here actually here we go we have this kind of nervous jittery x' moving thing and we've created it only by affecting the object's acceleration so we could we could now scale that we could make it more jittery less Yuri the point of this is that this is your exercise this is your job right now using this foundation and the example I'll link to it below if you're watching this on Vimeo or through another whatever wherever I put these I'm going to link to the example below that has this basic model try to create see if you how much personality you can put into the motion of something just by drawing a simple shape and only by affecting its acceleration if you're stuck for an idea see if you can make it dynamic like it's always following the mouse what if it accelerates towards the mouse and that's what we're going to look at in in the next video another couple ideas is what happens if you use Perlin noise what happens if you use I'm recording this right what happens if you use Gaussian distribution of acceleration values there's there's any number of possibilities just make something up try but whatever you do just only change I'm going to just highlight this right here only work with this part of the code see how far you can get just by messing with acceleration okay so in the next video we're going to look at accelerating towards the mouse we're cutting on it that's an exercise you can either just go right ahead or you can try it and then look at the video which will provide the answer and the exciting thing about all of this is that we're going to see soon how acceleration is the key to fulfilling Newton's laws of motion I don't know if that makes sense but it's getting late and I think I'll probably take a break and do some more of this tomorrow morning you don't need to know that somebody edit this right did I say this already somebody just download all these videos and edit them and like airbrush me or something to make it look better replace me with a puppet of a dinosaur or something I don't know you guys are good at this computer stuff okay I got to find the button to stop recording this time it was recording okay
