With timestamps:

00:06 - good morning welcome to the hour of code
00:09 - my name is Dan schiffman I'm
00:11 - broadcasting live from ITP which is a
00:16 - two-year Masters program at Tish School
00:17 - of the Arts at New York University uh
00:20 - and I'm here to give you or anybody
00:22 - who's watching this will get archived so
00:23 - people can watch you later a 1hour
00:25 - introduction to programming uh the
00:27 - context of that will be something called
00:29 - the processing programming environment I
00:31 - just called processing and uh I'm going
00:33 - to talk I'm going to do like a couple
00:35 - minutes just to talk about the
00:37 - processing foundation and overall goals
00:39 - I got to uh turn off my um I have a
00:43 - preview of my stream going over here has
00:44 - some audio so first of all uh if you're
00:47 - hearing me and you can see what's behind
00:50 - me and if you can kind of see this uh
00:54 - whiteboard over here ah uh let me know
00:57 - that the audio and the images are good
01:00 - um but uh rather than waste a lot of
01:02 - time um I'm just going to Dive Right In
01:05 - so I've got my eye over here on a chat
01:08 - uh I see um I see that there are some
01:13 - people saying things in the chat which
01:16 - is great so people are watching and I'm
01:18 - going to get started so I I think
01:20 - actually the stream a minute ago uh it
01:24 - started late so I'm just going to
01:25 - reintroduce myself again somebody will
01:27 - edit this to start right from this point
01:28 - at some point if this ever gets archived
01:30 - actually you know what I'm going to hit
01:31 - the record button so this will I'll have
01:33 - a copy of this as well so I'm going to
01:35 - pretend now pretend I'm starting
01:39 - over good morning and welcome my name is
01:41 - Dan schiffman I am here broadcasting
01:44 - live from ITP two years ma two-year
01:47 - Masters program at Tish School of the
01:48 - Arts which is part of New York
01:49 - University I'm in New York City live in
01:51 - New York City on Thursday morning I want
01:53 - to say Saturday night and like I'm any
01:55 - anywhere near as interested I don't know
01:57 - anyway that show whatever um put that
01:59 - aside uh welcome what am I here to do
02:01 - I'm here to do a 1H hour it is 10:02
02:04 - a.m. I'm here to do a 1H hour
02:05 - introduction to programming for the
02:07 - absolute complete and total beginner uh
02:10 - I'm going to take about five minutes to
02:11 - talk about what this thing called
02:13 - processing is and the processing
02:15 - foundation and I'm give you a little bit
02:16 - of a take on the hour of code that might
02:17 - be a little different than I hope than
02:20 - some things you might be reading or
02:21 - hearing about and then we're just going
02:22 - to Dive Right In I'm going to uh put
02:25 - processing up here I'm going to show you
02:26 - how to type some code make some stuff
02:28 - I've got a whiteboard over here so I can
02:31 - draw uh some diagrams if we need to I'll
02:33 - take little breaks I'll answer questions
02:34 - in the chat that's my plan so I'm just
02:37 - going to peek
02:39 - um uh yes so some people are asking if
02:42 - they can Skype in I didn't actually
02:44 - figure that out I'm going to do this
02:45 - again this afternoon by the way I'm
02:46 - going to do this again this afternoon at
02:48 - 1:30 p.m. with this other environment
02:50 - called p5js um so this morning is going
02:53 - to be processing which is the Java
02:55 - programming language and this afternoon
02:56 - at 1:30 it's going to be p5js which is
02:59 - the JavaScript programming
03:01 - language okay so I don't see I I'm
03:03 - looking in the chat I see it going there
03:05 - and I'm just going to get started so it
03:07 - is about 10:03 I want to give myself
03:10 - just 5 to 10 minutes to give you a brief
03:13 - introduction so something that I'm a
03:16 - part of is called the processing
03:17 - Foundation it's a non-for-profit
03:19 - organization uh about an uh I had a
03:23 - mission statement somewhere in here but
03:24 - it's later but the idea of processing is
03:27 - to make programming more you know in a
03:29 - very simp listic way just briefly to
03:30 - describe is to make programming more
03:32 - accessible to a wider audience and there
03:35 - are three tools that we are currently uh
03:37 - developing uh one is called processing
03:40 - with this P here which has been in
03:41 - development since 2001 this is what I'm
03:44 - going to use today in the tutorial
03:46 - another tool which is new um um which is
03:49 - called p5js which is built on top of
03:51 - JavaScript and there's also processing.
03:53 - py which is a mode for this processing
03:56 - which allows you to type python code but
03:58 - I can't believe I'm starting this by
03:59 - talking about different programming
04:00 - languages here's what I really want to
04:02 - talk about um so I'm going to just
04:04 - borrow here from Mitch Resnik and David
04:06 - seagull somebody I'm sure could Google
04:08 - this and and post a link to this blog a
04:10 - medium Post in the chat um who posted a
04:13 - recent article called a different
04:14 - approach to coding uh Mitch Resnik and
04:17 - his research group at the MIT media lab
04:19 - are the creators of a programming
04:20 - environment called scratch which you
04:22 - know I I would say it's is is something
04:24 - for kids to get excited about
04:26 - programming and creation and creativity
04:28 - of course I use it as an adult and I
04:30 - find it to be a wonderful thing so it's
04:31 - not just for kids and I think what's
04:33 - important about what in this medium post
04:36 - is thinking about I want to talk today I
04:39 - want to spend this hour about expressing
04:42 - yourself with code creativity through
04:45 - code so the hour of code this is the
04:47 - code.org website is a wonderful thing
04:50 - many new people are discovering
04:51 - programming and thinking about code and
04:53 - may uh maybe getting excited about
04:55 - learning something new uh uh putting
04:58 - getting more people is especially a more
05:00 - diverse uh set of people of different
05:02 - genders and ethnicities and countries
05:05 - interested in perhaps majoring in
05:06 - computer science as a field of study and
05:08 - all of that is wonderful but one thing
05:10 - about most of these tutorials that
05:12 - you'll find on code.org is most of them
05:14 - are puzzles with a correct answer and if
05:17 - you've ever made a piece of art you know
05:19 - art is really about asking questions is
05:22 - one way of thinking about art so what
05:23 - does it mean to not have a correct
05:25 - answer for your code what's lost in all
05:27 - of these tutorials which are about
05:29 - solving a puzzle or winning a game type
05:32 - speak what if you could use programming
05:34 - for creativity and I I'll give you I'm
05:36 - going to quote from this medium post
05:38 - rather than I you know I wish I had
05:40 - written this myself but it really spoke
05:41 - to me when I read it for us coding is
05:43 - not a set of technical skills but a new
05:45 - type of literacy and personal expression
05:48 - valuable for everyone much like learning
05:49 - to write um this is this quote is
05:52 - talking about how this many of these
05:53 - coding activities the students are asked
05:55 - to program the movements of a virtual
05:56 - character navigating through a set of
05:58 - obstacles toward a goal so so this is
06:00 - about that puzzle Sol solving but in
06:02 - some ways this is like offering a
06:03 - writing class that teaches only grammar
06:05 - and punctuation without providing
06:07 - students a chance to write their own
06:08 - stories so this is what I want to expose
06:11 - you to today if you can learn the basics
06:13 - of code what ideas what can you express
06:16 - can you communicate through code um and
06:19 - so I pulled this really briefly this
06:21 - morning from uh Wikipedia I you know I
06:23 - think it's the other thing that I think
06:25 - is relevant here in this discussion
06:27 - there's a lot of energy around computer
06:29 - comp Science Education computer science
06:31 - in high schools Compu uh there's a in
06:33 - New York City we've got CS for all uh
06:36 - computer science for everyone this is a
06:38 - great idea in many ways I think let's
06:40 - have more people learn to code and more
06:41 - people learn about programming and what
06:43 - it can mean but this term computer
06:45 - science a computer scientist specialized
06:48 - in the theory of computation and the
06:49 - design of computational systems this is
06:51 - really important we need people to spend
06:54 - their lives deep in studying computer
06:56 - science and build compilers and systems
06:58 - and all computers and all sorts of
07:00 - things like that but what if you are a
07:02 - dancer a biologist a fashion designer an
07:04 - economist a journalist a musician a
07:05 - painter a poet a baseball player a game
07:07 - designer a teacher or a chef what if you
07:09 - don't want to be a computer scientist
07:11 - but code is important you know you might
07:13 - want to have a website you might want to
07:15 - uh visualize your own uh running data as
07:18 - you're training for a marathon there are
07:20 - so it's just like you are expected to
07:22 - learn to write essays but you don't
07:24 - necessarily and and you and you need to
07:26 - write if you're a dancer biology fashion
07:28 - designer Etc Etc what does this mean to
07:31 - apply code to the thing that you're
07:33 - interested in to the ideas that you want
07:34 - to express and I think that uh
07:37 - processing is uh an environment which is
07:39 - a great place to get started in thinking
07:41 - this way I'm going to look on the chat
07:43 - uh and people are listening to me uh and
07:47 - there's a bunch of people watching which
07:48 - is really exciting so I I'm I'm having a
07:50 - little I've have done this before with
07:52 - this many uh people so I'm trying to
07:53 - keep an eye on the chat but I'm going to
07:55 - keep going but I want to get to the code
07:57 - stuff first so the first thing I just
07:58 - want to mention is none of the these
07:59 - ideas are are really that new um this
08:02 - idea of art through code visual art
08:04 - through code expressing yourself through
08:05 - code you know I learned when I was a kid
08:08 - using the logo programming language was
08:10 - a way of issuing commands to a turtle
08:12 - that walks around the screen to draw
08:13 - pictures um there's something I never
08:15 - actually used this myself but there's
08:17 - something called hypercard which I know
08:18 - a lot of people discovered creativity
08:20 - through computers through hypercard
08:22 - which is part of the one of some of the
08:24 - original Mac operating systems um there
08:26 - is something called design by numbers
08:28 - which is really historically I think the
08:31 - uh the thing that came right before
08:32 - processing so designed by numbers was a
08:35 - programming environment for I would
08:36 - Loosely say for visual designers or
08:38 - graphic designers created by John maida
08:41 - uh who was a professor at the MIT media
08:44 - lab uh and was in fact the professor of
08:47 - Casey Reese and Ben fry who are the
08:50 - original creators of processing and they
08:52 - started this processing project in 2001
08:54 - studying with John maida and looking at
08:56 - design by numbers and thinking about
08:57 - taking that even further so so and then
09:00 - of course there's scratch which I think
09:02 - is you know also developed at the MIT
09:04 - media lab uh with Mitch resnick's
09:06 - lifelong kindergarten Group which is a
09:08 - wonderful environment in particular for
09:10 - younger kids in the sense that you don't
09:12 - have to uh necessarily type your code
09:14 - but you get to put these puzzle pieces
09:16 - together um to implement programming
09:19 - like Concepts so okay so this leads me
09:22 - now I got to get started here it's 1010
09:23 - we got to do some programming um um we
09:27 - got to really get into some programming
09:28 - but this leads me to the processing
09:30 - foundation so everything that I've been
09:31 - talking about in these last 10 minutes
09:34 - uh is what the processing Foundation
09:36 - exists for and I encourage you to go to
09:38 - processing foundation.org I'll put a
09:39 - link in the description of this video
09:40 - when it gets archived look at some of
09:42 - our initiatives look at some of our
09:43 - projects we've got this new Fellowship
09:45 - we're sponsoring as particular if you're
09:47 - an educator and you work with uh a a a
09:52 - group of of of kids or adults who don't
09:55 - necessarily have easy access to code and
09:58 - learning these tools we're looking to
09:59 - fun projects that bring programming and
10:01 - bring processing to a wider audience
10:03 - there's pigeons right outside my window
10:05 - hi pigeons I maybe I'll close the window
10:07 - it's just very very hot in here and I
10:09 - might have to open it again later maybe
10:10 - the audio is now better um so take a
10:12 - look at processing this is the
10:13 - processing foundation's Mission I want
10:15 - to just get started in in in in looking
10:18 - at code now but the one last thing I'll
10:19 - mention is um I think that if you're I'm
10:22 - going to move now to the processing
10:24 - website uh which I've got uh here uh if
10:27 - you're interested and I I would would
10:29 - love to spend the next 45 minutes just
10:31 - showing you exciting and unique and
10:32 - amazing projects made with processing
10:34 - and other creative uh tools that involve
10:37 - programming but I might encourage you
10:39 - just to go to the processing website to
10:41 - look at the exhibition uh and sort of if
10:43 - you're trying to think of like well I
10:45 - get what you're talking about but I
10:46 - don't like what are does this really
10:48 - happen or people really making things um
10:49 - there's a there's a nice set of projects
10:51 - you can take a look at there so um so
10:53 - let me make a note over here for you
10:55 - guys uh this is the URL where you want
10:59 - to go right now if you want to follow
11:01 - along and start typing code with me so
11:04 - first of all can everybody read that
11:05 - somebody say in the chat if you can read
11:07 - that I've got by the way Periscope going
11:09 - here which I'm just going to shut off um
11:12 - and I can erase this smiley face so this
11:15 - is where you want to go right now
11:16 - processing.org uh and this is the
11:19 - program environment I'm going to use
11:20 - we've got about 45 minutes to 50 minutes
11:22 - I I'll stay here all day but I think
11:24 - it's good to sort of contain this into
11:26 - an hour obviously I have um not
11:28 - obviously but uh if you if you're
11:30 - interested in more after today I have
11:31 - lots more video tutorials and at the end
11:33 - maybe what I'll try to do is point you
11:35 - towards some resources some books and
11:37 - other things you might look into if you
11:38 - want to learn more okay so uh coming
11:40 - back over here what you want to be on
11:42 - now is the processing website so if you
11:44 - go to just the processing website you're
11:46 - going to be he this like I've got some
11:48 - sort of inception thing going on here
11:50 - but there is a video of me talking about
11:51 - some of the new features of processing 3
11:54 - this video won't be so relevant to you
11:55 - if everything here is totally new this
11:57 - video is really for people whove been
11:58 - already using processing and want to
12:00 - know what's new in processing 3 um but
12:03 - where you want to go is this link
12:05 - download download that's where you want
12:07 - to go next I'm going to go to download
12:10 - now one thing you'll notice here is it's
12:11 - asking you for a donation this is your
12:13 - first day perhaps learning to program
12:14 - all this is new to you I highly
12:16 - encourage you right now to click no
12:18 - donation um you don't need to take part
12:20 - of this like short hour and and worry
12:22 - about a credit card or something but I
12:23 - will mention again that these
12:25 - environments they take a lot of time and
12:26 - a lot of energy and mostly most all of
12:29 - the people who are building these things
12:30 - are volunteers essentially so we started
12:32 - this non-for-profit Foundation to try to
12:34 - fund fellowships and do more and
12:36 - continue the development so if you're
12:37 - interested in funding us uh wonderful
12:40 - okay so I'm going to now click download
12:43 - and you're going to see here now it's up
12:44 - to you pick your operating system are
12:46 - you on windows are you on Linux are you
12:48 - on Mac I am on a Mac right now so I'm
12:51 - going to show you this tutorial using a
12:54 - Mac um and so if I were to download it
12:58 - uh we can see that it is downloading
12:59 - here and it's got 8 seconds left now I'm
13:02 - going to be like the um a cooking show
13:04 - where I already had the thing in the
13:05 - oven cooking beforehand so assuming I've
13:08 - downloaded it and extracted it what I'm
13:10 - actually going to get is an application
13:13 - and the application is going to look
13:14 - like this you can see here this is the
13:16 - processing application it's got the
13:18 - three there this is processing three the
13:20 - actual version you're using right now if
13:21 - you downloaded that was
13:23 - 3.0.1 as things get fixed and things
13:25 - changes there'll be maybe an 0.2 and an
13:28 - 0.3 and maybe someday there'll be a
13:30 - processing four who knows um that's
13:32 - what's going on okay um so I see that
13:37 - there are people in the chat saying a
13:39 - few things you've got it you're able to
13:41 - watch it on your phone okay um it is a
13:45 - big file uh it's a large application
13:47 - it's also uh on it it's uh it comes with
13:50 - it has Java embedded in it uh because
13:53 - it's using the Java programming language
13:55 - okay so now what I'm going to do is
13:57 - launch processing now I just
13:59 - realized um you're going to I just
14:02 - realized right now that um hold on let
14:04 - me double click
14:07 - it this is like of course what happens
14:10 - when you're um oh it's already open ah
14:15 - so I'm going it was already open That's
14:17 - why nothing was happening so what what
14:19 - you're going to get now you're going to
14:20 - get a slightly different oh no I think
14:22 - you might get this welcome message it
14:24 - depends you're going to get a different
14:26 - welcome message whether or not you had
14:27 - processing installed previously on your
14:28 - machine Etc you don't really need to
14:30 - worry about any of this right now just
14:32 - click this get started button and you're
14:36 - going to have this window on your
14:39 - computer look at this so this is
14:42 - processing and guess what this is all
14:44 - you need to start coding to start
14:46 - learning about programming to start
14:47 - writing your first program this is one
14:49 - of the reasons why I just love
14:50 - processing because it's a single thing
14:52 - you can download it's a place where you
14:54 - can write your code it's a place where
14:55 - you can run your code it's a place where
14:56 - you can import extra code libraries it's
14:58 - all there all in this one package
15:01 - obviously not obviously but as you go
15:03 - further down your journey and life of
15:05 - programming you might discover oh my God
15:06 - there's all these different tools I have
15:07 - to learn I have to piece this together
15:09 - with this thing and connect it with this
15:10 - thing and then I have to download this
15:11 - and install this other thing so that all
15:13 - of that will come the nice thing about
15:14 - getting started here is this is all you
15:16 - need um yes uh could you wait until the
15:20 - down so people are asking me to wait
15:21 - until it gets downloaded so I'm going to
15:24 - um I'm going to sort of
15:26 - like I can to some extent yes I can wait
15:28 - and fact I'm going to I have I'm going
15:30 - to have a little bit of uh my tea over
15:34 - here you know I don't I have a sense of
15:37 - what the size of the audience is right
15:39 - now watching um uh it says 34 people
15:43 - which is really kind of amazing actually
15:44 - and I know some of you are large groups
15:46 - may be watching in a classroom which is
15:47 - really exciting to me um uh so but so
15:52 - I'm going to try to pause a little bit
15:53 - we're on an older version but that's
15:55 - fine to follow yes if you are using an
15:56 - older version of processing
15:59 - I don't think you need to upgrade right
16:01 - now I do highly recommend though that
16:03 - after this is over that you go and
16:05 - update to the newest versions there's
16:06 - just so many nice improvements but what
16:08 - I'm going to do today is really just
16:10 - using some of the basic core ideas of
16:11 - processing and none of that has changed
16:13 - really since 2001 just the interface the
16:16 - features a lot of the libraries a lot of
16:18 - that has really
16:20 - changed okay I hear from uh I think uh
16:23 - one of our viewers in India in Mumbai I
16:26 - think I can't remember I was like trying
16:27 - to see where people are from that they
16:28 - they finished downloading so let's get
16:30 - going so first of all here's an exciting
16:32 - moment you are now going to run your
16:36 - first program all you need to do is go
16:39 - click this run
16:41 - button run and there you go you have
16:45 - executed and are running your first
16:47 - program so what processing always does
16:49 - now you haven't written any code yet
16:50 - this is what's kind of amazing so behind
16:52 - the scenes a essentially an empty
16:54 - program has executed with no content no
16:56 - instructions that you've written but it
16:58 - has opened a window on your computer so
17:01 - what processing does uh is it opens a
17:03 - window in your computer and what you are
17:06 - going to learn what I'm going to show
17:07 - you today is how to write code how to
17:08 - write instructions to draw into that
17:11 - window so here is how every single
17:14 - instruction will look I'm going to say
17:18 - this is the command that you're going to
17:20 - issue followed by a
17:23 - parentheses follow uh closed with
17:26 - another parentheses and ended with a
17:28 - semic
17:29 - so this is the first thing that I want
17:31 - you guys to learn today is that
17:34 - programming is essentially the act of
17:36 - writing instructions for the computer to
17:39 - follow the difference is I could say
17:41 - everybody stand up you know everybody
17:43 - put your hand on your head everybody you
17:45 - know Pat your head and rub your tummy am
17:47 - I actually doing that or is that maybe
17:49 - it's the other way is harder who knows
17:50 - so this is me issuing constructions but
17:53 - I could have said please stand up or
17:55 - upstand even though that's weird and
17:57 - incorrect grammar you probably would
17:58 - have gotten in any way with programming
18:00 - you must must must follow the exact
18:02 - syntax I will show you what happens if
18:04 - you have an error in your syntax and
18:06 - this is one of the hardest things to get
18:07 - started with right when you're first
18:09 - learning is you a missing semicolon a
18:12 - missing parenthesis a missing comma
18:14 - these kind of things can be a problem
18:16 - and nothing will work so the thing that
18:18 - goes inside of here are AR this is not a
18:21 - good pen I'm going to let me try this
18:24 - one are arguments they're called
18:27 - arguments so if this is the command and
18:30 - these are the arguments that are going
18:31 - to be inside the parentheses arguments
18:33 - are things that modify the command so if
18:36 - my command to you is walk I could say
18:39 - the arguments might be walk three steps
18:41 - or walk 10 steps a three or a 10 that's
18:44 - a thing that modifies the command walk
18:46 - so for example and those are always
18:49 - separated by commas so here's a command
18:51 - that will do first size parentheses some
18:56 - number followed by a comma followed by
18:59 - some other number followed by the end
19:00 - parentheses followed by a semicolon okay
19:03 - and the question is what goes in these
19:06 - two spots think about that try I'm going
19:09 - to type it with you uh you can try it
19:12 - yourself put any numbers you want in
19:13 - there I'm going to be really
19:15 - conservative and I'm just going to say
19:17 - 640 by 360 I've done this before so uh I
19:22 - kind of not not that not that there is
19:23 - there's no correct answer here but now
19:25 - if I hit run something magical has
19:28 - happened this window is no longer that
19:31 - little tiny window this window is wider
19:34 - and taller now let's think about what
19:36 - those numbers could possibly mean 640 is
19:40 - describing the width of the window 360
19:45 - is describing the height of the
19:47 - window what's the unit of measurement
19:50 - you might be asking yourself it's you
19:51 - know is that 640 in or centimet or you
19:55 - know some sort of strange other
19:57 - measurement that I can't think of it's
19:59 - not none of those things and you know
20:00 - you guys have probably all use computers
20:02 - before you probably anticipating what
20:03 - I'm going to say that measurement is
20:05 - pixels so if you've ever taken a picture
20:07 - with a phone uh a camera or downloaded
20:10 - something you often see like oh this
20:12 - image is 1,00 by 720 or you hear like oh
20:15 - this is HD 1080p video that 1080 is
20:19 - referring to the number of pixels of a
20:21 - width of a particular video um I'm going
20:24 - to just check the chat um do we need to
20:27 - keep an eye on app also yes everything
20:30 - is case sensitive so if you put a
20:33 - capital S for size it will not work
20:35 - that's a great question so what I want
20:37 - to do and we're kind of like ramping up
20:39 - here at 1020 I'm kind of keeping an eye
20:41 - on the clock um is that as we move over
20:45 - here um what I want to do now is talk
20:47 - about okay so I put
20:49 - 640 360 so let's think about now what
20:54 - that actually means in the context of
20:56 - that
20:57 - window that's being opened so
21:03 - here so if this
21:07 - window oh I'm I'm in the I'm in the
21:09 - wrong place hi everybody sorry about
21:11 - that I'm glad I noticed wasn't that long
21:14 - this happens to me a lot when I do these
21:15 - because I have a little button here that
21:16 - switches the camera um so just to recap
21:20 - for a second I'm looking I'm unpacking
21:21 - here what I meant by 640x 360 in that
21:24 - window so if this window is 640 pixels
21:28 - wide and this window is 360 pixels High
21:33 - there's a really
21:34 - important thing here that I need to show
21:37 - you to talk to you about which will
21:39 - which will then inform all the other
21:42 - functions I'm about to show you other
21:43 - commands that you can write so I was
21:45 - using the word command by the way to
21:46 - describe this the actual word this the
21:50 - programming term is this is really a
21:52 - function a function call is a function
21:54 - that I'm executing but I think while
21:56 - you're getting started sort of useful to
21:58 - think it as a command or instruction so
22:00 - if this is 640 pixels wide and 360
22:04 - pixels High here's something really
22:05 - important that you need to know this
22:08 - pixel over here is the pixel 0 comma 0
22:12 - it is the origin pixel so some of you
22:15 - might be familiar you know depending on
22:18 - what you what sort of math kind of
22:20 - classes you've taken or what you've
22:21 - looked at or you might have used a piece
22:23 - of graph paper you might be used to a
22:25 - coordinate system like this which has a0
22:28 - in the middle
22:29 - an xaxis and a y AIS this is known as a
22:32 - cartisian named for Renee dekart
22:34 - mathematician a cartisian coordinate
22:36 - system a computer-based coordinate
22:39 - system the processing window coordinate
22:41 - system works in a very similar way but
22:43 - it's a little bit different here the Y
22:45 - AIS you might count up one 2 3 if Z 0 is
22:50 - here this is pixel one this is pixel 2
22:52 - this is pixel 3 this is pixel one this
22:54 - is pixel 2 so if you think about it for
22:55 - a second what is this pixel here in the
22:57 - middle
22:59 - that pixel here in the middle is pixel
23:01 - 320 halfway from 0 to 640 comma 180
23:07 - halfway from 0 to 360 so this idea of
23:10 - thinking of the window as a coordinate
23:13 - system is really key to all of the next
23:16 - commands function calls I'm going to
23:17 - show you I only showed you size so
23:20 - here's a list of some things that I'm
23:21 - going to show you next rectangle line
23:25 - you know triangle ellipse I'm not really
23:28 - wrting this all the way out so you can
23:30 - see the first thing that I'm going to
23:32 - show you is processing as an environment
23:34 - is a is a programming environment geared
23:36 - towards drawing pictures with code you
23:38 - can do a lot more with it and think Way
23:41 - Beyond that but this is a great way to
23:42 - get started so if you can figure out
23:44 - some function calls some commands for
23:46 - drawing pictures you can design your own
23:48 - picture on the screen using code and of
23:50 - course later animate it move it make an
23:52 - interactive all those types of things so
23:54 - let me come back over here I'm going to
23:56 - uh see if anyone has any questions
24:00 - um uh has okay people are asking has
24:03 - this just started I'm doing this my plan
24:05 - is I've got another 35 minutes so I you
24:08 - know my goal is to do this for an hour
24:10 - again uh those of you who are I I'm um
24:12 - some people are
24:15 - asking like lost my I do I'm I'm G to be
24:17 - doing a lot of live streams yes I try to
24:19 - do these every week but I'm doing this
24:20 - particular one to celebrate this hour of
24:22 - code thing okay uh and I do have lots of
24:25 - videos on my YouTube channel for those
24:26 - of you are looking for more okay so
24:28 - let's come back here now here we go what
24:32 - are some things we can type so um so
24:35 - let's say let's start I don't know
24:36 - somebody in that no you guys are like 20
24:38 - seconds behind me so I can't I can't
24:39 - actually live ask you to like shout
24:41 - things out in the chat but let's start
24:43 - with
24:45 - um uh I'm trying to think let's start
24:48 - with let's start with
24:51 - line I think that's fine let's start
24:54 - with line so I'm going to say line 0 0
24:59 - 320
25:01 - 180 now you have to think to yourself
25:04 - what will this make happen so first of
25:07 - all line is the command the function
25:09 - call the arguments are 0 320180 what do
25:13 - those mean this is a question that we
25:15 - need to answer and you can see it comes
25:17 - right after size so again programming is
25:19 - the act of writing instructions for the
25:21 - computer to follow the first one will
25:23 - follow is size which we now know sets
25:25 - the size of the window the second one is
25:26 - line which you could probably imagine
25:28 - what it does but let's run this one to
25:31 - see and you can see there we go we've
25:33 - got this line and let's think about that
25:35 - what did we just say over here this is 0
25:37 - 0 this is 320 180 so that line function
25:42 - the line function connects an X and A
25:45 - y-coordinate to another X and A
25:47 - y-coordinate and here you go an X and A
25:50 - y-coordinate to an X and a y coordinate
25:52 - the first one being 0 0 the second one
25:54 - being 320 1880 so I could easily just
25:58 - now
25:59 - add a second one and I could just pick
26:01 - something whatever I feel like 100 comma
26:03 - 50 uh 600 comma 3 uh 300 uh comma 10 and
26:08 - let's put this one actually over on the
26:10 - other side and let's run this again and
26:13 - you can see now I have this other line
26:15 - here that I drew based on these
26:16 - coordinates 500 comma 50 to 600 comma 10
26:20 - so you can see that you can write the
26:23 - line instruction as many times as you
26:25 - like with different arguments with
26:27 - different uh with different
26:29 - modifications to draw a line in a
26:31 - different
26:32 - place okay uh I'm
26:35 - looking uh yes if the width goes from 0o
26:38 - to 3639 the real middle one yeah so I'm
26:42 - kind of being Loosey Goosey about some
26:44 - of this stuff somebody asked and this is
26:45 - kind of an interesting question um you
26:48 - know if this is pixel zero and I'm
26:50 - saying it's 640 wide it's actually
26:52 - there's the last pixel is actually pixel
26:55 - 639 if you divide by two really but you
26:58 - know this is the thing we don't need to
27:00 - worry about these fine details right now
27:02 - I think they're less important than the
27:03 - sort of basic idea of getting things up
27:05 - and running and starting to make things
27:07 - so here's now another question how would
27:09 - you do this on your own if I wasn't here
27:12 - just like me as much as I might like to
27:14 - just forever be live streaming talking
27:16 - about the functions and processing if
27:18 - you were just by yourself or with some
27:19 - friends and you wanted to how do you
27:21 - draw a rectangle how do you draw a
27:22 - triangle wanted to look this stuff up
27:24 - how would you know like it's not so
27:26 - clear what those numbers would do just
27:28 - you can with some intuition you could
27:29 - guess and sort of figure it out so all
27:31 - of this comes down to looking things up
27:34 - in the reference so this if you decide
27:37 - you want to keep programming after today
27:39 - welcome to your life reading
27:41 - documentation reading reference
27:42 - materials reading tutorials so you have
27:45 - to rely on the language or environment
27:47 - having a good set of documentation and I
27:48 - I like to think that the processing uh
27:50 - processing project has excellent
27:52 - documentation so what I'm looking for
27:54 - here that I want to look at is the
27:55 - reference so on the processing website
27:57 - I'm back at in.org I'm going to go to
27:59 - reference and uh what I'm you can see
28:02 - there's a lot of different functions
28:04 - that you can call in processing what
28:06 - what we're kind what I'm kind of
28:08 - focusing on today are 2D Primitives and
28:11 - you can see Arc ellipse line Point quad
28:14 - rect triangle so let's look at the line
28:17 - page and a couple things you can see
28:19 - number one is it's showing you first an
28:21 - example so that's the syntax this is how
28:24 - it looks line is the name of the
28:26 - function and you can see if if you give
28:28 - it these arguments you get this in your
28:30 - window and you can see some other in
28:33 - some other uh examples there's even a
28:35 - way of doing lines in 3D which is a bit
28:37 - beyond what we're going to do today and
28:38 - you can see here look this is now a sort
28:41 - of generic way of thinking about so
28:43 - there's two ways to call the line
28:45 - function there's also this z-axis if
28:47 - you're in 3D we're going to ignore that
28:49 - for right now so this first way is what
28:50 - matters line X1 y1 X2 Y2 and if I scroll
28:55 - further down you can see here what do
28:57 - those arguments mean X1 is the x
29:00 - coordinate of the first point y1 is the
29:02 - y coordinate of the first point X2 is
29:04 - the x coordinate of the second point so
29:06 - what this page is doing is it's
29:07 - explaining this is the syntax these are
29:09 - the arguments you can put in this is
29:11 - what those arguments do so now if you
29:13 - wanted to say how do I do a triangle I
29:16 - could go back and I could click on
29:19 - triangle and I could see okay well
29:20 - here's an example and you can see what
29:22 - does a triangle do it makes a triangle
29:24 - and sorry this is kind of small it makes
29:26 - a triangle out of three points X1 y1 X2
29:29 - Y2 X3 Y3 let's add that to our code so
29:31 - I'm going to go back to my processing
29:33 - sketch and I'm going to say triangle and
29:35 - I'm going to say uh I can if I can spell
29:38 - triangle uh 50 comma 50 uh 200 comma 50
29:43 - uh 150 comma 200 and I'm going to run
29:47 - this and you can see oh and I just
29:49 - turned off because my camera turns off
29:51 - after a half an hour to save the power
29:53 - and that one turned off too you can see
29:55 - now there's a triangle on the screen and
29:57 - the triangle is made from those three
29:59 - points X1 y1 X2 Y2 X3 Y3 hooray a
30:03 - rectangle so let me so I'm just looking
30:05 - um in the chat to see if there's any
30:07 - important questions somebody's asking if
30:09 - I'm going to do today at 1:30 p.m
30:12 - eastern time I'm going to do exactly
30:13 - what I'm doing today but using P5 doing
30:15 - right now but using p5js which is
30:17 - Javascript programming environment okay
30:19 - so um let me come back over here for a
30:21 - second and let me turn this camera back
30:23 - on so I'm going to I'm going to take
30:25 - like a not a break but I'm going to
30:27 - pause for five minutes to let people who
30:29 - are watching this tutorial kind of
30:30 - design their own shape
30:33 - um so for example let me just show you a
30:36 - few things I'm going to quickly map out
30:38 - some of these for you we looked at line
30:40 - and triangle rectangle takes an x a y a
30:45 - width and a
30:47 - height so you define a rectangle by the
30:50 - point on the corner XY and some width
30:54 - and some height and ellipse which is a
30:57 - way of drawing a Circle or an ellipsoid
30:59 - elliptical uh round thing also takes an
31:02 - X and A Y and a width and a height the
31:06 - difference being that the XY is at the
31:09 - center and this is the width you can
31:12 - think of it's diameter across and this
31:14 - is the height it's diameter up and down
31:16 - so I might suggest to you right now
31:19 - there's Al that you now your kind of
31:21 - assignment in five minutes before we
31:23 - move on to the next thing is try to make
31:25 - a picture with some rectangles some
31:28 - lines some triangles and ellipses of
31:29 - course there are other functions there's
31:31 - quad there's Arc and there's a zillion
31:33 - things in there in processing but if
31:34 - you're really here and just being a
31:36 - beginner what I would do is um limit
31:39 - yourself to these functions look at them
31:41 - in the reference copy and paste the code
31:43 - examples from the reference into your
31:45 - code try playing with the numbers see
31:47 - what you can design uh and you know I'm
31:49 - kind of I'm I'm I'm loathed to even
31:51 - suggest what kind of thing you might
31:53 - draw because there's so many
31:54 - possibilities and I don't want to to
31:56 - send you all in one particular direction
31:57 - so as creative as you can expressing
31:59 - yourself but also realize just throw
32:01 - some stuff on the screen because you
32:02 - just got about 5 minutes before guess
32:04 - what I'm going to add color to this so
32:06 - let's see what you guys get um I'm I'm
32:09 - having a little more trouble than I
32:10 - anticipated like following the chat and
32:12 - that sort of thing but um uh now is a
32:15 - good time also to ask any questions in
32:17 - the chat I'm going to scroll back and
32:18 - read some of it um while you're doing
32:20 - this quick little exercise um and that
32:22 - sort of thing okay so I'm I'm going to
32:24 - be here still but I'm going to kind of
32:25 - be a little less talking to the camera
32:27 - for a minute I'm going to drink some
32:28 - more of this
32:33 - tea okay I'm just looking back to see if
32:36 - there are any other
32:38 - [Music]
32:40 - questions
32:42 - um Canada I'm sorry you're from Canada
32:45 - somebody said they were from Mumbai
32:47 - which was exciting
32:51 - um ah so someone's saying they have to
32:53 - leave soon for their school or their
32:55 - class and I so I'm definitely willing if
32:57 - you're a school or an organization and
32:58 - you want to do this again sometime and
33:00 - you have a group we can coordinate it
33:02 - I'm I'm game it's a very busy time of
33:04 - year now in December but I think
33:06 - probably we could look for a time in
33:07 - January or February for sure um and
33:10 - check here
33:13 - uh okay I see people are typing things
33:15 - in I'm just looking
33:17 - here um
33:26 - and oh
33:29 - okay
33:31 - uh
33:35 - and uh okay so how's that going
33:37 - everybody if you have a question type it
33:39 - in the chat uh you're from Mumbai okay
33:41 - Chris Chris Kris
33:45 - 1234 uh okay so uh guess what I'm gonna
33:47 - make something so I'm GNA sit here and
33:50 - make something you can follow along with
33:51 - me if you want uh I don't know what to
33:54 - make though somebody give me an
33:56 - idea uh
34:02 - um let me look at that okay I've got a
34:05 - oops Circle it's too
34:08 - big make a little circle in the middle
34:11 - why did I oh 180 is where I wanted that
34:13 - to be uh then I'm going to make a
34:17 - line uh at like uh let's put the line
34:21 - behind the circle notice the order that
34:24 - you're typing things makes a big
34:26 - difference uh
34:30 - [Music]
34:34 - uh and
34:36 - uh let's see okay I've got a I'm making
34:39 - a little like alien
34:51 - thing there we go there's my little
34:53 - alien it's going to be a oneeyed alien
34:55 - with a rectangle
35:07 - uh there we go this is my okay this is
35:10 - my design so you can see uh you know how
35:14 - this is going I'm going to look in the
35:15 - chat
35:18 - uh robot smile face trying to make an
35:21 - hour glass with two triangles and two
35:23 - lines these are all great ideas
35:25 - wonderful um okay I'm going to give us a
35:28 - couple more minutes and then I'm going
35:31 - to start I'm going to come over here and
35:32 - erase I wanted to get to animation so we
35:35 - don't have a ton of time but I think I
35:38 - can do it color is something we can add
35:41 - somewhat easily and
35:47 - quickly
35:49 - okay and let me come back here and
35:55 - uh okay so I'm I'm going to move on now
35:59 - and start talking about color uh you
36:01 - know realistically if we were doing this
36:03 - as a dayong workshop you would have had
36:05 - a half an hour hour to try to make
36:07 - something and there would been a lot of
36:08 - questions but I think in the interest of
36:10 - time here and trying to do this in an
36:11 - hour I'm going to move on now to the
36:13 - next thing so this is what I've got I
36:15 - made this for myself it's I don't know
36:17 - what it is but it's I like it and you
36:20 - can see this is my window uh it's 640x
36:23 - 360 I've got two lines and I've got
36:25 - three circles and one rectangle there in
36:27 - the middle of that Circle so um
36:30 - certainly I think what you're probably
36:31 - imagining in your head is it would be
36:33 - nice if not everything was black and
36:35 - white so one thing you might be noticing
36:37 - here is processing picked some default
36:39 - colors for you the default being that a
36:42 - particular object's outline is black but
36:45 - its interior is white so you can see up
36:48 - there the interior of that circle is
36:49 - white and the the background of the
36:50 - entire thing is this light gray so all
36:53 - of this is stuff that you can change on
36:56 - your own and
36:58 - the thing that you need to learn about
37:00 - to do this well okay so there's three
37:03 - new commands if you haven't done this
37:05 - before new functions that are key to
37:08 - doing color one is
37:14 - background and what goes in here is the
37:17 - question another is
37:20 - Phil what goes in there is the question
37:23 - and another is
37:25 - stroke the good news for you you is that
37:28 - what goes inside each of those functions
37:31 - is the same thing it's the information
37:33 - to describe a color so how do you
37:37 - describe a color so actually so first of
37:39 - all let's let's make one let's let's
37:41 - make one distinction here which is that
37:43 - let's say I'm drawing a circle on the
37:45 - screen the stroke refers to the outline
37:49 - of that Circle so this assigns the color
37:51 - to the outline the fill assigns the
37:54 - color to the interior of the shape and
37:56 - there's a way that you can have a shape
37:58 - that's empty in the interior with no
38:00 - fill or that has no outline with no
38:02 - stroke and those are things you'll find
38:04 - in the reference but I'm going to just
38:05 - focus on the basics here which is giving
38:07 - every shape a fill or a
38:09 - stroke now there are two ways there's
38:12 - more than this but right now I think a
38:14 - good way to start is there are two ways
38:16 - to think about color gray scale and what
38:19 - I'm going to call
38:20 - RGB
38:22 - color gray scale meaning that I have a
38:26 - single value that determines the amount
38:29 - of white in the color so if there is
38:32 - zero white in the color then I have
38:36 - black and if there is
38:39 - 255 in the color then I have white so
38:43 - this is the range so the range for
38:46 - grayscale as defined by default in
38:48 - processing is between 0 and 255 if you
38:52 - give if you say Phil zero you will have
38:55 - a black interior if you say fill 255 you
38:58 - will have a white interior let's go take
39:01 - a look at that and see that in action so
39:03 - at the very top here I'm just going to
39:05 - say fill zero and run it again and you
39:08 - can see all the shapes now have this uh
39:11 - dark black interior if I were to say
39:13 - fill you know
39:16 - 75 you can see they're still darker but
39:19 - not as dark so it's a Continuum zero
39:22 - being all the way black 255 being all
39:23 - the way white and in between the fact
39:25 - that it's 255 has to do with the way
39:28 - that things are stored in the computer
39:30 - and memory and bits and zeros and ones
39:33 - and that's an interesting discussion
39:34 - that I believe leave for some other time
39:36 - but this is the range by default between
39:38 - 0 and 255 and I could do the same thing
39:41 - with stroke so I could say stroke 255
39:44 - and you can see here all the shapes now
39:46 - have a white outline with this dark gray
39:50 - interior so that's one way of doing
39:53 - color the other way of doing color is
39:56 - what I'm call
39:57 - not me I didn't invent this clearly uh
40:00 - RGB color so instead of a single number
40:05 - with RGB color color you need to provide
40:08 - processing The Fill stroke or background
40:11 - background functions with an amount of
40:14 - red an amount of green and an amount of
40:17 - blue each of these having a range
40:19 - between 0 and
40:22 - 255 so you can kind of Imagine exactly
40:25 - what this might do if I come back over
40:28 - here and I look at the fill I'm giving
40:30 - it an amount of red an amount of green
40:34 - and an amount of blue so what will this
40:36 - color be if it has a lot of red but no
40:40 - green and no
40:41 - blue RGB red green blue right so we can
40:44 - run this and you can see all the shapes
40:47 - are entirely red because it has only red
40:50 - if I were to give it let's give it a
40:52 - little bit of blue we can say I mix a
40:55 - little blue in there and you can see I
40:57 - can maybe give it even a little bit more
40:58 - blue you can see I'm getting this more
41:00 - pinkish purplish color because red and
41:01 - blue make purple so you know this now
41:04 - walks down the road of all sorts of an
41:06 - interesting long elaborate discussion
41:08 - about color theory and color mixing and
41:10 - the properties of light but one thing
41:12 - that's important to realize here is the
41:15 - the what's going on in in adding these
41:18 - colors to adding some red and adding
41:19 - some blue is is uh is is adding light
41:23 - together so you can think about it if
41:24 - you had a red flashlight and a blue
41:26 - flashlight in you shine them on the wall
41:28 - next to each other what color you get
41:30 - it's a little bit different than mixing
41:31 - paints there's a lot of similarity but
41:33 - you know if you mix like all like a
41:35 - whole lot of colors red green blue
41:37 - orange paint you'll end up getting like
41:38 - sort of brown or dark color the more you
41:40 - add color the brighter it gets so for
41:43 - example 255 255 255 is white and
41:47 - actually grayscale is just shorthand for
41:50 - the red value being equal to the green
41:52 - value being equal to the blue value so
41:54 - if I were to go back here and say 75 7
41:57 - 75 75 you can see now that I have what I
42:00 - had before but if all the values are
42:02 - equal I can shorthand wise just say 75
42:05 - so now I can also add a background which
42:08 - I could say uh let's use that nice uh
42:11 - pinkish purplish color and I can have
42:13 - this fill and stroke and for these I can
42:15 - have this stroke for these lines the
42:17 - other thing you can notice is the order
42:18 - matters so where you put fill and stroke
42:21 - affects all the shapes that come after
42:23 - it so if I were to now say fill 0255 and
42:27 - I were to say stroke 255 0 and I'm not
42:30 - really you can see that the lines are
42:34 - white you can see here that the lines
42:37 - are still white but the outline of the
42:39 - circle is now red because this stroke
42:42 - here overrode the stroke that was at the
42:45 - top so what I might suggest is if you
42:48 - wanted to be really long- winded about
42:49 - this is for every shape and maybe these
42:53 - should both be white and then I want uh
42:57 - uh I want this this ellipse to be this
42:59 - color and then you can start putting
43:01 - line
43:03 - breaks you know and assigning uh
43:06 - specific colors for every shape okay so
43:09 - you can see I could keep going with this
43:10 - and I'm going to go with I'm going to
43:11 - muck around and make my strange alien
43:13 - with whatever colors and things that I
43:14 - want so this is now it's 10:45 I you
43:18 - know an hour would be just 15 minutes
43:19 - from now we're going to kind of wrap up
43:21 - but let's take five you know a little
43:23 - less around five minutes to have you
43:25 - guys try to add color I'm going to look
43:27 - at the chat see what questions came up
43:29 - hopefully people are still watching or
43:30 - listening or have questions um and then
43:33 - I'm going to add the last step we're
43:35 - going to add is a little bit of
43:36 - Animation to what you're doing um so uh
43:39 - let's take a
43:41 - look uh and I'm going to see if there's
43:42 - any questions in the chat so
43:46 - um
43:49 - okay great so people are um talking
43:52 - about what they are making an hourglass
43:55 - a snowman a cover stroke weight sure so
43:58 - somebody asked me to cover stroke weight
44:00 - stroke weight is a function that changes
44:03 - the thickness of the lines so you know
44:05 - I'll add that into mind for uh I'll put
44:09 - it here under the for these lines if I
44:11 - say stroke weight four and run it again
44:14 - you can see that the the thickness of
44:16 - the of the outline is much much greater
44:19 - it's actually Four pixels wide and that
44:21 - can be this is actually a useful thing
44:23 - to add because it makes it a bit more
44:24 - visible what's going on too in terms of
44:25 - the stroke and the fill
44:28 - um so somebody who joined here late oh
44:30 - do values wrap if you exceed 255 or are
44:33 - they
44:34 - capped um you know there's a kind of a
44:37 - bit of an it depends answer but I will
44:38 - say they are capped so if you pass 300
44:42 - into the function you'll still get uh
44:45 - the white the value
44:47 - 255 um and uh somebody asked what is
44:51 - this programming I'm talking about so
44:53 - I'm using something called processing I
44:55 - guess I erase that is processing. org is
44:57 - the programming language environment you
44:58 - can download to follow along with this
45:00 - tutorial and this tutorial by the way
45:02 - will be archived uh on YouTube as soon
45:04 - as it's over so you can go back and
45:06 - watch it again if you if anybody really
45:07 - wanted to or if somebody else wants to
45:09 - watch it obviously the Live Chat thing
45:11 - won't be an aspect anymore but yeah okay
45:15 - so I'm going to um take a couple minutes
45:17 - to add some colors to mine I want I like
45:20 - the these antenna being uh um and so I'm
45:27 - going to make the uh so my alien should
45:30 - be green I like that with green but I'm
45:34 - going to make a like purple outline okay
45:37 - like that with uh let's keep everything
45:42 - kind of purplish there we go and that's
45:46 - blue there the antenna I think should be
45:49 - red this is very important some sort
45:53 - of uh reddish color and green
45:57 - on the outline let's keep this stroke
45:59 - I'm going to just keep the stroke the
46:01 - same for
46:02 - everything and uh let me make those a
46:05 - little bit
46:07 - darker there we go and then the this
46:11 - last rectangle is the ey which would be
46:16 - something nice and uh
46:20 - blue I don't know what I'm doing here
46:23 - and the background let's make it a
46:26 - little bit
46:29 - brighter there we go okay this is my
46:32 - alien now with some colors I I guess my
46:35 - outline was is too close to the let's
46:37 - just make the background a uh a light
46:43 - gray or maybe something darker okay
46:49 - anyway I'm clearly not a visual
46:52 - designer there's my shape with some
46:54 - colors now okay uh um
46:58 - looking
47:00 - here there's more people in the chat
47:04 - saying funny
47:05 - things uh uh and typing in their code
47:09 - snowman uh you did someone's asking I
47:11 - did not get a green color on the shape
47:13 - so it's kind of hard for me to debug
47:15 - your code from the chat as much as I
47:16 - love the idea of trying to do that but
47:18 - so comron I will I'm gonna I'm gonna I I
47:21 - don't have the chat open on this
47:22 - computer here with processing let me
47:24 - look Phil green ellipse
47:27 - ah uh Camron I see you have zero dot so
47:31 - the mistake I'm noticing somebody in the
47:32 - chat has typed in
47:35 - this Phil
47:38 - 0.255 comma 100 so this is just a typo
47:41 - but processing doesn't know it's a typo
47:43 - they think you're trying to put in the
47:45 - number
47:46 - 22255 so uh in that case you make make
47:49 - sure you need to have a comma there uh
47:51 - this is a good moment to just show you
47:52 - sort of what happens if something's out
47:54 - of place so I'm going to like remove
47:55 - this um
47:58 - I'm going to remove this whoa something
47:59 - crazy is going on down there I'm going
48:01 - to remove this semicolon so one thing
48:04 - you'll notice in processing that if you
48:05 - have a syntax eror you'll get a red
48:07 - squiggly line where the syntax error is
48:10 - and then down here on the bottom there's
48:12 - an errors tab so if you click on that
48:14 - errors tab you'll see missing a
48:16 - semicolon and it will also tell you what
48:19 - line number that's happening line number
48:21 - two I could actually even double click
48:23 - on that it'll take me right there I add
48:25 - the semicolon and there you go so is the
48:27 - you know most of the time the error
48:29 - processing can figure out what it is and
48:30 - give you a nice helpful suggestion
48:32 - sometimes it can't and this is just the
48:34 - life that you lead now okay
48:37 - 1049
48:39 - um okay all right so by the way
48:42 - sometimes like the chat you should know
48:44 - you're seeing me about 20 or 30 seconds
48:46 - after something that I'm actually saying
48:48 - live just so you know because the way
48:50 - the delay works on YouTube okay we've
48:52 - got 10 more minutes here's what I've got
48:53 - left to do I want to show you how to
48:55 - animate something
48:57 - big topic 10 minutes no problem and I
49:00 - want to show you uh and I want to just
49:03 - talk about where do you go from here
49:05 - this is an hour it's all going to be
49:06 - over I'll go on with my day you'll go on
49:09 - with your day someday we'll meet again I
49:11 - hope but I'm going to try to give you
49:12 - some resources without just like
49:14 - plugging my own stuff too much of of how
49:16 - you might learn more of this okay so
49:19 - here we go um here we go let me come
49:22 - over here to talk about animation for a
49:25 - second
49:28 - okay so this is a big topic you know
49:31 - what we've been doing here and I said I
49:33 - was coming over here but I'm going back
49:35 - over here for a second all of these
49:37 - programs that we've been writing you and
49:39 - me together here on this day um have
49:42 - just been these static images
49:44 - programming I said is the act of writing
49:46 - instructions for the computer to follow
49:48 - there was a first instruction a second
49:50 - instruction a third instruction a fourth
49:51 - instruction it got to the end it
49:53 - finished the picture is presented you're
49:54 - done but animation programs or most
49:57 - programs that you write even your the
49:59 - email program you use Photoshop your
50:01 - word processing program these are things
50:02 - that run over time so programs need to
50:05 - handle interaction events that might
50:07 - happen they need to handle uh drawing
50:09 - over and over again to animate something
50:11 - so this is something that I think we can
50:13 - add somewhat quickly to the processing
50:15 - to processing today at least and you
50:17 - know I'm going to gloss over some of the
50:19 - underlying details but the core idea
50:21 - will be there and hopefully you will
50:23 - enjoy this somewhat so the thing that
50:26 - you need to add to your program looks
50:29 - like this and there's a lot of new
50:32 - syntax here not all of it will make
50:34 - immediate sense to you or even sense to
50:37 - you in the next 10 minutes but as I show
50:39 - you further resources and you go further
50:41 - into this it will start to become more
50:42 - and more clear but in what I'm going to
50:45 - show you how to do is instead of writing
50:46 - your code simply as a linear list of
50:49 - instructions right there in the
50:50 - processing editor I'm going to tell you
50:52 - put your code either in setup or inside
50:56 - draw these are what are known as blocks
50:58 - of code blocks of code begin with a
51:01 - curly bracket and end with a closed
51:03 - curly bracket so this is the way to say
51:05 - that the code that's in here is part of
51:07 - this thing called setup and the code
51:10 - that's in here is part of this thing
51:11 - called Draw and these things these are
51:15 - functions actually that you are defining
51:17 - the setup function the draw function
51:19 - they're special functions that
51:20 - processing requires you to write for an
51:23 - animation that setup is a function that
51:26 - happens once at the beginning and draw
51:29 - is a function that happens forever and
51:32 - ever looping over and over again draw
51:35 - the circle draw the circle draw the
51:36 - circle so if I come back over
51:39 - here and I'm going to um I'm going to
51:42 - save this as uh hour
51:46 - of code
51:48 - one so I can uh now I'm going to save it
51:51 - whoops I'm GNA save it as hour of code
51:54 - two so I'm because I want to just what I
51:57 - want to do now is only leave this circle
52:01 - in so you can see I simplified the
52:03 - program a little bit so it's just
52:05 - drawing a circle in the middle of the
52:06 - screen what I want to do now is say void
52:12 - setup void
52:15 - draw so I put some of my code in setup
52:18 - and I put some of my code in draw now
52:21 - what goes where is an interesting
52:22 - question there's really no right answers
52:24 - to these questions but there is sort of
52:26 - an answer for at least what I'm showing
52:27 - you right now so one thing that
52:29 - certainly should go in set up is size
52:32 - that is a thing you do when the program
52:33 - begins set up the size of the window if
52:35 - I want if my ultimate goal is to maybe
52:38 - have this ellipse drawn move around the
52:42 - screen I need to continuously draw that
52:44 - Circle draw it here then draw it there
52:46 - then draw it here then draw it there
52:47 - then draw it there then over there then
52:48 - over there so that is something that
52:49 - happens over and over again background
52:52 - is an interesting question should it be
52:54 - in setup or should it be in draw well
52:55 - first let's just run this and see what I
52:57 - even get so one thing you'll notice here
52:59 - is I'm not getting anything different
53:02 - it's still just a circle being drawn in
53:04 - the middle of the window the code is
53:05 - actually still running in fact it's
53:07 - drawing that Circle it's like draw draw
53:09 - draw draw draw draw dra dra draw but I
53:10 - see it as a static image because that
53:12 - circle is being drawn only in the same
53:15 - place every time but what if this number
53:17 - 320 what if that number could be
53:19 - something different every time through
53:21 - draw for example and I'm kind of rushing
53:23 - through this a little bit because we're
53:24 - running out of time but uh for example
53:28 - what if that location could be the
53:29 - location where the mouse is what if I
53:32 - could say draw the circle where that
53:33 - Mouse is where the mouse is where the
53:35 - mouse is and in fact processing and all
53:38 - programming language environments have a
53:39 - mechanism for doing this generally
53:41 - speaking not just the mouse it's
53:43 - something called a variable a variable
53:45 - is a word that stands in for a number
53:47 - and it's something that can change over
53:49 - time it can hold information it can hold
53:51 - and store data so very quickly something
53:53 - I can add here is mouse X and and mouse
53:57 - y you can see those words turned a pink
54:00 - color because processing recognized them
54:02 - as key words as variables within the
54:04 - system and if I do this you can see now
54:06 - look at this that circle is continuously
54:09 - being drawn wherever the mouse is and I
54:12 - already all of a sudden right now I have
54:14 - a painting program beautiful drawing it
54:16 - where the mouse is
54:18 - now remember I add this weird question
54:21 - of where should background be well
54:24 - notice that background was in setup so
54:25 - the background was drawn only once so
54:28 - I'm never erasing a previous Circle that
54:30 - was drawn and you can see I have this
54:32 - painting program what would happen if I
54:35 - take background and move it to the
54:36 - beginning of draw now you'll notice the
54:39 - circle is moving but I'm not seeing the
54:42 - previous one because every time it draws
54:44 - the new circle before that it erases the
54:47 - background so this is the way that you
54:49 - can create something moving along the
54:51 - screen that's interactive by assigning
54:53 - its location to Mouse X Mouse y but it's
54:56 - also important to remember that these
54:57 - are just numbers so I could for example
55:00 - put Phil in Mouse X and I could put
55:03 - Mouse Y in background so also you can
55:05 - see that the color is changing as I'm
55:07 - moving the mouse right as I move down it
55:09 - gets it gets it gets brighter as I move
55:12 - up it gets um it gets darker and and the
55:15 - circle value is changing I could also
55:17 - just keep the circle in the middle but I
55:19 - could use Mouse X and mouse
55:23 - y for its size
55:28 - and you can see here if I come in here
55:30 - as I uh as I move up and down the size
55:33 - of the circle changes based on Mouse X
55:36 - Mouse y so those variables are just data
55:39 - they're just numbers and you can assign
55:41 - them to anything in your program
55:43 - position color size you could put Mouse
55:45 - y as the exposition of something so it's
55:48 - that might be very confusing because as
55:49 - the user moves along the
55:51 - x-axis the thing moves down but that
55:53 - could be an interesting and different
55:54 - interaction so there's a lot lot of
55:56 - possibilities here and this is just the
55:59 - first step these are two variables that
56:01 - processing gives you for free but
56:03 - ultimately and this is this this is part
56:05 - of next steps really um you can Define
56:08 - your own variables you can make up your
56:10 - own variables give them their your own
56:12 - names the score for a game the uh speed
56:16 - of a thing that's flying across the
56:18 - screen you can make up your own
56:19 - variables too so um we have uh you know
56:23 - I'm going to go a little bit longer than
56:25 - just the one hour maybe by five or 10
56:27 - minutes um so why don't I give you guys
56:29 - a few minutes to try adding Mouse X and
56:32 - mouse Y in your code somewhere um and
56:34 - see what you can change color or change
56:36 - position um and then I'm going to wrap
56:39 - up and have some closing thoughts and
56:42 - try to point you towards some other
56:43 - resources that might let you uh keep
56:45 - going and do more okay uh yes so
56:48 - somebody's asking um somebody's asking
56:53 - uh what button does the auto forting so
56:54 - one thing I'll just mention this before
56:56 - are asking about it is there is a sort
56:58 - of a standard way of indenting code code
57:01 - that's inside a block uh is typically
57:04 - indented a little bit to sort of see
57:05 - what's in but it doesn't affect how the
57:07 - code runs this exact program would run
57:09 - the same way if I wrote it like this
57:11 - it's sort of a mess to look at but a way
57:13 - that you can have processing
57:15 - automatically adjust all your
57:16 - indentation and everything to make it so
57:18 - nice and you know I don't know clean and
57:22 - easy to look at um is under edit uh Auto
57:26 - format so this Auto format button which
57:28 - is also command t or probably control t
57:31 - on a PC so if I now do command T you can
57:34 - see that it autof formatted my code to
57:36 - be nice and
57:38 - organized okay some people are asking
57:41 - questions
57:43 - um uh so somebody asked about
57:47 - mobile uh somebody asked about yes so
57:49 - somebody asked about transparency so you
57:52 - can give Phil or stroke a fourth
57:53 - argument which has to do with the
57:55 - transparency that's correct um someone
57:58 - asked
57:59 - about um mobile development so mobile
58:02 - development that's a big question
58:04 - there's lots of ways you can do mobile
58:06 - development um but one of because
58:08 - processing is built on top of java and
58:10 - Android systems are Java based you can
58:13 - actually do uh Android development in
58:15 - processing and there's something called
58:16 - processing Android which is essentially
58:17 - like an add-on or a mode that you can
58:19 - add by the way you can also do all of
58:22 - your processing programming in Python uh
58:25 - by adding the python mode which is
58:27 - something you can add right here through
58:28 - ad mode so you can look at Android and
58:30 - python through here this afternoon at
58:32 - 1:30 I'm to do this exact tutorial again
58:35 - but using the p5js programming
58:37 - environment which is a JavaScript based
58:38 - so Java JavaScript and python are your
58:41 - sort of three languages that you can
58:42 - work with in this sort of world of
58:44 - processing in P5
58:48 - um okay will you be starting Java so all
58:51 - by the way this is Java you are learning
58:54 - Java I mean there's some nuances and
58:55 - some specifics to the way Java programs
58:57 - are built that are being not shown here
59:00 - but uh you know if you're interested in
59:02 - Java you know I might suggest just
59:03 - looking at all of my back catalog of
59:05 - video tutorials that use processing that
59:07 - will get into all of those
59:09 - details um okay um so we're coming up to
59:14 - 11 o'clock here um so first of all I
59:17 - would like to encourage you to please
59:19 - share with me anything that you made
59:20 - from today uh probably the easiest way
59:23 - to do that is through Twitter uh SL
59:25 - shiftman I
59:27 - ffan um uh so I'd love to just sort of
59:30 - hear how this was for you or give get
59:31 - any feedback um certainly there's also
59:33 - this will be archived on YouTube and you
59:35 - can uh write in the comments there as
59:37 - well um so this is the question I guess
59:41 - what if you want
59:46 - to learn more so um I'm going to uh get
59:51 - some props over here oops the camera
59:53 - went off so let me fix that um
59:56 - uh so uh ah I knocked over a glass
60:00 - everything's okay
60:01 - everybody it didn't have any water in it
60:04 - it was my water glass but I finished it
60:06 - so um there are lots of books that you
60:08 - can get um this is a particularly
60:10 - wonderful one uh make getting started
60:13 - with processing a Hands-On introduction
60:14 - to making interactive Graphics written
60:16 - by Casey Reese and Ben fry the creators
60:18 - of processing I I really don't mean to
60:20 - be selling you guys stuff I'm just sort
60:21 - of showing you this is a my book
60:23 - learning processing which has a lot of
60:25 - information
60:26 - um and uh certainly on the processing
60:30 - website uh you can under here under
60:34 - books uh you'll see there's also the
60:36 - processing a handbook which is the uh
60:39 - which is also written by Casey and Ben
60:41 - and you can scroll down here and see
60:42 - that there are a lot of other books that
60:44 - you could look at um that give you a lot
60:46 - of different ideas of working with
60:48 - processing I would also suggest that you
60:50 - go here under tutorials my head is in
60:53 - the way here tutorials on the processing
60:55 - website um this uh hello processing
60:58 - tutorial is actually a kind of recorded
61:00 - version essentially of what I did today
61:02 - but we made this two years ago so it's
61:04 - still the same same content it's
61:05 - interactive it actually has a place
61:06 - where you can type code into the browser
61:08 - to try it out so I I would certainly
61:10 - recommend you checking that out and
61:12 - there are also um these text based
61:15 - tutorials that are here as well and
61:18 - right up here um at the top here under
61:21 - video tutorials there are a lot of
61:23 - wonderful video tutorials I'll mention
61:26 - uh Jose I think his is uh uh fun
61:29 - programming uh or maybe or the plethora
61:31 - project all of these tutorials are great
61:33 - I guess since I'm here if you like this
61:35 - video um I would suggest that you look
61:38 - at um let me just uh go to this link
61:41 - here um these are all of my uh playlists
61:45 - and you can see here that uh this
61:48 - section here learning processing and
61:49 - beginers and these I have probably like
61:51 - 60 to 100 videos that kind of go through
61:54 - all this processing stuff in more detail
61:55 - detail um a lot of the stuff that I also
61:58 - have are tutorials about um uh natural
62:01 - simulation and physics simulation and
62:03 - and and and generative algorithms that
62:05 - type of thing and I've also started a
62:07 - set of tutorials working with p5js which
62:08 - is uh JavaScript and some things with
62:11 - the connect um the Microsoft Connect in
62:13 - different sens to computer anyway
62:14 - there's a lot more there so uh you know
62:16 - I I now I feel weird like I'm like I did
62:18 - this like I'm advertising stuff which I
62:19 - don't mean to be doing but um so that I
62:22 - think would be a good resource for you
62:25 - um are all sorts of interesting um
62:28 - workshops and probably schools that you
62:30 - could think about attending uh one of
62:33 - one of my um uh favorite new Ventures is
62:37 - the school for poetic computation which
62:39 - is a a a uh popup School in a way I
62:43 - might call here in New York that does uh
62:45 - work with people with creativity and
62:47 - programming and electronics projects and
62:49 - they have kind of one week or 10 we
62:51 - programs things like that there's
62:52 - another one that happened in Germany
62:54 - last summer called some like make some
62:56 - somebody somebody remind me what that is
62:57 - I'll link to these so I don't know put
62:59 - your put your ideas for next steps um in
63:02 - the comments of this video when it gets
63:04 - archived or in the chat here and um and
63:07 - hopefully that will give you some ideas
63:09 - of what to do next if you're interested
63:11 - in this
63:13 - um so I'm going to look I'm going to
63:16 - look at before I say goodbye thank you
63:18 - for watching I'm going to look in the
63:19 - chat and see if there's some more
63:20 - questions I can answer uh how do I
63:23 - export processing sketches as a Java
63:25 - application okay let me show that to you
63:27 - uh here in processing under file under
63:31 - export application so this will actually
63:33 - export your processing sketch as a
63:35 - standalone application and if I do
63:37 - export application uh save changes yes
63:40 - and now I can pick like well do which
63:43 - platform do I want to export for do I
63:45 - want it to be full screen uh do I want
63:47 - to embed Java which I would recommend if
63:50 - you're intending to like send it or
63:51 - distribute it that's why it has Java
63:52 - embedded in it nobody has to have a
63:54 - separate install of java so I'm going to
63:56 - hit uh
63:57 - export and you can see here I have my
64:00 - Mac application which is there and so it
64:03 - also comes with the source and you can
64:04 - look at it sort of translated your
64:06 - processing code into Java which really
64:07 - just means it puts a few things around
64:09 - it and now I could run this when I run
64:12 - it you can see there it is my program
64:14 - just run so it looks like it's running
64:16 - with but processing is not open anymore
64:18 - so this is now just a standalone
64:19 - application that's running on my
64:22 - computer uh hello France um
64:26 - what do you think is programming natural
64:28 - comes or can we build that I'm sorry I
64:31 - didn't oh void setup is this can be call
64:33 - method to okay so someone so set up and
64:35 - draw there so many questions and things
64:38 - we could discuss and answer but I will
64:40 - let's try to let me try to talk about
64:41 - this for a second so set up and draw our
64:44 - special functions I was going to open
64:46 - processing back up just to kind of have
64:48 - that as a reference um set up and draw
64:50 - are special functions that processing uh
64:54 - asks you to write I'm going to get this
64:55 - open again open recent
64:59 - um and uh you don't actually execute so
65:03 - background fill and ellipse are
65:05 - functions that you are executing that
65:08 - are in the processing Library setup and
65:10 - draw are like the inverse of that
65:12 - they're functions that you're defining
65:15 - but processing is calling them for you
65:16 - it knows to call setup at the beginning
65:18 - it knows to call draw over and over
65:20 - again something we've missed in this
65:21 - tutorial but I certainly get into some
65:23 - of my other videos is how do you define
65:25 - call your own function and this is just
65:27 - something that comes up once you start
65:28 - to build larger and more complex
65:31 - programs
65:32 - um um thank you for some of the nice
65:35 - comments how can I program a function
65:37 - slide with Java so I don't know if
65:38 - you're asking about using a slider so
65:41 - interface elements are are are a tricky
65:43 - topic but there are different Java or
65:45 - and for Android in particular you can
65:47 - use you need to sort of use the native
65:49 - Android stuff to get the interface stuff
65:51 - and you could then combine that with
65:52 - some of the drawing things you have in
65:53 - processing but uh one of the things
65:55 - things about processing that's great
65:56 - that I guess I'll show you if I go to
65:58 - sketch import Library these under ad
66:01 - library because processing is built
66:03 - built on top of java and open source
66:05 - people can design and make add-ons for
66:08 - it essentially like oh processing
66:09 - doesn't have code for checking email
66:11 - I'll make a processing library that
66:12 - checks email so if I go click add
66:15 - Library what you'll see here is a very
66:17 - very long list of all sorts of
66:19 - additional code libraries that are
66:21 - available for processing and if I just
66:24 - kind of like scroll down here you can
66:26 - see um you know open connect for using
66:28 - the Microsoft Connect obj loader for
66:31 - loading a 3D model from another program
66:34 - uh QR code for reading a QR code uh SFTP
66:38 - for ftping a file super collider for
66:40 - working with super collider Sprites you
66:41 - can just see there's just tons and tons
66:43 - of midi for working with midi which is
66:44 - an audio thing on the computer so
66:46 - there's lots and lots of libraries that
66:48 - you could potentially add and use code
66:49 - with too um okay so it looks like the
66:52 - questions have ended and it's about
66:54 - 11:10 this has been going for an hour
66:57 - and 10 minutes uh I will be back this
67:00 - afternoon at 1:30 p.m. to do my next uh
67:05 - hour of code with uh p5js so I'm going
67:08 - to go over here to my uh console and hit
67:11 - the stop stream button which means I
67:13 - will disappear I don't know how long it
67:14 - takes YouTube but this will probably be
67:16 - up and archived within the next hour
67:18 - please stay in touch share what you made
67:19 - give me feedback uh twitter.com shiffman
67:22 - is probably the best way to reach me for
67:23 - today and um look forward to hearing
67:25 - from any of you I'm going to hit stop
67:27 - streaming now goodbye thank you see you
67:32 - later

Cleaned transcript:

good morning welcome to the hour of code my name is Dan schiffman I'm broadcasting live from ITP which is a twoyear Masters program at Tish School of the Arts at New York University uh and I'm here to give you or anybody who's watching this will get archived so people can watch you later a 1hour introduction to programming uh the context of that will be something called the processing programming environment I just called processing and uh I'm going to talk I'm going to do like a couple minutes just to talk about the processing foundation and overall goals I got to uh turn off my um I have a preview of my stream going over here has some audio so first of all uh if you're hearing me and you can see what's behind me and if you can kind of see this uh whiteboard over here ah uh let me know that the audio and the images are good um but uh rather than waste a lot of time um I'm just going to Dive Right In so I've got my eye over here on a chat uh I see um I see that there are some people saying things in the chat which is great so people are watching and I'm going to get started so I I think actually the stream a minute ago uh it started late so I'm just going to reintroduce myself again somebody will edit this to start right from this point at some point if this ever gets archived actually you know what I'm going to hit the record button so this will I'll have a copy of this as well so I'm going to pretend now pretend I'm starting over good morning and welcome my name is Dan schiffman I am here broadcasting live from ITP two years ma twoyear Masters program at Tish School of the Arts which is part of New York University I'm in New York City live in New York City on Thursday morning I want to say Saturday night and like I'm any anywhere near as interested I don't know anyway that show whatever um put that aside uh welcome what am I here to do I'm here to do a 1H hour it is 1002 a.m. I'm here to do a 1H hour introduction to programming for the absolute complete and total beginner uh I'm going to take about five minutes to talk about what this thing called processing is and the processing foundation and I'm give you a little bit of a take on the hour of code that might be a little different than I hope than some things you might be reading or hearing about and then we're just going to Dive Right In I'm going to uh put processing up here I'm going to show you how to type some code make some stuff I've got a whiteboard over here so I can draw uh some diagrams if we need to I'll take little breaks I'll answer questions in the chat that's my plan so I'm just going to peek um uh yes so some people are asking if they can Skype in I didn't actually figure that out I'm going to do this again this afternoon by the way I'm going to do this again this afternoon at 130 p.m. with this other environment called p5js um so this morning is going to be processing which is the Java programming language and this afternoon at 130 it's going to be p5js which is the JavaScript programming language okay so I don't see I I'm looking in the chat I see it going there and I'm just going to get started so it is about 1003 I want to give myself just 5 to 10 minutes to give you a brief introduction so something that I'm a part of is called the processing Foundation it's a nonforprofit organization uh about an uh I had a mission statement somewhere in here but it's later but the idea of processing is to make programming more you know in a very simp listic way just briefly to describe is to make programming more accessible to a wider audience and there are three tools that we are currently uh developing uh one is called processing with this P here which has been in development since 2001 this is what I'm going to use today in the tutorial another tool which is new um um which is called p5js which is built on top of JavaScript and there's also processing. py which is a mode for this processing which allows you to type python code but I can't believe I'm starting this by talking about different programming languages here's what I really want to talk about um so I'm going to just borrow here from Mitch Resnik and David seagull somebody I'm sure could Google this and and post a link to this blog a medium Post in the chat um who posted a recent article called a different approach to coding uh Mitch Resnik and his research group at the MIT media lab are the creators of a programming environment called scratch which you know I I would say it's is is something for kids to get excited about programming and creation and creativity of course I use it as an adult and I find it to be a wonderful thing so it's not just for kids and I think what's important about what in this medium post is thinking about I want to talk today I want to spend this hour about expressing yourself with code creativity through code so the hour of code this is the code.org website is a wonderful thing many new people are discovering programming and thinking about code and may uh maybe getting excited about learning something new uh uh putting getting more people is especially a more diverse uh set of people of different genders and ethnicities and countries interested in perhaps majoring in computer science as a field of study and all of that is wonderful but one thing about most of these tutorials that you'll find on code.org is most of them are puzzles with a correct answer and if you've ever made a piece of art you know art is really about asking questions is one way of thinking about art so what does it mean to not have a correct answer for your code what's lost in all of these tutorials which are about solving a puzzle or winning a game type speak what if you could use programming for creativity and I I'll give you I'm going to quote from this medium post rather than I you know I wish I had written this myself but it really spoke to me when I read it for us coding is not a set of technical skills but a new type of literacy and personal expression valuable for everyone much like learning to write um this is this quote is talking about how this many of these coding activities the students are asked to program the movements of a virtual character navigating through a set of obstacles toward a goal so so this is about that puzzle Sol solving but in some ways this is like offering a writing class that teaches only grammar and punctuation without providing students a chance to write their own stories so this is what I want to expose you to today if you can learn the basics of code what ideas what can you express can you communicate through code um and so I pulled this really briefly this morning from uh Wikipedia I you know I think it's the other thing that I think is relevant here in this discussion there's a lot of energy around computer comp Science Education computer science in high schools Compu uh there's a in New York City we've got CS for all uh computer science for everyone this is a great idea in many ways I think let's have more people learn to code and more people learn about programming and what it can mean but this term computer science a computer scientist specialized in the theory of computation and the design of computational systems this is really important we need people to spend their lives deep in studying computer science and build compilers and systems and all computers and all sorts of things like that but what if you are a dancer a biologist a fashion designer an economist a journalist a musician a painter a poet a baseball player a game designer a teacher or a chef what if you don't want to be a computer scientist but code is important you know you might want to have a website you might want to uh visualize your own uh running data as you're training for a marathon there are so it's just like you are expected to learn to write essays but you don't necessarily and and you and you need to write if you're a dancer biology fashion designer Etc Etc what does this mean to apply code to the thing that you're interested in to the ideas that you want to express and I think that uh processing is uh an environment which is a great place to get started in thinking this way I'm going to look on the chat uh and people are listening to me uh and there's a bunch of people watching which is really exciting so I I'm I'm having a little I've have done this before with this many uh people so I'm trying to keep an eye on the chat but I'm going to keep going but I want to get to the code stuff first so the first thing I just want to mention is none of the these ideas are are really that new um this idea of art through code visual art through code expressing yourself through code you know I learned when I was a kid using the logo programming language was a way of issuing commands to a turtle that walks around the screen to draw pictures um there's something I never actually used this myself but there's something called hypercard which I know a lot of people discovered creativity through computers through hypercard which is part of the one of some of the original Mac operating systems um there is something called design by numbers which is really historically I think the uh the thing that came right before processing so designed by numbers was a programming environment for I would Loosely say for visual designers or graphic designers created by John maida uh who was a professor at the MIT media lab uh and was in fact the professor of Casey Reese and Ben fry who are the original creators of processing and they started this processing project in 2001 studying with John maida and looking at design by numbers and thinking about taking that even further so so and then of course there's scratch which I think is you know also developed at the MIT media lab uh with Mitch resnick's lifelong kindergarten Group which is a wonderful environment in particular for younger kids in the sense that you don't have to uh necessarily type your code but you get to put these puzzle pieces together um to implement programming like Concepts so okay so this leads me now I got to get started here it's 1010 we got to do some programming um um we got to really get into some programming but this leads me to the processing foundation so everything that I've been talking about in these last 10 minutes uh is what the processing Foundation exists for and I encourage you to go to processing foundation.org I'll put a link in the description of this video when it gets archived look at some of our initiatives look at some of our projects we've got this new Fellowship we're sponsoring as particular if you're an educator and you work with uh a a a group of of of kids or adults who don't necessarily have easy access to code and learning these tools we're looking to fun projects that bring programming and bring processing to a wider audience there's pigeons right outside my window hi pigeons I maybe I'll close the window it's just very very hot in here and I might have to open it again later maybe the audio is now better um so take a look at processing this is the processing foundation's Mission I want to just get started in in in in looking at code now but the one last thing I'll mention is um I think that if you're I'm going to move now to the processing website uh which I've got uh here uh if you're interested and I I would would love to spend the next 45 minutes just showing you exciting and unique and amazing projects made with processing and other creative uh tools that involve programming but I might encourage you just to go to the processing website to look at the exhibition uh and sort of if you're trying to think of like well I get what you're talking about but I don't like what are does this really happen or people really making things um there's a there's a nice set of projects you can take a look at there so um so let me make a note over here for you guys uh this is the URL where you want to go right now if you want to follow along and start typing code with me so first of all can everybody read that somebody say in the chat if you can read that I've got by the way Periscope going here which I'm just going to shut off um and I can erase this smiley face so this is where you want to go right now processing.org uh and this is the program environment I'm going to use we've got about 45 minutes to 50 minutes I I'll stay here all day but I think it's good to sort of contain this into an hour obviously I have um not obviously but uh if you if you're interested in more after today I have lots more video tutorials and at the end maybe what I'll try to do is point you towards some resources some books and other things you might look into if you want to learn more okay so uh coming back over here what you want to be on now is the processing website so if you go to just the processing website you're going to be he this like I've got some sort of inception thing going on here but there is a video of me talking about some of the new features of processing 3 this video won't be so relevant to you if everything here is totally new this video is really for people whove been already using processing and want to know what's new in processing 3 um but where you want to go is this link download download that's where you want to go next I'm going to go to download now one thing you'll notice here is it's asking you for a donation this is your first day perhaps learning to program all this is new to you I highly encourage you right now to click no donation um you don't need to take part of this like short hour and and worry about a credit card or something but I will mention again that these environments they take a lot of time and a lot of energy and mostly most all of the people who are building these things are volunteers essentially so we started this nonforprofit Foundation to try to fund fellowships and do more and continue the development so if you're interested in funding us uh wonderful okay so I'm going to now click download and you're going to see here now it's up to you pick your operating system are you on windows are you on Linux are you on Mac I am on a Mac right now so I'm going to show you this tutorial using a Mac um and so if I were to download it uh we can see that it is downloading here and it's got 8 seconds left now I'm going to be like the um a cooking show where I already had the thing in the oven cooking beforehand so assuming I've downloaded it and extracted it what I'm actually going to get is an application and the application is going to look like this you can see here this is the processing application it's got the three there this is processing three the actual version you're using right now if you downloaded that was 3.0.1 as things get fixed and things changes there'll be maybe an 0.2 and an 0.3 and maybe someday there'll be a processing four who knows um that's what's going on okay um so I see that there are people in the chat saying a few things you've got it you're able to watch it on your phone okay um it is a big file uh it's a large application it's also uh on it it's uh it comes with it has Java embedded in it uh because it's using the Java programming language okay so now what I'm going to do is launch processing now I just realized um you're going to I just realized right now that um hold on let me double click it this is like of course what happens when you're um oh it's already open ah so I'm going it was already open That's why nothing was happening so what what you're going to get now you're going to get a slightly different oh no I think you might get this welcome message it depends you're going to get a different welcome message whether or not you had processing installed previously on your machine Etc you don't really need to worry about any of this right now just click this get started button and you're going to have this window on your computer look at this so this is processing and guess what this is all you need to start coding to start learning about programming to start writing your first program this is one of the reasons why I just love processing because it's a single thing you can download it's a place where you can write your code it's a place where you can run your code it's a place where you can import extra code libraries it's all there all in this one package obviously not obviously but as you go further down your journey and life of programming you might discover oh my God there's all these different tools I have to learn I have to piece this together with this thing and connect it with this thing and then I have to download this and install this other thing so that all of that will come the nice thing about getting started here is this is all you need um yes uh could you wait until the down so people are asking me to wait until it gets downloaded so I'm going to um I'm going to sort of like I can to some extent yes I can wait and fact I'm going to I have I'm going to have a little bit of uh my tea over here you know I don't I have a sense of what the size of the audience is right now watching um uh it says 34 people which is really kind of amazing actually and I know some of you are large groups may be watching in a classroom which is really exciting to me um uh so but so I'm going to try to pause a little bit we're on an older version but that's fine to follow yes if you are using an older version of processing I don't think you need to upgrade right now I do highly recommend though that after this is over that you go and update to the newest versions there's just so many nice improvements but what I'm going to do today is really just using some of the basic core ideas of processing and none of that has changed really since 2001 just the interface the features a lot of the libraries a lot of that has really changed okay I hear from uh I think uh one of our viewers in India in Mumbai I think I can't remember I was like trying to see where people are from that they they finished downloading so let's get going so first of all here's an exciting moment you are now going to run your first program all you need to do is go click this run button run and there you go you have executed and are running your first program so what processing always does now you haven't written any code yet this is what's kind of amazing so behind the scenes a essentially an empty program has executed with no content no instructions that you've written but it has opened a window on your computer so what processing does uh is it opens a window in your computer and what you are going to learn what I'm going to show you today is how to write code how to write instructions to draw into that window so here is how every single instruction will look I'm going to say this is the command that you're going to issue followed by a parentheses follow uh closed with another parentheses and ended with a semic so this is the first thing that I want you guys to learn today is that programming is essentially the act of writing instructions for the computer to follow the difference is I could say everybody stand up you know everybody put your hand on your head everybody you know Pat your head and rub your tummy am I actually doing that or is that maybe it's the other way is harder who knows so this is me issuing constructions but I could have said please stand up or upstand even though that's weird and incorrect grammar you probably would have gotten in any way with programming you must must must follow the exact syntax I will show you what happens if you have an error in your syntax and this is one of the hardest things to get started with right when you're first learning is you a missing semicolon a missing parenthesis a missing comma these kind of things can be a problem and nothing will work so the thing that goes inside of here are AR this is not a good pen I'm going to let me try this one are arguments they're called arguments so if this is the command and these are the arguments that are going to be inside the parentheses arguments are things that modify the command so if my command to you is walk I could say the arguments might be walk three steps or walk 10 steps a three or a 10 that's a thing that modifies the command walk so for example and those are always separated by commas so here's a command that will do first size parentheses some number followed by a comma followed by some other number followed by the end parentheses followed by a semicolon okay and the question is what goes in these two spots think about that try I'm going to type it with you uh you can try it yourself put any numbers you want in there I'm going to be really conservative and I'm just going to say 640 by 360 I've done this before so uh I kind of not not that not that there is there's no correct answer here but now if I hit run something magical has happened this window is no longer that little tiny window this window is wider and taller now let's think about what those numbers could possibly mean 640 is describing the width of the window 360 is describing the height of the window what's the unit of measurement you might be asking yourself it's you know is that 640 in or centimet or you know some sort of strange other measurement that I can't think of it's not none of those things and you know you guys have probably all use computers before you probably anticipating what I'm going to say that measurement is pixels so if you've ever taken a picture with a phone uh a camera or downloaded something you often see like oh this image is 1,00 by 720 or you hear like oh this is HD 1080p video that 1080 is referring to the number of pixels of a width of a particular video um I'm going to just check the chat um do we need to keep an eye on app also yes everything is case sensitive so if you put a capital S for size it will not work that's a great question so what I want to do and we're kind of like ramping up here at 1020 I'm kind of keeping an eye on the clock um is that as we move over here um what I want to do now is talk about okay so I put 640 360 so let's think about now what that actually means in the context of that window that's being opened so here so if this window oh I'm I'm in the I'm in the wrong place hi everybody sorry about that I'm glad I noticed wasn't that long this happens to me a lot when I do these because I have a little button here that switches the camera um so just to recap for a second I'm looking I'm unpacking here what I meant by 640x 360 in that window so if this window is 640 pixels wide and this window is 360 pixels High there's a really important thing here that I need to show you to talk to you about which will which will then inform all the other functions I'm about to show you other commands that you can write so I was using the word command by the way to describe this the actual word this the programming term is this is really a function a function call is a function that I'm executing but I think while you're getting started sort of useful to think it as a command or instruction so if this is 640 pixels wide and 360 pixels High here's something really important that you need to know this pixel over here is the pixel 0 comma 0 it is the origin pixel so some of you might be familiar you know depending on what you what sort of math kind of classes you've taken or what you've looked at or you might have used a piece of graph paper you might be used to a coordinate system like this which has a0 in the middle an xaxis and a y AIS this is known as a cartisian named for Renee dekart mathematician a cartisian coordinate system a computerbased coordinate system the processing window coordinate system works in a very similar way but it's a little bit different here the Y AIS you might count up one 2 3 if Z 0 is here this is pixel one this is pixel 2 this is pixel 3 this is pixel one this is pixel 2 so if you think about it for a second what is this pixel here in the middle that pixel here in the middle is pixel 320 halfway from 0 to 640 comma 180 halfway from 0 to 360 so this idea of thinking of the window as a coordinate system is really key to all of the next commands function calls I'm going to show you I only showed you size so here's a list of some things that I'm going to show you next rectangle line you know triangle ellipse I'm not really wrting this all the way out so you can see the first thing that I'm going to show you is processing as an environment is a is a programming environment geared towards drawing pictures with code you can do a lot more with it and think Way Beyond that but this is a great way to get started so if you can figure out some function calls some commands for drawing pictures you can design your own picture on the screen using code and of course later animate it move it make an interactive all those types of things so let me come back over here I'm going to uh see if anyone has any questions um uh has okay people are asking has this just started I'm doing this my plan is I've got another 35 minutes so I you know my goal is to do this for an hour again uh those of you who are I I'm um some people are asking like lost my I do I'm I'm G to be doing a lot of live streams yes I try to do these every week but I'm doing this particular one to celebrate this hour of code thing okay uh and I do have lots of videos on my YouTube channel for those of you are looking for more okay so let's come back here now here we go what are some things we can type so um so let's say let's start I don't know somebody in that no you guys are like 20 seconds behind me so I can't I can't actually live ask you to like shout things out in the chat but let's start with um uh I'm trying to think let's start with let's start with line I think that's fine let's start with line so I'm going to say line 0 0 320 180 now you have to think to yourself what will this make happen so first of all line is the command the function call the arguments are 0 320180 what do those mean this is a question that we need to answer and you can see it comes right after size so again programming is the act of writing instructions for the computer to follow the first one will follow is size which we now know sets the size of the window the second one is line which you could probably imagine what it does but let's run this one to see and you can see there we go we've got this line and let's think about that what did we just say over here this is 0 0 this is 320 180 so that line function the line function connects an X and A ycoordinate to another X and A ycoordinate and here you go an X and A ycoordinate to an X and a y coordinate the first one being 0 0 the second one being 320 1880 so I could easily just now add a second one and I could just pick something whatever I feel like 100 comma 50 uh 600 comma 3 uh 300 uh comma 10 and let's put this one actually over on the other side and let's run this again and you can see now I have this other line here that I drew based on these coordinates 500 comma 50 to 600 comma 10 so you can see that you can write the line instruction as many times as you like with different arguments with different uh with different modifications to draw a line in a different place okay uh I'm looking uh yes if the width goes from 0o to 3639 the real middle one yeah so I'm kind of being Loosey Goosey about some of this stuff somebody asked and this is kind of an interesting question um you know if this is pixel zero and I'm saying it's 640 wide it's actually there's the last pixel is actually pixel 639 if you divide by two really but you know this is the thing we don't need to worry about these fine details right now I think they're less important than the sort of basic idea of getting things up and running and starting to make things so here's now another question how would you do this on your own if I wasn't here just like me as much as I might like to just forever be live streaming talking about the functions and processing if you were just by yourself or with some friends and you wanted to how do you draw a rectangle how do you draw a triangle wanted to look this stuff up how would you know like it's not so clear what those numbers would do just you can with some intuition you could guess and sort of figure it out so all of this comes down to looking things up in the reference so this if you decide you want to keep programming after today welcome to your life reading documentation reading reference materials reading tutorials so you have to rely on the language or environment having a good set of documentation and I I like to think that the processing uh processing project has excellent documentation so what I'm looking for here that I want to look at is the reference so on the processing website I'm back at in.org I'm going to go to reference and uh what I'm you can see there's a lot of different functions that you can call in processing what what we're kind what I'm kind of focusing on today are 2D Primitives and you can see Arc ellipse line Point quad rect triangle so let's look at the line page and a couple things you can see number one is it's showing you first an example so that's the syntax this is how it looks line is the name of the function and you can see if if you give it these arguments you get this in your window and you can see some other in some other uh examples there's even a way of doing lines in 3D which is a bit beyond what we're going to do today and you can see here look this is now a sort of generic way of thinking about so there's two ways to call the line function there's also this zaxis if you're in 3D we're going to ignore that for right now so this first way is what matters line X1 y1 X2 Y2 and if I scroll further down you can see here what do those arguments mean X1 is the x coordinate of the first point y1 is the y coordinate of the first point X2 is the x coordinate of the second point so what this page is doing is it's explaining this is the syntax these are the arguments you can put in this is what those arguments do so now if you wanted to say how do I do a triangle I could go back and I could click on triangle and I could see okay well here's an example and you can see what does a triangle do it makes a triangle and sorry this is kind of small it makes a triangle out of three points X1 y1 X2 Y2 X3 Y3 let's add that to our code so I'm going to go back to my processing sketch and I'm going to say triangle and I'm going to say uh I can if I can spell triangle uh 50 comma 50 uh 200 comma 50 uh 150 comma 200 and I'm going to run this and you can see oh and I just turned off because my camera turns off after a half an hour to save the power and that one turned off too you can see now there's a triangle on the screen and the triangle is made from those three points X1 y1 X2 Y2 X3 Y3 hooray a rectangle so let me so I'm just looking um in the chat to see if there's any important questions somebody's asking if I'm going to do today at 130 p.m eastern time I'm going to do exactly what I'm doing today but using P5 doing right now but using p5js which is Javascript programming environment okay so um let me come back over here for a second and let me turn this camera back on so I'm going to I'm going to take like a not a break but I'm going to pause for five minutes to let people who are watching this tutorial kind of design their own shape um so for example let me just show you a few things I'm going to quickly map out some of these for you we looked at line and triangle rectangle takes an x a y a width and a height so you define a rectangle by the point on the corner XY and some width and some height and ellipse which is a way of drawing a Circle or an ellipsoid elliptical uh round thing also takes an X and A Y and a width and a height the difference being that the XY is at the center and this is the width you can think of it's diameter across and this is the height it's diameter up and down so I might suggest to you right now there's Al that you now your kind of assignment in five minutes before we move on to the next thing is try to make a picture with some rectangles some lines some triangles and ellipses of course there are other functions there's quad there's Arc and there's a zillion things in there in processing but if you're really here and just being a beginner what I would do is um limit yourself to these functions look at them in the reference copy and paste the code examples from the reference into your code try playing with the numbers see what you can design uh and you know I'm kind of I'm I'm I'm loathed to even suggest what kind of thing you might draw because there's so many possibilities and I don't want to to send you all in one particular direction so as creative as you can expressing yourself but also realize just throw some stuff on the screen because you just got about 5 minutes before guess what I'm going to add color to this so let's see what you guys get um I'm I'm having a little more trouble than I anticipated like following the chat and that sort of thing but um uh now is a good time also to ask any questions in the chat I'm going to scroll back and read some of it um while you're doing this quick little exercise um and that sort of thing okay so I'm I'm going to be here still but I'm going to kind of be a little less talking to the camera for a minute I'm going to drink some more of this tea okay I'm just looking back to see if there are any other questions um Canada I'm sorry you're from Canada somebody said they were from Mumbai which was exciting um ah so someone's saying they have to leave soon for their school or their class and I so I'm definitely willing if you're a school or an organization and you want to do this again sometime and you have a group we can coordinate it I'm I'm game it's a very busy time of year now in December but I think probably we could look for a time in January or February for sure um and check here uh okay I see people are typing things in I'm just looking here um and oh okay uh and uh okay so how's that going everybody if you have a question type it in the chat uh you're from Mumbai okay Chris Chris Kris 1234 uh okay so uh guess what I'm gonna make something so I'm GNA sit here and make something you can follow along with me if you want uh I don't know what to make though somebody give me an idea uh um let me look at that okay I've got a oops Circle it's too big make a little circle in the middle why did I oh 180 is where I wanted that to be uh then I'm going to make a line uh at like uh let's put the line behind the circle notice the order that you're typing things makes a big difference uh uh and uh let's see okay I've got a I'm making a little like alien thing there we go there's my little alien it's going to be a oneeyed alien with a rectangle uh there we go this is my okay this is my design so you can see uh you know how this is going I'm going to look in the chat uh robot smile face trying to make an hour glass with two triangles and two lines these are all great ideas wonderful um okay I'm going to give us a couple more minutes and then I'm going to start I'm going to come over here and erase I wanted to get to animation so we don't have a ton of time but I think I can do it color is something we can add somewhat easily and quickly okay and let me come back here and uh okay so I'm I'm going to move on now and start talking about color uh you know realistically if we were doing this as a dayong workshop you would have had a half an hour hour to try to make something and there would been a lot of questions but I think in the interest of time here and trying to do this in an hour I'm going to move on now to the next thing so this is what I've got I made this for myself it's I don't know what it is but it's I like it and you can see this is my window uh it's 640x 360 I've got two lines and I've got three circles and one rectangle there in the middle of that Circle so um certainly I think what you're probably imagining in your head is it would be nice if not everything was black and white so one thing you might be noticing here is processing picked some default colors for you the default being that a particular object's outline is black but its interior is white so you can see up there the interior of that circle is white and the the background of the entire thing is this light gray so all of this is stuff that you can change on your own and the thing that you need to learn about to do this well okay so there's three new commands if you haven't done this before new functions that are key to doing color one is background and what goes in here is the question another is Phil what goes in there is the question and another is stroke the good news for you you is that what goes inside each of those functions is the same thing it's the information to describe a color so how do you describe a color so actually so first of all let's let's make one let's let's make one distinction here which is that let's say I'm drawing a circle on the screen the stroke refers to the outline of that Circle so this assigns the color to the outline the fill assigns the color to the interior of the shape and there's a way that you can have a shape that's empty in the interior with no fill or that has no outline with no stroke and those are things you'll find in the reference but I'm going to just focus on the basics here which is giving every shape a fill or a stroke now there are two ways there's more than this but right now I think a good way to start is there are two ways to think about color gray scale and what I'm going to call RGB color gray scale meaning that I have a single value that determines the amount of white in the color so if there is zero white in the color then I have black and if there is 255 in the color then I have white so this is the range so the range for grayscale as defined by default in processing is between 0 and 255 if you give if you say Phil zero you will have a black interior if you say fill 255 you will have a white interior let's go take a look at that and see that in action so at the very top here I'm just going to say fill zero and run it again and you can see all the shapes now have this uh dark black interior if I were to say fill you know 75 you can see they're still darker but not as dark so it's a Continuum zero being all the way black 255 being all the way white and in between the fact that it's 255 has to do with the way that things are stored in the computer and memory and bits and zeros and ones and that's an interesting discussion that I believe leave for some other time but this is the range by default between 0 and 255 and I could do the same thing with stroke so I could say stroke 255 and you can see here all the shapes now have a white outline with this dark gray interior so that's one way of doing color the other way of doing color is what I'm call not me I didn't invent this clearly uh RGB color so instead of a single number with RGB color color you need to provide processing The Fill stroke or background background functions with an amount of red an amount of green and an amount of blue each of these having a range between 0 and 255 so you can kind of Imagine exactly what this might do if I come back over here and I look at the fill I'm giving it an amount of red an amount of green and an amount of blue so what will this color be if it has a lot of red but no green and no blue RGB red green blue right so we can run this and you can see all the shapes are entirely red because it has only red if I were to give it let's give it a little bit of blue we can say I mix a little blue in there and you can see I can maybe give it even a little bit more blue you can see I'm getting this more pinkish purplish color because red and blue make purple so you know this now walks down the road of all sorts of an interesting long elaborate discussion about color theory and color mixing and the properties of light but one thing that's important to realize here is the the what's going on in in adding these colors to adding some red and adding some blue is is uh is is adding light together so you can think about it if you had a red flashlight and a blue flashlight in you shine them on the wall next to each other what color you get it's a little bit different than mixing paints there's a lot of similarity but you know if you mix like all like a whole lot of colors red green blue orange paint you'll end up getting like sort of brown or dark color the more you add color the brighter it gets so for example 255 255 255 is white and actually grayscale is just shorthand for the red value being equal to the green value being equal to the blue value so if I were to go back here and say 75 7 75 75 you can see now that I have what I had before but if all the values are equal I can shorthand wise just say 75 so now I can also add a background which I could say uh let's use that nice uh pinkish purplish color and I can have this fill and stroke and for these I can have this stroke for these lines the other thing you can notice is the order matters so where you put fill and stroke affects all the shapes that come after it so if I were to now say fill 0255 and I were to say stroke 255 0 and I'm not really you can see that the lines are white you can see here that the lines are still white but the outline of the circle is now red because this stroke here overrode the stroke that was at the top so what I might suggest is if you wanted to be really long winded about this is for every shape and maybe these should both be white and then I want uh uh I want this this ellipse to be this color and then you can start putting line breaks you know and assigning uh specific colors for every shape okay so you can see I could keep going with this and I'm going to go with I'm going to muck around and make my strange alien with whatever colors and things that I want so this is now it's 1045 I you know an hour would be just 15 minutes from now we're going to kind of wrap up but let's take five you know a little less around five minutes to have you guys try to add color I'm going to look at the chat see what questions came up hopefully people are still watching or listening or have questions um and then I'm going to add the last step we're going to add is a little bit of Animation to what you're doing um so uh let's take a look uh and I'm going to see if there's any questions in the chat so um okay great so people are um talking about what they are making an hourglass a snowman a cover stroke weight sure so somebody asked me to cover stroke weight stroke weight is a function that changes the thickness of the lines so you know I'll add that into mind for uh I'll put it here under the for these lines if I say stroke weight four and run it again you can see that the the thickness of the of the outline is much much greater it's actually Four pixels wide and that can be this is actually a useful thing to add because it makes it a bit more visible what's going on too in terms of the stroke and the fill um so somebody who joined here late oh do values wrap if you exceed 255 or are they capped um you know there's a kind of a bit of an it depends answer but I will say they are capped so if you pass 300 into the function you'll still get uh the white the value 255 um and uh somebody asked what is this programming I'm talking about so I'm using something called processing I guess I erase that is processing. org is the programming language environment you can download to follow along with this tutorial and this tutorial by the way will be archived uh on YouTube as soon as it's over so you can go back and watch it again if you if anybody really wanted to or if somebody else wants to watch it obviously the Live Chat thing won't be an aspect anymore but yeah okay so I'm going to um take a couple minutes to add some colors to mine I want I like the these antenna being uh um and so I'm going to make the uh so my alien should be green I like that with green but I'm going to make a like purple outline okay like that with uh let's keep everything kind of purplish there we go and that's blue there the antenna I think should be red this is very important some sort of uh reddish color and green on the outline let's keep this stroke I'm going to just keep the stroke the same for everything and uh let me make those a little bit darker there we go and then the this last rectangle is the ey which would be something nice and uh blue I don't know what I'm doing here and the background let's make it a little bit brighter there we go okay this is my alien now with some colors I I guess my outline was is too close to the let's just make the background a uh a light gray or maybe something darker okay anyway I'm clearly not a visual designer there's my shape with some colors now okay uh um looking here there's more people in the chat saying funny things uh uh and typing in their code snowman uh you did someone's asking I did not get a green color on the shape so it's kind of hard for me to debug your code from the chat as much as I love the idea of trying to do that but so comron I will I'm gonna I'm gonna I I don't have the chat open on this computer here with processing let me look Phil green ellipse ah uh Camron I see you have zero dot so the mistake I'm noticing somebody in the chat has typed in this Phil 0.255 comma 100 so this is just a typo but processing doesn't know it's a typo they think you're trying to put in the number 22255 so uh in that case you make make sure you need to have a comma there uh this is a good moment to just show you sort of what happens if something's out of place so I'm going to like remove this um I'm going to remove this whoa something crazy is going on down there I'm going to remove this semicolon so one thing you'll notice in processing that if you have a syntax eror you'll get a red squiggly line where the syntax error is and then down here on the bottom there's an errors tab so if you click on that errors tab you'll see missing a semicolon and it will also tell you what line number that's happening line number two I could actually even double click on that it'll take me right there I add the semicolon and there you go so is the you know most of the time the error processing can figure out what it is and give you a nice helpful suggestion sometimes it can't and this is just the life that you lead now okay 1049 um okay all right so by the way sometimes like the chat you should know you're seeing me about 20 or 30 seconds after something that I'm actually saying live just so you know because the way the delay works on YouTube okay we've got 10 more minutes here's what I've got left to do I want to show you how to animate something big topic 10 minutes no problem and I want to show you uh and I want to just talk about where do you go from here this is an hour it's all going to be over I'll go on with my day you'll go on with your day someday we'll meet again I hope but I'm going to try to give you some resources without just like plugging my own stuff too much of of how you might learn more of this okay so here we go um here we go let me come over here to talk about animation for a second okay so this is a big topic you know what we've been doing here and I said I was coming over here but I'm going back over here for a second all of these programs that we've been writing you and me together here on this day um have just been these static images programming I said is the act of writing instructions for the computer to follow there was a first instruction a second instruction a third instruction a fourth instruction it got to the end it finished the picture is presented you're done but animation programs or most programs that you write even your the email program you use Photoshop your word processing program these are things that run over time so programs need to handle interaction events that might happen they need to handle uh drawing over and over again to animate something so this is something that I think we can add somewhat quickly to the processing to processing today at least and you know I'm going to gloss over some of the underlying details but the core idea will be there and hopefully you will enjoy this somewhat so the thing that you need to add to your program looks like this and there's a lot of new syntax here not all of it will make immediate sense to you or even sense to you in the next 10 minutes but as I show you further resources and you go further into this it will start to become more and more clear but in what I'm going to show you how to do is instead of writing your code simply as a linear list of instructions right there in the processing editor I'm going to tell you put your code either in setup or inside draw these are what are known as blocks of code blocks of code begin with a curly bracket and end with a closed curly bracket so this is the way to say that the code that's in here is part of this thing called setup and the code that's in here is part of this thing called Draw and these things these are functions actually that you are defining the setup function the draw function they're special functions that processing requires you to write for an animation that setup is a function that happens once at the beginning and draw is a function that happens forever and ever looping over and over again draw the circle draw the circle draw the circle so if I come back over here and I'm going to um I'm going to save this as uh hour of code one so I can uh now I'm going to save it whoops I'm GNA save it as hour of code two so I'm because I want to just what I want to do now is only leave this circle in so you can see I simplified the program a little bit so it's just drawing a circle in the middle of the screen what I want to do now is say void setup void draw so I put some of my code in setup and I put some of my code in draw now what goes where is an interesting question there's really no right answers to these questions but there is sort of an answer for at least what I'm showing you right now so one thing that certainly should go in set up is size that is a thing you do when the program begins set up the size of the window if I want if my ultimate goal is to maybe have this ellipse drawn move around the screen I need to continuously draw that Circle draw it here then draw it there then draw it here then draw it there then draw it there then over there then over there so that is something that happens over and over again background is an interesting question should it be in setup or should it be in draw well first let's just run this and see what I even get so one thing you'll notice here is I'm not getting anything different it's still just a circle being drawn in the middle of the window the code is actually still running in fact it's drawing that Circle it's like draw draw draw draw draw draw dra dra draw but I see it as a static image because that circle is being drawn only in the same place every time but what if this number 320 what if that number could be something different every time through draw for example and I'm kind of rushing through this a little bit because we're running out of time but uh for example what if that location could be the location where the mouse is what if I could say draw the circle where that Mouse is where the mouse is where the mouse is and in fact processing and all programming language environments have a mechanism for doing this generally speaking not just the mouse it's something called a variable a variable is a word that stands in for a number and it's something that can change over time it can hold information it can hold and store data so very quickly something I can add here is mouse X and and mouse y you can see those words turned a pink color because processing recognized them as key words as variables within the system and if I do this you can see now look at this that circle is continuously being drawn wherever the mouse is and I already all of a sudden right now I have a painting program beautiful drawing it where the mouse is now remember I add this weird question of where should background be well notice that background was in setup so the background was drawn only once so I'm never erasing a previous Circle that was drawn and you can see I have this painting program what would happen if I take background and move it to the beginning of draw now you'll notice the circle is moving but I'm not seeing the previous one because every time it draws the new circle before that it erases the background so this is the way that you can create something moving along the screen that's interactive by assigning its location to Mouse X Mouse y but it's also important to remember that these are just numbers so I could for example put Phil in Mouse X and I could put Mouse Y in background so also you can see that the color is changing as I'm moving the mouse right as I move down it gets it gets it gets brighter as I move up it gets um it gets darker and and the circle value is changing I could also just keep the circle in the middle but I could use Mouse X and mouse y for its size and you can see here if I come in here as I uh as I move up and down the size of the circle changes based on Mouse X Mouse y so those variables are just data they're just numbers and you can assign them to anything in your program position color size you could put Mouse y as the exposition of something so it's that might be very confusing because as the user moves along the xaxis the thing moves down but that could be an interesting and different interaction so there's a lot lot of possibilities here and this is just the first step these are two variables that processing gives you for free but ultimately and this is this this is part of next steps really um you can Define your own variables you can make up your own variables give them their your own names the score for a game the uh speed of a thing that's flying across the screen you can make up your own variables too so um we have uh you know I'm going to go a little bit longer than just the one hour maybe by five or 10 minutes um so why don't I give you guys a few minutes to try adding Mouse X and mouse Y in your code somewhere um and see what you can change color or change position um and then I'm going to wrap up and have some closing thoughts and try to point you towards some other resources that might let you uh keep going and do more okay uh yes so somebody's asking um somebody's asking uh what button does the auto forting so one thing I'll just mention this before are asking about it is there is a sort of a standard way of indenting code code that's inside a block uh is typically indented a little bit to sort of see what's in but it doesn't affect how the code runs this exact program would run the same way if I wrote it like this it's sort of a mess to look at but a way that you can have processing automatically adjust all your indentation and everything to make it so nice and you know I don't know clean and easy to look at um is under edit uh Auto format so this Auto format button which is also command t or probably control t on a PC so if I now do command T you can see that it autof formatted my code to be nice and organized okay some people are asking questions um uh so somebody asked about mobile uh somebody asked about yes so somebody asked about transparency so you can give Phil or stroke a fourth argument which has to do with the transparency that's correct um someone asked about um mobile development so mobile development that's a big question there's lots of ways you can do mobile development um but one of because processing is built on top of java and Android systems are Java based you can actually do uh Android development in processing and there's something called processing Android which is essentially like an addon or a mode that you can add by the way you can also do all of your processing programming in Python uh by adding the python mode which is something you can add right here through ad mode so you can look at Android and python through here this afternoon at 130 I'm to do this exact tutorial again but using the p5js programming environment which is a JavaScript based so Java JavaScript and python are your sort of three languages that you can work with in this sort of world of processing in P5 um okay will you be starting Java so all by the way this is Java you are learning Java I mean there's some nuances and some specifics to the way Java programs are built that are being not shown here but uh you know if you're interested in Java you know I might suggest just looking at all of my back catalog of video tutorials that use processing that will get into all of those details um okay um so we're coming up to 11 o'clock here um so first of all I would like to encourage you to please share with me anything that you made from today uh probably the easiest way to do that is through Twitter uh SL shiftman I ffan um uh so I'd love to just sort of hear how this was for you or give get any feedback um certainly there's also this will be archived on YouTube and you can uh write in the comments there as well um so this is the question I guess what if you want to learn more so um I'm going to uh get some props over here oops the camera went off so let me fix that um uh so uh ah I knocked over a glass everything's okay everybody it didn't have any water in it it was my water glass but I finished it so um there are lots of books that you can get um this is a particularly wonderful one uh make getting started with processing a HandsOn introduction to making interactive Graphics written by Casey Reese and Ben fry the creators of processing I I really don't mean to be selling you guys stuff I'm just sort of showing you this is a my book learning processing which has a lot of information um and uh certainly on the processing website uh you can under here under books uh you'll see there's also the processing a handbook which is the uh which is also written by Casey and Ben and you can scroll down here and see that there are a lot of other books that you could look at um that give you a lot of different ideas of working with processing I would also suggest that you go here under tutorials my head is in the way here tutorials on the processing website um this uh hello processing tutorial is actually a kind of recorded version essentially of what I did today but we made this two years ago so it's still the same same content it's interactive it actually has a place where you can type code into the browser to try it out so I I would certainly recommend you checking that out and there are also um these text based tutorials that are here as well and right up here um at the top here under video tutorials there are a lot of wonderful video tutorials I'll mention uh Jose I think his is uh uh fun programming uh or maybe or the plethora project all of these tutorials are great I guess since I'm here if you like this video um I would suggest that you look at um let me just uh go to this link here um these are all of my uh playlists and you can see here that uh this section here learning processing and beginers and these I have probably like 60 to 100 videos that kind of go through all this processing stuff in more detail detail um a lot of the stuff that I also have are tutorials about um uh natural simulation and physics simulation and and and and generative algorithms that type of thing and I've also started a set of tutorials working with p5js which is uh JavaScript and some things with the connect um the Microsoft Connect in different sens to computer anyway there's a lot more there so uh you know I I now I feel weird like I'm like I did this like I'm advertising stuff which I don't mean to be doing but um so that I think would be a good resource for you um are all sorts of interesting um workshops and probably schools that you could think about attending uh one of one of my um uh favorite new Ventures is the school for poetic computation which is a a a uh popup School in a way I might call here in New York that does uh work with people with creativity and programming and electronics projects and they have kind of one week or 10 we programs things like that there's another one that happened in Germany last summer called some like make some somebody somebody remind me what that is I'll link to these so I don't know put your put your ideas for next steps um in the comments of this video when it gets archived or in the chat here and um and hopefully that will give you some ideas of what to do next if you're interested in this um so I'm going to look I'm going to look at before I say goodbye thank you for watching I'm going to look in the chat and see if there's some more questions I can answer uh how do I export processing sketches as a Java application okay let me show that to you uh here in processing under file under export application so this will actually export your processing sketch as a standalone application and if I do export application uh save changes yes and now I can pick like well do which platform do I want to export for do I want it to be full screen uh do I want to embed Java which I would recommend if you're intending to like send it or distribute it that's why it has Java embedded in it nobody has to have a separate install of java so I'm going to hit uh export and you can see here I have my Mac application which is there and so it also comes with the source and you can look at it sort of translated your processing code into Java which really just means it puts a few things around it and now I could run this when I run it you can see there it is my program just run so it looks like it's running with but processing is not open anymore so this is now just a standalone application that's running on my computer uh hello France um what do you think is programming natural comes or can we build that I'm sorry I didn't oh void setup is this can be call method to okay so someone so set up and draw there so many questions and things we could discuss and answer but I will let's try to let me try to talk about this for a second so set up and draw our special functions I was going to open processing back up just to kind of have that as a reference um set up and draw are special functions that processing uh asks you to write I'm going to get this open again open recent um and uh you don't actually execute so background fill and ellipse are functions that you are executing that are in the processing Library setup and draw are like the inverse of that they're functions that you're defining but processing is calling them for you it knows to call setup at the beginning it knows to call draw over and over again something we've missed in this tutorial but I certainly get into some of my other videos is how do you define call your own function and this is just something that comes up once you start to build larger and more complex programs um um thank you for some of the nice comments how can I program a function slide with Java so I don't know if you're asking about using a slider so interface elements are are are a tricky topic but there are different Java or and for Android in particular you can use you need to sort of use the native Android stuff to get the interface stuff and you could then combine that with some of the drawing things you have in processing but uh one of the things things about processing that's great that I guess I'll show you if I go to sketch import Library these under ad library because processing is built built on top of java and open source people can design and make addons for it essentially like oh processing doesn't have code for checking email I'll make a processing library that checks email so if I go click add Library what you'll see here is a very very long list of all sorts of additional code libraries that are available for processing and if I just kind of like scroll down here you can see um you know open connect for using the Microsoft Connect obj loader for loading a 3D model from another program uh QR code for reading a QR code uh SFTP for ftping a file super collider for working with super collider Sprites you can just see there's just tons and tons of midi for working with midi which is an audio thing on the computer so there's lots and lots of libraries that you could potentially add and use code with too um okay so it looks like the questions have ended and it's about 1110 this has been going for an hour and 10 minutes uh I will be back this afternoon at 130 p.m. to do my next uh hour of code with uh p5js so I'm going to go over here to my uh console and hit the stop stream button which means I will disappear I don't know how long it takes YouTube but this will probably be up and archived within the next hour please stay in touch share what you made give me feedback uh twitter.com shiffman is probably the best way to reach me for today and um look forward to hearing from any of you I'm going to hit stop streaming now goodbye thank you see you later
