With timestamps:

00:00 - Welcome back to the
second video in Chapter 1
00:03 - about vectors and p5.js.
00:05 - Hi.
00:06 - So I could go in a number of
different directions here.
00:09 - And I'm still sort
of figuring out
00:11 - what direction I'm going
to go in right now.
00:12 - But ostensibly, if you're
following "The Nature of Code"
00:15 - book along with these
videos, the next topic
00:17 - is really looking
at vector math.
00:19 - What are the kinds of
operations that you
00:22 - might be used to doing
with scalar quantities?
00:26 - 5 plus 2 equals 7.
00:28 - 5 minus 2 equals 3.
00:29 - Multiply, divide, square
root, power of three,
00:33 - all of these kinds of
mathematical operations,
00:36 - those mathematical operations
exist for vectors as well.
00:40 - And a lot of times it's as
simple as a vector addition
00:43 - is the same as scalar addition.
00:45 - But you just add the x's.
00:46 - Then you add the y's.
00:46 - And that's really where
I'm going to start.
00:48 - But what I think
I prefer to do is
00:50 - rather than go through
a laundry list, which
00:53 - is how the book does this to a
bit more extent, of vector math
00:59 - one at a time, I'm going
to take the next step
01:03 - in the random walker example and
discover what kinds of vector
01:07 - math I need as I'm
going and start
01:09 - to talk about the different
functions, vector math
01:12 - functions, I need
as I get to them.
01:14 - But you might want
to look and sort
01:16 - of wonder like what
are all the things
01:18 - that I can do with vectors.
01:20 - And one of the reasons to use
the P5 vector class beyond just
01:24 - your own x and y
variables is that all
01:26 - of these common operations exist
as functions in the P5 vector
01:31 - class itself, like add,
subtract, multiply,
01:33 - divide, magnitude,
magnitude squared,
01:36 - dot product, cross product,
distance, normalized limit,
01:39 - heading, rotate, so
many so many things.
01:42 - So I expect that over the
course of many, many videos
01:45 - throughout this whole series,
I will get to a lot of these.
01:47 - But you also might just
take a moment to pause
01:49 - and click through and look
at some of these yourself.
01:52 - So in the random
walker example, there
01:54 - happens to be some
vector math going on.
01:57 - I am taking the x component
of the position vector, the y
02:00 - component of the
position vector,
02:01 - and adding a random
number to it.
02:03 - So let's start by
discussing vector addition.
02:09 - Let's say that I
have two vectors.
02:10 - We'll call them u and v.
Actually, you know what?
02:13 - That's a very-- the u and
v, the way I write u and v,
02:15 - it always looks too similar.
02:16 - Let's just call them a and b.
02:18 - Vector a and vector
b-- and vector notation
02:21 - that you might see
in a math textbook
02:23 - often uses the arrow
on top of the letter
02:27 - to say this
represents the vector
02:29 - a, this represents the vector b.
02:32 - And let's say the
vector a is 3, 4.
02:36 - And let's say the vector b is,
I don't know, 2, negative 1.
02:43 - I want to examine,
what do I mean when
02:45 - I say vector a plus vector b?
02:48 - So this is actually a really
simple operation to do,
02:51 - because the answer--
if this was c--
02:54 - actually just involves adding
the components together.
02:57 - So this would be 5, 3,
because 3 plus 2 is 5
03:01 - and 4 plus negative
1, or 4 minus 1, is 3.
03:04 - Incidentally, while
we're here, I'll
03:06 - just say that a minus
b, vector subtraction,
03:09 - is also what you probably
imagine it would be,
03:12 - the x component minus the
exponent, the y component
03:15 - minus the y component.
03:16 - And this would extend into
any dimensional space.
03:18 - If my vector had 10 numbers in
it, it would be the same thing.
03:21 - So this would be 1,
4 minus negative 1
03:25 - is 4 plus 1, which is 5.
03:27 - So these are how these
operations actually work.
03:30 - However, while this is
so incredibly simple,
03:33 - I think it's worth
taking a moment
03:35 - to actually look at how
this appears in a diagram,
03:39 - because this really
relates to how we're using
03:41 - vectors in a 2D P5 canvas.
03:44 - Let's think about our
two-dimensional Cartesian
03:46 - space, the one where y points
up and x points to the right.
03:51 - So not the upside down one,
what with the demi-gorgon in it.
03:54 - And so the vector 3,
4 would be 1, 2, 3--
03:59 - oops-- 1, 2, 3, 4.
04:02 - So this is vector a.
04:05 - And vector b is 1,
2, and negative 1.
04:10 - So this is vector b.
04:13 - So a and b.
04:15 - Adding vectors, the resulting
vector c, which is a plus b,
04:21 - is the vector that results from
putting these two end to end.
04:25 - So it doesn't matter
which one I do first.
04:28 - But I'll start with a.
04:32 - And then I'm going
to put b on the end.
04:35 - And b was 2, negative
1, so like this.
04:39 - That's b.
04:40 - That means this
vector here is C.
04:43 - This is the resulting vector
that you get from a plus b.
04:47 - Incidentally, the vector
you get from a minus b
04:52 - would be just take
b, the same b,
04:55 - and put it in the
negative direction,
04:57 - because this is like
representing minus b.
05:00 - And then the result of a
minus b would be this vector.
05:04 - So in that case,
which vector goes
05:06 - on the end of which is quite
important, because a minus
05:08 - b is quite different than
b minus a, whereas a plus b
05:11 - and b plus a are the same.
05:12 - The reason why I mention
this is because now
05:16 - if we go to our upside down
world, the worlds of P5,
05:20 - and I have this idea of
a position, the position
05:25 - vector, which gives
us instructions of how
05:28 - to get from the origin to
some location in the canvas,
05:32 - and what I want to do
is have this thing move,
05:35 - intimate, live in a physics
world and respond to forces.
05:39 - That's where I'm
going with this.
05:40 - I want to add--
05:43 - to the concept to
position, I want
05:45 - to add the concept of velocity.
05:47 - And if this happened
to be velocity,
05:50 - then if I take velocity
and add it to position
05:53 - and restore that
back into position,
05:56 - then I have a new position.
05:57 - And then I do it again.
05:58 - I take that velocity
and add it again.
06:01 - And then I have a new position.
06:03 - So the object, the
walker, so to speak,
06:06 - is moving from position
to position to position,
06:09 - while adding the velocity
over and over again.
06:11 - Now, if that velocity
should ever change,
06:13 - that's going to make things
much more interesting.
06:16 - But let's just start
with this concept.
06:18 - So I am going to
add to my walker
06:25 - a variable called
vel for velocity.
06:28 - I'm going to say create vector.
06:30 - And I'm just going to
hard code something in it
06:31 - just to see that right now.
06:33 - I'm going to say 1, 0.
06:36 - Then, now, what I'm
essentially saying
06:39 - is that these numbers, these
random numbers that I was
06:42 - picking in the
random walker example
06:44 - that I was adding to position
dot x and position dot y,
06:47 - those are the equivalent of
the components of the velocity
06:51 - vector.
06:52 - So [MUSIC PLAYING]
if I add replace
06:56 - those with the x and y
components of dot velocity,
06:59 - now I have, what do I have?
07:01 - I have a dot that's
moving to the right.
07:04 - I should probably
change it from a dot
07:07 - so it's a little easier
to see to an ellipse.
07:11 - [MUSIC PLAYING] And
let's run this sketch.
07:19 - Oh, and let me now also
erase the background,
07:23 - because ultimately the idea of
the trail of the random walker
07:26 - was where I was
before that example.
07:28 - But now, I'm moving into a
body that's going to hopefully
07:31 - eventually respond to physics.
07:33 - And I think this
visually makes more sense
07:35 - with background and draw.
07:38 - This circle's
position is changing
07:40 - according to its velocity
every cycle through draw.
07:44 - I'm going to change this
now to 1, negative 1.
07:47 - And can you imagine
which direction it's
07:50 - going to go when I hit play?
07:51 - Think about it.
07:53 - Did you say up and to the right?
07:55 - If you did, you're right.
07:56 - [BELL DINGS]
07:57 - Oh, how I am missing something
so important here, though.
08:02 - The whole point of where I
started all of this discussion
08:05 - was looking at the reference
and talking about vector math
08:08 - and how there are all these
functions for common vector
08:11 - math operations, like
the Add function.
08:13 - But I'm not using
the Add function.
08:15 - Why aren't I using
the Add function?
08:17 - Well, here is the most
confusing aspect of this.
08:21 - Looking at this, you see this
dot pos dot x equals itself
08:24 - plus this dot velocity dot x.
08:27 - It's just like x
equals x plus speed.
08:30 - Couldn't I-- wouldn't
I-- shouldn't
08:32 - I maybe, as a next
step, comment these out?
08:36 - And just say this
dot pause equals
08:38 - dot pause plus
this dot velocity.
08:41 - Ultimately, this is
what I'm doing, right
08:43 - to add the velocity
to the position,
08:46 - yeah, the components together.
08:48 - But I don't care
about the components.
08:49 - I just want to add this
vector to this vector.
08:51 - So just add those
vectors together.
08:52 - Let's run the code.
08:53 - Why not?
08:54 - Let's see what happens.
08:58 - Isn't it nice how
JavaScript just like
09:00 - doesn't give you any errors.
09:01 - It just says like, I don't know.
09:03 - You tried to do something.
09:05 - Whatever.
09:05 - I couldn't do it.
09:06 - I just won't draw anything.
09:07 - I wish I had an error here,
because the error I would want
09:10 - it to give me would
say, I don't know
09:13 - how to use the plus
operator with p5.vector.
09:16 - I wish that I did.
09:18 - And I personally, me, Dan,
wishes that JavaScript,
09:21 - there was a way
for me to tell it
09:23 - how to use the plus
operator with P5.vector.
09:26 - and some programming
languages do allow you
09:28 - to overload what
the operators do.
09:31 - I think C++ is one maybe,
but JavaScript is not one.
09:35 - It knows no more how to add
these two vectors together
09:39 - than it would two
fonts or two P5.images.
09:42 - And so in order to
add them together,
09:45 - we need to instead of
using the plus operator--
09:48 - I don't know why I'm
coming over here--
09:49 - but we need to use
the add function.
09:54 - And all of the vector
math operations
09:56 - that I use over and
over again probably
09:58 - throughout these videos, I need
to find the function in there
10:03 - that does that operation.
10:05 - So instead of this, I will
say this.pos.add.velocity.
10:12 - It's a bit of a mouthful.
10:14 - It's kind of-- there's
a lot of dots here.
10:15 - But let's just take a
moment to breathe this in.
10:19 - Ultimately, if you forget about
this dots for a little bit,
10:23 - I'm saying a.add b, right?
10:26 - Back to this example
of two vectors a and b,
10:29 - I've got a.add b.
10:31 - Add b to a.
10:33 - Add b to a.
10:34 - Add this object's velocity
to this object's position.
10:38 - And now, when I run it,
we've got what we had before.
10:43 - I can delete all
this extra code.
10:47 - And here we are.
10:48 - So this is the end of
this piece in the sense
10:50 - that I've talked about
what vector math is.
10:52 - It's taking a
mathematical operation
10:54 - and applying it to vectors.
10:56 - Add being a primary
example, or at least
10:58 - our first example of that.
10:59 - And the concept of velocity
as being a vector that
11:03 - changes the position over time.
11:04 - One question you might be
asking yourself is, well,
11:06 - what if I wanted to go
back to that random walk
11:09 - and have the velocity
be random every frame?
11:11 - Like how would I go
about doing that?
11:12 - And I think I want to cover
that in a separate video,
11:14 - because there is actually a
really interesting thing that
11:17 - happens when you pick random
vectors as opposed to picking
11:20 - random x and y
values separately.
11:22 - And I want to show that
in a video on its own.
11:25 - So I'm going to do that next.
11:26 - And then, once I
finished with that,
11:28 - I will come back and start
looking at other vector math
11:31 - operations--
11:33 - magnitude, normalize,
multiply-- in the context
11:37 - of setting an acceleration
for random walker.
11:40 - So it doesn't just have a
position and a velocity,
11:43 - but it also has an acceleration.
11:46 - So I'll see you there.
11:47 - [MUSIC PLAYING]

Cleaned transcript:

Welcome back to the second video in Chapter 1 about vectors and p5.js. Hi. So I could go in a number of different directions here. And I'm still sort of figuring out what direction I'm going to go in right now. But ostensibly, if you're following "The Nature of Code" book along with these videos, the next topic is really looking at vector math. What are the kinds of operations that you might be used to doing with scalar quantities? 5 plus 2 equals 7. 5 minus 2 equals 3. Multiply, divide, square root, power of three, all of these kinds of mathematical operations, those mathematical operations exist for vectors as well. And a lot of times it's as simple as a vector addition is the same as scalar addition. But you just add the x's. Then you add the y's. And that's really where I'm going to start. But what I think I prefer to do is rather than go through a laundry list, which is how the book does this to a bit more extent, of vector math one at a time, I'm going to take the next step in the random walker example and discover what kinds of vector math I need as I'm going and start to talk about the different functions, vector math functions, I need as I get to them. But you might want to look and sort of wonder like what are all the things that I can do with vectors. And one of the reasons to use the P5 vector class beyond just your own x and y variables is that all of these common operations exist as functions in the P5 vector class itself, like add, subtract, multiply, divide, magnitude, magnitude squared, dot product, cross product, distance, normalized limit, heading, rotate, so many so many things. So I expect that over the course of many, many videos throughout this whole series, I will get to a lot of these. But you also might just take a moment to pause and click through and look at some of these yourself. So in the random walker example, there happens to be some vector math going on. I am taking the x component of the position vector, the y component of the position vector, and adding a random number to it. So let's start by discussing vector addition. Let's say that I have two vectors. We'll call them u and v. Actually, you know what? That's a very the u and v, the way I write u and v, it always looks too similar. Let's just call them a and b. Vector a and vector b and vector notation that you might see in a math textbook often uses the arrow on top of the letter to say this represents the vector a, this represents the vector b. And let's say the vector a is 3, 4. And let's say the vector b is, I don't know, 2, negative 1. I want to examine, what do I mean when I say vector a plus vector b? So this is actually a really simple operation to do, because the answer if this was c actually just involves adding the components together. So this would be 5, 3, because 3 plus 2 is 5 and 4 plus negative 1, or 4 minus 1, is 3. Incidentally, while we're here, I'll just say that a minus b, vector subtraction, is also what you probably imagine it would be, the x component minus the exponent, the y component minus the y component. And this would extend into any dimensional space. If my vector had 10 numbers in it, it would be the same thing. So this would be 1, 4 minus negative 1 is 4 plus 1, which is 5. So these are how these operations actually work. However, while this is so incredibly simple, I think it's worth taking a moment to actually look at how this appears in a diagram, because this really relates to how we're using vectors in a 2D P5 canvas. Let's think about our twodimensional Cartesian space, the one where y points up and x points to the right. So not the upside down one, what with the demigorgon in it. And so the vector 3, 4 would be 1, 2, 3 oops 1, 2, 3, 4. So this is vector a. And vector b is 1, 2, and negative 1. So this is vector b. So a and b. Adding vectors, the resulting vector c, which is a plus b, is the vector that results from putting these two end to end. So it doesn't matter which one I do first. But I'll start with a. And then I'm going to put b on the end. And b was 2, negative 1, so like this. That's b. That means this vector here is C. This is the resulting vector that you get from a plus b. Incidentally, the vector you get from a minus b would be just take b, the same b, and put it in the negative direction, because this is like representing minus b. And then the result of a minus b would be this vector. So in that case, which vector goes on the end of which is quite important, because a minus b is quite different than b minus a, whereas a plus b and b plus a are the same. The reason why I mention this is because now if we go to our upside down world, the worlds of P5, and I have this idea of a position, the position vector, which gives us instructions of how to get from the origin to some location in the canvas, and what I want to do is have this thing move, intimate, live in a physics world and respond to forces. That's where I'm going with this. I want to add to the concept to position, I want to add the concept of velocity. And if this happened to be velocity, then if I take velocity and add it to position and restore that back into position, then I have a new position. And then I do it again. I take that velocity and add it again. And then I have a new position. So the object, the walker, so to speak, is moving from position to position to position, while adding the velocity over and over again. Now, if that velocity should ever change, that's going to make things much more interesting. But let's just start with this concept. So I am going to add to my walker a variable called vel for velocity. I'm going to say create vector. And I'm just going to hard code something in it just to see that right now. I'm going to say 1, 0. Then, now, what I'm essentially saying is that these numbers, these random numbers that I was picking in the random walker example that I was adding to position dot x and position dot y, those are the equivalent of the components of the velocity vector. So [MUSIC PLAYING] if I add replace those with the x and y components of dot velocity, now I have, what do I have? I have a dot that's moving to the right. I should probably change it from a dot so it's a little easier to see to an ellipse. [MUSIC PLAYING] And let's run this sketch. Oh, and let me now also erase the background, because ultimately the idea of the trail of the random walker was where I was before that example. But now, I'm moving into a body that's going to hopefully eventually respond to physics. And I think this visually makes more sense with background and draw. This circle's position is changing according to its velocity every cycle through draw. I'm going to change this now to 1, negative 1. And can you imagine which direction it's going to go when I hit play? Think about it. Did you say up and to the right? If you did, you're right. [BELL DINGS] Oh, how I am missing something so important here, though. The whole point of where I started all of this discussion was looking at the reference and talking about vector math and how there are all these functions for common vector math operations, like the Add function. But I'm not using the Add function. Why aren't I using the Add function? Well, here is the most confusing aspect of this. Looking at this, you see this dot pos dot x equals itself plus this dot velocity dot x. It's just like x equals x plus speed. Couldn't I wouldn't I shouldn't I maybe, as a next step, comment these out? And just say this dot pause equals dot pause plus this dot velocity. Ultimately, this is what I'm doing, right to add the velocity to the position, yeah, the components together. But I don't care about the components. I just want to add this vector to this vector. So just add those vectors together. Let's run the code. Why not? Let's see what happens. Isn't it nice how JavaScript just like doesn't give you any errors. It just says like, I don't know. You tried to do something. Whatever. I couldn't do it. I just won't draw anything. I wish I had an error here, because the error I would want it to give me would say, I don't know how to use the plus operator with p5.vector. I wish that I did. And I personally, me, Dan, wishes that JavaScript, there was a way for me to tell it how to use the plus operator with P5.vector. and some programming languages do allow you to overload what the operators do. I think C++ is one maybe, but JavaScript is not one. It knows no more how to add these two vectors together than it would two fonts or two P5.images. And so in order to add them together, we need to instead of using the plus operator I don't know why I'm coming over here but we need to use the add function. And all of the vector math operations that I use over and over again probably throughout these videos, I need to find the function in there that does that operation. So instead of this, I will say this.pos.add.velocity. It's a bit of a mouthful. It's kind of there's a lot of dots here. But let's just take a moment to breathe this in. Ultimately, if you forget about this dots for a little bit, I'm saying a.add b, right? Back to this example of two vectors a and b, I've got a.add b. Add b to a. Add b to a. Add this object's velocity to this object's position. And now, when I run it, we've got what we had before. I can delete all this extra code. And here we are. So this is the end of this piece in the sense that I've talked about what vector math is. It's taking a mathematical operation and applying it to vectors. Add being a primary example, or at least our first example of that. And the concept of velocity as being a vector that changes the position over time. One question you might be asking yourself is, well, what if I wanted to go back to that random walk and have the velocity be random every frame? Like how would I go about doing that? And I think I want to cover that in a separate video, because there is actually a really interesting thing that happens when you pick random vectors as opposed to picking random x and y values separately. And I want to show that in a video on its own. So I'm going to do that next. And then, once I finished with that, I will come back and start looking at other vector math operations magnitude, normalize, multiply in the context of setting an acceleration for random walker. So it doesn't just have a position and a velocity, but it also has an acceleration. So I'll see you there. [MUSIC PLAYING]
