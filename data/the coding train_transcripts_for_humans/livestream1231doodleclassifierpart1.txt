With timestamps:

00:01 - hello happy Friday
00:03 - it is me dan Shipman the coding train
00:05 - has pulled into the station it had a few
00:07 - delays but it's here right now it's
00:09 - Friday that means is a day for the
00:12 - coding train I know this because it
00:14 - actually says this in my calendar now in
00:17 - fact I don't know if you know this but
00:18 - if you put a all-day event in a Google
00:21 - Calendar then ten minutes to midnight
00:23 - the night before it starts like blinking
00:25 - and blaring and alerting you that the
00:27 - coding train is starting when actually I
00:30 - should be sleeping but I'm here and I am
00:33 - super a little bit more excited than
00:38 - usual I'm usually quite excitable but
00:40 - today I'm extra excited I am going to
00:43 - take the day to attempt to accomplish
00:46 - something that I have been attempting
00:48 - that I haven't tempted before for and it
00:52 - didn't go very well and I think I've
00:54 - rethought it we thought about it a
00:55 - little bit so today I'm really going to
00:57 - try to take a lot of the work that I've
00:59 - been doing up until now I'm building a
01:01 - simple neural network in JavaScript and
01:03 - apply it to an actual possibly almost
01:07 - maybe a little bit useful problem so I
01:10 - will get to that in a little bit and I'm
01:12 - going to talk about what it is I'm going
01:13 - to do when I get there
01:15 - this is not a - it is a kitty cat
01:20 - okay so but before let me get let me
01:25 - talk about some logistics stuff and by
01:28 - that I don't mean the logistic function
01:37 - anyway so today today it is now about
01:42 - 10:40 a.m. I'm actually only gonna be
01:44 - here for an hour or so to start I'm
01:47 - gonna try to do the first piece of this
01:50 - project that I'm going to build today
01:51 - and I'm really just gonna prepare the
01:53 - data set so this morning's going to be
01:54 - about preparing a data set and we'll get
01:56 - to what that is in a moment and then I
01:59 - will be gone for some meetings and some
02:01 - lunch and some other things and then I
02:03 - will be back if I had to guess around
02:05 - 3:00 p.m. Eastern Time and then I will
02:08 - be live-streaming again for maybe three
02:10 - to five thirty
02:11 - so we'll get maybe an hour an hour and a
02:12 - half in this morning and two to two and
02:18 - a half hours in this afternoon and so
02:23 - the main project just to get to it right
02:25 - now the main project that I'm going to
02:27 - do is I'm going to try I'm going to do a
02:29 - twist on the usual em nest machine
02:35 - learning demonstration and the end this
02:38 - data set is a well-known handwritten
02:40 - digit data set that is used to test
02:43 - different machine learning algorithms to
02:44 - demonstrate machine learning works it's
02:46 - kind of if you will hello world problem
02:49 - of machine learning and I'm going to
02:51 - attempt to make a similar demonstration
02:55 - but with a creative twist using the
02:58 - Google quick-draw data set and so we
03:02 - will attempt instead of recognizing
03:04 - digits we will attempt to recognize
03:07 - things like hand drawn little kitty cats
03:12 - but let's just see how this is going
03:15 - yeah it's pretty good too this has gone
03:17 - around some improvement oh pretty good
03:19 - three what even knows I'm good for it's
03:24 - like this is predictive machine learning
03:27 - no no
03:30 - we'll get there eventually eight I could
03:34 - do this all day alright so looking at
03:46 - the chat looks like people are watching
03:48 - and not complaining that's always a good
03:49 - sign alright so before I get to any of
03:52 - that let me talk about a few other
03:54 - things Summer of Code this is happening
04:05 - I am NOT an official represent
04:08 - representative of the google Summer of
04:10 - Code I am just telling you about it this
04:13 - is a summer program a funded and managed
04:16 - and by Google where you if you are a
04:19 - student obviously read and check the
04:21 - eligibility or requirements specifically
04:23 - on their website but loosely if you are
04:26 - a college or graduate student and you
04:29 - will still be a student even if you
04:30 - graduate this year you are eligible to
04:32 - apply Google will pay you a stipend if
04:36 - you are accepted to contribute to an
04:38 - open-source project all the guidelines
04:39 - are on the websites one of the reasons
04:41 - why I mention this is if I go under view
04:44 - organizations there are many many many
04:46 - wonderful organizations I encourage you
04:48 - to click through them all and if you're
04:50 - thinking about applying and also by the
04:52 - way if you're not a student you could
04:53 - potentially be a mentor for one of these
04:55 - projects that's a slightly different
04:56 - process but that's something that you
04:58 - could absolutely look into and do and if
05:00 - I scroll all the way down here at some
05:02 - point I will get to the processing
05:07 - foundation so the processing foundation
05:10 - as you might be familiar with if you've
05:12 - watched any of my youtube channel before
05:14 - is a not-for-profit organization that I
05:17 - helped to manage and run it is the
05:21 - organization that maintains these
05:23 - software projects processing processing
05:26 - PI Python processing and p5.js the
05:30 - processing foundation also has a lot of
05:32 - community and education initiatives
05:35 - around
05:37 - inclusion and accessibility and so you
05:41 - can read more about the processing
05:42 - foundation on the Prostate foundation
05:43 - website but here if you would we can go
05:46 - here we can do learn more and now if you
05:49 - are interested I proposals don't start
05:52 - being accepted till March 12th if you
05:54 - are interested here you can click
05:55 - through and chat I think will take you
05:58 - to the products on actually a chat will
06:00 - take you to the processing forum you can
06:01 - post your ideas probably the most
06:03 - important thing for you to click on if
06:05 - you're interested in consuming to
06:06 - processing and by the way every open
06:07 - source organization that's participating
06:10 - at Google sort of code will have this
06:11 - kind of ideas list if I click here oh
06:15 - I've got a cable making a black smudge
06:17 - again fascinating that's not just as
06:20 - much oh yeah okay hold on I'll fix that
06:21 - in a second let me go with my I've got
06:23 - momentum here I'm all talking about
06:25 - google Summer of Code so if I click here
06:27 - we get to this project list and you can
06:30 - start to read back let me just tell you
06:32 - about something that I'm oh so one thing
06:35 - improving file i/o methods this is
06:38 - actually something I got to fix that now
06:40 - I now that I've seen it I got to fix
06:41 - that so what that is if you're wondering
06:43 - if I bring my finger all the way up to
06:45 - here see this this is actually a light I
06:48 - could shine it on me and where it's
06:55 - sitting it's kind of the camera is
06:56 - seeing it so I got to move it over yes I
07:00 - am a one-person show here I think that's
07:07 - better now there's a giant mouse now my
07:13 - shoe is untied it's okay now my shoes
07:20 - untied have to tie my shoe I was saying
07:22 - something important ah one thing I'm
07:24 - gonna do today into this morning in
07:26 - particular is I am going to implement a
07:28 - method to load binary file a binary data
07:32 - file into p5.js
07:33 - that is something that is not currently
07:34 - part of the library so that's one thing
07:36 - but here's my this is my pet project
07:40 - that I'm really actually so I haven't
07:43 - talked about the p5.js web editor on
07:44 - this channel coming soon
07:47 - now look it's all noisy over here I've
07:51 - got to fix that somehow see I think I
07:53 - had the light positioned in a way that
07:55 - the green oak is this there's this pole
07:59 - here maybe we just have to live with
08:02 - this today is that better oh it's a
08:05 - little bit better I mean I've got a
08:06 - little bit more shadow with me but
08:07 - that's fine all right there's a web
08:10 - editor for p5 it's an ongoing project
08:11 - you're welcome to look into it I hope to
08:14 - do help facilitate some videos about all
08:17 - the people who have made this I am not
08:19 - included in that list wonderful people
08:21 - caste ter occasions the lead developer
08:23 - this project but without going too far
08:25 - into this having a a piece that could be
08:30 - a nice google Summer of Code project is
08:32 - making a nicer error console in that web
08:35 - editor itself so if you are a web
08:36 - developer with experience with maybe
08:38 - anyway go look at this stuff lots of
08:42 - other things here all that you can that
08:45 - you could scan over okay so I don't
08:46 - wanna I don't want to go too far so
08:52 - actually let me see does anybody is the
08:53 - sound low and let me know if the sounds
08:55 - low if does anybody have any questions
08:58 - about the google Summer of Code about
09:02 - Google Summer of Code and let me again
09:03 - be clear I am NOT an official
09:05 - representative of Google I am someone
09:08 - who has applied to google Summer of Code
09:09 - as part of the processing organization
09:11 - so I'm just giving you my perspective on
09:13 - the program and how we manage it from
09:15 - the processing side
09:25 - is Summer of Code free Summer of Code is
09:28 - not only free you get paid how you get
09:32 - paid depends I think where you live but
09:35 - it is open to students in a certain
09:39 - number of countries that Google is able
09:42 - to have eligible and all that's on the
09:45 - website all right all right okay so now
09:53 - hmm other thing I want to say okay so I
09:56 - wasn't here last Friday why was I not
09:59 - here well I have to show you my most
10:01 - prized possession in the world it's in
10:03 - my wallet does it have any I don't think
10:06 - it doesn't have any personal information
10:08 - on it really I don't think I'm I don't
10:12 - think you know I'll cover up the barcode
10:14 - so you this is my and you probably can't
10:15 - even see this this is my new most prized
10:17 - possession
10:18 - it's a nice little picture of me I got
10:20 - it on February 23rd 2020 oh no no no
10:23 - that's how it that's what it doe longer
10:26 - will be valid it is a Library of
10:28 - Congress reader card so I had this
10:31 - wonderful chance last week to go and
10:34 - visit the Library of Congress Jer Thorp
10:36 - is doing a residency there if you're not
10:39 - familiar with Jerry's work he does
10:40 - wonderful amazing stuff in the world of
10:42 - data visualization you know that's
10:45 - probably not the best way to describe it
10:48 - but that's a quick way I can describe
10:49 - chairs work I and he is doing a
10:53 - residency at the Library of Congress
10:56 - labs so this is lab Stott Library of
11:01 - Congress and I would encourage you first
11:04 - of all you know I suppose you have to be
11:07 - living here in these United States which
11:10 - comes with its problems trust me I don't
11:13 - know if I would recommend that but
11:15 - Library of Congress is open to the
11:17 - public
11:18 - anybody can go and get that reader card
11:19 - i/o this afternoon I will come and show
11:23 - you I was able to I got a look at the or
11:25 - papers of the mathematician Lorenz of
11:28 - the Lorenz attractor and I have I took
11:31 - photos of his overhead projector slide
11:33 - from his lectures which are really
11:35 - awesome I will show them to you there
11:37 - so much stuff at the Library of Congress
11:39 - and it's not all digitized you have to
11:40 - go there and you can go there and
11:42 - research libraries are like my favorite
11:44 - thing in the world
11:45 - the Library of Congress is probably the
11:46 - biggest library I've ever been to now
11:48 - but I want to mention this I would
11:50 - encourage you to check out the
11:51 - experiments these are projects that
11:53 - people are doing with Library of
11:54 - Congress data here is information about
11:57 - innovator in residency AR Thorpe he is
11:59 - doing a live podcast he has a podcast
12:02 - you should listen to that I've been it's
12:04 - wonderful I've been listening to and
12:05 - he's gonna do a live one you know check
12:07 - his Twitter feed for information about
12:08 - that but in particular I want to go to
12:11 - LC for robots and so this is a place
12:16 - where you can find all sorts of api's
12:20 - and available data so at some point I'm
12:23 - really open to your suggestions and
12:24 - ideas I would love to make some videos
12:26 - and an experiment with some of the
12:28 - content and data that's available from
12:29 - the Library of Congress and then I
12:31 - wanted to find the Congressional data
12:34 - challenge I wanted to mention that let's
12:36 - just go to LC labs on Twitter because
12:39 - maybe it's a look there there's a little
12:46 - tweet here about the Lorenz papers and
12:48 - probably because this has to do with oh
12:50 - yeah this has to do with the thread
12:52 - about jairs project with Lorenz
12:55 - attractor that he's going to demonstrate
12:56 - anyway I got Wayne off topic here I mean
12:59 - I'm not off topic but I wanted to find
13:01 - oh yeah they're retreating me so this is
13:05 - perfect this is what I want to look for
13:08 - so this is the Congressional data
13:10 - challenge I
13:12 - you must you probably need to read
13:14 - through whatever FAQ to find out who's
13:16 - eligible to apply but there is a $5,000
13:19 - first prize and a $1,000 prize for best
13:21 - high school project enter by April 22nd
13:24 - 2018 especially if you are a high school
13:26 - student
13:27 - I mean I'll help anybody if I can but if
13:29 - you are a high school student and you
13:30 - want to enter this and I can help you
13:32 - somehow I don't know get in touch let me
13:33 - know there's some example projects and
13:36 - you can read all about data
13:38 - visualization data mashup if I had if I
13:41 - if I wasn't on the train that I'm on
13:43 - right now I would love to do if I could
13:46 - sort of figure out a way to do it like a
13:47 - tutorial of this stuff but
13:49 - day-o right no my birthday is not
13:56 - February third you can find my birthday
13:58 - online pretty easily I can't just tell
13:59 - you what it is and it's July 29th dark
14:07 - shader in the chat says I am 14 years
14:09 - old richard barton writes my high school
14:11 - students love coding train I have
14:13 - discovered recently that there's an
14:15 - audience of people most around the age
14:17 - ages between I would say like 13 and 17
14:21 - who are in high school who do watch my
14:23 - videos which is kind of like I eat Legos
14:29 - which is that really your name
14:31 - I eat Legos and also do you really eat
14:33 - Legos because if they were like
14:35 - chocolate Legos or like a kale like some
14:38 - sort of like healthy you know dried kale
14:42 - with what hemp seeds Legos sustainable
14:46 - eco bio degradable edible Legos this is
14:50 - a project goodbye I'm going to now
14:52 - invent edible Legos I will be back no I
14:56 - won't because I can't do anything for
14:58 - listen involves JavaScript and even that
15:00 - I can't do very well alright let's begin
15:07 - I think this was everything I wanted to
15:12 - say about of a way of introduction to
15:16 - today but I better get started alright
15:18 - so now I'm going to get let's whoops let
15:24 - me turn this camera on
15:32 - oh-oh I know there was something else I
15:34 - wanted to do alright so I wanted to do
15:37 - one other thing before I get started
15:38 - with today's project
15:40 - and that is let me go to a website let
15:44 - me go to the coding train comm so if you
15:46 - aren't aware brand new website thank you
15:50 - Neil's web thank you also to austin
15:52 - who's been doing a lot of work that not
15:54 - yet well some work that's now here in
15:56 - design-wise and some stuff that's coming
15:58 - this is a I see this as a community
16:01 - project if you're interested in
16:02 - contributing and helping make this
16:04 - website better check out just click over
16:07 - to github and check out the github
16:08 - issues and the there's lots of ways you
16:11 - can contribute even if you don't know
16:12 - how to code just helping write
16:13 - documentation and explanation for how
16:16 - things work or thinking through how the
16:18 - navigation should be to more easily find
16:19 - videos all that sort of stuff so the
16:23 - latest Oh interesting oh yeah I guess
16:27 - who knows how those I ended up releasing
16:29 - this stuff but the latest challenge that
16:33 - I did last week and I just want to
16:35 - mention if you're a kind of live stream
16:37 - only viewer is that a thing I don't I
16:39 - don't know if that's a thing like I just
16:41 - watch the live stream so I don't bother
16:42 - to watch the edited videos this part for
16:45 - was actually not done on a live stream
16:47 - so if you were a live stream only viewer
16:49 - you have not seen this unless you are a
16:52 - patron of the coding train every once in
16:54 - a while pretty rarely if I have like an
16:56 - extra thing that I want to like quickly
16:57 - do and I will do a live stream just with
17:01 - the smaller patreon group and so I just
17:04 - did this part for I'm not hiding any
17:06 - content because it will get released but
17:07 - sometimes it's easier just to do a
17:09 - smaller group live stream to sort
17:10 - something out so that is there for you
17:15 - to watch now what I want to do then is
17:19 - go to coding challenges go to I think so
17:23 - one thing that's a little confusing what
17:24 - I want to do now is show you some
17:25 - community contributions some community
17:28 - variations of 2048 and well it's a
17:32 - little bit tricky because this is one
17:33 - thing I haven't really resolved yet
17:34 - because it's a four-part coding
17:36 - challenge there's four there's four
17:39 - videos here let me mention something
17:43 - sorry type timeout I know I'm
17:46 - scatterbrained
17:47 - welcome to watching Dakota trait I just
17:50 - saw there was a super chat I don't
17:52 - really I do see the super chats after
17:55 - but I'm not paying super close attention
17:57 - the way that I have my interface is set
17:59 - up maybe I need a better system so I do
18:03 - want to mention that my preferred way
18:05 - for you to support the channel is
18:07 - through the through patreon but of
18:09 - course it's I very much appreciate super
18:12 - chats and I'm going to check this one
18:14 - right now just since I'm talking about
18:16 - it I am currently active duty Air Force
18:18 - and want to get into coding but can't go
18:20 - to a school what is a great starting
18:22 - point I also live in DC awesome wow
18:25 - great to hear from you thank you very
18:26 - much for your kind super chat message
18:30 - this is a great question I mean on the
18:33 - one hand you know I'm hopeful that my my
18:40 - YouTube channel itself can be a place
18:42 - for you to start I would say though
18:44 - probably as much as you know I could I
18:47 - could keep listing like well there's
18:49 - this other YouTube channel there's this
18:50 - wonderful book there's this online
18:52 - tutorial you know code Academy as
18:54 - interactive learn to code tutorials so I
18:56 - could keep going with those
18:57 - recommendations and I'm happy to help
18:58 - collect them or pass them off but I
19:00 - would say probably the most important
19:02 - thing for you is try to find a local
19:03 - community even if it's like a meet-up of
19:06 - people trying to learn coding start your
19:08 - own with a few friends I think doing
19:10 - this with other people even if you can
19:13 - soak up a lot of the kind of online
19:15 - resources having a local physical
19:18 - community of people that you can
19:19 - interact with and ask questions to and
19:21 - kind of just sit next to each other
19:22 - while you bang your heads against the
19:23 - wall hopefully not literally but that
19:25 - happens while you're programming I think
19:27 - that's my best advice
19:32 - alright now back to this so with when I
19:37 - have a multi-part way when I have a a
19:39 - regular coding challenge that's not
19:41 - multi-part and I just go to say
19:43 - Langton Sant and I click on here we can
19:46 - find community contributions on this
19:48 - page and this information for how to
19:49 - submit your up so I'm not on a percent
19:52 - sure what the best thing to do with
19:53 - these four part coding challenges are
19:55 - but right now I think my
19:57 - my I would say neither makes the most
19:59 - sense for everybody to like put their
20:01 - community once in part for our part one
20:02 - let's just go with part one for right
20:04 - now because I think that's what I said
20:06 - and we can see I look at this there are
20:08 - one two three four community
20:12 - contributions let's try to click through
20:14 - these really quickly one two three four
20:17 - and I haven't looked at these I mean I
20:18 - did look at these all so this is a
20:20 - discord 2048 game that's nuts so if you
20:26 - don't if you're not aware of what's
20:28 - actually going on here discord is like
20:31 - some kind of you know I'm like an old
20:33 - person who still if I could just find my
20:37 - parchment I might be able to communicate
20:40 - with people but apparently discord I
20:42 - think is a platform for real-time
20:44 - communication in chat and I I use slack
20:47 - for example as a messaging community for
20:50 - the patrons of the coding train I could
20:53 - use this court I suppose and it looks
20:55 - like there's a way of playing the 2048
20:56 - game inside discord which is that's
20:59 - pretty wild I'm gonna have to look into
21:00 - that Wow
21:03 - this is a variation it looks like it's
21:06 - very similar to mine but looks much
21:08 - nicer and I'm proud I apologize I'm not
21:12 - crediting the people the first the
21:14 - discord was from Pedro the this one with
21:17 - added colors I believe that's from Isaac
21:19 - and this one here oh look at this I love
21:22 - this this I really want to do I want to
21:25 - get to the point where I have some
21:27 - algorithms for playing the game
21:29 - automatically and I'm just gonna turn
21:31 - this on now and it just played 50 turns
21:35 - can I have it play 50 turns again Oh
21:42 - apparently this 2048 game look just a
21:46 - video of me tiny that okay thank you -
21:50 - I'm feeling you know who that was
21:52 - Matthew thank you for that and the last
21:54 - one from Oh L Bach 2048 with variable
21:58 - grid size so this was certainly a fault
22:01 - I know fault is the wrong word but a
22:02 - limitation of the 2048 game that I made
22:06 - were I couldn't do this fight to say ten
22:08 - by ten and now of a sudden I have a
22:10 - ten by ten and I I could also make it so
22:13 - that I win right here you can see the
22:15 - ticket so that I win whenever I get to
22:17 - sixteen let's do that can I possibly get
22:20 - to sixteen yes I made it to I scored 44
22:26 - points I made it to 16 this is great so
22:27 - you can see the things that we're
22:29 - missing from my tutorial really are a
22:32 - lot of the window dressing so to speak
22:34 - to that that make actually the
22:36 - experience of playing a game enjoyable
22:38 - those are almost you know those are
22:40 - vital to the sort of user experience and
22:43 - the language and design of that okay so
22:48 - I think now that's all of my pre whom I
22:54 - logged in as I'm logged in as the coding
22:57 - train let me see if I can very quickly
23:00 - just tweet here live now the coding
23:06 - train live working with is I think a
23:18 - quick draw data set is from Google
23:21 - creative labs yes
23:28 - made with some friends from Google it's
23:31 - got to be creative labs write creative
23:36 - labs this the Google creative labs
23:40 - what's the chance that's Google creative
23:42 - labs this is what I'm doing by the way
23:43 - I'm trying to like tweet that I've
23:45 - live-streaming while I live streaming
23:47 - creative labs no that's something
23:50 - different
23:50 - alright never mind forget it somebody
23:56 - just tweet that I'm live-streaming I'm
23:58 - gonna do and I'll retweet it from my ad
24:01 - Schiffman just somebody quickly tweet me
24:06 - at Schiffman about how I'm going to do a
24:08 - doodle classification with the quick
24:10 - draw data set today and I'll just I'm
24:16 - looking over here and I will I will wait
24:20 - for that tweet to come in and then I'll
24:22 - be able to retweet it that way
24:24 - I don't I I didn't forget and you keep
24:27 - the link to the coding train slash live
24:29 - in there for people all right let's see
24:32 - how this is doing how we doing here eat
24:37 - very nice okay let's make ourselves a
24:42 - nice little cat that really doesn't look
24:52 - like a cat does it does that look like a
24:55 - cat
24:59 - welcome to the Internet
25:01 - were you a person sitting somewhere is
25:03 - watching somebody attempt to draw in an
25:07 - html5 canvas a cat but the perset person
25:12 - is just really incapable of drawing has
25:14 - no talent whatsoever and made a sad cat
25:19 - all right all right
25:26 - what oh did we break Twitter did we
25:36 - break Twitter just for my like asking
25:38 - people to tweet at me cuz it's just
25:41 - something that's wrong it came back
25:45 - okay good fiery feather thank you fiery
25:49 - feather here we go live now okay thank
25:57 - you fiery feather all right so now is
25:59 - this on yes so this is old from I can
26:07 - erase erase this
26:18 - all right so just to give you a quick
26:22 - summary of what I'm going to do I am
26:24 - going to build a simple EM nest
26:29 - classifier but I'm not going to use em
26:32 - mist I'm going to use Google quick draw
26:34 - drawings
26:35 - I'm gonna use my toy neural network
26:37 - library that I built and some things
26:41 - that I want to make sure that I cover
26:43 - during this so I want to make sure I
26:47 - talk about softmax and cross-entropy so
26:56 - this is probably not something I'm gonna
26:57 - tackle today but as after I get through
27:00 - this using the toy neural network as is
27:02 - I probably want to add this and no idea
27:05 - what this is yeah I mean at least
27:08 - neither did I like two days ago I mean I
27:10 - sort of did but I've been trying to read
27:12 - and understand it better so I will get
27:15 - to that I don't know why I put a one
27:16 - there these I don't really have I don't
27:21 - I'm not sort of doing these in numeric
27:23 - order I think an important thing to make
27:26 - sure I talk about is overfitting and
27:33 - then of course under fitting I want to
27:43 - talk about training versus testing and
27:52 - that really also falls under supervised
27:57 - learning
28:06 - what are some other important concepts
28:09 - if your if you're watching this and I
28:11 - know I just wrote off the top but that's
28:14 - fine if you're watching this and you
28:16 - watched my neural net build a neural
28:17 - network playlist all the way from
28:19 - beginning to end
28:20 - what I'm looking here is to create a
28:22 - scenario that uses all of that and then
28:26 - sort of a it's maybe something that
28:28 - somebody could do something creative and
28:29 - fun with after but also kind of touches
28:32 - on important themes and pieces of
28:35 - machine learning that I didn't get to
28:37 - and I just got a notification B where
28:43 - the upper limit of the screen yes
28:47 - [Music]
28:50 - Sasa max okay hold on wait I'm looking
28:52 - at these yep yeah this is totally off
29:01 - topic but Meriden in the chat youtube
29:04 - used to be incredibly strict about the
29:06 - channel names but you can you can
29:08 - actually I mean maybe I've reached some
29:10 - threshold where they let me do it but
29:11 - I'm able to I could change my channel
29:13 - name now pretty easily check your
29:16 - Twitter feed I sent a small p5 firework
29:19 - program okay I will look at that all
29:22 - right okay I'm sorry Ellen that you have
29:25 - to go as well all right all right I'm
29:31 - not seeing anything that I'm horrific ly
29:34 - missing from this list or that I'm just
29:37 - not like slightly missing from the list
29:40 - I mean there was something else I wanted
29:41 - to just say you're before I get started
29:47 - oh yes so Google YouTube it's all this
29:54 - that everything is Google I mean hi
30:04 - YouTube hat released a whole bunch of
30:06 - new live-streaming features and I kind
30:08 - of like glanced at them and it seems
30:10 - like okay I think thumbs up but one much
30:13 - which I definitely felt excited about is
30:14 - apparently this live chat that is going
30:16 - on right now will be preserved so
30:21 - previously up until today every single
30:23 - live stream that I've ever done
30:24 - I have never be able to go back and read
30:26 - the chat afterwards so I'm actually
30:28 - planning to do that that's the kind of I
30:30 - it's the kind of thing that I definitely
30:32 - would do and maybe after I do it I will
30:34 - decide but again because it'll just make
30:37 - me feel sad but hopefully it'll be nice
30:39 - so I just want to mention that that's a
30:43 - new feature they also the other thing
30:46 - that I understand is they have added
30:49 - they've created their own IFTTT if this
30:52 - then that and otherwise maybe perhaps I
30:55 - don't know I might try this other thing
30:57 - that's that I think that's what it
30:58 - stands for so I think I can do like
31:03 - weird stuff that if someone does a super
31:04 - chat you know I then my Philip's branded
31:07 - lightbulb oops not a sponsor I buzz
31:09 - market something by some sort of like
31:11 - light bulb go off or like a little
31:13 - confetti cannon would burst or something
31:16 - so I'm I would love to figure out ways
31:21 - to make this experience more interactive
31:24 - and fun one thing that I have going
31:26 - right now is if anybody in the patron
31:28 - group is in slack that's me on in the
31:33 - live channel and the slack group I will
31:35 - get my watchful buzz so that usually is
31:38 - useful for my mic cuts out or something
31:44 - but anyway but I don't love the idea of
31:48 - like oh you have to pay this money to
31:51 - make the thing happen so anyway I will
31:53 - explore and look into all that but let's
31:55 - see what's with the cat that's what's
31:58 - gonna have its what I'm going to explain
31:59 - next
32:00 - all right so we're getting there let me
32:04 - prepare some URLs so I need this one
32:20 - oops
32:26 - oh thank you for asking
32:29 - Solan rights so here's the thing thank
32:35 - you for asking about this Solon asks any
32:37 - news on my pull requests for visualizing
32:40 - the neural network so I have to
32:42 - apologize
32:43 - I have not there's a couple reasons I
32:47 - have not gone through and merged any of
32:48 - the pull requests and I'm kind of
32:50 - amazing overwhelmed by them there's a
32:53 - couple of reasons for that number one is
32:54 - I it's honestly just heavily like I
32:57 - haven't been able to make the time to do
32:59 - it thoughtfully and I don't want to just
33:00 - like do it willy-nilly but but it's
33:05 - gonna be I mean I was trying to say this
33:07 - in a way it's not like oh look at it but
33:09 - it just it hasn't been I haven't been
33:10 - able to get to it that's reasonable on
33:12 - the other reason is I'm I'm not sure I
33:16 - kind of I want I haven't figured out the
33:20 - right balance between having the project
33:22 - progress with community contributions
33:24 - but still having to be something that if
33:26 - someone's watching the video tutorials
33:28 - they can look at and follow so some of
33:30 - the pull requests are so unone derful
33:32 - but they've really re engineered in a
33:34 - significant way and if I haven't covered
33:36 - that aspect of it in a video tutorial
33:39 - I'm not sure that I I'm ready to merge
33:42 - it into the library and there might be
33:44 - some way that I could be more clever
33:45 - about different branches or that sort of
33:48 - thing but the other thing is I'm not
33:50 - sure couple of pull requests which are
33:52 - amazing are about adding multiple hidden
33:54 - layers and one of the things that I'm
33:56 - really doing this for us cuz I really
33:58 - want to get to involving a neural
34:00 - network with a genetic algorithm so that
34:02 - I can do some stuff with like agent
34:05 - modeling and training agents to do
34:07 - certain things and so I feel like the
34:10 - one hidden layer is gonna make that much
34:12 - simpler but maybe I just really haven't
34:15 - figured this all out yet and
34:17 - I'm hoping to continue to figure it out
34:19 - so I apologize my apologies to those of
34:21 - you who submitted pull requests I really
34:23 - appreciate them I have looked at all of
34:24 - them I just haven't figured out about
34:26 - merging them all right Philip asked how
34:34 - long until he actually starts with the
34:36 - main content when he is not in a hurry
34:38 - yesterday
34:39 - see I feel like I'm not in a hurry today
34:41 - because I know I'm gonna come back later
34:42 - but yeah I'm bad
34:45 - don't don't watch my channel yeah I I
34:50 - don't get to stuff quickly that's for
34:52 - sure
34:53 - alright but I'm gonna get started now
34:54 - I've got to get started now all right so
34:59 - I've got quick-draw I've got my little
35:02 - silly m-miss thing I have God quick-draw
35:05 - data set I'm gonna open up process if
35:08 - you believe this I'm gonna use
35:09 - processing not for the ultimate example
35:11 - but at the beginning do this okay
35:18 - quick-draw quick-draw data set my m-miss
35:22 - thing and here and then toy neural
35:27 - network think these are all the URLs I
35:30 - need look at this 23 pull requests
35:33 - amazing okay this is the me this is the
35:44 - mate how do you know when it's the main
35:46 - content except for the fact that this is
35:51 - really bad
35:52 - yeah it's a little bit better all aboard
35:58 - it's time for
36:00 - [Music]
36:06 - the coding train is really loud and it's
36:10 - kind of like a piercing sound I need a
36:12 - different life friendly or like the
36:15 - train is pulling into the station sound
36:17 - its plug into the station we are going
36:19 - to begin and we will start here
36:42 - hello oh wait let me take care so this
36:46 - is gonna be all I'm sorry I don't yeah
36:48 - you've really thought I was about to get
36:49 - started didn't you that was nice of you
36:51 - to think that wouldn't that be nice
36:54 - so where is this gonna go that's what I
36:58 - have to say so I don't think I this is
37:01 - not a coding challenge because I
37:03 - realized I try to do it in a code it's
37:05 - gonna need to be like six seven parts
37:07 - it's more like a series I think that
37:10 - this series is already ridiculously long
37:15 - it's 18 videos plus this just fine
37:20 - so this either needs to be 11 like
37:22 - nature of code 11 or I do have that I'm
37:26 - not logged in as myself I do have I do
37:33 - have the intelligence and learning thing
37:38 - if I go to playlists let's see what that
37:41 - is
37:42 - session 4 is neural networks is there a
37:45 - session 5 how do I find like all the
37:49 - intelligence and playlists session 3
37:53 - let's look for session session 5 session
38:00 - 5 war but that's from the A to Z class
38:02 - so I think this is session for that was
38:05 - the end of when I started and that's all
38:08 - the neural network stuff so maybe maybe
38:10 - this is like session 5 of intelligence
38:15 - and learning session 11 and nature code
38:18 - I don't know mat-su I will and I will
38:21 - take your advice but this is I think
38:24 - this is the start this is our this is
38:26 - its own playlist okay I'm really
38:28 - starting now it's where no I feel like I
38:37 - have to leave
38:39 - hello welcome to a new series of videos
38:43 - and over the course of drill or in the
38:46 - blank number of parts I don't know
38:48 - probably it's I would guess maybe gonna
38:50 - be 71 hours and 632 parts there's my one
38:58 - Mulligan for the day I promise I'll do
39:00 - this once at the beginning hello welcome
39:09 - to a new video series in this video
39:12 - series I'm going to build something that
39:14 - thing is going to be a doodle classifier
39:18 - in other words you might be familiar
39:20 - with something called M nest you might
39:22 - have heard of M nest
39:23 - it's the m-miss database of handwritten
39:25 - digits this is a very famous classic
39:28 - hello world if you will a data set for
39:31 - machine learning to test an algorithm to
39:34 - see how it works even to teach about
39:36 - machine learning it is it is divided
39:39 - into training and test data I will talk
39:41 - about that during the course of these
39:43 - videos but it is a database of
39:45 - handwritten digits here is a and you can
39:49 - see it if I if I say no loop here in the
39:52 - console really quickly you can see there
39:54 - is a zero it is labeled in the database
39:57 - as a zero now what I have over here is
40:00 - my beautiful drawing of a wonderful
40:03 - kitty cat which by the way my example of
40:08 - trying to guess what digit that kitty
40:09 - cat is it guessed it as a two so what I
40:13 - want to do in this series you could find
40:15 - my m'not example it's not in a video
40:18 - series but it's there in the github
40:19 - repository is I want to build from the
40:21 - very beginning a n mist style classifier
40:26 - but instead of classifying digits I want
40:28 - to classify doodles so I want to know is
40:31 - that a cat you drew or a puppy or a
40:33 - rainbow or something else and how am I
40:36 - going to do this I am going to do this
40:38 - with the Google quick-draw data set up
40:42 - so quick draw is a project I believe
40:45 - from Google creative labs and let's just
40:48 - play it for a second let's draw draw an
40:50 - octagon in under 20 seconds
40:52 - oh my god 1 2 3 4 5 ok and this is way
41:03 - too stressful for me and it started
41:05 - talking to me I know if you could hear
41:06 - that I know I don't got it I don't got
41:09 - it so this is a game that you can play
41:11 - and as you play it a machine learning
41:13 - system tries to guess what you're
41:14 - drawing and it just so happens that let
41:21 - me find quick draw data set I don't know
41:23 - what I'm looking for here well that I
41:27 - already have that sorry ah quick draw
41:28 - did it just so happens that people
41:32 - playing this game Google collected 50
41:35 - million drawings across 345 different
41:37 - categories and all of that data is
41:40 - available to you and in fact this is
41:43 - what I'm looking for I could go to you
41:44 - could and I could browse the drawings
41:46 - here so I could say like let me look at
41:48 - all of the cellos and you can see these
41:51 - are millions and millions of different
41:53 - cellos that people have drawn and I have
41:56 - access to all this data now what's
41:58 - really interesting is that in addition
42:00 - to just having the image itself you're
42:02 - like oh look I can see it on my screen
42:04 - the system saved the vector path of the
42:08 - drawing itself so there's a lot that you
42:10 - could do with it in thinking about this
42:12 - sequence of how it's drawn and that's
42:14 - something I hope to get to at some point
42:17 - in a future video but in this example I
42:20 - am going to treat these as little bit
42:23 - mapped images I'm just gonna use a
42:24 - little snapshot of each drawing that's
42:27 - going to be the data associated with a
42:29 - given classification also known as label
42:33 - or class this is a 28 by 28 pixel cello
42:37 - now this is not my own genius idea
42:41 - because I don't have any of those
42:42 - definitely not M NIST Google quick-draw
42:46 - this idea came from this blog post by
42:50 - Rajiv Shah using Google's quick-draw to
42:53 - create an amnesty dataset you can follow
42:56 - along and there's information about how
42:57 - to do this all of this is looking at how
43:00 - to do this in Python I
43:03 - leave I don't know if it then goes on to
43:05 - use tensorflow or what or if it's just
43:07 - actually showing you how to get the data
43:08 - but I'm going to sort of do this on my
43:10 - own and I'm gonna use processing and to
43:12 - to parse and work with the data and
43:14 - p5.js to then do the neural network
43:17 - magic stuff okay are you with me are you
43:20 - gonna watch this so the first video this
43:24 - is like my introduction to the idea and
43:25 - in the next video I'm gonna start
43:27 - working with the data but let's do let's
43:28 - ghost go a little further by way of
43:30 - introduction so how is this going to
43:34 - work and so one thing I want to mention
43:36 - is that I already have the I'm going to
43:41 - be able to do this because I have built
43:43 - something and there's a whole video
43:44 - series that you can watch where I build
43:47 - it's about 10 or psych 18 videos long
43:49 - toy neural network this is a JavaScript
43:54 - implementation of a simple neural
43:56 - network now eventually if in the great
43:59 - future beyond when you're watching this
44:01 - in the year 7,500 from your gelatinous
44:05 - tube I will hopefully have also
44:09 - completed this same demonstration or
44:12 - similar demonstrations using something
44:15 - called ml 5 which is built on top of
44:18 - something called deep learned Jas so
44:22 - deep learning is is a project also from
44:25 - a Google research group which is an
44:26 - implementation of deep learning in the
44:29 - browser hardware accelerated with the
44:31 - GPU doesn't that sound fancy so
44:34 - basically it's a highly optimized way of
44:37 - doing a lot of stuff where we have
44:38 - really big data sets and you need to do
44:40 - stuff faster in a more robust fashion
44:42 - for me right now I want to demonstrate
44:44 - the core concepts and using this sort of
44:46 - like simple toy library is is not gonna
44:49 - produce them quote-unquote best results
44:51 - but I'm hoping it reduces the best
44:53 - results for learning at this point and
44:55 - we can I'm gonna get to this stuff after
44:57 - that okay that's number one
45:00 - so assuming I have that that means I
45:04 - don't have to in the course of these
45:06 - videos write the code for the so-called
45:08 - neural network the neural network is
45:10 - going to be the thing that sits in the
45:11 - middle something has to go into it some
45:16 - set of input
45:17 - something has to come out of it some set
45:20 - of output now I should mention that to
45:23 - do machine learning to say like oh
45:24 - here's some data I'm going to give it to
45:27 - you please give me mmm I should say that
45:34 - to do machine learning in the sense of
45:37 - like here's some data please do
45:39 - something with this analyze this data
45:41 - for me do some math with it and then
45:42 - give me some information about it back a
45:45 - neural network is not the only thing
45:47 - that can sit in between input and output
45:49 - and you might have seen other videos
45:51 - that I've done about you know K nearest
45:54 - neighbor there's things like support
45:56 - vector machines decision trees there are
46:00 - lots of other machine learning
46:01 - algorithms through this for this case
46:04 - for this learning process and for some
46:06 - of the other examples where neural
46:07 - networks perform really well that I hope
46:09 - to get to that's what's sitting in here
46:11 - so what I need if I have that already
46:13 - from my library what I need is to figure
46:16 - out what are my inputs and what are my
46:19 - outputs in this case my input is going
46:23 - to be did I right off the top of the
46:28 - board oh it's not so bad it's not so bad
46:30 - okay slightly too high on the wall okay
46:38 - did I have any like horrible I'm seeing
46:41 - that well hold on we could I think it's
46:43 - fine there wasn't anything in those
46:45 - drawings that was really awful was there
46:47 - I shouldn't pick jello I guess anyway um
46:51 - coming back to this sorry I am going to
46:54 - use a 28 by 28 pixel image maybe it is
47:00 - said doodle of a cat right and that is
47:05 - going to be my input into the system now
47:08 - if you've watched my previous videos
47:10 - what you'll typically see and this will
47:13 - change as we get to more sophisticated
47:17 - machine learning architectures in
47:19 - particular I just wanted like foreshadow
47:21 - this something called a convolutional
47:23 - Network which is really designed to work
47:25 - with images I'm not doing that yet
47:27 - this needs to be flattened and it needs
47:30 - to be flattened into what's often
47:33 - referred to as a vector or a one column
47:36 - matrix so I need to take this data it's
47:38 - an image and convert it to a list of
47:41 - numbers this is this is the what this is
47:43 - probably in many ways the most important
47:45 - thing that you need to do when you're
47:47 - working with machine learning is like
47:49 - what is my data how do I format it and
47:52 - and there's lots of other questions
47:54 - about it as well so well I'm gonna come
47:55 - to that but let's just think about this
47:56 - this is a pretty this there's a way that
47:58 - I can do this I'm not saying it's the
48:00 - quote/unquote best way but there's it's
48:01 - certainly a simple way each one of these
48:03 - pixels has a brightness value that
48:06 - brightness value is somewhere between 0
48:08 - and 255
48:09 - I can normalize it because it helps to
48:11 - have your inputs have kind of a smaller
48:14 - range of lobe numbers I could normalize
48:16 - that by dividing by 255 to range from 0
48:19 - to 1 and then now 28 by 28 is 786 a 784
48:26 - pixels
48:26 - I now have you know one you know point
48:30 - seven point six so this will become my
48:33 - inputs I need to look at the images I
48:35 - need to convert it into an array of
48:37 - floating-point numbers and normalize
48:39 - between 0 and 1 and that becomes the
48:41 - input to the neural network system and
48:43 - if you look at the neural network
48:44 - library it's actually that's what it's
48:45 - asking you to pass in to a train
48:47 - function or a predict function
48:48 - give me an array of numbers ok let's
48:54 - let's pause here for a second because I
48:55 - want to go to the outputs but I really
48:57 - have to say something something that I
48:58 - think is super important and timeout for
49:02 - a second I want to point to somebody's
49:04 - research that I Mimi Onew Onew Oh ha I
49:12 - wish I knew how to pronounce her name
49:13 - correctly a miss I want to go to here
49:18 - two missing data sets okay
49:25 - so alright sorry I'm looking okay so I
49:42 - just I think this is important to say I
49:50 - want to take a moment here just to say
49:53 - that this video series what I'm doing
49:56 - I'm really trying to focus on the sort
49:59 - of obviously the learning process but
50:02 - what I mean that's like your learning
50:03 - process learning about how this stuff
50:05 - works
50:06 - how to build software that uses it okay
50:15 - these suggestions I only want you to
50:19 - notify me if it's an emergency okay okay
50:23 - uh let me start over again I'm just I'm
50:28 - joking around with you guys it's it's
50:29 - it's totally fine I'm really trying to
50:34 - figure out how to fit this little piece
50:36 - I don't want to talk about into this
50:37 - video and I'm gonna attempt again all
50:42 - right so why don't just take a pause
50:44 - here for a second and I want to get to
50:46 - the outputs but before I do that
50:48 - something really there something really
50:49 - important here so while the purpose of
50:52 - these video tutorials that you're
50:53 - watching that I'm making is probably
50:55 - primarily the learning process what I
50:57 - mean is your learning process and I'm
50:59 - just creating a kind of arbitrary
51:01 - scenario that's somewhat interesting to
51:03 - see if how this stuff works you really
51:06 - if you really if you're working with
51:07 - machine learning these systems it's
51:09 - really important for you to ask yourself
51:11 - should I be doing what I'm doing is what
51:14 - I'm doing ethical am i hurting someone I
51:17 - did I what is this data set that I'm
51:18 - using what's missing in the data set so
51:21 - we think about it
51:21 - this we could say okay well I'm just
51:24 - building a doodle classifier you know
51:26 - what's the worst thing that's gonna
51:27 - happen but I think as a useful exercise
51:29 - to yourself you might think about who is
51:31 - not rep what is not represented in that
51:34 - do
51:34 - dataset so I would love to come back to
51:36 - this as a topic about how to collect
51:38 - data and think about data and bias and
51:40 - algorithms in a more substantive way I
51:42 - will just take a moment to point you to
51:44 - the research of Mimi on ooh oh oh ha ha
51:48 - who runs a project called missing
51:50 - datasets and I encourage you to check
51:52 - out her website and a lot of her work
51:54 - around missing data and ways and people
51:57 - are abstracted represented and
51:58 - classified so that said let me come back
52:01 - now to the next piece output so if our
52:08 - input is pixels and we've taken all of
52:11 - those brightness values and normalize
52:13 - them to zero through one we now need an
52:15 - output now here's the thing what am I
52:18 - trying to do in the case of the
52:20 - handwritten digits I'm trying to say is
52:22 - it a zero is it a one is it a - is it a
52:25 - three bla bla bla bla bla
52:26 - in this case I'm trying to say is it a
52:29 - kitty cat this is a rainbow is it -
52:33 - unicorn is it a cupcake all these
52:36 - wonderful things is it a heart baby
52:38 - there'll be some hearts so let's just
52:41 - say I'm going we have to make a decision
52:43 - here let's just say I'm only going to
52:44 - use three kinds of doodles
52:47 - in that case my outputs what I want is
52:51 - also a vector a 1 column matrix a list
52:56 - of numbers and I want those numbers to
52:59 - represent the probability that this
53:03 - particular image is any one of those
53:05 - given categories for example if it's if
53:09 - it's a kitty cat instead of a rainbow or
53:12 - a cupcake maybe I want it to give me
53:16 - that output if it is a rainbow maybe I
53:20 - want it to give me this output if it is
53:23 - a cupcake maybe I want it to give me
53:26 - that output in reality we're probably
53:30 - going to see something that looks when
53:33 - when the neural network itself is
53:34 - guessing we're gonna see something that
53:36 - looks more like you know a point eight
53:38 - point one point one and in theory we
53:41 - want all of these to add up to 100% now
53:45 - the first time
53:46 - I do this as I begin it's probably not
53:49 - gonna do that but at some point towards
53:51 - the very end of this playlist I'm gonna
53:54 - get to something called softmax which is
53:56 - an algorithm for guaranteeing that the
53:58 - output of a neural network everything
54:00 - adds up to 100% probability so we'll
54:02 - come back to that at some point okay
54:05 - this is the main idea and so what we
54:09 - have going on here is a supervised
54:13 - learning process and by that I mean we
54:17 - have this data set it is labeled I have
54:20 - the data from Google I have all those
54:23 - drawings so I'm going to give the neural
54:26 - network I'm gonna say here's a drawing
54:28 - of a kitty cat I expect you to say to me
54:31 - 1 0 0 if you give me an incorrect answer
54:35 - I am going to ask you to adjust all your
54:39 - little parameters inside of you weights
54:43 - and things inside of your neural network
54:45 - and try again we're gonna do this over
54:49 - and over and over again that's
54:50 - supervised learning
54:51 - here's known data here's known data
54:53 - here's known data we've got to do that
54:55 - for quite a while before we are ready to
54:57 - then say now I'm gonna draw my own kitty
55:00 - cat for you what do you think neural
55:04 - network do you like it so that's the
55:07 - idea but there's an important piece of
55:08 - this when I go to get the data one thing
55:11 - that I want to do is that I want to make
55:13 - sure that in addition to training data
55:16 - let's say I take 1000 kitty cat drawings
55:19 - I want to save some amount of it you
55:22 - know maybe a typical amount it might
55:24 - save is 20 percent so I might save 200
55:28 - of those drawings and only use 800 in
55:31 - the training process and save 200 of
55:35 - them for testing meaning how can I know
55:38 - whether my machine learning algorithm is
55:40 - working well well if I just test it to
55:42 - see if it's getting the right answers
55:44 - for the drawings I've trained it with I
55:46 - might be stuck with something called
55:48 - overfitting overfitting refers to when
55:51 - almost like the neural networks doing
55:53 - such a good job it's trained itself so
55:56 - well that it's so highly optimized in
55:58 - tune to the stuff that you trained it
55:59 - with that
56:00 - it can't really deal with stuff that
56:01 - it's not trained with and that's thing
56:03 - we have to watch out for now there are
56:04 - techniques to fight against that I'm
56:08 - something I'm going to come back to in
56:09 - another video it's like something called
56:10 - drop out and there's more and more
56:12 - things but one way we can at least sort
56:14 - of test ourselves that we're hopefully
56:16 - not overfitting is by running data that
56:20 - it wasn't trained on and seeing how will
56:22 - it perform how many do I get correct out
56:24 - of those 200 after I've trained it so
56:27 - this is what why I need to do so that's
56:30 - by way of introduction then the next
56:32 - video what I'm gonna do is download a
56:35 - bunch of drawings prepare them and get
56:37 - them ready because it's work by the way
56:39 - preparing cleaning normalizing thinking
56:43 - about your data is just as a big is a
56:47 - project unto itself right machine
56:50 - learning isn't just some magic that you
56:51 - do and you just say sprinkle the data on
56:53 - it and now I'm done you've really got to
56:55 - be thoughtful about that data and so
56:56 - let's I'm gonna hopefully hopefully I
56:58 - will be somewhat thoughtful about the
57:00 - data in the next video
57:01 - okay see you soon all right the lowest
57:10 - vector is partially out of the
57:12 - whiteboard Oh poopy pants I think it's
57:20 - high was that at that you know you
57:24 - people got the idea right zero zero one
57:26 - you can imagine there's a one down here
57:28 - right right
57:29 - I mean mature you can do some if you
57:34 - want you could do some post-production
57:36 - magic but I think it's okay
57:45 - wait plus 1 for K week men to be YouTube
57:49 - modded fYI while you're looking yes I do
57:53 - I have to do that nobody else can do
57:55 - that let me find a message
57:57 - what is love ad moderator caching ching
58:04 - ching
58:10 - that is correct
58:12 - Mohammed I am a teacher how long I will
58:19 - continue to have a job as a teacher
58:20 - remains to be seen but for right now I'm
58:24 - hoping all this YouTube stuff will
58:25 - eventually get me fired I should be so
58:31 - lucky
58:31 - okay wrong screen at the moment thank
58:33 - you
58:35 - [Music]
58:38 - alright I think this was good
58:41 - it is now 1134 I think I can go forth to
58:45 - the next piece of this oh I am excited I
58:48 - feel so much better about this already
58:50 - because certain topics really require
58:53 - just like some take your time go through
58:57 - them think about them and when I'm like
58:59 - I'm gonna kind of challenge do a
59:01 - classification it's just like I don't
59:03 - allow myself if I know it's gonna be
59:04 - multiple parts yeah alright
59:10 - apologies to me me oh well I'm sure I
59:12 - mispronounced her name her work is
59:14 - amazing okay this I don't need anymore
59:19 - this I will keep this keep okay alright
59:29 - we're gonna we're in this is gonna go
59:31 - away now this is gonna go away now and
59:35 - this is gonna stay here okay okay yeah
59:47 - these are fine I didn't show anything
59:49 - that's like somebody got their obnoxious
59:53 - troll --is-- cello drawing in here right
59:56 - you're gonna pick cello let's go so
59:59 - first of all let me think about this
60:00 - what do I want there's so much Oh bird
60:03 - definitely like the bird is there a
60:05 - rainbow let me just go to the
60:08 - open-sourcing of them the raw moderated
60:14 - dataset preprocessdataset
60:17 - I think I want the pre-process
60:20 - okay
60:29 - yeah I want the pre-processed so where
60:34 - is I just want to have these links ready
60:35 - so I'm not like looking for them where's
60:38 - the Google Cloud link see if this takes
60:42 - me there no that's just the
60:44 - documentation that's not what I want get
60:46 - the data
61:03 - get me the data Oh where's that Google
61:09 - Cloud Cloud console there we go this
61:14 - what I'm looking for now let's see
61:18 - please email me no I agree that my use
61:23 - of any services in it relate api's is
61:25 - subject to my compliance with you pickup
61:29 - ball alright everybody now as you know I
61:35 - always read the Terms of Service so
61:38 - before I click yes you'll just gonna
61:40 - have to bear with me oh my god which one
61:47 - do I read wait hold on
61:52 - servicer is with the applicable Terms of
61:56 - Service oh wait maybe it's this one my
62:00 - joke how long can I keep this joke up
62:04 - because I you know I'm just gonna click
62:06 - yes but I wanted to services and related
62:09 - api's services and oh no this is all ok
62:13 - wait quick-draw which I don't know which
62:17 - to ID what do I have to read all these
62:19 - don't I because I just don't know which
62:21 - one it is glue google cloud big data big
62:24 - tip blogger Helena
62:28 - cloud API is cloud datastore API oh wait
62:35 - oh no these are all oh no this is which
62:37 - one oh good Google Cloud
62:41 - maybe I need a machine learning
62:42 - algorithm to tell me which one of these
62:45 - terms of services okay let's let's read
62:51 - the cloud platform and let's let I think
62:56 - it's more appropriate if we sing it
63:01 - Google cloud platform Terms of Service
63:04 - last amount of five February 8th 2018
63:08 - Nick you are accessing the Google cloud
63:11 - platform services as a customer of
63:13 - Google cloud platform reseller the terms
63:15 - below do do not apply to your reseller
63:19 - governs your use of the Google cloud
63:21 - platform is if your billing account of
63:23 - Spain India please we're sir oh no not
63:25 - in the air Brazil no sis sit aah squawk
63:28 - shut up not don't speak Portuguese sorry
63:32 - the Google cloud platform License
63:34 - Agreement the agreement is made and
63:36 - entered into by and between Google and
63:40 - the entity our person agreeing to these
63:41 - terms customer Google means either one
63:44 - Google commerce limited GCL a company
63:48 - incorporated under the laws of Ireland
63:51 - nuts with offices at the Gordon house
63:54 - perro Street Dublin for Ireland if
63:57 - customer has a billing address in the EU
64:00 - and has chosen as alright fine you got
64:12 - me you got me Google have my children
64:15 - take it all
64:35 - [Music]
64:35 - [Applause]
64:37 - [Music]
64:42 - okay where was there we go now hmm ooh
64:50 - sign up for a free trial and you'll get
64:54 - $300 in credit and 12 months explore
64:57 - Google cloud platform okay all right so
65:02 - can you guys blink open thank you very
65:05 - much thank you thank you thank you thank
65:07 - you thank you thank you very much I
65:12 - think I'm gonna start a new YouTube
65:14 - channel which is just singing Terms of
65:17 - Service somebody ping Sam Levine I think
65:21 - this could be good for for for stuff
65:26 - that he's working on okay so let me
65:31 - close all these and I'm here okay so I
65:36 - have I told I have no idea what's going
65:38 - on anymore we love what tree thought
65:44 - okay so and I have to go soon so I
65:47 - better get moving on this all right I
65:50 - would open up processing which I did
65:53 - already and I am going to talk about the
65:55 - data
66:06 - okay
66:10 - cat there we go look at this even it
66:19 - says where it was drawn interesting okay
66:21 - alright here we go
66:25 - rainbows and there's rainbows and trains
66:28 - okay
66:28 - well hello so let's just do cat because
66:32 - that's kind of ubiquitous a rainbow and
66:34 - a train
66:35 - I think that'll probably be good right
66:37 - when we'll do three categories it's
66:39 - important to do more than two but I
66:41 - don't want to do too many okay where are
66:49 - the trains where are the trains somebody
66:53 - tell me where the trains are see
66:56 - ambulance oh just go with the cat
67:05 - alright I'm back and in this video I am
67:08 - now going to look at how to actually
67:10 - make use of this data set just as a
67:12 - reminder this is the quick-draw
67:14 - data set by the way there is so a much
67:17 - goofy fun creative interesting things
67:19 - you could do with this data set that
67:21 - have nothing to do with this whole
67:23 - machine learning neural network and
67:25 - nonsense stuff so hopefully this video
67:26 - will be useful for you anyway and
67:28 - encourage you to make creative projects
67:29 - with the data set and I will try to link
67:31 - in the video's description to some
67:32 - projects that other people have made but
67:34 - let's talk about how I'm gonna get
67:36 - access to this data and use it so one
67:38 - thing we know it here's all the kitty
67:39 - cats and we can say look who I really
67:41 - like this one so I'm gonna look at this
67:43 - one click on it so one thing you'll
67:44 - notice it's got a number it actually is
67:47 - it's got a its it has a date when it was
67:52 - drawn and what country it was drawn from
67:54 - which is interesting by the way in light
67:56 - of my discussion of missing data sets
67:59 - and the work of Mimi oh that I talked
68:01 - about a little bit in the previous video
68:02 - thinking about when you're working with
68:05 - a data set where does it come from
68:07 - who collected it what's missing from
68:09 - that data set why are you using it is
68:11 - what you're using it with going to hurt
68:13 - somebody think about these questions now
68:15 - fortunately for us I think we're just
68:16 - gonna make a fun goofy drawing thing and
68:18 - I think we're going to be okay but those
68:20 - are really key and
68:21 - Fortin questions now this is a nice
68:24 - little interface to look at the data on
68:26 - github however I can go to github quick
68:28 - draw dataset and here is the
68:30 - documentation for what kind of formats
68:32 - the data is actually in so if I scroll
68:34 - down here for a little bit we can see
68:35 - the data is actually available in these
68:38 - nd JSON files now what's interesting
68:42 - about this is you can see like oh look
68:43 - there's an ID every single drawing as a
68:46 - unique identifier and I know I'm
68:48 - standing in front of some of this so let
68:49 - me move this over it has a word which I
68:53 - would assume is the category yes what
68:56 - the what the player of the game said
68:57 - will you please draw this and when it
69:00 - was created what country and then the
69:02 - drawing itself and look at this look at
69:04 - all these numbers what are those numbers
69:05 - so if you remember from my previous
69:07 - video what I'm trying to do is do image
69:10 - classification with a simple 28 by 28
69:13 - pixel image but the data itself is
69:16 - actually all of the vector points the
69:19 - path of the drawing and that's why when
69:21 - I'm on this page as I hover over it you
69:23 - can actually see a replay of how the
69:25 - thing was drawn itself so that's
69:27 - something I would hope to come back and
69:28 - make a future video about using that
69:30 - data but what I actually want to use and
69:33 - we go back to here is a different way
69:36 - that the data is formatted so there you
69:37 - can go in here there's binary files but
69:40 - this is what I want
69:41 - numpy bitmaps so a number is a special
69:46 - data format that stores all the pixels
69:49 - of a bitmap version of the drawing in a
69:51 - format that the Python library numpy can
69:54 - read very easily with n P load now if I
69:57 - were a person who lived in the regular
70:00 - world I would see this a go Oh perfect
70:02 - I'm just going to go and do my project
70:05 - with numpy because that's what people do
70:07 - but I am a person who lives in this
70:09 - weird world of wanting to do things in
70:11 - JavaScript and in the browser and
70:12 - sometimes in processing so what I want
70:14 - to do in this video is look at how I can
70:17 - get access to the numpy bitmap data
70:20 - format in an environment that's not
70:22 - numpy and then kind of clean or
70:25 - normalize or organize the data in such a
70:27 - way that I can use it for my machine
70:30 - learning doodle classification project
70:35 - all right so let's get the data if you
70:38 - click through and read this
70:39 - documentation you'll find that it is
70:41 - here the data is available on the Google
70:43 - cloud platform if you want to listen to
70:47 - me
70:48 - nevermind I was thinking as longer layer
70:50 - that I think I shall not speak about and
70:53 - so these are all the different formats
70:55 - I'm gonna go here under numpy bitmap and
70:57 - I'm gonna see okay look at this now I
71:00 - think we have to start with rainbow I
71:03 - probably should start with train but
71:05 - let's this is not a very effective way
71:08 - to get to it let's just make a little
71:10 - edit point here Oh guess what all right
71:22 - so I'm gonna get the rainbow dot n py
71:25 - file and it's downloading it's a very
71:28 - large file it is about 100 megabytes so
71:31 - I don't know how many drawings are in
71:33 - that exactly we're gonna figure that out
71:35 - when I open up the file but what I want
71:37 - to do is make for myself I want to make
71:40 - a little simple training and testing set
71:43 - with just a thousand drawings in it
71:44 - again to do this kind of work
71:47 - effectively the more data I have
71:49 - probably the better but to demonstrate
71:51 - it in a quick and friendly way in a
71:54 - YouTube video using a small data set
71:57 - it's probably gonna be best and then you
71:58 - the viewer could take my code do
72:00 - something with it kind of expand the
72:02 - data set alright so it should have
72:05 - downloaded by now
72:06 - I'm gonna work with pre-processing this
72:09 - data in the processing programming
72:11 - environment which is a Java based
72:12 - platform I could do this in Python I
72:16 - could actually go directly to JavaScript
72:17 - now but I'm just doing this to
72:19 - demonstrate it and it's kind of what I
72:21 - would do because I know processing the
72:22 - best probably so I'm gonna just make a
72:24 - little sketch called quick-draw data let
72:27 - me put it on the desktop I'm gonna open
72:31 - up the sketch folder and I'm gonna grab
72:33 - this file and put it in there in theory
72:35 - what I should do is probably make a
72:37 - folder called data and put it in put it
72:41 - in there and then I'm just going to
72:43 - rename it it has a long name I'm gonna
72:46 - rename it to rainbow dot and
72:48 - py okay so now processing one of the
72:52 - reasons why I picked processing is it
72:53 - has a function called load bytes oh you
72:55 - cannot see that at all
72:57 - look at that you cannot see that at all
73:00 - unless I do this hold on a sec
73:02 - pause how's that too big just right
73:29 - I think I can make it smaller right
73:40 - is that okay okay great okay so I'm
73:49 - gonna use the load bytes function and
73:51 - I'm gonna say I was about to say let but
73:54 - I'm gonna say byte I'm gonna say byte
73:58 - but I've forgotten to how to program in
74:00 - Java byte a data equals load bytes
74:04 - rainbow npy so this is a nice little
74:08 - function let me bring the console up
74:09 - here cuz I'm on a console print stuff to
74:11 - the console let's just say print line
74:14 - data dot length so I'm gonna run this
74:18 - and we can see look at that that data
74:22 - that array I now have 99 million bytes
74:27 - so interesting let's try to figure out
74:29 - how many images that is well I know that
74:31 - each image is 28 by 28
74:34 - and so that's 784 total so total equals
74:41 - data length divided by 784 and let's see
74:45 - what we get now I really should do this
74:47 - as a floating point just whoa and let's
74:50 - let's print line total so that's about a
74:56 - hundred twenty-six thousand images now
74:58 - the thing is this isn't actually correct
74:59 - and if I wanted to do some research most
75:02 - data files will actually have bytes at
75:05 - the beginning that aren't the data you
75:07 - want but are something called header
75:08 - bytes and those header bytes describe
75:10 - the data like this is what's in here
75:12 - this is what format it is this is how
75:13 - much of it there is and what I probably
75:16 - should do is look at the numpy binary
75:21 - file data format if I google that I'm
75:26 - gonna get somewhere and I'm gonna get
75:28 - some page that explains the npy I should
75:32 - just scratch that it should just look
75:35 - for npy file format and I'm going to
75:39 - find some information about how its
75:41 - formatted here's the thing I looked at
75:43 - this yesterday and I happen to know that
75:45 - there's about 80 extra bytes on the
75:47 - beginning not about exactly 80 extra
75:50 - bytes so what I'm actually going to
75:52 - say is data dot length minus 80 because
75:56 - that's how many bytes that are actually
75:57 - in that array that have to do with the
75:58 - pixels and we're gonna see that's
76:02 - exactly how many 126,000 images so let's
76:06 - just see if everything's going correctly
76:07 - we could at least look at the first one
76:09 - so what I'm going to do is I'm going to
76:12 - create a variable called start I'm gonna
76:14 - say start at 80 and then I'm going to
76:17 - look at 784 bytes and the index is I
76:24 - plus 80 and what I want to do is also
76:27 - create let me make an image that is 28
76:32 - by 28 let me load the pixels of that
76:35 - image because I'm gonna write the bytes
76:37 - into an image so I can look at it and
76:39 - then I'm gonna say int Val equals now
76:42 - we're gonna run into an issue but I'll
76:44 - fix it anticipating things oh and I need
76:46 - to say RGB so when I say create image
76:49 - I've got to say RGB so value equals what
76:53 - did I call it just data data oh and this
76:56 - should be plus start data index data
77:00 - index that's the value and then I want
77:02 - to say image dot pixels I equals that
77:06 - value then I want to say image dot
77:09 - update pixels and then I want to just
77:12 - draw that image image zero zero look at
77:17 - that oh is that really a rainbow maybe I
77:20 - should have picked something else
77:22 - because I kind of wanted to see like is
77:24 - this really right so that is the first
77:26 - rainbow now these a little bit like why
77:28 - is there some yellow and some blue so I
77:30 - haven't been for I haven't been very
77:32 - thoughtful about this one thing that's
77:33 - happening is the byte values that are
77:36 - actually coming in there are signed
77:37 - bytes so they're going to have be
77:39 - between like negative 127 and positive
77:41 - 127 or something approximately like that
77:44 - so I can actually apply a bitwise
77:49 - operation and I just sort of like and it
77:52 - with some hexadecimal numbers I could
77:55 - kind of go through that in a different
77:57 - video but this is going to I believe if
77:59 - I'm doing this correctly change it from
78:00 - an unsigned byte to a sign byte to give
78:02 - me a range between 0
78:03 - 2:55 so I I should try to link to a
78:06 - resource about bitwise operations or
78:08 - make one myself at some point so now you
78:11 - can say ok well that's weird now it's
78:12 - blue well the reason why it's blue is
78:15 - I'm actually this is a number between 0
78:18 - and 255 val is and i'm setting that
78:22 - number to be the pixel color but a color
78:24 - is an RGB color so in processing if i
78:28 - just wrap this in the color function
78:29 - it'll take that number and make it into
78:32 - an RGB color with that value as the red
78:34 - green and blue value okay so now we
78:38 - should see there it is there's
78:39 - somebody's rainbow alright so let's get
78:42 - a little further with this now let's
78:45 - make a window that's 280 by 280 let's do
78:50 - this let's have let's forget about this
78:53 - was just for my own curiosity let's say
78:56 - we're going to look at 200 100 images
79:00 - right 10 let's say 10 at 10 by 10 so I'm
79:04 - gonna say for int N equals 0 n is less
79:07 - than total + + + we're gonna do this
79:13 - we're gonna do this 100 times and so the
79:17 - start is 80 plus n times 784 alright
79:23 - because each image is gonna start by the
79:26 - eighty header bytes and then how what
79:29 - image were on times 784 pixels so even
79:32 - if I just did this right now we should
79:35 - see there's the last rainbow I just drew
79:38 - them all on top of each other
79:39 - but now I need to get an X value which
79:42 - is n modulus 10 right because I want the
79:47 - sort of column to be modulus 10 being
79:51 - the remainder of dividing by 10 so the
79:53 - column goes 0 into the new frozen i-901
79:55 - and the y value to be n divided by 10 so
79:59 - the for the first 10 I'm in row 0 for
80:02 - the next 10 I'm in row 1 and so now I
80:05 - should get ooh what did I do wrong there
80:11 - did something wrong
80:17 - [Music]
80:19 - if I run it again will it fix it what
80:22 - did I do wrong here
80:23 - and modulus 10 and divided by 10 oh wait
80:31 - a sec I'm drawing the stuff in the
80:38 - correct location I know what the problem
80:40 - is weird though index is I plus start
80:47 - index image pixels I hold on a sec next
80:54 - times with oh yeah no oh yeah yeah yeah
81:01 - yeah whoops so I forgot this should be
81:03 - well okay this should be 28 and these
81:06 - should all be in variables right because
81:10 - they're each 28 by 28 pixels wide so I
81:13 - guess I was drawing the last one 10
81:15 - pixels over that was the problem
81:21 - format won't do it for me okay there we
81:25 - go all right so there are all my
81:27 - rainbows I don't like how there are
81:28 - white on black so I'm just going to say
81:32 - 255 minus and come on there we go
81:40 - rainbows okay all right so we've done it
81:46 - we've accessed the data I kind of
81:48 - understand how it works
81:49 - now what I want to do is save it out
81:51 - into a format that I can easily use in
81:54 - p5 I'm thinking about this so on the one
82:00 - hand I could save this to like I could
82:05 - rewrite the data to like a JSON format
82:07 - that I'm happy with I'm gonna weirdly I
82:10 - think what I want to do is load the data
82:11 - in as binary into JavaScript because I
82:14 - think it's probably worth doing that as
82:15 - an exercise yourself you might think
82:17 - about rewrite it's it's also processing
82:19 - it's a bit convoluted to write out a
82:21 - JSON file from processing although quite
82:22 - possible so I think for simplicity what
82:25 - I want to do now is just save bytes so
82:28 - let's say
82:29 - what what I want to do whoops what I
82:38 - want to do is just save a file with only
82:41 - 1000 images in it right it's because I
82:44 - don't want to have to carry with me this
82:45 - 100 megabyte file while I'm just trying
82:47 - to learn and figure this stuff out so I
82:49 - make a much smaller file with just a
82:51 - thousand in it and so let's look at how
82:54 - I would do that so I'm going to create a
82:58 - variable I'm going to call it out data
83:01 - and it's a new byte array with total
83:08 - times 784 and again your the thing is
83:13 - these numbers are never gonna change so
83:15 - I'm kind of happy with just hard coding
83:16 - them in there but obviously I should
83:18 - refactor and make all 28 and the 784 I
83:22 - mean all I need is that 28 and the 80
83:23 - should be a variable but we're gonna be
83:25 - fine so I want to save I'm gonna say
83:27 - about 200 287 or 100 of these images and
83:32 - so while I'm going through here I'm just
83:34 - gonna do out index is 0 so every time I
83:39 - get a new value I'm just going to say
83:42 - out data out index equals that value and
83:48 - then I'm just gonna say out index plus
83:51 - plus so as I'm going through I'm just
83:53 - going to write in this mmm
83:55 - so this is actually I made this into an
83:57 - integer so I could use it in processing
84:00 - I think if I do this it will be happy
84:03 - with me I might have this same anyway so
84:07 - I think that that I think is going to be
84:08 - fine and then what I'm going to do is at
84:11 - the very end I'm gonna say save bytes
84:16 - what where does this Rainbows 100 I'll
84:20 - call it dot bin for binary Rainbows 100
84:26 - dot bin and out data so this is a
84:31 - function in processing that will save
84:33 - that array of bytes to a binary file I'm
84:36 - calling it rainbows 100 I'm gonna run
84:39 - this we can see now I should be able to
84:41 - go to the directory we could see there
84:42 - it is
84:43 - and how big is this file it's just 78
84:45 - kilobytes so I have a hundred of them
84:47 - you know just a binary file but that's
84:49 - not let's let's let's save a thousand of
84:51 - them and now that I'm saving it I think
84:54 - probably there's no reason for me to
84:56 - have the image anymore so let's because
84:59 - I the image is just to like sort of see
85:01 - that it works so let me comment that
85:05 - stuff out and now I want to save
85:09 - Rainbows 1000 and I'm gonna run it and
85:13 - [Music]
85:15 - there we are
85:16 - rainbows 1000 bin and this is this file
85:20 - is just 784 kilobytes so this is really
85:24 - nice because now when I move over to
85:26 - JavaScript I could kind of use this very
85:28 - like lightweight data file that I can
85:30 - play around with and later I could go
85:32 - get the full numpy file or and I have
85:35 - this processing sketch which just allows
85:36 - me to quickly work with the data and
85:38 - resize it reformat it that sort of thing
85:40 - okay so this is now the end of this
85:43 - particular video in the next video what
85:46 - I'm gonna do is look at loading these
85:49 - data files into JavaScript and dividing
85:52 - them into training and testing training
85:56 - and testing datasets to use them
85:59 - ultimately with the neural network and
86:00 - in between you watching or me recording
86:04 - this particular video in the next one I
86:06 - will go ahead and make a bunch more of
86:07 - these so I will make one for trains and
86:10 - one for cats I think I'll just do three
86:12 - I don't know maybe when I come back I'll
86:14 - have picked some different ones but if
86:15 - you know pause if you're watching this
86:17 - as a playlist maybe go and play around
86:18 - with this data yourself think about how
86:20 - you might draw it in a different way and
86:22 - processing or an mp5 and have some fun
86:24 - and I'll see you in the next video ok
86:32 - alright so what are we have we on time
86:34 - noon mmm so I think let me do let me let
86:46 - me get some more so let's let's go here
86:52 - what did we say I want to try train and
86:54 - actually even if I'm doing a thousand I
86:56 - like to
86:56 - to see them as it's going and I wonder
87:04 - if I should rewrite the data as white
87:06 - pixels I'm a black on white rather than
87:08 - white on black but this is like even
87:12 - though it made yeah so actually I
87:13 - actually just leave the image stuff in
87:14 - there so one things that's nice about
87:17 - doing this is if I scroll over here
87:22 - there's this public link and I can do
87:25 - copy link address and I can actually
87:28 - just put that in here so I can just
87:30 - access it from the URL directly and now
87:34 - I can say what was this trains 1,000 so
87:41 - it's gonna take a while because it's
87:43 - kind of a bit like why is it taking so
87:45 - long so it's got to download the file
87:47 - great so these are all the trains oh
87:50 - these are awesome wow these are really
87:55 - this is probably a poor choice because
87:57 - this is so insane they're so insanely
87:59 - different but it'll be interesting so
88:03 - people are asking is the stream done
88:05 - sorry I'm doing this in two parts today
88:07 - so I've got to leave and do a bunch of
88:09 - other stuff for a few hours and then I'm
88:10 - gonna come back and and finish that III
88:12 - definitely finish this project
88:14 - whatever finish means I don't know but
88:16 - I'm gonna get further along all right so
88:18 - that's the trains which cat
88:26 - [Music]
88:30 - let's go put a cat in here a big font
88:44 - come on whoops oh I could have just
88:48 - changed this the cat I don't know why
88:50 - I'm acting all crazy and then cats 1,000
88:54 - oh I'm gonna wait
89:03 - thank you all dear how many hours will
89:09 - the stream be back I look up 3:00 p.m.
89:12 - Eastern Time in your timezone so that's
89:15 - what I'm hoping you back is 3 p.m.
89:18 - whoops so I have rainbows cats right I'm
89:25 - like oh look Oh interesting
89:26 - of course it's 784 kilobytes I didn't
89:29 - even note that that's really ok it's
89:31 - like this is like really interesting to
89:33 - see this is like learning about bytes
89:34 - right I just saved 784 thousand bytes
89:37 - it's a thousand 784 pixel images 784
89:42 - kilobytes I didn't have to look that up
89:44 - of course it would be 7 or 84 okay thank
89:50 - you K weak bond okay so thank you I'm
89:52 - gonna I'm gonna try to shout out the
89:53 - super chats cuz it's really kind of
89:55 - people to do that
89:57 - oh that send a super chat how do I see
89:59 - them all I see wall dear crews Thank You
90:03 - Tobias von arcs will I be making new
90:07 - ones about fractals yeah I don't yes I
90:14 - don't have any specific plans do but of
90:16 - course I would like to at some point
90:17 - let's see what else do I miss any others
90:22 - I think I got all of them well I see
90:27 - another one here Kody thank the universe
90:30 - for you Thank You Cody I really
90:32 - appreciate that and the super chats are
90:35 - really nice to see I'm very I'm
90:36 - conflicted about whether to have that
90:38 - feature enabled but I certainly
90:41 - appreciate it and having the financial
90:43 - support does really help me continue it
90:46 - motivates me in some ways as much as I
90:48 - should have my own motivation to through
90:50 - these the enjoyment that I get of doing
90:52 - this but it does really help but you can
90:54 - also if you're interested supporting you
90:56 - can you can join the patreon
90:58 - [Music]
91:00 - all right so I think I'm ready let me I
91:09 - have like I mean I have like ten minutes
91:12 - so what could I possibly do in the next
91:16 - ten minutes before I don't think
91:19 - anything so I think I should probably
91:20 - just go did then have more time later
91:22 - and so that lets just let me just think
91:25 - about what I need to do this afternoon
91:26 - so this afternoon and by the way let me
91:28 - met Abby now so one thing it's possible
91:31 - that I'm going to end up doing this in
91:32 - like three parts today if that happens I
91:34 - believe YouTube so how do you know when
91:37 - I'm live-streaming next here's a little
91:39 - lesson in YouTube go to youtube.com the
91:42 - coding train I'm not actually signed in
91:45 - as myself I'm signed in as some other
91:47 - Google account and now I need to go and
91:50 - hit subscribe I am subscribed already
91:54 - and then I actually don't do this I'm
91:55 - gonna do this click the alarm bell if
91:57 - you click the alarm bell YouTube should
92:00 - send you a notification the moment I go
92:03 - live and at some point I will schedule
92:06 - it but it will be on exactly this page
92:08 - youtube.com slash the coding trained
92:10 - slash live and I'm seeing K week Mon is
92:21 - typing I will choose not to read you
92:27 - have to join the patreon the patron
92:29 - group to read K walk weak bonds message
92:32 - I will take a few questions before I go
92:43 - oh wait Simon did notify me with
92:52 - something that is worth mentioning
92:55 - I just that Simon maybe had made
93:02 - something relevant to what I was showing
93:04 - ah
93:08 - so Simon Tiger github.com slash Simon
93:14 - Tiger / decision I mentioned decision
93:18 - trees earlier and Simon Tiger has a
93:21 - library for using decision trees wow
93:22 - that is so cool oh my goodness I totally
93:26 - went oh they camera one off I totally
93:27 - want to use this and while we're here
93:32 - let's take a minute to subscribe to
93:36 - Simon's YouTube channel from this
93:39 - account as well oops
93:40 - Simon Tiger hold on Simon
93:46 - Daniel Schiffman there we go we're gonna
93:54 - subscribe so I highly recommend
93:56 - Simon's YouTube channel Simon makes
93:58 - amazing videos this is one of my
94:00 - favorites recently about the magic
94:02 - hexagon let's subscribe and click the
94:04 - alarm bell subscribe to Simon okay
94:09 - sorry now I miss and I've missed the
94:12 - questions shoot if there are any good
94:14 - questions please repost them in in the
94:19 - patrons lab check
94:23 - okay will you ever use any other
94:25 - languages besides processing or
94:27 - JavaScript sure if it if it's a thing
94:30 - that I I mean I do stuff in Python when
94:33 - I have when I do stuff in PHP sometimes
94:35 - so we're working on WordPress you know I
94:37 - tend to limit myself to processing and
94:39 - JavaScript for my video tutorials but if
94:41 - there's something I'm working on where a
94:42 - different programming language
94:43 - environments really gonna make sense
94:45 - than I will use it
94:48 - whoa three blue one Brown just came out
94:51 - with a new video I just got a
94:52 - notification what languages do you teach
94:54 - on school dan I so I teach the same
95:03 - stuff that's in my YouTube channel
95:04 - that's exactly what I teach all my
95:05 - classes at NYU how do I get the ideas
95:09 - for the coding challenges people suggest
95:11 - them I do have a github repository where
95:14 - you can file an issue to suggest one
95:15 - really though as I'm trying to teach
95:18 - stuff and do stuff along with the
95:20 - courses that I'm doing it anyway
95:21 - have you ever thought about using Python
95:24 - every day will you teach us binary code
95:30 - I need to know it I don't know I don't
95:33 - know what that means exactly but at one
95:37 - point I did find that song it was I
95:38 - think I got it off Free Music Archive I
95:40 - have to find it again okay that's the
95:41 - end so thank you everybody this is not
95:43 - the end I mean it's never the end but
95:44 - this is not even the end of today's live
95:46 - stream it is about 12 10:00 p.m. Eastern
95:49 - Time I would say about I would say about
95:57 - compute Phi be used on web development
95:59 - yes I'm sorry
96:00 - just pay all the stuff I'm still reading
96:02 - all your questions I'm sorry I'll get
96:03 - the rest of the questions all the time
96:04 - I'll be back in approximately three
96:06 - hours if you go at some point I will
96:10 - post a time maybe on Twitter or it will
96:14 - actually on the again if you subscribe
96:16 - and click the alarm bell you'll get a
96:17 - notification and I usually also like
96:19 - there's a thing in my interface where I
96:20 - can add a time maybe I should just go do
96:22 - that right now I know but I can't if I'm
96:24 - live-streaming I think anyway I will add
96:27 - a time I'll be back approximately 3 p.m.
96:29 - Eastern Time we're going to finish this
96:30 - doodle classification project ok thank
96:35 - you
96:36 - I love you too

Cleaned transcript:

hello happy Friday it is me dan Shipman the coding train has pulled into the station it had a few delays but it's here right now it's Friday that means is a day for the coding train I know this because it actually says this in my calendar now in fact I don't know if you know this but if you put a allday event in a Google Calendar then ten minutes to midnight the night before it starts like blinking and blaring and alerting you that the coding train is starting when actually I should be sleeping but I'm here and I am super a little bit more excited than usual I'm usually quite excitable but today I'm extra excited I am going to take the day to attempt to accomplish something that I have been attempting that I haven't tempted before for and it didn't go very well and I think I've rethought it we thought about it a little bit so today I'm really going to try to take a lot of the work that I've been doing up until now I'm building a simple neural network in JavaScript and apply it to an actual possibly almost maybe a little bit useful problem so I will get to that in a little bit and I'm going to talk about what it is I'm going to do when I get there this is not a it is a kitty cat okay so but before let me get let me talk about some logistics stuff and by that I don't mean the logistic function anyway so today today it is now about 1040 a.m. I'm actually only gonna be here for an hour or so to start I'm gonna try to do the first piece of this project that I'm going to build today and I'm really just gonna prepare the data set so this morning's going to be about preparing a data set and we'll get to what that is in a moment and then I will be gone for some meetings and some lunch and some other things and then I will be back if I had to guess around 300 p.m. Eastern Time and then I will be livestreaming again for maybe three to five thirty so we'll get maybe an hour an hour and a half in this morning and two to two and a half hours in this afternoon and so the main project just to get to it right now the main project that I'm going to do is I'm going to try I'm going to do a twist on the usual em nest machine learning demonstration and the end this data set is a wellknown handwritten digit data set that is used to test different machine learning algorithms to demonstrate machine learning works it's kind of if you will hello world problem of machine learning and I'm going to attempt to make a similar demonstration but with a creative twist using the Google quickdraw data set and so we will attempt instead of recognizing digits we will attempt to recognize things like hand drawn little kitty cats but let's just see how this is going yeah it's pretty good too this has gone around some improvement oh pretty good three what even knows I'm good for it's like this is predictive machine learning no no we'll get there eventually eight I could do this all day alright so looking at the chat looks like people are watching and not complaining that's always a good sign alright so before I get to any of that let me talk about a few other things Summer of Code this is happening I am NOT an official represent representative of the google Summer of Code I am just telling you about it this is a summer program a funded and managed and by Google where you if you are a student obviously read and check the eligibility or requirements specifically on their website but loosely if you are a college or graduate student and you will still be a student even if you graduate this year you are eligible to apply Google will pay you a stipend if you are accepted to contribute to an opensource project all the guidelines are on the websites one of the reasons why I mention this is if I go under view organizations there are many many many wonderful organizations I encourage you to click through them all and if you're thinking about applying and also by the way if you're not a student you could potentially be a mentor for one of these projects that's a slightly different process but that's something that you could absolutely look into and do and if I scroll all the way down here at some point I will get to the processing foundation so the processing foundation as you might be familiar with if you've watched any of my youtube channel before is a notforprofit organization that I helped to manage and run it is the organization that maintains these software projects processing processing PI Python processing and p5.js the processing foundation also has a lot of community and education initiatives around inclusion and accessibility and so you can read more about the processing foundation on the Prostate foundation website but here if you would we can go here we can do learn more and now if you are interested I proposals don't start being accepted till March 12th if you are interested here you can click through and chat I think will take you to the products on actually a chat will take you to the processing forum you can post your ideas probably the most important thing for you to click on if you're interested in consuming to processing and by the way every open source organization that's participating at Google sort of code will have this kind of ideas list if I click here oh I've got a cable making a black smudge again fascinating that's not just as much oh yeah okay hold on I'll fix that in a second let me go with my I've got momentum here I'm all talking about google Summer of Code so if I click here we get to this project list and you can start to read back let me just tell you about something that I'm oh so one thing improving file i/o methods this is actually something I got to fix that now I now that I've seen it I got to fix that so what that is if you're wondering if I bring my finger all the way up to here see this this is actually a light I could shine it on me and where it's sitting it's kind of the camera is seeing it so I got to move it over yes I am a oneperson show here I think that's better now there's a giant mouse now my shoe is untied it's okay now my shoes untied have to tie my shoe I was saying something important ah one thing I'm gonna do today into this morning in particular is I am going to implement a method to load binary file a binary data file into p5.js that is something that is not currently part of the library so that's one thing but here's my this is my pet project that I'm really actually so I haven't talked about the p5.js web editor on this channel coming soon now look it's all noisy over here I've got to fix that somehow see I think I had the light positioned in a way that the green oak is this there's this pole here maybe we just have to live with this today is that better oh it's a little bit better I mean I've got a little bit more shadow with me but that's fine all right there's a web editor for p5 it's an ongoing project you're welcome to look into it I hope to do help facilitate some videos about all the people who have made this I am not included in that list wonderful people caste ter occasions the lead developer this project but without going too far into this having a a piece that could be a nice google Summer of Code project is making a nicer error console in that web editor itself so if you are a web developer with experience with maybe anyway go look at this stuff lots of other things here all that you can that you could scan over okay so I don't wanna I don't want to go too far so actually let me see does anybody is the sound low and let me know if the sounds low if does anybody have any questions about the google Summer of Code about Google Summer of Code and let me again be clear I am NOT an official representative of Google I am someone who has applied to google Summer of Code as part of the processing organization so I'm just giving you my perspective on the program and how we manage it from the processing side is Summer of Code free Summer of Code is not only free you get paid how you get paid depends I think where you live but it is open to students in a certain number of countries that Google is able to have eligible and all that's on the website all right all right okay so now hmm other thing I want to say okay so I wasn't here last Friday why was I not here well I have to show you my most prized possession in the world it's in my wallet does it have any I don't think it doesn't have any personal information on it really I don't think I'm I don't think you know I'll cover up the barcode so you this is my and you probably can't even see this this is my new most prized possession it's a nice little picture of me I got it on February 23rd 2020 oh no no no that's how it that's what it doe longer will be valid it is a Library of Congress reader card so I had this wonderful chance last week to go and visit the Library of Congress Jer Thorp is doing a residency there if you're not familiar with Jerry's work he does wonderful amazing stuff in the world of data visualization you know that's probably not the best way to describe it but that's a quick way I can describe chairs work I and he is doing a residency at the Library of Congress labs so this is lab Stott Library of Congress and I would encourage you first of all you know I suppose you have to be living here in these United States which comes with its problems trust me I don't know if I would recommend that but Library of Congress is open to the public anybody can go and get that reader card i/o this afternoon I will come and show you I was able to I got a look at the or papers of the mathematician Lorenz of the Lorenz attractor and I have I took photos of his overhead projector slide from his lectures which are really awesome I will show them to you there so much stuff at the Library of Congress and it's not all digitized you have to go there and you can go there and research libraries are like my favorite thing in the world the Library of Congress is probably the biggest library I've ever been to now but I want to mention this I would encourage you to check out the experiments these are projects that people are doing with Library of Congress data here is information about innovator in residency AR Thorpe he is doing a live podcast he has a podcast you should listen to that I've been it's wonderful I've been listening to and he's gonna do a live one you know check his Twitter feed for information about that but in particular I want to go to LC for robots and so this is a place where you can find all sorts of api's and available data so at some point I'm really open to your suggestions and ideas I would love to make some videos and an experiment with some of the content and data that's available from the Library of Congress and then I wanted to find the Congressional data challenge I wanted to mention that let's just go to LC labs on Twitter because maybe it's a look there there's a little tweet here about the Lorenz papers and probably because this has to do with oh yeah this has to do with the thread about jairs project with Lorenz attractor that he's going to demonstrate anyway I got Wayne off topic here I mean I'm not off topic but I wanted to find oh yeah they're retreating me so this is perfect this is what I want to look for so this is the Congressional data challenge I you must you probably need to read through whatever FAQ to find out who's eligible to apply but there is a $5,000 first prize and a $1,000 prize for best high school project enter by April 22nd 2018 especially if you are a high school student I mean I'll help anybody if I can but if you are a high school student and you want to enter this and I can help you somehow I don't know get in touch let me know there's some example projects and you can read all about data visualization data mashup if I had if I if I wasn't on the train that I'm on right now I would love to do if I could sort of figure out a way to do it like a tutorial of this stuff but dayo right no my birthday is not February third you can find my birthday online pretty easily I can't just tell you what it is and it's July 29th dark shader in the chat says I am 14 years old richard barton writes my high school students love coding train I have discovered recently that there's an audience of people most around the age ages between I would say like 13 and 17 who are in high school who do watch my videos which is kind of like I eat Legos which is that really your name I eat Legos and also do you really eat Legos because if they were like chocolate Legos or like a kale like some sort of like healthy you know dried kale with what hemp seeds Legos sustainable eco bio degradable edible Legos this is a project goodbye I'm going to now invent edible Legos I will be back no I won't because I can't do anything for listen involves JavaScript and even that I can't do very well alright let's begin I think this was everything I wanted to say about of a way of introduction to today but I better get started alright so now I'm going to get let's whoops let me turn this camera on ohoh I know there was something else I wanted to do alright so I wanted to do one other thing before I get started with today's project and that is let me go to a website let me go to the coding train comm so if you aren't aware brand new website thank you Neil's web thank you also to austin who's been doing a lot of work that not yet well some work that's now here in designwise and some stuff that's coming this is a I see this as a community project if you're interested in contributing and helping make this website better check out just click over to github and check out the github issues and the there's lots of ways you can contribute even if you don't know how to code just helping write documentation and explanation for how things work or thinking through how the navigation should be to more easily find videos all that sort of stuff so the latest Oh interesting oh yeah I guess who knows how those I ended up releasing this stuff but the latest challenge that I did last week and I just want to mention if you're a kind of live stream only viewer is that a thing I don't I don't know if that's a thing like I just watch the live stream so I don't bother to watch the edited videos this part for was actually not done on a live stream so if you were a live stream only viewer you have not seen this unless you are a patron of the coding train every once in a while pretty rarely if I have like an extra thing that I want to like quickly do and I will do a live stream just with the smaller patreon group and so I just did this part for I'm not hiding any content because it will get released but sometimes it's easier just to do a smaller group live stream to sort something out so that is there for you to watch now what I want to do then is go to coding challenges go to I think so one thing that's a little confusing what I want to do now is show you some community contributions some community variations of 2048 and well it's a little bit tricky because this is one thing I haven't really resolved yet because it's a fourpart coding challenge there's four there's four videos here let me mention something sorry type timeout I know I'm scatterbrained welcome to watching Dakota trait I just saw there was a super chat I don't really I do see the super chats after but I'm not paying super close attention the way that I have my interface is set up maybe I need a better system so I do want to mention that my preferred way for you to support the channel is through the through patreon but of course it's I very much appreciate super chats and I'm going to check this one right now just since I'm talking about it I am currently active duty Air Force and want to get into coding but can't go to a school what is a great starting point I also live in DC awesome wow great to hear from you thank you very much for your kind super chat message this is a great question I mean on the one hand you know I'm hopeful that my my YouTube channel itself can be a place for you to start I would say though probably as much as you know I could I could keep listing like well there's this other YouTube channel there's this wonderful book there's this online tutorial you know code Academy as interactive learn to code tutorials so I could keep going with those recommendations and I'm happy to help collect them or pass them off but I would say probably the most important thing for you is try to find a local community even if it's like a meetup of people trying to learn coding start your own with a few friends I think doing this with other people even if you can soak up a lot of the kind of online resources having a local physical community of people that you can interact with and ask questions to and kind of just sit next to each other while you bang your heads against the wall hopefully not literally but that happens while you're programming I think that's my best advice alright now back to this so with when I have a multipart way when I have a a regular coding challenge that's not multipart and I just go to say Langton Sant and I click on here we can find community contributions on this page and this information for how to submit your up so I'm not on a percent sure what the best thing to do with these four part coding challenges are but right now I think my my I would say neither makes the most sense for everybody to like put their community once in part for our part one let's just go with part one for right now because I think that's what I said and we can see I look at this there are one two three four community contributions let's try to click through these really quickly one two three four and I haven't looked at these I mean I did look at these all so this is a discord 2048 game that's nuts so if you don't if you're not aware of what's actually going on here discord is like some kind of you know I'm like an old person who still if I could just find my parchment I might be able to communicate with people but apparently discord I think is a platform for realtime communication in chat and I I use slack for example as a messaging community for the patrons of the coding train I could use this court I suppose and it looks like there's a way of playing the 2048 game inside discord which is that's pretty wild I'm gonna have to look into that Wow this is a variation it looks like it's very similar to mine but looks much nicer and I'm proud I apologize I'm not crediting the people the first the discord was from Pedro the this one with added colors I believe that's from Isaac and this one here oh look at this I love this this I really want to do I want to get to the point where I have some algorithms for playing the game automatically and I'm just gonna turn this on now and it just played 50 turns can I have it play 50 turns again Oh apparently this 2048 game look just a video of me tiny that okay thank you I'm feeling you know who that was Matthew thank you for that and the last one from Oh L Bach 2048 with variable grid size so this was certainly a fault I know fault is the wrong word but a limitation of the 2048 game that I made were I couldn't do this fight to say ten by ten and now of a sudden I have a ten by ten and I I could also make it so that I win right here you can see the ticket so that I win whenever I get to sixteen let's do that can I possibly get to sixteen yes I made it to I scored 44 points I made it to 16 this is great so you can see the things that we're missing from my tutorial really are a lot of the window dressing so to speak to that that make actually the experience of playing a game enjoyable those are almost you know those are vital to the sort of user experience and the language and design of that okay so I think now that's all of my pre whom I logged in as I'm logged in as the coding train let me see if I can very quickly just tweet here live now the coding train live working with is I think a quick draw data set is from Google creative labs yes made with some friends from Google it's got to be creative labs write creative labs this the Google creative labs what's the chance that's Google creative labs this is what I'm doing by the way I'm trying to like tweet that I've livestreaming while I live streaming creative labs no that's something different alright never mind forget it somebody just tweet that I'm livestreaming I'm gonna do and I'll retweet it from my ad Schiffman just somebody quickly tweet me at Schiffman about how I'm going to do a doodle classification with the quick draw data set today and I'll just I'm looking over here and I will I will wait for that tweet to come in and then I'll be able to retweet it that way I don't I I didn't forget and you keep the link to the coding train slash live in there for people all right let's see how this is doing how we doing here eat very nice okay let's make ourselves a nice little cat that really doesn't look like a cat does it does that look like a cat welcome to the Internet were you a person sitting somewhere is watching somebody attempt to draw in an html5 canvas a cat but the perset person is just really incapable of drawing has no talent whatsoever and made a sad cat all right all right what oh did we break Twitter did we break Twitter just for my like asking people to tweet at me cuz it's just something that's wrong it came back okay good fiery feather thank you fiery feather here we go live now okay thank you fiery feather all right so now is this on yes so this is old from I can erase erase this all right so just to give you a quick summary of what I'm going to do I am going to build a simple EM nest classifier but I'm not going to use em mist I'm going to use Google quick draw drawings I'm gonna use my toy neural network library that I built and some things that I want to make sure that I cover during this so I want to make sure I talk about softmax and crossentropy so this is probably not something I'm gonna tackle today but as after I get through this using the toy neural network as is I probably want to add this and no idea what this is yeah I mean at least neither did I like two days ago I mean I sort of did but I've been trying to read and understand it better so I will get to that I don't know why I put a one there these I don't really have I don't I'm not sort of doing these in numeric order I think an important thing to make sure I talk about is overfitting and then of course under fitting I want to talk about training versus testing and that really also falls under supervised learning what are some other important concepts if your if you're watching this and I know I just wrote off the top but that's fine if you're watching this and you watched my neural net build a neural network playlist all the way from beginning to end what I'm looking here is to create a scenario that uses all of that and then sort of a it's maybe something that somebody could do something creative and fun with after but also kind of touches on important themes and pieces of machine learning that I didn't get to and I just got a notification B where the upper limit of the screen yes Sasa max okay hold on wait I'm looking at these yep yeah this is totally off topic but Meriden in the chat youtube used to be incredibly strict about the channel names but you can you can actually I mean maybe I've reached some threshold where they let me do it but I'm able to I could change my channel name now pretty easily check your Twitter feed I sent a small p5 firework program okay I will look at that all right okay I'm sorry Ellen that you have to go as well all right all right I'm not seeing anything that I'm horrific ly missing from this list or that I'm just not like slightly missing from the list I mean there was something else I wanted to just say you're before I get started oh yes so Google YouTube it's all this that everything is Google I mean hi YouTube hat released a whole bunch of new livestreaming features and I kind of like glanced at them and it seems like okay I think thumbs up but one much which I definitely felt excited about is apparently this live chat that is going on right now will be preserved so previously up until today every single live stream that I've ever done I have never be able to go back and read the chat afterwards so I'm actually planning to do that that's the kind of I it's the kind of thing that I definitely would do and maybe after I do it I will decide but again because it'll just make me feel sad but hopefully it'll be nice so I just want to mention that that's a new feature they also the other thing that I understand is they have added they've created their own IFTTT if this then that and otherwise maybe perhaps I don't know I might try this other thing that's that I think that's what it stands for so I think I can do like weird stuff that if someone does a super chat you know I then my Philip's branded lightbulb oops not a sponsor I buzz market something by some sort of like light bulb go off or like a little confetti cannon would burst or something so I'm I would love to figure out ways to make this experience more interactive and fun one thing that I have going right now is if anybody in the patron group is in slack that's me on in the live channel and the slack group I will get my watchful buzz so that usually is useful for my mic cuts out or something but anyway but I don't love the idea of like oh you have to pay this money to make the thing happen so anyway I will explore and look into all that but let's see what's with the cat that's what's gonna have its what I'm going to explain next all right so we're getting there let me prepare some URLs so I need this one oops oh thank you for asking Solan rights so here's the thing thank you for asking about this Solon asks any news on my pull requests for visualizing the neural network so I have to apologize I have not there's a couple reasons I have not gone through and merged any of the pull requests and I'm kind of amazing overwhelmed by them there's a couple of reasons for that number one is I it's honestly just heavily like I haven't been able to make the time to do it thoughtfully and I don't want to just like do it willynilly but but it's gonna be I mean I was trying to say this in a way it's not like oh look at it but it just it hasn't been I haven't been able to get to it that's reasonable on the other reason is I'm I'm not sure I kind of I want I haven't figured out the right balance between having the project progress with community contributions but still having to be something that if someone's watching the video tutorials they can look at and follow so some of the pull requests are so unone derful but they've really re engineered in a significant way and if I haven't covered that aspect of it in a video tutorial I'm not sure that I I'm ready to merge it into the library and there might be some way that I could be more clever about different branches or that sort of thing but the other thing is I'm not sure couple of pull requests which are amazing are about adding multiple hidden layers and one of the things that I'm really doing this for us cuz I really want to get to involving a neural network with a genetic algorithm so that I can do some stuff with like agent modeling and training agents to do certain things and so I feel like the one hidden layer is gonna make that much simpler but maybe I just really haven't figured this all out yet and I'm hoping to continue to figure it out so I apologize my apologies to those of you who submitted pull requests I really appreciate them I have looked at all of them I just haven't figured out about merging them all right Philip asked how long until he actually starts with the main content when he is not in a hurry yesterday see I feel like I'm not in a hurry today because I know I'm gonna come back later but yeah I'm bad don't don't watch my channel yeah I I don't get to stuff quickly that's for sure alright but I'm gonna get started now I've got to get started now all right so I've got quickdraw I've got my little silly mmiss thing I have God quickdraw data set I'm gonna open up process if you believe this I'm gonna use processing not for the ultimate example but at the beginning do this okay quickdraw quickdraw data set my mmiss thing and here and then toy neural network think these are all the URLs I need look at this 23 pull requests amazing okay this is the me this is the mate how do you know when it's the main content except for the fact that this is really bad yeah it's a little bit better all aboard it's time for the coding train is really loud and it's kind of like a piercing sound I need a different life friendly or like the train is pulling into the station sound its plug into the station we are going to begin and we will start here hello oh wait let me take care so this is gonna be all I'm sorry I don't yeah you've really thought I was about to get started didn't you that was nice of you to think that wouldn't that be nice so where is this gonna go that's what I have to say so I don't think I this is not a coding challenge because I realized I try to do it in a code it's gonna need to be like six seven parts it's more like a series I think that this series is already ridiculously long it's 18 videos plus this just fine so this either needs to be 11 like nature of code 11 or I do have that I'm not logged in as myself I do have I do have the intelligence and learning thing if I go to playlists let's see what that is session 4 is neural networks is there a session 5 how do I find like all the intelligence and playlists session 3 let's look for session session 5 session 5 war but that's from the A to Z class so I think this is session for that was the end of when I started and that's all the neural network stuff so maybe maybe this is like session 5 of intelligence and learning session 11 and nature code I don't know matsu I will and I will take your advice but this is I think this is the start this is our this is its own playlist okay I'm really starting now it's where no I feel like I have to leave hello welcome to a new series of videos and over the course of drill or in the blank number of parts I don't know probably it's I would guess maybe gonna be 71 hours and 632 parts there's my one Mulligan for the day I promise I'll do this once at the beginning hello welcome to a new video series in this video series I'm going to build something that thing is going to be a doodle classifier in other words you might be familiar with something called M nest you might have heard of M nest it's the mmiss database of handwritten digits this is a very famous classic hello world if you will a data set for machine learning to test an algorithm to see how it works even to teach about machine learning it is it is divided into training and test data I will talk about that during the course of these videos but it is a database of handwritten digits here is a and you can see it if I if I say no loop here in the console really quickly you can see there is a zero it is labeled in the database as a zero now what I have over here is my beautiful drawing of a wonderful kitty cat which by the way my example of trying to guess what digit that kitty cat is it guessed it as a two so what I want to do in this series you could find my m'not example it's not in a video series but it's there in the github repository is I want to build from the very beginning a n mist style classifier but instead of classifying digits I want to classify doodles so I want to know is that a cat you drew or a puppy or a rainbow or something else and how am I going to do this I am going to do this with the Google quickdraw data set up so quick draw is a project I believe from Google creative labs and let's just play it for a second let's draw draw an octagon in under 20 seconds oh my god 1 2 3 4 5 ok and this is way too stressful for me and it started talking to me I know if you could hear that I know I don't got it I don't got it so this is a game that you can play and as you play it a machine learning system tries to guess what you're drawing and it just so happens that let me find quick draw data set I don't know what I'm looking for here well that I already have that sorry ah quick draw did it just so happens that people playing this game Google collected 50 million drawings across 345 different categories and all of that data is available to you and in fact this is what I'm looking for I could go to you could and I could browse the drawings here so I could say like let me look at all of the cellos and you can see these are millions and millions of different cellos that people have drawn and I have access to all this data now what's really interesting is that in addition to just having the image itself you're like oh look I can see it on my screen the system saved the vector path of the drawing itself so there's a lot that you could do with it in thinking about this sequence of how it's drawn and that's something I hope to get to at some point in a future video but in this example I am going to treat these as little bit mapped images I'm just gonna use a little snapshot of each drawing that's going to be the data associated with a given classification also known as label or class this is a 28 by 28 pixel cello now this is not my own genius idea because I don't have any of those definitely not M NIST Google quickdraw this idea came from this blog post by Rajiv Shah using Google's quickdraw to create an amnesty dataset you can follow along and there's information about how to do this all of this is looking at how to do this in Python I leave I don't know if it then goes on to use tensorflow or what or if it's just actually showing you how to get the data but I'm going to sort of do this on my own and I'm gonna use processing and to to parse and work with the data and p5.js to then do the neural network magic stuff okay are you with me are you gonna watch this so the first video this is like my introduction to the idea and in the next video I'm gonna start working with the data but let's do let's ghost go a little further by way of introduction so how is this going to work and so one thing I want to mention is that I already have the I'm going to be able to do this because I have built something and there's a whole video series that you can watch where I build it's about 10 or psych 18 videos long toy neural network this is a JavaScript implementation of a simple neural network now eventually if in the great future beyond when you're watching this in the year 7,500 from your gelatinous tube I will hopefully have also completed this same demonstration or similar demonstrations using something called ml 5 which is built on top of something called deep learned Jas so deep learning is is a project also from a Google research group which is an implementation of deep learning in the browser hardware accelerated with the GPU doesn't that sound fancy so basically it's a highly optimized way of doing a lot of stuff where we have really big data sets and you need to do stuff faster in a more robust fashion for me right now I want to demonstrate the core concepts and using this sort of like simple toy library is is not gonna produce them quoteunquote best results but I'm hoping it reduces the best results for learning at this point and we can I'm gonna get to this stuff after that okay that's number one so assuming I have that that means I don't have to in the course of these videos write the code for the socalled neural network the neural network is going to be the thing that sits in the middle something has to go into it some set of input something has to come out of it some set of output now I should mention that to do machine learning to say like oh here's some data I'm going to give it to you please give me mmm I should say that to do machine learning in the sense of like here's some data please do something with this analyze this data for me do some math with it and then give me some information about it back a neural network is not the only thing that can sit in between input and output and you might have seen other videos that I've done about you know K nearest neighbor there's things like support vector machines decision trees there are lots of other machine learning algorithms through this for this case for this learning process and for some of the other examples where neural networks perform really well that I hope to get to that's what's sitting in here so what I need if I have that already from my library what I need is to figure out what are my inputs and what are my outputs in this case my input is going to be did I right off the top of the board oh it's not so bad it's not so bad okay slightly too high on the wall okay did I have any like horrible I'm seeing that well hold on we could I think it's fine there wasn't anything in those drawings that was really awful was there I shouldn't pick jello I guess anyway um coming back to this sorry I am going to use a 28 by 28 pixel image maybe it is said doodle of a cat right and that is going to be my input into the system now if you've watched my previous videos what you'll typically see and this will change as we get to more sophisticated machine learning architectures in particular I just wanted like foreshadow this something called a convolutional Network which is really designed to work with images I'm not doing that yet this needs to be flattened and it needs to be flattened into what's often referred to as a vector or a one column matrix so I need to take this data it's an image and convert it to a list of numbers this is this is the what this is probably in many ways the most important thing that you need to do when you're working with machine learning is like what is my data how do I format it and and there's lots of other questions about it as well so well I'm gonna come to that but let's just think about this this is a pretty this there's a way that I can do this I'm not saying it's the quote/unquote best way but there's it's certainly a simple way each one of these pixels has a brightness value that brightness value is somewhere between 0 and 255 I can normalize it because it helps to have your inputs have kind of a smaller range of lobe numbers I could normalize that by dividing by 255 to range from 0 to 1 and then now 28 by 28 is 786 a 784 pixels I now have you know one you know point seven point six so this will become my inputs I need to look at the images I need to convert it into an array of floatingpoint numbers and normalize between 0 and 1 and that becomes the input to the neural network system and if you look at the neural network library it's actually that's what it's asking you to pass in to a train function or a predict function give me an array of numbers ok let's let's pause here for a second because I want to go to the outputs but I really have to say something something that I think is super important and timeout for a second I want to point to somebody's research that I Mimi Onew Onew Oh ha I wish I knew how to pronounce her name correctly a miss I want to go to here two missing data sets okay so alright sorry I'm looking okay so I just I think this is important to say I want to take a moment here just to say that this video series what I'm doing I'm really trying to focus on the sort of obviously the learning process but what I mean that's like your learning process learning about how this stuff works how to build software that uses it okay these suggestions I only want you to notify me if it's an emergency okay okay uh let me start over again I'm just I'm joking around with you guys it's it's it's totally fine I'm really trying to figure out how to fit this little piece I don't want to talk about into this video and I'm gonna attempt again all right so why don't just take a pause here for a second and I want to get to the outputs but before I do that something really there something really important here so while the purpose of these video tutorials that you're watching that I'm making is probably primarily the learning process what I mean is your learning process and I'm just creating a kind of arbitrary scenario that's somewhat interesting to see if how this stuff works you really if you really if you're working with machine learning these systems it's really important for you to ask yourself should I be doing what I'm doing is what I'm doing ethical am i hurting someone I did I what is this data set that I'm using what's missing in the data set so we think about it this we could say okay well I'm just building a doodle classifier you know what's the worst thing that's gonna happen but I think as a useful exercise to yourself you might think about who is not rep what is not represented in that do dataset so I would love to come back to this as a topic about how to collect data and think about data and bias and algorithms in a more substantive way I will just take a moment to point you to the research of Mimi on ooh oh oh ha ha who runs a project called missing datasets and I encourage you to check out her website and a lot of her work around missing data and ways and people are abstracted represented and classified so that said let me come back now to the next piece output so if our input is pixels and we've taken all of those brightness values and normalize them to zero through one we now need an output now here's the thing what am I trying to do in the case of the handwritten digits I'm trying to say is it a zero is it a one is it a is it a three bla bla bla bla bla in this case I'm trying to say is it a kitty cat this is a rainbow is it unicorn is it a cupcake all these wonderful things is it a heart baby there'll be some hearts so let's just say I'm going we have to make a decision here let's just say I'm only going to use three kinds of doodles in that case my outputs what I want is also a vector a 1 column matrix a list of numbers and I want those numbers to represent the probability that this particular image is any one of those given categories for example if it's if it's a kitty cat instead of a rainbow or a cupcake maybe I want it to give me that output if it is a rainbow maybe I want it to give me this output if it is a cupcake maybe I want it to give me that output in reality we're probably going to see something that looks when when the neural network itself is guessing we're gonna see something that looks more like you know a point eight point one point one and in theory we want all of these to add up to 100% now the first time I do this as I begin it's probably not gonna do that but at some point towards the very end of this playlist I'm gonna get to something called softmax which is an algorithm for guaranteeing that the output of a neural network everything adds up to 100% probability so we'll come back to that at some point okay this is the main idea and so what we have going on here is a supervised learning process and by that I mean we have this data set it is labeled I have the data from Google I have all those drawings so I'm going to give the neural network I'm gonna say here's a drawing of a kitty cat I expect you to say to me 1 0 0 if you give me an incorrect answer I am going to ask you to adjust all your little parameters inside of you weights and things inside of your neural network and try again we're gonna do this over and over and over again that's supervised learning here's known data here's known data here's known data we've got to do that for quite a while before we are ready to then say now I'm gonna draw my own kitty cat for you what do you think neural network do you like it so that's the idea but there's an important piece of this when I go to get the data one thing that I want to do is that I want to make sure that in addition to training data let's say I take 1000 kitty cat drawings I want to save some amount of it you know maybe a typical amount it might save is 20 percent so I might save 200 of those drawings and only use 800 in the training process and save 200 of them for testing meaning how can I know whether my machine learning algorithm is working well well if I just test it to see if it's getting the right answers for the drawings I've trained it with I might be stuck with something called overfitting overfitting refers to when almost like the neural networks doing such a good job it's trained itself so well that it's so highly optimized in tune to the stuff that you trained it with that it can't really deal with stuff that it's not trained with and that's thing we have to watch out for now there are techniques to fight against that I'm something I'm going to come back to in another video it's like something called drop out and there's more and more things but one way we can at least sort of test ourselves that we're hopefully not overfitting is by running data that it wasn't trained on and seeing how will it perform how many do I get correct out of those 200 after I've trained it so this is what why I need to do so that's by way of introduction then the next video what I'm gonna do is download a bunch of drawings prepare them and get them ready because it's work by the way preparing cleaning normalizing thinking about your data is just as a big is a project unto itself right machine learning isn't just some magic that you do and you just say sprinkle the data on it and now I'm done you've really got to be thoughtful about that data and so let's I'm gonna hopefully hopefully I will be somewhat thoughtful about the data in the next video okay see you soon all right the lowest vector is partially out of the whiteboard Oh poopy pants I think it's high was that at that you know you people got the idea right zero zero one you can imagine there's a one down here right right I mean mature you can do some if you want you could do some postproduction magic but I think it's okay wait plus 1 for K week men to be YouTube modded fYI while you're looking yes I do I have to do that nobody else can do that let me find a message what is love ad moderator caching ching ching that is correct Mohammed I am a teacher how long I will continue to have a job as a teacher remains to be seen but for right now I'm hoping all this YouTube stuff will eventually get me fired I should be so lucky okay wrong screen at the moment thank you alright I think this was good it is now 1134 I think I can go forth to the next piece of this oh I am excited I feel so much better about this already because certain topics really require just like some take your time go through them think about them and when I'm like I'm gonna kind of challenge do a classification it's just like I don't allow myself if I know it's gonna be multiple parts yeah alright apologies to me me oh well I'm sure I mispronounced her name her work is amazing okay this I don't need anymore this I will keep this keep okay alright we're gonna we're in this is gonna go away now this is gonna go away now and this is gonna stay here okay okay yeah these are fine I didn't show anything that's like somebody got their obnoxious troll is cello drawing in here right you're gonna pick cello let's go so first of all let me think about this what do I want there's so much Oh bird definitely like the bird is there a rainbow let me just go to the opensourcing of them the raw moderated dataset preprocessdataset I think I want the preprocess okay yeah I want the preprocessed so where is I just want to have these links ready so I'm not like looking for them where's the Google Cloud link see if this takes me there no that's just the documentation that's not what I want get the data get me the data Oh where's that Google Cloud Cloud console there we go this what I'm looking for now let's see please email me no I agree that my use of any services in it relate api's is subject to my compliance with you pickup ball alright everybody now as you know I always read the Terms of Service so before I click yes you'll just gonna have to bear with me oh my god which one do I read wait hold on servicer is with the applicable Terms of Service oh wait maybe it's this one my joke how long can I keep this joke up because I you know I'm just gonna click yes but I wanted to services and related api's services and oh no this is all ok wait quickdraw which I don't know which to ID what do I have to read all these don't I because I just don't know which one it is glue google cloud big data big tip blogger Helena cloud API is cloud datastore API oh wait oh no these are all oh no this is which one oh good Google Cloud maybe I need a machine learning algorithm to tell me which one of these terms of services okay let's let's read the cloud platform and let's let I think it's more appropriate if we sing it Google cloud platform Terms of Service last amount of five February 8th 2018 Nick you are accessing the Google cloud platform services as a customer of Google cloud platform reseller the terms below do do not apply to your reseller governs your use of the Google cloud platform is if your billing account of Spain India please we're sir oh no not in the air Brazil no sis sit aah squawk shut up not don't speak Portuguese sorry the Google cloud platform License Agreement the agreement is made and entered into by and between Google and the entity our person agreeing to these terms customer Google means either one Google commerce limited GCL a company incorporated under the laws of Ireland nuts with offices at the Gordon house perro Street Dublin for Ireland if customer has a billing address in the EU and has chosen as alright fine you got me you got me Google have my children take it all okay where was there we go now hmm ooh sign up for a free trial and you'll get $300 in credit and 12 months explore Google cloud platform okay all right so can you guys blink open thank you very much thank you thank you thank you thank you thank you thank you very much I think I'm gonna start a new YouTube channel which is just singing Terms of Service somebody ping Sam Levine I think this could be good for for for stuff that he's working on okay so let me close all these and I'm here okay so I have I told I have no idea what's going on anymore we love what tree thought okay so and I have to go soon so I better get moving on this all right I would open up processing which I did already and I am going to talk about the data okay cat there we go look at this even it says where it was drawn interesting okay alright here we go rainbows and there's rainbows and trains okay well hello so let's just do cat because that's kind of ubiquitous a rainbow and a train I think that'll probably be good right when we'll do three categories it's important to do more than two but I don't want to do too many okay where are the trains where are the trains somebody tell me where the trains are see ambulance oh just go with the cat alright I'm back and in this video I am now going to look at how to actually make use of this data set just as a reminder this is the quickdraw data set by the way there is so a much goofy fun creative interesting things you could do with this data set that have nothing to do with this whole machine learning neural network and nonsense stuff so hopefully this video will be useful for you anyway and encourage you to make creative projects with the data set and I will try to link in the video's description to some projects that other people have made but let's talk about how I'm gonna get access to this data and use it so one thing we know it here's all the kitty cats and we can say look who I really like this one so I'm gonna look at this one click on it so one thing you'll notice it's got a number it actually is it's got a its it has a date when it was drawn and what country it was drawn from which is interesting by the way in light of my discussion of missing data sets and the work of Mimi oh that I talked about a little bit in the previous video thinking about when you're working with a data set where does it come from who collected it what's missing from that data set why are you using it is what you're using it with going to hurt somebody think about these questions now fortunately for us I think we're just gonna make a fun goofy drawing thing and I think we're going to be okay but those are really key and Fortin questions now this is a nice little interface to look at the data on github however I can go to github quick draw dataset and here is the documentation for what kind of formats the data is actually in so if I scroll down here for a little bit we can see the data is actually available in these nd JSON files now what's interesting about this is you can see like oh look there's an ID every single drawing as a unique identifier and I know I'm standing in front of some of this so let me move this over it has a word which I would assume is the category yes what the what the player of the game said will you please draw this and when it was created what country and then the drawing itself and look at this look at all these numbers what are those numbers so if you remember from my previous video what I'm trying to do is do image classification with a simple 28 by 28 pixel image but the data itself is actually all of the vector points the path of the drawing and that's why when I'm on this page as I hover over it you can actually see a replay of how the thing was drawn itself so that's something I would hope to come back and make a future video about using that data but what I actually want to use and we go back to here is a different way that the data is formatted so there you can go in here there's binary files but this is what I want numpy bitmaps so a number is a special data format that stores all the pixels of a bitmap version of the drawing in a format that the Python library numpy can read very easily with n P load now if I were a person who lived in the regular world I would see this a go Oh perfect I'm just going to go and do my project with numpy because that's what people do but I am a person who lives in this weird world of wanting to do things in JavaScript and in the browser and sometimes in processing so what I want to do in this video is look at how I can get access to the numpy bitmap data format in an environment that's not numpy and then kind of clean or normalize or organize the data in such a way that I can use it for my machine learning doodle classification project all right so let's get the data if you click through and read this documentation you'll find that it is here the data is available on the Google cloud platform if you want to listen to me nevermind I was thinking as longer layer that I think I shall not speak about and so these are all the different formats I'm gonna go here under numpy bitmap and I'm gonna see okay look at this now I think we have to start with rainbow I probably should start with train but let's this is not a very effective way to get to it let's just make a little edit point here Oh guess what all right so I'm gonna get the rainbow dot n py file and it's downloading it's a very large file it is about 100 megabytes so I don't know how many drawings are in that exactly we're gonna figure that out when I open up the file but what I want to do is make for myself I want to make a little simple training and testing set with just a thousand drawings in it again to do this kind of work effectively the more data I have probably the better but to demonstrate it in a quick and friendly way in a YouTube video using a small data set it's probably gonna be best and then you the viewer could take my code do something with it kind of expand the data set alright so it should have downloaded by now I'm gonna work with preprocessing this data in the processing programming environment which is a Java based platform I could do this in Python I could actually go directly to JavaScript now but I'm just doing this to demonstrate it and it's kind of what I would do because I know processing the best probably so I'm gonna just make a little sketch called quickdraw data let me put it on the desktop I'm gonna open up the sketch folder and I'm gonna grab this file and put it in there in theory what I should do is probably make a folder called data and put it in put it in there and then I'm just going to rename it it has a long name I'm gonna rename it to rainbow dot and py okay so now processing one of the reasons why I picked processing is it has a function called load bytes oh you cannot see that at all look at that you cannot see that at all unless I do this hold on a sec pause how's that too big just right I think I can make it smaller right is that okay okay great okay so I'm gonna use the load bytes function and I'm gonna say I was about to say let but I'm gonna say byte I'm gonna say byte but I've forgotten to how to program in Java byte a data equals load bytes rainbow npy so this is a nice little function let me bring the console up here cuz I'm on a console print stuff to the console let's just say print line data dot length so I'm gonna run this and we can see look at that that data that array I now have 99 million bytes so interesting let's try to figure out how many images that is well I know that each image is 28 by 28 and so that's 784 total so total equals data length divided by 784 and let's see what we get now I really should do this as a floating point just whoa and let's let's print line total so that's about a hundred twentysix thousand images now the thing is this isn't actually correct and if I wanted to do some research most data files will actually have bytes at the beginning that aren't the data you want but are something called header bytes and those header bytes describe the data like this is what's in here this is what format it is this is how much of it there is and what I probably should do is look at the numpy binary file data format if I google that I'm gonna get somewhere and I'm gonna get some page that explains the npy I should just scratch that it should just look for npy file format and I'm going to find some information about how its formatted here's the thing I looked at this yesterday and I happen to know that there's about 80 extra bytes on the beginning not about exactly 80 extra bytes so what I'm actually going to say is data dot length minus 80 because that's how many bytes that are actually in that array that have to do with the pixels and we're gonna see that's exactly how many 126,000 images so let's just see if everything's going correctly we could at least look at the first one so what I'm going to do is I'm going to create a variable called start I'm gonna say start at 80 and then I'm going to look at 784 bytes and the index is I plus 80 and what I want to do is also create let me make an image that is 28 by 28 let me load the pixels of that image because I'm gonna write the bytes into an image so I can look at it and then I'm gonna say int Val equals now we're gonna run into an issue but I'll fix it anticipating things oh and I need to say RGB so when I say create image I've got to say RGB so value equals what did I call it just data data oh and this should be plus start data index data index that's the value and then I want to say image dot pixels I equals that value then I want to say image dot update pixels and then I want to just draw that image image zero zero look at that oh is that really a rainbow maybe I should have picked something else because I kind of wanted to see like is this really right so that is the first rainbow now these a little bit like why is there some yellow and some blue so I haven't been for I haven't been very thoughtful about this one thing that's happening is the byte values that are actually coming in there are signed bytes so they're going to have be between like negative 127 and positive 127 or something approximately like that so I can actually apply a bitwise operation and I just sort of like and it with some hexadecimal numbers I could kind of go through that in a different video but this is going to I believe if I'm doing this correctly change it from an unsigned byte to a sign byte to give me a range between 0 255 so I I should try to link to a resource about bitwise operations or make one myself at some point so now you can say ok well that's weird now it's blue well the reason why it's blue is I'm actually this is a number between 0 and 255 val is and i'm setting that number to be the pixel color but a color is an RGB color so in processing if i just wrap this in the color function it'll take that number and make it into an RGB color with that value as the red green and blue value okay so now we should see there it is there's somebody's rainbow alright so let's get a little further with this now let's make a window that's 280 by 280 let's do this let's have let's forget about this was just for my own curiosity let's say we're going to look at 200 100 images right 10 let's say 10 at 10 by 10 so I'm gonna say for int N equals 0 n is less than total + + + we're gonna do this we're gonna do this 100 times and so the start is 80 plus n times 784 alright because each image is gonna start by the eighty header bytes and then how what image were on times 784 pixels so even if I just did this right now we should see there's the last rainbow I just drew them all on top of each other but now I need to get an X value which is n modulus 10 right because I want the sort of column to be modulus 10 being the remainder of dividing by 10 so the column goes 0 into the new frozen i901 and the y value to be n divided by 10 so the for the first 10 I'm in row 0 for the next 10 I'm in row 1 and so now I should get ooh what did I do wrong there did something wrong if I run it again will it fix it what did I do wrong here and modulus 10 and divided by 10 oh wait a sec I'm drawing the stuff in the correct location I know what the problem is weird though index is I plus start index image pixels I hold on a sec next times with oh yeah no oh yeah yeah yeah yeah whoops so I forgot this should be well okay this should be 28 and these should all be in variables right because they're each 28 by 28 pixels wide so I guess I was drawing the last one 10 pixels over that was the problem format won't do it for me okay there we go all right so there are all my rainbows I don't like how there are white on black so I'm just going to say 255 minus and come on there we go rainbows okay all right so we've done it we've accessed the data I kind of understand how it works now what I want to do is save it out into a format that I can easily use in p5 I'm thinking about this so on the one hand I could save this to like I could rewrite the data to like a JSON format that I'm happy with I'm gonna weirdly I think what I want to do is load the data in as binary into JavaScript because I think it's probably worth doing that as an exercise yourself you might think about rewrite it's it's also processing it's a bit convoluted to write out a JSON file from processing although quite possible so I think for simplicity what I want to do now is just save bytes so let's say what what I want to do whoops what I want to do is just save a file with only 1000 images in it right it's because I don't want to have to carry with me this 100 megabyte file while I'm just trying to learn and figure this stuff out so I make a much smaller file with just a thousand in it and so let's look at how I would do that so I'm going to create a variable I'm going to call it out data and it's a new byte array with total times 784 and again your the thing is these numbers are never gonna change so I'm kind of happy with just hard coding them in there but obviously I should refactor and make all 28 and the 784 I mean all I need is that 28 and the 80 should be a variable but we're gonna be fine so I want to save I'm gonna say about 200 287 or 100 of these images and so while I'm going through here I'm just gonna do out index is 0 so every time I get a new value I'm just going to say out data out index equals that value and then I'm just gonna say out index plus plus so as I'm going through I'm just going to write in this mmm so this is actually I made this into an integer so I could use it in processing I think if I do this it will be happy with me I might have this same anyway so I think that that I think is going to be fine and then what I'm going to do is at the very end I'm gonna say save bytes what where does this Rainbows 100 I'll call it dot bin for binary Rainbows 100 dot bin and out data so this is a function in processing that will save that array of bytes to a binary file I'm calling it rainbows 100 I'm gonna run this we can see now I should be able to go to the directory we could see there it is and how big is this file it's just 78 kilobytes so I have a hundred of them you know just a binary file but that's not let's let's let's save a thousand of them and now that I'm saving it I think probably there's no reason for me to have the image anymore so let's because I the image is just to like sort of see that it works so let me comment that stuff out and now I want to save Rainbows 1000 and I'm gonna run it and there we are rainbows 1000 bin and this is this file is just 784 kilobytes so this is really nice because now when I move over to JavaScript I could kind of use this very like lightweight data file that I can play around with and later I could go get the full numpy file or and I have this processing sketch which just allows me to quickly work with the data and resize it reformat it that sort of thing okay so this is now the end of this particular video in the next video what I'm gonna do is look at loading these data files into JavaScript and dividing them into training and testing training and testing datasets to use them ultimately with the neural network and in between you watching or me recording this particular video in the next one I will go ahead and make a bunch more of these so I will make one for trains and one for cats I think I'll just do three I don't know maybe when I come back I'll have picked some different ones but if you know pause if you're watching this as a playlist maybe go and play around with this data yourself think about how you might draw it in a different way and processing or an mp5 and have some fun and I'll see you in the next video ok alright so what are we have we on time noon mmm so I think let me do let me let me get some more so let's let's go here what did we say I want to try train and actually even if I'm doing a thousand I like to to see them as it's going and I wonder if I should rewrite the data as white pixels I'm a black on white rather than white on black but this is like even though it made yeah so actually I actually just leave the image stuff in there so one things that's nice about doing this is if I scroll over here there's this public link and I can do copy link address and I can actually just put that in here so I can just access it from the URL directly and now I can say what was this trains 1,000 so it's gonna take a while because it's kind of a bit like why is it taking so long so it's got to download the file great so these are all the trains oh these are awesome wow these are really this is probably a poor choice because this is so insane they're so insanely different but it'll be interesting so people are asking is the stream done sorry I'm doing this in two parts today so I've got to leave and do a bunch of other stuff for a few hours and then I'm gonna come back and and finish that III definitely finish this project whatever finish means I don't know but I'm gonna get further along all right so that's the trains which cat let's go put a cat in here a big font come on whoops oh I could have just changed this the cat I don't know why I'm acting all crazy and then cats 1,000 oh I'm gonna wait thank you all dear how many hours will the stream be back I look up 300 p.m. Eastern Time in your timezone so that's what I'm hoping you back is 3 p.m. whoops so I have rainbows cats right I'm like oh look Oh interesting of course it's 784 kilobytes I didn't even note that that's really ok it's like this is like really interesting to see this is like learning about bytes right I just saved 784 thousand bytes it's a thousand 784 pixel images 784 kilobytes I didn't have to look that up of course it would be 7 or 84 okay thank you K weak bond okay so thank you I'm gonna I'm gonna try to shout out the super chats cuz it's really kind of people to do that oh that send a super chat how do I see them all I see wall dear crews Thank You Tobias von arcs will I be making new ones about fractals yeah I don't yes I don't have any specific plans do but of course I would like to at some point let's see what else do I miss any others I think I got all of them well I see another one here Kody thank the universe for you Thank You Cody I really appreciate that and the super chats are really nice to see I'm very I'm conflicted about whether to have that feature enabled but I certainly appreciate it and having the financial support does really help me continue it motivates me in some ways as much as I should have my own motivation to through these the enjoyment that I get of doing this but it does really help but you can also if you're interested supporting you can you can join the patreon all right so I think I'm ready let me I have like I mean I have like ten minutes so what could I possibly do in the next ten minutes before I don't think anything so I think I should probably just go did then have more time later and so that lets just let me just think about what I need to do this afternoon so this afternoon and by the way let me met Abby now so one thing it's possible that I'm going to end up doing this in like three parts today if that happens I believe YouTube so how do you know when I'm livestreaming next here's a little lesson in YouTube go to youtube.com the coding train I'm not actually signed in as myself I'm signed in as some other Google account and now I need to go and hit subscribe I am subscribed already and then I actually don't do this I'm gonna do this click the alarm bell if you click the alarm bell YouTube should send you a notification the moment I go live and at some point I will schedule it but it will be on exactly this page youtube.com slash the coding trained slash live and I'm seeing K week Mon is typing I will choose not to read you have to join the patreon the patron group to read K walk weak bonds message I will take a few questions before I go oh wait Simon did notify me with something that is worth mentioning I just that Simon maybe had made something relevant to what I was showing ah so Simon Tiger github.com slash Simon Tiger / decision I mentioned decision trees earlier and Simon Tiger has a library for using decision trees wow that is so cool oh my goodness I totally went oh they camera one off I totally want to use this and while we're here let's take a minute to subscribe to Simon's YouTube channel from this account as well oops Simon Tiger hold on Simon Daniel Schiffman there we go we're gonna subscribe so I highly recommend Simon's YouTube channel Simon makes amazing videos this is one of my favorites recently about the magic hexagon let's subscribe and click the alarm bell subscribe to Simon okay sorry now I miss and I've missed the questions shoot if there are any good questions please repost them in in the patrons lab check okay will you ever use any other languages besides processing or JavaScript sure if it if it's a thing that I I mean I do stuff in Python when I have when I do stuff in PHP sometimes so we're working on WordPress you know I tend to limit myself to processing and JavaScript for my video tutorials but if there's something I'm working on where a different programming language environments really gonna make sense than I will use it whoa three blue one Brown just came out with a new video I just got a notification what languages do you teach on school dan I so I teach the same stuff that's in my YouTube channel that's exactly what I teach all my classes at NYU how do I get the ideas for the coding challenges people suggest them I do have a github repository where you can file an issue to suggest one really though as I'm trying to teach stuff and do stuff along with the courses that I'm doing it anyway have you ever thought about using Python every day will you teach us binary code I need to know it I don't know I don't know what that means exactly but at one point I did find that song it was I think I got it off Free Music Archive I have to find it again okay that's the end so thank you everybody this is not the end I mean it's never the end but this is not even the end of today's live stream it is about 12 1000 p.m. Eastern Time I would say about I would say about compute Phi be used on web development yes I'm sorry just pay all the stuff I'm still reading all your questions I'm sorry I'll get the rest of the questions all the time I'll be back in approximately three hours if you go at some point I will post a time maybe on Twitter or it will actually on the again if you subscribe and click the alarm bell you'll get a notification and I usually also like there's a thing in my interface where I can add a time maybe I should just go do that right now I know but I can't if I'm livestreaming I think anyway I will add a time I'll be back approximately 3 p.m. Eastern Time we're going to finish this doodle classification project ok thank you I love you too
