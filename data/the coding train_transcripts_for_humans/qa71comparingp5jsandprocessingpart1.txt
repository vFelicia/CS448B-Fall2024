With timestamps:

00:00 - *train whistle* hello welcome to a Q&A video I'm
00:03 - going to talk in this video about what
00:05 - is the difference between p5.js and
00:06 - processing, i'm probably in a moment going to say
00:08 - exactly that same thing, because I'm actually
00:10 - just after the fact recording an intro
00:12 - because I went on for so long i decided
00:14 - to drop to divide this particular
00:16 - discussion into three parts. so the first
00:19 - part i'm just going to kind of talk
00:21 - about those real bigger picture of these
00:23 - two different environments and what
00:24 - programming languages they're built on
00:25 - and kind of how that plays a role in
00:28 - their features and ways that you work
00:31 - with them and I'll diagram that on the
00:33 - whiteboard the second part i'll actually
00:34 - show the two different environments and
00:36 - type some code side-by-side and look at
00:38 - the editors and see some pieces of that
00:40 - and in the third part i will make a list
00:43 - of pros and cons of why you might want
00:45 - to use one versus the other or where
00:47 - one environment excel over the other
00:49 - environment and as well as take some
00:52 - questions from the live chat about
00:54 - things that I missed
00:55 - so that's going to be three videos if
00:57 - you find them interesting please watch
00:59 - them if you kind of don't please don't
01:01 - watch them and offer you maybe in the
01:03 - second part *train whistle*
01:04 - hello welcome to a coding train Q&A
01:06 - video in this video I'm going to answer
01:08 - a question that I get a lot about the
01:11 - project the software projects that are
01:13 - maintained by something called the
01:14 - processing foundation the processing
01:16 - foundation was founded in 2012
01:18 - its mission is to promote software
01:20 - literacy within the visual arts and
01:21 - beneficial literacy within technology
01:23 - related fields and I would say
01:25 - primarily also to make these fields
01:28 - make this more accessible to diverse
01:29 - communities and i encourage you to read
01:31 - more about the processing foundation's
01:32 - initiatives and projects and mission, all
01:35 - on the process foundation website but
01:37 - I'm not here to talk about the processing
01:38 - foundation in this video because i have
01:40 - this habit of doing that all the time
01:42 - the question that i get a lot and this
01:44 - question comes from someone named
01:47 - shiffman ok so i posted this question
01:48 - but it's only because people tweet and email it to me all the time
01:51 - but you can actually ask your own
01:53 - questions here other github repository
01:55 - in the issues which I'll link to in this
01:56 - video's description but the question
01:58 - here is what is the difference between
02:00 - p5.js and processing and the last time I
02:03 - tried to make a video you'll see it in
02:04 - this playlist answering the question I
02:07 - really went into the history
02:08 - of these projects and why they
02:09 - exist and the philosphy and
02:11 - principles behind them in and some
02:13 - differences in that extent
02:15 - but i didn't really get to what I think is
02:16 - important and on a lot of people's minds
02:18 - which is the technical differences
02:20 - what are the
02:22 - underlying programming languages behind
02:24 - these environments
02:25 - what kind of editors can i use with
02:27 - these environments what kind of projects
02:29 - what kind of features do they have
02:30 - whats the difference between
02:31 - the syntax and features of both
02:34 - of these frameworks and that's what I
02:36 - want to discuss in this particular video
02:39 - ok so I'm gonna come over here to the
02:41 - whiteboard for a second, hi! I'm over
02:43 - here at the whiteboard now
02:47 - so here's the thing, processing and p5.js
02:50 - are I would say open source
02:53 - frameworks software projects that are
02:58 - kind of broad projects that involve
03:00 - different aspects and so each one let's
03:03 - think about each one as sort of
03:06 - three categories so each one of these
03:09 - projects is all three of these things
03:12 - if some ways, a library
03:14 - they're built on top of a programming
03:17 - language and then for each one of these
03:21 - that you might use you need someplace
03:23 - where you would sort of type your code
03:24 - and figure out how to use it an editor
03:26 - so let's think about these three
03:29 - categories for a second so p5 and
03:34 - processing let's start with processing
03:37 - so processing is built is written is a
03:41 - library for so these are really kind of
03:44 - one thing
03:47 - it's really not three, it's really two.
03:51 - processing is a library
03:53 - for the java programming language
03:58 - the library, the things that processing
03:59 - is adding or building on top of, or
04:01 - giving you features for are things
04:04 - like drawing data hardware
04:10 - sound
04:17 - so maybe this is a good way of thinking about it
04:18 - and maybe I could add more things here
04:20 - so it's a library
04:21 - meaning it's really ultimately what it
04:24 - is one of the aspects of it if the
04:25 - library of code that you can call
04:27 - functions from, it's built on top of the
04:30 - java programming language, there is an
04:33 - editor for processing which I'll
04:39 - say is like a desktop editor
04:41 - so processing has a desktop editor
04:44 - that you can download and use.
04:48 - the language that p5 is written in and that
04:51 - it is a library for is JavaScript and it
04:58 - has libraries also for drawing and data
05:02 - and sound
05:06 - and hardware but I could keep
05:09 - going with this list, but the primary
05:11 - thing that i might add here HTML CSS or
05:16 - maybe more importantly Dom.
05:19 - because it's javascript,
05:21 - and i'll get to this in a bit more
05:23 - there's a big component of p5
05:26 - involving the web, so now where do you
05:30 - create projects using p5? Here is the thing:
05:33 - processing which is a project that
05:36 - started in 2001, in 2001 if
05:42 - you wanted to write and compile and this
05:44 - is a sort of an aspect to this as well and
05:46 - create software sketches you would need
05:50 - a code editor most code editors were
05:53 - difficult to download install maybe you
05:55 - need to use command line if you're just
05:57 - using a text editor you have this big
05:58 - giant complex environment like eclipse
06:01 - so processing really the idea of
06:05 - processing being an editor is really
06:08 - fundamental to the project you download
06:10 - this editor you open it up and you type
06:13 - code in it you hit 'play' or a run button
06:15 - you see the result of your code,
06:18 - 'E-Z peasy' so to speak so just as much at
06:22 - processing is both a library with all
06:24 - this functionality a place to call
06:26 - those functions
06:27 - in an editor in very fundamental to the
06:29 - project. p5 in many ways that's a little
06:33 - bit less the case because of the world
06:36 - that we live in now and where you can
06:38 - program for the web you know name your
06:41 - favorite editor everybody has their you
06:43 - can use added more supply more brackets
06:46 - are codependent some of these are
06:47 - web-based better just knowing their
06:48 - desktop editors you can just have a you
06:51 - can just use any text editor you can run
06:52 - a server so there's all the fishes left
06:55 - a little bit less of a fundamental piece
06:58 - of the project out there was and I'm
07:00 - gonna make a separate video about this i
07:01 - think there was a p5 jas desktop editor
07:05 - that we modeled after the processing one
07:09 - of many similarities many differences as
07:12 - well because ideas that simple thing you
07:13 - downloaded tiger code you press the play
07:15 - button you see the result
07:17 - this has now been deprecated hopefully a
07:20 - desktop editor will come back at some
07:21 - point in lieu of developing an entire
07:25 - web page editor so their website editor
07:27 - is currently in development there's no
07:29 - public release of it yet but certainly
07:30 - when its release
07:31 - I hope to have people who are working on
07:34 - it comes and presented on the youtube
07:35 - channel
07:36 - Kathy target charts are occasions is
07:39 - that is the lead developer of the People
07:42 - vs web editor and the work that she is
07:43 - doing is just but not else i'm very
07:46 - excited to the point that will be able
07:47 - to have that a public relief if there's
07:49 - no this is not a new idea there are many
07:52 - web-based editors symbol code pen
07:54 - jsfiddle these are places where you just
07:56 - go to your web browser you see a place
07:59 - where you can type in code and you can
08:00 - see the result of the code you could say
08:01 - that you could share it
08:02 - this is very powerful so while there are
08:05 - a lot of options for web editors that
08:06 - you can use we have decided to try to
08:09 - make one that's kind of geared towards
08:11 - people GS specifically and highly
08:13 - tailored to a beginner so if you are a
08:16 - teacher and you've got the group of you
08:18 - know ninth graders on Saturday afternoon
08:20 - for a couple hours you want to teach
08:21 - them the beginning of learning to code
08:23 - what would be the easiest way to do it
08:25 - open up the browser everybody sign up
08:26 - for an account type in your code hit
08:28 - play save share that's kind of mp5 yes
08:30 - to all the libraries are configured and
08:31 - set up for you
08:32 - that's kind of a goal of this this
08:34 - particular web editor
08:35 - project so this is the landscape between
08:38 - these two things so now here i think it
08:44 - is worth exploring for a second and then
08:46 - i'm going to them kind of 102 things
08:48 - going to do is just show you these two
08:49 - environments and like make the same
08:51 - program in both of them to see
08:52 - highlights of differences and then I
08:54 - also want to make a list of pros and
08:55 - cons of why you like you want to use one
08:57 - versus the other but let's let's spend a
09:00 - minute here on Java and JavaScript and I
09:04 - don't like to say versus just put a
09:06 - little heart because i love you by the
09:08 - way people think java is like not a
09:10 - thing anymore but it's used so widely
09:13 - and people don't like job but i like all
09:16 - programming languages it's the place
09:18 - that you can write some code and express
09:20 - yourself and make something interesting
09:21 - it's a good place to be might not be
09:22 - your favorite but let's not be so mean
09:25 - about java so Java is a programming
09:29 - language i think it was started in 1991
09:32 - but really more formally launched
09:33 - probably 1995 everyone in the comments
09:35 - can correct me here if you walk up and
09:38 - the idea of java the big exciting thing
09:42 - about java was write once run anywhere i
09:47 - think with the acronym write once run
09:50 - anywhere anywhere
09:51 - whoa Rob war up at the Royce didn't have
09:55 - like a good ring to it but um the idea
09:57 - is if you were writing your code and C
10:00 - or C++ you would have to rewrite your
10:03 - code entirely if you move from a apple
10:06 - computer to a windows computer to a
10:08 - linux machine to a mobile phone to a
10:10 - toaster and the idea of java the magic
10:13 - was you didn't actually write code that
10:16 - native to that computer you wrote code
10:18 - is very generic way and then there you
10:21 - would have something on that computer
10:23 - called a java virtual machine so as long
10:27 - as the Java Virtual Machine was part of
10:29 - this device then your java code could
10:32 - run on it the Java Virtual Machines
10:34 - essentially job is to translate your
10:35 - java code which turns into java bytecode
10:39 - to that machine specific machine code so
10:43 - this is what it was exciting and
10:46 - powerful innovation and java really
10:49 - adopt most of the same syntax as c++ and
10:54 - it was also highly object-oriented
10:56 - language for better or worse it can be
10:59 - very very wordy and tedious and kind of
11:03 - ugly in many ways are beautiful and
11:05 - elegant depending on how you look at it
11:07 - but what processing a lot of what
11:08 - processing did with java is when you're
11:11 - working in its desktop environment a lot
11:13 - of the rapper code to sort of extra code
11:16 - you need to put the beginning and end of
11:17 - every program in java probably can add
11:20 - for you behind the scenes so that makes
11:22 - it a little bit simpler and some people
11:24 - think of it wasn't really java it's it's
11:26 - because it or is it but it really is
11:29 - java however you are allowed to a not
11:33 - have to live by this like very formal
11:35 - object-oriented way of thinking although
11:36 - you can of course two objects and you
11:38 - don't need all of this extra java stuff
11:40 - that looks very intimidating and
11:42 - upsetting in a way on your like first
11:44 - day looking to program to have that
11:45 - handle this computer stuff that you know
11:47 - what it means
11:48 - so that's really what's going up what
11:49 - happened profit now processing was also
11:52 - in this is what I spent a lot of time in
11:53 - my previous video check i'll try not to
11:55 - harp on too much here
11:56 - java made sense because they could
11:59 - connect to a lot of hardware and
12:00 - librarian for data and networking but it
12:02 - also at the time there was something
12:04 - called applet which were part of early
12:07 - browser's javascript in many ways with
12:10 - need to to complement the fact that
12:13 - JavaScript might be a programming
12:14 - language of the browser that would
12:15 - complement applets but a way of running
12:17 - your profit pitches in 2001 when process
12:21 - of creating that export to Annapolis and
12:22 - share it on the web can't do that so
12:24 - much anymore so the JavaScript of
12:26 - actually what kind of struck started
12:29 - being developed around the same time a
12:31 - little bit after it had other names like
12:33 - mocha and maybe like live script because
12:38 - and netscape and various companies that
12:42 - were developed organizations that were
12:43 - developing early browsers realized you
12:46 - needed something to that you could write
12:48 - code right in the
12:50 - browser in your HTML in your file to
12:52 - like control the behavior and logical
12:54 - things that are happening on a webpage
12:55 - and that's where javascript came from
12:57 - now javaScript obviously is very
12:59 - different now
13:01 - in what year is that 2017 of that it was
13:06 - back then that there's been many
13:09 - different specifications for the
13:10 - language there's there's an organization
13:12 - called ICI ma is that when they were on
13:18 - version like there's like es6 and early
13:21 - term i haven't adopted the new syntax of
13:24 - my video tutorials of JavaScript just
13:26 - yet i can pick your very life doctor to
13:29 - get to show you the environment but but
13:31 - but but still it's quite different but
13:36 - it still is fundamentally the language
13:39 - of the browser a key difference however
13:41 - is that while this is compiled code you
13:44 - have to write your code and then run it
13:47 - through a process that converts it into
13:48 - you know zeros and ones that can be
13:50 - executed an application javascript
13:53 - doesn't work that way
13:54 - javascript is what's known as an
13:56 - interpreted language meaning the browser
13:59 - just read your code and executed at the
14:01 - same time which allows for a lot of
14:03 - flexibility and exciting things like
14:05 - live coding or changing code apply
14:07 - running it typing your code in the
14:08 - browser getting rest there's all sorts
14:10 - of possibilities that you can explore
14:12 - because it's interpreter on the fly and
14:14 - can change as it's running over time as
14:17 - opposed to send it to be compiled and
14:19 - finished but and so invested these are
14:21 - very different programming languages the
14:23 - name is just there because of this thing
14:25 - that applicants were there and
14:27 - JavaScript supposed to complement that
14:29 - and so but added some of the syntax for
14:32 - a while is the same but the actual
14:35 - quality of the language of JavaScript
14:37 - ism do more functions are a job
14:40 - everything about object
14:42 - javascript is that can be object is
14:43 - underrated but functions that sort of
14:45 - this primary thing and this left of can
14:47 - do want to that of course but that sort
14:49 - of the primary think so p 5ks is just a
14:53 - library for JavaScript so if you are
14:55 - quoting full learning p5 yes what you're
14:58 - learning to program in java script
15:00 - and the library of functions that you're
15:02 - calling to maybe draw or do things come
15:04 - from p5 yes if you are learning
15:06 - processing your learning the syntax of
15:09 - the java programming language and how it
15:10 - works and getting access to all these
15:12 - libraries from profits to draw and do
15:14 - that type of thing so and in truth at
15:17 - least in my experience people say well I
15:20 - don't want to use the framework because
15:21 - i really want to learn the with a real
15:22 - big
15:23 - well guess what the real thing is
15:25 - learning how to use different framework
15:27 - so if you learn how to use P by jet
15:29 - maybe you'll learn how to use 3jf RP
15:31 - production or a no matter chance or fill
15:36 - in the blanks doctor is different
15:37 - libraries in different framework for the
15:39 - languages
15:40 - ok so that's kind of a rather
15:41 - long-winded summary of all this and what
15:44 - I want to do now is just show you the
15:46 - two different environments and house
15:48 - intact looks between them and then make
15:50 - a lift of pros and cons between the two
16:03 - Subtitles by the Amara.org community

Cleaned transcript:

*train whistle* hello welcome to a Q&A video I'm going to talk in this video about what is the difference between p5.js and processing, i'm probably in a moment going to say exactly that same thing, because I'm actually just after the fact recording an intro because I went on for so long i decided to drop to divide this particular discussion into three parts. so the first part i'm just going to kind of talk about those real bigger picture of these two different environments and what programming languages they're built on and kind of how that plays a role in their features and ways that you work with them and I'll diagram that on the whiteboard the second part i'll actually show the two different environments and type some code sidebyside and look at the editors and see some pieces of that and in the third part i will make a list of pros and cons of why you might want to use one versus the other or where one environment excel over the other environment and as well as take some questions from the live chat about things that I missed so that's going to be three videos if you find them interesting please watch them if you kind of don't please don't watch them and offer you maybe in the second part *train whistle* hello welcome to a coding train Q&A video in this video I'm going to answer a question that I get a lot about the project the software projects that are maintained by something called the processing foundation the processing foundation was founded in 2012 its mission is to promote software literacy within the visual arts and beneficial literacy within technology related fields and I would say primarily also to make these fields make this more accessible to diverse communities and i encourage you to read more about the processing foundation's initiatives and projects and mission, all on the process foundation website but I'm not here to talk about the processing foundation in this video because i have this habit of doing that all the time the question that i get a lot and this question comes from someone named shiffman ok so i posted this question but it's only because people tweet and email it to me all the time but you can actually ask your own questions here other github repository in the issues which I'll link to in this video's description but the question here is what is the difference between p5.js and processing and the last time I tried to make a video you'll see it in this playlist answering the question I really went into the history of these projects and why they exist and the philosphy and principles behind them in and some differences in that extent but i didn't really get to what I think is important and on a lot of people's minds which is the technical differences what are the underlying programming languages behind these environments what kind of editors can i use with these environments what kind of projects what kind of features do they have whats the difference between the syntax and features of both of these frameworks and that's what I want to discuss in this particular video ok so I'm gonna come over here to the whiteboard for a second, hi! I'm over here at the whiteboard now so here's the thing, processing and p5.js are I would say open source frameworks software projects that are kind of broad projects that involve different aspects and so each one let's think about each one as sort of three categories so each one of these projects is all three of these things if some ways, a library they're built on top of a programming language and then for each one of these that you might use you need someplace where you would sort of type your code and figure out how to use it an editor so let's think about these three categories for a second so p5 and processing let's start with processing so processing is built is written is a library for so these are really kind of one thing it's really not three, it's really two. processing is a library for the java programming language the library, the things that processing is adding or building on top of, or giving you features for are things like drawing data hardware sound so maybe this is a good way of thinking about it and maybe I could add more things here so it's a library meaning it's really ultimately what it is one of the aspects of it if the library of code that you can call functions from, it's built on top of the java programming language, there is an editor for processing which I'll say is like a desktop editor so processing has a desktop editor that you can download and use. the language that p5 is written in and that it is a library for is JavaScript and it has libraries also for drawing and data and sound and hardware but I could keep going with this list, but the primary thing that i might add here HTML CSS or maybe more importantly Dom. because it's javascript, and i'll get to this in a bit more there's a big component of p5 involving the web, so now where do you create projects using p5? Here is the thing processing which is a project that started in 2001, in 2001 if you wanted to write and compile and this is a sort of an aspect to this as well and create software sketches you would need a code editor most code editors were difficult to download install maybe you need to use command line if you're just using a text editor you have this big giant complex environment like eclipse so processing really the idea of processing being an editor is really fundamental to the project you download this editor you open it up and you type code in it you hit 'play' or a run button you see the result of your code, 'EZ peasy' so to speak so just as much at processing is both a library with all this functionality a place to call those functions in an editor in very fundamental to the project. p5 in many ways that's a little bit less the case because of the world that we live in now and where you can program for the web you know name your favorite editor everybody has their you can use added more supply more brackets are codependent some of these are webbased better just knowing their desktop editors you can just have a you can just use any text editor you can run a server so there's all the fishes left a little bit less of a fundamental piece of the project out there was and I'm gonna make a separate video about this i think there was a p5 jas desktop editor that we modeled after the processing one of many similarities many differences as well because ideas that simple thing you downloaded tiger code you press the play button you see the result this has now been deprecated hopefully a desktop editor will come back at some point in lieu of developing an entire web page editor so their website editor is currently in development there's no public release of it yet but certainly when its release I hope to have people who are working on it comes and presented on the youtube channel Kathy target charts are occasions is that is the lead developer of the People vs web editor and the work that she is doing is just but not else i'm very excited to the point that will be able to have that a public relief if there's no this is not a new idea there are many webbased editors symbol code pen jsfiddle these are places where you just go to your web browser you see a place where you can type in code and you can see the result of the code you could say that you could share it this is very powerful so while there are a lot of options for web editors that you can use we have decided to try to make one that's kind of geared towards people GS specifically and highly tailored to a beginner so if you are a teacher and you've got the group of you know ninth graders on Saturday afternoon for a couple hours you want to teach them the beginning of learning to code what would be the easiest way to do it open up the browser everybody sign up for an account type in your code hit play save share that's kind of mp5 yes to all the libraries are configured and set up for you that's kind of a goal of this this particular web editor project so this is the landscape between these two things so now here i think it is worth exploring for a second and then i'm going to them kind of 102 things going to do is just show you these two environments and like make the same program in both of them to see highlights of differences and then I also want to make a list of pros and cons of why you like you want to use one versus the other but let's let's spend a minute here on Java and JavaScript and I don't like to say versus just put a little heart because i love you by the way people think java is like not a thing anymore but it's used so widely and people don't like job but i like all programming languages it's the place that you can write some code and express yourself and make something interesting it's a good place to be might not be your favorite but let's not be so mean about java so Java is a programming language i think it was started in 1991 but really more formally launched probably 1995 everyone in the comments can correct me here if you walk up and the idea of java the big exciting thing about java was write once run anywhere i think with the acronym write once run anywhere anywhere whoa Rob war up at the Royce didn't have like a good ring to it but um the idea is if you were writing your code and C or C++ you would have to rewrite your code entirely if you move from a apple computer to a windows computer to a linux machine to a mobile phone to a toaster and the idea of java the magic was you didn't actually write code that native to that computer you wrote code is very generic way and then there you would have something on that computer called a java virtual machine so as long as the Java Virtual Machine was part of this device then your java code could run on it the Java Virtual Machines essentially job is to translate your java code which turns into java bytecode to that machine specific machine code so this is what it was exciting and powerful innovation and java really adopt most of the same syntax as c++ and it was also highly objectoriented language for better or worse it can be very very wordy and tedious and kind of ugly in many ways are beautiful and elegant depending on how you look at it but what processing a lot of what processing did with java is when you're working in its desktop environment a lot of the rapper code to sort of extra code you need to put the beginning and end of every program in java probably can add for you behind the scenes so that makes it a little bit simpler and some people think of it wasn't really java it's it's because it or is it but it really is java however you are allowed to a not have to live by this like very formal objectoriented way of thinking although you can of course two objects and you don't need all of this extra java stuff that looks very intimidating and upsetting in a way on your like first day looking to program to have that handle this computer stuff that you know what it means so that's really what's going up what happened profit now processing was also in this is what I spent a lot of time in my previous video check i'll try not to harp on too much here java made sense because they could connect to a lot of hardware and librarian for data and networking but it also at the time there was something called applet which were part of early browser's javascript in many ways with need to to complement the fact that JavaScript might be a programming language of the browser that would complement applets but a way of running your profit pitches in 2001 when process of creating that export to Annapolis and share it on the web can't do that so much anymore so the JavaScript of actually what kind of struck started being developed around the same time a little bit after it had other names like mocha and maybe like live script because and netscape and various companies that were developed organizations that were developing early browsers realized you needed something to that you could write code right in the browser in your HTML in your file to like control the behavior and logical things that are happening on a webpage and that's where javascript came from now javaScript obviously is very different now in what year is that 2017 of that it was back then that there's been many different specifications for the language there's there's an organization called ICI ma is that when they were on version like there's like es6 and early term i haven't adopted the new syntax of my video tutorials of JavaScript just yet i can pick your very life doctor to get to show you the environment but but but but still it's quite different but it still is fundamentally the language of the browser a key difference however is that while this is compiled code you have to write your code and then run it through a process that converts it into you know zeros and ones that can be executed an application javascript doesn't work that way javascript is what's known as an interpreted language meaning the browser just read your code and executed at the same time which allows for a lot of flexibility and exciting things like live coding or changing code apply running it typing your code in the browser getting rest there's all sorts of possibilities that you can explore because it's interpreter on the fly and can change as it's running over time as opposed to send it to be compiled and finished but and so invested these are very different programming languages the name is just there because of this thing that applicants were there and JavaScript supposed to complement that and so but added some of the syntax for a while is the same but the actual quality of the language of JavaScript ism do more functions are a job everything about object javascript is that can be object is underrated but functions that sort of this primary thing and this left of can do want to that of course but that sort of the primary think so p 5ks is just a library for JavaScript so if you are quoting full learning p5 yes what you're learning to program in java script and the library of functions that you're calling to maybe draw or do things come from p5 yes if you are learning processing your learning the syntax of the java programming language and how it works and getting access to all these libraries from profits to draw and do that type of thing so and in truth at least in my experience people say well I don't want to use the framework because i really want to learn the with a real big well guess what the real thing is learning how to use different framework so if you learn how to use P by jet maybe you'll learn how to use 3jf RP production or a no matter chance or fill in the blanks doctor is different libraries in different framework for the languages ok so that's kind of a rather longwinded summary of all this and what I want to do now is just show you the two different environments and house intact looks between them and then make a lift of pros and cons between the two Subtitles by the Amara.org community
