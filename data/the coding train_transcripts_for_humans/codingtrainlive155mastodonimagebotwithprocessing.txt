With timestamps:

00:00 - [Music]
00:18 - hello good afternoon good evening good
00:20 - night good morning there are so many
00:23 - time zones all over this world that we
00:24 - live in I am touched part of today was
00:27 - my mic muted which is rare I guess I'll
00:31 - start my mic muted and it takes me about
00:33 - five minutes to realize that and then
00:35 - the first five minutes of silence but
00:37 - you know today I'm actually speaking to
00:38 - you it's Friday I am looking forward to
00:41 - this weekend yeah okay about happen
00:45 - about what you're here for
00:47 - it's been a long week a little bit tired
00:49 - there was already a live stream today
00:51 - with a guest and feel the same which I
00:53 - will maybe mention I'm gonna mentioning
00:55 - it now but I'm back to continue the
01:00 - threads of last week earlier this Monday
01:04 - let's see sorry let me get the chat
01:06 - chicken going here
01:08 - alright so hi really ready yet so let me
01:14 - open up a web browser I'm completely
01:17 - unprepared for this in as I always am
01:20 - like I can't even get my web browser to
01:23 - open this is how unprepared I am so if I
01:27 - Lim lo later I don't want to try Safari
01:29 - thank you if I go to this YouTube
01:32 - channel called the coding train there's
01:36 - an upcoming live stream and one right
01:38 - now that's interesting but this is what
01:40 - I wanted to refer to so this morning
01:43 - this live stream happened this morning
01:45 - which was a live stream sponsored by
01:49 - spell which is a cloud computing service
01:51 - and guest Nabil Husein trained a LS TM
01:56 - neural network which is a kind of neural
01:58 - network that's well-suited for sequences
02:00 - trained model on a text so text from an
02:05 - author this in this case a rapper was
02:08 - used song lyrics were used the model was
02:11 - trained and then after that was
02:13 - completed that model was brought into
02:15 - javascript into the browser and can be
02:18 - interacted with generating new lyric so
02:19 - if you're interested in that you can
02:21 - check out the live stream from this
02:22 - morning we did have some technical
02:24 - difficulty a few times here and there so
02:27 - at some point I'll
02:28 - hopefully be producing an edited version
02:29 - of that it was it was actually only it
02:31 - was only 58 minutes my guess is the
02:33 - edited version will be like 35 or 40
02:35 - minutes or something like that and Rui
02:37 - in the chat are we read gamer who was
02:40 - watching me my other channel that I will
02:43 - not mention the secret laptop it's not
02:49 - so secret right here it is it's not that
02:53 - I want this laptop to be secret it's
02:55 - that it's just too many things blocking
02:57 - the way but alright but I'm on a mission
03:16 - here
03:17 - none of the last on Monday earlier this
03:21 - week here it is
03:24 - Mastodon trying again I spent two and a
03:27 - half hours creating a mastodon pot
03:30 - talking about what Mastodon is which is
03:32 - an open-source decentralized social
03:35 - networking platform I created my own
03:38 - instance called choo-choo dot space it's
03:41 - still there
03:43 - Kouji member of choo-choo dot space has
03:46 - posted this wonderful picture of a koala
03:48 - but okay we are totally using this
03:51 - fixture how do I get this image copy
03:55 - image address maybe yes okay thank you
03:58 - koji for somehow knowing that I could
04:01 - use an image of a koala koala let's put
04:03 - it on the desktop okay I don't know if
04:08 - we really gonna use this but I'm saving
04:10 - it for later and a Magikarp over here is
04:15 - talking about nice to see Schiffman talk
04:18 - about mastodon okay thank you all right
04:21 - so this is Mastodon and the instance
04:24 - that I'm using with my coding trained
04:26 - bot is Mastodon dot space bots and
04:32 - sometimes my the words keep coming out
04:35 - of my mouth but my brain completely shut
04:37 - off I bring a blue Lee shut off and
04:38 - words just kept coming because
04:40 - livestreaming and I feel like if I'd
04:41 - stop talking I'll be silenced but what
04:44 - would be the worst thing about silence
05:00 - all right that was good a little moan
05:02 - silence there I feel refreshed how do
05:05 - you feel I'm trying to decide if this
05:11 - makes sense to be a coding challenge
05:14 - like mastodons image bot processing
05:18 - image bot one things I love about this
05:19 - example that I'm going to do today is it
05:22 - brings so many things together brings
05:25 - together api's and node and javascript
05:29 - in asynchronous I'm gonna use a sink and
05:31 - a weight which is like es 8 JavaScript
05:33 - syntax and processing and creating
05:35 - images and shell scripting oh so many
05:39 - pieces together into one project the
05:40 - project that I'm going to build is a
05:42 - project that starts with a processing
05:44 - sketch let's see our recent this version
05:46 - of processing I have is three point four
05:51 - that's perfect starts with a processing
05:52 - sketch from node execute the processing
05:57 - sketch the processing sketch saves an
05:59 - image node grabs the image uploads it to
06:03 - mastodons media server then posts a tute
06:08 - to Macedon referencing the image so if
06:10 - we look at bots in space one of my
06:13 - favorite let's look at the local time
06:16 - line this is nice posting gifts but I
06:21 - really like the tree how do I find let's
06:26 - see if I search for tree bot I think I
06:30 - can actually just go to bots in space
06:31 - like if I want a cube storm oh it would
06:34 - be cubes oh interesting the URL for an
06:39 - account is its number so I can't simply
06:40 - just know the name of it but let me say
06:43 - tree bought at BOTS in that space will
06:46 - this find it for me here is the yeah
06:52 - there we go no I don't want to email it
06:57 - don't know how this here we go random
07:01 - trees oh no I can just do this so I can
07:03 - do this tree buck there we go no no
07:17 - Rann oh it is random trees it's random
07:19 - trees random trees I'm like a lunatic
07:25 - how long oh this is a different pot this
07:29 - is totally a different pot you're the
07:31 - one I was looking forward to fractal
07:32 - tree one nobody will tell me all right
07:39 - yes Mastodon again because it's not
07:40 - master that again it's so what do you
07:42 - what should this be a doesn't really
07:47 - matter I'm making the video I think that
07:50 - I like the idea of trying this as a
07:51 - coding challenge to Reba there's a
07:55 - different tree bot hold on how many BOTS
08:02 - could there be on BOTS in space just
08:04 - just humor me for a minute here like it
08:13 - posts free often the one that I'm
08:16 - thinking of all right I'm gonna give up
08:23 - in a second I like this one emoji DNA
08:27 - that's pretty awesome
08:36 - mutant emoji bot so it's kind of fun
08:39 - alright so here we go do I want to
08:44 - create a new bot just I think I'm gonna
08:47 - use the Prius so I think I'm gonna do
08:49 - this as a coding challenge but I am
08:50 - going to get myself who set up a little
08:53 - bit so what I need is to close these
08:56 - things then I need I turn open let's
09:02 - install the update
09:09 - okay I've got I term open we are going
09:14 - to go to the desktop
09:22 - mastodons and open this oops
09:27 - yeah we're going to get Mastodon bot to
09:31 - look at all this stuff in here Mastodon
09:33 - bot - and this is going to be Jo tree
09:39 - underscore bot thanks tree underscore
09:43 - bot thank you - Alka for finding that
09:45 - for me Mastodon bot 3 box in space at
09:50 - tree underscore bot yeah this is what I
09:54 - was looking for I want to make exactly
09:57 - this who created this are they going to
09:59 - mind a bot gendering tree is made by
10:03 - Alex Novi Soni okay by this person
10:09 - all right I'm gonna recreate this this
10:11 - is gonna be my coding challenge then
10:22 - close this I'm gonna be here I'm gonna
10:27 - close this I don't need this and then I
10:30 - need processing and I need this is gonna
10:36 - be long
10:37 - hmm I don't I don't I don't care I'm
10:42 - gonna do this the way that's gonna be
10:44 - right and then I need code Visual Studio
10:47 - code open and close these my son bought
10:57 - three oh boy oh boy I don't need any of
11:03 - these files that are extra stuff and
11:08 - everything else is fine and then
11:17 - I'm gonna start
11:28 - with this much code I'm gonna start with
11:33 - this much code so what I'm trying to
11:35 - decide is should I do this I mean this
11:39 - really doesn't matter because I want to
11:40 - just make this project here's what I'm
11:43 - gonna do I got an idea I'm going to act
11:47 - as if this is a coding challenge but I'm
11:49 - not going to say the words coding
11:51 - challenge I'm going to just do it as if
11:54 - it's a tutorial and then at the end if
12:00 - it feels like it could actually be one
12:02 - video coding challenge and it doesn't
12:04 - end up being multi-part tutorial then I
12:06 - will record a brief intro calling it a
12:08 - coding challenge how about that
12:10 - everybody wins
12:11 - you know I win I mean I'm I don't know
12:18 - all right we're gonna I check out this
12:22 - whiteboard thing over here don't think
12:25 - that I need note though ooh whoa Oh
12:31 - wrong oh there it is they do want to
12:35 - erase the whiteboard actually which I'm
12:36 - going to do very quickly with my fancy
12:39 - eraser mechanism if I could find it I
12:47 - can't find where it did it get thrown
12:50 - away my erasers I know you can't see me
12:52 - right now I don't want to be seen want
12:56 - to be seen looking for the eraser am I
12:58 - going to have to go in the hallway and
12:59 - get a paper towel the earth will be very
13:03 - sad I have a nice reusable eraser
13:07 - doohickey is completely Oh though here
13:11 - it is found it
13:19 - this is actually okay
13:33 - okay there we go now got a marker I am
13:46 - going to okay here we go
13:59 - everybody stretch stand up stretch with
14:02 - me I don't know if this is maybe some
14:04 - correct stretching thing all right so
14:13 - other things that I need open here are I
14:17 - need I need the mastodon API Docs and
14:28 - mastodons API Docs okay so these I will
14:35 - definitely probably need to reference
14:36 - I've got the tree bot I've got the
14:38 - coding train bot and I've got some code
14:44 - and let's just make sure like that
14:51 - that's something okay
14:59 - all right oh I got a notification I
15:06 - probably should turn those off all these
15:09 - people are following me look at
15:11 - everybody it's all of a sudden so much
15:13 - activity here okay okay let's I just
15:25 - want to do something here that's good
15:34 - I'm trying to figure out like if there's
15:36 - I just want to uh can I just get rid of
15:40 - this for a little bit play sound let's
15:41 - get rid of this please sounds I sound I
15:44 - actually can I clear notifications yes
15:47 - oh no but I turn them all off there's no
15:52 - way to just like turn them all off or
15:53 - have a done pin yes there we go I just
15:57 - don't want
15:58 - I'm afraid of random stuff appearing
16:00 - that other people are posting all right
16:03 - Oh Adam in the chat apologies so if you
16:15 - want to join Chuchu dot space I have I
16:18 - created an invite for members of YouTube
16:22 - channel and patrons but I'll have to get
16:25 - off to generate I didn't realize that it
16:27 - expired I'll generate a new one after
16:29 - this is over okay
16:32 - hello I'm going to make something in
16:35 - this video and what I'm going to make is
16:37 - a tree bot I love this bot it is a
16:41 - bought on Mastodon it is called tree
16:43 - underscore bot it is made by Alex novo C
16:48 - was made for nom nom omamo which just
16:52 - must be some like national BOTS making
16:54 - month national about making but when
16:56 - does that happen is it now cuz it we
16:58 - should all make BOTS for national BOTS
17:00 - making month so I am going to I love
17:03 - this bot it makes a tree
17:10 - this is my one start over if I pour
17:13 - guests I could get who come here to do a
17:15 - guest video I don't let them like they
17:17 - don't start over like 15 times like me
17:19 - as if I was doing this live hello in
17:24 - this video I'm going to make a bot and
17:26 - I'm going to make an image bot I'm very
17:27 - excited about this project because it
17:30 - pulls together a whole lot of different
17:31 - things I am going to use processing to
17:34 - generate an image I'm going to use node
17:37 - 2x2 call processing to generate the
17:39 - image I'm gonna use no to talk to an API
17:41 - and the API is mastodons so one thing
17:44 - you might want to do is I'll refer you
17:46 - to all of my tutorial series about the
17:49 - basics of making a mastadon bot I will
17:51 - start largely from scratch here but I am
17:53 - going I've already gotten my API keys
17:56 - and I already have imported and
17:58 - installed this node package called
17:59 - mastodons api and this dot env package
18:03 - that that loads my API keys for me so
18:07 - that is stuff that I've done in another
18:08 - video if you want to see that I'll link
18:10 - to that in the video description but I'm
18:11 - just gonna get started so what is the
18:13 - first thing that I want to do okay
18:14 - actually let's go to so this is my
18:16 - inspiration tree bot made by Alex
18:20 - Novosti for national bot making month
18:22 - and I am going to try to recreate this
18:26 - my trees won't be nearly as nice so the
18:29 - first thing I want to do is I want to
18:30 - use processing now I don't have to I
18:32 - could find some node package that does
18:33 - drawing or generates an image SVG
18:36 - whatever but I I love processing it's my
18:38 - happy place and I'm pretty sure I could
18:40 - get processing to generate a treat in
18:42 - fact I don't even have to like write the
18:45 - code for this because I have before so
18:47 - I'm just gonna go to examples right here
18:50 - somewhere topics simulate no no no okay
18:56 - I'll be back in a second oh yeah
19:01 - I'm back I found it under fractals in
19:05 - l-systems tree look recursive tree by
19:08 - daniel keith lon
19:11 - this is my this is a recursive tree and
19:14 - as i move the mouse it changes the angle
19:18 - so let's alter this code a little bit
19:20 - let's say that
19:23 - we don't care about a framerate and
19:25 - let's not let's have the angle be random
19:30 - between zero and 2pi oh and it's
19:33 - converting it to radians so okay between
19:35 - 0 and 360 oh and it's doing it over and
19:39 - over again and draw that's exciting
19:41 - I'm gonna say no loop so it's done each
19:45 - time I run this I get a random tree
19:48 - there's so much more that I could do to
19:49 - the design of the tree and I'm so
19:51 - tempted to recode the tree but I'm gonna
19:54 - just leave it as is you know maybe I
19:55 - want to like not have so many large
19:58 - angles and there we go beautiful tree
20:00 - okay so now now that I've done that what
20:04 - do I want
20:04 - I want my processing sketch to also save
20:08 - and I'm just call it tree dot PNG so
20:11 - when it's done drawing it's gonna save
20:13 - an image okay this is exciting now I
20:17 - need to save this somewhere well where
20:19 - I've got my Mastodon code right here to
20:23 - talk to the bot and so what I want to do
20:25 - actually is I prefer to talk to the bot
20:28 - I've got my math lab cook brain is
20:32 - turned off today stretch break water
20:40 - over here need to slow down yeah I made
20:48 - the tree in p5 also in a coding
20:49 - challenge I've got my code here this is
20:53 - the code that will talk to the mastodons
20:54 - service and what I want is for this code
20:57 - to actually run a processing sketch but
20:59 - this is node this is JavaScript
21:01 - processing is Java and it's like a
21:03 - desktop environment where I hit the play
21:06 - button how can I possibly do this well
21:08 - the first thing I'm gonna do is actually
21:09 - go and save this processing sketch in
21:12 - where my bot is and I'm actually working
21:15 - in this folder mastodons bot 3 you can
21:17 - see the no modules bot touch is so I'm
21:19 - gonna save it there and I'm gonna call
21:20 - it tree at regen so I'm gonna save it
21:24 - tree Jen I'm gonna make sure it still
21:27 - runs it still runs and now what I'm
21:31 - gonna do I'm gonna show you a little
21:32 - trick now wouldn't it be nice if in
21:35 - the in terminal I could do things like
21:37 - just say hey run processing but says
21:41 - processing is not found what if I were
21:42 - to say processing - Java permission
21:45 - denied it's different
21:47 - how interesting right I was gonna do
21:54 - that wouldn't it be nice if I could just
21:56 - execute a command like processing run of
22:00 - course in terminal and the shells are
22:02 - gonna know what that is but a little
22:04 - known fact about processing which I have
22:06 - done this in other videos before but
22:08 - just to start anew again processing
22:12 - command line there is actually a way to
22:16 - run a processing sketch command line by
22:19 - saying processing - Java the path of the
22:21 - sketch and then - - run but the only way
22:25 - you can do that is by installing first
22:27 - processing java to your system so this
22:30 - is installing a command line command to
22:36 - run a processing sketch so I'm gonna do
22:38 - this install processing Java I'm gonna
22:39 - say yes for all users it's going to want
22:43 - to use my password I'm gonna enter my
22:47 - password because it needs it needs to be
22:50 - able to put that where it needs to go
22:52 - and now I can actually say processing -
22:54 - Java and you can see I get all sorts of
22:56 - stuff it doesn't know what I want to do
22:58 - but watch this I can say let me just
23:01 - look in here there is the tree Jen
23:03 - processing sketch so I can say
23:05 - processing - Java sketch equals is that
23:10 - what it was let's go look at the sketch
23:12 - equals now I need the full path so the
23:16 - full path and I'm gonna show you a way
23:17 - around this in a second is this tree Jen
23:21 - right this is the full path of that
23:23 - processing sketch then I could say - -
23:25 - run here we go magic it ran it look
23:30 - there's the processing sketch this is
23:32 - really cool now watch what's exciting
23:34 - about this and it's bothering me that
23:35 - the the background isn't 51 which is
23:38 - very important I can actually quit
23:40 - processing completely I don't need that
23:42 - processing open and still do this
23:46 - there's my tree beautiful ah but I catch
23:49 - - one half process ago because I've got
23:50 - a little bit of a problem here and we
23:52 - can see here look that image is there
23:55 - it's now saved what I want to do is go
23:58 - back and open this again open open open
24:02 - open open and I want to add one thing
24:04 - like I want it to be I want it to go
24:07 - away
24:07 - so I actually want to say after I save
24:10 - it exit and I'm also this is going to be
24:13 - helpful for me later I want to say print
24:14 - line tree generated you'll see where
24:17 - this comes up later okay now quit
24:20 - processing and now I'm gonna run this Oh
24:26 - finished regenerated finished one more
24:29 - time finished okay this is really
24:34 - exciting because there's so much stuff
24:35 - you could do now here's the thing I am
24:37 - executing this command via the shell but
24:42 - I want node to execute it how can I
24:45 - execute it in node and it turns out
24:47 - there is a way to execute any generic
24:50 - shell command from node and it is with
24:53 - the child process package so if I go to
24:57 - child process you'll see here that there
25:00 - is a method called exec child process
25:05 - exact spawns a shell and runs a command
25:07 - within that shell truth of the matter is
25:10 - I might be useful to use this exact sink
25:13 - because I'm gonna want to sink me in
25:14 - synchronous meeting wait until it's done
25:17 - to go onto the next thing I've got a
25:19 - crazy plan here I want to do
25:21 - asynchronous stuff with es8 this wait
25:23 - and async function you may or may not
25:24 - have heard about so I'm gonna use this
25:27 - one exec so what I need to do is in my
25:30 - node code I need to say Const exec
25:33 - equals require and where was this it is
25:36 - in child process exec child underscore
25:39 - process no there's no yeah that's right
25:43 - huh Oh dot exec yes I'm confused so this
25:46 - is me requiring the child process
25:48 - package and I don't have to npm install
25:50 - this you'll know you'll notice that I'm
25:53 - on the nodejs documentation page I'm not
25:55 - in some separate third-party NPM package
25:58 - this is built into node but just like
26:00 - filesystem is but I've got to say
26:03 - to use it so require child process and
26:05 - all I want is that exact function so now
26:07 - there's no reason why I can't just say
26:09 - exec and then pass in what exactly this
26:13 - oh let me make this is so unwieldy so a
26:16 - nice little trick that I can do is I can
26:18 - actually always get the current path
26:23 - right if I want to get the current path
26:25 - I just type PWD print working directory
26:28 - well guess what I can actually have PWD
26:32 - executed within this command by using
26:35 - these back ticks I'm pretty sure this is
26:37 - how I do it
26:38 - so now I'd say run and I think I don't
26:42 - actually even need this first slash
26:43 - write run sketch equals print working
26:47 - directory vent regen run let's see if
26:49 - this works this is done okay so now so
26:56 - great so I can grab this this is my
26:58 - command we're gonna get to that the
27:01 - mastodons stuff in a second uh constant
27:04 - command equals let's just put this in a
27:07 - variable like this then I can say exec
27:09 - command and then that's gonna have a
27:12 - call back oh I don't want the let me
27:14 - just run this let's just run this let's
27:16 - see what happens no bot Jas Hey look
27:23 - what happened it made it happen now
27:24 - here's the thing I was the next thing I
27:26 - was gonna do is that a call back but I'm
27:28 - a new I'm not turning over a new leaf
27:30 - I'm turning a new page in the book of
27:32 - JavaScript and I I'm a kind of person
27:36 - who uses promises and not only a kind of
27:38 - uses a person uses promises I even use
27:40 - the async and await keyword to really
27:43 - make my life full of just ease it's not
27:50 - full of ease but I'm doing my best
27:52 - so what does that mean the thing is this
27:54 - particular node package to child process
27:56 - exec and I have a feeling if I bother to
27:58 - look at the chat which I'm gonna open up
28:01 - for a second someone's gonna tell me I
28:04 - could just use something else now that
28:05 - natively supports promises the e key
28:08 - does not work on this computer which is
28:10 - invisible to you oh it's the run I've
28:13 - been typing in the wrong password okay
28:15 - there it is
28:18 - Oh being told that nodejs has underscore
28:22 - directoryname so there are other ways
28:23 - people tell me otherwise I could get the
28:24 - directory name but what I'm going to do
28:27 - is I'm I'm going to promise a Phi which
28:31 - is a word apparently promise if I I'm
28:35 - going to probably look at this I must
28:37 - have googled this another time Felicity
28:39 - is very common by using Java not Java
28:43 - sorry the node package util so a node
28:46 - package util if I go look at util and I
28:51 - actually just want to be here there is a
28:54 - promise if I util dot promise if I so
29:00 - what I can actually do is I can say
29:02 - Const util equals require util and then
29:07 - I can say util dot promise if I with a
29:11 - weird word I don't know what happens if
29:14 - I promise if I myself this so now this
29:18 - require child process exact function no
29:22 - longer uses a callback now uses a
29:24 - promise and what does that mean that
29:26 - means I can say dot then and whatever
29:29 - the result the response is I can
29:33 - console.log that response and then I can
29:39 - also catch any error and I can console
29:42 - dot error that error now this might be
29:45 - and this this there's no semicolon there
29:47 - there's a semicolon there this might
29:50 - look completely insane to you if you
29:52 - haven't seen promises used before in
29:55 - JavaScript it's very similar to a
29:57 - callback but instead of saying a
30:00 - callback I basically have this callback
30:01 - that happens in dot then I'm also using
30:03 - the arrow syntax the arrow syntax is a
30:06 - nice way of sort of short handing this
30:08 - I'm getting the response as the argument
30:10 - to the callback and I'm console logging
30:12 - it so if you want to know more about
30:14 - those things I have a whole playlist
30:15 - about promises and a and a video about
30:18 - the arrow function that you could go and
30:19 - look at but this is the basic idea this
30:21 - is a little bit of an advanced video
30:23 - here with or not advanced but just I'm
30:25 - using
30:25 - kind of modern JavaScript stuff if you
30:27 - consider like three years ago modern
30:28 - okay so now I've got this exact function
30:32 - so let's actually run this one more time
30:35 - and see it should do exactly the same
30:38 - thing but look at this that response has
30:42 - standard out standard error so in other
30:45 - words standard out is what that's the
30:47 - thing that in prop I closed my
30:49 - processing sketch I guess I should have
30:50 - left it open the processing sketch has a
30:52 - print line in it so I can read whatever
30:54 - that print line is so I can actually get
30:55 - more information from processing if I
30:57 - want for example I could get the angle
31:00 - actually this this is great let's add a
31:01 - little feature to this this will be fun
31:03 - cuz why not make this video longer than
31:05 - it already is where my desktop desktop
31:09 - Mastodon Mastodon bought three tree Jen
31:13 - so what I'm gonna do here look at this
31:15 - this is great let's leave this open
31:19 - because maybe I'm gonna want to do more
31:21 - stuff with it I am going to let's just
31:24 - make the angle between 0 and 90 that's
31:26 - what those in the comments and then I'm
31:28 - also gonna say print line and I'm just
31:30 - gonna say angle or is it was it angle
31:33 - theta whatever a I'll just keep the a a
31:35 - and I'm gonna say floor a so just get
31:38 - the just get the or int am just to
31:41 - convert it to an integer so watch so now
31:44 - when I do this in in node I'm gonna say
31:50 - console dot log response dot standard
31:53 - out so I don't need to see that whole
31:55 - object I just want to see the stuff that
31:57 - came out of processing let's run it one
32:00 - more time because it that was the angle
32:04 - 42 spooky spooky 42 beating of life okay
32:08 - so great so here's the thing I want to
32:14 - once I have that image I want to post
32:16 - that image to Macedon isn't this all
32:17 - about Mastodon I've loaded up and can
32:20 - connect it to Mastodon through this like
32:22 - bot if you don't know what Mastodon is
32:24 - did I say this already I've got a whole
32:26 - set of videos describing that I'm gonna
32:27 - could go back and look but I want to
32:30 - somehow post it to this particular bot
32:32 - the coding train but ok so now in order
32:37 - to do that I
32:38 - - I need to look up the functions in the
32:40 - mastodons API so I'm using this
32:42 - mastodons API node package and if I go
32:46 - here I can look and see that it has a
32:50 - mastadon get mastodons post so this is
32:53 - what I want mass on a post here's the
32:55 - thing I didn't realize this when I made
32:56 - my other videos about Mastodon because
32:58 - it says path parameters and callback but
33:02 - guess what this supports promises so I
33:05 - actually got to do this without a
33:06 - callback with promises I'm going to
33:10 - break this out and didn't I say I was
33:12 - gonna use a sink in a wait it's gonna
33:14 - write it with just that but I think I
33:15 - have to start a little bit I have to go
33:18 - a little bit further with the full
33:20 - promise of syntax then I'm gonna clean
33:22 - it up with a sink and a wait in a second
33:23 - so now there's no semicolon there so now
33:27 - what I want to do is I want to basically
33:29 - say this I want to post the image and I
33:34 - want to return this as if this returns a
33:39 - promise guess what I get to do I get to
33:42 - say dot then response and have another
33:46 - function right so this is the idea of
33:48 - chaining promises and this is what in
33:50 - theory I mean basically if the whole
33:52 - theory of this is to avoid callback hell
33:54 - and really we just did promises well
33:56 - it's all hell but eventually we will
33:59 - float into the clouds and feel like
34:02 - we're like butterflies on wings or
34:04 - something I don't know okay so if I
34:06 - returned the post that I want to do when
34:09 - that's done so I'm executing this
34:11 - command when that's done then do this
34:13 - that and then when the next promises
34:16 - done then do this we're all right so
34:18 - what do I need here the path so the
34:20 - first thing I need to know what's weird
34:21 - about and actually it might be worth
34:23 - just taking a minute to like write the
34:26 - steps out because it'll make it more
34:27 - clear I want to exact processing that's
34:32 - one then two I want to upload image and
34:38 - then three I want to toot alright so
34:43 - what this is the same thing for to the
34:45 - Twitter API it doesn't work that you
34:47 - just if you want to tweet an image you
34:49 - don't just simply send your tweet
34:52 - with the image you have to first upload
34:54 - the media get that path to the media and
34:56 - then you can tweet with that media
34:59 - reference so this will actually return
35:01 - an ID for the media and then as long as
35:04 - I attach the ID to this so this creates
35:08 - output dot PNG this creates an ID and
35:13 - then use that ID here and then I'm done
35:16 - then we're just like done this is the
35:18 - three-step process each one of these
35:20 - returns a promise so when do this then
35:23 - this then that alright that's the
35:25 - process I'm working with here alright so
35:29 - now so okay so the path so let's go to
35:34 - the mastodons API Docs and I'm actually
35:37 - looking for a media so we can click here
35:40 - and this is what I this is what I wanna
35:41 - do I don't media upload I think media
35:43 - uploads just this I post to here and
35:45 - then these are the things I need to send
35:48 - okay so file description focus let's
35:51 - look at that okay so I need to I'm gonna
35:54 - create some parameters oh no I'm up here
35:58 - I'm just gonna I'm gonna create some
36:00 - parameters and I need the file which is
36:03 - presumably output PNG and this is not
36:05 - exactly right yet I can't just put the
36:08 - file name there but I'll get to that in
36:09 - a second then I want the description now
36:12 - the description is really important this
36:13 - is not the text that is going along with
36:16 - the actual post what this is is alt text
36:19 - alternative text this is for
36:21 - accessibility so somebody who is blind
36:23 - or with low vision was using a screen
36:25 - reader instead of seeing this image
36:26 - would actually hear this description so
36:29 - I would say a randomly generated fractal
36:33 - tree oh and I want to get this is I'm
36:38 - gonna say Const angle equals response
36:42 - dot standard out with and then oh and I
36:50 - need to use my the new thing that I
36:52 - always use now which is template
36:55 - literals for Strings with angle so this
36:57 - would be the description and then
37:01 - there's one other
37:05 - so the file is required the description
37:07 - it says is optional but it really
37:08 - shouldn't be optional you should be
37:10 - using alt tax for accessibility and then
37:12 - a focus this really is optional I am
37:14 - assume you actually have not tried this
37:15 - yet but I'm assuming this has to do with
37:17 - where the crop is if it's showing a
37:19 - preview image something like that okay
37:21 - so then I can say so this is done and
37:27 - then we're path and then those
37:30 - parameters because this could be an
37:32 - array o path no but okay path oh yeah
37:36 - the path is media sorry I'm posting to
37:39 - this path the media path of the API with
37:42 - these parameters but this isn't right
37:44 - this I mean let's run this we'll get an
37:45 - error so I make the image finished
37:51 - params is not defined so that's a
37:53 - different error per an params whatever
37:58 - one more time run the bot weirdly it's
38:03 - like didn't complain at me oh but oh you
38:10 - I didn't mean to complain because I
38:13 - didn't console.log this response I know
38:18 - why I'm going crazy to show you this
38:19 - error when I could just fix the error in
38:21 - the first place all right so all this
38:23 - stuff came in and I looks like maybe
38:26 - this worked because I'm getting all this
38:28 - stuff but somewhere up here I'm gonna
38:29 - see like an error code oh so much stuff
38:34 - false high watermark I don't know this
38:36 - seems to have worked no this is nonsense
38:39 - this is saying this page is not correct
38:41 - let me go back
38:43 - but this doesn't this doesn't need I get
38:46 - it edit this out cuz it's not that you
38:51 - just go back to here
38:58 - so this is almost done but there's a
39:00 - problem
39:01 - I can't just pass it the file name this
39:04 - actually needs to be a readable stream
39:06 - and so I need to use the files file
39:09 - system package if I go and look for an
39:11 - ode file system package and in here
39:15 - somewhere I think there's like a create
39:16 - stream function and actually probably a
39:20 - better place for me to look is just
39:21 - right here in hold on I don't have to do
39:31 - this again
39:39 - hmm there's some stuff going on oh I
39:46 - didn't I didn't look into that no sorry
39:50 - sorry I forgot what it is create read
40:01 - stream yeah if that's what I want to
40:04 - think okay I'm pretty sure that's what I
40:05 - want okay sorry let me go back and do
40:08 - this one more time Thank You mats yeah
40:11 - all right
40:14 - so almost there but this actually isn't
40:17 - correct it doesn't work the API is not
40:19 - gonna just accept a string of the
40:21 - filename and figure out how to like read
40:23 - that file and post all the date of that
40:26 - file to the server what I actually need
40:28 - to do is give it a readable stream and
40:30 - if I and so the code for doing that it's
40:32 - part of the file system package so I
40:34 - need to I need to actually also require
40:37 - that and we could look up the
40:38 - documentation for it
40:40 - but I happen to know it I think so I
40:43 - need to say I'm gonna say constant
40:46 - stream equals file system create there
40:49 - it is read stream autocomplete thank you
40:52 - output PNG oh and this actually isn't
40:55 - even right because guess what remember
40:58 - output that PNG was saved in the
41:01 - processing sketch which is the folder
41:03 - tree gen slash output dot PNG so now
41:05 - this is the stream and this is the
41:10 - description that goes with it
41:12 - okay and then I want to make sure this
41:13 - worked so I want to actually console.log
41:16 - the response so now in theory I have the
41:20 - code all the way for executing
41:22 - processing uploading the image I need to
41:25 - want to get the response I need to get
41:27 - the ID and then I go and actually just
41:28 - post the status okay here we go let's
41:31 - try this unhandled stream error in pipe
41:40 - no such foul path no such foul no such
41:44 - file oh it's not called output dot PNG I
41:46 - called a tree dot PNG okay let's try
41:51 - that again
41:53 - finished and great so look this is all
41:55 - the stuff that I got back now it's kind
41:57 - of too much stuff for me to like look
41:58 - through oh what a pain did this actually
42:01 - work my goodness
42:03 - craziest but this is all I care about
42:05 - there's more important stuff there's
42:07 - more stuff lots of tons of metadata
42:09 - about the image you just uploaded but
42:11 - all I really need is data ID so let me
42:14 - just go here and say console.log
42:16 - response data ID and I've apologized
42:21 - apologies to the bots and dot space for
42:23 - overloading your server and you can see
42:25 - there's the ID okay now guess what oh
42:29 - can I should I start using I'm gonna
42:31 - just keep going why not go with this
42:33 - promise chain this is how I would do it
42:36 - probably then Oh No and then all I need
42:40 - to do is return a one more promise
42:43 - so I'm also gonna say constant
42:44 - parameters now I want to do I need to
42:47 - look at the API for for what post but
42:52 - just statuses so this is where as I'm
42:58 - looking looking looking looking looking
43:01 - actually I need to look for API v1
43:04 - statuses sorry oh I failed do what maybe
43:11 - I want to maybe I should like actually
43:14 - now rewrite this using async and await
43:17 - I'm gonna do that I'm gonna do that I'm
43:22 - gonna do that I'm gonna do that I'm
43:28 - gonna go from where I printed this out
43:33 - now the next step would be for to use
43:36 - this ID and then actually in the in the
43:40 - in this response right I exec the I
43:43 - execute the command I upload the image
43:46 - and then I should be saying return MDOT
43:49 - post again and I'm going to statuses
43:58 - I should say returned MDOT post again
44:07 - and I'm going to the path I'm going to
44:10 - his statuses so this is what I should be
44:14 - doing but I can't resist do you see how
44:18 - this is I mean it's great
44:19 - I kinda it's kind of nice start the
44:21 - promise chain then do this return a new
44:24 - promise then do this return a new
44:25 - promise and if any error happens
44:27 - anywhere any here catch so why not but
44:30 - this is the thing this is now there is a
44:33 - way there is a new way for me to write
44:36 - all of this in what feels more
44:39 - sequential more synchronous in fact and
44:42 - with less kind of indentation and
44:45 - brackets and stuff and that is using
44:46 - this async and await syntax so what I'm
44:48 - actually going to do is I'm going to
44:50 - write a function I'm going to call it
44:53 - tutor or just toot and I'm going to
44:57 - modify this function with the keyword
45:00 - async this means this is an asynchronous
45:02 - function this is indicating to
45:04 - JavaScript this is a feature of es 8 a
45:06 - new feature of JavaScript that's
45:08 - indicating that this function will be
45:10 - handled asynchronously and always always
45:12 - always return a promise and it will auto
45:16 - magically it'll basically automatically
45:18 - return that promise so we'll look at
45:19 - that later how does that so in other
45:22 - words but this I want to do the same
45:23 - thing like what I want to do here is I
45:25 - want to say exact execute the command
45:27 - alright these are the steps and then I
45:29 - want to say post a media post the media
45:34 - the nice thing about using this syntax
45:36 - is I don't have to separate it out with
45:39 - these chaining these dot vens I can
45:42 - actually just use the await keyword what
45:45 - the await keyword means is don't go to
45:48 - the next line of code oh wait the end of
45:52 - this function so if I have a bunch of
45:53 - asynchronous things if I package them
45:56 - all together in an asynchronous function
45:58 - I can write them sequentially as line
46:00 - after line after line and essentially
46:05 - and you know I'm gonna have some other
46:08 - params here
46:10 - so this is basically I get to write it
46:12 - like this now I need to do stuff in
46:13 - between that's the thing like for
46:14 - example this returns a response and then
46:18 - what I want to do is get the angle and
46:20 - create the stream so this goes here so
46:23 - this is my step one this is my step one
46:39 - write execute processing look at it just
46:44 - exactly like this now I have my step two
46:46 - where I need to create these parameters
46:51 - that are getting passed in and by the
46:53 - way I don't have to make a separate
46:54 - variable it could be embedded right in
46:56 - here but it's just sort of like a little
46:57 - bit for legibility I'm making it
47:00 - something separate and so I'm now gonna
47:01 - say basically step two is upload upload
47:09 - upload media and that's gonna have a
47:14 - response and then what do I need I need
47:18 - to get the ID out of that and then I am
47:22 - now going to say step three and by the
47:28 - way I suppose if I'm being accurate
47:30 - about this this is all I suppose this is
47:35 - part of step two I don't know it doesn't
47:36 - this is a little bit silly what I'm
47:38 - getting myself worked up about but which
47:40 - line of code is part of which step I
47:41 - don't know but up but step three and
47:44 - maybe I'll name this params one just to
47:47 - be just four I don't know why why not
47:51 - have them have different variable names
47:52 - then step three which is params - I want
47:58 - the status to be and this is you know
48:04 - I'd have to I think I know it's supposed
48:05 - to be but behold my beautiful tree with
48:12 - angle and then I should use the string
48:16 - litter the template literals again
48:20 - degrees
48:23 - and then I need ah so now so this room
48:27 - okay what let me look this up in the in
48:31 - the mastodons API Doc's give me a second
48:34 - to find this let's edit out me looking
48:36 - for it
48:39 - API v1 v1 statuses statuses jeez Louise
48:54 - there's got to be a better way to search
48:56 - on this oh it was all the way at the end
49:01 - here it is okay I found it this is the
49:08 - API this is the path statuses for
49:11 - posting a status and I'm this is the
49:13 - text of the status there are other
49:14 - things you could do here that I've
49:15 - talked about in previous videos but this
49:18 - is what I want media IDs now notice this
49:20 - is an array it's an array of media IDs
49:23 - because a particular status could have
49:25 - and it says here maximum for more than
49:27 - one image associated with it so you can
49:29 - upload more than one image so that might
49:31 - be an exercise that you try to do after
49:33 - this video but basically now I can say
49:37 - comma media underscore IDs and I just
49:41 - have that one ID so I just put make I
49:43 - can make an array in it there and then
49:45 - this has to be statuses params and then
49:49 - what I can do is I can and this is the
49:52 - response and I can just now say return
49:56 - response so if we could look at this all
50:02 - together I think you have to make this
50:03 - like a tiny bit smaller for you to see
50:05 - it can I fit it all in one nice place
50:08 - look at this look how beautiful this is
50:10 - it's almost like I've written this code
50:12 - in a language like Java or C that's like
50:16 - perfectly synchronous and linear and
50:18 - procedural because what I'm saying is a
50:20 - weight executing this command then do
50:25 - some stuff then await uploading the
50:26 - media and do some other stuff then a
50:29 - weight posting the actual status and
50:31 - when you're done return and guess what
50:33 - if I now say we may
50:35 - it's bigger again whoops if I say toot
50:38 - guess what this tooth function that I've
50:42 - written async remember I said it
50:43 - natively returns a promise well by the
50:46 - way I said return right down here so
50:48 - this thing right there is the promise
50:51 - it's returning and I actually might I
50:54 - could configure my own object which
50:56 - could be kind of interesting like what
50:57 - if I said return I I could just say
51:01 - something like success true and status
51:07 - [Music]
51:09 - stat status behold my beautiful tree
51:12 - whatever and I could just say angle
51:14 - whatever I could put like angle and then
51:16 - that angle there so I could actually
51:18 - configure an object and I could pull
51:20 - stuff out of the response there I could
51:22 - return that and then I would say then
51:25 - [Music]
51:26 - then response I can't spell today I mean
51:30 - I can never spell console dot log that
51:34 - response catch any error console dot
51:39 - error error and this needs a period here
51:44 - and I hit save and something's wrong too
51:47 - many not enough too many dots mmm two
51:53 - dot then response why can I can't see
51:56 - this oh there's too many dots too many
52:01 - dots votes are too many dots still too
52:04 - many dots toot then toot then response
52:15 - console.log response is it just not Auto
52:17 - formatting it
52:21 - no it's Auto for attitude and response
52:25 - console.log response dot catch Oh may I
52:29 - need a semicolon no then catch put a
52:35 - look at the chat yeah I know I should
52:37 - wrap things in a
52:43 - I can't get the password it's computer
52:49 - to work the dot goes on the next line
52:54 - oh that's what it is oops yes okay
53:00 - it's not too many was too many dots but
53:03 - I fixed that the issue is the dot goes
53:05 - on the next line that's the convention
53:07 - that's what it's looking for there now
53:08 - it's four rather than what that wanted
53:09 - to be so I still have to engage oh boy
53:12 - with this idea of a promise but I can I
53:16 - can basically wrap that all into this
53:18 - one asynchronous function and I just be
53:20 - able to chatter telling me I can
53:21 - actually I don't need to do the then and
53:23 - catch in this way because I could
53:24 - actually put a try and catch inside of
53:26 - here one step at a time I think I might
53:29 - be done all right let's see let's see
53:34 - what happens okay no response away oh so
53:40 - I have also reused so I should call this
53:42 - response one response to maybe there's a
53:46 - more thoughtful way of doing this
53:47 - response three and I didn't actually use
53:50 - the response but whatever
53:54 - there we go start the bot make the image
53:57 - the angle 72 finished params is not
53:59 - defined it was so close uh params one
54:05 - params two params to here and I think
54:10 - Graham's one there all right
54:15 - [Music]
54:17 - I'm feeling pretty confident a success
54:24 - angle is 56 flash finished that's a
54:31 - little weird
54:31 - but let's see here let's go to the bot
54:33 - look behold my beautiful tree with angle
54:36 - 56 finished degrees okay so there's a
54:40 - little bit of awkwardness there in that
54:41 - the standard out is just always giving
54:45 - me the word finished so because I would
54:48 - like this to work work without that I
54:51 - think I'm guess what I'm gonna have to
54:53 - do is that is that just something that
54:55 - happens like with processing Java
55:00 - because I didn't write finished anywhere
55:03 - in here right that's not a print line I
55:06 - put in here so I think what I could do
55:08 - is when that comes the standard outcomes
55:13 - I could say response I mean I could just
55:18 - do a substring I could do a regular
55:20 - expression so many things so many things
55:22 - I could do
55:23 - why don't I split it out equals response
55:30 - response standard out split and I could
55:33 - just split it by the line break right
55:37 - cuz finish comes after the line break
55:38 - and then what's and then I could just
55:43 - take the first one
55:44 - so this split is a function that takes a
55:45 - string and splits it up into chunks
55:47 - based on a delimiter and you can get
55:49 - really fancy with that but I think and
55:51 - then this should just be out without the
55:55 - caps lock I mean I should really test
55:57 - this so what is that visible on the
56:03 - street a little bit of spittle just
56:06 - projected out of my mouth I got
56:07 - overexcited well edit that part out
56:11 - perhaps I mean I really should probably
56:15 - test this but I'm gonna have to just
56:17 - rely on the fact that I think I wrote
56:19 - that code correctly that's my way of
56:21 - testing it let's run this one more time
56:24 - [Music]
56:26 - undefined true angle 55 what's that
56:28 - undefined there I liked seeing that oh
56:32 - there we go
56:36 - behold my beautiful tree with angle 55
56:40 - degrees what was undefined
56:44 - what did i console.log in an undefined
56:47 - way console.log response standard out is
56:52 - that it no no that's ten finished wait
56:58 - if it was ten why did this become fifty
57:00 - five I'm so confused
57:04 - let's be a little more methodical here
57:06 - oh because huh Oh what am I looking at
57:12 - oh I kid ah it does it twice
57:14 - I didn't happening twice let's take that
57:17 - out apologies everybody this thing is
57:20 - happening twice because I had the old
57:22 - code in there I mean I'm just gonna
57:24 - delete that throw caution to the wind
57:26 - but a little mess here okay that's weird
57:29 - that I did that twice I'm so confused
57:33 - okay
57:37 - angle 74 just did it once there we go
57:46 - okay one more thing that I need to do
57:48 - just so this becomes a true bot is what
57:52 - I want to do is I want to say set
57:54 - interval and have it do this thing that
58:00 - it just did there every well let's have
58:04 - it do it every five sec ten seconds
58:06 - right now I don't want it to do it every
58:09 - ten seconds but just to boy I guess
58:15 - there's another another parenthesis
58:16 - there there we go no this is so hard
58:19 - maybe I should just write a separate
58:23 - function okay set interval then I put
58:25 - the function which is this which calls
58:27 - to which is this which does this every
58:30 - 10,000 seconds this is not right
58:33 - okay well look at this what a mess I
58:36 - mean if I was doing it without the arrow
58:39 - syntax it would look like this right and
58:42 - then this would go here no no that goes
58:45 - first
58:45 - ah right that's close what's wrong here
58:55 - this is opening the function that's
58:57 - closing it no there's no parenthesis
58:59 - there that's the end of the function
59:02 - then this then this we're good we're
59:05 - good this is it oh but look how we I
59:07 - hate I don't like this at all
59:09 - this is making me crazy I'm gonna do I'm
59:12 - gonna do this
59:13 - I mean it's so silly function tutor and
59:15 - then I'm gonna put this is like I'm a
59:18 - ridiculous person I'm gonna put this in
59:21 - Oh No Oh help me help help I'm gonna get
59:24 - this and I put this and then I'm just
59:27 - gonna name my function forget about this
59:29 - anonymous stuff this is what I want
59:32 - right I have a separate function which
59:35 - calls my asynchronous function does the
59:37 - vent in the catch and then I'm gonna
59:39 - have that happen every 10 seconds okay
59:43 - by the way someone in the chat a k1 and
59:46 - G Julian is asking would it be possible
59:48 - to ask the bot to create a tree with
59:49 - this
59:50 - that's right angle yes and that is where
59:52 - I'm gonna do any follow-up tutorials
59:54 - you'll see that in the next one okay
59:56 - here we go
60:02 - and we have a tree oh right it's gonna
60:07 - wait so one thing about set interval
60:09 - want long which is that I mean it works
60:14 - okay I'll just keep going now set
60:16 - interval will not execute that function
60:18 - immediately it will wait 10 it'll wait
60:20 - the amount of time before doing it the
60:21 - first time but now we did it twice every
60:24 - 10 seconds first one was angle 44 and
60:27 - the second was angle 28 let's let's wick
60:30 - away 10 so you can watch this video for
60:31 - 10 more seconds we can also speed this
60:33 - up now let it happen like 4 or 5 times
60:35 - but I think that's good so let's just go
60:37 - and check here and we can see 83 degrees
60:41 - 28:44 there we go and 44 28 83 44 28 83
60:48 - wonderful ok so this is working you know
60:52 - now of course I don't want to leave it
60:54 - like this right having a bot post every
60:57 - 10 seconds no one wants to follow a bot
60:59 - that post every 10 seconds maybe I
61:00 - wanted to just once a day it's gonna do
61:02 - maybe once an hour might be the maximum
61:05 - the most I would do but let's just let's
61:07 - if I want to do it once a day it would
61:08 - be 24 hours times 60 set 60 minutes
61:11 - there's 60 seconds in a minute and a
61:14 - thousand milliseconds in a second so
61:17 - this would now be but I wouldn't want it
61:20 - to wait a whole day so I probably want
61:23 - to call it once so I'll call it once
61:24 - then set the interval and I'm sure
61:26 - there's a more elegant way to do that
61:28 - that all of you will someday will write
61:30 - in the comments and here we go and node
61:35 - bah bah bah yes here we go it's just the
61:39 - first one and then now we're going to
61:41 - wait here room 24 we're gonna wait 24
61:42 - hours oh wait yes we'll wait and then in
61:46 - 24 hours I'll still be standing here ok
61:49 - I could take the go home have dinner go
61:52 - to sleep come back this laptop would
61:54 - still be here and it would do the next
61:55 - one we're just gonna have to believe
61:56 - that that's gonna happen again there is
61:59 - a question of like well where would I
62:00 - actually want to deploy this I've got to
62:01 - talk about that
62:03 - video but just the quick answer is
62:04 - you're gonna want to find a server maybe
62:07 - you have one through a hosting company
62:09 - maybe you happen to have like a computer
62:11 - that's always on in your home or
62:12 - Raspberry Pi that can act as a server
62:14 - but you need somewhere where you can
62:15 - just let it run over and over again
62:17 - forever okay so thanks for watching this
62:20 - video
62:20 - making a mastadon image bot and what I'm
62:24 - going to do I want to do one more
62:26 - tutorial because what how would you do
62:29 - it so that if someone at mentions the
62:32 - bot let's say with an angle then the bot
62:35 - replies back with a tree with that angle
62:37 - let's see if we can make that work
62:39 - that's gonna be fun
62:40 - okay see you in the next video okay okay
62:53 - so Nathan asks a really good question
62:56 - about deploying wooden processing
62:58 - starting as a desktop app prevent the
63:01 - bots from working so I've actually
63:02 - covered this in prequel in my previous
63:04 - Twitter bot series yes but no so it
63:09 - needs a windowing environment for
63:11 - processing to run so that's gonna work
63:13 - on this laptop on a Raspberry Pi if you
63:15 - have a headless server like you know I'm
63:17 - running this instance off digitalocean
63:19 - so I could deploy the bot there I would
63:21 - have to run a bunch of commands to not
63:25 - to trick it I was gonna say but to you
63:27 - and I have this documented with for
63:31 - Twitter BOTS and I want to rewrite all
63:33 - anyone's to help me rewrite all these
63:34 - pages or basically do I intend to make
63:37 - an entire new version of this page with
63:40 - mastodons but I just I don't have the
63:42 - time to write this up but I think in
63:44 - here deploy bought to Amazon ec2 which
63:50 - is actually admittedly probably the
63:52 - hardest ways to deploy hits so but here
63:55 - somewhere in here I have the
63:56 - instructions for yeah so this you need
64:00 - to make sure that the server has Java
64:03 - and you can install Java that way then
64:06 - you need to do this weird stuff that
64:08 - creates a fake display for processing to
64:11 - render on and then you need to also like
64:14 - always run that to
64:15 - in the background and once you've done
64:17 - this it works so I have tested this not
64:20 - in a year but it does work yes I mean
64:24 - the stream is not over it is 510 hmm but
64:29 - I definitely want to fit this is going
64:30 - to be the end of the Mastodon bought
64:32 - stuff I'm just coming over here to look
64:33 - I have a bunch of messages okay oh and
64:43 - apparently I got a new a new member
64:45 - thank you - I've sort of gone from the
64:48 - Chad happened in the middle of me thank
64:51 - you - I think Joel Joel who joined as a
64:53 - member preciate it
64:54 - Joel with you Oh Joely can see joel has
64:56 - tha this dot icon this dot icon is for
65:00 - if you've been a member for left the
65:01 - first icon you get and then I think if
65:03 - you're a member later you get so that
65:09 - question is so now the question is sorry
65:12 - I should finish my sentences I have a
65:14 - problem not finishing my sentences if
65:15 - you're a member for more than a month
65:17 - you get a different one and two months I
65:18 - don't remember what those are let's do
65:21 - what those are at whatever okay cuz
65:25 - that's so the question is now should
65:29 - that be well should that be a coding
65:33 - challenge and or should just probably
65:39 - just be in the mastodons tutorials I
65:45 - don't know I never know these things I
65:52 - don't know alright so okay
66:01 - all right but I'm gonna do part two and
66:03 - then I'll think about it I'm exporting
66:07 - the sketch as a Java app would it make a
66:09 - difference it did it's still need
66:13 - processing the app still needs that that
66:15 - you can also do that but you still need
66:17 - a windowing environment we I don't
66:20 - believe that would remove the need for
66:21 - x11
66:22 - 1/8 Nathan asks in the chat but I could
66:26 - be wrong about that but I'm pretty sure
66:28 - like it it's not actually the processing
66:31 - IDE never opens its processing is just
66:34 - like it's just running they're just
66:36 - compiling the processing code and
66:37 - executing it as an app it's basically
66:39 - doing that for you so I'm pretty sure
66:43 - you need a windowing environment maybe
66:44 - there's some other way you could do it
66:46 - and by the way you don't have to use
66:47 - processing you know this is just I think
66:49 - really useful because you know it's sort
66:52 - of it's very I love the fact that it
66:53 - sort of gluing these different things
66:54 - together ok
66:59 - and just drink a little water out of
67:01 - sight water hasn't paid their
67:06 - sponsorship recently so I'm not going to
67:08 - drink water in in how you and visually
67:11 - in a apparent way sometimes the words
67:18 - don't deform in my brain and exit out of
67:22 - my mouth in a way that makes sense
67:23 - all right
67:34 - hello so previously I made a bot that
67:37 - picked a random number between 0 and 90
67:40 - generated this fractal tree using that
67:43 - angle using processing made the image
67:46 - and then posted that image to mastodons
67:48 - using this coding trained bot at BOTS
67:51 - and space dot BOTS in Doc's pick
67:53 - whatever Hudson's face the instance so
67:56 - you can see a bunch of these here and so
67:58 - now what I want to do is instead of and
68:01 - the bot if we look at the code is just
68:04 - executing all of this stuff to generate
68:06 - the image and post it once a day so what
68:10 - I would like to do now in this video is
68:12 - change it no I'm not going to set
68:14 - interval in fact I'm not ever going to
68:20 - post an image I am only going to post an
68:23 - image as a reply to somebody else and
68:25 - I'm gonna look in their reply find the
68:28 - angle that they've specified and send
68:30 - them back a tree with that angle and you
68:32 - can just imagine the possibilities of
68:34 - things you can do I mean one of my
68:35 - favorite this is a Twitter bot but one
68:37 - of my favorite BOTS is low-poly bot and
68:39 - what low-poly bot does is it still
68:42 - running it's the question because most
68:43 - of these bots you can't reason why I'm
68:45 - using Mastodon one of the reasons why
68:46 - I'm using Mastodon is that these don't I
68:49 - don't think you can't really run these
68:51 - anymore on Twitter they've changed the
68:52 - API specifications too much so the idea
68:55 - is that you send in an image and an
68:57 - image process for you and sends it back
68:59 - okay so now let's do this so the thing
69:03 - that I need to do is I need to connect
69:05 - to a stream I've you I've talked about
69:08 - this in previous videos where I made a
69:09 - bot that just replied I need to connect
69:11 - to the streaming API and so the way that
69:14 - I do that is here MDOT stream so I'm
69:19 - gonna say MDOT stream and then I want to
69:22 - connect to the user stream and doing
69:30 - that I should get a promise then
69:34 - response console dot log response can
69:38 - you see what I'm typing here and then
69:41 - auto fill it's gone crazy catch any
69:44 - error console dot err err err err err
69:50 - and I put too many dots too many dots
69:53 - too many dots the dots go there where
69:55 - did the dots go I've lost the dot I
69:57 - really have a problem with dots
69:59 - apparently okay now so the idea is now
70:05 - anytime there is a user event anytime
70:10 - there's a user event I'm gonna look at
70:12 - that event now I've done this before
70:13 - isn't it okay for me to since I just did
70:16 - this in a previous tutorial I think it's
70:18 - okay for me to look up what I did in
70:19 - that instead of like figuring out again
70:21 - so a mastadon bot underscore two right
70:24 - now is where I had some code from a
70:26 - previous video and I can look at the bot
70:30 - code and I can see what I actually did
70:33 - is if I said if the event was a
70:37 - notification whoa oh look at this oh
70:40 - look at this ah you know what I've
70:44 - written this code incorrectly you have
70:48 - to configure when you're using the
70:49 - streaming API it doesn't work like the
70:51 - get or the post API you actually have to
70:54 - call this on function to specify an
70:57 - event so apologies for that good thing I
70:59 - looked the way this should actually be
71:03 - written is a Const listener like I want
71:07 - to create a listener that's connected to
71:09 - that user stream right whoops where's
71:11 - the other code alright a streaming slash
71:13 - user yeah I knew that
71:15 - streaming slash user and then I want to
71:18 - say listener dot on notification so if I
71:25 - get a notification and now I'm going to
71:27 - guess that this returns a promise but it
71:32 - will I'm so sad my doesn't give up I
71:39 - give up I quit I can't do this kind of
71:42 - syntax I did it with a call back before
71:45 - stream returns a stream listener
71:48 - instance see examples on how to use it
71:55 - give me a second here
71:57 - I can't over here
72:03 - event emitters do not return promises
72:08 - let's let's start over let's go back so
72:19 - that doesn't that that won't give me a
72:21 - promise that's fine that's fine I'm okay
72:24 - with that
72:26 - fine where was I so I want to connect to
72:32 - the streaming API and I want to connect
72:34 - to the user stream meaning anytime I get
72:38 - any sort of notification somebody
72:39 - favorite something mentions me reblogged
72:42 - me if I post something I think I get an
72:45 - event so the way that I do that is by
72:46 - saying m dot stream right if I have to
72:49 - go look it up here in this API m dot
72:55 - stream path and parameters returns a
72:58 - stream listener instance see examples on
73:00 - how to use it okay why not I've done
73:02 - this already in a previous video but so
73:04 - I could look at my previous code but
73:06 - let's actually sorry let's just go to
73:09 - examples streaming yes and what we can
73:11 - see that here so this is what I want to
73:13 - do I want to connect to the stream
73:16 - create a stream instance by connecting
73:19 - to streaming slash user and then on a
73:23 - particular event like a notification was
73:26 - that what it was
73:27 - oh no just a message so I it's the event
73:29 - here is called message and then on a
73:32 - message and this by the way I just been
73:36 - told from the chat thank you to Alka and
73:39 - the chat that the streaming API doesn't
73:41 - support promises so in this case I do
73:43 - have to use a callback and I can say
73:46 - response I like to use the word response
73:50 - like this so now here anytime I get a
73:54 - response and you start anytime there is
73:56 - a message what do I want to do
74:14 - you need a callback not a promise
74:16 - also please stop separating dots with
74:19 - keywords I don't know what that means
74:26 - why fact you keep separating the dots
74:29 - from the keywords oh yeah that's why I
74:31 - put the duck because I'm not used to
74:32 - this
74:33 - I broke I've been like for like 15 years
74:37 - with all this JavaScript promises
74:39 - nonsense I'm learning I'm learning give
74:41 - me give me a break here I could be going
74:42 - home there's a there's a baseball game
74:44 - starting in two hours I got that I
74:47 - intend to watch okay all right so in now
74:53 - I do want to look up my previous code
74:54 - because I need to figure out what I need
74:56 - to determine what I'm looking for in
74:58 - that response so I have that open here
75:00 - and you can see that what I'm doing here
75:01 - is if them if the event is a
75:04 - notification and if it's a mention
75:06 - that's what I'm looking for I'm looking
75:08 - for a mention so I'm going to say if
75:10 - response dot event equals a notification
75:17 - I'm just only going to do mentions and
75:20 - response dot data type I think equals
75:24 - mention is that right
75:27 - this is B just looking at my previous
75:28 - code response message data dot type
75:31 - message dot event so where is the
75:34 - mention in this one that I did mention
75:40 - ah message that data's right there
75:43 - message data dot type so I'm using
75:44 - different variable names which is fine
75:46 - but if the event is a notification and
75:48 - the type of the event is a mention then
75:51 - now I'm ready to basically do this right
75:55 - the idea if I mentioned go ahead and do
75:58 - this but and I don't need a separate
76:00 - function for this uh what up so I'm just
76:08 - gonna take this here but what I want to
76:11 - do is I need to add some stuff to this
76:15 - so for exam
76:17 - Paul I probably want to mention a user
76:20 - account and I want to have a reply ID
76:24 - and also that angle so I need to if I'm
76:28 - going to reply i all i want to add
76:30 - mention them so i need their account to
76:32 - reference i also if i want it to be
76:35 - threaded i need the ID of that post so i
76:38 - can include that and then the angle i
76:40 - want so now the angle shouldn't come oh
76:43 - I've got to send the angle into
76:45 - processing all right that's gonna be
76:46 - something we have to figure out okay I'm
76:48 - gonna get to that in a second so let's
76:50 - try to get the whole flow of this
76:52 - working that this is an interesting
76:54 - problem that I completely forgot that I
76:55 - had to figure out so they so first let
76:58 - me get the ID is and I did this before
77:02 - so I'm just going to we can see the ID
77:05 - is this
77:06 - this is pulling the ID out of them and I
77:10 - you I said response instead of message
77:11 - which is fine and then the account name
77:14 - is right here
77:15 - so I want to also get the account which
77:18 - is also a response so I can then pass in
77:20 - the account passed in the ID eight now
77:22 - the angle is a tricky one so what am I
77:25 - expecting the person to say I guess I'm
77:27 - expecting somewhere in there post that
77:30 - there's a number and they could put
77:35 - multiple numbers I'm just gonna pick the
77:36 - first number so what I'm going to do
77:38 - what this is by the way my inspiration
77:40 - the tree bot but where where am i I'm
77:41 - looking my code I need to get the
77:44 - content of what they've sent me this is
77:46 - their message content so what I want to
77:49 - do is use a regular expression so my
77:52 - regular expression is going to be I need
77:54 - to find a number the number that I want
77:57 - is between two and three digits so I get
78:00 - then going to allow I mean do I allow at
78:03 - angle greater than 90 I mean sure I
78:05 - could actually it could be any number
78:07 - right I could really just say any number
78:10 - doesn't matter how big so I want to
78:12 - match this and so if I say regular code
78:16 - so if I say content dot match regular
78:19 - expression is this now I've forgotten Oh
78:22 - regular expressions work so let's just
78:25 - go to the browser for a second and let's
78:27 - noodle around here so let's say if I
78:30 - make a ret
78:30 - their expression and I make it equal to
78:33 - this and then I have a string like hello
78:39 - 42 goodbye if I say s dot match that
78:46 - regular expression what do I get
78:48 - ah perfect I get what it matched the
78:51 - index and some more information all it
78:53 - cares about is what it matched and I
78:55 - don't need it to be global I don't need
78:56 - to get all the numbers like I could get
78:58 - all the numbers and average them or
78:59 - something but I'm just going to get the
79:00 - first one so this is fine so then I'm
79:03 - going to and do have to deal with the
79:06 - fact what if it doesn't match anything
79:07 - so let's see what it gives me if it
79:09 - doesn't match so let's say s equals this
79:12 - and I'm gonna say S match regular
79:14 - pressure no so that's fine so now I'm
79:16 - going to say results equals content
79:20 - match regular expression and the angle
79:24 - so I'm gonna say if results all right
79:27 - could I if results I could probably use
79:29 - that ternary thing then the angle equals
79:35 - results index zero otherwise angle
79:43 - equals o otherwise I'm gonna say there's
79:45 - no angle I could reply and say you need
79:46 - to you need to you need to mention me
79:48 - with a number so I'll so I'm actually
79:52 - going to just say yeah angle equals
79:55 - negative one so I'm going to use
79:59 - negative one as like a and I can
80:03 - actually just do this and then do this
80:08 - okay great so now in theory now I can
80:12 - pass that angle here so all right now
80:16 - one thing I can do let's just do this so
80:19 - if the first thing I want to do is just
80:22 - say if angle equals negative one right
80:25 - if I've gotten a negative one angle I
80:28 - want to actually just be done like I
80:34 - want to say oh but I have to mention the
80:37 - person okay
80:38 - so I have to say if in a status post can
80:43 - I find that here
80:44 - right so the text of the status if this
80:48 - texas-sized in reply to ID so this is
80:50 - important so I'm gonna say please
80:58 - specify an angle in degrees using digits
81:04 - cuz it won't work you say the word 99
81:08 - eed to say in reply what is it in reply
81:14 - to ID in reply to ID is that reply ID
81:18 - and then also I I want to use their the
81:23 - account so I'm gonna I want to start
81:26 - with the account account and do I'd say
81:29 - at I think I have to say at the account
81:32 - please specify an angle and digits then
81:36 - in reply to ID okay so this is good and
81:39 - I'll call this and then I'm going to say
81:43 - response I'm gonna say prams in response
81:48 - and it's a success angle negative one
81:51 - okay so this now should if I run this
81:56 - and you and then I'm gonna put an else
81:59 - here this function has gotten quite long
82:06 - but basically what I'm doing is first
82:09 - I'm checking if there was a legitimate
82:11 - angle and if there wasn't I'm replying
82:13 - back to say please specify an angle in
82:15 - degrees and then let's see how that goes
82:18 - so right now if I run this bot oh I
82:22 - forgot to make a new one that's fine
82:23 - laughter if I run this bot somebody
82:26 - should feel free to add mention me
82:28 - without a digit could somebody do that
82:31 - please
82:41 - I'm looking at the chat I'm taking a
82:43 - break for a second this will get edited
82:45 - out okay I got an error okay all right
82:53 - somebody at messaged me thank you for
82:55 - helping me debug this and I got an error
82:59 - in box yes line 25 about touch is line
83:02 - 25 ah response response response sorry
83:08 - response response all right let's try
83:10 - this again be prepared
83:13 - all right at mentioned me with no number
83:16 - please you can put a number in it but it
83:17 - won't work if you put a number in it all
83:19 - right
83:19 - ooh interesting please there we go okay
83:24 - so let's take a look
83:26 - so someone mentioned B with a number
83:27 - that's great that we had both of those
83:29 - tested and we can see this one said
83:33 - please specify an angle in degrees using
83:35 - digits that's right and then this one
83:38 - just said behold my beautiful tree so I
83:40 - haven't done the thing where I actually
83:41 - get the angle so let's let's first let's
83:45 - just first if I really do get an angle
83:49 - let's do all the same steps but right
83:53 - now I'm going to also add at account so
84:00 - I'm going to mention that account with
84:03 - angle and then I'm going to use the
84:07 - angle that they asked for and then so
84:13 - this and I need in reply ID in what was
84:16 - it in repose same thing in reply to ID
84:20 - where is that where is that where is
84:22 - that here we go and reply to ID okay so
84:27 - now if I run this one more time you can
84:33 - now add mention me with an angle and
84:34 - you'll get a tree back or you can at
84:37 - mention me with no angle and you will
84:39 - get a message back saying you need an
84:41 - angle but I won't be using the angle you
84:43 - asked for it just yet but let's just see
84:45 - if this works
84:55 - alright somebody somebody still
84:58 - mentioned me please with no angle with
85:00 - nono digits
85:13 - that's weird once somebody know digits
85:17 - please no digits okay okay great so we
85:24 - can see that we got one two three four
85:26 - five mentions one of which had a
85:28 - negative one so let's see let's just
85:31 - check our bots now and we could see 60
85:35 - 38:56 now here's the thing I'm not
85:37 - actually using the angle it's still just
85:39 - a random angle so what I need to do is
85:45 - oh and I forgot that I was pulling it
85:48 - out of here so it's actually not lit
85:49 - hold on let's lose the alka asked for 56
85:53 - and I made a tree with 52 so now let's
85:57 - take this out right and actually try to
86:00 - use that angle now here's the thing I
86:02 - can't just how do I do this so what I'm
86:06 - actually going to do this is interesting
86:08 - is I need to go back to that exact
86:10 - command where did I have that where is
86:13 - that elk command so that's what's all
86:16 - the way way up here so what I actually
86:19 - need to do is I need to add another
86:20 - argument to this and so what I'm going
86:24 - to do and I think well I haven't done
86:27 - this in a while
86:28 - what's all right let's let's do it this
86:30 - way sorry let me grab this command we're
86:34 - going to figure this out together and we
86:37 - go back to here and I'm gonna run that
86:40 - command so this runs and I get the egg
86:43 - that's fits out the angle now there
86:44 - should be a way in processing for me to
86:49 - get the arguments how do you get the
86:53 - arguments in Java command line arguments
86:59 - somebody must know this it's like system
87:03 - dot args this is like the most this is
87:07 - like the core string args is it just
87:11 - there in a global variable somewhere in
87:13 - processing I should know this I did this
87:15 - like a year ago print line system dot
87:20 - args what's the chance like that that's
87:23 - like a thing No
87:26 - timeout gonna look us up
87:37 - why is his computer keep going to sleep
87:41 - by the way Adam asked in the chat
87:43 - doesn't only reply to local or any
87:44 - account in the Federation it will apply
87:46 - to any account the Federation I could
87:48 - set it up to only reply to local but
87:49 - that's not what it does by default so I
87:56 - did this like a year ago with my Twitter
87:58 - image reply err oh but uh oh this was
88:07 - even crazier because I download an image
88:10 - that somebody else posts I'm pretty sure
88:15 - yeah Oh args it's just in args it's just
88:21 - in args silly me
88:27 - silly me okay I looked it up I can't
88:34 - believe I forgot this but processing
88:38 - actually just has built-in a variable
88:41 - built-in variable called args which has
88:43 - those command-line arguments so I'm
88:44 - going to put print a lot print array
88:45 - args and now I'm gonna do this we should
88:49 - see whoa oh there it's no because there
88:54 - were none that's weird
88:56 - because where do those go they're not
89:00 - here where how do I pass arguments if I
89:03 - just add something else like here well
89:07 - yeah there we go okay so if I just add
89:09 - the arms come at the end
89:10 - I thought make some of these might be
89:12 - argument of course there's none so we
89:13 - can see here if I just execute it with
89:17 - an argument like with the angle 40 then
89:22 - 40 because I have some iPad to be help
89:25 - in there block 40 comes out okay perfect
89:27 - this is much easier than I thought all I
89:29 - need to do is now say command where do I
89:33 - execute that command right here
89:36 - execute command +
89:39 - a space angle right I guess I could use
89:45 - a template literal there so I just need
89:47 - to add that angle there and you know I
89:49 - probably want to double check to make
89:51 - sure there are any args but all right if
89:55 - args is not equal to know then and then
90:00 - I'm gonna I'm gonna make this a global
90:02 - variable a equals zero and then I'm
90:05 - going to say a equal args index zero I
90:08 - guess that's gonna be a string right so
90:10 - I need to convert that to an integer or
90:12 - a float maybe and then I don't need it
90:16 - here and now here we go
90:18 - so now if well let's take out the exit
90:23 - just so we see let's do this
90:29 - processing Java run with the angle 10
90:33 - that looks like the angle 10 right now
90:36 - let's run with an angle of 90 and that
90:41 - looks like the angle 90 perfect I've
90:43 - passed in the angle and so now I should
90:46 - be able to I mean right is there
90:48 - anything left to do I think this works
90:50 - cuz I got the angle I've got the angle
90:53 - I'm going to give it the angle yeah all
90:56 - right what the hey ho let's run this
91:05 - node bot jf macedon bot starting and now
91:09 - I'll just wait for a little bit
91:13 - try test anything you can imagine
91:16 - Oh whoops sorry stop stop it's funny
91:21 - like actually this is fine I forgot the
91:22 - exit thing so amusingly I forgot the
91:30 - exit thing so it's opening up processing
91:32 - but it's never finishing so it's
91:33 - actually that exit thing is very
91:35 - important because I forgot that I had
91:39 - that in there I've got to put that back
91:40 - in there and let's try this one more
91:44 - time and here we go all right thank you
92:28 - everybody this looks like some good
92:29 - testing I hope that knowing is like and
92:32 - so let's take a look now all right thank
92:38 - you everybody this looks like some good
92:40 - amount of testing let's go now to box in
92:43 - space and take a look here is a behold
92:46 - my tree with an angle of ninety please
92:49 - specify an angle so we can see here nope
92:51 - right that worked here a right triangle
92:54 - has an angle of 90 degrees I love right
92:56 - triangles there we go perfect so 89 and
93:00 - there we go 128 degrees 128 this is
93:04 - working
93:06 - this is done so I hope now you have
93:09 - enjoyed you can imagine sort of I mean
93:11 - there is another piece to this that I
93:12 - could do which is what if the person
93:15 - sends me an image and I do something
93:17 - image and send it back I guess I'll have
93:18 - to come back another day and do that one
93:20 - but now you can see the full process
93:22 - that you can have another user at
93:25 - mention you with some data text data use
93:29 - that text data to generate an image and
93:31 - send it back up so hope you enjoyed this
93:33 - tutorial I hope you make some wonderful
93:35 - box at BOTS in space and I will see you
93:37 - in future video
93:42 - okay don't be snide asks is he okay
93:48 - definitely not I think I've ever been
93:51 - okay looking and I'm also going bald
93:53 - hey Cody Gardner with CJ is here hello
93:56 - hello hello hello alright I think I'm
94:00 - done for today it is 5:40 I have got to
94:04 - go
94:06 - does anybody have any questions they
94:08 - want to ask I can't believe this doesn't
94:09 - it doesn't crash anymore I think I'm
94:13 - done
94:13 - oh the question is should this that
94:17 - should that have been a coding challenge
94:18 - maybe it should just be two more
94:20 - tutorials I should have realized that
94:22 - from the beginning though I don't know
94:25 - anybody of any I guess I'm gonna like
94:27 - I'll pretend I'm gonna do two intros
94:39 - just in case I don't know
94:48 - this is before people haven't wash
94:50 - before this is the weird thing that I do
94:52 - that this all gets edited later it's a
94:54 - shorter standalone videos that go in
94:56 - playlists so I often like after I finish
94:59 - something we'll do an intro so Daniel
95:02 - writes make it a tutorial joel asks are
95:07 - there limitations to the shell commands
95:09 - executable by node not really I mean the
95:14 - limitations are what you can excuse the
95:16 - shell command it's there's no difference
95:19 - between calling the exec function and
95:21 - node and just typing the thing into the
95:23 - Shelf there is this limitation though
95:25 - that if the shell command opens a window
95:28 - or operates like you know some
95:31 - application that's on a mac computer and
95:34 - you happen to deploy this to a server
95:35 - that's a linux server it's not gonna
95:37 - work but as long as the system you're
95:40 - using supports that shell command you
95:42 - can execute it from node and it's sports
95:43 - node okay hello welcome to a coding
95:49 - challenge this was a little bit weird
95:51 - because it's more like an extension of a
95:53 - tutorial series that I'm doing but I did
95:55 - it all in one video so I think maybe it
95:57 - can be a coding challenge I completed it
95:59 - I made a bot for Mastodon that picks a
96:03 - random number generator little fractal
96:05 - tree using that angle and then and then
96:08 - post that image this is inspired by the
96:11 - tree bot which I'm going to reference
96:12 - again in a second because there did
96:14 - before and so but so if you're about to
96:17 - watch this enjoy the coding challenge I
96:19 - will publish the code for this make your
96:21 - own Mastodon bot if you want to know
96:23 - more about what is Mastodon and how do
96:25 - you sign up to get an API key and all
96:27 - that stuff then I will refer you to the
96:29 - tutorial series of which this video is
96:31 - also in the playlist I don't know does
96:33 - this make sense
96:33 - whatever watch the video I do the whole
96:35 - project and then I finish it
96:37 - [Music]
96:42 - what if I send a very big number wave at
96:44 - more than 360 should work I'm you know
96:48 - it's it's the rotation once you get if
96:52 - you 365 it's gonna be the same as five
96:55 - degrees so I think it would still work
96:57 - I could constrain it if I wanted to
96:59 - within the code okay
97:14 - okay part two of this coding challenge
97:17 - yeah in part two of this coding
97:19 - challenge I actually change it from just
97:21 - being a bot that automatically posts a
97:24 - tree every so often to a bot that
97:28 - receives a post a toot their call toots
97:31 - I just got used to saying tweet and now
97:33 - I gotta say to to this is very hard it
97:37 - receives a toot mentioned from another
97:39 - account Nathan thank you to Nathan growl
97:43 - for helping me test this and it says
97:45 - give me an 89 degree angle tree please
97:47 - and then I decoding train bot replies
97:50 - generates that tree image and replies
97:52 - back with so I complete this aspect of
97:54 - it is and it's kind of convoluted I
97:56 - probably refactor that code a little bit
97:59 - but and I hope you enjoy watching this
98:00 - second part of the coding challenge yeah
98:08 - a float would just get the integer part
98:09 - because of the regular expression that
98:11 - I'm using I could have made my rhyme
98:12 - expression so sorry the question is from
98:15 - Adam I wonder how would it handle a
98:17 - float or a number greater than 360
98:21 - floats would probably be okay
98:23 - so I could definitely change my regular
98:25 - expression to to account for that I
98:28 - forgot where I have it so I could say
98:32 - like optionally you know something like
98:34 - optionally a dot but I'd have to do this
98:37 - right because I want a literal dot
98:39 - optionally and then some more digits
98:42 - optionally whatever something like that
98:44 - I could do but I'm not can I leave it
98:47 - running for a while I want some trees um
98:50 - I can why don't I play this I kind of
98:57 - need to I kind of want to make a I
99:01 - probably shouldn't make the bot that
99:02 - does all the things in all the videos
99:04 - that I've shown so far and then deploy
99:06 - it anybody wants to help with that so
99:11 - anybody wants to help with that let me
99:16 - do this
99:19 - [Music]
99:21 - let's do this real quick before I go
99:24 - [Music]
99:26 - let's create a new repo coding train bot
99:33 - no no stop
99:35 - coding train bot stop bot bot code for
99:48 - coding train a sure whatever yep
99:57 - okay then I am going to let me create a
100:04 - new file dot dot git ignore and I want
100:13 - to ignore node modules sorry that you
100:15 - can't see this and I want to ignore what
100:18 - did I have in what am i ignoring in all
100:19 - my things
100:21 - I don't want dot vs code I think because
100:28 - who knows what's in that and I don't
100:29 - want dot env so whoops so this is get
100:35 - ignore come on you can do it you can
100:42 - commit this new file there we go let's
100:45 - try cloning this
100:59 - get clips get clone this open so what
101:06 - I'm gonna do is where's that coding
101:10 - training Mastodon bot Mastodon I'm gonna
101:12 - put so here's what I would love
101:15 - oh boy I would love you forever if you
101:18 - can help me with this so I'll file the
101:22 - issues so let me give me a second here I
101:34 - so I would I want to get rid of I don't
101:41 - need this kid ignore like this was only
101:45 - that get ignore I don't need that get
101:47 - ignore okay so now get status oops
101:58 - [Music]
102:00 - okay I'm gonna be very confident I did
102:04 - get ignore correctly and I'm gonna get
102:06 - add git commit and I'm gonna say upload
102:13 - whoops PAH shoot ah how do I associate
102:23 - editor with git I can't use VI I'm
102:26 - incapable using VI so I'm gonna and I
102:31 - could just do - M but I'm I'm trying to
102:33 - be a good citizen and you guys are
102:38 - really spamming this bot oh shoot all
102:43 - those files thank you I forgot about
102:45 - that
102:46 - oh good but I haven't I haven't done
102:50 - that yet can I remove those is it too
102:52 - late
102:57 - can I unstable
103:03 - how do i unstaged files can I just do
103:08 - remove get on stage on staging files
103:22 - get reset oh great let's do that get
103:26 - reset go get status perfect thank you
103:32 - that was easy get reset so here I don't
103:36 - want any of these and here so it's just
103:40 - in that one in theory yes I think I
103:47 - really have to shut off the bots making
103:49 - me crazy
103:50 - get status wait whoa whoops good status
103:54 - now let me get my editor working here I
104:02 - did that on the camera went off here we
104:11 - go git config - - global core editor get
104:16 - config - - global quartet etre code - -
104:23 - wait I think that that right yeah so now
104:28 - all right so now I'm going to add those
104:31 - stage those files to wait for that to
104:35 - draw that tree say get commenced okay I
104:39 - have to shut it off I'm sorry everybody
104:41 - I can't take it anymore I can't take it
104:46 - anymore
104:47 - okay git commit alright so now I am
104:53 - adding code from all mastodons tutorials
105:04 - this needs some work I'll open issues
105:09 - but it's missing the image uploader
105:13 - thought without replying and I also
105:17 - intend to put all of this together in a
105:22 - single bot and deploy it okay so this
105:29 - will be poll requests and community feed
105:35 - welcome yeah we did that and then get
105:41 - push origin master okay so so what I
105:51 - need now anybody wants to oh and I
105:54 - forgot to put this he's a transfer of
105:58 - this repo transfer repo transfer what is
106:05 - the name of the repo coding train baat
106:07 - mastodons and new owners should be
106:11 - coding train transfer the repository to
106:18 - my password sure now I want to go to a
106:28 - coding train organization and coding
106:31 - train baat mastodons and by the way now
106:34 - because it's in the coding train there's
106:40 - no reason I can just call it Mastodon
106:41 - bot okay so now let's go to did it not
106:48 - change that come on settings settings
106:55 - masted Mastodon bot rename there we go
107:01 - okay so okay so now I need to profile
107:09 - some issues missing image uploader bot
107:16 - when I went on to code the example bot
107:21 - that when I went on to code the example
107:24 - bought that replies with an image I
107:27 - wrote over the bot jeaious file that was
107:31 - the that that posted posted a tree every
107:38 - 24 hours
107:39 - I would like to revive that if anyone
107:44 - was I like to revive revive that
107:51 - so and so what do I have here there's
107:55 - Mastodon bought one which is just the
107:59 - one that does a random number that's
108:01 - fine
108:02 - Mastodon bought two is the one that
108:08 - [Music]
108:09 - replies favorites so that's fine so then
108:14 - also issues a new issue one box to rule
108:22 - them all
108:23 - I would like altum Utley the examples
108:28 - that will live in but here I'd like to
108:37 - combine them all I'd like to combine
108:40 - them all as one bot that I can deploy
108:44 - deploy and leave running for testing and
108:50 - fun times and this labels Help Wanted
109:01 - and issues labels help want it okay also
109:13 - probably redo with promises should i
109:21 - redo the earlier bot examples with
109:26 - promises i don't know question it's
109:34 - tricky because i I'd like that to be
109:39 - available but but I used callbacks in
109:44 - the videos so would make it hard to
109:48 - follow along maybe I should
109:54 - both available all right so now
109:59 - everybody has their work cut out for
110:00 - them this weekend I'm accepting pull
110:03 - requests from here and if I could
110:08 - somehow revive this laptop I can look at
110:11 - the chat
110:19 - all right so ohok tober fest I don't
110:23 - know I don't know about this hack Tober
110:25 - fest I don't know how to make that
110:27 - happen
110:28 - what there's no pull requests yes still
110:31 - in two minutes I have to go it's six
110:33 - o'clock
110:34 - American League East Division Series
110:36 - Yankees vs. Red Sox you can all try to
110:39 - guess who I'll be rooting for go Orioles
110:42 - next year's gonna be the heir Orioles go
110:44 - Orioles I don't buy sure brought my
110:46 - Orioles baseball hat and but I don't
110:49 - have that with me all right so I am
110:53 - happy to take a couple questions while I
110:57 - kind of figure out if there's anything
110:58 - else that I need to do I will put on my
111:03 - [Music]
111:11 - oh you don't have to do anything to
111:13 - allow users to participate in the hack
111:15 - tobor necessarily just for visibility on
111:18 - their site oh so wait is there a way oh
111:25 - [Music]
111:26 - there's a good question here Joel in the
111:30 - chat rightz also do you need to auto
111:31 - delete the images to prevent buildup dan
111:33 - or are they not stored by processing
111:36 - okay so this is a great question so to
111:38 - be clear the if I run if the bot runs
111:44 - where let's find I don't know I go I
111:47 - guess I deleted the image let me run it
111:49 - again I don't know so I'm running this
112:02 - bot to be clear if this makes an image
112:05 - of a tree it's going to save it as tree
112:08 - dot PNG on the computer so there is a
112:10 - PNG on this computer then it's going to
112:13 - upload that as a media file to mastodons
112:16 - where it will be stored permanently on
112:19 - you know on the bots in space server and
112:21 - then and then it's and that's those are
112:27 - the two places where it is now if it
112:29 - does it again it's going to overwrite
112:31 - the image on this laptop because my
112:33 - processing code which I've now closed
112:35 - just says save tree dot PNG so I'm not
112:38 - numbering them I'm not saving it's
112:39 - always overwriting it but then when that
112:41 - gets posted that's a new media file so
112:43 - what I'm doing is I am building up a lot
112:46 - on the box in dot space server
112:48 - presumably but at the moment hope you
112:51 - know the server
112:51 - I guess can sustain a bunch of image
112:54 - bots I don't you know I want to
112:55 - cautiously not go crazy with this I'm
112:57 - going to turn this off but you'll see
112:59 - here even though it made three images in
113:04 - this folder only the last one is there
113:07 - the zero angle tree good question
113:14 - Oh maintaining a repo create issues
113:19 - labeled or label existing ones hacked
113:21 - Ober Fest on your github projects to
113:24 - help contributors know what to work on
113:28 - tag any spam or a relevant pull request
113:31 - with the invalid label to disqualify
113:33 - them so okay let's I guess this is a
113:40 - Oktoberfest I guess is a digitalocean
113:42 - sponsored thing and if you do a certain
113:44 - amount of pull requests you get like a
113:46 - t-shirt okay oh boy I got a lot of so
113:51 - let's just do that right now real quick
113:54 - for these issues so labels I probably
113:59 - have to make one new label hack tober
114:04 - fest October fest this should be like
114:10 - orange I'm just gonna keep instead of
114:13 - trying to figure out orange oh it's
114:15 - pretty orange yeah good enough okay
114:20 - create label issues labels Oktoberfest
114:27 - oh boy anybody wants to help me here's a
114:31 - prawn I have so many open-source
114:32 - projects that I should go through I'll
114:35 - do this on some other things too
114:36 - other coding trained repos maybe but
114:39 - that's a place to get started okay
114:41 - that's great thank you for letting me
114:42 - know that
114:43 - [Music]
114:52 - I also wanted to I should have done this
114:57 - at the beginning I forgot but I wanted
114:59 - to mention processing India
115:01 - I think it's processing community today
115:04 - in India there are actually 4 processing
115:06 - community days in India in these 4
115:09 - different cities the one in Bangalore is
115:12 - being organized by to an alumni and to
115:16 - alumni of the ITP program where I teach
115:18 - so I encourage you to if you're
115:21 - interested in getting involved with any
115:23 - of these to check them out matura had
115:24 - emailed me and said to mention it on a
115:26 - live stream so I'm doing that now I'll
115:28 - try to remember maybe at the beginning
115:29 - of the next one to mention it goes who
115:30 - knows I'm still watching this now ok Oh
115:37 - Alka asked which folder would you want
115:39 - the combine Bhatt called mastodons Bhatt
115:42 - combined so I'm open to any way of
115:46 - reorganizing the repo maybe actually
115:49 - just have a folder called Bhatt and
115:50 - that's the combined one and then the
115:52 - other ones are like maybe a folder
115:54 - called Bhatt folder called examples so
115:56 - Bhat is the one or it could just be in
115:58 - the the root directory could be the
116:01 - actual Bhatt and there's some examples
116:02 - but that's probably confusing so but
116:04 - something like that I'm open to
116:06 - suggestion
116:09 - [Music]
116:11 - ah this is such a great question
116:14 - oh well V asks open-source is daunting
116:17 - for beginners how should I start this is
116:21 - such a good question and a really free
116:23 - foam just keeps ringing hold on just
116:25 - hold on a second
116:31 - hello yes
117:02 - okay sorry that was important I had to
117:04 - just answer that let me just send a
117:10 - message here and that's fine okay okay
117:20 - what was I saying oh yeah I'll
117:22 - contribute to open source this is a
117:24 - really tough problem I actually am
117:26 - teaching a course this semester open
117:29 - source to do at ITP let's see if I
117:32 - google that if it comes up and so if
117:36 - your this is a course that I'm teaching
117:38 - and you know in here under resources I
117:41 - would this is some nice guides and open
117:45 - source projects for beginners there's a
117:48 - lot bunch of readings that I would
117:50 - suggest that are here on the syllabus
117:51 - for this course I mean you can read a
117:53 - lot of the students post and respond so
117:55 - this this course is about contributing
117:57 - to open source projects so there might
118:00 - be some places here that'll help you get
118:02 - started but my my recommendation is and
118:04 - this I realize that not everybody can do
118:06 - this but if you can find a local meetup
118:08 - where an open source project is hosting
118:11 - an event to encourage people to
118:13 - contribute it's really great to be with
118:15 - a group of people who are learning and
118:16 - figuring it out that's a really
118:17 - wonderful way to do it I'm p5.js we try
118:20 - to have these and processing foundation
118:22 - we try to have things like that when
118:23 - possible I know that I'm dev - in New
118:26 - York is having like a hack Tober fest
118:29 - event so this is is you can sign up and
118:39 - some stuff here there I think they're
118:41 - having like a meet-up for this so this
118:43 - is just about Oktoberfest but there is
118:45 - also I think on October 10th they're
118:47 - having a hack Tober fest Meetup so
118:50 - that's just one example so that will be
118:53 - my advice is really hard and but you
118:54 - want to try to find what's really nice
118:56 - about here's I really recommend looking
118:58 - at these great for new contributors
119:00 - awesome for beginners and first-timers
119:03 - only links because you want to find an
119:06 - open-source project that's going to have
119:08 - a welcoming atmosphere
119:09 - and that's that's that are looking to
119:12 - help bring beginners into the community
119:14 - and I would hide I hope then that's
119:16 - certainly our goal with processing and
119:17 - p5.js in the processing foundation
119:24 - [Music]
119:30 - ciao shebar Aurora Chevron
119:34 - good night I say good night in Italian
119:36 - [Music]
119:46 - yeah I need to learn about like modules
119:50 - and imports and exports that's like an
119:51 - es6 or NES 8 thing right that's a thing
119:54 - that I'm not using yet that I need to
119:55 - learn about right instead of using
119:56 - require or instead of just like
119:58 - importing a library and like the
120:00 - index.html maybe that's the thing that I
120:02 - need to learn about and do some stuff
120:04 - with somebody in the slack Channel
120:05 - please let me know so Joel says I should
120:17 - post that answer as a video I mean maybe
120:19 - that's I would like to do some specific
120:22 - videos about contributing to open source
120:24 - certainly I do have a github for poets
120:29 - if you google that you'll find mine this
120:32 - is these these are doing quite a while
120:33 - ago I think they're still mostly
120:35 - up-to-date think some things have
120:37 - changed these are 2016 so almost three
120:41 - years ago two and a half years ago but
120:43 - this will certainly help you at least
120:44 - with some of the technical aspects of
120:46 - using git and github
120:49 - [Music]
120:56 - according p5 just es6 interesting
120:59 - suggestion I think there's a roadmap of
121:05 - related to that you can find alright
121:12 - everybody thank you so much for watching
121:17 - this episode of the coding train I will
121:18 - be back next Friday
121:22 - not before next Friday next Friday stay
121:25 - tuned all of the edited versions of the
121:26 - mastodons bot videos are coming out an
121:29 - edited version of nabeel's live stream
121:31 - this morning if you're use the spell dot
121:34 - run platform you can sign up at spell
121:37 - dot run slash coding train if you use it
121:39 - please send me a tweet i mastodons toot
121:41 - a comment on youtube something like that
121:44 - I'd love to hear about it and hear what
121:45 - your experience was like okay what am I
121:47 - gonna do next time bonne nuit what am I
121:51 - gonna do next time I don't know but word
121:54 - Tyvek is coming up so actually the
121:56 - things that I need to do if I look at my
121:58 - other course that I'm teaching this
121:59 - semester 8 is the f18 this will really
122:03 - tell us tell me what I need to do think
122:08 - I would like to do Bayesian
122:09 - classification that's something I would
122:12 - like to do I have I did videos on this
122:15 - last year word Tyvek the LS TM thing I
122:20 - think I can probably just leave I don't
122:22 - need to I'm not gonna I mean I would
122:23 - like to make videos on that but I have
122:25 - nabeel's guest 1 now so I think that's
122:26 - gonna be fine and then work to vex so
122:29 - that's what's coming up next work Tyvek
122:31 - alright bye everybody have a great
122:38 - weekend

Cleaned transcript:

hello good afternoon good evening good night good morning there are so many time zones all over this world that we live in I am touched part of today was my mic muted which is rare I guess I'll start my mic muted and it takes me about five minutes to realize that and then the first five minutes of silence but you know today I'm actually speaking to you it's Friday I am looking forward to this weekend yeah okay about happen about what you're here for it's been a long week a little bit tired there was already a live stream today with a guest and feel the same which I will maybe mention I'm gonna mentioning it now but I'm back to continue the threads of last week earlier this Monday let's see sorry let me get the chat chicken going here alright so hi really ready yet so let me open up a web browser I'm completely unprepared for this in as I always am like I can't even get my web browser to open this is how unprepared I am so if I Lim lo later I don't want to try Safari thank you if I go to this YouTube channel called the coding train there's an upcoming live stream and one right now that's interesting but this is what I wanted to refer to so this morning this live stream happened this morning which was a live stream sponsored by spell which is a cloud computing service and guest Nabil Husein trained a LS TM neural network which is a kind of neural network that's wellsuited for sequences trained model on a text so text from an author this in this case a rapper was used song lyrics were used the model was trained and then after that was completed that model was brought into javascript into the browser and can be interacted with generating new lyric so if you're interested in that you can check out the live stream from this morning we did have some technical difficulty a few times here and there so at some point I'll hopefully be producing an edited version of that it was it was actually only it was only 58 minutes my guess is the edited version will be like 35 or 40 minutes or something like that and Rui in the chat are we read gamer who was watching me my other channel that I will not mention the secret laptop it's not so secret right here it is it's not that I want this laptop to be secret it's that it's just too many things blocking the way but alright but I'm on a mission here none of the last on Monday earlier this week here it is Mastodon trying again I spent two and a half hours creating a mastodon pot talking about what Mastodon is which is an opensource decentralized social networking platform I created my own instance called choochoo dot space it's still there Kouji member of choochoo dot space has posted this wonderful picture of a koala but okay we are totally using this fixture how do I get this image copy image address maybe yes okay thank you koji for somehow knowing that I could use an image of a koala koala let's put it on the desktop okay I don't know if we really gonna use this but I'm saving it for later and a Magikarp over here is talking about nice to see Schiffman talk about mastodon okay thank you all right so this is Mastodon and the instance that I'm using with my coding trained bot is Mastodon dot space bots and sometimes my the words keep coming out of my mouth but my brain completely shut off I bring a blue Lee shut off and words just kept coming because livestreaming and I feel like if I'd stop talking I'll be silenced but what would be the worst thing about silence all right that was good a little moan silence there I feel refreshed how do you feel I'm trying to decide if this makes sense to be a coding challenge like mastodons image bot processing image bot one things I love about this example that I'm going to do today is it brings so many things together brings together api's and node and javascript in asynchronous I'm gonna use a sink and a weight which is like es 8 JavaScript syntax and processing and creating images and shell scripting oh so many pieces together into one project the project that I'm going to build is a project that starts with a processing sketch let's see our recent this version of processing I have is three point four that's perfect starts with a processing sketch from node execute the processing sketch the processing sketch saves an image node grabs the image uploads it to mastodons media server then posts a tute to Macedon referencing the image so if we look at bots in space one of my favorite let's look at the local time line this is nice posting gifts but I really like the tree how do I find let's see if I search for tree bot I think I can actually just go to bots in space like if I want a cube storm oh it would be cubes oh interesting the URL for an account is its number so I can't simply just know the name of it but let me say tree bought at BOTS in that space will this find it for me here is the yeah there we go no I don't want to email it don't know how this here we go random trees oh no I can just do this so I can do this tree buck there we go no no Rann oh it is random trees it's random trees random trees I'm like a lunatic how long oh this is a different pot this is totally a different pot you're the one I was looking forward to fractal tree one nobody will tell me all right yes Mastodon again because it's not master that again it's so what do you what should this be a doesn't really matter I'm making the video I think that I like the idea of trying this as a coding challenge to Reba there's a different tree bot hold on how many BOTS could there be on BOTS in space just just humor me for a minute here like it posts free often the one that I'm thinking of all right I'm gonna give up in a second I like this one emoji DNA that's pretty awesome mutant emoji bot so it's kind of fun alright so here we go do I want to create a new bot just I think I'm gonna use the Prius so I think I'm gonna do this as a coding challenge but I am going to get myself who set up a little bit so what I need is to close these things then I need I turn open let's install the update okay I've got I term open we are going to go to the desktop mastodons and open this oops yeah we're going to get Mastodon bot to look at all this stuff in here Mastodon bot and this is going to be Jo tree underscore bot thanks tree underscore bot thank you Alka for finding that for me Mastodon bot 3 box in space at tree underscore bot yeah this is what I was looking for I want to make exactly this who created this are they going to mind a bot gendering tree is made by Alex Novi Soni okay by this person all right I'm gonna recreate this this is gonna be my coding challenge then close this I'm gonna be here I'm gonna close this I don't need this and then I need processing and I need this is gonna be long hmm I don't I don't I don't care I'm gonna do this the way that's gonna be right and then I need code Visual Studio code open and close these my son bought three oh boy oh boy I don't need any of these files that are extra stuff and everything else is fine and then I'm gonna start with this much code I'm gonna start with this much code so what I'm trying to decide is should I do this I mean this really doesn't matter because I want to just make this project here's what I'm gonna do I got an idea I'm going to act as if this is a coding challenge but I'm not going to say the words coding challenge I'm going to just do it as if it's a tutorial and then at the end if it feels like it could actually be one video coding challenge and it doesn't end up being multipart tutorial then I will record a brief intro calling it a coding challenge how about that everybody wins you know I win I mean I'm I don't know all right we're gonna I check out this whiteboard thing over here don't think that I need note though ooh whoa Oh wrong oh there it is they do want to erase the whiteboard actually which I'm going to do very quickly with my fancy eraser mechanism if I could find it I can't find where it did it get thrown away my erasers I know you can't see me right now I don't want to be seen want to be seen looking for the eraser am I going to have to go in the hallway and get a paper towel the earth will be very sad I have a nice reusable eraser doohickey is completely Oh though here it is found it this is actually okay okay there we go now got a marker I am going to okay here we go everybody stretch stand up stretch with me I don't know if this is maybe some correct stretching thing all right so other things that I need open here are I need I need the mastodon API Docs and mastodons API Docs okay so these I will definitely probably need to reference I've got the tree bot I've got the coding train bot and I've got some code and let's just make sure like that that's something okay all right oh I got a notification I probably should turn those off all these people are following me look at everybody it's all of a sudden so much activity here okay okay let's I just want to do something here that's good I'm trying to figure out like if there's I just want to uh can I just get rid of this for a little bit play sound let's get rid of this please sounds I sound I actually can I clear notifications yes oh no but I turn them all off there's no way to just like turn them all off or have a done pin yes there we go I just don't want I'm afraid of random stuff appearing that other people are posting all right Oh Adam in the chat apologies so if you want to join Chuchu dot space I have I created an invite for members of YouTube channel and patrons but I'll have to get off to generate I didn't realize that it expired I'll generate a new one after this is over okay hello I'm going to make something in this video and what I'm going to make is a tree bot I love this bot it is a bought on Mastodon it is called tree underscore bot it is made by Alex novo C was made for nom nom omamo which just must be some like national BOTS making month national about making but when does that happen is it now cuz it we should all make BOTS for national BOTS making month so I am going to I love this bot it makes a tree this is my one start over if I pour guests I could get who come here to do a guest video I don't let them like they don't start over like 15 times like me as if I was doing this live hello in this video I'm going to make a bot and I'm going to make an image bot I'm very excited about this project because it pulls together a whole lot of different things I am going to use processing to generate an image I'm going to use node 2x2 call processing to generate the image I'm gonna use no to talk to an API and the API is mastodons so one thing you might want to do is I'll refer you to all of my tutorial series about the basics of making a mastadon bot I will start largely from scratch here but I am going I've already gotten my API keys and I already have imported and installed this node package called mastodons api and this dot env package that that loads my API keys for me so that is stuff that I've done in another video if you want to see that I'll link to that in the video description but I'm just gonna get started so what is the first thing that I want to do okay actually let's go to so this is my inspiration tree bot made by Alex Novosti for national bot making month and I am going to try to recreate this my trees won't be nearly as nice so the first thing I want to do is I want to use processing now I don't have to I could find some node package that does drawing or generates an image SVG whatever but I I love processing it's my happy place and I'm pretty sure I could get processing to generate a treat in fact I don't even have to like write the code for this because I have before so I'm just gonna go to examples right here somewhere topics simulate no no no okay I'll be back in a second oh yeah I'm back I found it under fractals in lsystems tree look recursive tree by daniel keith lon this is my this is a recursive tree and as i move the mouse it changes the angle so let's alter this code a little bit let's say that we don't care about a framerate and let's not let's have the angle be random between zero and 2pi oh and it's converting it to radians so okay between 0 and 360 oh and it's doing it over and over again and draw that's exciting I'm gonna say no loop so it's done each time I run this I get a random tree there's so much more that I could do to the design of the tree and I'm so tempted to recode the tree but I'm gonna just leave it as is you know maybe I want to like not have so many large angles and there we go beautiful tree okay so now now that I've done that what do I want I want my processing sketch to also save and I'm just call it tree dot PNG so when it's done drawing it's gonna save an image okay this is exciting now I need to save this somewhere well where I've got my Mastodon code right here to talk to the bot and so what I want to do actually is I prefer to talk to the bot I've got my math lab cook brain is turned off today stretch break water over here need to slow down yeah I made the tree in p5 also in a coding challenge I've got my code here this is the code that will talk to the mastodons service and what I want is for this code to actually run a processing sketch but this is node this is JavaScript processing is Java and it's like a desktop environment where I hit the play button how can I possibly do this well the first thing I'm gonna do is actually go and save this processing sketch in where my bot is and I'm actually working in this folder mastodons bot 3 you can see the no modules bot touch is so I'm gonna save it there and I'm gonna call it tree at regen so I'm gonna save it tree Jen I'm gonna make sure it still runs it still runs and now what I'm gonna do I'm gonna show you a little trick now wouldn't it be nice if in the in terminal I could do things like just say hey run processing but says processing is not found what if I were to say processing Java permission denied it's different how interesting right I was gonna do that wouldn't it be nice if I could just execute a command like processing run of course in terminal and the shells are gonna know what that is but a little known fact about processing which I have done this in other videos before but just to start anew again processing command line there is actually a way to run a processing sketch command line by saying processing Java the path of the sketch and then run but the only way you can do that is by installing first processing java to your system so this is installing a command line command to run a processing sketch so I'm gonna do this install processing Java I'm gonna say yes for all users it's going to want to use my password I'm gonna enter my password because it needs it needs to be able to put that where it needs to go and now I can actually say processing Java and you can see I get all sorts of stuff it doesn't know what I want to do but watch this I can say let me just look in here there is the tree Jen processing sketch so I can say processing Java sketch equals is that what it was let's go look at the sketch equals now I need the full path so the full path and I'm gonna show you a way around this in a second is this tree Jen right this is the full path of that processing sketch then I could say run here we go magic it ran it look there's the processing sketch this is really cool now watch what's exciting about this and it's bothering me that the the background isn't 51 which is very important I can actually quit processing completely I don't need that processing open and still do this there's my tree beautiful ah but I catch one half process ago because I've got a little bit of a problem here and we can see here look that image is there it's now saved what I want to do is go back and open this again open open open open open and I want to add one thing like I want it to be I want it to go away so I actually want to say after I save it exit and I'm also this is going to be helpful for me later I want to say print line tree generated you'll see where this comes up later okay now quit processing and now I'm gonna run this Oh finished regenerated finished one more time finished okay this is really exciting because there's so much stuff you could do now here's the thing I am executing this command via the shell but I want node to execute it how can I execute it in node and it turns out there is a way to execute any generic shell command from node and it is with the child process package so if I go to child process you'll see here that there is a method called exec child process exact spawns a shell and runs a command within that shell truth of the matter is I might be useful to use this exact sink because I'm gonna want to sink me in synchronous meeting wait until it's done to go onto the next thing I've got a crazy plan here I want to do asynchronous stuff with es8 this wait and async function you may or may not have heard about so I'm gonna use this one exec so what I need to do is in my node code I need to say Const exec equals require and where was this it is in child process exec child underscore process no there's no yeah that's right huh Oh dot exec yes I'm confused so this is me requiring the child process package and I don't have to npm install this you'll know you'll notice that I'm on the nodejs documentation page I'm not in some separate thirdparty NPM package this is built into node but just like filesystem is but I've got to say to use it so require child process and all I want is that exact function so now there's no reason why I can't just say exec and then pass in what exactly this oh let me make this is so unwieldy so a nice little trick that I can do is I can actually always get the current path right if I want to get the current path I just type PWD print working directory well guess what I can actually have PWD executed within this command by using these back ticks I'm pretty sure this is how I do it so now I'd say run and I think I don't actually even need this first slash write run sketch equals print working directory vent regen run let's see if this works this is done okay so now so great so I can grab this this is my command we're gonna get to that the mastodons stuff in a second uh constant command equals let's just put this in a variable like this then I can say exec command and then that's gonna have a call back oh I don't want the let me just run this let's just run this let's see what happens no bot Jas Hey look what happened it made it happen now here's the thing I was the next thing I was gonna do is that a call back but I'm a new I'm not turning over a new leaf I'm turning a new page in the book of JavaScript and I I'm a kind of person who uses promises and not only a kind of uses a person uses promises I even use the async and await keyword to really make my life full of just ease it's not full of ease but I'm doing my best so what does that mean the thing is this particular node package to child process exec and I have a feeling if I bother to look at the chat which I'm gonna open up for a second someone's gonna tell me I could just use something else now that natively supports promises the e key does not work on this computer which is invisible to you oh it's the run I've been typing in the wrong password okay there it is Oh being told that nodejs has underscore directoryname so there are other ways people tell me otherwise I could get the directory name but what I'm going to do is I'm I'm going to promise a Phi which is a word apparently promise if I I'm going to probably look at this I must have googled this another time Felicity is very common by using Java not Java sorry the node package util so a node package util if I go look at util and I actually just want to be here there is a promise if I util dot promise if I so what I can actually do is I can say Const util equals require util and then I can say util dot promise if I with a weird word I don't know what happens if I promise if I myself this so now this require child process exact function no longer uses a callback now uses a promise and what does that mean that means I can say dot then and whatever the result the response is I can console.log that response and then I can also catch any error and I can console dot error that error now this might be and this this there's no semicolon there there's a semicolon there this might look completely insane to you if you haven't seen promises used before in JavaScript it's very similar to a callback but instead of saying a callback I basically have this callback that happens in dot then I'm also using the arrow syntax the arrow syntax is a nice way of sort of short handing this I'm getting the response as the argument to the callback and I'm console logging it so if you want to know more about those things I have a whole playlist about promises and a and a video about the arrow function that you could go and look at but this is the basic idea this is a little bit of an advanced video here with or not advanced but just I'm using kind of modern JavaScript stuff if you consider like three years ago modern okay so now I've got this exact function so let's actually run this one more time and see it should do exactly the same thing but look at this that response has standard out standard error so in other words standard out is what that's the thing that in prop I closed my processing sketch I guess I should have left it open the processing sketch has a print line in it so I can read whatever that print line is so I can actually get more information from processing if I want for example I could get the angle actually this this is great let's add a little feature to this this will be fun cuz why not make this video longer than it already is where my desktop desktop Mastodon Mastodon bought three tree Jen so what I'm gonna do here look at this this is great let's leave this open because maybe I'm gonna want to do more stuff with it I am going to let's just make the angle between 0 and 90 that's what those in the comments and then I'm also gonna say print line and I'm just gonna say angle or is it was it angle theta whatever a I'll just keep the a a and I'm gonna say floor a so just get the just get the or int am just to convert it to an integer so watch so now when I do this in in node I'm gonna say console dot log response dot standard out so I don't need to see that whole object I just want to see the stuff that came out of processing let's run it one more time because it that was the angle 42 spooky spooky 42 beating of life okay so great so here's the thing I want to once I have that image I want to post that image to Macedon isn't this all about Mastodon I've loaded up and can connect it to Mastodon through this like bot if you don't know what Mastodon is did I say this already I've got a whole set of videos describing that I'm gonna could go back and look but I want to somehow post it to this particular bot the coding train but ok so now in order to do that I I need to look up the functions in the mastodons API so I'm using this mastodons API node package and if I go here I can look and see that it has a mastadon get mastodons post so this is what I want mass on a post here's the thing I didn't realize this when I made my other videos about Mastodon because it says path parameters and callback but guess what this supports promises so I actually got to do this without a callback with promises I'm going to break this out and didn't I say I was gonna use a sink in a wait it's gonna write it with just that but I think I have to start a little bit I have to go a little bit further with the full promise of syntax then I'm gonna clean it up with a sink and a wait in a second so now there's no semicolon there so now what I want to do is I want to basically say this I want to post the image and I want to return this as if this returns a promise guess what I get to do I get to say dot then response and have another function right so this is the idea of chaining promises and this is what in theory I mean basically if the whole theory of this is to avoid callback hell and really we just did promises well it's all hell but eventually we will float into the clouds and feel like we're like butterflies on wings or something I don't know okay so if I returned the post that I want to do when that's done so I'm executing this command when that's done then do this that and then when the next promises done then do this we're all right so what do I need here the path so the first thing I need to know what's weird about and actually it might be worth just taking a minute to like write the steps out because it'll make it more clear I want to exact processing that's one then two I want to upload image and then three I want to toot alright so what this is the same thing for to the Twitter API it doesn't work that you just if you want to tweet an image you don't just simply send your tweet with the image you have to first upload the media get that path to the media and then you can tweet with that media reference so this will actually return an ID for the media and then as long as I attach the ID to this so this creates output dot PNG this creates an ID and then use that ID here and then I'm done then we're just like done this is the threestep process each one of these returns a promise so when do this then this then that alright that's the process I'm working with here alright so now so okay so the path so let's go to the mastodons API Docs and I'm actually looking for a media so we can click here and this is what I this is what I wanna do I don't media upload I think media uploads just this I post to here and then these are the things I need to send okay so file description focus let's look at that okay so I need to I'm gonna create some parameters oh no I'm up here I'm just gonna I'm gonna create some parameters and I need the file which is presumably output PNG and this is not exactly right yet I can't just put the file name there but I'll get to that in a second then I want the description now the description is really important this is not the text that is going along with the actual post what this is is alt text alternative text this is for accessibility so somebody who is blind or with low vision was using a screen reader instead of seeing this image would actually hear this description so I would say a randomly generated fractal tree oh and I want to get this is I'm gonna say Const angle equals response dot standard out with and then oh and I need to use my the new thing that I always use now which is template literals for Strings with angle so this would be the description and then there's one other so the file is required the description it says is optional but it really shouldn't be optional you should be using alt tax for accessibility and then a focus this really is optional I am assume you actually have not tried this yet but I'm assuming this has to do with where the crop is if it's showing a preview image something like that okay so then I can say so this is done and then we're path and then those parameters because this could be an array o path no but okay path oh yeah the path is media sorry I'm posting to this path the media path of the API with these parameters but this isn't right this I mean let's run this we'll get an error so I make the image finished params is not defined so that's a different error per an params whatever one more time run the bot weirdly it's like didn't complain at me oh but oh you I didn't mean to complain because I didn't console.log this response I know why I'm going crazy to show you this error when I could just fix the error in the first place all right so all this stuff came in and I looks like maybe this worked because I'm getting all this stuff but somewhere up here I'm gonna see like an error code oh so much stuff false high watermark I don't know this seems to have worked no this is nonsense this is saying this page is not correct let me go back but this doesn't this doesn't need I get it edit this out cuz it's not that you just go back to here so this is almost done but there's a problem I can't just pass it the file name this actually needs to be a readable stream and so I need to use the files file system package if I go and look for an ode file system package and in here somewhere I think there's like a create stream function and actually probably a better place for me to look is just right here in hold on I don't have to do this again hmm there's some stuff going on oh I didn't I didn't look into that no sorry sorry I forgot what it is create read stream yeah if that's what I want to think okay I'm pretty sure that's what I want okay sorry let me go back and do this one more time Thank You mats yeah all right so almost there but this actually isn't correct it doesn't work the API is not gonna just accept a string of the filename and figure out how to like read that file and post all the date of that file to the server what I actually need to do is give it a readable stream and if I and so the code for doing that it's part of the file system package so I need to I need to actually also require that and we could look up the documentation for it but I happen to know it I think so I need to say I'm gonna say constant stream equals file system create there it is read stream autocomplete thank you output PNG oh and this actually isn't even right because guess what remember output that PNG was saved in the processing sketch which is the folder tree gen slash output dot PNG so now this is the stream and this is the description that goes with it okay and then I want to make sure this worked so I want to actually console.log the response so now in theory I have the code all the way for executing processing uploading the image I need to want to get the response I need to get the ID and then I go and actually just post the status okay here we go let's try this unhandled stream error in pipe no such foul path no such foul no such file oh it's not called output dot PNG I called a tree dot PNG okay let's try that again finished and great so look this is all the stuff that I got back now it's kind of too much stuff for me to like look through oh what a pain did this actually work my goodness craziest but this is all I care about there's more important stuff there's more stuff lots of tons of metadata about the image you just uploaded but all I really need is data ID so let me just go here and say console.log response data ID and I've apologized apologies to the bots and dot space for overloading your server and you can see there's the ID okay now guess what oh can I should I start using I'm gonna just keep going why not go with this promise chain this is how I would do it probably then Oh No and then all I need to do is return a one more promise so I'm also gonna say constant parameters now I want to do I need to look at the API for for what post but just statuses so this is where as I'm looking looking looking looking looking actually I need to look for API v1 statuses sorry oh I failed do what maybe I want to maybe I should like actually now rewrite this using async and await I'm gonna do that I'm gonna do that I'm gonna do that I'm gonna do that I'm gonna go from where I printed this out now the next step would be for to use this ID and then actually in the in the in this response right I exec the I execute the command I upload the image and then I should be saying return MDOT post again and I'm going to statuses I should say returned MDOT post again and I'm going to the path I'm going to his statuses so this is what I should be doing but I can't resist do you see how this is I mean it's great I kinda it's kind of nice start the promise chain then do this return a new promise then do this return a new promise and if any error happens anywhere any here catch so why not but this is the thing this is now there is a way there is a new way for me to write all of this in what feels more sequential more synchronous in fact and with less kind of indentation and brackets and stuff and that is using this async and await syntax so what I'm actually going to do is I'm going to write a function I'm going to call it tutor or just toot and I'm going to modify this function with the keyword async this means this is an asynchronous function this is indicating to JavaScript this is a feature of es 8 a new feature of JavaScript that's indicating that this function will be handled asynchronously and always always always return a promise and it will auto magically it'll basically automatically return that promise so we'll look at that later how does that so in other words but this I want to do the same thing like what I want to do here is I want to say exact execute the command alright these are the steps and then I want to say post a media post the media the nice thing about using this syntax is I don't have to separate it out with these chaining these dot vens I can actually just use the await keyword what the await keyword means is don't go to the next line of code oh wait the end of this function so if I have a bunch of asynchronous things if I package them all together in an asynchronous function I can write them sequentially as line after line after line and essentially and you know I'm gonna have some other params here so this is basically I get to write it like this now I need to do stuff in between that's the thing like for example this returns a response and then what I want to do is get the angle and create the stream so this goes here so this is my step one this is my step one write execute processing look at it just exactly like this now I have my step two where I need to create these parameters that are getting passed in and by the way I don't have to make a separate variable it could be embedded right in here but it's just sort of like a little bit for legibility I'm making it something separate and so I'm now gonna say basically step two is upload upload upload media and that's gonna have a response and then what do I need I need to get the ID out of that and then I am now going to say step three and by the way I suppose if I'm being accurate about this this is all I suppose this is part of step two I don't know it doesn't this is a little bit silly what I'm getting myself worked up about but which line of code is part of which step I don't know but up but step three and maybe I'll name this params one just to be just four I don't know why why not have them have different variable names then step three which is params I want the status to be and this is you know I'd have to I think I know it's supposed to be but behold my beautiful tree with angle and then I should use the string litter the template literals again degrees and then I need ah so now so this room okay what let me look this up in the in the mastodons API Doc's give me a second to find this let's edit out me looking for it API v1 v1 statuses statuses jeez Louise there's got to be a better way to search on this oh it was all the way at the end here it is okay I found it this is the API this is the path statuses for posting a status and I'm this is the text of the status there are other things you could do here that I've talked about in previous videos but this is what I want media IDs now notice this is an array it's an array of media IDs because a particular status could have and it says here maximum for more than one image associated with it so you can upload more than one image so that might be an exercise that you try to do after this video but basically now I can say comma media underscore IDs and I just have that one ID so I just put make I can make an array in it there and then this has to be statuses params and then what I can do is I can and this is the response and I can just now say return response so if we could look at this all together I think you have to make this like a tiny bit smaller for you to see it can I fit it all in one nice place look at this look how beautiful this is it's almost like I've written this code in a language like Java or C that's like perfectly synchronous and linear and procedural because what I'm saying is a weight executing this command then do some stuff then await uploading the media and do some other stuff then a weight posting the actual status and when you're done return and guess what if I now say we may it's bigger again whoops if I say toot guess what this tooth function that I've written async remember I said it natively returns a promise well by the way I said return right down here so this thing right there is the promise it's returning and I actually might I could configure my own object which could be kind of interesting like what if I said return I I could just say something like success true and status stat status behold my beautiful tree whatever and I could just say angle whatever I could put like angle and then that angle there so I could actually configure an object and I could pull stuff out of the response there I could return that and then I would say then then response I can't spell today I mean I can never spell console dot log that response catch any error console dot error error and this needs a period here and I hit save and something's wrong too many not enough too many dots mmm two dot then response why can I can't see this oh there's too many dots too many dots votes are too many dots still too many dots toot then toot then response console.log response is it just not Auto formatting it no it's Auto for attitude and response console.log response dot catch Oh may I need a semicolon no then catch put a look at the chat yeah I know I should wrap things in a I can't get the password it's computer to work the dot goes on the next line oh that's what it is oops yes okay it's not too many was too many dots but I fixed that the issue is the dot goes on the next line that's the convention that's what it's looking for there now it's four rather than what that wanted to be so I still have to engage oh boy with this idea of a promise but I can I can basically wrap that all into this one asynchronous function and I just be able to chatter telling me I can actually I don't need to do the then and catch in this way because I could actually put a try and catch inside of here one step at a time I think I might be done all right let's see let's see what happens okay no response away oh so I have also reused so I should call this response one response to maybe there's a more thoughtful way of doing this response three and I didn't actually use the response but whatever there we go start the bot make the image the angle 72 finished params is not defined it was so close uh params one params two params to here and I think Graham's one there all right I'm feeling pretty confident a success angle is 56 flash finished that's a little weird but let's see here let's go to the bot look behold my beautiful tree with angle 56 finished degrees okay so there's a little bit of awkwardness there in that the standard out is just always giving me the word finished so because I would like this to work work without that I think I'm guess what I'm gonna have to do is that is that just something that happens like with processing Java because I didn't write finished anywhere in here right that's not a print line I put in here so I think what I could do is when that comes the standard outcomes I could say response I mean I could just do a substring I could do a regular expression so many things so many things I could do why don't I split it out equals response response standard out split and I could just split it by the line break right cuz finish comes after the line break and then what's and then I could just take the first one so this split is a function that takes a string and splits it up into chunks based on a delimiter and you can get really fancy with that but I think and then this should just be out without the caps lock I mean I should really test this so what is that visible on the street a little bit of spittle just projected out of my mouth I got overexcited well edit that part out perhaps I mean I really should probably test this but I'm gonna have to just rely on the fact that I think I wrote that code correctly that's my way of testing it let's run this one more time undefined true angle 55 what's that undefined there I liked seeing that oh there we go behold my beautiful tree with angle 55 degrees what was undefined what did i console.log in an undefined way console.log response standard out is that it no no that's ten finished wait if it was ten why did this become fifty five I'm so confused let's be a little more methodical here oh because huh Oh what am I looking at oh I kid ah it does it twice I didn't happening twice let's take that out apologies everybody this thing is happening twice because I had the old code in there I mean I'm just gonna delete that throw caution to the wind but a little mess here okay that's weird that I did that twice I'm so confused okay angle 74 just did it once there we go okay one more thing that I need to do just so this becomes a true bot is what I want to do is I want to say set interval and have it do this thing that it just did there every well let's have it do it every five sec ten seconds right now I don't want it to do it every ten seconds but just to boy I guess there's another another parenthesis there there we go no this is so hard maybe I should just write a separate function okay set interval then I put the function which is this which calls to which is this which does this every 10,000 seconds this is not right okay well look at this what a mess I mean if I was doing it without the arrow syntax it would look like this right and then this would go here no no that goes first ah right that's close what's wrong here this is opening the function that's closing it no there's no parenthesis there that's the end of the function then this then this we're good we're good this is it oh but look how we I hate I don't like this at all this is making me crazy I'm gonna do I'm gonna do this I mean it's so silly function tutor and then I'm gonna put this is like I'm a ridiculous person I'm gonna put this in Oh No Oh help me help help I'm gonna get this and I put this and then I'm just gonna name my function forget about this anonymous stuff this is what I want right I have a separate function which calls my asynchronous function does the vent in the catch and then I'm gonna have that happen every 10 seconds okay by the way someone in the chat a k1 and G Julian is asking would it be possible to ask the bot to create a tree with this that's right angle yes and that is where I'm gonna do any followup tutorials you'll see that in the next one okay here we go and we have a tree oh right it's gonna wait so one thing about set interval want long which is that I mean it works okay I'll just keep going now set interval will not execute that function immediately it will wait 10 it'll wait the amount of time before doing it the first time but now we did it twice every 10 seconds first one was angle 44 and the second was angle 28 let's let's wick away 10 so you can watch this video for 10 more seconds we can also speed this up now let it happen like 4 or 5 times but I think that's good so let's just go and check here and we can see 83 degrees 2844 there we go and 44 28 83 44 28 83 wonderful ok so this is working you know now of course I don't want to leave it like this right having a bot post every 10 seconds no one wants to follow a bot that post every 10 seconds maybe I wanted to just once a day it's gonna do maybe once an hour might be the maximum the most I would do but let's just let's if I want to do it once a day it would be 24 hours times 60 set 60 minutes there's 60 seconds in a minute and a thousand milliseconds in a second so this would now be but I wouldn't want it to wait a whole day so I probably want to call it once so I'll call it once then set the interval and I'm sure there's a more elegant way to do that that all of you will someday will write in the comments and here we go and node bah bah bah yes here we go it's just the first one and then now we're going to wait here room 24 we're gonna wait 24 hours oh wait yes we'll wait and then in 24 hours I'll still be standing here ok I could take the go home have dinner go to sleep come back this laptop would still be here and it would do the next one we're just gonna have to believe that that's gonna happen again there is a question of like well where would I actually want to deploy this I've got to talk about that video but just the quick answer is you're gonna want to find a server maybe you have one through a hosting company maybe you happen to have like a computer that's always on in your home or Raspberry Pi that can act as a server but you need somewhere where you can just let it run over and over again forever okay so thanks for watching this video making a mastadon image bot and what I'm going to do I want to do one more tutorial because what how would you do it so that if someone at mentions the bot let's say with an angle then the bot replies back with a tree with that angle let's see if we can make that work that's gonna be fun okay see you in the next video okay okay so Nathan asks a really good question about deploying wooden processing starting as a desktop app prevent the bots from working so I've actually covered this in prequel in my previous Twitter bot series yes but no so it needs a windowing environment for processing to run so that's gonna work on this laptop on a Raspberry Pi if you have a headless server like you know I'm running this instance off digitalocean so I could deploy the bot there I would have to run a bunch of commands to not to trick it I was gonna say but to you and I have this documented with for Twitter BOTS and I want to rewrite all anyone's to help me rewrite all these pages or basically do I intend to make an entire new version of this page with mastodons but I just I don't have the time to write this up but I think in here deploy bought to Amazon ec2 which is actually admittedly probably the hardest ways to deploy hits so but here somewhere in here I have the instructions for yeah so this you need to make sure that the server has Java and you can install Java that way then you need to do this weird stuff that creates a fake display for processing to render on and then you need to also like always run that to in the background and once you've done this it works so I have tested this not in a year but it does work yes I mean the stream is not over it is 510 hmm but I definitely want to fit this is going to be the end of the Mastodon bought stuff I'm just coming over here to look I have a bunch of messages okay oh and apparently I got a new a new member thank you I've sort of gone from the Chad happened in the middle of me thank you I think Joel Joel who joined as a member preciate it Joel with you Oh Joely can see joel has tha this dot icon this dot icon is for if you've been a member for left the first icon you get and then I think if you're a member later you get so that question is so now the question is sorry I should finish my sentences I have a problem not finishing my sentences if you're a member for more than a month you get a different one and two months I don't remember what those are let's do what those are at whatever okay cuz that's so the question is now should that be well should that be a coding challenge and or should just probably just be in the mastodons tutorials I don't know I never know these things I don't know alright so okay all right but I'm gonna do part two and then I'll think about it I'm exporting the sketch as a Java app would it make a difference it did it's still need processing the app still needs that that you can also do that but you still need a windowing environment we I don't believe that would remove the need for x11 1/8 Nathan asks in the chat but I could be wrong about that but I'm pretty sure like it it's not actually the processing IDE never opens its processing is just like it's just running they're just compiling the processing code and executing it as an app it's basically doing that for you so I'm pretty sure you need a windowing environment maybe there's some other way you could do it and by the way you don't have to use processing you know this is just I think really useful because you know it's sort of it's very I love the fact that it sort of gluing these different things together ok and just drink a little water out of sight water hasn't paid their sponsorship recently so I'm not going to drink water in in how you and visually in a apparent way sometimes the words don't deform in my brain and exit out of my mouth in a way that makes sense all right hello so previously I made a bot that picked a random number between 0 and 90 generated this fractal tree using that angle using processing made the image and then posted that image to mastodons using this coding trained bot at BOTS and space dot BOTS in Doc's pick whatever Hudson's face the instance so you can see a bunch of these here and so now what I want to do is instead of and the bot if we look at the code is just executing all of this stuff to generate the image and post it once a day so what I would like to do now in this video is change it no I'm not going to set interval in fact I'm not ever going to post an image I am only going to post an image as a reply to somebody else and I'm gonna look in their reply find the angle that they've specified and send them back a tree with that angle and you can just imagine the possibilities of things you can do I mean one of my favorite this is a Twitter bot but one of my favorite BOTS is lowpoly bot and what lowpoly bot does is it still running it's the question because most of these bots you can't reason why I'm using Mastodon one of the reasons why I'm using Mastodon is that these don't I don't think you can't really run these anymore on Twitter they've changed the API specifications too much so the idea is that you send in an image and an image process for you and sends it back okay so now let's do this so the thing that I need to do is I need to connect to a stream I've you I've talked about this in previous videos where I made a bot that just replied I need to connect to the streaming API and so the way that I do that is here MDOT stream so I'm gonna say MDOT stream and then I want to connect to the user stream and doing that I should get a promise then response console dot log response can you see what I'm typing here and then auto fill it's gone crazy catch any error console dot err err err err err and I put too many dots too many dots too many dots the dots go there where did the dots go I've lost the dot I really have a problem with dots apparently okay now so the idea is now anytime there is a user event anytime there's a user event I'm gonna look at that event now I've done this before isn't it okay for me to since I just did this in a previous tutorial I think it's okay for me to look up what I did in that instead of like figuring out again so a mastadon bot underscore two right now is where I had some code from a previous video and I can look at the bot code and I can see what I actually did is if I said if the event was a notification whoa oh look at this oh look at this ah you know what I've written this code incorrectly you have to configure when you're using the streaming API it doesn't work like the get or the post API you actually have to call this on function to specify an event so apologies for that good thing I looked the way this should actually be written is a Const listener like I want to create a listener that's connected to that user stream right whoops where's the other code alright a streaming slash user yeah I knew that streaming slash user and then I want to say listener dot on notification so if I get a notification and now I'm going to guess that this returns a promise but it will I'm so sad my doesn't give up I give up I quit I can't do this kind of syntax I did it with a call back before stream returns a stream listener instance see examples on how to use it give me a second here I can't over here event emitters do not return promises let's let's start over let's go back so that doesn't that that won't give me a promise that's fine that's fine I'm okay with that fine where was I so I want to connect to the streaming API and I want to connect to the user stream meaning anytime I get any sort of notification somebody favorite something mentions me reblogged me if I post something I think I get an event so the way that I do that is by saying m dot stream right if I have to go look it up here in this API m dot stream path and parameters returns a stream listener instance see examples on how to use it okay why not I've done this already in a previous video but so I could look at my previous code but let's actually sorry let's just go to examples streaming yes and what we can see that here so this is what I want to do I want to connect to the stream create a stream instance by connecting to streaming slash user and then on a particular event like a notification was that what it was oh no just a message so I it's the event here is called message and then on a message and this by the way I just been told from the chat thank you to Alka and the chat that the streaming API doesn't support promises so in this case I do have to use a callback and I can say response I like to use the word response like this so now here anytime I get a response and you start anytime there is a message what do I want to do you need a callback not a promise also please stop separating dots with keywords I don't know what that means why fact you keep separating the dots from the keywords oh yeah that's why I put the duck because I'm not used to this I broke I've been like for like 15 years with all this JavaScript promises nonsense I'm learning I'm learning give me give me a break here I could be going home there's a there's a baseball game starting in two hours I got that I intend to watch okay all right so in now I do want to look up my previous code because I need to figure out what I need to determine what I'm looking for in that response so I have that open here and you can see that what I'm doing here is if them if the event is a notification and if it's a mention that's what I'm looking for I'm looking for a mention so I'm going to say if response dot event equals a notification I'm just only going to do mentions and response dot data type I think equals mention is that right this is B just looking at my previous code response message data dot type message dot event so where is the mention in this one that I did mention ah message that data's right there message data dot type so I'm using different variable names which is fine but if the event is a notification and the type of the event is a mention then now I'm ready to basically do this right the idea if I mentioned go ahead and do this but and I don't need a separate function for this uh what up so I'm just gonna take this here but what I want to do is I need to add some stuff to this so for exam Paul I probably want to mention a user account and I want to have a reply ID and also that angle so I need to if I'm going to reply i all i want to add mention them so i need their account to reference i also if i want it to be threaded i need the ID of that post so i can include that and then the angle i want so now the angle shouldn't come oh I've got to send the angle into processing all right that's gonna be something we have to figure out okay I'm gonna get to that in a second so let's try to get the whole flow of this working that this is an interesting problem that I completely forgot that I had to figure out so they so first let me get the ID is and I did this before so I'm just going to we can see the ID is this this is pulling the ID out of them and I you I said response instead of message which is fine and then the account name is right here so I want to also get the account which is also a response so I can then pass in the account passed in the ID eight now the angle is a tricky one so what am I expecting the person to say I guess I'm expecting somewhere in there post that there's a number and they could put multiple numbers I'm just gonna pick the first number so what I'm going to do what this is by the way my inspiration the tree bot but where where am i I'm looking my code I need to get the content of what they've sent me this is their message content so what I want to do is use a regular expression so my regular expression is going to be I need to find a number the number that I want is between two and three digits so I get then going to allow I mean do I allow at angle greater than 90 I mean sure I could actually it could be any number right I could really just say any number doesn't matter how big so I want to match this and so if I say regular code so if I say content dot match regular expression is this now I've forgotten Oh regular expressions work so let's just go to the browser for a second and let's noodle around here so let's say if I make a ret their expression and I make it equal to this and then I have a string like hello 42 goodbye if I say s dot match that regular expression what do I get ah perfect I get what it matched the index and some more information all it cares about is what it matched and I don't need it to be global I don't need to get all the numbers like I could get all the numbers and average them or something but I'm just going to get the first one so this is fine so then I'm going to and do have to deal with the fact what if it doesn't match anything so let's see what it gives me if it doesn't match so let's say s equals this and I'm gonna say S match regular pressure no so that's fine so now I'm going to say results equals content match regular expression and the angle so I'm gonna say if results all right could I if results I could probably use that ternary thing then the angle equals results index zero otherwise angle equals o otherwise I'm gonna say there's no angle I could reply and say you need to you need to you need to mention me with a number so I'll so I'm actually going to just say yeah angle equals negative one so I'm going to use negative one as like a and I can actually just do this and then do this okay great so now in theory now I can pass that angle here so all right now one thing I can do let's just do this so if the first thing I want to do is just say if angle equals negative one right if I've gotten a negative one angle I want to actually just be done like I want to say oh but I have to mention the person okay so I have to say if in a status post can I find that here right so the text of the status if this texassized in reply to ID so this is important so I'm gonna say please specify an angle in degrees using digits cuz it won't work you say the word 99 eed to say in reply what is it in reply to ID in reply to ID is that reply ID and then also I I want to use their the account so I'm gonna I want to start with the account account and do I'd say at I think I have to say at the account please specify an angle and digits then in reply to ID okay so this is good and I'll call this and then I'm going to say response I'm gonna say prams in response and it's a success angle negative one okay so this now should if I run this and you and then I'm gonna put an else here this function has gotten quite long but basically what I'm doing is first I'm checking if there was a legitimate angle and if there wasn't I'm replying back to say please specify an angle in degrees and then let's see how that goes so right now if I run this bot oh I forgot to make a new one that's fine laughter if I run this bot somebody should feel free to add mention me without a digit could somebody do that please I'm looking at the chat I'm taking a break for a second this will get edited out okay I got an error okay all right somebody at messaged me thank you for helping me debug this and I got an error in box yes line 25 about touch is line 25 ah response response response sorry response response all right let's try this again be prepared all right at mentioned me with no number please you can put a number in it but it won't work if you put a number in it all right ooh interesting please there we go okay so let's take a look so someone mentioned B with a number that's great that we had both of those tested and we can see this one said please specify an angle in degrees using digits that's right and then this one just said behold my beautiful tree so I haven't done the thing where I actually get the angle so let's let's first let's just first if I really do get an angle let's do all the same steps but right now I'm going to also add at account so I'm going to mention that account with angle and then I'm going to use the angle that they asked for and then so this and I need in reply ID in what was it in repose same thing in reply to ID where is that where is that where is that here we go and reply to ID okay so now if I run this one more time you can now add mention me with an angle and you'll get a tree back or you can at mention me with no angle and you will get a message back saying you need an angle but I won't be using the angle you asked for it just yet but let's just see if this works alright somebody somebody still mentioned me please with no angle with nono digits that's weird once somebody know digits please no digits okay okay great so we can see that we got one two three four five mentions one of which had a negative one so let's see let's just check our bots now and we could see 60 3856 now here's the thing I'm not actually using the angle it's still just a random angle so what I need to do is oh and I forgot that I was pulling it out of here so it's actually not lit hold on let's lose the alka asked for 56 and I made a tree with 52 so now let's take this out right and actually try to use that angle now here's the thing I can't just how do I do this so what I'm actually going to do this is interesting is I need to go back to that exact command where did I have that where is that elk command so that's what's all the way way up here so what I actually need to do is I need to add another argument to this and so what I'm going to do and I think well I haven't done this in a while what's all right let's let's do it this way sorry let me grab this command we're going to figure this out together and we go back to here and I'm gonna run that command so this runs and I get the egg that's fits out the angle now there should be a way in processing for me to get the arguments how do you get the arguments in Java command line arguments somebody must know this it's like system dot args this is like the most this is like the core string args is it just there in a global variable somewhere in processing I should know this I did this like a year ago print line system dot args what's the chance like that that's like a thing No timeout gonna look us up why is his computer keep going to sleep by the way Adam asked in the chat doesn't only reply to local or any account in the Federation it will apply to any account the Federation I could set it up to only reply to local but that's not what it does by default so I did this like a year ago with my Twitter image reply err oh but uh oh this was even crazier because I download an image that somebody else posts I'm pretty sure yeah Oh args it's just in args it's just in args silly me silly me okay I looked it up I can't believe I forgot this but processing actually just has builtin a variable builtin variable called args which has those commandline arguments so I'm going to put print a lot print array args and now I'm gonna do this we should see whoa oh there it's no because there were none that's weird because where do those go they're not here where how do I pass arguments if I just add something else like here well yeah there we go okay so if I just add the arms come at the end I thought make some of these might be argument of course there's none so we can see here if I just execute it with an argument like with the angle 40 then 40 because I have some iPad to be help in there block 40 comes out okay perfect this is much easier than I thought all I need to do is now say command where do I execute that command right here execute command + a space angle right I guess I could use a template literal there so I just need to add that angle there and you know I probably want to double check to make sure there are any args but all right if args is not equal to know then and then I'm gonna I'm gonna make this a global variable a equals zero and then I'm going to say a equal args index zero I guess that's gonna be a string right so I need to convert that to an integer or a float maybe and then I don't need it here and now here we go so now if well let's take out the exit just so we see let's do this processing Java run with the angle 10 that looks like the angle 10 right now let's run with an angle of 90 and that looks like the angle 90 perfect I've passed in the angle and so now I should be able to I mean right is there anything left to do I think this works cuz I got the angle I've got the angle I'm going to give it the angle yeah all right what the hey ho let's run this node bot jf macedon bot starting and now I'll just wait for a little bit try test anything you can imagine Oh whoops sorry stop stop it's funny like actually this is fine I forgot the exit thing so amusingly I forgot the exit thing so it's opening up processing but it's never finishing so it's actually that exit thing is very important because I forgot that I had that in there I've got to put that back in there and let's try this one more time and here we go all right thank you everybody this looks like some good testing I hope that knowing is like and so let's take a look now all right thank you everybody this looks like some good amount of testing let's go now to box in space and take a look here is a behold my tree with an angle of ninety please specify an angle so we can see here nope right that worked here a right triangle has an angle of 90 degrees I love right triangles there we go perfect so 89 and there we go 128 degrees 128 this is working this is done so I hope now you have enjoyed you can imagine sort of I mean there is another piece to this that I could do which is what if the person sends me an image and I do something image and send it back I guess I'll have to come back another day and do that one but now you can see the full process that you can have another user at mention you with some data text data use that text data to generate an image and send it back up so hope you enjoyed this tutorial I hope you make some wonderful box at BOTS in space and I will see you in future video okay don't be snide asks is he okay definitely not I think I've ever been okay looking and I'm also going bald hey Cody Gardner with CJ is here hello hello hello hello alright I think I'm done for today it is 540 I have got to go does anybody have any questions they want to ask I can't believe this doesn't it doesn't crash anymore I think I'm done oh the question is should this that should that have been a coding challenge maybe it should just be two more tutorials I should have realized that from the beginning though I don't know anybody of any I guess I'm gonna like I'll pretend I'm gonna do two intros just in case I don't know this is before people haven't wash before this is the weird thing that I do that this all gets edited later it's a shorter standalone videos that go in playlists so I often like after I finish something we'll do an intro so Daniel writes make it a tutorial joel asks are there limitations to the shell commands executable by node not really I mean the limitations are what you can excuse the shell command it's there's no difference between calling the exec function and node and just typing the thing into the Shelf there is this limitation though that if the shell command opens a window or operates like you know some application that's on a mac computer and you happen to deploy this to a server that's a linux server it's not gonna work but as long as the system you're using supports that shell command you can execute it from node and it's sports node okay hello welcome to a coding challenge this was a little bit weird because it's more like an extension of a tutorial series that I'm doing but I did it all in one video so I think maybe it can be a coding challenge I completed it I made a bot for Mastodon that picks a random number generator little fractal tree using that angle and then and then post that image this is inspired by the tree bot which I'm going to reference again in a second because there did before and so but so if you're about to watch this enjoy the coding challenge I will publish the code for this make your own Mastodon bot if you want to know more about what is Mastodon and how do you sign up to get an API key and all that stuff then I will refer you to the tutorial series of which this video is also in the playlist I don't know does this make sense whatever watch the video I do the whole project and then I finish it what if I send a very big number wave at more than 360 should work I'm you know it's it's the rotation once you get if you 365 it's gonna be the same as five degrees so I think it would still work I could constrain it if I wanted to within the code okay okay part two of this coding challenge yeah in part two of this coding challenge I actually change it from just being a bot that automatically posts a tree every so often to a bot that receives a post a toot their call toots I just got used to saying tweet and now I gotta say to to this is very hard it receives a toot mentioned from another account Nathan thank you to Nathan growl for helping me test this and it says give me an 89 degree angle tree please and then I decoding train bot replies generates that tree image and replies back with so I complete this aspect of it is and it's kind of convoluted I probably refactor that code a little bit but and I hope you enjoy watching this second part of the coding challenge yeah a float would just get the integer part because of the regular expression that I'm using I could have made my rhyme expression so sorry the question is from Adam I wonder how would it handle a float or a number greater than 360 floats would probably be okay so I could definitely change my regular expression to to account for that I forgot where I have it so I could say like optionally you know something like optionally a dot but I'd have to do this right because I want a literal dot optionally and then some more digits optionally whatever something like that I could do but I'm not can I leave it running for a while I want some trees um I can why don't I play this I kind of need to I kind of want to make a I probably shouldn't make the bot that does all the things in all the videos that I've shown so far and then deploy it anybody wants to help with that so anybody wants to help with that let me do this let's do this real quick before I go let's create a new repo coding train bot no no stop coding train bot stop bot bot code for coding train a sure whatever yep okay then I am going to let me create a new file dot dot git ignore and I want to ignore node modules sorry that you can't see this and I want to ignore what did I have in what am i ignoring in all my things I don't want dot vs code I think because who knows what's in that and I don't want dot env so whoops so this is get ignore come on you can do it you can commit this new file there we go let's try cloning this get clips get clone this open so what I'm gonna do is where's that coding training Mastodon bot Mastodon I'm gonna put so here's what I would love oh boy I would love you forever if you can help me with this so I'll file the issues so let me give me a second here I so I would I want to get rid of I don't need this kid ignore like this was only that get ignore I don't need that get ignore okay so now get status oops okay I'm gonna be very confident I did get ignore correctly and I'm gonna get add git commit and I'm gonna say upload whoops PAH shoot ah how do I associate editor with git I can't use VI I'm incapable using VI so I'm gonna and I could just do M but I'm I'm trying to be a good citizen and you guys are really spamming this bot oh shoot all those files thank you I forgot about that oh good but I haven't I haven't done that yet can I remove those is it too late can I unstable how do i unstaged files can I just do remove get on stage on staging files get reset oh great let's do that get reset go get status perfect thank you that was easy get reset so here I don't want any of these and here so it's just in that one in theory yes I think I really have to shut off the bots making me crazy get status wait whoa whoops good status now let me get my editor working here I did that on the camera went off here we go git config global core editor get config global quartet etre code wait I think that that right yeah so now all right so now I'm going to add those stage those files to wait for that to draw that tree say get commenced okay I have to shut it off I'm sorry everybody I can't take it anymore I can't take it anymore okay git commit alright so now I am adding code from all mastodons tutorials this needs some work I'll open issues but it's missing the image uploader thought without replying and I also intend to put all of this together in a single bot and deploy it okay so this will be poll requests and community feed welcome yeah we did that and then get push origin master okay so so what I need now anybody wants to oh and I forgot to put this he's a transfer of this repo transfer repo transfer what is the name of the repo coding train baat mastodons and new owners should be coding train transfer the repository to my password sure now I want to go to a coding train organization and coding train baat mastodons and by the way now because it's in the coding train there's no reason I can just call it Mastodon bot okay so now let's go to did it not change that come on settings settings masted Mastodon bot rename there we go okay so okay so now I need to profile some issues missing image uploader bot when I went on to code the example bot that when I went on to code the example bought that replies with an image I wrote over the bot jeaious file that was the that that posted posted a tree every 24 hours I would like to revive that if anyone was I like to revive revive that so and so what do I have here there's Mastodon bought one which is just the one that does a random number that's fine Mastodon bought two is the one that replies favorites so that's fine so then also issues a new issue one box to rule them all I would like altum Utley the examples that will live in but here I'd like to combine them all I'd like to combine them all as one bot that I can deploy deploy and leave running for testing and fun times and this labels Help Wanted and issues labels help want it okay also probably redo with promises should i redo the earlier bot examples with promises i don't know question it's tricky because i I'd like that to be available but but I used callbacks in the videos so would make it hard to follow along maybe I should both available all right so now everybody has their work cut out for them this weekend I'm accepting pull requests from here and if I could somehow revive this laptop I can look at the chat all right so ohok tober fest I don't know I don't know about this hack Tober fest I don't know how to make that happen what there's no pull requests yes still in two minutes I have to go it's six o'clock American League East Division Series Yankees vs. Red Sox you can all try to guess who I'll be rooting for go Orioles next year's gonna be the heir Orioles go Orioles I don't buy sure brought my Orioles baseball hat and but I don't have that with me all right so I am happy to take a couple questions while I kind of figure out if there's anything else that I need to do I will put on my oh you don't have to do anything to allow users to participate in the hack tobor necessarily just for visibility on their site oh so wait is there a way oh there's a good question here Joel in the chat rightz also do you need to auto delete the images to prevent buildup dan or are they not stored by processing okay so this is a great question so to be clear the if I run if the bot runs where let's find I don't know I go I guess I deleted the image let me run it again I don't know so I'm running this bot to be clear if this makes an image of a tree it's going to save it as tree dot PNG on the computer so there is a PNG on this computer then it's going to upload that as a media file to mastodons where it will be stored permanently on you know on the bots in space server and then and then it's and that's those are the two places where it is now if it does it again it's going to overwrite the image on this laptop because my processing code which I've now closed just says save tree dot PNG so I'm not numbering them I'm not saving it's always overwriting it but then when that gets posted that's a new media file so what I'm doing is I am building up a lot on the box in dot space server presumably but at the moment hope you know the server I guess can sustain a bunch of image bots I don't you know I want to cautiously not go crazy with this I'm going to turn this off but you'll see here even though it made three images in this folder only the last one is there the zero angle tree good question Oh maintaining a repo create issues labeled or label existing ones hacked Ober Fest on your github projects to help contributors know what to work on tag any spam or a relevant pull request with the invalid label to disqualify them so okay let's I guess this is a Oktoberfest I guess is a digitalocean sponsored thing and if you do a certain amount of pull requests you get like a tshirt okay oh boy I got a lot of so let's just do that right now real quick for these issues so labels I probably have to make one new label hack tober fest October fest this should be like orange I'm just gonna keep instead of trying to figure out orange oh it's pretty orange yeah good enough okay create label issues labels Oktoberfest oh boy anybody wants to help me here's a prawn I have so many opensource projects that I should go through I'll do this on some other things too other coding trained repos maybe but that's a place to get started okay that's great thank you for letting me know that I also wanted to I should have done this at the beginning I forgot but I wanted to mention processing India I think it's processing community today in India there are actually 4 processing community days in India in these 4 different cities the one in Bangalore is being organized by to an alumni and to alumni of the ITP program where I teach so I encourage you to if you're interested in getting involved with any of these to check them out matura had emailed me and said to mention it on a live stream so I'm doing that now I'll try to remember maybe at the beginning of the next one to mention it goes who knows I'm still watching this now ok Oh Alka asked which folder would you want the combine Bhatt called mastodons Bhatt combined so I'm open to any way of reorganizing the repo maybe actually just have a folder called Bhatt and that's the combined one and then the other ones are like maybe a folder called Bhatt folder called examples so Bhat is the one or it could just be in the the root directory could be the actual Bhatt and there's some examples but that's probably confusing so but something like that I'm open to suggestion ah this is such a great question oh well V asks opensource is daunting for beginners how should I start this is such a good question and a really free foam just keeps ringing hold on just hold on a second hello yes okay sorry that was important I had to just answer that let me just send a message here and that's fine okay okay what was I saying oh yeah I'll contribute to open source this is a really tough problem I actually am teaching a course this semester open source to do at ITP let's see if I google that if it comes up and so if your this is a course that I'm teaching and you know in here under resources I would this is some nice guides and open source projects for beginners there's a lot bunch of readings that I would suggest that are here on the syllabus for this course I mean you can read a lot of the students post and respond so this this course is about contributing to open source projects so there might be some places here that'll help you get started but my my recommendation is and this I realize that not everybody can do this but if you can find a local meetup where an open source project is hosting an event to encourage people to contribute it's really great to be with a group of people who are learning and figuring it out that's a really wonderful way to do it I'm p5.js we try to have these and processing foundation we try to have things like that when possible I know that I'm dev in New York is having like a hack Tober fest event so this is is you can sign up and some stuff here there I think they're having like a meetup for this so this is just about Oktoberfest but there is also I think on October 10th they're having a hack Tober fest Meetup so that's just one example so that will be my advice is really hard and but you want to try to find what's really nice about here's I really recommend looking at these great for new contributors awesome for beginners and firsttimers only links because you want to find an opensource project that's going to have a welcoming atmosphere and that's that's that are looking to help bring beginners into the community and I would hide I hope then that's certainly our goal with processing and p5.js in the processing foundation ciao shebar Aurora Chevron good night I say good night in Italian yeah I need to learn about like modules and imports and exports that's like an es6 or NES 8 thing right that's a thing that I'm not using yet that I need to learn about right instead of using require or instead of just like importing a library and like the index.html maybe that's the thing that I need to learn about and do some stuff with somebody in the slack Channel please let me know so Joel says I should post that answer as a video I mean maybe that's I would like to do some specific videos about contributing to open source certainly I do have a github for poets if you google that you'll find mine this is these these are doing quite a while ago I think they're still mostly uptodate think some things have changed these are 2016 so almost three years ago two and a half years ago but this will certainly help you at least with some of the technical aspects of using git and github according p5 just es6 interesting suggestion I think there's a roadmap of related to that you can find alright everybody thank you so much for watching this episode of the coding train I will be back next Friday not before next Friday next Friday stay tuned all of the edited versions of the mastodons bot videos are coming out an edited version of nabeel's live stream this morning if you're use the spell dot run platform you can sign up at spell dot run slash coding train if you use it please send me a tweet i mastodons toot a comment on youtube something like that I'd love to hear about it and hear what your experience was like okay what am I gonna do next time bonne nuit what am I gonna do next time I don't know but word Tyvek is coming up so actually the things that I need to do if I look at my other course that I'm teaching this semester 8 is the f18 this will really tell us tell me what I need to do think I would like to do Bayesian classification that's something I would like to do I have I did videos on this last year word Tyvek the LS TM thing I think I can probably just leave I don't need to I'm not gonna I mean I would like to make videos on that but I have nabeel's guest 1 now so I think that's gonna be fine and then work to vex so that's what's coming up next work Tyvek alright bye everybody have a great weekend
