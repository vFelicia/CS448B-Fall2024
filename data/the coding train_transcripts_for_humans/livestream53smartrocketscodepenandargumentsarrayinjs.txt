With timestamps:

00:01 - good morning welcome to another episode
00:04 - episode 53
00:07 - of no wrong
00:11 - button I don't if you can hear that
00:15 - um I might pick uh I am my name is Dan
00:18 - schiffman I'm here live from the school
00:20 - for poetic computation on a Tuesday
00:23 - Morning July
00:25 - 202nd perhaps I don't know it's 10:45
00:28 - a.m. where I am I here to do some
00:31 - programming to talk about this is like
00:34 - rainbows and
00:35 - unicorns and all sorts of stuff um I've
00:39 - got the I got a new song on my
00:41 - soundboard with
00:44 - uh wherever need to think about random
00:47 - numbers I'm going to do a coding
00:49 - challenge today which will involve
00:51 - programming in JavaScript which means I
00:54 - don't ever want to
00:58 - forget sorry I'm a little too excited
01:01 - about like sort of getting the
01:02 - soundboard thing going I'm I'm still not
01:04 - all the way where I hope to be at some
01:06 - point but anyway um let me quickly give
01:07 - some introductions my name is Dan
01:09 - schiffman um this is coding rainbow I
01:12 - already said all this stuff um if you
01:13 - are watching this as an archived video
01:15 - on YouTube uh go ahead and look at this
01:17 - video's description if you want to skip
01:18 - ahead and find the time codes to where
01:20 - actual tutorials and programming things
01:22 - happen
01:24 - um and uh what else did I want to say
01:29 - Okay so I want to get I I have this as
01:31 - you all know I'm working on beating my
01:33 - record right now it usually takes me
01:34 - about 30 minutes before I actually start
01:36 - doing anything today I'm looking to make
01:39 - that happen within at least 15 minutes
01:41 - um let me just give you a little bit of
01:43 - background here in case you are new uh
01:46 - if you you can always go to coding
01:48 - rainbow.com that's the URL there is
01:51 - where you can uh subscribe on YouTube if
01:53 - you want to join the slack Channel you
01:54 - can become a patron on patreon and if
01:57 - you just want to get emails uh sent out
02:00 - to you when I'm going to do a live
02:01 - stream uh which I've been doing once or
02:03 - twice per week uh you can put your email
02:05 - in there there are only 3 days
02:08 - left to get your uh coding rainbow uh
02:12 - t-shirt uh um it is uh it is three days
02:16 - the last date is July 29th which also
02:19 - happens to be my birthday this Friday I
02:21 - will be at some age which has a a number
02:24 - which has a four and a three in it you
02:25 - can guess what number that is um and I
02:29 - think that's right uh anyway you can get
02:31 - pink and blue and green and you can also
02:34 - get uh some uh kid sizes as well uh if
02:38 - you have uh any babies you want to give
02:40 - them a coating rainbow onesie okay so
02:42 - that's my um yeah I was going to say
02:46 - what number is my birthday my age will
02:52 - be I'm waiting for a four and a
02:55 - three
02:57 - three ah four there we go okay okay um
03:01 - so uh what is going to happen today so
03:04 - uh on so one thing I should mention is
03:06 - one thing that I do is uh I
03:10 - am um with the help of MAA um after I do
03:15 - a long session like last week I believe
03:18 - it was last week I did a three-hour
03:19 - session on genetic algorithms was on
03:22 - Friday actually and then usually what we
03:24 - do is we take um uh and edit the
03:28 - videos I can't what happened to me I've
03:31 - completely lost the ability to talk give
03:33 - me a hold on a
03:39 - second hello I'm back I I I uh put my
03:43 - brain back
03:44 - in um so usually what happens after a
03:47 - long session is then uh smaller shorter
03:50 - tutorial videos are edited out of that
03:52 - longer session but those tutorials have
03:54 - not arrived yet they will be coming um a
03:56 - little late this time around but I'm
03:57 - just going to Dive Right In and do
03:59 - another live session I need coffee no
04:01 - trust me coffee not a good thing for me
04:04 - although actually I do um I do drink
04:06 - coffee again but there was a while uh a
04:08 - while for a while I didn't drink coffee
04:10 - so let me talk about the there's three
04:12 - things I want to do today one is I want
04:14 - to finish up my discussion on genetic
04:16 - algorithms I'm going to pick off where I
04:18 - last left off in the last coding rainbow
04:20 - session on Friday so I want to do three
04:22 - more um three more genetic algorithm
04:26 - examples um one of which I will do as a
04:28 - coding challenge I'll program the whole
04:29 - thing from scratch which I think uh um
04:32 - based on feedback people have enjoyed
04:34 - that um so that's one thing I'm going to
04:35 - do today the other thing I would like to
04:37 - do is talk a little bit about machine
04:38 - learning and neural networks which I am
04:41 - planning to dive into on a future coding
04:43 - rainbow I just want to give you some
04:44 - thoughts and resources of things that
04:46 - I'm reading and researching in
04:48 - preparation of making some examples so
04:50 - if you want to kind of read some of
04:52 - those things too uh give me your
04:54 - feedback I want to talk about that and
04:57 - then uh I want to experiment with
04:59 - something so I have a a a pro codepen
05:02 - account now codepen has something called
05:04 - Professor mode and I was had a Twitter
05:06 - conversation an email conversation with
05:08 - codepen that they opened up my account
05:10 - to allow up to like a 100 people I think
05:13 - to live follow the code so what I'm
05:15 - going to do is I'm gonna oh maybe we
05:17 - should just try this right
05:19 - now so I'm gonna open up a browser and
05:22 - I'm going to go to codepen is it Cod
05:24 - pen.org it's not Cod pen.org it's Cod
05:26 - pen.com uh
05:29 - I'm gonna log in uh
05:31 - oh uh
05:34 - oh uh oh
05:38 - no I don't know my username or password
05:41 - I do have it on my ah I have it on this
05:43 - other computer uh hold on
05:47 - uh so this is random this is
05:52 - noise I was just trying to give you some
05:54 - music to listen to
05:56 - okay uh I'm looking for on this computer
05:59 - I have
06:01 - have one password and I'm looking for
06:03 - code
06:07 - pen and I see what my username is oops
06:11 - ah ah ah
06:16 - ah hold on
06:18 - everybody got
06:28 - it
06:31 - s s sh I FF m n
06:39 - and look at this look at this lovely pen
06:42 - of rain I love this very nice okay so
06:45 - let's see if we can make this
06:47 - work I can't as always I always forget
06:50 - the this dot this dot this dot this dot
06:53 - I'm which song is that which button is
06:55 - that W okay okay so um here we are let's
06:59 - see if we make this work uh I should
07:02 - have looked at this in advance but I'm
07:04 - going to make a new pen I'm going to
07:07 - call it coding rainbow
07:10 - test and then now how do I turn
07:14 - this into Professor mode anybody have
07:19 - any ideas
07:21 - settings
07:23 - uh uh change view
07:26 - no uh save
07:30 - maybe if you all just go to this link it
07:32 - will just work all right in the chat go
07:36 - to this link codepen.io
07:38 - shiftman pen capital J capital K
07:42 - lowercase k DPM see if you can go to
07:45 - that
07:46 - link
07:51 - uh and see if uh you can uh see
07:56 - it you should have looked at this in
07:58 - advance Nuno writes in the chat should
08:00 - have looked at this in advance the most
08:02 - repeated phrase in CR uh thank you
08:06 - Oliver for posting that into the chat it
08:08 - appears to work so are you seeing okay
08:11 - so are you
08:13 - seeing uh hold
08:16 - on do you see this live typing as I type
08:21 - it on your
08:24 - screen if that happens that will be so
08:27 - magical
08:29 - I'm wondering I'm waiting
08:32 - yes so the only problem is if you're
08:34 - watching this as an archive uh you won't
08:37 - uh you won't be able to see this but
08:38 - this I think is a very exciting
08:39 - development because what this means if I
08:42 - do what I can do is this use this
08:43 - periodically to demonstrate a concept an
08:46 - HTML CSS or JavaScript web programming
08:49 - concept and you can actually have the
08:51 - code and follow along so what happens oh
08:53 - you don't see that
08:55 - live you just see the oh if I hit save
08:59 - does it is it update or you have to hit
09:01 - refresh reload is needed okay so okay
09:04 - okay time out I got to go to Professor
09:06 - mode
09:07 - somehow uh maybe my
09:10 - account uh let's just check and see uh
09:15 - settings um
09:18 - account thank you for being a pro I have
09:21 - a pro account uh GitHub Twitter I'm
09:26 - looking for who has anybody used
09:30 - Professor
09:31 - mode all right hold
09:34 - on you have got to change VI oh Arno is
09:37 - there so Arno I know has used this so
09:39 - I've got to change view okay okay okay
09:43 - change view drop down okay okay I'm a
09:45 - little
09:46 - bit change view ah there we go look at
09:51 - [Music]
09:56 - this make way I don't know I singing
09:59 - songs from Aladdin all of a sudden
10:01 - that's a little bit weird uh oh okay so
10:04 - change that okay ah so now students
10:09 - watching zero now how do
10:12 - I how do I um how do the
10:17 - students find the url to go
10:21 - to okay I just have to add SL Professor
10:24 - what if the if as do does the student do
10:26 - you just go to this view do you just go
10:29 - to the slash Professor that's what I
10:31 - would like to
10:33 - know
10:35 - uh okay and now more typing and
10:42 - testing
10:43 - and
10:45 - um uh oh two students watching that's
10:49 - good console oh look at that
10:58 - uh
11:01 - and uh I get the JavaScript code to
11:07 - run 11 students watching whoa okay let's
11:10 - see see let's see
11:13 - here look you can chat with me there too
11:17 - okay great okay so this is working um
11:20 - maybe let's do something with this right
11:22 - now actually let's do a
11:24 - tutorial of how to uh use p5js with
11:28 - codepen how about about that huh why not
11:30 - that's been I feel like that's on my
11:34 - um so by the way I I didn't go through
11:37 - all the things I usually go through at
11:38 - the beginning of these live streams
11:39 - because I'm a little bit tired of doing
11:40 - that but uh if you are wondering where
11:43 - you can suggest topics or follow along
11:45 - with a list of topics that I'm planning
11:47 - to do um yes that's funny okay so the
11:51 - stream has about a 15-second delay on it
11:53 - so you're going to see the code pen
11:55 - stuff change uh Greg points out a great
11:57 - Point you're going to see that in
11:58 - advance of me talking talk about it it's
12:00 - a weird time warp thing is happening but
12:02 - um so uh if you are interested you can
12:05 - follow along with um uh and suggest
12:08 - topics here in this uh GitHub
12:11 - repository uh okay I now am going to
12:14 - search for o look at this random pool
12:16 - selection interesting new things um I'm
12:19 - going to search for a code pen I feel
12:21 - like that is discussed o maybe it's not
12:26 - this seems like magic okay uh let's look
12:27 - at this link
12:32 - oh oh I looked at this I think it
12:33 - doesn't I think it's bro okay um so
12:35 - let's let's let's create an issue um uh
12:39 - how to use p5js in code
12:43 - pen and I'm going to do this right
12:48 - now just to keep track of it okay um so
12:53 - here we
12:54 - go I I have to admit something I have
12:57 - seen codepen I'm aware of Cen
13:00 - codepen I'm a fan of codepen I don't
13:03 - know that I've ever actually really made
13:04 - anything in codepen before but I feel
13:07 - somewhat uh confident that we can work
13:10 - this out here's a
13:12 - question
13:15 - um that I have
13:18 - um the thing okay so let's make let's
13:20 - just do this tutorial I could do this so
13:23 - I'm in uh Professor mode right
13:26 - now um if I hit command s Fork settings
13:31 - how can I close minimize CSS ah great
13:36 - minimize HTML ah great okay uh okay
13:40 - great um so sorry I'm just save and
13:44 - close exter oh look at
13:47 - this so look at this I I was going to
13:50 - just add a
13:52 - reference to um to P5 GS in the HTML
13:58 - file
13:59 - but it looks like I can actually just
14:01 - put them here quick ad and is p5js one
14:05 - an option here no but that's okay okay
14:09 - so uh save and close so let's try
14:13 - that uh now I want to
14:19 - uh how do I just I want it to go back to
14:22 - its normal how do I tidy
14:27 - maximize no
14:36 - interesting I'm getting used to the
14:38 - interface
14:39 - here
14:41 - okay uh all right uh let me read let me
14:45 - make a new oh wait no I shouldn't make a
14:48 - new one can I just refresh this page and
14:51 - have it I guess it's using my ah there
14:53 - we go okay because this is what you will
14:55 - see most likely when you first start up
14:58 - okay we're going to do I'm going to do a
15:01 - a quick uh tutorial about
15:06 - codepen
15:09 - um
15:11 - and um I'm going to do that before I go
15:14 - to genetic algorithms okay okay here we
15:19 - go 28 students are watching this live
15:22 - okay um now I think I'm standing in
15:24 - front of the I'm going to move this a
15:26 - little bit over here where's the oh
15:28 - console I can see that there okay assets
15:31 - interesting uh okay um and let's make
15:35 - this a little wire change
15:37 - view change view I guess that's sort of
15:41 - like the minimum can I go like this ah
15:44 - yeah that's fine I don't need my face
15:45 - there so let's do that okay sorry about
15:48 - this uh 15 minutes in I'm gonna actually
15:50 - start doing something I'm going to drink
15:51 - a little uh water
15:57 - here
15:59 - and okay here we
16:04 - go
16:11 - um here we
16:13 - go hello welcome to a p5js video
16:17 - tutorial about how to use codepen with
16:19 - p5js now codepen is a web browser based
16:24 - code editor it allows you to type some
16:26 - HTML stuff in this box here it allows
16:28 - you to type some CSS stuff in this box
16:31 - over there and then in that box on the
16:32 - end that I can't reach cuz my arms will
16:34 - get cut off um you can type some
16:36 - JavaScript stuff so there's a lot to
16:38 - codepen I'm sure there's a lot of
16:39 - features I'm actually you might be
16:40 - watching this as an archive video but
16:42 - I'm actually doing this as a live stream
16:44 - and I'm using something called codepen
16:45 - Professor mode and there are 27 people
16:48 - watching me Live code this right now at
16:50 - this very moment um but what I want to
16:52 - do is just make a quick uh P5 GS sketch
16:54 - and see how it works with codepen and
16:56 - some of the features of code pen that I
16:57 - might discover along the way cuz I
16:59 - actually haven't really used codepen
17:00 - before this is this is my I'm
17:02 - discovering this as I make this tutorial
17:04 - okay so first thing we want to do is
17:06 - let's look under settings here and I
17:08 - want to go under JavaScript so one thing
17:10 - that I want to do is I want to make
17:12 - available the p5js JavaScript libraries
17:15 - now I could add references those to
17:17 - those in the HTML file but since codepen
17:20 - has this feature I can actually just add
17:22 - a URL to my JavaScript library right
17:24 - here and now how do I find the p5js
17:26 - JavaScript library it just so happens
17:29 - that if I Google CDN CDN by the way
17:32 - stands for Content delivery Network
17:34 - because it's going to deliver it's a
17:35 - network that will deliver our content
17:37 - the content in this case being the p5js
17:39 - library and I'm going to do this CDN
17:42 - p5js and we're going to come to this URL
17:45 - which is uh cdnjs
17:58 - I'm going to copy it and I'm going to go
18:00 - back to code pen whoops code pen and I'm
18:03 - going to place it in here and then I'm
18:05 - going to add another while I'm here I
18:07 - might as well add let's add the Dom
18:09 - Library as well so I'm going to get the
18:11 - Dom Library uh and I'm going to put that
18:13 - in here and then uh hopefully I'm going
18:16 - to save and close and now if I go back
18:19 - to settings we should see that these
18:22 - files are referenced and incidentally
18:25 - popular JavaScript libraries that you
18:26 - might use are available directly right
18:28 - here so if I wanted to use jQuery for
18:30 - whatever reason I could just kind of go
18:31 - into this menu here okay yay oh ow I
18:34 - have a have a giant pimple on my nose
18:37 - and I just whacked it it hurts I don't
18:39 - know if you zoom in to the pixels this
18:40 - is going to be permanently in this video
18:42 - forever now but you can zoom in and try
18:43 - to find it it's very uh it's quite
18:46 - noticeable okay save and close maybe
18:49 - I'll edit that out I won't edit that out
18:50 - it's too it's too it's just there okay
18:53 - so now I'm going let's just see so one
18:54 - thing I'm going to do is I don't really
18:55 - care about CSS or HTML right now I mean
18:58 - I care about them CSS and HTML I care
19:00 - about you but right now you're not the
19:02 - primary focus I just want to see if
19:04 - things are working I'm going to add
19:05 - function setup I'm going to say create
19:07 - canvas uh 200 200 I'm going to say
19:10 - background uh zero and I'm going to hit
19:12 - save and look at that there p5js sketch
19:16 - running in code pen I don't know what
19:18 - else should we do in this tutorial I
19:19 - didn't come up with something to make
19:21 - let's just make sure things animate I'm
19:23 - going to add function
19:25 - draw and I'm going to say ellipse uh
19:28 - Mouse X Mouse y 16 comma 16 I'm going to
19:33 - hit save I hit command s by the way to
19:35 - save and you can see now there is my
19:37 - sketch running I could also add
19:39 - something like create P which is part of
19:42 - P5 Dom and I could say uh this is a
19:45 - sketch this is a painting
19:48 - sketch and I'm hit command s again and
19:50 - you can see now there I have a paragraph
19:52 - element there we could add something
19:54 - like let's see a print line test
19:58 - actually let's Let's uh let's let's add
20:00 - the mouse pressed
20:03 - function somebody in the chat is
20:05 - mentioning that create P sounds like
20:08 - something else I guess that's true uh
20:11 - print line uh Mouse X so I want to look
20:14 - at the console there's a console here
20:16 - and I can click and every time I click
20:19 - you'll see uh my oh this is very hard
20:21 - for you to see so let's zoom in on this
20:23 - you can see that I also have access to a
20:25 - console right here in codepen this is
20:26 - lovely to use I Coden I'm enjoying it
20:29 - quite well look there's a chat here look
20:31 - people are talking in the chat uh
20:34 - because they're watching this live and I
20:36 - am also going to say change View and I
20:41 - can now uh do oh look at this so you can
20:43 - see one of the nice things is there are
20:45 - different uh views here so if I want to
20:47 - go to presentation or full page I can
20:50 - actually I could click on that or I
20:51 - could also just go up to the URL and
20:53 - type full here and now you can see
20:56 - there's my sketch so this is actually
20:58 - how you make a P5 sketch in codepen was
21:02 - really quite easy uh and I I I wish I
21:05 - had prepared to do some other stuff in
21:07 - this video I'm going to just pause and
21:09 - maybe this video will continue in a
21:10 - second where I do some more
21:15 - stuff
21:17 - uh uh every once Alvaro every once in a
21:20 - while I check out the chat maybe it's
21:21 - okay just to have a you know what I
21:23 - think it's fine but I'm back and I've
21:25 - decided that it's okay to have a very
21:27 - short just like 5 minute video that
21:28 - showed you very quickly how to use p5js
21:30 - in a codepen so if I'm going to do this
21:33 - in future videos if you have questions
21:35 - about it or features you want me to
21:36 - explore please let me know in the
21:38 - comments um or at the rainbow topics uh
21:41 - GitHub repository that is also linked to
21:43 - in the description of this video thanks
21:44 - for
21:46 - watching um yeah so tell me so if you
21:49 - guys are interact with the sketch let me
21:51 - ask you a
21:53 - question um so I'm going to go back to
21:56 - Professor
21:56 - mode uh I don't I I kind of I I almost
22:00 - Professor mode I guess is fine as a name
22:02 - okay so let's say I
22:06 - um um let's say um let's say you've now
22:10 - messed with the sketch and you've made
22:11 - it do something totally different but I
22:14 - do
22:16 - this what happens to your changes if I
22:19 - suddenly hit save does it just override
22:22 - what you
22:23 - did how does that
22:27 - work and updates automatically like does
22:29 - it keep your changes like if you add
22:32 - something to setup and I change
22:33 - something in draw do you get my change
22:35 - but keep your
22:37 - change you can't edit the
22:40 - code please clear canvas in the
22:43 - beginning of the loop this seems
22:44 - overwrites okay so so that's fine you
22:48 - can play along and follow along but
22:50 - whatever I do overwrites
22:55 - okay um all right well that was exciting
22:59 - so um if you pause you can edit got it
23:02 - and then when you play again okay so
23:03 - that's
23:04 - interesting so I assume this would be
23:06 - useful for future coding challenges for
23:08 - you guys one thing I'm having difficulty
23:11 - that I need to think about is how to
23:12 - arrange my screen this is not a huge
23:15 - area for me to type code in um so I
23:18 - might like sort of look into some of the
23:20 - layout features here of code pen um
23:23 - which I think could which I think could
23:25 - be uh useful but I will I'm GNA I'm
23:28 - going to look into that um later okay
23:32 - so um what I'm going to save this I'm
23:35 - going
23:36 - to um I'm going to go out of here and I
23:41 - am going to so what I want to do is oh I
23:44 - don't want to go out of there so I want
23:46 - to go to Rainbow
23:48 - topics and I want to sort all the issues
23:51 - by most thumbs
23:53 - up and I want to go to genetic
23:55 - algorithms Okay so
24:02 - this is what I'm working on now
24:06 - and
24:16 - um uh okay update this so if I recall
24:22 - correctly this is what I got to last
24:25 - week on coding rainbow so I went over
24:28 - over the basics of a genetic algorithm
24:30 - what it is why it exists I went over the
24:32 - core algorithm step by step I talked
24:35 - through this Shakespeare monkey problem
24:37 - one thing I really forgot to say which
24:38 - is really I really wish I had and I'll
24:41 - make sure this is in the video
24:42 - descriptions is the Shakespeare monkey
24:45 - problem the inspiration of from that
24:47 - comes from computational beauty of
24:49 - nature so this is a wonderful book um I
24:53 - will just um by uh Gary William flake
24:56 - called the computational beauty of
24:57 - nature um my book the nature of code a
25:00 - lot of the ideas from that book came
25:02 - come out of having read this book um so
25:05 - you know a lot of credit uh uh should go
25:08 - to that book and I believe in this book
25:10 - The Shakespeare monkey problem is
25:12 - discussed at length as well and you know
25:15 - honestly I don't specifically recall but
25:17 - I assume that's where I the idea
25:19 - originally um came to me because I
25:21 - worked it was like I think in 2002 I
25:25 - worked on a project which was a
25:27 - distributed piece of software kind of
25:29 - like I don't know if SEI at home still
25:31 - exists you guys know about it's the
25:33 - search for extraterrestrial intelligence
25:35 - SEI SEI there was like um there's
25:39 - massive amounts of audio and radio wave
25:41 - data that uh is that's collected from
25:45 - various things pointed at space And so
25:48 - there's a piece of software that you
25:50 - could download and run your computer
25:51 - that would analyze and look for signs of
25:53 - uh extraterrestrial life and was
25:55 - distributed and everybody could run on
25:56 - their computers or contribute to
25:57 - centralized database this was like a
25:59 - thing maybe it's still a thing now but I
26:00 - was into that and I made my own software
26:02 - that just like recreated the entire
26:04 - works of wood Shakespeare with random
26:06 - typing monkeys in a distributed way
26:08 - anyway that was a long time ago um so
26:13 - look synchron synchronization with
26:15 - YouTube chat I don't know what that
26:18 - means um so anyway I went off on a
26:21 - tangent there but so uh I just wanted to
26:23 - make sure that I referenced this book
26:26 - okay back to my list uh I want dig up
26:30 - that I think I made that software in um
26:33 - a macr media director and I wrote the
26:35 - server in Java old ancient technology
26:37 - this is like 2001 or 2002 um right my
26:41 - birthday has a four and a three in it
26:43 - did I mention that earlier today okay um
26:46 - so anyway so back to this so I have in
26:51 - my head at least four more video
26:53 - tutorials that I want to do today and
26:56 - what I think would be worth doing is is
26:58 - uh taking this forces and vectors
27:01 - tutorial and uh about making a genetic
27:05 - algorithm evolve an array of vectors
27:08 - which like uh which describes a path in
27:11 - a window canvas and actually do that as
27:13 - a coding challenge uh and when I say do
27:16 - that as a coding challenge I mean kind
27:17 - of write all the code for it as opposed
27:19 - to just show the example and talk
27:21 - through how it
27:22 - works
27:23 - [Applause]
27:25 - um um so that uh in the chat let me know
27:27 - if that's sounds like an interesting and
27:29 - good idea I guess what I might do what I
27:31 - could consider doing is not writing
27:35 - everything from scratch but by taking a
27:38 - vehicle
27:39 - example and taking the a genetic
27:42 - algorithm example and combining the two
27:44 - in like copy pasting the code into
27:45 - something and then making it work maybe
27:47 - it's better just to write it from
27:48 - scratch I don't know we'll see um and
27:52 - then I also want to talk about
27:53 - interactive selection ecosystem
27:55 - Evolution and also talk a bit about
27:57 - Fitness function
27:58 - so that is my
28:01 - plan uh here
28:05 - onow um okay I must
28:09 - have all right
28:12 - uh okay so let's see here
28:17 - um so let me get set up here as always I
28:21 - always forget
28:24 - the so I'm going to use the adom editor
28:33 - [Music]
28:37 - and what I'm going to do is create new
28:41 - folder smart
28:45 - Rockets
28:47 - dog do do do do do
28:53 - do going to do this to
28:56 - do this I'm going to do this do this I'm
28:59 - going to do this this I'm going to
29:03 - do
29:06 - [Music]
29:19 - do never forget this I'm going to do the
29:22 - this this dot this dot this dot the this
29:25 - Dot Song never forget the this dot
29:27 - somebody compos that song for so this is
29:29 - random this is noise pearly noise that
29:31 - is in the core random algorithm the
29:34 - actual random algorithm itself those
29:37 - numbers aren't related at all you pick
29:39 - like I'm picking random numbers between
29:41 - 0 and 10 9 2 7 6 1 n 48 9 2 1 3 I pick
29:48 - nine a lot apparently but with pearing
29:50 - noise I might pick numbers like this
29:52 - okay 2 three four three four five six 5
29:56 - four five six 7 five six 7 five 6 s 89
30:02 - 876 look this is like pear noise
30:04 - performance I have a new
30:06 - fan I wish I had long hair so I could
30:09 - like could just be blowing in the wind
30:11 - here on my live stream here on YouTube
30:14 - okay uh okay so this I can
30:17 - minimize this is
30:19 - like now I can open this
30:25 - up but with curly noise I might pick
30:27 - numbers like
30:30 - this 5
30:35 - 5 noise that is noise this is no that is
30:40 - this is no that is so this is no that is
30:44 - noise that is this isise that is this is
30:48 - noise that is noise so this is noise
30:50 - that
30:53 - [Music]
30:56 - is I don't need the sound
30:59 - get R of
31:00 - that okay
31:03 - uh I'm just about ready
31:06 - okay but with pearing noise I might pick
31:08 - numbers like
31:10 - this four all right so here's the
31:13 - question for you guys I don't know if
31:14 - you've been thinking about
31:17 - it I there's there's there's basically
31:20 - three possibilities
31:22 - here I
31:26 - could I forget but if I don't have the
31:28 - key mapping correct I could
31:32 - uh whoa I did this wrong again ah I
31:35 - forgot I change okay it's fine oh look
31:37 - at that whoa what did I just do it faded
31:39 - between them I don't know how I did that
31:41 - um I didn't have this ready to be erased
31:44 - so there's there's a few possibilities
31:47 - here I could program the entire thing
31:51 - from scratch so I just start with no
31:54 - code whatsoever I'm going to make a
31:57 - rocket object a DNA
31:59 - object uh a population
32:02 - object uh build the write the algorithm
32:05 - in just make everything entirely from
32:08 - scratch that's option number one option
32:11 - number two is I could start with uh
32:14 - example that I at least have a moving
32:17 - physics object one of them and then I do
32:21 - all the genetic algorithm stuff from
32:23 - scratch and option three would be that I
32:26 - have
32:28 - well I guess there's four options
32:29 - options three would be that I I start
32:31 - with my genetic algorithm example and
32:33 - add all the physics stuff so I could
32:35 - start with physics add all the genetic
32:36 - algorithm I could start with my genetic
32:38 - algorithm example add all the physics or
32:40 - I could start with a physics example and
32:42 - a genetic algorithm example and combine
32:43 - the two from scratch everybody loves to
32:46 - from scratch I'm very happy to do it
32:48 - from scratch I think that's kind of fun
32:49 - and crazy um all right so uh and and it
32:53 - it's um one thing I had um uh somebody
32:55 - from YouTube com contacted me for a free
32:58 - consultation on my YouTube channel which
33:00 - is very
33:01 - exciting and um one of the things they
33:04 - told me with looking at my analytics and
33:06 - statistics where the coding challenges
33:08 - are quite popular and people seem to
33:10 - really like that everybody's everybody
33:11 - in the chat is just saying from scratch
33:12 - all right so that's what we're going to
33:14 - do uh smart
33:17 - Rockets uh what I want to do whoops I
33:20 - don't know I want to look up there we go
33:23 - so we're going to start with
33:25 - this this is uh a project can we find a
33:29 - date on
33:32 - this
33:36 - um this is by Jr
33:39 - Thorp um I feel like I want to tweet
33:42 - that I'm about to do this live but it's
33:45 - fine because because uh J will be
33:48 - excited to know but I will um just
33:50 - mention it to him later so let me hit
33:51 - okay here so this has got a lot of fancy
33:54 - stuff in it in that the Rockets are uh
33:59 - you know you can't really see but they
34:00 - they have like a nice design and they're
34:01 - shooting little like blasts out of there
34:04 - but but wait hold on I'm sorry
34:09 - everybody I I left to put my brain back
34:11 - on okay so this is a project called
34:13 - smart Rockets it's by Jer Thorp it was
34:15 - created many years ago in a programming
34:17 - environment called flash whenever I say
34:20 - flash I like to say flash I need that as
34:23 - a sound drop so I could just
34:25 - say except that didn't work
34:30 - sorry I don't have my I'm not good with
34:32 - the key commands yet okay um ah I like
34:36 - that MAA Mata says presenting a
34:38 - multi-part video series on a subject and
34:40 - ending it with a coding challenge
34:41 - recapping is the best okay um okay so
34:45 - anyway back so this is a created with
34:48 - flash and what it's doing here is that
34:50 - there are I don't know how many Rockets
34:52 - are on the screen there's something like
34:53 - 20 rockets and each rocket has a bunch
34:56 - of engines attached to it and those
34:58 - engines or thrusters so to speak fire a
35:02 - burst of energy out the back and that
35:04 - those have a vector like actually let me
35:06 - you know what I'm just going to make the
35:08 - video and I'm going to talk about it in
35:09 - the video
35:12 - so
35:13 - flash ah oh that's I don't know I can't
35:16 - use it okay
35:17 - um all right so I'm just going to start
35:30 - okay here we go everybody I'm going to
35:32 - refresh this page
35:40 - oops
35:42 - okay here we
35:48 - go
35:50 - uh
35:56 - okay
35:58 - hello and welcome to another coding
36:00 - challenge now in this coding challenge I
36:02 - am going to program from scratch I'm
36:04 - going to recreate this project called
36:06 - smart Rockets now this project smart
36:08 - Rockets was created in Du over the
36:11 - actual year because I don't know what it
36:12 - is right now at some point later uh by J
36:15 - Thorp this uh program was made in Flash
36:19 - um which is a programming thing Adobe
36:21 - thing maybe a macr media who knows some
36:23 - company blah blah blah that's another
36:24 - discussion for another time um I'm gonna
36:26 - hit okay and let this run but this is a
36:29 - there's a genetic algorithm here where
36:31 - these rockets that at the moment don't
36:33 - look very smart are evolving a path
36:36 - essentially from the bottom of the
36:38 - window to that Target up there so let me
36:40 - talk through just very briefly uh whoops
36:43 - um how these uh how these rockets work
36:47 - so in uh in J's uh smart Rockets example
36:51 - here's a here's a rocket hold on time
36:54 - out let me just start the whole thing
36:56 - over
37:00 - I this pen is no good and I was going to
37:01 - say I could just edit it from where but
37:03 - you know editing is so
37:05 - unnecessary um let me try this pen okay
37:11 - uh there we go uh one is that two is it
37:14 - it's backwards I want to fix that but
37:15 - I'll fix that another time
37:18 - okay start singing flash uh Oliver I
37:22 - don't think I'm going to do this in code
37:23 - pen Oliver because I'm just not super
37:26 - comfortable
37:28 - uh with the environment I know that
37:30 - would be really useful that would be
37:32 - really useful so you guys could follow
37:33 - it
37:35 - along let me do this one notd in code
37:37 - pen and I'm going to practice with code
37:39 - because this is going to be hard and I'm
37:40 - going to practice in code pen a little
37:42 - more and I'll do some other stuff in
37:44 - code pen I know
37:47 - sorry
37:50 - H okay here we go action script yes okay
37:53 - that's what I was looking for that's the
37:54 - word I was looking for I know you could
37:56 - help me debug
37:59 - oh you guys are really getting me here I
38:04 - just okay I'm gonna not do this I'm
38:06 - gonna I know my limits and I'm gonna I'm
38:09 - gonna do stuff future challenges will
38:11 - happen in
38:12 - codepen practice is really fine you guys
38:14 - talk to me into it okay
38:20 - uh okay let's see uh new
38:24 - pen
38:26 - um
38:28 - so the question is I need to figure out
38:30 - a few things the question is I need
38:32 - to uh
38:34 - save oh nope edit uh
38:37 - smart
38:41 - Rockets uh this is the URL uh if you
38:44 - guys oh no I'm not in Prof whoa this is
38:46 - the xky
38:48 - blp uh capital x capital K capital Y
38:51 - lowercase B capital capital L capital P
38:55 - okay so I'm going to change the view to
38:59 - Professor
39:00 - mode um I am going
39:06 - to put in I'm going to just give myself
39:09 - a
39:10 - bigger I am going to go to settings and
39:14 - I need the CDN links again
39:20 - cdnjs uh let's get um P5
39:28 - by the way I easily succumb to peer
39:30 - pressure as you guys have just
39:32 - learned
39:34 - um uh
39:36 - JavaScript here and then should be
39:39 - actually
39:41 - oops uh the Dom library is
39:45 - here
39:47 - uh should be able to go
39:50 - here uh save and close I should be able
39:54 - to say function setup create canvas uh
39:58 - 640
40:00 - 360 and
40:04 - um function
40:06 - draw uh background Zero Save that runs
40:11 - it okay now my what I would like to do
40:14 - is figure
40:17 - out how to very
40:24 - easily
40:26 - um
40:29 - is there a way for me to make new Js
40:32 - files so can I have multiple JavaScript
40:35 - files that's something that I kind of
40:36 - need to do this it's a big example
40:39 - anybody
40:41 - know uh add another resource
40:46 - no uh so it's going to be hard without
40:49 - multiple JavaScript
40:51 - files um and then also I want to change
40:56 - ah I bet you editor layout so this I can
40:59 - do ah this is good I like
41:02 - this so I think I should do it this way
41:07 - yep so this is good and then let's just
41:11 - make
41:13 - it yeah that's good and console pops up
41:18 - is this an interactive console
41:24 - like interesting
41:29 - oh yeah I like that okay well I'm in
41:32 - front of the console that's a bit of a
41:35 - problem uh but I don't mind being my
41:38 - head being in front of this so
41:40 - much
41:43 - uh the other thing is the font size is a
41:45 - little bit
41:47 - small so how do I change that I guess I
41:50 - could just do this but I think it would
41:53 - be better to change the font size
41:55 - settings uh anybody know where I changed
41:59 - the font
42:04 - size uh change
42:07 - view direct code links what's that do oh
42:10 - look at that uh pen details
42:14 - view you know oh Professor
42:18 - mode open on Cross wow open on Cross
42:21 - browser testing what's that
42:23 - do that's really cool all right I'm not
42:26 - going to worry about that right now uh
42:28 - oops ah I lost it I lost it uh history
42:31 - recently
42:33 - closed should be this one
42:39 - whoops
42:43 - uh uh sorry
42:47 - everybody go to settings you guys are
42:50 - telling me things in the chat but I
42:51 - don't know what you're referring
42:53 - to uh minimize
42:58 - minimize to go to settings to change
43:00 - font size I Am pro I Am pro I'm not a
43:05 - pro settings where where where where
43:07 - where where where where where font size
43:10 - font size where
43:13 - where ah code indentation oo
43:16 - spaces two spaces Auto saave auto update
43:22 - preview uh quick I don't see where I
43:26 - don't see where I do the font
43:30 - size okay profile pick okay thank you uh
43:36 - settings ah thank you I like source code
43:39 - Pro I'll just leave it default though uh
43:41 - code font size let's try
43:44 - 18 uh editor options line number cold F
43:47 - folding key bindings normal
43:50 - Sublime uh auto update
43:53 - preview example okay this uh no
43:57 - ifications customized anything else I
43:59 - want to do apply the CSS customize blog
44:02 - default pen theme if frames images I
44:05 - think that's going to
44:13 - be did did that get bigger I can't
44:17 - tell I don't know that it did
44:20 - actually uh
44:22 - settings yeah I must not have hit save
44:27 - save all
44:31 - settings okay now go back to pens
44:36 - no how do I find
44:40 - mine
44:44 - uh uh your
44:48 - profile smart
44:51 - Rockets there we go I go
44:54 - to
44:56 - Professor
44:59 - minimize minimize there we go the font
45:02 - size fixed
45:05 - okay in your profiles where you have
45:08 - access to
45:09 - assets can pick Tye type face to yeah
45:12 - the thing that I want to do is I want to
45:14 - be able to
45:16 - like
45:18 - um I want to be able to be like new I
45:22 - just want to have like multiple but you
45:23 - know what I guess I'll do this in one
45:25 - big Javascript file it'll be more
45:27 - challenging but uh yes this is Russ
45:31 - basket asks this is what makes beginners
45:34 - hate programming learning the
45:35 - environment instead of the actual thing
45:37 - this is why my inclination was to not
45:38 - use code pen but also for debugging I
45:42 - can uh I should be able to see be able
45:44 - to do
45:46 - this great uh interestingly how it
45:49 - that's that's kind of interesting how it
45:50 - comes up here this is uh interesting to
45:53 - use
45:54 - okay okay all right right I'm going to
45:57 - go for it why not I'm going to use
45:58 - codeen live Professor mode the stuff
46:01 - will be above my head the Rockets will
46:03 - be moving around and it's time to make
46:06 - it's time to to do
46:13 - this why
46:17 - not yes I I believe I can add files but
46:20 - then okay so rate I I can add files but
46:23 - then can I edit
46:25 - them like What if I
46:28 - by um like I have assets
46:33 - here scripts like let's say I go let's
46:36 - find um let's just just as an example
46:39 - let's say if I go here and find take
46:41 - this mover JS and I drag it over
46:45 - here so now I have
46:49 - that
46:52 - um so I have that asset
47:00 - uh and what can I do with
47:05 - it like I I can't just make that a thing
47:08 - that I edit over here I don't think so
47:10 - I'm going to delete this whiteboard
47:12 - showing a little okay um okay we're just
47:15 - going to go for it
47:29 - okay you guys talk me into it and here
47:33 - we
47:44 - go
47:47 - okay all
47:49 - right how's my
47:51 - hair can you see the giant pimple on my
47:54 - nose it's very painful if I touch it I
47:56 - don't know what I thought I had a
47:57 - sunburn at first because it's so hot and
48:00 - sunny here in New York and then I
48:01 - realized it's just a big pimple which
48:02 - you wouldn't think happens at my age but
48:04 - apparently it does okay here we
48:07 - go flash
48:12 - okay as always I always forget the this
48:15 - dot this do this do ah pressed the wrong
48:17 - button uh F Looper was in the chat so F
48:20 - Looper I made this sound
48:24 - drop okay here we go
48:27 - and here we go uh back to
48:29 - here um and uh here we
48:34 - go try dragging the asset to the editors
48:38 - Oliver you always have a suggestion
48:40 - right when I'm about to um does that
48:42 - really
48:45 - work okay hold
48:49 - on I swear I'm going to do this coding
48:53 - challenge let's try uh let's see if
49:00 - I so
49:03 - okay so yay what if I take
49:06 - this I can't drag it
49:09 - anywhere uh and then what if I go to
49:12 - settings quick
49:13 - [Music]
49:15 - ad I don't think I think it's just
49:18 - something that I could reference in the
49:19 - HTML file okay forget it I'm just going
49:21 - to have to do this in one in one file
49:23 - hold on now I want to delete that just
49:25 - in case it messes me up
49:29 - I'll figure this out
49:31 - later here we
49:33 - go there is an assets tab I know there's
49:36 - an assets tab okay here we go I got to
49:40 - get started with this you guys are
49:42 - giving me good suggestions I'm
49:44 - sorry all
49:47 - right remember how I already started
49:49 - this like 20 minutes ago and then I
49:51 - decided I wanted to start it over
49:55 - okay
49:59 - here we
50:02 - go hello and welcome to another coding
50:05 - challenge in this coding challenge I am
50:06 - going to program from scratch something
50:09 - called smart Rockets okay what is this
50:11 - smart Rockets thing well this smart
50:12 - Rockets project which I have running uh
50:14 - behind me you can find a link to it in
50:16 - this video's description is something
50:17 - created by Jr Thorp uh at some number of
50:20 - years ago uh it was it's developed in
50:22 - Flash which is a environment for
50:25 - programming action script um I'm going
50:27 - to do this in JavaScript using the p5js
50:29 - framework the reason why I love this
50:31 - project is it's a great example of
50:33 - genetic algorithms in the wild at play
50:35 - with an animation physics based system
50:38 - so what you'll see here is that there
50:39 - are these Rockets being launched from
50:40 - the bottom and they're trying to reach
50:42 - that Target up there and they have built
50:44 - into them this DNA this DNA that this
50:47 - virtual DNA that tells them how to move
50:49 - about the screen so let me briefly uh
50:51 - talk to you about how that works so the
50:53 - Rockets actually have a bunch of like
50:57 - kind of thrusters on them this is my
50:59 - like pathetic terrible drawing of that
51:01 - and though all of those point in a
51:03 - certain direction so the number of
51:05 - thrusters and the direction that they
51:07 - point in is part of their DNA and then
51:09 - the sequence by which they fire first
51:12 - second third fourth uh is also part of
51:14 - their DNA so you can imagine like if you
51:17 - had a control panel with five buttons on
51:19 - it you could press those five buttons in
51:20 - some sort of sequence to try to get push
51:22 - it in some efficient way to reach that
51:24 - Target so what I need what I need is a
51:27 - couple things I need to ultimately have
51:29 - a rocket object and that rocket object
51:32 - is going to have to have physics built
51:33 - into it I'm also going to need to have
51:36 - some DNA object which is DNA to control
51:39 - the physics and then the DNA object is
51:42 - going to need to have functions like
51:44 - mutation and crossover these are pieces
51:47 - of functionality that exist as part of a
51:49 - genetic algorithm hey if you want to
51:51 - know about genetic algorithms I have a
51:52 - whole set of video tutorials linked to
51:54 - in the description of this video that go
51:56 - through the algorithm in detail I'm
51:57 - going to do that again in this video but
51:58 - I'll be programming kind of quickly so
52:00 - if you want the sort of longer
52:01 - explanation of that go back and watch
52:03 - those videos and then the third thing
52:05 - here is I'm going to need a population
52:08 - object and the population object is
52:10 - going to manage uh an array of these
52:12 - rocket objects so I'm going to make some
52:14 - Rockets let them go have them evolve let
52:17 - them go again have them evolve let them
52:19 - go again and eventually they should make
52:20 - it from the bottom to the top maybe I
52:22 - could put some obstacles in their way
52:23 - that sort of thing let's check on how
52:25 - these Rockets are doing you can see a
52:27 - kind of path that they're by the way the
52:29 - the text smart Rockets here is an
52:31 - obstacle and they're trying to figure
52:32 - out how to get around it so I'm going to
52:34 - leave um I'm going to leave this browser
52:36 - window uh open hopefully I won't forget
52:38 - to close it and at the end of the video
52:40 - we'll come back and check on how those
52:41 - smart Rockets are doing now I'm also
52:43 - going to do something a little bit crazy
52:45 - it's not that crazy I'm going to program
52:46 - this all using codeen I have already
52:49 - added the P5 GS JavaScript files you can
52:52 - check my video of how to do that in a
52:54 - different video I've already added those
52:57 - and and I just started with basically
52:58 - nothing I have create canvas and
53:01 - background this is the only code I have
53:03 - create a canvas and draw a black
53:04 - background so the first thing I want to
53:08 - do is create this rocket object so I'm
53:11 - going to I'm going to do that with a uh
53:13 - Constructor
53:14 - function and I want my rocket to have a
53:17 - position and I'm going to say create
53:19 - Vector uh I want it to have a velocity
53:22 - I'm say create vector and I want it to
53:25 - have an acceleration and I'm going to
53:27 - say create Vector then uh I'm not so
53:30 - used to using codepen so we'll see how
53:32 - this goes for me I then also want to
53:34 - give it a function an apply Force
53:37 - function um which where this rocket can
53:41 - receive a force and that force would get
53:43 - added to its
53:45 - acceleration that is Newton's Law at
53:47 - play and then I also want to what else
53:50 - do I want to do I want to have an update
53:53 - oh and that should say this. apply Force
53:55 - equals function I also want to have it
53:57 - have an update function this. update
53:59 - equals function and I want that function
54:02 - I want to do the sort of standard
54:04 - physics algorithm that I do in ton of my
54:06 - examples where I have uh this do
54:09 - velocity add this do acceleration and
54:12 - then I want have this do position add
54:14 - this do velocity and then I also want to
54:16 - clear the
54:18 - acceleration at the End by multiplying
54:21 - it by zero because so the the whole this
54:23 - this is like I just built a physics
54:24 - engine in like 10 seconds basically I
54:27 - have an object that has a position a
54:28 - velocity to acceleration acceleration
54:30 - gets controlled by forces in the
54:32 - environment or forces by its rocket
54:34 - Thruster so to speak and the update
54:36 - function uh is where uh the physics
54:39 - actually happen Okay so I also want to
54:41 - have a function called this do um
54:48 - show I'm G to I'm just going to be my
54:50 - Rocket won't be as pretty and beautiful
54:52 - as J's smart rocket um I'm just going to
54:55 - say uh I'm just going to make a
54:57 - rectangle at this.position dox
54:59 - this.position doy and the rectangle will
55:02 - be thin but tall and I'm also actually
55:07 - what I'm going to do is I'm going to say
55:09 - translate I want to rotate it in the
55:11 - direction that it's moving I think
55:13 - that'll be a useful thing to have so I'm
55:15 - actually going to translate to its
55:16 - position and then draw the rectangle at
55:18 - 0 0 and I'm also going to say rect mode
55:22 - Center and I am also going to say then
55:25 - rotate by this this. velocity. heading
55:28 - so the heading function in in a in the
55:31 - P5 Vector object gives you an angle of
55:34 - the direction that a vector is pointing
55:35 - so I can rotate by the angle the
55:37 - velocity being the direction that it's
55:39 - moving I also want to add around this
55:42 - push and
55:44 - pop and there if I add push and pop
55:47 - around this function then uh all this
55:50 - rotating and translating won't affect
55:52 - other things so
55:55 - let's
55:56 - let's go now and see if I can create
55:59 - just a single rocket on the
56:01 - screen I'm going to say a rocket equals
56:04 - new rocket and then I'm going to say a
56:08 - rocket.
56:10 - update and rocket.
56:15 - show oh look there it is the rocket in
56:18 - the top left so one thing I want to do
56:20 - is I want my Rockets to start at the
56:21 - bottom of the
56:23 - window so we can see there it started
56:26 - there there and then let's just say for
56:28 - the sake of argument I give it a
56:29 - velocity pointing up is it moving okay
56:34 - so one thing you'll notice I drew it
56:37 - vertically and the angle I'm getting is
56:39 - probably 90 de so it rotated it so I
56:41 - think I'll just change the way I draw
56:43 - the rectangle to be wide and tall uh and
56:48 - you can see there now I have a rocket
56:49 - moving up so I have a single rocket
56:51 - that's a good sign I am getting
56:54 - something going here okay I'm looking
56:56 - everywhere cuz I got a screen here I got
56:58 - a camera here I got a wall here I'm
57:00 - going a little crazy here okay this is
57:01 - good this is good okay now what I think
57:03 - I want to do is um I'm also now I'm
57:06 - going to create a
57:08 - population you know I don't necessarily
57:11 - need a whole separate object to manage
57:13 - this stuff but I'm going to do it anyway
57:17 - and in the population I want to have an
57:19 - array of
57:21 - rockets and I want to uh I want to also
57:27 - have uh population size we'll just make
57:31 - it like a
57:34 - 100 uh and so uh I'm sorry I'm writing a
57:38 - little Loop here can you guys see this
57:40 - font I swear I made the font bigger time
57:42 - out
57:45 - pause I think I this font size got
57:47 - smaller at some point I'm GNA uh let me
57:50 - just check
57:52 - that no it's at 18 point is the font
57:55 - size okay can you guys watching this on
57:58 - YouTube see it
58:02 - okay maybe I'll just make it a little
58:04 - bit
58:06 - bigger oops you can see I I made it a
58:09 - little bigger it seems small to
58:13 - me okay fine you guys are telling me
58:15 - it's
58:20 - fine it looks so small to me over there
58:23 - but you guys are seeing this maybe full
58:25 - screen anyway I made it a little
58:28 - bigger okay
58:31 - um back I made the font size a little
58:34 - bigger so it' be easier to see in the
58:35 - video um so what I want to say is this.
58:38 - Rockets index I equals a new
58:42 - rocket and uh one thing I'm going to do
58:45 - is have their initial velocity just for
58:48 - right now be uh just so I can see a
58:50 - random uh a random vector and uh what
58:55 - I'm going to do now is create a
59:00 - population and I'm going to say the
59:03 - population should update and I'm just
59:06 - going to actually write a function
59:07 - called
59:08 - run and then in the population object
59:10 - itself I'm going to write a function
59:12 - called run and what I want to do there
59:18 - is
59:20 - uh oh what's the uh um
59:24 - pause what's the uh
59:26 - keyboard shortcut for auto format
59:32 - in uh in code
59:39 - pen
59:41 - uh somebody must
59:43 - know somebody must know I'm waiting for
59:47 - the chat to catch up to me alt
59:50 - f4 so on a Mac alt would be
59:54 - option and do I I have I probably have
59:56 - to do option function no command Q very
60:01 - funny Gregory uh shift
60:05 - tab there we go shift tab that seemed to
60:09 - kind of
60:10 - work this is the other thing I have Adam
60:13 - all set up to do this kind of stuff
60:15 - control K plus d you guys are giving me
60:16 - a lot of funny business
60:19 - here I think shift tab seemed
60:22 - right right
60:27 - yeah I'm not used to hitting that
60:32 - okay okay back again and what I want to
60:35 - do is now say oh this do this. rockets
60:38 - whoops I need to say this.
60:40 - Rockets uh Rockets indexi do
60:45 - update and this. Rockets indexi doow and
60:50 - let's see there's an exclamation point
60:52 - here so I'm just going to keep going
60:55 - with this video and I realz I have a
60:57 - problem which so at some point I think
61:00 - the sound went out I was having trouble
61:01 - setting up code pen so there will be an
61:03 - edit Point earlier and now I'm picking
61:05 - back up um um I'm picking back up here
61:10 - um okay so Chris Jordan is reporting
61:13 - some problems in the chat but uh
61:14 - hopefully most people are seeing me in
61:16 - some sort of relative live is place
61:23 - um okay I'm back after some technical
61:27 - difficulties and there's a big bug in my
61:30 - code it's not missing a this dot but
61:32 - it's almost as bad remember how I said
61:35 - here I need this function called Pop I
61:37 - need this function called pop to use
61:40 - push and Pop to make so that this
61:41 - translate and rotate only affects this
61:43 - particular rocket well guess what I did
61:46 - I made a variable named pop for
61:49 - population and that variable pop is now
61:52 - my Global variable which overrides the
61:54 - P5 function named pop so I really
61:56 - shouldn't have done that um I need to
61:58 - name this something else I I'll call it
61:59 - popule for population and you know what
62:02 - I don't know I I can actually just say
62:04 - population I'll do this population run
62:07 - and now we should see ah there's one
62:09 - rocket lifting off and now I can change
62:11 - the population size to like 25 and we
62:15 - can see there we go a bunch of rockets
62:17 - all going off in their random Direction
62:19 - let's clean up some things about these
62:21 - Rockets um let's make them a little bit
62:24 - smaller
62:26 - uh let's say uh no
62:28 - stroke uh let's give them fill 255 with
62:32 - a little bit of Alpha and we should see
62:35 - now uh there we go so this is these are
62:38 - our smart rockets lifting off from the
62:40 - bottom of the screen so we're getting
62:41 - somewhere we've got the physics system
62:43 - now if I
62:47 - return to over
62:50 - here uh in the original smart Rockets
62:52 - there are actually a set of specific
62:55 - thrust ERS positioned on the rocket that
62:58 - push off a force in a given Direction
63:00 - I'm going to do something a little bit
63:01 - simpler what I'm going to do as the
63:03 - object's
63:04 - DNA is I'm just going to create an
63:07 - array the array of DNA is the the DNA is
63:11 - just going to be an array and in each
63:15 - spot in that array will be a vector
63:17 - pointing in some at first at least some
63:20 - random Direction and what the rocket
63:22 - will do it will read that array each one
63:25 - Vector at a time and apply that Vector
63:27 - as a force so let's look at how that
63:29 - might work uh press this button here I
63:32 - am okay so what I want to do now is
63:34 - create an
63:36 - object called uh
63:40 - DNA and in that object I'm going to
63:43 - create an array and I'm going to call
63:44 - that array genes and I'm also going to
63:46 - create like a
63:48 - length uh um variable and actually I'm
63:52 - going to make this a global variable I'm
63:54 - going to have a global variable just
63:55 - called lifespan and let's make that 200
63:59 - right now because I'm going to let each
64:00 - rocket live for 200 frames and so it's
64:03 - DNA needs to have an array of 200
64:05 - vectors it's going to apply a single
64:07 - Vector each frame of Animation so um you
64:11 - know my so I'm going to uh now what I'm
64:14 - going to do is I'm going
64:16 - to go from I to zero to lifespan and I'm
64:21 - going to in that array I'm going to give
64:24 - it a random
64:27 - Vector so what I'm going to do now is I
64:30 - want the uh velocity Vector for each
64:34 - rocket to whoops to start off at
64:38 - zero come on
64:40 - everybody so we can see now here all of
64:44 - the objects just start at the bottom of
64:46 - the screen and they're not moving but
64:48 - I'm going to give each rocket some DNA
64:53 - and then in the update fun and then each
64:56 - rocket also
64:57 - needs uh a counter variable this. count
65:01 - and what I'm going to do in update is
65:03 - I'm going to say this. apply
65:06 - Force dna. genes this. count and guess
65:15 - what I
65:17 - forgot this dot so I need this. dna.
65:22 - genes. index this.c count I know that's
65:24 - a mouthful of stuff but I made a DNA
65:27 - object in the rocket that DNA object is
65:29 - has built into it an array called genes
65:32 - it has uh 200 vectors in it and each
65:36 - frame what I want to do is apply one of
65:39 - those vectors as a force and then I want
65:42 - to increase the count so now we can see
65:46 - what oh look at
65:48 - this let's run this
65:51 - again you can see them going flying off
65:54 - like crazy so those those forces were
65:57 - rather um were rather large so another
66:00 - thing I think I could possibly do in my
66:03 - uh DNA is I could
66:06 - uh just make the force a little bit
66:09 - weaker and you can see there we go so
66:11 - here are the Rockets kind of moving off
66:13 - each getting a force and I I also want
66:15 - to look I want to be able to see the um
66:19 - the the the kind of the lifespan itself
66:22 - so what I'm going to do also is I'm
66:25 - going to say
66:28 - uh uh uh life
66:33 - p uh life P equals create P I'm going to
66:37 - make a paragraph element and then um I'm
66:41 - going
66:42 - to
66:44 - um and you know what I just realized
66:46 - even though it's nice to have the the um
66:49 - Rockets have that count I think I'll
66:51 - just make that count a global variable
66:53 - because it's really going to be the same
66:54 - for everyone
66:56 - uh so VAR count equals zero and what I'm
66:59 - going to do is say life p.
67:03 - HTML count and then count Plus+ so now
67:07 - you can see over here right I've got
67:10 - something showing me where we are and
67:12 - now at some point I'm going to go past
67:14 - the end of that array I'm sure we're
67:16 - seeing some sort of error here count is
67:18 - not defined okay well that's something
67:20 - else uh where where am I getting that
67:25 - uh this. count that can go away um so at
67:30 - a certain point I'm going to go past
67:32 - that array um but that is when um the
67:35 - generation would end and I'm going to
67:36 - reset count back to zero ah are you
67:38 - following me I got lost in my own
67:39 - thought with all my computers and typing
67:41 - and coding thing so here we are and yes
67:44 - um here we are we now have a system so
67:47 - far where I have a population of rockets
67:49 - the Rockets have DNA the DNA has
67:52 - embedded into it an array of vectors
67:54 - that tell it how to move around the
67:55 - screen now what I need is a target I
67:59 - need to have a place where these um
68:02 - where these uh Rockets are trying to
68:04 - reach so I'm going to uh create a
68:07 - variable called Target a global variable
68:09 - and I'm going to say Target equals
68:10 - create vector and let's put it in the
68:12 - middle of the window at the
68:14 - top and uh what I'm going to do also in
68:18 - draw is I'm going to just draw a nice
68:20 - little ellipse at targetx Target doy uh
68:25 - 16
68:26 - 16 and we should see that's where
68:27 - they're trying to get to that's our
68:29 - Target um and then what I want to do is
68:33 - I want to say here if
68:36 - count
68:38 - equals
68:42 - lifespan count Plus+ then I want to do
68:46 - something I want to reset let me just
68:47 - reset count back equal to zero right
68:51 - now and as a little trick I'm just going
68:53 - to do this just just sort of see this is
68:56 - not what we want to do but I kind of
68:58 - want the whole thing to start over
69:01 - uh I don't know the auto format and code
69:04 - pen okay so now we should see when this
69:07 - gets to 200 start so we've got the
69:08 - system working here um we have and I'm
69:11 - just going to kind of zoom on this zoom
69:13 - in on this to talk about it for a second
69:14 - okay so over here we have a system now
69:18 - where I am every 200 frames launching
69:21 - 200 Rockets into space And I'm counting
69:23 - up to 200 and when I get to 200 I start
69:26 - 200 Rockets over what I'm missing now
69:29 - from this example is the genetic
69:30 - algorithm itself what I instead of just
69:32 - creating a completely new random
69:34 - population I want to make a new
69:37 - population out of the
69:40 - Rockets um uh I want to make a new
69:43 - population from uh from from the
69:46 - previous population of rockets I want
69:48 - them to create children Rockets I want
69:49 - the Rockets with the highest Fitness
69:51 - that did the best to pass on their
69:52 - genetic information to the Next
69:54 - Generation uh um so uh here we go um
70:01 - people are telling me that there's chat
70:02 - messages I don't think I don't think I
70:04 - can handle looking at the code pen chat
70:07 - if you might be watching this as a
70:08 - YouTube archive there's this is actually
70:09 - happening live uh with people watching
70:11 - the code on codepen live as well okay so
70:14 - let's see here what's the next step that
70:17 - I want to do the next step that I need
70:19 - to do in population
70:23 - is I'm going to call say this do uh
70:29 - evaluate uh oh my camera went
70:32 - off
70:35 - um so what do I want to do in evaluate I
70:39 - want to run through all of the
70:42 - rockets and I want to calculate their
70:45 - Fitness uh this. Rockets
70:49 - indexi uh calculate uh Fitness so I need
70:53 - a new function in each rocket to
70:55 - calculate their Fitness so what where
70:59 - where's my rocket object somewhere here
71:01 - right I'm going to write a function now
71:02 - this do Cal
71:05 - Fitness equals a
71:07 - function so what should their Fitness be
71:12 - well we could say that the closer a
71:14 - rocket makes it to the Target the more
71:17 - fit it is so I can say VAR D equals
71:21 - distance uh this. pause dox this.p doy
71:27 - Target dox target. y codepen couldn't
71:31 - fit that all it's not Cod Pen's fault
71:33 - but I don't have enough room to fit that
71:34 - all in one line which is why it broke
71:35 - off but you can see I'm taking the
71:37 - distance now the other thing I want to
71:38 - do though is say that um and let's give
71:42 - these uh Rockets a variable called
71:46 - Fitness so and I'm going to say this.
71:49 - Fitness equals 1 / distance right
71:52 - because if the distance is one
71:56 - my fitness is one if the distance is 100
71:58 - it's further away my fitness should be
72:00 - lower like 01 like one divided 100 so in
72:03 - this sense I now have a fitness one
72:06 - divided by distance okay this is good so
72:09 - in the
72:11 - population uh back to the population
72:14 - it's hard to have everything in one file
72:16 - I have now calculated the fitness now
72:19 - the other thing that I need to do if you
72:21 - watch my previous genetic algorithm
72:22 - videos is create a mating pool I want to
72:25 - have a mating pool from which I can pick
72:26 - parents to create the next generation of
72:29 - rockets and in order to pick their
72:32 - parent the parents I want their
72:34 - probability the higher their Fitness I
72:36 - want the higher chance of picking them
72:37 - so rockets that did really well or that
72:40 - get closer to the Target are more likely
72:41 - to pass their genetic information down
72:43 - to the Next Generation so what I want to
72:46 - do is create a variable I'm going to
72:47 - call it a mating pool and it's an empty
72:50 - uh
72:51 - array and the first thing I want to do
72:53 - actually I need to make sure clear it so
72:57 - uh every every time I do this I want to
72:59 - like make it an empty array again and
73:01 - then what I want to do is I want
73:06 - to uh I I want to normalize all of the
73:10 - fitness values I think this would be
73:11 - useful to do um I want them all I guess
73:15 - they're all going to already be between
73:17 - zero and one though because I guess if
73:20 - it gets closer than one
73:23 - Pixel Boy there's there's some things
73:26 - there's a lot of things to think about
73:28 - and add to why not negative of the
73:30 - distance oh that's an interesting idea
73:33 - that uh that uh Oliver point so we could
73:36 - try that let's let's be let's be uh you
73:40 - know I want to use positive numbers
73:41 - because I the way I'm going to add
73:43 - things to The Mating pool I think
73:44 - that'll be but that's an interesting
73:46 - idea that I could explore but let me
73:47 - actually do something to normalize the
73:49 - fitness
73:50 - values um uh so one thing I want to do
73:54 - is uh
73:55 - while I'm calculating the fitness I want
73:57 - to do a Max fit and the maximum Fitness
74:01 - is zero and if this.
74:05 - Rockets indexi Max fit is greater than
74:11 - uh uh ma uh Max fit and this start
74:15 - Rockets Fitness is greater than Max fit
74:18 - then I want Max fit to equal that
74:21 - particular Rocket's Fitness so I want to
74:24 - find the max Fitness what's the highest
74:26 - Fitness out of all of the
74:28 - elements and then after I do
74:32 - that I want to um go through them all
74:37 - again and uh I want to take their
74:41 - Fitness
74:43 - value and divide it by the maximum
74:47 - Fitness so that should normalize them
74:49 - right if the values if the maximum
74:51 - Fitness is a th000 the one with a th000
74:54 - divide by th000 I'll get the value one
74:56 - all the fitness values will between 0er
74:58 - and one at the moment um there's a few
75:02 - divide by zero issues we could walk we
75:04 - could we could have but um but I'm not
75:08 - going to um worry about that too much
75:10 - right now okay uh another way instead of
75:13 - doing I did just realize though here's
75:15 - another thing I could do um let me go
75:17 - back to the rocket this will be kind of
75:19 - I think this is actually kind of useful
75:21 - why don't I instead of um doing one
75:24 - divided why don't I map that distance
75:27 - which you know essentially has a range
75:28 - between zero and like the width of the
75:31 - window and give that a value all the way
75:33 - between with and and just sort of invert
75:36 - that value I guess that's kind of the
75:38 - same thing but let me just do
75:41 - that uh in this case I might not need to
75:43 - normalize it there's all sorts of
75:45 - possibilities I'm just working this out
75:47 - something might go wrong but let's try
75:49 - that and see how that goes and then let
75:51 - me go back to the population right where
75:55 - was that uh and so now what I want to do
75:59 - is I want to Loop through it
76:01 - again and I want to get a number n which
76:06 - is equal
76:07 - to each Rocket's Fitness and I'm going
76:11 - to say times 100 I'm going to do that
76:14 - arbitrarily right now and then I'm going
76:16 - to say for J equals 0 J is less than n
76:19 - j++ and then what I want to do is say
76:22 - this. meting
76:23 - pool do add and I'm going to add this.
76:28 - Rockets index I so the idea behind this
76:31 - bit of code right here that you've seen
76:33 - already if you watch my other genetic
76:34 - algorithms videos is that what I'm doing
76:37 - is I'm saying
76:39 - basically take the Rockets Fitness which
76:41 - is between zero and one so and then
76:45 - multiply it by 100 so I now have Fitness
76:48 - values between 0er and 100 a rocket with
76:51 - a value of 100 a fitness of 100 should
76:54 - be in The Mating pool 100 times a rocket
76:56 - with a fitness value of three should be
76:58 - in the mating pool three times so it
77:01 - still could be picked if it's only in
77:02 - there three times but it'll be picked
77:04 - much more likely if it's in there a 100
77:06 - times so this is what I'm doing line 59
77:09 - should have index J uh thank you no no
77:12 - no no no no no this is not index J so
77:15 - that's a good question but I actually
77:17 - want to take rocket I and add it in
77:20 - multiple times so I know that's
77:21 - confusing because this is a loop here
77:24 - but the purpose of this Loop is to take
77:26 - rocket I and add it in a certain number
77:28 - of times n so I'm using J for that
77:31 - particular Loop um okay but thank you
77:33 - for that
77:34 - question okay so now I have this mating
77:37 - pool whoops what did I just do here uh
77:39 - whoops oh my God everything's going
77:41 - crazy
77:43 - here my sizing is off okay so now I have
77:46 - this mating pool can you still see the
77:47 - font size hopefully you can let me know
77:49 - if it's too small so the next thing that
77:51 - I want to do is I'm and I'm going to
77:54 - write new F function for this is natural
77:57 - I'm going to call it natural I'm just
77:58 - going to call it selection I'm going to
77:59 - write a function called selection and in
78:03 - selection what I want to do is pick two
78:06 - parents and so I'm going to
78:09 - say uh partner parent
78:12 - a uh and oh I'm going to say uh this.
78:16 - mating
78:20 - pool and um I want to get a in random
78:23 - index
78:25 - uh equal uh so oh you know what you can
78:27 - do in P5 now I'm pretty sure in
78:30 - P5 the random function you can actually
78:34 - just give it the
78:38 - array this is a new feature of P5 if I
78:41 - just say random and then an array it'll
78:44 - just give me a random element from that
78:45 - array so I don't actually have to pick a
78:47 - random
78:48 - index yeah uh so that's parent
78:52 - a now this is parent B so I want two
78:55 - parents and I could do something to like
78:57 - say like oh I want to make sure you know
79:00 - one is not the same as the other but you
79:04 - know I want to make sure they're not the
79:05 - same I don't pick the same twice but I'm
79:07 - not too worried about that okay so I
79:09 - want to pick two and then I want to make
79:11 - a child element and I want to make that
79:14 - child by saying parent a. crossover
79:17 - parent B so this is and this is now my
79:20 - wish list I want the DNA and this is
79:23 - really actually not the rocket I want
79:27 - um I'm going to call this child yeah
79:30 - yeah I'll call it yeah we'll call this
79:32 - child I want to have in the DNA object a
79:35 - function that takes um oh you know what
79:39 - this is actually interestingly enough
79:41 - parent a is a rocket
79:43 - object so what I'm going to do is say
79:47 - DNA because I'm going to go and grab the
79:49 - DNA from I'm going to take the random
79:51 - rocket object and grab its DNA because
79:54 - what I want to is create child DNA I
79:56 - want parent a to c DNA to cross over
79:59 - with parent B's
80:00 - DNA so that means in the DNA object
80:04 - which is there's going to be a lot of
80:06 - scrolling in this uh right here I need a
80:09 - new function and I need that function to
80:11 - be called
80:13 - crossover and in this function I need to
80:18 - create uh a another array like
80:22 - child me to call it a new DNA a is a is
80:26 - an array and what I want to do is Loop
80:30 - through the length of the
80:35 - genes and it needs an argument partner
80:39 - so the crossover
80:40 - function uh needs an argument partner
80:43 - and what I want to do is I'm going to
80:44 - say I'm going to make a midpoint
80:46 - midpoint equals a random
80:50 - number between zero and the length of
80:52 - the array so I'm actually going to pick
80:53 - a random point I could always pick the
80:55 - exact middle but what I want to do is I
80:58 - want to say if I is greater than zero I
81:01 - want the new
81:02 - DNA to come from
81:05 - this this object's genes
81:09 - otherwise no and I want if I is greater
81:11 - than the
81:12 - midpoint and otherwise I want the new
81:16 - DNA to come from the partners
81:21 - genes and then I want to return new DNA
81:24 - a so what I'm doing here is I now have
81:27 - written a crossover function this is
81:29 - going to be a long
81:30 - video I have written a crossover
81:32 - function we can look at it closely here
81:34 - which basically says I am a DNA object
81:37 - and I have received another DNA object
81:39 - I'm going to pick somewhere and they're
81:41 - both arrays so I'm going to make a new
81:42 - array and then I'm going to
81:46 - um there's some there's a couple there's
81:49 - some flaws here I got I
81:52 - realizing I got to fix something but
81:54 - that's fine
81:55 - um I'm going to uh pick a midpoint in
81:58 - the length of the array and I'm going to
82:00 - get half you know before the midpoint
82:02 - I'm going to get these genes and after
82:03 - the midpoint I'm going to get the
82:04 - partner genes now there's an issue this
82:06 - here is just an array but what I really
82:08 - want is a DNA object so what I want to
82:11 - do is actually say I want a
82:14 - new uh a new DNA object and it'll make
82:18 - random genes when I do that but I can
82:23 - um and I want to fill the genes I'm
82:25 - going to overwrite that this way I could
82:27 - be a little bit more elegant about how I
82:29 - write this in which case I could I'm
82:32 - going to do that now I'm gonna be so
82:33 - that's one way I could do it but I'm
82:35 - actually going to keep this as an
82:37 - array and I'm going to call this new
82:42 - genes and then what I want to do is say
82:46 - return new DNA I'm going to say return a
82:50 - new DNA object with the new genes which
82:53 - means I now can actually just give the
82:55 - DNA object an array rather than have it
82:58 - be random and in this case in the
83:00 - Constructor function here I can have a
83:04 - variable called genes and I can say if
83:07 - genes exists then this do genes should
83:11 - be that array
83:14 - otherwise do all this other
83:17 - stuff shift tab
83:21 - pause no what is
83:25 - what is the um thanks Oliver I see that
83:28 - there's a bug what is the auto format
83:30 - for
83:34 - codepen uh Cod pen Auto
83:42 - format key maybe Auto format uh what is
83:46 - it uh key
83:49 - Autos
83:52 - indent key bindings
83:56 - command tab
84:01 - oh oh I could also use command that of
84:05 - course where do I see T tidy up code
84:08 - there it is shift tab yeah I thought I
84:11 - was hitting shift
84:14 - tab oh that didn't really
84:20 - work command tab no
84:25 - all right well L dah OCD I know click on
84:29 - the Arrow there's a button to tidy
84:31 - JS yeah but I need a key command for
84:35 - that oh look at that I don't want it to
84:37 - like totally send me to a new
84:40 - place I don't remember where I was okay
84:43 - hold
84:44 - on so it was like this right all right
84:46 - I'm just going to do it
84:50 - myself back right so now what I'm saying
84:55 - here is in this function I this DNA
84:58 - object could either receive genes and
85:00 - just create a DNA object from those
85:02 - genes or if it doesn't receive genes
85:04 - then it could just make random DNA
85:07 - so now uh somebody in the chat line 101
85:10 - telling me that there's an error uh yes
85:13 - ah this return has to come after that
85:16 - for Loop so that is definitely an
85:22 - error Okay so now I have my crossover
85:25 - function done the in the population
85:28 - object which is I guess closer to the
85:31 - top here uh where I have uh selection I
85:37 - now have this is child DNA now what I
85:40 - need to do and I want to do this how
85:43 - many
85:44 - times I want to do this ah first I want
85:47 - to say um new
85:50 - population is an
85:51 - array and then I want to Loop through
85:56 - through and I'm going to say new rockets
85:58 - new rockets and I want to Loop through
86:01 - the existing
86:08 - rockets and I want to do this for every
86:11 - single
86:12 - existing for every single and this
86:15 - should say this. Rockets so now what I'm
86:17 - going to say is new rockets index I
86:20 - equals a new rocket with that child DNA
86:25 - so this is what I want to do I want to
86:27 - have parent a pick a DNA from one parent
86:30 - parent B pick a DNA from another parent
86:33 - cross over those two dnas and make a new
86:35 - rocket with that DNA now does my rocket
86:40 - uh where is the rocket object scrolling
86:43 - like crazy once again now the rocket
86:45 - object should have an optional argument
86:47 - the rocket Constructor should have an OP
86:49 - optional argument called DNA so I could
86:51 - say if it receives DNA then this DNA
86:55 - equals that DNA
86:57 - otherwise it can make new random DNA so
87:01 - once again I now have rockets that can
87:04 - be made from DNA it still will get the
87:07 - default position velocity and
87:08 - acceleration but it can get that
87:10 - DNA uh okay
87:13 - um okay so now ah maybe okay uh okay
87:17 - okay okay woo so much going on I'm going
87:19 - a little crazy I need to calm down for a
87:21 - second so this is random no that doesn't
87:23 - help me calm down
87:27 - oh nice music there okay um so let's see
87:30 - what we've got so far uh where am I in
87:34 - the population now now what I want to do
87:38 - is I have this new population and I just
87:40 - want to say this. Rockets is now the new
87:45 - rockets so let's see if things are kind
87:48 - of working in the main program now
87:51 - instead of just making a new random
87:53 - population what I should be able to do
87:56 - is say
87:58 - population. evaluate and I'm sure
88:00 - there's going to be tons of errors here
88:01 - but we'll see what happens
88:04 - population dot I'm almost certain that I
88:08 - forgotten somewhere
88:11 - population.
88:13 - selection so if I run those two
88:16 - things weirdly I'm not seeing any let's
88:20 - look in the console count is not defined
88:23 - line
88:28 - 58 um okay hold on let's see if this
88:30 - console no I don't know maybe that's
88:33 - just an old error from something um I'm
88:36 - not going to worry about that this oddly
88:38 - seems to be working okay this do jeans
88:41 - three times if I'm correct says the chat
88:43 - so let's look
88:46 - [Music]
88:51 - for
88:53 - uh
88:57 - I'm pause for a second I got to I got to
89:00 - think about how I'm going to determine
89:01 - if this is
89:04 - working
89:06 - um
89:07 - because uh so oh this is a pause point
89:10 - in the video I'm GNA let it run for a
89:11 - minute um line
89:16 - 97 yep
89:20 - yep this is this is also wrong okay Okay
89:25 - click the ah thank you that's where I
89:27 - need to
89:28 - look uh hold
89:32 - on wait where did it
89:39 - go where did the exclamation point
89:48 - go yeah now I I see where the problems
89:51 - are print the Max Fitness to the do
89:54 - that's a very good idea
89:56 - Dominic
89:59 - um um so I need to fix the this. genes
90:03 - in a bunch of
90:04 - places and print the Max Fitness to the
90:08 - Dom these are great
90:10 - ideas uh okay this. partner should be
90:13 - partner. gen
90:16 - probably yes yes it should be thank you
90:22 - okay okay
90:26 - okay back and I'm here to correct a few
90:28 - errors because I definitely have some
90:30 - this dot things that are wrong so uh
90:34 - this should be this over here should be
90:35 - uh this. genes this should be this.
90:38 - jeans. length and this by the way should
90:40 - not be this. partner it should be
90:42 - partner. genes so that wasn't working so
90:47 - this that's sort of helps things there's
90:48 - an exclamation point here which should
90:50 - be telling me unexpected token on line
90:52 - 41 so uh this. evaluate equals a
90:57 - function uh okay so let's see um that
91:01 - kind of helps that was a problem ah
91:03 - great so we've got an error let's see if
91:04 - I can look in the console uh this.
91:06 - mating pool. add is not a function so
91:09 - line 59 here this. mating pool ah so I'm
91:12 - in thinking in Java land where the uh I
91:14 - would use an array list and it would be
91:16 - push I mean it would be add but in
91:18 - JavaScript it should be push so let's
91:20 - run this again uh and when it gets to
91:23 - 200 let let's see what happens ah
91:25 - another error let's see what happens
91:28 - um I thought I fixed that this. mating
91:30 - pool. add 66 and
91:34 - 75
91:35 - 66 okay hold on uh the line numbers
91:40 - aren't exactly right let's see if I can
91:42 - go here
91:44 - no um pause again see this is my problem
91:48 - with using codepen it's not it's not
91:50 - really a problem with codepen it's just
91:51 - me I don't not familiar with what I'm
91:52 - doing
91:58 - new rockets 75 is not a function oh whoa
92:03 - yeah so the line numbers are
92:05 - off and it's still got old errors in
92:09 - there um yeah clearly it should not um
92:15 - okay see this is an issue how do people
92:17 - do debugging with code
92:19 - pen because why shouldn't the console
92:22 - let me just like why would the uh can I
92:27 - run it again let's
92:29 - see
92:32 - like yeah why wouldn't the
92:35 - console
92:37 - um you would think that this console
92:40 - would show me the errors which it
92:42 - doesn't so that's not very useful and
92:45 - it's
92:46 - nice that this console uh now I got it
92:49 - right so if I refresh the
92:52 - page then it picks up the correct no
92:55 - it's still wrong it's three lines off
92:59 - whoa that was a loud
93:01 - noise all right so
93:04 - anyway there's a lot of pausing here uh
93:07 - back so this is a problem I don't know
93:09 - why I said this. Rockets equals new
93:11 - rockets like new rockets was a function
93:13 - no new rockets is an array that I want
93:14 - to assign to the current Rockets so I'm
93:16 - going to do that and let's see if we get
93:19 - now it running again ah okay so it looks
93:22 - like we're getting a new generation look
93:23 - at that you can see how um even just
93:26 - that second generation the Rockets are
93:28 - now kind of pointing more straight up so
93:30 - the ones that have kind of kind of made
93:33 - it now there's a bunch of issues with
93:35 - this number one I need to sort of figure
93:37 - out how do I know if the genetic
93:39 - algorithm is working I can kind of see
93:41 - Loosely that it is generally working in
93:44 - that if I were to refresh this whole
93:46 - page and run it again you can see they
93:48 - start all going off in random directions
93:51 - and one of them happened to get quite
93:53 - close
93:54 - uh and you can start to see that over
93:56 - time it looks like maybe more of them
93:58 - are starting to go towards that Target
94:01 - so the the the that array of vectors is
94:04 - sort of evolving towards a bunch of
94:05 - vectors that point straight up so I have
94:07 - the sense the general sense that this is
94:09 - working okay um but let's how can I
94:13 - really kind of understand and know how
94:15 - if this is working well or not working
94:17 - well well one thing I could do um is
94:19 - just like kind of find various things in
94:22 - my code to kind of look look at so what
94:24 - I want to do is create um I'm going to
94:27 - just say create P Max
94:29 - fit um so every time it
94:32 - runs
94:34 - uh um I can kind of see what that
94:36 - maximum Fitness value is 363 I'm going
94:39 - to step to the side here 355 so that
94:42 - makes sense like I'm getting reasonable
94:44 - Fitness values
94:46 - 366 390 so U so that kind of makes sense
94:50 - that's a good sign that that maximum
94:52 - Fitness is going up from frame to frame
94:55 - so something's actually working I would
94:57 - be curious to know to kind of just see
95:01 - um the range of Fitness value so I'm
95:04 - going to say console log uh this do uh
95:09 - Rockets let's see if this if I can look
95:12 - in the console
95:14 - here while it's running come on this.
95:18 - Rockets let me see that in the console
95:20 - please
95:27 - does console.log not spit stuff out to
95:30 - the
95:32 - uh to uh yeah I want to use the browser
95:36 - console ah there we go uh I don't know
95:39 - why that wasn't coming
95:41 - out but now I can see it and I can look
95:44 - on at all the rockets and I can kind of
95:45 - see the fitness negative
95:48 - .36
95:50 - .32 so you can see this is these are the
95:52 - normalized values it's a little weird
95:55 - that I got a negative number in one of
95:57 - them uh but uh Fitness one that was the
95:59 - one that had the maximum Fitness so you
96:01 - can see the fitness values are kind of
96:03 - making sense so this is a good sign so
96:06 - I'm happy that I have reasonable Fitness
96:08 - values
96:10 - um hold
96:12 - on pause
96:15 - sorry I I have to come I have to like I
96:17 - have to just take a moment here this is
96:21 - very hard to
96:22 - do
96:24 - I'm not as familiar with code average
96:26 - fitness values negative when it goes off
96:27 - the
96:35 - screen yeah so people are providing all
96:39 - sorts of suggestions in the chat um
96:43 - going off the screen shouldn't give it a
96:45 - negative Fitness I believe it's getting
96:47 - a negative Fitness if oh yes if the
96:50 - distance is greater than width and I'm
96:52 - mapping that back back to reverse yeah
96:56 - yeah yeah um uh okay so um I'm going to
97:03 - come back into this video I just had to
97:05 - take a a momentary break it'll
97:07 - eventually there'll be an edited version
97:08 - of this um and what I'm going to do is
97:13 - um improve the fitness
97:16 - function uh
97:20 - okay
97:22 - okay
97:33 - okay
97:44 - okay it actually is kind of working
97:46 - quite well um over time I'm kind of
97:50 - surprised um thank you thank you
97:53 - everybody
97:53 - they should stop when they hit the
97:54 - target that's exactly what I think I'm
97:56 - going to do next okay everyone okay I'm
97:59 - back so what I want to do is I want to I
98:01 - want to do some things to improve the
98:02 - fitness function and one thing I just
98:04 - want to do is I don't want to let them
98:05 - go when they hit the target they're done
98:07 - they've achieved their goal and they
98:08 - should get like a super high Fitness so
98:11 - one of the things I'm going to do in the
98:12 - rocket itself is um I am going uh I'm
98:17 - going to look for the rocket and in I I
98:19 - guess what I'll just do this in the
98:20 - update function I'm going to check
98:24 - the distance between this particular
98:26 - Rocket's
98:29 - position and the target's
98:31 - position who and uh if that distance is
98:36 - less than like I'm just going to say if
98:37 - it's less than like 10 pixels then it's
98:40 - reached the target so let's say um let's
98:43 - create a Boolean variable here called
98:49 - uh oh
98:51 - uh I added something to the code that's
98:53 - kind of making it stutter a little bit
98:55 - but I'm going to add a variable called
98:56 - this do completed equals false and when
98:59 - it's reached the target I want to say
99:01 - this do
99:03 - completed equals true and then um and
99:07 - then I only want it to
99:14 - move uh if it has not completed its
99:20 - goal uh okay so I only want it to update
99:24 - the physics engine if it hasn't
99:25 - completed the
99:27 - goal uh and also if it has completed
99:31 - what I'm going to do is just say this do
99:34 - position
99:35 - equals uh a copy of the target's
99:38 - position so I'm just going to actually
99:41 - move it to the Target so this will help
99:44 - actually um give each of these the best
99:46 - score possible when they hit the target
99:49 - and you should see none of the Rockets
99:51 - should now go past the target
99:56 - um the other thing I think is worth
99:57 - doing is I could say here all right well
100:00 - um if this dot
100:03 - completed let's make things that have
100:05 - actually completed and reached the
100:07 - target let's take the fitness and
100:09 - multiply it by 10 I don't know if that's
100:12 - a good idea but I could just say like
100:14 - you know what you're doing really well
100:15 - if you get close but if you actually
100:17 - reach the target your Fitness is just
100:18 - like massively bigger so um I'm going to
100:22 - refresh the page
100:24 - uh code pen is refreshing automatically
100:26 - and let this run for a little
100:27 - bit I pause I'm going to pause this
100:30 - video and I'm going to edit so like
100:31 - where it's been running for a
100:36 - while so uh what mat when you uh edit
100:41 - these together I think you can edit this
100:43 - part out and I'm just going to let this
100:45 - run for a little bit with some music
100:47 - playing oh that's
100:49 - WR come on Rockets oh I didn't add
100:52 - mutation
100:54 - I realized there's no
100:55 - mutation I forgot about mutation so you
100:58 - can see they're evolving
101:03 - right it's working pretty well all
101:09 - right yes and then I also want to
101:11 - multiply I also want them to the faster
101:14 - they get there have a higher Fitness
101:21 - too yeah Chris Jordan in the chat asks
101:24 - why do your camera shut off after a
101:26 - while that's so weird and it's because
101:29 - I'm I haven't using these Canon 5D
101:32 - cameras which turn off automatically
101:33 - after 30 minutes and there's supposedly
101:35 - a setting where you can stop them from
101:37 - doing that but I haven't been able to
101:41 - okay and I'm back so you can see now
101:44 - that after a bunch of generations and I
101:46 - should add something to the Dom HTML
101:49 - window there to like show how many
101:50 - generations it's run you can see that
101:52 - these these uh Rockets are now shooting
101:54 - directly up to the Target they've
101:55 - evolved so I want to add a bunch of
101:57 - things one thing I might leave to you as
101:59 - an exercise is how could you augment the
102:01 - fitness function so that the faster they
102:03 - get to the Target the higher the fitness
102:05 - so you could do something based on uh
102:08 - what is the count when it gets to the
102:10 - Target and that could be something that
102:11 - you could add to the fitness but I just
102:13 - realized I didn't add mutation to this
102:15 - particular example and you know the
102:17 - genetic algorithm might work a little
102:19 - bit better or do some more interesting
102:20 - things if I add mutation so I want to go
102:22 - to the DNA object and add uh this.
102:27 - mutation this is a really easy function
102:30 - to add because all I need to do is say
102:33 - uh is have a loop whoops is have a loop
102:37 - that goes through
102:41 - um that has a loop that goes through all
102:43 - of the
102:46 - genes sorry pause
102:50 - ah I shouldn't just say pause all the
102:53 - time I'm making this like impossible to
102:55 - edit um but this computer's getting
102:57 - really hot but I it drives me crazy that
102:59 - I'm like going nuts with the environment
103:02 - um
103:05 - so I'm just going to come back we're
103:08 - going to do do
103:12 - over because
103:14 - I this is what it should look
103:18 - like oh I'm going to have to let this
103:20 - run for a little bit again I let this
103:22 - run for a little
103:25 - bit as always I always forget the this
103:29 - do this
103:56 - come on evolve Rockets okay I think
103:57 - that's probably good
103:59 - enough so this is random too many
104:02 - buttons
104:03 - okay uh all right okay I'm GNA try this
104:09 - again I'm back and you can see that the
104:11 - Rockets have now evolved a nice path of
104:14 - going towards that Target so you can see
104:15 - they're all actually going along the
104:17 - same path now one thing I realized that
104:18 - I forgot to add to this genetic
104:20 - algorithm is a mutation function so I'm
104:22 - going to add that right now um and I'm
104:24 - going to put that right here under the
104:26 - crossover function mutation is good in a
104:28 - lot of cases you know the these Rockets
104:31 - can now only ever have the path based on
104:33 - the original random vectors so I could
104:36 - just write a simple function that just
104:38 - Loops through all of their genes
104:43 - again and um what it does is it just
104:47 - picks a random number and let's just
104:49 - have a mutation rate of 1% meaning if I
104:52 - pick a random number less than 01 what I
104:55 - want is for that particular
105:00 - Gene to act to just become a new uh
105:03 - random
105:04 - Vector uh so I'm going to pick a new
105:06 - random vector
105:09 - and um I am also going to then uh set
105:12 - its magnitude to 0.1 which I think is
105:15 - sort of the arbitrary length of these
105:17 - vectors that we've decided so now I've
105:18 - added a mutation function as well and I
105:21 - can after um in the population
105:24 - object um right
105:27 - here after I call crossover after I
105:30 - cross over one parent with another I can
105:32 - also just say then child. mutation and
105:36 - so now if we let this run with the
105:38 - mutation function we we should see that
105:40 - you know mutation will play a role that
105:42 - ultimately eventually they might evolve
105:45 - uh uh they'll be able to evolve a even
105:48 - more optimal path because you know you
105:50 - know in this case every single Vector
105:52 - just really should just point straight
105:54 - up right that would be the perfect thing
105:56 - for it to evolve eventually now here's
105:58 - something here's an exercise that you
106:00 - can think about adding to
106:02 - this the length of time it takes for the
106:05 - rocket to make it to the Target that
106:08 - could absolutely be a part of its
106:10 - Fitness right if it
106:13 - um if it makes it to the Target faster
106:16 - what is the current value of count when
106:18 - it makes the target that's something I
106:20 - could save and the the lower that count
106:22 - the higher it's Fitness so I might leave
106:23 - that as an exercise for you to add in
106:25 - but what I'm going to do right now is I
106:29 - am going to add just a quick obstacle
106:32 - because I think that will be worth it to
106:34 - sort of see so let's make um let's make
106:38 - a
106:39 - rectangle in the window whoops I'm going
106:43 - to draw a rectangle that's like um start
106:46 - at X is 200 uh uh X of 200 y of 50 it's
106:51 - going to be 200 pixels across and 10
106:53 - pixels
106:54 - High let me say fill 255 and it should
106:57 - be clearly be much lower down and maybe
107:00 - it should be start at 100 and it should
107:02 - be around
107:04 - there right so there's an obstacle for
107:06 - you that's actually a pretty hard
107:08 - obstacle get around so what I want to do
107:12 - and and let's make these uh
107:14 - variables uh RX is what did I say uh is
107:19 - uh
107:21 - 100 r y is uh
107:27 - 150 and uh r w is uh 200 and and Rh is
107:36 - uh 10 so what I want to test in the
107:39 - rocket
107:42 - object and where is my
107:46 - rocket here it is what I want to check
107:49 - here is in the update function right
107:51 - this is checking has it reached reach
107:53 - the target but let's also see if it
107:55 - knocks into that obstacle if pause dox
107:59 - is great okay
108:01 - this.p
108:05 - dox is greater than that RX value and
108:08 - this
108:09 - dop dox is less than rx+ r w right if
108:14 - it's between there and
108:18 - this.y is greater than r y and this do
108:22 - pause. Y is less than the top of the
108:25 - rectangle plus the height r y plus RH
108:29 - right in this case it's also it's I'm
108:32 - going to say it's dead or it crashed
108:34 - this do crashed is
108:37 - true so uh um so I want it to start
108:42 - moving if it's completed oh move if uh
108:45 - as long as it's not completed and it's
108:48 - not crashed
108:52 - and we can say uh the the each rocket
108:56 - now has a variable called this. crashed
108:59 - which is also false and then in the
109:02 - fitness if this do completed this do
109:05 - Fitness times equals 10 if if this do
109:10 - crashed let's just set this do Fitness
109:13 - equal to one so I'm not going to set it
109:15 - to zero I probably should set it to
109:17 - zero um but let's set it to one okay so
109:20 - now we should see let's see if these
109:23 - Rockets over time evolve to go around
109:26 - the
109:28 - obstacle now I'm going to pause and let
109:31 - it run for a
109:34 - while
109:37 - uh F Looper says you need to add the
109:39 - vars in your obstacle oh yeah thank you
109:43 - for
109:44 - that I'm going to do that it it'll
109:47 - technically it should work without that
109:50 - but to be sure
109:58 - oh I'm going let it run for some music
110:01 - please yeah I definitely need to
110:03 - increase the
110:08 - lifespan come on
110:21 - Rockets
110:31 - o that one did pretty
110:35 - well they got to I think they just got
110:37 - to like so first of all the forces are
110:39 - kind of weak and it's not very much time
110:42 - so
110:44 - uh I should also do the collide with the
110:47 - border of the canvas all right fine
110:49 - let's add that in um
110:54 - okay so you can see now they've it's
110:56 - been running for a little bit but they
110:58 - haven't really evolved to go around the
111:00 - obstacle yet so let's add a few things
111:02 - number one is they need a bit of a
111:03 - longer lifespan so I'm going to let them
111:06 - go for uh 400 Cycles I'm also want to um
111:10 - I also want to make them crash if they
111:12 - hit the edge of the window that I think
111:14 - will help a little bit um so let's um
111:19 - let me go to the
111:21 - rocket and and in this place where I'm
111:25 - trying to check if they've crashed I can
111:27 - also check things like if
111:29 - this.x is greater than wi uh or
111:34 - this.x is less than zero then this.
111:37 - crashed is also uh true and I can also
111:40 - do the same thing with the uh
111:44 - height so I can also
111:47 - uh I can also I can also have them crash
111:51 - if they go off the edge of the window
111:53 - which I think will help the other thing
111:55 - that I might consider doing is I'm going
111:57 - to make a global variable called Max
111:59 - Force um which is 0.1 right
112:03 - now so I'm going to look for wherever I
112:05 - have ma 0.1 right here I always set the
112:08 - magnitude to 0.1 I'm going to down
112:10 - change that to the variable Max
112:12 - Force and I want to set this to a max
112:18 - force and there we go and now um oh look
112:23 - at this these poor poor rockets that
112:27 - start going down off the screen that's
112:30 - going to take them a while to evolve out
112:33 - so you know I should give them all I I
112:36 - should give them all A little nudge up
112:38 - that might be a nice thing for me to
112:40 - give them but I kind of don't want to
112:42 - but I am going to give them a higher
112:44 - maximum Force which I think will help so
112:47 - I'm going to make that maximum
112:48 - force2 which I think and then um I also
112:52 - though want to limit their velocity
112:54 - which I think will be helpful um just to
112:57 - like make it so they don't sort of
112:58 - spiral out of control I'm in the rocket
113:01 - object I going
113:04 - to here uh say this. velocity. limit uh
113:09 - like to four and now that's a bunch of
113:12 - things that I've added let's let me zoom
113:14 - in here on our rockets and I'm going to
113:17 - let this run for a little bit and I'll
113:19 - come back when after it's run for a
113:21 - little bit we'll see how it goes
113:26 - Bo all the
113:28 - Rockets So look if all the Rockets died
113:31 - so let's see if one of them can manage
113:33 - this is going to take a
113:36 - while so there's a lot of things I could
113:38 - add to this
113:42 - uh first of all I could I could I could
113:45 - just have a lot more Rockets if one of
113:47 - them would just like figure out not to
113:50 - die not to go off the edge
113:53 - Edge um they're evolving to be close to
113:56 - the obstacle but not to hit it it's the
113:58 - thing that get the best score until they
113:59 - learn how to go over to the obstacle um
114:01 - change the color if they crash that
114:02 - would be good
114:05 - um I just want to let this run for a
114:07 - little bit
114:09 - let's we need a
114:13 - [Music]
114:22 - okay all right so this clearly isn't
114:25 - going to work uh let's fuss with some
114:26 - parameters when they crash just decrease
114:29 - their Fitness a little bit clearly I
114:31 - need to do that let's try that
114:35 - [Music]
114:36 - uh
114:38 - okay so I've let this run for a little
114:40 - while but unfortunately all the Rockets
114:42 - oh are crashing um and so the crashing
114:45 - just like totally ruins their Fitness
114:47 - and actually the ones that crash kind of
114:49 - closer to the Target we kind of want to
114:51 - keep so what I'm actually going to do is
114:53 - I'm just going to divide their Fitness
114:56 - by 10 when they crash and that way um we
114:58 - still have the fitness scaled so to
115:02 - speak
115:06 - so let's have this run for a little bit
115:08 - longer and see what
115:11 - happens
115:18 - pause yeah so those those should get a
115:21 - much higher Fitness right now and we
115:23 - should get more that kind of Zoom around
115:26 - up to the top there there we
115:29 - [Music]
115:34 - go ah yes hit the target that was
115:39 - excited look look at all of them go
115:42 - there we
115:45 - go I'm watching them over there I guess
115:47 - I could watch them here
115:49 - [Music]
115:51 - too
115:54 - look at them look at them all go in this
115:55 - weird like dance formation it's like
115:58 - uh smart rocket
116:05 - formation okay I'm back so these Rockets
116:08 - have now successfully evolved and you
116:10 - can see that one of them figured out how
116:12 - to get around this Target and hit the
116:14 - get around the obstacle and hit the
116:15 - target you can see that it had some like
116:17 - accidental weird DNA in it that makes it
116:19 - go kind of like in this weird pth and
116:22 - they're all kind of doing that um so
116:24 - this is where if I were to add something
116:26 - to the fitness function that gave the
116:29 - ones that actually make it to the Target
116:30 - a little bit faster a higher Fitness
116:32 - they would start to work out the path so
116:35 - that they wouldn't be kind of doing this
116:36 - strange extra thing because as long as
116:38 - they make it to the Target before the
116:39 - end of the lifespan they're fine so I'm
116:41 - going to leave um this video I think
116:44 - here there are so many improvements you
116:46 - could make to this I I might like to
116:47 - make some of them at some point or come
116:49 - back and do a video you might like to
116:50 - make those improvements and share them
116:51 - with me number one is just design wise
116:54 - you could add color add design to the
116:56 - Rockets you could create a much more
116:58 - interesting maze or course for them uh
117:00 - you could create obstacle objects and
117:02 - allow the user to move the obstacles
117:03 - around make the target movable so they
117:05 - have to adapt and evolve uh we could
117:08 - improve the fitness function a number of
117:10 - ways one by keeping track of the amount
117:11 - of time to reach the target uh something
117:13 - that I'll talk about I think I'll make a
117:14 - separate video about this is just
117:15 - talking about why an exponential Fitness
117:18 - function instead of a linear Fitness
117:20 - function can be something that's quite
117:21 - useful which you could add to this as
117:23 - well um look for the next video kind of
117:25 - how I do that um so those are a bunch of
117:29 - ideas of how you could make this system
117:31 - a bit better and in fact one thing that
117:33 - I will do is I'm going to revisit this
117:35 - example in a future video looking at how
117:38 - a neural network or other types of
117:39 - machine learning algorithms might also
117:42 - be used to train uh agents to move
117:45 - around the screen with a certain path so
117:47 - uh I hope you enjoyed this rather I
117:49 - think insanely long and Scattered um
117:53 - scattered uh a coding challenge the code
117:56 - itself will be available on both GitHub
117:59 - as well as a link to this uh pen this
118:01 - code pen that I created here so you can
118:03 - actually just go straight to that link
118:04 - and play around with the code there as
118:05 - well okay I hope you enjoyed it and I'll
118:07 - see you in a future genetic algorithms
118:11 - video
118:14 - um okay so
118:17 - um that is that I so this this was like
118:21 - mildly
118:24 - successful yeah um uh nextor Kate makes
118:28 - a really great suggestion in the chat
118:30 - and writes can you run it 10,000 times
118:33 - without the graphics and then run it
118:35 - normally yes so something really
118:37 - interesting to build into a system like
118:38 - this would be to uh just have the
118:41 - algorithm itself run the simulation
118:43 - without the animation Loop without
118:45 - drawing it you know JavaScript at the
118:47 - browser perhaps isn't the best um kind
118:50 - of language and environment to do that
118:51 - in but we could certainly number crunch
118:53 - it with and then actually just like pass
118:56 - all that DNA off to a set of resulting
118:58 - objects which would then um
119:01 - animate
119:04 - um okay um
119:08 - so I kind of want to add the count thing
119:12 - in just because I'm curious I want to
119:14 - clean up the code but I think I got to
119:16 - put this aside I'm going to save
119:19 - this um boy this kind of how long have I
119:23 - been doing this live stream well that
119:25 - this has I don't one time did I start I
119:27 - I guess I've been on for about two hours
119:29 - now um maybe I can go a little bit
119:32 - longer um
119:35 - um uh think about some other things I
119:38 - can add here cting
119:41 - rainbow um so I I can just close this
119:44 - now
119:46 - yes
119:48 - uh me add just
119:51 - this
119:57 - okay um all right so I think that's
120:00 - pretty good for this example let me go
120:03 - back to
120:05 - my
120:07 - um let me go back
120:11 - to
120:14 - um let me go back to uh my
120:23 - the topics here
120:27 - uh on the M genetic algorithms so I
120:33 - suppose I did now I can check this one
120:39 - off I don't know how long that video is
120:41 - going to be in the end I mean I was
120:42 - doing this for at least an hour but
120:44 - there was so much of like when I kept
120:46 - saying pause it'll probably edit down
120:48 - too yes so one thing I'm planning to do
120:51 - is I'm I'm planning on in the future
120:53 - doing uh I think a flappy birds game
120:56 - would be uh is a really good example of
120:58 - looking how M looking at how a machine
121:01 - learning algorithm with something called
121:02 - reinforcement learning could be trained
121:05 - to play a game like a Flappy Bird's
121:07 - clone um um uh effectively and so that
121:11 - is something uh that I'm hoping to get
121:14 - to this summer I'm trying to get through
121:16 - so actually let me talk about let's talk
121:19 - about my upcoming plans for um more
121:22 - machine learning
121:24 - topics so um I don't know what people
121:27 - are getting excited about in the chat
121:28 - because I'm off sync time wise but um so
121:31 - let's talk about this so I have um I'm
121:35 - GNA give you
121:36 - some so if you go to natureof code.com
121:39 - and click on read now and go to chapter
121:42 - 10 there is a chapter that I wrote for
121:45 - this book about neural networks this
121:47 - chapter was written um probably four or
121:50 - five years ago it is not doesn't go too
121:52 - in-depth to things it kind of talks
121:54 - about the general theory behind neural
121:56 - networks it um it looks at this um sort
122:00 - of some scenarios and examples of what
122:01 - neural networks are used for and then I
122:04 - walk through the code for a very simple
122:06 - kind of like the simplest kind of neural
122:08 - network called a perceptron which is a
122:10 - single neuron with just a cou two inputs
122:13 - and one output and then I kind of don't
122:16 - really go much further than that um and
122:18 - I don't necessarily want to go much
122:20 - further than that in terms of writing
122:24 - code for multi things called these
122:27 - multi-layered uh perceptrons and yada
122:30 - yada yada um so um but I do want to open
122:36 - up possibilities for further types of
122:39 - applications so the perceptron is
122:42 - interesting the in the theory and it's
122:44 - also interesting in how you would code
122:46 - it but you're not going to find too many
122:49 - scenarios creative scenarios where the
122:51 - perceptron is actually going to help you
122:53 - solve a problem or create some type of
122:55 - strange playful experiment however
122:57 - having a more sophisticated neural
122:59 - network built out of multiple percep
123:01 - trums will allow you to so I'm I'm
123:04 - looking at and so there's there's two
123:06 - things that I've been reading and
123:08 - researching one is a project called
123:10 - wekinator
123:11 - uh wekinator is software for real-time
123:15 - interactive machine learning it's
123:17 - developed by Rebecca febr who she is a
123:19 - professor at goldsmiths in London uh you
123:22 - can find her Caden course uh
123:23 - introduction to machine learning for
123:25 - artists I believe it's called or for
123:27 - sound music musicians artists and
123:29 - musicians um right it's right here
123:31 - actually sign up for a free online class
123:33 - I highly recommend this online class her
123:34 - videos are excellent I've been watching
123:36 - them won nator is awesome it allows you
123:38 - to really just sort of plug Inplay
123:40 - machine learning like it's a it's
123:42 - software that you run so it's got a goey
123:44 - interface you can plug inputs into it
123:46 - you can train it you get outputs out of
123:48 - it but I decided I don't want to use
123:50 - wack and I I might like make some video
123:52 - tutorials with weinor but for the nature
123:54 - of code book and examples I would rather
123:57 - have the code interface with an nural
124:00 - network library directly rather than be
124:03 - rather than work with osc and messaging
124:05 - in a separate piece of software so what
124:07 - I the other day yesterday that is I uh I
124:12 - made an example using something called
124:14 - uh Nur off which I found I made a quick
124:17 - and dirty processing Library which um
124:21 - can use use processing with this kind of
124:23 - neural network and I trained it just to
124:24 - recognize points that are inside a
124:26 - circle or outside a circle and that
124:28 - completely worked so that was promising
124:30 - to me and I so that was something I was
124:32 - looking at using as a framework for
124:35 - having kind of uh an API access to
124:38 - neural network uh library and code but
124:42 - then I started thinking that because of
124:44 - w inator that it and actually Rebecca
124:46 - had this advice for me um she's been
124:48 - giving me some great advice and feedback
124:50 - that I might actually just look at
124:52 - WCA directly so Wan nator is actually
124:55 - built on top of something called WCA
124:58 - which if this um and WCA is like a bird
125:02 - like a I forget it's like maybe a bird
125:04 - in New Zealand I love anything that has
125:06 - to do with birds oh I could get a WCA
125:08 - sound effect perhaps
125:11 - um uh so um so WCA is an open source
125:16 - library for machine learning that's
125:18 - written in Java so I'm thinking actually
125:21 - what I would like to do is use WCA make
125:24 - WCA a processing library that you can
125:26 - access directly that way I can show
125:28 - examples that run both in weinor if you
125:30 - want to use the software interface or
125:32 - that you could write the code directly
125:33 - for in processing that's kind of my plan
125:37 - now um and so the the other the other
125:40 - question that that brings up is well
125:43 - then how do I then translate these uh
125:46 - examples that I'm going to make in
125:47 - processing into JavaScript so one
125:50 - possibility would be fine sort of of to
125:52 - just make a JavaScript library to Port
125:54 - some of the WCA stuff to JavaScript I'm
125:56 - not so sure about that yet so if anybody
125:58 - has ideas or suggestions or wants to
126:00 - help contribute to developing an
126:03 - open-source neural network library that
126:05 - could work both with processing and p5js
126:07 - um I'm kind of open and game for that um
126:10 - please let me know now another resource
126:12 - that I just uh started reading which is
126:14 - excellent I'm about halfway through it
126:15 - or a quarter of maybe a quarter or a
126:17 - third of the way through it is called
126:19 - machine learning for designers
126:22 - um this is a free ebook from O'Reilly by
126:25 - Patrick Hebron uh Patrick has also been
126:28 - emailing me and giving me some great
126:29 - advice about a new chapter on machine
126:31 - learning for the nature of codebook uh
126:33 - this is free you can get a Kindle PDF
126:35 - Etc this is not going to give you uh
126:38 - practical code examples but it's going
126:40 - to talk you through the current state of
126:42 - the art of machine learning uh what are
126:44 - sort of like the range of libraries and
126:47 - possibilities and applications and what
126:48 - are the different algorithms people are
126:50 - using how does this apply to design and
126:52 - thinking about user interface Design
126:53 - This is a great uh text to sort of kind
126:56 - of give you a background and scope so
126:57 - I'm reading that as well so you know
126:59 - machine learning and neural networks as
127:00 - much as I've done some of these basic
127:02 - examples is is a new topic and a new
127:04 - field for me so I'm kind of in the
127:05 - research and development phase and once
127:07 - I get a little further I'm going to and
127:09 - I'm hoping to do this before September
127:11 - because when September hits I'm going to
127:12 - be busy with other stuff um try to get
127:14 - some video tutorials done and more
127:17 - examples in this
127:18 - direction uh okay so so that is uh that
127:23 - I'm also thinking about some
127:27 - [Music]
127:34 - numbers so uh let's see it is uh 1
127:38 - o'clock uh I I plan to come back
127:41 - tomorrow so
127:43 - um uh so I think I might sort of I think
127:46 - I might need to wrap up for today uh I
127:50 - only really did one I did one one coding
127:52 - Challenge and one video which is rather
127:54 - long and kind of crazy and I used code
127:57 - pen which I uh I really like but I think
128:00 - that I I think code pen will work better
128:03 - in the future for smaller shorter code
128:07 - quick and dirty sketching and algorithms
128:09 - for larger projects I might want to use
128:10 - processing or like the Adam editor um
128:13 - anybody have any other questions or
128:14 - things they would like me to address in
128:16 - this particular session today otherwise
128:18 - I think I'm going to kind of wrap up for
128:20 - today
128:24 - um let's look at
128:27 - um let's look at uh what other
128:31 - interesting topics there are kind of
128:33 - coming in the future perhaps there's a
128:36 - new topic uh that somebody posted just
128:38 - eight minutes ago uh I like to sort
128:41 - these by the thumbs up so machine
128:43 - learning uh so compu the computer vision
128:46 - tutorials I started I definitely have
128:48 - more more on that list I'll get to those
128:50 - at some point I hope machine learning I
128:52 - haven't by Machine learning I really
128:53 - mean neural networks in this case I
128:55 - haven't really gotten to this would be a
128:56 - great topic genetic algorithms that's
128:57 - what I'm working on right now Chrome
128:59 - extensions will come in
129:01 - September
129:03 - um uh fast forward Labs check Mario
129:07 - those are great uh arguments in J oh oh
129:10 - let's do
129:11 - this let's do arguments injs I want to
129:15 - do one little more thing uh uh
129:18 - processing and Android development let's
129:20 - do this
129:25 - um yeah okay so I want to go by
129:29 - 130 um I have somewhere to be at 3 I
129:32 - need to eat something well that should
129:34 - give me enough time so let's let's stick
129:36 - around a little longer I got I'm getting
129:38 - a second
129:45 - wind and let
129:48 - me I feel like I could actually do this
129:51 - one in
129:53 - codepen because it's kind of
129:56 - a a smaller idea let's try codepen
130:01 - again so I'm G to make a new
130:05 - save I'm GNA make
130:12 - a how do I make a
130:15 - new new
130:18 - pen
130:19 - okay I don't want a
130:22 - I don't
130:24 - minimize
130:26 - minimize I want to um
130:31 - add there's got to be a way that I can
130:34 - have
130:35 - uh I can um where's the
130:40 - CDN I know my camera's just shut
130:50 - off uh
130:56 - Chris Chris really doesn't want me to
130:57 - continue using Code Ben but now I feel
131:01 - like I'm going to be fine with it after
131:02 - all that this is a simple small
131:08 - idea today's the code pen day
131:14 - right this one's going to be no
131:17 - problem there's so little code involved
131:19 - in this one
131:31 - I'm just creating a little code in
131:38 - advance uh oh right uh so I got to
131:42 - change this to
131:45 - Professor no stay save and this is uh
131:50 - arguments
131:55 - um oh yeah
132:01 - actually do this
132:06 - uh uh
132:08 - okay
132:12 - um oh yeah the one issue
132:18 - though which is I do see
132:27 - uh I do see sort of an issue with this
132:30 - but which is sort of the console problem
132:34 - but let's see
132:36 - here uh thank you
132:38 - Oliver
132:40 - uh let me just run a little test here oh
132:44 - thank you
132:50 - um
132:59 - great so this is going to
133:04 - work
133:08 - okay okay so this is going to be ah but
133:12 - now my head is in front of the
133:17 - code really you have to give me this
133:20 - whole crazy
133:22 - uh hold
133:24 - on oh I'm not in Professor mode that's
133:27 - why sorry it doesn't won't work yet till
133:31 - I do
133:32 - this okay now it should
133:35 - work
133:48 - um oops
134:06 - is there a way to clear the console
134:08 - without refreshing the
134:09 - [Music]
134:16 - page well I don't
134:18 - know I don't know all right let's give
134:21 - it a try uh
134:35 - okay
134:47 - oh how can I I can clear it that that
134:51 - way
134:52 - okay
134:54 - uh yeah that's what I'm going to look at
134:57 - Akash Constructor overloads the argument
135:00 - fun arguments array that sort of
135:02 - thing
135:05 - um okay I just don't love my setup
135:12 - here
135:14 - yeah all right fine I'm I this is so
135:16 - there's so little code here I'm going to
135:18 - skip the code pen thing for this one
135:24 - this will this is Bon I'm this is a
135:27 - bonus
135:28 - anyway uh so hold
135:30 - on uh just give me a second
135:34 - here
135:35 - uh oh ah I closed that smart Rockets
135:39 - thing that I had been running for so
135:40 - long uh that's too bad uh close all this
135:45 - stuff
135:47 - um okay hold on hold on everybody uh
135:51 - okay
135:54 - uh
135:58 - okay this
136:02 - uh as always I always forget the this do
136:04 - this this this I'm
136:15 - [Music]
136:19 - do okay
136:22 - bonus round slot machine sound
136:25 - effect
136:28 - [Music]
136:36 - uh okay where am I cting
136:39 - rainbow uh smart
136:42 - Rockets did I change the name of it
136:49 - where
136:54 - where is that ah there it is okay uh
137:01 - overloading do I'm going to do the this
137:04 - this dot do do this Dot Song never
137:07 - forget to this
137:08 - dot okay ah there my happy
137:12 - place Adam
137:14 - editor and
137:17 - overloading and here and I really don't
137:20 - need need a canvas but we'll do it
137:24 - anyway okay
137:29 - oh
137:31 - okay okay and now Gooding
137:38 - power I don't know what I'm
137:43 - pressing power Gooding
137:47 - power so this is random this is noise
137:50 - pearing noise that is in the core okay
137:53 - um this do t-shirts please I know right
137:56 - oh I forgot about the t-shirts I mention
137:58 - the t-shirts okay so here we go this is
137:59 - the last thing I'm going to do today I'm
138:01 - going to do now a video tutorial
138:03 - about Constructor overloading and the
138:07 - arguments
138:09 - um the arguments
138:13 - uh the arguments array
138:19 - okay
138:23 - and I'm going to reset these
138:29 - cameras and here we are
138:44 - back
138:46 - okay I'm
138:49 - ready
138:51 - yeah okay uh here we
138:58 - go I'm like my nose is like itching me
139:02 - maybe if I blow my
139:06 - nose it will I will stop neurotically
139:09 - touching it
139:13 - okay hello and welcome to another p5js
139:17 - JavaScript video tutorial thingy maab
139:19 - thing that I'm making this tutorial I'm
139:21 - going to cover something called the
139:23 - arguments array which exists
139:26 - mysteriously in JavaScript perhaps
139:28 - without you even knowing that it's there
139:29 - what you can use it for and this idea of
139:32 - overloading a function or overloading a
139:34 - Constructor and how do you have optional
139:36 - arguments to a function all this stuff
139:38 - okay what am I talking about first of
139:40 - all so let's just say today is a nice
139:43 - sunny warm beautiful day it rained last
139:45 - night a rainbow came out and you just
139:47 - sat at your computer and decided I want
139:49 - to program my own function called sum
139:52 - and what sum is going to do is it's
139:54 - going to take uh two arguments A and B
139:58 - and it's going to say return a plus b so
140:01 - it's just going to make a sum of
140:03 - whatever things I pass to it so I could
140:06 - then say here in setup I could say
140:09 - VAR uh C equals or you know c equal or
140:13 - whatever value equals the sum of 5 and
140:16 - 15 and if I say
140:18 - console.log Val we should see then if I
140:21 - go here I should see 20 and I can say
140:23 - something like sum 2 comma
140:26 - 7 and I'm going to get 9 or Su -3 comma
140:31 - 7 and I'm going to get four so this
140:32 - function works but what if I were to say
140:35 - this sum
140:37 - four not a number well let's say I
140:40 - wanted to be able to actually have it
140:43 - return just the number four how could I
140:46 - have it do that it's getting not a
140:48 - number because what is the value of B in
140:51 - this case if I were to say console.log
140:55 - B and run this again you're going to see
140:58 - the value of B is
141:01 - undefined another Val another way that I
141:04 - can consider undefined undefined if I
141:07 - were to ask is undefined true or false
141:10 - undefined is actually false so something
141:12 - that I could do for example is just say
141:15 - something like if B
141:22 - return a plus
141:24 - b
141:27 - otherwise return a so in this case I now
141:31 - have a function that can perform
141:34 - differently based on the number of
141:35 - arguments it gets right as long as it
141:37 - gets a second argument return two of
141:41 - those two numbers together if it doesn't
141:43 - get the second argument right if the B
141:45 - is false simply return a so in this case
141:48 - now if I go back to the brow and I say
141:51 - sum 4A 5 I should get n but if I say sum
141:55 - four I'll just get four so we've now
141:57 - written a function that can optionally
141:59 - have a second argument very very basic
142:03 - idea here now let's take this a few
142:05 - steps further what if I just said sum
142:09 - with no arguments now I've got undefined
142:12 - again so in this case I could actually
142:14 - say if a a uh if a and b
142:21 - else
142:22 - if uh then the wait I was going to say
142:26 - if B that means there has to be an a
142:29 - right return a plus b uh else if a
142:34 - return a
142:36 - else return zero oh I made this sort of
142:38 - like messy and awkward and weird but you
142:40 - can start to sort of see what the
142:41 - possibilities are so now I'm kind of
142:43 - checking if I give two arguments return
142:45 - the sum of both of those if I have uh if
142:48 - I have one argument return just that one
142:50 - argument if I have no arguments return
142:52 - the value zero let's at least make sure
142:54 - that works right so I can say sum of
142:57 - four and five I get nine sum of four I
142:59 - get four sum with nothing I get zero so
143:03 - great so this is working but what if I
143:04 - now want to say
143:06 - Sum 4 6
143:09 - 8 I still only get 10 right eight isn't
143:12 - involved well guess what anytime you
143:16 - call a function in JavaScript the
143:18 - arguments to that function
143:22 - 4 comma 6 comma 8 those things get
143:24 - placed into what an array an array
143:30 - called arguments you could just say the
143:32 - word arguments and suddenly you have
143:34 - everything in an array let me show you
143:35 - what I mean by that if I go back to the
143:37 - code and I just say here I say
143:42 - console.log
143:45 - arguments and I say
143:49 - sum whoops ah sum 468 you can see what
143:54 - is the value of arguments it's an array
143:56 - 4 comma 6 comma 8 so you know what I
143:58 - could actually do in the case of this
144:01 - function I can write a function called
144:03 - sum I don't even have to name any of the
144:05 - arguments here I can say there is a
144:07 - value at zero I can then go through the
144:11 - length of the array I starts at zero I
144:14 - goes all the way up through are the all
144:16 - the arguments Val plus equals arguments
144:18 - index I and the return Val this is now a
144:23 - function that can take any amount of
144:27 - things you any number of arguments zero
144:29 - arguments five arguments 10 arguments 20
144:31 - arguments and it can Loop through and
144:35 - add them all
144:36 - together so now here I could say things
144:40 - like sum five and I have oh whoops
144:44 - sorry uh I think I didn't reload
144:47 - it sum five
144:50 - I have the number five sum 5 comma 6 I
144:54 - have the number 11 sum 5A 3 comma 2
144:58 - comma 5 comma 1 comma 10 comma 11 comma
145:00 - 5 comma 3 comma 3
145:03 - 33 68 somebody confirmed for me that
145:06 - that number is correct it's going to
145:08 - take any number of arguments and loop
145:10 - through all of them so you can think of
145:12 - all sorts of interesting possibilities
145:14 - that this might open up for you in how
145:16 - you write a function I could also name
145:18 - those arguments too as well so like for
145:21 - example I don't know why I want to do
145:23 - this but I could name the first argument
145:25 - and I could also say V return Val plus
145:28 - a so in this case this is a little bit
145:30 - weird but if I say sum one comma two
145:33 - it's going to add one and two and then
145:35 - add one to it again so I would get the
145:37 - number four little bit silly but you can
145:39 - see that you can both use that arguments
145:42 - array and you could also name optionally
145:44 - name those arguments coming in so
145:46 - there's a lot of possibilities of things
145:47 - you can do here now let me make this
145:49 - even just to make this even more a
145:51 - little bit stranger what if I want my
145:55 - function let's say I were to create an
146:00 - array so I have an array that has the
146:04 - values 5 comma 3 comma 6 in it so I know
146:07 - I could say 5 comma 3 comma 6 with some
146:09 - and I'm going to get 19 did I take did I
146:12 - did I leave that weird extra plus a
146:14 - thing in there I want to take that out
146:16 - um run this again I'm going to make that
146:18 - array I'm going to do this for
146:20 - right so what what if I what if I also
146:23 - wanted to be able to say some array in
146:26 - this case look what it did something
146:28 - crazy happened because it actually tried
146:30 - to add zero with the array but then it
146:33 - tried to make the array a string and it
146:35 - concatenated together JavaScript just
146:37 - tried to figure something out but this
146:38 - isn't what I want I want that if you
146:41 - pass this function an array as its
146:43 - argument that you're going to add the
146:45 - elements of that array so how would I do
146:47 - that well what I want to do is I want to
146:49 - check
146:53 - I could put this back in a I could say
146:55 - if a is an instance of array and I think
146:59 - Capital like this so this is a kind of
147:03 - keyword in JavaScript instance of that
147:06 - can determine what kind of argument you
147:09 - passed in so you could say like oh well
147:11 - if the function receives a string as its
147:13 - argument it should act this way but if
147:15 - it receives a number as its argument it
147:17 - should act this way so if a is an
147:19 - instance of
147:20 - array and I'm actually going to call
147:22 - this a
147:24 - RR then what I want to do is do exactly
147:28 - this algorithm but instead of using the
147:31 - arguments array I just want to use that
147:34 - actual array so now I'm going to say uh
147:38 - array. length and add all that up right
147:40 - so if you get an array Loop through that
147:44 - array and return the sum of everything
147:45 - in that array if you don't get an array
147:48 - then Loop through the because it's
147:50 - there's just a sequence of numbers then
147:52 - use the arguments array so now I have
147:53 - like all sorts of possibilities here for
147:55 - how this function could perform so now I
147:59 - can say let me
148:01 - have sum it still works if I give it
148:03 - five three and six now if I make an
148:06 - array 5 3 and six and I say sum of that
148:09 - array I should also get that same number
148:12 - and if I were to say array do uh 4
148:15 - equals
148:18 - -1 and look at that array whoops I have
148:21 - an undefined array index 3 equals
148:24 - 2 uh and look at that array again and
148:27 - let me clear that clear it look at that
148:29 - look at the array and now if I say sum
148:32 - array I should still get I should get 15
148:34 - which is right 14 plus 2 is 16 minus 1
148:37 - is 15 so now I have this function which
148:39 - can both receive an array now
148:41 - unfortunately I can't do this right I
148:44 - would have to write as an exercise for
148:46 - your if you want a tricky exercise how
148:48 - could you now write this function so
148:49 - that it can have mixed arrays and
148:51 - regular numbers and still add all those
148:54 - things together um okay uh yes so in the
149:00 - chat some people are saying I could use
149:01 - the apply function and other types of
149:04 - things to like put the array into the
149:06 - arguments array and that's a great
149:07 - suggestion maybe I'll cover that in a
149:09 - separate video but right now I just want
149:10 - to look at different ways that you can
149:12 - have flexible Arguments for a function
149:14 - and this often comes up in the case of
149:17 - making objects like a particle object so
149:19 - let's take this a little bit further and
149:21 - let's just say that this is going to be
149:23 - a program and I'm just going to take
149:25 - this and comment it out for right now um
149:28 - and I'm going to say let's say I have a
149:29 - I'm I'm writing a program with some sort
149:31 - of particle
149:34 - object and the whole point of this
149:36 - particle object is that it has a
149:39 - position which is a vector and I'm going
149:42 - to make that Vector with divided by two
149:44 - height divided two and then I'm going to
149:47 - have a function called show which what
149:49 - does that function do it draws a circle
149:51 - on the screen at that vectors
149:54 - X and
149:56 - Y and maybe phil. 255 and I'm going to
150:00 - say here I'm going to say uh VAR
150:04 - p p is a new
150:07 - particle and then P
150:10 - doow now you can see I run this program
150:15 - and I get that Circle appearing in the
150:16 - center of the window now let's think
150:18 - about all the possible ways might want
150:20 - to make a particle for example I might
150:22 - want to make and let's do it let's do
150:24 - this differently now let's let's say
150:26 - there's an array called
150:28 - particles
150:29 - and and what I'm going to do is I'm
150:31 - going to say particles index zero is a
150:34 - new particle and then I'm going to Loop
150:36 - through and I'm just going to call show
150:39 - on all the particles in that
150:42 - array so this is essentially the same
150:45 - program but the reason why I want to
150:47 - show this to you right is that I want to
150:49 - be able say things like this well
150:51 - particles index one what if I could make
150:54 - a particle this
150:56 - way what if I could say
151:03 - this and what if I could say particles
151:06 - index 2 equals uh a new
151:11 - particle with that particular Vector
151:13 - what if I were to say this particles
151:15 - index 3
151:17 - equals equals a new
151:23 - particle uh whoops uh let's make this
151:26 - 150 comma 100 100 comma 150 now I'm not
151:30 - so sure I really want all of these but
151:33 - you could imagine an object you might be
151:35 - able to in your code you might want to
151:37 - make particles and sometimes you make a
151:38 - particle with no object no arguments and
151:40 - it always puts it in a default location
151:42 - or you could specify the location as two
151:46 - values an X and a y or you could just
151:48 - pass in a vector and it would put the
151:49 - particle at that vector or maybe for
151:51 - some reason you were getting uh data
151:53 - from a text file and you're reading in
151:55 - strings and what if you give it two
151:57 - numbers separated by a comma How would
151:59 - you deal with it then so this is this is
152:02 - what um this is what you can use how you
152:06 - read uh um how you how you can read the
152:10 - arguments into
152:14 - um sorry
152:17 - pause I lost my train of thought
152:20 - and this is what happens when you're
152:21 - doing live streaming in the heat for
152:23 - like hours in a
152:34 - row this is the kind of scenario that
152:36 - can come up in many things that you
152:38 - might want to program so let's see if we
152:39 - can get all these particles to appear on
152:41 - the screen so one thing that I might do
152:44 - here first of all is give it some let's
152:48 - give it two arguments an X and A
152:51 - y so one thing we can do is say this and
152:56 - actually I'm going to um I'm going to
152:59 - change it from having a position
153:01 - Vector just to giving it just right now
153:03 - I'm going to change it to just having an
153:05 - X and A Y so one thing I could actually
153:07 - do that you'll see is I'm going to say
153:08 - this.x equals X or
153:11 - 100
153:13 - this.y equals y or 100 this would cover
153:17 - me for these first two cases right
153:20 - I'm basically saying I want to take the
153:22 - value that comes in or some default
153:25 - value if it's false and in this case it
153:26 - would be false because it would be
153:28 - undefined no value would come in so
153:30 - let's um let's actually say I want to
153:31 - make the particle at 150 comma 50 and we
153:35 - could see um we should be able we should
153:38 - see two particles now right so this is
153:41 - um and let me give all the okay it
153:43 - doesn't really matter the point is you
153:45 - can see now when the particle gets two
153:49 - arguments coming in it it uses those two
153:52 - arguments like 150 comma 50 when it
153:55 - doesn't get those coming in it uses 100
153:56 - comma 100 so this is 100 comma 100 and
154:00 - this is uh 50 comma 150 that's that
154:04 - second particle okay so those two cases
154:06 - are
154:07 - covered now what about this third case
154:10 - what if I'm passing in a vector so one
154:13 - thing I can do is I can say okay well
154:16 - actually right here I can say if this
154:19 - dox is an instance of a P5 Vector object
154:24 - then this.x equals x.x and this. yal x.y
154:29 - now this is a little bit weird because
154:31 - I'm sort of stuck in this place of I
154:34 - named that first argument X so now X is
154:37 - kind of this Vector I still have to call
154:39 - it X so I might actually want to just
154:41 - use more generic names like a and b um
154:45 - in this case so I can say if and I'm not
154:48 - saying if this do X I'm saying if a is
154:50 - an instance of P5 Vector do
154:52 - this
154:54 - otherwise go back to this other idea so
154:58 - now I'm checking I've got two three
154:59 - possibilities one is I've gotten a
155:01 - vector or another possibility is I got
155:03 - nothing or I got two separate values and
155:07 - we can run this again you can see now I
155:09 - have three of them all three of those
155:10 - worked and I have one last possibility
155:13 - which is this string so I can also say
155:16 - else if a is an instance
155:20 - of string I guess is that right somebody
155:23 - tell me in the chat uh um and then I'm
155:28 - going to put I need to do something
155:33 - here whoops oh I'm missing a bracket ah
155:36 - right so I need to deal with this
155:38 - somehow so let's just at least run this
155:40 - and see uh let's see did I
155:42 - get let me see if this actually works no
155:46 - so uh what do I don't want to say string
155:48 - text no
155:51 - uh
155:57 - pause
156:04 - uh
156:11 - yeah
156:13 - false H wow how come I don't know this
156:16 - uh JavaScript instance of string oh it's
156:20 - probably lowercase string
156:23 - maybe
156:26 - uh ah look at that oh because it's not a
156:29 - string
156:32 - object I remember this now it's not a
156:36 - string object how do I get around this
156:39 - how silly type
156:44 - of yeah let's
156:47 - Okay so that's fine I should be able to
156:49 - use use uh s in type
157:01 - of no type of is not a
157:06 - thing
157:08 - uh is that a
157:11 - function
157:14 - ah type of equals
157:27 - type of s okay okay uh
157:35 - oh
157:37 - undefined if type of
157:40 - a
157:44 - no oh type of s string I see or type
157:49 - type
157:50 - of s okay
157:54 - okay okay okay okay well I got a little
157:56 - off track here but
158:02 - okay okay I'm back I forgot that there's
158:04 - a there's a Kind of a Funny um oops hold
158:08 - on let me let me do this
158:10 - again oops let me get rid of this
158:12 - console
158:16 - log I forgot and there's a sort of funny
158:18 - thing with strings that um I forgot
158:21 - about because this if a is an instance
158:24 - of string is not actually checking if a
158:26 - is just text but if it's an actual like
158:28 - fully formed string object in JavaScript
158:32 - and let me just show you this is a
158:33 - little bit of an aside but it's kind of
158:34 - worth it since it might come up um let's
158:36 - say I create a VAR s equals uh test now
158:40 - if I say s instance of string you're
158:44 - going to actually see that that gives me
158:45 - false but if I were to say s is a new
158:47 - string
158:49 - with the text test in it right it's
158:52 - actually like a whole string object now
158:54 - and this will actually return true but
158:58 - in most cases I'm just going to be in
159:00 - the land of saying s equals test whoops
159:05 - something like this so another function
159:07 - that I can use in JavaScript is type of
159:09 - and I can say type of s and I'll
159:11 - actually get the word string back and so
159:15 - I think in this case I could say else if
159:17 - type of
159:21 - a equals string
159:25 - oops then now let's see if that works
159:28 - I'm going to run this and you can see
159:29 - that came through so since that came
159:31 - through what I need to do now is say um
159:36 - uh I can use like uh a.split by a
159:41 - comma uh and then I can say uh this.x
159:45 - equals number nums index zero and this
159:49 - do y equals number nums index one so
159:53 - split takes something um takes the
159:57 - string so let's let's let me do this
159:58 - actually so uh so uh s equals 100 comma
160:05 - 150 if I say s. split by a comma I'm
160:08 - going to get now an array with two
160:10 - strings in it so if I say x index
160:13 - zero no no no
160:15 - sorry I'm G to say VAR nums equals s do
160:20 - split with the
160:22 - comma so
160:28 - nums
160:30 - pause whatever let me just come back to
160:33 - here there's some point where I
160:35 - switched back to
160:38 - here so let's say s is 100 the numbers
160:43 - in a string 100 comma
160:45 - 150 and what I want to do is I want to
160:47 - say nums equals s do split by a comma ah
160:51 - s. split by a comma so now nums is just
160:54 - an array with two strings in it and so I
160:56 - could say nums index zero but that's
160:59 - actually not the number 100 it's the
161:01 - string 100 but and there's lots of ways
161:03 - I could probably convert it but one way
161:05 - is I could just do this convert it to a
161:08 - number num whoops not numbers
161:10 - number and you can see now I have the
161:12 - value 100 so I'm just doing that in the
161:14 - code here I'm saying ah if I happen to
161:16 - get a string split it up by the comma
161:19 - then convert those two numbers and we
161:21 - should see then another particle at uh
161:25 - 100 comma 150 so if I now run this again
161:28 - we can see now I have four particles so
161:30 - we've now written a Constructor function
161:33 - that optional that takes two arguments
161:35 - you could give it no arguments uh you
161:38 - could give it two numbers you could give
161:39 - it a vector you could give it a string
161:41 - and it's going to figure out how to fill
161:42 - in the X and Y based on what it gets so
161:45 - this is one just kind of small instance
161:48 - of that but there's lots of other
161:50 - scenarios where this could come up where
161:52 - you want to write a function to
161:54 - arbitrarily handle a certain number of
161:56 - arguments of different types um in
161:58 - incidentally if you were doing this in
162:00 - processing or in Java you would just
162:02 - write multiple copies of the function
162:04 - each with different arguments and then
162:06 - handle the those arguments in that but
162:08 - in JavaScript since the arguments don't
162:10 - have a type A type is not part of the
162:12 - signature of that function of that
162:14 - method you have to handle them with an
162:16 - if statement by having sort of optional
162:18 - flexible arguments okay hopefully you
162:20 - found this helpful and you learned
162:21 - something about what the arguments array
162:23 - in JavaScript does and how to write a
162:25 - function or a Constructor function that
162:27 - has flexible different kinds of
162:28 - arguments and different numbers of
162:29 - arguments thanks for watching
162:32 - goodbye okay um oh yeah that's a good uh
162:37 - Muhammad offers a great suggestion too
162:39 - about how about if variable a is an
162:41 - instance of a particle object so it
162:43 - clones what um Daniel in the chat says
162:45 - multiple dispatch what's multiple
162:47 - dispatch mean
162:55 - so I think I'm I'm definitely finished
162:57 - for
162:58 - today I don't know I I wake up in the
163:00 - morning and I have this like thought
163:02 - like it's going to be good I'm going to
163:03 - do a coding challenge of smart Rockets I
163:05 - know how that stuff works I'll be able
163:07 - to whip that up and it'll be clear and
163:08 - make sense and I won't get
163:10 - lost and then it's hot and then I get
163:13 - confused and then I don't know so
163:15 - hopefully this was okay today I need I
163:17 - need I need some confirmation
163:21 - reinforcement learning I need I think
163:24 - the codepen thing was kind of an
163:25 - interesting experiment but it made it a
163:26 - little bit difficult for me um before I
163:29 - go I will remind you of some things uh
163:32 - coding rainbow.com is the website uh
163:34 - subscribe on YouTube I I like to have
163:36 - more subscribers I think for whatever
163:39 - reason uh you can also support my
163:41 - channel becoming a patron I'm trying to
163:43 - think about more goals and things to use
163:45 - if I can start crowdfund patreon as a
163:47 - crowdfunding website ways that I can
163:49 - provide more Rewards or different things
163:51 - right now there just a private slack
163:52 - channel that you get a invitation to
163:54 - where you can ask questions or discuss
163:56 - various topics um uh you can also uh
164:00 - sign up here at the bottom put your
164:02 - email address in and I'll send emails
164:04 - out for live streams I'm hoping to do
164:06 - one more live stream uh tomorrow this is
164:08 - why I have only after this week I only
164:11 - have two more weeks uh this summer until
164:13 - I go away I'm going to be away traveling
164:14 - for the last two weeks of August so I
164:17 - will be on Hiatus then uh I am uh
164:20 - possibly having I have some plans for
164:22 - some things I might be able to do a
164:23 - release while I'm on Hiatus but mostly
164:25 - I'm just trying to ramp up and make a
164:26 - lot of content now so I can kind of
164:28 - release it over time also in August
164:30 - while way so there's still some new
164:31 - stuff um there are only uh two days or
164:35 - three days left if you're interested in
164:37 - getting one of these uh coating rainbow
164:39 - t-shirts there are kid sizes available
164:41 - um this is the
164:42 - URL um unfortunately shipping outside of
164:46 - the US is particularly expensive through
164:48 - this website so at some point we'll try
164:50 - to look into uh uh companies that make
164:53 - uh t-shirts and various things that can
164:55 - uh ship outside of the US with a little
164:57 - less uh expense
165:00 - involved um and I think that's it so
165:04 - subscribe like follow me on Twitter ask
165:07 - questions on Twitter if you want
165:09 - shiffman um thanks for watching I'm I'm
165:12 - looking in the chat to see if anybody
165:13 - has any
165:16 - um oh Julia and Java have multiple disc
165:19 - patch where two or more functions
165:20 - methods can be defined with different
165:22 - types of arguments yes that is the case
165:24 - javascript's a little bit is yeah
165:27 - JavaScript could be awkward about these
165:29 - things for sure uh so I
165:33 - think I'm trying to think if I've got
165:35 - anything yes only intro you did miss it
165:38 - all I'm at the end now it's 140 this is
165:42 - all I must be getting close to three
165:44 - hours uh because I think I started
165:46 - around 10:40 or 10:45
165:50 - um and that's about it so thank you all
165:53 - for watching uh and to play
165:57 - my song My Goodbye music uh usually
166:01 - actually I forgot to play that
166:02 - underneath
166:05 - uh uh the URLs that I was going to
166:09 - show uh boy I my brain has
166:13 - melted
166:17 - um
166:20 - [Music]
166:22 - if you have any more questions you
166:24 - have two minutes to ask them in the
166:29 - chat except for the fact that you're
166:31 - about 15 or 20 seconds behind so by the
166:33 - time I say this you'll only have a
166:34 - minute and a half or
166:40 - so uh oh I I'm planning to be back
166:43 - tomorrow morning around 10:30 probably
166:45 - the same time that'll be the last live
166:46 - stream of this week uh Thursday Friday I
166:49 - have some other things on the docket I'm
166:51 - going be working on the nature of code
166:52 - book trying to get that machine learning
166:54 - chapter Rewritten trying to make this
166:56 - machine learning library for processing
166:58 - in P5 that maybe wraps WCA or some other
167:01 - tools make some W nator examples that
167:03 - stuff I'll be working on this week um I
167:06 - need to clean my apartment I really need
167:08 - to do that so many toys and things
167:10 - everywhere big problem will I be on the
167:13 - code newbie podcast uh I H I was on the
167:16 - code newbie podcast I can't remember the
167:18 - episode number but it was uh sometime
167:20 - last year I love the code Newby podcast
167:22 - you should all definitely subscribe I
167:24 - also recommend the creative coding
167:26 - podcast with s Ian uh Saron is uh
167:30 - amazing who runs code newbie she's giv
167:32 - me lots of great advice and uh we have
167:34 - some plans maybe to do hopefully some
167:37 - collaboration maybe I can get her in
167:38 - here doing a video at some point too so
167:40 - we'll see about that um but the work
167:43 - that she's doing Cod newbies is really
167:44 - fantastic they have a great slack too
167:46 - you can join
167:49 - you cannot write multiple functions with
167:51 - the same name in JavaScript that is
167:54 - correct uh yeah overloading you have to
167:58 - do it within the code of the function
168:02 - itself uh some people have said they
168:04 - want to make a community project I think
168:06 - that's a thrilling and wonderful idea
168:08 - there is a GitHub issue Thread about
168:10 - that I would encourage you to go and
168:13 - participate there I don't I don't have
168:15 - any brilliant ideas in my head about
168:17 - that um but but I encourage you guys to
168:21 - kind of whip that up and stay in touch
168:23 - with me to figure out a way to do that
168:25 - ah the camera went off there's about 20
168:27 - seconds
168:32 - left power you have cing power coding
168:38 - rainbows oh
168:40 - that's don't ever forget that this
168:44 - dot uh okay see you guys thanks for
168:48 - watching and I'll be back back tomorrow
168:49 - morning uh this will be an archive on
168:51 - YouTube at some point and all that stuff
168:53 - okay goodbye

Cleaned transcript:

good morning welcome to another episode episode 53 of no wrong button I don't if you can hear that um I might pick uh I am my name is Dan schiffman I'm here live from the school for poetic computation on a Tuesday Morning July 202nd perhaps I don't know it's 1045 a.m. where I am I here to do some programming to talk about this is like rainbows and unicorns and all sorts of stuff um I've got the I got a new song on my soundboard with uh wherever need to think about random numbers I'm going to do a coding challenge today which will involve programming in JavaScript which means I don't ever want to forget sorry I'm a little too excited about like sort of getting the soundboard thing going I'm I'm still not all the way where I hope to be at some point but anyway um let me quickly give some introductions my name is Dan schiffman um this is coding rainbow I already said all this stuff um if you are watching this as an archived video on YouTube uh go ahead and look at this video's description if you want to skip ahead and find the time codes to where actual tutorials and programming things happen um and uh what else did I want to say Okay so I want to get I I have this as you all know I'm working on beating my record right now it usually takes me about 30 minutes before I actually start doing anything today I'm looking to make that happen within at least 15 minutes um let me just give you a little bit of background here in case you are new uh if you you can always go to coding rainbow.com that's the URL there is where you can uh subscribe on YouTube if you want to join the slack Channel you can become a patron on patreon and if you just want to get emails uh sent out to you when I'm going to do a live stream uh which I've been doing once or twice per week uh you can put your email in there there are only 3 days left to get your uh coding rainbow uh tshirt uh um it is uh it is three days the last date is July 29th which also happens to be my birthday this Friday I will be at some age which has a a number which has a four and a three in it you can guess what number that is um and I think that's right uh anyway you can get pink and blue and green and you can also get uh some uh kid sizes as well uh if you have uh any babies you want to give them a coating rainbow onesie okay so that's my um yeah I was going to say what number is my birthday my age will be I'm waiting for a four and a three three ah four there we go okay okay um so uh what is going to happen today so uh on so one thing I should mention is one thing that I do is uh I am um with the help of MAA um after I do a long session like last week I believe it was last week I did a threehour session on genetic algorithms was on Friday actually and then usually what we do is we take um uh and edit the videos I can't what happened to me I've completely lost the ability to talk give me a hold on a second hello I'm back I I I uh put my brain back in um so usually what happens after a long session is then uh smaller shorter tutorial videos are edited out of that longer session but those tutorials have not arrived yet they will be coming um a little late this time around but I'm just going to Dive Right In and do another live session I need coffee no trust me coffee not a good thing for me although actually I do um I do drink coffee again but there was a while uh a while for a while I didn't drink coffee so let me talk about the there's three things I want to do today one is I want to finish up my discussion on genetic algorithms I'm going to pick off where I last left off in the last coding rainbow session on Friday so I want to do three more um three more genetic algorithm examples um one of which I will do as a coding challenge I'll program the whole thing from scratch which I think uh um based on feedback people have enjoyed that um so that's one thing I'm going to do today the other thing I would like to do is talk a little bit about machine learning and neural networks which I am planning to dive into on a future coding rainbow I just want to give you some thoughts and resources of things that I'm reading and researching in preparation of making some examples so if you want to kind of read some of those things too uh give me your feedback I want to talk about that and then uh I want to experiment with something so I have a a a pro codepen account now codepen has something called Professor mode and I was had a Twitter conversation an email conversation with codepen that they opened up my account to allow up to like a 100 people I think to live follow the code so what I'm going to do is I'm gonna oh maybe we should just try this right now so I'm gonna open up a browser and I'm going to go to codepen is it Cod pen.org it's not Cod pen.org it's Cod pen.com uh I'm gonna log in uh oh uh oh uh oh no I don't know my username or password I do have it on my ah I have it on this other computer uh hold on uh so this is random this is noise I was just trying to give you some music to listen to okay uh I'm looking for on this computer I have have one password and I'm looking for code pen and I see what my username is oops ah ah ah ah hold on everybody got it s s sh I FF m n and look at this look at this lovely pen of rain I love this very nice okay so let's see if we can make this work I can't as always I always forget the this dot this dot this dot this dot I'm which song is that which button is that W okay okay so um here we are let's see if we make this work uh I should have looked at this in advance but I'm going to make a new pen I'm going to call it coding rainbow test and then now how do I turn this into Professor mode anybody have any ideas settings uh uh change view no uh save maybe if you all just go to this link it will just work all right in the chat go to this link codepen.io shiftman pen capital J capital K lowercase k DPM see if you can go to that link uh and see if uh you can uh see it you should have looked at this in advance Nuno writes in the chat should have looked at this in advance the most repeated phrase in CR uh thank you Oliver for posting that into the chat it appears to work so are you seeing okay so are you seeing uh hold on do you see this live typing as I type it on your screen if that happens that will be so magical I'm wondering I'm waiting yes so the only problem is if you're watching this as an archive uh you won't uh you won't be able to see this but this I think is a very exciting development because what this means if I do what I can do is this use this periodically to demonstrate a concept an HTML CSS or JavaScript web programming concept and you can actually have the code and follow along so what happens oh you don't see that live you just see the oh if I hit save does it is it update or you have to hit refresh reload is needed okay so okay okay time out I got to go to Professor mode somehow uh maybe my account uh let's just check and see uh settings um account thank you for being a pro I have a pro account uh GitHub Twitter I'm looking for who has anybody used Professor mode all right hold on you have got to change VI oh Arno is there so Arno I know has used this so I've got to change view okay okay okay change view drop down okay okay I'm a little bit change view ah there we go look at this make way I don't know I singing songs from Aladdin all of a sudden that's a little bit weird uh oh okay so change that okay ah so now students watching zero now how do I how do I um how do the students find the url to go to okay I just have to add SL Professor what if the if as do does the student do you just go to this view do you just go to the slash Professor that's what I would like to know uh okay and now more typing and testing and um uh oh two students watching that's good console oh look at that uh and uh I get the JavaScript code to run 11 students watching whoa okay let's see see let's see here look you can chat with me there too okay great okay so this is working um maybe let's do something with this right now actually let's do a tutorial of how to uh use p5js with codepen how about about that huh why not that's been I feel like that's on my um so by the way I I didn't go through all the things I usually go through at the beginning of these live streams because I'm a little bit tired of doing that but uh if you are wondering where you can suggest topics or follow along with a list of topics that I'm planning to do um yes that's funny okay so the stream has about a 15second delay on it so you're going to see the code pen stuff change uh Greg points out a great Point you're going to see that in advance of me talking talk about it it's a weird time warp thing is happening but um so uh if you are interested you can follow along with um uh and suggest topics here in this uh GitHub repository uh okay I now am going to search for o look at this random pool selection interesting new things um I'm going to search for a code pen I feel like that is discussed o maybe it's not this seems like magic okay uh let's look at this link oh oh I looked at this I think it doesn't I think it's bro okay um so let's let's let's create an issue um uh how to use p5js in code pen and I'm going to do this right now just to keep track of it okay um so here we go I I have to admit something I have seen codepen I'm aware of Cen codepen I'm a fan of codepen I don't know that I've ever actually really made anything in codepen before but I feel somewhat uh confident that we can work this out here's a question um that I have um the thing okay so let's make let's just do this tutorial I could do this so I'm in uh Professor mode right now um if I hit command s Fork settings how can I close minimize CSS ah great minimize HTML ah great okay uh okay great um so sorry I'm just save and close exter oh look at this so look at this I I was going to just add a reference to um to P5 GS in the HTML file but it looks like I can actually just put them here quick ad and is p5js one an option here no but that's okay okay so uh save and close so let's try that uh now I want to uh how do I just I want it to go back to its normal how do I tidy maximize no interesting I'm getting used to the interface here okay uh all right uh let me read let me make a new oh wait no I shouldn't make a new one can I just refresh this page and have it I guess it's using my ah there we go okay because this is what you will see most likely when you first start up okay we're going to do I'm going to do a a quick uh tutorial about codepen um and um I'm going to do that before I go to genetic algorithms okay okay here we go 28 students are watching this live okay um now I think I'm standing in front of the I'm going to move this a little bit over here where's the oh console I can see that there okay assets interesting uh okay um and let's make this a little wire change view change view I guess that's sort of like the minimum can I go like this ah yeah that's fine I don't need my face there so let's do that okay sorry about this uh 15 minutes in I'm gonna actually start doing something I'm going to drink a little uh water here and okay here we go um here we go hello welcome to a p5js video tutorial about how to use codepen with p5js now codepen is a web browser based code editor it allows you to type some HTML stuff in this box here it allows you to type some CSS stuff in this box over there and then in that box on the end that I can't reach cuz my arms will get cut off um you can type some JavaScript stuff so there's a lot to codepen I'm sure there's a lot of features I'm actually you might be watching this as an archive video but I'm actually doing this as a live stream and I'm using something called codepen Professor mode and there are 27 people watching me Live code this right now at this very moment um but what I want to do is just make a quick uh P5 GS sketch and see how it works with codepen and some of the features of code pen that I might discover along the way cuz I actually haven't really used codepen before this is this is my I'm discovering this as I make this tutorial okay so first thing we want to do is let's look under settings here and I want to go under JavaScript so one thing that I want to do is I want to make available the p5js JavaScript libraries now I could add references those to those in the HTML file but since codepen has this feature I can actually just add a URL to my JavaScript library right here and now how do I find the p5js JavaScript library it just so happens that if I Google CDN CDN by the way stands for Content delivery Network because it's going to deliver it's a network that will deliver our content the content in this case being the p5js library and I'm going to do this CDN p5js and we're going to come to this URL which is uh cdnjs I'm going to copy it and I'm going to go back to code pen whoops code pen and I'm going to place it in here and then I'm going to add another while I'm here I might as well add let's add the Dom Library as well so I'm going to get the Dom Library uh and I'm going to put that in here and then uh hopefully I'm going to save and close and now if I go back to settings we should see that these files are referenced and incidentally popular JavaScript libraries that you might use are available directly right here so if I wanted to use jQuery for whatever reason I could just kind of go into this menu here okay yay oh ow I have a have a giant pimple on my nose and I just whacked it it hurts I don't know if you zoom in to the pixels this is going to be permanently in this video forever now but you can zoom in and try to find it it's very uh it's quite noticeable okay save and close maybe I'll edit that out I won't edit that out it's too it's too it's just there okay so now I'm going let's just see so one thing I'm going to do is I don't really care about CSS or HTML right now I mean I care about them CSS and HTML I care about you but right now you're not the primary focus I just want to see if things are working I'm going to add function setup I'm going to say create canvas uh 200 200 I'm going to say background uh zero and I'm going to hit save and look at that there p5js sketch running in code pen I don't know what else should we do in this tutorial I didn't come up with something to make let's just make sure things animate I'm going to add function draw and I'm going to say ellipse uh Mouse X Mouse y 16 comma 16 I'm going to hit save I hit command s by the way to save and you can see now there is my sketch running I could also add something like create P which is part of P5 Dom and I could say uh this is a sketch this is a painting sketch and I'm hit command s again and you can see now there I have a paragraph element there we could add something like let's see a print line test actually let's Let's uh let's let's add the mouse pressed function somebody in the chat is mentioning that create P sounds like something else I guess that's true uh print line uh Mouse X so I want to look at the console there's a console here and I can click and every time I click you'll see uh my oh this is very hard for you to see so let's zoom in on this you can see that I also have access to a console right here in codepen this is lovely to use I Coden I'm enjoying it quite well look there's a chat here look people are talking in the chat uh because they're watching this live and I am also going to say change View and I can now uh do oh look at this so you can see one of the nice things is there are different uh views here so if I want to go to presentation or full page I can actually I could click on that or I could also just go up to the URL and type full here and now you can see there's my sketch so this is actually how you make a P5 sketch in codepen was really quite easy uh and I I I wish I had prepared to do some other stuff in this video I'm going to just pause and maybe this video will continue in a second where I do some more stuff uh uh every once Alvaro every once in a while I check out the chat maybe it's okay just to have a you know what I think it's fine but I'm back and I've decided that it's okay to have a very short just like 5 minute video that showed you very quickly how to use p5js in a codepen so if I'm going to do this in future videos if you have questions about it or features you want me to explore please let me know in the comments um or at the rainbow topics uh GitHub repository that is also linked to in the description of this video thanks for watching um yeah so tell me so if you guys are interact with the sketch let me ask you a question um so I'm going to go back to Professor mode uh I don't I I kind of I I almost Professor mode I guess is fine as a name okay so let's say I um um let's say um let's say you've now messed with the sketch and you've made it do something totally different but I do this what happens to your changes if I suddenly hit save does it just override what you did how does that work and updates automatically like does it keep your changes like if you add something to setup and I change something in draw do you get my change but keep your change you can't edit the code please clear canvas in the beginning of the loop this seems overwrites okay so so that's fine you can play along and follow along but whatever I do overwrites okay um all right well that was exciting so um if you pause you can edit got it and then when you play again okay so that's interesting so I assume this would be useful for future coding challenges for you guys one thing I'm having difficulty that I need to think about is how to arrange my screen this is not a huge area for me to type code in um so I might like sort of look into some of the layout features here of code pen um which I think could which I think could be uh useful but I will I'm GNA I'm going to look into that um later okay so um what I'm going to save this I'm going to um I'm going to go out of here and I am going to so what I want to do is oh I don't want to go out of there so I want to go to Rainbow topics and I want to sort all the issues by most thumbs up and I want to go to genetic algorithms Okay so this is what I'm working on now and um uh okay update this so if I recall correctly this is what I got to last week on coding rainbow so I went over over the basics of a genetic algorithm what it is why it exists I went over the core algorithm step by step I talked through this Shakespeare monkey problem one thing I really forgot to say which is really I really wish I had and I'll make sure this is in the video descriptions is the Shakespeare monkey problem the inspiration of from that comes from computational beauty of nature so this is a wonderful book um I will just um by uh Gary William flake called the computational beauty of nature um my book the nature of code a lot of the ideas from that book came come out of having read this book um so you know a lot of credit uh uh should go to that book and I believe in this book The Shakespeare monkey problem is discussed at length as well and you know honestly I don't specifically recall but I assume that's where I the idea originally um came to me because I worked it was like I think in 2002 I worked on a project which was a distributed piece of software kind of like I don't know if SEI at home still exists you guys know about it's the search for extraterrestrial intelligence SEI SEI there was like um there's massive amounts of audio and radio wave data that uh is that's collected from various things pointed at space And so there's a piece of software that you could download and run your computer that would analyze and look for signs of uh extraterrestrial life and was distributed and everybody could run on their computers or contribute to centralized database this was like a thing maybe it's still a thing now but I was into that and I made my own software that just like recreated the entire works of wood Shakespeare with random typing monkeys in a distributed way anyway that was a long time ago um so look synchron synchronization with YouTube chat I don't know what that means um so anyway I went off on a tangent there but so uh I just wanted to make sure that I referenced this book okay back to my list uh I want dig up that I think I made that software in um a macr media director and I wrote the server in Java old ancient technology this is like 2001 or 2002 um right my birthday has a four and a three in it did I mention that earlier today okay um so anyway so back to this so I have in my head at least four more video tutorials that I want to do today and what I think would be worth doing is is uh taking this forces and vectors tutorial and uh about making a genetic algorithm evolve an array of vectors which like uh which describes a path in a window canvas and actually do that as a coding challenge uh and when I say do that as a coding challenge I mean kind of write all the code for it as opposed to just show the example and talk through how it works um um so that uh in the chat let me know if that's sounds like an interesting and good idea I guess what I might do what I could consider doing is not writing everything from scratch but by taking a vehicle example and taking the a genetic algorithm example and combining the two in like copy pasting the code into something and then making it work maybe it's better just to write it from scratch I don't know we'll see um and then I also want to talk about interactive selection ecosystem Evolution and also talk a bit about Fitness function so that is my plan uh here onow um okay I must have all right uh okay so let's see here um so let me get set up here as always I always forget the so I'm going to use the adom editor and what I'm going to do is create new folder smart Rockets dog do do do do do do going to do this to do this I'm going to do this do this I'm going to do this this I'm going to do do never forget this I'm going to do the this this dot this dot this dot the this Dot Song never forget the this dot somebody compos that song for so this is random this is noise pearly noise that is in the core random algorithm the actual random algorithm itself those numbers aren't related at all you pick like I'm picking random numbers between 0 and 10 9 2 7 6 1 n 48 9 2 1 3 I pick nine a lot apparently but with pearing noise I might pick numbers like this okay 2 three four three four five six 5 four five six 7 five six 7 five 6 s 89 876 look this is like pear noise performance I have a new fan I wish I had long hair so I could like could just be blowing in the wind here on my live stream here on YouTube okay uh okay so this I can minimize this is like now I can open this up but with curly noise I might pick numbers like this 5 5 noise that is noise this is no that is this is no that is so this is no that is noise that is this isise that is this is noise that is noise so this is noise that is I don't need the sound get R of that okay uh I'm just about ready okay but with pearing noise I might pick numbers like this four all right so here's the question for you guys I don't know if you've been thinking about it I there's there's there's basically three possibilities here I could I forget but if I don't have the key mapping correct I could uh whoa I did this wrong again ah I forgot I change okay it's fine oh look at that whoa what did I just do it faded between them I don't know how I did that um I didn't have this ready to be erased so there's there's a few possibilities here I could program the entire thing from scratch so I just start with no code whatsoever I'm going to make a rocket object a DNA object uh a population object uh build the write the algorithm in just make everything entirely from scratch that's option number one option number two is I could start with uh example that I at least have a moving physics object one of them and then I do all the genetic algorithm stuff from scratch and option three would be that I have well I guess there's four options options three would be that I I start with my genetic algorithm example and add all the physics stuff so I could start with physics add all the genetic algorithm I could start with my genetic algorithm example add all the physics or I could start with a physics example and a genetic algorithm example and combine the two from scratch everybody loves to from scratch I'm very happy to do it from scratch I think that's kind of fun and crazy um all right so uh and and it it's um one thing I had um uh somebody from YouTube com contacted me for a free consultation on my YouTube channel which is very exciting and um one of the things they told me with looking at my analytics and statistics where the coding challenges are quite popular and people seem to really like that everybody's everybody in the chat is just saying from scratch all right so that's what we're going to do uh smart Rockets uh what I want to do whoops I don't know I want to look up there we go so we're going to start with this this is uh a project can we find a date on this um this is by Jr Thorp um I feel like I want to tweet that I'm about to do this live but it's fine because because uh J will be excited to know but I will um just mention it to him later so let me hit okay here so this has got a lot of fancy stuff in it in that the Rockets are uh you know you can't really see but they they have like a nice design and they're shooting little like blasts out of there but but wait hold on I'm sorry everybody I I left to put my brain back on okay so this is a project called smart Rockets it's by Jer Thorp it was created many years ago in a programming environment called flash whenever I say flash I like to say flash I need that as a sound drop so I could just say except that didn't work sorry I don't have my I'm not good with the key commands yet okay um ah I like that MAA Mata says presenting a multipart video series on a subject and ending it with a coding challenge recapping is the best okay um okay so anyway back so this is a created with flash and what it's doing here is that there are I don't know how many Rockets are on the screen there's something like 20 rockets and each rocket has a bunch of engines attached to it and those engines or thrusters so to speak fire a burst of energy out the back and that those have a vector like actually let me you know what I'm just going to make the video and I'm going to talk about it in the video so flash ah oh that's I don't know I can't use it okay um all right so I'm just going to start okay here we go everybody I'm going to refresh this page oops okay here we go uh okay hello and welcome to another coding challenge now in this coding challenge I am going to program from scratch I'm going to recreate this project called smart Rockets now this project smart Rockets was created in Du over the actual year because I don't know what it is right now at some point later uh by J Thorp this uh program was made in Flash um which is a programming thing Adobe thing maybe a macr media who knows some company blah blah blah that's another discussion for another time um I'm gonna hit okay and let this run but this is a there's a genetic algorithm here where these rockets that at the moment don't look very smart are evolving a path essentially from the bottom of the window to that Target up there so let me talk through just very briefly uh whoops um how these uh how these rockets work so in uh in J's uh smart Rockets example here's a here's a rocket hold on time out let me just start the whole thing over I this pen is no good and I was going to say I could just edit it from where but you know editing is so unnecessary um let me try this pen okay uh there we go uh one is that two is it it's backwards I want to fix that but I'll fix that another time okay start singing flash uh Oliver I don't think I'm going to do this in code pen Oliver because I'm just not super comfortable uh with the environment I know that would be really useful that would be really useful so you guys could follow it along let me do this one notd in code pen and I'm going to practice with code because this is going to be hard and I'm going to practice in code pen a little more and I'll do some other stuff in code pen I know sorry H okay here we go action script yes okay that's what I was looking for that's the word I was looking for I know you could help me debug oh you guys are really getting me here I just okay I'm gonna not do this I'm gonna I know my limits and I'm gonna I'm gonna do stuff future challenges will happen in codepen practice is really fine you guys talk to me into it okay uh okay let's see uh new pen um so the question is I need to figure out a few things the question is I need to uh save oh nope edit uh smart Rockets uh this is the URL uh if you guys oh no I'm not in Prof whoa this is the xky blp uh capital x capital K capital Y lowercase B capital capital L capital P okay so I'm going to change the view to Professor mode um I am going to put in I'm going to just give myself a bigger I am going to go to settings and I need the CDN links again cdnjs uh let's get um P5 by the way I easily succumb to peer pressure as you guys have just learned um uh JavaScript here and then should be actually oops uh the Dom library is here uh should be able to go here uh save and close I should be able to say function setup create canvas uh 640 360 and um function draw uh background Zero Save that runs it okay now my what I would like to do is figure out how to very easily um is there a way for me to make new Js files so can I have multiple JavaScript files that's something that I kind of need to do this it's a big example anybody know uh add another resource no uh so it's going to be hard without multiple JavaScript files um and then also I want to change ah I bet you editor layout so this I can do ah this is good I like this so I think I should do it this way yep so this is good and then let's just make it yeah that's good and console pops up is this an interactive console like interesting oh yeah I like that okay well I'm in front of the console that's a bit of a problem uh but I don't mind being my head being in front of this so much uh the other thing is the font size is a little bit small so how do I change that I guess I could just do this but I think it would be better to change the font size settings uh anybody know where I changed the font size uh change view direct code links what's that do oh look at that uh pen details view you know oh Professor mode open on Cross wow open on Cross browser testing what's that do that's really cool all right I'm not going to worry about that right now uh oops ah I lost it I lost it uh history recently closed should be this one whoops uh uh sorry everybody go to settings you guys are telling me things in the chat but I don't know what you're referring to uh minimize minimize to go to settings to change font size I Am pro I Am pro I'm not a pro settings where where where where where where where where where font size font size where where ah code indentation oo spaces two spaces Auto saave auto update preview uh quick I don't see where I don't see where I do the font size okay profile pick okay thank you uh settings ah thank you I like source code Pro I'll just leave it default though uh code font size let's try 18 uh editor options line number cold F folding key bindings normal Sublime uh auto update preview example okay this uh no ifications customized anything else I want to do apply the CSS customize blog default pen theme if frames images I think that's going to be did did that get bigger I can't tell I don't know that it did actually uh settings yeah I must not have hit save save all settings okay now go back to pens no how do I find mine uh uh your profile smart Rockets there we go I go to Professor minimize minimize there we go the font size fixed okay in your profiles where you have access to assets can pick Tye type face to yeah the thing that I want to do is I want to be able to like um I want to be able to be like new I just want to have like multiple but you know what I guess I'll do this in one big Javascript file it'll be more challenging but uh yes this is Russ basket asks this is what makes beginners hate programming learning the environment instead of the actual thing this is why my inclination was to not use code pen but also for debugging I can uh I should be able to see be able to do this great uh interestingly how it that's that's kind of interesting how it comes up here this is uh interesting to use okay okay all right right I'm going to go for it why not I'm going to use codeen live Professor mode the stuff will be above my head the Rockets will be moving around and it's time to make it's time to to do this why not yes I I believe I can add files but then okay so rate I I can add files but then can I edit them like What if I by um like I have assets here scripts like let's say I go let's find um let's just just as an example let's say if I go here and find take this mover JS and I drag it over here so now I have that um so I have that asset uh and what can I do with it like I I can't just make that a thing that I edit over here I don't think so I'm going to delete this whiteboard showing a little okay um okay we're just going to go for it okay you guys talk me into it and here we go okay all right how's my hair can you see the giant pimple on my nose it's very painful if I touch it I don't know what I thought I had a sunburn at first because it's so hot and sunny here in New York and then I realized it's just a big pimple which you wouldn't think happens at my age but apparently it does okay here we go flash okay as always I always forget the this dot this do this do ah pressed the wrong button uh F Looper was in the chat so F Looper I made this sound drop okay here we go and here we go uh back to here um and uh here we go try dragging the asset to the editors Oliver you always have a suggestion right when I'm about to um does that really work okay hold on I swear I'm going to do this coding challenge let's try uh let's see if I so okay so yay what if I take this I can't drag it anywhere uh and then what if I go to settings quick ad I don't think I think it's just something that I could reference in the HTML file okay forget it I'm just going to have to do this in one in one file hold on now I want to delete that just in case it messes me up I'll figure this out later here we go there is an assets tab I know there's an assets tab okay here we go I got to get started with this you guys are giving me good suggestions I'm sorry all right remember how I already started this like 20 minutes ago and then I decided I wanted to start it over okay here we go hello and welcome to another coding challenge in this coding challenge I am going to program from scratch something called smart Rockets okay what is this smart Rockets thing well this smart Rockets project which I have running uh behind me you can find a link to it in this video's description is something created by Jr Thorp uh at some number of years ago uh it was it's developed in Flash which is a environment for programming action script um I'm going to do this in JavaScript using the p5js framework the reason why I love this project is it's a great example of genetic algorithms in the wild at play with an animation physics based system so what you'll see here is that there are these Rockets being launched from the bottom and they're trying to reach that Target up there and they have built into them this DNA this DNA that this virtual DNA that tells them how to move about the screen so let me briefly uh talk to you about how that works so the Rockets actually have a bunch of like kind of thrusters on them this is my like pathetic terrible drawing of that and though all of those point in a certain direction so the number of thrusters and the direction that they point in is part of their DNA and then the sequence by which they fire first second third fourth uh is also part of their DNA so you can imagine like if you had a control panel with five buttons on it you could press those five buttons in some sort of sequence to try to get push it in some efficient way to reach that Target so what I need what I need is a couple things I need to ultimately have a rocket object and that rocket object is going to have to have physics built into it I'm also going to need to have some DNA object which is DNA to control the physics and then the DNA object is going to need to have functions like mutation and crossover these are pieces of functionality that exist as part of a genetic algorithm hey if you want to know about genetic algorithms I have a whole set of video tutorials linked to in the description of this video that go through the algorithm in detail I'm going to do that again in this video but I'll be programming kind of quickly so if you want the sort of longer explanation of that go back and watch those videos and then the third thing here is I'm going to need a population object and the population object is going to manage uh an array of these rocket objects so I'm going to make some Rockets let them go have them evolve let them go again have them evolve let them go again and eventually they should make it from the bottom to the top maybe I could put some obstacles in their way that sort of thing let's check on how these Rockets are doing you can see a kind of path that they're by the way the the text smart Rockets here is an obstacle and they're trying to figure out how to get around it so I'm going to leave um I'm going to leave this browser window uh open hopefully I won't forget to close it and at the end of the video we'll come back and check on how those smart Rockets are doing now I'm also going to do something a little bit crazy it's not that crazy I'm going to program this all using codeen I have already added the P5 GS JavaScript files you can check my video of how to do that in a different video I've already added those and and I just started with basically nothing I have create canvas and background this is the only code I have create a canvas and draw a black background so the first thing I want to do is create this rocket object so I'm going to I'm going to do that with a uh Constructor function and I want my rocket to have a position and I'm going to say create Vector uh I want it to have a velocity I'm say create vector and I want it to have an acceleration and I'm going to say create Vector then uh I'm not so used to using codepen so we'll see how this goes for me I then also want to give it a function an apply Force function um which where this rocket can receive a force and that force would get added to its acceleration that is Newton's Law at play and then I also want to what else do I want to do I want to have an update oh and that should say this. apply Force equals function I also want to have it have an update function this. update equals function and I want that function I want to do the sort of standard physics algorithm that I do in ton of my examples where I have uh this do velocity add this do acceleration and then I want have this do position add this do velocity and then I also want to clear the acceleration at the End by multiplying it by zero because so the the whole this this is like I just built a physics engine in like 10 seconds basically I have an object that has a position a velocity to acceleration acceleration gets controlled by forces in the environment or forces by its rocket Thruster so to speak and the update function uh is where uh the physics actually happen Okay so I also want to have a function called this do um show I'm G to I'm just going to be my Rocket won't be as pretty and beautiful as J's smart rocket um I'm just going to say uh I'm just going to make a rectangle at this.position dox this.position doy and the rectangle will be thin but tall and I'm also actually what I'm going to do is I'm going to say translate I want to rotate it in the direction that it's moving I think that'll be a useful thing to have so I'm actually going to translate to its position and then draw the rectangle at 0 0 and I'm also going to say rect mode Center and I am also going to say then rotate by this this. velocity. heading so the heading function in in a in the P5 Vector object gives you an angle of the direction that a vector is pointing so I can rotate by the angle the velocity being the direction that it's moving I also want to add around this push and pop and there if I add push and pop around this function then uh all this rotating and translating won't affect other things so let's let's go now and see if I can create just a single rocket on the screen I'm going to say a rocket equals new rocket and then I'm going to say a rocket. update and rocket. show oh look there it is the rocket in the top left so one thing I want to do is I want my Rockets to start at the bottom of the window so we can see there it started there there and then let's just say for the sake of argument I give it a velocity pointing up is it moving okay so one thing you'll notice I drew it vertically and the angle I'm getting is probably 90 de so it rotated it so I think I'll just change the way I draw the rectangle to be wide and tall uh and you can see there now I have a rocket moving up so I have a single rocket that's a good sign I am getting something going here okay I'm looking everywhere cuz I got a screen here I got a camera here I got a wall here I'm going a little crazy here okay this is good this is good okay now what I think I want to do is um I'm also now I'm going to create a population you know I don't necessarily need a whole separate object to manage this stuff but I'm going to do it anyway and in the population I want to have an array of rockets and I want to uh I want to also have uh population size we'll just make it like a 100 uh and so uh I'm sorry I'm writing a little Loop here can you guys see this font I swear I made the font bigger time out pause I think I this font size got smaller at some point I'm GNA uh let me just check that no it's at 18 point is the font size okay can you guys watching this on YouTube see it okay maybe I'll just make it a little bit bigger oops you can see I I made it a little bigger it seems small to me okay fine you guys are telling me it's fine it looks so small to me over there but you guys are seeing this maybe full screen anyway I made it a little bigger okay um back I made the font size a little bigger so it' be easier to see in the video um so what I want to say is this. Rockets index I equals a new rocket and uh one thing I'm going to do is have their initial velocity just for right now be uh just so I can see a random uh a random vector and uh what I'm going to do now is create a population and I'm going to say the population should update and I'm just going to actually write a function called run and then in the population object itself I'm going to write a function called run and what I want to do there is uh oh what's the uh um pause what's the uh keyboard shortcut for auto format in uh in code pen uh somebody must know somebody must know I'm waiting for the chat to catch up to me alt f4 so on a Mac alt would be option and do I I have I probably have to do option function no command Q very funny Gregory uh shift tab there we go shift tab that seemed to kind of work this is the other thing I have Adam all set up to do this kind of stuff control K plus d you guys are giving me a lot of funny business here I think shift tab seemed right right yeah I'm not used to hitting that okay okay back again and what I want to do is now say oh this do this. rockets whoops I need to say this. Rockets uh Rockets indexi do update and this. Rockets indexi doow and let's see there's an exclamation point here so I'm just going to keep going with this video and I realz I have a problem which so at some point I think the sound went out I was having trouble setting up code pen so there will be an edit Point earlier and now I'm picking back up um um I'm picking back up here um okay so Chris Jordan is reporting some problems in the chat but uh hopefully most people are seeing me in some sort of relative live is place um okay I'm back after some technical difficulties and there's a big bug in my code it's not missing a this dot but it's almost as bad remember how I said here I need this function called Pop I need this function called pop to use push and Pop to make so that this translate and rotate only affects this particular rocket well guess what I did I made a variable named pop for population and that variable pop is now my Global variable which overrides the P5 function named pop so I really shouldn't have done that um I need to name this something else I I'll call it popule for population and you know what I don't know I I can actually just say population I'll do this population run and now we should see ah there's one rocket lifting off and now I can change the population size to like 25 and we can see there we go a bunch of rockets all going off in their random Direction let's clean up some things about these Rockets um let's make them a little bit smaller uh let's say uh no stroke uh let's give them fill 255 with a little bit of Alpha and we should see now uh there we go so this is these are our smart rockets lifting off from the bottom of the screen so we're getting somewhere we've got the physics system now if I return to over here uh in the original smart Rockets there are actually a set of specific thrust ERS positioned on the rocket that push off a force in a given Direction I'm going to do something a little bit simpler what I'm going to do as the object's DNA is I'm just going to create an array the array of DNA is the the DNA is just going to be an array and in each spot in that array will be a vector pointing in some at first at least some random Direction and what the rocket will do it will read that array each one Vector at a time and apply that Vector as a force so let's look at how that might work uh press this button here I am okay so what I want to do now is create an object called uh DNA and in that object I'm going to create an array and I'm going to call that array genes and I'm also going to create like a length uh um variable and actually I'm going to make this a global variable I'm going to have a global variable just called lifespan and let's make that 200 right now because I'm going to let each rocket live for 200 frames and so it's DNA needs to have an array of 200 vectors it's going to apply a single Vector each frame of Animation so um you know my so I'm going to uh now what I'm going to do is I'm going to go from I to zero to lifespan and I'm going to in that array I'm going to give it a random Vector so what I'm going to do now is I want the uh velocity Vector for each rocket to whoops to start off at zero come on everybody so we can see now here all of the objects just start at the bottom of the screen and they're not moving but I'm going to give each rocket some DNA and then in the update fun and then each rocket also needs uh a counter variable this. count and what I'm going to do in update is I'm going to say this. apply Force dna. genes this. count and guess what I forgot this dot so I need this. dna. genes. index this.c count I know that's a mouthful of stuff but I made a DNA object in the rocket that DNA object is has built into it an array called genes it has uh 200 vectors in it and each frame what I want to do is apply one of those vectors as a force and then I want to increase the count so now we can see what oh look at this let's run this again you can see them going flying off like crazy so those those forces were rather um were rather large so another thing I think I could possibly do in my uh DNA is I could uh just make the force a little bit weaker and you can see there we go so here are the Rockets kind of moving off each getting a force and I I also want to look I want to be able to see the um the the the kind of the lifespan itself so what I'm going to do also is I'm going to say uh uh uh life p uh life P equals create P I'm going to make a paragraph element and then um I'm going to um and you know what I just realized even though it's nice to have the the um Rockets have that count I think I'll just make that count a global variable because it's really going to be the same for everyone uh so VAR count equals zero and what I'm going to do is say life p. HTML count and then count Plus+ so now you can see over here right I've got something showing me where we are and now at some point I'm going to go past the end of that array I'm sure we're seeing some sort of error here count is not defined okay well that's something else uh where where am I getting that uh this. count that can go away um so at a certain point I'm going to go past that array um but that is when um the generation would end and I'm going to reset count back to zero ah are you following me I got lost in my own thought with all my computers and typing and coding thing so here we are and yes um here we are we now have a system so far where I have a population of rockets the Rockets have DNA the DNA has embedded into it an array of vectors that tell it how to move around the screen now what I need is a target I need to have a place where these um where these uh Rockets are trying to reach so I'm going to uh create a variable called Target a global variable and I'm going to say Target equals create vector and let's put it in the middle of the window at the top and uh what I'm going to do also in draw is I'm going to just draw a nice little ellipse at targetx Target doy uh 16 16 and we should see that's where they're trying to get to that's our Target um and then what I want to do is I want to say here if count equals lifespan count Plus+ then I want to do something I want to reset let me just reset count back equal to zero right now and as a little trick I'm just going to do this just just sort of see this is not what we want to do but I kind of want the whole thing to start over uh I don't know the auto format and code pen okay so now we should see when this gets to 200 start so we've got the system working here um we have and I'm just going to kind of zoom on this zoom in on this to talk about it for a second okay so over here we have a system now where I am every 200 frames launching 200 Rockets into space And I'm counting up to 200 and when I get to 200 I start 200 Rockets over what I'm missing now from this example is the genetic algorithm itself what I instead of just creating a completely new random population I want to make a new population out of the Rockets um uh I want to make a new population from uh from from the previous population of rockets I want them to create children Rockets I want the Rockets with the highest Fitness that did the best to pass on their genetic information to the Next Generation uh um so uh here we go um people are telling me that there's chat messages I don't think I don't think I can handle looking at the code pen chat if you might be watching this as a YouTube archive there's this is actually happening live uh with people watching the code on codepen live as well okay so let's see here what's the next step that I want to do the next step that I need to do in population is I'm going to call say this do uh evaluate uh oh my camera went off um so what do I want to do in evaluate I want to run through all of the rockets and I want to calculate their Fitness uh this. Rockets indexi uh calculate uh Fitness so I need a new function in each rocket to calculate their Fitness so what where where's my rocket object somewhere here right I'm going to write a function now this do Cal Fitness equals a function so what should their Fitness be well we could say that the closer a rocket makes it to the Target the more fit it is so I can say VAR D equals distance uh this. pause dox this.p doy Target dox target. y codepen couldn't fit that all it's not Cod Pen's fault but I don't have enough room to fit that all in one line which is why it broke off but you can see I'm taking the distance now the other thing I want to do though is say that um and let's give these uh Rockets a variable called Fitness so and I'm going to say this. Fitness equals 1 / distance right because if the distance is one my fitness is one if the distance is 100 it's further away my fitness should be lower like 01 like one divided 100 so in this sense I now have a fitness one divided by distance okay this is good so in the population uh back to the population it's hard to have everything in one file I have now calculated the fitness now the other thing that I need to do if you watch my previous genetic algorithm videos is create a mating pool I want to have a mating pool from which I can pick parents to create the next generation of rockets and in order to pick their parent the parents I want their probability the higher their Fitness I want the higher chance of picking them so rockets that did really well or that get closer to the Target are more likely to pass their genetic information down to the Next Generation so what I want to do is create a variable I'm going to call it a mating pool and it's an empty uh array and the first thing I want to do actually I need to make sure clear it so uh every every time I do this I want to like make it an empty array again and then what I want to do is I want to uh I I want to normalize all of the fitness values I think this would be useful to do um I want them all I guess they're all going to already be between zero and one though because I guess if it gets closer than one Pixel Boy there's there's some things there's a lot of things to think about and add to why not negative of the distance oh that's an interesting idea that uh that uh Oliver point so we could try that let's let's be let's be uh you know I want to use positive numbers because I the way I'm going to add things to The Mating pool I think that'll be but that's an interesting idea that I could explore but let me actually do something to normalize the fitness values um uh so one thing I want to do is uh while I'm calculating the fitness I want to do a Max fit and the maximum Fitness is zero and if this. Rockets indexi Max fit is greater than uh uh ma uh Max fit and this start Rockets Fitness is greater than Max fit then I want Max fit to equal that particular Rocket's Fitness so I want to find the max Fitness what's the highest Fitness out of all of the elements and then after I do that I want to um go through them all again and uh I want to take their Fitness value and divide it by the maximum Fitness so that should normalize them right if the values if the maximum Fitness is a th000 the one with a th000 divide by th000 I'll get the value one all the fitness values will between 0er and one at the moment um there's a few divide by zero issues we could walk we could we could have but um but I'm not going to um worry about that too much right now okay uh another way instead of doing I did just realize though here's another thing I could do um let me go back to the rocket this will be kind of I think this is actually kind of useful why don't I instead of um doing one divided why don't I map that distance which you know essentially has a range between zero and like the width of the window and give that a value all the way between with and and just sort of invert that value I guess that's kind of the same thing but let me just do that uh in this case I might not need to normalize it there's all sorts of possibilities I'm just working this out something might go wrong but let's try that and see how that goes and then let me go back to the population right where was that uh and so now what I want to do is I want to Loop through it again and I want to get a number n which is equal to each Rocket's Fitness and I'm going to say times 100 I'm going to do that arbitrarily right now and then I'm going to say for J equals 0 J is less than n j++ and then what I want to do is say this. meting pool do add and I'm going to add this. Rockets index I so the idea behind this bit of code right here that you've seen already if you watch my other genetic algorithms videos is that what I'm doing is I'm saying basically take the Rockets Fitness which is between zero and one so and then multiply it by 100 so I now have Fitness values between 0er and 100 a rocket with a value of 100 a fitness of 100 should be in The Mating pool 100 times a rocket with a fitness value of three should be in the mating pool three times so it still could be picked if it's only in there three times but it'll be picked much more likely if it's in there a 100 times so this is what I'm doing line 59 should have index J uh thank you no no no no no no no this is not index J so that's a good question but I actually want to take rocket I and add it in multiple times so I know that's confusing because this is a loop here but the purpose of this Loop is to take rocket I and add it in a certain number of times n so I'm using J for that particular Loop um okay but thank you for that question okay so now I have this mating pool whoops what did I just do here uh whoops oh my God everything's going crazy here my sizing is off okay so now I have this mating pool can you still see the font size hopefully you can let me know if it's too small so the next thing that I want to do is I'm and I'm going to write new F function for this is natural I'm going to call it natural I'm just going to call it selection I'm going to write a function called selection and in selection what I want to do is pick two parents and so I'm going to say uh partner parent a uh and oh I'm going to say uh this. mating pool and um I want to get a in random index uh equal uh so oh you know what you can do in P5 now I'm pretty sure in P5 the random function you can actually just give it the array this is a new feature of P5 if I just say random and then an array it'll just give me a random element from that array so I don't actually have to pick a random index yeah uh so that's parent a now this is parent B so I want two parents and I could do something to like say like oh I want to make sure you know one is not the same as the other but you know I want to make sure they're not the same I don't pick the same twice but I'm not too worried about that okay so I want to pick two and then I want to make a child element and I want to make that child by saying parent a. crossover parent B so this is and this is now my wish list I want the DNA and this is really actually not the rocket I want um I'm going to call this child yeah yeah I'll call it yeah we'll call this child I want to have in the DNA object a function that takes um oh you know what this is actually interestingly enough parent a is a rocket object so what I'm going to do is say DNA because I'm going to go and grab the DNA from I'm going to take the random rocket object and grab its DNA because what I want to is create child DNA I want parent a to c DNA to cross over with parent B's DNA so that means in the DNA object which is there's going to be a lot of scrolling in this uh right here I need a new function and I need that function to be called crossover and in this function I need to create uh a another array like child me to call it a new DNA a is a is an array and what I want to do is Loop through the length of the genes and it needs an argument partner so the crossover function uh needs an argument partner and what I want to do is I'm going to say I'm going to make a midpoint midpoint equals a random number between zero and the length of the array so I'm actually going to pick a random point I could always pick the exact middle but what I want to do is I want to say if I is greater than zero I want the new DNA to come from this this object's genes otherwise no and I want if I is greater than the midpoint and otherwise I want the new DNA to come from the partners genes and then I want to return new DNA a so what I'm doing here is I now have written a crossover function this is going to be a long video I have written a crossover function we can look at it closely here which basically says I am a DNA object and I have received another DNA object I'm going to pick somewhere and they're both arrays so I'm going to make a new array and then I'm going to um there's some there's a couple there's some flaws here I got I realizing I got to fix something but that's fine um I'm going to uh pick a midpoint in the length of the array and I'm going to get half you know before the midpoint I'm going to get these genes and after the midpoint I'm going to get the partner genes now there's an issue this here is just an array but what I really want is a DNA object so what I want to do is actually say I want a new uh a new DNA object and it'll make random genes when I do that but I can um and I want to fill the genes I'm going to overwrite that this way I could be a little bit more elegant about how I write this in which case I could I'm going to do that now I'm gonna be so that's one way I could do it but I'm actually going to keep this as an array and I'm going to call this new genes and then what I want to do is say return new DNA I'm going to say return a new DNA object with the new genes which means I now can actually just give the DNA object an array rather than have it be random and in this case in the Constructor function here I can have a variable called genes and I can say if genes exists then this do genes should be that array otherwise do all this other stuff shift tab pause no what is what is the um thanks Oliver I see that there's a bug what is the auto format for codepen uh Cod pen Auto format key maybe Auto format uh what is it uh key Autos indent key bindings command tab oh oh I could also use command that of course where do I see T tidy up code there it is shift tab yeah I thought I was hitting shift tab oh that didn't really work command tab no all right well L dah OCD I know click on the Arrow there's a button to tidy JS yeah but I need a key command for that oh look at that I don't want it to like totally send me to a new place I don't remember where I was okay hold on so it was like this right all right I'm just going to do it myself back right so now what I'm saying here is in this function I this DNA object could either receive genes and just create a DNA object from those genes or if it doesn't receive genes then it could just make random DNA so now uh somebody in the chat line 101 telling me that there's an error uh yes ah this return has to come after that for Loop so that is definitely an error Okay so now I have my crossover function done the in the population object which is I guess closer to the top here uh where I have uh selection I now have this is child DNA now what I need to do and I want to do this how many times I want to do this ah first I want to say um new population is an array and then I want to Loop through through and I'm going to say new rockets new rockets and I want to Loop through the existing rockets and I want to do this for every single existing for every single and this should say this. Rockets so now what I'm going to say is new rockets index I equals a new rocket with that child DNA so this is what I want to do I want to have parent a pick a DNA from one parent parent B pick a DNA from another parent cross over those two dnas and make a new rocket with that DNA now does my rocket uh where is the rocket object scrolling like crazy once again now the rocket object should have an optional argument the rocket Constructor should have an OP optional argument called DNA so I could say if it receives DNA then this DNA equals that DNA otherwise it can make new random DNA so once again I now have rockets that can be made from DNA it still will get the default position velocity and acceleration but it can get that DNA uh okay um okay so now ah maybe okay uh okay okay okay woo so much going on I'm going a little crazy I need to calm down for a second so this is random no that doesn't help me calm down oh nice music there okay um so let's see what we've got so far uh where am I in the population now now what I want to do is I have this new population and I just want to say this. Rockets is now the new rockets so let's see if things are kind of working in the main program now instead of just making a new random population what I should be able to do is say population. evaluate and I'm sure there's going to be tons of errors here but we'll see what happens population dot I'm almost certain that I forgotten somewhere population. selection so if I run those two things weirdly I'm not seeing any let's look in the console count is not defined line 58 um okay hold on let's see if this console no I don't know maybe that's just an old error from something um I'm not going to worry about that this oddly seems to be working okay this do jeans three times if I'm correct says the chat so let's look for uh I'm pause for a second I got to I got to think about how I'm going to determine if this is working um because uh so oh this is a pause point in the video I'm GNA let it run for a minute um line 97 yep yep this is this is also wrong okay Okay click the ah thank you that's where I need to look uh hold on wait where did it go where did the exclamation point go yeah now I I see where the problems are print the Max Fitness to the do that's a very good idea Dominic um um so I need to fix the this. genes in a bunch of places and print the Max Fitness to the Dom these are great ideas uh okay this. partner should be partner. gen probably yes yes it should be thank you okay okay okay back and I'm here to correct a few errors because I definitely have some this dot things that are wrong so uh this should be this over here should be uh this. genes this should be this. jeans. length and this by the way should not be this. partner it should be partner. genes so that wasn't working so this that's sort of helps things there's an exclamation point here which should be telling me unexpected token on line 41 so uh this. evaluate equals a function uh okay so let's see um that kind of helps that was a problem ah great so we've got an error let's see if I can look in the console uh this. mating pool. add is not a function so line 59 here this. mating pool ah so I'm in thinking in Java land where the uh I would use an array list and it would be push I mean it would be add but in JavaScript it should be push so let's run this again uh and when it gets to 200 let let's see what happens ah another error let's see what happens um I thought I fixed that this. mating pool. add 66 and 75 66 okay hold on uh the line numbers aren't exactly right let's see if I can go here no um pause again see this is my problem with using codepen it's not it's not really a problem with codepen it's just me I don't not familiar with what I'm doing new rockets 75 is not a function oh whoa yeah so the line numbers are off and it's still got old errors in there um yeah clearly it should not um okay see this is an issue how do people do debugging with code pen because why shouldn't the console let me just like why would the uh can I run it again let's see like yeah why wouldn't the console um you would think that this console would show me the errors which it doesn't so that's not very useful and it's nice that this console uh now I got it right so if I refresh the page then it picks up the correct no it's still wrong it's three lines off whoa that was a loud noise all right so anyway there's a lot of pausing here uh back so this is a problem I don't know why I said this. Rockets equals new rockets like new rockets was a function no new rockets is an array that I want to assign to the current Rockets so I'm going to do that and let's see if we get now it running again ah okay so it looks like we're getting a new generation look at that you can see how um even just that second generation the Rockets are now kind of pointing more straight up so the ones that have kind of kind of made it now there's a bunch of issues with this number one I need to sort of figure out how do I know if the genetic algorithm is working I can kind of see Loosely that it is generally working in that if I were to refresh this whole page and run it again you can see they start all going off in random directions and one of them happened to get quite close uh and you can start to see that over time it looks like maybe more of them are starting to go towards that Target so the the the that array of vectors is sort of evolving towards a bunch of vectors that point straight up so I have the sense the general sense that this is working okay um but let's how can I really kind of understand and know how if this is working well or not working well well one thing I could do um is just like kind of find various things in my code to kind of look look at so what I want to do is create um I'm going to just say create P Max fit um so every time it runs uh um I can kind of see what that maximum Fitness value is 363 I'm going to step to the side here 355 so that makes sense like I'm getting reasonable Fitness values 366 390 so U so that kind of makes sense that's a good sign that that maximum Fitness is going up from frame to frame so something's actually working I would be curious to know to kind of just see um the range of Fitness value so I'm going to say console log uh this do uh Rockets let's see if this if I can look in the console here while it's running come on this. Rockets let me see that in the console please does console.log not spit stuff out to the uh to uh yeah I want to use the browser console ah there we go uh I don't know why that wasn't coming out but now I can see it and I can look on at all the rockets and I can kind of see the fitness negative .36 .32 so you can see this is these are the normalized values it's a little weird that I got a negative number in one of them uh but uh Fitness one that was the one that had the maximum Fitness so you can see the fitness values are kind of making sense so this is a good sign so I'm happy that I have reasonable Fitness values um hold on pause sorry I I have to come I have to like I have to just take a moment here this is very hard to do I'm not as familiar with code average fitness values negative when it goes off the screen yeah so people are providing all sorts of suggestions in the chat um going off the screen shouldn't give it a negative Fitness I believe it's getting a negative Fitness if oh yes if the distance is greater than width and I'm mapping that back back to reverse yeah yeah yeah um uh okay so um I'm going to come back into this video I just had to take a a momentary break it'll eventually there'll be an edited version of this um and what I'm going to do is um improve the fitness function uh okay okay okay okay it actually is kind of working quite well um over time I'm kind of surprised um thank you thank you everybody they should stop when they hit the target that's exactly what I think I'm going to do next okay everyone okay I'm back so what I want to do is I want to I want to do some things to improve the fitness function and one thing I just want to do is I don't want to let them go when they hit the target they're done they've achieved their goal and they should get like a super high Fitness so one of the things I'm going to do in the rocket itself is um I am going uh I'm going to look for the rocket and in I I guess what I'll just do this in the update function I'm going to check the distance between this particular Rocket's position and the target's position who and uh if that distance is less than like I'm just going to say if it's less than like 10 pixels then it's reached the target so let's say um let's create a Boolean variable here called uh oh uh I added something to the code that's kind of making it stutter a little bit but I'm going to add a variable called this do completed equals false and when it's reached the target I want to say this do completed equals true and then um and then I only want it to move uh if it has not completed its goal uh okay so I only want it to update the physics engine if it hasn't completed the goal uh and also if it has completed what I'm going to do is just say this do position equals uh a copy of the target's position so I'm just going to actually move it to the Target so this will help actually um give each of these the best score possible when they hit the target and you should see none of the Rockets should now go past the target um the other thing I think is worth doing is I could say here all right well um if this dot completed let's make things that have actually completed and reached the target let's take the fitness and multiply it by 10 I don't know if that's a good idea but I could just say like you know what you're doing really well if you get close but if you actually reach the target your Fitness is just like massively bigger so um I'm going to refresh the page uh code pen is refreshing automatically and let this run for a little bit I pause I'm going to pause this video and I'm going to edit so like where it's been running for a while so uh what mat when you uh edit these together I think you can edit this part out and I'm just going to let this run for a little bit with some music playing oh that's WR come on Rockets oh I didn't add mutation I realized there's no mutation I forgot about mutation so you can see they're evolving right it's working pretty well all right yes and then I also want to multiply I also want them to the faster they get there have a higher Fitness too yeah Chris Jordan in the chat asks why do your camera shut off after a while that's so weird and it's because I'm I haven't using these Canon 5D cameras which turn off automatically after 30 minutes and there's supposedly a setting where you can stop them from doing that but I haven't been able to okay and I'm back so you can see now that after a bunch of generations and I should add something to the Dom HTML window there to like show how many generations it's run you can see that these these uh Rockets are now shooting directly up to the Target they've evolved so I want to add a bunch of things one thing I might leave to you as an exercise is how could you augment the fitness function so that the faster they get to the Target the higher the fitness so you could do something based on uh what is the count when it gets to the Target and that could be something that you could add to the fitness but I just realized I didn't add mutation to this particular example and you know the genetic algorithm might work a little bit better or do some more interesting things if I add mutation so I want to go to the DNA object and add uh this. mutation this is a really easy function to add because all I need to do is say uh is have a loop whoops is have a loop that goes through um that has a loop that goes through all of the genes sorry pause ah I shouldn't just say pause all the time I'm making this like impossible to edit um but this computer's getting really hot but I it drives me crazy that I'm like going nuts with the environment um so I'm just going to come back we're going to do do over because I this is what it should look like oh I'm going to have to let this run for a little bit again I let this run for a little bit as always I always forget the this do this come on evolve Rockets okay I think that's probably good enough so this is random too many buttons okay uh all right okay I'm GNA try this again I'm back and you can see that the Rockets have now evolved a nice path of going towards that Target so you can see they're all actually going along the same path now one thing I realized that I forgot to add to this genetic algorithm is a mutation function so I'm going to add that right now um and I'm going to put that right here under the crossover function mutation is good in a lot of cases you know the these Rockets can now only ever have the path based on the original random vectors so I could just write a simple function that just Loops through all of their genes again and um what it does is it just picks a random number and let's just have a mutation rate of 1% meaning if I pick a random number less than 01 what I want is for that particular Gene to act to just become a new uh random Vector uh so I'm going to pick a new random vector and um I am also going to then uh set its magnitude to 0.1 which I think is sort of the arbitrary length of these vectors that we've decided so now I've added a mutation function as well and I can after um in the population object um right here after I call crossover after I cross over one parent with another I can also just say then child. mutation and so now if we let this run with the mutation function we we should see that you know mutation will play a role that ultimately eventually they might evolve uh uh they'll be able to evolve a even more optimal path because you know you know in this case every single Vector just really should just point straight up right that would be the perfect thing for it to evolve eventually now here's something here's an exercise that you can think about adding to this the length of time it takes for the rocket to make it to the Target that could absolutely be a part of its Fitness right if it um if it makes it to the Target faster what is the current value of count when it makes the target that's something I could save and the the lower that count the higher it's Fitness so I might leave that as an exercise for you to add in but what I'm going to do right now is I am going to add just a quick obstacle because I think that will be worth it to sort of see so let's make um let's make a rectangle in the window whoops I'm going to draw a rectangle that's like um start at X is 200 uh uh X of 200 y of 50 it's going to be 200 pixels across and 10 pixels High let me say fill 255 and it should be clearly be much lower down and maybe it should be start at 100 and it should be around there right so there's an obstacle for you that's actually a pretty hard obstacle get around so what I want to do and and let's make these uh variables uh RX is what did I say uh is uh 100 r y is uh 150 and uh r w is uh 200 and and Rh is uh 10 so what I want to test in the rocket object and where is my rocket here it is what I want to check here is in the update function right this is checking has it reached reach the target but let's also see if it knocks into that obstacle if pause dox is great okay this.p dox is greater than that RX value and this dop dox is less than rx+ r w right if it's between there and this.y is greater than r y and this do pause. Y is less than the top of the rectangle plus the height r y plus RH right in this case it's also it's I'm going to say it's dead or it crashed this do crashed is true so uh um so I want it to start moving if it's completed oh move if uh as long as it's not completed and it's not crashed and we can say uh the the each rocket now has a variable called this. crashed which is also false and then in the fitness if this do completed this do Fitness times equals 10 if if this do crashed let's just set this do Fitness equal to one so I'm not going to set it to zero I probably should set it to zero um but let's set it to one okay so now we should see let's see if these Rockets over time evolve to go around the obstacle now I'm going to pause and let it run for a while uh F Looper says you need to add the vars in your obstacle oh yeah thank you for that I'm going to do that it it'll technically it should work without that but to be sure oh I'm going let it run for some music please yeah I definitely need to increase the lifespan come on Rockets o that one did pretty well they got to I think they just got to like so first of all the forces are kind of weak and it's not very much time so uh I should also do the collide with the border of the canvas all right fine let's add that in um okay so you can see now they've it's been running for a little bit but they haven't really evolved to go around the obstacle yet so let's add a few things number one is they need a bit of a longer lifespan so I'm going to let them go for uh 400 Cycles I'm also want to um I also want to make them crash if they hit the edge of the window that I think will help a little bit um so let's um let me go to the rocket and and in this place where I'm trying to check if they've crashed I can also check things like if this.x is greater than wi uh or this.x is less than zero then this. crashed is also uh true and I can also do the same thing with the uh height so I can also uh I can also I can also have them crash if they go off the edge of the window which I think will help the other thing that I might consider doing is I'm going to make a global variable called Max Force um which is 0.1 right now so I'm going to look for wherever I have ma 0.1 right here I always set the magnitude to 0.1 I'm going to down change that to the variable Max Force and I want to set this to a max force and there we go and now um oh look at this these poor poor rockets that start going down off the screen that's going to take them a while to evolve out so you know I should give them all I I should give them all A little nudge up that might be a nice thing for me to give them but I kind of don't want to but I am going to give them a higher maximum Force which I think will help so I'm going to make that maximum force2 which I think and then um I also though want to limit their velocity which I think will be helpful um just to like make it so they don't sort of spiral out of control I'm in the rocket object I going to here uh say this. velocity. limit uh like to four and now that's a bunch of things that I've added let's let me zoom in here on our rockets and I'm going to let this run for a little bit and I'll come back when after it's run for a little bit we'll see how it goes Bo all the Rockets So look if all the Rockets died so let's see if one of them can manage this is going to take a while so there's a lot of things I could add to this uh first of all I could I could I could just have a lot more Rockets if one of them would just like figure out not to die not to go off the edge Edge um they're evolving to be close to the obstacle but not to hit it it's the thing that get the best score until they learn how to go over to the obstacle um change the color if they crash that would be good um I just want to let this run for a little bit let's we need a okay all right so this clearly isn't going to work uh let's fuss with some parameters when they crash just decrease their Fitness a little bit clearly I need to do that let's try that uh okay so I've let this run for a little while but unfortunately all the Rockets oh are crashing um and so the crashing just like totally ruins their Fitness and actually the ones that crash kind of closer to the Target we kind of want to keep so what I'm actually going to do is I'm just going to divide their Fitness by 10 when they crash and that way um we still have the fitness scaled so to speak so let's have this run for a little bit longer and see what happens pause yeah so those those should get a much higher Fitness right now and we should get more that kind of Zoom around up to the top there there we go ah yes hit the target that was excited look look at all of them go there we go I'm watching them over there I guess I could watch them here too look at them look at them all go in this weird like dance formation it's like uh smart rocket formation okay I'm back so these Rockets have now successfully evolved and you can see that one of them figured out how to get around this Target and hit the get around the obstacle and hit the target you can see that it had some like accidental weird DNA in it that makes it go kind of like in this weird pth and they're all kind of doing that um so this is where if I were to add something to the fitness function that gave the ones that actually make it to the Target a little bit faster a higher Fitness they would start to work out the path so that they wouldn't be kind of doing this strange extra thing because as long as they make it to the Target before the end of the lifespan they're fine so I'm going to leave um this video I think here there are so many improvements you could make to this I I might like to make some of them at some point or come back and do a video you might like to make those improvements and share them with me number one is just design wise you could add color add design to the Rockets you could create a much more interesting maze or course for them uh you could create obstacle objects and allow the user to move the obstacles around make the target movable so they have to adapt and evolve uh we could improve the fitness function a number of ways one by keeping track of the amount of time to reach the target uh something that I'll talk about I think I'll make a separate video about this is just talking about why an exponential Fitness function instead of a linear Fitness function can be something that's quite useful which you could add to this as well um look for the next video kind of how I do that um so those are a bunch of ideas of how you could make this system a bit better and in fact one thing that I will do is I'm going to revisit this example in a future video looking at how a neural network or other types of machine learning algorithms might also be used to train uh agents to move around the screen with a certain path so uh I hope you enjoyed this rather I think insanely long and Scattered um scattered uh a coding challenge the code itself will be available on both GitHub as well as a link to this uh pen this code pen that I created here so you can actually just go straight to that link and play around with the code there as well okay I hope you enjoyed it and I'll see you in a future genetic algorithms video um okay so um that is that I so this this was like mildly successful yeah um uh nextor Kate makes a really great suggestion in the chat and writes can you run it 10,000 times without the graphics and then run it normally yes so something really interesting to build into a system like this would be to uh just have the algorithm itself run the simulation without the animation Loop without drawing it you know JavaScript at the browser perhaps isn't the best um kind of language and environment to do that in but we could certainly number crunch it with and then actually just like pass all that DNA off to a set of resulting objects which would then um animate um okay um so I kind of want to add the count thing in just because I'm curious I want to clean up the code but I think I got to put this aside I'm going to save this um boy this kind of how long have I been doing this live stream well that this has I don't one time did I start I I guess I've been on for about two hours now um maybe I can go a little bit longer um um uh think about some other things I can add here cting rainbow um so I I can just close this now yes uh me add just this okay um all right so I think that's pretty good for this example let me go back to my um let me go back to um let me go back to uh my the topics here uh on the M genetic algorithms so I suppose I did now I can check this one off I don't know how long that video is going to be in the end I mean I was doing this for at least an hour but there was so much of like when I kept saying pause it'll probably edit down too yes so one thing I'm planning to do is I'm I'm planning on in the future doing uh I think a flappy birds game would be uh is a really good example of looking how M looking at how a machine learning algorithm with something called reinforcement learning could be trained to play a game like a Flappy Bird's clone um um uh effectively and so that is something uh that I'm hoping to get to this summer I'm trying to get through so actually let me talk about let's talk about my upcoming plans for um more machine learning topics so um I don't know what people are getting excited about in the chat because I'm off sync time wise but um so let's talk about this so I have um I'm GNA give you some so if you go to natureof code.com and click on read now and go to chapter 10 there is a chapter that I wrote for this book about neural networks this chapter was written um probably four or five years ago it is not doesn't go too indepth to things it kind of talks about the general theory behind neural networks it um it looks at this um sort of some scenarios and examples of what neural networks are used for and then I walk through the code for a very simple kind of like the simplest kind of neural network called a perceptron which is a single neuron with just a cou two inputs and one output and then I kind of don't really go much further than that um and I don't necessarily want to go much further than that in terms of writing code for multi things called these multilayered uh perceptrons and yada yada yada um so um but I do want to open up possibilities for further types of applications so the perceptron is interesting the in the theory and it's also interesting in how you would code it but you're not going to find too many scenarios creative scenarios where the perceptron is actually going to help you solve a problem or create some type of strange playful experiment however having a more sophisticated neural network built out of multiple percep trums will allow you to so I'm I'm looking at and so there's there's two things that I've been reading and researching one is a project called wekinator uh wekinator is software for realtime interactive machine learning it's developed by Rebecca febr who she is a professor at goldsmiths in London uh you can find her Caden course uh introduction to machine learning for artists I believe it's called or for sound music musicians artists and musicians um right it's right here actually sign up for a free online class I highly recommend this online class her videos are excellent I've been watching them won nator is awesome it allows you to really just sort of plug Inplay machine learning like it's a it's software that you run so it's got a goey interface you can plug inputs into it you can train it you get outputs out of it but I decided I don't want to use wack and I I might like make some video tutorials with weinor but for the nature of code book and examples I would rather have the code interface with an nural network library directly rather than be rather than work with osc and messaging in a separate piece of software so what I the other day yesterday that is I uh I made an example using something called uh Nur off which I found I made a quick and dirty processing Library which um can use use processing with this kind of neural network and I trained it just to recognize points that are inside a circle or outside a circle and that completely worked so that was promising to me and I so that was something I was looking at using as a framework for having kind of uh an API access to neural network uh library and code but then I started thinking that because of w inator that it and actually Rebecca had this advice for me um she's been giving me some great advice and feedback that I might actually just look at WCA directly so Wan nator is actually built on top of something called WCA which if this um and WCA is like a bird like a I forget it's like maybe a bird in New Zealand I love anything that has to do with birds oh I could get a WCA sound effect perhaps um uh so um so WCA is an open source library for machine learning that's written in Java so I'm thinking actually what I would like to do is use WCA make WCA a processing library that you can access directly that way I can show examples that run both in weinor if you want to use the software interface or that you could write the code directly for in processing that's kind of my plan now um and so the the other the other question that that brings up is well then how do I then translate these uh examples that I'm going to make in processing into JavaScript so one possibility would be fine sort of of to just make a JavaScript library to Port some of the WCA stuff to JavaScript I'm not so sure about that yet so if anybody has ideas or suggestions or wants to help contribute to developing an opensource neural network library that could work both with processing and p5js um I'm kind of open and game for that um please let me know now another resource that I just uh started reading which is excellent I'm about halfway through it or a quarter of maybe a quarter or a third of the way through it is called machine learning for designers um this is a free ebook from O'Reilly by Patrick Hebron uh Patrick has also been emailing me and giving me some great advice about a new chapter on machine learning for the nature of codebook uh this is free you can get a Kindle PDF Etc this is not going to give you uh practical code examples but it's going to talk you through the current state of the art of machine learning uh what are sort of like the range of libraries and possibilities and applications and what are the different algorithms people are using how does this apply to design and thinking about user interface Design This is a great uh text to sort of kind of give you a background and scope so I'm reading that as well so you know machine learning and neural networks as much as I've done some of these basic examples is is a new topic and a new field for me so I'm kind of in the research and development phase and once I get a little further I'm going to and I'm hoping to do this before September because when September hits I'm going to be busy with other stuff um try to get some video tutorials done and more examples in this direction uh okay so so that is uh that I'm also thinking about some numbers so uh let's see it is uh 1 o'clock uh I I plan to come back tomorrow so um uh so I think I might sort of I think I might need to wrap up for today uh I only really did one I did one one coding Challenge and one video which is rather long and kind of crazy and I used code pen which I uh I really like but I think that I I think code pen will work better in the future for smaller shorter code quick and dirty sketching and algorithms for larger projects I might want to use processing or like the Adam editor um anybody have any other questions or things they would like me to address in this particular session today otherwise I think I'm going to kind of wrap up for today um let's look at um let's look at uh what other interesting topics there are kind of coming in the future perhaps there's a new topic uh that somebody posted just eight minutes ago uh I like to sort these by the thumbs up so machine learning uh so compu the computer vision tutorials I started I definitely have more more on that list I'll get to those at some point I hope machine learning I haven't by Machine learning I really mean neural networks in this case I haven't really gotten to this would be a great topic genetic algorithms that's what I'm working on right now Chrome extensions will come in September um uh fast forward Labs check Mario those are great uh arguments in J oh oh let's do this let's do arguments injs I want to do one little more thing uh uh processing and Android development let's do this um yeah okay so I want to go by 130 um I have somewhere to be at 3 I need to eat something well that should give me enough time so let's let's stick around a little longer I got I'm getting a second wind and let me I feel like I could actually do this one in codepen because it's kind of a a smaller idea let's try codepen again so I'm G to make a new save I'm GNA make a how do I make a new new pen okay I don't want a I don't minimize minimize I want to um add there's got to be a way that I can have uh I can um where's the CDN I know my camera's just shut off uh Chris Chris really doesn't want me to continue using Code Ben but now I feel like I'm going to be fine with it after all that this is a simple small idea today's the code pen day right this one's going to be no problem there's so little code involved in this one I'm just creating a little code in advance uh oh right uh so I got to change this to Professor no stay save and this is uh arguments um oh yeah actually do this uh uh okay um oh yeah the one issue though which is I do see uh I do see sort of an issue with this but which is sort of the console problem but let's see here uh thank you Oliver uh let me just run a little test here oh thank you um great so this is going to work okay okay so this is going to be ah but now my head is in front of the code really you have to give me this whole crazy uh hold on oh I'm not in Professor mode that's why sorry it doesn't won't work yet till I do this okay now it should work um oops is there a way to clear the console without refreshing the page well I don't know I don't know all right let's give it a try uh okay oh how can I I can clear it that that way okay uh yeah that's what I'm going to look at Akash Constructor overloads the argument fun arguments array that sort of thing um okay I just don't love my setup here yeah all right fine I'm I this is so there's so little code here I'm going to skip the code pen thing for this one this will this is Bon I'm this is a bonus anyway uh so hold on uh just give me a second here uh oh ah I closed that smart Rockets thing that I had been running for so long uh that's too bad uh close all this stuff um okay hold on hold on everybody uh okay uh okay this uh as always I always forget the this do this this this I'm do okay bonus round slot machine sound effect uh okay where am I cting rainbow uh smart Rockets did I change the name of it where where is that ah there it is okay uh overloading do I'm going to do the this this dot do do this Dot Song never forget to this dot okay ah there my happy place Adam editor and overloading and here and I really don't need need a canvas but we'll do it anyway okay oh okay okay and now Gooding power I don't know what I'm pressing power Gooding power so this is random this is noise pearing noise that is in the core okay um this do tshirts please I know right oh I forgot about the tshirts I mention the tshirts okay so here we go this is the last thing I'm going to do today I'm going to do now a video tutorial about Constructor overloading and the arguments um the arguments uh the arguments array okay and I'm going to reset these cameras and here we are back okay I'm ready yeah okay uh here we go I'm like my nose is like itching me maybe if I blow my nose it will I will stop neurotically touching it okay hello and welcome to another p5js JavaScript video tutorial thingy maab thing that I'm making this tutorial I'm going to cover something called the arguments array which exists mysteriously in JavaScript perhaps without you even knowing that it's there what you can use it for and this idea of overloading a function or overloading a Constructor and how do you have optional arguments to a function all this stuff okay what am I talking about first of all so let's just say today is a nice sunny warm beautiful day it rained last night a rainbow came out and you just sat at your computer and decided I want to program my own function called sum and what sum is going to do is it's going to take uh two arguments A and B and it's going to say return a plus b so it's just going to make a sum of whatever things I pass to it so I could then say here in setup I could say VAR uh C equals or you know c equal or whatever value equals the sum of 5 and 15 and if I say console.log Val we should see then if I go here I should see 20 and I can say something like sum 2 comma 7 and I'm going to get 9 or Su 3 comma 7 and I'm going to get four so this function works but what if I were to say this sum four not a number well let's say I wanted to be able to actually have it return just the number four how could I have it do that it's getting not a number because what is the value of B in this case if I were to say console.log B and run this again you're going to see the value of B is undefined another Val another way that I can consider undefined undefined if I were to ask is undefined true or false undefined is actually false so something that I could do for example is just say something like if B return a plus b otherwise return a so in this case I now have a function that can perform differently based on the number of arguments it gets right as long as it gets a second argument return two of those two numbers together if it doesn't get the second argument right if the B is false simply return a so in this case now if I go back to the brow and I say sum 4A 5 I should get n but if I say sum four I'll just get four so we've now written a function that can optionally have a second argument very very basic idea here now let's take this a few steps further what if I just said sum with no arguments now I've got undefined again so in this case I could actually say if a a uh if a and b else if uh then the wait I was going to say if B that means there has to be an a right return a plus b uh else if a return a else return zero oh I made this sort of like messy and awkward and weird but you can start to sort of see what the possibilities are so now I'm kind of checking if I give two arguments return the sum of both of those if I have uh if I have one argument return just that one argument if I have no arguments return the value zero let's at least make sure that works right so I can say sum of four and five I get nine sum of four I get four sum with nothing I get zero so great so this is working but what if I now want to say Sum 4 6 8 I still only get 10 right eight isn't involved well guess what anytime you call a function in JavaScript the arguments to that function 4 comma 6 comma 8 those things get placed into what an array an array called arguments you could just say the word arguments and suddenly you have everything in an array let me show you what I mean by that if I go back to the code and I just say here I say console.log arguments and I say sum whoops ah sum 468 you can see what is the value of arguments it's an array 4 comma 6 comma 8 so you know what I could actually do in the case of this function I can write a function called sum I don't even have to name any of the arguments here I can say there is a value at zero I can then go through the length of the array I starts at zero I goes all the way up through are the all the arguments Val plus equals arguments index I and the return Val this is now a function that can take any amount of things you any number of arguments zero arguments five arguments 10 arguments 20 arguments and it can Loop through and add them all together so now here I could say things like sum five and I have oh whoops sorry uh I think I didn't reload it sum five I have the number five sum 5 comma 6 I have the number 11 sum 5A 3 comma 2 comma 5 comma 1 comma 10 comma 11 comma 5 comma 3 comma 3 33 68 somebody confirmed for me that that number is correct it's going to take any number of arguments and loop through all of them so you can think of all sorts of interesting possibilities that this might open up for you in how you write a function I could also name those arguments too as well so like for example I don't know why I want to do this but I could name the first argument and I could also say V return Val plus a so in this case this is a little bit weird but if I say sum one comma two it's going to add one and two and then add one to it again so I would get the number four little bit silly but you can see that you can both use that arguments array and you could also name optionally name those arguments coming in so there's a lot of possibilities of things you can do here now let me make this even just to make this even more a little bit stranger what if I want my function let's say I were to create an array so I have an array that has the values 5 comma 3 comma 6 in it so I know I could say 5 comma 3 comma 6 with some and I'm going to get 19 did I take did I did I leave that weird extra plus a thing in there I want to take that out um run this again I'm going to make that array I'm going to do this for right so what what if I what if I also wanted to be able to say some array in this case look what it did something crazy happened because it actually tried to add zero with the array but then it tried to make the array a string and it concatenated together JavaScript just tried to figure something out but this isn't what I want I want that if you pass this function an array as its argument that you're going to add the elements of that array so how would I do that well what I want to do is I want to check I could put this back in a I could say if a is an instance of array and I think Capital like this so this is a kind of keyword in JavaScript instance of that can determine what kind of argument you passed in so you could say like oh well if the function receives a string as its argument it should act this way but if it receives a number as its argument it should act this way so if a is an instance of array and I'm actually going to call this a RR then what I want to do is do exactly this algorithm but instead of using the arguments array I just want to use that actual array so now I'm going to say uh array. length and add all that up right so if you get an array Loop through that array and return the sum of everything in that array if you don't get an array then Loop through the because it's there's just a sequence of numbers then use the arguments array so now I have like all sorts of possibilities here for how this function could perform so now I can say let me have sum it still works if I give it five three and six now if I make an array 5 3 and six and I say sum of that array I should also get that same number and if I were to say array do uh 4 equals 1 and look at that array whoops I have an undefined array index 3 equals 2 uh and look at that array again and let me clear that clear it look at that look at the array and now if I say sum array I should still get I should get 15 which is right 14 plus 2 is 16 minus 1 is 15 so now I have this function which can both receive an array now unfortunately I can't do this right I would have to write as an exercise for your if you want a tricky exercise how could you now write this function so that it can have mixed arrays and regular numbers and still add all those things together um okay uh yes so in the chat some people are saying I could use the apply function and other types of things to like put the array into the arguments array and that's a great suggestion maybe I'll cover that in a separate video but right now I just want to look at different ways that you can have flexible Arguments for a function and this often comes up in the case of making objects like a particle object so let's take this a little bit further and let's just say that this is going to be a program and I'm just going to take this and comment it out for right now um and I'm going to say let's say I have a I'm I'm writing a program with some sort of particle object and the whole point of this particle object is that it has a position which is a vector and I'm going to make that Vector with divided by two height divided two and then I'm going to have a function called show which what does that function do it draws a circle on the screen at that vectors X and Y and maybe phil. 255 and I'm going to say here I'm going to say uh VAR p p is a new particle and then P doow now you can see I run this program and I get that Circle appearing in the center of the window now let's think about all the possible ways might want to make a particle for example I might want to make and let's do it let's do this differently now let's let's say there's an array called particles and and what I'm going to do is I'm going to say particles index zero is a new particle and then I'm going to Loop through and I'm just going to call show on all the particles in that array so this is essentially the same program but the reason why I want to show this to you right is that I want to be able say things like this well particles index one what if I could make a particle this way what if I could say this and what if I could say particles index 2 equals uh a new particle with that particular Vector what if I were to say this particles index 3 equals equals a new particle uh whoops uh let's make this 150 comma 100 100 comma 150 now I'm not so sure I really want all of these but you could imagine an object you might be able to in your code you might want to make particles and sometimes you make a particle with no object no arguments and it always puts it in a default location or you could specify the location as two values an X and a y or you could just pass in a vector and it would put the particle at that vector or maybe for some reason you were getting uh data from a text file and you're reading in strings and what if you give it two numbers separated by a comma How would you deal with it then so this is this is what um this is what you can use how you read uh um how you how you can read the arguments into um sorry pause I lost my train of thought and this is what happens when you're doing live streaming in the heat for like hours in a row this is the kind of scenario that can come up in many things that you might want to program so let's see if we can get all these particles to appear on the screen so one thing that I might do here first of all is give it some let's give it two arguments an X and A y so one thing we can do is say this and actually I'm going to um I'm going to change it from having a position Vector just to giving it just right now I'm going to change it to just having an X and A Y so one thing I could actually do that you'll see is I'm going to say this.x equals X or 100 this.y equals y or 100 this would cover me for these first two cases right I'm basically saying I want to take the value that comes in or some default value if it's false and in this case it would be false because it would be undefined no value would come in so let's um let's actually say I want to make the particle at 150 comma 50 and we could see um we should be able we should see two particles now right so this is um and let me give all the okay it doesn't really matter the point is you can see now when the particle gets two arguments coming in it it uses those two arguments like 150 comma 50 when it doesn't get those coming in it uses 100 comma 100 so this is 100 comma 100 and this is uh 50 comma 150 that's that second particle okay so those two cases are covered now what about this third case what if I'm passing in a vector so one thing I can do is I can say okay well actually right here I can say if this dox is an instance of a P5 Vector object then this.x equals x.x and this. yal x.y now this is a little bit weird because I'm sort of stuck in this place of I named that first argument X so now X is kind of this Vector I still have to call it X so I might actually want to just use more generic names like a and b um in this case so I can say if and I'm not saying if this do X I'm saying if a is an instance of P5 Vector do this otherwise go back to this other idea so now I'm checking I've got two three possibilities one is I've gotten a vector or another possibility is I got nothing or I got two separate values and we can run this again you can see now I have three of them all three of those worked and I have one last possibility which is this string so I can also say else if a is an instance of string I guess is that right somebody tell me in the chat uh um and then I'm going to put I need to do something here whoops oh I'm missing a bracket ah right so I need to deal with this somehow so let's just at least run this and see uh let's see did I get let me see if this actually works no so uh what do I don't want to say string text no uh pause uh yeah false H wow how come I don't know this uh JavaScript instance of string oh it's probably lowercase string maybe uh ah look at that oh because it's not a string object I remember this now it's not a string object how do I get around this how silly type of yeah let's Okay so that's fine I should be able to use use uh s in type of no type of is not a thing uh is that a function ah type of equals type of s okay okay uh oh undefined if type of a no oh type of s string I see or type type of s okay okay okay okay okay well I got a little off track here but okay okay I'm back I forgot that there's a there's a Kind of a Funny um oops hold on let me let me do this again oops let me get rid of this console log I forgot and there's a sort of funny thing with strings that um I forgot about because this if a is an instance of string is not actually checking if a is just text but if it's an actual like fully formed string object in JavaScript and let me just show you this is a little bit of an aside but it's kind of worth it since it might come up um let's say I create a VAR s equals uh test now if I say s instance of string you're going to actually see that that gives me false but if I were to say s is a new string with the text test in it right it's actually like a whole string object now and this will actually return true but in most cases I'm just going to be in the land of saying s equals test whoops something like this so another function that I can use in JavaScript is type of and I can say type of s and I'll actually get the word string back and so I think in this case I could say else if type of a equals string oops then now let's see if that works I'm going to run this and you can see that came through so since that came through what I need to do now is say um uh I can use like uh a.split by a comma uh and then I can say uh this.x equals number nums index zero and this do y equals number nums index one so split takes something um takes the string so let's let's let me do this actually so uh so uh s equals 100 comma 150 if I say s. split by a comma I'm going to get now an array with two strings in it so if I say x index zero no no no sorry I'm G to say VAR nums equals s do split with the comma so nums pause whatever let me just come back to here there's some point where I switched back to here so let's say s is 100 the numbers in a string 100 comma 150 and what I want to do is I want to say nums equals s do split by a comma ah s. split by a comma so now nums is just an array with two strings in it and so I could say nums index zero but that's actually not the number 100 it's the string 100 but and there's lots of ways I could probably convert it but one way is I could just do this convert it to a number num whoops not numbers number and you can see now I have the value 100 so I'm just doing that in the code here I'm saying ah if I happen to get a string split it up by the comma then convert those two numbers and we should see then another particle at uh 100 comma 150 so if I now run this again we can see now I have four particles so we've now written a Constructor function that optional that takes two arguments you could give it no arguments uh you could give it two numbers you could give it a vector you could give it a string and it's going to figure out how to fill in the X and Y based on what it gets so this is one just kind of small instance of that but there's lots of other scenarios where this could come up where you want to write a function to arbitrarily handle a certain number of arguments of different types um in incidentally if you were doing this in processing or in Java you would just write multiple copies of the function each with different arguments and then handle the those arguments in that but in JavaScript since the arguments don't have a type A type is not part of the signature of that function of that method you have to handle them with an if statement by having sort of optional flexible arguments okay hopefully you found this helpful and you learned something about what the arguments array in JavaScript does and how to write a function or a Constructor function that has flexible different kinds of arguments and different numbers of arguments thanks for watching goodbye okay um oh yeah that's a good uh Muhammad offers a great suggestion too about how about if variable a is an instance of a particle object so it clones what um Daniel in the chat says multiple dispatch what's multiple dispatch mean so I think I'm I'm definitely finished for today I don't know I I wake up in the morning and I have this like thought like it's going to be good I'm going to do a coding challenge of smart Rockets I know how that stuff works I'll be able to whip that up and it'll be clear and make sense and I won't get lost and then it's hot and then I get confused and then I don't know so hopefully this was okay today I need I need I need some confirmation reinforcement learning I need I think the codepen thing was kind of an interesting experiment but it made it a little bit difficult for me um before I go I will remind you of some things uh coding rainbow.com is the website uh subscribe on YouTube I I like to have more subscribers I think for whatever reason uh you can also support my channel becoming a patron I'm trying to think about more goals and things to use if I can start crowdfund patreon as a crowdfunding website ways that I can provide more Rewards or different things right now there just a private slack channel that you get a invitation to where you can ask questions or discuss various topics um uh you can also uh sign up here at the bottom put your email address in and I'll send emails out for live streams I'm hoping to do one more live stream uh tomorrow this is why I have only after this week I only have two more weeks uh this summer until I go away I'm going to be away traveling for the last two weeks of August so I will be on Hiatus then uh I am uh possibly having I have some plans for some things I might be able to do a release while I'm on Hiatus but mostly I'm just trying to ramp up and make a lot of content now so I can kind of release it over time also in August while way so there's still some new stuff um there are only uh two days or three days left if you're interested in getting one of these uh coating rainbow tshirts there are kid sizes available um this is the URL um unfortunately shipping outside of the US is particularly expensive through this website so at some point we'll try to look into uh uh companies that make uh tshirts and various things that can uh ship outside of the US with a little less uh expense involved um and I think that's it so subscribe like follow me on Twitter ask questions on Twitter if you want shiffman um thanks for watching I'm I'm looking in the chat to see if anybody has any um oh Julia and Java have multiple disc patch where two or more functions methods can be defined with different types of arguments yes that is the case javascript's a little bit is yeah JavaScript could be awkward about these things for sure uh so I think I'm trying to think if I've got anything yes only intro you did miss it all I'm at the end now it's 140 this is all I must be getting close to three hours uh because I think I started around 1040 or 1045 um and that's about it so thank you all for watching uh and to play my song My Goodbye music uh usually actually I forgot to play that underneath uh uh the URLs that I was going to show uh boy I my brain has melted um if you have any more questions you have two minutes to ask them in the chat except for the fact that you're about 15 or 20 seconds behind so by the time I say this you'll only have a minute and a half or so uh oh I I'm planning to be back tomorrow morning around 1030 probably the same time that'll be the last live stream of this week uh Thursday Friday I have some other things on the docket I'm going be working on the nature of code book trying to get that machine learning chapter Rewritten trying to make this machine learning library for processing in P5 that maybe wraps WCA or some other tools make some W nator examples that stuff I'll be working on this week um I need to clean my apartment I really need to do that so many toys and things everywhere big problem will I be on the code newbie podcast uh I H I was on the code newbie podcast I can't remember the episode number but it was uh sometime last year I love the code Newby podcast you should all definitely subscribe I also recommend the creative coding podcast with s Ian uh Saron is uh amazing who runs code newbie she's giv me lots of great advice and uh we have some plans maybe to do hopefully some collaboration maybe I can get her in here doing a video at some point too so we'll see about that um but the work that she's doing Cod newbies is really fantastic they have a great slack too you can join you cannot write multiple functions with the same name in JavaScript that is correct uh yeah overloading you have to do it within the code of the function itself uh some people have said they want to make a community project I think that's a thrilling and wonderful idea there is a GitHub issue Thread about that I would encourage you to go and participate there I don't I don't have any brilliant ideas in my head about that um but but I encourage you guys to kind of whip that up and stay in touch with me to figure out a way to do that ah the camera went off there's about 20 seconds left power you have cing power coding rainbows oh that's don't ever forget that this dot uh okay see you guys thanks for watching and I'll be back back tomorrow morning uh this will be an archive on YouTube at some point and all that stuff okay goodbye
