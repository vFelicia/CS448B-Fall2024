With timestamps:

00:00 - [Music]
00:07 - [Music]
00:14 - [Music]
00:28 - stick
00:33 - [Music]
00:46 - [Music]
00:55 - [Music]
01:02 - [Music]
01:10 - [Music]
01:29 - [Music]
01:40 - [Music]
01:51 - [Music]
01:57 - [Music]
02:06 - do
02:11 - [Music]
02:20 - [Music]
02:26 - [Music]
02:34 - do
02:39 - [Music]
02:47 - [Music]
02:56 - good morning uh test one two
02:59 - uh testing my audio how does this
03:02 - sound lovely to see all of you in the
03:06 - chat from
03:07 - all over the world montreal albania
03:11 - texas waking up early in texas
03:14 - london korea vietnam
03:18 - wow let me know how my audio is and i
03:20 - will be starting up in just a minute or
03:25 - [Music]
03:30 - two
03:32 - [Music]
03:48 - [Music]
03:58 - [Music]
04:10 - [Music]
04:12 - do
04:14 - [Music]
04:32 - [Music]
05:15 - [Music]
05:36 - do
05:48 - [Music]
06:05 - good morning coming to you live from an
06:07 - attic
06:08 - in brooklyn new york it's me dan
06:11 - happy 2021 welcome to the first
06:15 - live stream of the coding train in 2021
06:20 - all right ah okay i'm thrilled to see
06:22 - over here in my monitor that i
06:23 - look like a normal person well i don't
06:26 - know i don't look like a normal person
06:27 - but i look like a human being
06:29 - and the keying is working because as of
06:31 - about five minutes ago
06:32 - the sun was shining incredibly brightly
06:35 - through a window right over there
06:36 - and washing out everything but a cloud
06:38 - has passed which
06:39 - normally i don't think of as a good
06:41 - thing but uh looks like everything is
06:44 - looking good this morning
06:45 - hopefully you can all hear me and see me
06:47 - okay
06:48 - it is lovely to see so many people from
06:50 - all around the world in the chat
06:52 - and i'm just thrilled to be here on uh
06:54 - what is now uh january 8th
06:57 - 2021 at about 9 35 a.m eastern time
07:03 - now i um this has been a week uh i
07:06 - thought maybe we had put 2020 behind us
07:08 - but um
07:09 - it appears that 2020 the vibe of 2020 is
07:12 - carrying into 2021 quite a bit
07:15 - um i hope that everyone is doing okay
07:18 - that you're
07:18 - safe and healthy and warm and
07:21 - comfortable
07:22 - i know that people are facing so many
07:24 - different kinds of challenges
07:26 - all over the world in so many different
07:28 - ways and i hope that the coding train
07:31 - can bring something to you
07:32 - to at least lighten your day a little
07:34 - bit and that's what
07:36 - i'm here to do today so first what my
07:39 - goal for today
07:40 - as in this first live stream of the year
07:42 - is not to accomplish very much
07:44 - it's really to just set the table set
07:47 - the stage
07:48 - if you will for what i hope to
07:50 - accomplish i'm not a big fan of new
07:52 - year's resolutions and this is not
07:54 - a live stream of resolutions but it is
07:56 - will be
07:57 - this will be a live stream of planning i
08:00 - think it will get me
08:01 - it'll take a little bit of time uh for
08:03 - me to get
08:04 - really going in 2021 the first couple
08:07 - weeks of january a little tricky for my
08:09 - schedule
08:09 - kids are doing remote school at home
08:11 - just one floor down i'm hiding up in the
08:13 - attic they have nice
08:14 - desks downstairs uh in class we'll see
08:17 - if hopefully nothing will go awry
08:19 - uh while i'm up here live streaming um
08:22 - but
08:22 - um i i once i get kind of ramped up i
08:26 - hope to be producing a lot of content
08:29 - over the next few months and i'm going
08:30 - to talk about what that content will be
08:33 - today as well as do a little bit of
08:35 - clean up on a couple little
08:36 - remaining projects left over from 2020.
08:39 - i'm gonna take a peek over into the chat
08:42 - uh crings is making i saw this
08:44 - suggestion go by like four or five times
08:46 - and i really quite like it
08:48 - make connect four sounds like something
08:51 - in my wheelhouse i like to make simple
08:53 - games
08:54 - uh with simple visuals i like anything
08:56 - that's on a grid
08:57 - that's good um and
09:00 - uh two players um over
09:04 - uh over the network with sockets so
09:06 - there's a lot of um
09:07 - you know unfortunately there's a lot of
09:08 - great stuff and i love this idea so
09:10 - maybe i can add that to my list somehow
09:12 - um bavia is asking for me to please say
09:17 - their name which i just did
09:19 - while i'm also saying please don't ask
09:20 - me to say your name it's a little bit
09:23 - i always feel guilty that i can't do it
09:24 - and there's too many people asking so
09:26 - you know i prefer
09:27 - uh i will say people's names here and
09:29 - there i i hope that brings a little
09:31 - brightness to your day though
09:32 - um do a neural network marcus says with
09:36 - audio
09:37 - as a cnn please so one thing that i
09:39 - should say just
09:40 - generally speaking um yeah and this is a
09:43 - great i'm going to pull up this comment
09:45 - from
09:45 - uh christian vickmann
09:49 - one of my new year's resolutions is to
09:51 - is to really get the name pronunciation
09:52 - correct uh i'll come back to that in a
09:54 - second what was i saying
09:56 - uh ah yes so i'm not putting machine
09:58 - learning and ai behind me in the sense
10:00 - that it won't be part of my work or
10:02 - or videos or content that i'm exploring
10:04 - but
10:05 - i do want to table that for a little bit
10:07 - it was a major focus of the fall
10:09 - and i have other things that i want to
10:11 - focus on this spring which i will which
10:12 - i'm about to get to
10:13 - but um this is a you know i don't know
10:15 - if i want to just ride the popularity
10:18 - of whatever the whatever's the current
10:20 - hype train
10:21 - so to speak i think whenever i say train
10:23 - i just have to blow the train whistle
10:24 - right
10:26 - but making a coding train werewolf mafia
10:29 - among us game would be fun
10:31 - agreed agreed very much
10:36 - um i think that could be a great thing
10:38 - to do i would like to get back to the
10:40 - sort of
10:41 - coding challenges um simon i don't know
10:44 - if what you
10:44 - are showing me is your random number
10:46 - generator thing but if that's what it is
10:48 - i
10:48 - i will be showing that in just shortly
10:50 - uh simon
10:52 - uh is asking me to show a particular web
10:55 - editor sketch which i will bring up all
10:56 - right like thank you
10:57 - uh okay weekbond for that and
11:04 - now everybody's saying say my name in
11:07 - the chat
11:08 - okay what have i got in store let's move
11:11 - over to my laptop here
11:15 - um and let's just get started so first
11:18 - of all i don't know if you noticed
11:21 - new live stream thumbnail design so i
11:24 - don't know if you can see it anymore
11:25 - because i am live streaming but if you
11:26 - ever come to one of my scheduled live
11:28 - streams in advance
11:29 - you will see in the thumbnail a short
11:31 - list of possible topics
11:33 - so that's something you can look forward
11:35 - to for me helping sort of get organized
11:37 - with
11:37 - letting people know what's on the docket
11:39 - i also have put in the
11:40 - video description what i'm thinking of
11:42 - doing today so
11:44 - if only i had access to that then i
11:46 - would know what i was doing maybe
11:47 - somebody who's in the member
11:49 - discord could paste my list from the
11:52 - description into a chat message
11:53 - and then i could put it up on the screen
11:55 - because i don't know how else i would
11:56 - possibly get something that's on the
11:58 - internet up on my
11:59 - screen um but what i wanted to begin
12:03 - with
12:04 - today and um is
12:09 - nice audio noise reduction huh i haven't
12:12 - done
12:12 - anything different so solar liner says
12:16 - nice audio noise reduction i do have a
12:19 - new microphone which is this
12:20 - elgato wave product you know every once
12:23 - in a while i have sponsors here on the
12:24 - coding train i'm looking at you elgato
12:26 - got some key lights
12:27 - got a nice microphone love this stuff
12:29 - love stuff it's great and kobe has come
12:31 - through for me
12:33 - so let's bring that up here so let
12:36 - us let me first begin with this list uh
12:39 - which i am now i guess i could order it
12:41 - differently hold on let me move
12:44 - the disk stream chat down in my layers
12:47 - here
12:48 - boom there we go so now my head will go
12:51 - over it if necessary so
12:53 - topics for today so i want to talk oh i
12:56 - don't know where the sample i have a
12:57 - sample train whistle to show you i have
12:58 - a video that i'll show you
12:59 - so uh i want to talk about my obsession
13:02 - with random number
13:03 - generators and look at how i'm planning
13:06 - to create a custom
13:08 - unique random number generated piece of
13:11 - art
13:12 - for every member of the coding train and
13:14 - maybe eventually
13:15 - for anyone who wants to buy one or
13:17 - anyone anywhere in the world that could
13:19 - if i could gift one to everyone in the
13:20 - world i would sorry
13:21 - i gotta start you know it's kind of like
13:24 - a vaccine roll out i gotta prioritize
13:26 - i suppose um uh
13:29 - that's that's really not an apt um
13:32 - analogy here at all
13:34 - um but so i wanna i wanna look at that
13:36 - um i am
13:37 - i'm i love running and jogging it's a
13:40 - big part of my life it's one of the
13:42 - one of the few things uh um there are
13:44 - other things too that
13:45 - helps sort of helps with my mental
13:47 - health honestly if i um
13:49 - that's it's uh exercising and jogging in
13:51 - particular outdoors
13:53 - um and uh uh smarter every day um
13:57 - is starting an initiative oh my goodness
14:00 - we have our first
14:03 - member welcome to passengers brian
14:07 - gallaher
14:09 - first member of the new year you have
14:11 - won
14:12 - the opportunity for me to get out my
14:16 - random number book and to find within
14:19 - this random number book
14:20 - a very special beautiful singular
14:23 - unique random number just for you brian
14:26 - and it will be
14:36 - thirty thousand and twenty eight now we
14:38 - need i need a system this is the first
14:40 - experiment i need a system to keep track
14:42 - of that
14:42 - it's brian gallaher 30 0028
14:46 - um let's see if somebody could put that
14:48 - as a message into the chat i'll bring
14:50 - that up on the screen as well because it
14:51 - will be
14:52 - highly relevant for just my first topic
14:55 - so um but back to what i was talking
14:58 - about i want to look at this initiative
15:00 - that smart
15:00 - every day is uh started called forrest
15:02 - gump 500 to run 500 miles
15:04 - in 2021 i can tell you right now uh
15:08 - drum roll uh please
15:12 - how many uh miles have i run place your
15:15 - bets place your bets
15:16 - everybody get your bets in place y'all
15:18 - bets
15:20 - i have to find my uh run keeper app
15:24 - i'm going to look at uh my stats
15:28 - and i have so far completed um in 2021
15:32 - in my goal
15:34 - uh 3.2 percent 16 miles out of 500 miles
15:38 - so
15:38 - um i wanted to build something that
15:41 - could help aggregate people
15:42 - participating in this up
15:44 - um uh initiative to run 500 miles um and
15:47 - i think i could do it through twitter
15:49 - and and revisit my uh twitter uh library
15:52 - so when i get to that maybe people want
15:53 - to tweet at destin
15:55 - um if he wants to join um and sort of
15:58 - check that out and provide any feedback
15:59 - but i'm not getting there yet who knows
16:00 - if i will get to it because i'm very
16:02 - fame
16:02 - famously on the coding train i make a
16:04 - list of things to do
16:05 - and i pretty much get through the first
16:08 - one and i usually don't even uh
16:10 - finish it okay thank you we've got brian
16:13 - gallaher
16:14 - 30 028.
16:17 - so um bringing that up on the screen
16:21 - um and it says brain which i think is a
16:24 - typo but i kind of love it
16:26 - um i think um simone uh yertz
16:29 - uh famously named her brain or her brain
16:32 - tumor uh that that she uh went through
16:35 - uh an ordeal with um having surgery um
16:38 - brian now brian is being renamed to
16:41 - brain okay
16:44 - yes and prati and prati and simon have
16:47 - both created something for the random
16:49 - numbers that i will take a look at
16:51 - and i think those are great wonderful
16:52 - initiatives i might just for the way
16:54 - that i work need to sort of like start
16:56 - from a blank slate a little bit
16:58 - but maybe we can integrate those or
16:59 - combine them or have multiple
17:01 - uh multiple front ends to the same
17:03 - database of random numbers
17:05 - okay live poll check-in if i can get to
17:07 - that we'll see where that project is at
17:09 - and then really planning 2021 is
17:11 - probably the most important
17:13 - uh piece of today i will say just right
17:16 - now for those of you who are wondering
17:18 - about schedule
17:19 - is that i like that stig by the way
17:24 - suggested i can't unfortunately i can't
17:26 - um highlight youtube chat messages on my
17:28 - screen here only
17:29 - the member discord ones but um stig
17:32 - writes a member perk
17:33 - for personal md5 hash
17:37 - uh read out by dan i do like that idea
17:40 - uh wonderful suggestion for 2021
17:44 - appreciate it okay um let's see where
17:47 - are we i'm going through my list
17:49 - uh and then uh my one of my new year's
17:51 - re again i'm not
17:52 - um not making new year's resolutions uh
17:57 - because the news resolutions are only
17:59 - but uh if i were to make a new year's
18:00 - resolution
18:01 - revisiting the fractal flame algorithm
18:02 - making a like probably a coating in the
18:04 - cabana video with the fractal flame
18:06 - um is something i would love very much
18:09 - like to do
18:10 - all right let's um
18:14 - let's start off with the planning aspect
18:17 - i feel like this is going to help me
18:19 - get going i think i don't know i don't
18:21 - know what i should do
18:22 - uh maybe i need to live poll which i
18:24 - should start with
18:27 - and like put on music
18:31 - [Music]
18:40 - um
18:42 - month on is saying you rocked in that
18:44 - collab music video with flammable man
18:46 - thank you i worked very hard on my
18:48 - little portion of that all right let's
18:49 - let me go straight into the um
18:53 - random number train whistle
18:57 - thing so give me a second here that's
18:59 - why i was putting this music on pull
19:08 - something
19:10 - okay
19:11 - [Music]
19:20 - okay um i think i can
19:24 - hide this for right now
19:28 - and come back to it okay so um what i'm
19:31 - showing you here on screen
19:34 - is a video that jason heglund sent to me
19:36 - jason heglund is the illustrator and
19:38 - designer for all of the
19:40 - all the coding trained characters um we
19:43 - have been working
19:44 - you know originally it was my intention
19:45 - using the laser
19:48 - laser cutters is that what they're
19:50 - called i don't
19:52 - even remember the laser cutters that i
19:55 - have access to at nyu
19:57 - to a laser etch these wooden train
20:00 - whistles and i had actually ordered i
20:02 - have a huge box of them that
20:03 - turned out to be pretty poor quality i
20:05 - uh they may um
20:07 - they're fine they're nice and hopefully
20:08 - i'll do something with them but i found
20:10 - a company in vermont that sort of hand
20:12 - makes
20:13 - um artisanal trade whistles if you will
20:15 - they're much nicer quality they make a
20:17 - beautiful sound i have one in this house
20:19 - where i live
20:20 - and it's not this one this is just a toy
20:22 - train whistle that i ordered off amazon
20:25 - um but i don't know where
20:28 - i put it um hey downstairs if anyone
20:31 - finds my crazy train whistle you could
20:33 - bring it up to me
20:35 - but it's not high priority just yup just
20:38 - yelling downstairs
20:40 - um so um so anyway that's what the
20:43 - the train whistle looks like and um you
20:45 - know with the pandemic i sort of haven't
20:47 - been going into nyu i could probably get
20:48 - back into doing this but
20:49 - jason did some experiments out in his
20:51 - shop um
20:53 - out in oregon when he lives and so this
20:55 - is a video
20:56 - that he sent me of the latest so i'll
20:58 - show you first you're seeing what you're
20:59 - seeing
21:00 - is the coding train characters etched
21:02 - onto one side
21:05 - and then uh now this is really what i
21:07 - want to highlight for you
21:09 - this is what is etched on another side
21:12 - so this is the random walk visualization
21:16 - with a little bit of code and
21:19 - if i zoom way in you'll see here if you
21:22 - can see this line of code says random
21:24 - seed and this is just a temporary
21:25 - placeholder one two three four five six
21:27 - so my idea is
21:30 - for um to etch
21:33 - in this little code snippet from a
21:35 - random walk
21:37 - with the uh members a random
21:40 - number right there along with this
21:43 - random walk visualization that was
21:46 - seated that will
21:47 - is a deterministic will always at least
21:49 - with the random number seating that is
21:50 - in processing or p5 or whatever i use
21:52 - always reproduce that exact result so
21:54 - this is currently and i've
21:56 - lost the youtube chat um
22:00 - this is this is what it currently looks
22:01 - like and i'll just show you like some
22:02 - other experiments
22:04 - i'm going to keep playing this video
22:07 - um you can see oh we were also
22:10 - experimenting with um
22:14 - i guess it's going to zoom in on it so
22:15 - let me let it go zoomed in okay so
22:17 - that's the random walk side
22:21 - this is a 10 print the 10 print design
22:25 - and then this is as you see the
22:28 - uh marching squares um
22:32 - design with uh i can't remember whether
22:33 - it's perlin noise or open simplex noise
22:35 - or whatever it is in the background
22:37 - so actually it would be great to use the
22:38 - live poll to have people vote on which
22:41 - side is their favorite
22:42 - i think i want to stick with the random
22:45 - walk visualization it's not the most
22:47 - elegant or beautiful design but it feels
22:50 - conceptually
22:53 - the closest to the sort of core ethos of
22:55 - the coding train
22:57 - and this sort of beauty or art or
23:00 - um visuals through and it doesn't have
23:04 - to be visuals but
23:05 - um this idea of creative expression
23:09 - through computation and starting with
23:11 - that sort of like
23:12 - just the very beginning first step is
23:14 - hey let's make stuff random
23:16 - so um so i don't know what people think
23:20 - about this
23:20 - um you know this has been a really long
23:23 - process i started sort of like working
23:25 - on this idea
23:27 - well over a year ago i think i have to
23:28 - go back look through my emails and
23:29 - messages so people have been
23:31 - very patiently waiting who sort of
23:32 - signed up to receive one of these
23:34 - but you can see that getting closer um
23:36 - so what i wanted to work on today
23:38 - actually
23:38 - is a website that both keeps
23:42 - people's random numbers um yeah and
23:45 - violet uh
23:46 - is noting that that they like the 10
23:48 - print visualization i agree
23:50 - um and and you know
23:54 - well uh remains to be seen what the
23:56 - final design will be
23:58 - but the goal for today is first of all
24:00 - anyone could on this website
24:02 - type in a random number hit print and it
24:05 - would
24:06 - basically maybe get a pdf or an image of
24:08 - this design so you could etch your own
24:10 - train whistle maybe set the dimensions
24:12 - you know so i don't i don't want this to
24:13 - be limited to only people who are able
24:15 - to sort of pay for
24:17 - the membership but i will make the one
24:19 - you know
24:20 - jason and i and anybody else who
24:21 - collaborates will make the um
24:23 - the the custom trade whistle for um for
24:26 - the members so i want to build this
24:27 - website that both is a database
24:29 - of people's random numbers as well as
24:31 - letting anybody put their own random
24:32 - number in and generate their own design
24:34 - okay everybody with me you got it this
24:36 - is what i'm working on today
24:40 - um and then
24:44 - yeah so um so i found the code that i
24:49 - worked on briefly like a while ago when
24:51 - i was very quickly
24:53 - um sending jason samples to work with
24:55 - and i haven't actually looked at it
24:56 - so let me so we can see here i've got a
24:59 - folder here
25:01 - with uh and this must be yeah this is
25:03 - the random walk visualization
25:04 - i assume i think this is exactly what is
25:06 - on that whistle does that look like it
25:08 - matches to you
25:10 - um i tried a version that made a pdf
25:12 - actually oh that's interesting
25:14 - which one did we end up using the pdf or
25:16 - this is the 10 print design
25:19 - and then this is the um
25:23 - this is the marching squares design
25:27 - um so let's let's go with the random
25:30 - walk
25:32 - sort of see now why did i make a pdf
25:38 - now i'm not i'm stuck i'm flummoxed i'm
25:41 - stagnant
25:42 - well we can open them both up and see
25:44 - what the difference is
25:46 - i can't remember ultimately whether the
25:49 - system that jason is using with the
25:50 - particular
25:53 - laser is the etcher is using
25:56 - um a pdf
26:00 - or an image but either way
26:06 - let me let me do the image one because
26:08 - that'll translate better to p5
26:10 - for right now anyway so i'm just going
26:11 - to go with that
26:15 - and um okay
26:18 - so this is no all right so the
26:21 - the aspect ratio for this particular
26:24 - design that fits on the whistle
26:26 - is uh i don't know why i wrote it this
26:29 - way it's kind of nuts
26:30 - 480 divided by two 1500 divided by two
26:34 - i think i was trying to get it to look
26:37 - smaller
26:39 - then i am running through is this one
26:42 - million points
26:43 - one million points oh that makes sense
26:45 - one million random numbers
26:46 - okay that's awesome that's conceptually
26:49 - tied yes it works
26:50 - i'm making a stroke weight of two
26:53 - drawing a point
26:55 - this the dot starts in the center
26:58 - and then um
27:02 - and then picking a random number moving
27:05 - x and y
27:06 - randomly uh
27:09 - drawing the point uh the next point and
27:12 - then
27:12 - saving it as a png and exiting so let's
27:15 - just run this and see what happens
27:19 - and then i'm going to pull up
27:23 - i'm going to pull up um where did we
27:26 - find this oh wait i got to get this here
27:28 - um we have the random number 3028.
27:32 - so let's put that in here thirty
27:35 - thousand and twenty eight
27:38 - um and so we're going to say right here
27:41 - random seed thirty thousand and twenty
27:43 - eight
27:44 - so just to be clear if i take that out
27:48 - every time i run this
27:53 - it's going to be a different pattern
27:56 - because
27:56 - processing is seeding the pseudonumber
27:59 - random generator
28:01 - differently each time randomly so to
28:04 - speak but
28:05 - as soon as i put in random seed and now
28:07 - i remember why i had this divide by
28:09 - because i think if it's like i want to
28:11 - kind of like look at it
28:13 - uh smaller um but generate a higher
28:16 - resolution image
28:18 - so this is the pattern that will come up
28:21 - every single time for this particular
28:25 - random seed if i run it again we see the
28:28 - same pattern again
28:30 - and let's go back to making a larger
28:32 - version of it
28:40 - and there we go so interestingly the
28:42 - size really does
28:44 - oh because i'm keeping it on screen
28:46 - interesting what if i took this
28:48 - constrain out
28:49 - let the random walk leave the the
28:53 - space the drawing space um if it if it
28:56 - will
28:57 - i think i kind of like that as that's
28:59 - better so okay so now what i want to do
29:01 - with this
29:02 - is i actually want to create
29:05 - i'm going to create a p graphics object
29:07 - called canvas
29:09 - and that
29:15 - um that will be the full high resolution
29:19 - uh image that's four 880 by 1500 pixels
29:24 - then the size of the canvas
29:28 - will be that divided by four so i
29:31 - there's something that i can see
29:32 - easily on my screen um the size of the
29:35 - window i should say in processing
29:38 - and then this should everything should
29:40 - now be
29:42 - based on the canvas
29:46 - and i am going to draw everything on the
29:49 - canvas
29:51 - um the numbers can change
29:54 - is irrelevant then canvas.save
29:57 - no loop is fine and then when i'm done
30:01 - i want to draw image
30:04 - canvas so i want to see that canvas but
30:07 - shrink
30:08 - it down so let me just make this with a
30:11 - hundred thousand points
30:13 - just so it runs much faster to make sure
30:15 - it works
30:18 - hmm did i do something wrong
30:22 - here let me run it again null
30:25 - pointer exception
30:29 - why do i have a null pointer exception
30:31 - under create graphics is this maybe
30:33 - something that can't happen in
30:35 - settings
30:41 - ah i need no point exception so
30:45 - uh thank you violet is reminding me
30:48 - um that i need oh and i don't have the
30:50 - stream chat up
30:51 - uh violet is reminding me that um
30:55 - i need begin draw and end draw thank you
30:57 - for that and i guess
30:59 - now so again feedback for this stream
31:01 - chat i need quick access
31:04 - to the pinned ones because now i have to
31:05 - scroll and find them because there's a
31:07 - lot of comments
31:08 - to move them off uh i guess i could
31:12 - clear all the other ones
31:13 - uh okay and i don't think i need to
31:17 - remember thirty thousand twenty eight
31:21 - um so now i can just remember that i
31:24 - need
31:24 - begin draw and draw i forgot about that
31:26 - so absolutely
31:28 - canvas begin draw
31:33 - and then canvas
31:36 - end draw here
31:39 - this is i don't believe this is needed
31:41 - in p5 which is one of the reasons why
31:43 - at least that's my excuse for why i
31:45 - forgot it
31:46 - okay let's see there we go it's so tiny
31:51 - all right because it's only a hundred
31:51 - thousand points okay
31:54 - looks good uh now let's go to
31:57 - one million points
32:04 - a little drumroll
32:08 - so it's so small
32:12 - because it's only a million points so i
32:15 - could up the number of points
32:16 - the other thing that i could do is
32:18 - technically speaking
32:20 - um i could increase the stroke weight to
32:25 - four and then always move it by two
32:27 - pixels so i could do something like
32:30 - step size equals two
32:34 - uh and i might wanna say something like
32:36 - stroke weight is
32:38 - the step size times two and then this
32:42 - is equal to the step size so i'm always
32:46 - moving according to the step size let's
32:48 - try that
32:53 - see what we get yeah so this looks like
32:56 - what i would expect it to be
32:58 - um let's see what
33:04 - um let's see what would happen if
33:07 - uh oh what happened there
33:12 - what did i do i meant to keep it
33:16 - constrained oh
33:17 - this needs to be canvas dot width i was
33:19 - like oh i'm constraining it
33:21 - uh but i constrained it to the little
33:24 - divided by four
33:25 - size window okay
33:30 - see what we get that doesn't make a huge
33:31 - difference um but we're gonna get
33:33 - more points in the window itself because
33:37 - it's not
33:37 - allowed to wander off but it's not the
33:39 - true random walk this bothers me i gotta
33:41 - take this off
33:42 - okay so this is good um
33:46 - um kk wikman is saying on average it
33:49 - will be the square
33:50 - root of n away away from the origin
33:53 - after n steps
33:57 - um that's wonderful to sort of think
33:59 - about and consider thank you for that
34:00 - comment
34:02 - um all right so now um
34:06 - what do i want to do
34:10 - i think it's always going to kind of
34:11 - lean towards going one way oh
34:13 - or the other because the other thing is
34:15 - i always need room in this design to put
34:17 - the little code snippet um
34:21 - and
34:24 - uh let me now so i just want to look at
34:27 - a lot of these
34:28 - so i'm gonna do something kind of
34:29 - interesting here at least interesting to
34:31 - me
34:32 - i'm gonna seed use a random seed of
34:35 - frame counts always reseed the random
34:37 - numbers
34:39 - then i'm gonna say uh save frame
34:42 - random walk put in these um
34:47 - hash symbols
34:50 - i guess i can't call save frame on
34:54 - um on a p graphics office
34:59 - object office
35:02 - that's fine
35:08 - i'm so used to javascript now that this
35:10 - is confusing me what to do here
35:12 - so let's do that and i should now see
35:16 - and let's get rid of no loop um
35:20 - let's do this so i just want to put on
35:23 - um my waiting music and
35:26 - we're going to do a whole we're just
35:27 - going to create a bunch of these
35:31 - let's see what they look like
35:34 - [Music]
35:38 - oh i just realized there's a problem
35:42 - i need to put begin draw
35:48 - yeah and and background there
35:51 - that should do the trick
35:59 - all right i just want to see if i'm oh
36:01 - why didn't i get oh because x and y
36:03 - also need to be reset back to the middle
36:05 - [Music]
36:09 - okay now we should get a bunch of them
36:12 - [Music]
36:19 - so it feels like i either need more
36:20 - points or a larger step
36:24 - size
36:30 - [Music]
36:33 - oh i like that one
36:43 - what do we think people
36:45 - [Music]
36:51 - there's always room generally
36:54 - you know it'll be in a different place
36:55 - for the code snippet and the random
36:57 - number
36:58 - of course that could also go on another
37:00 - side
37:05 - higher step size and points i kind of
37:08 - don't want to
37:12 - i kind of don't want to change the
37:14 - number of points so i think about 1
37:16 - million points seems
37:17 - right to me what if i make it
37:21 - a step size of four
37:23 - [Music]
37:31 - i'm also not sure why i'm doubling the
37:34 - stroke weight based on the step size
37:37 - is it giving it more heft
37:40 - [Music]
37:47 - yeah it's continuous
37:54 - [Music]
38:04 - bigger step and fewer points says andrew
38:06 - i think actually i really like where
38:08 - this is right now
38:10 - i just want to look at the um
38:13 - [Music]
38:15 - i want to look at the sort of higher
38:17 - resolution renders right now
38:20 - because we can really uh zoom in on them
38:23 - just to sort of see what
38:27 - ah so that's why i increased look at
38:31 - this
38:32 - the strokes are like little dots like
38:36 - that when you zoom
38:37 - in on it so it has this weird kind of
38:42 - that's why i so one thing is i could do
38:46 - is just actually make it a rectangle
38:49 - maybe that would make more sense like
38:51 - instead of drawing it
38:53 - as a point
39:00 - uh what if i said
39:04 - this i'm just curious
39:15 - i made it a rectangular point now
39:20 - um would i want
39:23 - it's gonna go up here um would i
39:26 - want this to be wrecked mode
39:30 - center i think i would
39:35 - let's see what these look like
39:40 - an idea from the chat is to center the
39:43 - canvas
39:44 - at the average of all the points
39:47 - that is a really interesting idea so why
39:50 - i do like that idea i
39:52 - i sort of there's something nice also
39:55 - about the consistency of it them all
39:57 - starting from the same place
39:59 - um and and the dabbing bear which is a
40:01 - great name by the way saying a lot of
40:03 - rectangles might cause performance
40:04 - issues so i'm not worried about
40:06 - performance issues right now because
40:07 - it wouldn't even matter if it took me an
40:08 - hour to render each one
40:11 - but let's see what these look like and i
40:13 - should have renamed them so i could
40:15 - compare them side by side
40:18 - but yeah now we can see i think so this
40:20 - is this is definitely what i want
40:21 - i want it to be um the sort of perfect
40:24 - pixel size of each step
40:27 - um and i'm not sure what advantage there
40:30 - is to like making it higher resolution
40:32 - with a larger step size
40:33 - than lower resolution with the same step
40:35 - size really seems to make
40:37 - no difference but um but yeah okay so i
40:40 - think this is good this is good enough
40:42 - for now
40:43 - because this could always be improved
40:45 - that i can take this and move this to p5
40:49 - because ultimately this will fit in so
40:51 - let's look at a couple of these
40:53 - um so i want to show what a couple uh
40:55 - folks from the community have made
40:57 - let me get into uh discord um
41:00 - and pull these links up so i'm going to
41:04 - put the music back on here
41:11 - [Music]
41:13 - let me find
41:18 - okay and then
41:22 - i'm looking for
41:25 - the other one where is prote's okay
41:35 - okay
41:42 - [Music]
41:47 - just get back to discord
41:54 - okay so first of all if you are not
41:58 - a member of the coding train discord i
42:00 - said coding train
42:02 - please come and join right now um i will
42:06 - put a link
42:08 - into the chat um however
42:13 - um i'm sorry i'm looking i'm reading the
42:14 - chat right now um
42:17 - bounce the walker off the boundaries
42:18 - okay wait did that oh it came it came
42:20 - through
42:20 - so also you could just go to
42:22 - thecodingtrain.com discord that will get
42:24 - you an invite into the discord
42:26 - the discord is where the community
42:28 - gathers um
42:30 - for discussion and sharing and help
42:34 - um and it is also what i use during my
42:38 - live streams to post
42:39 - links to things that i'm looking at that
42:41 - people if i want people to have quick
42:42 - access to i could put those into the
42:44 - youtube chat but it's a little more
42:45 - awkward
42:45 - for me to press all the buttons to find
42:47 - that chat so um
42:50 - uh come come over here and check out the
42:53 - lynx channel come on into the discord so
42:55 - um two
42:56 - uh friendly faces from our community
42:59 - have made
43:00 - some sketches related to the uh random
43:03 - number assignments
43:04 - and by the way again everybody can have
43:06 - a random number
43:08 - um and so uh let's look at this one this
43:11 - one
43:12 - is uh called capricious brazil which is
43:14 - a wonderful name
43:15 - thank you simon i think that's probably
43:17 - the default name
43:19 - i don't know why i'm not logged in here
43:20 - to uh the web editor
43:22 - and this is a project that simon made
43:26 - welcome new member your random number is
43:33 - 63 579
43:41 - and that's on the end of i love this so
43:44 - so much
43:45 - i think there's so much potential in
43:47 - this idea the one
43:48 - thing that i don't know what to do about
43:51 - is
43:52 - um i do not want the random numbers to
43:54 - come from
43:56 - the job the browser uh
43:59 - javascript based pseudo random number
44:01 - generator i want them to come
44:04 - from my very special book again again
44:07 - help me internet help me find an
44:09 - original print of this book from
44:12 - i think it's the uh i i should know the
44:14 - date off the top of my head with my
44:15 - obsession with this book
44:17 - um let's look it up uh this was the
44:22 - first edition
44:23 - originally published in 1955
44:26 - um so that is my uh i would take a later
44:31 - reprint of it but i'm really looking for
44:34 - an original no missing pages
44:36 - print of this book from 1955 i would pay
44:39 - a large
44:40 - finder's fee i know but i've been
44:43 - looking on ebay and all sorts
44:44 - and it's really hard it's hard to just
44:46 - to find but
44:47 - someday i will find one um so i really
44:49 - would like the random numbers to come
44:50 - from this book
44:51 - so one thing that i think we could do is
44:54 - uh if we were to use something like this
44:56 - is have i mean
44:57 - a transcript and this would be really
44:59 - useful a transcription of this book
45:01 - so perhaps already the audio
45:05 - like is there a kindle edition of this
45:07 - book is there a raw text file is there
45:09 - an ocr version of the book that's what
45:10 - solar liner is asking
45:12 - that's exactly what i'm looking to find
45:14 - if not that will be a project that we
45:16 - will undertake
45:17 - there is no reason why i couldn't scan
45:19 - this book digitize every random number
45:21 - you know my dream is to make an audio
45:23 - book
45:23 - version of this release it on audible
45:28 - but in which i have been slowly trying
45:30 - to read over time i'm still
45:32 - on the first page but i guess i could i
45:34 - guess i could
45:35 - sort of really dedicate myself to oh
45:36 - yeah actually if i just really
45:39 - i could do this this could i mean i
45:41 - could do this like not live streaming
45:43 - like i could just record myself
45:44 - i'm gonna do this this is my project so
45:46 - anyway um
45:47 - so that's that's what we need uh to
45:50 - improve this simon thank you for working
45:51 - on this
45:52 - um i think there's a lot of uh design
45:54 - opportunities also that we could add to
45:55 - this
45:56 - um but i love it um so thank you for
45:58 - that
45:59 - um so we're gonna we'll continue with
46:02 - that i think that the big step would be
46:03 - to get the
46:04 - um to get the uh
46:07 - uh a digitized version of the random
46:09 - number book okay
46:10 - now this is created by
46:14 - um
46:17 - um and i want to make sure i get the
46:19 - name right so give me a second here
46:22 - um you're in the chat right now i know
46:32 - um which i think maybe fun planet
46:36 - perhaps uh is a github or or handle that
46:38 - i've seen online
46:40 - um let me go back to here so if anyone
46:43 - wants to take a look at a simon sketch
46:47 - um i will paste that into the discord
46:50 - uh links channel thank you simon for
46:53 - that um and then oops when i'm not on
46:55 - screen
46:57 - then let's take a look at this coding
47:00 - train
47:00 - random n o dot tk
47:04 - um is the url for this i'll paste that
47:08 - also
47:08 - into the discord here so let's just see
47:11 - how this works
47:12 - so if i type in my name my random number
47:15 - is
47:16 - one two three four five six my phone
47:18 - number
47:20 - i think you random had a reason for
47:21 - having the phone number in there but
47:22 - probably i don't want to be asking for
47:23 - people's phone numbers
47:25 - i think also maybe this is something
47:27 - that
47:28 - is there's really would just be sort of
47:30 - more of an admin panel for me
47:32 - although maybe there's a way for maybe
47:34 - this would be
47:35 - maybe there's a version of this website
47:36 - for everybody to put their own random
47:38 - number in i'm gonna hit submit
47:40 - um invalid name
47:43 - what my name is invalid no
47:48 - i don't know why that is is it because i
47:49 - don't have a phone number um
47:51 - it's required so one two three one two
47:53 - three one two three four let's try that
47:56 - no uh eight hundred
48:00 - five five five one two three four
48:03 - not sure what's going on with this so
48:05 - found a little bug there
48:06 - can we find anything here
48:11 - um so i like the idea of this an
48:13 - interface
48:14 - honestly i think like a github file
48:16 - marked a json file on github that i can
48:19 - just edit and add somebody's
48:20 - uh name and random number um and that
48:23 - way i can manage it through pull
48:24 - requests
48:24 - might be a little bit easier than and
48:26 - then keeping them keeping like an
48:28 - elaborate
48:29 - uh uh full stack web app um
48:32 - but thank you this is a wonderful start
48:34 - and i see that there is also a secondary
48:35 - link
48:36 - which is where i can now find
48:39 - and export to a csv file so this is
48:41 - great
48:43 - again i'm not so sure about the phone
48:44 - numbers
48:47 - but i like the idea for this so thank
48:48 - you for this is really amazing
48:50 - and does the search work yeah the search
48:52 - even works this is really
48:54 - amazing work um and so we could consider
48:57 - using this as a base but i think what i
49:00 - want to
49:03 - what i'm going to work on right now and
49:05 - i'll just do this in the web editor
49:06 - itself
49:08 - is
49:11 - [Music]
49:14 - um
49:16 - so i'm reading i'm reading the
49:20 - um the chat actually because uh
49:24 - keith um keith writes a comment deep
49:26 - fake audio your voice i have uh some
49:29 - weird
49:30 - side projects that i'm working on
49:31 - related to some podcasts that i listen
49:33 - to
49:33 - and i don't want to do and just as like
49:36 - a fun
49:37 - goofy project not to actually fake
49:39 - somebody's voice
49:40 - i'm interested in looking at models
49:43 - that can train a text-to-speech engine
49:45 - based on
49:46 - existing audio and i haven't been able
49:48 - to find anything that i was able to do
49:49 - pretty easily with that
49:51 - um so a hider in the chat is saying
49:56 - uh there is a link to a million random
49:59 - digits
49:59 - text file so if somebody wants to get
50:02 - that to me right now i would gladly uh
50:04 - pull that up
50:05 - um all right so what i the thing that i
50:07 - want to start with
50:09 - is i want to just pull over and i
50:11 - realize there's a big irony here
50:13 - which because this processing sketch
50:16 - was originally a p5.js sketch that uh
50:20 - chuck england trans transcribed over to
50:22 - processing now i have this processing
50:23 - version that i'm going to transcribe
50:24 - back
50:25 - but let's bring that over to here
50:28 - we'll call this whistle
50:32 - generator and
50:37 - let's just quickly translate this
50:40 - to uh javascript
50:48 - and i don't think i should call this
50:50 - canvas anymore and boy that font size is
50:52 - small
51:00 - oh so we ran corp according to
51:05 - um according to uh kay wickman the rand
51:08 - corporation
51:09 - actually maybe has published their own
51:11 - version of it okay
51:13 - um let me let me keep going with this
51:16 - here
51:17 - uh i don't need the settings function
51:22 - this over a little bit what is this hero
51:23 - it's just one of the patterns
51:25 - um i'm going to call this
51:29 - uh let's just call this whistle
51:32 - whistle equals create graphics so i have
51:35 - i don't know if begin draw is necessary
51:37 - but i will keep it
51:40 - [Music]
51:43 - random c that i want to let's go back to
51:47 - using a particular random number
51:50 - and uh this there we go
51:53 - [Music]
51:55 - and i call this whistle
52:02 - the constant um
52:06 - and i just noticed that i have this as a
52:10 - rando walk not
52:11 - random walk let's let's get rid of the
52:13 - save for a second
52:15 - and let's make this many many fewer
52:18 - points
52:19 - just to see if this works uh canvas end
52:22 - draw image of whistle
52:26 - so i think and then i'm going to say no
52:27 - loop
52:29 - i think i've translated everything
52:33 - let me just get rid of this stuff for a
52:35 - second
52:37 - okay what did what went wrong what went
52:39 - wrong
52:42 - begin draw so i think there is no begin
52:45 - draw an end draw in p5 it just
52:48 - doesn't
52:53 - there we go this looks good now why is
52:55 - it all the way over there
52:58 - ah pixel density
53:01 - uh the pixel density nonsense
53:11 - try this
53:16 - what is going on
53:28 - what is going on
53:38 - oh no
53:43 - could the image be picking up direct
53:45 - mode
53:54 - no
54:02 - looking at the chat here
54:08 - um
54:13 - uh and prati is telling me to remove the
54:15 - dashes from the phone number that's why
54:17 - that form validation didn't work but i'm
54:18 - confused
54:19 - what i have done
54:22 - to cause
54:31 - this to not work
54:35 - like why is it over here
54:39 - canvas width divided by two
54:42 - oh whistle whistle whistle ah
54:45 - oh my god there we go
54:49 - okay great let's go back to a million
54:54 - a hundred thousand oh that's the 100 000
54:57 - a million
55:01 - there we go
55:05 - let's do let's add the whistle
55:18 - save
55:22 - okay and now let's look at the png
55:28 - there we go um so
55:32 - i'm just curious is the random number
55:34 - generator is not going to be the same as
55:35 - in processing so it's going to be a
55:36 - different image if i do it here on this
55:38 - website
55:39 - versus with processing i guess i could
55:41 - run processing
55:42 - uh you know command line on a server
55:46 - to generate the image or something crazy
55:48 - like that
55:55 - okay so now i think what i need to do
55:59 - is let's create
56:03 - input with a number in it
56:08 - let number and number
56:12 - equals create input and i think i can
56:16 - um then
56:21 - let button equals create button
56:26 - generate button dot
56:30 - mouse pressed function
56:34 - uh i'm gonna say redraw
56:38 - so uh
56:43 - let's just call it uh let's let's
56:44 - actually not use draw at all
56:47 - uh ran let's make a function called oh
56:50 - well
56:50 - hello random walk
56:54 - and we'll call this random walk
56:58 - uh random seed will be
57:01 - uh parse int of
57:04 - number dot uh value
57:10 - and if i'm right about this
57:15 - and let's say background 255 here
57:26 - huh
57:33 - why why why there we go okay
57:36 - so the idea being that i could place
57:39 - the random seed in here click generate
57:45 - and i will get the image now if i change
57:48 - the seed a little bit
57:49 - hit generate
57:52 - i will generate the image so this in
57:55 - many ways
57:56 - this is just the first step i so i think
57:58 - what i want to do is turn this into a
58:00 - github repo
58:02 - um you have in that github repo
58:05 - uh you know a json file maybe
58:09 - i think i could do this without a server
58:11 - just have a json file
58:13 - that has members and random numbers
58:16 - um and then uh we could also create a
58:20 - url uh with like a query string
58:24 - that goes to a particular member or a
58:27 - particular random number and generates
58:28 - the pattern so i'm going to
58:30 - shelve this right now i think this is
58:31 - enough um
58:33 - and so uh
58:37 - i'll put a link to this particular
58:39 - sketch
58:40 - into discord i'll put it right here
58:44 - so if anybody wants to play around with
58:46 - it
58:47 - um you're welcome to do so and
58:50 - stay tuned to the discord we will
58:53 - announce and link to
58:54 - the github repo if you want to
58:56 - contribute to this system
58:58 - that i'm going to use to generate the
59:00 - designs
59:01 - for particular uh whistles okay
59:04 - yes guerda asks why are you doing this
59:08 - i don't know i just am it is what i do
59:15 - okay an hour has passed i've got about
59:17 - another hour left
59:18 - today um i'm gonna i think i want to
59:20 - take like a like a two minute break here
59:22 - um but i don't even need to like turn
59:24 - the stream off i just want to
59:26 - uh open up a few windows i mean let's so
59:29 - the next thing i want to do
59:30 - in terms of my schedule here um
59:37 - i'm reading the chat um the next thing i
59:40 - want to do
59:40 - in my schedule is really sort of start
59:42 - to plan out 2021. okay
60:01 - [Music]
60:06 - [Music]
60:09 - all right i'll be back in just like two
60:11 - minutes here
60:13 - [Music]
60:20 - [Music]
60:52 - [Music]
60:54 - so
61:01 - [Music]
61:08 - do
61:10 - [Music]
61:16 - [Music]
61:35 - [Music]
61:45 - [Music]
61:57 - [Music]
62:04 - do
62:08 - okay i am returning back here
62:12 - um and all right so i want to start
62:14 - looking at the twitter api
62:16 - and this uh running tracker thing that i
62:19 - want to do
62:20 - hmm i wonder if i should just work on
62:22 - that next
62:23 - i do need to do the planning we'll come
62:24 - back to that all right so let's let's
62:26 - work on this
62:27 - um um
62:30 - oh boy this is going to take me a minute
62:31 - to get set up here music back on
62:48 - [Music]
62:53 - [Music]
63:00 - do
63:02 - what the
63:06 - am i not signed in is that why oh
63:19 - where is my phone for two packs
63:32 - um authentication code
63:40 - speaking of things i should have done
63:41 - before i started live streaming
63:46 - i don't think it matters that i'm
63:47 - showing this to you
63:48 - [Music]
63:56 - okay
63:58 - [Music]
64:03 - [Music]
64:18 - i'm now about to figure out
64:21 - how i want to use twitter
64:25 - i'm currently logged in as myself which
64:27 - i really don't want to be logged in as
64:29 - let's see if i can
64:31 - yeah i'm going to use this
64:34 - okay okay
64:37 - [Music]
64:39 - so here's what i want to do
64:42 - um i'm logged into twitter on this um
64:47 - account that's called a to z bot example
64:49 - if you're wondering why it has that name
64:52 - so the course this is this is a this is
64:54 - a unfinished
64:55 - really un barely started project
64:59 - from fault from the fall if we went one
65:01 - of the things i wanted to do today was
65:02 - go back and look at my
65:04 - list of things that i meant to make
65:06 - videos about tutorials about in the fall
65:08 - and one of them was
65:09 - rebooting the twitter bot series i did
65:11 - not get to that at all
65:13 - i didn't even make one video but because
65:15 - before that was making a discord bot
65:17 - series which i did do but i didn't even
65:19 - finish that so i have to figure out like
65:20 - what's realistic
65:22 - for me to do still with discord or
65:24 - twitter
65:25 - now that it's 20 21 and my focus will be
65:28 - you know spoiler alert
65:29 - my focus is for the spring is the nature
65:31 - of codebook um
65:32 - and what's this by the way oh that's
65:34 - just uh visual
65:36 - artifact of the browser um but um
65:39 - i did start on this sort of like
65:42 - twitter api library um node module
65:47 - during the live stream so i i want to
65:49 - like at least it's still
65:51 - it's still you know it's still the first
65:52 - is it the first week of january
65:54 - second week of january i think i can
65:55 - allow myself i can indulge myself
65:57 - working a little bit more with the
65:59 - twitter bot twitter api
66:01 - now the course that i was teaching in
66:03 - the fall it's called programming from a
66:04 - to z it's about programming with text
66:06 - twitter bots discord bots were part of
66:07 - that course that's why this
66:09 - example is called a to z itp i'm going
66:11 - to go to developer.twitter.com
66:16 - and a developer portal okay so
66:20 - um and i'm going to make
66:23 - dare i make a new project or just use
66:28 - my api keys from this one i think i'm
66:29 - just going to use my api keys from this
66:31 - one
66:32 - so all right what um
66:36 - what's going on here so i actually
66:39 - recently added a new
66:41 - example
66:44 - which will uh search um
66:47 - search twitter so this so this is
66:49 - something i actually worked on
66:51 - over the holiday break not on a live
66:53 - stream i did this on my own i added a
66:54 - new function
66:56 - um in the my twitter uh
66:59 - library which has a search function
67:03 - um and i can pass it any keywords
67:07 - it goes to i'm still using the 1.0
67:09 - twitter api
67:11 - and i can search go to this uh this
67:14 - particular endpoint search tweets json
67:16 - and just
67:17 - pass us the query the keywords so
67:21 - and then i pass it to a get request
67:23 - which does all the oauth stuff that
67:25 - needs to be done
67:27 - and there should be a way i can i can
67:29 - probably page through them also
67:31 - so what i what i want to start with is i
67:33 - just want to create
67:34 - like let's look up um
67:40 - uh what is it the gump 500
67:45 - see i think if i search
67:49 - this i'll probably find it yeah okay so
67:51 - let's follow
67:52 - forrest gump 500 and what would make
67:55 - sense as
67:56 - a hashtag for right now uh
68:00 - fg500 is
68:04 - that could work um
68:11 - let's see if this is empty
68:16 - um oh you know what i want to call it
68:20 - gum 500. yeah okay great we'll call it
68:23 - gump 500 forest 500 i don't know what's
68:25 - better
68:26 - just for testing right now i will use
68:29 - this
68:30 - so i'm going to go to my example
68:33 - which the first thing that i need to do
68:35 - is i need to create a
68:36 - to work with this example is i need to
68:39 - create
68:40 - a uh a dot env file that doesn't just
68:43 - have the
68:45 - dummy data in it so let's make a new
68:47 - file called dot env
68:50 - uh paste this over this is again welcome
68:53 - to 22
68:54 - welcome to the coding train where
68:57 - a person who likes to make youtube
68:59 - videos about programming
69:00 - but often uh uh continuously by accident
69:03 - reveals their
69:05 - secret api keys and tokens while live
69:08 - streaming
69:09 - so um
69:15 - let's um so the reason why i was saying
69:17 - gump i was interested in
69:19 - is a little-known fact story time here
69:23 - historical footnote um i uh i don't
69:26 - probably shouldn't admit this but many
69:27 - many many many moons ago
69:30 - back in my youth my utes so to speak
69:33 - when i was a young
69:35 - college student i participated in an
69:37 - acapella singing group
69:39 - and at a cappella scene group's nickname
69:41 - was the gump
69:44 - i will leave you to the rest of the
69:46 - internet to find old photos of me
69:50 - if they exist uh um out there somewhere
69:54 - okay
69:54 - so um what was i doing uh yes
69:58 - so i'm gonna go over to here and i'm
70:00 - going to click on this keys
70:02 - and tokens button first i'm going to
70:04 - move over to there
70:06 - and click on keys and tokens
70:10 - and i'm going to go view keys wait okay
70:13 - here
70:14 - now great so i can show you this page
70:15 - this is the next page
70:17 - that i'm on here and then i'm going to
70:19 - click on this
70:20 - view key so as soon as i do this i do
70:23 - not want to
70:23 - show them to you although i could show
70:25 - them to you then quickly regenerate them
70:27 - um but i'm just i think i i think we're
70:29 - just going to ask for you to have a
70:30 - little faith have a little trust in me
70:33 - that that uh that i'm going to copy
70:36 - paste the correct keys without you
70:37 - seeing it
70:38 - so oops wrong button so i'm clicking on
70:40 - view keys i'm getting my api key right
70:43 - now
70:44 - putting that into consumer key getting
70:47 - my api
70:48 - key secret putting that into consumer
70:51 - secret
70:53 - then i am going to go down to
70:56 - access token and secret and the only way
70:59 - for me to get these and by the way
71:00 - one thing that's really important is you
71:02 - need to make sure you have read
71:04 - write permissions i mean um in order if
71:06 - you want to actually don't
71:08 - need to have if i was actually making a
71:10 - twitter bot i would need to have
71:12 - um write permissions to be able to post
71:15 - to twitter
71:16 - but anyway so i'm going to click
71:19 - regenerate
71:24 - yes regenerate and i'm now going to get
71:26 - my access token
71:29 - uh and paste that in i'm going to get my
71:31 - access token secret
71:33 - i'm going to paste that into my env file
71:36 - i'm now going to close that file go over
71:38 - to env sample i'm going to go back to
71:41 - here
71:41 - close this window and
71:45 - i think i'm starting 2021 off on such a
71:50 - great new leaf
71:51 - i successfully and i'm sure i'm gonna
71:53 - ruin this in any second now
71:55 - i successfully generated api keys and
71:58 - secrets
72:00 - copy pasted them into a dot env file
72:02 - explained exactly what i was doing i
72:04 - didn't once
72:04 - show those keys on the live stream um so
72:07 - but
72:08 - and they're now sitting in this
72:09 - particular dot env file
72:11 - has exactly this content in it the only
72:13 - thing that's different is it has the
72:15 - actual um
72:16 - uh uh api keys
72:20 - so if i go back to here one of the
72:21 - things you'll see is i'm using the
72:23 - node.env
72:24 - package um which will then load those
72:28 - consumer key consumer secret token token
72:30 - secret from
72:32 - that file and create a
72:35 - for me to authenticate with the twitter
72:37 - api which
72:38 - happens here in my choo choo tweets
72:40 - module so
72:42 - let's just now search let's let's search
72:45 - for
72:45 - a hashtag um
72:49 - gump 500
72:53 - and
72:59 - solar liner says in before he actually
73:00 - clicks accidentally clicks the dot envy
73:03 - i didn't do it i didn't do it um let's
73:06 - so let's go back to twitter
73:09 - um let's make one post oh yeah
73:12 - gum 500 what was i i'm at um i said i
73:15 - was at 16 miles
73:19 - um let's tweet that and then
73:22 - um
73:27 - and then everybody's talking about how
73:30 - i'm gonna show those guys i'm not gonna
73:31 - show those secret keys come on yeah i
73:33 - can do it i can do it
73:35 - um i'm gonna go back to here
73:38 - and go to examples and search
73:41 - and say node indexed wait
73:45 - uh okay the dot env is there uh node
73:48 - index.js ah okay uh whoops
73:52 - i forgot a very important step which is
73:55 - to say npm install
73:56 - i've got to install all the node
73:58 - packages uh now i should be able to do
74:01 - this
74:02 - okay oh so we got um two tweets
74:05 - oh somebody wrote oh this is really
74:07 - dangerous stuff now in the la
74:09 - um uh hello mr daniel uh
74:12 - you can just call me daniel no need for
74:14 - the formal mister
74:16 - um and um i can also
74:20 - see here um
74:23 - my 16 miles so
74:28 - now here's the thing this is just doing
74:31 - a
74:31 - search of historical tweets and i think
74:35 - what i want to do which i have not
74:37 - really investigated
74:38 - if i go back to the um can i get to the
74:41 - docs here
74:44 - so what i used
74:47 - was a twitter api
74:51 - um and i probably should investigate the
74:55 - twitter api version 2 but i'm using
74:58 - standard
74:59 - 1.1 um let me just go to fundamentals
75:04 - maybe
75:04 - data dictionary no tweets
75:08 - right i'm using this search tweets
75:11 - so this is the endpoint that i'm using
75:14 - um
75:15 - api reference is what i want to get to
75:17 - right get
75:18 - search tweets so you can see that
75:21 - that's the that's the api endpoint that
75:24 - is what is in my code um
75:28 - here under search
75:32 - that particular endpoint and then
75:35 - this is the only uh parameter that i'm
75:37 - using
75:39 - which is q for query for particular
75:41 - search keywords but you can see i can
75:43 - limit the tweets to language locale all
75:46 - sorts of since a certain time
75:48 - a maximum id um so that um so like
75:51 - but but that's not what i want to do
75:54 - what i want to do is i think there's
75:56 - the i the account activity api
75:59 - is what you need to use if you want to
76:02 - listen
76:03 - for um events for a particular account
76:06 - so if i want to listen for when my
76:08 - account has been mentioned or a tweet
76:10 - has been replied to
76:12 - but i think i can still use
76:15 - under standard sample real-time tweets
76:19 - or filter real-time tweets i think this
76:22 - i should be able to use
76:24 - um which for a search for a particular
76:28 - hashtag so how do i do this
76:31 - i don't actually know how to do this
76:34 - streaming uh and this might be
76:36 - unrealistic for me to actually figure
76:38 - out today
76:41 - all right we launched a new version of
76:42 - the post statuses filter endpoint oh
76:46 - so do i need to use twitter api
76:49 - version 2 early access
76:56 - or can i get this
77:01 - [Music]
77:03 - post statuses filter 400 keywords 5000
77:05 - user ids
77:07 - one filter rule power track i don't need
77:10 - that
77:11 - filtered stream so i don't understand
77:17 - how this works
77:18 - this is a post to filter
77:23 - track so
77:26 - follow track keywords to track okay
77:31 - yeah i thought v2 was out as well profit
77:34 - mesh is asking
77:35 - so i'm going to get myself till 11 a.m
77:38 - to work on this which is only 15 minutes
77:40 - but let's see what happens if i at a
77:43 - minimum
77:44 - add this particular request
77:47 - for and this is a post right this is a
77:51 - post to statuses filter so if i look
77:55 - at this um like i have a
77:58 - um just a simple like i can look at this
78:02 - as a like if i add another function
78:04 - to my library and i'm going to call it
78:07 - filter
78:10 - and i'll give make the argument keywords
78:16 - the endpoint should be this resource url
78:21 - so i can paste that in here i'm going to
78:24 - the filter
78:25 - url then the body of the post
78:30 - should have i only want to use this
78:32 - track keywords to track
78:35 - [Music]
78:38 - so i want to uh track
78:42 - the keywords whoa what just happened
78:45 - there
78:46 - yeah track the keywords and then i want
78:49 - to await
78:50 - post to that particular url with this
78:53 - post body
78:55 - and all of the authentication and the
78:57 - actual post request
78:58 - all happens down here i'm using this
79:00 - oauth package
79:01 - so now i can go into my search sample
79:05 - and i should just be able to i'm just
79:06 - going to
79:10 - comment this out and i'm going to change
79:12 - this to filter
79:14 - and let's console.log the response
79:17 - and see what i get um
79:24 - so it's sitting there waiting
79:29 - so why is it waiting
79:34 - is it going to suddenly
79:47 - nothing happened there so what do i get
79:50 - i don't understand
79:55 - oh return response but it should have
79:58 - returned
79:59 - that's what i meant to do no no not
80:04 - using this
80:05 - endpoint correctly
80:10 - where is my filter function
80:14 - turn await this.post
80:19 - i mean
80:23 - just to be sure about this
80:33 - just to make sure uh my posts are
80:36 - working
80:38 - does he see the youtube chat uh it's lo
80:41 - it's using long pole it's a socket i
80:43 - know what do i do with that now
80:45 - i don't know what to do with it uh
80:48 - how do i listen um uh
80:52 - let me just make sure this is working hi
80:54 - from node.js
80:57 - let me just let me make sure like my
80:59 - post requests are working
81:04 - and now if i go here into profile
81:07 - yeah so that worked um the tweet
81:11 - came up um
81:16 - check listen function in twitter
81:18 - documentation okay
81:22 - so now that i get
81:26 - oh stream.twitter okay so how do i use
81:28 - this
81:32 - okay returns public statuses multiple
81:34 - both getting poster grip but get
81:35 - requests to okay
81:44 - response formats json am i not in the
81:48 - can i look into guides okay
81:56 - stream
82:05 - oh yeah
82:19 - i'm looking at the chat see if anybody
82:25 - so what um let's look at what's that
82:27 - twitter api that i also was
82:29 - using as a model twitter lite
82:32 - let's see if they have this
82:38 - um let's see ah they do have this stream
82:45 - you know this is a this is a much more
82:48 - okay so
82:49 - thoughtfully created api so let's
82:52 - look at
83:04 - um
83:07 - stream statuses filter ah so on so then
83:11 - there's these events
83:12 - so basically i mean i should just use
83:15 - this library
83:16 - that already has this implemented but i
83:19 - want to understand how it works
83:21 - um so i am going to
83:24 - [Music]
83:30 - right i think i need to i'm going to go
83:32 - look and see how how
83:34 - it's done in this particular library so
83:37 - client.stream
83:40 - let's just clone this whole
83:43 - library
83:46 - and again uh you know if if i were
83:49 - really just sitting here trying to
83:51 - make this project happen it would make
83:52 - much more sense for me to use this
83:54 - working node module
83:55 - but i'm i'm playing the long game here i
83:57 - really want to understand the twitter
83:58 - api
83:59 - in a more robust way so i'm going to
84:01 - sort of like keep with my own
84:02 - code implementation
84:11 - so let me clone this library
84:15 - and just see how it has implemented it
84:21 - it's also typescript oh boy this is
84:23 - going to be tricky for me
84:25 - so index
84:29 - stream resource stream okay so public
84:32 - stream so i guess this is coming from
84:34 - oh my god i have no coming from
84:38 - stream.js
84:39 - oh my god i have no idea
84:43 - what to do
84:47 - this is so complicated twitter.js what's
84:49 - in here
84:50 - create oauth client ace endpoints
84:54 - twitter handle response
84:59 - where yeah make requests get
85:04 - post put oh that even has a put do i
85:08 - need to use a put stream
85:10 - okay
85:13 - authorize request data request fetch
85:15 - requesting
85:19 - then response so i get a stream
85:23 - stream emit start
85:27 - on okay so this i need to do something
85:29 - with this
85:33 - just read the docs
85:41 - you can maybe use a generator function
85:42 - use a 408 to stream results back to your
85:46 - script
85:47 - um i'm reading the chat here um
85:51 - all right this is gonna this is gonna
85:52 - take a longer investigation
85:55 - um this is using
85:58 - what is this fetch is this is this the
86:01 - same fetch that i'm using cross
86:03 - fetch cross fetch what is crossfetch
86:21 - interesting uh
86:24 - fetch api
86:28 - this is probably latest version
86:31 - so this is probably not too different
86:33 - from what i'm using um
86:36 - how come i can't okay let's take a look
86:40 - let's dig into this a little bit i think
86:42 - i understand what i need to look at now
86:44 - with a little a little bit more detail
86:47 - so
86:47 - let's go to here
86:50 - and let's see what i get
86:54 - in my post
86:58 - because it's never going to resolve
87:07 - um what's this
87:17 - does this function ever execute
87:41 - so it gets to here
87:48 - okay it gets to here and then this
88:03 - wow it just sits and waits
88:12 - post
88:15 - it opens up a connection i need to
88:18 - create a stream object i guess all right
88:20 - i
88:20 - have to put this aside or i could just
88:22 - switch really quickly and use twitter
88:24 - lite right now let's just see if it
88:25 - works
88:26 - let's try using this twitter lite um i'm
88:28 - gonna make a new project
88:32 - and i'm gonna have to investigate how to
88:33 - do this later on my own
88:39 - i'm gonna make a new project
88:51 - and uh let's
88:54 - now here's where i run the risk of
88:56 - showing my env file again
88:58 - so just give me a second here and bring
89:00 - my dot emv file over
89:02 - uh from
89:09 - from that other example i was working on
89:19 - okay so
89:26 - okay so um
89:31 - i'm now in a new empty new project
89:36 - um
89:41 - um a new project
89:44 - um
89:45 - [Music]
89:48 - uh with the index.js file package.json
89:50 - and my.env file
89:52 - so let's go over here and say npm
89:55 - install
89:55 - a twitter lite
89:59 - so we're gonna we're gonna grab this uh
90:01 - twitter library
90:03 - um and uh
90:06 - i'm going to just there must be like a
90:09 - quick example here
90:12 - test
90:15 - stream test yeah this is what i want to
90:18 - do basically
90:20 - um whoa
90:24 - this is way more than i need but let's
90:31 - um all right so
90:34 - um all right so i'm getting my
90:38 - special dot env i'm requiring
90:43 - oh no this is a test this is not an
90:46 - example
90:47 - [Music]
90:49 - hold on
90:52 - come on twitter lite
90:58 - get post new client new here we go this
91:02 - is what i'm looking for
91:05 - okay so i just need this
91:10 - let's start with this
91:14 - and let me go back to my this example
91:18 - which i will need to get just my env
91:28 - stuff
91:32 - and i also want to say
91:36 - import no not import require i need to
91:38 - inqui require okay
91:40 - do it this way um
91:48 - okay so there we go so i've got the
91:50 - twitter api
91:52 - um and then i need to say
91:57 - dot env dot
92:06 - this is where oh i'm so close to making
92:08 - it through the stream without revealing
92:10 - it
92:10 - back to this view i'm going into my dot
92:13 - env file people
92:14 - uh consumer key
92:18 - goes here oh no consumer
92:21 - key i just don't remember what the
92:22 - things were called consumer secret
92:29 - and then they're called uh token and
92:31 - token secret
92:33 - so i can show you what i'm doing again
92:35 - so
92:37 - oops token and
92:41 - token secret
92:44 - okay and so now let's just
92:47 - see if this is going to work by looking
92:50 - at a very simple
92:52 - example let's verify the credentials
92:58 - so let's see if this runs
93:02 - oh and i need to uh install env
93:07 - and looks like
93:10 - this verified my credentials correctly
93:14 - that's promising so i don't think i need
93:16 - to do that anymore
93:18 - and now let's look for
93:21 - stream
93:25 - tweet thread streams okay
93:29 - so let's do this
93:34 - and let's just only track uh gump 500
93:42 - and then do this
93:49 - next tick stream destroy
93:53 - i don't understand why i would want that
93:55 - but okay
93:59 - um all right so this in theory now
94:03 - um i should be able to
94:07 - see here in this function any
94:10 - tweets that come through with tracking
94:12 - this parameter so let's see what happens
94:16 - starting the stream going
94:19 - to twitter
94:24 - gump it's 11 o'clock after 11.
94:28 - we're so close though now uh hello
94:32 - tweet this
94:40 - that worked okay
94:45 - so um
94:49 - so i think that i am
94:52 - going to need to learn how this
94:55 - streaming works
94:56 - so that i can implement it in my own
94:58 - twitter library
95:00 - and we can see people are uh i don't
95:03 - know what the ping oh i guess the ping
95:05 - is just doing that every so often
95:07 - to like stay connected um
95:10 - and throw an error and what is i don't
95:14 - understand
95:16 - looking at this here why i need to have
95:19 - okay
95:20 - to stop a stream call stream.destroy
95:23 - that might take a while though if the
95:25 - stream receives a lot of traffic also if
95:28 - you tap destroy stream from an on
95:30 - handler you may get an error about
95:31 - writing to a destroyed stream
95:33 - try to defer the destroy call next tick
95:38 - i'm not sure i understand this is like
95:41 - api 2.0 all right i'm going to leave
95:44 - this without the destroy method
95:46 - and what i'm going to do is i'm now
95:48 - going to have my server
95:52 - i'm going to create a
95:56 - miles dot json and i
95:59 - it should allow people to use kilometers
96:01 - but just to the simplest version of this
96:05 - um let me create uh
96:08 - a json file
96:12 - that has um
96:18 - an
96:22 - an object in it okay an
96:26 - empty object so then um let's this is
96:29 - gonna be my database and i should use a
96:30 - proper database but
96:33 - this is gonna do for right now um i'm
96:36 - going to
96:38 - uh create oh i'm gonna i'm gonna use the
96:41 - node uh file system module
96:45 - uh and then you know this is gonna have
96:48 - to be honor system anybody could just
96:49 - tweet gum 500 500 miles
96:52 - and they're done but i'm going to say
96:56 - miles equals read i'm just going to read
96:58 - file sync
97:00 - the name of that file miles.json
97:04 - utf-8 is the file format
97:07 - i'm going to call this data and then i'm
97:08 - going to say miles
97:10 - equals json parse that
97:14 - data so this is the miles
97:18 - so on let's actually let me just
97:21 - name a function um
97:24 - new tweet
97:28 - um and let's write that function um
97:32 - function async function
97:36 - new tweet console.log data
97:43 - so um and i want the
97:47 - um require fs promises yes i thank you
97:50 - solar liner i do
97:52 - want that um does it
97:55 - i like to use the um read file sync
97:59 - though just when the
98:00 - program starts up i will come back to
98:01 - that um okay
98:03 - so console.logdata.tweet
98:06 - so now i need a regular expression
98:10 - um
98:13 - uh i wanna look for if
98:16 - that tweet includes some number of
98:20 - digits
98:22 - followed by some number of spaces
98:24 - optionally
98:25 - and then the word miles anywhere
98:29 - well let's i just want to look at the
98:30 - for the first instance of it actually
98:32 - but case insensitive so then
98:36 - i want to um
98:39 - what is it called maybe it's screen name
98:42 - and
98:43 - tweet like if i go back to
98:46 - uh the example it was tweet.text
98:52 - if somebody could look this up for me i
98:54 - just want the username of the person on
98:56 - twitter um
98:58 - which uh i think it's called screen name
99:02 - um but i'm not sure
99:05 - and then let's just say console.log
99:08 - screen name
99:12 - let's console log some stuff
99:18 - uh screen name
99:24 - text
99:27 - and then i always forget how
99:30 - regular expressions work so let's just
99:33 - play around with one here right here
99:35 - regex match
99:38 - um hello 500 miles
99:43 - no so hello 500 miles
99:47 - match yeah
99:52 - great so there we go
99:55 - um and then what if i make my
99:59 - regex
100:02 - capture the digits
100:09 - um
100:14 - yeah so then i get an array and i get
100:16 - 500 as the second element of the array
100:18 - perfect
100:20 - okay so this is what i want um so it's
100:23 - the string match the regular expression
100:26 - so let's capture the number of digits
100:29 - um and then let's take
100:36 - let match equals
100:39 - text dot match
100:44 - regex if
100:47 - match if there is a match
100:50 - then the miles equals and i
100:53 - i eventually i'll make this work with
100:55 - kilometers and all sorts of other things
100:57 - miles equals the match index
101:00 - one uh console and then so what i
101:04 - what i need to do is say um
101:09 - add to my database miles
101:14 - a screen name updating their
101:17 - miles equals that number of miles
101:21 - and then save
101:25 - save right right file sync
101:30 - uh
101:33 - json uh the file name is
101:36 - miles.json is that the first argument
101:42 - uh the path is the first argument
101:44 - miles.json
101:46 - and then
101:50 - i need to say json
101:53 - stringify
101:57 - [Music]
101:58 - um
102:02 - oh i don't need p i guess yeah let's
102:04 - keep people in there so
102:06 - so it's people
102:09 - miles dot people
102:13 - let's just call this database it's sort
102:16 - of silly
102:18 - but eventually that might be a database
102:21 - and so
102:27 - yeah because also i just had this be
102:29 - miles
102:30 - and i think we should say parse int
102:34 - that particular match database people
102:37 - screen name equals miles
102:38 - and then i want to stringify database
102:42 - uh and let's format it nicely okay
102:46 - so this should handle anytime there's a
102:48 - new tweet
102:49 - look for the text see if there's a match
102:52 - with the number of miles
102:53 - added to the database um
102:58 - okay you probably forgot to remove my
103:01 - message from the screen no i was keeping
103:03 - it up there for reference
103:06 - but i guess i could i guess it's been a
103:08 - while okay so anybody see anything i did
103:10 - wrong here
103:15 - uh i'm getting a lot of pings
103:20 - so let's re-run this server i'm going to
103:25 - tweet
103:29 - gump 5 500. i ran
103:32 - a total of 16 miles so probably
103:35 - you should tweet like how many miles you
103:37 - ran i could add it to your total but i
103:39 - don't know we'll do some like fancier
103:40 - natural language parsing or something
103:42 - um gump 500 i ran a total of 16 miles
103:46 - so let's see we should see that come up
103:49 - here
103:50 - oh we got an error uh
103:55 - dollar sign is not defined so first of
103:57 - all it probably wasn't screen name
103:59 - oh it is screen name that's a user dot
104:02 - screen name
104:04 - text so i need to do user dot screen
104:06 - name that's fine
104:07 - uh oh how do i do this
104:19 - i'll just do this and then we're talking
104:21 - about name
104:24 - so that's the name and then that's the
104:27 - name
104:28 - so where uh where did this go wrong
104:30 - where is oh there's an extra dollar sign
104:32 - here
104:34 - okay great all right little couple fixes
104:37 - there
104:38 - let's rerun the server
104:48 - um i
104:51 - i have run 16 miles in toto
104:56 - total okay tweet
105:04 - okay that's promising i see i don't i
105:07 - don't need the console log
105:08 - all of this stuff i don't need to
105:10 - console log data
105:12 - now if i load here oh look at that yes
105:14 - 16.
105:15 - so uh anybody should tweet now something
105:18 - of how many miles you ran
105:19 - and it should show up here let me give
105:21 - it a minute for people to do that
105:25 - and then i'm gonna make a quick
105:27 - visualization of it
105:29 - um
105:33 - so let's make a route i need to get all
105:36 - my express stuff going here
105:40 - what was
105:48 - [Music]
105:50 - here we go
106:00 - so this is from my work but basically
106:02 - kind of redoing
106:03 - what i do in my working with data and
106:05 - api series so
106:06 - i'm just going to grab a bunch of things
106:08 - from there like i'm going to add express
106:14 - and i'm going to create a web app i'm
106:16 - going to serve
106:18 - i'm going to serve a directory called
106:19 - public
106:22 - um
106:22 - [Music]
106:25 - let's create this after i've loaded the
106:28 - json file
106:34 - um oh oh no
106:39 - um let's see
106:42 - if anybody's tweeted yeah look at this
106:44 - look at this people's miles are coming
106:46 - in
106:46 - i might have to clear that out like i'll
106:48 - clear it out after uh
106:50 - so it's definitely working um so
106:53 - now what else do i need um
106:56 - i need a get request
107:02 - let's add that i'm gonna
107:06 - put that stuff at the bottom here now
107:09 - um i want to send out the database
107:15 - so i believe um
107:21 - let me install express
107:26 - let me run the server if i go to
107:29 - localhost 3000
107:30 - api okay database find
107:36 - i don't need any of this i just this is
107:38 - i mean it's so much more complicated i'm
107:40 - not using a database okay
107:42 - uh little api here what
107:48 - what i exceeded the connection limit
107:53 - oh that's sad uh did i not destroy my
107:57 - streams is that the problem
107:59 - because i'm not going to worry about
108:00 - that right now
108:03 - i assume this will i will this will
108:07 - re-up in a second um
108:13 - okay now let me at least see if the
108:16 - visualization is working
108:18 - um okay so great so now i'm getting this
108:22 - here
108:23 - and i'm getting the number of uh miles
108:25 - that people have run
108:27 - um we're gonna add a little um well
108:31 - never mind
108:32 - um
108:37 - i will i will do some moderation later
108:40 - um and now let's see
108:44 - okay so now i just need a public
108:46 - directory
108:49 - and let's make a quick p5 sketch
108:58 - um index.html
109:02 - and then uh sketch style
109:07 - um he wrote negative one miles and
109:10 - skipped the minus
109:12 - that's interesting uh that's a good good
109:15 - bug bug report there
109:16 - uh let's get uh sketch.js
109:20 - and wrap this up people uh
109:26 - sketch.js
109:28 - and um let's get rid of the style sheet
109:33 - i don't need the sound library
109:36 - and then what i'm going to do in
109:40 - sketch.js
109:42 - this is going to be i mean i want to do
109:44 - something with an interesting
109:45 - visualization but i'm just going to say
109:47 - fetch api um
109:50 - okay like visualize
109:57 - visualize visualize
110:00 - this will be an async function
110:04 - and i'll say await and then we'll say
110:08 - response equals await
110:11 - fetch api
110:14 - and then uh miles equals response.json
110:20 - um await
110:24 - and i can actually just get the people
110:26 - from it
110:29 - why do that not and then
110:37 - say names object got keys
110:41 - people
110:45 - and then i want to sort that
110:50 - by a dot miles minus b dot mi i want to
110:53 - sort them in
110:54 - order of miles maybe um
111:00 - i don't know what is going wrong with my
111:04 - then four let i equal zero
111:08 - i is less than names.length i plus plus
111:13 - um
111:17 - and um uh let's get the
111:20 - create div
111:25 - names index i people
111:30 - index names
111:36 - uh ran
111:42 - people.names
111:46 - so this is okay so let's see
111:53 - so in theory now if i very briefly
111:58 - um
112:01 - grab
112:05 - so i have this list in my miles.json
112:09 - file
112:11 - and if i go
112:14 - to whoops oh i need to serve the public
112:16 - directory
112:18 - um which is
112:24 - did i have that already
112:28 - oh i am i already have that okay so i
112:30 - should be able to go
112:32 - to now just
112:36 - uh oh let me rerun the server
112:40 - oh it's listening again that's great
112:43 - [Music]
112:45 - and now if i go to here
112:49 - a weight is only valid in async function
112:57 - oh i don't need the away
113:02 - there it's fine
113:05 - where's my syntax error
113:08 - it doesn't like this for whatever reason
113:22 - just do that for right now
113:29 - where is my syntax error
113:36 - oh by the way i don't know what i'm
113:38 - writing here
113:40 - so
113:46 - where is my syntax error async function
113:50 - it's making me crazy
114:06 - back tick line 12.
114:10 - ah thank you there we go
114:16 - this should work right
114:20 - yeah that's fine okay
114:25 - data is not defined where okay
114:31 - okay create div
114:48 - people
114:50 - okay
114:56 - [Music]
115:02 - people
115:04 - oh i don't need the dot miles what am i
115:06 - doing there there's no
115:08 - there's no uh each person is not a large
115:10 - okay
115:12 - there we go oh i want to say miles
115:15 - ah so confusing period
115:22 - all right uh why is it undefined
115:28 - people oh names index i
115:33 - let's use this let name of names
115:41 - name people name ah there we go
115:45 - and it's uh b minus a
115:50 - there we go so obviously this isn't
115:52 - really a i should do some kind of
115:54 - progress visualization
115:55 - something really nice but we've got it
115:57 - so
115:58 - uh in theory now um and
116:02 - i'm gonna uh the internet you're so
116:05 - annoying
116:07 - i'm gonna add something to make certain
116:09 - numbers
116:10 - be blocked because the immaturity of the
116:13 - internet never ceases to
116:14 - uh amaze me
116:18 - so now uh let's deploy this
116:22 - so um
116:26 - and i think i should i need to do a dot
116:29 - get
116:30 - ignore and so git ignore should ignore
116:34 - dot env
116:36 - it should ignore node modules
116:39 - and it should ignore
116:47 - it should ignore what else um
116:50 - should it ignore the database yes so
116:52 - it's gonna ignore the database
116:55 - so unfortunately i'm going to also need
116:58 - to then
116:59 - say here in the server
117:06 - if miles
117:16 - i think i can do file exist or exists
117:21 - exist sync miles.json
117:26 - if if
117:32 - if it exists
117:38 - um
117:43 - i think this is what i want to do let's
117:46 - get rid of this
117:49 - file delete
117:56 - i think this will work
118:00 - uh
118:04 - 11 line eleven oh
118:07 - oh whoops
118:22 - i think this is now what i want to do
118:25 - okay so did it create the file oh no
118:28 - it'll create the file hopefully once
118:36 - somebody tweet something
118:40 - let's see what happens
118:57 - okay we got an error
119:02 - oh right of course well what happened
119:04 - here
119:05 - i've run 21 miles cannot set property
119:13 - index.js line 43
119:20 - oh there's
119:28 - because i made i i i have this structure
119:30 - like this
119:32 - so i think this is what i need to do
119:39 - yep okay we're good so we'll create that
119:43 - uh great all right so we'll create that
119:45 - file
119:48 - um and now i can
119:58 - no wait why is the dot env in there
120:08 - oh i put it in public
120:13 - ah
120:18 - ah help everybody
120:23 - move it yes
120:30 - okay so this looks good to me right now
120:44 - oh how do we do that like um
121:04 - is it because i haven't committed
121:06 - anything
121:17 - created app during live stream
121:27 - okay great
121:31 - okay okay so now
121:36 - uh we're going to go over to coding
121:39 - train
121:42 - we're going to create a new repo
121:45 - i'm going to call this
121:48 - gump 500. uh
121:51 - public tracking
121:56 - forest gump 500 mile
121:59 - files miles uh public
122:03 - um create repository
122:09 - and then we need to
122:15 - do this
122:19 - and then this
122:25 - um i need to create an invi env.sample
122:30 - um so hold on everyone i'm so close to
122:34 - showing my
122:34 - env file by accident uh env
122:38 - a sample
122:50 - um and now i can bring you back
122:54 - so this is an env sample file
122:58 - uh and i'm gonna say
123:08 - all right so i think
123:12 - next step would be
123:17 - next step is to go to glitch which is my
123:20 - deployment methodology du jour
123:25 - and i'm going to do new project import
123:28 - from github
123:30 - and i don't love the way this works but
123:31 - i'm going to just do it this way
123:33 - i want to figure out a better way of
123:35 - doing this but
123:37 - um i'm going to do it this way for right
123:41 - now
123:44 - we're going to import the project
123:58 - i'm going to call it uh
124:03 - gump 500.
124:12 - um and uh
124:15 - i think
124:18 - so i need all this in the dot emv file
124:24 - um let's look at the logs it should be
124:27 - giving me lots of nice errors
124:31 - start script is missing
124:34 - so i need
124:39 - this what's really annoying about this
124:40 - now is i want to make some changes here
124:43 - and there's not really i probably should
124:45 - just deploy this
124:46 - somewhere else there's there's really
124:49 - not a great way to use
124:51 - github and glitch and develop locally
124:55 - i probably what i probably should do is
124:57 - use the vs code plugin for glitch
125:00 - but just for right now i'm just going to
125:02 - say start just to get this going
125:06 - node index.js i think that's what i do
125:11 - um so
125:15 - now it's should be installing the
125:16 - packages
125:18 - i'm going to get get the correct um
125:24 - api keys and put them in here but so i'm
125:26 - i'm taking you away
125:28 - so i'm going to do that right now so
125:30 - going to my actual
125:31 - env file and copying that over to glitch
125:37 - closing out of that and closing out of
125:41 - it here
125:42 - okay so it is now
125:49 - um let's show the project
126:00 - um
126:04 - so i think
126:09 - is there oh it hasn't written the
126:11 - miles.json
126:12 - file probably because it needs a tweet
126:20 - so i'm going to tweet from my
126:24 - actual account no you know what i'm not
126:26 - going to do that right now i'm going to
126:27 - keep using this
126:36 - hey 16 miles or
126:39 - choo choo
126:51 - so now okay i got it
126:58 - oh it's not gonna no
126:59 - [Music]
127:01 - got it right here we go
127:05 - look at this okay it's working
127:10 - all right so uh i mean i have to i have
127:14 - to manually refresh this
127:17 - but we can see that um we can see that
127:20 - this is working okay
127:21 - so i'm gonna put this aside
127:25 - um this is what i would would love for
127:28 - any help with
127:30 - um uh i would gladly accept
127:34 - where is this github repo pull requests
127:37 - here
127:38 - to first of all help document what this
127:40 - project is in a readme
127:42 - um help do a better job
127:45 - of like error handling and parsing the
127:48 - tweets and authenticating it
127:50 - maybe i should check whether someone ran
127:53 - is adding to their
127:54 - total or offering a new total i don't
127:57 - know what would make sense
127:59 - um actually it would probably make more
128:02 - sense for me to use
128:04 - not a json file but like a database and
128:06 - data service in the cloud or something
128:07 - just so
128:08 - like i can sort of disconnect and have
128:11 - that be part of the
128:11 - env file like codes to a particular
128:13 - database and that way as i'm like
128:15 - redeploying it to glitch i don't have to
128:17 - like worry about if i'm losing the data
128:20 - so there's a lot of um
128:23 - there's a lot of possibilities um of
128:25 - things
128:27 - um that i think that that could be
128:28 - improved here so we'll see if this
128:30 - project catches on
128:32 - um and has any value um
128:37 - yeah i actually am starting to think
128:38 - that separating the
128:41 - twitter parsing from the front end might
128:43 - make sense because i don't really need a
128:45 - server i don't know
128:46 - so i i i leave this now to the wonderful
128:50 - people viewers of the coding train to
128:52 - jump on in and help work on this
128:55 - um and we'll see where this leads and
128:57 - then
128:58 - if it starts working well i might um
129:01 - actually see if we can um talk to
129:04 - um the folks who are organizing the gum
129:06 - 500 and make this something more of an
129:08 - official
129:09 - uh thing and i will return to it more um
129:11 - all right
129:12 - so that is that it is 11
129:15 - 38. i'm going to be wrapping up now
129:19 - let me close out all of these windows
129:24 - [Music]
129:26 - and we'll sort of like see what's going
129:30 - on here look at this oh look at this
129:32 - that's a lot of miles loku ad uh close
129:35 - that
129:36 - oh i didn't um that's fine i didn't post
129:40 - the glitch
129:44 - um we go sorry let me go back to glitch
129:47 - just so i can give people this app
129:49 - if they want to um
129:53 - gum 500 so
129:56 - uh share what do i do share
130:02 - show where's the share
130:06 - button uh remix new project
130:11 - switch project this is like crazy that i
130:13 - can't find
130:14 - where i share it losing my mind
130:27 - share there it is nice button there uh
130:30 - oh project links live site
130:33 - project members well i guess this is
130:35 - what i i thought there's like a link to
130:38 - the
130:38 - like a project page um which is sort of
130:42 - silly for me to be looking for that
130:44 - because these are the important things
130:46 - but anyway i will
130:48 - uh just share to discord um
130:52 - this is the glitch project
130:55 - and then but that's it might be a
130:57 - temporary deployment
130:59 - and then the um
131:04 - this is the actual um github
131:08 - whoops github repo
131:11 - okay so those are fine though you can
131:12 - find those in discord so now
131:16 - this has been a long live stream if you
131:19 - want a github to production deployment
131:21 - you can use reversal okay
131:23 - which needs a bit more configuration but
131:26 - can work with server apps and you can
131:27 - easily connect real databases to it
131:29 - easily heroku works pretty well for this
131:31 - kind of thing
131:32 - okay so that's uh says violet so these
131:34 - are good suggestions i really like
131:36 - glitch so i kind of like the idea of
131:40 - using it but maybe i need to rethink
131:43 - how i use it and when i use it
131:47 - so but yes maybe looking into versal or
131:50 - heroku
131:51 - are things that i might also take a look
131:53 - at thank you for those tips
131:57 - a date dot now is good yeah adding a
131:59 - date with um luan
132:01 - and other and in the chat or talking
132:04 - about adding a date a graph over time
132:07 - to so many pos there's a ton of
132:08 - possibilities um
132:10 - you know the i think a big core question
132:12 - here is
132:14 - um to what extent is the sort of
132:17 - self-reporting
132:19 - aspect of this going to fly
132:22 - like you know on the one hand the point
132:24 - of doing this is not to like
132:26 - there's no prize the the the
132:30 - what you get from actually participating
132:33 - is the fact that you actually ran those
132:34 - miles so reporting that you did if you
132:36 - didn't gives you nothing
132:38 - just ruins it for yourself and for other
132:41 - people
132:42 - so i think that it can work but um you
132:45 - know
132:46 - and i didn't i don't want to go down the
132:47 - road of like you know using runkeeper
132:50 - using strava and then upload and
132:51 - authenticate and oh off this and like
132:53 - upload your data it's just too much
132:55 - so that's why i thought like a hashtag
132:57 - for self-reporting being able to
132:58 - aggregate that information visualize it
133:01 - it's kind of a nice way of doing a quick
133:04 - project like this
133:05 - so that's what i'm thinking um we'll see
133:08 - i'll return to this we'll we'll
133:09 - revisit it next week so what's what else
133:11 - was on my list
133:13 - from today where's my list from today i
133:16 - have to point so far
133:17 - back in the chat there's no way i can
133:19 - pull that up again
133:21 - um okay so i should have just copy
133:24 - pasted it into like a text file or
133:25 - something but i'm gonna put this away
133:28 - why is this showing up as green
133:31 - because it definitely should be okay
133:34 - that's fine
133:35 - um let's close all this out
133:39 - i know where i can get my list i'm gonna
133:41 - bite the bullet
133:44 - and just go to youtube the coding train
133:48 - and pull up this by the way do you like
133:50 - my new thumbnails
133:51 - i like this on the some thumbnail oh
133:53 - look it shows
133:54 - this live and on here there like that uh
133:57 - okay
133:58 - um ah and so now
134:01 - let's see what did i not get to
134:05 - all right so um this is i'm not gonna
134:08 - check in on the live poll
134:09 - um you know i do have a very bad habit
134:12 - it would seem of starting these kind of
134:14 - like
134:14 - community projects like now this gum 500
134:18 - one
134:18 - the random number one like leaving them
134:20 - to languish the live poll is somewhat in
134:22 - that state
134:23 - but i i will come back to using it at
134:24 - some point when i need to have a poll
134:26 - but let's let me now plan what's
134:29 - happening
134:30 - in 2021 so i'm going to go here to this
134:34 - so this is a file that i made i might
134:37 - have updated it
134:39 - i updated i guess on october 11th but
134:41 - i'm pretty sure i made this at the
134:42 - beginning of september
134:43 - and so i essentially want to oops
134:47 - uh grab everything from here
134:51 - and i want to create a new file
134:57 - um add file create new file we'll call
135:01 - this
135:02 - spring 2021 i could just dot md
135:08 - and i am going to
135:11 - [Music]
135:12 - paste all this in there and start to
135:16 - go through and figure out
135:21 - what i want to keep that i didn't get to
135:24 - and what will just sort of come back
135:28 - another time i'm sort of curious also to
135:31 - do an accounting of what i did
135:33 - um okay so which i really should do if
135:36 - somebody wants to help me out here
135:38 - um i i could i probably should do this
135:40 - live but
135:41 - um i would like to then annotate sort of
135:44 - annotate and archive that fall 2020 file
135:48 - um and but sort of mark what was done
135:50 - and what wasn't done so i could refer
135:51 - back to it later but i'm gonna do that
135:53 - here so basically i'm gonna i don't
135:56 - think that i'm going to
135:58 - keep much here although um
136:02 - [Music]
136:03 - i do know that what will come up
136:05 - eventually is
136:07 - neuro neuro evolution with um ml5.js
136:12 - but i did do object detection i never
136:14 - ended up
136:15 - doing videos on body pics i did
136:19 - model training did i do
136:22 - did i make something with json or cs
136:24 - video i don't remember i did some more
136:26 - convolutional neural network videos
136:28 - that's awesome
136:30 - runway never really got to the runway
136:32 - videos
136:34 - um i think what would be nice to keep
136:37 - from here
136:38 - is um and i think people have asked for
136:42 - is layton space walk
136:47 - so maybe i can um and
136:51 - you know there's there's more that i
136:52 - would come to but
136:54 - uh so i'll leave that there
136:58 - a to z is kind of now
137:01 - oh but let's see i i know what to call
137:03 - these i'm going to call them um i think
137:04 - this is somebody
137:05 - i bet you somebody else uses this name
137:09 - i want to make i want to start a new
137:11 - series of videos that are no more than
137:15 - uh what's a train what's a train
137:19 - name local stops
137:23 - express stops express stops maybe
137:28 - i want to make a lot of really really
137:31 - short um
137:32 - short videos like five minutes or less
137:34 - on like sort of javascript
137:36 - uh javascript language topics that i
137:39 - constantly uh refer to
137:43 - and the reason why i thought this fixed
137:44 - global npm permissions is kind of
137:47 - related to that but let me quickly make
137:48 - that list and people can give me some
137:52 - uh additions to this so but off the top
137:55 - of my head
137:56 - it is enhanced object literals
138:01 - object destructuring
138:07 - um a um generator functions
138:14 - a string template literals is that even
138:17 - the name for it
138:18 - so i want to do these and more uh
138:21 - express line i like that javascript
138:23 - express line
138:26 - um okay so
138:29 - that's something that i really want to
138:30 - do this year um
138:33 - and so so i'm bringing that up so i'll
138:36 - put this up here i don't know where to
138:37 - do it i never did this
138:39 - i did do this i did use the tenor
138:43 - uh okay discord bots
138:48 - so i do want to finish the discord bot
138:50 - series
138:51 - um i am using an api
138:57 - and i think i might use the movie db
138:59 - this is an api that i started working
139:00 - with for another project and it's kind
139:02 - of fun
139:03 - so that's just to sort of expand on the
139:05 - command handler
139:07 - deal with the new slash command
139:11 - i've made this command handler video
139:13 - that hasn't come out yet
139:15 - where i'm parsing all the commands with
139:16 - an exclamation point and from what i
139:18 - understand there's a new
139:20 - uh discord now has a new sort of like
139:22 - way of having commands with a bot
139:24 - using slash so i have to like look at
139:26 - that and then
139:27 - uh in embed
139:31 - embeds i don't know how to say that um
139:35 - fractal flame i want to do that
139:38 - i still need to do this side projects
139:43 - these are i want to keep this vinyl
139:45 - cutting and plotter
139:46 - on the list um
139:50 - uh guest this is a great question that
139:52 - uh
139:53 - okay week one is asking about non-secret
139:55 - guest plans
139:56 - so it's not that any of the guests are
139:59 - secret
140:00 - but because nothing is like really
140:02 - formally confirmed yet i would prefer
140:04 - not to mention it until it's like
140:06 - but i do have uh two or three uh guest
140:09 - conductor videos that are
140:11 - in the works and you know it's really my
140:13 - fault that a lot of these didn't
140:14 - happen in december it's been a sort of
140:16 - slow process but
140:17 - that is coming thank you for asking that
140:19 - uh
140:20 - okay um
140:24 - so there's that and then uh and then
140:27 - what is the main
140:31 - content is
140:34 - the nature of code 2.0
140:37 - so let's just look at this very
140:42 - quickly
140:44 - simon is saying call them javascript
140:46 - bytes
140:47 - if i want to keep them less than 256
140:50 - seconds that's kind of a cool idea
140:52 - kind of like this idea uh i'm pretty
140:54 - sure that like somebody i'm sure
140:56 - somebody has
140:57 - a series called like javascript bytes
141:00 - video
141:01 - series or something you know when
141:03 - javascript bytes
141:05 - tech bytes right so i'll consider the
141:09 - only thing i don't like about that is
141:10 - it's not train related but let's
141:12 - let's go to nature of code to playlist
141:16 - all right lastly let's go to here so
141:19 - this is the course that i'll be teaching
141:21 - at nyu i actually might be using an lms
141:25 - system for the course
141:26 - but regardless i will sort of post sort
141:28 - of core material to this github repo
141:31 - um but looking at this now
141:34 - um you know again i have to register my
141:37 - utter disappointment and sadness
141:39 - about how youtube basically got rid of
141:40 - the whole learning playlist
141:42 - um because i no longer have this like
141:45 - great
141:47 - um
141:50 - uh like playlist with chapters um do i
141:54 - have it here
141:55 - that's one of the main things that show
141:56 - i don't know why how it doesn't show up
141:58 - on this
141:59 - page i gotta reorient this page
142:01 - playlists
142:03 - um let's go to
142:08 - yeah this is what i'm looking for it
142:08 - does say
142:11 - whoops close it does nicely still say
142:15 - learning playlist
142:16 - there so the only feature that youtube
142:18 - kept
142:19 - and to be honest the very thoughtful
142:21 - wonderful people who worked on this and
142:23 - i i you know i i there's so many things
142:25 - about uh
142:26 - the people who work at youtube that i
142:28 - love and appreciate
142:29 - and you know i understand didn't really
142:32 - take off i suppose or
142:33 - add the value that they were hoping for
142:35 - really really drives me crazy that it's
142:37 - gone
142:37 - so there's 21 if i go here i'm just
142:40 - going to click on this
142:43 - so this is what i started last spring
142:46 - and i got kind of interrupted by the
142:47 - pandemic
142:48 - so i need to look here and see like i
142:50 - have all the
142:51 - a whole set of videos for chapter one
142:55 - i have a whole set of videos for chapter
142:57 - two and i think this was
143:00 - i don't think i left
143:03 - any additional there was one i have to
143:05 - check with matia there was sort of like
143:06 - another
143:08 - video that i think i recorded and we
143:09 - sort of were editing and never actually
143:11 - released
143:11 - so there might be a 2.6 there somebody
143:13 - can help me remember do i say anything
143:15 - at the end of that video about 2.6
143:17 - but i definitely need to do uh chapter
143:20 - three
143:24 - chapter three um so what's in chapter
143:28 - three
143:29 - um like oscillating motion
143:33 - angles radians
143:37 - angles angular motion
143:40 - polar coordinates i have some of these
143:42 - videos already but i think i will remake
143:43 - them
143:45 - uh and um
143:51 - let's go look i don't i don't know how
143:53 - detailed i'm gonna make this right now
143:55 - but i just wanna sort of like scan
143:56 - through this
143:58 - um yeah also springs pendulum springs
144:01 - yeah that's what i was kind of trying to
144:02 - remember
144:03 - waves pendulum and springs i've made
144:06 - some of the
144:07 - so where where am i here uh waves
144:10 - pendulum springs so that's
144:14 - chapter three chapter four
144:17 - [Music]
144:18 - i think i did these
144:21 - enough completed previously because i
144:24 - did a bunch of videos
144:26 - on particle systems so we'll have to see
144:28 - what i need to return
144:31 - to there chapter 5 uh
144:34 - mater.js oh no no but i think i'm
144:38 - reordering the book
144:41 - um i think i'm doing a ton so i'm gonna
144:44 - i'm not sure what i'm gonna do about the
144:46 - physics libraries i might
144:49 - so i definitely need to do um i think
144:52 - i'm reordering the book by the way
144:54 - so chapter 5 is going to be
144:57 - autonomous agents
145:02 - so this i need to do steering behaviors
145:05 - [Music]
145:09 - and i have a flocking coding challenge
145:10 - but um there's just more that i need to
145:12 - add
145:13 - individual group so
145:16 - i just want to add more to that chapter
145:19 - six
145:20 - uh physics libraries
145:27 - um a lot of so this is like
145:30 - right now chapter three really has to be
145:32 - done i have in chapter five
145:34 - so if i were to make i don't know how to
145:36 - prioritize these but i guess i'll use
145:38 - like
145:39 - bold is that bold i can't remember i
145:42 - think that's bold
145:43 - um so these are priorities
145:48 - because there's nothing not nuts i don't
145:51 - know how to think about this i'll just
145:52 - make the list
145:54 - uh chapters
145:59 - um chapter
146:02 - seven autonomous ca
146:06 - i'm just gonna make the whole list this
146:08 - is right now
146:11 - chapter because i really need to wrap up
146:13 - it's noon chapter eight
146:16 - is uh fractals i mean i just want to
146:18 - expand these and organize them
146:20 - and and make a playlist that includes
146:21 - some previous videos that i made some
146:23 - ancillary stuff around it so i'll have
146:25 - to like look at these individually
146:28 - um the gas the genetic algorithms it's
146:31 - really uh
146:34 - completed uh
146:40 - not sure what to do about this
146:46 - and then chapter 11 is the new chapter
146:48 - neuro evolution
146:49 - so this is really kind of my plan and
146:52 - what i'm hoping
146:53 - is that so khaled is asking in the chat
146:58 - um are those video tutorials or book
146:59 - chapters so i am
147:01 - going to be working on updating and
147:03 - revising the book and hopefully by the
147:04 - end
147:05 - of i don't know june having the second
147:07 - edition of the book completed
147:09 - so um and i'm going to make video
147:11 - tutorials along with that
147:13 - and my goal is to have the website have
147:16 - both
147:16 - all of the text of the book along with
147:18 - video tutorials embedded in it
147:20 - so and to completely relaunch this
147:22 - website and
147:24 - this is a huge project i don't know how
147:26 - i'm going to what's going to end up
147:27 - being the priority how i'm going to
147:28 - approach this and what's going to really
147:30 - get done but this is really this is my
147:32 - focus
147:33 - so um you know as much as i'm making
147:36 - this list of all sorts of other stuff
147:39 - you know i kind of don't want to i want
147:40 - to
147:41 - be able to like tie a little bow around
147:43 - the discord box to like
147:44 - finish that off i want to keep doing
147:48 - coding challenges and some of these side
147:50 - project things
147:51 - and i i think that these like little
147:53 - quick express stop videos could be
147:55 - really useful and it would be a nice
147:56 - experiment so
147:58 - i want to do all of that but um
148:01 - [Music]
148:03 - uh so but this is really this is really
148:05 - the focus so i think i'm gonna like
148:07 - leave this this is like a helpful
148:09 - list for things for me right now for
148:11 - what i want to focus on and do
148:13 - um pull out
148:17 - ideas and things from a nature of code
148:21 - book so that's what i'll do with the
148:23 - coding challenges you know simon did an
148:25 - accounting
148:26 - like that coding challenges playlist
148:27 - which is really the most popular series
148:29 - of anything that i do
148:31 - like that's that in many ways when i was
148:32 - first
148:34 - starting the youtube channel i had
148:36 - making video tutorials previously to
148:38 - that
148:39 - the coding challenges were the main
148:40 - thing and there were like 50 done in a
148:42 - year
148:43 - or more and i think last year i added
148:45 - like six and a lot of them are kind of
148:47 - not
148:47 - really in the style of what the coding
148:49 - challenges were originally envisioned so
148:50 - i
148:51 - i would like to get back to that in a
148:53 - way though that might have to wait until
148:55 - the summer
148:56 - if i'm really going to just more focus
148:58 - on this sort of like sequenced
149:00 - set of tutorials um mukesh is asking is
149:02 - there any video on p5 sound oh
149:05 - thank you this is exactly what i also
149:08 - need to do
149:09 - look at is intro
149:12 - uh code introduction to
149:16 - programming with p5.js i need to i
149:20 - i think some of those videos have fallen
149:21 - a bit out of date
149:23 - um and i need to be able to
149:26 - um also update them so let me go back to
149:31 - uh playlists um
149:34 - uh back to coding train playlists
149:37 - and i'm looking for
149:39 - [Music]
149:43 - um can i close this out here
149:46 - not this one
149:52 - so this is by the way um why i have this
149:56 - website you know because this is what i
150:00 - want to
150:00 - read i guess i could look at it through
150:02 - here sometimes i find being on youtube i
150:04 - one thing that would actually be great
150:05 - for the website
150:07 - in addition to the i i don't um there's
150:09 - a lot of things having to be redesigned
150:11 - here but
150:11 - it might be nice actually to just always
150:13 - have a link to the youtube version of
150:15 - the playlist
150:16 - because sometimes it's easier for me to
150:17 - browse there
150:19 - [Music]
150:20 - but if i'm looking at this i basically
150:23 - think that once i get to here variables
150:27 - um so these this is where i want to
150:30 - start redoing them
150:32 - um
150:32 - [Music]
150:36 - i'm trying to look here so many
150:40 - i mean but i might be able to just knock
150:42 - all this out in a day
150:44 - yeah actually oh somewhere i use circle
150:47 - there's somewhere where i use circle
150:48 - actually i think i redo
150:51 - almost all of this no can't be right
150:56 - so i'm not sure so
151:01 - these were made in 2015
151:04 - uh i think yes so i need to make a list
151:07 - so i um
151:09 - where's that stupid playlist
151:16 - uh will this get will this find it
151:21 - no yep the trailer
151:26 - all videos there we go so this
151:36 - so i think i need to do looking at this
151:39 - yeah not this one 2.1 to 2.5
151:44 - so it
151:50 - redo
151:53 - [Music]
151:55 - 3.1
152:01 - 3x 4x 5x
152:10 - um 3x
152:15 - 4x
152:18 - oh yeah this um
152:23 - and you know i might rethink how these
152:25 - are i think these are okay
152:27 - i think i there's somewhere where i say
152:29 - circle object and that doesn't work
152:31 - anymore but maybe that's
152:32 - actually um where i'm doing something
152:35 - with like object literals somewhere i
152:37 - don't remember where that is
152:39 - um and then maybe these are okay i can't
152:42 - remember
152:42 - i don't think they're using the web
152:45 - editor
152:45 - but i think that's kind of okay
152:48 - so i think i'll make that my goal and
152:51 - kind of leave oh
152:52 - 7.1 7.2 i should redo those
152:59 - and then so i think this will be a
153:01 - realistic goal
153:02 - 7.1 7.2 so i think these are the ones
153:06 - that i um want to redo so okay
153:13 - good for right now um
153:16 - i'm just going to commit this file
153:21 - um we should redo this this should use
153:24 - the new convention of
153:27 - i'm gonna you know i might mess up too
153:29 - much stuff by doing this right now so
153:31 - i'll do this later
153:32 - um so there we go
153:36 - so this is now the plan now schedule
153:38 - before i leave i'm gonna leave in just a
153:40 - few minutes
153:41 - um but um
153:45 - before i go that's noon i definitely
153:47 - gotta go
153:49 - my goal is to have
153:52 - weekly live streams which is essentially
153:54 - what you saw today i didn't do too much
153:56 - goofing off
153:57 - or reading of random numbers or looking
154:00 - at community contributions those will be
154:02 - segments that i hope to do um during my
154:04 - live streams
154:06 - um today was just sort of a get
154:08 - organized say hello live stream
154:10 - um and then um
154:14 - what uh and then i will be doing pretty
154:17 - regular like multiple times per week
154:20 - hopefully tutorial recording sessions so
154:23 - if you've been thinking about whether or
154:24 - not you want to join
154:26 - the coding train as a member and you can
154:27 - go to
154:29 - the channel hit the join button um
154:33 - those recording sessions uh will often
154:35 - live broadcast those available to people
154:37 - who are members
154:38 - so for those who remember stay tuned i'm
154:40 - hopefully going to be starting to do
154:42 - that next week
154:43 - where i'll be i don't know what i'll
154:44 - start with whether it'll be
154:46 - chapter 3 uh 2.1 to 2.5 redo
154:50 - the new um express stops idea or finish
154:53 - the discord
154:54 - but those are the things that i'm
154:56 - hopefully going to do two days next week
154:58 - of recording stuff so um
155:01 - thinking about how long it takes to do
155:03 - um editing
155:04 - and captioning um hopefully there'll be
155:07 - lots of new videos being released on the
155:09 - channels
155:10 - by the end of the month um but prop but
155:13 - i'm i'm no long i'm most likely not
155:14 - going to be doing weekend live streams
155:16 - anymore
155:17 - oh thank you niraj uh you can see my
155:19 - lights are blinking over here
155:21 - um i um
155:26 - what did i want to say i lost my train
155:28 - of thought
155:31 - i i think well ideally this time slot
155:35 - friday mornings will be my live stream
155:38 - weekly time slot i'm probably gonna do
155:39 - about three per month i might take some
155:41 - fridays off
155:42 - to get more just tutorial recording in
155:44 - frankly
155:45 - because i really want to get all this
155:47 - nature of code stuff done
155:48 - so my goal is three live streams per
155:50 - month one or two recording sessions per
155:52 - week
155:53 - um we'll see how that goes one guest
155:56 - video per month
155:57 - that's like a nice sort of like a goal
155:58 - for me um we'll you know at least
156:01 - through june we'll see what happens this
156:03 - summer um
156:05 - but um so yeah so next friday that's
156:08 - when i'll be back
156:09 - i might switch the the weekly live
156:11 - stream to a different time
156:12 - because fridays might actually not work
156:14 - but that's kind of my plan
156:16 - so i hope everyone's doing well i hope
156:18 - this was somewhat useful or interesting
156:20 - to you today i welcome again your
156:23 - contributions
156:24 - on um this gump 500 project and i
156:28 - also need to put
156:32 - this sketch um onto github
156:36 - um so people and we'll host it with
156:37 - github pages probably
156:39 - so that people can uh contribute to this
156:42 - um
156:42 - generating the train whistle design um
156:45 - project as well all right ah
156:48 - reinforcement learning yeah q
156:50 - learning let's put thank you for that
156:52 - let's see if we can put
156:53 - um onto this list you know this is kind
156:56 - of a
156:57 - uh this is a stretch goal seems unlikely
157:00 - got to get rid of that full-time day job
157:04 - uh reinforcement
157:07 - learning q learning there's an nyu
157:09 - student
157:10 - who is a coding trained viewer who then
157:12 - went on to apply to nyu is now at nyu
157:15 - who has been sending me some really
157:16 - excellent tutorials and examples with
157:17 - cue learning i think could be a good
157:19 - model
157:20 - for um some video tutorials all right
157:23 - um i'm gonna play my goodbye song which
157:26 - is about uh
157:27 - three minutes long i'm gonna sort of
157:28 - keep an eye on the chat see if there's
157:30 - any quick questions i can mention
157:32 - and then otherwise i'll be back a week
157:33 - from now
157:35 - don't forget to join the discord
157:42 - i'll paste the link i mean i'll press a
157:44 - button here which will send a link to
157:46 - the chat um oh the dog really needs to
157:49 - go for a walk
157:51 - so i've got to go oh i forgot i have a
157:54 - new prop
157:54 - [Music]
157:56 - like just like my bell with my train
157:58 - whistle
158:00 - this one i'll put it near the mic
158:04 - i think i should use this instead of the
158:06 - bell i don't know what i should use it
158:08 - [Music]
158:12 - for
158:16 - yeah here's simon's uh accounting of
158:19 - all the coding challenges 2016 47 1741
158:24 - 1841 1926
158:27 - you know i think i think exceptions can
158:30 - be granted for
158:31 - 2020 what a year that was uh three
158:36 - playlist whoops on uh
158:41 - p5 play i don't know is p5 play still
158:44 - actively maintained i'm not sure
158:47 - hi chris hi nolan yes i remember you
158:51 - donated
158:53 - uh andrew is saying new content is
158:56 - always great but nobody should sleep on
158:58 - your old content yes
159:01 - say hello on behalf of all of us to
159:03 - pickles well i don't know actually we
159:05 - call her pickle
159:06 - but i think the name pickles is actually
159:08 - pretty great
159:10 - [Music]
159:12 - use the sound when i make a commit
159:14 - [Music]
159:16 - it's a good idea more music
159:20 - in 2020 100 on the coding train will
159:23 - from america
159:24 - helped me put together some stuff for
159:25 - the processing telethon so i got to get
159:28 - back in touch with will
159:29 - and continue that
159:30 - [Music]
159:35 - i don't know i i feel like i was uh um
159:39 - a little less crazy today and just kind
159:41 - of like hanging out and
159:43 - typing stuff in and talking and chatting
159:46 - i don't know if people think of the vive
159:48 - i barely played any sound effects or
159:50 - music or did any goof
159:52 - goofy stuff so maybe this is the way the
159:56 - stream should be maybe i should get back
159:57 - into my
159:58 - more zany internet character
160:00 - [Music]
160:04 - well well this is the end of the song 10
160:06 - seconds to go i'm gonna
160:07 - take you out with this dot song and i
160:09 - will see you all
160:11 - next friday live on the coding train is
160:13 - when i'll be back
160:14 - all right goodbye everybody see you next
160:16 - week
160:18 - as always i always forget that this stop
160:19 - this stop it stop this stop i'm gonna do
160:22 - this stop this stop i'm gonna do this
160:24 - this stop this stop get stuck i'm gonna
160:26 - do
160:26 - this stop stop i just stopped
160:34 - [Music]
160:59 - [Music]
161:14 - this dot
161:22 - never forget this dot somebody composed
161:25 - that song for me
161:44 - [Music]
161:47 - i'm going to say once again here we go
161:58 - [Music]
162:00 - let's look forward to cartesian
162:10 - coordination
162:12 - [Music]
162:19 - autotune and the internet will fix that
162:21 - for me
162:32 - [Music]
162:48 - [Music]
162:51 - unicorns and rainbows and cupcakes what
162:54 - else
162:54 - is there yes kittens
162:58 - thank you very much kittens and rainbows
163:00 - and cupcakes notice that
163:02 - look what i get i'm really losing my
163:04 - mind
163:05 - okay let's do it
163:08 - [Music]
163:22 - [Music]
163:32 - [Music]
163:33 - the kittens kittens and kittens and
163:36 - kittens kittens the kittens the kittens
163:43 - and kittens the kittens and kittens and
163:47 - [Music]
163:49 - the kids
164:04 - [Music]
164:10 - [Music]
164:21 - i feel just sort of like a nice feeling
164:24 - of relaxation
164:26 - everything's gonna be okay today dream
164:28 - is not broken it has not frozen this is
164:30 - a
164:31 - this is a wonderful thing okay we're
164:33 - gonna do it
164:34 - i'm really getting to something i need
164:36 - my sound effects
164:46 - [Music]
164:57 - that was invalid syntax i forgot
165:02 - [Music]
165:06 - all sorts of text generation analysis
165:09 - things
165:10 - that i will use continuously over and
165:12 - over
165:16 - [Music]
165:26 - the kittens and kittens
165:39 - wait just at the last second it's the
165:41 - last second there's a new member
165:46 - hello and welcome member whose name
165:50 - i can't say because it's written in a
165:53 - another language with
165:54 - a character set that i don't know how to
165:55 - pronounce but welcome
165:57 - with a nice little beautiful watermelon
166:00 - uh i would say a little slice of
166:01 - watermelon
166:02 - profile picture welcome to the coding
166:04 - train your
166:06 - very own random number is
166:11 - ten thousand uh is anybody actually
166:13 - still watching this
166:14 - that's on it's on page 43 it is
166:17 - column one two zero one two three four
166:21 - five six seven column eight you should
166:24 - know that because it's
166:25 - the last column is column nine and it is
166:27 - row two thousand one hundred twenty it
166:29 - is
166:30 - ten thousand seven hundred and ninety
166:33 - eight
166:36 - so welcome i don't know if you're
166:38 - actually watching
166:39 - or if you just happen to join that's the
166:41 - thing i'll get the notification
166:43 - in the live chat whether or not somebody
166:45 - is watching or just
166:46 - um happen to join um
166:50 - through another means while i happen to
166:53 - be live streaming but you got a little
166:54 - extra minute with me here but i'm really
166:56 - saying goodbye now
166:57 - i'm gonna click this button that says
166:59 - end stream and i'll see you all
167:00 - next week goodbye
167:06 - whoops no end
167:09 - go here end
167:49 - you

Cleaned transcript:

stick do do good morning uh test one two uh testing my audio how does this sound lovely to see all of you in the chat from all over the world montreal albania texas waking up early in texas london korea vietnam wow let me know how my audio is and i will be starting up in just a minute or two do do good morning coming to you live from an attic in brooklyn new york it's me dan happy 2021 welcome to the first live stream of the coding train in 2021 all right ah okay i'm thrilled to see over here in my monitor that i look like a normal person well i don't know i don't look like a normal person but i look like a human being and the keying is working because as of about five minutes ago the sun was shining incredibly brightly through a window right over there and washing out everything but a cloud has passed which normally i don't think of as a good thing but uh looks like everything is looking good this morning hopefully you can all hear me and see me okay it is lovely to see so many people from all around the world in the chat and i'm just thrilled to be here on uh what is now uh january 8th 2021 at about 9 35 a.m eastern time now i um this has been a week uh i thought maybe we had put 2020 behind us but um it appears that 2020 the vibe of 2020 is carrying into 2021 quite a bit um i hope that everyone is doing okay that you're safe and healthy and warm and comfortable i know that people are facing so many different kinds of challenges all over the world in so many different ways and i hope that the coding train can bring something to you to at least lighten your day a little bit and that's what i'm here to do today so first what my goal for today as in this first live stream of the year is not to accomplish very much it's really to just set the table set the stage if you will for what i hope to accomplish i'm not a big fan of new year's resolutions and this is not a live stream of resolutions but it is will be this will be a live stream of planning i think it will get me it'll take a little bit of time uh for me to get really going in 2021 the first couple weeks of january a little tricky for my schedule kids are doing remote school at home just one floor down i'm hiding up in the attic they have nice desks downstairs uh in class we'll see if hopefully nothing will go awry uh while i'm up here live streaming um but um i i once i get kind of ramped up i hope to be producing a lot of content over the next few months and i'm going to talk about what that content will be today as well as do a little bit of clean up on a couple little remaining projects left over from 2020. i'm gonna take a peek over into the chat uh crings is making i saw this suggestion go by like four or five times and i really quite like it make connect four sounds like something in my wheelhouse i like to make simple games uh with simple visuals i like anything that's on a grid that's good um and uh two players um over uh over the network with sockets so there's a lot of um you know unfortunately there's a lot of great stuff and i love this idea so maybe i can add that to my list somehow um bavia is asking for me to please say their name which i just did while i'm also saying please don't ask me to say your name it's a little bit i always feel guilty that i can't do it and there's too many people asking so you know i prefer uh i will say people's names here and there i i hope that brings a little brightness to your day though um do a neural network marcus says with audio as a cnn please so one thing that i should say just generally speaking um yeah and this is a great i'm going to pull up this comment from uh christian vickmann one of my new year's resolutions is to is to really get the name pronunciation correct uh i'll come back to that in a second what was i saying uh ah yes so i'm not putting machine learning and ai behind me in the sense that it won't be part of my work or or videos or content that i'm exploring but i do want to table that for a little bit it was a major focus of the fall and i have other things that i want to focus on this spring which i will which i'm about to get to but um this is a you know i don't know if i want to just ride the popularity of whatever the whatever's the current hype train so to speak i think whenever i say train i just have to blow the train whistle right but making a coding train werewolf mafia among us game would be fun agreed agreed very much um i think that could be a great thing to do i would like to get back to the sort of coding challenges um simon i don't know if what you are showing me is your random number generator thing but if that's what it is i i will be showing that in just shortly uh simon uh is asking me to show a particular web editor sketch which i will bring up all right like thank you uh okay weekbond for that and now everybody's saying say my name in the chat okay what have i got in store let's move over to my laptop here um and let's just get started so first of all i don't know if you noticed new live stream thumbnail design so i don't know if you can see it anymore because i am live streaming but if you ever come to one of my scheduled live streams in advance you will see in the thumbnail a short list of possible topics so that's something you can look forward to for me helping sort of get organized with letting people know what's on the docket i also have put in the video description what i'm thinking of doing today so if only i had access to that then i would know what i was doing maybe somebody who's in the member discord could paste my list from the description into a chat message and then i could put it up on the screen because i don't know how else i would possibly get something that's on the internet up on my screen um but what i wanted to begin with today and um is nice audio noise reduction huh i haven't done anything different so solar liner says nice audio noise reduction i do have a new microphone which is this elgato wave product you know every once in a while i have sponsors here on the coding train i'm looking at you elgato got some key lights got a nice microphone love this stuff love stuff it's great and kobe has come through for me so let's bring that up here so let us let me first begin with this list uh which i am now i guess i could order it differently hold on let me move the disk stream chat down in my layers here boom there we go so now my head will go over it if necessary so topics for today so i want to talk oh i don't know where the sample i have a sample train whistle to show you i have a video that i'll show you so uh i want to talk about my obsession with random number generators and look at how i'm planning to create a custom unique random number generated piece of art for every member of the coding train and maybe eventually for anyone who wants to buy one or anyone anywhere in the world that could if i could gift one to everyone in the world i would sorry i gotta start you know it's kind of like a vaccine roll out i gotta prioritize i suppose um uh that's that's really not an apt um analogy here at all um but so i wanna i wanna look at that um i am i'm i love running and jogging it's a big part of my life it's one of the one of the few things uh um there are other things too that helps sort of helps with my mental health honestly if i um that's it's uh exercising and jogging in particular outdoors um and uh uh smarter every day um is starting an initiative oh my goodness we have our first member welcome to passengers brian gallaher first member of the new year you have won the opportunity for me to get out my random number book and to find within this random number book a very special beautiful singular unique random number just for you brian and it will be thirty thousand and twenty eight now we need i need a system this is the first experiment i need a system to keep track of that it's brian gallaher 30 0028 um let's see if somebody could put that as a message into the chat i'll bring that up on the screen as well because it will be highly relevant for just my first topic so um but back to what i was talking about i want to look at this initiative that smart every day is uh started called forrest gump 500 to run 500 miles in 2021 i can tell you right now uh drum roll uh please how many uh miles have i run place your bets place your bets everybody get your bets in place y'all bets i have to find my uh run keeper app i'm going to look at uh my stats and i have so far completed um in 2021 in my goal uh 3.2 percent 16 miles out of 500 miles so um i wanted to build something that could help aggregate people participating in this up um uh initiative to run 500 miles um and i think i could do it through twitter and and revisit my uh twitter uh library so when i get to that maybe people want to tweet at destin um if he wants to join um and sort of check that out and provide any feedback but i'm not getting there yet who knows if i will get to it because i'm very fame famously on the coding train i make a list of things to do and i pretty much get through the first one and i usually don't even uh finish it okay thank you we've got brian gallaher 30 028. so um bringing that up on the screen um and it says brain which i think is a typo but i kind of love it um i think um simone uh yertz uh famously named her brain or her brain tumor uh that that she uh went through uh an ordeal with um having surgery um brian now brian is being renamed to brain okay yes and prati and prati and simon have both created something for the random numbers that i will take a look at and i think those are great wonderful initiatives i might just for the way that i work need to sort of like start from a blank slate a little bit but maybe we can integrate those or combine them or have multiple uh multiple front ends to the same database of random numbers okay live poll checkin if i can get to that we'll see where that project is at and then really planning 2021 is probably the most important uh piece of today i will say just right now for those of you who are wondering about schedule is that i like that stig by the way suggested i can't unfortunately i can't um highlight youtube chat messages on my screen here only the member discord ones but um stig writes a member perk for personal md5 hash uh read out by dan i do like that idea uh wonderful suggestion for 2021 appreciate it okay um let's see where are we i'm going through my list uh and then uh my one of my new year's re again i'm not um not making new year's resolutions uh because the news resolutions are only but uh if i were to make a new year's resolution revisiting the fractal flame algorithm making a like probably a coating in the cabana video with the fractal flame um is something i would love very much like to do all right let's um let's start off with the planning aspect i feel like this is going to help me get going i think i don't know i don't know what i should do uh maybe i need to live poll which i should start with and like put on music um month on is saying you rocked in that collab music video with flammable man thank you i worked very hard on my little portion of that all right let's let me go straight into the um random number train whistle thing so give me a second here that's why i was putting this music on pull something okay okay um i think i can hide this for right now and come back to it okay so um what i'm showing you here on screen is a video that jason heglund sent to me jason heglund is the illustrator and designer for all of the all the coding trained characters um we have been working you know originally it was my intention using the laser laser cutters is that what they're called i don't even remember the laser cutters that i have access to at nyu to a laser etch these wooden train whistles and i had actually ordered i have a huge box of them that turned out to be pretty poor quality i uh they may um they're fine they're nice and hopefully i'll do something with them but i found a company in vermont that sort of hand makes um artisanal trade whistles if you will they're much nicer quality they make a beautiful sound i have one in this house where i live and it's not this one this is just a toy train whistle that i ordered off amazon um but i don't know where i put it um hey downstairs if anyone finds my crazy train whistle you could bring it up to me but it's not high priority just yup just yelling downstairs um so um so anyway that's what the the train whistle looks like and um you know with the pandemic i sort of haven't been going into nyu i could probably get back into doing this but jason did some experiments out in his shop um out in oregon when he lives and so this is a video that he sent me of the latest so i'll show you first you're seeing what you're seeing is the coding train characters etched onto one side and then uh now this is really what i want to highlight for you this is what is etched on another side so this is the random walk visualization with a little bit of code and if i zoom way in you'll see here if you can see this line of code says random seed and this is just a temporary placeholder one two three four five six so my idea is for um to etch in this little code snippet from a random walk with the uh members a random number right there along with this random walk visualization that was seated that will is a deterministic will always at least with the random number seating that is in processing or p5 or whatever i use always reproduce that exact result so this is currently and i've lost the youtube chat um this is this is what it currently looks like and i'll just show you like some other experiments i'm going to keep playing this video um you can see oh we were also experimenting with um i guess it's going to zoom in on it so let me let it go zoomed in okay so that's the random walk side this is a 10 print the 10 print design and then this is as you see the uh marching squares um design with uh i can't remember whether it's perlin noise or open simplex noise or whatever it is in the background so actually it would be great to use the live poll to have people vote on which side is their favorite i think i want to stick with the random walk visualization it's not the most elegant or beautiful design but it feels conceptually the closest to the sort of core ethos of the coding train and this sort of beauty or art or um visuals through and it doesn't have to be visuals but um this idea of creative expression through computation and starting with that sort of like just the very beginning first step is hey let's make stuff random so um so i don't know what people think about this um you know this has been a really long process i started sort of like working on this idea well over a year ago i think i have to go back look through my emails and messages so people have been very patiently waiting who sort of signed up to receive one of these but you can see that getting closer um so what i wanted to work on today actually is a website that both keeps people's random numbers um yeah and violet uh is noting that that they like the 10 print visualization i agree um and and you know well uh remains to be seen what the final design will be but the goal for today is first of all anyone could on this website type in a random number hit print and it would basically maybe get a pdf or an image of this design so you could etch your own train whistle maybe set the dimensions you know so i don't i don't want this to be limited to only people who are able to sort of pay for the membership but i will make the one you know jason and i and anybody else who collaborates will make the um the the custom trade whistle for um for the members so i want to build this website that both is a database of people's random numbers as well as letting anybody put their own random number in and generate their own design okay everybody with me you got it this is what i'm working on today um and then yeah so um so i found the code that i worked on briefly like a while ago when i was very quickly um sending jason samples to work with and i haven't actually looked at it so let me so we can see here i've got a folder here with uh and this must be yeah this is the random walk visualization i assume i think this is exactly what is on that whistle does that look like it matches to you um i tried a version that made a pdf actually oh that's interesting which one did we end up using the pdf or this is the 10 print design and then this is the um this is the marching squares design um so let's let's go with the random walk sort of see now why did i make a pdf now i'm not i'm stuck i'm flummoxed i'm stagnant well we can open them both up and see what the difference is i can't remember ultimately whether the system that jason is using with the particular laser is the etcher is using um a pdf or an image but either way let me let me do the image one because that'll translate better to p5 for right now anyway so i'm just going to go with that and um okay so this is no all right so the the aspect ratio for this particular design that fits on the whistle is uh i don't know why i wrote it this way it's kind of nuts 480 divided by two 1500 divided by two i think i was trying to get it to look smaller then i am running through is this one million points one million points oh that makes sense one million random numbers okay that's awesome that's conceptually tied yes it works i'm making a stroke weight of two drawing a point this the dot starts in the center and then um and then picking a random number moving x and y randomly uh drawing the point uh the next point and then saving it as a png and exiting so let's just run this and see what happens and then i'm going to pull up i'm going to pull up um where did we find this oh wait i got to get this here um we have the random number 3028. so let's put that in here thirty thousand and twenty eight um and so we're going to say right here random seed thirty thousand and twenty eight so just to be clear if i take that out every time i run this it's going to be a different pattern because processing is seeding the pseudonumber random generator differently each time randomly so to speak but as soon as i put in random seed and now i remember why i had this divide by because i think if it's like i want to kind of like look at it uh smaller um but generate a higher resolution image so this is the pattern that will come up every single time for this particular random seed if i run it again we see the same pattern again and let's go back to making a larger version of it and there we go so interestingly the size really does oh because i'm keeping it on screen interesting what if i took this constrain out let the random walk leave the the space the drawing space um if it if it will i think i kind of like that as that's better so okay so now what i want to do with this is i actually want to create i'm going to create a p graphics object called canvas and that um that will be the full high resolution uh image that's four 880 by 1500 pixels then the size of the canvas will be that divided by four so i there's something that i can see easily on my screen um the size of the window i should say in processing and then this should everything should now be based on the canvas and i am going to draw everything on the canvas um the numbers can change is irrelevant then canvas.save no loop is fine and then when i'm done i want to draw image canvas so i want to see that canvas but shrink it down so let me just make this with a hundred thousand points just so it runs much faster to make sure it works hmm did i do something wrong here let me run it again null pointer exception why do i have a null pointer exception under create graphics is this maybe something that can't happen in settings ah i need no point exception so uh thank you violet is reminding me um that i need oh and i don't have the stream chat up uh violet is reminding me that um i need begin draw and end draw thank you for that and i guess now so again feedback for this stream chat i need quick access to the pinned ones because now i have to scroll and find them because there's a lot of comments to move them off uh i guess i could clear all the other ones uh okay and i don't think i need to remember thirty thousand twenty eight um so now i can just remember that i need begin draw and draw i forgot about that so absolutely canvas begin draw and then canvas end draw here this is i don't believe this is needed in p5 which is one of the reasons why at least that's my excuse for why i forgot it okay let's see there we go it's so tiny all right because it's only a hundred thousand points okay looks good uh now let's go to one million points a little drumroll so it's so small because it's only a million points so i could up the number of points the other thing that i could do is technically speaking um i could increase the stroke weight to four and then always move it by two pixels so i could do something like step size equals two uh and i might wanna say something like stroke weight is the step size times two and then this is equal to the step size so i'm always moving according to the step size let's try that see what we get yeah so this looks like what i would expect it to be um let's see what um let's see what would happen if uh oh what happened there what did i do i meant to keep it constrained oh this needs to be canvas dot width i was like oh i'm constraining it uh but i constrained it to the little divided by four size window okay see what we get that doesn't make a huge difference um but we're gonna get more points in the window itself because it's not allowed to wander off but it's not the true random walk this bothers me i gotta take this off okay so this is good um um kk wikman is saying on average it will be the square root of n away away from the origin after n steps um that's wonderful to sort of think about and consider thank you for that comment um all right so now um what do i want to do i think it's always going to kind of lean towards going one way oh or the other because the other thing is i always need room in this design to put the little code snippet um and uh let me now so i just want to look at a lot of these so i'm gonna do something kind of interesting here at least interesting to me i'm gonna seed use a random seed of frame counts always reseed the random numbers then i'm gonna say uh save frame random walk put in these um hash symbols i guess i can't call save frame on um on a p graphics office object office that's fine i'm so used to javascript now that this is confusing me what to do here so let's do that and i should now see and let's get rid of no loop um let's do this so i just want to put on um my waiting music and we're going to do a whole we're just going to create a bunch of these let's see what they look like oh i just realized there's a problem i need to put begin draw yeah and and background there that should do the trick all right i just want to see if i'm oh why didn't i get oh because x and y also need to be reset back to the middle okay now we should get a bunch of them so it feels like i either need more points or a larger step size oh i like that one what do we think people there's always room generally you know it'll be in a different place for the code snippet and the random number of course that could also go on another side higher step size and points i kind of don't want to i kind of don't want to change the number of points so i think about 1 million points seems right to me what if i make it a step size of four i'm also not sure why i'm doubling the stroke weight based on the step size is it giving it more heft yeah it's continuous bigger step and fewer points says andrew i think actually i really like where this is right now i just want to look at the um i want to look at the sort of higher resolution renders right now because we can really uh zoom in on them just to sort of see what ah so that's why i increased look at this the strokes are like little dots like that when you zoom in on it so it has this weird kind of that's why i so one thing is i could do is just actually make it a rectangle maybe that would make more sense like instead of drawing it as a point uh what if i said this i'm just curious i made it a rectangular point now um would i want it's gonna go up here um would i want this to be wrecked mode center i think i would let's see what these look like an idea from the chat is to center the canvas at the average of all the points that is a really interesting idea so why i do like that idea i i sort of there's something nice also about the consistency of it them all starting from the same place um and and the dabbing bear which is a great name by the way saying a lot of rectangles might cause performance issues so i'm not worried about performance issues right now because it wouldn't even matter if it took me an hour to render each one but let's see what these look like and i should have renamed them so i could compare them side by side but yeah now we can see i think so this is this is definitely what i want i want it to be um the sort of perfect pixel size of each step um and i'm not sure what advantage there is to like making it higher resolution with a larger step size than lower resolution with the same step size really seems to make no difference but um but yeah okay so i think this is good this is good enough for now because this could always be improved that i can take this and move this to p5 because ultimately this will fit in so let's look at a couple of these um so i want to show what a couple uh folks from the community have made let me get into uh discord um and pull these links up so i'm going to put the music back on here let me find okay and then i'm looking for the other one where is prote's okay okay just get back to discord okay so first of all if you are not a member of the coding train discord i said coding train please come and join right now um i will put a link into the chat um however um i'm sorry i'm looking i'm reading the chat right now um bounce the walker off the boundaries okay wait did that oh it came it came through so also you could just go to thecodingtrain.com discord that will get you an invite into the discord the discord is where the community gathers um for discussion and sharing and help um and it is also what i use during my live streams to post links to things that i'm looking at that people if i want people to have quick access to i could put those into the youtube chat but it's a little more awkward for me to press all the buttons to find that chat so um uh come come over here and check out the lynx channel come on into the discord so um two uh friendly faces from our community have made some sketches related to the uh random number assignments and by the way again everybody can have a random number um and so uh let's look at this one this one is uh called capricious brazil which is a wonderful name thank you simon i think that's probably the default name i don't know why i'm not logged in here to uh the web editor and this is a project that simon made welcome new member your random number is 63 579 and that's on the end of i love this so so much i think there's so much potential in this idea the one thing that i don't know what to do about is um i do not want the random numbers to come from the job the browser uh javascript based pseudo random number generator i want them to come from my very special book again again help me internet help me find an original print of this book from i think it's the uh i i should know the date off the top of my head with my obsession with this book um let's look it up uh this was the first edition originally published in 1955 um so that is my uh i would take a later reprint of it but i'm really looking for an original no missing pages print of this book from 1955 i would pay a large finder's fee i know but i've been looking on ebay and all sorts and it's really hard it's hard to just to find but someday i will find one um so i really would like the random numbers to come from this book so one thing that i think we could do is uh if we were to use something like this is have i mean a transcript and this would be really useful a transcription of this book so perhaps already the audio like is there a kindle edition of this book is there a raw text file is there an ocr version of the book that's what solar liner is asking that's exactly what i'm looking to find if not that will be a project that we will undertake there is no reason why i couldn't scan this book digitize every random number you know my dream is to make an audio book version of this release it on audible but in which i have been slowly trying to read over time i'm still on the first page but i guess i could i guess i could sort of really dedicate myself to oh yeah actually if i just really i could do this this could i mean i could do this like not live streaming like i could just record myself i'm gonna do this this is my project so anyway um so that's that's what we need uh to improve this simon thank you for working on this um i think there's a lot of uh design opportunities also that we could add to this um but i love it um so thank you for that um so we're gonna we'll continue with that i think that the big step would be to get the um to get the uh uh a digitized version of the random number book okay now this is created by um um and i want to make sure i get the name right so give me a second here um you're in the chat right now i know um which i think maybe fun planet perhaps uh is a github or or handle that i've seen online um let me go back to here so if anyone wants to take a look at a simon sketch um i will paste that into the discord uh links channel thank you simon for that um and then oops when i'm not on screen then let's take a look at this coding train random n o dot tk um is the url for this i'll paste that also into the discord here so let's just see how this works so if i type in my name my random number is one two three four five six my phone number i think you random had a reason for having the phone number in there but probably i don't want to be asking for people's phone numbers i think also maybe this is something that is there's really would just be sort of more of an admin panel for me although maybe there's a way for maybe this would be maybe there's a version of this website for everybody to put their own random number in i'm gonna hit submit um invalid name what my name is invalid no i don't know why that is is it because i don't have a phone number um it's required so one two three one two three one two three four let's try that no uh eight hundred five five five one two three four not sure what's going on with this so found a little bug there can we find anything here um so i like the idea of this an interface honestly i think like a github file marked a json file on github that i can just edit and add somebody's uh name and random number um and that way i can manage it through pull requests might be a little bit easier than and then keeping them keeping like an elaborate uh uh full stack web app um but thank you this is a wonderful start and i see that there is also a secondary link which is where i can now find and export to a csv file so this is great again i'm not so sure about the phone numbers but i like the idea for this so thank you for this is really amazing and does the search work yeah the search even works this is really amazing work um and so we could consider using this as a base but i think what i want to what i'm going to work on right now and i'll just do this in the web editor itself is um so i'm reading i'm reading the um the chat actually because uh keith um keith writes a comment deep fake audio your voice i have uh some weird side projects that i'm working on related to some podcasts that i listen to and i don't want to do and just as like a fun goofy project not to actually fake somebody's voice i'm interested in looking at models that can train a texttospeech engine based on existing audio and i haven't been able to find anything that i was able to do pretty easily with that um so a hider in the chat is saying uh there is a link to a million random digits text file so if somebody wants to get that to me right now i would gladly uh pull that up um all right so what i the thing that i want to start with is i want to just pull over and i realize there's a big irony here which because this processing sketch was originally a p5.js sketch that uh chuck england trans transcribed over to processing now i have this processing version that i'm going to transcribe back but let's bring that over to here we'll call this whistle generator and let's just quickly translate this to uh javascript and i don't think i should call this canvas anymore and boy that font size is small oh so we ran corp according to um according to uh kay wickman the rand corporation actually maybe has published their own version of it okay um let me let me keep going with this here uh i don't need the settings function this over a little bit what is this hero it's just one of the patterns um i'm going to call this uh let's just call this whistle whistle equals create graphics so i have i don't know if begin draw is necessary but i will keep it random c that i want to let's go back to using a particular random number and uh this there we go and i call this whistle the constant um and i just noticed that i have this as a rando walk not random walk let's let's get rid of the save for a second and let's make this many many fewer points just to see if this works uh canvas end draw image of whistle so i think and then i'm going to say no loop i think i've translated everything let me just get rid of this stuff for a second okay what did what went wrong what went wrong begin draw so i think there is no begin draw an end draw in p5 it just doesn't there we go this looks good now why is it all the way over there ah pixel density uh the pixel density nonsense try this what is going on what is going on oh no could the image be picking up direct mode no looking at the chat here um uh and prati is telling me to remove the dashes from the phone number that's why that form validation didn't work but i'm confused what i have done to cause this to not work like why is it over here canvas width divided by two oh whistle whistle whistle ah oh my god there we go okay great let's go back to a million a hundred thousand oh that's the 100 000 a million there we go let's do let's add the whistle save okay and now let's look at the png there we go um so i'm just curious is the random number generator is not going to be the same as in processing so it's going to be a different image if i do it here on this website versus with processing i guess i could run processing uh you know command line on a server to generate the image or something crazy like that okay so now i think what i need to do is let's create input with a number in it let number and number equals create input and i think i can um then let button equals create button generate button dot mouse pressed function uh i'm gonna say redraw so uh let's just call it uh let's let's actually not use draw at all uh ran let's make a function called oh well hello random walk and we'll call this random walk uh random seed will be uh parse int of number dot uh value and if i'm right about this and let's say background 255 here huh why why why there we go okay so the idea being that i could place the random seed in here click generate and i will get the image now if i change the seed a little bit hit generate i will generate the image so this in many ways this is just the first step i so i think what i want to do is turn this into a github repo um you have in that github repo uh you know a json file maybe i think i could do this without a server just have a json file that has members and random numbers um and then uh we could also create a url uh with like a query string that goes to a particular member or a particular random number and generates the pattern so i'm going to shelve this right now i think this is enough um and so uh i'll put a link to this particular sketch into discord i'll put it right here so if anybody wants to play around with it um you're welcome to do so and stay tuned to the discord we will announce and link to the github repo if you want to contribute to this system that i'm going to use to generate the designs for particular uh whistles okay yes guerda asks why are you doing this i don't know i just am it is what i do okay an hour has passed i've got about another hour left today um i'm gonna i think i want to take like a like a two minute break here um but i don't even need to like turn the stream off i just want to uh open up a few windows i mean let's so the next thing i want to do in terms of my schedule here um i'm reading the chat um the next thing i want to do in my schedule is really sort of start to plan out 2021. okay all right i'll be back in just like two minutes here so do do okay i am returning back here um and all right so i want to start looking at the twitter api and this uh running tracker thing that i want to do hmm i wonder if i should just work on that next i do need to do the planning we'll come back to that all right so let's let's work on this um um oh boy this is going to take me a minute to get set up here music back on do what the am i not signed in is that why oh where is my phone for two packs um authentication code speaking of things i should have done before i started live streaming i don't think it matters that i'm showing this to you okay i'm now about to figure out how i want to use twitter i'm currently logged in as myself which i really don't want to be logged in as let's see if i can yeah i'm going to use this okay okay so here's what i want to do um i'm logged into twitter on this um account that's called a to z bot example if you're wondering why it has that name so the course this is this is a this is a unfinished really un barely started project from fault from the fall if we went one of the things i wanted to do today was go back and look at my list of things that i meant to make videos about tutorials about in the fall and one of them was rebooting the twitter bot series i did not get to that at all i didn't even make one video but because before that was making a discord bot series which i did do but i didn't even finish that so i have to figure out like what's realistic for me to do still with discord or twitter now that it's 20 21 and my focus will be you know spoiler alert my focus is for the spring is the nature of codebook um and what's this by the way oh that's just uh visual artifact of the browser um but um i did start on this sort of like twitter api library um node module during the live stream so i i want to like at least it's still it's still you know it's still the first is it the first week of january second week of january i think i can allow myself i can indulge myself working a little bit more with the twitter bot twitter api now the course that i was teaching in the fall it's called programming from a to z it's about programming with text twitter bots discord bots were part of that course that's why this example is called a to z itp i'm going to go to developer.twitter.com and a developer portal okay so um and i'm going to make dare i make a new project or just use my api keys from this one i think i'm just going to use my api keys from this one so all right what um what's going on here so i actually recently added a new example which will uh search um search twitter so this so this is something i actually worked on over the holiday break not on a live stream i did this on my own i added a new function um in the my twitter uh library which has a search function um and i can pass it any keywords it goes to i'm still using the 1.0 twitter api and i can search go to this uh this particular endpoint search tweets json and just pass us the query the keywords so and then i pass it to a get request which does all the oauth stuff that needs to be done and there should be a way i can i can probably page through them also so what i what i want to start with is i just want to create like let's look up um uh what is it the gump 500 see i think if i search this i'll probably find it yeah okay so let's follow forrest gump 500 and what would make sense as a hashtag for right now uh fg500 is that could work um let's see if this is empty um oh you know what i want to call it gum 500. yeah okay great we'll call it gump 500 forest 500 i don't know what's better just for testing right now i will use this so i'm going to go to my example which the first thing that i need to do is i need to create a to work with this example is i need to create a uh a dot env file that doesn't just have the dummy data in it so let's make a new file called dot env uh paste this over this is again welcome to 22 welcome to the coding train where a person who likes to make youtube videos about programming but often uh uh continuously by accident reveals their secret api keys and tokens while live streaming so um let's um so the reason why i was saying gump i was interested in is a littleknown fact story time here historical footnote um i uh i don't probably shouldn't admit this but many many many many moons ago back in my youth my utes so to speak when i was a young college student i participated in an acapella singing group and at a cappella scene group's nickname was the gump i will leave you to the rest of the internet to find old photos of me if they exist uh um out there somewhere okay so um what was i doing uh yes so i'm gonna go over to here and i'm going to click on this keys and tokens button first i'm going to move over to there and click on keys and tokens and i'm going to go view keys wait okay here now great so i can show you this page this is the next page that i'm on here and then i'm going to click on this view key so as soon as i do this i do not want to show them to you although i could show them to you then quickly regenerate them um but i'm just i think i i think we're just going to ask for you to have a little faith have a little trust in me that that uh that i'm going to copy paste the correct keys without you seeing it so oops wrong button so i'm clicking on view keys i'm getting my api key right now putting that into consumer key getting my api key secret putting that into consumer secret then i am going to go down to access token and secret and the only way for me to get these and by the way one thing that's really important is you need to make sure you have read write permissions i mean um in order if you want to actually don't need to have if i was actually making a twitter bot i would need to have um write permissions to be able to post to twitter but anyway so i'm going to click regenerate yes regenerate and i'm now going to get my access token uh and paste that in i'm going to get my access token secret i'm going to paste that into my env file i'm now going to close that file go over to env sample i'm going to go back to here close this window and i think i'm starting 2021 off on such a great new leaf i successfully and i'm sure i'm gonna ruin this in any second now i successfully generated api keys and secrets copy pasted them into a dot env file explained exactly what i was doing i didn't once show those keys on the live stream um so but and they're now sitting in this particular dot env file has exactly this content in it the only thing that's different is it has the actual um uh uh api keys so if i go back to here one of the things you'll see is i'm using the node.env package um which will then load those consumer key consumer secret token token secret from that file and create a for me to authenticate with the twitter api which happens here in my choo choo tweets module so let's just now search let's let's search for a hashtag um gump 500 and solar liner says in before he actually clicks accidentally clicks the dot envy i didn't do it i didn't do it um let's so let's go back to twitter um let's make one post oh yeah gum 500 what was i i'm at um i said i was at 16 miles um let's tweet that and then um and then everybody's talking about how i'm gonna show those guys i'm not gonna show those secret keys come on yeah i can do it i can do it um i'm gonna go back to here and go to examples and search and say node indexed wait uh okay the dot env is there uh node index.js ah okay uh whoops i forgot a very important step which is to say npm install i've got to install all the node packages uh now i should be able to do this okay oh so we got um two tweets oh somebody wrote oh this is really dangerous stuff now in the la um uh hello mr daniel uh you can just call me daniel no need for the formal mister um and um i can also see here um my 16 miles so now here's the thing this is just doing a search of historical tweets and i think what i want to do which i have not really investigated if i go back to the um can i get to the docs here so what i used was a twitter api um and i probably should investigate the twitter api version 2 but i'm using standard 1.1 um let me just go to fundamentals maybe data dictionary no tweets right i'm using this search tweets so this is the endpoint that i'm using um api reference is what i want to get to right get search tweets so you can see that that's the that's the api endpoint that is what is in my code um here under search that particular endpoint and then this is the only uh parameter that i'm using which is q for query for particular search keywords but you can see i can limit the tweets to language locale all sorts of since a certain time a maximum id um so that um so like but but that's not what i want to do what i want to do is i think there's the i the account activity api is what you need to use if you want to listen for um events for a particular account so if i want to listen for when my account has been mentioned or a tweet has been replied to but i think i can still use under standard sample realtime tweets or filter realtime tweets i think this i should be able to use um which for a search for a particular hashtag so how do i do this i don't actually know how to do this streaming uh and this might be unrealistic for me to actually figure out today all right we launched a new version of the post statuses filter endpoint oh so do i need to use twitter api version 2 early access or can i get this post statuses filter 400 keywords 5000 user ids one filter rule power track i don't need that filtered stream so i don't understand how this works this is a post to filter track so follow track keywords to track okay yeah i thought v2 was out as well profit mesh is asking so i'm going to get myself till 11 a.m to work on this which is only 15 minutes but let's see what happens if i at a minimum add this particular request for and this is a post right this is a post to statuses filter so if i look at this um like i have a um just a simple like i can look at this as a like if i add another function to my library and i'm going to call it filter and i'll give make the argument keywords the endpoint should be this resource url so i can paste that in here i'm going to the filter url then the body of the post should have i only want to use this track keywords to track so i want to uh track the keywords whoa what just happened there yeah track the keywords and then i want to await post to that particular url with this post body and all of the authentication and the actual post request all happens down here i'm using this oauth package so now i can go into my search sample and i should just be able to i'm just going to comment this out and i'm going to change this to filter and let's console.log the response and see what i get um so it's sitting there waiting so why is it waiting is it going to suddenly nothing happened there so what do i get i don't understand oh return response but it should have returned that's what i meant to do no no not using this endpoint correctly where is my filter function turn await this.post i mean just to be sure about this just to make sure uh my posts are working does he see the youtube chat uh it's lo it's using long pole it's a socket i know what do i do with that now i don't know what to do with it uh how do i listen um uh let me just make sure this is working hi from node.js let me just let me make sure like my post requests are working and now if i go here into profile yeah so that worked um the tweet came up um check listen function in twitter documentation okay so now that i get oh stream.twitter okay so how do i use this okay returns public statuses multiple both getting poster grip but get requests to okay response formats json am i not in the can i look into guides okay stream oh yeah i'm looking at the chat see if anybody so what um let's look at what's that twitter api that i also was using as a model twitter lite let's see if they have this um let's see ah they do have this stream you know this is a this is a much more okay so thoughtfully created api so let's look at um stream statuses filter ah so on so then there's these events so basically i mean i should just use this library that already has this implemented but i want to understand how it works um so i am going to right i think i need to i'm going to go look and see how how it's done in this particular library so client.stream let's just clone this whole library and again uh you know if if i were really just sitting here trying to make this project happen it would make much more sense for me to use this working node module but i'm i'm playing the long game here i really want to understand the twitter api in a more robust way so i'm going to sort of like keep with my own code implementation so let me clone this library and just see how it has implemented it it's also typescript oh boy this is going to be tricky for me so index stream resource stream okay so public stream so i guess this is coming from oh my god i have no coming from stream.js oh my god i have no idea what to do this is so complicated twitter.js what's in here create oauth client ace endpoints twitter handle response where yeah make requests get post put oh that even has a put do i need to use a put stream okay authorize request data request fetch requesting then response so i get a stream stream emit start on okay so this i need to do something with this just read the docs you can maybe use a generator function use a 408 to stream results back to your script um i'm reading the chat here um all right this is gonna this is gonna take a longer investigation um this is using what is this fetch is this is this the same fetch that i'm using cross fetch cross fetch what is crossfetch interesting uh fetch api this is probably latest version so this is probably not too different from what i'm using um how come i can't okay let's take a look let's dig into this a little bit i think i understand what i need to look at now with a little a little bit more detail so let's go to here and let's see what i get in my post because it's never going to resolve um what's this does this function ever execute so it gets to here okay it gets to here and then this wow it just sits and waits post it opens up a connection i need to create a stream object i guess all right i have to put this aside or i could just switch really quickly and use twitter lite right now let's just see if it works let's try using this twitter lite um i'm gonna make a new project and i'm gonna have to investigate how to do this later on my own i'm gonna make a new project and uh let's now here's where i run the risk of showing my env file again so just give me a second here and bring my dot emv file over uh from from that other example i was working on okay so okay so um i'm now in a new empty new project um um a new project um uh with the index.js file package.json and my.env file so let's go over here and say npm install a twitter lite so we're gonna we're gonna grab this uh twitter library um and uh i'm going to just there must be like a quick example here test stream test yeah this is what i want to do basically um whoa this is way more than i need but let's um all right so um all right so i'm getting my special dot env i'm requiring oh no this is a test this is not an example hold on come on twitter lite get post new client new here we go this is what i'm looking for okay so i just need this let's start with this and let me go back to my this example which i will need to get just my env stuff and i also want to say import no not import require i need to inqui require okay do it this way um okay so there we go so i've got the twitter api um and then i need to say dot env dot this is where oh i'm so close to making it through the stream without revealing it back to this view i'm going into my dot env file people uh consumer key goes here oh no consumer key i just don't remember what the things were called consumer secret and then they're called uh token and token secret so i can show you what i'm doing again so oops token and token secret okay and so now let's just see if this is going to work by looking at a very simple example let's verify the credentials so let's see if this runs oh and i need to uh install env and looks like this verified my credentials correctly that's promising so i don't think i need to do that anymore and now let's look for stream tweet thread streams okay so let's do this and let's just only track uh gump 500 and then do this next tick stream destroy i don't understand why i would want that but okay um all right so this in theory now um i should be able to see here in this function any tweets that come through with tracking this parameter so let's see what happens starting the stream going to twitter gump it's 11 o'clock after 11. we're so close though now uh hello tweet this that worked okay so um so i think that i am going to need to learn how this streaming works so that i can implement it in my own twitter library and we can see people are uh i don't know what the ping oh i guess the ping is just doing that every so often to like stay connected um and throw an error and what is i don't understand looking at this here why i need to have okay to stop a stream call stream.destroy that might take a while though if the stream receives a lot of traffic also if you tap destroy stream from an on handler you may get an error about writing to a destroyed stream try to defer the destroy call next tick i'm not sure i understand this is like api 2.0 all right i'm going to leave this without the destroy method and what i'm going to do is i'm now going to have my server i'm going to create a miles dot json and i it should allow people to use kilometers but just to the simplest version of this um let me create uh a json file that has um an an object in it okay an empty object so then um let's this is gonna be my database and i should use a proper database but this is gonna do for right now um i'm going to uh create oh i'm gonna i'm gonna use the node uh file system module uh and then you know this is gonna have to be honor system anybody could just tweet gum 500 500 miles and they're done but i'm going to say miles equals read i'm just going to read file sync the name of that file miles.json utf8 is the file format i'm going to call this data and then i'm going to say miles equals json parse that data so this is the miles so on let's actually let me just name a function um new tweet um and let's write that function um function async function new tweet console.log data so um and i want the um require fs promises yes i thank you solar liner i do want that um does it i like to use the um read file sync though just when the program starts up i will come back to that um okay so console.logdata.tweet so now i need a regular expression um uh i wanna look for if that tweet includes some number of digits followed by some number of spaces optionally and then the word miles anywhere well let's i just want to look at the for the first instance of it actually but case insensitive so then i want to um what is it called maybe it's screen name and tweet like if i go back to uh the example it was tweet.text if somebody could look this up for me i just want the username of the person on twitter um which uh i think it's called screen name um but i'm not sure and then let's just say console.log screen name let's console log some stuff uh screen name text and then i always forget how regular expressions work so let's just play around with one here right here regex match um hello 500 miles no so hello 500 miles match yeah great so there we go um and then what if i make my regex capture the digits um yeah so then i get an array and i get 500 as the second element of the array perfect okay so this is what i want um so it's the string match the regular expression so let's capture the number of digits um and then let's take let match equals text dot match regex if match if there is a match then the miles equals and i i eventually i'll make this work with kilometers and all sorts of other things miles equals the match index one uh console and then so what i what i need to do is say um add to my database miles a screen name updating their miles equals that number of miles and then save save right right file sync uh json uh the file name is miles.json is that the first argument uh the path is the first argument miles.json and then i need to say json stringify um oh i don't need p i guess yeah let's keep people in there so so it's people miles dot people let's just call this database it's sort of silly but eventually that might be a database and so yeah because also i just had this be miles and i think we should say parse int that particular match database people screen name equals miles and then i want to stringify database uh and let's format it nicely okay so this should handle anytime there's a new tweet look for the text see if there's a match with the number of miles added to the database um okay you probably forgot to remove my message from the screen no i was keeping it up there for reference but i guess i could i guess it's been a while okay so anybody see anything i did wrong here uh i'm getting a lot of pings so let's rerun this server i'm going to tweet gump 5 500. i ran a total of 16 miles so probably you should tweet like how many miles you ran i could add it to your total but i don't know we'll do some like fancier natural language parsing or something um gump 500 i ran a total of 16 miles so let's see we should see that come up here oh we got an error uh dollar sign is not defined so first of all it probably wasn't screen name oh it is screen name that's a user dot screen name text so i need to do user dot screen name that's fine uh oh how do i do this i'll just do this and then we're talking about name so that's the name and then that's the name so where uh where did this go wrong where is oh there's an extra dollar sign here okay great all right little couple fixes there let's rerun the server um i i have run 16 miles in toto total okay tweet okay that's promising i see i don't i don't need the console log all of this stuff i don't need to console log data now if i load here oh look at that yes 16. so uh anybody should tweet now something of how many miles you ran and it should show up here let me give it a minute for people to do that and then i'm gonna make a quick visualization of it um so let's make a route i need to get all my express stuff going here what was here we go so this is from my work but basically kind of redoing what i do in my working with data and api series so i'm just going to grab a bunch of things from there like i'm going to add express and i'm going to create a web app i'm going to serve i'm going to serve a directory called public um let's create this after i've loaded the json file um oh oh no um let's see if anybody's tweeted yeah look at this look at this people's miles are coming in i might have to clear that out like i'll clear it out after uh so it's definitely working um so now what else do i need um i need a get request let's add that i'm gonna put that stuff at the bottom here now um i want to send out the database so i believe um let me install express let me run the server if i go to localhost 3000 api okay database find i don't need any of this i just this is i mean it's so much more complicated i'm not using a database okay uh little api here what what i exceeded the connection limit oh that's sad uh did i not destroy my streams is that the problem because i'm not going to worry about that right now i assume this will i will this will reup in a second um okay now let me at least see if the visualization is working um okay so great so now i'm getting this here and i'm getting the number of uh miles that people have run um we're gonna add a little um well never mind um i will i will do some moderation later um and now let's see okay so now i just need a public directory and let's make a quick p5 sketch um index.html and then uh sketch style um he wrote negative one miles and skipped the minus that's interesting uh that's a good good bug bug report there uh let's get uh sketch.js and wrap this up people uh sketch.js and um let's get rid of the style sheet i don't need the sound library and then what i'm going to do in sketch.js this is going to be i mean i want to do something with an interesting visualization but i'm just going to say fetch api um okay like visualize visualize visualize this will be an async function and i'll say await and then we'll say response equals await fetch api and then uh miles equals response.json um await and i can actually just get the people from it why do that not and then say names object got keys people and then i want to sort that by a dot miles minus b dot mi i want to sort them in order of miles maybe um i don't know what is going wrong with my then four let i equal zero i is less than names.length i plus plus um and um uh let's get the create div names index i people index names uh ran people.names so this is okay so let's see so in theory now if i very briefly um grab so i have this list in my miles.json file and if i go to whoops oh i need to serve the public directory um which is did i have that already oh i am i already have that okay so i should be able to go to now just uh oh let me rerun the server oh it's listening again that's great and now if i go to here a weight is only valid in async function oh i don't need the away there it's fine where's my syntax error it doesn't like this for whatever reason just do that for right now where is my syntax error oh by the way i don't know what i'm writing here so where is my syntax error async function it's making me crazy back tick line 12. ah thank you there we go this should work right yeah that's fine okay data is not defined where okay okay create div people okay people oh i don't need the dot miles what am i doing there there's no there's no uh each person is not a large okay there we go oh i want to say miles ah so confusing period all right uh why is it undefined people oh names index i let's use this let name of names name people name ah there we go and it's uh b minus a there we go so obviously this isn't really a i should do some kind of progress visualization something really nice but we've got it so uh in theory now um and i'm gonna uh the internet you're so annoying i'm gonna add something to make certain numbers be blocked because the immaturity of the internet never ceases to uh amaze me so now uh let's deploy this so um and i think i should i need to do a dot get ignore and so git ignore should ignore dot env it should ignore node modules and it should ignore it should ignore what else um should it ignore the database yes so it's gonna ignore the database so unfortunately i'm going to also need to then say here in the server if miles i think i can do file exist or exists exist sync miles.json if if if it exists um i think this is what i want to do let's get rid of this file delete i think this will work uh 11 line eleven oh oh whoops i think this is now what i want to do okay so did it create the file oh no it'll create the file hopefully once somebody tweet something let's see what happens okay we got an error oh right of course well what happened here i've run 21 miles cannot set property index.js line 43 oh there's because i made i i i have this structure like this so i think this is what i need to do yep okay we're good so we'll create that uh great all right so we'll create that file um and now i can no wait why is the dot env in there oh i put it in public ah ah help everybody move it yes okay so this looks good to me right now oh how do we do that like um is it because i haven't committed anything created app during live stream okay great okay okay so now uh we're going to go over to coding train we're going to create a new repo i'm going to call this gump 500. uh public tracking forest gump 500 mile files miles uh public um create repository and then we need to do this and then this um i need to create an invi env.sample um so hold on everyone i'm so close to showing my env file by accident uh env a sample um and now i can bring you back so this is an env sample file uh and i'm gonna say all right so i think next step would be next step is to go to glitch which is my deployment methodology du jour and i'm going to do new project import from github and i don't love the way this works but i'm going to just do it this way i want to figure out a better way of doing this but um i'm going to do it this way for right now we're going to import the project i'm going to call it uh gump 500. um and uh i think so i need all this in the dot emv file um let's look at the logs it should be giving me lots of nice errors start script is missing so i need this what's really annoying about this now is i want to make some changes here and there's not really i probably should just deploy this somewhere else there's there's really not a great way to use github and glitch and develop locally i probably what i probably should do is use the vs code plugin for glitch but just for right now i'm just going to say start just to get this going node index.js i think that's what i do um so now it's should be installing the packages i'm going to get get the correct um api keys and put them in here but so i'm i'm taking you away so i'm going to do that right now so going to my actual env file and copying that over to glitch closing out of that and closing out of it here okay so it is now um let's show the project um so i think is there oh it hasn't written the miles.json file probably because it needs a tweet so i'm going to tweet from my actual account no you know what i'm not going to do that right now i'm going to keep using this hey 16 miles or choo choo so now okay i got it oh it's not gonna no got it right here we go look at this okay it's working all right so uh i mean i have to i have to manually refresh this but we can see that um we can see that this is working okay so i'm gonna put this aside um this is what i would would love for any help with um uh i would gladly accept where is this github repo pull requests here to first of all help document what this project is in a readme um help do a better job of like error handling and parsing the tweets and authenticating it maybe i should check whether someone ran is adding to their total or offering a new total i don't know what would make sense um actually it would probably make more sense for me to use not a json file but like a database and data service in the cloud or something just so like i can sort of disconnect and have that be part of the env file like codes to a particular database and that way as i'm like redeploying it to glitch i don't have to like worry about if i'm losing the data so there's a lot of um there's a lot of possibilities um of things um that i think that that could be improved here so we'll see if this project catches on um and has any value um yeah i actually am starting to think that separating the twitter parsing from the front end might make sense because i don't really need a server i don't know so i i i leave this now to the wonderful people viewers of the coding train to jump on in and help work on this um and we'll see where this leads and then if it starts working well i might um actually see if we can um talk to um the folks who are organizing the gum 500 and make this something more of an official uh thing and i will return to it more um all right so that is that it is 11 38. i'm going to be wrapping up now let me close out all of these windows and we'll sort of like see what's going on here look at this oh look at this that's a lot of miles loku ad uh close that oh i didn't um that's fine i didn't post the glitch um we go sorry let me go back to glitch just so i can give people this app if they want to um gum 500 so uh share what do i do share show where's the share button uh remix new project switch project this is like crazy that i can't find where i share it losing my mind share there it is nice button there uh oh project links live site project members well i guess this is what i i thought there's like a link to the like a project page um which is sort of silly for me to be looking for that because these are the important things but anyway i will uh just share to discord um this is the glitch project and then but that's it might be a temporary deployment and then the um this is the actual um github whoops github repo okay so those are fine though you can find those in discord so now this has been a long live stream if you want a github to production deployment you can use reversal okay which needs a bit more configuration but can work with server apps and you can easily connect real databases to it easily heroku works pretty well for this kind of thing okay so that's uh says violet so these are good suggestions i really like glitch so i kind of like the idea of using it but maybe i need to rethink how i use it and when i use it so but yes maybe looking into versal or heroku are things that i might also take a look at thank you for those tips a date dot now is good yeah adding a date with um luan and other and in the chat or talking about adding a date a graph over time to so many pos there's a ton of possibilities um you know the i think a big core question here is um to what extent is the sort of selfreporting aspect of this going to fly like you know on the one hand the point of doing this is not to like there's no prize the the the what you get from actually participating is the fact that you actually ran those miles so reporting that you did if you didn't gives you nothing just ruins it for yourself and for other people so i think that it can work but um you know and i didn't i don't want to go down the road of like you know using runkeeper using strava and then upload and authenticate and oh off this and like upload your data it's just too much so that's why i thought like a hashtag for selfreporting being able to aggregate that information visualize it it's kind of a nice way of doing a quick project like this so that's what i'm thinking um we'll see i'll return to this we'll we'll revisit it next week so what's what else was on my list from today where's my list from today i have to point so far back in the chat there's no way i can pull that up again um okay so i should have just copy pasted it into like a text file or something but i'm gonna put this away why is this showing up as green because it definitely should be okay that's fine um let's close all this out i know where i can get my list i'm gonna bite the bullet and just go to youtube the coding train and pull up this by the way do you like my new thumbnails i like this on the some thumbnail oh look it shows this live and on here there like that uh okay um ah and so now let's see what did i not get to all right so um this is i'm not gonna check in on the live poll um you know i do have a very bad habit it would seem of starting these kind of like community projects like now this gum 500 one the random number one like leaving them to languish the live poll is somewhat in that state but i i will come back to using it at some point when i need to have a poll but let's let me now plan what's happening in 2021 so i'm going to go here to this so this is a file that i made i might have updated it i updated i guess on october 11th but i'm pretty sure i made this at the beginning of september and so i essentially want to oops uh grab everything from here and i want to create a new file um add file create new file we'll call this spring 2021 i could just dot md and i am going to paste all this in there and start to go through and figure out what i want to keep that i didn't get to and what will just sort of come back another time i'm sort of curious also to do an accounting of what i did um okay so which i really should do if somebody wants to help me out here um i i could i probably should do this live but um i would like to then annotate sort of annotate and archive that fall 2020 file um and but sort of mark what was done and what wasn't done so i could refer back to it later but i'm gonna do that here so basically i'm gonna i don't think that i'm going to keep much here although um i do know that what will come up eventually is neuro neuro evolution with um ml5.js but i did do object detection i never ended up doing videos on body pics i did model training did i do did i make something with json or cs video i don't remember i did some more convolutional neural network videos that's awesome runway never really got to the runway videos um i think what would be nice to keep from here is um and i think people have asked for is layton space walk so maybe i can um and you know there's there's more that i would come to but uh so i'll leave that there a to z is kind of now oh but let's see i i know what to call these i'm going to call them um i think this is somebody i bet you somebody else uses this name i want to make i want to start a new series of videos that are no more than uh what's a train what's a train name local stops express stops express stops maybe i want to make a lot of really really short um short videos like five minutes or less on like sort of javascript uh javascript language topics that i constantly uh refer to and the reason why i thought this fixed global npm permissions is kind of related to that but let me quickly make that list and people can give me some uh additions to this so but off the top of my head it is enhanced object literals object destructuring um a um generator functions a string template literals is that even the name for it so i want to do these and more uh express line i like that javascript express line um okay so that's something that i really want to do this year um and so so i'm bringing that up so i'll put this up here i don't know where to do it i never did this i did do this i did use the tenor uh okay discord bots so i do want to finish the discord bot series um i am using an api and i think i might use the movie db this is an api that i started working with for another project and it's kind of fun so that's just to sort of expand on the command handler deal with the new slash command i've made this command handler video that hasn't come out yet where i'm parsing all the commands with an exclamation point and from what i understand there's a new uh discord now has a new sort of like way of having commands with a bot using slash so i have to like look at that and then uh in embed embeds i don't know how to say that um fractal flame i want to do that i still need to do this side projects these are i want to keep this vinyl cutting and plotter on the list um uh guest this is a great question that uh okay week one is asking about nonsecret guest plans so it's not that any of the guests are secret but because nothing is like really formally confirmed yet i would prefer not to mention it until it's like but i do have uh two or three uh guest conductor videos that are in the works and you know it's really my fault that a lot of these didn't happen in december it's been a sort of slow process but that is coming thank you for asking that uh okay um so there's that and then uh and then what is the main content is the nature of code 2.0 so let's just look at this very quickly simon is saying call them javascript bytes if i want to keep them less than 256 seconds that's kind of a cool idea kind of like this idea uh i'm pretty sure that like somebody i'm sure somebody has a series called like javascript bytes video series or something you know when javascript bytes tech bytes right so i'll consider the only thing i don't like about that is it's not train related but let's let's go to nature of code to playlist all right lastly let's go to here so this is the course that i'll be teaching at nyu i actually might be using an lms system for the course but regardless i will sort of post sort of core material to this github repo um but looking at this now um you know again i have to register my utter disappointment and sadness about how youtube basically got rid of the whole learning playlist um because i no longer have this like great um uh like playlist with chapters um do i have it here that's one of the main things that show i don't know why how it doesn't show up on this page i gotta reorient this page playlists um let's go to yeah this is what i'm looking for it does say whoops close it does nicely still say learning playlist there so the only feature that youtube kept and to be honest the very thoughtful wonderful people who worked on this and i i you know i i there's so many things about uh the people who work at youtube that i love and appreciate and you know i understand didn't really take off i suppose or add the value that they were hoping for really really drives me crazy that it's gone so there's 21 if i go here i'm just going to click on this so this is what i started last spring and i got kind of interrupted by the pandemic so i need to look here and see like i have all the a whole set of videos for chapter one i have a whole set of videos for chapter two and i think this was i don't think i left any additional there was one i have to check with matia there was sort of like another video that i think i recorded and we sort of were editing and never actually released so there might be a 2.6 there somebody can help me remember do i say anything at the end of that video about 2.6 but i definitely need to do uh chapter three chapter three um so what's in chapter three um like oscillating motion angles radians angles angular motion polar coordinates i have some of these videos already but i think i will remake them uh and um let's go look i don't i don't know how detailed i'm gonna make this right now but i just wanna sort of like scan through this um yeah also springs pendulum springs yeah that's what i was kind of trying to remember waves pendulum and springs i've made some of the so where where am i here uh waves pendulum springs so that's chapter three chapter four i think i did these enough completed previously because i did a bunch of videos on particle systems so we'll have to see what i need to return to there chapter 5 uh mater.js oh no no but i think i'm reordering the book um i think i'm doing a ton so i'm gonna i'm not sure what i'm gonna do about the physics libraries i might so i definitely need to do um i think i'm reordering the book by the way so chapter 5 is going to be autonomous agents so this i need to do steering behaviors and i have a flocking coding challenge but um there's just more that i need to add individual group so i just want to add more to that chapter six uh physics libraries um a lot of so this is like right now chapter three really has to be done i have in chapter five so if i were to make i don't know how to prioritize these but i guess i'll use like bold is that bold i can't remember i think that's bold um so these are priorities because there's nothing not nuts i don't know how to think about this i'll just make the list uh chapters um chapter seven autonomous ca i'm just gonna make the whole list this is right now chapter because i really need to wrap up it's noon chapter eight is uh fractals i mean i just want to expand these and organize them and and make a playlist that includes some previous videos that i made some ancillary stuff around it so i'll have to like look at these individually um the gas the genetic algorithms it's really uh completed uh not sure what to do about this and then chapter 11 is the new chapter neuro evolution so this is really kind of my plan and what i'm hoping is that so khaled is asking in the chat um are those video tutorials or book chapters so i am going to be working on updating and revising the book and hopefully by the end of i don't know june having the second edition of the book completed so um and i'm going to make video tutorials along with that and my goal is to have the website have both all of the text of the book along with video tutorials embedded in it so and to completely relaunch this website and this is a huge project i don't know how i'm going to what's going to end up being the priority how i'm going to approach this and what's going to really get done but this is really this is my focus so um you know as much as i'm making this list of all sorts of other stuff you know i kind of don't want to i want to be able to like tie a little bow around the discord box to like finish that off i want to keep doing coding challenges and some of these side project things and i i think that these like little quick express stop videos could be really useful and it would be a nice experiment so i want to do all of that but um uh so but this is really this is really the focus so i think i'm gonna like leave this this is like a helpful list for things for me right now for what i want to focus on and do um pull out ideas and things from a nature of code book so that's what i'll do with the coding challenges you know simon did an accounting like that coding challenges playlist which is really the most popular series of anything that i do like that's that in many ways when i was first starting the youtube channel i had making video tutorials previously to that the coding challenges were the main thing and there were like 50 done in a year or more and i think last year i added like six and a lot of them are kind of not really in the style of what the coding challenges were originally envisioned so i i would like to get back to that in a way though that might have to wait until the summer if i'm really going to just more focus on this sort of like sequenced set of tutorials um mukesh is asking is there any video on p5 sound oh thank you this is exactly what i also need to do look at is intro uh code introduction to programming with p5.js i need to i i think some of those videos have fallen a bit out of date um and i need to be able to um also update them so let me go back to uh playlists um uh back to coding train playlists and i'm looking for um can i close this out here not this one so this is by the way um why i have this website you know because this is what i want to read i guess i could look at it through here sometimes i find being on youtube i one thing that would actually be great for the website in addition to the i i don't um there's a lot of things having to be redesigned here but it might be nice actually to just always have a link to the youtube version of the playlist because sometimes it's easier for me to browse there but if i'm looking at this i basically think that once i get to here variables um so these this is where i want to start redoing them um i'm trying to look here so many i mean but i might be able to just knock all this out in a day yeah actually oh somewhere i use circle there's somewhere where i use circle actually i think i redo almost all of this no can't be right so i'm not sure so these were made in 2015 uh i think yes so i need to make a list so i um where's that stupid playlist uh will this get will this find it no yep the trailer all videos there we go so this so i think i need to do looking at this yeah not this one 2.1 to 2.5 so it redo 3.1 3x 4x 5x um 3x 4x oh yeah this um and you know i might rethink how these are i think these are okay i think i there's somewhere where i say circle object and that doesn't work anymore but maybe that's actually um where i'm doing something with like object literals somewhere i don't remember where that is um and then maybe these are okay i can't remember i don't think they're using the web editor but i think that's kind of okay so i think i'll make that my goal and kind of leave oh 7.1 7.2 i should redo those and then so i think this will be a realistic goal 7.1 7.2 so i think these are the ones that i um want to redo so okay good for right now um i'm just going to commit this file um we should redo this this should use the new convention of i'm gonna you know i might mess up too much stuff by doing this right now so i'll do this later um so there we go so this is now the plan now schedule before i leave i'm gonna leave in just a few minutes um but um before i go that's noon i definitely gotta go my goal is to have weekly live streams which is essentially what you saw today i didn't do too much goofing off or reading of random numbers or looking at community contributions those will be segments that i hope to do um during my live streams um today was just sort of a get organized say hello live stream um and then um what uh and then i will be doing pretty regular like multiple times per week hopefully tutorial recording sessions so if you've been thinking about whether or not you want to join the coding train as a member and you can go to the channel hit the join button um those recording sessions uh will often live broadcast those available to people who are members so for those who remember stay tuned i'm hopefully going to be starting to do that next week where i'll be i don't know what i'll start with whether it'll be chapter 3 uh 2.1 to 2.5 redo the new um express stops idea or finish the discord but those are the things that i'm hopefully going to do two days next week of recording stuff so um thinking about how long it takes to do um editing and captioning um hopefully there'll be lots of new videos being released on the channels by the end of the month um but prop but i'm i'm no long i'm most likely not going to be doing weekend live streams anymore oh thank you niraj uh you can see my lights are blinking over here um i um what did i want to say i lost my train of thought i i think well ideally this time slot friday mornings will be my live stream weekly time slot i'm probably gonna do about three per month i might take some fridays off to get more just tutorial recording in frankly because i really want to get all this nature of code stuff done so my goal is three live streams per month one or two recording sessions per week um we'll see how that goes one guest video per month that's like a nice sort of like a goal for me um we'll you know at least through june we'll see what happens this summer um but um so yeah so next friday that's when i'll be back i might switch the the weekly live stream to a different time because fridays might actually not work but that's kind of my plan so i hope everyone's doing well i hope this was somewhat useful or interesting to you today i welcome again your contributions on um this gump 500 project and i also need to put this sketch um onto github um so people and we'll host it with github pages probably so that people can uh contribute to this um generating the train whistle design um project as well all right ah reinforcement learning yeah q learning let's put thank you for that let's see if we can put um onto this list you know this is kind of a uh this is a stretch goal seems unlikely got to get rid of that fulltime day job uh reinforcement learning q learning there's an nyu student who is a coding trained viewer who then went on to apply to nyu is now at nyu who has been sending me some really excellent tutorials and examples with cue learning i think could be a good model for um some video tutorials all right um i'm gonna play my goodbye song which is about uh three minutes long i'm gonna sort of keep an eye on the chat see if there's any quick questions i can mention and then otherwise i'll be back a week from now don't forget to join the discord i'll paste the link i mean i'll press a button here which will send a link to the chat um oh the dog really needs to go for a walk so i've got to go oh i forgot i have a new prop like just like my bell with my train whistle this one i'll put it near the mic i think i should use this instead of the bell i don't know what i should use it for yeah here's simon's uh accounting of all the coding challenges 2016 47 1741 1841 1926 you know i think i think exceptions can be granted for 2020 what a year that was uh three playlist whoops on uh p5 play i don't know is p5 play still actively maintained i'm not sure hi chris hi nolan yes i remember you donated uh andrew is saying new content is always great but nobody should sleep on your old content yes say hello on behalf of all of us to pickles well i don't know actually we call her pickle but i think the name pickles is actually pretty great use the sound when i make a commit it's a good idea more music in 2020 100 on the coding train will from america helped me put together some stuff for the processing telethon so i got to get back in touch with will and continue that i don't know i i feel like i was uh um a little less crazy today and just kind of like hanging out and typing stuff in and talking and chatting i don't know if people think of the vive i barely played any sound effects or music or did any goof goofy stuff so maybe this is the way the stream should be maybe i should get back into my more zany internet character well well this is the end of the song 10 seconds to go i'm gonna take you out with this dot song and i will see you all next friday live on the coding train is when i'll be back all right goodbye everybody see you next week as always i always forget that this stop this stop it stop this stop i'm gonna do this stop this stop i'm gonna do this this stop this stop get stuck i'm gonna do this stop stop i just stopped this dot never forget this dot somebody composed that song for me i'm going to say once again here we go let's look forward to cartesian coordination autotune and the internet will fix that for me unicorns and rainbows and cupcakes what else is there yes kittens thank you very much kittens and rainbows and cupcakes notice that look what i get i'm really losing my mind okay let's do it the kittens kittens and kittens and kittens kittens the kittens the kittens and kittens the kittens and kittens and the kids i feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this is a this is a wonderful thing okay we're gonna do it i'm really getting to something i need my sound effects that was invalid syntax i forgot all sorts of text generation analysis things that i will use continuously over and over the kittens and kittens wait just at the last second it's the last second there's a new member hello and welcome member whose name i can't say because it's written in a another language with a character set that i don't know how to pronounce but welcome with a nice little beautiful watermelon uh i would say a little slice of watermelon profile picture welcome to the coding train your very own random number is ten thousand uh is anybody actually still watching this that's on it's on page 43 it is column one two zero one two three four five six seven column eight you should know that because it's the last column is column nine and it is row two thousand one hundred twenty it is ten thousand seven hundred and ninety eight so welcome i don't know if you're actually watching or if you just happen to join that's the thing i'll get the notification in the live chat whether or not somebody is watching or just um happen to join um through another means while i happen to be live streaming but you got a little extra minute with me here but i'm really saying goodbye now i'm gonna click this button that says end stream and i'll see you all next week goodbye whoops no end go here end you
