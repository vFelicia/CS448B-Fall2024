With timestamps:

00:00 - okay here I have back I did a video
00:02 - about a binary search tree I don't know
00:06 - how well I did but I tried my best and
00:08 - now I'm going to definitely not do such
00:09 - a good job but I'm going to try to show
00:11 - you some steps on how you might think
00:13 - about visualizing the tree and I'm kind
00:16 - of good enough to observe this like a
00:17 - bunch of times but but I just do it a
00:18 - very simple way and I'm asking you the
00:20 - community those of you with visual
00:22 - challenge with creative ideas to make a
00:24 - more beautiful animated version of this
00:27 - with some kind of creative possibilities
00:29 - that I can't even think of so here we go
00:31 - let's try to get started here so first
00:35 - of all I have two p5.js library because
00:39 - I use nothing from p5 Jeff other than
00:41 - setup and no canvas but now I'm going to
00:44 - say create canvas 600 comma 400 and I'm
00:51 - going to say background 51 and I'm going
00:56 - to do this oh boy that's a big canvas
00:58 - okay that's better
00:59 - zoomed in a little bit okay I'm kind of
01:02 - running out of space here but let's move
01:04 - this a little bit over give me a little
01:06 - bit more space here okay so this is the
01:08 - canvas so now whenever I create a node
01:12 - let's actually have the node also get an
01:15 - x and a y and say this x equals x and
01:20 - this dot y equals y then perhaps well we
01:26 - could keep the Traverse I might I could
01:28 - also store all the nodes in an array to
01:30 - iterate through them but let's not do
01:31 - that okay so what do I want to do
01:33 - whenever I create a node where do I do
01:35 - that
01:36 - Oh add value okay if if root equals null
01:44 - so the root node should be the X should
01:50 - be width divided by two and so I'm not
01:53 - actually using the constructor here
01:55 - height divided by two so I'm just
01:57 - setting it directly so I have this
01:59 - option of when I create the note I could
02:02 - pass it in x and y or I could just set
02:04 - it but here I want to set it because I
02:05 - want to make the root node there now
02:08 - let's use this Traverse so the Traverse
02:11 - function in the node is
02:13 - right here which is visit so instead of
02:16 - in addition to console logging it let's
02:19 - just do Phil 255 text this value this
02:26 - Dex this not why this is sort of no
02:29 - stroke so let's just actually draw the
02:30 - text so let's run this look at this that
02:34 - root node is right there 68 now it's
02:36 - hard for you to see it but that's fine
02:38 - and I realize that I don't want I want
02:40 - the root to be at the top so let's make
02:42 - y 16 so we can see the root node is up
02:47 - at the top 4 which is all times to be
02:49 - the lowest node that's just a
02:50 - coincidence 76 is the root ok so now
02:53 - whenever I add a node so now when I add
02:59 - a value through otherwise I go to this
03:01 - top root add node so in add notice here
03:07 - where is that add node aha so this is
03:13 - where I actually set it to be this node
03:15 - left or this nodes right so if I want to
03:19 - do that now I could say if it's to the
03:21 - left if X should be this nodes X - I
03:27 - don't know 50 and it's Y should be this
03:33 - knows y plus 20 I'm just making up stuff
03:38 - and then when I create the right node it
03:43 - should be to the right
03:45 - but it's Y is still down so this is like
03:48 - a kind of rudimentary way of doing it
03:50 - right the root node gets the location
03:52 - and then I do the same thing whenever I
03:54 - add a node I look to where I'm adding it
03:56 - and I just grab that other nodes
03:58 - location and move it down to the left
04:00 - there's a lot of problems with this but
04:02 - it'll give us a basic idea look at that
04:04 - so and would be nice now to draw some
04:07 - lines between them and you can see how
04:09 - of this these are on top of each other
04:12 - so here's where I think I put it stop ah
04:17 - here's where I think I want to stop
04:19 - because I'm tired and I want you the
04:23 - community to figure out more interesting
04:24 - solutions so first of all what would be
04:27 - a way
04:27 - let's see if I draw the line even can I
04:29 - at least draw the line let's try to draw
04:31 - the line where do I where do I visit so
04:37 - I visit how do I know which one I
04:39 - previously in my Traverse where am i
04:45 - drawing it I heard he forgot under-under
04:48 - visit so this is where I draw it how do
04:53 - I know where it came from
04:55 - I don't so I would have to pass in here
05:01 - when I visit I would have to pass in a
05:05 - parent like where it came from in order
05:08 - to draw a line from the two different
05:11 - locations so visit from me visit from me
05:17 - and then in the tree visit from this dot
05:21 - route let's see if that works then now I
05:24 - could draw a line which goes from Paris
05:28 - ex parent dot Y to this dot X just out
05:32 - why and I need so this would need a
05:36 - stroke there we go so you can see this
05:41 - isn't so great let's at least draw like
05:43 - oh you know I should do I should say
05:45 - text-align:center and let's also draw a
05:50 - little ellipse and let's give it like a
05:57 - sighs whoops what do i do that's wrong
06:02 - here the lips the lips wait what's the
06:07 - error undefined text-align spelled
06:10 - text-align wrong text the line whoops no
06:15 - fill so we can see here I'm kind of
06:19 - getting started here ah this is good so
06:21 - you can see this is now the tree but I
06:24 - haven't done such a good job because you
06:27 - know these things shouldn't be so maybe
06:29 - they should be far apart and then closer
06:31 - a bit depending on the level
06:33 - you know if this has a lot of numbers in
06:35 - it like if I were to add a hundred
06:38 - numbers to this like this is a mess
06:40 - everything
06:41 - all overlapping everything else because
06:43 - the nodes next to each other have left
06:45 - in the right so here's where I'm going
06:47 - to stop this is giving you an inkling of
06:49 - an idea so what I am asking you the
06:51 - community watching this video this code
06:54 - will be on github will be a readme file
06:56 - there you can add your versions of it
06:58 - how can you do a more creative or
07:02 - effective way of visualizing this tree
07:04 - with proper spacing what might be some
07:05 - algorithm to figure out the proper
07:07 - spacing you know you could use physics
07:08 - even like what if you use spring forces
07:10 - between all these nodes some kind of
07:13 - repulsion forces to like have it figure
07:17 - itself out that's known as a force
07:18 - directed graph by the way I also think
07:20 - it'd be really wonderful to see an
07:21 - animation so what if you created here
07:24 - something you could do you create a
07:25 - sketch where there's nothing and you
07:27 - have every time you press a button it
07:29 - adds something to the tree and you see
07:30 - it animate to its correct spot and then
07:32 - you could hit a button called Traverse
07:34 - and it animates through the tree in the
07:36 - recursive fashion so what type of
07:37 - animated ways could you explain trees so
07:41 - I would love for anybody to do that
07:43 - share those projects would be if you
07:45 - want to this is actually if this is also
07:47 - a video that's with a course that I'm
07:50 - anyway just look in this video's
07:52 - description there'll be links to all the
07:54 - places to look to contribute your stuff
07:56 - ok so an algorithm get n items per level
08:02 - and separate them evenly yes so one
08:04 - thing you could look at is can you look
08:05 - through the tree to figure out how many
08:07 - items are our perks level and that's how
08:09 - you figure out the spacing so that's a
08:10 - great clue there and thank you Alka from
08:12 - the chat alright I will see all of you
08:14 - another time in another video in another
08:16 - place not too far in the future I hope
08:19 - and have a good I would say weekend
08:21 - because right now it's gonna be a
08:22 - weekend for me but you who knows you're
08:23 - watching this like from some bunkered
08:26 - some underground place where it's
08:28 - Tuesday morning or something or maybe
08:29 - you're just on in a field
08:31 - I imagine the fields with flowers around
08:32 - you in the wind blowing if that's the
08:34 - case play some frisbee frolic smell the
08:37 - roses forget about this binary tree
08:38 - stuff see you later
08:40 - [Music]

Cleaned transcript:

okay here I have back I did a video about a binary search tree I don't know how well I did but I tried my best and now I'm going to definitely not do such a good job but I'm going to try to show you some steps on how you might think about visualizing the tree and I'm kind of good enough to observe this like a bunch of times but but I just do it a very simple way and I'm asking you the community those of you with visual challenge with creative ideas to make a more beautiful animated version of this with some kind of creative possibilities that I can't even think of so here we go let's try to get started here so first of all I have two p5.js library because I use nothing from p5 Jeff other than setup and no canvas but now I'm going to say create canvas 600 comma 400 and I'm going to say background 51 and I'm going to do this oh boy that's a big canvas okay that's better zoomed in a little bit okay I'm kind of running out of space here but let's move this a little bit over give me a little bit more space here okay so this is the canvas so now whenever I create a node let's actually have the node also get an x and a y and say this x equals x and this dot y equals y then perhaps well we could keep the Traverse I might I could also store all the nodes in an array to iterate through them but let's not do that okay so what do I want to do whenever I create a node where do I do that Oh add value okay if if root equals null so the root node should be the X should be width divided by two and so I'm not actually using the constructor here height divided by two so I'm just setting it directly so I have this option of when I create the note I could pass it in x and y or I could just set it but here I want to set it because I want to make the root node there now let's use this Traverse so the Traverse function in the node is right here which is visit so instead of in addition to console logging it let's just do Phil 255 text this value this Dex this not why this is sort of no stroke so let's just actually draw the text so let's run this look at this that root node is right there 68 now it's hard for you to see it but that's fine and I realize that I don't want I want the root to be at the top so let's make y 16 so we can see the root node is up at the top 4 which is all times to be the lowest node that's just a coincidence 76 is the root ok so now whenever I add a node so now when I add a value through otherwise I go to this top root add node so in add notice here where is that add node aha so this is where I actually set it to be this node left or this nodes right so if I want to do that now I could say if it's to the left if X should be this nodes X I don't know 50 and it's Y should be this knows y plus 20 I'm just making up stuff and then when I create the right node it should be to the right but it's Y is still down so this is like a kind of rudimentary way of doing it right the root node gets the location and then I do the same thing whenever I add a node I look to where I'm adding it and I just grab that other nodes location and move it down to the left there's a lot of problems with this but it'll give us a basic idea look at that so and would be nice now to draw some lines between them and you can see how of this these are on top of each other so here's where I think I put it stop ah here's where I think I want to stop because I'm tired and I want you the community to figure out more interesting solutions so first of all what would be a way let's see if I draw the line even can I at least draw the line let's try to draw the line where do I where do I visit so I visit how do I know which one I previously in my Traverse where am i drawing it I heard he forgot underunder visit so this is where I draw it how do I know where it came from I don't so I would have to pass in here when I visit I would have to pass in a parent like where it came from in order to draw a line from the two different locations so visit from me visit from me and then in the tree visit from this dot route let's see if that works then now I could draw a line which goes from Paris ex parent dot Y to this dot X just out why and I need so this would need a stroke there we go so you can see this isn't so great let's at least draw like oh you know I should do I should say textaligncenter and let's also draw a little ellipse and let's give it like a sighs whoops what do i do that's wrong here the lips the lips wait what's the error undefined textalign spelled textalign wrong text the line whoops no fill so we can see here I'm kind of getting started here ah this is good so you can see this is now the tree but I haven't done such a good job because you know these things shouldn't be so maybe they should be far apart and then closer a bit depending on the level you know if this has a lot of numbers in it like if I were to add a hundred numbers to this like this is a mess everything all overlapping everything else because the nodes next to each other have left in the right so here's where I'm going to stop this is giving you an inkling of an idea so what I am asking you the community watching this video this code will be on github will be a readme file there you can add your versions of it how can you do a more creative or effective way of visualizing this tree with proper spacing what might be some algorithm to figure out the proper spacing you know you could use physics even like what if you use spring forces between all these nodes some kind of repulsion forces to like have it figure itself out that's known as a force directed graph by the way I also think it'd be really wonderful to see an animation so what if you created here something you could do you create a sketch where there's nothing and you have every time you press a button it adds something to the tree and you see it animate to its correct spot and then you could hit a button called Traverse and it animates through the tree in the recursive fashion so what type of animated ways could you explain trees so I would love for anybody to do that share those projects would be if you want to this is actually if this is also a video that's with a course that I'm anyway just look in this video's description there'll be links to all the places to look to contribute your stuff ok so an algorithm get n items per level and separate them evenly yes so one thing you could look at is can you look through the tree to figure out how many items are our perks level and that's how you figure out the spacing so that's a great clue there and thank you Alka from the chat alright I will see all of you another time in another video in another place not too far in the future I hope and have a good I would say weekend because right now it's gonna be a weekend for me but you who knows you're watching this like from some bunkered some underground place where it's Tuesday morning or something or maybe you're just on in a field I imagine the fields with flowers around you in the wind blowing if that's the case play some frisbee frolic smell the roses forget about this binary tree stuff see you later
