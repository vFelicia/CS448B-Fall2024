With timestamps:

00:00 - hello welcome you're about to watch
00:02 - another goal on 11 guests video and this
00:05 - video is all about the idea of
00:07 - interpolation so goal is gonna talk you
00:09 - through some art history examples which
00:12 - I wish I had the capacity to do myself
00:14 - on this channel and maybe someday I will
00:16 - live up to my ambitions to do so but
00:19 - which I think it's going to be a really
00:20 - interesting background and set up a
00:21 - coding challenge for you to do I'm gonna
00:24 - come in later in the video there's a few
00:26 - sound problems when I come in because I
00:28 - poorly mic'd myself so I apologize for
00:30 - that you should be able to hear and
00:31 - understand everything but when I enter
00:33 - all the sound problems are my fault not
00:35 - Golan's but I'm gonna come in and we're
00:38 - gonna talk about this coding challenge
00:39 - you're gonna see a bunch of examples and
00:41 - then if you so choose you'll be able to
00:43 - contribute to the repository the code
00:44 - repository and add your own version of
00:46 - the coding challenge but I want to say
00:47 - anything about what it is because I just
00:48 - want you to watch and enjoy Thanks enjoy
00:50 - hey everyone go on Levin here and by the
00:54 - good grace of Dan Shipman who's here
00:56 - here he is today we're gonna talk about
00:59 - interpolation in a coding train special
01:02 - episode which I'm first going to talk
01:04 - about sort of the the early history of
01:06 - interpolation in computer graphics and
01:08 - computer arts with kind of a little sort
01:12 - of fancy introduction all right
01:15 - who can't admire the natural poetry of
01:18 - the transformation of the butterfly and
01:20 - yet it's hidden away inside that
01:22 - chrysalis there we want to know what's
01:26 - going on in there you know turning water
01:29 - into wine is a miracle but how can we
01:32 - see it happen we want to see the steps
01:35 - as in this 1831 cartoon by Charles
01:38 - Philippe own who talks about who uses
01:41 - this kind of progressive stages of
01:43 - interpolation to show the degradation of
01:46 - the Kings regime okay computers are the
01:50 - ideal tool for visualizing
01:52 - transformations of this sort here we see
01:55 - the covers of Animorph right these
01:57 - popular books written for tweens which
01:59 - show of course right you know these
02:03 - these characters whose bodies turn into
02:05 - various animals what better time to kind
02:07 - of think about you know the
02:08 - transformation of the body then for
02:10 - tweens right and here we have a boy it
02:11 - turns into a horse
02:13 - girl turns into a starfish or maybe the
02:15 - other way around
02:16 - puberty so there's many different words
02:20 - that we use for talking about
02:21 - interpolation Architects call it lofting
02:23 - some people call it tweens some people
02:25 - call it interpolation or morphing
02:28 - morphing as I know it was was as you may
02:31 - know it from from from videos and so on
02:33 - was largely invented by Nancy Burson
02:35 - when she was an artist in residence at
02:37 - MIT in the late 70s and early 80s she
02:40 - used it to create these Beauty
02:41 - composites this is a the averages of
02:45 - Betty Davis and other movie stars of the
02:49 - 1950's and averages of Diane Keaton
02:52 - Brooke Shields and others from from the
02:56 - 70s and 80s trying to get this kind of
02:59 - ideal notion of female beauty as it's
03:00 - understood in the popular culture by
03:02 - averaging together these faces and sort
03:04 - of seeing if maybe there's some kind of
03:05 - latent kind of a structure there but we
03:08 - really start to see interpolation start
03:11 - in the late 60s with early computer art
03:14 - this is a project by by Chuck sori and
03:17 - James Shafer who created this
03:20 - progression from chaos to order and it's
03:24 - a it's a random distribution of each
03:27 - line of a hummingbird drawing and we see
03:29 - this kind of progression from from this
03:31 - kind of ordered situation here to a kind
03:33 - of chaotic one here as more and more
03:35 - noises done we see this similar project
03:38 - kind of prospect in examining from order
03:41 - to noise in this work by Manfred Moore
03:44 - called lady quark from 1972 in each of
03:48 - these squares here a perfect square is
03:53 - interpolating over 23 steps to a kind of
03:56 - randomized polygons and both of them
03:58 - have been we sampled in a number of ways
04:00 - and we see the kind of progression step
04:03 - by step by step from a square to a kind
04:05 - of perfect polygon this may be worth
04:07 - trying your own hand at recreating and
04:09 - the computer technique group ma hsiao
04:12 - Kimura and others in also 1968 created
04:16 - this series of posters in which a square
04:17 - interpolates not to randomness but to
04:19 - another form in this case the ideal form
04:22 - of a woman's face and there's a couple
04:24 - different versions of this
04:26 - project one with sort of linear
04:28 - interpolation and one with with non
04:29 - linear interpolation that begins to get
04:31 - at what we're going to talk about today
04:33 - like the exact character of the
04:35 - transformation so what we want to look
04:36 - at now here we see this kind of
04:40 - transformation in terms of two endpoints
04:42 - that represent things we understand well
04:44 - young and old we want to see how that
04:46 - happens but unlike Nancy Burson's work
04:48 - of 13 years later this project from the
04:50 - late 60s by Chuck Suri and James Shafer
04:52 - is sort of badly defined the lines that
04:56 - define one face and the other sort of
04:58 - interpolate from one position to the
04:59 - next but without much logic so you get
05:01 - this kind of glitchy situation in the
05:02 - middle this is a lovely project called
05:05 - fruit salad by use crane and an Adrian
05:07 - Haines also from the around 1970 and
05:10 - it's a mixture of the basic figures
05:12 - apple lemon orange and in this case
05:14 - chestnut which I guess they'll call a
05:15 - fruit and they're at the corners of the
05:17 - of the of the design so Apple in the
05:21 - upper left and lemon in the upper right
05:24 - chestnut and the lower left and orange
05:26 - in the lower right and with the add
05:28 - mixtures of these blended shapes in the
05:31 - middle and this is a project by William
05:35 - kilometer from 1970 through 75 circa
05:38 - then it was in this case shown a few
05:41 - years later where he interpolate from a
05:42 - banana to an ice cream cone he says
05:44 - because his wife liked both but you know
05:48 - the way of interpolating from a banana
05:50 - an ice cream cone was maybe not so
05:51 - obvious and so he's got some very
05:52 - strange intermediate shapes and in
05:54 - perhaps one of the most strange and
05:56 - absurd of all of these was this project
05:58 - called running Cola is Africa by again
06:01 - that the Japanese computer technique
06:03 - group Massoud Kimura and others in which
06:06 - the shape of the runner from the 68
06:07 - Olympics transforms into a coca-cola
06:09 - bottle and then and then into the
06:14 - continent of Africa so these kinds of
06:18 - complexities are a lot to deal with and
06:20 - I'm very interested interpellation Dan
06:22 - my host has done some fantastic
06:24 - interpolations himself but I want to
06:27 - keep it real simple I want to say like
06:29 - what's the simplest kind of
06:30 - interpolation we can do and I was very
06:33 - inspired by Oh Vasily Kandinsky x' book
06:36 - point and
06:36 - deplane he says look the simplest
06:38 - possible shapes okay are the the primary
06:41 - contrasting pair of planar shapes he
06:44 - says the minimally pointing in the
06:45 - maximally pointy right the circle and
06:47 - the triangle bruno Minari again looking
06:51 - at these kinds of simple shapes and
06:54 - saying like what can we do when we like
06:55 - examine these shapes and whooshes Wong
06:57 - in the early 70s this is hand drawn not
06:59 - with a computer thinking about how can
07:01 - we interpolate from one shape to the
07:03 - next so just looking at the these very
07:07 - basic shapes we asked like what are the
07:09 - ways we can get from one shape to the
07:11 - next I particularly like this one by
07:13 - wicious Wong here he has a circle that
07:15 - transforms to a triangle but it looks to
07:18 - be almost like a silhouette of a cone in
07:20 - 3d so with that I I want to show you
07:23 - today a kind of a coding challenge I
07:25 - want to pose to you and to introduce the
07:28 - challenge I'm going to show you how I've
07:31 - interpolated from a circle to a triangle
07:33 - I gave myself a week to come up with as
07:35 - many ways of interpreting from a circle
07:37 - to a triangle as I could think of and
07:39 - I'm going to show them to you all with
07:40 - Dan on my side there's a lot of ways of
07:43 - getting from A to B and John Cage once
07:46 - said if something is boring for two
07:48 - minutes
07:49 - do it for four if it's boring for four
07:51 - minutes do it for eight it's boring for
07:53 - eight minutes do it for 16 and then 32
07:55 - and eventually discover it's not so
07:57 - boring after all so we're going to go
07:58 - through all of the ways that I could
08:00 - think of in a week and then we're gonna
08:01 - invite you to make more of your own and
08:04 - kind of think of all the different ways
08:05 - that you can think of to interpret from
08:07 - a circle to a triangle and hopefully get
08:10 - your contributions onto our github repo
08:12 - so before we really really get started I
08:14 - want to talk about maybe the under
08:15 - structure of the constraints of the
08:17 - problem that I'm going to post you guys
08:19 - and how I've made my 13 or 14 different
08:21 - solutions ah what's our goal we want to
08:24 - get from a circle to a triangle right we
08:30 - want to interpolate the question is how
08:32 - do we want to get there and there's so
08:33 - many different ways and there's no one
08:35 - correct answer but a lot of the
08:37 - solutions that I'm gonna show you that
08:38 - I've come up with involve subdividing
08:41 - these into multiple points sometimes
08:44 - maybe a hundred or 300 points so that we
08:47 - have more more stuff to play with so
08:48 - what's really happening well I'll have a
08:50 - for example and I'll have a triangle it
08:54 - looks something like this it's an
08:55 - equilateral triangle right although I
08:58 - maybe I didn't quite draw it like that
08:59 - and then they're gonna share three
09:01 - points as a point here there's a point
09:03 - here there's a point here that's shared
09:05 - by the triangle but what I've done is
09:07 - I'm actually subdividing secretly the
09:09 - circle into lots of little pieces like
09:12 - this and so there's little particles or
09:14 - pieces that go around the circle and so
09:16 - forth and there are matching or
09:19 - corresponding points on the perimeter of
09:21 - the triangle that matched these like
09:24 - this so there's points along the
09:25 - triangle that match these points and so
09:29 - for example in the very first
09:31 - transformation then I show you I'm gonna
09:33 - do the very simplest thing I'm just
09:35 - gonna move each of these points in
09:37 - towards its corresponding point and I
09:39 - say take this and move it towards this
09:40 - this one move it towards this this one
09:42 - move it towards this this one towards
09:44 - here just one towards here and then keep
09:46 - going right
09:47 - so that's gonna be the first
09:48 - transformation we'll talk about all the
09:50 - different kinds of other transformations
09:52 - we'll see there's actually a lot of
09:53 - different ways all of the different
09:54 - circles and triangles I'm showing you
09:56 - consists of some kind of perimeter
09:58 - that's been computed okay and in no
10:00 - cases are there any sort of tricks where
10:02 - I'm pasting like a white circle on top
10:04 - of a black circle right there's a
10:06 - computed perimeter and I'm drawing it
10:09 - with I think a six pixel thick or three
10:11 - pixel thick line all right let's go over
10:13 - here Dan you want to join me yes OOP
10:19 - okay we're both here now
10:20 - thank you for tolerating the fact that
10:22 - apparently this studio is made for hit
10:24 - right-handed I didn't realize that till
10:27 - today I'm thrilled to be here thank you
10:30 - so much for have this is awesome so I
10:31 - thought I would I would show you some of
10:33 - the things I came up with all right and
10:35 - I guess this is your first time seeing
10:36 - them right so yes yeah so yeah we're
10:38 - gonna we're gonna we're gonna do some
10:40 - surprises for Daniel okay I'm gonna show
10:43 - them out of order I have a github repo
10:45 - where they're where they're actually
10:46 - stored over here in my my github that's
10:48 - up what it'll be in the video the link
10:50 - in the video's description so there's a
10:53 - getting every spoke
10:53 - to show them out of order rather than
10:55 - the order I made them and I'm gonna show
10:57 - them in maybe an order that kind of
10:58 - introduces the concept better so this is
11:00 - the first one I want to show you down
11:01 - okay and in this one here okay it's just
11:03 - as I explained over there a white board
11:05 - ivory sampled the circle and I've
11:08 - subsampled the triangle into the same
11:09 - number of points and I'm moving each
11:12 - point from the perimeter of the circle
11:14 - into its corresponding place in the
11:15 - triangle right in a linear interpolation
11:17 - and are you actually using the lerp
11:19 - function that's part of p5 or did you
11:21 - did you write like I probably I'm using
11:23 - the loop function if I'm not I probably
11:25 - should it both are good yeah yeah alert
11:28 - function it's not too hard to make
11:29 - yourself right it's one line of code if
11:31 - you look at this I might be doing that
11:32 - but that's what's happening here those
11:34 - points are moving in from from the
11:36 - circle to the triangle on this kind of
11:37 - ray and those rays in this case actually
11:40 - those rays don't actually correspond to
11:43 - the radii of the circle so there might
11:44 - be some weird angles and they're really
11:45 - moving in strange directions the next
11:47 - for the next time I show you okay is
11:49 - instead of moving those points in
11:51 - linearly
11:51 - I want to basically on every frame of
11:53 - animation I nudged them in by a random
11:55 - amount okay and then I connect them with
11:58 - a Bezier so it looks smooth so uh
11:59 - Jaggi okay so that's number five okay so
12:04 - I'm gonna go over here I pretend to
12:07 - watching it watch over here but actually
12:09 - I have to look over you're not fine so
12:10 - if we look there you'll see that each of
12:12 - those is gradually moving in towards the
12:15 - corresponding point and then at the very
12:17 - end I do a computation to see how
12:19 - different they are from where they
12:20 - should be
12:21 - uh-huh and I flip it back but there's a
12:23 - challenge left to the reader is to
12:24 - figure out how to move it back from a
12:26 - triangle to a circle anybody oh wait so
12:28 - you said so I totally get this in my
12:30 - head right if but I would I don't get is
12:33 - how the Bezier plays a role here what
12:35 - does that do exactly and how do you
12:36 - what's different about just drawing
12:38 - because you must be using begin shape
12:39 - and end shape and setting all these
12:40 - points yeah but I wanted it to look
12:43 - smooth right right and if I hadn't used
12:45 - the Bezier then it would be zig zaggy
12:47 - John which is fine that's legit that's
12:49 - another way of doing it right but I want
12:51 - I only wanted I went to the only sharp
12:53 - vertices this was an artistic choice to
12:55 - be at the corners where the triangle
12:57 - China was yeah it almost looks like
12:59 - you're using something like Perlin noise
13:01 - or something because of the way the
13:02 - smooth the contours are but it's just
13:04 - random randomness I'll have to look at
13:08 - look in the github repo you'll find out
13:09 - or try it both ways yourself now let me
13:12 - show you another one now and it actually
13:14 - it ends up a very different situation
13:18 - and it looks really similar to the first
13:21 - one I showed you which is number 4 - huh
13:22 - okay but it's a it's a different way
13:24 - okay hello buddies like little surprises
13:26 - here little surprise it is number zero
13:28 - okay and if we look at this one here
13:31 - okay check this one out you may think
13:33 - like what's the big deal it's like just
13:34 - moving really slowly uh-huh okay yeah
13:37 - and this one takes a little bit of
13:38 - knowledge about signal processing okay
13:40 - what I'm doing is here is the following
13:41 - I take the circle and I I subsample it
13:46 - into all the different points right I
13:48 - got maybe a couple hundred points around
13:50 - a circle and then I locally average
13:54 - every point with its neighbors hmm okay
13:56 - so that basically each one is moving
13:59 - towards its neighbors and it's
14:00 - tightening up the the ropes with the
14:03 - exception of three points that are that
14:04 - are fixed so I fixed point point point I
14:07 - say those points cannot move every other
14:09 - point can move right so when I so it's
14:11 - like a blur you're basically blurring
14:13 - the circle it's right triangle right
14:15 - exactly do you know I'm blurring the
14:16 - circle into a triangle but I'm fixing
14:18 - three points say those guys can't move
14:19 - Yeah right
14:20 - if I didn't fix those points then the
14:22 - whole thing was dreams and if you now
14:23 - you want this perfect equilateral
14:25 - triangle but if you picked three random
14:26 - points yeah what was probably a
14:28 - shrinkage tip anyway it's right not
14:29 - seriously yeah somebody should try it
14:30 - out okay now we're gonna move on I've
14:34 - shown those three so let's let's begin
14:36 - with some some easy ones here okay now
14:39 - this one what's this one here oh okay
14:44 - okay so whoa okay in this one when you
14:51 - guess what's happening well you must be
14:53 - doing one point at a time yeah so it's
14:56 - happen exactly what's happening here I
14:58 - start with a circle yeah and I'm gonna
15:00 - do and I have it the circle is
15:01 - subsampled into lots of points that are
15:04 - stored in an array okay
15:06 - and so each of your examples it's not
15:08 - necessary always just 200 points some of
15:10 - them have like 2,000 some of 200 or all
15:12 - the same number of points we don't know
15:13 - I have to look to find out Wow okay it
15:17 - actually sort depends on the example
15:18 - yeah that's what I mean it says it's not
15:20 - necessary like a require that's not a
15:21 - design constraint that you're saying to
15:23 - yourself like I wanted to do this with
15:24 - just this number of points you know a
15:26 - funny thing but a circle anyway getting
15:27 - right is it actually it's a bug recomm
15:29 - Peter like like you know like it's just
15:31 - a polygon with a lot of sides yes right
15:33 - so in this case here I have a polygon
15:35 - with a lot of sides which we nicknamed a
15:36 - circle right and then I I use some of
15:39 - the great operators really take that one
15:43 - oh yeah I'm doing I'm leaving the data
15:45 - I'm here so I I selected Li delete all
15:49 - the points off the side of course all
15:50 - points but three is I believe all the
15:53 - points red green that's what that this
15:54 - because I'm silly in my mind like
15:56 - interpolating each point one at a time
15:58 - to the spot all right I'm just gonna be
15:59 - a ridiculous always do eating him yeah
16:01 - because actually JavaScript has some
16:02 - really nice ways of playing with boys
16:04 - splice and delete and these kinds of
16:06 - other ways of like playing with arrays
16:07 - were usually literally delete data but I
16:09 - stash a copy off to the side so that
16:11 - after it's done with its operation i
16:12 - reflection the original copy
16:14 - that's number I'll still look number
16:17 - seven now okay whoa
16:20 - all right this one this one's easy you
16:23 - want describe it well now now you're
16:25 - just you're you're adding more points
16:28 - this one only does go both directions
16:31 - yeah it does right exactly so this one
16:33 - says well you know really there's a
16:35 - there's a way that they say to make a
16:37 - sculpture of an elephant
16:38 - uh-huh okay you start with a block of
16:40 - marble and you remove all the pieces of
16:42 - the marble - don't wear like an elephant
16:43 - right so that's what's going on here I
16:46 - start with the so it started as a circle
16:47 - I somebody turn to look at the like
16:49 - break at this part here right now it
16:52 - starts as a circle yeah and I remove all
16:53 - the parts all the points of the circle
16:55 - that don't look like a star the triangle
16:56 - and then I yeah
16:58 - so boom voila triangle yeah okay that's
17:02 - number seven number thirteen we're gonna
17:06 - do okay what's going on here damn swell
17:10 - you go from a triangle to a hexagon
17:13 - hexagon to a whatever decagon that gone
17:16 - gone gone he drew Piedra no God
17:20 - Ghana's polygon he turned his face is a
17:22 - solid asado
17:23 - so yeah this makes me says start with
17:25 - three dublicate get six double get 12
17:28 - double again and you just decide at 128
17:30 - or whatever whatever the bad number is
17:31 - it's not 128 but it's some number you
17:33 - stop yeah forty-eighters organizations
17:35 - like that and it looks sufficiently like
17:37 - a circle W and there's a little bit of
17:40 - non linear interpolation in terms of the
17:42 - the way that it moves from one point of
17:43 - it to kind of give it a kind of
17:44 - acceleration but that's not that's just
17:46 - a grace note right that's right not
17:47 - actually necessary all right so that's
17:50 - that's there let's move on to number 202
17:55 - all right this one I think a lot of
17:57 - Illustrator users and graphic designers
17:59 - will recognize what you busy curves
18:03 - that's right that's antique cars again
18:04 - so what's interesting is this okay when
18:06 - this one gets up to looking like a
18:08 - circle it's not actually a circle but
18:10 - there are some magic numbers then you
18:12 - can google around and find which define
18:14 - the locations of their control points
18:17 - these control points here these these
18:20 - control points right that define a
18:22 - perfect arc and a very close
18:25 - approximation good enough for government
18:27 - work for a circle with busy acres it's
18:29 - not a true circle but it's a it's three
18:31 - busiest right that are that with the
18:33 - magic control numbers look very close to
18:36 - a circle and so here what I'm doing is
18:38 - I'm moving those control points until
18:40 - they're so close together they
18:41 - essentially create a sharp vertex and
18:44 - two triangle yeah
18:45 - all right that's number two number three
18:48 - over here making this one I have a
18:55 - couple guidelines in there to help
18:56 - he's out I mean what's interesting to me
19:00 - is this looks just almost exactly like
19:02 - the first one that he proposed where
19:03 - each point is moving from the circle to
19:05 - the triangle like visually it feels like
19:07 - it has the same result that's fair
19:09 - that's fair it's not what's happening
19:11 - but it's not what's happened now okay so
19:12 - in this case here the graphic as a whole
19:15 - there's no subsampling at all in fact
19:18 - there's only three graphical elements
19:20 - that are apart from the red lines which
19:21 - is a guidelines to help you understand
19:22 - what's going on there are only three
19:24 - graphical elements okay
19:25 - the entire thing is always drawn with
19:27 - three circular arcs the difference is
19:30 - that the circular arcs they're their
19:32 - radii goes from the radius of the circle
19:34 - to infinity and when you have a circular
19:36 - arc whose radius is infinity straight
19:38 - line you end up with effectively a
19:39 - straight line which is what the
19:40 - triangles made it yeah right so those
19:42 - you can see the vertices of the triangle
19:44 - heading off to it so the corners with a
19:46 - darker defined from heading off to
19:48 - infinity when that happens you have this
19:50 - triangle it feels like breathing and we
19:51 - could feel like meditation or something
19:53 - better perform I was trained to doing
19:57 - that was oh three so let's move to on
20:00 - 206 what what's the original numbering
20:02 - just the numbering that you happen to do
20:03 - them in yeah sure yeah exactly
20:06 - okay this one I think is almost like
20:08 - that's pretty the logo right got kind of
20:11 - a logo graph oh yeah I think there's
20:12 - like air BnB is in there somewhere
20:14 - mm I by accident buzz marketed something
20:17 - like to cut that out but it doesn't
20:20 - video yeah this one's very simple what
20:23 - do you think's going on here let's see
20:27 - um well are you doing the same thing but
20:33 - with curved vertical adding removing
20:34 - points but with curved vertex no it
20:38 - turns out that what's going on here the
20:41 - math to do this was a little bit old
20:42 - with fit fussy this is an alternation of
20:46 - three circular arcs and three straight
20:48 - lines the straight lines are actually
20:50 - accomplished just by move by by you know
20:53 - I draw a vertex vertex at the end of
20:55 - work and then I drove another so diverse
20:58 - range the diversity so you can't use the
20:59 - actual arc function and the
21:01 - for here what you have do you have to
21:02 - like you have to calculate that arc so
21:05 - that you know where the end points are I
21:06 - probably could we could but you solely
21:08 - calculate the end points for the well so
21:09 - that would have been different way of
21:10 - doing it right right so what the ants
21:12 - just said is I could have done this by
21:14 - drawing an arc drawing a line drawing an
21:17 - arc drawing a line drawing an arc right
21:19 - but I didn't do it that way because I
21:20 - set the personal rule for myself and I
21:22 - invite you to have the same which is
21:25 - that the whole thing is computed as a
21:26 - similar scene on perimeter I've computed
21:28 - every point along this railing here and
21:30 - to do that I had to compute using sine
21:31 - and cosine I'm sure you get yeah yeah
21:33 - there's a video tutorial for that we'll
21:35 - try to include it in this video's
21:36 - description as well but yeah I compute
21:38 - all the points along the circular arc
21:39 - then I compute all the points along this
21:41 - circular arc and on the third one and
21:43 - the begin begin shape and shape takes
21:45 - care of the rest the stitches are all
21:47 - together and graze the straight lines in
21:48 - between great god I've got it got it got
21:50 - it
21:50 - and that was number six here's number 12
21:53 - have a look here all right now there's
21:58 - some guidelines here as well you can see
21:59 - on this one
21:59 - I want to guess what's going on here
22:05 - well now this is how I imagined you did
22:09 - the previous one
22:09 - oh except that the line there's some
22:12 - other circles there yeah okay so this
22:15 - one is the alternation of their six
22:18 - circular arcs okay let's call them type
22:20 - a Type B okay okay the type a are simple
22:23 - to explain their corners great okay so
22:25 - the corners are circular arcs God and
22:28 - they're they change from the radius of
22:30 - the circle down to zero yeah okay so
22:33 - they get from the radius of the circle
22:35 - down to kind of pointy
22:36 - right okay but the B type arcs are
22:38 - alternating so it goes aba-ba-ba around
22:40 - this rail and the B type arcs start at
22:42 - the radius and circle but go out to
22:44 - infinity right and so they get larger
22:46 - and larger and therefore straighter
22:47 - answer okay and so this is exactly the
22:49 - same as the previous one except for
22:50 - instead of that straight line there's
22:51 - the P type arc is that right
22:55 - maybe not close enough we cut that out
23:00 - too
23:01 - no all right that's 12 next I got I can
23:07 - check confessed and the last ones are
23:08 - really ugly okay that's good luckily
23:10 - they're like this these are like we can
23:13 - call them the rejects but like
23:15 - they're my one of the things I like to
23:19 - do with this channel is to make ugly
23:21 - stuff and then have the world out there
23:24 - of people who are talented at making
23:25 - beautiful stuff make more make it make
23:27 - it beautiful
23:28 - so somebody will figure out how to make
23:29 - your the ugly stuff turned beautiful
23:31 - these are gnarly alright number eight
23:34 - these are the the least loved okay um so
23:39 - gross but very simple you just push down
23:41 - on the circle to get a triangle right
23:45 - but again it's a computed perimeter so
23:47 - right so the there's an R computed and
23:49 - then I just draw a straight line but I
23:51 - don't make any attempts to kind of
23:52 - negotiate that range in curvature there
23:56 - right I just make like you know it's
23:57 - just it's just cropping in right right
23:59 - but notice I'm not doing this but like
24:00 - moving in some white rectangles or
24:02 - anything yes it's a computed perimeter
24:04 - all right okay number nine I think this
24:08 - might be the ugliest of the bunch maybe
24:15 - it is it is right the circle shrinks
24:18 - revealing a triangle got it exactly
24:20 - gnarly alright number 10 is for you
24:23 - physics enthusiasts out there I think
24:26 - yeah is the one whoa
24:29 - like a little sine wave or something no
24:31 - no sine wave spring spring the springs
24:34 - of course like for support yeah so it's
24:37 - kind of a same thing so I think I've got
24:39 - two different sets of rest lengths
24:41 - and/or rest positions and they basically
24:44 - they they go the way and then they get
24:47 - attracted to their other center breast
24:48 - positions doing and they kind of move
24:50 - from one to the other so this slosh and
24:52 - then when it gets close enough it's her
24:54 - flips above any other set
24:56 - so there's that one and the last one I
24:58 - have today Dan is number 11 and this one
25:03 - was starting his whoa yeah I can't even
25:05 - explain this one to put words to this I
25:12 - mean I can't even describe it this was
25:14 - actually a failed attempt to produce one
25:16 - of the other ideas and along the way I
25:20 - just kind of had this
25:21 - the accident and I was like oh I would
25:23 - never have thought of this it was a
25:26 - complete happy accident you're right
25:28 - right it's well it'll look to me if I
25:29 - were to explain this it's each side is
25:31 - subdivided into straight-line an arc and
25:33 - the arc is I think you shrinking or
25:37 - increasing and I guess the radius for
25:39 - that arc and the point the center point
25:42 - of that arc is moving which causes the
25:45 - other something's happening with the
25:47 - radius of that arc - it's not just like
25:49 - a bubble I have like an off by one error
25:52 - yeah is one of the other designs and
25:53 - that's how this yeah yeah yeah it was
25:56 - the one that looked like a logo right
25:57 - this was it this was this was a failed
25:59 - attempt to make the one that look like a
26:00 - logo and that's how it happened there
26:02 - so I thought it'd be fun to kind of open
26:04 - this up for everyone else yeah yeah I
26:06 - have one other special treat which is to
26:10 - say I also have all the same things for
26:13 - squares so Square to Circle Square to
26:15 - circle not squared a triangle
26:17 - well you could go do that through
26:18 - through through you could do circle to
26:19 - square it a triangle that's right
26:21 - now III did in fact many of these
26:23 - transformations I simply copy the
26:24 - transformation and you know I just added
26:26 - a fourth side and so the dosing system
26:29 - okay if you prefer squares the triangles
26:31 - and I I actually kind of do myself and
26:34 - then I wouldn't blame you if you did
26:35 - because triangles are so pointy and
26:37 - you're like ouch I don't want to do
26:39 - those points you can do this with
26:41 - squares instead so there's a github repo
26:44 - yet which has all these examples you got
26:46 - and we're just sort of coming up with
26:49 - this right now so yeah people could
26:50 - submit there's a variety of different
26:52 - ways one is these are so conducive to
26:54 - making a nice little gift you could
26:55 - tweet the gift paper with like a hashtag
26:57 - to gift that's right
26:58 - like wish between two to two coins well
27:00 - some of these that we just like the ten
27:02 - print hash tag or so maybe triangle
27:05 - circle triangle triangle circle then you
27:08 - can also we could create like a read
27:10 - markdown file in the github repo where
27:12 - people could link to theirs or they
27:13 - could just pull request the actual code
27:15 - into it so we'll write up some
27:17 - instructure's or something on the repo
27:18 - sounds great
27:19 - and I will I think what would be fun for
27:21 - me at least is to try to either come up
27:24 - with my own or just remake one of these
27:25 - as a little tutorial some people want to
27:27 - get started at some point might
27:29 - exist by the time that you're watching
27:31 - this but they'll be a follow-up video
27:32 - that'll be linked to of me kind of going
27:34 - through and making one of these that's
27:35 - right okay actually then you already
27:37 - have made one enough it was a fail it
27:39 - was a failed one though I think I didn't
27:41 - know it was not it was a feeling I
27:42 - actually have a link and if I just show
27:44 - you for a second over here in my repo I
27:47 - link to the one that Dan made it was the
27:49 - one where you were using super ellipses
27:51 - to morph or circle to a square oh so it
27:55 - was on it did somebody say we see more
27:56 - complicated by accident he's noting that
27:59 - he's actually gonna twice okay that's
28:01 - forgotten he has a ten minute coding
28:04 - challenge on shake morphing and another
28:05 - one at coding challenge number 19 on a
28:07 - super ellipse just specifically for
28:09 - circles to squares and does not work for
28:11 - triangles so that that would know that
28:13 - you're you're 2.2 the time code in the
28:15 - video yeah so this one I felt it was
28:18 - such a disaster that I never actually
28:19 - edited it out as a separate coding
28:21 - challenge video so maybe I'll redo that
28:23 - one or I'll just revisit it to see if it
28:26 - we can put it somewhere but yes you got
28:27 - the link right there and if you like
28:28 - this stuff I also have some more links
28:30 - over here in the github repo just for
28:32 - more reference isn't it awesome cool
28:34 - great thank you so much for being here
28:35 - this is something I try to honor did you
28:38 - actually make it all the way to the end
28:40 - of this video thank you so much for
28:41 - watching now if you made it all the way
28:43 - to this vid and of this video there's
28:44 - actually a really special treat in store
28:46 - for you after you listen to you talk for
28:48 - about 30 seconds I'll get to what that
28:49 - is in a second so I just wanted to come
28:51 - back and say here's the github
28:53 - repository uh github slash goal on 11
28:55 - slash circle - morphing I will put a
28:57 - link in the video's description all of
28:59 - the code examples are here and we'll
29:01 - come up with a way that maybe you can
29:03 - submit a link to maybe there's a way
29:05 - that you could just even add yours to
29:06 - this readme but if you want to share
29:08 - yours make an animated gif of it and add
29:11 - it to Twitter with the hashtag circle
29:13 - morphing since there's no results for
29:14 - circle morphing I look forward to many
29:16 - results for a circle morphing and it
29:17 - could be circle to triangle or circle to
29:19 - square or whatever you so choose so
29:20 - let's use that hashtag let's use this
29:22 - repository and at some point you'll see
29:24 - a video for me where I actually go
29:26 - through one of these and do a little
29:27 - tutorial about it as well okay so you
29:28 - watch this whole video and you watch
29:30 - this actual explanation for me now you
29:31 - will get to see goal unleavened reading
29:34 - from what I hope will be a new tradition
29:35 - for all coda train guests reading from
29:39 - the book of random
29:40 - numbers the coding trade storybook good
29:42 - night even though only not be the night
29:43 - but sleep tight and listen to the nice
29:45 - little bike bye
29:49 - I'm gonna read line oh nine five-o
29:51 - five-o nine five-o five-o 3 0 0 3 o 2 o
30:00 - 4 1 4 3 2 1 2
30:04 - 1:07 808 four seven eight eight six
30:09 - eight three seven seven five nine six
30:12 - three seven four one seven three one
30:14 - nine seven oh eight one eight eight one
30:19 - four six thank you
30:28 - [Music]
30:36 - you

Cleaned transcript:

hello welcome you're about to watch another goal on 11 guests video and this video is all about the idea of interpolation so goal is gonna talk you through some art history examples which I wish I had the capacity to do myself on this channel and maybe someday I will live up to my ambitions to do so but which I think it's going to be a really interesting background and set up a coding challenge for you to do I'm gonna come in later in the video there's a few sound problems when I come in because I poorly mic'd myself so I apologize for that you should be able to hear and understand everything but when I enter all the sound problems are my fault not Golan's but I'm gonna come in and we're gonna talk about this coding challenge you're gonna see a bunch of examples and then if you so choose you'll be able to contribute to the repository the code repository and add your own version of the coding challenge but I want to say anything about what it is because I just want you to watch and enjoy Thanks enjoy hey everyone go on Levin here and by the good grace of Dan Shipman who's here here he is today we're gonna talk about interpolation in a coding train special episode which I'm first going to talk about sort of the the early history of interpolation in computer graphics and computer arts with kind of a little sort of fancy introduction all right who can't admire the natural poetry of the transformation of the butterfly and yet it's hidden away inside that chrysalis there we want to know what's going on in there you know turning water into wine is a miracle but how can we see it happen we want to see the steps as in this 1831 cartoon by Charles Philippe own who talks about who uses this kind of progressive stages of interpolation to show the degradation of the Kings regime okay computers are the ideal tool for visualizing transformations of this sort here we see the covers of Animorph right these popular books written for tweens which show of course right you know these these characters whose bodies turn into various animals what better time to kind of think about you know the transformation of the body then for tweens right and here we have a boy it turns into a horse girl turns into a starfish or maybe the other way around puberty so there's many different words that we use for talking about interpolation Architects call it lofting some people call it tweens some people call it interpolation or morphing morphing as I know it was was as you may know it from from from videos and so on was largely invented by Nancy Burson when she was an artist in residence at MIT in the late 70s and early 80s she used it to create these Beauty composites this is a the averages of Betty Davis and other movie stars of the 1950's and averages of Diane Keaton Brooke Shields and others from from the 70s and 80s trying to get this kind of ideal notion of female beauty as it's understood in the popular culture by averaging together these faces and sort of seeing if maybe there's some kind of latent kind of a structure there but we really start to see interpolation start in the late 60s with early computer art this is a project by by Chuck sori and James Shafer who created this progression from chaos to order and it's a it's a random distribution of each line of a hummingbird drawing and we see this kind of progression from from this kind of ordered situation here to a kind of chaotic one here as more and more noises done we see this similar project kind of prospect in examining from order to noise in this work by Manfred Moore called lady quark from 1972 in each of these squares here a perfect square is interpolating over 23 steps to a kind of randomized polygons and both of them have been we sampled in a number of ways and we see the kind of progression step by step by step from a square to a kind of perfect polygon this may be worth trying your own hand at recreating and the computer technique group ma hsiao Kimura and others in also 1968 created this series of posters in which a square interpolates not to randomness but to another form in this case the ideal form of a woman's face and there's a couple different versions of this project one with sort of linear interpolation and one with with non linear interpolation that begins to get at what we're going to talk about today like the exact character of the transformation so what we want to look at now here we see this kind of transformation in terms of two endpoints that represent things we understand well young and old we want to see how that happens but unlike Nancy Burson's work of 13 years later this project from the late 60s by Chuck Suri and James Shafer is sort of badly defined the lines that define one face and the other sort of interpolate from one position to the next but without much logic so you get this kind of glitchy situation in the middle this is a lovely project called fruit salad by use crane and an Adrian Haines also from the around 1970 and it's a mixture of the basic figures apple lemon orange and in this case chestnut which I guess they'll call a fruit and they're at the corners of the of the of the design so Apple in the upper left and lemon in the upper right chestnut and the lower left and orange in the lower right and with the add mixtures of these blended shapes in the middle and this is a project by William kilometer from 1970 through 75 circa then it was in this case shown a few years later where he interpolate from a banana to an ice cream cone he says because his wife liked both but you know the way of interpolating from a banana an ice cream cone was maybe not so obvious and so he's got some very strange intermediate shapes and in perhaps one of the most strange and absurd of all of these was this project called running Cola is Africa by again that the Japanese computer technique group Massoud Kimura and others in which the shape of the runner from the 68 Olympics transforms into a cocacola bottle and then and then into the continent of Africa so these kinds of complexities are a lot to deal with and I'm very interested interpellation Dan my host has done some fantastic interpolations himself but I want to keep it real simple I want to say like what's the simplest kind of interpolation we can do and I was very inspired by Oh Vasily Kandinsky x' book point and deplane he says look the simplest possible shapes okay are the the primary contrasting pair of planar shapes he says the minimally pointing in the maximally pointy right the circle and the triangle bruno Minari again looking at these kinds of simple shapes and saying like what can we do when we like examine these shapes and whooshes Wong in the early 70s this is hand drawn not with a computer thinking about how can we interpolate from one shape to the next so just looking at the these very basic shapes we asked like what are the ways we can get from one shape to the next I particularly like this one by wicious Wong here he has a circle that transforms to a triangle but it looks to be almost like a silhouette of a cone in 3d so with that I I want to show you today a kind of a coding challenge I want to pose to you and to introduce the challenge I'm going to show you how I've interpolated from a circle to a triangle I gave myself a week to come up with as many ways of interpreting from a circle to a triangle as I could think of and I'm going to show them to you all with Dan on my side there's a lot of ways of getting from A to B and John Cage once said if something is boring for two minutes do it for four if it's boring for four minutes do it for eight it's boring for eight minutes do it for 16 and then 32 and eventually discover it's not so boring after all so we're going to go through all of the ways that I could think of in a week and then we're gonna invite you to make more of your own and kind of think of all the different ways that you can think of to interpret from a circle to a triangle and hopefully get your contributions onto our github repo so before we really really get started I want to talk about maybe the under structure of the constraints of the problem that I'm going to post you guys and how I've made my 13 or 14 different solutions ah what's our goal we want to get from a circle to a triangle right we want to interpolate the question is how do we want to get there and there's so many different ways and there's no one correct answer but a lot of the solutions that I'm gonna show you that I've come up with involve subdividing these into multiple points sometimes maybe a hundred or 300 points so that we have more more stuff to play with so what's really happening well I'll have a for example and I'll have a triangle it looks something like this it's an equilateral triangle right although I maybe I didn't quite draw it like that and then they're gonna share three points as a point here there's a point here there's a point here that's shared by the triangle but what I've done is I'm actually subdividing secretly the circle into lots of little pieces like this and so there's little particles or pieces that go around the circle and so forth and there are matching or corresponding points on the perimeter of the triangle that matched these like this so there's points along the triangle that match these points and so for example in the very first transformation then I show you I'm gonna do the very simplest thing I'm just gonna move each of these points in towards its corresponding point and I say take this and move it towards this this one move it towards this this one move it towards this this one towards here just one towards here and then keep going right so that's gonna be the first transformation we'll talk about all the different kinds of other transformations we'll see there's actually a lot of different ways all of the different circles and triangles I'm showing you consists of some kind of perimeter that's been computed okay and in no cases are there any sort of tricks where I'm pasting like a white circle on top of a black circle right there's a computed perimeter and I'm drawing it with I think a six pixel thick or three pixel thick line all right let's go over here Dan you want to join me yes OOP okay we're both here now thank you for tolerating the fact that apparently this studio is made for hit righthanded I didn't realize that till today I'm thrilled to be here thank you so much for have this is awesome so I thought I would I would show you some of the things I came up with all right and I guess this is your first time seeing them right so yes yeah so yeah we're gonna we're gonna we're gonna do some surprises for Daniel okay I'm gonna show them out of order I have a github repo where they're where they're actually stored over here in my my github that's up what it'll be in the video the link in the video's description so there's a getting every spoke to show them out of order rather than the order I made them and I'm gonna show them in maybe an order that kind of introduces the concept better so this is the first one I want to show you down okay and in this one here okay it's just as I explained over there a white board ivory sampled the circle and I've subsampled the triangle into the same number of points and I'm moving each point from the perimeter of the circle into its corresponding place in the triangle right in a linear interpolation and are you actually using the lerp function that's part of p5 or did you did you write like I probably I'm using the loop function if I'm not I probably should it both are good yeah yeah alert function it's not too hard to make yourself right it's one line of code if you look at this I might be doing that but that's what's happening here those points are moving in from from the circle to the triangle on this kind of ray and those rays in this case actually those rays don't actually correspond to the radii of the circle so there might be some weird angles and they're really moving in strange directions the next for the next time I show you okay is instead of moving those points in linearly I want to basically on every frame of animation I nudged them in by a random amount okay and then I connect them with a Bezier so it looks smooth so uh Jaggi okay so that's number five okay so I'm gonna go over here I pretend to watching it watch over here but actually I have to look over you're not fine so if we look there you'll see that each of those is gradually moving in towards the corresponding point and then at the very end I do a computation to see how different they are from where they should be uhhuh and I flip it back but there's a challenge left to the reader is to figure out how to move it back from a triangle to a circle anybody oh wait so you said so I totally get this in my head right if but I would I don't get is how the Bezier plays a role here what does that do exactly and how do you what's different about just drawing because you must be using begin shape and end shape and setting all these points yeah but I wanted it to look smooth right right and if I hadn't used the Bezier then it would be zig zaggy John which is fine that's legit that's another way of doing it right but I want I only wanted I went to the only sharp vertices this was an artistic choice to be at the corners where the triangle China was yeah it almost looks like you're using something like Perlin noise or something because of the way the smooth the contours are but it's just random randomness I'll have to look at look in the github repo you'll find out or try it both ways yourself now let me show you another one now and it actually it ends up a very different situation and it looks really similar to the first one I showed you which is number 4 huh okay but it's a it's a different way okay hello buddies like little surprises here little surprise it is number zero okay and if we look at this one here okay check this one out you may think like what's the big deal it's like just moving really slowly uhhuh okay yeah and this one takes a little bit of knowledge about signal processing okay what I'm doing is here is the following I take the circle and I I subsample it into all the different points right I got maybe a couple hundred points around a circle and then I locally average every point with its neighbors hmm okay so that basically each one is moving towards its neighbors and it's tightening up the the ropes with the exception of three points that are that are fixed so I fixed point point point I say those points cannot move every other point can move right so when I so it's like a blur you're basically blurring the circle it's right triangle right exactly do you know I'm blurring the circle into a triangle but I'm fixing three points say those guys can't move Yeah right if I didn't fix those points then the whole thing was dreams and if you now you want this perfect equilateral triangle but if you picked three random points yeah what was probably a shrinkage tip anyway it's right not seriously yeah somebody should try it out okay now we're gonna move on I've shown those three so let's let's begin with some some easy ones here okay now this one what's this one here oh okay okay so whoa okay in this one when you guess what's happening well you must be doing one point at a time yeah so it's happen exactly what's happening here I start with a circle yeah and I'm gonna do and I have it the circle is subsampled into lots of points that are stored in an array okay and so each of your examples it's not necessary always just 200 points some of them have like 2,000 some of 200 or all the same number of points we don't know I have to look to find out Wow okay it actually sort depends on the example yeah that's what I mean it says it's not necessary like a require that's not a design constraint that you're saying to yourself like I wanted to do this with just this number of points you know a funny thing but a circle anyway getting right is it actually it's a bug recomm Peter like like you know like it's just a polygon with a lot of sides yes right so in this case here I have a polygon with a lot of sides which we nicknamed a circle right and then I I use some of the great operators really take that one oh yeah I'm doing I'm leaving the data I'm here so I I selected Li delete all the points off the side of course all points but three is I believe all the points red green that's what that this because I'm silly in my mind like interpolating each point one at a time to the spot all right I'm just gonna be a ridiculous always do eating him yeah because actually JavaScript has some really nice ways of playing with boys splice and delete and these kinds of other ways of like playing with arrays were usually literally delete data but I stash a copy off to the side so that after it's done with its operation i reflection the original copy that's number I'll still look number seven now okay whoa all right this one this one's easy you want describe it well now now you're just you're you're adding more points this one only does go both directions yeah it does right exactly so this one says well you know really there's a there's a way that they say to make a sculpture of an elephant uhhuh okay you start with a block of marble and you remove all the pieces of the marble don't wear like an elephant right so that's what's going on here I start with the so it started as a circle I somebody turn to look at the like break at this part here right now it starts as a circle yeah and I remove all the parts all the points of the circle that don't look like a star the triangle and then I yeah so boom voila triangle yeah okay that's number seven number thirteen we're gonna do okay what's going on here damn swell you go from a triangle to a hexagon hexagon to a whatever decagon that gone gone gone he drew Piedra no God Ghana's polygon he turned his face is a solid asado so yeah this makes me says start with three dublicate get six double get 12 double again and you just decide at 128 or whatever whatever the bad number is it's not 128 but it's some number you stop yeah fortyeighters organizations like that and it looks sufficiently like a circle W and there's a little bit of non linear interpolation in terms of the the way that it moves from one point of it to kind of give it a kind of acceleration but that's not that's just a grace note right that's right not actually necessary all right so that's that's there let's move on to number 202 all right this one I think a lot of Illustrator users and graphic designers will recognize what you busy curves that's right that's antique cars again so what's interesting is this okay when this one gets up to looking like a circle it's not actually a circle but there are some magic numbers then you can google around and find which define the locations of their control points these control points here these these control points right that define a perfect arc and a very close approximation good enough for government work for a circle with busy acres it's not a true circle but it's a it's three busiest right that are that with the magic control numbers look very close to a circle and so here what I'm doing is I'm moving those control points until they're so close together they essentially create a sharp vertex and two triangle yeah all right that's number two number three over here making this one I have a couple guidelines in there to help he's out I mean what's interesting to me is this looks just almost exactly like the first one that he proposed where each point is moving from the circle to the triangle like visually it feels like it has the same result that's fair that's fair it's not what's happening but it's not what's happened now okay so in this case here the graphic as a whole there's no subsampling at all in fact there's only three graphical elements that are apart from the red lines which is a guidelines to help you understand what's going on there are only three graphical elements okay the entire thing is always drawn with three circular arcs the difference is that the circular arcs they're their radii goes from the radius of the circle to infinity and when you have a circular arc whose radius is infinity straight line you end up with effectively a straight line which is what the triangles made it yeah right so those you can see the vertices of the triangle heading off to it so the corners with a darker defined from heading off to infinity when that happens you have this triangle it feels like breathing and we could feel like meditation or something better perform I was trained to doing that was oh three so let's move to on 206 what what's the original numbering just the numbering that you happen to do them in yeah sure yeah exactly okay this one I think is almost like that's pretty the logo right got kind of a logo graph oh yeah I think there's like air BnB is in there somewhere mm I by accident buzz marketed something like to cut that out but it doesn't video yeah this one's very simple what do you think's going on here let's see um well are you doing the same thing but with curved vertical adding removing points but with curved vertex no it turns out that what's going on here the math to do this was a little bit old with fit fussy this is an alternation of three circular arcs and three straight lines the straight lines are actually accomplished just by move by by you know I draw a vertex vertex at the end of work and then I drove another so diverse range the diversity so you can't use the actual arc function and the for here what you have do you have to like you have to calculate that arc so that you know where the end points are I probably could we could but you solely calculate the end points for the well so that would have been different way of doing it right right so what the ants just said is I could have done this by drawing an arc drawing a line drawing an arc drawing a line drawing an arc right but I didn't do it that way because I set the personal rule for myself and I invite you to have the same which is that the whole thing is computed as a similar scene on perimeter I've computed every point along this railing here and to do that I had to compute using sine and cosine I'm sure you get yeah yeah there's a video tutorial for that we'll try to include it in this video's description as well but yeah I compute all the points along the circular arc then I compute all the points along this circular arc and on the third one and the begin begin shape and shape takes care of the rest the stitches are all together and graze the straight lines in between great god I've got it got it got it and that was number six here's number 12 have a look here all right now there's some guidelines here as well you can see on this one I want to guess what's going on here well now this is how I imagined you did the previous one oh except that the line there's some other circles there yeah okay so this one is the alternation of their six circular arcs okay let's call them type a Type B okay okay the type a are simple to explain their corners great okay so the corners are circular arcs God and they're they change from the radius of the circle down to zero yeah okay so they get from the radius of the circle down to kind of pointy right okay but the B type arcs are alternating so it goes abababa around this rail and the B type arcs start at the radius and circle but go out to infinity right and so they get larger and larger and therefore straighter answer okay and so this is exactly the same as the previous one except for instead of that straight line there's the P type arc is that right maybe not close enough we cut that out too no all right that's 12 next I got I can check confessed and the last ones are really ugly okay that's good luckily they're like this these are like we can call them the rejects but like they're my one of the things I like to do with this channel is to make ugly stuff and then have the world out there of people who are talented at making beautiful stuff make more make it make it beautiful so somebody will figure out how to make your the ugly stuff turned beautiful these are gnarly alright number eight these are the the least loved okay um so gross but very simple you just push down on the circle to get a triangle right but again it's a computed perimeter so right so the there's an R computed and then I just draw a straight line but I don't make any attempts to kind of negotiate that range in curvature there right I just make like you know it's just it's just cropping in right right but notice I'm not doing this but like moving in some white rectangles or anything yes it's a computed perimeter all right okay number nine I think this might be the ugliest of the bunch maybe it is it is right the circle shrinks revealing a triangle got it exactly gnarly alright number 10 is for you physics enthusiasts out there I think yeah is the one whoa like a little sine wave or something no no sine wave spring spring the springs of course like for support yeah so it's kind of a same thing so I think I've got two different sets of rest lengths and/or rest positions and they basically they they go the way and then they get attracted to their other center breast positions doing and they kind of move from one to the other so this slosh and then when it gets close enough it's her flips above any other set so there's that one and the last one I have today Dan is number 11 and this one was starting his whoa yeah I can't even explain this one to put words to this I mean I can't even describe it this was actually a failed attempt to produce one of the other ideas and along the way I just kind of had this the accident and I was like oh I would never have thought of this it was a complete happy accident you're right right it's well it'll look to me if I were to explain this it's each side is subdivided into straightline an arc and the arc is I think you shrinking or increasing and I guess the radius for that arc and the point the center point of that arc is moving which causes the other something's happening with the radius of that arc it's not just like a bubble I have like an off by one error yeah is one of the other designs and that's how this yeah yeah yeah it was the one that looked like a logo right this was it this was this was a failed attempt to make the one that look like a logo and that's how it happened there so I thought it'd be fun to kind of open this up for everyone else yeah yeah I have one other special treat which is to say I also have all the same things for squares so Square to Circle Square to circle not squared a triangle well you could go do that through through through you could do circle to square it a triangle that's right now III did in fact many of these transformations I simply copy the transformation and you know I just added a fourth side and so the dosing system okay if you prefer squares the triangles and I I actually kind of do myself and then I wouldn't blame you if you did because triangles are so pointy and you're like ouch I don't want to do those points you can do this with squares instead so there's a github repo yet which has all these examples you got and we're just sort of coming up with this right now so yeah people could submit there's a variety of different ways one is these are so conducive to making a nice little gift you could tweet the gift paper with like a hashtag to gift that's right like wish between two to two coins well some of these that we just like the ten print hash tag or so maybe triangle circle triangle triangle circle then you can also we could create like a read markdown file in the github repo where people could link to theirs or they could just pull request the actual code into it so we'll write up some instructure's or something on the repo sounds great and I will I think what would be fun for me at least is to try to either come up with my own or just remake one of these as a little tutorial some people want to get started at some point might exist by the time that you're watching this but they'll be a followup video that'll be linked to of me kind of going through and making one of these that's right okay actually then you already have made one enough it was a fail it was a failed one though I think I didn't know it was not it was a feeling I actually have a link and if I just show you for a second over here in my repo I link to the one that Dan made it was the one where you were using super ellipses to morph or circle to a square oh so it was on it did somebody say we see more complicated by accident he's noting that he's actually gonna twice okay that's forgotten he has a ten minute coding challenge on shake morphing and another one at coding challenge number 19 on a super ellipse just specifically for circles to squares and does not work for triangles so that that would know that you're you're 2.2 the time code in the video yeah so this one I felt it was such a disaster that I never actually edited it out as a separate coding challenge video so maybe I'll redo that one or I'll just revisit it to see if it we can put it somewhere but yes you got the link right there and if you like this stuff I also have some more links over here in the github repo just for more reference isn't it awesome cool great thank you so much for being here this is something I try to honor did you actually make it all the way to the end of this video thank you so much for watching now if you made it all the way to this vid and of this video there's actually a really special treat in store for you after you listen to you talk for about 30 seconds I'll get to what that is in a second so I just wanted to come back and say here's the github repository uh github slash goal on 11 slash circle morphing I will put a link in the video's description all of the code examples are here and we'll come up with a way that maybe you can submit a link to maybe there's a way that you could just even add yours to this readme but if you want to share yours make an animated gif of it and add it to Twitter with the hashtag circle morphing since there's no results for circle morphing I look forward to many results for a circle morphing and it could be circle to triangle or circle to square or whatever you so choose so let's use that hashtag let's use this repository and at some point you'll see a video for me where I actually go through one of these and do a little tutorial about it as well okay so you watch this whole video and you watch this actual explanation for me now you will get to see goal unleavened reading from what I hope will be a new tradition for all coda train guests reading from the book of random numbers the coding trade storybook good night even though only not be the night but sleep tight and listen to the nice little bike bye I'm gonna read line oh nine fiveo fiveo nine fiveo fiveo 3 0 0 3 o 2 o 4 1 4 3 2 1 2 107 808 four seven eight eight six eight three seven seven five nine six three seven four one seven three one nine seven oh eight one eight eight one four six thank you you
