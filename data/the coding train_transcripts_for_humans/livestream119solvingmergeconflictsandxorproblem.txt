With timestamps:

00:00 - good afternoon and welcome to a special
00:03 - extra bonus livestream as you know I
00:09 - typically wanna not know this but if
00:12 - you're watching or if you watched before
00:13 - I typically livestream on Friday stop
00:19 - enjoying it it's gonna be over soon I
00:22 - kind of tame it where I Club it in right
00:24 - when there's about 10 to 15 seconds left
00:27 - so the music could trail off to the end
00:29 - but it was that like 35 seconds I'm just
00:33 - kind of waiting for it so here I am I
00:38 - had to get cancelled today then I
00:40 - typically often have to do on Wednesday
00:42 - afternoons and I have been aspiring for
00:44 - awhile to do more often shorter live
00:47 - streams than less frequent longer live
00:50 - streams as much as some people might
00:52 - enjoy the 3 or 4 hours at a time of live
00:55 - streaming on a Friday I do find that the
00:57 - content somewhat suffers especially
00:59 - towards the end and if I could find
01:01 - little pockets of time to record a video
01:02 - to do tutorial to update something and
01:04 - so today actually I was I was thinking
01:06 - oh I had this extra bit of time what I'm
01:08 - gonna do is I'm gonna sit at my computer
01:10 - and go through a bunch of pull requests
01:13 - on the toei neural network library that
01:15 - I built last Friday and I thought well I
01:19 - might as well just livestream that
01:20 - because there's I've got some questions
01:22 - around then I can talk about it I don't
01:24 - see anybody saying that they are
01:29 - listening oh they are ok first figure I
01:31 - thought did I just totally not get that
01:33 - start streaming button the other thing
01:36 - was is I've had this cold and I was kind
01:38 - of sick on a little bit last Friday much
01:40 - more over the weekend and Monday and I
01:41 - thought I'm all the way better now and
01:43 - then all that's enough talking and
01:44 - realizing like it there's still a little
01:46 - bit of scratchiness there so I will be
01:49 - here it's about 2:30 on my time Eastern
01:52 - Time now in New York City I will
01:53 - probably live stream for one hour
01:57 - possibly a little bit longer but this is
01:59 - gonna be a shorter live stream and I
02:02 - have two plans I have two plans for
02:06 - today one is let me just open this up
02:08 - here a web browser is to use a web
02:11 - browser
02:13 - and I'm going to go to this github
02:18 - repository this is the coding training
02:21 - toy neural network - j/s github
02:24 - repository I have actually now for a
02:27 - couple things one is you can now go to I
02:31 - have arrived finally you can now go to
02:34 - youtube.com slash the coding train and
02:37 - we'll take you directly to this channel
02:39 - of which you are watching and there you
02:43 - will see a check mark because I it is me
02:50 - a verified person I check check I am
02:54 - Here I am truly here as and if you're
02:57 - wondering if it's true it's so um I have
03:05 - been releasing these and in fact let me
03:08 - find the playlist for it because I think
03:11 - that will be most useful here we go
03:15 - oops don't play the video just go here
03:20 - so this is the playlist starting off
03:24 - just with an introductory video to the
03:26 - idea of neural networks I built a simple
03:28 - perceptron and talked about a
03:29 - multi-layer perceptron then I do a bunch
03:31 - of matrix math things then I look at the
03:34 - feed-forward algorithm and then I
03:36 - continue looking at that and then as you
03:38 - know I struggled massively through the
03:41 - back propagation training process but I
03:43 - did five videos and finished that off so
03:47 - that's everything in all of those videos
03:50 - has now gone into this neural network
03:53 - JavaScript library so and I've been
03:57 - getting some lovely pull requests and so
04:00 - I want to look through some of these and
04:02 - merge them so that's item number one and
04:04 - I will mention in case you're wondering
04:06 - about I will also mention that if you
04:10 - are looking for the code in the state
04:15 - exactly as is when I finished that part
04:18 - five that I am putting here under
04:21 - courses nature of code ten point
04:26 - eighteen toy neural network
04:28 - so that's in my the repo that has all of
04:30 - the code for all of the videos and so
04:32 - this is kind of like a frozen state of
04:34 - the code as it stands at the end of that
04:37 - particular video and then I will allow
04:42 - this repository to grow and improve and
04:45 - one of the reasons why I'm doing this
04:47 - project is I intend to start using two
04:50 - other frameworks so I've mentioned
04:53 - before deep learn js' is a project from
04:56 - the Google big-picture group Google pair
05:00 - initiative people and AI research it is
05:02 - a you know one way you might think of it
05:04 - as a tensor flow but in the browser so
05:07 - this is a library that I intend to use
05:10 - and in further tutorials as I get
05:13 - further along down this road and in fact
05:15 - related to that is a project that is
05:18 - being worked on at ITP ITP NYU github
05:23 - dot is / ml 5 - Jas this is another
05:29 - repository URL that you might take a
05:32 - peek at this is now a high-level
05:34 - JavaScript library for machine learning
05:36 - so this is a library that's built on top
05:39 - of deep learning is to make using deep
05:42 - learning Dutch yes a bit easier for
05:43 - beginners specifically beginners who
05:46 - might be learning to code with p5 Chasse
05:48 - and so for example there's some nice
05:49 - examples here here is an example of
05:52 - simple image classification using a pre
05:54 - trained model I will talk about
05:55 - eventually what all these things are and
05:58 - you can see here the code is simple in
06:00 - that you can just say you can ask the
06:02 - model to predict what it thinks about an
06:04 - image you can look at the results and
06:06 - update what's on the page with the
06:08 - results so this there's a lot of stuff
06:09 - like this that you can start to look at
06:11 - you can look under experiments which are
06:13 - some things that people have built with
06:16 - this but this library is you know less
06:18 - than 2 months old so this is a brand new
06:21 - thing that and I will be doing many more
06:23 - videos with this library so part of the
06:26 - reason why I'm building my own kind of
06:28 - toy version of a machine learning
06:29 - library is just to really understand how
06:32 - all the pieces work so that when I start
06:33 - to use other libraries and frameworks I
06:35 - can have a kind of language to speak
06:38 - about them and
06:40 - I don't know some experience so anyway
06:42 - so did I say I'd be streaming until 2:30
06:48 - I did yeah I meant an hour or so so it's
06:50 - 2:30 now until 3:30 or so okay so that's
06:54 - two things I want to mention and then of
06:57 - last on Friday I did the X or coding
07:02 - challenge and I thought it would just
07:03 - some reason I don't know why just felt
07:06 - like I wanted to do it again because a
07:08 - couple things one is I got some
07:10 - interesting comments so you know one
07:12 - thing that I think would be really
07:12 - useful to demonstrate is if I manipulate
07:15 - like okay well what if I use four hidden
07:17 - nodes instead of two hidden nodes and I
07:18 - just didn't have that as part of the
07:19 - tutorial which I think would be really
07:20 - useful but also I felt like I wanted to
07:23 - have some distance from the library I
07:25 - just was at the end of like hours and
07:28 - hours and hours of doing the back
07:28 - propagation and I really want that video
07:31 - to kind of stand alone in its own way
07:33 - and be disconnected from that so I
07:35 - thought maybe I would try it again and
07:36 - see what happens
07:38 - okay let's see so now what do i what let
07:44 - me while I'm here let me mention a
07:47 - couple other things this repository
07:52 - coding train slash rainbow code which
07:55 - ostensibly if you're not looking very
07:57 - closely is just a repository that has
08:00 - all the source code from all of my video
08:02 - tutorials right I can say that go look I
08:04 - want to find code for some one of the
08:06 - coding challenges or one of the p5.js
08:09 - courses or the node sockets playlist or
08:11 - code that was one of the QA videos I
08:13 - know tutorials courses there's there
08:16 - still could be some work done on
08:17 - organization here but you'll start to
08:18 - notice oh what are this underscore
08:20 - underscore underscore there's all this
08:22 - stuff landing page and then all of a
08:25 - sudden there's readme dot MD and
08:27 - contributing MD oh so this repository
08:34 - thanks to Niels woman thinks in large
08:37 - part to many contributors but most
08:39 - notably Niels web has turned into the
08:45 - repository which is also the coding
08:48 - train web site now I will open this up a
08:51 - bit wider so this is the new coding
08:53 - train
08:53 - so a drought for work-in-progress and
08:57 - each video now has its if it's put into
09:01 - the website has its own page so for
09:03 - example the latest video is here snakes
09:05 - and ladders part 3 and this would
09:07 - obviously take me directly to the video
09:08 - on YouTube but if I click on this link
09:10 - here it'll take me to a page which has
09:12 - the video embed it has a link to run the
09:15 - example in the browser so here's the
09:17 - example running in the browser it has a
09:19 - link this link will download the code a
09:21 - little description here and then a place
09:24 - for community contributions but there
09:26 - aren't any yet but you can add your own
09:28 - by looking at this guide so you can
09:30 - submit a pull request to add yours
09:31 - there's links that were discussed links
09:34 - to the other parts of the video so this
09:36 - is an attempt to create a more navigable
09:39 - version a new more navigable system for
09:42 - finding and looking through all the
09:43 - videos separate from the YouTube
09:44 - interface as well as aggregating and
09:47 - collecting community contributions and
09:51 - relevant links and source code and that
09:52 - sort of thing so I think this website as
09:55 - remarkable and amazing and beautiful as
09:57 - it is it's just it's just like
09:59 - tremendous that Neil's web was able to
10:02 - just put this all together it runs on
10:03 - something called Jekyll which is a
10:06 - static site generator plating engine
10:08 - that works well with github pages I
10:10 - think you can still use work in visual
10:12 - design and it's missing a lot of content
10:14 - so I encourage any of you who are
10:17 - interested in kind of purging to
10:19 - participate in an open source project
10:21 - here's one for you if you I want to make
10:23 - a design contribution or add some
10:26 - content that's missing let me know that
10:28 - shift been on Twitter you can read
10:30 - hopefully the documentation that's in
10:31 - the github repository I would love to
10:33 - have people help with that all right
10:39 - is he sick right yes yeah I thought my
10:44 - cold was gone and that's why I felt
10:46 - comfortable I feel so much better but I
10:50 - think the congestion is still lingering
10:53 - in my throat's so I don't know I have a
10:58 - hold on let me just check here okay okay
11:01 - okay all right just looking at some
11:03 - messages here let me go back to the live
11:05 - channel what I'm looking at over here by
11:07 - the way is a
11:07 - slack channel I often get the question
11:08 - Oh what how could I ask a question or
11:11 - get help so of course I would always
11:14 - recommend that you use if you're if
11:16 - you've got a forum that goes well with a
11:18 - lot of my videos is forum dot processing
11:21 - org you can you can get in contact with
11:24 - me on Twitter but I also have a patreon
11:26 - and if you join the patreon at
11:28 - patreon.com slash coding train that's
11:31 - where you'll get an invitation to the
11:32 - slack channel which I will which I
11:36 - participate in and but honestly think
11:38 - about this black journal that's great it
11:39 - you know the idea was like oh I could
11:41 - help people with their code if they sign
11:42 - up and subscribe but there's so many
11:44 - people already now in this last channel
11:46 - who know way more than I do that are
11:47 - much more helpful so it's kind of built
11:49 - itself into a nice community there okay
11:55 - I'll take a couple questions from the
11:58 - chat ricardo asks have you ever thought
12:00 - about going full-time youtuber actually
12:03 - I have I mean I have thought about it
12:05 - some ways I might be interested in doing
12:07 - it just so I can say full-time youtuber
12:09 - it sounds like a weird thing like a
12:11 - crazy thing to say I do have a full-time
12:12 - job that I love I live in New York City
12:15 - which is a very expensive and
12:17 - complicated place to live and so and
12:19 - then the job where I have is that a
12:21 - program called ITP and NYU in fact
12:23 - that's where I'm recording these videos
12:24 - so while I fantasize and think about it
12:26 - sometimes I don't know if it's realistic
12:28 - for me at this point and I wouldn't want
12:31 - to give up the wonderful in-person
12:32 - community and teaching stuff that I'm
12:34 - able to do through working here but it's
12:36 - interesting question okay Ben Anderson
12:40 - asks can could you explain to me the
12:42 - basic premise of neural networks so
12:44 - that's where I would recommend starting
12:45 - with the this neural networks playlist
12:48 - so in theory the bit I don't remember at
12:51 - all what did this video I made it quite
12:54 - a while ago but that's a introduction of
12:56 - neural networks and I believe I do cover
12:59 - in that video the basic premise of
13:01 - neural networks and I will rehash that
13:03 - again when I start doing the X or coding
13:04 - challenge and I also would recommend the
13:07 - three blue one brown neural network
13:09 - channel yes
13:12 - moving up state becoming a hermit is an
13:14 - excellent idea
13:15 - was a suggestion for how it could become
13:17 - full-time youtuber
13:18 - and dye my hair green okay ah it's cold
13:23 - mmm this is not this is not I've been
13:25 - silent I guess all day and didn't
13:27 - realize okay so I'm looking at the chat
13:36 - well there's a class going in behind
13:39 - this wall and they're watching a movie
13:40 - right now I can almost hear what it is
13:43 - what's the chance you can hear it if I
13:45 - put my microphone up to the wall I
13:48 - probably just made a horrible scratching
13:50 - sound as I put the microphone on the
13:52 - wall
13:52 - alright so let's get set here okay so
13:57 - the first thing that I want to do is I
13:59 - want to look through the pull requests
14:01 - here and let's think about let's do this
14:05 - let's do this backwards so I'm gonna
14:07 - look at the oldest pull request and move
14:09 - up and see which of these I can merge
14:11 - now one thing you'll notice is they all
14:13 - have a green check mark and that green
14:15 - check mark is because I added unit
14:17 - testing testing to make sure the code
14:19 - does what it should be doing before it
14:22 - could be purged so let's say use matrix
14:26 - constructor - okay so tidied up the
14:29 - construct this is from Phil a Turner
14:31 - tidying up the constructor a little bit
14:32 - plus I've never done a pull request
14:34 - before amazing could this possibly be
14:40 - fill a Turner's first pull request that
14:42 - we are hopefully going to merge okay
14:44 - then I wrote apologies can you resolve
14:46 - the conflicts I love this change but
14:48 - since I haven't explained fill in a
14:50 - video yet I wonder if it will be
14:51 - confusing I'm just you're reading my cup
14:53 - mint or maybe this means I better just
14:54 - get to explaining it conflicts are
14:56 - resolved and I am noting another issue
14:59 - that I discussed this in but let's take
15:02 - a look at the code changes here under
15:04 - files change excuse me ah so first of
15:07 - all oh this is a wonderful little
15:09 - addition here but I'll come back to that
15:11 - so look this is the change this is my
15:15 - ugly long-winded way of creating the two
15:18 - dimensional array to store all the
15:20 - values in a matrix and now instead and
15:24 - should this say should this a new array
15:27 - or is it okay to say oh no its array dot
15:29 - fill map a raid
15:32 - Phil zero so it passed the test so I can
15:35 - assume that I think this looks pretty
15:37 - good to me
15:38 - but let's let's just so I have this on
15:40 - record here if you haven't seen Phil
15:41 - before where is Phil now if you haven't
15:45 - seen Phil before JavaScript array
15:51 - functions alka in the patron group is
15:54 - saying it's fine it's ugly either way so
15:57 - the array object has a whole bunch of
16:01 - functions built into it like Phil fine
16:04 - filter Map Reduce and I really should
16:07 - make a list of let's make a list of
16:10 - these let's go - lets go - rainbow
16:13 - topics under issues and let me look at
16:18 - array let's see if there I think I have
16:20 - one that's talking about arrays like
16:23 - array higher-order functions in
16:25 - JavaScript so I definitely should do
16:28 - this okay
16:29 - neat let's making a list of functions to
16:34 - cover so I am going to add Phil here so
16:39 - by the way in github at issue if you do
16:42 - you might not be aware of this if you
16:43 - put this notation this will leave a
16:46 - checkbox and if I put this notation will
16:49 - leave a checkbox that's checked but I
16:50 - haven't made it yet
16:51 - so I know I want to cover Phil I know I
16:54 - want to cover map I know I want to cover
16:56 - reduce and probably filter right these
17:02 - are some array functions that I want to
17:04 - eventually cover so maybe in the chat if
17:10 - there's some is that some that would be
17:11 - important so I am now going to where am
17:16 - I merge this pull request well it's not
17:20 - this one where is it ah here we are I'm
17:23 - gonna go back to conversation and I'm
17:26 - gonna say merging this live on air and
17:29 - noting to make a video a video about
17:34 - Phil here okay comment
17:41 - and here we go okay I kid you not the
17:48 - class I'm in the middle floor which is
17:50 - the film school here at NYU and so
17:52 - they're always watching movies I think
17:53 - in the classroom next to me so I can
17:55 - hear the soundtrack I don't think I hear
17:57 - that that was totally a train going by
17:59 - it was like a very loud train going
18:01 - Trude going by I'm here with you people
18:05 - in the next room we are one on the train
18:10 - alright here we go merging
18:21 - confirming
18:31 - alright that thank you thank you
18:35 - that was emerged I was the pull request
18:36 - merged Alka is mentioning sort I I've
18:40 - actually talked about sort in a video I
18:42 - don't remember which one but I have a
18:44 - very distinct memory of using sort but
18:46 - like it it would be worth mentioning or
18:48 - covering in that context as well thank
18:50 - you for that all right so we got one
18:52 - pull request done now use es6 export
18:58 - import functions ok this I'm not ready
19:00 - for yet this is there's a nice
19:04 - discussion here it's also out of date
19:07 - but let me see if I can update it that
19:09 - should be fine because I merge that
19:10 - other pull request it's gonna run the
19:13 - tests again let's look at the files
19:17 - changed here yeah so this is using es6
19:20 - modules and I feel like I'm not ready
19:23 - for that yet but I really should add
19:26 - that soon it'll fix the whole testing
19:28 - stuff so maybe I need to do a video
19:31 - about that and understand that better
19:33 - because it's got the export here and it
19:38 - had need to this like Babel thing so I
19:41 - could be talked into this but this I
19:42 - don't feel ready for you know I'm super
19:45 - thankful for this wonderful thoughtful
19:47 - pull requests okay so now updated to-do
19:52 - list
19:52 - oh yeah this was a oh yeah this was
20:00 - somebody who added and fixed up the
20:02 - to-do list that was in my nnj s file
20:06 - that I just put in the comments and I
20:09 - guess I had done I've done all these
20:11 - things now except for the end missed
20:12 - coding challenge I'm going to redo the
20:14 - XOR coding challenge today but I did
20:17 - make a comment about this one which is I
20:20 - thought this might be better in say the
20:23 - readme so I'm going to I'm gonna merge
20:31 - I'm gonna merge this right now because
20:32 - why not merge merge this for now but I
20:36 - but maybe someone will pull requests
20:40 - a new place for the to-do list now
20:50 - interestingly enough I cannot merge it
20:54 - why is this there it's because it's got
20:58 - to run the tests again and it's probably
21:00 - waiting let's see show all checks oh it
21:02 - passed huh so what test has it not run
21:08 - yet that it won't interesting so I'll
21:14 - come back not sure why this won't allow
21:16 - me to merge it by the way if you're
21:19 - wondering what's going on with why this
21:20 - merge button is not available I did a
21:22 - whole video tutorial series about unit
21:24 - testing and continuous integration and
21:26 - there's a live stream which already is
21:28 - online archived but the actual edited
21:30 - videos are prepared but haven't been
21:32 - released yet those will start coming out
21:33 - tomorrow morning okay alright yeah me I
21:42 - am so be is yeah so if I were doing this
21:45 - properly I would probably want to like
21:48 - check a bunch of these things locally
21:51 - but I'm just I'm living on the edge I'm
21:54 - doing this just through the get up
21:55 - interface but I could like pull the
21:57 - branch and have it local test it out run
21:59 - the tests myself and I really don't
22:02 - understand why this one is not merging
22:03 - but I'm going to come back to here
22:06 - updating transpose test so this is a
22:11 - pull request that came in about at the
22:15 - transpose test and I added some comments
22:18 - and requested those changes those
22:20 - changes have not come in yet so I'm
22:22 - going to leave this one alone added more
22:26 - transpose tests and let's see if I can
22:32 - let's run this update so it's running
22:38 - the tests
22:48 - now there's some music playing in the
22:50 - other room all right we got to wait for
22:52 - the test to finish I could go on to a
22:57 - different polar craft but I like just
22:59 - waiting like to see it just like by the
23:03 - way we could see the test I think under
23:05 - details yep let's watch the test going
23:12 - here it is running it oops sorry
23:17 - look they all passed all the tests
23:20 - passed so it should now say the test
23:28 - pass yep
23:29 - all right let's look at what this coach
23:32 - puts so this is looks like it's adding a
23:36 - test for a transpose it's checking a one
23:40 - by one matrix then it's checking a 2 by
23:43 - 3 to 3 by 2 checking a 3 by 2 to 2 by 3
23:47 - this looks good at checking to 1 by 5
23:49 - this is nice I love this test ok great I
23:53 - think this looks good to me
23:54 - we need tests for the tests and I again
23:57 - I should look this over more carefully
23:58 - but you know this is just an open source
24:00 - project for fun I'm so appreciative
24:06 - merge and then confirm merge and we have
24:15 - merged this for a fest thank you to
24:17 - Mikael Souza who submitted that poll
24:21 - request has now merged okay
24:23 - now map improvements oh this one I'm
24:25 - excited about map improvements and using
24:29 - map instead of two nested for-loops
24:31 - oh another reason why I want to redo the
24:33 - XOR challenge is I was playing with the
24:35 - learning rate and it wasn't working the
24:37 - whole time because I had the wrong
24:38 - variable name and this pull request is
24:40 - gonna help us with that so I am now
24:42 - going to go to map improvements and so
24:47 - so let's do this so the let me look at
24:50 - this one okay so made the made map past
24:55 - the row and column to the callback
24:57 - function so this is really useful I have
24:59 - a map function in the library which I
25:02 - could pull up and the map function
25:04 - expects a callback function that it
25:06 - applies to every element and sometimes
25:09 - you want to know the column and row the
25:10 - row and column indices and I didn't
25:12 - implement that so this implements that
25:14 - it and then it also has a lot of a use
25:19 - of the es6 arrow notation so I wasn't
25:24 - sure about merging this just yet but now
25:28 - that I have the I have the original
25:32 - source code backed up let's take a look
25:34 - at this so first of all let's run the
25:38 - tests again because I'm sure it's oh
25:40 - we've got conflicts now oh so sad so
25:43 - unfortunately there's some conflicts
25:45 - here because some of the other merges
25:49 - changed the same so you get a merge
25:52 - conflict and I need to do a whole video
25:53 - about this now this is my list of my
25:56 - github series you need to do a merge
25:58 - couple all right let's do a video about
25:59 - it right now this is great this is going
26:06 - to now be a tutorial that will go in my
26:07 - github my github list alright we're
26:13 - gonna resolve this live have a new
26:16 - sponsor why do I have always sponsored
26:18 - by waters but this was
26:20 - like to to destroy the earth I have to
26:22 - stand over here and drink my Earth
26:24 - destroying water all right
26:38 - all right hello surprise it's a video
26:43 - about git git and github and this video
26:46 - is about resolving merge conflicts so I
26:49 - probably should be doing this video in
26:51 - my poem repository which I use for all
26:54 - of my intro to get and github videos but
26:57 - I happen to be here streaming live and
26:59 - working on this neural network library
27:02 - that I've been building in a bunch of
27:03 - other video tutorials so if you just
27:05 - watch those git and github videos all
27:07 - about using a poem to sort of
27:09 - demonstrate how git and github works
27:11 - there'll be some aspects of this that
27:12 - are confusing but hopefully this will be
27:14 - helpful anyway and I can always double
27:16 - back and make another video if this one
27:18 - doesn't work but let's just try it so
27:19 - what is a merge conflict first of all so
27:22 - a bird conflict is when you have let's
27:25 - say on git let's say this is a file in
27:28 - this case it's my file called matrix da
27:32 - chess so I have a file called matrix da
27:36 - chance and it has code in it now I had
27:40 - two people two separate people of the
27:43 - internet happened to be working on this
27:46 - file so we'll call one person a and one
27:51 - person B now any text file has lines in
27:56 - it
27:56 - so even over a poem it would have lines
27:58 - of the poem if it's a source code file
28:00 - has lines of the source code so we can
28:02 - think of the lines as like 1 2 3 4 5 6
28:05 - now if person a makes a change and
28:10 - submits a pull request meaning hey hey
28:15 - you the library please pull my changes
28:18 - right I want to push my changes to you
28:20 - but I've asked him requesting that you
28:21 - pull my changes if this person just made
28:24 - changes to lines 5 & 6 and this person
28:29 - just made chiton this person is doing
28:31 - the same thing but made saintly changes
28:33 - aligned 2 & 3 the get system is smart
28:38 - enough to figure out how to pull both of
28:40 - these things then with no conflicts
28:42 - because there are no conflicts if I want
28:45 - to accept changes of lines 2 & 3 I can
28:47 - accept those at the same time one before
28:49 - the other Cylons
28:50 - you asleep can't review it
28:52 - simultaneously as lines 5 & 6
28:54 - however if right here person B makes a
28:58 - change to line 4 in person a also makes
29:01 - a change the line 4 then we have what's
29:04 - known as a conflict and typically what
29:07 - will happen and what just happened to me
29:09 - right now is I merged this one I merged
29:12 - this one wasn't and thinking about it
29:14 - was done it's finished and it works fine
29:16 - it merged with no problems but now when
29:18 - I went to merge this one I got a message
29:20 - saying resolve conflicts now there are a
29:24 - variety of ways you can resolve
29:26 - conflicts and I think that I had some of
29:29 - my previous tutorials looked at working
29:31 - with git command line locally and I
29:33 - could have the text file there but what
29:34 - I'm gonna do is see if I could resolve
29:36 - the conflict just through the github
29:39 - interface itself so let's take a look at
29:41 - how that works now once again this isn't
29:44 - the best scenario and I might come back
29:46 - and do a follow-up with be nice to see
29:48 - kind of a trivial example that just
29:50 - where I can really know what the changes
29:51 - are but I'm just going to look and see
29:53 - there's a whole discussion here and we
29:55 - can see these are the files these are
29:57 - the files that have conflicts in them
29:59 - matrix touch s and matrix dot test Dutch
30:01 - ass so hopefully you can continue to
30:03 - watch this even if you don't understand
30:04 - what the code in those files is doing i
30:06 - I'm gonna look and see what are the
30:08 - conflicts are oh this is definitely good
30:11 - this is gonna go down to go down the
30:13 - tubes the internet tubes really quickly
30:15 - so I'm gonna click this resolve
30:16 - conflicts button and now it's look at
30:19 - this ooh okay all right oh I mean matrix
30:23 - Jas hmm okay I have to figure out what's
30:26 - going on here so we can see I look this
30:28 - is where the conflict is oh look I think
30:30 - I know how to resolve this okay so this
30:34 - is where the conflict is now what is it
30:37 - telling me here math improvements master
30:40 - equals equals goody-goody Eagles greater
30:43 - than greater than so what this is
30:44 - showing me is this is showing me through
30:46 - kind of like a visual interface of the
30:48 - text file that there are two proposed
30:50 - ways that this code could run one of the
30:54 - files had it this way and one of the
30:56 - files had it this way in fact the
30:57 - current master has it this way but the
30:59 - one that I'm trying to merge has it this
31:01 - way and why does this one have it this
31:03 - way this is a
31:04 - thing that I changed I wanted this so
31:05 - it's up to me now there's no right or
31:07 - wrong answer here as the kind of
31:09 - proprietor of this github repository
31:11 - I've got to decide if both pull requests
31:16 - worked on worked on if sorry if both
31:20 - pull requests worked on the same line I
31:22 - have to pick one which one do I want and
31:26 - I want I'm gonna take this one at the
31:29 - bottom so I'm going to delete delete
31:33 - this and I'm gonna delete this whoops
31:38 - what did I just do I'm gonna I'm gonna
31:41 - delete this now if only I knew how to
31:44 - use a computer I'm gonna delete this and
31:47 - now are there any other conflicts
31:50 - please be no other conflicts oh I'm so
31:53 - lucky I'm gonna now say mark as resolved
31:56 - now one thing you can do if you're the
31:58 - proprietor of a github repository is you
32:00 - could just write to the person spinning
32:02 - the progress I'm so sorry but some
32:04 - conflicts arose I love your pull
32:05 - requests do you think you could refactor
32:06 - it because you could leave this up to
32:08 - the contributor certainly but I'm here
32:10 - live on the internet I mean maybe I'm
32:12 - not live anymore recorded and so there
32:15 - we go
32:16 - Oh No okay uh so now I have this other
32:18 - file hmm let's look at this I might just
32:21 - quit while I'm ahead here but let's see
32:24 - if I can look at this other file so this
32:27 - this code might look very strange to you
32:29 - this is something called unit testing
32:30 - and actually related to this video
32:32 - series I have a video series that I will
32:33 - link to in this video's description
32:34 - about how you can run automated tests
32:37 - that make sure a change in your code
32:39 - doesn't actually break your code that's
32:41 - what this is doing here so there's map
32:43 - improvements that's the pull request and
32:46 - master you know what I think this is a
32:49 - very trivial change it looks to me like
32:52 - this was just added at the end and there
32:55 - was like a line break or something that
32:56 - caused a merge kind of like so this
32:58 - looks like something that I could
32:59 - actually just completely delete here and
33:02 - then delete here and this is just some
33:05 - new stuff that got added to the end as
33:06 - part of this pull request there was like
33:08 - an extra line break or something so
33:09 - github detected a conflict but it really
33:12 - was not a conflict so now I can go and I
33:15 - can click mark as
33:19 - and look at this huh commit merge so
33:22 - here's the thing mmm-hmm where am i
33:24 - right now
33:25 - so I mmm I resolved all the conflicts do
33:28 - I want to do this
33:29 - I think this button if I'm right is not
33:37 - actually and look at the chat to see if
33:41 - anybody's complaining about what I've
33:42 - done is not actually merging the pull
33:44 - request I think this is the committing
33:46 - the resolution of the conflicts to
33:48 - conflicts to the pull request let's find
33:50 - out because I'm gonna just it's a green
33:52 - button when I see a green button it just
33:54 - makes me wanna click it quick so I think
33:58 - the pull request is still going to be
34:00 - live and active but it's taking a while
34:01 - yes all it did yeah all it did was fix
34:06 - the conflicts where can I find that that
34:08 - was done here yes that was this so this
34:12 - is me now there's a little note that I
34:14 - merged branch master into map
34:17 - improvements that's basically saying
34:19 - there were conflicts between master and
34:21 - map improvements this pull request was
34:23 - map improvements and there was me
34:25 - merging them together and resolving the
34:26 - conflicts and now I can actually go
34:29 - ahead the conflicts are resolved and I
34:32 - can merge the pull request nothing
34:39 - exciting is an avenue it really should
34:40 - it should like a Betty should explode
34:43 - confirm and look but I can make
34:45 - something happen
34:49 - okay so that was a video about resolving
34:52 - merge conflicts through the github
34:54 - interface there's sort of basic gist of
34:56 - it perhaps I missed something important
35:00 - and I will certainly make a follow-up
35:01 - video so let me know what I missed what
35:03 - questions you have in the comments and
35:05 - thanks for watching this video about
35:07 - merging resolving conflicts merging them
35:11 - with a pull request something something
35:12 - get github I don't know like search
35:15 - engine optimized keywords throw them in
35:17 - there okay bye bye
35:23 - alright
35:26 - what's wrong with is the mic does the
35:31 - mic performing poorly right now am I
35:32 - having sound issues because if it is I
35:39 - would like to fix those no sound issues
35:49 - okay great
35:50 - all right so now that we did that where
35:58 - am I add a neural network look I love
36:03 - how live while I'm streaming new pull
36:06 - requests are being open Thank You Adam
36:08 - Morris with that that's fantastic
36:10 - okay add a neural network learning rate
36:13 - Center thank you to Iris son Gwen Neddy
36:17 - but you know I really just need to work
36:19 - on pronouncing people's names let's look
36:21 - at this okay oh oh oh is this actually
36:26 - dare I say using so this adds a center I
36:32 - probably do want oh no a setter yeah so
36:35 - this is this actually using this thing
36:39 - that I don't really know about which is
36:41 - es6 getters and setters do I have a
36:44 - rainbow topics issue keeping track of
36:46 - that I kind of want to talk about that
36:50 - at some point soon where's my up hold on
36:52 - sorry I tripped some water on the
36:58 - trackpad then I pressed some button by
37:02 - accident
37:04 - rainbow topics where's that so yes six
37:15 - prototype you've oh mmm
37:18 - get her nope all right so we need to do
37:24 - es6 getters and setters I need to do a
37:29 - video on that at some point
37:35 - okay so now we're back here so I think
37:39 - this looks good to me there's some so
37:43 - this is this can happen a lot which is
37:45 - unfortunate if looks like in this pull
37:48 - request some extra whitespace was added
37:51 - here like other a tab or some spaces
37:53 - which may get think that these two lines
37:55 - are different this is a little bit of
37:57 - noise that if I were a real stickler I
38:00 - would kind of want to not be in here but
38:02 - I'm not a stickler as you can tell from
38:05 - you just merging stuff and so now I'm
38:09 - gonna say I'm gonna update the branch
38:12 - I'm gonna write thank you it's gonna be
38:16 - running its checks let's watch the
38:18 - checks run it's running npm install
38:27 - right now and now it's running the test
38:33 - perfect timing well half an hour has
38:36 - passed 3:15 boy I take wait longer to do
38:42 - anything than I think okay so now I
38:46 - think I finished yep Birds okay that has
38:57 - been merged back to the pull requests
39:03 - update readme link to okay now let's do
39:09 - this I think this is exactly what I
39:14 - think oh yeah perfect so this is great
39:17 - this is a nice link to this is a nice
39:21 - link that if anyone's looking for the
39:23 - original source code with the video they
39:24 - can find it and by the way if anybody
39:26 - else wants to do this pull request if
39:28 - you can go to this repo and add a link
39:30 - from here back to here that would be
39:33 - awesome it might already be there so
39:35 - let's merge this one tests are still
39:41 - running
39:44 - looks like it's finished now merge pull
39:49 - requests there we go I didn't it
39:54 - will hurt version pull request one more
39:57 - to go now create a to-do list
40:00 - Oh out-of-date let's update it and let's
40:04 - take a look at it okay we use semver for
40:09 - versioning we do I never even heard of
40:13 - that that's something I have to learn
40:14 - about semver for versioning so this is
40:17 - like some noise some line break noise
40:19 - that got added in here by accident this
40:21 - is now the to-do list and they got
40:25 - removed from here which is great I will
40:28 - say that most of this to do list is done
40:30 - so probably I'm what I would do it but
40:33 - I'm just gonna I'll do this change
40:34 - myself is and this pages out of date
40:39 - refresh I'm gonna merge this and there's
40:47 - some music playing in the room next door
40:49 - that you guys can't hear but like in
40:50 - here I'm gonna go here now to the readme
41:00 - I'm gonna click Edit and where's the
41:06 - to-do list where did that to do is to
41:10 - end up it wasn't in the readme oh yeah
41:13 - that's so funny I looked at that pull
41:15 - request it just assumed it went here
41:18 - where did that pull request go closed
41:21 - create to-do list Oh separate to do dot
41:26 - MD file whoo okay there we go
41:28 - obviously I'm gonna go here I'm gonna
41:31 - edit this this whatever this is was done
41:40 - this was done I mean this is oulous is
41:43 - almost silly now but this was done this
41:46 - was not really done different activation
41:48 - functions X or coding challenge oh this
41:51 - is not done this is not done and I'll
41:56 - add some other things add support for
42:01 - multiple layers multiple hidden layers
42:05 - and I'll actually change this to support
42:12 - for different activation functions this
42:17 - is something I would like to do with
42:18 - this library and these could be issues
42:21 - but combined with ml 5 slash deep learn
42:31 - J s ok so let's add this and I'm gonna
42:39 - make a pull request my this repo is so
42:41 - protected that even if I'm just editing
42:44 - one of the markdown files and I have the
42:46 - administer of the repo I cannot merge
42:49 - make this Burch this change into master
42:51 - without these tests running so we'll see
42:53 - if these tests run ok they ran they
42:58 - passed I'm gonna merge alright we're in
43:00 - good shape now we are now able to do
43:02 - some coding and I really wish I had not
43:07 - closed the playlist because I'm gonna
43:09 - need that or this so now let me open up
43:12 - terminal
43:20 - let's go here open come on come finder
43:29 - you window there you are examples XOR so
43:32 - what thing I'm going to do is ya know
43:36 - I'm gonna leave this here it's fine
43:38 - git status git pull origin
43:42 - oh I'm standing in front of this so I
43:48 - want to get all those changes now to
43:50 - have them locally ooh what did I change
43:54 - here there's nothing there okay and then
44:00 - what I want to do oh I should do that I
44:02 - terms birth map should die and then
44:09 - let's just run the tests locally to make
44:13 - sure everything is kind of going well
44:15 - okay there's 20 tests now they all
44:18 - passed that's awesome and let's open
44:25 - this up in Adam let's run a local server
44:34 - let's go to the browser now this is the
44:42 - example I made before I'm gonna
44:43 - completely wipe this example and start
44:47 - over so let's do that okay
45:00 - please hold they need to type my shoe
45:03 - drink someone or to blow my nose
45:05 - I'm not a tissue oh no I have another
45:07 - one I will mute myself right now
45:15 - [Music]
45:20 - [Music]
45:27 - [Music]
45:34 - [Music]
45:56 - I'm not sure why I have this extra
45:58 - jacket on that just do the job for today
46:12 - [Music]
46:30 - [Music]
46:34 - okay here we go I think I think it's
47:07 - time to read just a few random numbers
47:09 - to get warmed up relax go into a sleepy
47:15 - slumbered state of neural network
47:17 - training thirty-eight thousand two
47:20 - hundred seventy one fifty four thousand
47:23 - nine hundred sixty seven fifty eight
47:25 - thousand and forty six really need
47:29 - progressives twenty two thousand nine
47:33 - hundred fifty this is actually how I
47:35 - read now or I do this 22950 ninety seven
47:39 - thousand five hundred thirty three sixty
47:43 - one thousand nine hundred and thirty to
47:45 - five thousand one hundred and ninety
47:47 - nine sixty five thousand nine hundred
47:50 - and sixty eight sixty nine thousand
47:52 - seven hundred and eighty four twenty
47:55 - five thousand six hundred and fifty nine
47:58 - seventy four thousand nine hundred and
48:00 - fifty four eleven thousand one hundred
48:03 - and thirty nine thirty two thousand
48:06 - three hundred and forty okay yeah I know
48:13 - I said I was going to leave at 3:30 but
48:16 - I like to say I'm gonna leave like way
48:18 - earlier then I absolutely need to leave
48:22 - because as you know I never as much I
48:27 - barely ever start on time let alone
48:29 - finish on time alright energy people
48:35 - energy places places we're about to get
48:39 - started with a coding challenge why is
48:41 - mine
48:42 - [Music]
48:45 - a bit from slack that someone said okay
48:52 - by the way I am committed to somehow
48:55 - most likely through the magic of
48:58 - artificial intelligence if I ever hit 1
49:01 - million subscribers I will read all 1
49:03 - million random digits in a video again
49:06 - though I have a feeling that that's
49:07 - gonna end up being a computer generated
49:10 - because the amount of time it would take
49:12 - is absurd I would love to do something I
49:14 - could do something it takes like 5 or 6
49:15 - hours some kind of marathon thing but I
49:17 - think it would take me a week without
49:18 - sleeping which is very unrealistic and
49:20 - not good for my health okay so I'm
49:28 - looking at the chat let's see I know how
49:31 - many viewers I've lost hopefully a lot
49:35 - I've been looking for this for the
49:37 - longest time
49:38 - it's a sleeve by the way for this
49:41 - computer that goes here this is gonna
49:43 - blow your minds
49:45 - whoa look at my magic sleeve that
49:47 - doesn't fall down magic trick I'm like a
49:52 - regular internet video magician watch
49:56 - this okay amazing what a little green
50:06 - paper will do okay um
50:09 - it'd be great if I could warn you about
50:12 - a mistake by making your watch notify
50:14 - you when you're at the whiteboard it's
50:15 - impossible to get your attendant yes so
50:18 - the thing is I will actually get in
50:22 - slack if you at Schiffman me it will
50:25 - notify my phone which will often I
50:27 - usually turn it off I usually turn
50:30 - notifications off but I I did just have
50:33 - them on just now because I forgot about
50:34 - that
50:35 - and so I can get oh look Simon sent me a
50:41 - nice picture of how Gators and feathers
50:43 - work I could potentially Alka get a
50:45 - notification today you could try that if
50:47 - I really messed something up
50:53 - now I'm gonna I have a totally different
51:00 - way I'm gonna do this video right now
51:01 - okay
51:16 - hold on a second okay let's give this
51:28 - some time here and see if this will work
51:30 - itself out
51:42 - I'm I'm just waiting for the neural
51:47 - network to learn I'm gonna use this as a
51:50 - visual visual aid visual reference all
52:06 - right that's good enough hello welcome
52:24 - to a coding challenge in this coding
52:26 - challenge I'm going to make a version of
52:27 - this wait a second do you guys see it is
52:31 - there like a smudge hold on is that just
52:35 - like what is that smudge from oh oh
52:38 - weird that's just like an artifact on my
52:41 - screen that was so weird did you see
52:45 - that oh my goodness all right starting
52:49 - over
52:52 - hello welcome to a coding challenge in
52:55 - this coding challenge I am going to it's
52:57 - gonna sound really weird solve X or with
53:00 - the neural network now why would anyone
53:02 - want to do this why would I want to do
53:04 - this well what this is actually this is
53:07 - a video in which I am going to test a
53:09 - neural network library I've been
53:11 - building in JavaScript and in fact if
53:13 - you want to follow along with that
53:16 - process of building it there was a giant
53:18 - playlist here starting with 10.1
53:21 - introduction to neural networks and I
53:23 - start building that library actually
53:24 - around oops play the video around 10.4
53:29 - so this video is a standalone video
53:33 - where I'm going to make use of that
53:34 - library in a coding challenge you don't
53:37 - have to have watched all those but if
53:39 - you want the background with a bit more
53:41 - to go deeper in how the internal
53:42 - mechanics of this neural network that
53:44 - I'm going to use works I would refer you
53:45 - to those videos now what is this crazy
53:47 - weird visualization going on over here
53:49 - so let's I'm going to come back to in a
53:52 - second but let's come over to the
53:53 - whiteboard so this
53:55 - an example a very beginning basic rather
53:58 - trivial example of machine learning and
54:00 - what do I mean by that I mean I'm going
54:03 - to draw a circle here and I'm going to
54:05 - write ml short for machine learning you
54:08 - can think of this as a place where there
54:10 - exists some machine learning recipe some
54:13 - algorithm you might have heard of K
54:15 - nearest neighbor or neural network
54:18 - fill-in-the-blank support vector
54:20 - machines so fill in the blank with your
54:21 - machine learning algorithm there with a
54:24 - machine learning algorithm something
54:25 - goes into it data how you collect your
54:30 - data how you're thoughtful about that
54:31 - what the data is how you call them quote
54:33 - normalize your data there's so many
54:36 - questions
54:37 - ethical questions scientific questions
54:39 - that go into this piece I am not
54:41 - covering that piece in this video but
54:43 - there needs to be some data something
54:45 - that I want to analyze or learn with
54:47 - that's the data portion then that data
54:52 - goes into the magical machine learning
54:54 - recipe and out comes some output now
55:00 - what that output could be it could be a
55:01 - piece of music that I've generated it
55:03 - could be a classification of an image it
55:06 - could be the price of a house that I'm
55:08 - trying to predict based on some data so
55:10 - there's so much possibility here and
55:12 - this output doesn't have to be a single
55:14 - thing but can be multiple things the
55:16 - input obviously the data can be multiple
55:19 - things this is the idea of machine
55:22 - learning
55:22 - now I spent all this time building what
55:25 - is mostly like a toy neural network
55:27 - library it's written in JavaScript
55:28 - there's nothing about it that's
55:29 - optimized but just to kind of understand
55:31 - the pieces of how it works so what I
55:32 - want to do is have my recipe be in there
55:35 - be a neural network and I want to create
55:39 - some scenario where I have some training
55:43 - Dana so what I'm going to do this is
55:45 - going to be a demonstration also of the
55:47 - machine learning process called
55:48 - supervised learning supervised learning
55:53 - meaning I am the supervisor and I am
55:57 - going to teach this machine learning
55:58 - recipe to produce output that
56:01 - appropriate output for a given inputs
56:05 - now what well if I just know all the
56:08 - answers why would I even do
56:09 - this well likely there's a scenario
56:12 - machine learning is gonna be used with a
56:13 - scenario where I have a lot of labeled
56:16 - data I have a known data set that I can
56:18 - use to train this system so that if I
56:20 - give it some unknown data it will give
56:23 - me out cut to give me an output a
56:25 - relevant output the classic example of
56:27 - this of course is I have a whole bunch
56:28 - of images I'm gonna say here's a bunch
56:31 - of I'm gonna tell the recipe here's a
56:32 - bunch of cats here's a bunch of dogs now
56:34 - here's a new here's a bunch of cats
56:41 - here's a bunch of dogs now here's a new
56:44 - image which one is it and along with
56:48 - this process we will typically have
56:49 - training data
56:51 - this is labeled data for which we know
56:54 - the answer we will have testing data
56:58 - this is data that we know the labels for
57:01 - but we aren't using in the training set
57:03 - so that we can see is it working this
57:05 - does it actually give us good good
57:07 - outcomes with unknown data and then of
57:09 - course we have the actual unknown new
57:12 - data that we want to use okay so what's
57:16 - the scenario that I'm going to use the
57:17 - trivial realms rather ridiculous example
57:20 - that I'm going to use in this video is
57:22 - the xor xor stands for exclusive or it's
57:28 - a boolean operation that resolves to
57:30 - true only if so you can think of true
57:34 - and if true x or true is actually false
57:39 - i didn't finish my sentence it resolves
57:42 - to true only if one of the two boolean
57:49 - expressions value is true so false x or
57:54 - false also is false and if you go back
57:57 - to my video that's linked here about the
58:00 - perceptron the lib you'll see that this
58:03 - is this is a special problem because a
58:06 - single simple perceptron a single neuron
58:09 - machine learning system cannot solve
58:12 - this problem it is not linearly
58:14 - separable the solution space is not a
58:17 - space where you can just draw a line and
58:19 - see all the categories of one on one
58:21 - side and all the kind
58:22 - the other on the other side so you can
58:23 - dive into that deeper but this is where
58:25 - a neural network that involves a hidden
58:28 - layer can be used as the machine
58:31 - learning recipe so what I mean by this
58:33 - is I need my training set my training
58:36 - set is going to be 0 0 0 1 1 0 1 1 I'll
58:48 - have 4 elements in my training set and
58:50 - each one of these is labeled this is
58:52 - labeled with a 0 this is labeled with a
58:56 - 1 this is labeled with a 1 and this is
59:00 - labeled with a 0 this is the known data
59:03 - right again this is a sort of trivial
59:05 - you know I could build you could build a
59:08 - circuit right imagine what it would take
59:10 - to build a circuit with two switches and
59:12 - the LED only lights up if one switches
59:15 - on they're both on it doesn't light up
59:16 - if they're both off it doesn't lay it
59:17 - off think about how you might build that
59:19 - that's essentially going that that
59:22 - diagram of that circuit is essentially
59:24 - what we want the neural network to look
59:26 - like so the way that it's going to look
59:28 - and let me erase this here is we can see
59:35 - here in my labeled data set that there
59:38 - are two inputs and one output so the
59:42 - neural network structure has to have two
59:44 - inputs and one output I'm going to send
59:47 - in x1 and x2 these are true and true
59:51 - true and false false or true and somehow
59:53 - out of this I should get a why I should
59:56 - get a true or false so how you architect
60:00 - and structural a neural network system
60:02 - this is something that I've gone into
60:03 - much more depth in the other videos but
60:05 - the key to this problem is having what's
60:07 - known as a hidden layer so the inputs
60:09 - come in here I want to look at the
60:11 - output here but these neurons are going
60:13 - to exist in between so everything this
60:16 - is also what's known as a fully
60:17 - connected Network
60:19 - so as the inputs come here they both go
60:23 - into this hidden layer some math happens
60:25 - this is the math that I go over in a
60:27 - previous video it has to do with
60:28 - multiplying by weights these are all
60:30 - weighted connections then the then those
60:33 - go into this output layer
60:35 - we get the answer and then there is a
60:37 - training process we say try it with this
60:40 - what internally in the training process
60:41 - what it does is if I give it zero zero
60:44 - with a zero and it outputs a one it's
60:46 - like I tell it hey you got that wrong
60:48 - adjust all those weights to try to see
60:50 - if you could get it more correct so
60:52 - we're gonna do is over and over again to
60:54 - train it to see if we can then later we
60:57 - don't have a separate training and
60:58 - testing set in this scenario we're just
61:00 - going to say I'm gonna train it and see
61:02 - if you can start producing the correct
61:04 - answers for all of these numbers okay
61:06 - that's the background for XOR now I'm
61:08 - actually going to go and write the code
61:10 - to do all this it works okay so how's it
61:23 - going here I want to see did I miss
61:31 - anything kind of crucial there I'm gonna
61:35 - go into the code part now all right
61:47 - sounds pretty good to me
61:49 - okay good ringing endorsement okay so
61:55 - you might recall that I started the
61:57 - video I had this thing up here so this
61:59 - is actually an example that I made in
62:01 - the processing java based programming
62:03 - environment I probably like almost eight
62:05 - years ago at this point so it's not
62:07 - using the same code base but it's
62:09 - actually solved the XOR problem and
62:11 - what's interesting about this and I'm
62:13 - gonna I'm gonna come back to the
62:15 - whiteboard just for one more moment here
62:16 - let me find some room here if I draw a
62:19 - plane and I consider this to be zero
62:22 - zero and this to be 1 1 so this is 1
62:26 - comma 0 and this is 0 comma 1 right
62:30 - notice that if I take this idea of XOR
62:34 - and map it to here I've got false here
62:37 - false here true here and true here and
62:41 - by the way that what I write are one
62:43 - there to here and true here this by the
62:45 - way is why it's not linearly separable
62:46 - you can't draw a line
62:49 - I could draw two lines like this or I
62:51 - can draw two lines like this and you're
62:52 - gonna see that result happen actually as
62:54 - I start to program this I hope if it
62:56 - works but what this this idea of a plane
62:59 - this is a plane that's describing the
63:01 - whole solution space for the problem and
63:04 - if you come back over here you'll see
63:06 - look at that those corners if I bring
63:09 - this over closer to me I can try to
63:10 - point to it these corners are the true
63:13 - quarters any more practice and these
63:15 - corners are the false corners and this
63:18 - plane is all the other solutions now
63:20 - this is a 3d rendering it's soon some
63:22 - fancy stuff I'm gonna create a simpler
63:24 - version of this so let's just actually
63:25 - start doing that so what you're going to
63:31 - need first of all is if you're writing
63:33 - this code along with me you're going to
63:34 - need to have the toy neural network
63:37 - Jas library it has really just two files
63:40 - that you need it has neural network J s
63:43 - and n n dot J's and matrix such as you
63:45 - could ignore this this is for testing
63:47 - that's something I cover in some other
63:48 - videos that you could probably find and
63:51 - you'll see that in my index.html file
63:55 - I am referencing those two JavaScript
63:57 - files I've got like a weird path thing
63:59 - going on but when I published the code
64:01 - I'll publish that all as one one thing
64:04 - okay so now I need to go over to sketch
64:06 - KS let's do some stuff here let's write
64:10 - us to have function let's write a draw
64:13 - function let's say let I'm gonna have a
64:18 - neural network variable I'm going to say
64:19 - create canvas 400 400 let's draw a
64:23 - background of 0 and let's let's go to
64:27 - the browser and see there we go there it
64:30 - is step 1 now what I want to do is
64:34 - create a neural network and I've written
64:36 - out how I want to create it I want two
64:39 - inputs two hidden neurons and one output
64:43 - so the neural network library the toy
64:46 - library that I've built expects those as
64:49 - arguments to the constructor so I guess
64:51 - a neural network equals a new neural
64:53 - network with two inputs two hidden
64:56 - neurons and one output neuron now I
64:59 - should mention that my
65:02 - so-called deep learning systems often
65:04 - have many many many hidden layers
65:06 - hundreds of hidden nodes big massive
65:09 - networks this is a very small simple one
65:12 - the library only supports networks with
65:14 - these two layers the input that well
65:16 - that you consider the input you can say
65:18 - three but really these were the layers
65:19 - they're hidden in the output plus the
65:21 - inputs three things okay now what do I
65:26 - do I need my training data so I'm going
65:28 - to say let training equal and I want to
65:31 - have it be in an array and each element
65:34 - of the array I want it to be an object
65:35 - and it's going to have the inputs which
65:40 - would be like this and the outputs now
65:41 - even though I only have one output right
65:43 - one output outputs can be an array
65:46 - they're also referred to as a vector so
65:48 - a list of numbers but in this case 0 0
65:51 - gives me just a single Apple or I'd have
65:53 - single outputs when I put the array the
65:55 - library expects an array so I have that
65:56 - inputs out 0 0 I have 0 1 and 0 0 gives
66:01 - me a 0
66:02 - not a one I have 0 1 which gives me a 1
66:05 - I have 1 0 which gives me a 1 and then I
66:08 - also have what's the last one 1 1 which
66:13 - should give me a 0 so this is my
66:17 - training data now ordinarily this data
66:19 - might be in a spreadsheet it might come
66:21 - from an API it might be in a JSON file
66:23 - but I'm just hard coding the training
66:26 - data directly into my program just to
66:28 - demonstrate the idea now what do I want
66:32 - to do well in the draw function what I
66:35 - want to do is and now if you're look at
66:39 - how machine learning algorithms work
66:41 - typically you'll see something called
66:42 - you'll have a batch training process
66:44 - where you give it a large batch of data
66:46 - and then you adjust then you adjust the
66:49 - weights and do the training and then
66:50 - another batch I'm gonna do everything
66:52 - just one at a time and the way I'm going
66:54 - to do that is with a function called
66:55 - train that's in the in the neural
66:58 - network library so if I say neural
67:00 - network trained this expects two
67:05 - arguments what it expects to say train
67:08 - the neural network with this input and
67:10 - this expected output and so the easy
67:13 - thing here that I could do
67:15 - I could what it what it should look like
67:16 - is something like this train it with
67:18 - zero zero and with one oh right so this
67:24 - is what I'm saying these inputs should
67:26 - produce this output train yourself on
67:28 - that but I have so I have that all
67:30 - stored in an array what I'm gonna do is
67:31 - I'm going to say data equals random
67:36 - training and what did I call that up
67:38 - here I called it training I just called
67:41 - the training let's call it training
67:42 - underscore data training underscore data
67:47 - so the random function in p5 will pull a
67:50 - random element from that array and it
67:53 - will put it here in data so then I could
67:54 - just say train it with these inputs and
68:00 - expect these outputs it's only one
68:03 - output but outputs so this is the
68:06 - process this is the training process of
68:08 - course all of the work to adjust the
68:10 - weights of the neural network it's in
68:11 - the library and you can go and stop
68:14 - saying this refer to those videos that
68:15 - go through that process okay we've got
68:17 - that now I am going to let's just run
68:21 - this and see if I get any errors ah
68:23 - syntax error sketch dot J's line four oh
68:27 - look at this horrible my JavaScript
68:31 - object syntax is just completely off
68:32 - these are not semicolons you guys have
68:35 - all but everyone watching it's been
68:36 - screaming at the screen take two
68:49 - oh I have semicolons here these should
68:53 - be commas my syntax is completely wrong
68:58 - if you're watching this you were
68:59 - probably screaming at me or saying very
69:01 - nicely and sweetly to the computer okay
69:07 - there we go
69:08 - now let's run again all right it's
69:10 - running its training isn't working so
69:13 - now that here's the thing it's doing its
69:15 - thing let's actually see if it's working
69:18 - because one thing I can do right now is
69:19 - I can just test the output here in the
69:22 - console itself what is this weird
69:25 - graphics artifact going on here I'm
69:27 - going to ignore that I'm gonna say nn
69:30 - predict so the predict function is a
69:33 - function in the neural network library
69:35 - that doesn't take the inputs and the nut
69:38 - and a labeled output it just says here's
69:41 - some inputs tell me what you think tell
69:42 - me what the output is so if I give it
69:45 - zero zero shouldn't I get 1.0 ooh that's
69:51 - not good point four nine mmm that's not
69:53 - good
69:54 - point five one oh it's doing a little
69:56 - better it got a little higher that's
69:57 - closer to one point five one well no
70:01 - point four nine again so this is the
70:02 - thing I have done I have programmed this
70:07 - in such a way that first of all it needs
70:11 - to run these data points in thousands or
70:15 - possibly hundreds of thousands of times
70:17 - to be able to train itself and also this
70:21 - is a problem that with only two hidden
70:23 - nodes it can kind of get stuck right it
70:26 - could get stuck in the sort of
70:28 - in-between state I was trying to think
70:38 - of how to I know I didn't want to cover
70:40 - the getting stuck thing let me just go
70:43 - again and hope that it does it's a time
70:45 - that it doesn't get stuck so this will
70:48 - get edited because I do want to cover
70:49 - the getting stuck thing because I think
70:50 - there's some things we can do to with my
70:53 - adjusting the learning rate and I'm
70:55 - mucking around with it but it just
70:56 - didn't want that to happen right now
70:58 - so just run it again
71:01 - it's running it's running so what I can
71:05 - do is right here in the console just to
71:07 - test it I can type and and dot and
71:10 - there's a function called predict and
71:11 - what predict expects in the neural
71:14 - network library is the input data with
71:17 - no output because it's not labeled
71:18 - training data
71:19 - it's just input data so let's see if we
71:22 - can get results that makes sense and
71:24 - hasn't trained for very long and I don't
71:27 - know but let's see let's just write
71:29 - predict 0 0 0.45 that's not right so I
71:32 - should be seeing 0.1 right it's changing
71:34 - 0.43 so my guess here is that we really
71:37 - needed to just train a lot more what I'm
71:41 - gonna do is just for right now is I'm
71:43 - gonna say I in the draw loop itself I'm
71:46 - gonna say I equals 0 I is less than a
71:50 - thousand I'm gonna have it do every time
71:52 - through draw a thousand a thousand of
71:55 - these training points so this will
71:57 - hopefully get us there a little faster
72:00 - and I can look at this now we can see ah
72:03 - whew now that's wrong right
72:06 - oh no that's correct no I should be
72:08 - getting I should be getting false yeah
72:10 - so that's right I didn't got it
72:11 - backwards for a second I shouldn't be
72:12 - getting true I should be getting a false
72:13 - 0 0 so let's try 1 0 and I've got
72:17 - something that's close to 1 so you can
72:18 - see that this work okay so the library
72:20 - is working but let's say I want to
72:23 - visualize it okay I want to visualize it
72:26 - I want to see it working I want to see
72:28 - it animating as it works so one way I
72:30 - could do that is I could basically let's
72:33 - create some variables like resolution
72:35 - I'm gonna make a grid of 10 by 10 pixels
72:39 - so the columns is the width of the
72:43 - canvas divided by the resolution and the
72:48 - rows is the the height of the canvas
72:52 - divided by the resolution then I am
72:54 - going to say x equals 0 X or I'm gonna
72:57 - use I I equals 0 I is less than the
73:01 - number of columns I plus plus and I'm
73:03 - gonna say J equals 0 it's less than the
73:07 - number of rows I'm gonna do a nice
73:09 - little nested loop here just to now I'm
73:13 - going to say fill
73:15 - random 2:55 and I'm gonna say rectangle
73:19 - I times resolution J times resolution
73:23 - resolution I shoulda picked a less long
73:27 - variable name resolution so with this
73:30 - should do is this is a nice little
73:31 - nested loop to just draw a grid of
73:34 - rectangles ten by ten and a little
73:36 - warning this will be kind of flashy so
73:39 - you can see all of these all these
73:41 - elements are flashing out with a random
73:42 - color but I don't want a random color
73:44 - what I want to do is I want to create
73:46 - some inputs so I'm going to say let x1
73:49 - equal I divided by columns right from 0
73:54 - to 1 let x2 equals J divided by rose and
73:59 - the inputs then is an array x1 x2 so
74:04 - what I want to do is I want to create a
74:06 - scenario let me just say no loop here so
74:08 - this stops I want to create a scenario
74:10 - where I am inputting in 0 0 here and at
74:16 - this corner 1 0 and 1 1 and 0 1 down
74:20 - here and all the numbers in between
74:22 - right so now and then I what I can do is
74:27 - I can say let y equal neural network
74:32 - predict and this should be an equals
74:33 - here it's this particular predict those
74:36 - inputs and then fill Y times 255 so I
74:40 - should get a brightness value out that's
74:43 - between I should get a Y value that's
74:45 - between 0 and 1 and I should get that a
74:47 - brightness value I can both my by 255 to
74:49 - get a brightness value okay let's run
74:50 - this boom so we can see now and let's
74:55 - let's let's be a little more thoughtful
74:59 - about this and say no stroke then I'm
75:03 - gonna refresh it and very quickly now ah
75:05 - so this I'm so glad this happened so
75:07 - here's the thing it works for me a bunch
75:09 - of times but actually here you can see
75:11 - it's totally getting stuck let's refresh
75:13 - it again and I got stuck in a slightly
75:17 - different way we hit refresh again whoa
75:19 - it's just like going around the Horde
75:20 - and getting stuck in every possible way
75:22 - now how it worked so here's the thing
75:25 - remember how I said
75:27 - neural network is an interconnected set
75:30 - of nodes which each connection being a
75:32 - weight so there's a couple important
75:35 - factors here what is those weights are
75:36 - initialized randomly and it there are
75:39 - thoughtful ways that you could
75:40 - initialize those weights but I kind of
75:42 - like initialize them in a certain way
75:44 - the problem is there's multiple
75:45 - solutions here so there's one solution
75:49 - here where there's white all the way
75:51 - along this way and if i refresh this a
75:53 - bunch of times you'll see there's
75:54 - another solution where there's black all
75:56 - the way down through the middle because
75:57 - honestly the only thing that's correct
75:59 - is the core is what's in the corners so
76:01 - I've run this a bunch of times
76:03 - isn't this the opposite of what we got
76:04 - before I can't remember so there's a
76:06 - bunch of different solutions here and it
76:07 - sometimes can get stuck in that middle
76:08 - so I might one thing I might be able to
76:10 - do is play with something called the
76:12 - learning rate so there is a variable in
76:15 - the the library called learning rate and
76:19 - I could say neural network learning rate
76:22 - equals there's a set function but I
76:26 - think timeout here does some just pause
76:35 - for a second just somebody who was
76:36 - watching this know if this has the this
76:40 - set learning rate does this mean I
76:43 - should do maybe this isn't using this
76:45 - getter setter in the es6 way does this
76:48 - mean I should call a function called set
76:49 - learning rate or does this mean I'm
76:51 - supposed to do the thing where I can
76:52 - actually say learning rate equals and it
76:54 - kind of automatically calls this
76:55 - function I'm waiting for like somebody
77:03 - to weigh in so I should call set
77:04 - learning rate the way that is written
77:09 - [Applause]
77:12 - because there's some fancy getter setter
77:14 - thing you can do that's not an es6
77:17 - setter
77:18 - okay so someday might might be an es6
77:21 - center but it's not gonna be right now
77:22 - no setter okay should I make it a setter
77:25 - like should the library have a center
77:27 - would that be like a good thing to do
77:47 - this is me just waiting for the Internet
77:50 - to tell me which to do I mean I don't
77:59 - really need to be getting into this
78:01 - right now right it's only really useful
78:24 - if I want to get the learning rate okay
78:26 - okay let's not worry about that right
78:27 - now so I forgot the library actually has
78:37 - a function called set learning rate and
78:40 - so what I can do is I can set this to
78:43 - some value now what should that learning
78:45 - rate be the learning rate is like how
78:47 - big are these steps how big are these
78:49 - adjustments and so maybe what I'll do
78:51 - here is I will create a LR slider for
78:55 - learning rate slider and I'm going to
78:57 - say LR slider
78:59 - equals create slider and so I'm gonna
79:01 - have learning rates that go between 0
79:03 - and 0.5 that's probably a ridiculous
79:07 - range with an incremental step
79:09 - oh it will start at 0.1 and an
79:12 - incremental step of 0.01 so this is a p5
79:15 - Dom function create slider that creates
79:17 - an html5 slider puts it on the page and
79:19 - so now I could just say LR LR underscore
79:25 - slider dot value so this should if I'm
79:30 - right always set the learning rate
79:33 - according to this so let's see if I put
79:35 - it up here and I say neural network
79:37 - learning rate it's 0.5 and if I go down
79:40 - to here it is zero now I shouldn't let
79:44 - it be zero right so the lowest the
79:46 - learning rate should be is probably 0.01
79:49 - so let's see if we can get it stuck now
79:53 - of course it well I'm gonna hit refresh
79:54 - a bunch okay it's stuck let's see if
79:56 - just like allow you to take bigger steps
79:58 - one way or the other
79:59 - we'll sort of fix the problem yeah it's
80:01 - still really stuck interesting now I
80:06 - guess what I could do is I could if it's
80:07 - stuck I could reset the neural network
80:10 - so neural network a random eye or is
80:14 - there a function of the neural network
80:15 - library to randomize the weights again
80:24 - [Music]
80:27 - yeah let me let me go from where I
80:34 - stopped with the slider though no that
80:38 - doesn't really work well one thing I
80:41 - could do is I could kind of like Reese
80:43 - we randomized the weights I could like
80:47 - that could be something I don't know
80:49 - oh the learning rate is only being
80:52 - applied after a sow no but it'll it'll
80:56 - come back cuz once it doesn't it doesn't
80:59 - get that's a good point in the chat
81:01 - something saying it's the learning rate
81:02 - is only being applied after a thousand
81:04 - iterations but it just has to wait for
81:06 - that 1,000 it's not like then it's back
81:09 - again the reason why I could get stuck
81:14 - is because there's two possible
81:15 - solutions and it I was gonna add forward
81:19 - in two hidden nodes and I think that
81:21 - will help it but I'm trying to think of
81:24 - I can't remember what I put into the
81:25 - neural network library like I guess to
81:35 - read to reset it okay I have an idea now
81:47 - okay let me let me let me try this again
81:51 - so let's try let's try now let's try
81:56 - lowering the learning rate that didn't
82:02 - really seem to fix it's really stuck
82:04 - here so one thing I could do is I could
82:06 - just like start it over like new neural
82:09 - network two to one and now I've just
82:13 - started it over and that's still stuck
82:17 - let's try it again well let's leave it
82:19 - at like point one so I could write this
82:21 - as an in a function to like if to like
82:23 - restart it a bunch of times and just get
82:25 - lucky with the first weights another
82:27 - thing I could try though just to see if
82:28 - this really helps the thing is I thought
82:32 - I probably need to do is be more
82:33 - thoughtful about how the weights are
82:35 - initialized which is something I would
82:36 - need to probably want to build into the
82:38 - neural network library but you're sort
82:39 - of curiosity let's add four hidden nodes
82:41 - so do we make the network smarter by
82:45 - giving it more things to learn about
82:47 - right so I'm adding in all of these
82:51 - whoops this goes to here right there are
82:53 - more connections more connections more
82:56 - possible things for it to learn about
83:00 - let's see what happens
83:02 - ooh look at this look at that it's nice
83:10 - and curvy it's sort of like learned it
83:12 - and slowly weed every way and I suspect
83:14 - that I'm gonna have a lot harder time
83:16 - having it get stuck now you can see that
83:19 - there's multiple protocol correct
83:21 - solutions to how the space looks but
83:24 - it's really able to figure it out now
83:28 - that's really the end of this video the
83:31 - point of this mostly was just to test
83:33 - the neural network library so it works I
83:37 - can use it I can give it data to learn I
83:40 - can try it with other day and I can
83:43 - visualize its result now so here's the
83:45 - thing you're watching this video what
83:46 - should you do next well first of all I'm
83:48 - gonna new another challenge which is the
83:49 - kind of classic hello world neural
83:53 - network machine learning example which
83:54 - is to recognize handwritten digits and
83:57 - they're so well known test set
83:59 - em nest that I will use hey kind of
84:02 - don't want to but I think it's worth me
84:04 - just doing that just to do it but that
84:06 - would be a think more interesting
84:08 - problem and then we can even make it so
84:09 - that if I draw a digit can the neural
84:12 - network detect what digit it is so
84:14 - anyway so that's coming but could you
84:16 - one-one come up with your own data set
84:18 - trying to train the neural network with
84:20 - your own data set and then how does it
84:23 - perform you also might think about
84:25 - visualizing this output using color in
84:28 - some way you know you could use 3d as I
84:31 - showed you with this process example
84:33 - which is no longer open so you could try
84:36 - a variety of different ways of
84:39 - visualizing this and maybe or animating
84:41 - it or changing the way you would yet
84:42 - build an interface to it there's so many
84:44 - possibilities so I encourage you to
84:46 - explore it I encourage you to dig in
84:48 - also to the neural network library code
84:50 - if you want to see how that works and
84:52 - check out those other videos as well so
84:54 - thanks for watching this coding
84:56 - challenge I think that's it that's it
84:58 - that's it I'm done
85:10 - I'm sorry it's interesting how like what
85:13 - kind of weird results we can get Oh try
85:20 - playing around the slider now I should
85:21 - have done that so actually one thing I
85:23 - should do is that I should really have
85:28 - done this because it's more interesting
85:36 - to watch it
85:37 - figure it out slowly over time but I
85:43 - guess this is not as exciting to watch
85:58 - let's try just with ten
86:14 - probably too slow to watch yeah I'm just
86:19 - trying to what's the sweet spot of like
86:21 - being el Tet it to slow it down but to
86:23 - also like yeah so this is probably
86:27 - better a hundred because you can kind of
86:29 - see it learning more slowly over time
86:35 - okay uh all right so I think I'm
86:47 - finished for today it's four o'clock oh
86:50 - it's because of the sigmoid I forgot
86:55 - yeah yeah that's interesting right
87:01 - there's no correct answer for this
87:05 - center spot really and so it can yeah I
87:10 - be interesting to just actually run this
87:13 - with a different activation function and
87:16 - to put that into the library but I'll
87:17 - have to come back to that later okay I
87:20 - don't know if this was better than the
87:21 - time that I did this before it probably
87:24 - took longer but yeah make it make it
87:33 - slow and play with the learning rate
87:35 - that's kind of interesting that's an
87:36 - interesting idea
87:39 - all right so let's do that let's make it
87:41 - slow like 10 let's up that learning rate
87:48 - see it's making big jumps they're too
87:51 - big and now I can lower it to refine oh
87:54 - yeah that's kind of interesting
87:59 - yeah so plain what the learning rate
88:01 - really does make a difference okay so
88:09 - I'm here I'm just about done but I do
88:12 - have a few minutes that take some
88:13 - questions it was really good okay thanks
88:21 - I just felt like I needed some space
88:24 - from what I made the library
88:26 - because I was in my own head of like
88:28 - what did I say before what that I didn't
88:29 - and so this is I hoped would kind of
88:31 - give an introduction you could kind of
88:33 - my goal for this was that you could
88:35 - watch it without having watched that
88:37 - other playlist but you could get more
88:41 - for watching the other playlist I don't
88:42 - know I can add a slider for the
88:48 - iterations that's a smart idea that's a
88:50 - very smart idea so let me talk for a
89:06 - little bit about what I want to do on
89:08 - Friday even though I'm so tempted to do
89:11 - some of it right now but I think I will
89:15 - do it on Friday let's so here actually
89:19 - let's go this is exciting let's do a
89:22 - live adding to the coded train website
89:28 - so I think if we go in here under
89:31 - streams we can see these are now there's
89:34 - so many more that need to get added here
89:35 - these are the markdown files for all of
89:39 - the live streams and so the live stream
89:42 - this Friday would be one well today is
89:46 - what today okay so let me go to my
89:50 - channel you know I don't want to go to
89:54 - youtube home coding train live what by
89:57 - the way it's so interesting to see that
89:59 - what like things that thinks I should
90:01 - watch based on because this is not my
90:03 - personal YouTube account this is like a
90:05 - random YouTube account that I set up
90:07 - just for live streaming I don't know why
90:10 - I think I should watch this football
90:11 - video but what I want to do is go to the
90:14 - coding train I'm subscribed to the
90:16 - coding train and
90:26 - Oh interesting okay um I sorry I always
90:32 - had some important messages but I will I
90:34 - will get back to those in a minute I
90:35 - shouldn't be looking at my messages
90:37 - we'll have live streaming I'm looking
90:40 - for playlists and actually I can just do
90:45 - this
90:45 - the last live stream was number 118 so
90:49 - today is 119 and this Friday I don't
90:53 - know what time I'm gonna do it this
90:54 - Friday probably in the morning actually
90:56 - this Friday so if I create a new file
91:00 - create new file 119 upcoming live stream
91:09 - dot MD create a scheduling Friday's live
91:18 - stream and I'm going to make that new
91:22 - file then I'm gonna go here and I am
91:32 - going to go look at another one I'm
91:37 - gonna look at this one called walks and
91:42 - I'm gonna look at how its I'm gonna do
91:44 - this because that's actually this one's
91:48 - not this is no longer an upcoming live
91:49 - stream but I'm gonna grab this and I'm
91:53 - going to edit this file I'm gonna paste
91:57 - this in so now the date for this Friday
92:00 - today is the 7th 8th 9th to 9 and the
92:09 - topics will be so this Friday what I
92:13 - want to do is M NIST coding challenge
92:20 - pendulum pendulum coding challenge
92:25 - spring coding challenge what I mean by
92:28 - spring is Hookes law and and double
92:36 - pendulum coding challenge now there
92:39 - might have been something else so I'm
92:42 - kind of doing double duty here in that
92:44 - I'm trying to push the neural network
92:45 - stuff further machine learning stuff but
92:48 - I also want to I'm this week in my
92:53 - course at ITP that I'm actually teaching
92:56 - this week was about oscillating motion
92:58 - so I wanted to look at Springs and
93:00 - pendulums and I've always wanted to
93:02 - program the double pendulum so but I
93:04 - feel like it's weird to do the double
93:06 - pendulum a challenge without having done
93:07 - the pendulum coding challenge let's just
93:09 - make sure I haven't done these videos
93:10 - already so one way to figure that out is
93:15 - Schiffman pendulum now I know I have
93:18 - video about a pendulum but I think in
93:21 - this video which is two years old first
93:23 - of all it's in processing I don't have
93:26 - any gray hair and I'm pretty sure I
93:31 - don't actually code the pendulum from
93:33 - scratch I'm just talking through an
93:35 - example so I don't see anything else
93:39 - about a pendulum so that's good what
93:42 - about Springs Springs toxic lives simple
93:47 - harmonic motion but again these are all
93:49 - the old ones ooh I do have a guest
93:52 - tutorial with Val head about a spring
93:55 - animation Oh wonderful and that's great
93:58 - so this you should check out maybe I
94:00 - don't maybe I won't do that because I'll
94:01 - just refer to I'll look at that and see
94:04 - if it's doing the same thing that I want
94:06 - to do and then I remember I use toxic
94:11 - lives for some stuff so I have this
94:14 - pendulum simulation so I think that's
94:16 - kind of my plan I'll probably let this
94:18 - spring go and focus just on the pendulum
94:21 - stuff if so now wait wait a second wait
94:24 - a second the reason why I was doing this
94:27 - mmm this doesn't look right could this
94:31 - possibly be right well if I did this
94:33 - correctly now if I go to the coding
94:37 - train comm I'm gonna check my email to
94:45 - make sure I didn't get like a build
94:46 - error I don't see one if I now go to
94:51 - streams and go to the bottom mmm so I
94:57 - probably did something wrong
94:59 - he's one I might have used a bat so
95:02 - let's look at one that's actually
95:03 - showing up so let's look at 104 104
95:10 - let's go to edit oh yeah oh look at this
95:14 - no this is right let's look at this so
95:17 - this one's showing up so I'm just going
95:20 - to paste this in I think I did something
95:22 - wrong
95:25 - topics oh wait I know what the problem
95:29 - is topics yeah I think if I look at the
95:37 - format here title this should be under
95:42 - here and this should just say topics and
95:48 - maybe it's I want to do this so maybe I
95:54 - want it to be like this
95:55 - oh is the date format wrong I have an
95:59 - extra line break at the top is that the
96:01 - only problem but let's use this format
96:09 - let's use this format let's try this and
96:17 - then I can video I there's no video ID
96:19 - yet oh and this should say by the way I
96:22 - want this to say oh you know I wouldn't
96:24 - be surprised if this requires this
96:28 - February 9th yep that's right
96:31 - 4:00 p.m. let's try this and then here
96:42 - live stream okay
96:45 - oops more neural networks and also
96:51 - pendulums let's just put that there okay
96:54 - let's look at this how we doing here is
96:59 - this possibly correct let's try this
97:05 - let's does correcting live stream page
97:12 - let's do this this looks better like if
97:17 - formatted it and so now we have to wait
97:20 - for the page to build so I will take
97:26 - some questions
97:32 - maybe indent the topics check if there's
97:35 - a plugin for your editor does it show up
97:49 - on the home page I think one of the
97:55 - ideas was to have the upcoming next
97:57 - upcoming live stream always be here
98:00 - latest videos by the way also these are
98:05 - the links now so the patreon link
98:08 - merchandise link and then link to the
98:10 - Amazon shop is here let's go back to
98:15 - streams I'm sure just be screwing this
98:23 - up it's also possible that because getup
98:28 - pages can take so here let's be a little
98:32 - bit more thoughtful about this let's
98:36 - actually clone the repo so those of you
98:39 - are wondering what how does this even
98:40 - work
98:49 - let's go let's clone now this is
98:53 - probably gonna be a very long clone so
98:59 - let's just get the repo to the desktop
99:01 - this is gonna take a little while we'll
99:03 - have it pretty fast oh it's working for
99:04 - me I am Sabine made it work I was gonna
99:07 - just try running Jeckle locally oh maybe
99:12 - it's caching I'm gonna force a refresh
99:18 - is it on the homepage by the way there's
99:21 - also one thing I'm just realizing now
99:22 - there's no link back to the front page
99:24 - although may if I click here it is yes
99:25 - oh there we go
99:27 - look at that upcoming live stream ah
99:30 - that's why I probably want to put it
99:33 - okay there we go look there it is so now
99:35 - whenever I schedule one the upcoming
99:37 - live stream should be there now it has
99:39 - the wrong time I'm not sure why I
99:42 - thought I fixed that let's go back to
99:50 - streams let me do this locally let's go
99:54 - through this okay I've got it
99:55 - so I've cloned the repo if you want to
99:59 - work on it and understand and contribute
100:01 - to it locally if I go now to Rainbow
100:05 - code now I have no idea if Jekyll is
100:08 - installed it is apparently of course it
100:13 - just gave me a bunch of errors so let's
100:16 - say this is the problem is I have I've
100:19 - never used Jekyll or Ruby on this login
100:22 - to this computer so I hesitate to go get
100:25 - this all working right now but let's
100:26 - just Jekyll is a framework for building
100:30 - static web sites and I'm gonna just do
100:34 - this let's see if I can all right
100:48 - yeah so I've got to update Ruby the
101:04 - guest is really okay
101:08 - trying to decide if this is worth doing
101:11 - right now so let yeah let's look let me
101:13 - do I have so one thing that I use is our
101:15 - VM so let's use our VM so I'm gonna grab
101:20 - our VM which should let me do this here
101:29 - our VM is Ruby version manager so this
101:35 - should allow me to manage the versions
101:37 - of Ruby I have to start using our V and
101:41 - you need to run sort yeah so I need to
101:44 - do this so it's running okay our VM so I
101:53 - think to install with a certain version
101:59 - of Ruby what I want to do I really don't
102:03 - know what I'm doing here by the way is
102:05 - document I just want the installation
102:09 - yeah I've installed it I just want like
102:12 - a how do I install which version I'm
102:16 - using our VM our VM list our VM install
102:20 - okay our VM install and then what did it
102:24 - say on Jekyll I need to be using which
102:27 - Ruby Jekyll it's probably give me an
102:33 - error because or what does it say I
102:37 - can't believe I'm doing this on a live
102:40 - stream what I'd say requires Ruby 2
102:46 - point two point five okay
102:47 - let's quit that our VM install this so
102:53 - now I'm installing Ruby 2 point two
102:55 - point five
102:57 - checking requirements error is not all
102:59 - right oh my goodness
103:02 - brew doctor yeah doctor doctor let's see
103:08 - if this works
103:09 - Oh permission denied pseudo brew doctor
103:18 - [Music]
103:20 - this okay okay okay
103:27 - how about pseudo RVM install two point
103:31 - two point five oh boy really oh oh okay
103:37 - let's install homebrew wow I I didn't
103:46 - realize that okay failed don't this is
103:57 - route
104:02 - Wow what is going on on this login could
104:07 - not set could not permission denied
104:11 - can I get rid of homebrew Wow Wow
104:19 - oh my goodness I can't believe this is
104:24 - where I am right now what was I trying
104:25 - to even remember us trying to do I was
104:27 - trying to show you how to run Jekyll I
104:28 - just a lot mmm I've been in this
104:36 - situation so many times could not lock
104:38 - in fig file permission denied am i all
104:42 - right let's that's alright let's let's
104:45 - go down this rabbit hole for 10 more
104:47 - minutes then I'm out of here okay
104:57 - [Music]
105:08 - Oh maybe if I just use I term I'd be
105:11 - fine let's try this yeah it's the same
105:32 - that's the same thing I was running
105:34 - before create an access token Wow well
105:40 - someone probably wrote in the comments
105:41 - here well what's the error that I'm
105:43 - getting again permission denied
105:47 - what did I do wrong
105:49 - I kind of want to okay how do I
105:58 - uninstall homebrew
106:04 - okay let's uninstall let's do this
106:16 - oops yes yes oh my goodness Commission's
106:29 - I for missions and I appreciate you may
106:37 - wish to me this is loads of fun okay
106:43 - let's brew update oh yeah okay I don't
106:47 - have it anymore that's good
106:50 - brew cleanup oh yeah I don't have it
106:52 - anymore okay all right
107:08 - oh yeah okay we're in business now come
107:16 - on why was this tonight
107:30 - oops no no
107:40 - why
108:00 - oh yeah this is definitely gonna do it
108:10 - this is the solution to all problems yet
108:17 - can you hear there's no sense it's not
108:19 - installed yet okay well if I got rid of
108:45 - homebrew can I use our VM now yeah
108:50 - does it need homebrew or our VM
108:53 - installed two point two point five it's
108:54 - all I wanted to do oh look at this about
109:01 - to install homebrew restart it's totally
109:13 - not gonna work but all right oh look at
109:16 - this this is promising
109:33 - we'll be nice to have Jekyll working
109:36 - because if I own show religion
109:37 - oh it's pouring it full pouring it you
109:57 - just pour we pour a little bit of that
110:00 - on poor OpenSSL
110:09 - [Music]
110:21 - [Music]
110:34 - [Music]
110:36 - extracting just mind if I check my email
110:57 - [Music]
111:04 - [Music]
111:17 - [Music]
111:27 - [Music]
111:36 - but that was totally just reading my
111:38 - email there I forgot that I was even
111:40 - live-streaming
111:43 - [Music]
111:57 - [Music]
112:05 - okay Wow
112:11 - as npj would say this is authentic
112:15 - programmer waiting
112:26 - [Music]
112:33 - wish I had some coffee coffee would be
112:40 - so good right now
112:43 - [Music]
112:45 - okay
112:46 - that finished I totally I don't even
112:48 - know what I'm doing anymore so now RV
112:51 - and used use I think I say two point if
112:55 - I want it to like I want to use that
112:56 - version okay now I'm using that version
112:59 - okay good good good now let's go back to
113:03 - Jekyll I should be able to say gem
113:07 - install Jekyll bundler and
113:22 - [Music]
113:38 - [Music]
113:40 - poopy two point two point five is old
113:43 - should I be using a more current one
113:46 - [Music]
113:52 - well why did I say two point two point
113:56 - five Wow I probably like have no room
114:01 - left on this computer's hard drive
114:03 - either it's like this I'm expecting this
114:08 - just to like ding ding ding ding ding
114:16 - ding oh what's the minimum should I
114:23 - really go and install uh that was the
114:25 - minimum oh wait okay well let's see if
114:29 - it works
114:30 - does it finish now
114:36 - okay
114:41 - and what was it called so okay so what I
114:47 - should be able to do now is say bundle
114:50 - exec Jekyll serve so if I had in this
114:54 - repository this is now the the coding
114:58 - train website repository cloned locally
115:00 - this computer if I say bundle exec
115:02 - Jekyll serve a bundle install have to
115:06 - install all the gems I forgot about that
115:09 - and we're back
115:22 - [Music]
115:47 - [Music]
116:10 - where am I
116:11 - what year is it am I still installing
116:19 - nokogiri control well there we go
116:35 - control l thank you very much so now
116:38 - let's try this again
116:40 - [Music]
116:50 - amazing amazing it still hasn't built
116:58 - yet though it's a big site with a lot of
117:00 - stuff very soon it will have built there
117:05 - we go so the server is now running so I
117:08 - can now grab this and I can go to the
117:11 - browser and we can see here is the
117:14 - coding train website and now here is the
117:17 - card which now has the upcoming
117:19 - livestream so now what I can do is I can
117:21 - be a bit more diligent about this and I
117:25 - can actually just try editing all this
117:27 - stuff locally so I want to go to streams
117:30 - and upcoming livestream 119 and actually
117:34 - what I want to do let's see I'm gonna
117:36 - actually take this out put this here and
117:40 - [Music]
117:47 - and when I hit save right we should see
117:52 - that I hit save it is now going to
117:54 - regenerate because I did save so it's
117:58 - regenerating the site it's not finished
118:00 - yet and it's done took 11 seconds and I
118:04 - should be able to refresh now and there
118:07 - we go so now you can see whoops that's
118:09 - there why oh I forgot that I left this
118:12 - stuff in here so I can get rid of this
118:14 - now it was just that line break at the
118:17 - top the whole problem stemmed from the
118:19 - fact that I had that
118:20 - way so now I can do this you can see
118:22 - actually you can see the syntax
118:24 - highlighting completely disappeared
118:26 - this is Yamma which stands for yeah
118:28 - markup language apparently and our young
118:34 - adult markup language maybe I'm not sure
118:36 - it stands for
118:38 - what else could why a be okay so now we
118:43 - can see this is hopefully now of
118:46 - livestreams still says 4 p.m. because I
118:48 - want this to be 10 and although now I'm
118:51 - wondering actually based on my schedule
118:54 - I thought I saw something in my email
118:56 - about something that had to happen on
118:57 - Friday morning so let me look back so I
119:01 - thought might might change it but I'll
119:03 - put it there for now so and then I can
119:06 - come back here and we can see here it is
119:08 - the upcoming live stream is here so you
119:11 - can always check if I've done my job you
119:14 - could check the website for the next
119:16 - upcoming live stream and this link
119:18 - should take you to and actually it took
119:23 - you here and there I am but actually it
119:27 - should take you to now this should be
119:30 - the URL because I have a new I got this
119:35 - new check mark URL Figgy from youtube
119:38 - and so so let's see if we could find
119:44 - where that is we're in this repo is user
119:46 - slash Schiffman lots of places video
119:53 - card it's in the includes now I don't
119:56 - want it to show no but I don't want
120:00 - where did it render the site oh that's
120:02 - hidden okay it's all ready so I think I
120:06 - want dare I like it first of all let's
120:09 - do this so let's let's add this commit
120:17 - so this is new live stream so I've
120:24 - committed that now what I'm going to do
120:25 - for probably against my better judgement
120:28 - is just replace this with now is it
120:33 - silly to put cap
120:34 - in the URL I don't like how that looks
120:37 - let me just make sure it works if I go
120:40 - to youtube.com the coding train live
120:48 - does that work yeah I feel like I'd
120:53 - rather have it be lowercase the Capitals
120:55 - kind of freaked me out so let's do that
120:58 - so let's change this to so this should
121:02 - be the coding train I'm gonna change
121:06 - that everywhere it appears yeah 11 times
121:10 - all over the place how bad could that be
121:13 - did I do it okay done
121:17 - done let's do git status so it got
121:23 - changed in a whole bunch of places which
121:26 - makes sense I guess what's in this
121:36 - folder here oh that's the includes in
121:39 - the layouts okay great git commits
121:42 - updating to new Jekyll I mean sorry new
121:47 - coding train URL and there's a website
121:52 - still working this takes me to coding
121:55 - train live subscribe on YouTube oh
121:58 - that's interesting this somehow is still
122:01 - going to and this should be a button
122:05 - that automatically subscribes you that's
122:07 - not crew this should really be this
122:11 - should subscribe there's a way to have
122:13 - the button automatically subscribe you
122:14 - to the channel which this is not doing
122:16 - so where does this showing up learn to
122:19 - code where's this content is it on
122:26 - landing page learn to yeah there it is
122:31 - Oh site links YouTube ah okay so this is
122:36 - a special case though because this
122:37 - should be a subscribe button YouTube
122:41 - channel I've lost the chat here
122:46 - oh oh well Oh am I gonna have a double
122:51 - slash double forward slash 56 new
122:55 - messages since I stopped looking at the
122:56 - chat double forward slash okay hold on
123:01 - let's search for let's search for the
123:07 - coding train maybe you guys can't see
123:09 - what I'm doing
123:09 - let's search for the coding train double
123:11 - slash oh yeah everywhere whoa it also oh
123:20 - yeah coding train double slash double
123:22 - slash double slash so let's fix that
123:24 - first of all replace all get and get
123:30 - commit fix double slash and this might
123:36 - not be the proper way to do it but
123:38 - somebody in the chat just gave me the
123:40 - subscribe so I think let's try this
123:43 - let's go to let's okay let's go to here
123:53 - still took me there that's fine that's
123:56 - weird wait where is that coming from
123:59 - then if it says hold on hold on I'm
124:06 - talkin to people the room next door this
124:09 - why is this still going to user slash
124:11 - Schiffman okay although we got to figure
124:13 - this out
124:13 - it's a landing page this is pulling this
124:18 - from site links dot YouTube so that must
124:21 - be in config right but it's psyched out
124:28 - links why didn't that not rebuild I
124:30 - guess that doesn't rebuild let's rebuild
124:34 - the whole site
124:41 - so I'm rebuilding the site I apparently
124:45 - have a wrong video number 119 and 116
124:48 - yeah I've been pushed the site live yet
124:50 - that's correct okay so let's see if that
124:57 - fixed it yes this is now going to the
125:01 - coding train and so what I want is to
125:04 - have it on landing page B and then it's
125:09 - question mark sub confirmation 1 sub
125:15 - underscore confirmation equals 1 pretty
125:18 - sure that's gonna subscribe me so this
125:22 - hasn't I'm going to go here and I am
125:24 - going to unsubscribe
125:26 - I am unsubscribing from the coding train
125:32 - unsubscribed now we will go back to the
125:36 - website and I'm going to click on this
125:40 - link and are you sure you want to
125:45 - subscribe
126:03 - okay now I have subscribes I'm back up
126:07 - to my subscription number so that's good
126:09 - so I did that so add automatic
126:19 - subscription link okay now what was the
126:23 - other thing somebody was telling me I
126:25 - had the video numbers wrong Oh
126:27 - interesting I don't have to unsubscribe
126:29 - to get that okay so what was it that
126:33 - somebody was saying that I I have the
126:36 - video numbers wrong let me look back the
126:38 - reason why yes here's the thing
126:41 - Oh 118 is already more neural networks
126:46 - oh I'm totally wrong because today is
126:51 - 119 and also why is 116 what's I'm so
126:57 - confused but let me go to the let me
127:00 - look at the website here so
127:01 - oh it says 116 there yes yes I see and
127:04 - actually it shouldn't even be 119 119
127:09 - because it should be 120 and so let me
127:16 - rename the file it should be 120 because
127:23 - it's the last one that is on YouTube is
127:27 - in fact 118 that beats today right now
127:34 - is 119 and Friday is 120 so so I change
127:41 - it to 120 and let me do get status so
127:49 - I'm gonna do get a - a and I'm I did
127:53 - that - capital a I don't know if needs
127:55 - to be capital because I deleted to file
127:57 - and so I want to make sure that delete
127:58 - gets pulled gets added as well
128:01 - Friday is 120 and then why not add one
128:06 - for today if I do I'm not gonna add one
128:13 - for today so this is the thing
128:15 - anybody watching this video wants to
128:17 - help there are look at this a live
128:20 - stream could be the markdown file could
128:23 - be added for all of you know it only
128:25 - starts here about 104 coding challenges
128:30 - I think whoops
128:31 - I think I'll have a markdown file for
128:34 - every coding challenge looks like I have
128:38 - a markdown file for every coding
128:39 - challenge but I'm missing so many
128:41 - markdown files for the courses and
128:43 - tutorials and also just generally
128:46 - speaking if you have ideas for how this
128:54 - site can be more navigable visually
128:59 - pleasing make more sense just you can
129:04 - clone it you can run Jekyll locally like
129:06 - I did you can make changes to it it's
129:07 - all HTML CSS markdown and some weird
129:10 - Jekyll stuff but play with it make fixes
129:13 - make changes I could use some unit tests
129:16 - for it like one thing would be good to
129:17 - have a unit test that checks to make
129:18 - sure the Jekyll build is right yes and
129:25 - yeah I would love help with that but
129:27 - right now I at least have successfully
129:30 - scheduled this Friday's livestream now
129:32 - one thing I should say this is my
129:34 - speculation I might change to the
129:37 - afternoon but I will try to update this
129:39 - if I do but this at least now is going
129:41 - to be a system for me being able to
129:44 - alert people of when the next livestream
129:45 - is it comes to see the latest videos and
129:48 - all this stuff all right I think that's
129:53 - all I've got to say for right now oh let
129:55 - me push it to live to the site so I've
130:01 - now pushed this live so you should now
130:03 - see this if I go to the coding training
130:06 - calm now you don't see it right now
130:08 - because these Jekyll builds can take a
130:11 - little while all right for coding
130:20 - challenge Friday or one of them well
130:21 - certainly my goal is to do all four I
130:24 - wouldn't be surprised if I only got to
130:25 - one or two or three but my goal is to do
130:28 - all four okay so I'm done for today I
130:39 - will happily take a few last questions
130:42 - for a sigmoid which 4:45 I really had a
130:46 - cow for a sigmoid should the outputs be
130:49 - negative 1 1 instead of 0 1 just
130:51 - thinking no the sigmoid function
130:53 - squashes any number to a range between 0
130:57 - and 1 there's a function called tan H or
130:59 - a hyper tangent that's another
131:00 - activation function that is used with
131:02 - neural networks that gives you an output
131:05 - between negative 1 and 1
131:06 - but sigmoid is doing out for between 0
131:08 - and 1 and the most sort of the the
131:11 - activation function that's used most
131:13 - commonly now is called brand new or I
131:14 - like to say if a new and that actually
131:17 - just gives you a number between 0 and
131:20 - infinity ok
131:23 - do you have plans of teaching js4
131:26 - embedded devices like Esprit no chess or
131:28 - puck Duchess I don't have any plans but
131:33 - that sounds like a great idea and that
131:36 - would probably be a good good territory
131:38 - for a guess tutorial hopefully I can get
131:41 - a little more handle on my schedule and
131:43 - have more guests are you going to carry
131:46 - on with neural networks convolution etc
131:48 - yes I'm going to keep Durrell networking
131:52 - and carrying on and but I do I'm not
131:58 - sure I don't think that I'm going to
132:00 - continue to build every style and flavor
132:03 - and architecture of neural network into
132:06 - this toy javascript library this I
132:09 - really meant to do like the sort of
132:10 - first beginning steps and then if I do
132:12 - stuff with say a convolutional neural
132:13 - network I'll do that with a ha deep
132:16 - learn yes and possibly this ml5 digest
132:18 - library when are you going to add
132:26 - splitting to the game agario no probably
132:31 - not for a while but that people have
132:32 - really requested that I follow up on
132:34 - that challenge
132:34 - so that's but are you interested in a
132:37 - coding train app yes you know the budget
132:41 - that I have for this channel is small
132:45 - and I do use the patreon funds for video
132:49 - editing and other production and design
132:51 - services and Apple could be something
132:54 - that I would potentially want to invest
132:56 - some funds and having somebody develop
132:57 - but I also wouldn't be opposed to having
132:59 - a community built app that somebody
133:02 - works on is for volunteer if you're
133:04 - interested in that please get in touch
133:05 - but I don't let you know the web site is
133:08 - kind of right now living in this sort of
133:09 - like volunteer its place but I'm not
133:12 - opposed to
133:14 - I don't know what I'm saying here but
133:16 - yeah I'm not opposed to an app that
133:18 - would be interesting can you teach us
133:20 - Python no I was planning to do Python
133:26 - because I was gonna use Python for all
133:28 - this neural networking machine learning
133:30 - stuff and then use a flask server to
133:32 - talk to my JavaScript and then it
133:34 - descended from the Google deep learned
133:38 - digest came out and that's really
133:39 - shifted my thinking into kind of really
133:41 - staying within the browser for this
133:42 - stuff but I do hope to add node and
133:44 - maybe electron to some of the stuff that
133:45 - I'm doing but a Python I would probably
133:47 - wanna have some guesses for coding trade
133:50 - app coding challenge okay oh the song
133:53 - ended okay thank you everybody for
133:54 - watching this was a bonus live stream I
133:57 - think that XOR was an improvement over
133:59 - my previous XOR challenge but I would
134:02 - let the wonderful math blanks matchy let
134:06 - me know what he thinks and so start
134:09 - tomorrow will come out the video series
134:12 - on unit testing and continuous
134:15 - integration with circle CI thank you to
134:16 - circle CI for sponsoring those videos I
134:19 - had to kind of I really like doing
134:21 - sponsored content it's a good way to
134:23 - make what I do more possible so if
134:26 - you're interested in sponsoring you can
134:28 - get in touch with me okay thanks
134:31 - everybody and Tetris so here's the thing
134:34 - I I need an idea if I go to coding
134:37 - challenges snakes and ladders was 91
134:41 - so that XOR was 92 I'm getting close to
134:43 - coding challenge 100 I need a really
134:45 - good idea for that and a Tetris is kind
134:49 - of on possibility there so if you have
134:52 - ideas for what would what's the perfect
134:53 - like coding challenge to synthesize
134:55 - everything that I ever done on this
134:58 - channel let me know ok goodbye everybody
135:02 - I will see you in hopefully on Friday
135:04 - and if for some reason Frey doesn't work
135:06 - out I won't feel guilty because in a
135:07 - bonus stream this week ok good

Cleaned transcript:

good afternoon and welcome to a special extra bonus livestream as you know I typically wanna not know this but if you're watching or if you watched before I typically livestream on Friday stop enjoying it it's gonna be over soon I kind of tame it where I Club it in right when there's about 10 to 15 seconds left so the music could trail off to the end but it was that like 35 seconds I'm just kind of waiting for it so here I am I had to get cancelled today then I typically often have to do on Wednesday afternoons and I have been aspiring for awhile to do more often shorter live streams than less frequent longer live streams as much as some people might enjoy the 3 or 4 hours at a time of live streaming on a Friday I do find that the content somewhat suffers especially towards the end and if I could find little pockets of time to record a video to do tutorial to update something and so today actually I was I was thinking oh I had this extra bit of time what I'm gonna do is I'm gonna sit at my computer and go through a bunch of pull requests on the toei neural network library that I built last Friday and I thought well I might as well just livestream that because there's I've got some questions around then I can talk about it I don't see anybody saying that they are listening oh they are ok first figure I thought did I just totally not get that start streaming button the other thing was is I've had this cold and I was kind of sick on a little bit last Friday much more over the weekend and Monday and I thought I'm all the way better now and then all that's enough talking and realizing like it there's still a little bit of scratchiness there so I will be here it's about 230 on my time Eastern Time now in New York City I will probably live stream for one hour possibly a little bit longer but this is gonna be a shorter live stream and I have two plans I have two plans for today one is let me just open this up here a web browser is to use a web browser and I'm going to go to this github repository this is the coding training toy neural network j/s github repository I have actually now for a couple things one is you can now go to I have arrived finally you can now go to youtube.com slash the coding train and we'll take you directly to this channel of which you are watching and there you will see a check mark because I it is me a verified person I check check I am Here I am truly here as and if you're wondering if it's true it's so um I have been releasing these and in fact let me find the playlist for it because I think that will be most useful here we go oops don't play the video just go here so this is the playlist starting off just with an introductory video to the idea of neural networks I built a simple perceptron and talked about a multilayer perceptron then I do a bunch of matrix math things then I look at the feedforward algorithm and then I continue looking at that and then as you know I struggled massively through the back propagation training process but I did five videos and finished that off so that's everything in all of those videos has now gone into this neural network JavaScript library so and I've been getting some lovely pull requests and so I want to look through some of these and merge them so that's item number one and I will mention in case you're wondering about I will also mention that if you are looking for the code in the state exactly as is when I finished that part five that I am putting here under courses nature of code ten point eighteen toy neural network so that's in my the repo that has all of the code for all of the videos and so this is kind of like a frozen state of the code as it stands at the end of that particular video and then I will allow this repository to grow and improve and one of the reasons why I'm doing this project is I intend to start using two other frameworks so I've mentioned before deep learn js' is a project from the Google bigpicture group Google pair initiative people and AI research it is a you know one way you might think of it as a tensor flow but in the browser so this is a library that I intend to use and in further tutorials as I get further along down this road and in fact related to that is a project that is being worked on at ITP ITP NYU github dot is / ml 5 Jas this is another repository URL that you might take a peek at this is now a highlevel JavaScript library for machine learning so this is a library that's built on top of deep learning is to make using deep learning Dutch yes a bit easier for beginners specifically beginners who might be learning to code with p5 Chasse and so for example there's some nice examples here here is an example of simple image classification using a pre trained model I will talk about eventually what all these things are and you can see here the code is simple in that you can just say you can ask the model to predict what it thinks about an image you can look at the results and update what's on the page with the results so this there's a lot of stuff like this that you can start to look at you can look under experiments which are some things that people have built with this but this library is you know less than 2 months old so this is a brand new thing that and I will be doing many more videos with this library so part of the reason why I'm building my own kind of toy version of a machine learning library is just to really understand how all the pieces work so that when I start to use other libraries and frameworks I can have a kind of language to speak about them and I don't know some experience so anyway so did I say I'd be streaming until 230 I did yeah I meant an hour or so so it's 230 now until 330 or so okay so that's two things I want to mention and then of last on Friday I did the X or coding challenge and I thought it would just some reason I don't know why just felt like I wanted to do it again because a couple things one is I got some interesting comments so you know one thing that I think would be really useful to demonstrate is if I manipulate like okay well what if I use four hidden nodes instead of two hidden nodes and I just didn't have that as part of the tutorial which I think would be really useful but also I felt like I wanted to have some distance from the library I just was at the end of like hours and hours and hours of doing the back propagation and I really want that video to kind of stand alone in its own way and be disconnected from that so I thought maybe I would try it again and see what happens okay let's see so now what do i what let me while I'm here let me mention a couple other things this repository coding train slash rainbow code which ostensibly if you're not looking very closely is just a repository that has all the source code from all of my video tutorials right I can say that go look I want to find code for some one of the coding challenges or one of the p5.js courses or the node sockets playlist or code that was one of the QA videos I know tutorials courses there's there still could be some work done on organization here but you'll start to notice oh what are this underscore underscore underscore there's all this stuff landing page and then all of a sudden there's readme dot MD and contributing MD oh so this repository thanks to Niels woman thinks in large part to many contributors but most notably Niels web has turned into the repository which is also the coding train web site now I will open this up a bit wider so this is the new coding train so a drought for workinprogress and each video now has its if it's put into the website has its own page so for example the latest video is here snakes and ladders part 3 and this would obviously take me directly to the video on YouTube but if I click on this link here it'll take me to a page which has the video embed it has a link to run the example in the browser so here's the example running in the browser it has a link this link will download the code a little description here and then a place for community contributions but there aren't any yet but you can add your own by looking at this guide so you can submit a pull request to add yours there's links that were discussed links to the other parts of the video so this is an attempt to create a more navigable version a new more navigable system for finding and looking through all the videos separate from the YouTube interface as well as aggregating and collecting community contributions and relevant links and source code and that sort of thing so I think this website as remarkable and amazing and beautiful as it is it's just it's just like tremendous that Neil's web was able to just put this all together it runs on something called Jekyll which is a static site generator plating engine that works well with github pages I think you can still use work in visual design and it's missing a lot of content so I encourage any of you who are interested in kind of purging to participate in an open source project here's one for you if you I want to make a design contribution or add some content that's missing let me know that shift been on Twitter you can read hopefully the documentation that's in the github repository I would love to have people help with that all right is he sick right yes yeah I thought my cold was gone and that's why I felt comfortable I feel so much better but I think the congestion is still lingering in my throat's so I don't know I have a hold on let me just check here okay okay okay all right just looking at some messages here let me go back to the live channel what I'm looking at over here by the way is a slack channel I often get the question Oh what how could I ask a question or get help so of course I would always recommend that you use if you're if you've got a forum that goes well with a lot of my videos is forum dot processing org you can you can get in contact with me on Twitter but I also have a patreon and if you join the patreon at patreon.com slash coding train that's where you'll get an invitation to the slack channel which I will which I participate in and but honestly think about this black journal that's great it you know the idea was like oh I could help people with their code if they sign up and subscribe but there's so many people already now in this last channel who know way more than I do that are much more helpful so it's kind of built itself into a nice community there okay I'll take a couple questions from the chat ricardo asks have you ever thought about going fulltime youtuber actually I have I mean I have thought about it some ways I might be interested in doing it just so I can say fulltime youtuber it sounds like a weird thing like a crazy thing to say I do have a fulltime job that I love I live in New York City which is a very expensive and complicated place to live and so and then the job where I have is that a program called ITP and NYU in fact that's where I'm recording these videos so while I fantasize and think about it sometimes I don't know if it's realistic for me at this point and I wouldn't want to give up the wonderful inperson community and teaching stuff that I'm able to do through working here but it's interesting question okay Ben Anderson asks can could you explain to me the basic premise of neural networks so that's where I would recommend starting with the this neural networks playlist so in theory the bit I don't remember at all what did this video I made it quite a while ago but that's a introduction of neural networks and I believe I do cover in that video the basic premise of neural networks and I will rehash that again when I start doing the X or coding challenge and I also would recommend the three blue one brown neural network channel yes moving up state becoming a hermit is an excellent idea was a suggestion for how it could become fulltime youtuber and dye my hair green okay ah it's cold mmm this is not this is not I've been silent I guess all day and didn't realize okay so I'm looking at the chat well there's a class going in behind this wall and they're watching a movie right now I can almost hear what it is what's the chance you can hear it if I put my microphone up to the wall I probably just made a horrible scratching sound as I put the microphone on the wall alright so let's get set here okay so the first thing that I want to do is I want to look through the pull requests here and let's think about let's do this let's do this backwards so I'm gonna look at the oldest pull request and move up and see which of these I can merge now one thing you'll notice is they all have a green check mark and that green check mark is because I added unit testing testing to make sure the code does what it should be doing before it could be purged so let's say use matrix constructor okay so tidied up the construct this is from Phil a Turner tidying up the constructor a little bit plus I've never done a pull request before amazing could this possibly be fill a Turner's first pull request that we are hopefully going to merge okay then I wrote apologies can you resolve the conflicts I love this change but since I haven't explained fill in a video yet I wonder if it will be confusing I'm just you're reading my cup mint or maybe this means I better just get to explaining it conflicts are resolved and I am noting another issue that I discussed this in but let's take a look at the code changes here under files change excuse me ah so first of all oh this is a wonderful little addition here but I'll come back to that so look this is the change this is my ugly longwinded way of creating the two dimensional array to store all the values in a matrix and now instead and should this say should this a new array or is it okay to say oh no its array dot fill map a raid Phil zero so it passed the test so I can assume that I think this looks pretty good to me but let's let's just so I have this on record here if you haven't seen Phil before where is Phil now if you haven't seen Phil before JavaScript array functions alka in the patron group is saying it's fine it's ugly either way so the array object has a whole bunch of functions built into it like Phil fine filter Map Reduce and I really should make a list of let's make a list of these let's go lets go rainbow topics under issues and let me look at array let's see if there I think I have one that's talking about arrays like array higherorder functions in JavaScript so I definitely should do this okay neat let's making a list of functions to cover so I am going to add Phil here so by the way in github at issue if you do you might not be aware of this if you put this notation this will leave a checkbox and if I put this notation will leave a checkbox that's checked but I haven't made it yet so I know I want to cover Phil I know I want to cover map I know I want to cover reduce and probably filter right these are some array functions that I want to eventually cover so maybe in the chat if there's some is that some that would be important so I am now going to where am I merge this pull request well it's not this one where is it ah here we are I'm gonna go back to conversation and I'm gonna say merging this live on air and noting to make a video a video about Phil here okay comment and here we go okay I kid you not the class I'm in the middle floor which is the film school here at NYU and so they're always watching movies I think in the classroom next to me so I can hear the soundtrack I don't think I hear that that was totally a train going by it was like a very loud train going Trude going by I'm here with you people in the next room we are one on the train alright here we go merging confirming alright that thank you thank you that was emerged I was the pull request merged Alka is mentioning sort I I've actually talked about sort in a video I don't remember which one but I have a very distinct memory of using sort but like it it would be worth mentioning or covering in that context as well thank you for that all right so we got one pull request done now use es6 export import functions ok this I'm not ready for yet this is there's a nice discussion here it's also out of date but let me see if I can update it that should be fine because I merge that other pull request it's gonna run the tests again let's look at the files changed here yeah so this is using es6 modules and I feel like I'm not ready for that yet but I really should add that soon it'll fix the whole testing stuff so maybe I need to do a video about that and understand that better because it's got the export here and it had need to this like Babel thing so I could be talked into this but this I don't feel ready for you know I'm super thankful for this wonderful thoughtful pull requests okay so now updated todo list oh yeah this was a oh yeah this was somebody who added and fixed up the todo list that was in my nnj s file that I just put in the comments and I guess I had done I've done all these things now except for the end missed coding challenge I'm going to redo the XOR coding challenge today but I did make a comment about this one which is I thought this might be better in say the readme so I'm going to I'm gonna merge I'm gonna merge this right now because why not merge merge this for now but I but maybe someone will pull requests a new place for the todo list now interestingly enough I cannot merge it why is this there it's because it's got to run the tests again and it's probably waiting let's see show all checks oh it passed huh so what test has it not run yet that it won't interesting so I'll come back not sure why this won't allow me to merge it by the way if you're wondering what's going on with why this merge button is not available I did a whole video tutorial series about unit testing and continuous integration and there's a live stream which already is online archived but the actual edited videos are prepared but haven't been released yet those will start coming out tomorrow morning okay alright yeah me I am so be is yeah so if I were doing this properly I would probably want to like check a bunch of these things locally but I'm just I'm living on the edge I'm doing this just through the get up interface but I could like pull the branch and have it local test it out run the tests myself and I really don't understand why this one is not merging but I'm going to come back to here updating transpose test so this is a pull request that came in about at the transpose test and I added some comments and requested those changes those changes have not come in yet so I'm going to leave this one alone added more transpose tests and let's see if I can let's run this update so it's running the tests now there's some music playing in the other room all right we got to wait for the test to finish I could go on to a different polar craft but I like just waiting like to see it just like by the way we could see the test I think under details yep let's watch the test going here it is running it oops sorry look they all passed all the tests passed so it should now say the test pass yep all right let's look at what this coach puts so this is looks like it's adding a test for a transpose it's checking a one by one matrix then it's checking a 2 by 3 to 3 by 2 checking a 3 by 2 to 2 by 3 this looks good at checking to 1 by 5 this is nice I love this test ok great I think this looks good to me we need tests for the tests and I again I should look this over more carefully but you know this is just an open source project for fun I'm so appreciative merge and then confirm merge and we have merged this for a fest thank you to Mikael Souza who submitted that poll request has now merged okay now map improvements oh this one I'm excited about map improvements and using map instead of two nested forloops oh another reason why I want to redo the XOR challenge is I was playing with the learning rate and it wasn't working the whole time because I had the wrong variable name and this pull request is gonna help us with that so I am now going to go to map improvements and so so let's do this so the let me look at this one okay so made the made map past the row and column to the callback function so this is really useful I have a map function in the library which I could pull up and the map function expects a callback function that it applies to every element and sometimes you want to know the column and row the row and column indices and I didn't implement that so this implements that it and then it also has a lot of a use of the es6 arrow notation so I wasn't sure about merging this just yet but now that I have the I have the original source code backed up let's take a look at this so first of all let's run the tests again because I'm sure it's oh we've got conflicts now oh so sad so unfortunately there's some conflicts here because some of the other merges changed the same so you get a merge conflict and I need to do a whole video about this now this is my list of my github series you need to do a merge couple all right let's do a video about it right now this is great this is going to now be a tutorial that will go in my github my github list alright we're gonna resolve this live have a new sponsor why do I have always sponsored by waters but this was like to to destroy the earth I have to stand over here and drink my Earth destroying water all right all right hello surprise it's a video about git git and github and this video is about resolving merge conflicts so I probably should be doing this video in my poem repository which I use for all of my intro to get and github videos but I happen to be here streaming live and working on this neural network library that I've been building in a bunch of other video tutorials so if you just watch those git and github videos all about using a poem to sort of demonstrate how git and github works there'll be some aspects of this that are confusing but hopefully this will be helpful anyway and I can always double back and make another video if this one doesn't work but let's just try it so what is a merge conflict first of all so a bird conflict is when you have let's say on git let's say this is a file in this case it's my file called matrix da chess so I have a file called matrix da chance and it has code in it now I had two people two separate people of the internet happened to be working on this file so we'll call one person a and one person B now any text file has lines in it so even over a poem it would have lines of the poem if it's a source code file has lines of the source code so we can think of the lines as like 1 2 3 4 5 6 now if person a makes a change and submits a pull request meaning hey hey you the library please pull my changes right I want to push my changes to you but I've asked him requesting that you pull my changes if this person just made changes to lines 5 & 6 and this person just made chiton this person is doing the same thing but made saintly changes aligned 2 & 3 the get system is smart enough to figure out how to pull both of these things then with no conflicts because there are no conflicts if I want to accept changes of lines 2 & 3 I can accept those at the same time one before the other Cylons you asleep can't review it simultaneously as lines 5 & 6 however if right here person B makes a change to line 4 in person a also makes a change the line 4 then we have what's known as a conflict and typically what will happen and what just happened to me right now is I merged this one I merged this one wasn't and thinking about it was done it's finished and it works fine it merged with no problems but now when I went to merge this one I got a message saying resolve conflicts now there are a variety of ways you can resolve conflicts and I think that I had some of my previous tutorials looked at working with git command line locally and I could have the text file there but what I'm gonna do is see if I could resolve the conflict just through the github interface itself so let's take a look at how that works now once again this isn't the best scenario and I might come back and do a followup with be nice to see kind of a trivial example that just where I can really know what the changes are but I'm just going to look and see there's a whole discussion here and we can see these are the files these are the files that have conflicts in them matrix touch s and matrix dot test Dutch ass so hopefully you can continue to watch this even if you don't understand what the code in those files is doing i I'm gonna look and see what are the conflicts are oh this is definitely good this is gonna go down to go down the tubes the internet tubes really quickly so I'm gonna click this resolve conflicts button and now it's look at this ooh okay all right oh I mean matrix Jas hmm okay I have to figure out what's going on here so we can see I look this is where the conflict is oh look I think I know how to resolve this okay so this is where the conflict is now what is it telling me here math improvements master equals equals goodygoody Eagles greater than greater than so what this is showing me is this is showing me through kind of like a visual interface of the text file that there are two proposed ways that this code could run one of the files had it this way and one of the files had it this way in fact the current master has it this way but the one that I'm trying to merge has it this way and why does this one have it this way this is a thing that I changed I wanted this so it's up to me now there's no right or wrong answer here as the kind of proprietor of this github repository I've got to decide if both pull requests worked on worked on if sorry if both pull requests worked on the same line I have to pick one which one do I want and I want I'm gonna take this one at the bottom so I'm going to delete delete this and I'm gonna delete this whoops what did I just do I'm gonna I'm gonna delete this now if only I knew how to use a computer I'm gonna delete this and now are there any other conflicts please be no other conflicts oh I'm so lucky I'm gonna now say mark as resolved now one thing you can do if you're the proprietor of a github repository is you could just write to the person spinning the progress I'm so sorry but some conflicts arose I love your pull requests do you think you could refactor it because you could leave this up to the contributor certainly but I'm here live on the internet I mean maybe I'm not live anymore recorded and so there we go Oh No okay uh so now I have this other file hmm let's look at this I might just quit while I'm ahead here but let's see if I can look at this other file so this this code might look very strange to you this is something called unit testing and actually related to this video series I have a video series that I will link to in this video's description about how you can run automated tests that make sure a change in your code doesn't actually break your code that's what this is doing here so there's map improvements that's the pull request and master you know what I think this is a very trivial change it looks to me like this was just added at the end and there was like a line break or something that caused a merge kind of like so this looks like something that I could actually just completely delete here and then delete here and this is just some new stuff that got added to the end as part of this pull request there was like an extra line break or something so github detected a conflict but it really was not a conflict so now I can go and I can click mark as and look at this huh commit merge so here's the thing mmmhmm where am i right now so I mmm I resolved all the conflicts do I want to do this I think this button if I'm right is not actually and look at the chat to see if anybody's complaining about what I've done is not actually merging the pull request I think this is the committing the resolution of the conflicts to conflicts to the pull request let's find out because I'm gonna just it's a green button when I see a green button it just makes me wanna click it quick so I think the pull request is still going to be live and active but it's taking a while yes all it did yeah all it did was fix the conflicts where can I find that that was done here yes that was this so this is me now there's a little note that I merged branch master into map improvements that's basically saying there were conflicts between master and map improvements this pull request was map improvements and there was me merging them together and resolving the conflicts and now I can actually go ahead the conflicts are resolved and I can merge the pull request nothing exciting is an avenue it really should it should like a Betty should explode confirm and look but I can make something happen okay so that was a video about resolving merge conflicts through the github interface there's sort of basic gist of it perhaps I missed something important and I will certainly make a followup video so let me know what I missed what questions you have in the comments and thanks for watching this video about merging resolving conflicts merging them with a pull request something something get github I don't know like search engine optimized keywords throw them in there okay bye bye alright what's wrong with is the mic does the mic performing poorly right now am I having sound issues because if it is I would like to fix those no sound issues okay great all right so now that we did that where am I add a neural network look I love how live while I'm streaming new pull requests are being open Thank You Adam Morris with that that's fantastic okay add a neural network learning rate Center thank you to Iris son Gwen Neddy but you know I really just need to work on pronouncing people's names let's look at this okay oh oh oh is this actually dare I say using so this adds a center I probably do want oh no a setter yeah so this is this actually using this thing that I don't really know about which is es6 getters and setters do I have a rainbow topics issue keeping track of that I kind of want to talk about that at some point soon where's my up hold on sorry I tripped some water on the trackpad then I pressed some button by accident rainbow topics where's that so yes six prototype you've oh mmm get her nope all right so we need to do es6 getters and setters I need to do a video on that at some point okay so now we're back here so I think this looks good to me there's some so this is this can happen a lot which is unfortunate if looks like in this pull request some extra whitespace was added here like other a tab or some spaces which may get think that these two lines are different this is a little bit of noise that if I were a real stickler I would kind of want to not be in here but I'm not a stickler as you can tell from you just merging stuff and so now I'm gonna say I'm gonna update the branch I'm gonna write thank you it's gonna be running its checks let's watch the checks run it's running npm install right now and now it's running the test perfect timing well half an hour has passed 315 boy I take wait longer to do anything than I think okay so now I think I finished yep Birds okay that has been merged back to the pull requests update readme link to okay now let's do this I think this is exactly what I think oh yeah perfect so this is great this is a nice link to this is a nice link that if anyone's looking for the original source code with the video they can find it and by the way if anybody else wants to do this pull request if you can go to this repo and add a link from here back to here that would be awesome it might already be there so let's merge this one tests are still running looks like it's finished now merge pull requests there we go I didn't it will hurt version pull request one more to go now create a todo list Oh outofdate let's update it and let's take a look at it okay we use semver for versioning we do I never even heard of that that's something I have to learn about semver for versioning so this is like some noise some line break noise that got added in here by accident this is now the todo list and they got removed from here which is great I will say that most of this to do list is done so probably I'm what I would do it but I'm just gonna I'll do this change myself is and this pages out of date refresh I'm gonna merge this and there's some music playing in the room next door that you guys can't hear but like in here I'm gonna go here now to the readme I'm gonna click Edit and where's the todo list where did that to do is to end up it wasn't in the readme oh yeah that's so funny I looked at that pull request it just assumed it went here where did that pull request go closed create todo list Oh separate to do dot MD file whoo okay there we go obviously I'm gonna go here I'm gonna edit this this whatever this is was done this was done I mean this is oulous is almost silly now but this was done this was not really done different activation functions X or coding challenge oh this is not done this is not done and I'll add some other things add support for multiple layers multiple hidden layers and I'll actually change this to support for different activation functions this is something I would like to do with this library and these could be issues but combined with ml 5 slash deep learn J s ok so let's add this and I'm gonna make a pull request my this repo is so protected that even if I'm just editing one of the markdown files and I have the administer of the repo I cannot merge make this Burch this change into master without these tests running so we'll see if these tests run ok they ran they passed I'm gonna merge alright we're in good shape now we are now able to do some coding and I really wish I had not closed the playlist because I'm gonna need that or this so now let me open up terminal let's go here open come on come finder you window there you are examples XOR so what thing I'm going to do is ya know I'm gonna leave this here it's fine git status git pull origin oh I'm standing in front of this so I want to get all those changes now to have them locally ooh what did I change here there's nothing there okay and then what I want to do oh I should do that I terms birth map should die and then let's just run the tests locally to make sure everything is kind of going well okay there's 20 tests now they all passed that's awesome and let's open this up in Adam let's run a local server let's go to the browser now this is the example I made before I'm gonna completely wipe this example and start over so let's do that okay please hold they need to type my shoe drink someone or to blow my nose I'm not a tissue oh no I have another one I will mute myself right now I'm not sure why I have this extra jacket on that just do the job for today okay here we go I think I think it's time to read just a few random numbers to get warmed up relax go into a sleepy slumbered state of neural network training thirtyeight thousand two hundred seventy one fifty four thousand nine hundred sixty seven fifty eight thousand and forty six really need progressives twenty two thousand nine hundred fifty this is actually how I read now or I do this 22950 ninety seven thousand five hundred thirty three sixty one thousand nine hundred and thirty to five thousand one hundred and ninety nine sixty five thousand nine hundred and sixty eight sixty nine thousand seven hundred and eighty four twenty five thousand six hundred and fifty nine seventy four thousand nine hundred and fifty four eleven thousand one hundred and thirty nine thirty two thousand three hundred and forty okay yeah I know I said I was going to leave at 330 but I like to say I'm gonna leave like way earlier then I absolutely need to leave because as you know I never as much I barely ever start on time let alone finish on time alright energy people energy places places we're about to get started with a coding challenge why is mine a bit from slack that someone said okay by the way I am committed to somehow most likely through the magic of artificial intelligence if I ever hit 1 million subscribers I will read all 1 million random digits in a video again though I have a feeling that that's gonna end up being a computer generated because the amount of time it would take is absurd I would love to do something I could do something it takes like 5 or 6 hours some kind of marathon thing but I think it would take me a week without sleeping which is very unrealistic and not good for my health okay so I'm looking at the chat let's see I know how many viewers I've lost hopefully a lot I've been looking for this for the longest time it's a sleeve by the way for this computer that goes here this is gonna blow your minds whoa look at my magic sleeve that doesn't fall down magic trick I'm like a regular internet video magician watch this okay amazing what a little green paper will do okay um it'd be great if I could warn you about a mistake by making your watch notify you when you're at the whiteboard it's impossible to get your attendant yes so the thing is I will actually get in slack if you at Schiffman me it will notify my phone which will often I usually turn it off I usually turn notifications off but I I did just have them on just now because I forgot about that and so I can get oh look Simon sent me a nice picture of how Gators and feathers work I could potentially Alka get a notification today you could try that if I really messed something up now I'm gonna I have a totally different way I'm gonna do this video right now okay hold on a second okay let's give this some time here and see if this will work itself out I'm I'm just waiting for the neural network to learn I'm gonna use this as a visual visual aid visual reference all right that's good enough hello welcome to a coding challenge in this coding challenge I'm going to make a version of this wait a second do you guys see it is there like a smudge hold on is that just like what is that smudge from oh oh weird that's just like an artifact on my screen that was so weird did you see that oh my goodness all right starting over hello welcome to a coding challenge in this coding challenge I am going to it's gonna sound really weird solve X or with the neural network now why would anyone want to do this why would I want to do this well what this is actually this is a video in which I am going to test a neural network library I've been building in JavaScript and in fact if you want to follow along with that process of building it there was a giant playlist here starting with 10.1 introduction to neural networks and I start building that library actually around oops play the video around 10.4 so this video is a standalone video where I'm going to make use of that library in a coding challenge you don't have to have watched all those but if you want the background with a bit more to go deeper in how the internal mechanics of this neural network that I'm going to use works I would refer you to those videos now what is this crazy weird visualization going on over here so let's I'm going to come back to in a second but let's come over to the whiteboard so this an example a very beginning basic rather trivial example of machine learning and what do I mean by that I mean I'm going to draw a circle here and I'm going to write ml short for machine learning you can think of this as a place where there exists some machine learning recipe some algorithm you might have heard of K nearest neighbor or neural network fillintheblank support vector machines so fill in the blank with your machine learning algorithm there with a machine learning algorithm something goes into it data how you collect your data how you're thoughtful about that what the data is how you call them quote normalize your data there's so many questions ethical questions scientific questions that go into this piece I am not covering that piece in this video but there needs to be some data something that I want to analyze or learn with that's the data portion then that data goes into the magical machine learning recipe and out comes some output now what that output could be it could be a piece of music that I've generated it could be a classification of an image it could be the price of a house that I'm trying to predict based on some data so there's so much possibility here and this output doesn't have to be a single thing but can be multiple things the input obviously the data can be multiple things this is the idea of machine learning now I spent all this time building what is mostly like a toy neural network library it's written in JavaScript there's nothing about it that's optimized but just to kind of understand the pieces of how it works so what I want to do is have my recipe be in there be a neural network and I want to create some scenario where I have some training Dana so what I'm going to do this is going to be a demonstration also of the machine learning process called supervised learning supervised learning meaning I am the supervisor and I am going to teach this machine learning recipe to produce output that appropriate output for a given inputs now what well if I just know all the answers why would I even do this well likely there's a scenario machine learning is gonna be used with a scenario where I have a lot of labeled data I have a known data set that I can use to train this system so that if I give it some unknown data it will give me out cut to give me an output a relevant output the classic example of this of course is I have a whole bunch of images I'm gonna say here's a bunch of I'm gonna tell the recipe here's a bunch of cats here's a bunch of dogs now here's a new here's a bunch of cats here's a bunch of dogs now here's a new image which one is it and along with this process we will typically have training data this is labeled data for which we know the answer we will have testing data this is data that we know the labels for but we aren't using in the training set so that we can see is it working this does it actually give us good good outcomes with unknown data and then of course we have the actual unknown new data that we want to use okay so what's the scenario that I'm going to use the trivial realms rather ridiculous example that I'm going to use in this video is the xor xor stands for exclusive or it's a boolean operation that resolves to true only if so you can think of true and if true x or true is actually false i didn't finish my sentence it resolves to true only if one of the two boolean expressions value is true so false x or false also is false and if you go back to my video that's linked here about the perceptron the lib you'll see that this is this is a special problem because a single simple perceptron a single neuron machine learning system cannot solve this problem it is not linearly separable the solution space is not a space where you can just draw a line and see all the categories of one on one side and all the kind the other on the other side so you can dive into that deeper but this is where a neural network that involves a hidden layer can be used as the machine learning recipe so what I mean by this is I need my training set my training set is going to be 0 0 0 1 1 0 1 1 I'll have 4 elements in my training set and each one of these is labeled this is labeled with a 0 this is labeled with a 1 this is labeled with a 1 and this is labeled with a 0 this is the known data right again this is a sort of trivial you know I could build you could build a circuit right imagine what it would take to build a circuit with two switches and the LED only lights up if one switches on they're both on it doesn't light up if they're both off it doesn't lay it off think about how you might build that that's essentially going that that diagram of that circuit is essentially what we want the neural network to look like so the way that it's going to look and let me erase this here is we can see here in my labeled data set that there are two inputs and one output so the neural network structure has to have two inputs and one output I'm going to send in x1 and x2 these are true and true true and false false or true and somehow out of this I should get a why I should get a true or false so how you architect and structural a neural network system this is something that I've gone into much more depth in the other videos but the key to this problem is having what's known as a hidden layer so the inputs come in here I want to look at the output here but these neurons are going to exist in between so everything this is also what's known as a fully connected Network so as the inputs come here they both go into this hidden layer some math happens this is the math that I go over in a previous video it has to do with multiplying by weights these are all weighted connections then the then those go into this output layer we get the answer and then there is a training process we say try it with this what internally in the training process what it does is if I give it zero zero with a zero and it outputs a one it's like I tell it hey you got that wrong adjust all those weights to try to see if you could get it more correct so we're gonna do is over and over again to train it to see if we can then later we don't have a separate training and testing set in this scenario we're just going to say I'm gonna train it and see if you can start producing the correct answers for all of these numbers okay that's the background for XOR now I'm actually going to go and write the code to do all this it works okay so how's it going here I want to see did I miss anything kind of crucial there I'm gonna go into the code part now all right sounds pretty good to me okay good ringing endorsement okay so you might recall that I started the video I had this thing up here so this is actually an example that I made in the processing java based programming environment I probably like almost eight years ago at this point so it's not using the same code base but it's actually solved the XOR problem and what's interesting about this and I'm gonna I'm gonna come back to the whiteboard just for one more moment here let me find some room here if I draw a plane and I consider this to be zero zero and this to be 1 1 so this is 1 comma 0 and this is 0 comma 1 right notice that if I take this idea of XOR and map it to here I've got false here false here true here and true here and by the way that what I write are one there to here and true here this by the way is why it's not linearly separable you can't draw a line I could draw two lines like this or I can draw two lines like this and you're gonna see that result happen actually as I start to program this I hope if it works but what this this idea of a plane this is a plane that's describing the whole solution space for the problem and if you come back over here you'll see look at that those corners if I bring this over closer to me I can try to point to it these corners are the true quarters any more practice and these corners are the false corners and this plane is all the other solutions now this is a 3d rendering it's soon some fancy stuff I'm gonna create a simpler version of this so let's just actually start doing that so what you're going to need first of all is if you're writing this code along with me you're going to need to have the toy neural network Jas library it has really just two files that you need it has neural network J s and n n dot J's and matrix such as you could ignore this this is for testing that's something I cover in some other videos that you could probably find and you'll see that in my index.html file I am referencing those two JavaScript files I've got like a weird path thing going on but when I published the code I'll publish that all as one one thing okay so now I need to go over to sketch KS let's do some stuff here let's write us to have function let's write a draw function let's say let I'm gonna have a neural network variable I'm going to say create canvas 400 400 let's draw a background of 0 and let's let's go to the browser and see there we go there it is step 1 now what I want to do is create a neural network and I've written out how I want to create it I want two inputs two hidden neurons and one output so the neural network library the toy library that I've built expects those as arguments to the constructor so I guess a neural network equals a new neural network with two inputs two hidden neurons and one output neuron now I should mention that my socalled deep learning systems often have many many many hidden layers hundreds of hidden nodes big massive networks this is a very small simple one the library only supports networks with these two layers the input that well that you consider the input you can say three but really these were the layers they're hidden in the output plus the inputs three things okay now what do I do I need my training data so I'm going to say let training equal and I want to have it be in an array and each element of the array I want it to be an object and it's going to have the inputs which would be like this and the outputs now even though I only have one output right one output outputs can be an array they're also referred to as a vector so a list of numbers but in this case 0 0 gives me just a single Apple or I'd have single outputs when I put the array the library expects an array so I have that inputs out 0 0 I have 0 1 and 0 0 gives me a 0 not a one I have 0 1 which gives me a 1 I have 1 0 which gives me a 1 and then I also have what's the last one 1 1 which should give me a 0 so this is my training data now ordinarily this data might be in a spreadsheet it might come from an API it might be in a JSON file but I'm just hard coding the training data directly into my program just to demonstrate the idea now what do I want to do well in the draw function what I want to do is and now if you're look at how machine learning algorithms work typically you'll see something called you'll have a batch training process where you give it a large batch of data and then you adjust then you adjust the weights and do the training and then another batch I'm gonna do everything just one at a time and the way I'm going to do that is with a function called train that's in the in the neural network library so if I say neural network trained this expects two arguments what it expects to say train the neural network with this input and this expected output and so the easy thing here that I could do I could what it what it should look like is something like this train it with zero zero and with one oh right so this is what I'm saying these inputs should produce this output train yourself on that but I have so I have that all stored in an array what I'm gonna do is I'm going to say data equals random training and what did I call that up here I called it training I just called the training let's call it training underscore data training underscore data so the random function in p5 will pull a random element from that array and it will put it here in data so then I could just say train it with these inputs and expect these outputs it's only one output but outputs so this is the process this is the training process of course all of the work to adjust the weights of the neural network it's in the library and you can go and stop saying this refer to those videos that go through that process okay we've got that now I am going to let's just run this and see if I get any errors ah syntax error sketch dot J's line four oh look at this horrible my JavaScript object syntax is just completely off these are not semicolons you guys have all but everyone watching it's been screaming at the screen take two oh I have semicolons here these should be commas my syntax is completely wrong if you're watching this you were probably screaming at me or saying very nicely and sweetly to the computer okay there we go now let's run again all right it's running its training isn't working so now that here's the thing it's doing its thing let's actually see if it's working because one thing I can do right now is I can just test the output here in the console itself what is this weird graphics artifact going on here I'm going to ignore that I'm gonna say nn predict so the predict function is a function in the neural network library that doesn't take the inputs and the nut and a labeled output it just says here's some inputs tell me what you think tell me what the output is so if I give it zero zero shouldn't I get 1.0 ooh that's not good point four nine mmm that's not good point five one oh it's doing a little better it got a little higher that's closer to one point five one well no point four nine again so this is the thing I have done I have programmed this in such a way that first of all it needs to run these data points in thousands or possibly hundreds of thousands of times to be able to train itself and also this is a problem that with only two hidden nodes it can kind of get stuck right it could get stuck in the sort of inbetween state I was trying to think of how to I know I didn't want to cover the getting stuck thing let me just go again and hope that it does it's a time that it doesn't get stuck so this will get edited because I do want to cover the getting stuck thing because I think there's some things we can do to with my adjusting the learning rate and I'm mucking around with it but it just didn't want that to happen right now so just run it again it's running it's running so what I can do is right here in the console just to test it I can type and and dot and there's a function called predict and what predict expects in the neural network library is the input data with no output because it's not labeled training data it's just input data so let's see if we can get results that makes sense and hasn't trained for very long and I don't know but let's see let's just write predict 0 0 0.45 that's not right so I should be seeing 0.1 right it's changing 0.43 so my guess here is that we really needed to just train a lot more what I'm gonna do is just for right now is I'm gonna say I in the draw loop itself I'm gonna say I equals 0 I is less than a thousand I'm gonna have it do every time through draw a thousand a thousand of these training points so this will hopefully get us there a little faster and I can look at this now we can see ah whew now that's wrong right oh no that's correct no I should be getting I should be getting false yeah so that's right I didn't got it backwards for a second I shouldn't be getting true I should be getting a false 0 0 so let's try 1 0 and I've got something that's close to 1 so you can see that this work okay so the library is working but let's say I want to visualize it okay I want to visualize it I want to see it working I want to see it animating as it works so one way I could do that is I could basically let's create some variables like resolution I'm gonna make a grid of 10 by 10 pixels so the columns is the width of the canvas divided by the resolution and the rows is the the height of the canvas divided by the resolution then I am going to say x equals 0 X or I'm gonna use I I equals 0 I is less than the number of columns I plus plus and I'm gonna say J equals 0 it's less than the number of rows I'm gonna do a nice little nested loop here just to now I'm going to say fill random 255 and I'm gonna say rectangle I times resolution J times resolution resolution I shoulda picked a less long variable name resolution so with this should do is this is a nice little nested loop to just draw a grid of rectangles ten by ten and a little warning this will be kind of flashy so you can see all of these all these elements are flashing out with a random color but I don't want a random color what I want to do is I want to create some inputs so I'm going to say let x1 equal I divided by columns right from 0 to 1 let x2 equals J divided by rose and the inputs then is an array x1 x2 so what I want to do is I want to create a scenario let me just say no loop here so this stops I want to create a scenario where I am inputting in 0 0 here and at this corner 1 0 and 1 1 and 0 1 down here and all the numbers in between right so now and then I what I can do is I can say let y equal neural network predict and this should be an equals here it's this particular predict those inputs and then fill Y times 255 so I should get a brightness value out that's between I should get a Y value that's between 0 and 1 and I should get that a brightness value I can both my by 255 to get a brightness value okay let's run this boom so we can see now and let's let's let's be a little more thoughtful about this and say no stroke then I'm gonna refresh it and very quickly now ah so this I'm so glad this happened so here's the thing it works for me a bunch of times but actually here you can see it's totally getting stuck let's refresh it again and I got stuck in a slightly different way we hit refresh again whoa it's just like going around the Horde and getting stuck in every possible way now how it worked so here's the thing remember how I said neural network is an interconnected set of nodes which each connection being a weight so there's a couple important factors here what is those weights are initialized randomly and it there are thoughtful ways that you could initialize those weights but I kind of like initialize them in a certain way the problem is there's multiple solutions here so there's one solution here where there's white all the way along this way and if i refresh this a bunch of times you'll see there's another solution where there's black all the way down through the middle because honestly the only thing that's correct is the core is what's in the corners so I've run this a bunch of times isn't this the opposite of what we got before I can't remember so there's a bunch of different solutions here and it sometimes can get stuck in that middle so I might one thing I might be able to do is play with something called the learning rate so there is a variable in the the library called learning rate and I could say neural network learning rate equals there's a set function but I think timeout here does some just pause for a second just somebody who was watching this know if this has the this set learning rate does this mean I should do maybe this isn't using this getter setter in the es6 way does this mean I should call a function called set learning rate or does this mean I'm supposed to do the thing where I can actually say learning rate equals and it kind of automatically calls this function I'm waiting for like somebody to weigh in so I should call set learning rate the way that is written because there's some fancy getter setter thing you can do that's not an es6 setter okay so someday might might be an es6 center but it's not gonna be right now no setter okay should I make it a setter like should the library have a center would that be like a good thing to do this is me just waiting for the Internet to tell me which to do I mean I don't really need to be getting into this right now right it's only really useful if I want to get the learning rate okay okay let's not worry about that right now so I forgot the library actually has a function called set learning rate and so what I can do is I can set this to some value now what should that learning rate be the learning rate is like how big are these steps how big are these adjustments and so maybe what I'll do here is I will create a LR slider for learning rate slider and I'm going to say LR slider equals create slider and so I'm gonna have learning rates that go between 0 and 0.5 that's probably a ridiculous range with an incremental step oh it will start at 0.1 and an incremental step of 0.01 so this is a p5 Dom function create slider that creates an html5 slider puts it on the page and so now I could just say LR LR underscore slider dot value so this should if I'm right always set the learning rate according to this so let's see if I put it up here and I say neural network learning rate it's 0.5 and if I go down to here it is zero now I shouldn't let it be zero right so the lowest the learning rate should be is probably 0.01 so let's see if we can get it stuck now of course it well I'm gonna hit refresh a bunch okay it's stuck let's see if just like allow you to take bigger steps one way or the other we'll sort of fix the problem yeah it's still really stuck interesting now I guess what I could do is I could if it's stuck I could reset the neural network so neural network a random eye or is there a function of the neural network library to randomize the weights again yeah let me let me go from where I stopped with the slider though no that doesn't really work well one thing I could do is I could kind of like Reese we randomized the weights I could like that could be something I don't know oh the learning rate is only being applied after a sow no but it'll it'll come back cuz once it doesn't it doesn't get that's a good point in the chat something saying it's the learning rate is only being applied after a thousand iterations but it just has to wait for that 1,000 it's not like then it's back again the reason why I could get stuck is because there's two possible solutions and it I was gonna add forward in two hidden nodes and I think that will help it but I'm trying to think of I can't remember what I put into the neural network library like I guess to read to reset it okay I have an idea now okay let me let me let me try this again so let's try let's try now let's try lowering the learning rate that didn't really seem to fix it's really stuck here so one thing I could do is I could just like start it over like new neural network two to one and now I've just started it over and that's still stuck let's try it again well let's leave it at like point one so I could write this as an in a function to like if to like restart it a bunch of times and just get lucky with the first weights another thing I could try though just to see if this really helps the thing is I thought I probably need to do is be more thoughtful about how the weights are initialized which is something I would need to probably want to build into the neural network library but you're sort of curiosity let's add four hidden nodes so do we make the network smarter by giving it more things to learn about right so I'm adding in all of these whoops this goes to here right there are more connections more connections more possible things for it to learn about let's see what happens ooh look at this look at that it's nice and curvy it's sort of like learned it and slowly weed every way and I suspect that I'm gonna have a lot harder time having it get stuck now you can see that there's multiple protocol correct solutions to how the space looks but it's really able to figure it out now that's really the end of this video the point of this mostly was just to test the neural network library so it works I can use it I can give it data to learn I can try it with other day and I can visualize its result now so here's the thing you're watching this video what should you do next well first of all I'm gonna new another challenge which is the kind of classic hello world neural network machine learning example which is to recognize handwritten digits and they're so well known test set em nest that I will use hey kind of don't want to but I think it's worth me just doing that just to do it but that would be a think more interesting problem and then we can even make it so that if I draw a digit can the neural network detect what digit it is so anyway so that's coming but could you oneone come up with your own data set trying to train the neural network with your own data set and then how does it perform you also might think about visualizing this output using color in some way you know you could use 3d as I showed you with this process example which is no longer open so you could try a variety of different ways of visualizing this and maybe or animating it or changing the way you would yet build an interface to it there's so many possibilities so I encourage you to explore it I encourage you to dig in also to the neural network library code if you want to see how that works and check out those other videos as well so thanks for watching this coding challenge I think that's it that's it that's it I'm done I'm sorry it's interesting how like what kind of weird results we can get Oh try playing around the slider now I should have done that so actually one thing I should do is that I should really have done this because it's more interesting to watch it figure it out slowly over time but I guess this is not as exciting to watch let's try just with ten probably too slow to watch yeah I'm just trying to what's the sweet spot of like being el Tet it to slow it down but to also like yeah so this is probably better a hundred because you can kind of see it learning more slowly over time okay uh all right so I think I'm finished for today it's four o'clock oh it's because of the sigmoid I forgot yeah yeah that's interesting right there's no correct answer for this center spot really and so it can yeah I be interesting to just actually run this with a different activation function and to put that into the library but I'll have to come back to that later okay I don't know if this was better than the time that I did this before it probably took longer but yeah make it make it slow and play with the learning rate that's kind of interesting that's an interesting idea all right so let's do that let's make it slow like 10 let's up that learning rate see it's making big jumps they're too big and now I can lower it to refine oh yeah that's kind of interesting yeah so plain what the learning rate really does make a difference okay so I'm here I'm just about done but I do have a few minutes that take some questions it was really good okay thanks I just felt like I needed some space from what I made the library because I was in my own head of like what did I say before what that I didn't and so this is I hoped would kind of give an introduction you could kind of my goal for this was that you could watch it without having watched that other playlist but you could get more for watching the other playlist I don't know I can add a slider for the iterations that's a smart idea that's a very smart idea so let me talk for a little bit about what I want to do on Friday even though I'm so tempted to do some of it right now but I think I will do it on Friday let's so here actually let's go this is exciting let's do a live adding to the coded train website so I think if we go in here under streams we can see these are now there's so many more that need to get added here these are the markdown files for all of the live streams and so the live stream this Friday would be one well today is what today okay so let me go to my channel you know I don't want to go to youtube home coding train live what by the way it's so interesting to see that what like things that thinks I should watch based on because this is not my personal YouTube account this is like a random YouTube account that I set up just for live streaming I don't know why I think I should watch this football video but what I want to do is go to the coding train I'm subscribed to the coding train and Oh interesting okay um I sorry I always had some important messages but I will I will get back to those in a minute I shouldn't be looking at my messages we'll have live streaming I'm looking for playlists and actually I can just do this the last live stream was number 118 so today is 119 and this Friday I don't know what time I'm gonna do it this Friday probably in the morning actually this Friday so if I create a new file create new file 119 upcoming live stream dot MD create a scheduling Friday's live stream and I'm going to make that new file then I'm gonna go here and I am going to go look at another one I'm gonna look at this one called walks and I'm gonna look at how its I'm gonna do this because that's actually this one's not this is no longer an upcoming live stream but I'm gonna grab this and I'm going to edit this file I'm gonna paste this in so now the date for this Friday today is the 7th 8th 9th to 9 and the topics will be so this Friday what I want to do is M NIST coding challenge pendulum pendulum coding challenge spring coding challenge what I mean by spring is Hookes law and and double pendulum coding challenge now there might have been something else so I'm kind of doing double duty here in that I'm trying to push the neural network stuff further machine learning stuff but I also want to I'm this week in my course at ITP that I'm actually teaching this week was about oscillating motion so I wanted to look at Springs and pendulums and I've always wanted to program the double pendulum so but I feel like it's weird to do the double pendulum a challenge without having done the pendulum coding challenge let's just make sure I haven't done these videos already so one way to figure that out is Schiffman pendulum now I know I have video about a pendulum but I think in this video which is two years old first of all it's in processing I don't have any gray hair and I'm pretty sure I don't actually code the pendulum from scratch I'm just talking through an example so I don't see anything else about a pendulum so that's good what about Springs Springs toxic lives simple harmonic motion but again these are all the old ones ooh I do have a guest tutorial with Val head about a spring animation Oh wonderful and that's great so this you should check out maybe I don't maybe I won't do that because I'll just refer to I'll look at that and see if it's doing the same thing that I want to do and then I remember I use toxic lives for some stuff so I have this pendulum simulation so I think that's kind of my plan I'll probably let this spring go and focus just on the pendulum stuff if so now wait wait a second wait a second the reason why I was doing this mmm this doesn't look right could this possibly be right well if I did this correctly now if I go to the coding train comm I'm gonna check my email to make sure I didn't get like a build error I don't see one if I now go to streams and go to the bottom mmm so I probably did something wrong he's one I might have used a bat so let's look at one that's actually showing up so let's look at 104 104 let's go to edit oh yeah oh look at this no this is right let's look at this so this one's showing up so I'm just going to paste this in I think I did something wrong topics oh wait I know what the problem is topics yeah I think if I look at the format here title this should be under here and this should just say topics and maybe it's I want to do this so maybe I want it to be like this oh is the date format wrong I have an extra line break at the top is that the only problem but let's use this format let's use this format let's try this and then I can video I there's no video ID yet oh and this should say by the way I want this to say oh you know I wouldn't be surprised if this requires this February 9th yep that's right 400 p.m. let's try this and then here live stream okay oops more neural networks and also pendulums let's just put that there okay let's look at this how we doing here is this possibly correct let's try this let's does correcting live stream page let's do this this looks better like if formatted it and so now we have to wait for the page to build so I will take some questions maybe indent the topics check if there's a plugin for your editor does it show up on the home page I think one of the ideas was to have the upcoming next upcoming live stream always be here latest videos by the way also these are the links now so the patreon link merchandise link and then link to the Amazon shop is here let's go back to streams I'm sure just be screwing this up it's also possible that because getup pages can take so here let's be a little bit more thoughtful about this let's actually clone the repo so those of you are wondering what how does this even work let's go let's clone now this is probably gonna be a very long clone so let's just get the repo to the desktop this is gonna take a little while we'll have it pretty fast oh it's working for me I am Sabine made it work I was gonna just try running Jeckle locally oh maybe it's caching I'm gonna force a refresh is it on the homepage by the way there's also one thing I'm just realizing now there's no link back to the front page although may if I click here it is yes oh there we go look at that upcoming live stream ah that's why I probably want to put it okay there we go look there it is so now whenever I schedule one the upcoming live stream should be there now it has the wrong time I'm not sure why I thought I fixed that let's go back to streams let me do this locally let's go through this okay I've got it so I've cloned the repo if you want to work on it and understand and contribute to it locally if I go now to Rainbow code now I have no idea if Jekyll is installed it is apparently of course it just gave me a bunch of errors so let's say this is the problem is I have I've never used Jekyll or Ruby on this login to this computer so I hesitate to go get this all working right now but let's just Jekyll is a framework for building static web sites and I'm gonna just do this let's see if I can all right yeah so I've got to update Ruby the guest is really okay trying to decide if this is worth doing right now so let yeah let's look let me do I have so one thing that I use is our VM so let's use our VM so I'm gonna grab our VM which should let me do this here our VM is Ruby version manager so this should allow me to manage the versions of Ruby I have to start using our V and you need to run sort yeah so I need to do this so it's running okay our VM so I think to install with a certain version of Ruby what I want to do I really don't know what I'm doing here by the way is document I just want the installation yeah I've installed it I just want like a how do I install which version I'm using our VM our VM list our VM install okay our VM install and then what did it say on Jekyll I need to be using which Ruby Jekyll it's probably give me an error because or what does it say I can't believe I'm doing this on a live stream what I'd say requires Ruby 2 point two point five okay let's quit that our VM install this so now I'm installing Ruby 2 point two point five checking requirements error is not all right oh my goodness brew doctor yeah doctor doctor let's see if this works Oh permission denied pseudo brew doctor this okay okay okay how about pseudo RVM install two point two point five oh boy really oh oh okay let's install homebrew wow I I didn't realize that okay failed don't this is route Wow what is going on on this login could not set could not permission denied can I get rid of homebrew Wow Wow oh my goodness I can't believe this is where I am right now what was I trying to even remember us trying to do I was trying to show you how to run Jekyll I just a lot mmm I've been in this situation so many times could not lock in fig file permission denied am i all right let's that's alright let's let's go down this rabbit hole for 10 more minutes then I'm out of here okay Oh maybe if I just use I term I'd be fine let's try this yeah it's the same that's the same thing I was running before create an access token Wow well someone probably wrote in the comments here well what's the error that I'm getting again permission denied what did I do wrong I kind of want to okay how do I uninstall homebrew okay let's uninstall let's do this oops yes yes oh my goodness Commission's I for missions and I appreciate you may wish to me this is loads of fun okay let's brew update oh yeah okay I don't have it anymore that's good brew cleanup oh yeah I don't have it anymore okay all right oh yeah okay we're in business now come on why was this tonight oops no no why oh yeah this is definitely gonna do it this is the solution to all problems yet can you hear there's no sense it's not installed yet okay well if I got rid of homebrew can I use our VM now yeah does it need homebrew or our VM installed two point two point five it's all I wanted to do oh look at this about to install homebrew restart it's totally not gonna work but all right oh look at this this is promising we'll be nice to have Jekyll working because if I own show religion oh it's pouring it full pouring it you just pour we pour a little bit of that on poor OpenSSL extracting just mind if I check my email but that was totally just reading my email there I forgot that I was even livestreaming okay Wow as npj would say this is authentic programmer waiting wish I had some coffee coffee would be so good right now okay that finished I totally I don't even know what I'm doing anymore so now RV and used use I think I say two point if I want it to like I want to use that version okay now I'm using that version okay good good good now let's go back to Jekyll I should be able to say gem install Jekyll bundler and poopy two point two point five is old should I be using a more current one well why did I say two point two point five Wow I probably like have no room left on this computer's hard drive either it's like this I'm expecting this just to like ding ding ding ding ding ding oh what's the minimum should I really go and install uh that was the minimum oh wait okay well let's see if it works does it finish now okay and what was it called so okay so what I should be able to do now is say bundle exec Jekyll serve so if I had in this repository this is now the the coding train website repository cloned locally this computer if I say bundle exec Jekyll serve a bundle install have to install all the gems I forgot about that and we're back where am I what year is it am I still installing nokogiri control well there we go control l thank you very much so now let's try this again amazing amazing it still hasn't built yet though it's a big site with a lot of stuff very soon it will have built there we go so the server is now running so I can now grab this and I can go to the browser and we can see here is the coding train website and now here is the card which now has the upcoming livestream so now what I can do is I can be a bit more diligent about this and I can actually just try editing all this stuff locally so I want to go to streams and upcoming livestream 119 and actually what I want to do let's see I'm gonna actually take this out put this here and and when I hit save right we should see that I hit save it is now going to regenerate because I did save so it's regenerating the site it's not finished yet and it's done took 11 seconds and I should be able to refresh now and there we go so now you can see whoops that's there why oh I forgot that I left this stuff in here so I can get rid of this now it was just that line break at the top the whole problem stemmed from the fact that I had that way so now I can do this you can see actually you can see the syntax highlighting completely disappeared this is Yamma which stands for yeah markup language apparently and our young adult markup language maybe I'm not sure it stands for what else could why a be okay so now we can see this is hopefully now of livestreams still says 4 p.m. because I want this to be 10 and although now I'm wondering actually based on my schedule I thought I saw something in my email about something that had to happen on Friday morning so let me look back so I thought might might change it but I'll put it there for now so and then I can come back here and we can see here it is the upcoming live stream is here so you can always check if I've done my job you could check the website for the next upcoming live stream and this link should take you to and actually it took you here and there I am but actually it should take you to now this should be the URL because I have a new I got this new check mark URL Figgy from youtube and so so let's see if we could find where that is we're in this repo is user slash Schiffman lots of places video card it's in the includes now I don't want it to show no but I don't want where did it render the site oh that's hidden okay it's all ready so I think I want dare I like it first of all let's do this so let's let's add this commit so this is new live stream so I've committed that now what I'm going to do for probably against my better judgement is just replace this with now is it silly to put cap in the URL I don't like how that looks let me just make sure it works if I go to youtube.com the coding train live does that work yeah I feel like I'd rather have it be lowercase the Capitals kind of freaked me out so let's do that so let's change this to so this should be the coding train I'm gonna change that everywhere it appears yeah 11 times all over the place how bad could that be did I do it okay done done let's do git status so it got changed in a whole bunch of places which makes sense I guess what's in this folder here oh that's the includes in the layouts okay great git commits updating to new Jekyll I mean sorry new coding train URL and there's a website still working this takes me to coding train live subscribe on YouTube oh that's interesting this somehow is still going to and this should be a button that automatically subscribes you that's not crew this should really be this should subscribe there's a way to have the button automatically subscribe you to the channel which this is not doing so where does this showing up learn to code where's this content is it on landing page learn to yeah there it is Oh site links YouTube ah okay so this is a special case though because this should be a subscribe button YouTube channel I've lost the chat here oh oh well Oh am I gonna have a double slash double forward slash 56 new messages since I stopped looking at the chat double forward slash okay hold on let's search for let's search for the coding train maybe you guys can't see what I'm doing let's search for the coding train double slash oh yeah everywhere whoa it also oh yeah coding train double slash double slash double slash so let's fix that first of all replace all get and get commit fix double slash and this might not be the proper way to do it but somebody in the chat just gave me the subscribe so I think let's try this let's go to let's okay let's go to here still took me there that's fine that's weird wait where is that coming from then if it says hold on hold on I'm talkin to people the room next door this why is this still going to user slash Schiffman okay although we got to figure this out it's a landing page this is pulling this from site links dot YouTube so that must be in config right but it's psyched out links why didn't that not rebuild I guess that doesn't rebuild let's rebuild the whole site so I'm rebuilding the site I apparently have a wrong video number 119 and 116 yeah I've been pushed the site live yet that's correct okay so let's see if that fixed it yes this is now going to the coding train and so what I want is to have it on landing page B and then it's question mark sub confirmation 1 sub underscore confirmation equals 1 pretty sure that's gonna subscribe me so this hasn't I'm going to go here and I am going to unsubscribe I am unsubscribing from the coding train unsubscribed now we will go back to the website and I'm going to click on this link and are you sure you want to subscribe okay now I have subscribes I'm back up to my subscription number so that's good so I did that so add automatic subscription link okay now what was the other thing somebody was telling me I had the video numbers wrong Oh interesting I don't have to unsubscribe to get that okay so what was it that somebody was saying that I I have the video numbers wrong let me look back the reason why yes here's the thing Oh 118 is already more neural networks oh I'm totally wrong because today is 119 and also why is 116 what's I'm so confused but let me go to the let me look at the website here so oh it says 116 there yes yes I see and actually it shouldn't even be 119 119 because it should be 120 and so let me rename the file it should be 120 because it's the last one that is on YouTube is in fact 118 that beats today right now is 119 and Friday is 120 so so I change it to 120 and let me do get status so I'm gonna do get a a and I'm I did that capital a I don't know if needs to be capital because I deleted to file and so I want to make sure that delete gets pulled gets added as well Friday is 120 and then why not add one for today if I do I'm not gonna add one for today so this is the thing anybody watching this video wants to help there are look at this a live stream could be the markdown file could be added for all of you know it only starts here about 104 coding challenges I think whoops I think I'll have a markdown file for every coding challenge looks like I have a markdown file for every coding challenge but I'm missing so many markdown files for the courses and tutorials and also just generally speaking if you have ideas for how this site can be more navigable visually pleasing make more sense just you can clone it you can run Jekyll locally like I did you can make changes to it it's all HTML CSS markdown and some weird Jekyll stuff but play with it make fixes make changes I could use some unit tests for it like one thing would be good to have a unit test that checks to make sure the Jekyll build is right yes and yeah I would love help with that but right now I at least have successfully scheduled this Friday's livestream now one thing I should say this is my speculation I might change to the afternoon but I will try to update this if I do but this at least now is going to be a system for me being able to alert people of when the next livestream is it comes to see the latest videos and all this stuff all right I think that's all I've got to say for right now oh let me push it to live to the site so I've now pushed this live so you should now see this if I go to the coding training calm now you don't see it right now because these Jekyll builds can take a little while all right for coding challenge Friday or one of them well certainly my goal is to do all four I wouldn't be surprised if I only got to one or two or three but my goal is to do all four okay so I'm done for today I will happily take a few last questions for a sigmoid which 445 I really had a cow for a sigmoid should the outputs be negative 1 1 instead of 0 1 just thinking no the sigmoid function squashes any number to a range between 0 and 1 there's a function called tan H or a hyper tangent that's another activation function that is used with neural networks that gives you an output between negative 1 and 1 but sigmoid is doing out for between 0 and 1 and the most sort of the the activation function that's used most commonly now is called brand new or I like to say if a new and that actually just gives you a number between 0 and infinity ok do you have plans of teaching js4 embedded devices like Esprit no chess or puck Duchess I don't have any plans but that sounds like a great idea and that would probably be a good good territory for a guess tutorial hopefully I can get a little more handle on my schedule and have more guests are you going to carry on with neural networks convolution etc yes I'm going to keep Durrell networking and carrying on and but I do I'm not sure I don't think that I'm going to continue to build every style and flavor and architecture of neural network into this toy javascript library this I really meant to do like the sort of first beginning steps and then if I do stuff with say a convolutional neural network I'll do that with a ha deep learn yes and possibly this ml5 digest library when are you going to add splitting to the game agario no probably not for a while but that people have really requested that I follow up on that challenge so that's but are you interested in a coding train app yes you know the budget that I have for this channel is small and I do use the patreon funds for video editing and other production and design services and Apple could be something that I would potentially want to invest some funds and having somebody develop but I also wouldn't be opposed to having a community built app that somebody works on is for volunteer if you're interested in that please get in touch but I don't let you know the web site is kind of right now living in this sort of like volunteer its place but I'm not opposed to I don't know what I'm saying here but yeah I'm not opposed to an app that would be interesting can you teach us Python no I was planning to do Python because I was gonna use Python for all this neural networking machine learning stuff and then use a flask server to talk to my JavaScript and then it descended from the Google deep learned digest came out and that's really shifted my thinking into kind of really staying within the browser for this stuff but I do hope to add node and maybe electron to some of the stuff that I'm doing but a Python I would probably wanna have some guesses for coding trade app coding challenge okay oh the song ended okay thank you everybody for watching this was a bonus live stream I think that XOR was an improvement over my previous XOR challenge but I would let the wonderful math blanks matchy let me know what he thinks and so start tomorrow will come out the video series on unit testing and continuous integration with circle CI thank you to circle CI for sponsoring those videos I had to kind of I really like doing sponsored content it's a good way to make what I do more possible so if you're interested in sponsoring you can get in touch with me okay thanks everybody and Tetris so here's the thing I I need an idea if I go to coding challenges snakes and ladders was 91 so that XOR was 92 I'm getting close to coding challenge 100 I need a really good idea for that and a Tetris is kind of on possibility there so if you have ideas for what would what's the perfect like coding challenge to synthesize everything that I ever done on this channel let me know ok goodbye everybody I will see you in hopefully on Friday and if for some reason Frey doesn't work out I won't feel guilty because in a bonus stream this week ok good
