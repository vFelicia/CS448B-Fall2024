With timestamps:

00:00 - - Hello, welcome to a very
special Coding Rainbow episode.
00:05 - I'm trying a new experiment,
which I hope to do
00:07 - many more of, which is have
guests here in the studio.
00:10 - I'm super excited to introduce
these two guests today,
00:14 - Claire Kearney-Volpe and Chancey Fleet.
00:16 - They're working on a really extraordinary,
00:19 - they're working on a lot of
different things, but mainly,
00:22 - projects and research around
accessibility and code.
00:26 - A lot of the work that they're doing,
00:28 - is in collaboration with
the Processing Foundation,
00:31 - on the various tools
that processing works on,
00:33 - specifically p5.js, which is
going to have a new release
00:36 - of a web editor sometime
soon, which I'm sure I'll
00:38 - probably talk about
and show at some point,
00:40 - and that editor and how that
editor can be made accessible
00:44 - and available, to blind and
visually impaired people.
00:46 - So one thing I wanna briefly
mention, before I get started
00:48 - asking some questions, is that there,
00:50 - if you wanna watch this
video using YouDescribe,
00:53 - which is a tool that allows
you to hear descriptions,
00:56 - of some of the images and
things that we'll be showing,
00:58 - there'll be a link in
this video subscription,
01:00 - for you to go ahead and do that, okay?
01:05 - I guess my first question
for you guys is just,
01:07 - how did you meet, and
how did you get started
01:09 - doing this work?
01:10 - - Well.
01:12 - I was doing my thesis work,
when Chancey and I met,
01:14 - and we were working on a project together,
01:16 - to make a diagramming tool,
that would be accessible.
01:21 - And Chancey, you had the
idea for the project.
01:23 - Do you wanna say what,
01:24 - - Sure.
- your purpose for it was?
01:26 - - I'm so glad we were connected.
01:27 - I think we were connected
by a colleague of mine
01:30 - from the CUNY Disability Studies Program,
01:33 - of which I'm a graduate, and
01:36 - Claire was looking to
collaborate with users,
01:39 - on participatory design projects,
01:41 - that were driven by the
user's individual goals,
01:44 - which is a really important thing,
01:45 - rather than imagining what
a user with a disability
01:48 - might want participatory
design asks, which is fabulous.
01:54 - One of my abiding wishes over
the years, has been to have
01:59 - a tool for dealing with spatial content,
02:01 - and spatial relationships.
02:03 - And the example that I came
to Claire with, was that
02:06 - every year I've gotta help plan this
02:08 - massive technology and culture fair,
02:11 - at the place where I work, and it's
02:15 - we've got 30 plus exhibitors,
each year, and some of them
02:19 - need a certain type of space.
02:21 - And some of them need
outlets, and some of them
02:25 - should be, or shouldn't
be next to other ones.
02:27 - It's a lot like a law school admission,
02:29 - like a logic game problem.
02:30 - And it's really, at least for
me, viciously difficult to do
02:35 - in linear or textual format.
02:38 - And so, I wanted to do the
thing, that most of you
02:41 - take for granted, which
is to drag-and-drop
02:43 - the happy little tables,
02:44 - until I found an optical arrangement.
02:47 - And there was no real software solution,
02:49 - that works well with screen readers.
02:52 - And I'll talk more about
screen readers in a minute.
02:54 - And so, I came to Claire
and said, "Please help,
02:56 - "this is the thing that
I'm missing, in my workflow
02:59 - "that would really have an impact".
03:02 - - And, a couple things from
this project, was first of all,
03:05 - I was like not very good
at coding, in general,
03:08 - and even worse at coding excessively.
03:11 - Meaning, people that use screen readers,
03:13 - could have access to the information,
03:15 - and use the application that I was making.
03:19 - And I was like looking
on line for resources,
03:21 - and just was met with like
03:24 - really dense, wordy things that
weren't really approachable
03:27 - to like a code beginner, like myself.
03:30 - And so, that was like the
first issue, that we kind of,
03:33 - we butted up against.
03:35 - And then another thing, was
if this project was gonna be
03:37 - truly participatory, Chancey
was gonna have to like
03:41 - roll up her sleeves, and start coding.
03:43 - But when we looked online,
the majority of the,
03:48 - the resources online for
learning how to code,
03:50 - were not accessible, or just
like not super user-friendly.
03:53 - - So coding was completely new for you,
03:55 - or had you dabbled, or done
certain things with it before?
03:58 - - I mean, so here's the thing,
03:59 - there have been for decades,
04:02 - there have been some blind folks, that
04:07 - learn to code, and that
make livings coding.
04:11 - And so, I'm not gonna say that
there's nothing out there.
04:17 - We're in this moment where,
04:20 - in the broader sense of
the term, coding education
04:23 - is being made as accessible as possible.
04:25 - So to different diverse communities,
04:27 - to people that might have
never considered it before.
04:29 - To people that might not want
to do it full-time everyday,
04:34 - but who might need to incorporate
it into their studies,
04:36 - or their careers.
04:37 - And that's where I am.
04:38 - I'm probably never gonna
be a full-time coder,
04:40 - that's not my aspiration.
04:43 - There was nothing at the
04:46 - kind of friendly novice level,
04:49 - that I could find.
04:50 - An hour of code here and there,
04:51 - that happened to be accessible.
04:54 - Sometimes a video that was
04:57 - verbalized enough to be
usable, but I came across
05:00 - just a ton of websites
where either the information
05:03 - was pretty advanced, and
pretty dense, or if it wasn't,
05:07 - it was heavily picture
driven, relied on videos
05:11 - that didn't have
description of screen shots,
05:15 - and sometimes incorporated
learning tools like
05:18 - text editors in the
browser, that were simply
05:20 - not accessible to a screen reader.
05:23 - I came up across a ton of roadblocks, and
05:26 - so I stopped with just a little
bit of HTML under my belt,
05:30 - and didn't really revisit the
question until I met Claire.
05:33 - - Right, and you know, I
think it's really interesting
05:34 - that you talk about
coding just as a skill,
05:38 - or a thing that you might
do, in combination with what
05:40 - you were already doing
in your work, or a hobby.
05:43 - And I think this is, you know,
05:45 - coming from the sort of
Processing Foundation,
05:47 - and working with tools
like processing and p5.js,
05:49 - a lot of that way people learn to program
05:51 - is not to become a computer scientist,
05:53 - or to focus their entire
life on code, but to add that
05:56 - as a tool, into your bag of
tricks, and things you know,
06:00 - and learn how that it can do.
06:01 - And I think, you're right,
there's so many things
06:04 - going on right now.
06:05 - There's a new White House initiative,
06:07 - computer science for all.
06:08 - There's a New York City
Public Schools initiative,
06:10 - computer science for all.
06:11 - There's that word all there.
06:13 - So I think it's really
interesting, to think about,
06:15 - how do we make,
06:17 - what now is sort part of our culture
06:19 - and everyday life software,
and how does software work
06:22 - accessible for everyone?
06:25 - - Yeah, and we knew people were doing it,
06:27 - we knew people were out there coding.
06:30 - What we did next, was we set
to task to interview people,
06:34 - that were blind, and used screen readers.
06:37 - Do you want to talk about screen readers?
06:39 - 'Cause I think I've said
that word a couple times now.
06:41 - I'm sure a lot of people
don't know what they are.
06:45 - - I guess it hasn't been
said, so, I'm blind, right?
06:48 - And I don't use a computer screen.
06:51 - So I've gotta have a way to access
06:54 - everything that's happening
on a computer screen,
06:56 - in some other non-visual way.
06:59 - And so, what a screen
reader does, is it renders
07:02 - that onscreen output, into
something that's more usable
07:06 - for a blind person, which is
usually text-to-speech output.
07:11 - And sometimes,
07:14 - also, or instead,
refreshable Braille output.
07:17 - If I hold up the Braille display,
07:18 - is that happening for you, okay?
07:22 - The thing about a screen
reader, that separates it from
07:25 - just a straight text-to-speech rendering,
07:28 - the way that you may have heard
it, is that screen readers
07:30 - are super-selective.
07:32 - It would be really arduous for
me to listen to every screen
07:35 - top-to-bottom, I would
never get anything done.
07:37 - And so, the screen reader allows me to
07:39 - jump selectively, using
07:43 - different UI elements, to
the information that I want.
07:46 - So for example, I can move by paragraph,
07:48 - I can move by heading, I can
get something spelled out,
07:51 - when that's necessary.
07:53 - And it allows me to kind
of judicially ignore
07:56 - the majority of the information,
that's on that screen,
07:58 - that I don't need at any given time.
08:01 - Where the magic really happens,
08:02 - is a combination of non-visual output, and
08:06 - Smart keyboard, or
Braille display commands,
08:09 - that are conducive to just
jumping to the right place,
08:11 - at the right time.
08:15 - - And so, what's happening
now with, so how are you,
08:20 - incorporating accessibility
into current projects
08:23 - that are happening, like
the p5.js web editor,
08:25 - or other things that are
out there these days?
08:29 - - I've found, since our
first time working together,
08:33 - I found a number of resources,
08:34 - that are a little bit more user-friendly.
08:36 - And maybe I can provide
the link to the viewers.
08:39 - Teach Access is one that I'm
really a big fan of right now.
08:43 - It's actually an initiative
between industry,
08:47 - and academia, to try to like promote
08:50 - accessible code writing literacy.
08:54 - I think the industry is in a place now,
08:56 - where all these big companies
like Facebook, and Google,
08:59 - and Yahoo, they all are really lacking
09:02 - in the area of accessibility.
09:04 - And there's like, people are
getting sued all the time now,
09:07 - because their sites and their
tools are not accessible.
09:09 - So their looking for
graduates from academia,
09:12 - from computer science and
design, to come out with
09:16 - skills and accessibility.
09:18 - So it's really an initiative, to
09:20 - have education in the
schools, and job postings
09:23 - for people that are
interested in accessibility.
09:25 - And they have really
great in-depth tutorials,
09:28 - for learning how to code accessibly.
09:30 - So it's at teachaccess.org.
09:32 - And I've learned quite a
bit, just over working with
09:36 - another processing fellow, Ahtul Varma,
09:38 - who has taken a really big
interest in the project,
09:41 - and has been working
with us pretty closely.
09:44 - Just some tips, and tricks along the way,
09:46 - for coding accessibly.
09:48 - It's daunting, how much
information there is out there,
09:51 - but it's just about incorporating
it into your practice,
09:54 - and slowly picking up things as you go,
09:56 - as with like all coding.
09:59 - But, yeah, we've been spending the last,
10:01 - Chancey and I have...
10:02 - How long has it been,
like four or five months
10:04 - on the project?
10:06 - Quite a while, on the
project, working to make
10:10 - specifically, p5's web
editor accessible to people
10:13 - that use screen readers.
10:15 - So after the interviews,
that we did with people
10:18 - that are blind and code,
10:20 - we call them our expert
stakeholder interviews,
10:24 - we started doing fun workshops,
with eight to 10 people
10:28 - at a time, learning how to code
in HTML, CSS and Javascript.
10:33 - All of the participants
were screen reader users,
10:36 - and blind, and we learned from each other,
10:40 - like how people that use
screen readers could learn
10:43 - how to code, or what their
sort of workflow would be like,
10:48 - what kind of
10:50 - web editor, and what
kind of IDE is helpful,
10:53 - because a lot of them
are so visually oriented.
10:57 - It was like a big learning
process, focus group workshops,
11:00 - stuff that's happened
over the last few months.
11:03 - And now, I think at the end of October,
11:05 - we're ready to release like
11:08 - the first go, at an accessible web editor,
11:12 - who's output is, right
now, it's text based,
11:15 - but we're adding some tonal stuff.
11:20 - Conceptually, we've come
across some naysayers
11:23 - for the project, because p5 is like
11:25 - a very visually oriented language.
11:27 - So it's been really--
- Awwww.
11:28 - - Yeah.
11:29 - - Can I talk about that?
- Yeah, yeah, okay.
11:30 - - So this is one of the
things that seems to be
11:34 - cropping up again, and again, right now,
11:36 - because we're at such a moment, again, of
11:39 - increasingly available,
11:41 - what you would call visual
technologies, they're everywhere.
11:45 - Everything from Maps on mobile, to
11:49 - drag-and-drop interfaces.
11:51 - And I was told so much
in school, you know,
11:54 - you're gonna be excused
from this assignment,
11:56 - because it's very visual.
11:58 - It's actually not.
11:59 - Most of this information, and
most of these interactions
12:02 - that we think of that way,
are not inherently visual,
12:06 - anymore than the text that's
now on my Braille display,
12:08 - or coming out of my text-to-speech,
from my screen reader,
12:11 - is inherently visual.
12:14 - What they are, is spatial.
12:16 - And what we need, are adequate,
12:19 - equitable spatial representations.
12:22 - There are blind people,
12:24 - who you would think of as visual learners.
12:27 - I think of them as spatial learners.
12:30 - And just as surely, as there are folks
12:32 - in the sighted community, who
prefer a more spatial language
12:36 - as opposed to a textual
one, there are blind folks
12:39 - that prefer to the work that way.
12:40 - Coming back to my example of
the floor plan for the fair,
12:44 - it makes sense for me to do
that task in a spatial way.
12:49 - Those tools
12:51 - need to be designed with
accessibility in mind,
12:55 - just as much as textual tools.
12:57 - There is nothing about
blindness, that makes us prefer
13:02 - linearity or text, it's just
that that's what we have now.
13:06 - And what Claire, and the
Processing Foundation
13:08 - have taken on, is
13:11 - a really exciting challenge, and the work
13:14 - is really groundbreaking,
because it doesn't assume
13:18 - that spatial elements
should be just left out,
13:21 - or designed around.
13:23 - It really, they're embracing
the challenge, and making
13:28 - spatial interactions possible
for us, which is fantastic!
13:31 - - And I think that you
can, you know, the same way
13:33 - that you might think of
painting, or sculpture,
13:35 - as this sort of like physical process,
13:38 - of working with your
hands, to mold something,
13:40 - or working with your
hands, to spread paint
13:42 - and creating visual art.
13:43 - It's really spatial, and
physical, and there's motion,
13:46 - and activity with your body.
13:48 - And I think, programming
the output, and thinking
13:51 - for an algorithm, that
generates something spatial.
13:53 - In a lot of ways, while
you're doing the programming,
13:54 - it's a thing that's
happening in your mind.
13:57 - And I think you're right,
that it's really exciting
13:59 - to think about, how to represent that,
14:01 - how to think through that,
and how to have that output
14:05 - in different and novel ways, so that it's
14:08 - accessible to everyone.
14:09 - - Yeah.
14:10 - - And what we're doing
now, is we're working on
14:11 - creating a set of user
preferences, so it's not just
14:15 - one stock way of getting the output,
14:17 - like a text description.
14:18 - But we're working on having like a number
14:20 - of different options
for people, to consume
14:22 - that spatial information.
14:32 - - If somebody wanted
to try a screen reader,
14:34 - and get a sense of that
experience, what would they do?
14:37 - - Well, if you have an Apple
device, it's very easy.
14:41 - If it's an iOS device, you can tell Suri
14:44 - to turn on VoiceOver, and
later turn off VoiceOver.
14:48 - If you have a Mac, it's
gonna be Command+F5,
14:50 - which is a toggle.
14:52 - And if you are a Windows user,
you're gonna wanna head over
14:54 - to nvaccess.org, and
download the fabulous, free,
14:59 - and open source non-visual desktop access.
15:03 - A couple of things to
note, you're probably
15:05 - going to want to pull up
some quick references,
15:08 - before you start your screen
reader journey, because
15:11 - if you're running a screen
reader on a Mac, or PC,
15:15 - you're gonna want to know
some vital keyboard commands,
15:17 - for moving around, because
for most screen reader users,
15:21 - it is a mouse-free life, and
if you're using an iOS device,
15:25 - you're going to want to
understand that the gestures
15:28 - totally change, when
the screen reader is on.
15:31 - So if you were to tap the
screen, with VoiceOver on,
15:34 - it will simply speak the
element that your tapping,
15:36 - for example.
15:37 - And a double-tap, for us,
is what you're used to
15:40 - as a single-tap, and the list goes on.
15:42 - But the good news, is that
there's a ton of documentation
15:45 - out there, and there's also
15:46 - a fabulously supportive
community, on the Apple side,
15:50 - go to AppleVis, applevis.com,
15:54 - for a really lively, well-informed
15:57 - and good-natured community of support,
15:59 - for both users and developers,
around Apple accessibility.
16:04 - And on the Windows side,
of course, nvaccess.org has
16:08 - quite a wonderful community of its own.
16:12 - That open source screen reader
was developed by, and for,
16:16 - blind people, and has a ton of
community support available.
16:20 - - That's great.
16:21 - It's interesting to
think about what might be
16:23 - some aspects of programming,
the process of programming,
16:26 - that the screen reader works
through it perfectly for,
16:28 - whether it reads out, there's
a button on this line of code,
16:31 - and it tells you what the
bug is, versus other things
16:34 - that maybe don't kind
of work with that model,
16:36 - and whether there's other kind
of haptic, or audio feedback
16:39 - that could work.
16:40 - I wonder, is this something
that you guys are wrestling with
16:42 - and thinking about, like
does the screen reader
16:44 - translate right to the editor?
16:46 - - Yeah.
16:48 - A lot of the common UI
elements translate pretty well,
16:51 - like buttons, as long as
they're labeled correctly.
16:55 - But something, again, IDEs
have like a lot of visual
17:00 - syntax highlighting, and
stuff like that, it's not,
17:02 - that's something that
we're working on now,
17:04 - that it's maybe assigning
tones to different parts
17:07 - of the code syntax.
17:10 - And also, like visual
linting, so as you type,
17:13 - there are error message,
so you can see there's
17:16 - parts of the code that's highlighted.
17:18 - So we've actually incorporated
like a little warning tone,
17:21 - like a little bell
that'll ding, if you leave
17:24 - a brace off a code, off a line of code for
17:27 - more than five seconds, it'll ding at you.
17:32 - One thing that was really interesting,
17:33 - from this whole experience, is that in the
17:35 - code learning workshops, I
feel like screen reader users
17:38 - are primed for learning how to code,
17:41 - because of their familiarity
with different HTML elements
17:45 - and stuff like that.
17:46 - And it was just kind of a
dream to do these workshops,
17:50 - and everybody picked it up really quickly.
17:52 - - And that's because
when we visit a website,
17:55 - we really have to know
what heading structure is,
17:58 - and what different types
of form fields are, etc.,
18:03 - just to be able to move around,
and get some airline tickets
18:06 - or place a lunch order.
18:08 - And so, I guess our baseline
18:09 - of kind of knowing about,
and living with HTML,
18:12 - may be a little bit higher than average.
18:14 - - Definitely, I would say.
18:16 - - So one thing I'm curious
about, with the workshops
18:18 - that you've been doing.
18:19 - A lot of the teaching
that I do emphasize is,
18:21 - learning through your own project ideas.
18:23 - And I wonder if any of the
people who have attended your
18:26 - workshops, have kind of come
up with interesting ideas
18:29 - around code, or accessibility?
18:31 - - Absolutely.
18:31 - - Through learning some of the skills.
18:33 - - Yeah, especially to do with the output
18:35 - that we're working on, with
crafting, and performing.
18:40 - There was a really great suggestion, by
18:43 - one of the workshop
attendees, Gus Chowkiss, to
18:48 - spatialize the information, by creating,
18:50 - like this is the p5 output,
18:53 - by creating something
that was akin to like
18:55 - an Excel spreadsheet.
18:57 - Because you can, it's
spatializing that you can
18:59 - arrow through, and columns, and rows.
19:03 - So essentially, they're
kind of like Battleship,
19:05 - to borrow from Chancey,
19:07 - with a way to spatialize the
canvas, in a different way.
19:11 - - Can you tell me a little
bit about the Ability Project,
19:13 - and what that is, and how
that plays a role in the work,
19:15 - and research you guys are doing?
19:17 - - Yeah, so the Ability Project's based out
19:19 - at NYU's Tandon School of Engineering.
19:22 - But it's really like an
interdisciplinary research project
19:26 - between Occupational Therapy,
19:29 - NYU's ITP Program, Interactive
Telecommunications Program,
19:34 - and Engineering.
19:36 - And basically, we're just
trying to further the study of
19:40 - the development of assistive
and rehab technologies,
19:42 - as well as accessibility solutions.
19:45 - And we take a lot of pride
in our approach, which is
19:49 - a very human-centered,
community-based approach
19:52 - to developing technologies.
19:56 - - Chancey, can you say
a little bit about why
19:58 - coding is so important to the blind,
20:00 - and visually-impaired community?
20:03 - - I think that sometimes
the industry thinks of us,
20:05 - and sometimes we even think of ourselves,
20:07 - as kind of the perpetual consumers.
20:11 - We've struggled so long,
to get basic access to
20:14 - literacy, and other information,
20:17 - and that's kind of our baseline now.
20:20 - But, the next step is
20:23 - harnessing our ability to
create our own solutions,
20:27 - and our own tools.
20:29 - Some of the products that I use,
20:31 - that are the most life-changing for me,
20:33 - have been created by blind developers.
20:35 - For example, I use an app
called Seeing Eye GPS,
20:38 - to get around, and that was invented
20:40 - by a blind guy, Mike May.
20:44 - We need to grow the base of
individuals, who are willing to
20:48 - engage with their everyday challenges,
20:51 - from a problem solving mindset, and then,
20:54 - share those solutions.
20:55 - I think, ultimately, the
most compelling technologies
20:59 - and tools we'll ever have,
21:01 - will come from within the community.
21:02 - If you think about it, we have Braille
21:04 - because of Louis Braille,
we don't have it because of
21:08 - outside in development.
21:10 - We need a proper
21:13 - grounding, in the fundamentals
of coding, in particular,
21:16 - and STEM education, in
general, so that we can
21:23 - develop the next generation of tools,
21:25 - that will liberate us, and
21:30 - help us
21:32 - meet whatever goals, and
whatever challenges we want.
21:42 - - If people are interested
in learning more,
21:44 - or getting involved, or
contributing to your research,
21:47 - is like how can they, what
are the kinds of things
21:49 - that are stumbling blocks, or
things that you need help with
21:51 - or ways that people can get involved?
21:52 - - Yeah, well, we're
hoping to get some help
21:54 - with making some examples,
with accessibility in mind,
21:58 - we're hoping to get some
examples that have been created
22:00 - entirely using keyboard commands,
and with screen readers.
22:06 - We're gonna put up the
documentation, for how to use
22:11 - the web editor with a screen reader.
22:13 - In there, there will
probably be a link for people
22:16 - in the open source community,
who wanna contribute.
22:18 - - Great.
- Yeah.
22:19 - Another way that I hope
that people can take part,
22:22 - or contribute.
22:23 - You know, we're such a low
incidence disability group,
22:26 - and again, thinking about education,
22:28 - I just heard that we're
being excused from so much,
22:32 - and I was a pretty
academic kid, and a pretty,
22:36 - pretty willing to try things,
but the educators in my life,
22:41 - weren't sure how to adapt some activities.
22:44 - So I think one of the most
important ways, that folks can
22:48 - help us out, is if you found
out about this project,
22:51 - if you try the tool, and you
know someone in the community
22:55 - who's either an educator,
22:57 - a person with a print-reading disability,
22:59 - or visual impairment,
and they may be wondering
23:02 - whether programming is possible for them,
23:04 - or whether any kind of
spatial computing is possible
23:09 - for them, connect them to
this community of practice.
23:12 - Because there are tons of us
out there, that just assume
23:16 - that we won't be doing this.
23:18 - And the moment that we get
connected into the community,
23:21 - we can first start
learning, and then after
23:24 - we gain confidence, we
can start contributing,
23:27 - and the knowledgebase grows.
23:28 - And we need help connecting to each other,
23:30 - to make that knowledgebase
grow, in the way that
23:32 - we know it can.
23:34 - - Cool, yeah.
23:36 - - Wonderful.
- What she said.
23:37 - - Yeah. (laughs)
23:39 - That's great!
23:39 - Well, I hope that, people
who will be watching,
23:43 - and maybe know someone,
who's interested in coding,
23:46 - and wants to get involved,
and learn, and contribute,
23:49 - that they can get in touch.
23:50 - And you can always get in touch with me,
23:51 - and I'll help you get in
touch with Claire, or Chancey,
23:53 - or through the right
channels, to help contribute
23:55 - and participate.
23:57 - Thank you guys, so much.
23:58 - It's really exciting to me, to
24:02 - have this venue, of doing all
these programming tutorials.
24:05 - And honestly, what I'm doing
is so visual, through video,
24:08 - programming with visuals, the
output is visual, generative.
24:12 - And so, I think it's
really important, for me
24:15 - and for everyone, to sort of
keep in mind, all the different
24:18 - people who might want to
learn, might want to watch,
24:20 - and might want to participate,
and make sure that
24:22 - things are accessible.
24:24 - I hope that I can help,
and thanks, so much,
24:26 - for being the guinea pigs,
to try being a guest.
24:29 - I haven't done that before.
24:30 - And thanks, everyone, for watching, and
24:33 - come back and have another
video sometime, okay?
24:36 - Bye-bye, thank you.
- Thank you.
24:37 - - Bye.
- Thanks.

Cleaned transcript:

Hello, welcome to a very special Coding Rainbow episode. I'm trying a new experiment, which I hope to do many more of, which is have guests here in the studio. I'm super excited to introduce these two guests today, Claire KearneyVolpe and Chancey Fleet. They're working on a really extraordinary, they're working on a lot of different things, but mainly, projects and research around accessibility and code. A lot of the work that they're doing, is in collaboration with the Processing Foundation, on the various tools that processing works on, specifically p5.js, which is going to have a new release of a web editor sometime soon, which I'm sure I'll probably talk about and show at some point, and that editor and how that editor can be made accessible and available, to blind and visually impaired people. So one thing I wanna briefly mention, before I get started asking some questions, is that there, if you wanna watch this video using YouDescribe, which is a tool that allows you to hear descriptions, of some of the images and things that we'll be showing, there'll be a link in this video subscription, for you to go ahead and do that, okay? I guess my first question for you guys is just, how did you meet, and how did you get started doing this work? Well. I was doing my thesis work, when Chancey and I met, and we were working on a project together, to make a diagramming tool, that would be accessible. And Chancey, you had the idea for the project. Do you wanna say what, Sure. your purpose for it was? I'm so glad we were connected. I think we were connected by a colleague of mine from the CUNY Disability Studies Program, of which I'm a graduate, and Claire was looking to collaborate with users, on participatory design projects, that were driven by the user's individual goals, which is a really important thing, rather than imagining what a user with a disability might want participatory design asks, which is fabulous. One of my abiding wishes over the years, has been to have a tool for dealing with spatial content, and spatial relationships. And the example that I came to Claire with, was that every year I've gotta help plan this massive technology and culture fair, at the place where I work, and it's we've got 30 plus exhibitors, each year, and some of them need a certain type of space. And some of them need outlets, and some of them should be, or shouldn't be next to other ones. It's a lot like a law school admission, like a logic game problem. And it's really, at least for me, viciously difficult to do in linear or textual format. And so, I wanted to do the thing, that most of you take for granted, which is to draganddrop the happy little tables, until I found an optical arrangement. And there was no real software solution, that works well with screen readers. And I'll talk more about screen readers in a minute. And so, I came to Claire and said, "Please help, "this is the thing that I'm missing, in my workflow "that would really have an impact". And, a couple things from this project, was first of all, I was like not very good at coding, in general, and even worse at coding excessively. Meaning, people that use screen readers, could have access to the information, and use the application that I was making. And I was like looking on line for resources, and just was met with like really dense, wordy things that weren't really approachable to like a code beginner, like myself. And so, that was like the first issue, that we kind of, we butted up against. And then another thing, was if this project was gonna be truly participatory, Chancey was gonna have to like roll up her sleeves, and start coding. But when we looked online, the majority of the, the resources online for learning how to code, were not accessible, or just like not super userfriendly. So coding was completely new for you, or had you dabbled, or done certain things with it before? I mean, so here's the thing, there have been for decades, there have been some blind folks, that learn to code, and that make livings coding. And so, I'm not gonna say that there's nothing out there. We're in this moment where, in the broader sense of the term, coding education is being made as accessible as possible. So to different diverse communities, to people that might have never considered it before. To people that might not want to do it fulltime everyday, but who might need to incorporate it into their studies, or their careers. And that's where I am. I'm probably never gonna be a fulltime coder, that's not my aspiration. There was nothing at the kind of friendly novice level, that I could find. An hour of code here and there, that happened to be accessible. Sometimes a video that was verbalized enough to be usable, but I came across just a ton of websites where either the information was pretty advanced, and pretty dense, or if it wasn't, it was heavily picture driven, relied on videos that didn't have description of screen shots, and sometimes incorporated learning tools like text editors in the browser, that were simply not accessible to a screen reader. I came up across a ton of roadblocks, and so I stopped with just a little bit of HTML under my belt, and didn't really revisit the question until I met Claire. Right, and you know, I think it's really interesting that you talk about coding just as a skill, or a thing that you might do, in combination with what you were already doing in your work, or a hobby. And I think this is, you know, coming from the sort of Processing Foundation, and working with tools like processing and p5.js, a lot of that way people learn to program is not to become a computer scientist, or to focus their entire life on code, but to add that as a tool, into your bag of tricks, and things you know, and learn how that it can do. And I think, you're right, there's so many things going on right now. There's a new White House initiative, computer science for all. There's a New York City Public Schools initiative, computer science for all. There's that word all there. So I think it's really interesting, to think about, how do we make, what now is sort part of our culture and everyday life software, and how does software work accessible for everyone? Yeah, and we knew people were doing it, we knew people were out there coding. What we did next, was we set to task to interview people, that were blind, and used screen readers. Do you want to talk about screen readers? 'Cause I think I've said that word a couple times now. I'm sure a lot of people don't know what they are. I guess it hasn't been said, so, I'm blind, right? And I don't use a computer screen. So I've gotta have a way to access everything that's happening on a computer screen, in some other nonvisual way. And so, what a screen reader does, is it renders that onscreen output, into something that's more usable for a blind person, which is usually texttospeech output. And sometimes, also, or instead, refreshable Braille output. If I hold up the Braille display, is that happening for you, okay? The thing about a screen reader, that separates it from just a straight texttospeech rendering, the way that you may have heard it, is that screen readers are superselective. It would be really arduous for me to listen to every screen toptobottom, I would never get anything done. And so, the screen reader allows me to jump selectively, using different UI elements, to the information that I want. So for example, I can move by paragraph, I can move by heading, I can get something spelled out, when that's necessary. And it allows me to kind of judicially ignore the majority of the information, that's on that screen, that I don't need at any given time. Where the magic really happens, is a combination of nonvisual output, and Smart keyboard, or Braille display commands, that are conducive to just jumping to the right place, at the right time. And so, what's happening now with, so how are you, incorporating accessibility into current projects that are happening, like the p5.js web editor, or other things that are out there these days? I've found, since our first time working together, I found a number of resources, that are a little bit more userfriendly. And maybe I can provide the link to the viewers. Teach Access is one that I'm really a big fan of right now. It's actually an initiative between industry, and academia, to try to like promote accessible code writing literacy. I think the industry is in a place now, where all these big companies like Facebook, and Google, and Yahoo, they all are really lacking in the area of accessibility. And there's like, people are getting sued all the time now, because their sites and their tools are not accessible. So their looking for graduates from academia, from computer science and design, to come out with skills and accessibility. So it's really an initiative, to have education in the schools, and job postings for people that are interested in accessibility. And they have really great indepth tutorials, for learning how to code accessibly. So it's at teachaccess.org. And I've learned quite a bit, just over working with another processing fellow, Ahtul Varma, who has taken a really big interest in the project, and has been working with us pretty closely. Just some tips, and tricks along the way, for coding accessibly. It's daunting, how much information there is out there, but it's just about incorporating it into your practice, and slowly picking up things as you go, as with like all coding. But, yeah, we've been spending the last, Chancey and I have... How long has it been, like four or five months on the project? Quite a while, on the project, working to make specifically, p5's web editor accessible to people that use screen readers. So after the interviews, that we did with people that are blind and code, we call them our expert stakeholder interviews, we started doing fun workshops, with eight to 10 people at a time, learning how to code in HTML, CSS and Javascript. All of the participants were screen reader users, and blind, and we learned from each other, like how people that use screen readers could learn how to code, or what their sort of workflow would be like, what kind of web editor, and what kind of IDE is helpful, because a lot of them are so visually oriented. It was like a big learning process, focus group workshops, stuff that's happened over the last few months. And now, I think at the end of October, we're ready to release like the first go, at an accessible web editor, who's output is, right now, it's text based, but we're adding some tonal stuff. Conceptually, we've come across some naysayers for the project, because p5 is like a very visually oriented language. So it's been really Awwww. Yeah. Can I talk about that? Yeah, yeah, okay. So this is one of the things that seems to be cropping up again, and again, right now, because we're at such a moment, again, of increasingly available, what you would call visual technologies, they're everywhere. Everything from Maps on mobile, to draganddrop interfaces. And I was told so much in school, you know, you're gonna be excused from this assignment, because it's very visual. It's actually not. Most of this information, and most of these interactions that we think of that way, are not inherently visual, anymore than the text that's now on my Braille display, or coming out of my texttospeech, from my screen reader, is inherently visual. What they are, is spatial. And what we need, are adequate, equitable spatial representations. There are blind people, who you would think of as visual learners. I think of them as spatial learners. And just as surely, as there are folks in the sighted community, who prefer a more spatial language as opposed to a textual one, there are blind folks that prefer to the work that way. Coming back to my example of the floor plan for the fair, it makes sense for me to do that task in a spatial way. Those tools need to be designed with accessibility in mind, just as much as textual tools. There is nothing about blindness, that makes us prefer linearity or text, it's just that that's what we have now. And what Claire, and the Processing Foundation have taken on, is a really exciting challenge, and the work is really groundbreaking, because it doesn't assume that spatial elements should be just left out, or designed around. It really, they're embracing the challenge, and making spatial interactions possible for us, which is fantastic! And I think that you can, you know, the same way that you might think of painting, or sculpture, as this sort of like physical process, of working with your hands, to mold something, or working with your hands, to spread paint and creating visual art. It's really spatial, and physical, and there's motion, and activity with your body. And I think, programming the output, and thinking for an algorithm, that generates something spatial. In a lot of ways, while you're doing the programming, it's a thing that's happening in your mind. And I think you're right, that it's really exciting to think about, how to represent that, how to think through that, and how to have that output in different and novel ways, so that it's accessible to everyone. Yeah. And what we're doing now, is we're working on creating a set of user preferences, so it's not just one stock way of getting the output, like a text description. But we're working on having like a number of different options for people, to consume that spatial information. If somebody wanted to try a screen reader, and get a sense of that experience, what would they do? Well, if you have an Apple device, it's very easy. If it's an iOS device, you can tell Suri to turn on VoiceOver, and later turn off VoiceOver. If you have a Mac, it's gonna be Command+F5, which is a toggle. And if you are a Windows user, you're gonna wanna head over to nvaccess.org, and download the fabulous, free, and open source nonvisual desktop access. A couple of things to note, you're probably going to want to pull up some quick references, before you start your screen reader journey, because if you're running a screen reader on a Mac, or PC, you're gonna want to know some vital keyboard commands, for moving around, because for most screen reader users, it is a mousefree life, and if you're using an iOS device, you're going to want to understand that the gestures totally change, when the screen reader is on. So if you were to tap the screen, with VoiceOver on, it will simply speak the element that your tapping, for example. And a doubletap, for us, is what you're used to as a singletap, and the list goes on. But the good news, is that there's a ton of documentation out there, and there's also a fabulously supportive community, on the Apple side, go to AppleVis, applevis.com, for a really lively, wellinformed and goodnatured community of support, for both users and developers, around Apple accessibility. And on the Windows side, of course, nvaccess.org has quite a wonderful community of its own. That open source screen reader was developed by, and for, blind people, and has a ton of community support available. That's great. It's interesting to think about what might be some aspects of programming, the process of programming, that the screen reader works through it perfectly for, whether it reads out, there's a button on this line of code, and it tells you what the bug is, versus other things that maybe don't kind of work with that model, and whether there's other kind of haptic, or audio feedback that could work. I wonder, is this something that you guys are wrestling with and thinking about, like does the screen reader translate right to the editor? Yeah. A lot of the common UI elements translate pretty well, like buttons, as long as they're labeled correctly. But something, again, IDEs have like a lot of visual syntax highlighting, and stuff like that, it's not, that's something that we're working on now, that it's maybe assigning tones to different parts of the code syntax. And also, like visual linting, so as you type, there are error message, so you can see there's parts of the code that's highlighted. So we've actually incorporated like a little warning tone, like a little bell that'll ding, if you leave a brace off a code, off a line of code for more than five seconds, it'll ding at you. One thing that was really interesting, from this whole experience, is that in the code learning workshops, I feel like screen reader users are primed for learning how to code, because of their familiarity with different HTML elements and stuff like that. And it was just kind of a dream to do these workshops, and everybody picked it up really quickly. And that's because when we visit a website, we really have to know what heading structure is, and what different types of form fields are, etc., just to be able to move around, and get some airline tickets or place a lunch order. And so, I guess our baseline of kind of knowing about, and living with HTML, may be a little bit higher than average. Definitely, I would say. So one thing I'm curious about, with the workshops that you've been doing. A lot of the teaching that I do emphasize is, learning through your own project ideas. And I wonder if any of the people who have attended your workshops, have kind of come up with interesting ideas around code, or accessibility? Absolutely. Through learning some of the skills. Yeah, especially to do with the output that we're working on, with crafting, and performing. There was a really great suggestion, by one of the workshop attendees, Gus Chowkiss, to spatialize the information, by creating, like this is the p5 output, by creating something that was akin to like an Excel spreadsheet. Because you can, it's spatializing that you can arrow through, and columns, and rows. So essentially, they're kind of like Battleship, to borrow from Chancey, with a way to spatialize the canvas, in a different way. Can you tell me a little bit about the Ability Project, and what that is, and how that plays a role in the work, and research you guys are doing? Yeah, so the Ability Project's based out at NYU's Tandon School of Engineering. But it's really like an interdisciplinary research project between Occupational Therapy, NYU's ITP Program, Interactive Telecommunications Program, and Engineering. And basically, we're just trying to further the study of the development of assistive and rehab technologies, as well as accessibility solutions. And we take a lot of pride in our approach, which is a very humancentered, communitybased approach to developing technologies. Chancey, can you say a little bit about why coding is so important to the blind, and visuallyimpaired community? I think that sometimes the industry thinks of us, and sometimes we even think of ourselves, as kind of the perpetual consumers. We've struggled so long, to get basic access to literacy, and other information, and that's kind of our baseline now. But, the next step is harnessing our ability to create our own solutions, and our own tools. Some of the products that I use, that are the most lifechanging for me, have been created by blind developers. For example, I use an app called Seeing Eye GPS, to get around, and that was invented by a blind guy, Mike May. We need to grow the base of individuals, who are willing to engage with their everyday challenges, from a problem solving mindset, and then, share those solutions. I think, ultimately, the most compelling technologies and tools we'll ever have, will come from within the community. If you think about it, we have Braille because of Louis Braille, we don't have it because of outside in development. We need a proper grounding, in the fundamentals of coding, in particular, and STEM education, in general, so that we can develop the next generation of tools, that will liberate us, and help us meet whatever goals, and whatever challenges we want. If people are interested in learning more, or getting involved, or contributing to your research, is like how can they, what are the kinds of things that are stumbling blocks, or things that you need help with or ways that people can get involved? Yeah, well, we're hoping to get some help with making some examples, with accessibility in mind, we're hoping to get some examples that have been created entirely using keyboard commands, and with screen readers. We're gonna put up the documentation, for how to use the web editor with a screen reader. In there, there will probably be a link for people in the open source community, who wanna contribute. Great. Yeah. Another way that I hope that people can take part, or contribute. You know, we're such a low incidence disability group, and again, thinking about education, I just heard that we're being excused from so much, and I was a pretty academic kid, and a pretty, pretty willing to try things, but the educators in my life, weren't sure how to adapt some activities. So I think one of the most important ways, that folks can help us out, is if you found out about this project, if you try the tool, and you know someone in the community who's either an educator, a person with a printreading disability, or visual impairment, and they may be wondering whether programming is possible for them, or whether any kind of spatial computing is possible for them, connect them to this community of practice. Because there are tons of us out there, that just assume that we won't be doing this. And the moment that we get connected into the community, we can first start learning, and then after we gain confidence, we can start contributing, and the knowledgebase grows. And we need help connecting to each other, to make that knowledgebase grow, in the way that we know it can. Cool, yeah. Wonderful. What she said. Yeah. (laughs) That's great! Well, I hope that, people who will be watching, and maybe know someone, who's interested in coding, and wants to get involved, and learn, and contribute, that they can get in touch. And you can always get in touch with me, and I'll help you get in touch with Claire, or Chancey, or through the right channels, to help contribute and participate. Thank you guys, so much. It's really exciting to me, to have this venue, of doing all these programming tutorials. And honestly, what I'm doing is so visual, through video, programming with visuals, the output is visual, generative. And so, I think it's really important, for me and for everyone, to sort of keep in mind, all the different people who might want to learn, might want to watch, and might want to participate, and make sure that things are accessible. I hope that I can help, and thanks, so much, for being the guinea pigs, to try being a guest. I haven't done that before. And thanks, everyone, for watching, and come back and have another video sometime, okay? Byebye, thank you. Thank you. Bye. Thanks.
