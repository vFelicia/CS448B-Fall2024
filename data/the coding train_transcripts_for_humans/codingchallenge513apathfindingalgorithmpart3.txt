With timestamps:

00:00 - [TRAIN HORN]
00:02 - What's that?
00:03 - The train is pulling
to the station again?
00:06 - Back for a third part of this A*
algorithm ThingamaBob because I
00:13 - did want to-- what you saw
actually in the first part is
00:17 - visually--
00:18 - this is a surprise
third part, by the way.
00:20 - I didn't mention it was
going to be three parts.
00:22 - It's fine, though.
00:23 - It's fine.
00:24 - It's what it is.
00:25 - You're watching or you're
not watching, that's life.
00:29 - In the first part,
I showed it visually
00:30 - a little bit different.
00:31 - And so I'm going
to get to there,
00:32 - and I just want to
kind of play around
00:33 - with the visually a little
bit to give you guys
00:35 - some things to think about.
00:36 - And I'm hoping that
I'll see a lot of you
00:39 - sharing the 3D versions or
other types of visual versions.
00:43 - So let's see what
we can do here.
00:45 - The first thing that
I'm going to look at
00:47 - is a different way
of drawing the path.
00:49 - So one way that I
want to draw the path
00:51 - is actually by a
continuous line.
00:53 - So I'm going to say begin shape
and, oh, begin shape and end
00:57 - shape.
00:59 - And I'm going to have
this same exact for loop,
01:02 - but instead of calling
that show function that
01:04 - draws a rectangle, I'm
going to add a vertex.
01:06 - And the vertex needs to
be at each path's I times
01:13 - w and it's j times h.
01:18 - And we don't want
this to have a fill,
01:22 - and we do want this
to have a stroke.
01:24 - I'm just going to make
it white right now,
01:26 - and we'll see if that comes up.
01:28 - So let's look at
what happens there.
01:30 - So oops, I don't see that.
01:32 - Why don't I see that?
01:33 - Oh, path j.
01:36 - Shoot.
01:37 - Always-- I need
like a sound effect,
01:39 - not just for this dot problem
but the i versus j, x versus y
01:43 - problem.
01:44 - So if we come back
and see that, we
01:46 - can see oops, still not working.
01:49 - Oh.
01:50 - Dot j.
01:50 - Oh, my goodness.
01:52 - I can't do it anymore.
01:53 - OK, there you go.
01:54 - So we can see that
I'm drawing a line.
01:56 - So this is connecting
a little bit.
01:58 - You can see the line,
though, is kind of connected
02:00 - from the edge.
02:02 - So as it goes across the top or
goes across the bottom, which
02:04 - isn't exactly right,
so I also should
02:08 - consider the line
between the center
02:10 - of each one of these cells,
which is adding the height
02:15 - or width divided by 2.
02:17 - So now we can see, I'm
seeing the path as a line.
02:21 - Now, there is this kind
of issue of should I
02:23 - be allowed to go
between these two?
02:26 - Right?
02:26 - This is a valid diagonal
step, but is this really
02:29 - a valid point?
02:30 - So I think an
interesting exercise
02:31 - for those of you watching
would be how do you modify this
02:34 - so that's not a valid move.
02:36 - I would have to actually
go around that somehow.
02:38 - I can go diagonally, but
not if there are two,
02:41 - only if this was open as well.
02:43 - I don't know if it
should be or not,
02:44 - but one way I could visually
at least address this
02:47 - is I could say, if I
come back up, sorry,
02:52 - to the where I'm drawing
these, let's make
02:55 - these actually circles.
02:59 - And so actually,
I'm going to take
03:00 - the same exact
line of code, and I
03:06 - need to draw the circles
based on the center.
03:10 - And I also could draw
their size a bit smaller.
03:15 - So let's draw all those
as points, as circles.
03:18 - You can sort of see, ah, look.
03:19 - So there's some strange
things going on now the way
03:22 - that I visualize this.
03:24 - Really weird things actually.
03:27 - I shouldn't be allowed
to record videos
03:34 - after a certain amount of time.
03:38 - OK, so now we can
see, and I don't
03:39 - want to draw the path
anymore, I mean the circles
03:42 - anymore for the path.
03:44 - So I'm going to take out those.
03:46 - I also want to make
this stroke weight--
03:48 - let's just make it
a little bit wider,
03:51 - so it's a little bit stronger.
03:53 - And now what are
the white circles?
03:57 - Why are there white circles?
04:00 - The only thing that I'm drawing
now are the path and the grid.
04:07 - So I'm showing the grid
as white and I'm only--
04:12 - so everything is white
unless it's an obstacle.
04:16 - It's black.
04:18 - So what I actually want
to do is only draw it
04:21 - if it's an obstacle.
04:27 - And I also need the background
therefor to be white.
04:33 - Wow, I really did
this in a crazy way.
04:35 - What's the background now?
04:37 - The background is-- so and
then those are the obstacles.
04:47 - Now where is the path?
04:50 - Let's make the path
some kind of color.
04:54 - There we go.
04:55 - So we can see now
that I'm getting
04:57 - a path that's kind of going
or almost looks a bit more
05:00 - realistic.
05:01 - I don't know if this is better.
05:02 - I had something different at
the beginning of the video,
05:05 - but what I might do is
make some more obstacles.
05:14 - Or actually, instead of
making more obstacles, what
05:17 - I might do just to see
this a little bit better
05:20 - is to make a larger grid.
05:25 - We can see.
05:25 - So this we could see
a bit more about how
05:29 - you could start to imagine
visualizing this pathfinding
05:33 - thing in a different way.
05:35 - It almost looks like
lightning in this crazy way.
05:38 - But you could think
about, what does
05:39 - it mean to have autonomous
agents following the path?
05:42 - How would you draw these
obstacles in different ways?
05:44 - What kinds of colors?
05:45 - You know, what if again
I said this before,
05:47 - but what if the way that you
arrange these obstacles is
05:50 - actually some type of image
or a geometric pattern using
05:54 - Perlin noise or perhaps actually
creating an actual maze,
05:58 - using some of the maze
generation algorithm
06:02 - that you can look at.
06:03 - And, boy, why didn't it go
to the top left that time?
06:05 - Oh this because this
had no solution.
06:08 - OK, so I think--
06:10 - I don't know if this third part
of the video should actually
06:13 - anybody should ever
actually watch it.
06:14 - But I guess if you're watching
it, then it did happen
06:16 - and it is online
and you watched it.
06:18 - But, so I should connect
obstacles which are connected.
06:22 - That's a really good idea.
06:24 - So I'm going to leave that
as an exercise for those
06:25 - of you watching.
06:26 - I'm making this video just to
give you some more thinking
06:29 - and possible ways
about revisualizing
06:32 - this in a different way.
06:34 - And I would love to see
what you make out of it.
06:36 - And so thanks for watching.
06:38 - Coding Train is
leaving the station.
06:41 - [DING]
06:42 - [UPBEAT JINGLE]
06:44 - [UPBEAT JINGLE]
06:45 - [UPBEAT JINGLE]
06:47 - [UPBEAT JINGLE]
06:48 - [UPBEAT JINGLE]
06:49 - [UPBEAT JINGLE]
06:50 - [UPBEAT JINGLE]

Cleaned transcript:

[TRAIN HORN] What's that? The train is pulling to the station again? Back for a third part of this A* algorithm ThingamaBob because I did want to what you saw actually in the first part is visually this is a surprise third part, by the way. I didn't mention it was going to be three parts. It's fine, though. It's fine. It's what it is. You're watching or you're not watching, that's life. In the first part, I showed it visually a little bit different. And so I'm going to get to there, and I just want to kind of play around with the visually a little bit to give you guys some things to think about. And I'm hoping that I'll see a lot of you sharing the 3D versions or other types of visual versions. So let's see what we can do here. The first thing that I'm going to look at is a different way of drawing the path. So one way that I want to draw the path is actually by a continuous line. So I'm going to say begin shape and, oh, begin shape and end shape. And I'm going to have this same exact for loop, but instead of calling that show function that draws a rectangle, I'm going to add a vertex. And the vertex needs to be at each path's I times w and it's j times h. And we don't want this to have a fill, and we do want this to have a stroke. I'm just going to make it white right now, and we'll see if that comes up. So let's look at what happens there. So oops, I don't see that. Why don't I see that? Oh, path j. Shoot. Always I need like a sound effect, not just for this dot problem but the i versus j, x versus y problem. So if we come back and see that, we can see oops, still not working. Oh. Dot j. Oh, my goodness. I can't do it anymore. OK, there you go. So we can see that I'm drawing a line. So this is connecting a little bit. You can see the line, though, is kind of connected from the edge. So as it goes across the top or goes across the bottom, which isn't exactly right, so I also should consider the line between the center of each one of these cells, which is adding the height or width divided by 2. So now we can see, I'm seeing the path as a line. Now, there is this kind of issue of should I be allowed to go between these two? Right? This is a valid diagonal step, but is this really a valid point? So I think an interesting exercise for those of you watching would be how do you modify this so that's not a valid move. I would have to actually go around that somehow. I can go diagonally, but not if there are two, only if this was open as well. I don't know if it should be or not, but one way I could visually at least address this is I could say, if I come back up, sorry, to the where I'm drawing these, let's make these actually circles. And so actually, I'm going to take the same exact line of code, and I need to draw the circles based on the center. And I also could draw their size a bit smaller. So let's draw all those as points, as circles. You can sort of see, ah, look. So there's some strange things going on now the way that I visualize this. Really weird things actually. I shouldn't be allowed to record videos after a certain amount of time. OK, so now we can see, and I don't want to draw the path anymore, I mean the circles anymore for the path. So I'm going to take out those. I also want to make this stroke weight let's just make it a little bit wider, so it's a little bit stronger. And now what are the white circles? Why are there white circles? The only thing that I'm drawing now are the path and the grid. So I'm showing the grid as white and I'm only so everything is white unless it's an obstacle. It's black. So what I actually want to do is only draw it if it's an obstacle. And I also need the background therefor to be white. Wow, I really did this in a crazy way. What's the background now? The background is so and then those are the obstacles. Now where is the path? Let's make the path some kind of color. There we go. So we can see now that I'm getting a path that's kind of going or almost looks a bit more realistic. I don't know if this is better. I had something different at the beginning of the video, but what I might do is make some more obstacles. Or actually, instead of making more obstacles, what I might do just to see this a little bit better is to make a larger grid. We can see. So this we could see a bit more about how you could start to imagine visualizing this pathfinding thing in a different way. It almost looks like lightning in this crazy way. But you could think about, what does it mean to have autonomous agents following the path? How would you draw these obstacles in different ways? What kinds of colors? You know, what if again I said this before, but what if the way that you arrange these obstacles is actually some type of image or a geometric pattern using Perlin noise or perhaps actually creating an actual maze, using some of the maze generation algorithm that you can look at. And, boy, why didn't it go to the top left that time? Oh this because this had no solution. OK, so I think I don't know if this third part of the video should actually anybody should ever actually watch it. But I guess if you're watching it, then it did happen and it is online and you watched it. But, so I should connect obstacles which are connected. That's a really good idea. So I'm going to leave that as an exercise for those of you watching. I'm making this video just to give you some more thinking and possible ways about revisualizing this in a different way. And I would love to see what you make out of it. And so thanks for watching. Coding Train is leaving the station. [DING] [UPBEAT JINGLE] [UPBEAT JINGLE] [UPBEAT JINGLE] [UPBEAT JINGLE] [UPBEAT JINGLE] [UPBEAT JINGLE] [UPBEAT JINGLE]
