With timestamps:

00:00 - all right this is my first coding
00:03 - challenge that I'm going to attempt in
00:05 - JavaScript using 3d rendering I am
00:08 - currently working on a set of tutorials
00:09 - about WebGL in p5.js I will link to
00:12 - those from this coding challenges video
00:13 - description but I bees and bombs on
00:17 - Twitter I highly recommend if you're
00:20 - interested in looking for like really
00:21 - geometric algorithmic mathematical
00:24 - illusion gifts that will kind of blow
00:26 - your mind
00:27 - check out the bees and bombs Twitter
00:29 - feed and look at this
00:32 - oh yeah look bees and bombs is watching
00:34 - this right now this is the gift I'm
00:37 - going to try to recreate in p5.js using
00:40 - the WebGL renderer okay
00:42 - so we'll see how this goes I'm just
00:45 - gonna get started so first I'm actually
00:47 - gonna just work in 2d because one thing
00:49 - that I need is just this night and I
00:51 - really need this in my life breathe in
00:54 - breathe out breathe in meditation
00:58 - I'm very high strong I really think to
01:01 - work on meditation and this is actually
01:02 - a nice calming soothing gift so I need
01:05 - something that can give me that
01:06 - oscillating behavior and the sine
01:08 - function simple harmonic motion the
01:11 - swinging of a pendulum the plucking of
01:13 - guitar string I do have some other video
01:15 - tutorials about that in processing and I
01:16 - will also link to from this video so
01:18 - first let's just make that happen in 2d
01:20 - so what I'm gonna do is I am going to
01:23 - have a variable I'm gonna call that
01:26 - variable angle and I'm gonna stick I'm
01:29 - not gonna I could add angle mode degrees
01:32 - to think in terms of degrees but I'm
01:33 - just gonna stick with radians I'm gonna
01:35 - say angle plus equals 0.1 then what I'm
01:38 - going to do and because once I get into
01:41 - WebGL mode the center zero zero and
01:45 - WebGL renderer is the center I'm
01:47 - actually just going to quickly translate
01:49 - to the center because I want to just do
01:50 - this in 2d real quick and let's draw
01:54 - loops let's draw let's say a rect mode
01:56 - Center and let's draw a rectangle so I
01:59 - want to draw a rectangle who which
02:01 - position is zero zero and its width is
02:04 - some arbitrary thing like 10 and it has
02:06 - some height so if I were to say let H
02:11 - equal 100 we would
02:13 - sorry we would add them in the wrong
02:14 - place we're gonna do here okay so that's
02:18 - that's one of these days I'm gonna be
02:20 - able to move between these okay so let's
02:22 - add a background that's black and let's
02:26 - add a fill that is 255 okay come on
02:32 - there we go
02:35 - there we go so there's that rectangle so
02:37 - what I want to see it now is breathe up
02:39 - and down oscillate up and down so the
02:42 - sine function is a function that will
02:45 - give me a value between negative 1 and 1
02:47 - if I were to graph the sine function and
02:52 - the x-axis here I could think of that
02:55 - angle
02:56 - that's increasing over time I would see
02:59 - a curve like this and that curve is
03:03 - going to oscillate between plus 1 and
03:05 - negative 1 so I could certainly use the
03:08 - map function to and actually probably
03:11 - will I'll use the map function the math
03:14 - is not that complicated so I could take
03:16 - the result of the sine function it's a
03:18 - variable value and if that's between a
03:21 - range of negative 1 1 and I could map
03:24 - that range to 0 into between 0 and 100
03:26 - of course I could just like multiply it
03:28 - by 50 and add 50 but let's use the NAP
03:31 - function why not it's there in p5 so I
03:33 - could say H is now mapped sine of the
03:37 - angle which has a range between negative
03:39 - 1 & 1/2 between 0 and 100 and what we
03:43 - should see now is this so this is the
03:46 - behavior I believe this is simple
03:49 - harmonic motion there's so much that you
03:51 - could do with this right
03:53 - think about layering these all moving at
03:55 - different rates offset from each other
03:57 - with different colors and sounds you
03:59 - know the world is your oyster now and
04:01 - what you could do is like simple
04:02 - harmonic motion but here what I'm going
04:04 - to attempt to do is I'm going to attempt
04:06 - to try to create this now actually I
04:10 - still think maybe I'm not ready for 3d
04:12 - because I think what I want to be able
04:14 - to know that I can do is put a bunch of
04:17 - these in a row all oscillating offset so
04:20 - can I take it make a 2d version of this
04:21 - first let's see if I can do that so how
04:24 - am I going to do that well I could
04:27 - need a loop so let me say X equals zero
04:31 - X is less than with X plus equal and let
04:37 - me go over by 10 pixels and then let me
04:43 - draw each one of these rectangles at X
04:45 - and I'm going to draw it with a width of
04:48 - 9 just so I can see see it in between so
04:51 - this okay so oh I forgot that I
04:54 - translate it to the center so please go
04:59 - away terminal so what I want to do is
05:03 - start X at well I'll just say X minus
05:07 - with divided by 2 here
05:10 - whoops what do I have wrong line 13 4
05:16 - let X equal 0 right okay so there we go
05:19 - now I have a whole sequence of these
05:21 - oscillating but obviously they're all
05:23 - oscillating together and if you see here
05:26 - they're all oscillating slightly offset
05:28 - from each other so what do I need I need
05:30 - an offset so let's make a variable
05:35 - called offset set it equal to 0 and I'm
05:38 - gonna say I mean let's I just wanna let
05:44 - me just say let a equal angle I'm just
05:47 - going to break this up into multiple
05:48 - lines of codes I think that makes things
05:49 - a little simpler so this is this is the
05:53 - same thing but now what I'm going to do
05:56 - is say angle plus offset and then that
05:59 - offset is going to change for each one
06:02 - of those and maybe let's just I don't
06:05 - know let's just try offsetting by the
06:07 - same amount that the angle is increasing
06:09 - so they're all just one step ahead at
06:11 - the previous one there we go
06:14 - now this has a totally different look to
06:17 - it and it's actually like kind of it
06:19 - looks like it's almost like this shape
06:20 - moving to the right I mean I don't know
06:22 - I think we could start to play should
06:23 - probably like hook up some sliders here
06:25 - like with different values I'm gonna get
06:27 - different sort of things like is but is
06:32 - this the right idea it's so funny
06:34 - because it really looks like this thing
06:35 - moving but what is it and maybe I if I
06:39 - make these thick
06:40 - like could I have less of that yeah
06:46 - there we go so you can see this it's
06:48 - really an optical illusion you know by
06:50 - how I play with the size and where there
06:53 - and also like the X should start so I
06:57 - need some more variables here let me
07:00 - make a variable called W which is the
07:02 - width of each one of these and I'm going
07:03 - to set that equal to 24 and I'm gonna
07:07 - say W minus 2 just to give a little
07:09 - buffer between them and then this is
07:12 - also where they start is wrecked X minus
07:15 - width divided by 2 plus W divided by 2
07:17 - and let's have the offset just be
07:20 - perfect again now we can see there we go
07:22 - so what you can see this is all that now
07:25 - in the B's and bombs GIF there certainly
07:29 - is this sense of the center going up and
07:32 - down rippling out to the outside so I
07:34 - might need to think about like how where
07:37 - what angles are starting where the
07:39 - offset is and that sort of thing but I
07:40 - think this is close enough so let's try
07:44 - moving this to 3d ok so a few things I
07:47 - want to do first thing first let's just
07:50 - add WebGL and let's just take out this
07:53 - translate dare I say if WebGL mode works
07:58 - the way I hope and dreams will work I'm
08:01 - actually gonna see the same exact thing
08:03 - right all I did was change the renderer
08:05 - I'm still drawing everything as 2d
08:06 - shapes I just changed the renderer and
08:08 - now I don't have to translate because by
08:10 - default the renderer thinks the center
08:12 - is the center the center of the canvas
08:14 - is zero zero all right so I'm not seeing
08:19 - the shape so let's just see let me
08:21 - change the background here yeah oh whoa
08:26 - first of all look how slow this is crazy
08:30 - how slow it is and the reason why I
08:34 - wasn't getting the the color proper is
08:38 - because well I really shouldn't be using
08:40 - these the rectangle function here in 3d
08:44 - so let's see if we can figure out let's
08:47 - try to make this a little better right
08:48 - now first of all let me put boxes in
08:52 - each in this spot so what I'm gonna do
08:54 - is I'm gonna say push I'm gonna add push
08:57 - and I'm gonna add pop and what I'm going
09:02 - to do is I'm going to just translate by
09:07 - the x-value zero zero and instead of
09:10 - drawing a rectangle I'm going to draw a
09:12 - box of that size so let's see what I get
09:19 - okay oh and incidentally now what I need
09:23 - to do is I need to translate X minus
09:27 - width divided by two so they're all
09:31 - those these are all boxes there are 3d
09:33 - boxes you can't see that they're three T
09:36 - because they don't they I've just seen
09:38 - them from the side but you'll have to
09:40 - bear with me here just to prove that
09:42 - they're 3d what might be worth doing is
09:45 - just saying something like rotate X by
09:48 - that angle so that angle that's
09:50 - affecting this side so we can see that
09:52 - they're there I'm gonna leave that in
09:53 - there just so that we can see this like
09:55 - slow rotation of the scene and I'll even
09:58 - slow it down by like a quarter so what I
10:01 - want to do now is let's see if I can how
10:04 - do I effect the heights only of those
10:05 - boxes so the box has a width a height
10:12 - and a depth so I want lips with the
10:16 - depth I'm just gonna have V W as well so
10:19 - the width and the depth which is along
10:21 - the z axis and the H is the height so
10:24 - let's try doing that there we go
10:27 - now they're spinning Wow look at this I
10:30 - think I'm getting somewhere
10:31 - wow this is kind of crazy looking oh let
10:35 - me take out that spinning let me move
10:40 - the whole thing down a little bit and
10:45 - let me zoom out from it a little bit so
10:47 - I'm gonna translate like everything down
10:50 - like 25 pixels and out like 50 pixels so
10:55 - we're kind of like zoomed away from it I
10:57 - want to see it from above a little bit
10:58 - so if I translate it down even further I
11:02 - guess I need to think about maybe the
11:04 - camera but or I might I could like sort
11:07 - of like
11:08 - rotate everything by like a slight
11:10 - amount like so I want to rotate along
11:13 - the x-axis by like 45 degrees or
11:17 - something oh no I wanted to say rotate X
11:23 - and I want to do it the other direction
11:26 - there we go so I just wanted to get some
11:29 - view on it that somewhat resembles sorry
11:32 - I lost this particular view now one
11:34 - thing you'll notice have you ever played
11:36 - the video game Qbert well what I what
11:40 - this looks like to me I believe is
11:42 - something called isometric perspective
11:44 - or no no no oh yeah orthographic
11:47 - perspective let's look at the p5.js
11:52 - reference for a second reference
11:54 - perspective
11:55 - yeah perspective perspective is a
11:59 - function that kind of says like hey this
12:03 - is where the Candice is what the camera
12:05 - can see this is its view of the world
12:07 - and actually what I want is this
12:11 - function ortho which sets up now there's
12:14 - not a lot of documentation here but it
12:16 - sets up so let me see if I can like
12:19 - orthographic perspective let me do an
12:26 - image search so this of--this is perfect
12:32 - so you can see this is a really nice
12:34 - image here to kind of demonstrate the
12:37 - difference perspective projection has
12:41 - this realistic view of sort of distance
12:44 - and of all of the this idea of like
12:48 - perspective of drawing if you were
12:49 - trying to learn a drawn perspective of
12:51 - how the lines come together to a point
12:53 - where as orthographic projection so
12:57 - perspective is the wrong word I'm saying
12:59 - orthographic perspective that's not
13:01 - right the idea here is the projection
13:03 - creates this highly uniform look and the
13:07 - video game Qbert is probably the most
13:12 - famous sort of example of this kind of
13:16 - orthographic projection so let's add
13:19 - earth
13:21 - graphic projection so I can give it a
13:24 - like a clipping plane or a sort of it's
13:27 - called a frustum like the bounding box
13:30 - of what I want to be able to see with
13:32 - orthographic projection or isometric
13:34 - projection but I think by default if I
13:37 - just say ortho it's going to change and
13:42 - we hit refresh and whoops let me put
13:46 - okay so yeah so you can see now it looks
13:49 - very flat now I need to be able to start
13:53 - to see the different sides of different
13:56 - colors so let me see if I can add maybe
13:59 - at least some directional lighting maybe
14:02 - let's see if I can just add some
14:03 - lighting from the top let me just say
14:06 - directional light 255 and let me add the
14:12 - light from the top so 255 255 255 and
14:17 - then I want the light to point down
14:19 - which is zero negative one comma zero so
14:24 - let's see if this gives us at least some
14:26 - shading mm-hmm and what if I did I
14:34 - probably still have fill in here ah
14:35 - right so I need to fill it's going to
14:37 - take over I need to just give it an
14:39 - ambient material ambient material will
14:43 - allow the box to be affected by the
14:46 - light there we go and I can make the
14:50 - oops and I want the light to be white
14:53 - and we make a make the background black
14:57 - yeah so I'm not really getting a lot of
15:00 - nuance here in terms of but let be let's
15:04 - make the boxes with a little less so
15:09 - there's some space okay
15:12 - and I want to be able to look at it now
15:19 - maybe I should just give it ambient
15:21 - light I could give the different sides
15:25 - I'm lost now alright so how come
15:32 - I am let me let me try rotating how can
15:40 - I see the tops how can I see this shape
15:43 - I need to figure this out
15:44 - Oh ambient light by the way so I don't
15:47 - want to use ambient light I could try a
15:49 - point light I'm looking I'm thinking I'm
15:54 - trying to maybe I'm gonna get a
15:55 - suggestion from the chat I just want to
15:58 - let me let me give it a normal material
16:00 - so normal material is a useful material
16:03 - for debugging because it just gives it
16:04 - an RGB colors to all the different
16:07 - vertices of the shape based on their XY
16:10 - and Z values let me give it normal
16:12 - material alright so actually I think
16:14 - this is doing what I wanted to do now
16:16 - I'm seeing the orthographic projection
16:19 - and I and the normal material is giving
16:21 - me RGB colors for all the vertices but
16:24 - let me let me make the background 100
16:26 - just so I can really see that there we
16:28 - go so this is actually I'm now looking
16:31 - at the correct thing but I'm not
16:32 - actually looking at isometric view
16:35 - here's the thing no I'm gonna leave this
16:36 - like this right now let's try to nest
16:38 - this Luke and let's have a bunch of
16:40 - these so what I'm going to do now is
16:42 - also add an inner loop let's add an
16:47 - outer loop let's add an outer loop for Y
16:54 - and what I'm gonna do with why now is
16:59 - translate Y - height / - okay and let's
17:04 - make the depth also a little bit smaller
17:08 - just to have some spacing there so okay
17:11 - X is not defined where oh this has to be
17:14 - Y thank you okay all right now is this
17:19 - doing what I wanted to do is it doing
17:24 - what I wanted to do and I just and I
17:27 - just a weird sort of view of it so let's
17:30 - try to start altering let's let I want
17:34 - to see what's going on here a little bit
17:36 - so what I'm gonna do actually is rotate
17:38 - X by that angle whoa I've really freaked
17:44 - it out
17:46 - let me take this out let me let me make
17:53 - this just fixed so what is going on for
18:01 - every X for every Y draw a little box
18:11 - okay oh they're all just right next to
18:14 - each other in a line Oh cuz I don't want
18:16 - to I don't want to go along the Y Pilar
18:21 - probably time and I need to use Z of
18:23 - course Z I'm not I'm not
18:26 - of course I need to the Z plane is what
18:29 - is allowing me to create this grid of
18:31 - them Y is what's moving up and down so
18:34 - oh I apologize for this so I'm actually
18:37 - gonna do Z I'll just leave height I'm
18:41 - gonna just I'm going to change the
18:42 - variable to Z though just because I feel
18:44 - like it's gonna be confusing and now
18:51 - yeah we should we see now I have this
18:53 - grid of them and I'm kind of spinning
18:55 - around it in a weird sort of way and
18:59 - what I'm going to do here is and I
19:05 - actually don't need this offset to
19:07 - subtract backwards I don't think Oh
19:10 - actually no that would be good to keep
19:11 - that in there okay
19:13 - what I want to do now hold on everybody
19:17 - is let me take this out okay now there's
19:22 - this plane of them let me put H back in
19:28 - and interestingly enough what's going on
19:33 - here sign
19:35 - Oh angle equals angle plus offset so I
19:38 - want the offset to happen right now just
19:43 - per per row
19:51 - okay so I see this whole row going up
19:55 - and down all right now here's the thing
19:58 - I need to be able to look at this I
20:00 - probably should have done this before I
20:01 - really should have done this before but
20:03 - if I look at isometric perspective
20:06 - actually to see isometric perspective
20:08 - what I need to do is first rotate by 45
20:12 - degrees all about the vertical axis
20:14 - which is X so I'm going to let's get rid
20:21 - of this translate which i think is
20:22 - unhooking leave that in there
20:24 - I don't need rec mode Center I'm gonna
20:26 - rotate X - quarter PI which is 45
20:31 - degrees let's see what that looks like
20:36 - all right that's kind of interesting
20:39 - what's going on here now I want to I I'm
20:43 - kind of looking at it from this weird
20:44 - like top to you I want to turn it so the
20:47 - next thing I want to do is rotate by Y
20:50 - of and let's look at this arc sine or
20:56 - arc tan so I could do one of these so
20:59 - I'm going to do arc tan of 1 divided by
21:02 - the square root of 2 and I should make
21:03 - this a constant somewhere that I save
21:06 - let's do let's call this magic angle and
21:11 - say let's call this I'm just gonna call
21:15 - this MA for magic angle ma equals a tan
21:20 - of square root of 1 divided by square
21:25 - root of 2
21:27 - so let's now rotate Y by that Thank You
21:32 - Alka for having suggested this there we
21:36 - go ooh okay
21:38 - we're in good shape here look I'm seeing
21:39 - this now here's the thing I've got a
21:41 - clipping plane issue like I'm not
21:43 - actually able to see the whole thing so
21:45 - let's deal with that I can with ortho I
21:48 - can say this is the range what I want to
21:50 - be able to see so I want to see between
21:51 - negative 200 and 200 between negative
21:54 - 200 and 200 on the Y and then I want to
21:57 - be I just want to be able to see like a
21:58 - lot along the Z okay that's everything
22:04 - and maybe I should zoom out a little bit
22:06 - just so it's a little further away from
22:11 - me hold on let's get rid of this
22:14 - translate and let's let's say 0 to 500
22:18 - there we go I think then alright
22:21 - oh it's like I've turned it over also
22:24 - boy what a mess so maybe this should be
22:27 - 200 and negative 200 there we go
22:30 - ah kind of getting somewhere look at
22:34 - this kinda getting somewhere okay now I
22:38 - need to deal with my clipping planes and
22:40 - I actually think it might be getting
22:41 - clipped in all whoops there we go I want
22:50 - to look at it from further away so I'm
22:51 - gonna create that so that was too much
22:54 - 300 let's try 300 and boy I could make
22:58 - these variables would really help there
22:59 - we go okay so I'm seeing this thing now
23:03 - it's kind of like a little bit off
23:05 - weirdly
23:09 - okay it's a little bit off weirdly and
23:12 - so what am I missing am I is this just
23:16 - need to be is it is that the Z that's
23:18 - getting clipped yeah okay so now I see
23:22 - the whole thing I see the whole shape
23:28 - now what I need to do is figure out the
23:32 - offset and what I think I could do if I
23:35 - think about this is the offset is not a
23:38 - value related to along the X or along
23:41 - the Y but how far it is from the center
23:45 - so what if I were to come back here and
23:48 - inside my loop have some kind of
23:52 - distance value be the distance between X
23:57 - and Z and not zero zero but with divided
24:03 - by 2 and height divided by two that's
24:05 - how far their I I feel like I should
24:08 - actually have just translated this whole
24:09 - thing off so I would made it easier but
24:12 - because I have all this like offsetting
24:13 - so that's the distance and instead of
24:16 - having this offset
24:17 - like increase what if I just say offset
24:21 - equals map that distance now what's the
24:24 - range I probably should figure out what
24:26 - the maximum distance is the maximum
24:29 - distance is max D is going to be the
24:36 - distance between the center and to under
24:40 - 200 really right that's kind of like the
24:43 - maximum distance so D has a range
24:46 - between 0 and max D and I want that
24:51 - offset I'm just going to make up
24:52 - something between negative 1 and 1 like
24:54 - I want an angular offset for each of
24:56 - those now let's look at this oh it's so
25:00 - slow but this is the right idea right so
25:03 - let's let's make this let's try to make
25:07 - this run a little faster boy boy p5 so
25:12 - there's probably lot of optimization
25:13 - that needs to be done for because we
25:14 - certainly can do this in WebGL we're all
25:17 - going to remake this so a couple things
25:19 - I want to do one is let me make this we
25:22 - make them bigger
25:26 - what is the slowdown okay that's a
25:30 - little bit better now I want this what
25:33 - its mapping to in terms of the height to
25:35 - be a lot taller yeah so I could I need
25:45 - to do some work with like pre saving all
25:47 - the geometry but then I'm getting Elka's
25:51 - making a good suggestion okay so I have
25:53 - to go this challenge the challenge is
25:56 - over let's have the offset be more twice
26:02 - as much there we go Hey look at this
26:15 - [Music]
26:17 - pretty close right pretty pretty pretty
26:22 - close so what have I not done what is I
26:26 - really need to deal with optimizing this
26:27 - one reason it's running so slow I think
26:30 - is actually it's kind of unhappy with
26:32 - having these floating-point numbers for
26:33 - the height of the box so I think if I
26:36 - change this to a two-floor the values
26:42 - but I am getting some weird artifacts
26:44 - here and that's actually if we look at
26:47 - the B's and bombs you'll see that it
26:50 - doesn't actually go to 0 it goes between
26:54 - some set of values so it goes between
26:58 - maybe like 100 and 300 let's try that
27:01 - whoops
27:05 - there we go
27:07 - so that is much more like now could i
27:09 - zoom out on this more so one way I could
27:16 - do that is by translating I don't know
27:22 - if this makes the most sense to do let
27:24 - me zoom out a little bit no you know
27:29 - what I need to do is just change the I
27:32 - think I need to be more thoughtful about
27:37 - the orthographic view okay so I zoomed
27:40 - out a little bit and make more cute let
27:43 - me make more cubes now so let me change
27:47 - this back to like 24 there we go
27:53 - how am i doing so this is moving faster
27:59 - and that offset is even more so let me
28:02 - let me map the offset and actually yeah
28:08 - negative three let me let me just I mean
28:10 - I probably should be thoughtful about
28:12 - this and have that offset be like you
28:16 - know some actual like angle well but
28:22 - that's half PI actually let me just have
28:28 - it between negative PI and PI let's try
28:30 - that there we go this is starting to
28:34 - look good and okay and now let me have
28:40 - it go a little bit faster here's the
28:50 - thing here's what's missing and I'm
28:51 - going to leave as a challenge for you
28:53 - the viewer number one is I've got the
28:56 - perspective slightly off here something
28:59 - slightly wrong right I don't have my
29:01 - angle exactly right right why is there
29:04 - this weird kind of like diagonal there
29:06 - it's also in Reverse everyone's time
29:09 - it's in Reverse so this has got to be an
29:10 - easy way to fix that oh yeah whoo that's
29:14 - kind of nice it's a little bit too fast
29:20 - [Applause]
29:20 - [Music]
29:24 - okay get all the way there but I got
29:27 - pretty close and so the challenge for
29:29 - you the viewer is to fix my mistakes
29:32 - something about the perspective is off I
29:34 - probably need to think about you know
29:36 - the speed and I might like to color use
29:38 - lighting to make it more beautiful what
29:40 - other types of 3d shapes so I'll rotate
29:44 - X after rotate Y can I just do this in
29:47 - the wrong order whoa that's kind of cool
29:52 - something different okay I got to go
29:54 - thanks for watching this coding
29:56 - challenge and I'll see you all later
30:02 - [Music]

Cleaned transcript:

all right this is my first coding challenge that I'm going to attempt in JavaScript using 3d rendering I am currently working on a set of tutorials about WebGL in p5.js I will link to those from this coding challenges video description but I bees and bombs on Twitter I highly recommend if you're interested in looking for like really geometric algorithmic mathematical illusion gifts that will kind of blow your mind check out the bees and bombs Twitter feed and look at this oh yeah look bees and bombs is watching this right now this is the gift I'm going to try to recreate in p5.js using the WebGL renderer okay so we'll see how this goes I'm just gonna get started so first I'm actually gonna just work in 2d because one thing that I need is just this night and I really need this in my life breathe in breathe out breathe in meditation I'm very high strong I really think to work on meditation and this is actually a nice calming soothing gift so I need something that can give me that oscillating behavior and the sine function simple harmonic motion the swinging of a pendulum the plucking of guitar string I do have some other video tutorials about that in processing and I will also link to from this video so first let's just make that happen in 2d so what I'm gonna do is I am going to have a variable I'm gonna call that variable angle and I'm gonna stick I'm not gonna I could add angle mode degrees to think in terms of degrees but I'm just gonna stick with radians I'm gonna say angle plus equals 0.1 then what I'm going to do and because once I get into WebGL mode the center zero zero and WebGL renderer is the center I'm actually just going to quickly translate to the center because I want to just do this in 2d real quick and let's draw loops let's draw let's say a rect mode Center and let's draw a rectangle so I want to draw a rectangle who which position is zero zero and its width is some arbitrary thing like 10 and it has some height so if I were to say let H equal 100 we would sorry we would add them in the wrong place we're gonna do here okay so that's that's one of these days I'm gonna be able to move between these okay so let's add a background that's black and let's add a fill that is 255 okay come on there we go there we go so there's that rectangle so what I want to see it now is breathe up and down oscillate up and down so the sine function is a function that will give me a value between negative 1 and 1 if I were to graph the sine function and the xaxis here I could think of that angle that's increasing over time I would see a curve like this and that curve is going to oscillate between plus 1 and negative 1 so I could certainly use the map function to and actually probably will I'll use the map function the math is not that complicated so I could take the result of the sine function it's a variable value and if that's between a range of negative 1 1 and I could map that range to 0 into between 0 and 100 of course I could just like multiply it by 50 and add 50 but let's use the NAP function why not it's there in p5 so I could say H is now mapped sine of the angle which has a range between negative 1 & 1/2 between 0 and 100 and what we should see now is this so this is the behavior I believe this is simple harmonic motion there's so much that you could do with this right think about layering these all moving at different rates offset from each other with different colors and sounds you know the world is your oyster now and what you could do is like simple harmonic motion but here what I'm going to attempt to do is I'm going to attempt to try to create this now actually I still think maybe I'm not ready for 3d because I think what I want to be able to know that I can do is put a bunch of these in a row all oscillating offset so can I take it make a 2d version of this first let's see if I can do that so how am I going to do that well I could need a loop so let me say X equals zero X is less than with X plus equal and let me go over by 10 pixels and then let me draw each one of these rectangles at X and I'm going to draw it with a width of 9 just so I can see see it in between so this okay so oh I forgot that I translate it to the center so please go away terminal so what I want to do is start X at well I'll just say X minus with divided by 2 here whoops what do I have wrong line 13 4 let X equal 0 right okay so there we go now I have a whole sequence of these oscillating but obviously they're all oscillating together and if you see here they're all oscillating slightly offset from each other so what do I need I need an offset so let's make a variable called offset set it equal to 0 and I'm gonna say I mean let's I just wanna let me just say let a equal angle I'm just going to break this up into multiple lines of codes I think that makes things a little simpler so this is this is the same thing but now what I'm going to do is say angle plus offset and then that offset is going to change for each one of those and maybe let's just I don't know let's just try offsetting by the same amount that the angle is increasing so they're all just one step ahead at the previous one there we go now this has a totally different look to it and it's actually like kind of it looks like it's almost like this shape moving to the right I mean I don't know I think we could start to play should probably like hook up some sliders here like with different values I'm gonna get different sort of things like is but is this the right idea it's so funny because it really looks like this thing moving but what is it and maybe I if I make these thick like could I have less of that yeah there we go so you can see this it's really an optical illusion you know by how I play with the size and where there and also like the X should start so I need some more variables here let me make a variable called W which is the width of each one of these and I'm going to set that equal to 24 and I'm gonna say W minus 2 just to give a little buffer between them and then this is also where they start is wrecked X minus width divided by 2 plus W divided by 2 and let's have the offset just be perfect again now we can see there we go so what you can see this is all that now in the B's and bombs GIF there certainly is this sense of the center going up and down rippling out to the outside so I might need to think about like how where what angles are starting where the offset is and that sort of thing but I think this is close enough so let's try moving this to 3d ok so a few things I want to do first thing first let's just add WebGL and let's just take out this translate dare I say if WebGL mode works the way I hope and dreams will work I'm actually gonna see the same exact thing right all I did was change the renderer I'm still drawing everything as 2d shapes I just changed the renderer and now I don't have to translate because by default the renderer thinks the center is the center the center of the canvas is zero zero all right so I'm not seeing the shape so let's just see let me change the background here yeah oh whoa first of all look how slow this is crazy how slow it is and the reason why I wasn't getting the the color proper is because well I really shouldn't be using these the rectangle function here in 3d so let's see if we can figure out let's try to make this a little better right now first of all let me put boxes in each in this spot so what I'm gonna do is I'm gonna say push I'm gonna add push and I'm gonna add pop and what I'm going to do is I'm going to just translate by the xvalue zero zero and instead of drawing a rectangle I'm going to draw a box of that size so let's see what I get okay oh and incidentally now what I need to do is I need to translate X minus width divided by two so they're all those these are all boxes there are 3d boxes you can't see that they're three T because they don't they I've just seen them from the side but you'll have to bear with me here just to prove that they're 3d what might be worth doing is just saying something like rotate X by that angle so that angle that's affecting this side so we can see that they're there I'm gonna leave that in there just so that we can see this like slow rotation of the scene and I'll even slow it down by like a quarter so what I want to do now is let's see if I can how do I effect the heights only of those boxes so the box has a width a height and a depth so I want lips with the depth I'm just gonna have V W as well so the width and the depth which is along the z axis and the H is the height so let's try doing that there we go now they're spinning Wow look at this I think I'm getting somewhere wow this is kind of crazy looking oh let me take out that spinning let me move the whole thing down a little bit and let me zoom out from it a little bit so I'm gonna translate like everything down like 25 pixels and out like 50 pixels so we're kind of like zoomed away from it I want to see it from above a little bit so if I translate it down even further I guess I need to think about maybe the camera but or I might I could like sort of like rotate everything by like a slight amount like so I want to rotate along the xaxis by like 45 degrees or something oh no I wanted to say rotate X and I want to do it the other direction there we go so I just wanted to get some view on it that somewhat resembles sorry I lost this particular view now one thing you'll notice have you ever played the video game Qbert well what I what this looks like to me I believe is something called isometric perspective or no no no oh yeah orthographic perspective let's look at the p5.js reference for a second reference perspective yeah perspective perspective is a function that kind of says like hey this is where the Candice is what the camera can see this is its view of the world and actually what I want is this function ortho which sets up now there's not a lot of documentation here but it sets up so let me see if I can like orthographic perspective let me do an image search so this ofthis is perfect so you can see this is a really nice image here to kind of demonstrate the difference perspective projection has this realistic view of sort of distance and of all of the this idea of like perspective of drawing if you were trying to learn a drawn perspective of how the lines come together to a point where as orthographic projection so perspective is the wrong word I'm saying orthographic perspective that's not right the idea here is the projection creates this highly uniform look and the video game Qbert is probably the most famous sort of example of this kind of orthographic projection so let's add earth graphic projection so I can give it a like a clipping plane or a sort of it's called a frustum like the bounding box of what I want to be able to see with orthographic projection or isometric projection but I think by default if I just say ortho it's going to change and we hit refresh and whoops let me put okay so yeah so you can see now it looks very flat now I need to be able to start to see the different sides of different colors so let me see if I can add maybe at least some directional lighting maybe let's see if I can just add some lighting from the top let me just say directional light 255 and let me add the light from the top so 255 255 255 and then I want the light to point down which is zero negative one comma zero so let's see if this gives us at least some shading mmhmm and what if I did I probably still have fill in here ah right so I need to fill it's going to take over I need to just give it an ambient material ambient material will allow the box to be affected by the light there we go and I can make the oops and I want the light to be white and we make a make the background black yeah so I'm not really getting a lot of nuance here in terms of but let be let's make the boxes with a little less so there's some space okay and I want to be able to look at it now maybe I should just give it ambient light I could give the different sides I'm lost now alright so how come I am let me let me try rotating how can I see the tops how can I see this shape I need to figure this out Oh ambient light by the way so I don't want to use ambient light I could try a point light I'm looking I'm thinking I'm trying to maybe I'm gonna get a suggestion from the chat I just want to let me let me give it a normal material so normal material is a useful material for debugging because it just gives it an RGB colors to all the different vertices of the shape based on their XY and Z values let me give it normal material alright so actually I think this is doing what I wanted to do now I'm seeing the orthographic projection and I and the normal material is giving me RGB colors for all the vertices but let me let me make the background 100 just so I can really see that there we go so this is actually I'm now looking at the correct thing but I'm not actually looking at isometric view here's the thing no I'm gonna leave this like this right now let's try to nest this Luke and let's have a bunch of these so what I'm going to do now is also add an inner loop let's add an outer loop let's add an outer loop for Y and what I'm gonna do with why now is translate Y height / okay and let's make the depth also a little bit smaller just to have some spacing there so okay X is not defined where oh this has to be Y thank you okay all right now is this doing what I wanted to do is it doing what I wanted to do and I just and I just a weird sort of view of it so let's try to start altering let's let I want to see what's going on here a little bit so what I'm gonna do actually is rotate X by that angle whoa I've really freaked it out let me take this out let me let me make this just fixed so what is going on for every X for every Y draw a little box okay oh they're all just right next to each other in a line Oh cuz I don't want to I don't want to go along the Y Pilar probably time and I need to use Z of course Z I'm not I'm not of course I need to the Z plane is what is allowing me to create this grid of them Y is what's moving up and down so oh I apologize for this so I'm actually gonna do Z I'll just leave height I'm gonna just I'm going to change the variable to Z though just because I feel like it's gonna be confusing and now yeah we should we see now I have this grid of them and I'm kind of spinning around it in a weird sort of way and what I'm going to do here is and I actually don't need this offset to subtract backwards I don't think Oh actually no that would be good to keep that in there okay what I want to do now hold on everybody is let me take this out okay now there's this plane of them let me put H back in and interestingly enough what's going on here sign Oh angle equals angle plus offset so I want the offset to happen right now just per per row okay so I see this whole row going up and down all right now here's the thing I need to be able to look at this I probably should have done this before I really should have done this before but if I look at isometric perspective actually to see isometric perspective what I need to do is first rotate by 45 degrees all about the vertical axis which is X so I'm going to let's get rid of this translate which i think is unhooking leave that in there I don't need rec mode Center I'm gonna rotate X quarter PI which is 45 degrees let's see what that looks like all right that's kind of interesting what's going on here now I want to I I'm kind of looking at it from this weird like top to you I want to turn it so the next thing I want to do is rotate by Y of and let's look at this arc sine or arc tan so I could do one of these so I'm going to do arc tan of 1 divided by the square root of 2 and I should make this a constant somewhere that I save let's do let's call this magic angle and say let's call this I'm just gonna call this MA for magic angle ma equals a tan of square root of 1 divided by square root of 2 so let's now rotate Y by that Thank You Alka for having suggested this there we go ooh okay we're in good shape here look I'm seeing this now here's the thing I've got a clipping plane issue like I'm not actually able to see the whole thing so let's deal with that I can with ortho I can say this is the range what I want to be able to see so I want to see between negative 200 and 200 between negative 200 and 200 on the Y and then I want to be I just want to be able to see like a lot along the Z okay that's everything and maybe I should zoom out a little bit just so it's a little further away from me hold on let's get rid of this translate and let's let's say 0 to 500 there we go I think then alright oh it's like I've turned it over also boy what a mess so maybe this should be 200 and negative 200 there we go ah kind of getting somewhere look at this kinda getting somewhere okay now I need to deal with my clipping planes and I actually think it might be getting clipped in all whoops there we go I want to look at it from further away so I'm gonna create that so that was too much 300 let's try 300 and boy I could make these variables would really help there we go okay so I'm seeing this thing now it's kind of like a little bit off weirdly okay it's a little bit off weirdly and so what am I missing am I is this just need to be is it is that the Z that's getting clipped yeah okay so now I see the whole thing I see the whole shape now what I need to do is figure out the offset and what I think I could do if I think about this is the offset is not a value related to along the X or along the Y but how far it is from the center so what if I were to come back here and inside my loop have some kind of distance value be the distance between X and Z and not zero zero but with divided by 2 and height divided by two that's how far their I I feel like I should actually have just translated this whole thing off so I would made it easier but because I have all this like offsetting so that's the distance and instead of having this offset like increase what if I just say offset equals map that distance now what's the range I probably should figure out what the maximum distance is the maximum distance is max D is going to be the distance between the center and to under 200 really right that's kind of like the maximum distance so D has a range between 0 and max D and I want that offset I'm just going to make up something between negative 1 and 1 like I want an angular offset for each of those now let's look at this oh it's so slow but this is the right idea right so let's let's make this let's try to make this run a little faster boy boy p5 so there's probably lot of optimization that needs to be done for because we certainly can do this in WebGL we're all going to remake this so a couple things I want to do one is let me make this we make them bigger what is the slowdown okay that's a little bit better now I want this what its mapping to in terms of the height to be a lot taller yeah so I could I need to do some work with like pre saving all the geometry but then I'm getting Elka's making a good suggestion okay so I have to go this challenge the challenge is over let's have the offset be more twice as much there we go Hey look at this pretty close right pretty pretty pretty close so what have I not done what is I really need to deal with optimizing this one reason it's running so slow I think is actually it's kind of unhappy with having these floatingpoint numbers for the height of the box so I think if I change this to a twofloor the values but I am getting some weird artifacts here and that's actually if we look at the B's and bombs you'll see that it doesn't actually go to 0 it goes between some set of values so it goes between maybe like 100 and 300 let's try that whoops there we go so that is much more like now could i zoom out on this more so one way I could do that is by translating I don't know if this makes the most sense to do let me zoom out a little bit no you know what I need to do is just change the I think I need to be more thoughtful about the orthographic view okay so I zoomed out a little bit and make more cute let me make more cubes now so let me change this back to like 24 there we go how am i doing so this is moving faster and that offset is even more so let me let me map the offset and actually yeah negative three let me let me just I mean I probably should be thoughtful about this and have that offset be like you know some actual like angle well but that's half PI actually let me just have it between negative PI and PI let's try that there we go this is starting to look good and okay and now let me have it go a little bit faster here's the thing here's what's missing and I'm going to leave as a challenge for you the viewer number one is I've got the perspective slightly off here something slightly wrong right I don't have my angle exactly right right why is there this weird kind of like diagonal there it's also in Reverse everyone's time it's in Reverse so this has got to be an easy way to fix that oh yeah whoo that's kind of nice it's a little bit too fast okay get all the way there but I got pretty close and so the challenge for you the viewer is to fix my mistakes something about the perspective is off I probably need to think about you know the speed and I might like to color use lighting to make it more beautiful what other types of 3d shapes so I'll rotate X after rotate Y can I just do this in the wrong order whoa that's kind of cool something different okay I got to go thanks for watching this coding challenge and I'll see you all later
