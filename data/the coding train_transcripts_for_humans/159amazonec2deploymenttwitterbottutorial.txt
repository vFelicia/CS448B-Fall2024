With timestamps:

00:00 - hello in this video I'm going to look at
00:02 - how you can deploy a twitterbot written
00:05 - in node.js to an Amazon ec2 instance in
00:09 - particular one of the reasons I want to
00:11 - use an Amazon ec2 instance in this case
00:13 - is because not only is my twitterbot
00:15 - written in node.js but my twitterbot
00:18 - triggers a processing sketch which is a
00:20 - Java program to create an image and that
00:23 - image is posted to Twitter so if you
00:25 - want to uh make a image producing
00:28 - twitterbot this is one solution for you
00:31 - this is not the be all end all solution
00:32 - of course there's lots of ways to write
00:34 - Twitter Bots and there's lots of ways to
00:35 - make images but you can see here so I'm
00:38 - in a moment I'm going to start going
00:39 - through those steps but let's just kind
00:41 - of get a lay of the land here for a
00:43 - second so here you can see this is a
00:46 - particular twitterbot it posts an image
00:48 - made from processing you can see the
00:49 - image here this is the processing sketch
00:52 - if I run the processing sketch here you
00:54 - can see it just draws this particular
00:56 - image uh it also saves it to a file and
00:59 - exits um because here now is the code
01:03 - you can see the code in node is
01:05 - triggering that processing sketch here
01:08 - uh and now if I run that
01:12 - code the image bot is starting it says
01:16 - it worked and if I go back to
01:19 - Twitter we can see here I got another
01:22 - one now these two images are different
01:24 - even though they look remarkably the
01:25 - same remarkably similar um but um they
01:29 - are they are different right someone
01:31 - doing a quick pixel analysis they're
01:33 - different they have to be different
01:34 - otherwise my whole understanding of the
01:36 - way the universe works is faulty okay so
01:39 - now we see this is how we you run this
01:41 - stuff locally this is what I did in all
01:42 - the previous uh videos in this playlist
01:45 - about node Twitter bot things now we
01:48 - need to look at how do we uh how do we
01:50 - uh deploy this stuff to an Amazon ec2
01:53 - instance you know basically you know any
01:56 - of any Linux uh uh Linux server um you
01:59 - could all these same steps and I'm just
02:01 - going to happen to use Amazon and I was
02:03 - able to do this with a free account now
02:06 - at some point you might discover you
02:07 - have to pay but for the most part seems
02:09 - like you can run this using uh free
02:11 - credits at least for quite a long time
02:13 - okay so I do happen to have these notes
02:15 - online on a web page which will be
02:17 - linked to in the description of this
02:19 - video which presumably you are watching
02:20 - at some other time than the actual
02:22 - moment that I'm speaking right now um
02:24 - but the first thing I'm going to do here
02:26 - is go to this link Amazon ec2 but
02:28 - actually I can just type in Amazon e C2
02:30 - probably into Google and uh I'm going to
02:34 - even just uh go down here and click on
02:36 - the first result and what I want to do
02:39 - is sign into the console the console is
02:41 - where I'm going to get to configure my
02:43 - server so that's the first thing I want
02:44 - to do sign into the
02:46 - console and then I have to enter in my
02:52 - password uh and I don't want Chrome to
02:55 - save it okay ah I'm presented with this
02:58 - terrifying page of like 50 zillion
03:01 - things we could do I there's so much
03:03 - here I have no idea what any of it does
03:05 - but up here in the top left ec2 virtual
03:08 - servers in the cloud floating in the air
03:12 - um so uh those servers which are more
03:14 - likely in an underground bunker
03:15 - somewhere not in a cloud but uh this is
03:18 - what I want I want to run a server
03:19 - somewhere else where I can run this
03:21 - particular bot so I'm going to click on
03:24 - ec2 and I get an ec2 Management console
03:28 - and oh good
03:30 - oh no I do I have I currently have one
03:33 - running instance which is I guess
03:35 - probably some previous test that I did
03:37 - at another time but I'm going to just
03:39 - click launch
03:40 - instance uh and now I'm presented also
03:43 - with a terrifying set of objects of op
03:45 - of objects of options so I'm going to go
03:47 - back to my notes page where I said this
03:50 - is the one that I happen to use so
03:52 - there's different versions of Linux
03:54 - operating systems and different kinds of
03:56 - and uh um the the the key things that
03:59 - I'm looking for one is free tier
04:01 - eligible I'm going to see if I can get
04:02 - this running on the free tier the other
04:04 - is I need one that can also not just run
04:06 - node but run Java and so happens that
04:08 - this ubut server
04:10 - 14.04 it happens to also be able to run
04:13 - uh Java I also want to make sure I pick
04:15 - general purpose free tier micro and then
04:17 - set review and launch so I'm going to do
04:20 - that I'm going to look for that one
04:22 - which is this one I'm going to hit
04:24 - select over here I don't know if you
04:25 - guys can see this I should make the but
04:27 - Ubuntu Server 1404 I'm going to hit
04:30 - select uh a general purpose T2 free tier
04:34 - eligible I'm going to hit review and
04:38 - launch and now it is
04:42 - launched um great oh no launch now I'm
04:46 - gonna hit
04:47 - launch and ah okay so
04:51 - ah so here's so if okay so here's the
04:54 - deal this is the weirdest part of
04:56 - working with Amazon ec2 is how you're
04:58 - going to now authenticate and log into
05:00 - it and you need to create this secret
05:02 - file that holds the keys to your server
05:05 - now apparently I've been here before and
05:08 - I've made a bunch of these because I was
05:10 - showing different uh examples so you
05:12 - likely won't have any previous Keys you
05:15 - can use so but I'm going to create a new
05:18 - key pair so I need to give it a name and
05:20 - I'm going to call it coding rainbow if
05:23 - you can see that and I'm going to then
05:24 - click download key pair oh yikes ah what
05:29 - happened
05:31 - I'm zooming like a I've completely lost
05:33 - my ability to zoom effectively so I'm
05:36 - going to hit download
05:38 - Keir and we should see hopefully uh that
05:43 - ah you can see here uh oh I'm standing
05:45 - in front of it but down here under my
05:47 - downloads uh in the downloads there is
05:50 - now this file coding rainbow. pem you
05:55 - must have this file I now need that file
05:57 - always and forever to to log into uh
06:01 - this ec2 instance in a variety of
06:03 - different ways that I'll show you okay
06:05 - so I have that file now and uh now I
06:09 - should be able to now finally say launch
06:11 - instances now that I have that file I
06:13 - can say launch instances and I'm waiting
06:16 - your instances are now
06:18 - launching and now I can go to view
06:22 - instances and uh I don't I'm not
06:25 - worrying about that right now so you can
06:27 - see this is clearly one that I made a
06:30 - while ago uh when I was doing another
06:31 - tutorial or another test or um and you
06:34 - can see this one hasn't actually
06:36 - completely launched yet um so this is
06:39 - the problem of making these videos in
06:40 - real time where I I I I sometimes uh I
06:45 - just stand here like completely
06:46 - awkwardly like dumbfounded I don't know
06:48 - what to do it's pending let's go to the
06:49 - next steps and when we come back
06:51 - hopefully it'll be um hopefully it'll be
06:53 - working so okay so uh I I followed these
06:56 - steps I did this part now aha okay so
07:00 - what I need to do now is use that key
07:04 - that file to be able to log into that
07:06 - instance so the way that the first thing
07:09 - I need to do is actually change the
07:11 - files
07:12 - permissions so files on computers have
07:14 - permissions some files are like locked
07:17 - and you can't edit them some files are
07:18 - applications that can be executable this
07:21 - particular key file needs uh CH stands
07:24 - for like change modif actually what does
07:26 - it stand for somebody tell me somebody
07:28 - write I'll do an ation here say but I I
07:30 - need to run this command to change its
07:32 - file permissions so what I'm going to do
07:37 - is uh first thing I need to do is I need
07:39 - to go to where that file is so actually
07:42 - I'm just going to put that file on the
07:44 - desktop you can come up with a better
07:47 - place to put it uh and I'm going to go
07:50 - to the desktop and I can see there is
07:53 - that
07:54 - file and uh I guess I'm zoomed in or
07:57 - something uh so now now what I want to
08:00 - do is oops type in this particular
08:05 - command chod 400 and then that file name
08:09 - which is was coding rainbow. PM so
08:13 - that's the first thing I've done I've
08:14 - now change the file permissions to 400
08:17 - for that particular file and then now I
08:21 - can you do something called
08:24 - SSH ssh secure shell um so basically
08:29 - what I want to do is in the same way
08:32 - that I have my I'm here in terminal on
08:35 - my computer and I can look at the files
08:37 - by saying LS I can run the files by
08:39 - saying like node what I want to do is be
08:42 - able to remote into that Amazon ec2
08:45 - instance so that the terminal I'm
08:47 - looking at the commands I'm typing are
08:49 - actually not running on my laptop which
08:52 - is here that was dangerous to pick it up
08:54 - not running on this laptop but actually
08:56 - the commands are executing on the server
08:58 - floating in the Cloud that's buried in
09:00 - the underground bunker okay so uh let's
09:03 - see here if ah so me rambling for a long
09:07 - period of time we're at 9 minutes here
09:09 - has actually caused this this instance
09:12 - to be running I don't know why it
09:13 - doesn't have a name here let me give it
09:14 - a
09:16 - name so um and one thing I can do here
09:19 - uh if I zoom in and rightclick see this
09:22 - connect option this is going to be
09:24 - really useful to me because actually it
09:26 - gives me all of right this is the
09:29 - command it's got I've got the command
09:31 - right here uh this is like the public
09:34 - this is like the I the address
09:36 - essentially of that instance and then
09:39 - here it's actually giving me the exact
09:42 - command to log into it so I don't even
09:45 - need to figure out what it is uh I can
09:47 - just copy this and go back to terminal
09:51 - and paste that in here hit enter and
09:55 - okay this is the first time that I'm
09:57 - connecting so my computer is saying H I
09:59 - don't know about this I haven't
10:01 - connected this place before is anything
10:03 - is there anything that I should be
10:04 - afraid of here it's nothing so I should
10:05 - hit type
10:07 - yes and now it's added and then I just
10:10 - sit here and I hope I wait and I hope
10:13 - that the internet will oblig me and
10:15 - connect ah there we go so look at that
10:18 - you can now see here that I am connected
10:21 - I have logged in under my new name
10:23 - Ubuntu to my new address IP 17231 34179
10:29 - so now I can do things like say uh PWD
10:33 - with print working directory here I am
10:35 - in home/ Ubuntu I can type LS and I can
10:38 - see there's nothing there so now this is
10:42 - great right this bot which I have here
10:46 - locally on my computer I want to be able
10:48 - to get it over here on my Amazon ec2
10:51 - instance so how do I upload files there
10:54 - so the way one way to upload files to
10:56 - your Amazon ec2 instance is with uh uh
11:01 - FTP or file transfer protocol secure FTP
11:04 - so the way that I could do that is you
11:06 - can use any any FTP software and all
11:10 - sorts of there's probably a way to do it
11:11 - through the web through a browser but
11:13 - I'm going to use something called
11:15 - cyberduck uh which you can Google and
11:17 - download I already have it installed
11:18 - here and so I'm going to run cyberduck
11:21 - apparently I and what I'm going to do
11:23 - here I have a cyberduck open what I want
11:26 - to hit is this open connection so I
11:29 - click open connection and now I have
11:32 - this window where what I need to do is
11:36 - put in all the information for that
11:38 - Amazon ec2 instance so first thing I
11:41 - want to do is make sure I do SFTP it's
11:43 - got to be secure shell F transfer
11:46 - protocol and then the server address if
11:50 - I go back to here should be this right
11:54 - this is connect to your instance using
11:56 - the public DNS it's this so I'm going to
11:59 - copy this and go back to
12:01 - cyberduck paste that in here
12:05 - now there's this interesting question
12:07 - here which is what's my username and
12:09 - password well I don't have a username
12:11 - and password I have this weird coding
12:13 - rainbow. PM private key file it turns
12:17 - out in cyberduck under here under more
12:19 - options I can click that and I can say
12:23 - use public key
12:25 - authentication so I click that and now I
12:28 - go to the desktop and I select this
12:31 - file and
12:33 - now I um I've now have this file
12:37 - selected as my way of authenticating and
12:40 - I should be able to just say
12:43 - connect oh maybe I need to write Ubuntu
12:46 - here just in the uh
12:51 - username and uh ah it works okay so that
12:55 - was one little step that I had
12:56 - personally forgotten that I need to put
12:58 - in the username I need to say Ubuntu but
13:00 - now I just have this window here right
13:02 - this is now a view into home/ Ubuntu so
13:05 - what do I want to do I want to go and I
13:08 - want to just go here this is this folder
13:10 - here node five is where I have all of my
13:15 - stuff and I'm actually just I'm just
13:17 - going to take um bot config and
13:20 - package.json I'm just going to upload
13:22 - those files right now so I can drag them
13:24 - in here drag those files into here and
13:27 - they're now uploading Windows telling me
13:30 - progress they're transferring I can see
13:32 - that those files are listed here right
13:33 - now and now I can go back here and I can
13:37 - say LS and you can see those files are
13:40 - there yay these things are working so
13:44 - now running out of breath
13:46 - here um now I can type in node and you
13:51 - no this is going to not work because I
13:52 - I've I've missed a set of steps here but
13:55 - node bot.
13:56 - js and
13:59 - so what's happening here the program
14:01 - node can be found in the following
14:03 - packages node nodejs Legacy so and then
14:07 - saying pseudo app get install selected
14:09 - package so one thing we first have to do
14:11 - is at least configure node to work that
14:14 - the way that we want it to work and I
14:16 - believe that I have mentioned that here
14:19 - uh and these are some steps that you can
14:22 - do so let's actually just run through
14:24 - these steps the first thing I want to do
14:26 - is call WR uh do pseudo apt get update
14:31 - so what that does is just says this apt
14:33 - get thing which is a tool to like get
14:35 - things like node and other software I
14:37 - want to make sure it's updated and has
14:39 - all of the most recent stuff so that's
14:41 - done then the next thing I want to do is
14:44 - install
14:45 - nodejs which say pseudo app get install
14:49 - nodejs so I'm going to run that uh my
14:53 - audio is still working uh this is asking
14:55 - me if I want to use the disk space which
14:57 - of course I do um so I'm going to run
14:59 - and install
15:00 - nodejs which is great then I also want
15:02 - to make sure I have npm installed which
15:05 - is node package manager which you might
15:07 - remember from the previous node
15:09 - tutorials uh and this needs 130
15:11 - megabytes of disc space so hopefully
15:13 - this doesn't take too long um so um this
15:16 - is installing now the next step while
15:18 - it's installing let's talk about the
15:19 - next step for a second
15:22 - um this is now a a command to make sure
15:28 - that the particular version of node that
15:31 - I installed is now the actual version of
15:34 - node that will run when I type in the
15:36 - node command um so I am going to grab
15:42 - this command here and hope that this is
15:45 - done it's done and I'm going to because
15:48 - watch what happens if I just type node
15:50 - right now it doesn't actually know what
15:52 - node it can be found in the it's like
15:54 - well which one should I run nodejs
15:56 - Legacy or this one node so I want to
15:58 - make sure that I run this particular one
16:01 - with that command and now when I type
16:03 - node you'll see I'm in node so now I
16:06 - have node running on my Amazon ec2
16:09 - instance and I can oh wait if I say
16:11 - clear here oh it does still work I can
16:13 - say uh node bot. js now first error I
16:18 - get is it cannot find module twit this
16:20 - is going to be notice when I uploaded my
16:23 - files remember how I said I uploaded the
16:25 - files I didn't upload the directory that
16:27 - said node modules I could have uploaded
16:30 - that directory but it makes more sense
16:32 - for me to just let those modules get
16:34 - installed by Amazon itself so I can just
16:37 - type in npm
16:40 - install and it's now going to install
16:42 - all the modules that are needed for this
16:44 - particular bot we went through this
16:46 - locally now I'm doing this on the server
16:48 - so if if we looked here and I said I
16:51 - refreshed you can see that now there is
16:53 - a directory called node modules which
16:55 - has for example that twit module in it
16:58 - so now I should be able to say node bot.
17:01 - js and it will run now here's the thing
17:05 - it runs so these are all the steps you
17:08 - need if you just have a plain old bot
17:10 - that only runs in node but the reason
17:12 - why I got an error now is it can't find
17:15 - that image file
17:18 - output.png the reason why it can't find
17:21 - that image file output.png is because
17:24 - that's the image file that's created by
17:25 - the processing sketch so while this part
17:28 - the video I've now concluded like you
17:30 - could if you just have a node.js bot
17:33 - you're kind of done although there's
17:34 - another step of getting it to run after
17:36 - you log out which I will get to Let's uh
17:39 - but let's get the let's get the image
17:41 - itself to let's get the image making
17:44 - processing sketch to run as well so
17:47 - let's look at how we do that and there's
17:48 - a lot of like sort of uh awfully scary
17:51 - looking weird commands to do that okay
17:54 - uh oh but
17:55 - um actually so um yeah I'll come back to
17:59 - the forever thing okay so the first
18:01 - thing we need to do is make sure Java is
18:04 - on our uh server so first thing I want
18:07 - to do is install Java which I want to
18:09 - say apt get install default
18:12 - JRE uh so I'm going to put that in and
18:15 - run that and it's going to take 209
18:18 - megabytes of disc space I'm going to say
18:19 - yes so now I'm installing
18:22 - Java and I'm going to wait for that to
18:24 - install let's go back while we're doing
18:26 - that to the next step The Next Step okay
18:28 - so look at all these like terrifyingly
18:31 - weird looking commands so what's the
18:33 - weird thing that has to
18:36 - happen when you work when you work with
18:38 - processing on a computer your computer
18:40 - is typically connected to a monitor a
18:43 - screen and you're seeing the output of
18:45 - processing on that screen your Amazon
18:48 - ec2 instance has no screen it has no
18:50 - goey interface it's just a server that
18:53 - you can SSH into or FTP files to but
18:56 - it's known as headless meaning
18:59 - processing actually when it runs it
19:01 - breaks because it's like I don't know
19:02 - what Graphics thing to draw anything to
19:04 - there is no Graphics thing so these next
19:07 - steps are steps that create a fake
19:10 - display essentially the ec2 instance has
19:14 - this display you're tricking it into
19:16 - thinking that it is connected to a
19:17 - display because we don't need to see it
19:19 - we just want the graphics to be rendered
19:20 - to a file so the first thing I'm going
19:23 - to do is install something called xvfb
19:25 - which you could uh Google to find out
19:28 - what it
19:29 - is uh I'm going to run this particular
19:31 - command which will install this tool for
19:34 - a fake display the other thing I'm going
19:37 - to do
19:38 - is uh give it a now I'm going to give it
19:41 - an actual screen which is has a
19:43 - resolution of 1024 by 768 why
19:47 - not so I will do that it gives some
19:51 - weird little errors but you know big
19:54 - deal so this seems to be running a
19:56 - process that um um uh I need to like now
20:01 - quit out of so I'm going to hit control
20:02 - C to do that uh and then I'm ah okay so
20:08 - this was this was the command that
20:10 - creates that screen and that screen was
20:12 - there only while it's running um but I
20:15 - also now need to export it and and
20:17 - assign it to be display one so so
20:19 - actually these commands are no good so
20:22 - this is the command let me uh let me
20:24 - explain that again so I'm going to run
20:25 - this Command
20:27 - right and that screen now exists for
20:30 - processing to draw into but I can't type
20:32 - in any other commands here because it's
20:35 - like running so what I needed to do is I
20:37 - needed to run in the background and a
20:39 - command for having things run in the
20:41 - background is no
20:43 - hup so I'm actually going to say this
20:49 - now and now you can see I'm back to my
20:53 - terminal but that screen is now created
20:55 - and I also just want to assign it
20:57 - display display number one that's what
20:59 - processing will draw to display number
21:01 - one so that's
21:03 - done so now we're in good shape now
21:06 - here's the thing if we go
21:10 - back to the code you'll notice here this
21:14 - is the code that I ran locally on my
21:16 - laptop for triggering processing to run
21:19 - processing Das Java but actually now
21:23 - that I'm on a Amazon server boy this is
21:26 - I'm 20 minutes is anybody still watching
21:28 - this 20 minutes into a tour about
21:30 - uploading stuff to Amazon ec2
21:32 - but I have now um I'm now on an Amazon
21:36 - ec2 instance which is a Linux machine so
21:39 - there's actually a different way that I
21:40 - can do this I can go to my processing
21:43 - sketch and I can go under file export
21:47 - application so export application is
21:50 - something you can always do and it opens
21:52 - up a little window and what I want to
21:54 - actually do is check
21:56 - Linux okay I want to export it as a
22:00 - Linux application now there is this
22:03 - embed Java option which I'm kind of
22:06 - confused whether I want to select did
22:09 - I I don't recall whether I need to
22:12 - select that or not let's try unselecting
22:16 - it uh I probably should keep it selected
22:19 - but let's try unselecting it and I'm
22:21 - going to hit
22:23 - export so you can see here now I have um
22:28 - the Linux application incidentally
22:30 - here's a version that you could run on a
22:32 - Raspberry Pi which we'll get to
22:34 - later so now um I should be able to go
22:38 - back and uh upload
22:42 - this um to okay so I I I'm going to have
22:45 - this application which I want to include
22:47 - so oh no ah boy this tutorial is not
22:49 - going very well that light went off
22:51 - camera went off I don't know why this
22:53 - light keeps going off um so I'm going to
22:57 - now now what I need to do is I need
23:01 - to take this folder and I'm going to
23:05 - upload that
23:08 - folder
23:09 - to
23:11 - oops my server so I'm G to upload that
23:14 - here so I'm uploading that Linux
23:19 - application it's there now I'm also
23:22 - going to rename this file this folder
23:24 - and call it
23:26 - rainbow uh and I want to I do want to do
23:30 - that um so you can see here the
23:33 - application is now here in this
23:35 - particular folder so the first thing we
23:38 - need to do is figure out does this even
23:39 - work so remember here I am now on my I'm
23:44 - now logged in to the server and you can
23:46 - see there is a directory called
23:49 - rainbow so I can go into that directory
23:51 - we can see what's there this is actually
23:53 - the application and the way in Linux the
23:56 - way that you execute something is with
23:59 - Slash rainbow and it's going to say
24:03 - permission
24:04 - denied so I did miss a step there which
24:06 - is that um the the the permissions of
24:08 - the file I have to set the permissions
24:10 - to be executable which I can do by
24:11 - saying chod
24:13 - 777 uh rainbow and now I should be able
24:17 - to say do SL rainbow and run it and it
24:22 - did something it finished and now let's
24:24 - type LS and we can see look at that
24:27 - there is a file in there now called
24:30 - output.png so if I go in here and hit
24:35 - refresh and we go grab this file and I
24:38 - download it to my
24:40 - desktop and I take a look at it you can
24:42 - see this is the image that was now
24:44 - generated on the server so now we have
24:48 - the um processing sketch as a exported
24:51 - Linux application running on the Amazon
24:54 - ec2
24:56 - instance boy this is I I know this is
24:58 - like 20 some minutes into this long
25:00 - tutorial but we're so close now to
25:02 - actually making the thing run it's very
25:04 - exciting okay so now if I go back to
25:07 - here one thing you'll notice I'm going
25:09 - to go back to the code is remember this
25:12 - this was the command that I had for
25:14 - running on my Mac to execute a
25:17 - processing sketch using processing
25:18 - command line processing Das Java but now
25:21 - that it's a Linux application the only
25:23 - thing I need to do is actually just I
25:26 - changed that command to
25:29 - this/ Rainbow only that's not exactly
25:33 - right because it's in a different
25:34 - directory and so I'm going to go here
25:38 - and um I just need to make sure
25:41 - uh um I I have the folder so I think
25:46 - actually I can just do this
25:48 - rainbowrainbow
25:50 - and uh now I've changed the code and
25:53 - since I changed the code I also need to
25:57 - re-up upload the
26:01 - code uh to the server so I'm overwriting
26:05 - it continue so now that new code is
26:07 - running on the
26:09 - server and I should be able to go back a
26:15 - directory so now what's here we have
26:19 - bot. Js which triggers the processing
26:22 - application which is in rainbow and
26:24 - communicates with the Twitter API and
26:25 - post post a tweet so let's see if this
26:28 - works image bot is
26:30 - starting it worked and now if I go here
26:36 - and look at the bot we should see 7
26:40 - seconds ago this particular image now I
26:43 - want to make sure it's really
26:45 - overwriting and making a new image so
26:47 - the only way I can think to really do
26:49 - that is to um go into the processing
26:53 - sketch for a
26:55 - second and uh change this to
26:59 - like a green
27:03 - value so let's make
27:06 - um
27:09 - oops you can see now the color should be
27:12 - green and I'm going to uh export this
27:17 - export application as a Linux
27:19 - application go into here take
27:24 - this and I probably shouldn't be doing
27:27 - this right right now I'm going to upload
27:29 - it so I'm replacing
27:34 - it here we go so now I uploaded the new
27:39 - application and I'm going to go into
27:42 - that directory I'm going to whoops
27:45 - change the permissions again you don't
27:47 - ever need to do this I just want to
27:48 - really make sure it's working which is
27:50 - risky because it might not be I'm gonna
27:53 - go back up a directory and I'm gonna say
27:56 - node bot. JS image bot is
28:00 - starting it says it worked but I'm not
28:03 - entirely sure it overwrote that file I
28:05 - have a bad feeling it didn't ah it did
28:08 - okay that's magical so it does work so
28:11 - um and I can run it
28:13 - again now this particular bot by the way
28:16 - you noticed it just quits it only does
28:18 - it
28:19 - once and you can see we got another one
28:21 - these are two even though the this the
28:22 - same color scheme they're different I I
28:24 - should just make a a processing sketch
28:26 - that makes a much more recog ible image
28:28 - but here's the thing um uh what you want
28:33 - probably is your Bot to be running
28:35 - continuously so the one thing is just to
28:36 - add set interval to the code um but the
28:39 - other thing that you need is to use a
28:41 - tool known as forever so this is the
28:44 - last piece that's on um that's on this
28:48 - particular uh walkth through so in other
28:51 - words what you want is for the node app
28:53 - to run forever in the background even
28:55 - when you log out of Amazon
28:58 - your instance and forever we saw that
29:00 - this no hu thing is a way of doing it um
29:03 - which is also a way but node has its own
29:05 - way of doing that which is something
29:06 - called forever so um I can say pseudo
29:10 - npm install forever- G so this is a node
29:13 - module that's not associated with a
29:15 - particular node application but a sort
29:17 - of global thing that you would run
29:19 - across a lot of applications so if I
29:22 - copy that here that's going to install
29:26 - this tool called for
29:28 - forever and then
29:34 - um it's gonna do my in Forever install
29:38 - dance uh and then uh and then I can now
29:42 - um start and stop things I can say
29:45 - forever start bot.
29:48 - JS which is running it uh and you know
29:51 - you can set all sorts of parameters like
29:54 - you know how long should it be up for
29:55 - how long should it sleep and all that
29:57 - thing but I'm just letting it use the
29:58 - default and another thing I can type now
30:00 - is
30:02 - forever. list I think and you can see um
30:08 - uh let's let's hold on let's make this a
30:09 - little bit more easy for you to see uh
30:13 - forever. list and you can see that uh
30:17 - this is the particular process that's
30:19 - running no JS bot JS so if I wanted that
30:23 - one's just running now forever it's not
30:25 - tweeting forever because the process is
30:27 - not set to do that but I could um I can
30:30 - do things like say forever stop all I
30:32 - believe which just stopped everything so
30:35 - now if I say forever list again there's
30:38 - no forever processes running and I can
30:40 - say uh forever uh start again um so
30:44 - there's lots of different ways so so
30:46 - this is what you want to do you want to
30:48 - and so if I set that running and I log
30:51 - out my bot is now going to be running
30:53 - Forever on that Amazon ec2 instance W
30:56 - this is like probably one of the longest
30:58 - tutorial videos I've ever made it was
30:59 - completely sort of like frantic and a
31:01 - little haphazard this is probably hard
31:03 - to follow probably to be honest with you
31:05 - this page of instructions might actually
31:07 - make it easier but let me just review to
31:10 - recap what I covered at this particular
31:13 - very long tutorial which is that first
31:15 - thing you want to do is create that
31:17 - server
31:19 - instance right you need to get a key
31:21 - pair a file so that you can log into it
31:25 - once you've logged into it you want to
31:27 - SSH into it mean connect to it from
31:29 - terminal then you want to do things like
31:31 - install node then you want to connect to
31:34 - it with FTP SFTP cyberduck being a tool
31:38 - for doing that that allows you to upload
31:40 - your files there once you've uploaded
31:42 - your files there you can run your Bot
31:45 - but if your Bot also runs a processing
31:47 - sketch you want to also install Java run
31:51 - these commands to create the fake
31:53 - display in the background then export
31:55 - your processing sketch as a Linux
31:57 - application and upload that once you
31:59 - have all of that there then you can use
32:02 - forever to run your node bot that
32:04 - triggers the processing
32:06 - sketch this is like the um the kick the
32:09 - cat that my father bought for tuu Z but
32:13 - anyway that that that that runs the node
32:16 - that runs the processing sketch that
32:18 - creates the fake display that runs with
32:20 - forever my father bought for anyway
32:22 - whatever um so uh all those steps and
32:25 - you've got your thing running so I if
32:27 - anybody actually watched this entire
32:29 - video and actually has a node bot
32:31 - running on an Amazon ec2 instance
32:34 - successfully I don't know please send me
32:36 - a tweet or something or to let me know
32:38 - because um uh uh because that would make
32:42 - me happy um to hear that okay so I'm
32:44 - going to stop recording now uh I will in
32:47 - the description for this video link to
32:49 - the written instructions link to all the
32:51 - references you need and hopefully this
32:54 - will be something that's useful to
32:55 - somebody someday somewhere in the
32:56 - universe

Cleaned transcript:

hello in this video I'm going to look at how you can deploy a twitterbot written in node.js to an Amazon ec2 instance in particular one of the reasons I want to use an Amazon ec2 instance in this case is because not only is my twitterbot written in node.js but my twitterbot triggers a processing sketch which is a Java program to create an image and that image is posted to Twitter so if you want to uh make a image producing twitterbot this is one solution for you this is not the be all end all solution of course there's lots of ways to write Twitter Bots and there's lots of ways to make images but you can see here so I'm in a moment I'm going to start going through those steps but let's just kind of get a lay of the land here for a second so here you can see this is a particular twitterbot it posts an image made from processing you can see the image here this is the processing sketch if I run the processing sketch here you can see it just draws this particular image uh it also saves it to a file and exits um because here now is the code you can see the code in node is triggering that processing sketch here uh and now if I run that code the image bot is starting it says it worked and if I go back to Twitter we can see here I got another one now these two images are different even though they look remarkably the same remarkably similar um but um they are they are different right someone doing a quick pixel analysis they're different they have to be different otherwise my whole understanding of the way the universe works is faulty okay so now we see this is how we you run this stuff locally this is what I did in all the previous uh videos in this playlist about node Twitter bot things now we need to look at how do we uh how do we uh deploy this stuff to an Amazon ec2 instance you know basically you know any of any Linux uh uh Linux server um you could all these same steps and I'm just going to happen to use Amazon and I was able to do this with a free account now at some point you might discover you have to pay but for the most part seems like you can run this using uh free credits at least for quite a long time okay so I do happen to have these notes online on a web page which will be linked to in the description of this video which presumably you are watching at some other time than the actual moment that I'm speaking right now um but the first thing I'm going to do here is go to this link Amazon ec2 but actually I can just type in Amazon e C2 probably into Google and uh I'm going to even just uh go down here and click on the first result and what I want to do is sign into the console the console is where I'm going to get to configure my server so that's the first thing I want to do sign into the console and then I have to enter in my password uh and I don't want Chrome to save it okay ah I'm presented with this terrifying page of like 50 zillion things we could do I there's so much here I have no idea what any of it does but up here in the top left ec2 virtual servers in the cloud floating in the air um so uh those servers which are more likely in an underground bunker somewhere not in a cloud but uh this is what I want I want to run a server somewhere else where I can run this particular bot so I'm going to click on ec2 and I get an ec2 Management console and oh good oh no I do I have I currently have one running instance which is I guess probably some previous test that I did at another time but I'm going to just click launch instance uh and now I'm presented also with a terrifying set of objects of op of objects of options so I'm going to go back to my notes page where I said this is the one that I happen to use so there's different versions of Linux operating systems and different kinds of and uh um the the the key things that I'm looking for one is free tier eligible I'm going to see if I can get this running on the free tier the other is I need one that can also not just run node but run Java and so happens that this ubut server 14.04 it happens to also be able to run uh Java I also want to make sure I pick general purpose free tier micro and then set review and launch so I'm going to do that I'm going to look for that one which is this one I'm going to hit select over here I don't know if you guys can see this I should make the but Ubuntu Server 1404 I'm going to hit select uh a general purpose T2 free tier eligible I'm going to hit review and launch and now it is launched um great oh no launch now I'm gonna hit launch and ah okay so ah so here's so if okay so here's the deal this is the weirdest part of working with Amazon ec2 is how you're going to now authenticate and log into it and you need to create this secret file that holds the keys to your server now apparently I've been here before and I've made a bunch of these because I was showing different uh examples so you likely won't have any previous Keys you can use so but I'm going to create a new key pair so I need to give it a name and I'm going to call it coding rainbow if you can see that and I'm going to then click download key pair oh yikes ah what happened I'm zooming like a I've completely lost my ability to zoom effectively so I'm going to hit download Keir and we should see hopefully uh that ah you can see here uh oh I'm standing in front of it but down here under my downloads uh in the downloads there is now this file coding rainbow. pem you must have this file I now need that file always and forever to to log into uh this ec2 instance in a variety of different ways that I'll show you okay so I have that file now and uh now I should be able to now finally say launch instances now that I have that file I can say launch instances and I'm waiting your instances are now launching and now I can go to view instances and uh I don't I'm not worrying about that right now so you can see this is clearly one that I made a while ago uh when I was doing another tutorial or another test or um and you can see this one hasn't actually completely launched yet um so this is the problem of making these videos in real time where I I I I sometimes uh I just stand here like completely awkwardly like dumbfounded I don't know what to do it's pending let's go to the next steps and when we come back hopefully it'll be um hopefully it'll be working so okay so uh I I followed these steps I did this part now aha okay so what I need to do now is use that key that file to be able to log into that instance so the way that the first thing I need to do is actually change the files permissions so files on computers have permissions some files are like locked and you can't edit them some files are applications that can be executable this particular key file needs uh CH stands for like change modif actually what does it stand for somebody tell me somebody write I'll do an ation here say but I I need to run this command to change its file permissions so what I'm going to do is uh first thing I need to do is I need to go to where that file is so actually I'm just going to put that file on the desktop you can come up with a better place to put it uh and I'm going to go to the desktop and I can see there is that file and uh I guess I'm zoomed in or something uh so now now what I want to do is oops type in this particular command chod 400 and then that file name which is was coding rainbow. PM so that's the first thing I've done I've now change the file permissions to 400 for that particular file and then now I can you do something called SSH ssh secure shell um so basically what I want to do is in the same way that I have my I'm here in terminal on my computer and I can look at the files by saying LS I can run the files by saying like node what I want to do is be able to remote into that Amazon ec2 instance so that the terminal I'm looking at the commands I'm typing are actually not running on my laptop which is here that was dangerous to pick it up not running on this laptop but actually the commands are executing on the server floating in the Cloud that's buried in the underground bunker okay so uh let's see here if ah so me rambling for a long period of time we're at 9 minutes here has actually caused this this instance to be running I don't know why it doesn't have a name here let me give it a name so um and one thing I can do here uh if I zoom in and rightclick see this connect option this is going to be really useful to me because actually it gives me all of right this is the command it's got I've got the command right here uh this is like the public this is like the I the address essentially of that instance and then here it's actually giving me the exact command to log into it so I don't even need to figure out what it is uh I can just copy this and go back to terminal and paste that in here hit enter and okay this is the first time that I'm connecting so my computer is saying H I don't know about this I haven't connected this place before is anything is there anything that I should be afraid of here it's nothing so I should hit type yes and now it's added and then I just sit here and I hope I wait and I hope that the internet will oblig me and connect ah there we go so look at that you can now see here that I am connected I have logged in under my new name Ubuntu to my new address IP 17231 34179 so now I can do things like say uh PWD with print working directory here I am in home/ Ubuntu I can type LS and I can see there's nothing there so now this is great right this bot which I have here locally on my computer I want to be able to get it over here on my Amazon ec2 instance so how do I upload files there so the way one way to upload files to your Amazon ec2 instance is with uh uh FTP or file transfer protocol secure FTP so the way that I could do that is you can use any any FTP software and all sorts of there's probably a way to do it through the web through a browser but I'm going to use something called cyberduck uh which you can Google and download I already have it installed here and so I'm going to run cyberduck apparently I and what I'm going to do here I have a cyberduck open what I want to hit is this open connection so I click open connection and now I have this window where what I need to do is put in all the information for that Amazon ec2 instance so first thing I want to do is make sure I do SFTP it's got to be secure shell F transfer protocol and then the server address if I go back to here should be this right this is connect to your instance using the public DNS it's this so I'm going to copy this and go back to cyberduck paste that in here now there's this interesting question here which is what's my username and password well I don't have a username and password I have this weird coding rainbow. PM private key file it turns out in cyberduck under here under more options I can click that and I can say use public key authentication so I click that and now I go to the desktop and I select this file and now I um I've now have this file selected as my way of authenticating and I should be able to just say connect oh maybe I need to write Ubuntu here just in the uh username and uh ah it works okay so that was one little step that I had personally forgotten that I need to put in the username I need to say Ubuntu but now I just have this window here right this is now a view into home/ Ubuntu so what do I want to do I want to go and I want to just go here this is this folder here node five is where I have all of my stuff and I'm actually just I'm just going to take um bot config and package.json I'm just going to upload those files right now so I can drag them in here drag those files into here and they're now uploading Windows telling me progress they're transferring I can see that those files are listed here right now and now I can go back here and I can say LS and you can see those files are there yay these things are working so now running out of breath here um now I can type in node and you no this is going to not work because I I've I've missed a set of steps here but node bot. js and so what's happening here the program node can be found in the following packages node nodejs Legacy so and then saying pseudo app get install selected package so one thing we first have to do is at least configure node to work that the way that we want it to work and I believe that I have mentioned that here uh and these are some steps that you can do so let's actually just run through these steps the first thing I want to do is call WR uh do pseudo apt get update so what that does is just says this apt get thing which is a tool to like get things like node and other software I want to make sure it's updated and has all of the most recent stuff so that's done then the next thing I want to do is install nodejs which say pseudo app get install nodejs so I'm going to run that uh my audio is still working uh this is asking me if I want to use the disk space which of course I do um so I'm going to run and install nodejs which is great then I also want to make sure I have npm installed which is node package manager which you might remember from the previous node tutorials uh and this needs 130 megabytes of disc space so hopefully this doesn't take too long um so um this is installing now the next step while it's installing let's talk about the next step for a second um this is now a a command to make sure that the particular version of node that I installed is now the actual version of node that will run when I type in the node command um so I am going to grab this command here and hope that this is done it's done and I'm going to because watch what happens if I just type node right now it doesn't actually know what node it can be found in the it's like well which one should I run nodejs Legacy or this one node so I want to make sure that I run this particular one with that command and now when I type node you'll see I'm in node so now I have node running on my Amazon ec2 instance and I can oh wait if I say clear here oh it does still work I can say uh node bot. js now first error I get is it cannot find module twit this is going to be notice when I uploaded my files remember how I said I uploaded the files I didn't upload the directory that said node modules I could have uploaded that directory but it makes more sense for me to just let those modules get installed by Amazon itself so I can just type in npm install and it's now going to install all the modules that are needed for this particular bot we went through this locally now I'm doing this on the server so if if we looked here and I said I refreshed you can see that now there is a directory called node modules which has for example that twit module in it so now I should be able to say node bot. js and it will run now here's the thing it runs so these are all the steps you need if you just have a plain old bot that only runs in node but the reason why I got an error now is it can't find that image file output.png the reason why it can't find that image file output.png is because that's the image file that's created by the processing sketch so while this part the video I've now concluded like you could if you just have a node.js bot you're kind of done although there's another step of getting it to run after you log out which I will get to Let's uh but let's get the let's get the image itself to let's get the image making processing sketch to run as well so let's look at how we do that and there's a lot of like sort of uh awfully scary looking weird commands to do that okay uh oh but um actually so um yeah I'll come back to the forever thing okay so the first thing we need to do is make sure Java is on our uh server so first thing I want to do is install Java which I want to say apt get install default JRE uh so I'm going to put that in and run that and it's going to take 209 megabytes of disc space I'm going to say yes so now I'm installing Java and I'm going to wait for that to install let's go back while we're doing that to the next step The Next Step okay so look at all these like terrifyingly weird looking commands so what's the weird thing that has to happen when you work when you work with processing on a computer your computer is typically connected to a monitor a screen and you're seeing the output of processing on that screen your Amazon ec2 instance has no screen it has no goey interface it's just a server that you can SSH into or FTP files to but it's known as headless meaning processing actually when it runs it breaks because it's like I don't know what Graphics thing to draw anything to there is no Graphics thing so these next steps are steps that create a fake display essentially the ec2 instance has this display you're tricking it into thinking that it is connected to a display because we don't need to see it we just want the graphics to be rendered to a file so the first thing I'm going to do is install something called xvfb which you could uh Google to find out what it is uh I'm going to run this particular command which will install this tool for a fake display the other thing I'm going to do is uh give it a now I'm going to give it an actual screen which is has a resolution of 1024 by 768 why not so I will do that it gives some weird little errors but you know big deal so this seems to be running a process that um um uh I need to like now quit out of so I'm going to hit control C to do that uh and then I'm ah okay so this was this was the command that creates that screen and that screen was there only while it's running um but I also now need to export it and and assign it to be display one so so actually these commands are no good so this is the command let me uh let me explain that again so I'm going to run this Command right and that screen now exists for processing to draw into but I can't type in any other commands here because it's like running so what I needed to do is I needed to run in the background and a command for having things run in the background is no hup so I'm actually going to say this now and now you can see I'm back to my terminal but that screen is now created and I also just want to assign it display display number one that's what processing will draw to display number one so that's done so now we're in good shape now here's the thing if we go back to the code you'll notice here this is the code that I ran locally on my laptop for triggering processing to run processing Das Java but actually now that I'm on a Amazon server boy this is I'm 20 minutes is anybody still watching this 20 minutes into a tour about uploading stuff to Amazon ec2 but I have now um I'm now on an Amazon ec2 instance which is a Linux machine so there's actually a different way that I can do this I can go to my processing sketch and I can go under file export application so export application is something you can always do and it opens up a little window and what I want to actually do is check Linux okay I want to export it as a Linux application now there is this embed Java option which I'm kind of confused whether I want to select did I I don't recall whether I need to select that or not let's try unselecting it uh I probably should keep it selected but let's try unselecting it and I'm going to hit export so you can see here now I have um the Linux application incidentally here's a version that you could run on a Raspberry Pi which we'll get to later so now um I should be able to go back and uh upload this um to okay so I I I'm going to have this application which I want to include so oh no ah boy this tutorial is not going very well that light went off camera went off I don't know why this light keeps going off um so I'm going to now now what I need to do is I need to take this folder and I'm going to upload that folder to oops my server so I'm G to upload that here so I'm uploading that Linux application it's there now I'm also going to rename this file this folder and call it rainbow uh and I want to I do want to do that um so you can see here the application is now here in this particular folder so the first thing we need to do is figure out does this even work so remember here I am now on my I'm now logged in to the server and you can see there is a directory called rainbow so I can go into that directory we can see what's there this is actually the application and the way in Linux the way that you execute something is with Slash rainbow and it's going to say permission denied so I did miss a step there which is that um the the the permissions of the file I have to set the permissions to be executable which I can do by saying chod 777 uh rainbow and now I should be able to say do SL rainbow and run it and it did something it finished and now let's type LS and we can see look at that there is a file in there now called output.png so if I go in here and hit refresh and we go grab this file and I download it to my desktop and I take a look at it you can see this is the image that was now generated on the server so now we have the um processing sketch as a exported Linux application running on the Amazon ec2 instance boy this is I I know this is like 20 some minutes into this long tutorial but we're so close now to actually making the thing run it's very exciting okay so now if I go back to here one thing you'll notice I'm going to go back to the code is remember this this was the command that I had for running on my Mac to execute a processing sketch using processing command line processing Das Java but now that it's a Linux application the only thing I need to do is actually just I changed that command to this/ Rainbow only that's not exactly right because it's in a different directory and so I'm going to go here and um I just need to make sure uh um I I have the folder so I think actually I can just do this rainbowrainbow and uh now I've changed the code and since I changed the code I also need to reup upload the code uh to the server so I'm overwriting it continue so now that new code is running on the server and I should be able to go back a directory so now what's here we have bot. Js which triggers the processing application which is in rainbow and communicates with the Twitter API and post post a tweet so let's see if this works image bot is starting it worked and now if I go here and look at the bot we should see 7 seconds ago this particular image now I want to make sure it's really overwriting and making a new image so the only way I can think to really do that is to um go into the processing sketch for a second and uh change this to like a green value so let's make um oops you can see now the color should be green and I'm going to uh export this export application as a Linux application go into here take this and I probably shouldn't be doing this right right now I'm going to upload it so I'm replacing it here we go so now I uploaded the new application and I'm going to go into that directory I'm going to whoops change the permissions again you don't ever need to do this I just want to really make sure it's working which is risky because it might not be I'm gonna go back up a directory and I'm gonna say node bot. JS image bot is starting it says it worked but I'm not entirely sure it overwrote that file I have a bad feeling it didn't ah it did okay that's magical so it does work so um and I can run it again now this particular bot by the way you noticed it just quits it only does it once and you can see we got another one these are two even though the this the same color scheme they're different I I should just make a a processing sketch that makes a much more recog ible image but here's the thing um uh what you want probably is your Bot to be running continuously so the one thing is just to add set interval to the code um but the other thing that you need is to use a tool known as forever so this is the last piece that's on um that's on this particular uh walkth through so in other words what you want is for the node app to run forever in the background even when you log out of Amazon your instance and forever we saw that this no hu thing is a way of doing it um which is also a way but node has its own way of doing that which is something called forever so um I can say pseudo npm install forever G so this is a node module that's not associated with a particular node application but a sort of global thing that you would run across a lot of applications so if I copy that here that's going to install this tool called for forever and then um it's gonna do my in Forever install dance uh and then uh and then I can now um start and stop things I can say forever start bot. JS which is running it uh and you know you can set all sorts of parameters like you know how long should it be up for how long should it sleep and all that thing but I'm just letting it use the default and another thing I can type now is forever. list I think and you can see um uh let's let's hold on let's make this a little bit more easy for you to see uh forever. list and you can see that uh this is the particular process that's running no JS bot JS so if I wanted that one's just running now forever it's not tweeting forever because the process is not set to do that but I could um I can do things like say forever stop all I believe which just stopped everything so now if I say forever list again there's no forever processes running and I can say uh forever uh start again um so there's lots of different ways so so this is what you want to do you want to and so if I set that running and I log out my bot is now going to be running Forever on that Amazon ec2 instance W this is like probably one of the longest tutorial videos I've ever made it was completely sort of like frantic and a little haphazard this is probably hard to follow probably to be honest with you this page of instructions might actually make it easier but let me just review to recap what I covered at this particular very long tutorial which is that first thing you want to do is create that server instance right you need to get a key pair a file so that you can log into it once you've logged into it you want to SSH into it mean connect to it from terminal then you want to do things like install node then you want to connect to it with FTP SFTP cyberduck being a tool for doing that that allows you to upload your files there once you've uploaded your files there you can run your Bot but if your Bot also runs a processing sketch you want to also install Java run these commands to create the fake display in the background then export your processing sketch as a Linux application and upload that once you have all of that there then you can use forever to run your node bot that triggers the processing sketch this is like the um the kick the cat that my father bought for tuu Z but anyway that that that that runs the node that runs the processing sketch that creates the fake display that runs with forever my father bought for anyway whatever um so uh all those steps and you've got your thing running so I if anybody actually watched this entire video and actually has a node bot running on an Amazon ec2 instance successfully I don't know please send me a tweet or something or to let me know because um uh uh because that would make me happy um to hear that okay so I'm going to stop recording now uh I will in the description for this video link to the written instructions link to all the references you need and hopefully this will be something that's useful to somebody someday somewhere in the universe
