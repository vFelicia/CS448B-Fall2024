With timestamps:

00:01 - okay one more possibly many born but at
00:05 - least right now in this moment one more
00:07 - matter a s-video so this is an example
00:10 - that I made in the previous video which
00:12 - has this nice chain of these circles and
00:14 - that are connected with these
00:16 - constraints and what I really wanna be
00:18 - able to I want to click on it oh I want
00:19 - to interact with it so one wonders that
00:23 - matter gotcha has built into itself
00:25 - something called a mouse constraint and
00:27 - a mouse constraint is a constraint
00:30 - that's not connected between the not
00:34 - connected between two bodies but
00:36 - connected between one body and the mouse
00:38 - now what's interesting about this is you
00:41 - know you might want to eventually apply
00:43 - this to something that's not actually
00:44 - the mouse but you can make an
00:45 - interactive system where connect sensors
00:47 - like doing hand tracking and you're able
00:50 - to move things around your hand all that
00:51 - is possible but I'm going to show it to
00:53 - you with the mouse so let's see how
00:57 - let's see how this works okay so what I
01:01 - need to do is I need to go back to the
01:04 - matter digest documentation and I want
01:06 - to look at mouse constraint so mouse
01:09 - coat just as with everything we've
01:10 - learned right now everything's name
01:13 - space under matter dot something so I
01:14 - want to work with a mouse constraint so
01:16 - I want to make sure I add I'm going to
01:20 - say mouse constraint equals matter dot
01:24 - mouse constraint so now I have that and
01:26 - then I create a mouse constraint by
01:29 - calling the create function so I am
01:32 - going to make a variable called M
01:34 - constraint for mouse constraint for
01:36 - short global variable and at the end of
01:41 - setup I've added all my particles all
01:43 - their constraints I'm going to say n
01:45 - constraint equals Mouse constraint dot
01:50 - create now the mouse constraint gets
01:53 - created with attached to a particular
01:55 - engine right I could have multiple
01:57 - physics engines within the same sketch
01:58 - pretty rare that you wanted to that but
01:59 - it's possible so I'm going to put in
02:01 - engine and then I'm going to what else
02:05 - options so once again I'm going to make
02:08 - a set of options for this mouse
02:11 - constraint
02:12 - now what are those options got to go
02:15 - back to this the following properties
02:18 - are specified for objects created by a
02:20 - mouse constraint create so these are the
02:22 - options that I need a body
02:23 - what is it connected to oh do I really
02:25 - need that no no no that's not I'm not
02:28 - setting that that's going to happen by
02:29 - working with Mouse collision filter oh
02:31 - there's a constraint Mouse I know I need
02:35 - this because I need to tell matter yes
02:39 - about the mouse so I'm actually to
02:42 - backing up a second I need to go look
02:44 - under Mouse so before we even do now is
02:46 - constraint what I actually need is to
02:47 - add a reference to mouse equals matter
02:51 - Mouse so now I also need to say VAR
02:57 - Mouse equals Mouse create now here's the
03:01 - complicated question create element
03:05 - element HTML element so this is really
03:07 - interesting matter that Jeff is a
03:08 - fitness entrance that's going to handle
03:10 - that in allow the interaction stuff
03:11 - behind the scenes for you so I actually
03:13 - just want to say just just attach
03:17 - yourself to a given column element
03:18 - that's on the web page that's going to
03:20 - get Mouse event so that you that matter
03:22 - that you guys can get those amount of
03:23 - them and so the thing that I want is my
03:25 - canvas so how do I get the actual HTML
03:28 - element associated with my p5 canvas
03:30 - well this is how the canvas is made with
03:35 - create canvas but there's no reason why
03:38 - I couldn't put that into a variable
03:40 - create canvas actually returns a
03:43 - reference to the p5 canvas object and
03:47 - inside that canvas object is a property
03:50 - called alt which is actually the html5
03:55 - canvas associated with the p-funk image
03:58 - p5 cameras are just a wrapper for the
04:00 - html5 canvas with some extra
04:02 - functionality so I can say create a
04:04 - mouse that's attached to the p5 canvas
04:06 - and then ooh okay why I need to do that
04:12 - first and then I would do this now this
04:14 - is a little bit confusing it's like the
04:16 - property is a mouse but it's set the
04:18 - mouse into this variable so I might just
04:19 - call this like my canvas I might just
04:22 - just for the sake of clarity I might
04:25 - call that canvas now
04:26 - so I can see those are the options up
04:27 - maybe that's all I need what are the
04:29 - chances that's all I need
04:33 - cannot read property creative undefined
04:36 - sketch F 954 undefined mouse dot create
04:41 - canvas TLT what's undefined
04:44 - maybe Mouse oh this is capital M there
04:48 - we go case sensitivity you've got us
04:50 - again there we go okay there we go
04:53 - now what's the chance I could just click
04:56 - on these now something happens so this
04:58 - isn't doing anything so there's first of
04:59 - all there's a weird sort of thing that I
05:01 - know can happen oh also I didn't add it
05:05 - to the world so this is easy to forget I
05:07 - need to say world
05:09 - duh add world comma M constraints
05:13 - because I want to I need to add some
05:15 - mouse to the world I don't think so
05:17 - maybe I do but I definitely need to add
05:19 - the mouse constraint to the world so
05:23 - it's not doing anything if I click on
05:25 - them
05:25 - but there is an issue there is a very
05:28 - significant issue that could be at play
05:30 - here that I'm not so sure about but I'm
05:32 - going to let's fix this issue before I
05:34 - find the other issues one thing you
05:36 - might not be aware of is that a lot of
05:39 - computers that you might be using have a
05:42 - screen attached to them that is a high
05:44 - density display meaning like a Mac
05:47 - retina or a plenty of other examples of
05:50 - this but that there's actually four
05:52 - pixels per every kind of single pixel I
05:55 - mean there's really the pixels are the
05:56 - pixels but there's more pixels per what
05:59 - we kind of like think are the units of
06:01 - measurement for the window and in that
06:03 - case the coordinates might be off and so
06:07 - I can actually I can actually fix this
06:09 - if I go to Mouse constrain a mouse and
06:14 - look for pixel ratio okay hold on
06:17 - where is that or is that in the
06:18 - constraint I know there's a pixel let's
06:20 - okay so let's look console dot log
06:22 - canvas mouse so it might not be in the
06:25 - documentation but thanks to Lee Abreu on
06:28 - Twitter who pointed this out to me I'm
06:30 - going to run this again and let's look
06:33 - at this let's pixel ratio so there is a
06:36 - pixel ratio property to that now
06:38 - and so I need that I need to make sure
06:41 - that pixel ratio is the right number and
06:43 - it's going to by default be one but if
06:45 - I'm not a high density display where the
06:47 - pixels are doubled it needs to be two so
06:50 - what I can actually just do here is I
06:52 - can say canvas mouse pixel ratio I could
06:56 - just alter it like this now here's the
06:58 - wonder if like p5 actually has a
07:00 - function built-in to itself which will
07:01 - dynamically discover like what is the
07:04 - pixel ratio so I can actually just set
07:06 - it equal to that function pixel density
07:08 - which will return so this code will
07:10 - actually work whether it's on a high
07:12 - definition high density art high density
07:14 - display or not I don't think that was
07:16 - the problem here but we're certainly
07:17 - going to need that oh it was the problem
07:20 - look at that my mask so that was
07:22 - actually all there was so that's great
07:23 - to see so now my mouse constraints are
07:26 - working so I can click on these things
07:28 - and now I can't click on the fixed one
07:30 - you can see a lot of littler like weird
07:32 - stuff going on here so there's a couple
07:34 - things I want to fix about this but so
07:37 - far pretty good number one is I this is
07:38 - real I really need to see what I'm doing
07:40 - would really be helpful for me to Dilys
07:43 - draw something when I click so what I
07:46 - want to look at is the properties of the
07:49 - mouse constraint so I want to look at
07:52 - the properties of the mouse constraint
07:56 - because I'm going to console.log Mouse
07:58 - constraint now so let's look at this
08:02 - look at this body
08:04 - no there is no body because I'm
08:07 - currently not there so that that
08:09 - property of the object is going to be
08:12 - associated with whichever thing that I'm
08:14 - clicking on so what I want to do is say
08:18 - for example if M constraints dot body
08:25 - this means if a body exists that means
08:28 - I'm currently on one of them so I just
08:31 - want to do I want to get bar position
08:33 - equals M constraint body position and I
08:40 - want to just quickly highlight it so I'm
08:44 - gonna say fill I make a green and I'm
08:46 - going to draw just an ellipse there this
08:48 - is totally like a wackadoodle thing to
08:51 - do
08:51 - it makes no sense but just to sort of
08:53 - see if this is working so you can see
08:55 - that now whichever one that I've clicked
08:57 - on gets highlighted as green so this is
08:59 - a way to figure out what's being clicked
09:01 - on by looking at the amount and
09:03 - constraint and seeing if it actually has
09:04 - a body associated with it but really
09:07 - what I want to do is look at look and
09:10 - mouse has pixel ratio - Mouse has a
09:12 - position there so what I actually do is
09:14 - I want to draw a line so I also want to
09:17 - look at VAR M equals M constraint Mouse
09:20 - position which I actually know is M
09:23 - Mouse exit now why because P 5 will give
09:26 - that to me but I look as well just get
09:28 - it from the constraint just to be sure
09:29 - and now what I want to say is I'm going
09:32 - to have a green outline color and I'm
09:37 - going to draw a line from paws X pause Y
09:40 - to MX MX m dot Y now we're going to have
09:44 - an issue here which we'll see in a
09:46 - second so but this should show me which
09:49 - one I'm connected to so I'm going to do
09:51 - manager so you can see this I'm going to
09:53 - click on one them now look at that
09:56 - that's working it's showing what I'm
09:58 - doing and how I'm pulling it but I'm
10:00 - gonna let me go let me try to go up to
10:02 - the top here to show you a certain shoe
10:04 - I'm gonna click on the edge just click
10:05 - really high up on it look it's pulling
10:09 - it from the center but it's actually not
10:10 - pulling it from the center so no matter
10:13 - what I'm drawing my line based on the
10:16 - center of that body but I didn't click
10:19 - on the center of that body so the
10:20 - constraint is not actually attached to
10:22 - the center so I need to find out that
10:23 - offset position so if I go back and here
10:26 - in addition to body under constraint
10:31 - Point a I think is the offset it could
10:37 - be point B I don't really know I think a
10:41 - I can't read the documentation but I
10:43 - think a is probably let's find out so I
10:47 - want to go to body constraint point A or
10:51 - B is going to be that offset position so
10:53 - I'm going to save our offset equals and
10:56 - constraint dot body Gus constraint
11:02 - nonono and constraint constraint
11:05 - dot point a let's try that and so now I
11:09 - want to draw the line from pause X plus
11:11 - offset dot X and Paz y plus offset dot y
11:16 - okay let's see if this fixes this for us
11:19 - so I'm going to click here Oh something
11:22 - crazy has happened so that's clearly not
11:24 - right I don't know what that is
11:27 - so maybe that's doing something point a
11:30 - it's associated with the mouse so let's
11:32 - try point B I knew that was the correct
11:35 - one I'm sure if I read the documentation
11:37 - it explains it but I'm just doing this
11:39 - through trial and error to learn how it
11:41 - works yeah there we go so you can see
11:43 - I'm now actually attached to the correct
11:46 - part of it based on that offset and I
11:48 - can pull it on now one thing that I'm
11:49 - not showing you here when there's a
11:52 - issue with using circles in with a
11:54 - physics engine because there's a lot of
11:56 - angular velocity and wrote there's an
11:59 - angular velocity what these things are
12:00 - doing and I can't see it and it's sort
12:02 - of weird to suddenly see that line kind
12:04 - of rotate around the thing so one thing
12:06 - just in terms of drawing if I use an
12:07 - image sprite to draw there that's going
12:09 - to have like you know eyes on it or nose
12:11 - or something I'd see this more easily
12:12 - but just for sort of debugging one thing
12:15 - I want to add here is just draw a line
12:17 - from the center to this to this R so
12:21 - this and it's already 250 much so so if
12:25 - I do this we can see that line there so
12:27 - this is going to give me a more of a
12:29 - sense of yes you could see these things
12:32 - are kind of like spinning and what
12:33 - they're doing as they're interacting now
12:35 - one thing is they do they they have
12:38 - collision geometries you could make the
12:40 - argument here that I actually want to
12:42 - ignore their collision R that's another
12:44 - thing I could go there are some
12:46 - collision filters built-in to matter
12:48 - chance where I can tell certain things
12:49 - to collide with each other and other
12:50 - things not to collide with each other
12:51 - and you know that you could make a case
12:54 - maybe where I I want these to be able to
12:56 - pass through each other in terms of how
12:58 - the behavior of this is working but
12:59 - anyway you can at least see here now how
13:02 - I'm able to use the mouth to kind of
13:04 - toss stuff around and interact with the
13:06 - elements in the canvas which is what I
13:08 - wanted to demonstrate in this particular
13:10 - video so thank you for watching
13:13 - and
13:14 - this this matter not yet this but I'm
13:17 - not finished because you know you might
13:18 - be in the future and you might see
13:20 - they're like oh my goodness there's five
13:21 - more matter that you have tutorials
13:22 - after this but right now the tie said
13:24 - time that I'm recording it right now
13:25 - this is the last one
13:27 - there's plenty more aspects of matter is
13:30 - but I will do some coding challenges to
13:32 - kind of make certain little mini
13:34 - projects with matter Jas one of which I
13:36 - want to do is maybe like a print go
13:37 - machine so you might see that up here at
13:39 - some point soon but right in the
13:41 - comments we have other matters Dutchess
13:43 - questions that maybe I'll make some
13:44 - future video follow-ups about that okay
13:46 - so thank you very much for watching and
13:49 - I'll see you in another video goodbye
13:55 - [Music]
14:02 - you

Cleaned transcript:

okay one more possibly many born but at least right now in this moment one more matter a svideo so this is an example that I made in the previous video which has this nice chain of these circles and that are connected with these constraints and what I really wanna be able to I want to click on it oh I want to interact with it so one wonders that matter gotcha has built into itself something called a mouse constraint and a mouse constraint is a constraint that's not connected between the not connected between two bodies but connected between one body and the mouse now what's interesting about this is you know you might want to eventually apply this to something that's not actually the mouse but you can make an interactive system where connect sensors like doing hand tracking and you're able to move things around your hand all that is possible but I'm going to show it to you with the mouse so let's see how let's see how this works okay so what I need to do is I need to go back to the matter digest documentation and I want to look at mouse constraint so mouse coat just as with everything we've learned right now everything's name space under matter dot something so I want to work with a mouse constraint so I want to make sure I add I'm going to say mouse constraint equals matter dot mouse constraint so now I have that and then I create a mouse constraint by calling the create function so I am going to make a variable called M constraint for mouse constraint for short global variable and at the end of setup I've added all my particles all their constraints I'm going to say n constraint equals Mouse constraint dot create now the mouse constraint gets created with attached to a particular engine right I could have multiple physics engines within the same sketch pretty rare that you wanted to that but it's possible so I'm going to put in engine and then I'm going to what else options so once again I'm going to make a set of options for this mouse constraint now what are those options got to go back to this the following properties are specified for objects created by a mouse constraint create so these are the options that I need a body what is it connected to oh do I really need that no no no that's not I'm not setting that that's going to happen by working with Mouse collision filter oh there's a constraint Mouse I know I need this because I need to tell matter yes about the mouse so I'm actually to backing up a second I need to go look under Mouse so before we even do now is constraint what I actually need is to add a reference to mouse equals matter Mouse so now I also need to say VAR Mouse equals Mouse create now here's the complicated question create element element HTML element so this is really interesting matter that Jeff is a fitness entrance that's going to handle that in allow the interaction stuff behind the scenes for you so I actually just want to say just just attach yourself to a given column element that's on the web page that's going to get Mouse event so that you that matter that you guys can get those amount of them and so the thing that I want is my canvas so how do I get the actual HTML element associated with my p5 canvas well this is how the canvas is made with create canvas but there's no reason why I couldn't put that into a variable create canvas actually returns a reference to the p5 canvas object and inside that canvas object is a property called alt which is actually the html5 canvas associated with the pfunk image p5 cameras are just a wrapper for the html5 canvas with some extra functionality so I can say create a mouse that's attached to the p5 canvas and then ooh okay why I need to do that first and then I would do this now this is a little bit confusing it's like the property is a mouse but it's set the mouse into this variable so I might just call this like my canvas I might just just for the sake of clarity I might call that canvas now so I can see those are the options up maybe that's all I need what are the chances that's all I need cannot read property creative undefined sketch F 954 undefined mouse dot create canvas TLT what's undefined maybe Mouse oh this is capital M there we go case sensitivity you've got us again there we go okay there we go now what's the chance I could just click on these now something happens so this isn't doing anything so there's first of all there's a weird sort of thing that I know can happen oh also I didn't add it to the world so this is easy to forget I need to say world duh add world comma M constraints because I want to I need to add some mouse to the world I don't think so maybe I do but I definitely need to add the mouse constraint to the world so it's not doing anything if I click on them but there is an issue there is a very significant issue that could be at play here that I'm not so sure about but I'm going to let's fix this issue before I find the other issues one thing you might not be aware of is that a lot of computers that you might be using have a screen attached to them that is a high density display meaning like a Mac retina or a plenty of other examples of this but that there's actually four pixels per every kind of single pixel I mean there's really the pixels are the pixels but there's more pixels per what we kind of like think are the units of measurement for the window and in that case the coordinates might be off and so I can actually I can actually fix this if I go to Mouse constrain a mouse and look for pixel ratio okay hold on where is that or is that in the constraint I know there's a pixel let's okay so let's look console dot log canvas mouse so it might not be in the documentation but thanks to Lee Abreu on Twitter who pointed this out to me I'm going to run this again and let's look at this let's pixel ratio so there is a pixel ratio property to that now and so I need that I need to make sure that pixel ratio is the right number and it's going to by default be one but if I'm not a high density display where the pixels are doubled it needs to be two so what I can actually just do here is I can say canvas mouse pixel ratio I could just alter it like this now here's the wonder if like p5 actually has a function builtin to itself which will dynamically discover like what is the pixel ratio so I can actually just set it equal to that function pixel density which will return so this code will actually work whether it's on a high definition high density art high density display or not I don't think that was the problem here but we're certainly going to need that oh it was the problem look at that my mask so that was actually all there was so that's great to see so now my mouse constraints are working so I can click on these things and now I can't click on the fixed one you can see a lot of littler like weird stuff going on here so there's a couple things I want to fix about this but so far pretty good number one is I this is real I really need to see what I'm doing would really be helpful for me to Dilys draw something when I click so what I want to look at is the properties of the mouse constraint so I want to look at the properties of the mouse constraint because I'm going to console.log Mouse constraint now so let's look at this look at this body no there is no body because I'm currently not there so that that property of the object is going to be associated with whichever thing that I'm clicking on so what I want to do is say for example if M constraints dot body this means if a body exists that means I'm currently on one of them so I just want to do I want to get bar position equals M constraint body position and I want to just quickly highlight it so I'm gonna say fill I make a green and I'm going to draw just an ellipse there this is totally like a wackadoodle thing to do it makes no sense but just to sort of see if this is working so you can see that now whichever one that I've clicked on gets highlighted as green so this is a way to figure out what's being clicked on by looking at the amount and constraint and seeing if it actually has a body associated with it but really what I want to do is look at look and mouse has pixel ratio Mouse has a position there so what I actually do is I want to draw a line so I also want to look at VAR M equals M constraint Mouse position which I actually know is M Mouse exit now why because P 5 will give that to me but I look as well just get it from the constraint just to be sure and now what I want to say is I'm going to have a green outline color and I'm going to draw a line from paws X pause Y to MX MX m dot Y now we're going to have an issue here which we'll see in a second so but this should show me which one I'm connected to so I'm going to do manager so you can see this I'm going to click on one them now look at that that's working it's showing what I'm doing and how I'm pulling it but I'm gonna let me go let me try to go up to the top here to show you a certain shoe I'm gonna click on the edge just click really high up on it look it's pulling it from the center but it's actually not pulling it from the center so no matter what I'm drawing my line based on the center of that body but I didn't click on the center of that body so the constraint is not actually attached to the center so I need to find out that offset position so if I go back and here in addition to body under constraint Point a I think is the offset it could be point B I don't really know I think a I can't read the documentation but I think a is probably let's find out so I want to go to body constraint point A or B is going to be that offset position so I'm going to save our offset equals and constraint dot body Gus constraint nonono and constraint constraint dot point a let's try that and so now I want to draw the line from pause X plus offset dot X and Paz y plus offset dot y okay let's see if this fixes this for us so I'm going to click here Oh something crazy has happened so that's clearly not right I don't know what that is so maybe that's doing something point a it's associated with the mouse so let's try point B I knew that was the correct one I'm sure if I read the documentation it explains it but I'm just doing this through trial and error to learn how it works yeah there we go so you can see I'm now actually attached to the correct part of it based on that offset and I can pull it on now one thing that I'm not showing you here when there's a issue with using circles in with a physics engine because there's a lot of angular velocity and wrote there's an angular velocity what these things are doing and I can't see it and it's sort of weird to suddenly see that line kind of rotate around the thing so one thing just in terms of drawing if I use an image sprite to draw there that's going to have like you know eyes on it or nose or something I'd see this more easily but just for sort of debugging one thing I want to add here is just draw a line from the center to this to this R so this and it's already 250 much so so if I do this we can see that line there so this is going to give me a more of a sense of yes you could see these things are kind of like spinning and what they're doing as they're interacting now one thing is they do they they have collision geometries you could make the argument here that I actually want to ignore their collision R that's another thing I could go there are some collision filters builtin to matter chance where I can tell certain things to collide with each other and other things not to collide with each other and you know that you could make a case maybe where I I want these to be able to pass through each other in terms of how the behavior of this is working but anyway you can at least see here now how I'm able to use the mouth to kind of toss stuff around and interact with the elements in the canvas which is what I wanted to demonstrate in this particular video so thank you for watching and this this matter not yet this but I'm not finished because you know you might be in the future and you might see they're like oh my goodness there's five more matter that you have tutorials after this but right now the tie said time that I'm recording it right now this is the last one there's plenty more aspects of matter is but I will do some coding challenges to kind of make certain little mini projects with matter Jas one of which I want to do is maybe like a print go machine so you might see that up here at some point soon but right in the comments we have other matters Dutchess questions that maybe I'll make some future video followups about that okay so thank you very much for watching and I'll see you in another video goodbye you
