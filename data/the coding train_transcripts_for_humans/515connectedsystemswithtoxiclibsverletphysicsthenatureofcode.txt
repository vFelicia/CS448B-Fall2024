With timestamps:

00:00 - hi okay so what I want to look at in
00:03 - this video is a few different scenarios
00:04 - where we might start to have more than
00:06 - one particle and more than one spring
00:09 - and the thing that I really want to
00:10 - emphasize here which this is a like
00:12 - really fantastic example of so if you're
00:14 - not familiar with this project I think
00:15 - it's worth me taking 30 seconds of this
00:17 - video just to point out to you the
00:19 - existence of Nokia friends so Nokia
00:21 - friends is a project by Karsten Schmidt
00:23 - you know the creator of toxic lives and
00:26 - what you can see here is that looks like
00:29 - this is a kind of network of a whole
00:30 - bunch of particles connected with
00:32 - Springs and there's kind of this like
00:33 - skeleton here and you can see that
00:35 - skeleton what is that skeleton for skip
00:39 - ahead timing wise you can see here's a
00:42 - whole bunch together right
00:43 - it's for creating these cute little
00:45 - cuddly wonderful creatures that you just
00:47 - want to you know be friends with and
00:50 - happy with and dance around together
00:52 - with so so here's the thing there'll be
00:56 - a link to this video you can watch it on
00:57 - your own the point of what I'm talking
00:59 - about here is that we don't have to be
01:02 - so literal in the way that we think of
01:04 - these physics engines right we could
01:06 - design a box 2d even if we're thinking
01:08 - about box 2d we could make this sort of
01:10 - circular body and put our own PNG with
01:12 - eyes and nose and little hair on it
01:14 - ourselves we could also start to make
01:16 - structures skeletons out of you know
01:19 - circles and lines spring connections etc
01:22 - like for example you know what if we
01:25 - made a whole bunch of particles oh I've
01:32 - gone off the deep end here right and
01:35 - then connected them in some arbitrary
01:37 - way right to make this kind of like bug
01:44 - like creature with legs and antennae but
01:46 - a bunch of cross springs to keep the
01:47 - center from like collapsing onto itself
01:49 - but instead of drawing it this way right
01:52 - we drew a nice polygon with some colors
01:55 - and a image texture and we put some free
01:57 - hair here and we we added all sorts
01:59 - right we can just use this as the
02:01 - behind-the-scenes skeleton for our
02:04 - structure another great example of use
02:06 - of this with as a particle big screams
02:08 - which I will also include a link for
02:10 - which uses box 2d as a sketch as an
02:12 - engine to create these skeletons for
02:14 - these
02:14 - features you know as the interactive
02:16 - system you call it on your phone and you
02:17 - shout into it these creatures make all
02:19 - sorts of do crazy things
02:20 - boy I explained that horrible bad way
02:24 - you'll find it then you'll like it and
02:25 - you'll be inspired okay so how do we
02:27 - even get to the point where we can do
02:29 - this so I want to just look at a couple
02:31 - example so there's really three there's
02:33 - a few different options here number
02:35 - what's two options I'm sure there's more
02:37 - options but two options are we can start
02:39 - sort of manually setting we could make
02:40 - let's make twenty particles here are all
02:42 - the locations we need 15 Springs to make
02:45 - all the connections the spring is
02:47 - between P one and P five this one's
02:49 - between P 3 and P 7 we could do that we
02:51 - could also come up with some algorithmic
02:52 - way so what I want to do is and again
02:55 - this video is kind of short I'm just
02:56 - going to show you a few examples and
02:57 - kind of look at the code a little bit
02:59 - and maybe someday I'd be worth kind of
03:01 - like having a longer version of this but
03:03 - I think there's no like answer to this
03:05 - problem what is your exciting idea and
03:08 - how did you do it you need to sort of
03:10 - kind of piece together the algorithm
03:12 - yourself I guess but I'm here to help so
03:15 - so one exam one scenario we can look at
03:18 - that I think is a good one to look at is
03:19 - what if we took just a whole bunch of
03:21 - particles in the linear fashion and
03:24 - connected the first one to the second
03:26 - one the second one to the third one etc
03:27 - etc etc what would we get doing this so
03:31 - this is really great for like jellyfish
03:33 - tentacle simulation there's a great
03:34 - project I better include that below too
03:36 - so I have this this new system in mind
03:38 - by the way stuffs gonna if it's not
03:40 - anyway pop up as I'm talking that you
03:42 - could link to it's gonna be really
03:43 - thrilling definitely gonna do it for
03:45 - this video
03:46 - and so you it's great for jellyfish
03:50 - tentacles I'll kind of string what if
03:51 - you're making a balloon simulation with
03:53 - a dangling string this could work really
03:54 - well for that
03:55 - so let's take a look at how this could
03:57 - be done in toxic lives so if I come back
04:00 - over here to my friend goodbye friends I
04:03 - can go back to processing and we have
04:06 - I'm gonna look at this is now I'm
04:08 - looking at example 5.11 so if I run this
04:13 - example and I made a few changes to it
04:15 - you can see what is this oh that's weird
04:17 - those aren't the changes I made but
04:19 - we're just gonna live with this right
04:21 - now you can see there's a whole lot of
04:24 - circles and there's lines going across
04:25 - the circles so I want to emphasize to
04:27 - you
04:28 - these is exactly what we did before it's
04:30 - just particles and springs but remember
04:33 - we can choose to draw it in any number
04:35 - of ways we want I can go into this chain
04:37 - class which is drawing oh right this is
04:40 - so weird I totally change this before
04:41 - sort of this example but it was just
04:43 - drawing all these circles and I can take
04:45 - them out and I could just connect all
04:47 - the particles with vertices so in this
04:49 - example there is an ArrayList of
04:51 - particles right this chain object is
04:55 - essentially just an ArrayList of
04:57 - particle objects what are these particle
04:58 - objects just like what we had before but
05:01 - look with inheritance we get to add
05:03 - variables so now our Verla particle also
05:05 - has a radius of 4 so if we look at this
05:08 - it's super exciting and we have this
05:11 - display method down here ok so but the
05:16 - chain class I maybe I might redo these
05:20 - the other next time but ok edit that up
05:22 - ok
05:23 - the chain class is just an ArrayList of
05:25 - particles and we have to figure out how
05:26 - are they spaced out so we need a total
05:28 - length we need to rest length we need to
05:30 - make a spring for each one one of the
05:31 - things that we can look at here is what
05:33 - are we doing we're making a spring
05:35 - between each particle and the previous
05:38 - particle so as we're counting through
05:40 - this ArrayList we can i is our current
05:43 - particle I minus 1 is our previous
05:45 - particle make a spring between current
05:47 - particle and previous particle if then
05:49 - when we go to draw them we just draw
05:51 - them as connected series of lines what
05:53 - we get is this nice stringy looking like
05:56 - thing so you can see that even though
05:59 - there's all these particles there we
06:00 - don't have to draw the particles we're
06:02 - just drawing it as a line we could vary
06:04 - the line thickness we don't have to make
06:05 - it a line we could make it a curvy thing
06:07 - there's so many things you can do should
06:08 - remember that you don't have to
06:09 - literally visualize the physics you can
06:11 - use the physics as this underlying
06:13 - engine for your motion and design
06:15 - whatever design you want on top of that
06:16 - so this is a nice example you can take a
06:18 - look at to create kind of like a soft
06:19 - string pendulum another example that we
06:22 - can briefly take a look at here is and
06:25 - we looked at this and in the first video
06:27 - is what if we take all of those
06:29 - particles and Springs
06:31 - and instead of just connecting them with
06:32 - a line we connect them we connect them
06:36 - in a grid-like pattern so if you look at
06:37 - any image processing example you say for
06:40 - every act
06:42 - right for every Y let's look at every
06:45 - pixel X and every pixel why we're doing
06:47 - the same thing here let's make a
06:49 - particle for every X and a particle for
06:51 - every Y for every particle connected
06:54 - above connected down connected to the
06:55 - left connected to the right so if we
06:58 - kind of look through the code we can see
07:00 - one of the things that I wanted to
07:01 - mention about this example is if we so
07:04 - choose we can also write our own class
07:06 - that extends Berlitz spring 2d so here
07:09 - we have our own connection class and the
07:12 - reason I'm doing that is because I want
07:13 - to have a display method for those
07:15 - connections which here's just as a line
07:17 - so this is a nice thing you can see our
07:19 - particle extends verlan particle we're
07:22 - not drawing any of the particles we're
07:23 - actually not calling that display method
07:25 - instead we're just displaying all the
07:27 - connections to see that mesh a great
07:29 - exercise for you if you would like one
07:31 - is to try to render this not as just two
07:34 - connected lines but see if you can make
07:36 - it make a kua each as kind of quad
07:39 - polygons where you could put an image
07:41 - texture on it so what if you could make
07:42 - a blanket that has you know a sunflower
07:46 - on it or something like that so this is
07:49 - another example so another thing so
07:52 - another thing that I think is useful to
07:54 - think about with these types of projects
07:58 - is you could think about doing something
08:00 - called a force directed graph so what is
08:03 - a force directed graph so I really feel
08:07 - like that question out that I am I am
08:09 - making this video so I could kind of
08:11 - keep going it's hot tired these aren't
08:15 - going very well but I'm doing my best ok
08:17 - so what is a force directed graph so
08:20 - let's just think of a scenario where you
08:21 - have a world and you put a whole bunch
08:25 - of stuff in that world and what if those
08:29 - things have relationships to other
08:31 - things and you want them to arrange
08:33 - themselves in some pattern that
08:34 - visualizes the data behind those
08:36 - relationships a classic example of this
08:39 - is think of any social network you have
08:41 - friendship connections - these are all
08:43 - the people in a social network and this
08:45 - person is connected to this person this
08:47 - person is connected this person this is
08:48 - this person this to this person this
08:50 - right you could imagine this could be
08:52 - the set of connections what if the
08:55 - ranks of those Springs the rest like
08:56 - those Springs were tried to other
08:58 - properties location gender you know
09:02 - closeness of the friendship we don't
09:04 - want to get into that right if you can
09:06 - what you have are particles and
09:08 - connections and if the data if what
09:11 - you're visualizing is data about
09:13 - connections between entities could you
09:15 - map that data into the properties of
09:17 - spring objects and if you if you do that
09:20 - you can just plop everything in set up
09:22 - the spring relationships and let the
09:23 - graph arrange itself according to forces
09:27 - and so you know it probably would be
09:30 - smart for me to make an example that's
09:31 - with actual data and maybe that's the
09:33 - exercise for this video or now I'm
09:35 - thinking of my own personal exercise
09:37 - that some that will do to make a better
09:38 - example but when I have for you that you
09:40 - can take a look at our two examples
09:42 - these are five twelve and five actually
09:49 - five twelve and then one of them is an
09:51 - exercise for exercise 515 so this
09:53 - example just shows a really simple
09:56 - scenario where it makes a random set of
09:59 - particles and every particle is
10:01 - connected to every other particle with
10:02 - Springs with certain rest length and
10:05 - rest lengths and strengths now what's
10:08 - interesting about this is every time I
10:10 - click it and the graph will arrange
10:12 - itself into some kind of nice
10:14 - symmetrical pattern I'm calling this a
10:16 - graph but the the particles it happens
10:18 - very very quickly are given random
10:20 - locations initially so this kind of
10:22 - arrangement happens according to those
10:24 - forces it's a very purely symmetrical
10:28 - arrangement because I'm just making
10:29 - random particles every particle is
10:31 - connected to every other particle but
10:32 - what if those connections weren't just
10:35 - perfectly symmetrical based on some data
10:37 - that would be interesting to look at and
10:39 - you can look at a second example which
10:41 - is exercise 515 which just takes it a
10:45 - little bit of a step for a little bit of
10:47 - a step further there are a bunch of
10:48 - these clusters that have their internal
10:50 - connections and those clusters are
10:51 - connected externally to other clusters
10:54 - with different kinds of sprints you can
10:55 - start to see how this this kind of graph
10:58 - is I'm calling it a graph but this sort
11:00 - of system is arranging itself into some
11:02 - kind of stable pattern after a period of
11:04 - time and one thing that's interesting
11:05 - about this is I personally think it's
11:08 - look at this visually if you hide the
11:10 - actual particles you can kind of just
11:12 - look at here we're just visualizing
11:13 - those connections or vice versa we can
11:17 - hide the connections and only show the
11:19 - particles so you can see there are
11:20 - nothing in this program and there's no
11:23 - kind of leadership here saying like the
11:25 - particles should arrange themselves into
11:26 - this pattern there's just a bunch of
11:28 - particles with a set of connections so I
11:31 - would say as an exercise for you for you
11:34 - you have kind of two choices here one is
11:36 - design a creature or some entity use
11:38 - Springs and particles to be the skeleton
11:40 - for that creature that's one idea
11:41 - another idea is actually it's actually
11:46 - used this simple cluster or this example
11:50 - as a model for building a force directed
11:51 - graph but pick some real data whether
11:53 - you kind of make that data up or
11:54 - handwrite it into a text file or hard
11:56 - codit or actually get it from some API
11:58 - but see how that works for you as the
12:01 - kind of project okay so great I think
12:04 - this wasn't as horrible as it was for a
12:06 - period of time in the middle and I've
12:08 - enjoyed I'm enjoying doing this and so
12:11 - that's that's something I suppose and I
12:14 - will talk to you later

Cleaned transcript:

hi okay so what I want to look at in this video is a few different scenarios where we might start to have more than one particle and more than one spring and the thing that I really want to emphasize here which this is a like really fantastic example of so if you're not familiar with this project I think it's worth me taking 30 seconds of this video just to point out to you the existence of Nokia friends so Nokia friends is a project by Karsten Schmidt you know the creator of toxic lives and what you can see here is that looks like this is a kind of network of a whole bunch of particles connected with Springs and there's kind of this like skeleton here and you can see that skeleton what is that skeleton for skip ahead timing wise you can see here's a whole bunch together right it's for creating these cute little cuddly wonderful creatures that you just want to you know be friends with and happy with and dance around together with so so here's the thing there'll be a link to this video you can watch it on your own the point of what I'm talking about here is that we don't have to be so literal in the way that we think of these physics engines right we could design a box 2d even if we're thinking about box 2d we could make this sort of circular body and put our own PNG with eyes and nose and little hair on it ourselves we could also start to make structures skeletons out of you know circles and lines spring connections etc like for example you know what if we made a whole bunch of particles oh I've gone off the deep end here right and then connected them in some arbitrary way right to make this kind of like bug like creature with legs and antennae but a bunch of cross springs to keep the center from like collapsing onto itself but instead of drawing it this way right we drew a nice polygon with some colors and a image texture and we put some free hair here and we we added all sorts right we can just use this as the behindthescenes skeleton for our structure another great example of use of this with as a particle big screams which I will also include a link for which uses box 2d as a sketch as an engine to create these skeletons for these features you know as the interactive system you call it on your phone and you shout into it these creatures make all sorts of do crazy things boy I explained that horrible bad way you'll find it then you'll like it and you'll be inspired okay so how do we even get to the point where we can do this so I want to just look at a couple example so there's really three there's a few different options here number what's two options I'm sure there's more options but two options are we can start sort of manually setting we could make let's make twenty particles here are all the locations we need 15 Springs to make all the connections the spring is between P one and P five this one's between P 3 and P 7 we could do that we could also come up with some algorithmic way so what I want to do is and again this video is kind of short I'm just going to show you a few examples and kind of look at the code a little bit and maybe someday I'd be worth kind of like having a longer version of this but I think there's no like answer to this problem what is your exciting idea and how did you do it you need to sort of kind of piece together the algorithm yourself I guess but I'm here to help so so one exam one scenario we can look at that I think is a good one to look at is what if we took just a whole bunch of particles in the linear fashion and connected the first one to the second one the second one to the third one etc etc etc what would we get doing this so this is really great for like jellyfish tentacle simulation there's a great project I better include that below too so I have this this new system in mind by the way stuffs gonna if it's not anyway pop up as I'm talking that you could link to it's gonna be really thrilling definitely gonna do it for this video and so you it's great for jellyfish tentacles I'll kind of string what if you're making a balloon simulation with a dangling string this could work really well for that so let's take a look at how this could be done in toxic lives so if I come back over here to my friend goodbye friends I can go back to processing and we have I'm gonna look at this is now I'm looking at example 5.11 so if I run this example and I made a few changes to it you can see what is this oh that's weird those aren't the changes I made but we're just gonna live with this right now you can see there's a whole lot of circles and there's lines going across the circles so I want to emphasize to you these is exactly what we did before it's just particles and springs but remember we can choose to draw it in any number of ways we want I can go into this chain class which is drawing oh right this is so weird I totally change this before sort of this example but it was just drawing all these circles and I can take them out and I could just connect all the particles with vertices so in this example there is an ArrayList of particles right this chain object is essentially just an ArrayList of particle objects what are these particle objects just like what we had before but look with inheritance we get to add variables so now our Verla particle also has a radius of 4 so if we look at this it's super exciting and we have this display method down here ok so but the chain class I maybe I might redo these the other next time but ok edit that up ok the chain class is just an ArrayList of particles and we have to figure out how are they spaced out so we need a total length we need to rest length we need to make a spring for each one one of the things that we can look at here is what are we doing we're making a spring between each particle and the previous particle so as we're counting through this ArrayList we can i is our current particle I minus 1 is our previous particle make a spring between current particle and previous particle if then when we go to draw them we just draw them as connected series of lines what we get is this nice stringy looking like thing so you can see that even though there's all these particles there we don't have to draw the particles we're just drawing it as a line we could vary the line thickness we don't have to make it a line we could make it a curvy thing there's so many things you can do should remember that you don't have to literally visualize the physics you can use the physics as this underlying engine for your motion and design whatever design you want on top of that so this is a nice example you can take a look at to create kind of like a soft string pendulum another example that we can briefly take a look at here is and we looked at this and in the first video is what if we take all of those particles and Springs and instead of just connecting them with a line we connect them we connect them in a gridlike pattern so if you look at any image processing example you say for every act right for every Y let's look at every pixel X and every pixel why we're doing the same thing here let's make a particle for every X and a particle for every Y for every particle connected above connected down connected to the left connected to the right so if we kind of look through the code we can see one of the things that I wanted to mention about this example is if we so choose we can also write our own class that extends Berlitz spring 2d so here we have our own connection class and the reason I'm doing that is because I want to have a display method for those connections which here's just as a line so this is a nice thing you can see our particle extends verlan particle we're not drawing any of the particles we're actually not calling that display method instead we're just displaying all the connections to see that mesh a great exercise for you if you would like one is to try to render this not as just two connected lines but see if you can make it make a kua each as kind of quad polygons where you could put an image texture on it so what if you could make a blanket that has you know a sunflower on it or something like that so this is another example so another thing so another thing that I think is useful to think about with these types of projects is you could think about doing something called a force directed graph so what is a force directed graph so I really feel like that question out that I am I am making this video so I could kind of keep going it's hot tired these aren't going very well but I'm doing my best ok so what is a force directed graph so let's just think of a scenario where you have a world and you put a whole bunch of stuff in that world and what if those things have relationships to other things and you want them to arrange themselves in some pattern that visualizes the data behind those relationships a classic example of this is think of any social network you have friendship connections these are all the people in a social network and this person is connected to this person this person is connected this person this is this person this to this person this right you could imagine this could be the set of connections what if the ranks of those Springs the rest like those Springs were tried to other properties location gender you know closeness of the friendship we don't want to get into that right if you can what you have are particles and connections and if the data if what you're visualizing is data about connections between entities could you map that data into the properties of spring objects and if you if you do that you can just plop everything in set up the spring relationships and let the graph arrange itself according to forces and so you know it probably would be smart for me to make an example that's with actual data and maybe that's the exercise for this video or now I'm thinking of my own personal exercise that some that will do to make a better example but when I have for you that you can take a look at our two examples these are five twelve and five actually five twelve and then one of them is an exercise for exercise 515 so this example just shows a really simple scenario where it makes a random set of particles and every particle is connected to every other particle with Springs with certain rest length and rest lengths and strengths now what's interesting about this is every time I click it and the graph will arrange itself into some kind of nice symmetrical pattern I'm calling this a graph but the the particles it happens very very quickly are given random locations initially so this kind of arrangement happens according to those forces it's a very purely symmetrical arrangement because I'm just making random particles every particle is connected to every other particle but what if those connections weren't just perfectly symmetrical based on some data that would be interesting to look at and you can look at a second example which is exercise 515 which just takes it a little bit of a step for a little bit of a step further there are a bunch of these clusters that have their internal connections and those clusters are connected externally to other clusters with different kinds of sprints you can start to see how this this kind of graph is I'm calling it a graph but this sort of system is arranging itself into some kind of stable pattern after a period of time and one thing that's interesting about this is I personally think it's look at this visually if you hide the actual particles you can kind of just look at here we're just visualizing those connections or vice versa we can hide the connections and only show the particles so you can see there are nothing in this program and there's no kind of leadership here saying like the particles should arrange themselves into this pattern there's just a bunch of particles with a set of connections so I would say as an exercise for you for you you have kind of two choices here one is design a creature or some entity use Springs and particles to be the skeleton for that creature that's one idea another idea is actually it's actually used this simple cluster or this example as a model for building a force directed graph but pick some real data whether you kind of make that data up or handwrite it into a text file or hard codit or actually get it from some API but see how that works for you as the kind of project okay so great I think this wasn't as horrible as it was for a period of time in the middle and I've enjoyed I'm enjoying doing this and so that's that's something I suppose and I will talk to you later
