With timestamps:

00:00 - trying again I had a failed stream wh
00:03 - but that's not a good way to start hello
00:05 - good morning evening afternoon I'm
00:08 - looking at you you are in the form of a
00:11 - Canon lens but you are a real person I
00:14 - am a real person my name is Dan I am
00:16 - here in the world uh this afternoon I'm
00:20 - ready to talk about code and various
00:24 - things um before I get started um let me
00:27 - just see first of all let me see if
00:29 - things are are uh working here I don't
00:32 - think that my streaming to Twitch is
00:35 - working unfortunately but I'm I think
00:38 - I'm just not going to worry about that
00:39 - right now um uh can so the first thing I
00:42 - would like to know is if the audio is
00:45 - okay how's the audio uh the second thing
00:49 - I would like to know is if you can see
00:52 - things okay let me ah I'm on this
00:53 - computer let me open up processing
00:55 - because I'm going to do something in
00:56 - processing first uh it is about 1 15 2
01:00 - p.m. eastern time on Tuesday
01:03 - April
01:05 - 12th
01:07 - uh can you see this
01:11 - processing sketch can you read this font
01:14 - if I walk over here oh I'm I didn't oh I
01:16 - didn't do my uh usually I wash the
01:20 - Whiteboard uh can you see this
01:22 - whiteboard can you read what's on it
01:24 - doesn't seem that
01:26 - bright
01:28 - but um
01:30 - let me know how everything looks and
01:32 - sounds I'm going to check out the chat
01:34 - audio seems okay yep works uh I'm GNA
01:38 - say uh try tonight 11 people I actually
01:43 - set out sent out an a MailChimp
01:45 - announcement I don't know if anybody got
01:47 - it saying I was going to come on and do
01:50 - this at uh
01:51 - 1:45 and it
01:53 - is
01:55 - um and I'm going to just see if
01:57 - twitch oh great so twitch is working um
02:01 - if you're I guess I am streaming to
02:04 - Twitch if you're watching on Twitch I
02:05 - see things in the chat saying you are so
02:07 - great
02:08 - um okay so um let me let me uh introduce
02:13 - what's going to happen today so I um I
02:17 - think probably everybody who's watching
02:18 - are people who have watched before
02:22 - um but um uh this helps me figure out
02:26 - who I am and what what place I have in
02:28 - the world but I uh live here in New York
02:31 - City I teach at a program called ITP at
02:33 - New York University I am on a leave for
02:35 - the semester and I'm spending time at a
02:38 - place called the school for poetic
02:39 - computation which is in the West Village
02:41 - uh it's um sfpc doio encourage you to
02:45 - check out their website um but I set up
02:47 - a recording studio here and I'm trying
02:49 - to dedicate myself to uh experiments in
02:52 - education online um and other types of
02:56 - experiments but in particular through
02:57 - this live streaming it's important to me
02:59 - to have have personal interaction so I'm
03:01 - trying to do stuff live with a chat uh
03:04 - I'm going to record some stuff as
03:05 - tutorials the topics are generally
03:07 - creative coding Graphics web JavaScript
03:10 - processing Java that sort of thing so I
03:12 - want to try something different today I
03:14 - don't have any coffee which is usually a
03:16 - good thing for me because the coffee is
03:18 - a problem
03:21 - um and usually I have a glass with water
03:24 - on it water in it instead I have this
03:26 - bottle which is very bad for the
03:28 - environment so maybe I'm going to try
03:29 - not to do that in the future um but what
03:32 - I want to do today is I want to start a
03:33 - new
03:34 - segment which I call the 10minute coding
03:38 - challenge so um I got a message on
03:43 - Twitter asking for help about creating a
03:45 - warp speed simulation I don't know if I
03:48 - just Google uh or Starfield kind of
03:50 - thing so like if I Google like a
03:53 - Starfield uh
03:56 - simulation uh and like uh JavaScript or
04:01 - something uh
04:05 - this so you can see here uh this is what
04:09 - I'm interested in trying to create uh
04:11 - sort of Starfield simulation like this
04:13 - oh this is a nice one in uh 10 minutes
04:16 - um I'm like looking over here at my hair
04:19 - um so and I also have figured out how to
04:22 - make a timer appear in the Stream that
04:25 - you're watching in the corner up there
04:27 - so let's so I'm going to try to get that
04:28 - set up uh I've got 14 people watching so
04:31 - uh the topic that I said I was going to
04:33 - do today which has been highly requested
04:35 - is p5js uh so like a drawing canvas in a
04:39 - browser that communicates over
04:42 - websockets so that if you're drawing and
04:44 - somebody else is drawing you can see
04:45 - what the other person is drawing so I am
04:47 - going to get to that but first I want to
04:48 - try this idea of a 10-minute excuse me
04:51 - coding challenge just to see if it works
04:53 - so the first thing I need to do is I
04:55 - need to run this thing called desktop
04:57 - presenter oh um
05:01 - and uh so hold on ah because I need to
05:04 - hit save so I had to set up so I'm using
05:07 - something called wirecast and wirecast
05:10 - allows me to take multiple inputs
05:11 - combine this green screen with my
05:13 - computer screen move back and forth
05:15 - between different cameras and what I
05:17 - want to do is uh using something now
05:19 - that I found called desktop presenter
05:20 - which allows me to capture a portion of
05:23 - another application and overlay it so
05:25 - I'm just going to make I'm having a
05:27 - timer running in the browser for example
05:30 - um yeah so let me see if I can get this
05:31 - going so I need to go to uh uh so you'll
05:36 - have to bear with me for a second I'm
05:38 - going to do something that you can't see
05:39 - but you'll be able to see it in a
05:41 - moment uh so I've got desktop presenter
05:46 - going ah this worked
05:50 - earlier uh aha okay so let me see here
05:54 - sorry everyone this is going to take me
05:55 - a second because this is new and I had
05:58 - this I had this set up and working
06:00 - before I started the stream and wirecast
06:03 - crashed and my settings didn't get saved
06:06 - so I'm going switch to this got it okay
06:09 - this is good this is good oh no no no no
06:13 - uh oh yeah
06:17 - uh
06:19 - okay
06:20 - uh that's fine
06:23 - oops okay hold on this is working
06:25 - differently than it did before but I
06:27 - think it should be okay
06:30 - um and now let's see here uh edit shot
06:35 - I'm going to
06:36 - add please work uh new desktop presenter
06:44 - Source new local desktop presenter
06:48 - source
06:50 - and I'm going to hold on you'll see
06:54 - everything will be okay in a second
06:57 - output output settings no no that's not
07:00 - output settings Source settings oh never
07:03 - never configure your
07:28 - stream
07:58 - e e
08:52 - okay sound should be
08:57 - back sound should be back
09:03 - am I
09:06 - back can you hear
09:14 - me okay good okay so so I'm getting
09:18 - ready close
09:19 - this umh okay so I'm gonna
09:27 - do my first
09:31 - ever I'm going to call this
09:36 - Starfield I'm G oh so this is bad where
09:38 - I have this hold on a second
09:41 - everybody uh because this will block the
09:44 - code um I got to do a better job I think
09:54 - of that's probably fine right okay
09:59 - uh there we
10:03 - go this I don't need here oops I can't
10:05 - click on that this I don't need here can
10:08 - move these
10:10 - Down clean up
10:14 - okay how are we doing everybody you see
10:16 - the timer above my head you can hear me
10:19 - again and I'm G to do this
10:23 - uh 10 minute coding
10:27 - challenge okay uh I see in the chat ask
10:29 - does anyone know how long this is going
10:31 - to be so my plan it's now 2:00 is to
10:34 - stream until approximately 3:15 3:30 so
10:38 - perhaps an A little over an hour or so
10:40 - um so I'm going to first do this
10:42 - 10-minute programming Challenge and then
10:45 - I'm going to take a break and
10:48 - uh start talking about node and sockets
10:53 - and p5js all
10:56 - together okay uh let me just check
10:58 - twitch here
11:00 - uh okay it's back audio is back uh
11:02 - there's only one person watching in
11:03 - twitch I'm not sure if I should keep the
11:05 - twitch stream thing going but okay so uh
11:09 - here we
11:15 - go all right hello okay so uh I've only
11:19 - wasted 11 oh you know what I this here
11:22 - is that's okay maybe it doesn't bother
11:24 - you so much if you see my laptop a
11:26 - little bit here big deal right
11:29 - um
11:34 - okay all right let's do this so the
11:37 - first thing I have to do
11:41 - is uh I'm gonna hit
11:46 - record
11:50 - refresh all right let me give it um I
11:53 - have an idea I'm going to give it a
12:01 - that do
12:04 - that
12:06 - okay uh now I have 30 seconds till it's
12:10 - time for me to
12:12 - begin okay I'm going to begin
12:15 - this
12:18 - oops once it hits 10
12:21 - minutes I'm GNA start
12:32 - here we
12:36 - go I need M themed
12:41 - music hello welcome to the 10-minute
12:44 - coding challenge this is a new segment
12:46 - that I'm starting here on the coding
12:48 - rainbow uh where I'm given a programming
12:50 - problem and I'm given 10 minutes to
12:52 - solve that problem and when the timer
12:54 - goes I've got to stop recording so uh
12:57 - someone uh I'm not prepared for this but
13:00 - normally I get a coding Challenge from
13:01 - somebody so insert person's Twitter
13:03 - handle here uh wrote in and asked how do
13:06 - you make a Starfield warp speed
13:09 - simulation visualization so I'm going to
13:11 - do this in the processing programming
13:13 - environment I will also make a p5js
13:15 - version of it but not in this 10 minutes
13:17 - and I'm talking way too much I got to
13:19 - get started programming so the first
13:21 - thing I want to do and I'm going to skip
13:22 - a few steps here that I might normally
13:24 - do just because I feel like I'm in a
13:25 - little bit of a hurry and I see the
13:26 - clock I already a minute of starting I
13:28 - haven't started programming yet I'm
13:29 - going to make a oops NOP don't rename
13:31 - I'm going to make a new tab here and I'm
13:33 - going to call that tab star because what
13:35 - I want to do is make a star class and I
13:38 - want my star class and I probably could
13:39 - use a p Vector but um I'm not going to
13:42 - use a p Vector at the moment I want to
13:43 - have an X and A Y and a z um and when I
13:47 - make a star object I want to make uh I
13:50 - want the uh X to have a random value
13:53 - between uh zero and the width of the
13:56 - window and why i' have a random value
13:58 - between zero and the height of the
13:59 - window and truth of the matter is for
14:01 - Simplicity
14:03 - sake I wonder if anyone was going to
14:05 - watch this video on YouTube on like two
14:07 - time speed because it's G to be a f
14:08 - minute programming challenge I'm already
14:09 - talking really fast so when I talk
14:10 - really fast than the five minut okay now
14:12 - I'm GNA do void draw and I'm going to
14:16 - say size uh 400 400 so I want to have a
14:19 - window that's a square so I don't have
14:21 - to worry about width versus height maybe
14:22 - we could figure that out later but I
14:23 - need a random um and then I'm also going
14:26 - to make Z some random value Now you kind
14:28 - of wondering wondering if I have an X
14:30 - and Y and a z shouldn't I be in 3D space
14:32 - and probably I should be in 3D space to
14:34 - really create this Starfield simulator
14:36 - but but I'm going to try to do this in
14:38 - 2D because eventually I want to import
14:39 - this to JavaScript and canvas I don't
14:41 - want to deal with webgl or 3D rendering
14:43 - just want to kind of create the illusion
14:45 - of stars moving quickly past my face so
14:48 - let's keep going here uh so now what I
14:50 - want to do is I want to make an array
14:52 - and I could make an array list because I
14:54 - want to add stars when they get off the
14:55 - screen I'm going to remove them but I'm
14:57 - going to do something simpler just going
14:58 - to have an array array of
15:03 - stars uh I'm going to put like a hundred
15:05 - of them in there um because uh I think
15:09 - what might make the most sense uh is
15:12 - when a star goes off the window to just
15:15 - reuse that same star in the array but
15:17 - reset its location back um and I'm going
15:21 - to say uh Stars index I equals a new
15:26 - star and then in draw space is what
15:32 - color the Blackness of space so I will
15:35 - make the black background and I'm just
15:37 - going to say like uh update and uh draw
15:41 - display show I'll just do show um so
15:44 - this is the basics outline of the
15:45 - program I make a bunch of stars I update
15:48 - them and I show them now these functions
15:50 - don't exist yet so I need to go back to
15:52 - my star object and I need to say update
15:54 - how am I doing on time six minutes left
15:56 - and I need to say uh show
16:00 - and the main thing I want to do is uh
16:03 - fill 255 no stroke I want to draw an
16:07 - Elipse uh at that X and Y location and
16:10 - I'm going to make that ellipse just like
16:13 - eight uh and I'm going to run this and
16:15 - make sure this is working good okay so I
16:17 - do see uh a bunch of things that look
16:19 - like they could be stars now I need to
16:21 - make them move so they really should
16:23 - move like they should move going to move
16:24 - this closer to myself this is bad for me
16:26 - to start talking I really just got to
16:27 - keep programming but I want them to move
16:29 - like Fanning out from the center and as
16:32 - they go out to the center I want them to
16:33 - go faster and faster and that's what I'm
16:34 - going to use that Z value for I'm
16:36 - essentially going to divide you can
16:39 - think of you can think of the ratio of
16:41 - their location from the center to the
16:43 - edge and I want to divide by some value
16:45 - so they're so that value I'm dividing by
16:47 - is getting bigger and bigger and they're
16:48 - moving out to the edge I think this is
16:50 - going to work and I I saw an example
16:52 - like a year ago um I'm going to find
16:54 - that example and link to it in the video
16:56 - because now I'm realizing this is kind
16:57 - of based on that um um uh it was um
17:01 - anyway I'll find it okay but I can't
17:02 - talk about it too much right now because
17:03 - I only got five minutes left so what I
17:05 - want to do is I want to say something
17:07 - like this I want to say
17:10 - uh I'm going to make a new value called
17:13 - like uh SX and I want to say x ided
17:18 - z um and then I want to uh map that
17:21 - value kind of like a ratio which goes
17:23 - between zero and one uh to between zero
17:27 - and the width and and I wanted to do the
17:29 - same thing for y y /
17:33 - C right because Z and let's just like
17:36 - let's just pretend they're all starting
17:37 - really far away right so basically what
17:40 - I'm saying is that I want them to start
17:45 - the they're the I almost shouldn't use Z
17:48 - I just use the Z because I'm thinking of
17:50 - them as being closer or farther away but
17:52 - I really want a value between zero and
17:54 - one and um
18:00 - let's run this
18:01 - again and we should see kind of looks
18:04 - the same but now the difference is I
18:06 - could say here zal Z minus uh
18:10 - 1 and oh you know what I've done here
18:13 - that's bad everything is happening
18:15 - according to the top left corner this is
18:17 - a terrible this is this is a problem and
18:19 - we've got to correct this because I only
18:20 - got four minutes left so I can translate
18:23 - in draw width divided two height divided
18:27 - two this makes a lot more sense because
18:29 - really what I want is to be translating
18:31 - to the um I want everything to be
18:33 - Fanning out from the center not the top
18:35 - left so if I do this you can see things
18:37 - are Fanning out but still from there so
18:39 - all I need to do now is really think
18:42 - about this as like negative width to
18:44 - width and negative height to height that
18:47 - should that should do well and you can
18:49 - see here um and and let that only um 100
18:53 - Stars wasn't so many so let's make 400
18:56 - and you can see things are moving out
18:59 - from the center you can see as they move
19:00 - out they start getting faster and faster
19:02 - and faster because I'm dividing by this
19:03 - number oops and you can see them now so
19:06 - they're coming back they're getting
19:07 - sucked in Back to the center and I also
19:09 - divided by zero because I got this
19:11 - Infinity problem so I need to do a
19:13 - couple things number one is um I need to
19:16 - deal with the fact that when Z gets down
19:19 - to
19:19 - zero I want to uh reset Z back to
19:23 - somewhere else and also let's have them
19:24 - all start at a random Z and then if Z is
19:29 - let's just say less than one because I
19:31 - don't want to divide by zero Z should
19:33 - get a random uh actually should just go
19:35 - all the way back and uh you know we
19:38 - could give them a new X and Y also and I
19:42 - could put this into another function now
19:43 - look at this so now things are moving
19:45 - out and you can see as
19:48 - they as they come back they're they're
19:51 - reappearing now here's another thing I
19:52 - could do uh first of all uh let's make
19:55 - this whole thing
19:56 - bigger and let's make uh more more stars
19:59 - just to be able to see more uh so you
20:02 - can see how this is looking now they're
20:04 - moving kind of slowly so I also think
20:06 - that it would make a lot more sense for
20:08 - this to be like the number 10 and you
20:10 - could see ah there we go we're so we got
20:11 - something that's really starting to look
20:13 - like a Starfield right uh you could but
20:15 - the thing is they're kind of like
20:16 - popping up like they just appear so one
20:19 - thing I could do is also change their
20:20 - size right if they're farther away they
20:22 - should be small if they're closer they
20:24 - should be big so right now the ellipse
20:27 - is always drawn
20:31 - the ellipse is always drawn at oh my God
20:33 - I only have two minutes left the ellipse
20:34 - is always drawn at 8 pixels so what I
20:36 - want to do is make another variable
20:38 - called R and uh Rand not random I want
20:41 - to map their uh zv value which goes
20:44 - between zero and wi to when they're uh
20:47 - close being zero they should be big like
20:50 - 16 and when they're far away being uh
20:53 - withd they they I shouldn't be able to
20:55 - see them at all and so now if we if we
20:58 - do that you can see they're far away
21:01 - they're small and as they come closer
21:02 - they get bigger and bigger now this is
21:04 - like a Starfield and let's just by the
21:06 - way let's make this uh really quickly uh
21:08 - whoops uh let's make this just like uh
21:10 - how Z changes a global variable and
21:13 - let's be able to control that by the
21:14 - mouse so I'm going to say uh I'm going
21:17 - to add a variable called
21:19 - speed and I'm going to say speed equals
21:21 - map the mouse X Mouse X which goes
21:24 - between zero and width to between zero
21:26 - and I don't know uh 20 so now I can
21:30 - control the speed right as I move the
21:32 - mouse over I'm moving faster I'm slowing
21:34 - down I'm moving faster I can to get to
21:36 - warp speed and I've got one minute left
21:37 - because I want to do one more thing I
21:39 - want to see these streaking I want to
21:40 - see line streaking with one minute left
21:43 - 59 seconds so what do I need to do them
21:45 - have them streaking well I want their
21:46 - current location I want their previous
21:47 - location I want to connect those things
21:49 - with the line so I'm actually going to
21:50 - make more variables I'm going to say PX
21:53 - and
21:55 - py and I'm going to set those uh
21:58 - variables here to um PX = SX pyal Sy y
22:06 - oh um and uh and then I want to
22:11 - um also draw a line oh I realize I'm
22:14 - going to have a problem and I only have
22:16 - 26 seconds left I'm gonna oh I can do
22:18 - this line PX py SX Sy y so this is fine
22:23 - uh you can see there's a problem though
22:25 - which is when they get to the edge uh
22:28 - when they get to the edge um when they
22:32 - get to the edge they're drawing they're
22:33 - connecting a line uh to their um to
22:36 - their previous locations so
22:43 - uh so really what I should be doing is
22:46 - saying
22:47 - this
22:50 - uh what the hell I I failed okay the the
22:54 - you know whatever so that was the
22:56 - 10-minute coding challenge you should
22:57 - stop now i i i i this is really like so
23:01 - dramatic and exciting and yet I totally
23:03 - failed but I'm gonna I'm GNA give myself
23:06 - I'm gonna give myself a bonus two
23:10 - minutes bonus two
23:15 - minutes bonus two minutes to solve this
23:17 - problem so I kind of was screwing around
23:20 - here because I was trying to be tricky
23:21 - and get the previous location but really
23:23 - I don't want the previous I I need to
23:24 - keep
23:26 - track right every time
23:30 - the previous location when it starts
23:32 - should just be its X location and the
23:34 - previous and then each time after it
23:38 - moves and I draw it then I should update
23:40 - its previous location then it gets its
23:42 - new location but really what I want to
23:45 - do here for that line is say PSX
23:51 - PSY and it's not oh my goodness the X
23:55 - doesn't matter the X doesn't this is the
23:57 - whole problem it's the Z Z the Z all I
23:59 - care about is the previous Z I knew
24:01 - something was going on here I want
24:03 - previous z boy previous Z because the Z
24:06 - is the only thing that's changing it's X
24:08 - is like its position in the world the Z
24:10 - is what's actually causing it to change
24:12 - um so I want pz to start being previous
24:15 - Z to start at Z and I want to draw and
24:19 - then the whole point is oh and the
24:20 - camera goes off and I have 54 seconds
24:22 - left we're going to make this happen in
24:23 - my bonus 2 minutes um I'm going to um
24:27 - I'm going to say here
24:29 - float yeah yeah PX equals and this exact
24:33 - same formula but now I want x divided by
24:36 - pz and py I want x divided y divided by
24:41 - pz so now I'm drawing a line between the
24:44 - two locations we don't care about this
24:46 - although it's probably a good time here
24:48 - to to give it its previous location also
24:53 - whoa something lunacy is happening what
24:55 - did I miss I have 19 seconds left X x
24:59 - divided pyz oh height no but that
25:01 - shouldn't matter oh x x here we go here
25:04 - we go here we
25:06 - go so close six seconds left what did I
25:11 - miss PX oh SX XX SX s y here we go there
25:17 - we go so you can see now in all of its
25:20 - Glory the warp speed streakiness but it
25:23 - said 1 second there for a while cuz it
25:25 - doesn't actually say time expired until
25:28 - like click over here okay uh
25:31 - interestingly enough something is
25:33 - definitely not working
25:36 - because ah I forgot to say pz equals
25:41 - z there we go so you can see it's
25:44 - streakiness uh let's uh make it go
25:47 - faster I'm really failing with the
25:50 - 10-minute
25:51 - thing we'll see how long this video is
25:53 - in the end it's only I it can't be more
25:55 - than 15 minutes otherwise I really feel
25:57 - like a total failure I'm going to turn
25:58 - off the ellipse for a second and here we
26:01 - go this is what I was sort of hoping to
26:03 - see you can see the streaks as this
26:04 - draws the lines and I can slow down and
26:07 - I can put those circles back in there
26:09 - there's all sorts of possibilities here
26:10 - so I hope you enjoyed this video about
26:13 - how to make a Starfield I'm also going
26:15 - to upload a JavaScript version of this
26:17 - that will run in the browser uh the
26:18 - links to both the code for both of those
26:20 - will be in the description if they're
26:21 - not there write a comment reminding me
26:24 - and I will see you in the next edition
26:25 - of 10-minute coding challenge which is
26:28 - is probably going to be 15 minutes us
26:30 - tweet me with a challenge I'll keep
26:31 - track of a list of them and I will do it
26:33 - in the next time
26:36 - okay all right I'm afraid to look at the
26:39 - chat here
26:42 - uh okay uh right semi-transparent
26:48 - background that's a good idea cheating
26:51 - there's lots of cheating going here
26:55 - uh uh okay yes sound is okay okay people
26:58 - seem to be sort of enjoying
27:00 - this
27:03 - uh uh I didn't see the Tweet about the
27:05 - Matrix rain wolf ABP but that's a good
27:09 - idea I would definitely consider that if
27:11 - if bonus points for has a rainbow
27:13 - associated with
27:15 - it
27:17 - uh somebody wrote that the problem is
27:19 - when you write a comment in the chat and
27:21 - when I go back to read the chat it was
27:22 - from like 5 minutes ago so I have no
27:24 - idea what you're referring to so if it's
27:25 - a comment that's relating to something
27:27 - I'm doing that you really want me to be
27:28 - able to see and respond to you're going
27:30 - to have to say someone wrote that's
27:32 - cheating there's lots of that's cheating
27:34 - by the way I have a specific point of
27:36 - view I should make this its own video
27:39 - about what's cheating in programming
27:41 - here's my point of view it's all
27:45 - cheating it's all cheating there's no
27:49 - actual
27:50 - Starfield so it doesn't matter whether
27:52 - you're using quote unquote real 3D math
27:55 - or fake cheating 3D math it's the
27:58 - illusion the magic of what you're making
28:00 - that counts so there is no such thing as
28:02 - cheating I suppose the only thing that
28:03 - would be cheating is copying somebody
28:05 - else's code and not giving credit to
28:07 - them but even copying somebody else's
28:08 - code if it's open source blah blah blah
28:10 - is not cheating as long as you give
28:12 - credit little rant there for a second
28:17 - um okay so uh time expired um so I'm
28:21 - gonna um minimize my timer now and I'm
28:26 - going to uh close close this I'm going
28:30 - to leave this let me just
28:32 - uh maybe I should make the P5 GS version
28:35 - right now really quick well I don't I
28:38 - I'll do that later I don't want to make
28:39 - sure I have time
28:42 - um yeah okay so I'm just curious what
28:46 - happens if I now do
28:49 - this yeah still seems
28:53 - fine although it's probably a little bit
28:55 - skewed because I'm actually using height
28:58 - in the calculation which I probably
28:59 - shouldn't probably only works if it's a
29:02 - square like I really should be doing
29:04 - this for it to look whoa uh
29:08 - correct just picking one
29:10 - value but
29:12 - anyway uh I'm not going to worry about
29:14 - that too much plus I should I should
29:15 - pick randomly uh anyway I'm not going to
29:17 - worry about this too much this worked
29:20 - and the um I'm pretty sure I'm GNA find
29:23 - I need to find the thing that this is
29:24 - based on uh I think it was from a brinar
29:28 - uh example
29:30 - um okay uh
29:33 - so all right so that was today's uh
29:36 - 10-minute coding challenge hello 22
29:38 - people watching live in the YouTube
29:40 - stream uh I hope you all are uh please
29:44 - uh feel free to share with your friends
29:45 - if this is happening sign up for my oh
29:48 - so I I'll plug this now uh that on my uh
29:52 - uh new website there's a place here
29:55 - where if you want to uh sign up for live
29:57 - streaming updates you know I I I haven't
30:00 - really I probably should just have a set
30:03 - time every week where I'm doing this but
30:05 - I'm I seem to not be capable of that um
30:08 - and for example I just sent an email
30:09 - this morning being like it's going to be
30:10 - at 1:45 today so I'm going to try to do
30:12 - better scheduling this sort of stuff I
30:14 - can tell you that 100% this week I will
30:16 - not be doing any live streams on
30:18 - Thursday and I hope to be doing one
30:20 - tomorrow as well as possibly
30:22 - Friday um okay um so I lost a few
30:27 - viewers there and plugging my own
30:30 - website I am now going to switch gears
30:33 - and what I want to do I'm going to show
30:35 - you an
30:37 - example uh I've got to
30:42 - somehow grab
30:44 - this uh okay hold on a second I made an
30:48 - example
30:53 - earlier
30:56 - um uh so I'm finding something that I'm
30:59 - going to show you and sockets I'm going
31:03 - bring that over
31:05 - here and it's probably GNA do something
31:08 - where oh good okay um so
31:16 - um
31:18 - uh uh sorry I should I have to turn my
31:21 - phone off when I do this because I'm
31:22 - like looking at people's Twitter
31:24 - messages um desktop
31:28 - sockets okay uh let's see if this
31:32 - works uh and so open up
31:36 - Chrome so I just want to show you what
31:38 - it is I want to now do a tutorial about
31:40 - oh that's too tiny um so let me hold on
31:44 - a
31:45 - sec uh
31:52 - desktop uh
31:54 - sockets um
31:58 - black index okay I'm going to show
32:01 - you
32:07 - uh okay what I want to show you is the
32:11 - following
32:17 - whoops I have two browser windows each
32:21 - open to the same p5js sketch these could
32:25 - easily be two browser windows on
32:28 - separate computers in separate parts of
32:30 - the world they are both connected to a
32:32 - server that server is also running on
32:34 - this laptop but it could be running in
32:36 - the cloud anywhere else in the world as
32:38 - I draw on one you can see what I'm
32:40 - drawing appears on the other one uh a
32:43 - different color is used just so you can
32:45 - kind of see that more specifically so
32:47 - this is what I want to demonstrate how
32:48 - to do how do you host a p5js sketch from
32:51 - a
32:52 - server how do you have that server
32:58 - uh how do you have that server uh how do
33:00 - you have the sketch connect to the
33:02 - server send messages to the server in
33:04 - real time have that server send messages
33:06 - to other
33:08 - clients um and obviously I've made this
33:11 - example already I made this probably
33:13 - like a year ago I updated it this
33:14 - morning so now I need to make a bunch of
33:17 - video tutorials that go through the
33:19 - steps of how to build this
33:23 - um
33:26 - uh okay
33:28 - um somebody in the chat asks um can I
33:32 - watch the can I can I rewatch this later
33:34 - so U let me just quickly answer that
33:36 - question uh yes you can rewatch this
33:38 - later as soon as the stream ends the
33:40 - entire stream is archived on YouTube on
33:43 - my channel youout shiftman I also what I
33:47 - usually do is edit the stream to take a
33:49 - few key chunks of videos and
33:53 - um uh uh make those separate like
33:56 - Standalone tutorials so right now I'm in
33:58 - my I'm trying to sort this out
34:01 - phase uh of this project and let me open
34:04 - let's figure out
34:06 - um together I think I
34:10 - can these are links by the
34:13 - way let's figure out what would make
34:15 - sense here so the first thing I need to
34:17 - do is you know I have tons of sketches
34:20 - that already introduce P5 so I'm not
34:23 - going to include that in this particular
34:25 - tutorial but um the first thing would be
34:28 - what uh what is server side programming
34:33 - node and sockets so like that's the
34:36 - first thing I need to cover right what
34:38 - is you know why do you need server side
34:40 - programming for this what's this thing
34:42 - called node which I'm going to use for
34:43 - Ser side programming I have a what is
34:45 - node video for my twitterbot tutorial
34:47 - series but I think I might kind of like
34:49 - redo that content a bit as part of this
34:50 - particular section because I also
34:52 - Imagine a lot of other things that you
34:55 - would do with server side programming
34:56 - np5 with
34:58 - um so then um adding Express and hosting
35:03 - uh
35:04 - files adding
35:07 - socket.io uh
35:09 - connecting
35:12 - okay that could be one tutorial Express
35:15 - and hosting
35:17 - files another tutorial could be adding
35:23 - socket.io uh
35:25 - package with events
35:28 - and then adding sockets to p5js
35:32 - client okay so I think this is four
35:35 - videos in my mind the first so four like
35:38 - 10minute tutorials do I have time for
35:39 - this in an hour boy this going to be
35:41 - rough well if I don't finish all this
35:43 - I'll come back and finish it tomorrow
35:44 - but we I'll do as much as I can today so
35:47 - a basic kind of just introduction to
35:49 - this
35:50 - idea um you know one and two could
35:53 - probably be combined I might just sort
35:55 - of improvise that uh I think that that
35:57 - number three and number four definitely
35:59 - need to be two separate distinct uh
36:01 - videos so this is my plan um a lot of
36:06 - people have requested this yes um um uh
36:10 - uh jonko is it yonko or jonko there's H
36:13 - someone in the chat named jonko Bosch
36:15 - who uh was one of the people who had
36:16 - asked for sockets maybe you sent me an
36:18 - email today that I haven't responded to
36:19 - yet I think we'll get back to you um uh
36:23 - okay so this is my plan I'm going to
36:33 - uh take a really really quick
36:37 - break uh before I get started if
36:40 - um if um you uh have any ideas or
36:44 - thoughts about this
36:46 - list please write them in the
36:49 - chat I am going to mute my microphone
36:53 - and I will be back in one
36:56 - minute
37:26 - e
37:56 - e e
38:39 - okay I'm back apologies for any audio
38:41 - glitchiness that happens right now I am
38:43 - trying to re add the microphone here it
38:46 - was kind of tugging on me in a weird way
38:49 - um I am back hello okay so if you're
38:52 - just
38:52 - joining
38:54 - um I'm looking checking the chat uh
38:58 - stuck at
38:59 - loading uh Matrix rain oh there somebody
39:01 - has a matrix rain okay
39:05 - uh okay um okay so if you're just
39:08 - joining I'm about to record a set of
39:11 - videos about how to make something like
39:14 - this which is I'm going to hit refresh
39:17 - here this is a p5js sketch that's
39:19 - communicating with another instance of
39:22 - itself running in a separate browser
39:23 - which could be in a on another computer
39:25 - somewhere else um one thing I wanted to
39:27 - look
39:28 - at really quickly to refresh my memory
39:32 - is
39:34 - um uh because I the first thing I want
39:38 - to
39:39 - do yeah is look at uh here so
39:46 - um
39:49 - so large data
39:51 - [Music]
39:55 - set I guess so I'm trying to think of
39:59 - I'm trying to think
40:01 - of uh reasons why you need serers side
40:04 - programming so what are reasons why you
40:06 - need server side programming so you can
40:07 - do a lot with just p5js client side
40:10 - JavaScript what I've been doing in most
40:12 - of my videos got an HTML file got some
40:14 - Javascript file you draw stuff you
40:16 - connect to apis all that sort of things
40:18 - but things that you might need to do is
40:20 - one is Real Time
40:22 - Communication so that's what I'm going
40:24 - to focus on today other things are like
40:26 - dealing with uh large data sets right
40:29 - you might want a server to like process
40:31 - those and return the results um saving
40:35 - data although you could use somebody
40:36 - else's server for that um ah uh uh
40:42 - scraping web pages and other things you
40:46 - cannot connect to from
40:53 - client uh tell me in the chat what are
40:56 - some other things that you need server
40:58 - side programming for that might be
40:59 - important to
41:02 - mention um and
41:05 - then
41:09 - um uh and
41:12 - then what I need to have up here are so
41:15 - let me close this I don't need this
41:17 - right now got to get myself ready here I
41:20 - need to
41:25 - have uh node
41:27 - .js the
41:31 - website and I need to also have terminal
41:37 - open
41:41 - uh and okay and what I'm going to do is
41:50 - create a I want
41:55 - to uh
41:58 - I want to create a blank
42:01 - sketch and I'm going to put it on the
42:04 - desktop as uh
42:07 - sockets coding
42:10 - rainbow okay that's good I'm just
42:12 - getting myself set up here I want to
42:15 - open up Sublime Text which I have
42:17 - already uh remove folder from project
42:21 - and let's go get uh this one
42:25 - here uh
42:28 - okay um
42:32 - now uh let's close this I don't need
42:35 - that close this close
42:37 - this um okay what else do I need to be
42:40 - ready to do this I have Sublime
42:43 - going I have terminal
42:47 - going um but I'm actually going to just
42:50 - do this and I have a processing I'm
42:54 - going to quit I have the browser with
42:57 - with node running and
43:02 - now I need
43:06 - to what I want to do
43:09 - is uh remember although am I going to do
43:14 - that in this particular
43:16 - video I'm uh okay adding Express and
43:20 - hosting you know what I'll do that in
43:21 - the next one okay great I'm it's going
43:24 - to get set up basics node short video
43:28 - and the next one we're going to add
43:29 - Express and hosting files so that's fine
43:31 - I think this is
43:33 - good
43:35 - uh so okay
43:38 - [Music]
43:39 - I
43:41 - am ready to
43:46 - go how's everybody
43:49 - doing yes so okay so um uh Mr Guru asks
43:54 - are we able to play along in real time
43:57 - you should be able to play along in real
43:59 - time uh if you want to play along in
44:01 - real time the two things you should do
44:03 - to get ready are number one uh download
44:08 - node and install it on your computer
44:10 - because I'm going to I'm going to
44:11 - mention that you have to do that but I'm
44:12 - not going to do that in the video in the
44:14 - tutorial um and then you should have
44:16 - terminal open uh and if you should have
44:20 - a folder with a blank p5js sketch you
44:24 - don't actually even really need that
44:25 - just yet but that that I'm going to use
44:28 - um that I'm going to start start with
44:29 - like the assumption that I already have
44:31 - like an HTML file a Javascript file and
44:33 - a folder called
44:34 - libraries um okay
44:38 - um and I think uh unfortunately what I
44:42 - want to do is
44:43 - also uh secretly
44:45 - run I think I should mention at the
44:49 - beginning what it is I'm
44:53 - doing
44:54 - and uh going to
45:00 - have another instance of it running over
45:10 - here
45:13 - okay okay I think I'm ready for this
45:15 - first video I'm going
45:17 - to cycle these cameras on and
45:23 - off and I'm going to start with the
45:25 - first tutorial
45:27 - uh oh first um let me just check here
45:30 - I'm going to check the that's not
45:34 - good so I'm definitely going to use the
45:37 - Whiteboard
45:39 - um there's some weird shadowy stuff
45:42 - going
45:45 - on that's probably better still weird
45:48 - shadowy stuff whatever um and I'm going
45:53 - to sorry I'm spacing out uh let me just
45:57 - make sure this looks
46:00 - okay can you read and see that looks
46:03 - like it's okay um all
46:07 - right wish I had a darker is this marker
46:10 - better let's
46:11 - see oh yeah much better I'm me use this
46:14 - one for sure
46:20 - okay okay here we
46:24 - go all right I know I'm sorry like I
46:27 - really have trouble getting started
46:29 - because I feel kind of freaked out uh
46:31 - but I'm going to do
46:39 - it
46:45 - okay
46:47 - hello oh I sore I I swear I would
46:51 - never swear and then somebody edit that
46:52 - out
46:59 - in this video I'm here to look at
47:01 - something new uh something kind of
47:03 - exciting to me which is and let me just
47:05 - demonstrate it for you first what I have
47:06 - here right over here is a HTML 5 canvas
47:09 - it's using something called p5js and I
47:11 - can move my mouse around it and I can
47:13 - click and draw on that canvas but look
47:15 - what happens when I do that when I click
47:16 - and draw on that canvas there's another
47:18 - canvas over here where that same drawing
47:20 - appears and if I come over here and I
47:22 - draw here something in this canvas
47:25 - appears and you can see the color is
47:26 - inverted now this might not seem so
47:28 - magical to you but I I I'm I'm making
47:31 - the case to you that these two browser
47:33 - windows with these two canvases could be
47:35 - on separate computers in separate parts
47:37 - of the world so what I'm here to
47:38 - demonstrate to you today in a series of
47:40 - short tutorial videos is how to use
47:43 - server side programming with your p5js
47:47 - creative sketch to allow for real-time
47:50 - communication between multiple users of
47:52 - your sketch so this could be used for
47:54 - playing a game or a collaborative
47:56 - something or other you could have video
47:58 - Al there's lots of possibilities of
48:00 - things you could do but I'm going to
48:01 - demonstrate it with a basic
48:02 - collaborative shared drawing space so I
48:05 - have we have to add if if you're coming
48:06 - to this video having only ever done the
48:08 - basics of programming in JavaScript with
48:10 - p5js you're in the right place we're
48:12 - going to add something to this which is
48:14 - serers side programming with node.js now
48:17 - if you've watched any of my videos I
48:18 - have done some stuff about node in some
48:20 - videos about making Twitter Bots but
48:22 - we're going to do something slightly
48:23 - different with node here and I'm going
48:24 - to start a bit from scratch again so
48:26 - let's um let me talk about what the
48:29 - pieces of this are so for
48:32 - example uh the idea here is that you
48:35 - have a laptop and that laptop has a
48:39 - browser window with a canvas that you're
48:41 - drawing in and somewhere else in some
48:43 - other part of the
48:45 - world there is another laptop with that
48:48 - canvas and with this canvas and as you
48:51 - draw that same drawing appears over
48:53 - there so somewhere else there needs to
48:57 - be a
48:58 - server what happens is this particular
49:03 - instance of your p5g sketch talks to
49:06 - that server with something known as a
49:09 - socket socket being a real time
49:12 - connection between two applications that
49:15 - can send data back and forth this
49:18 - particular client also talks to that
49:20 - server with a socket so that when the
49:24 - user moves the mouse and an event is
49:27 - triggered where the x and y coordinate
49:30 - of the mouse is sent to the server the
49:32 - server sends the x and y coordinate of
49:34 - that mouse back to this other one and
49:36 - then this other one receives that
49:37 - message and draws so the issue is you we
49:40 - know how to write a JavaScript program
49:43 - where you move the mouse and you draw
49:44 - stuff that's what's the thing that's
49:46 - happening over here what maybe we don't
49:48 - know how to do what I haven't covered in
49:50 - any of my videos before is how to write
49:52 - this server program and the platform
49:55 - that I'll write the server program is
49:57 - something called node.js there are lots
50:01 - and lots and lots and lots and lots of
50:03 - different ways and languages and
50:05 - Frameworks and things you can do server
50:06 - side programming with building big giant
50:09 - web applications is a huge massive scary
50:12 - weird but not but friendly and nice
50:14 - topic Way Beyond the scope of what I'm
50:16 - doing here what I want to do is just
50:18 - look at a a simple framework node um
50:22 - which will allow me to host the files
50:24 - the p5js sketch as well as make those
50:27 - socket connections so this is the basic
50:30 - sketch of what I want to do and so the
50:32 - first thing I need to show you how to do
50:34 - is download node install node and run
50:38 - something in node and then I'll get to
50:41 - more after I do that questions you can't
50:43 - ask a question because this is a video
50:46 - but but but uh but but find me somewhere
50:48 - okay um so I'm back over here I'm going
50:51 - to close uh here's my computer I'm going
50:52 - to close this and I'm going to close
50:55 - this and oh look where I am I am here on
50:57 - the nodejs website so if you go to
51:00 - nodejs.org
51:02 - uh for quick access place your bookmarks
51:05 - here blah blah blah um download your
51:07 - appropriate version of node run the
51:09 - installer you can see that I'm doing it
51:11 - here on Mac on a Mac operating system an
51:14 - Apple operating system OSX I've
51:16 - downloaded I've installed it once you've
51:18 - done that you should be able to go to a
51:21 - command line view of your computer now
51:25 - on the Mac the easiest way to do this is
51:27 - with an application called terminal
51:29 - which looks like this and it's usually
51:30 - found in applications utilities on
51:32 - Windows insert annotation here which
51:35 - will say the thing you should use on
51:37 - Windows
51:38 - um and uh oops you can see H that I
51:41 - already have ah terminal open and when
51:43 - you see it it'll look something like
51:44 - this and I'm going to make the font
51:46 - bigger boy I'm not prepared for this
51:47 - video I'm going to make the font bigger
51:49 - so you can see it better so this is ah
51:52 - Come Back to Me computer um this is a
51:55 - terminal window and terminal window is a
51:57 - place where you can type all sorts of
51:58 - commands in now I'm going to leave uh
52:01 - you know someday I should make just like
52:03 - introduction to terminal and unix
52:04 - commands type thing but right now I'm
52:06 - just going to give you some basic stuff
52:08 - that you need to know the first thing
52:09 - you want to do realize is that if you've
52:11 - installed node properly you can just
52:13 - type the word node into
52:15 - terminal and hit run I hit run hit enter
52:19 - and then suddenly you see this other
52:20 - line strangely enough this is now a
52:22 - place where I can type JavaScript like I
52:24 - could say 5 + 6 = 11 or I could say VAR
52:28 - x = 100 and then I could say x++ and
52:31 - then I could say x is now
52:34 - uh1 somehow um I know I meant to say x
52:38 - equals X Plus but anyway no no X plus
52:42 - plus I
52:43 - digress the point is I'm somehow now in
52:47 - JavaScript land in terminal but this is
52:49 - not really what I want to do what I
52:51 - really want to do is write JavaScript
52:54 - programs in a text ad that I can trigger
52:58 - from uh from this node command in
53:01 - terminal and I and I and I I I I forgot
53:03 - something important over here which is
53:04 - to say that the point of all this is
53:07 - this might be ultimately how you
53:09 - eventually want your application to live
53:11 - a server somewhere in the internet
53:13 - clients all over the world connecting to
53:15 - that server but what I'm doing right now
53:16 - and if you're following along and doing
53:17 - it too is running all of these pieces on
53:20 - one single machine so I'm going to run
53:22 - the server on my laptop using node I'm
53:24 - going to run the client in the browser
53:26 - on my laptop I'm going to run another
53:28 - client in a separate browser window on
53:30 - my laptop just for testing and making
53:32 - sure it all works okay so over here one
53:36 - of the commands that I uh control C by
53:38 - the way is how you quit uh uh clear will
53:41 - get me back up to the top one of the
53:43 - commands that's really important that I
53:44 - want to use is CD for change directory
53:48 - and I want to go to a folder where I
53:50 - have some p5js files because eventually
53:52 - I'm going to be using a p5js sketch in
53:55 - connection with what I'm doing so I want
53:56 - to go there and then I'm going to go to
53:58 - the finder and I'm going to go to my
54:00 - desktop because I already made a folder
54:03 - on my desktop called sockets coding
54:05 - rainbow and the only thing in that
54:06 - folder is just kind of like the stuff
54:08 - that you would have for a p5js sketch an
54:11 - HTML file a sketch. JS file a libraries
54:13 - folder so if you're like trying to
54:15 - follow along you know pause the video
54:16 - now get yourself a a folder with the
54:18 - stuff that you would have with the p5js
54:20 - sketch in there and then you can keep
54:22 - going so what I want what I can do is
54:23 - when I type CD is I can take this folder
54:25 - and drag it into terminal and you can
54:27 - see now this is the full path to that
54:30 - directory users processing desktop
54:32 - slocks coding rainbow so if I hit enter
54:35 - I now in that directory another command
54:38 - that I could type is LS I can see that's
54:40 - listing all the files that are in that
54:41 - directory and in fact I already have
54:44 - hopefully a text editor open to that
54:47 - directory right here you can see because
54:49 - what I want to do in this directory is
54:51 - now make a new file I want to make a
54:54 - file and I'm going to call it
54:56 - uh
54:58 - server.js notice I now have a new text
55:01 - file called server.js I'm going to open
55:04 - that up and I'm going to just say
55:05 - something like
55:07 - console.log my socket server is
55:11 - running so here's the magic of
55:15 - node node is a JavaScript program that
55:18 - you can execute from the command line it
55:20 - doesn't involve a browser it doesn't
55:22 - involve a window Graphics I mean all
55:25 - those things are possible in the sort of
55:27 - landscape of things you might do but
55:29 - this program now that has one line of
55:31 - code in it I can go back to terminal and
55:33 - I can say
55:35 - node
55:38 - server.js I can hit enter and I can see
55:41 - that my socket server is running now my
55:44 - socket server is not running because I
55:46 - don't have any of the code for the
55:48 - socket server here so this is what I'm
55:50 - going to get into in the next video so
55:52 - what if you're following along what you
55:54 - should have now in your head is a
55:56 - general sense of what is going on serers
56:00 - side programming with node.js
56:02 - conveniently by the way one of the
56:04 - reasons why I picked node.js is because
56:06 - it's JavaScript so you don't have to
56:07 - learn a new programming language um so
56:10 - server side program with node.js you've
56:12 - got that installed on your laptop you've
56:13 - got the idea of making a p5js sketch so
56:16 - and then you have a directory that has
56:19 - both a node program in it under sketch.
56:23 - JS and your p5js sorry under server JS
56:26 - and your p5.js files and once you have
56:30 - that maybe put some test code in
56:32 - server.js run that test code you've got
56:35 - node running you've got your p5js empty
56:37 - p5js sketch ready to go and you'll be
56:39 - ready for the next step which is
56:41 - starting to add the actual code for the
56:43 - socket
56:46 - server okay that was my first
56:49 - [Music]
56:53 - um
56:55 - um oh
56:57 - okay um okay so um sorry I'm just like
57:00 - checking the chat for a second so let me
57:03 - know if you guys have any questions
57:04 - about that or if I missed something
57:06 - important because I can pick it up in
57:08 - the next video um I'm I'm sorry I am
57:13 - looking through the chat to see if there
57:14 - are any
57:16 - questions I know you know somebody once
57:18 - told me if you want to have a lot of
57:20 - YouTube followers just swear more but
57:22 - you know swearing is not really in my
57:24 - personality I'm very quiet
57:29 - person who just wants to make rainbows
57:31 - in the world and swearing just doesn't
57:33 - seem like the thing for me to do I I
57:35 - mean I don't have any problem swearing
57:36 - everybody should swear everyone should
57:37 - feel free to swear I just want a family
57:40 - a family stream whatever that means uh
57:44 - okay connect AUD video uh will I ever do
57:47 - this for languages like C probably not
57:49 - anytime soon but I would consider doing
57:52 - that at some point but I've got a long
57:53 - list of stuff
57:54 - before um
57:57 - uh okay
58:00 - um okay so uh I think that's pretty good
58:03 - so I'm going to go to the
58:06 - next stage which is to actually start to
58:10 - add the server code and what I need to
58:15 - do is take a peek at the example I made
58:20 - earlier
58:21 - today um which is um
58:27 - um I need require Express app equals
58:32 - Express uh okay
58:36 - so oh I don't need that this okay this I
58:40 - can make
58:41 - simpler
58:43 - uh you know and I can actually like
58:46 - remove
58:50 - this this is just this is probably a bad
58:53 - idea let me make sure this still works
58:56 - uh I'm just like simplifying my example
58:58 - from
59:00 - earlier
59:07 - U uh yeah it seems to work just fine so
59:10 - I just want to simplify it U you know
59:13 - even though it's good probably good
59:15 - practice to have a lot of
59:19 - extra uh
59:22 - so uh
59:31 - sorry I'm just simplifying this
59:35 - example
59:43 - uh okay yes got it got it okay I I'll
59:48 - deal with this later uh
60:00 - oops okay
60:04 - um okay so I am getting ready to do the
60:09 - next piece of this which is
60:12 - ah Untitled here maybe NOP uh videos to
60:16 - do uh which is I didn't talk about all
60:20 - this other stuff but I'll I'll do a
60:22 - different video where I get to this
60:23 - other stuff uh add Express and hosting
60:26 - files okay so that's the next
60:31 - thing
60:35 - uh uh will you talk about sockets in
60:37 - processing Java or some other language
60:39 - I'd be glad to let me get through some
60:40 - more of this stuff and maybe
60:43 - uh um yes no I'm only getting rid of the
60:47 - comments right now in order to uh be
60:50 - able to like look at the code for myself
60:52 - when I upload the example it will have
60:53 - lots of comments in it of course I'm in
60:55 - favor of comments
60:57 - okay but I'm I'm trying to actually just
60:59 - memorize this because I'm going to type
61:00 - this out from
61:02 - scratch um and right
61:05 - now this is all that I
61:09 - need uh I'll get to this other stuff in
61:11 - the next video okay
61:14 - whoops uh require
61:17 - Express
61:20 - okay um so here we
61:24 - go uh there we
61:27 - go and close all this
61:30 - stuff uh save and open
61:34 - this require Express express.
61:38 - apppp no app equals Express server app.
61:42 - listen app.use Express static public I'm
61:46 - never going to remember all that okay um
61:49 - okay everyone any other questions in the
61:51 - chat I should check uh twitch
61:57 - oh the channel is I'm the YouTube
61:59 - channel I'll put it I'm putting it in
62:01 - the twitch chat is this okay
62:06 - um okay so I'm going to do the next
62:11 - segment it's almost 3
62:14 - o'clock moving along here I think we're
62:16 - in pretty good shape
62:31 - um
62:34 - okay what is Express anyway I'm G to
62:37 - look that up real quick uh
62:41 - Express no not
62:44 - clothing web application framework
62:48 - that's what it is web application
62:50 - framework good for you
62:53 - express okay um
62:56 - all right
63:01 - everybody I'm going to have an error
63:03 - with my function name yeah I'll find out
63:06 - what that is
63:07 - later okay uh here we
63:16 - go welcome to part two of making a
63:19 - socket server for the shared
63:21 - collaborative canvas thing in HTML so
63:24 - what we had so far before is we just had
63:27 - a server application uh that when I go
63:32 - into start over hold
63:48 - on welcome to part two of making a
63:51 - shared collaborative canvas drawing
63:53 - space in JavaScript with p5g and not and
63:56 - sockets and all that stuffff so what I
63:57 - had so far before was just a simple node
64:01 - program that had one line of code and I
64:04 - said node server.js and it prints out
64:07 - that line of code the console gets
64:09 - logged uh my socket server is running
64:12 - now we need to actually add the actual
64:14 - code for an actual web server that we
64:16 - could connect to with socket so there's
64:18 - one thing that I didn't mention before
64:19 - which I'll come back over to this
64:21 - diagram that I had right I talked about
64:23 - the server really as its sole job being
64:26 - this entity that connects to these
64:28 - things with sockets but
64:31 - actually web servers perform uh another
64:34 - role in the sort of
64:36 - L I'm just going to start this video
64:38 - over because now I know what I want to
64:40 - talk about and I
64:42 - was I kind of lost
64:45 - my train of thought and rambled too much
64:49 - and everything's going to be okay here
64:52 - we go um
65:01 - welcome to part two of making a shared
65:03 - collaborative drawing space thing in the
65:05 - browser with p5js node and sockets so
65:09 - what I had before was just a simple node
65:10 - program the only thing that it
65:12 - does is spit out my socket server is
65:15 - running but our job right now is to
65:18 - actually add code to this program that
65:20 - starts a web server and makes sockets
65:22 - available for the p5js drawing thing to
65:24 - connect to but here's the thing I missed
65:27 - something in my previous video where I
65:30 - talked about the fact we're going to
65:31 - have this node server we're going to
65:33 - have this p5js sketch the p5js sketch is
65:36 - going to connect to the node server with
65:37 - sockets but interestingly enough if you
65:40 - could just forget about sockets for a
65:42 - second there's another reason why you
65:44 - might like to write your own node server
65:47 - to host your actual files as well right
65:50 - when you do client side programming the
65:52 - JavaScript code executes on the browser
65:55 - but the browser has to get that
65:56 - JavaScript code from somewhere like when
65:58 - you type in google.com and there's some
66:00 - JavaScript running on your browser that
66:02 - Google wrote you know the JavaScript is
66:04 - sitting on Google server gets sent to
66:06 - your browser via an HTTP request
66:09 - hypertext transfer protocol so one thing
66:12 - that we want the server to actually do
66:14 - Beyond just sockets is
66:16 - host
66:18 - the HTML and JavaScript files for the
66:22 - sketch itself so before I even get to
66:24 - the sockets I want want my server to be
66:27 - come to be a web server and I could
66:29 - write some node code to do that but an a
66:32 - way to do that that's a little bit
66:34 - easier than writing node code from
66:36 - scratch is to use something called a
66:38 - node framework a node package a node
66:41 - framework or package I think are good
66:42 - words something called Express so the
66:46 - first thing I want to do is show you how
66:48 - to install Express use express and write
66:51 - some Code Express is a I guess a
66:53 - minimalist web application framework a
66:55 - lot of things that you want to do very
66:56 - commonly like host files or set up you
67:00 - know a query or route or all the kind of
67:03 - stuff that I might get to in other
67:04 - videos instead of having to write all
67:05 - the code for them you can call on some
67:07 - functions and express that handle a lot
67:08 - of that stuff for you so let's come back
67:10 - over here and I'm going to the
67:13 - computer's over here I'm going to go
67:15 - back to terminal and one thing I want to
67:17 - do first I'm going to attempt to be a
67:20 - proper citizen in the world of node
67:23 - programming and I'm going to run you
67:24 - don't you no my node program worked
67:26 - without doing this but it's often a good
67:28 - idea to to to
67:31 - uh to write this command called npm init
67:36 - what npm init does is it sets up npm
67:39 - stands for by the way node package
67:41 - manager and I'm going to need the node
67:43 - package manager to install Express and
67:46 - what npm init does is it allows me to um
67:52 - sort of set up a configuration file that
67:54 - says some stuff about my project and you
67:56 - know what this looks good my project is
67:58 - is going to be called sockets coding
68:00 - rainbow uh can no longer contain capital
68:03 - letters so I will rewrite that without
68:06 - capital letters version 1.0 is good
68:09 - description sockets example Live on
68:12 - YouTube made entrypoint server.js test
68:16 - command I don't worry about that I'll
68:17 - worry about that later uh sockets p5js
68:20 - node author is
68:23 - me and license I don't know figure that
68:25 - out later yes this seems fine so I went
68:28 - through this npm init thing and it what
68:30 - that actually did is it created this new
68:33 - file called package.json and what
68:35 - package.json is is it's a Json file with
68:39 - information about my project again I
68:42 - could probably do this without this
68:43 - completely look at that how does it know
68:46 - that the dependencies are expressed in
68:49 - socket.io
68:51 - whoa some crazy internet thing just
68:53 - happened did I put that oh no I'm in the
68:56 - wrong place I opened the wrong I opened
68:58 - my earlier example okay this was my
69:00 - earlier example by the way I'm not I did
69:02 - this earlier today I'm not just figuring
69:04 - it out right now okay close that I
69:06 - should go here this is the package.json
69:08 - file that just got created and you can
69:11 - see here there is the information that I
69:13 - typed in the title The version and you
69:15 - don't see what you're what you don't see
69:17 - are dependencies so the first thing that
69:20 - I need to do in order to be able to add
69:22 - this thing oops dramatic moment add this
69:25 - thing called
69:27 - Express is I need to put in this
69:31 - package.json Json file that I'm going to
69:34 - use a node package called Express only I
69:37 - don't actually have to type it in there
69:39 - because what I'm going to do is I'm
69:41 - going to just say npm can you see this
69:43 - got to move this over npm install
69:46 - Express now I want to do one more thing
69:49 - I want to dash I want to write-- saave
69:53 - and what this command is going to do is
69:54 - it's going to say
69:55 - put save Express as a module that should
69:58 - be associated with this project I'm
70:01 - going to do this it's going to blah blah
70:02 - blah blah magic magic and then if I go
70:05 - back to here you can see now in this
70:07 - file it has a dependency on Express so
70:11 - this is just a lot of I mean this is
70:12 - like the least interesting thing I could
70:14 - probably ever do with my day is talk
70:16 - about like package.json and package
70:18 - manager Express blah blah blah but these
70:20 - are the steps you want to do to kind of
70:22 - set up your project before you write
70:24 - code you'll also also notice by the way
70:26 - that there's this new directory here
70:28 - called node modules so node modules is
70:31 - where the all the code and stuff for
70:33 - Express actually got placed by when I
70:35 - typed um when I typed npm install
70:38 - Express okay so later I'm going to add
70:41 - the socket module but right now I'm just
70:43 - going to keep the express
70:44 - module okay so I hope that cough wasn't
70:48 - too loud into the microphone uh what's
70:50 - next everybody so now we can start to oh
70:53 - that's that's my secret code no not here
70:56 - so now we can start to actually
70:59 - write we can actually start to write
71:02 - some
71:03 - code uh into our server itself so one
71:08 - thing that I'm going to do is I'm going
71:09 - to say VAR Express equals
71:14 - require Express so this is a way is that
71:18 - that what I wrote over here
71:19 - yeah this is a way of importing the
71:22 - module that you're using so the module
71:25 - name name is Express and I want to
71:27 - require that Express is something that I
71:29 - have access to in my node program and
71:32 - essentially I want to import all that is
71:35 - the live all that is the framework
71:36 - Express and I want all of that into a
71:38 - single variable called Express the
71:40 - reason why I can do and that variable by
71:42 - the way is a function call I mean the
71:44 - variable is a variable but it's it's
71:47 - it's storing a function a JavaScript
71:48 - function you know what that JavaScript
71:50 - function
71:51 - does it makes an express application so
71:55 - I can trigger the express function and
71:57 - store the result of that in a variable
71:59 - called app and then even better what I
72:03 - can do is I can say um server equals
72:08 - app. listen Port
72:10 - 3000 so
72:13 - now dare I say if I run the server my
72:18 - socket server is running and look at
72:19 - that it didn't go back to terminal
72:21 - something's happening something is there
72:23 - on Port 3000 and I can go to my browser
72:26 - and say Local Host right this Local Host
72:29 - being the servers running on my local
72:31 - computer if this server were running on
72:33 - you know the New York Times website I
72:35 - would go to New York times.com col Port
72:37 - 3000 but I'm not the New York Times in
72:39 - case you were wondering and now I'm
72:40 - going to hit enter and now it's like ah
72:44 - it doesn't know what to do but this is
72:45 - reasonable right because I haven't told
72:47 - it what to do there's no files there's
72:49 - no instructions for it to follow but
72:52 - this is the basic idea the basic idea is
72:55 - that I want to and and by the way you
72:57 - could do this without Express but it
72:58 - would be like 10 11 12 lines of code so
73:01 - I'm using Express to set myself up for
73:03 - the future of Life of less worry Express
73:07 - will give you less worry in your life so
73:09 - I require the library I create the app I
73:12 - listen on Port 3000 and now what do I
73:15 - want to do what I want is when the user
73:19 - goes to my website I want them to see my
73:21 - p5js sketch so the main thing I want to
73:24 - happen is I want want to send my HTML
73:27 - file along with my JavaScript file and
73:29 - everything else so they can experience
73:30 - my sketch well one thing I need to do in
73:32 - order to do that is I need to go to this
73:34 - directory right this directory has a lot
73:36 - of stuff in it right now it has both the
73:39 - node stuff like server.js and
73:41 - package.json and the node modules and it
73:43 - also has the p5js stuff an HTML file
73:45 - sketch. JS and a library I don't like
73:47 - this everything's mixed and a mess so I
73:50 - want to make a
73:51 - folder and I'm going to make that folder
73:53 - called sketch now truth be told probably
73:56 - if you see examples most people are
73:58 - going to call that folder public let's
74:00 - call it public the reason why I'm going
74:01 - to call it public is this is like going
74:03 - to be where I put files that I want the
74:05 - public to be able to see when the public
74:07 - goes to my web server they get these
74:09 - files and so what are the things I don't
74:11 - want them to see my server code but I
74:12 - want them to see my p5js sketch so I
74:14 - want the HTML file the libraries and my
74:17 - Javascript file and I want to put that
74:19 - here in public now what I need to do
74:22 - here is add another line of code which
74:26 - allows which says I want to host those F
74:29 - whenever anybody goes to my website I
74:31 - want them to see those files so the way
74:33 - that I do that I'm just going to copy it
74:34 - from over
74:35 - here um and I'm going to put it right
74:38 - here so this is what the code looks like
74:40 - app. use express. static publ so what's
74:44 - the word static for so the word static
74:47 - here is hosting static files so those
74:49 - are files that aren't Dynamic and
74:51 - changing they're just like here's an
74:52 - HTML file here's a Javascript file
74:54 - here's some images I want to host
74:56 - everything I want I want the app to use
75:00 - to to host everything in that public
75:02 - directory so that when the user goes to
75:04 - my website they see what's in the public
75:06 - directory so I'm going to hit
75:09 - save and now I'm going to hit control C
75:11 - I'm going to run the server again my
75:13 - socket server is running I'm going to
75:15 - hit refresh and look at that I don't see
75:18 - cannot get anymore but I don't see
75:19 - anything in there why don't I see
75:20 - anything in there well I don't see
75:22 - anything there because there's no actual
75:23 - sketch so let me go into public let me
75:25 - go into sketch. JS let me say create
75:28 - canvas 200200 let me say uh background
75:33 - 51 let me say ellipse like Mouse X Mouse
75:36 - y
75:38 - 6060 and Let me refresh again and you
75:41 - can see there we go so now I actually am
75:43 - hosting a p5g sketch from node with
75:47 - just with Express with just an uh you
75:51 - know four four slash five lines of code
75:53 - so by the way I have another video which
75:55 - I would like to reference somehow with a
75:57 - link where I looked at how you can run a
76:00 - local server on your computer using
76:02 - python simple server well now here's
76:04 - another way you can run just a local
76:06 - server on your own computer with node
76:08 - with Express with four lines of code so
76:11 - we've got the basic idea now we know
76:13 - what node is we've installed it we've
76:15 - got Express we added a little bit of
76:17 - code we are now seeing our sketch in the
76:21 - browser the next thing I need to do is
76:24 - add the side socket package I need this
76:26 - server to be able to make socket
76:28 - connections to the browser the client
76:31 - itself to be able to send message
76:32 - messages back and forth and that's what
76:34 - I will do in the next
76:39 - video
76:41 - okay
76:43 - uh okay um I don't know if that was that
76:49 - I feel like had some problems but it'll
76:51 - just have to do
76:54 - you know honestly like I used when I
76:56 - used to make these videos I wouldn't
76:58 - live stream them and I would do the
77:00 - video and then I would just immediately
77:02 - delete it and I would just do it again
77:03 - and the second one would always be a
77:04 - little smoother and with less Stakes but
77:07 - it is what it is hopefully people will
77:09 - find these useful I could always
77:10 - re-record it later some other
77:14 - time it's very hot in this
77:16 - room because I'm using these H hallogen
77:18 - lights which seem to do well for the
77:20 - keying and everything I wonder if uh
77:23 - I'll be fine though okay
77:25 - um let me look at the time
77:28 - here um it is 38 let me look at my list
77:33 - can I finish this today that is the
77:37 - question
77:39 - um delete
77:41 - this
77:44 - uh uh
77:48 - yes so I need to
77:50 - add
77:52 - socket.io package with event
77:55 - so let me go
77:57 - back I wish I knew that this is It's
78:00 - funny like a lot of stuff that I do I
78:01 - just like have it know it by heart
78:03 - having done it so many times but this
78:04 - I've only ever really done to make an
78:05 - example I don't know it that well so
78:08 - what I want to do is open up this file
78:10 - all right and look down here now
78:12 - somebody was telling me I was going to
78:13 - have a
78:16 - problem oh yeah thank you there's the
78:20 - problem uh
78:25 - and I don't like as a matter of course I
78:28 - don't really
78:29 - like um Anonymous functions for I mean
78:33 - it's useful for for
78:35 - teaching so I'm going to do
78:43 - something like
78:45 - this just kind of
78:55 - just so I can look at this
79:14 - here
79:15 - okay
79:17 - and so this
79:20 - should do the trick
79:29 - change this to
79:38 - this uh okay
79:42 - um so
79:50 - okay all right so now hold on and I need
79:53 - to look also at
79:56 - this connect Local Host 3000 on Mouse
80:00 - okay that's fine that I can do okay
80:06 - um okay I think I'm ready mentally ready
80:09 - to add the New
80:12 - pieces
80:15 - uh and I would prefer to write it like
80:18 - this
80:26 - I guess I should make sure this still
80:27 - works but I I feel confident it will
80:30 - okay let me look at the chat see if
80:32 - there's any
80:36 - questions uh app. uses middleware okay
80:39 - thank you
80:44 - Sako okay let me check
80:47 - twitch okay guys are quiet
80:51 - today um but I am ready to do the the
80:54 - next stage of
80:58 - this um and do that over
81:02 - here um hold on let me close all this
81:05 - stuff I need that and this can be a
81:08 - little bit
81:10 - bigger and I need
81:16 - this
81:18 - and what is going on
81:23 - here do the
81:25 - trick
81:27 - uh okay how's that plenty of room
81:32 - okay and let me cycle the
81:47 - cameras okay I
81:49 - think I am now
81:55 - uh I think I am now ready for the next
81:59 - phase this is the good part of getting
82:03 - the socket actually to work and have the
82:04 - communication
82:06 - happening so
82:09 - let's let's make that
82:12 - happen
82:14 - um let me just I want to look at one
82:17 - thing
82:17 - here on Mouse yes draw
82:22 - okay okay send Mouse data init Mouse
82:26 - data
82:28 - okay close enough okay I don't know I'm
82:31 - never going to remember this all this
82:32 - but let's do it okay so first I need to
82:34 - install
82:36 - socket.io and then create the socket
82:40 - connection um with the server and then
82:43 - create a
82:47 - um create a uh iio docket. on connection
82:54 - okay
82:55 - all right let's do
83:03 - this uh here we
83:13 - go here we are part three of making a
83:17 - collaborative canvas socket connection
83:19 - p5js drawing thing and we are at the
83:22 - point now where we have a node server
83:24 - that is serving a p5js sketch if I run
83:28 - that server it start
83:31 - over I don't think I'm GNA just go right
83:33 - into it okay um and actually one thing I
83:36 - want to
83:38 - do I what I meant to do by the way and
83:40 - I'm going to fix this now is put this
83:45 - here
83:51 - this and uh
84:06 - doesn't really
84:07 - matter
84:10 - and okay and sorry I'm being like really
84:14 - pnic about this
84:19 - but
84:21 - okay uh
84:31 - part three of making a collaborative
84:34 - drawing canvas thing in the browser with
84:36 - p5js node and sockets so where we last
84:38 - left off was we had a node server
84:42 - working with oops not this code we had a
84:44 - node server using Express to host a
84:47 - directory and in that directory was a
84:48 - p5js sketch the thing that I need to add
84:51 - is now that socket connection between
84:53 - the sket skch and the server so that if
84:56 - I have another sketch I can have
84:58 - messages going between the from one
85:00 - client to the server to the other client
85:02 - so let's see how we get that working so
85:04 - the first thing I need to do is add the
85:06 - socket.io package to my uh
85:11 - Whatchamacallit node package application
85:14 - thingy so if I go back to
85:16 - terminal I want to say npm install
85:21 - socket.io D- saave that's can install
85:26 - socket.io install install install and
85:28 - you should see now here in package.json
85:31 - we now have added socket.io as a
85:35 - dependency for this particular node
85:37 - application so now that that's there and
85:40 - I go back to my server I can now start
85:42 - doing stuff with sockets so the first
85:44 - thing I want to do is say uh socket
85:48 - equals requir socket.io so this is like
85:51 - an import statement in the same way that
85:53 - I wanted to use a Express Express equals
85:55 - require Express I now want to say socket
85:57 - socket equals requir
85:59 - socket.io now what I want to do though
86:02 - actually is open a create an actual
86:05 - socket that's part of this server so the
86:08 - server that's listening on Port 3000
86:10 - that's in the variable server now I have
86:13 - access to this socket Library which
86:14 - socket is of course a function and so
86:17 - I'm going to call this variable IO it's
86:19 - going to be the thing that's going to
86:20 - keep track of inputs and outputs
86:23 - messages in and out and I want to say
86:26 - socket I'm going to call the socket
86:28 - function and give it the server as an
86:30 - argument so I've imported the library
86:32 - and the library exists it's just like a
86:34 - big function I call that function with
86:36 - the server that's listing on Port 3000
86:38 - and I've got that in a variable now once
86:41 - I have that I want to start dealing with
86:44 - certain events and the main event the
86:46 - first event that I just want to deal
86:48 - with is if I have a new connection so I
86:52 - think what I do is I say
86:55 - io.
86:57 - on
86:58 - connection so sockets work based on
87:02 - different types you have to write the
87:04 - idea here is that there's this socket
87:06 - that's a connection and in J the way
87:09 - that everything in JavaScript always
87:10 - works is like there's an event and this
87:12 - code is the stuff that happens when this
87:14 - event is triggered events for sockets
87:16 - are like hey I'm connected to you so
87:19 - that's an event another event is hey
87:20 - here's a message another event is oh I'm
87:23 - disconnected now so these are all the
87:25 - events the first event I want to deal
87:26 - with is just a new connection event and
87:29 - I want to have a function to handle that
87:31 - event and of course I could put an
87:33 - anonymous function just inside right
87:34 - here but I'm going to try to make things
87:36 - a little simple and explicit and I'm
87:37 - going to say new
87:40 - connection and so that means and this is
87:42 - wrong I'm g go look up in my answer key
87:46 - io. sockets Doon I knew I was missing
87:48 - something so I need to I uh this is the
87:51 - syntax for that I have my and did I get
87:53 - the other stuff right
87:56 - yes I did okay uh so what I I need to
87:58 - say IO which is the object now the whole
88:01 - input output object that's created by
88:03 - that socket function I want to go inside
88:04 - that object to this thing called sockets
88:06 - call the function on to set up a
88:08 - connection event and I'm now going to
88:11 - say function new
88:14 - connection and what is the thing that is
88:17 - exists when there's a new connection a
88:21 - socket so an argument is placed in that
88:23 - function and I can could say something
88:24 - like you know
88:27 - console.log socket let me run this
88:30 - server
88:34 - now I'm running the server my socket
88:36 - server is running okay the socket server
88:39 - is running I'm now going to go into the
88:42 - browser here we go into the
88:44 - browser I'm going to refresh this page
88:47 - gonna connect with a
88:49 - socket I don't see anything so here's
88:52 - the thing I can set up a socket server
88:54 - all I want to wait for connections but
88:56 - I've also got to write the code in the
88:58 - client to connect to the the server like
89:01 - let's go back and look at my client
89:03 - code
89:05 - uh I don't see anything in here about
89:07 - connecting to a socket so here's the
89:09 - thing that I need to do I need to also
89:12 - have a reference to the sockets library
89:15 - in the client what libraries is so
89:18 - socket so let's let's this is this I'm
89:21 - already confused and I and I I
89:23 - supposedly know what I'm doing which I
89:24 - don't really but you know whatever um so
89:26 - I can look at socket.io go to the
89:28 - socket.io website come on internet don't
89:30 - fail me now um and you can see socket
89:33 - 1.0 is here and I can go down and uh
89:36 - there was something that I was going to
89:37 - look I could go to download ah so here
89:40 - it right so there is both a socket.io
89:44 - server and a socket.io clients this is
89:47 - what I need I need the socket.io server
89:50 - to run here I've already written the
89:51 - code for that now I need socket. IO to
89:54 - run on the client so I need to add that
89:56 - to my client code and one thing that
89:59 - you'll notice here is a quick way to do
90:00 - that is actually just to copy this line
90:04 - here which is referencing the s.i. JS
90:07 - Library uh via a CDN a Content delivery
90:10 - Network so I could download the file and
90:12 - put it in my libraries folder but this
90:14 - is going to be a little bit simpler so
90:17 - I'm going to do that and then I'm going
90:20 - to go to my index.html file right this
90:24 - is where I'm referencing libraries
90:26 - excuse me P5 libraries P.D libraries P5
90:29 - do sound let me now add another line of
90:32 - code here that just references socket.io
90:35 - so now I'm referencing that socket
90:38 - Library I can once again hit
90:41 - refresh let's open up the browser
90:43 - console nothing there nothing there
90:46 - right I've got the library but now I
90:48 - need to write some actual code H it's so
90:51 - sad when you just like can't remember
90:54 - what the code is to write good thing I
90:56 - already have the example prepared so I'm
90:58 - going to go to my sketch. Js I'm going
91:00 - to go to the one that I did uh earlier
91:03 - and I know that I need the thing that I
91:05 - need is to create a variable called
91:08 - socket and then in setup I want to say
91:11 - socket equals socket.io doc connect and
91:15 - then what do I want to connect
91:20 - to oh
91:22 - hey uh
91:26 - I think I want to connect to Local Host
91:28 - colon 3000 so that's what I've set up my
91:32 - node server to run on it's running on
91:34 - this local computer and it's opening up
91:37 - on Port 3000 so uh did I get that right
91:41 - let me just like briefly oops wrong
91:43 - place let me briefly peek over here
91:45 - wrong place again io. connect uh oh
91:49 - because I've I've uh what did I do
91:52 - okay because I've imported I've imported
91:54 - the library which gives me access to a
91:56 - global variable called IO which should
91:59 - connect so now let me hit
92:02 - refresh and let me go here
92:11 - whoops fail all right let's see what I
92:14 - missed here uh that should matter
92:17 - connect Local H let me just copy this
92:20 - directly uh and uh
92:25 - server let me look at my server uh let
92:27 - me just
92:32 - see maybe there was nothing to see that
92:35 - was printed out in that
92:41 - uh oh yes there we go I don't know why
92:43 - that didn't work before maybe I didn't
92:45 - restart the server uh okay hold on I'm
92:46 - gonna I have to like edit out this part
92:49 - of the video hold on I'm gonna pause for
92:51 - a
92:52 - second uh
92:55 - oh my goodness I've lost my mind here
92:58 - okay I'm gonna
93:01 - uh
93:08 - oops oh it's getting refused connection
93:12 - am I running the other one no okay hold
93:16 - on a second
93:17 - everybody let me just go back for a
93:20 - second
93:33 - oops that looks
93:37 - good okay so things are
93:40 - working all right uh I'm just checking
93:43 - the chat now for a second uh Local Host
93:46 - is the
93:49 - same uh yes this is really helpful
93:53 - comments in the
93:55 - chat uh uh let me check twitch for a
93:58 - second
94:00 - here uh
94:04 - okay uh Dan I wrote local host.com 3000
94:08 - is that
94:14 - wrong
94:16 - uh oh yeah you're right it should just
94:18 - be local yeah why do I why would I write
94:20 - local host.com that's totally wrong so
94:23 - where can I I need to go
94:24 - back
94:26 - um somehow yeah why did I write because
94:30 - I'm a
94:31 - lunatic
94:33 - um I'm gonna I I gotta just record from
94:36 - somewhere and then I'll splice it it's
94:37 - so much nicer by the way when I go home
94:39 - and I'm like I'm gonna upload the videos
94:40 - from today and I didn't do this thing
94:42 - where I stop in the middle and hit
94:44 - record again but I'm GNA do that uh
94:47 - where did I write.com did I write it I
94:49 - wrote it
94:50 - here uh yeah that was the problem
94:54 - okay I'm going to just cop to that this
94:57 - is what I did
95:01 - right uh
95:05 - okay right because if I do
95:09 - that right and that doesn't work and
95:11 - that's where I didn't start getting
95:12 - errors because it can't connect to that
95:16 - okay okay got it all right I'm going to
95:19 - come back to correct this error and we
95:21 - should be okay and but I want to look up
95:23 - one another
95:24 - thing socket on on no no no that's in
95:28 - the sketch what I want to do
95:31 - is uh oh that's what I'm
95:35 - writing Mouse message
95:38 - yeah okay socket. on mouse mouse message
95:42 - okay socket. on
95:44 - disconnect
95:46 - yeah I to dis we have a new client
95:48 - socket.
95:51 - ID okay
95:55 - uh okay
95:58 - great
96:05 - okay
96:13 - uh
96:18 - um
96:22 - okay oops back after a mistake that I
96:25 - couldn't see which is now quite obvious
96:26 - to me for some reason I wrote local
96:28 - host.com here there should be no do
96:31 - Local Host is the full name of my local
96:34 - computer I could also write by the way
96:36 - uh the the 127.0.0.1 which is a special
96:40 - reserved IP address for a local computer
96:42 - but I'm going to keep that as Local Host
96:44 - so once I now am connecting in my client
96:48 - I should be able to hit refresh here and
96:51 - go here and you say oh all this stuff
96:53 - spit out now so here's the thing what
96:55 - did I do in the code I if in the server
96:58 - code I said right here in a new
96:59 - connection console.log the socket object
97:02 - the socket object has a ton of metadata
97:05 - associated with it uh you know the IP
97:08 - address and all sorts of information
97:09 - about uh what's been what's connecting
97:11 - one thing that I'll do here is just we
97:14 - could evaluate look at all that stuff
97:15 - but that's a sort of for another day
97:17 - perhaps I'm going to say socket. ID and
97:20 - I'm going to say new connection socket.
97:24 - so this is a nice way uh every single
97:27 - new connection to a web server new Saka
97:30 - connection to the server gets
97:31 - automatically assigned an ID number for
97:34 - tracking it over time that might be
97:35 - something you make use of so I'm going
97:37 - to put that in here I'm going to run I'm
97:39 - going to uh whoops I'm going to run the
97:41 - server again I'm going to go back to the
97:43 - browser I'm going to hit refresh and we
97:46 - should see new connection I don't know
97:48 - why I got two new connections I probably
97:50 - by accident still had it open but um
97:52 - then I can go open up another browser
97:54 - window and another browser window and
97:57 - another browser window and you can see
97:58 - all of these connections are coming in
98:00 - so all of those instances are all
98:02 - connected to the server all with a
98:04 - socket connection so we are in good
98:07 - shape now we
98:10 - have added the
98:12 - socket.io library to both the client and
98:15 - the server let's review that for a
98:17 - second in the server we need to require
98:20 - socket.io connect it to this particular
98:23 - webs server and write a function to
98:24 - handle new Connections in the client we
98:28 - need to make sure we've o sorry
98:31 - imported socket. i. JS in the HTML file
98:35 - and we also need to make sure that we
98:38 - create a open a connection to the server
98:41 - that has the socket server on it so that
98:44 - sort of concludes the add sockets to
98:46 - your thing and the next thing that we
98:49 - need to do the very last piece is we
98:51 - want to add code from this client ient
98:53 - to send a message to the server we want
98:56 - to add code to the server to receive
98:58 - that message and send it out to all
99:00 - other clients and that's what I'll do in
99:01 - the next
99:04 - video okay I decided to break this up
99:06 - into two videos it's
99:08 - 3:30 by golly I'm going to finish this
99:10 - today uh even though I sort of said I
99:12 - had to go at 3:30 I'm going to give this
99:14 - another 15 minutes I think I can do this
99:15 - last
99:16 - piece
99:21 - um Okay so I'm going
99:25 - to um let me recap for myself
99:30 - uh
99:32 - okay so I'm going to now what I'm going
99:35 - to do
99:40 - is
99:42 - uh create a new browser window
99:54 - yeah so you know what the library is
99:57 - just smart enough that those they
99:59 - somehow the socket stuff is smart enough
100:01 - that it just
100:03 - reconnects
100:11 - uh I just want
100:21 - to okay
100:24 - just want to not have any okay so this
100:26 - is what we're starting
100:28 - with uh
100:37 - here sorry everybody I'm just trying to
100:41 - okay
100:55 - okay good so I'm ready for this last
101:03 - piece
101:08 - um
101:21 - okay okay here we go go here we go here
101:24 - we go here we
101:26 - go
101:40 - um here we are the Moment of Truth part
101:43 - four we now have a node server running
101:46 - it's a socket server I have two clients
101:48 - going in two different browser windows
101:50 - both connecting to the server but if I
101:53 - move my mouse around here to draw I
101:56 - don't see the result of that drawing in
101:58 - this one over here so what I need to do
102:00 - now is add the last piece as I move the
102:03 - mouse in a client I need to send a
102:05 - message once I and then in the server I
102:09 - need to receive that message and send it
102:11 - out to everybody else so let's see if we
102:13 - can make that happen so the first step
102:15 - is let's add code in the client to send
102:18 - the message so I'm going to go to
102:20 - Sublime here where I have all my
102:21 - different pieces and this is my client
102:23 - code I have a socket variable and I
102:26 - connect to the server so what I want to
102:28 - do
102:29 - is I'm what I'm going to do is in I'm
102:32 - I'm going to write a function called
102:33 - Mouse dragged the mouse drag
102:37 - function
102:40 - uh you'll
102:45 - see uh is a function the event function
102:48 - that's triggered whenever I drag the
102:49 - mouse and so if I add that in and put
102:52 - the console whoops wrong console put the
102:55 - console in and I hit
102:57 - refresh you can see oh when I whenever I
103:00 - drag the
103:01 - mouse and uh you can see that I'm
103:04 - printing out those Mouse coordinates so
103:05 - that's where I want to send I just
103:06 - realized there's sort of a flaw in my
103:08 - program which is that I also want to
103:12 - draw in Mouse dragged as well so now
103:15 - right if I move the mouse nothing
103:16 - happens but if I drag I move the mouse
103:18 - and I see the coordinates spitting out
103:19 - in the console so now what I want to do
103:21 - is I need to create a message that I'm
103:23 - going to send and the way you create a
103:26 - message is two things you need a name
103:28 - for the message which is a string of
103:29 - text and you need the data for that
103:31 - message which is just a JavaScript
103:33 - object so the data for that
103:36 - message is I'm going to say x is mouse X
103:40 - and Y is mouse y so this is the content
103:43 - of my message I want to send the mouse X
103:45 - and mouse y value and then I also need a
103:48 - name so I think I say socket. emit Mouse
103:54 - do dat and so I'll change this to saying
104:02 - sending so now in the code you see this
104:04 - is really the sort of crucial part right
104:06 - here which is that I when I want to send
104:08 - a message I create a JavaScript object
104:10 - with the data in it I then say socket.
104:13 - emit I name the message the name is
104:15 - important because it's a you're making a
104:17 - protocol like what if you have a whole
104:18 - lot of different messages and you do
104:19 - different things based on what the name
104:21 - of the message is that's a way to uh in
104:23 - this case I don't really have to worry
104:24 - about that but that's kind of important
104:26 - um and then I attached the data to it so
104:28 - now I've sent the message now let's
104:30 - first even just run run the sketch to
104:33 - make sure uh there aren't any weird
104:35 - errors you know sending you can see that
104:37 - it's sending that stuff seems to be
104:39 - working I don't get any errors and the
104:41 - server I don't see anything happening in
104:43 - the server because I haven't written the
104:45 - code to receive the message so now I
104:48 - need to go to the server to write that
104:51 - code server code
104:53 - right
104:56 - here this is the function where that is
105:00 - triggered when there's a new socket
105:01 - connection so what if this particular
105:05 - socket connection sends a message right
105:07 - not just any message I want what if a
105:09 - message comes from this particular
105:11 - client so I should be able to say
105:14 - socket. on Mouse you know Mouse
105:19 - message I don't know if that's right let
105:21 - me look at my cheat sheet over here ah
105:23 - look that's right so what I what I'm
105:27 - saying is if this if there is a message
105:29 - called Mouse uh trigger this
105:32 - function so I'm going to write that
105:35 - function
105:36 - now and I'm just going to say
105:39 - console.log
105:41 - data so this is now I have a server the
105:45 - server is waiting for connections when
105:47 - there's a new connection I say there's a
105:48 - new connection when there's a message it
105:51 - logs that particular message
105:53 - so let's take a look at this working now
105:56 - so one thing I need to do is I need to
105:58 - restart the
105:59 - server you incidentally there's a way
106:02 - using a tool called nodemon which maybe
106:04 - I should show you at some point to Auto
106:05 - restart a server every time you you
106:07 - change code but I'm not going to worry
106:09 - about that right now I can hit control C
106:10 - and start it again so I'm running the
106:12 - server everything is connect reconnected
106:13 - automatically but I'm going to refresh
106:15 - anyway and you can see it's sending
106:17 - sending sending and look at this
106:20 - receiving come on you can do it let me
106:22 - move this over here I'm going to move
106:24 - the mouse around here you can see look
106:26 - I'm sending and I'm receiving boy this
106:27 - is getting good I'm sending and I'm
106:30 - receiving I'm sending and I'm receiving
106:33 - but I am not sending again to receive
106:37 - over here right the message went from
106:38 - here and then it went to here now I need
106:40 - it to go here and incidentally if a
106:42 - message from here goes to there I need
106:44 - it to go to there let's see is that
106:46 - happening move this back over
106:50 - here right it's happening here it's
106:53 - happening here you can't see it but it
106:55 - is so the messages are coming into the
106:59 - server but they're not going back out so
107:01 - what do I need to do to have them go
107:03 - back out so I'm going to go to my code
107:06 - and I don't have this memorized so well
107:08 - so I'm going to go to my the example I
107:09 - made earlier and I'm going to grab this
107:11 - bit of code oops sorry everybody I'm in
107:15 - the wrong place a million times over and
107:17 - I'm going to add this back in right I
107:20 - could have remembered that so so what do
107:23 - I want to do when a message comes in
107:27 - when a mouse message comes in I want to
107:30 - call the broadcast. emit function to
107:33 - send a message back out what do I want
107:35 - to send back out that exact same message
107:37 - and what do I want to call it Mouse so
107:39 - you can see that there's a lot of
107:40 - possibilities here a message that comes
107:42 - in could be parsed altered changed
107:45 - renamed sent back out but I'm not doing
107:47 - that in this sort of simple example I'm
107:49 - just taking the literal message in the
107:51 - name and the data and I'm sending the
107:53 - exact same back out name in the data now
107:55 - incidentally we have this question here
107:58 - I'm going to go back to all this let's
108:01 - say the message comes from this client
108:03 - into the server do I want that message
108:05 - then to go back out to whoa back back
108:09 - out to both of them or do I want so
108:11 - message comes in goes back out to both
108:13 - of them or do I want message to come in
108:15 - and only go to this one or if there was
108:18 - another one to go to the other two in
108:20 - this case I don't want the message to
108:22 - come back to myself but in other cases
108:25 - you might but I want to show you I'm
108:26 - going to keep this in the code example
108:28 - that I upload that there is this is
108:31 - another way of writing this
108:33 - code I'm going to put it right
108:35 - here if I were to say
108:39 - instead reference the global the more
108:42 - not the specific socket to emit to
108:44 - everyone else but this iio do sockets
108:47 - which kind of refers to everything it
108:49 - will also include the client that sent
108:51 - the message so I'm going to leave that
108:52 - in there as a sort of separate side
108:54 - possibility but really we're kind of
108:56 - golden here we've got messages coming in
108:59 - and the message going back out but the
109:02 - message does not get received by the
109:03 - client so I've got to also go back to
109:06 - the client now and I've got to
109:08 - add something that handles the message
109:10 - coming in socket.
109:15 - on Mouse and I'm going to say new
109:19 - drawing so now if this particular so ET
109:23 - receives a message called new
109:25 - drawing what should it
109:28 - do well uh it should draw and I'm just
109:32 - going to grab exactly this same code it
109:36 - should draw something but at data. X
109:39 - data doy and let's make it a different
109:41 - color just so we can see it's different
109:43 - so this is now saying in addition this
109:47 - particular sketch should set up an event
109:49 - handler for when a message comes in
109:51 - right it's kind of confusing the same
109:53 - sketch is both has functions for sending
109:55 - out and receiving because it's not like
109:57 - there's two different sketches running
109:59 - there's two different instances of the
110:01 - same sketch so if this one sends this
110:04 - one receives but they both have but if
110:05 - this one sends this one receives they
110:07 - both have the sending and receiving code
110:09 - in them now I might have missed
110:10 - something I'm going to feel ambitious
110:12 - though and just run it because I don't
110:14 - have this stuff memorized so these uh
110:16 - whoops let's go to the browser here I'm
110:19 - going to refresh and refresh and see oh
110:22 - no I didn't miss anything so you can see
110:23 - it works beautiful oh that's so nice so
110:27 - you you know there's so much
110:29 - possibilities here and you know
110:31 - incidentally we are being
110:34 - really uh there is absolutely no
110:39 - reason why I shouldn't add a third one
110:41 - just to demonstrate what's really going
110:43 - on here so now if I hit refresh
110:46 - here right you can see and let me Let me
110:49 - refresh all of these
110:55 - okay here we
110:57 - go uh I'm going to draw a
111:00 - heart because I love you all for
111:02 - watching this video two hearts for the
111:05 - two people left who are still watching
111:07 - this video and then I'm going to fill in
111:09 - the heart here because that will make it
111:11 - Pink on the other two look at this this
111:14 - is way too much fun I'm going to mess
111:15 - around with this later after I turn this
111:17 - video off but you can see the idea here
111:19 - is we have all the pieces we have a node
111:23 - you can now remember we have a node
111:24 - server that's hosting a P5 sketch the
111:28 - node server is running Express and
111:30 - opening socket connections whenever a
111:32 - client runs it connects via socket to
111:35 - the server if it sends messages to the
111:36 - server the server receives that message
111:38 - and sends it back out to all the other
111:40 - clients not including the original one
111:42 - let me show you again where all the
111:43 - pieces of that the code are so here uh
111:47 - this is U let me look at the directory
111:49 - of files right this is everything you
111:52 - need
111:53 - the server.js has the code for running
111:55 - the server and receiving socket messages
111:57 - and sending them back out to the clients
111:59 - inside public is my p5js sketch in
112:02 - sketch. JS I have the client code which
112:05 - sends messages to the server and then
112:07 - also receives messages from the server
112:09 - so if I go to that server we can see all
112:13 - I'm doing is I have new connection um I
112:18 - have a a function that handles new
112:19 - connections and a function that receives
112:21 - messages and sends them back out
112:23 - immediately and if I go to the client I
112:26 - have a I have a variable that connects
112:30 - to the server uh it handles new messages
112:33 - and also has a function when the mouse
112:36 - is dag for sending messages so sending
112:38 - receiving sending receiving server
112:40 - client node Express socket P5 JJs all of
112:44 - those things make this particular
112:46 - example I will have all of the code on
112:49 - GitHub I hope that you make something
112:51 - with this do something different uh I'm
112:54 - sure I missed some stuff so leave things
112:56 - in the comments I will add some addendum
112:57 - videos to pick up items I missed or
112:59 - maybe how to deploy this somewhere or
113:01 - other kinds of messages that you could
113:03 - send um and let me know uh and have a
113:06 - good day with your sockets and hearts
113:08 - and things like
113:11 - that okay I got through that
113:15 - um all right everyone um so uh it is uh
113:21 - 3:45 I have to leave but I'm going to uh
113:24 - stay for five two or three minutes um to
113:27 - copy the video files into Dropbox so
113:29 - that they'll upload to me so I can put
113:31 - them on YouTube later um and also to
113:33 - wait and see if there's there's a lot of
113:35 - chat going on right now so uh I if there
113:38 - I'm GNA I'm kind of I'm scrolling
113:40 - through it to look but wow 13 people
113:43 - watching on um twitch which is really
113:47 - kind of cool um I'm going to um get all
113:51 - my video files sorry sorry everybody so
113:53 - ask your questions in the chat I'll come
113:54 - look at them in a second right now I'm
113:56 - doing something that you can't see which
113:58 - is I
114:03 - am
114:07 - uh
114:09 - uh I am sorry checking to see how much
114:12 - space I have in my
114:14 - Dropbox it should be
114:16 - okay and now I'm looking at all the
114:19 - videos I made today how much space they
114:21 - take up up which shouldn't be that
114:26 - much uh today today
114:28 - [Music]
114:31 - today boy I recorded a lot today that
114:34 - was
114:34 - [Music]
114:35 - good let's see if that is going to
114:40 - work oh too much
114:43 - problem we've got a problem Oh No it
114:45 - should be okay what's in here oh because
114:48 - it's got the cash okay no no we're fine
114:51 - I'm fine those should all upload okay
114:52 - I'm going to check the
114:54 - chat um thank you people are just
114:56 - writing nice things in the comments
114:58 - which is really great I appreciate that
115:01 - very much um so let me explain to you
115:04 - for those of you who are new or
115:05 - wondering what's going to happen I made
115:08 - basically I would say five or six so
115:10 - first of all as soon as I hit stop on
115:12 - the streaming button this YouTube stream
115:14 - will close down and the archive of the
115:16 - stream will be on my channel which
115:20 - is uh
115:23 - youtube.com
115:25 - chman uh and there's also an archive
115:27 - that's kept on Twitch uh you can
115:29 - communicate with me questions or
115:31 - feedback on Twitter um so as soon as I
115:33 - hit stop on the stream this
115:36 - whole one hour and 55 minutes will be on
115:39 - YouTube it takes an hour or so to
115:40 - process then probably not until tonight
115:44 - uh after my children go to bed um I then
115:47 - will go through the like video files
115:50 - that I saved to disk and I'll trim them
115:52 - and do one quick little edit then I will
115:55 - upload them as separate videos and make
115:56 - a playlist so that the um there will be
116:00 - a playlist for the four or five videos
116:03 - that I recorded of the steps so you'll
116:04 - be able to watch that later um also and
116:08 - um you know one thing that I need to do
116:10 - about you know I need to add annotations
116:12 - and write better descriptions and that
116:13 - sort of thing but just uh if you can't
116:15 - find something uh Twitter is the best
116:17 - way to uh reach out to me um and that
116:20 - sort of thing and um you know you don't
116:24 - need to do anything but spread the word
116:26 - I'm trying to I've got this semester
116:28 - where I have more time to make videos
116:30 - I'm trying to see like what this can
116:32 - really uh become if this is a kind of a
116:35 - sustainable model to just make learn to
116:37 - program videos I really enjoy doing it
116:40 - so tell people to subscribe or watch or
116:42 - whatever and I'm going to be back doing
116:44 - so I hope to be back here tomorrow I
116:46 - didn't really expect to do this one
116:48 - which and I might do some
116:50 - more oh boy I have some other stuff I
116:52 - have to do to do this week but I hope to
116:53 - be back here tomorrow um to do actually
116:55 - some more node videos um because I'm
116:59 - doing a workshop on Saturday and so I
117:00 - meant for this to be stuff preparing for
117:02 - the workshop but I realized I went off
117:03 - on a different topic but I'll be back
117:05 - tomorrow and possibly on Friday uh but
117:08 - perhaps just tomorrow this week uh you
117:09 - can subscribe to my email notification
117:11 - list I always post on Twitter which is
117:13 - at shiffman Donnet and uh I'll send an
117:17 - email probably tomorrow morning about or
117:19 - later tonight about the timing of the
117:21 - next live stream
117:24 - okay
117:28 - um yeah I'm definitely not going to
117:31 - delete the live stream it will be there
117:32 - it's just uh it's not as easy to watch
117:35 - it's you know two hours as opposed to um
117:37 - if somebody really wants to come just
117:38 - find the tutorial they'll find four or
117:39 - five 10minute videos so they'll both be
117:41 - there for sure um
117:44 - definitely
117:47 - um uh someone asked about videos based
117:50 - on Kai library and running processing on
117:52 - Android I'm definitely interested in
117:54 - that I have a long list of topics um so
117:57 - I I don't know that's not high on my
117:59 - list but um uh uh let me let me but uh I
118:03 - I keep a GitHub gist and you can see uh
118:07 - this is sort of the topic list that I'm
118:09 - working with uh uh uh somewhere here I
118:13 - have
118:16 - sockets I guess I didn't have it on this
118:18 - list but there's a lot of things that
118:20 - I'm kind of uh want to to get
118:23 - to uh let look at the comments database
118:26 - stuff yes I will definitely do database
118:28 - stuff uh that is definitely um important
118:32 - on my list of things to get
118:34 - to
118:44 - um so I have by the way the the I will
118:47 - upload the socket example
118:50 - soon um
118:54 - um okay and that's about it for today so
118:57 - get in touch leaveing messages on
118:59 - Twitter don't send me emails I you can
119:02 - but it's like email is like kind of
119:04 - impossible um but but I love to be in
119:06 - touch so ways that are um that's that uh
119:11 - um Twitter is a good thing I guess for
119:13 - that um YouTube comments I I always try
119:15 - to answer the YouTube comments questions
119:17 - there often if it's a big complicated
119:19 - question I'll just say ask this at the
119:21 - processing forum and head um because the
119:23 - YouTube comments is sort of best for
119:24 - sort of targeted questions based on a
119:26 - specific video and especially if you
119:29 - send me something like you referred to
119:31 - another video at this Tim stamp or you
119:33 - referred to a link at this Tim stamp
119:35 - it'll help me add like the annotations
119:37 - to the video so that um that is also
119:39 - really helpful in the comments if you're
119:40 - watching them okay uh I will see you
119:43 - guys soon I'm going to hit stop um
119:44 - everything uploaded to Dropbox so later
119:46 - tonight I will be putting this stuff on
119:48 - YouTube The Stream will go live
119:50 - immediately and I will see you all soon
119:52 - oh four this is going to be a 2our
119:53 - stream two one two hours

Cleaned transcript:

trying again I had a failed stream wh but that's not a good way to start hello good morning evening afternoon I'm looking at you you are in the form of a Canon lens but you are a real person I am a real person my name is Dan I am here in the world uh this afternoon I'm ready to talk about code and various things um before I get started um let me just see first of all let me see if things are are uh working here I don't think that my streaming to Twitch is working unfortunately but I'm I think I'm just not going to worry about that right now um uh can so the first thing I would like to know is if the audio is okay how's the audio uh the second thing I would like to know is if you can see things okay let me ah I'm on this computer let me open up processing because I'm going to do something in processing first uh it is about 1 15 2 p.m. eastern time on Tuesday April 12th uh can you see this processing sketch can you read this font if I walk over here oh I'm I didn't oh I didn't do my uh usually I wash the Whiteboard uh can you see this whiteboard can you read what's on it doesn't seem that bright but um let me know how everything looks and sounds I'm going to check out the chat audio seems okay yep works uh I'm GNA say uh try tonight 11 people I actually set out sent out an a MailChimp announcement I don't know if anybody got it saying I was going to come on and do this at uh 145 and it is um and I'm going to just see if twitch oh great so twitch is working um if you're I guess I am streaming to Twitch if you're watching on Twitch I see things in the chat saying you are so great um okay so um let me let me uh introduce what's going to happen today so I um I think probably everybody who's watching are people who have watched before um but um uh this helps me figure out who I am and what what place I have in the world but I uh live here in New York City I teach at a program called ITP at New York University I am on a leave for the semester and I'm spending time at a place called the school for poetic computation which is in the West Village uh it's um sfpc doio encourage you to check out their website um but I set up a recording studio here and I'm trying to dedicate myself to uh experiments in education online um and other types of experiments but in particular through this live streaming it's important to me to have have personal interaction so I'm trying to do stuff live with a chat uh I'm going to record some stuff as tutorials the topics are generally creative coding Graphics web JavaScript processing Java that sort of thing so I want to try something different today I don't have any coffee which is usually a good thing for me because the coffee is a problem um and usually I have a glass with water on it water in it instead I have this bottle which is very bad for the environment so maybe I'm going to try not to do that in the future um but what I want to do today is I want to start a new segment which I call the 10minute coding challenge so um I got a message on Twitter asking for help about creating a warp speed simulation I don't know if I just Google uh or Starfield kind of thing so like if I Google like a Starfield uh simulation uh and like uh JavaScript or something uh this so you can see here uh this is what I'm interested in trying to create uh sort of Starfield simulation like this oh this is a nice one in uh 10 minutes um I'm like looking over here at my hair um so and I also have figured out how to make a timer appear in the Stream that you're watching in the corner up there so let's so I'm going to try to get that set up uh I've got 14 people watching so uh the topic that I said I was going to do today which has been highly requested is p5js uh so like a drawing canvas in a browser that communicates over websockets so that if you're drawing and somebody else is drawing you can see what the other person is drawing so I am going to get to that but first I want to try this idea of a 10minute excuse me coding challenge just to see if it works so the first thing I need to do is I need to run this thing called desktop presenter oh um and uh so hold on ah because I need to hit save so I had to set up so I'm using something called wirecast and wirecast allows me to take multiple inputs combine this green screen with my computer screen move back and forth between different cameras and what I want to do is uh using something now that I found called desktop presenter which allows me to capture a portion of another application and overlay it so I'm just going to make I'm having a timer running in the browser for example um yeah so let me see if I can get this going so I need to go to uh uh so you'll have to bear with me for a second I'm going to do something that you can't see but you'll be able to see it in a moment uh so I've got desktop presenter going ah this worked earlier uh aha okay so let me see here sorry everyone this is going to take me a second because this is new and I had this I had this set up and working before I started the stream and wirecast crashed and my settings didn't get saved so I'm going switch to this got it okay this is good this is good oh no no no no uh oh yeah uh okay uh that's fine oops okay hold on this is working differently than it did before but I think it should be okay um and now let's see here uh edit shot I'm going to add please work uh new desktop presenter Source new local desktop presenter source and I'm going to hold on you'll see everything will be okay in a second output output settings no no that's not output settings Source settings oh never never configure your stream e e okay sound should be back sound should be back am I back can you hear me okay good okay so so I'm getting ready close this umh okay so I'm gonna do my first ever I'm going to call this Starfield I'm G oh so this is bad where I have this hold on a second everybody uh because this will block the code um I got to do a better job I think of that's probably fine right okay uh there we go this I don't need here oops I can't click on that this I don't need here can move these Down clean up okay how are we doing everybody you see the timer above my head you can hear me again and I'm G to do this uh 10 minute coding challenge okay uh I see in the chat ask does anyone know how long this is going to be so my plan it's now 200 is to stream until approximately 315 330 so perhaps an A little over an hour or so um so I'm going to first do this 10minute programming Challenge and then I'm going to take a break and uh start talking about node and sockets and p5js all together okay uh let me just check twitch here uh okay it's back audio is back uh there's only one person watching in twitch I'm not sure if I should keep the twitch stream thing going but okay so uh here we go all right hello okay so uh I've only wasted 11 oh you know what I this here is that's okay maybe it doesn't bother you so much if you see my laptop a little bit here big deal right um okay all right let's do this so the first thing I have to do is uh I'm gonna hit record refresh all right let me give it um I have an idea I'm going to give it a that do that okay uh now I have 30 seconds till it's time for me to begin okay I'm going to begin this oops once it hits 10 minutes I'm GNA start here we go I need M themed music hello welcome to the 10minute coding challenge this is a new segment that I'm starting here on the coding rainbow uh where I'm given a programming problem and I'm given 10 minutes to solve that problem and when the timer goes I've got to stop recording so uh someone uh I'm not prepared for this but normally I get a coding Challenge from somebody so insert person's Twitter handle here uh wrote in and asked how do you make a Starfield warp speed simulation visualization so I'm going to do this in the processing programming environment I will also make a p5js version of it but not in this 10 minutes and I'm talking way too much I got to get started programming so the first thing I want to do and I'm going to skip a few steps here that I might normally do just because I feel like I'm in a little bit of a hurry and I see the clock I already a minute of starting I haven't started programming yet I'm going to make a oops NOP don't rename I'm going to make a new tab here and I'm going to call that tab star because what I want to do is make a star class and I want my star class and I probably could use a p Vector but um I'm not going to use a p Vector at the moment I want to have an X and A Y and a z um and when I make a star object I want to make uh I want the uh X to have a random value between uh zero and the width of the window and why i' have a random value between zero and the height of the window and truth of the matter is for Simplicity sake I wonder if anyone was going to watch this video on YouTube on like two time speed because it's G to be a f minute programming challenge I'm already talking really fast so when I talk really fast than the five minut okay now I'm GNA do void draw and I'm going to say size uh 400 400 so I want to have a window that's a square so I don't have to worry about width versus height maybe we could figure that out later but I need a random um and then I'm also going to make Z some random value Now you kind of wondering wondering if I have an X and Y and a z shouldn't I be in 3D space and probably I should be in 3D space to really create this Starfield simulator but but I'm going to try to do this in 2D because eventually I want to import this to JavaScript and canvas I don't want to deal with webgl or 3D rendering just want to kind of create the illusion of stars moving quickly past my face so let's keep going here uh so now what I want to do is I want to make an array and I could make an array list because I want to add stars when they get off the screen I'm going to remove them but I'm going to do something simpler just going to have an array array of stars uh I'm going to put like a hundred of them in there um because uh I think what might make the most sense uh is when a star goes off the window to just reuse that same star in the array but reset its location back um and I'm going to say uh Stars index I equals a new star and then in draw space is what color the Blackness of space so I will make the black background and I'm just going to say like uh update and uh draw display show I'll just do show um so this is the basics outline of the program I make a bunch of stars I update them and I show them now these functions don't exist yet so I need to go back to my star object and I need to say update how am I doing on time six minutes left and I need to say uh show and the main thing I want to do is uh fill 255 no stroke I want to draw an Elipse uh at that X and Y location and I'm going to make that ellipse just like eight uh and I'm going to run this and make sure this is working good okay so I do see uh a bunch of things that look like they could be stars now I need to make them move so they really should move like they should move going to move this closer to myself this is bad for me to start talking I really just got to keep programming but I want them to move like Fanning out from the center and as they go out to the center I want them to go faster and faster and that's what I'm going to use that Z value for I'm essentially going to divide you can think of you can think of the ratio of their location from the center to the edge and I want to divide by some value so they're so that value I'm dividing by is getting bigger and bigger and they're moving out to the edge I think this is going to work and I I saw an example like a year ago um I'm going to find that example and link to it in the video because now I'm realizing this is kind of based on that um um uh it was um anyway I'll find it okay but I can't talk about it too much right now because I only got five minutes left so what I want to do is I want to say something like this I want to say uh I'm going to make a new value called like uh SX and I want to say x ided z um and then I want to uh map that value kind of like a ratio which goes between zero and one uh to between zero and the width and and I wanted to do the same thing for y y / C right because Z and let's just like let's just pretend they're all starting really far away right so basically what I'm saying is that I want them to start the they're the I almost shouldn't use Z I just use the Z because I'm thinking of them as being closer or farther away but I really want a value between zero and one and um let's run this again and we should see kind of looks the same but now the difference is I could say here zal Z minus uh 1 and oh you know what I've done here that's bad everything is happening according to the top left corner this is a terrible this is this is a problem and we've got to correct this because I only got four minutes left so I can translate in draw width divided two height divided two this makes a lot more sense because really what I want is to be translating to the um I want everything to be Fanning out from the center not the top left so if I do this you can see things are Fanning out but still from there so all I need to do now is really think about this as like negative width to width and negative height to height that should that should do well and you can see here um and and let that only um 100 Stars wasn't so many so let's make 400 and you can see things are moving out from the center you can see as they move out they start getting faster and faster and faster because I'm dividing by this number oops and you can see them now so they're coming back they're getting sucked in Back to the center and I also divided by zero because I got this Infinity problem so I need to do a couple things number one is um I need to deal with the fact that when Z gets down to zero I want to uh reset Z back to somewhere else and also let's have them all start at a random Z and then if Z is let's just say less than one because I don't want to divide by zero Z should get a random uh actually should just go all the way back and uh you know we could give them a new X and Y also and I could put this into another function now look at this so now things are moving out and you can see as they as they come back they're they're reappearing now here's another thing I could do uh first of all uh let's make this whole thing bigger and let's make uh more more stars just to be able to see more uh so you can see how this is looking now they're moving kind of slowly so I also think that it would make a lot more sense for this to be like the number 10 and you could see ah there we go we're so we got something that's really starting to look like a Starfield right uh you could but the thing is they're kind of like popping up like they just appear so one thing I could do is also change their size right if they're farther away they should be small if they're closer they should be big so right now the ellipse is always drawn the ellipse is always drawn at oh my God I only have two minutes left the ellipse is always drawn at 8 pixels so what I want to do is make another variable called R and uh Rand not random I want to map their uh zv value which goes between zero and wi to when they're uh close being zero they should be big like 16 and when they're far away being uh withd they they I shouldn't be able to see them at all and so now if we if we do that you can see they're far away they're small and as they come closer they get bigger and bigger now this is like a Starfield and let's just by the way let's make this uh really quickly uh whoops uh let's make this just like uh how Z changes a global variable and let's be able to control that by the mouse so I'm going to say uh I'm going to add a variable called speed and I'm going to say speed equals map the mouse X Mouse X which goes between zero and width to between zero and I don't know uh 20 so now I can control the speed right as I move the mouse over I'm moving faster I'm slowing down I'm moving faster I can to get to warp speed and I've got one minute left because I want to do one more thing I want to see these streaking I want to see line streaking with one minute left 59 seconds so what do I need to do them have them streaking well I want their current location I want their previous location I want to connect those things with the line so I'm actually going to make more variables I'm going to say PX and py and I'm going to set those uh variables here to um PX = SX pyal Sy y oh um and uh and then I want to um also draw a line oh I realize I'm going to have a problem and I only have 26 seconds left I'm gonna oh I can do this line PX py SX Sy y so this is fine uh you can see there's a problem though which is when they get to the edge uh when they get to the edge um when they get to the edge they're drawing they're connecting a line uh to their um to their previous locations so uh so really what I should be doing is saying this uh what the hell I I failed okay the the you know whatever so that was the 10minute coding challenge you should stop now i i i i this is really like so dramatic and exciting and yet I totally failed but I'm gonna I'm GNA give myself I'm gonna give myself a bonus two minutes bonus two minutes bonus two minutes to solve this problem so I kind of was screwing around here because I was trying to be tricky and get the previous location but really I don't want the previous I I need to keep track right every time the previous location when it starts should just be its X location and the previous and then each time after it moves and I draw it then I should update its previous location then it gets its new location but really what I want to do here for that line is say PSX PSY and it's not oh my goodness the X doesn't matter the X doesn't this is the whole problem it's the Z Z the Z all I care about is the previous Z I knew something was going on here I want previous z boy previous Z because the Z is the only thing that's changing it's X is like its position in the world the Z is what's actually causing it to change um so I want pz to start being previous Z to start at Z and I want to draw and then the whole point is oh and the camera goes off and I have 54 seconds left we're going to make this happen in my bonus 2 minutes um I'm going to um I'm going to say here float yeah yeah PX equals and this exact same formula but now I want x divided by pz and py I want x divided y divided by pz so now I'm drawing a line between the two locations we don't care about this although it's probably a good time here to to give it its previous location also whoa something lunacy is happening what did I miss I have 19 seconds left X x divided pyz oh height no but that shouldn't matter oh x x here we go here we go here we go so close six seconds left what did I miss PX oh SX XX SX s y here we go there we go so you can see now in all of its Glory the warp speed streakiness but it said 1 second there for a while cuz it doesn't actually say time expired until like click over here okay uh interestingly enough something is definitely not working because ah I forgot to say pz equals z there we go so you can see it's streakiness uh let's uh make it go faster I'm really failing with the 10minute thing we'll see how long this video is in the end it's only I it can't be more than 15 minutes otherwise I really feel like a total failure I'm going to turn off the ellipse for a second and here we go this is what I was sort of hoping to see you can see the streaks as this draws the lines and I can slow down and I can put those circles back in there there's all sorts of possibilities here so I hope you enjoyed this video about how to make a Starfield I'm also going to upload a JavaScript version of this that will run in the browser uh the links to both the code for both of those will be in the description if they're not there write a comment reminding me and I will see you in the next edition of 10minute coding challenge which is is probably going to be 15 minutes us tweet me with a challenge I'll keep track of a list of them and I will do it in the next time okay all right I'm afraid to look at the chat here uh okay uh right semitransparent background that's a good idea cheating there's lots of cheating going here uh uh okay yes sound is okay okay people seem to be sort of enjoying this uh uh I didn't see the Tweet about the Matrix rain wolf ABP but that's a good idea I would definitely consider that if if bonus points for has a rainbow associated with it uh somebody wrote that the problem is when you write a comment in the chat and when I go back to read the chat it was from like 5 minutes ago so I have no idea what you're referring to so if it's a comment that's relating to something I'm doing that you really want me to be able to see and respond to you're going to have to say someone wrote that's cheating there's lots of that's cheating by the way I have a specific point of view I should make this its own video about what's cheating in programming here's my point of view it's all cheating it's all cheating there's no actual Starfield so it doesn't matter whether you're using quote unquote real 3D math or fake cheating 3D math it's the illusion the magic of what you're making that counts so there is no such thing as cheating I suppose the only thing that would be cheating is copying somebody else's code and not giving credit to them but even copying somebody else's code if it's open source blah blah blah is not cheating as long as you give credit little rant there for a second um okay so uh time expired um so I'm gonna um minimize my timer now and I'm going to uh close close this I'm going to leave this let me just uh maybe I should make the P5 GS version right now really quick well I don't I I'll do that later I don't want to make sure I have time um yeah okay so I'm just curious what happens if I now do this yeah still seems fine although it's probably a little bit skewed because I'm actually using height in the calculation which I probably shouldn't probably only works if it's a square like I really should be doing this for it to look whoa uh correct just picking one value but anyway uh I'm not going to worry about that too much plus I should I should pick randomly uh anyway I'm not going to worry about this too much this worked and the um I'm pretty sure I'm GNA find I need to find the thing that this is based on uh I think it was from a brinar uh example um okay uh so all right so that was today's uh 10minute coding challenge hello 22 people watching live in the YouTube stream uh I hope you all are uh please uh feel free to share with your friends if this is happening sign up for my oh so I I'll plug this now uh that on my uh uh new website there's a place here where if you want to uh sign up for live streaming updates you know I I I haven't really I probably should just have a set time every week where I'm doing this but I'm I seem to not be capable of that um and for example I just sent an email this morning being like it's going to be at 145 today so I'm going to try to do better scheduling this sort of stuff I can tell you that 100% this week I will not be doing any live streams on Thursday and I hope to be doing one tomorrow as well as possibly Friday um okay um so I lost a few viewers there and plugging my own website I am now going to switch gears and what I want to do I'm going to show you an example uh I've got to somehow grab this uh okay hold on a second I made an example earlier um uh so I'm finding something that I'm going to show you and sockets I'm going bring that over here and it's probably GNA do something where oh good okay um so um uh uh sorry I should I have to turn my phone off when I do this because I'm like looking at people's Twitter messages um desktop sockets okay uh let's see if this works uh and so open up Chrome so I just want to show you what it is I want to now do a tutorial about oh that's too tiny um so let me hold on a sec uh desktop uh sockets um black index okay I'm going to show you uh okay what I want to show you is the following whoops I have two browser windows each open to the same p5js sketch these could easily be two browser windows on separate computers in separate parts of the world they are both connected to a server that server is also running on this laptop but it could be running in the cloud anywhere else in the world as I draw on one you can see what I'm drawing appears on the other one uh a different color is used just so you can kind of see that more specifically so this is what I want to demonstrate how to do how do you host a p5js sketch from a server how do you have that server uh how do you have that server uh how do you have the sketch connect to the server send messages to the server in real time have that server send messages to other clients um and obviously I've made this example already I made this probably like a year ago I updated it this morning so now I need to make a bunch of video tutorials that go through the steps of how to build this um uh okay um somebody in the chat asks um can I watch the can I can I rewatch this later so U let me just quickly answer that question uh yes you can rewatch this later as soon as the stream ends the entire stream is archived on YouTube on my channel youout shiftman I also what I usually do is edit the stream to take a few key chunks of videos and um uh uh make those separate like Standalone tutorials so right now I'm in my I'm trying to sort this out phase uh of this project and let me open let's figure out um together I think I can these are links by the way let's figure out what would make sense here so the first thing I need to do is you know I have tons of sketches that already introduce P5 so I'm not going to include that in this particular tutorial but um the first thing would be what uh what is server side programming node and sockets so like that's the first thing I need to cover right what is you know why do you need server side programming for this what's this thing called node which I'm going to use for Ser side programming I have a what is node video for my twitterbot tutorial series but I think I might kind of like redo that content a bit as part of this particular section because I also Imagine a lot of other things that you would do with server side programming np5 with um so then um adding Express and hosting uh files adding socket.io uh connecting okay that could be one tutorial Express and hosting files another tutorial could be adding socket.io uh package with events and then adding sockets to p5js client okay so I think this is four videos in my mind the first so four like 10minute tutorials do I have time for this in an hour boy this going to be rough well if I don't finish all this I'll come back and finish it tomorrow but we I'll do as much as I can today so a basic kind of just introduction to this idea um you know one and two could probably be combined I might just sort of improvise that uh I think that that number three and number four definitely need to be two separate distinct uh videos so this is my plan um a lot of people have requested this yes um um uh uh jonko is it yonko or jonko there's H someone in the chat named jonko Bosch who uh was one of the people who had asked for sockets maybe you sent me an email today that I haven't responded to yet I think we'll get back to you um uh okay so this is my plan I'm going to uh take a really really quick break uh before I get started if um if um you uh have any ideas or thoughts about this list please write them in the chat I am going to mute my microphone and I will be back in one minute e e e okay I'm back apologies for any audio glitchiness that happens right now I am trying to re add the microphone here it was kind of tugging on me in a weird way um I am back hello okay so if you're just joining um I'm looking checking the chat uh stuck at loading uh Matrix rain oh there somebody has a matrix rain okay uh okay um okay so if you're just joining I'm about to record a set of videos about how to make something like this which is I'm going to hit refresh here this is a p5js sketch that's communicating with another instance of itself running in a separate browser which could be in a on another computer somewhere else um one thing I wanted to look at really quickly to refresh my memory is um uh because I the first thing I want to do yeah is look at uh here so um so large data set I guess so I'm trying to think of I'm trying to think of uh reasons why you need serers side programming so what are reasons why you need server side programming so you can do a lot with just p5js client side JavaScript what I've been doing in most of my videos got an HTML file got some Javascript file you draw stuff you connect to apis all that sort of things but things that you might need to do is one is Real Time Communication so that's what I'm going to focus on today other things are like dealing with uh large data sets right you might want a server to like process those and return the results um saving data although you could use somebody else's server for that um ah uh uh scraping web pages and other things you cannot connect to from client uh tell me in the chat what are some other things that you need server side programming for that might be important to mention um and then um uh and then what I need to have up here are so let me close this I don't need this right now got to get myself ready here I need to have uh node .js the website and I need to also have terminal open uh and okay and what I'm going to do is create a I want to uh I want to create a blank sketch and I'm going to put it on the desktop as uh sockets coding rainbow okay that's good I'm just getting myself set up here I want to open up Sublime Text which I have already uh remove folder from project and let's go get uh this one here uh okay um now uh let's close this I don't need that close this close this um okay what else do I need to be ready to do this I have Sublime going I have terminal going um but I'm actually going to just do this and I have a processing I'm going to quit I have the browser with with node running and now I need to what I want to do is uh remember although am I going to do that in this particular video I'm uh okay adding Express and hosting you know what I'll do that in the next one okay great I'm it's going to get set up basics node short video and the next one we're going to add Express and hosting files so that's fine I think this is good uh so okay I am ready to go how's everybody doing yes so okay so um uh Mr Guru asks are we able to play along in real time you should be able to play along in real time uh if you want to play along in real time the two things you should do to get ready are number one uh download node and install it on your computer because I'm going to I'm going to mention that you have to do that but I'm not going to do that in the video in the tutorial um and then you should have terminal open uh and if you should have a folder with a blank p5js sketch you don't actually even really need that just yet but that that I'm going to use um that I'm going to start start with like the assumption that I already have like an HTML file a Javascript file and a folder called libraries um okay um and I think uh unfortunately what I want to do is also uh secretly run I think I should mention at the beginning what it is I'm doing and uh going to have another instance of it running over here okay okay I think I'm ready for this first video I'm going to cycle these cameras on and off and I'm going to start with the first tutorial uh oh first um let me just check here I'm going to check the that's not good so I'm definitely going to use the Whiteboard um there's some weird shadowy stuff going on that's probably better still weird shadowy stuff whatever um and I'm going to sorry I'm spacing out uh let me just make sure this looks okay can you read and see that looks like it's okay um all right wish I had a darker is this marker better let's see oh yeah much better I'm me use this one for sure okay okay here we go all right I know I'm sorry like I really have trouble getting started because I feel kind of freaked out uh but I'm going to do it okay hello oh I sore I I swear I would never swear and then somebody edit that out in this video I'm here to look at something new uh something kind of exciting to me which is and let me just demonstrate it for you first what I have here right over here is a HTML 5 canvas it's using something called p5js and I can move my mouse around it and I can click and draw on that canvas but look what happens when I do that when I click and draw on that canvas there's another canvas over here where that same drawing appears and if I come over here and I draw here something in this canvas appears and you can see the color is inverted now this might not seem so magical to you but I I I'm I'm making the case to you that these two browser windows with these two canvases could be on separate computers in separate parts of the world so what I'm here to demonstrate to you today in a series of short tutorial videos is how to use server side programming with your p5js creative sketch to allow for realtime communication between multiple users of your sketch so this could be used for playing a game or a collaborative something or other you could have video Al there's lots of possibilities of things you could do but I'm going to demonstrate it with a basic collaborative shared drawing space so I have we have to add if if you're coming to this video having only ever done the basics of programming in JavaScript with p5js you're in the right place we're going to add something to this which is serers side programming with node.js now if you've watched any of my videos I have done some stuff about node in some videos about making Twitter Bots but we're going to do something slightly different with node here and I'm going to start a bit from scratch again so let's um let me talk about what the pieces of this are so for example uh the idea here is that you have a laptop and that laptop has a browser window with a canvas that you're drawing in and somewhere else in some other part of the world there is another laptop with that canvas and with this canvas and as you draw that same drawing appears over there so somewhere else there needs to be a server what happens is this particular instance of your p5g sketch talks to that server with something known as a socket socket being a real time connection between two applications that can send data back and forth this particular client also talks to that server with a socket so that when the user moves the mouse and an event is triggered where the x and y coordinate of the mouse is sent to the server the server sends the x and y coordinate of that mouse back to this other one and then this other one receives that message and draws so the issue is you we know how to write a JavaScript program where you move the mouse and you draw stuff that's what's the thing that's happening over here what maybe we don't know how to do what I haven't covered in any of my videos before is how to write this server program and the platform that I'll write the server program is something called node.js there are lots and lots and lots and lots and lots of different ways and languages and Frameworks and things you can do server side programming with building big giant web applications is a huge massive scary weird but not but friendly and nice topic Way Beyond the scope of what I'm doing here what I want to do is just look at a a simple framework node um which will allow me to host the files the p5js sketch as well as make those socket connections so this is the basic sketch of what I want to do and so the first thing I need to show you how to do is download node install node and run something in node and then I'll get to more after I do that questions you can't ask a question because this is a video but but but uh but but find me somewhere okay um so I'm back over here I'm going to close uh here's my computer I'm going to close this and I'm going to close this and oh look where I am I am here on the nodejs website so if you go to nodejs.org uh for quick access place your bookmarks here blah blah blah um download your appropriate version of node run the installer you can see that I'm doing it here on Mac on a Mac operating system an Apple operating system OSX I've downloaded I've installed it once you've done that you should be able to go to a command line view of your computer now on the Mac the easiest way to do this is with an application called terminal which looks like this and it's usually found in applications utilities on Windows insert annotation here which will say the thing you should use on Windows um and uh oops you can see H that I already have ah terminal open and when you see it it'll look something like this and I'm going to make the font bigger boy I'm not prepared for this video I'm going to make the font bigger so you can see it better so this is ah Come Back to Me computer um this is a terminal window and terminal window is a place where you can type all sorts of commands in now I'm going to leave uh you know someday I should make just like introduction to terminal and unix commands type thing but right now I'm just going to give you some basic stuff that you need to know the first thing you want to do realize is that if you've installed node properly you can just type the word node into terminal and hit run I hit run hit enter and then suddenly you see this other line strangely enough this is now a place where I can type JavaScript like I could say 5 + 6 = 11 or I could say VAR x = 100 and then I could say x++ and then I could say x is now uh1 somehow um I know I meant to say x equals X Plus but anyway no no X plus plus I digress the point is I'm somehow now in JavaScript land in terminal but this is not really what I want to do what I really want to do is write JavaScript programs in a text ad that I can trigger from uh from this node command in terminal and I and I and I I I I forgot something important over here which is to say that the point of all this is this might be ultimately how you eventually want your application to live a server somewhere in the internet clients all over the world connecting to that server but what I'm doing right now and if you're following along and doing it too is running all of these pieces on one single machine so I'm going to run the server on my laptop using node I'm going to run the client in the browser on my laptop I'm going to run another client in a separate browser window on my laptop just for testing and making sure it all works okay so over here one of the commands that I uh control C by the way is how you quit uh uh clear will get me back up to the top one of the commands that's really important that I want to use is CD for change directory and I want to go to a folder where I have some p5js files because eventually I'm going to be using a p5js sketch in connection with what I'm doing so I want to go there and then I'm going to go to the finder and I'm going to go to my desktop because I already made a folder on my desktop called sockets coding rainbow and the only thing in that folder is just kind of like the stuff that you would have for a p5js sketch an HTML file a sketch. JS file a libraries folder so if you're like trying to follow along you know pause the video now get yourself a a folder with the stuff that you would have with the p5js sketch in there and then you can keep going so what I want what I can do is when I type CD is I can take this folder and drag it into terminal and you can see now this is the full path to that directory users processing desktop slocks coding rainbow so if I hit enter I now in that directory another command that I could type is LS I can see that's listing all the files that are in that directory and in fact I already have hopefully a text editor open to that directory right here you can see because what I want to do in this directory is now make a new file I want to make a file and I'm going to call it uh server.js notice I now have a new text file called server.js I'm going to open that up and I'm going to just say something like console.log my socket server is running so here's the magic of node node is a JavaScript program that you can execute from the command line it doesn't involve a browser it doesn't involve a window Graphics I mean all those things are possible in the sort of landscape of things you might do but this program now that has one line of code in it I can go back to terminal and I can say node server.js I can hit enter and I can see that my socket server is running now my socket server is not running because I don't have any of the code for the socket server here so this is what I'm going to get into in the next video so what if you're following along what you should have now in your head is a general sense of what is going on serers side programming with node.js conveniently by the way one of the reasons why I picked node.js is because it's JavaScript so you don't have to learn a new programming language um so server side program with node.js you've got that installed on your laptop you've got the idea of making a p5js sketch so and then you have a directory that has both a node program in it under sketch. JS and your p5js sorry under server JS and your p5.js files and once you have that maybe put some test code in server.js run that test code you've got node running you've got your p5js empty p5js sketch ready to go and you'll be ready for the next step which is starting to add the actual code for the socket server okay that was my first um um oh okay um okay so um sorry I'm just like checking the chat for a second so let me know if you guys have any questions about that or if I missed something important because I can pick it up in the next video um I'm I'm sorry I am looking through the chat to see if there are any questions I know you know somebody once told me if you want to have a lot of YouTube followers just swear more but you know swearing is not really in my personality I'm very quiet person who just wants to make rainbows in the world and swearing just doesn't seem like the thing for me to do I I mean I don't have any problem swearing everybody should swear everyone should feel free to swear I just want a family a family stream whatever that means uh okay connect AUD video uh will I ever do this for languages like C probably not anytime soon but I would consider doing that at some point but I've got a long list of stuff before um uh okay um okay so uh I think that's pretty good so I'm going to go to the next stage which is to actually start to add the server code and what I need to do is take a peek at the example I made earlier today um which is um um I need require Express app equals Express uh okay so oh I don't need that this okay this I can make simpler uh you know and I can actually like remove this this is just this is probably a bad idea let me make sure this still works uh I'm just like simplifying my example from earlier U uh yeah it seems to work just fine so I just want to simplify it U you know even though it's good probably good practice to have a lot of extra uh so uh sorry I'm just simplifying this example uh okay yes got it got it okay I I'll deal with this later uh oops okay um okay so I am getting ready to do the next piece of this which is ah Untitled here maybe NOP uh videos to do uh which is I didn't talk about all this other stuff but I'll I'll do a different video where I get to this other stuff uh add Express and hosting files okay so that's the next thing uh uh will you talk about sockets in processing Java or some other language I'd be glad to let me get through some more of this stuff and maybe uh um yes no I'm only getting rid of the comments right now in order to uh be able to like look at the code for myself when I upload the example it will have lots of comments in it of course I'm in favor of comments okay but I'm I'm trying to actually just memorize this because I'm going to type this out from scratch um and right now this is all that I need uh I'll get to this other stuff in the next video okay whoops uh require Express okay um so here we go uh there we go and close all this stuff uh save and open this require Express express. apppp no app equals Express server app. listen app.use Express static public I'm never going to remember all that okay um okay everyone any other questions in the chat I should check uh twitch oh the channel is I'm the YouTube channel I'll put it I'm putting it in the twitch chat is this okay um okay so I'm going to do the next segment it's almost 3 o'clock moving along here I think we're in pretty good shape um okay what is Express anyway I'm G to look that up real quick uh Express no not clothing web application framework that's what it is web application framework good for you express okay um all right everybody I'm going to have an error with my function name yeah I'll find out what that is later okay uh here we go welcome to part two of making a socket server for the shared collaborative canvas thing in HTML so what we had so far before is we just had a server application uh that when I go into start over hold on welcome to part two of making a shared collaborative canvas drawing space in JavaScript with p5g and not and sockets and all that stuffff so what I had so far before was just a simple node program that had one line of code and I said node server.js and it prints out that line of code the console gets logged uh my socket server is running now we need to actually add the actual code for an actual web server that we could connect to with socket so there's one thing that I didn't mention before which I'll come back over to this diagram that I had right I talked about the server really as its sole job being this entity that connects to these things with sockets but actually web servers perform uh another role in the sort of L I'm just going to start this video over because now I know what I want to talk about and I was I kind of lost my train of thought and rambled too much and everything's going to be okay here we go um welcome to part two of making a shared collaborative drawing space thing in the browser with p5js node and sockets so what I had before was just a simple node program the only thing that it does is spit out my socket server is running but our job right now is to actually add code to this program that starts a web server and makes sockets available for the p5js drawing thing to connect to but here's the thing I missed something in my previous video where I talked about the fact we're going to have this node server we're going to have this p5js sketch the p5js sketch is going to connect to the node server with sockets but interestingly enough if you could just forget about sockets for a second there's another reason why you might like to write your own node server to host your actual files as well right when you do client side programming the JavaScript code executes on the browser but the browser has to get that JavaScript code from somewhere like when you type in google.com and there's some JavaScript running on your browser that Google wrote you know the JavaScript is sitting on Google server gets sent to your browser via an HTTP request hypertext transfer protocol so one thing that we want the server to actually do Beyond just sockets is host the HTML and JavaScript files for the sketch itself so before I even get to the sockets I want want my server to be come to be a web server and I could write some node code to do that but an a way to do that that's a little bit easier than writing node code from scratch is to use something called a node framework a node package a node framework or package I think are good words something called Express so the first thing I want to do is show you how to install Express use express and write some Code Express is a I guess a minimalist web application framework a lot of things that you want to do very commonly like host files or set up you know a query or route or all the kind of stuff that I might get to in other videos instead of having to write all the code for them you can call on some functions and express that handle a lot of that stuff for you so let's come back over here and I'm going to the computer's over here I'm going to go back to terminal and one thing I want to do first I'm going to attempt to be a proper citizen in the world of node programming and I'm going to run you don't you no my node program worked without doing this but it's often a good idea to to to uh to write this command called npm init what npm init does is it sets up npm stands for by the way node package manager and I'm going to need the node package manager to install Express and what npm init does is it allows me to um sort of set up a configuration file that says some stuff about my project and you know what this looks good my project is is going to be called sockets coding rainbow uh can no longer contain capital letters so I will rewrite that without capital letters version 1.0 is good description sockets example Live on YouTube made entrypoint server.js test command I don't worry about that I'll worry about that later uh sockets p5js node author is me and license I don't know figure that out later yes this seems fine so I went through this npm init thing and it what that actually did is it created this new file called package.json and what package.json is is it's a Json file with information about my project again I could probably do this without this completely look at that how does it know that the dependencies are expressed in socket.io whoa some crazy internet thing just happened did I put that oh no I'm in the wrong place I opened the wrong I opened my earlier example okay this was my earlier example by the way I'm not I did this earlier today I'm not just figuring it out right now okay close that I should go here this is the package.json file that just got created and you can see here there is the information that I typed in the title The version and you don't see what you're what you don't see are dependencies so the first thing that I need to do in order to be able to add this thing oops dramatic moment add this thing called Express is I need to put in this package.json Json file that I'm going to use a node package called Express only I don't actually have to type it in there because what I'm going to do is I'm going to just say npm can you see this got to move this over npm install Express now I want to do one more thing I want to dash I want to write saave and what this command is going to do is it's going to say put save Express as a module that should be associated with this project I'm going to do this it's going to blah blah blah blah magic magic and then if I go back to here you can see now in this file it has a dependency on Express so this is just a lot of I mean this is like the least interesting thing I could probably ever do with my day is talk about like package.json and package manager Express blah blah blah but these are the steps you want to do to kind of set up your project before you write code you'll also also notice by the way that there's this new directory here called node modules so node modules is where the all the code and stuff for Express actually got placed by when I typed um when I typed npm install Express okay so later I'm going to add the socket module but right now I'm just going to keep the express module okay so I hope that cough wasn't too loud into the microphone uh what's next everybody so now we can start to oh that's that's my secret code no not here so now we can start to actually write we can actually start to write some code uh into our server itself so one thing that I'm going to do is I'm going to say VAR Express equals require Express so this is a way is that that what I wrote over here yeah this is a way of importing the module that you're using so the module name name is Express and I want to require that Express is something that I have access to in my node program and essentially I want to import all that is the live all that is the framework Express and I want all of that into a single variable called Express the reason why I can do and that variable by the way is a function call I mean the variable is a variable but it's it's it's storing a function a JavaScript function you know what that JavaScript function does it makes an express application so I can trigger the express function and store the result of that in a variable called app and then even better what I can do is I can say um server equals app. listen Port 3000 so now dare I say if I run the server my socket server is running and look at that it didn't go back to terminal something's happening something is there on Port 3000 and I can go to my browser and say Local Host right this Local Host being the servers running on my local computer if this server were running on you know the New York Times website I would go to New York times.com col Port 3000 but I'm not the New York Times in case you were wondering and now I'm going to hit enter and now it's like ah it doesn't know what to do but this is reasonable right because I haven't told it what to do there's no files there's no instructions for it to follow but this is the basic idea the basic idea is that I want to and and by the way you could do this without Express but it would be like 10 11 12 lines of code so I'm using Express to set myself up for the future of Life of less worry Express will give you less worry in your life so I require the library I create the app I listen on Port 3000 and now what do I want to do what I want is when the user goes to my website I want them to see my p5js sketch so the main thing I want to happen is I want want to send my HTML file along with my JavaScript file and everything else so they can experience my sketch well one thing I need to do in order to do that is I need to go to this directory right this directory has a lot of stuff in it right now it has both the node stuff like server.js and package.json and the node modules and it also has the p5js stuff an HTML file sketch. JS and a library I don't like this everything's mixed and a mess so I want to make a folder and I'm going to make that folder called sketch now truth be told probably if you see examples most people are going to call that folder public let's call it public the reason why I'm going to call it public is this is like going to be where I put files that I want the public to be able to see when the public goes to my web server they get these files and so what are the things I don't want them to see my server code but I want them to see my p5js sketch so I want the HTML file the libraries and my Javascript file and I want to put that here in public now what I need to do here is add another line of code which allows which says I want to host those F whenever anybody goes to my website I want them to see those files so the way that I do that I'm just going to copy it from over here um and I'm going to put it right here so this is what the code looks like app. use express. static publ so what's the word static for so the word static here is hosting static files so those are files that aren't Dynamic and changing they're just like here's an HTML file here's a Javascript file here's some images I want to host everything I want I want the app to use to to host everything in that public directory so that when the user goes to my website they see what's in the public directory so I'm going to hit save and now I'm going to hit control C I'm going to run the server again my socket server is running I'm going to hit refresh and look at that I don't see cannot get anymore but I don't see anything in there why don't I see anything in there well I don't see anything there because there's no actual sketch so let me go into public let me go into sketch. JS let me say create canvas 200200 let me say uh background 51 let me say ellipse like Mouse X Mouse y 6060 and Let me refresh again and you can see there we go so now I actually am hosting a p5g sketch from node with just with Express with just an uh you know four four slash five lines of code so by the way I have another video which I would like to reference somehow with a link where I looked at how you can run a local server on your computer using python simple server well now here's another way you can run just a local server on your own computer with node with Express with four lines of code so we've got the basic idea now we know what node is we've installed it we've got Express we added a little bit of code we are now seeing our sketch in the browser the next thing I need to do is add the side socket package I need this server to be able to make socket connections to the browser the client itself to be able to send message messages back and forth and that's what I will do in the next video okay uh okay um I don't know if that was that I feel like had some problems but it'll just have to do you know honestly like I used when I used to make these videos I wouldn't live stream them and I would do the video and then I would just immediately delete it and I would just do it again and the second one would always be a little smoother and with less Stakes but it is what it is hopefully people will find these useful I could always rerecord it later some other time it's very hot in this room because I'm using these H hallogen lights which seem to do well for the keying and everything I wonder if uh I'll be fine though okay um let me look at the time here um it is 38 let me look at my list can I finish this today that is the question um delete this uh uh yes so I need to add socket.io package with event so let me go back I wish I knew that this is It's funny like a lot of stuff that I do I just like have it know it by heart having done it so many times but this I've only ever really done to make an example I don't know it that well so what I want to do is open up this file all right and look down here now somebody was telling me I was going to have a problem oh yeah thank you there's the problem uh and I don't like as a matter of course I don't really like um Anonymous functions for I mean it's useful for for teaching so I'm going to do something like this just kind of just so I can look at this here okay and so this should do the trick change this to this uh okay um so okay all right so now hold on and I need to look also at this connect Local Host 3000 on Mouse okay that's fine that I can do okay um okay I think I'm ready mentally ready to add the New pieces uh and I would prefer to write it like this I guess I should make sure this still works but I I feel confident it will okay let me look at the chat see if there's any questions uh app. uses middleware okay thank you Sako okay let me check twitch okay guys are quiet today um but I am ready to do the the next stage of this um and do that over here um hold on let me close all this stuff I need that and this can be a little bit bigger and I need this and what is going on here do the trick uh okay how's that plenty of room okay and let me cycle the cameras okay I think I am now uh I think I am now ready for the next phase this is the good part of getting the socket actually to work and have the communication happening so let's let's make that happen um let me just I want to look at one thing here on Mouse yes draw okay okay send Mouse data init Mouse data okay close enough okay I don't know I'm never going to remember this all this but let's do it okay so first I need to install socket.io and then create the socket connection um with the server and then create a um create a uh iio docket. on connection okay all right let's do this uh here we go here we are part three of making a collaborative canvas socket connection p5js drawing thing and we are at the point now where we have a node server that is serving a p5js sketch if I run that server it start over I don't think I'm GNA just go right into it okay um and actually one thing I want to do I what I meant to do by the way and I'm going to fix this now is put this here this and uh doesn't really matter and okay and sorry I'm being like really pnic about this but okay uh part three of making a collaborative drawing canvas thing in the browser with p5js node and sockets so where we last left off was we had a node server working with oops not this code we had a node server using Express to host a directory and in that directory was a p5js sketch the thing that I need to add is now that socket connection between the sket skch and the server so that if I have another sketch I can have messages going between the from one client to the server to the other client so let's see how we get that working so the first thing I need to do is add the socket.io package to my uh Whatchamacallit node package application thingy so if I go back to terminal I want to say npm install socket.io D saave that's can install socket.io install install install and you should see now here in package.json we now have added socket.io as a dependency for this particular node application so now that that's there and I go back to my server I can now start doing stuff with sockets so the first thing I want to do is say uh socket equals requir socket.io so this is like an import statement in the same way that I wanted to use a Express Express equals require Express I now want to say socket socket equals requir socket.io now what I want to do though actually is open a create an actual socket that's part of this server so the server that's listening on Port 3000 that's in the variable server now I have access to this socket Library which socket is of course a function and so I'm going to call this variable IO it's going to be the thing that's going to keep track of inputs and outputs messages in and out and I want to say socket I'm going to call the socket function and give it the server as an argument so I've imported the library and the library exists it's just like a big function I call that function with the server that's listing on Port 3000 and I've got that in a variable now once I have that I want to start dealing with certain events and the main event the first event that I just want to deal with is if I have a new connection so I think what I do is I say io. on connection so sockets work based on different types you have to write the idea here is that there's this socket that's a connection and in J the way that everything in JavaScript always works is like there's an event and this code is the stuff that happens when this event is triggered events for sockets are like hey I'm connected to you so that's an event another event is hey here's a message another event is oh I'm disconnected now so these are all the events the first event I want to deal with is just a new connection event and I want to have a function to handle that event and of course I could put an anonymous function just inside right here but I'm going to try to make things a little simple and explicit and I'm going to say new connection and so that means and this is wrong I'm g go look up in my answer key io. sockets Doon I knew I was missing something so I need to I uh this is the syntax for that I have my and did I get the other stuff right yes I did okay uh so what I I need to say IO which is the object now the whole input output object that's created by that socket function I want to go inside that object to this thing called sockets call the function on to set up a connection event and I'm now going to say function new connection and what is the thing that is exists when there's a new connection a socket so an argument is placed in that function and I can could say something like you know console.log socket let me run this server now I'm running the server my socket server is running okay the socket server is running I'm now going to go into the browser here we go into the browser I'm going to refresh this page gonna connect with a socket I don't see anything so here's the thing I can set up a socket server all I want to wait for connections but I've also got to write the code in the client to connect to the the server like let's go back and look at my client code uh I don't see anything in here about connecting to a socket so here's the thing that I need to do I need to also have a reference to the sockets library in the client what libraries is so socket so let's let's this is this I'm already confused and I and I I supposedly know what I'm doing which I don't really but you know whatever um so I can look at socket.io go to the socket.io website come on internet don't fail me now um and you can see socket 1.0 is here and I can go down and uh there was something that I was going to look I could go to download ah so here it right so there is both a socket.io server and a socket.io clients this is what I need I need the socket.io server to run here I've already written the code for that now I need socket. IO to run on the client so I need to add that to my client code and one thing that you'll notice here is a quick way to do that is actually just to copy this line here which is referencing the s.i. JS Library uh via a CDN a Content delivery Network so I could download the file and put it in my libraries folder but this is going to be a little bit simpler so I'm going to do that and then I'm going to go to my index.html file right this is where I'm referencing libraries excuse me P5 libraries P.D libraries P5 do sound let me now add another line of code here that just references socket.io so now I'm referencing that socket Library I can once again hit refresh let's open up the browser console nothing there nothing there right I've got the library but now I need to write some actual code H it's so sad when you just like can't remember what the code is to write good thing I already have the example prepared so I'm going to go to my sketch. Js I'm going to go to the one that I did uh earlier and I know that I need the thing that I need is to create a variable called socket and then in setup I want to say socket equals socket.io doc connect and then what do I want to connect to oh hey uh I think I want to connect to Local Host colon 3000 so that's what I've set up my node server to run on it's running on this local computer and it's opening up on Port 3000 so uh did I get that right let me just like briefly oops wrong place let me briefly peek over here wrong place again io. connect uh oh because I've I've uh what did I do okay because I've imported I've imported the library which gives me access to a global variable called IO which should connect so now let me hit refresh and let me go here whoops fail all right let's see what I missed here uh that should matter connect Local H let me just copy this directly uh and uh server let me look at my server uh let me just see maybe there was nothing to see that was printed out in that uh oh yes there we go I don't know why that didn't work before maybe I didn't restart the server uh okay hold on I'm gonna I have to like edit out this part of the video hold on I'm gonna pause for a second uh oh my goodness I've lost my mind here okay I'm gonna uh oops oh it's getting refused connection am I running the other one no okay hold on a second everybody let me just go back for a second oops that looks good okay so things are working all right uh I'm just checking the chat now for a second uh Local Host is the same uh yes this is really helpful comments in the chat uh uh let me check twitch for a second here uh okay uh Dan I wrote local host.com 3000 is that wrong uh oh yeah you're right it should just be local yeah why do I why would I write local host.com that's totally wrong so where can I I need to go back um somehow yeah why did I write because I'm a lunatic um I'm gonna I I gotta just record from somewhere and then I'll splice it it's so much nicer by the way when I go home and I'm like I'm gonna upload the videos from today and I didn't do this thing where I stop in the middle and hit record again but I'm GNA do that uh where did I write.com did I write it I wrote it here uh yeah that was the problem okay I'm going to just cop to that this is what I did right uh okay right because if I do that right and that doesn't work and that's where I didn't start getting errors because it can't connect to that okay okay got it all right I'm going to come back to correct this error and we should be okay and but I want to look up one another thing socket on on no no no that's in the sketch what I want to do is uh oh that's what I'm writing Mouse message yeah okay socket. on mouse mouse message okay socket. on disconnect yeah I to dis we have a new client socket. ID okay uh okay great okay uh um okay oops back after a mistake that I couldn't see which is now quite obvious to me for some reason I wrote local host.com here there should be no do Local Host is the full name of my local computer I could also write by the way uh the the 127.0.0.1 which is a special reserved IP address for a local computer but I'm going to keep that as Local Host so once I now am connecting in my client I should be able to hit refresh here and go here and you say oh all this stuff spit out now so here's the thing what did I do in the code I if in the server code I said right here in a new connection console.log the socket object the socket object has a ton of metadata associated with it uh you know the IP address and all sorts of information about uh what's been what's connecting one thing that I'll do here is just we could evaluate look at all that stuff but that's a sort of for another day perhaps I'm going to say socket. ID and I'm going to say new connection socket. so this is a nice way uh every single new connection to a web server new Saka connection to the server gets automatically assigned an ID number for tracking it over time that might be something you make use of so I'm going to put that in here I'm going to run I'm going to uh whoops I'm going to run the server again I'm going to go back to the browser I'm going to hit refresh and we should see new connection I don't know why I got two new connections I probably by accident still had it open but um then I can go open up another browser window and another browser window and another browser window and you can see all of these connections are coming in so all of those instances are all connected to the server all with a socket connection so we are in good shape now we have added the socket.io library to both the client and the server let's review that for a second in the server we need to require socket.io connect it to this particular webs server and write a function to handle new Connections in the client we need to make sure we've o sorry imported socket. i. JS in the HTML file and we also need to make sure that we create a open a connection to the server that has the socket server on it so that sort of concludes the add sockets to your thing and the next thing that we need to do the very last piece is we want to add code from this client ient to send a message to the server we want to add code to the server to receive that message and send it out to all other clients and that's what I'll do in the next video okay I decided to break this up into two videos it's 330 by golly I'm going to finish this today uh even though I sort of said I had to go at 330 I'm going to give this another 15 minutes I think I can do this last piece um Okay so I'm going to um let me recap for myself uh okay so I'm going to now what I'm going to do is uh create a new browser window yeah so you know what the library is just smart enough that those they somehow the socket stuff is smart enough that it just reconnects uh I just want to okay just want to not have any okay so this is what we're starting with uh here sorry everybody I'm just trying to okay okay good so I'm ready for this last piece um okay okay here we go go here we go here we go here we go um here we are the Moment of Truth part four we now have a node server running it's a socket server I have two clients going in two different browser windows both connecting to the server but if I move my mouse around here to draw I don't see the result of that drawing in this one over here so what I need to do now is add the last piece as I move the mouse in a client I need to send a message once I and then in the server I need to receive that message and send it out to everybody else so let's see if we can make that happen so the first step is let's add code in the client to send the message so I'm going to go to Sublime here where I have all my different pieces and this is my client code I have a socket variable and I connect to the server so what I want to do is I'm what I'm going to do is in I'm I'm going to write a function called Mouse dragged the mouse drag function uh you'll see uh is a function the event function that's triggered whenever I drag the mouse and so if I add that in and put the console whoops wrong console put the console in and I hit refresh you can see oh when I whenever I drag the mouse and uh you can see that I'm printing out those Mouse coordinates so that's where I want to send I just realized there's sort of a flaw in my program which is that I also want to draw in Mouse dragged as well so now right if I move the mouse nothing happens but if I drag I move the mouse and I see the coordinates spitting out in the console so now what I want to do is I need to create a message that I'm going to send and the way you create a message is two things you need a name for the message which is a string of text and you need the data for that message which is just a JavaScript object so the data for that message is I'm going to say x is mouse X and Y is mouse y so this is the content of my message I want to send the mouse X and mouse y value and then I also need a name so I think I say socket. emit Mouse do dat and so I'll change this to saying sending so now in the code you see this is really the sort of crucial part right here which is that I when I want to send a message I create a JavaScript object with the data in it I then say socket. emit I name the message the name is important because it's a you're making a protocol like what if you have a whole lot of different messages and you do different things based on what the name of the message is that's a way to uh in this case I don't really have to worry about that but that's kind of important um and then I attached the data to it so now I've sent the message now let's first even just run run the sketch to make sure uh there aren't any weird errors you know sending you can see that it's sending that stuff seems to be working I don't get any errors and the server I don't see anything happening in the server because I haven't written the code to receive the message so now I need to go to the server to write that code server code right here this is the function where that is triggered when there's a new socket connection so what if this particular socket connection sends a message right not just any message I want what if a message comes from this particular client so I should be able to say socket. on Mouse you know Mouse message I don't know if that's right let me look at my cheat sheet over here ah look that's right so what I what I'm saying is if this if there is a message called Mouse uh trigger this function so I'm going to write that function now and I'm just going to say console.log data so this is now I have a server the server is waiting for connections when there's a new connection I say there's a new connection when there's a message it logs that particular message so let's take a look at this working now so one thing I need to do is I need to restart the server you incidentally there's a way using a tool called nodemon which maybe I should show you at some point to Auto restart a server every time you you change code but I'm not going to worry about that right now I can hit control C and start it again so I'm running the server everything is connect reconnected automatically but I'm going to refresh anyway and you can see it's sending sending sending and look at this receiving come on you can do it let me move this over here I'm going to move the mouse around here you can see look I'm sending and I'm receiving boy this is getting good I'm sending and I'm receiving I'm sending and I'm receiving but I am not sending again to receive over here right the message went from here and then it went to here now I need it to go here and incidentally if a message from here goes to there I need it to go to there let's see is that happening move this back over here right it's happening here it's happening here you can't see it but it is so the messages are coming into the server but they're not going back out so what do I need to do to have them go back out so I'm going to go to my code and I don't have this memorized so well so I'm going to go to my the example I made earlier and I'm going to grab this bit of code oops sorry everybody I'm in the wrong place a million times over and I'm going to add this back in right I could have remembered that so so what do I want to do when a message comes in when a mouse message comes in I want to call the broadcast. emit function to send a message back out what do I want to send back out that exact same message and what do I want to call it Mouse so you can see that there's a lot of possibilities here a message that comes in could be parsed altered changed renamed sent back out but I'm not doing that in this sort of simple example I'm just taking the literal message in the name and the data and I'm sending the exact same back out name in the data now incidentally we have this question here I'm going to go back to all this let's say the message comes from this client into the server do I want that message then to go back out to whoa back back out to both of them or do I want so message comes in goes back out to both of them or do I want message to come in and only go to this one or if there was another one to go to the other two in this case I don't want the message to come back to myself but in other cases you might but I want to show you I'm going to keep this in the code example that I upload that there is this is another way of writing this code I'm going to put it right here if I were to say instead reference the global the more not the specific socket to emit to everyone else but this iio do sockets which kind of refers to everything it will also include the client that sent the message so I'm going to leave that in there as a sort of separate side possibility but really we're kind of golden here we've got messages coming in and the message going back out but the message does not get received by the client so I've got to also go back to the client now and I've got to add something that handles the message coming in socket. on Mouse and I'm going to say new drawing so now if this particular so ET receives a message called new drawing what should it do well uh it should draw and I'm just going to grab exactly this same code it should draw something but at data. X data doy and let's make it a different color just so we can see it's different so this is now saying in addition this particular sketch should set up an event handler for when a message comes in right it's kind of confusing the same sketch is both has functions for sending out and receiving because it's not like there's two different sketches running there's two different instances of the same sketch so if this one sends this one receives but they both have but if this one sends this one receives they both have the sending and receiving code in them now I might have missed something I'm going to feel ambitious though and just run it because I don't have this stuff memorized so these uh whoops let's go to the browser here I'm going to refresh and refresh and see oh no I didn't miss anything so you can see it works beautiful oh that's so nice so you you know there's so much possibilities here and you know incidentally we are being really uh there is absolutely no reason why I shouldn't add a third one just to demonstrate what's really going on here so now if I hit refresh here right you can see and let me Let me refresh all of these okay here we go uh I'm going to draw a heart because I love you all for watching this video two hearts for the two people left who are still watching this video and then I'm going to fill in the heart here because that will make it Pink on the other two look at this this is way too much fun I'm going to mess around with this later after I turn this video off but you can see the idea here is we have all the pieces we have a node you can now remember we have a node server that's hosting a P5 sketch the node server is running Express and opening socket connections whenever a client runs it connects via socket to the server if it sends messages to the server the server receives that message and sends it back out to all the other clients not including the original one let me show you again where all the pieces of that the code are so here uh this is U let me look at the directory of files right this is everything you need the server.js has the code for running the server and receiving socket messages and sending them back out to the clients inside public is my p5js sketch in sketch. JS I have the client code which sends messages to the server and then also receives messages from the server so if I go to that server we can see all I'm doing is I have new connection um I have a a function that handles new connections and a function that receives messages and sends them back out immediately and if I go to the client I have a I have a variable that connects to the server uh it handles new messages and also has a function when the mouse is dag for sending messages so sending receiving sending receiving server client node Express socket P5 JJs all of those things make this particular example I will have all of the code on GitHub I hope that you make something with this do something different uh I'm sure I missed some stuff so leave things in the comments I will add some addendum videos to pick up items I missed or maybe how to deploy this somewhere or other kinds of messages that you could send um and let me know uh and have a good day with your sockets and hearts and things like that okay I got through that um all right everyone um so uh it is uh 345 I have to leave but I'm going to uh stay for five two or three minutes um to copy the video files into Dropbox so that they'll upload to me so I can put them on YouTube later um and also to wait and see if there's there's a lot of chat going on right now so uh I if there I'm GNA I'm kind of I'm scrolling through it to look but wow 13 people watching on um twitch which is really kind of cool um I'm going to um get all my video files sorry sorry everybody so ask your questions in the chat I'll come look at them in a second right now I'm doing something that you can't see which is I am uh uh I am sorry checking to see how much space I have in my Dropbox it should be okay and now I'm looking at all the videos I made today how much space they take up up which shouldn't be that much uh today today today boy I recorded a lot today that was good let's see if that is going to work oh too much problem we've got a problem Oh No it should be okay what's in here oh because it's got the cash okay no no we're fine I'm fine those should all upload okay I'm going to check the chat um thank you people are just writing nice things in the comments which is really great I appreciate that very much um so let me explain to you for those of you who are new or wondering what's going to happen I made basically I would say five or six so first of all as soon as I hit stop on the streaming button this YouTube stream will close down and the archive of the stream will be on my channel which is uh youtube.com chman uh and there's also an archive that's kept on Twitch uh you can communicate with me questions or feedback on Twitter um so as soon as I hit stop on the stream this whole one hour and 55 minutes will be on YouTube it takes an hour or so to process then probably not until tonight uh after my children go to bed um I then will go through the like video files that I saved to disk and I'll trim them and do one quick little edit then I will upload them as separate videos and make a playlist so that the um there will be a playlist for the four or five videos that I recorded of the steps so you'll be able to watch that later um also and um you know one thing that I need to do about you know I need to add annotations and write better descriptions and that sort of thing but just uh if you can't find something uh Twitter is the best way to uh reach out to me um and that sort of thing and um you know you don't need to do anything but spread the word I'm trying to I've got this semester where I have more time to make videos I'm trying to see like what this can really uh become if this is a kind of a sustainable model to just make learn to program videos I really enjoy doing it so tell people to subscribe or watch or whatever and I'm going to be back doing so I hope to be back here tomorrow I didn't really expect to do this one which and I might do some more oh boy I have some other stuff I have to do to do this week but I hope to be back here tomorrow um to do actually some more node videos um because I'm doing a workshop on Saturday and so I meant for this to be stuff preparing for the workshop but I realized I went off on a different topic but I'll be back tomorrow and possibly on Friday uh but perhaps just tomorrow this week uh you can subscribe to my email notification list I always post on Twitter which is at shiffman Donnet and uh I'll send an email probably tomorrow morning about or later tonight about the timing of the next live stream okay um yeah I'm definitely not going to delete the live stream it will be there it's just uh it's not as easy to watch it's you know two hours as opposed to um if somebody really wants to come just find the tutorial they'll find four or five 10minute videos so they'll both be there for sure um definitely um uh someone asked about videos based on Kai library and running processing on Android I'm definitely interested in that I have a long list of topics um so I I don't know that's not high on my list but um uh uh let me let me but uh I I keep a GitHub gist and you can see uh this is sort of the topic list that I'm working with uh uh uh somewhere here I have sockets I guess I didn't have it on this list but there's a lot of things that I'm kind of uh want to to get to uh let look at the comments database stuff yes I will definitely do database stuff uh that is definitely um important on my list of things to get to um so I have by the way the the I will upload the socket example soon um um okay and that's about it for today so get in touch leaveing messages on Twitter don't send me emails I you can but it's like email is like kind of impossible um but but I love to be in touch so ways that are um that's that uh um Twitter is a good thing I guess for that um YouTube comments I I always try to answer the YouTube comments questions there often if it's a big complicated question I'll just say ask this at the processing forum and head um because the YouTube comments is sort of best for sort of targeted questions based on a specific video and especially if you send me something like you referred to another video at this Tim stamp or you referred to a link at this Tim stamp it'll help me add like the annotations to the video so that um that is also really helpful in the comments if you're watching them okay uh I will see you guys soon I'm going to hit stop um everything uploaded to Dropbox so later tonight I will be putting this stuff on YouTube The Stream will go live immediately and I will see you all soon oh four this is going to be a 2our stream two one two hours
