With timestamps:

00:00 - okay bye I'm here to talk more about
00:02 - bubbles bubbles but really I'm here to
00:04 - talk more about objects in a race we
00:06 - have a constructor function that makes
00:09 - objects we have a empty array every time
00:14 - I click the mouse I get a new object
00:16 - that goes into that array now what if I
00:19 - want to delete objects from the array
00:21 - now in the previous video I referenced
00:23 - the splice function which is a function
00:25 - that's built into JavaScript as part of
00:27 - the array object it allows you to splice
00:29 - something or delete something out of an
00:31 - array the issue here is how do you
00:35 - choose when to delete something and
00:37 - which thing to delete so I need to
00:39 - create an artificial scenario you know
00:41 - some scenarios might be the thing leaves
00:42 - the screen so you can remove it that
00:45 - another scenario might be it's like
00:46 - you're have some game and things collide
00:49 - and when they collide they one of them
00:51 - deletes but here what I'm going to do is
00:55 - have the objects fade out so the first
00:59 - thing I want to add to this program
01:00 - right I should restart it which is just
01:02 - I want to add the fact that I'm going to
01:03 - click and make these objects and as soon
01:05 - as they're born into the world they
01:07 - start fading away and disappear so
01:09 - there's a difference between not seeing
01:11 - them and having them not actually exist
01:13 - in the array and that's kind of what I
01:14 - want to look at in this video here so
01:17 - audio is still working I'm recording
01:19 - this is good ok so I'm coming over here
01:22 - and you know the last video I change the
01:24 - object's color now all I want to do move
01:27 - the mouse here is change its alpha so
01:29 - you can see that's built in to be 100
01:31 - but what I want to do now is add a
01:34 - variable this dot and I don't know I'm
01:36 - going to call it a lifespan or timer
01:39 - let's call it lifespan kind of like you
01:41 - know this is sort of the classic
01:42 - particle system thing you may call these
01:44 - particles they exist for a period of
01:46 - time they fade away their life very
01:50 - fulfilling and meaningful they're like
01:52 - 20 seconds so being pixels with a screen
01:55 - they led a full life that we don't feel
01:58 - ok anyway and then and then you get rid
02:00 - of them from the array you do that with
02:02 - with without any emotion or whatever
02:05 - okay so the lifespan let's started at
02:07 - 255 and if I put this dot lifespan here
02:10 - I might add something to this move
02:13 - you know maybe it makes more sense to
02:14 - call this function and update function
02:16 - so updating the life cycle of this
02:18 - particle
02:19 - some call it update meaning I update its
02:21 - location and I also update its lifespan
02:24 - and all I'm going to do to its lifespan
02:26 - is say - - - - by the way it means
02:29 - equals itself minus 1 so you know I'll
02:33 - be a little bit more explicit about that
02:34 - and write that in so you can see it so
02:37 - I'm just going to subtract 1 from the
02:39 - lifespan x + y change randomly 1 from
02:42 - the lifespan so if I now run this
02:44 - program and I click oh I'm defined as
02:46 - not a function line 15 oh wait of course
02:49 - so here's the thing oh boy would be nice
02:52 - if this error message were a little bit
02:53 - better line 15 that seems right so
02:55 - unfair that it's giving me is actually
02:58 - the error in sketch KS this is another
03:01 - not just like bug report but something
03:04 - that I might file and github for the
03:05 - editor to think about how do you deal
03:07 - with which tab the errors in something
03:09 - to think about so if I go over here to
03:11 - line 15 remember I change the name of
03:13 - the function to update but still in the
03:15 - code here it's called move so I'm going
03:17 - to change this to update I'm going to
03:19 - come back over here and now you can see
03:22 - as I click these objects are fading away
03:25 - now on purpose I've left the stroke not
03:28 - fading I'll add that in later because
03:30 - what I'm doing now is I'm visually
03:32 - showing you like is the object finished
03:35 - it is when it's faded to black but it's
03:38 - still in the array right if I said no
03:40 - stroke it would look more like what you
03:47 - might expect it's fading away and when
03:49 - it fades away it's gone but it's still
03:51 - in the array and you know which is fine
03:54 - it works but if you're making if you're
03:57 - if this is your installation and you're
03:58 - going to set it up somewhere or it's
03:59 - your webpage or whatever and it's going
04:02 - to run for like a long time and you make
04:04 - zillions of objects you want to remove
04:07 - them from the array it's going to make
04:08 - your code run very very slow to like
04:10 - operate all these additional objects
04:12 - that don't actually need to be on the
04:13 - screen anymore
04:13 - so this is what we need to do I'm going
04:15 - to put the stroke back in so we can see
04:18 - that and then later I'll remove it so
04:19 - how do I actually remove the objects
04:22 - from the array when they fade it out
04:24 - okay so let's think about this
04:26 - for a second over here so here is an
04:29 - array I'm going to draw it like this and
04:33 - you can think of the array as having a
04:35 - bunch of particles in it a b c d e so
04:39 - what happens when you call splice so
04:42 - this is index 0 1 2 3 4 and if the array
04:47 - is called arr
04:49 - if i say ARR dot splice the arguments i
04:53 - need to give right splice is a function
04:56 - it's part of the array object just like
04:57 - you can push into an array you can
04:59 - splice something out of the array if I
05:01 - say index 2 that means I want to delete
05:04 - this element and then the number here is
05:07 - how many elements do you want to delete
05:09 - so in this case I only want to delete
05:11 - that one element so the number is 1 and
05:13 - most examples most scenarios that's
05:15 - probably what you'll want to do but for
05:17 - some reason I wanted to delete 2 and 3
05:19 - or 2 and 3 and 4 I could put 2 or 3 how
05:22 - many elements pass number two so here I
05:25 - just want to delete one element this
05:27 - will remove this element from the array
05:29 - and now the array looks like this a b d
05:36 - e 0 1 2 3 so you can see when you delete
05:41 - something from the array these elements
05:43 - stay in the same spot these two elements
05:45 - shuffle over I'm focusing on this
05:47 - because this actually makes a difference
05:48 - in how you loop through the array and
05:51 - check whether or not to delete it so so
05:54 - coming over here I'm going to press this
05:57 - button let's look at where I want to
05:59 - delete this stuff from the array so this
06:02 - is the this is the bit of code right
06:05 - here where you're looping through every
06:08 - single object in the array start I equal
06:11 - to 0 go to the end of the array update
06:13 - and display them so what I need to do is
06:15 - figure out if I want to delete something
06:17 - there so let me zoom in on the code here
06:19 - for a second and say if something
06:24 - bubbles dot splice index sorry index i1
06:31 - element right so as you're looping
06:34 - through the array for every element I
06:37 - element 0 element 1
06:38 - into element 3 check to see if it should
06:41 - be deleted if it should delete that
06:43 - element so how do you check if it should
06:45 - be deleted here's an idea how about if
06:49 - that value that's storing its alpha is
06:52 - less than zero right so this value
06:54 - lifespan which starts at 255 is counting
06:58 - down when it gets to below zero this
07:01 - alpha zero I can't see it on the screen
07:02 - that's probably when you want to delete
07:04 - it so how do you access a property of an
07:07 - object from outside the object with the
07:10 - dot syntax just like you're saying
07:12 - bubbles update or bubbles in dictionary
07:15 - bubbles index dot update or bubbles
07:17 - index I display I can say if bubbles
07:21 - index i dot lifespan is less than what 0
07:26 - it's counting down kind of like when
07:28 - something gets to the edge of the screen
07:29 - change its speed here I'm saying when
07:32 - something's alpha gets down to zero
07:33 - delete it from the array when this
07:36 - bubble I lifespan is less than zero
07:38 - delete that bubble I splice that bubble
07:41 - i from the array so let's watch this now
07:44 - I'm going to click and you can see as
07:47 - I'm clicking on them when they get down
07:49 - to zero they actually leave so even
07:52 - though so they're no longer in the array
07:54 - they're gone the size of the array is
07:56 - now zero I can keep adding objects and
07:59 - they will all fade away disappear now I
08:01 - could remove that stroke and you won't
08:02 - notice them disappear like that because
08:04 - I'm only removing it once the Alpha is
08:06 - all the way to zero but I have actually
08:08 - caused a little bit of a problem it
08:10 - happened to work this is fine and this
08:12 - will work in most cases but I did do
08:14 - something that's kind of a mistake and I
08:16 - want to like talk about that for a
08:17 - second because then you want to change
08:20 - the way I'm doing this loop so what's
08:21 - the danger here look at this loop here
08:25 - what am I doing here I am doing
08:27 - something to every element of an array
08:29 - from zero to the end of the array from
08:31 - zero to the length of the array and
08:32 - while I'm doing that loop I'm like
08:34 - modifying the array like you could
08:36 - imagine like if while you're looping
08:38 - you're adding things to the array you'll
08:40 - never exit the loop because you trying
08:41 - to get to the end but new things are
08:43 - going to the array so anytime you start
08:45 - manipulating the array itself in the
08:48 - loop
08:48 - you could walk into some danger this
08:50 - happened to work but there is people are
08:52 - applauding outside hope there toughly
08:54 - not applauding me um you probably
08:56 - couldn't hear that but but any time you
08:59 - do that you what you run into a little
09:01 - bit of danger so let's return to this
09:03 - diagram and now let's pretend that we're
09:05 - looping I'm looping so first I starts at
09:08 - zero and I ask should I delete element a
09:11 - no I should not delete element a okay
09:14 - now I becomes one should I delete
09:18 - element one no I should not delete
09:20 - element one so now I becomes two should
09:24 - I delete element to see yes I should
09:28 - delete element to index to see so delete
09:31 - it and now the array looks like this
09:33 - what does I become next I becomes three
09:37 - should I delete element E no I should
09:40 - not I'm done do you notice what happened
09:42 - what did I miss
09:43 - I never checked element D because when I
09:47 - was two I checked element C which got
09:49 - removed then I became three but when you
09:52 - removed something everything shifts over
09:54 - so D is now in two I skipped D and went
09:56 - right on to E so in the end it didn't
09:59 - really matter because a second later
10:00 - draw is going to execute again I'm gonna
10:01 - look through the array again and I'll
10:03 - catch that element but this could in
10:05 - other scenarios really caused you a big
10:07 - problem the solution to this is actually
10:09 - go and it's a nice exercise to like do
10:11 - this anyway the solution to this is to
10:13 - go through the array backwards so if you
10:15 - start here and go backwards if you
10:17 - delete this element doesn't matter that
10:19 - all the elements shift over because
10:20 - you're going in that direction
10:22 - so how to move through an array
10:23 - backwards over here all I need to do
10:27 - instead of starting at 0 what do I want
10:30 - to start at the end of the array or
10:33 - bubbles dot length minus 1 where do I
10:38 - want to end my loop I want to end my
10:41 - loop knot at the end of the right but at
10:44 - the beginning which is 0 so X I greater
10:49 - than or equal to 0 and I don't want to
10:51 - go forward through the loop right I want
10:53 - to say instead of I plus plus I minus
10:55 - minus so now if I run this you know
10:58 - visually it's the same exact result
11:00 - that you're seeing here but but at least
11:05 - now that error has been fixed you can't
11:07 - really tell the difference in this
11:08 - program but I've but it could really
11:10 - matter plus this is good this is good
11:12 - for you to think this way because how
11:14 - the loop is working what the array is
11:16 - doing these are things that you always
11:17 - need to think about now I really should
11:20 - just be done with this video
11:22 - and you could stop now you can turn it
11:24 - off I'm going to do one more thing
11:26 - though which is that I there's something
11:28 - about this that I don't love is fine but
11:31 - you know here what's going on here
11:33 - notice how I'm calling update and I'm
11:36 - calling the display function but here on
11:38 - accessing lifespan directly and then
11:40 - checking if it's less than zero there
11:42 - might be a more complex scenario that
11:45 - determines if an object should be
11:47 - removed or not
11:48 - so rather than start polluting this area
11:51 - with lots more code after do a
11:52 - calculation a distance calculation is
11:54 - far from this etc that this worked for
11:56 - just this what might work better is if I
11:59 - had a function in the object a function
12:02 - called like is finished or finished or
12:04 - time to remove write a function that
12:07 - tells me whether or not to delete that
12:08 - object what I'm saying is what I want to
12:11 - do is write a call a function let's just
12:14 - call it is finished all right so I'm
12:17 - executing a function you can see this
12:19 - reads nicely if bubbles index I and we
12:22 - move this out of the way if bubbles
12:24 - index I is finished remove it from the
12:26 - array so now I'm farming out the job of
12:30 - determining is the Alpha below zero or
12:32 - is it off-screen I could have multiple
12:34 - possibilities to a function so I have to
12:37 - write that function where I have to
12:39 - write that function in the object here I
12:42 - need to add a function I can ever add
12:45 - anywhere this dot is finished whoops
12:49 - equals function now this comes back to a
12:53 - topic from an earlier video about a
12:56 - function that returns a value what is
12:58 - this function do it I should really just
13:00 - move I'm still standing in front of this
13:02 - what is this function doing this
13:04 - function is answering the question is it
13:06 - finished or is it not finished the job
13:08 - of this function is to return true or
13:10 - false right this right here is a boolean
13:14 - expression
13:14 - bubbles index I dot is finished should
13:16 - evaluate to true or false so if I were
13:21 - to say if I were to just write here
13:23 - return false and I run this code the
13:27 - bubbles will never ever ever be finished
13:29 - because is finished always always always
13:31 - says no I'm not finished return false
13:33 - return false return false I need to
13:35 - build a logic of checking the lifespan
13:37 - right here right if like if this dot
13:42 - lifespan is less than zero return true
13:46 - otherwise return false so this is a
13:50 - really classic scenario where you need a
13:53 - function that returns a value again in
13:55 - this particular scenario it's a very
13:57 - simple situation only checking lifespan
14:00 - less than zero but you can imagine a
14:02 - much more complex logic to determine
14:04 - whether you should return true or false
14:06 - if it's less than zero return true
14:08 - otherwise return false meaning out here
14:12 - where I call this function is finished
14:15 - if it's less than zero but you'll get
14:19 - true this will evaluate to true and it
14:21 - will get deleted otherwise it will
14:22 - evaluate to false and it won't get
14:23 - deleted same as we had before but that
14:25 - boolean expression is now essentially in
14:27 - the object and I get a true or false
14:29 - back from the object so let's just let
14:32 - let's do a couple things
14:33 - let's first confirm that this works I'm
14:35 - going to add a lot of objects and see
14:39 - that they're disappearing when they're
14:40 - faded out they are and then I want to
14:43 - just finish this up with a nice little
14:45 - bow on this example and just take out
14:50 - that stroke so I'm going to say no
14:52 - stroke so now all now what I'm seeing is
14:55 - I can add as many objects they exist on
14:58 - the screen they fade out when they fade
15:01 - it out they're also deleted from the
15:03 - array itself which again to the end-user
15:06 - doesn't matter but you've made a more
15:07 - efficient program one that over time
15:09 - won't just fill up this giant giant
15:11 - array and iterate all these objects that
15:13 - are no longer being used so you know
15:15 - there's a bunch of things you could try
15:17 - here you could try to do something where
15:19 - objects to get to leave and when they
15:20 - leave the screen that would be kind of
15:22 - like a nice thing to try or some other
15:23 - set of conditions you know how do you
15:25 - have something get deleted when you
15:27 - click on
15:27 - that would really like you know work
15:29 - well with the previous video I just made
15:30 - that would be a great exercise so think
15:32 - about taking this idea have your own
15:34 - object when do you delete them when do
15:36 - you not bleed them do you need to loop
15:38 - through the array backwards those types
15:39 - of things and see if you could get that
15:40 - going
15:41 - okay that's the end of this video is 15
15:43 - minutes exactly what I said it would be
15:44 - and I'm going to turn it off now

Cleaned transcript:

okay bye I'm here to talk more about bubbles bubbles but really I'm here to talk more about objects in a race we have a constructor function that makes objects we have a empty array every time I click the mouse I get a new object that goes into that array now what if I want to delete objects from the array now in the previous video I referenced the splice function which is a function that's built into JavaScript as part of the array object it allows you to splice something or delete something out of an array the issue here is how do you choose when to delete something and which thing to delete so I need to create an artificial scenario you know some scenarios might be the thing leaves the screen so you can remove it that another scenario might be it's like you're have some game and things collide and when they collide they one of them deletes but here what I'm going to do is have the objects fade out so the first thing I want to add to this program right I should restart it which is just I want to add the fact that I'm going to click and make these objects and as soon as they're born into the world they start fading away and disappear so there's a difference between not seeing them and having them not actually exist in the array and that's kind of what I want to look at in this video here so audio is still working I'm recording this is good ok so I'm coming over here and you know the last video I change the object's color now all I want to do move the mouse here is change its alpha so you can see that's built in to be 100 but what I want to do now is add a variable this dot and I don't know I'm going to call it a lifespan or timer let's call it lifespan kind of like you know this is sort of the classic particle system thing you may call these particles they exist for a period of time they fade away their life very fulfilling and meaningful they're like 20 seconds so being pixels with a screen they led a full life that we don't feel ok anyway and then and then you get rid of them from the array you do that with with without any emotion or whatever okay so the lifespan let's started at 255 and if I put this dot lifespan here I might add something to this move you know maybe it makes more sense to call this function and update function so updating the life cycle of this particle some call it update meaning I update its location and I also update its lifespan and all I'm going to do to its lifespan is say by the way it means equals itself minus 1 so you know I'll be a little bit more explicit about that and write that in so you can see it so I'm just going to subtract 1 from the lifespan x + y change randomly 1 from the lifespan so if I now run this program and I click oh I'm defined as not a function line 15 oh wait of course so here's the thing oh boy would be nice if this error message were a little bit better line 15 that seems right so unfair that it's giving me is actually the error in sketch KS this is another not just like bug report but something that I might file and github for the editor to think about how do you deal with which tab the errors in something to think about so if I go over here to line 15 remember I change the name of the function to update but still in the code here it's called move so I'm going to change this to update I'm going to come back over here and now you can see as I click these objects are fading away now on purpose I've left the stroke not fading I'll add that in later because what I'm doing now is I'm visually showing you like is the object finished it is when it's faded to black but it's still in the array right if I said no stroke it would look more like what you might expect it's fading away and when it fades away it's gone but it's still in the array and you know which is fine it works but if you're making if you're if this is your installation and you're going to set it up somewhere or it's your webpage or whatever and it's going to run for like a long time and you make zillions of objects you want to remove them from the array it's going to make your code run very very slow to like operate all these additional objects that don't actually need to be on the screen anymore so this is what we need to do I'm going to put the stroke back in so we can see that and then later I'll remove it so how do I actually remove the objects from the array when they fade it out okay so let's think about this for a second over here so here is an array I'm going to draw it like this and you can think of the array as having a bunch of particles in it a b c d e so what happens when you call splice so this is index 0 1 2 3 4 and if the array is called arr if i say ARR dot splice the arguments i need to give right splice is a function it's part of the array object just like you can push into an array you can splice something out of the array if I say index 2 that means I want to delete this element and then the number here is how many elements do you want to delete so in this case I only want to delete that one element so the number is 1 and most examples most scenarios that's probably what you'll want to do but for some reason I wanted to delete 2 and 3 or 2 and 3 and 4 I could put 2 or 3 how many elements pass number two so here I just want to delete one element this will remove this element from the array and now the array looks like this a b d e 0 1 2 3 so you can see when you delete something from the array these elements stay in the same spot these two elements shuffle over I'm focusing on this because this actually makes a difference in how you loop through the array and check whether or not to delete it so so coming over here I'm going to press this button let's look at where I want to delete this stuff from the array so this is the this is the bit of code right here where you're looping through every single object in the array start I equal to 0 go to the end of the array update and display them so what I need to do is figure out if I want to delete something there so let me zoom in on the code here for a second and say if something bubbles dot splice index sorry index i1 element right so as you're looping through the array for every element I element 0 element 1 into element 3 check to see if it should be deleted if it should delete that element so how do you check if it should be deleted here's an idea how about if that value that's storing its alpha is less than zero right so this value lifespan which starts at 255 is counting down when it gets to below zero this alpha zero I can't see it on the screen that's probably when you want to delete it so how do you access a property of an object from outside the object with the dot syntax just like you're saying bubbles update or bubbles in dictionary bubbles index dot update or bubbles index I display I can say if bubbles index i dot lifespan is less than what 0 it's counting down kind of like when something gets to the edge of the screen change its speed here I'm saying when something's alpha gets down to zero delete it from the array when this bubble I lifespan is less than zero delete that bubble I splice that bubble i from the array so let's watch this now I'm going to click and you can see as I'm clicking on them when they get down to zero they actually leave so even though so they're no longer in the array they're gone the size of the array is now zero I can keep adding objects and they will all fade away disappear now I could remove that stroke and you won't notice them disappear like that because I'm only removing it once the Alpha is all the way to zero but I have actually caused a little bit of a problem it happened to work this is fine and this will work in most cases but I did do something that's kind of a mistake and I want to like talk about that for a second because then you want to change the way I'm doing this loop so what's the danger here look at this loop here what am I doing here I am doing something to every element of an array from zero to the end of the array from zero to the length of the array and while I'm doing that loop I'm like modifying the array like you could imagine like if while you're looping you're adding things to the array you'll never exit the loop because you trying to get to the end but new things are going to the array so anytime you start manipulating the array itself in the loop you could walk into some danger this happened to work but there is people are applauding outside hope there toughly not applauding me um you probably couldn't hear that but but any time you do that you what you run into a little bit of danger so let's return to this diagram and now let's pretend that we're looping I'm looping so first I starts at zero and I ask should I delete element a no I should not delete element a okay now I becomes one should I delete element one no I should not delete element one so now I becomes two should I delete element to see yes I should delete element to index to see so delete it and now the array looks like this what does I become next I becomes three should I delete element E no I should not I'm done do you notice what happened what did I miss I never checked element D because when I was two I checked element C which got removed then I became three but when you removed something everything shifts over so D is now in two I skipped D and went right on to E so in the end it didn't really matter because a second later draw is going to execute again I'm gonna look through the array again and I'll catch that element but this could in other scenarios really caused you a big problem the solution to this is actually go and it's a nice exercise to like do this anyway the solution to this is to go through the array backwards so if you start here and go backwards if you delete this element doesn't matter that all the elements shift over because you're going in that direction so how to move through an array backwards over here all I need to do instead of starting at 0 what do I want to start at the end of the array or bubbles dot length minus 1 where do I want to end my loop I want to end my loop knot at the end of the right but at the beginning which is 0 so X I greater than or equal to 0 and I don't want to go forward through the loop right I want to say instead of I plus plus I minus minus so now if I run this you know visually it's the same exact result that you're seeing here but but at least now that error has been fixed you can't really tell the difference in this program but I've but it could really matter plus this is good this is good for you to think this way because how the loop is working what the array is doing these are things that you always need to think about now I really should just be done with this video and you could stop now you can turn it off I'm going to do one more thing though which is that I there's something about this that I don't love is fine but you know here what's going on here notice how I'm calling update and I'm calling the display function but here on accessing lifespan directly and then checking if it's less than zero there might be a more complex scenario that determines if an object should be removed or not so rather than start polluting this area with lots more code after do a calculation a distance calculation is far from this etc that this worked for just this what might work better is if I had a function in the object a function called like is finished or finished or time to remove write a function that tells me whether or not to delete that object what I'm saying is what I want to do is write a call a function let's just call it is finished all right so I'm executing a function you can see this reads nicely if bubbles index I and we move this out of the way if bubbles index I is finished remove it from the array so now I'm farming out the job of determining is the Alpha below zero or is it offscreen I could have multiple possibilities to a function so I have to write that function where I have to write that function in the object here I need to add a function I can ever add anywhere this dot is finished whoops equals function now this comes back to a topic from an earlier video about a function that returns a value what is this function do it I should really just move I'm still standing in front of this what is this function doing this function is answering the question is it finished or is it not finished the job of this function is to return true or false right this right here is a boolean expression bubbles index I dot is finished should evaluate to true or false so if I were to say if I were to just write here return false and I run this code the bubbles will never ever ever be finished because is finished always always always says no I'm not finished return false return false return false I need to build a logic of checking the lifespan right here right if like if this dot lifespan is less than zero return true otherwise return false so this is a really classic scenario where you need a function that returns a value again in this particular scenario it's a very simple situation only checking lifespan less than zero but you can imagine a much more complex logic to determine whether you should return true or false if it's less than zero return true otherwise return false meaning out here where I call this function is finished if it's less than zero but you'll get true this will evaluate to true and it will get deleted otherwise it will evaluate to false and it won't get deleted same as we had before but that boolean expression is now essentially in the object and I get a true or false back from the object so let's just let let's do a couple things let's first confirm that this works I'm going to add a lot of objects and see that they're disappearing when they're faded out they are and then I want to just finish this up with a nice little bow on this example and just take out that stroke so I'm going to say no stroke so now all now what I'm seeing is I can add as many objects they exist on the screen they fade out when they fade it out they're also deleted from the array itself which again to the enduser doesn't matter but you've made a more efficient program one that over time won't just fill up this giant giant array and iterate all these objects that are no longer being used so you know there's a bunch of things you could try here you could try to do something where objects to get to leave and when they leave the screen that would be kind of like a nice thing to try or some other set of conditions you know how do you have something get deleted when you click on that would really like you know work well with the previous video I just made that would be a great exercise so think about taking this idea have your own object when do you delete them when do you not bleed them do you need to loop through the array backwards those types of things and see if you could get that going okay that's the end of this video is 15 minutes exactly what I said it would be and I'm going to turn it off now
