With timestamps:

00:00 - [Music]
00:04 - so
00:08 - [Music]
00:18 - stop hello I'm trying to make a grand
00:21 - entrance today welcome to coding rainbow
00:24 - episode
00:26 - 48 uh I've typically had a problem where
00:29 - this sound isn't working correctly when
00:31 - I first started the last couple times so
00:33 - please immediately in the chat if you
00:35 - could let me know is there any static
00:37 - clipping I'm playing some music can you
00:39 - hear the music in addition to seeing me
00:41 - talk and hearing me talk um hopefully
00:44 - that's working okay welcome I have a
00:46 - bunch of things I'd like to discuss um
00:48 - this is episode 48 I'm live from the
00:50 - school for poetic computation here in
00:52 - the West Village of New York City uh
00:55 - sound sounds good thank you very much uh
00:58 - and I'm I Okay so turn the music off for
01:01 - a second so I so first of all if you're
01:03 - watching this in the archive go and
01:05 - check the video description there'll be
01:06 - links to time codes of where various
01:08 - things happen but I I'm a little bit
01:11 - flumed and flustered because I today
01:14 - what I want to do and it's been
01:15 - requested and I wanted to spend most of
01:17 - today talking about and looking at
01:19 - different examples around the larger
01:21 - topic of computer vision have this
01:24 - camera that I found here it is a Sony
01:26 - PlayStation I camera and you know I used
01:30 - this it was this is probably like five
01:32 - years ago at some at this point but I
01:34 - used to use this with processing on my
01:36 - Mac all the time and it was good for an
01:38 - external webcam um and uh it uh doesn't
01:44 - really work so much anymore so I have a
01:45 - weird sort of like hacky way that I
01:47 - might try to get it to work and you
01:48 - might be
01:49 - asking uh
01:51 - why why do you want to use that camera
01:53 - anyway you've got this thing I'm going
01:55 - to go here right I have a
01:58 - webcam right there there I look it's me
02:01 - look at this a little behind the scenes
02:03 - going on right now you're seeing this
02:06 - live composite but really what I am is a
02:08 - person standing in front of a green
02:10 - screen and then I'm putting the my
02:11 - computer screen behind me and then
02:13 - anyway you get the idea but the point is
02:15 - I could use this um in uh to demonstrate
02:18 - I need a live I want a live camera feed
02:20 - to demonstrate some computer vision
02:22 - ideas and topics um but what I was
02:25 - hoping to do was have a uh take this
02:28 - camera here I don't know what I'm
02:29 - looking at anymore and uh tape it right
02:32 - here and point it down at the table
02:34 - because I have
02:36 - these cups o maybe these would be good
02:38 - for
02:41 - juggling no not so good for juggling um
02:44 - I have these
02:46 - cups look at I have these cups and I was
02:49 - going to use these as uh things for the
02:51 - camera to look at uh and move them
02:53 - around and show you how to and and talk
02:54 - about blob detection um with these
02:57 - that's being so to make a kind of
02:59 - interactive tabletop type
03:02 - thing but I couldn't get that camera to
03:04 - work so I think what I'm going to do
03:05 - today is luckily so just so happens I
03:09 - happen to have this green screen here so
03:11 - I can actually move my laptop over to
03:13 - here and uh point the camera and I have
03:16 - this really nice clean image so one of
03:18 - the things you want in it with working
03:21 - with computer vision applications um the
03:24 - types of things that you might do is to
03:26 - create a a really for a lot of the
03:29 - demonstration I want to show you having
03:30 - a high contrast image something with a
03:32 - very different foreground and
03:34 - background and so oh look at this watch
03:36 - this I have a weird
03:39 - idea I'm looking this is the problem I'm
03:41 - looking I'm not looking at you because
03:43 - you're the one
03:45 - watching and I have a piece of tape here
03:49 - this is going to be
03:51 - excellent there we go now we're going to
03:54 - use this for blob detection so one of
03:56 - the one of the things that I want to do
03:58 - today I'm standing in front of it is
03:59 - whoa look at this which is the real cup
04:02 - is this the real cup or is this the oh
04:05 - my mind is
04:06 - exploding freakish i' like everywhere I
04:09 - look there's a screen or a camera or
04:11 - some copy of me and I'm just take a deep
04:13 - breath put my music back
04:20 - on okay I think everything's
04:22 - everything's starting to feel a little
04:24 - better and a little more Cal I'm walked
04:26 - into it okay so one of the things I want
04:29 - to talk about today is blob detection
04:32 - and what do I mean by blob detection I
04:34 - mean how can I have a camera a computer
04:38 - how does it computer vision by the way
04:40 - this idea of computer vision the
04:41 - computer that sees how do we write
04:44 - algorithms for the computer to be able
04:46 - to look at an image and analyze that
04:48 - image and produce some sort of result
04:50 - some evaluation of that image and that
04:51 - can be a lot of things from I think
04:54 - there's a person there or I actually
04:55 - recognize that there this is a landscape
04:58 - scene of a beach you know all sorts of
05:00 - machine learning type kind of things but
05:02 - I want to start from the very Basics and
05:04 - we could say like okay there what colors
05:07 - am I seeing me the the camera I'm seeing
05:10 - green and I'm seeing red where are the
05:12 - red colors they're over there is there a
05:14 - lot of red is there a little bit of red
05:15 - um that sort of thing so I want to start
05:17 - to look at uh that type of stuff okay so
05:22 - um so that's kind of one of the main
05:24 - topics today the other thing is um I got
05:27 - to close this uh let me see if I can
05:29 - find this uh I'm going to open up
05:33 - processing I am going to uh so let's see
05:35 - it's about 11:30 a.m. eastern time right
05:38 - now and I am going to uh find an
05:45 - example I should have should have
05:49 - prepared uh processing uh maybe here
05:53 - fireworks oh it's not here oh you know I
05:56 - probably already put it maybe I put it
05:57 - on the uh desktop
06:00 - here uh no uh I want to find something
06:05 - hold on you need to listen to some music
06:08 - while I'm looking oh no
06:12 - ah hold on
06:18 - everybody okay I'm I'm I'm searching for
06:20 - something now enjoy the
06:22 - music need to get some more creative
06:24 - comments music
06:31 - where would I have save that oh I know
06:34 - where it is I know where it is time out
06:36 - I know where it is I forgot where I put
06:38 - it okay
07:07 - okay so I want to do a uh coding
07:10 - challenge today since it's the July 4th
07:12 - holiday coming up fireworks in in here
07:15 - these United States where I am currently
07:17 - and so this is kind of one of these uh
07:19 - guess I should turn the music off maybe
07:21 - um oh it stopped anyway um this is one
07:23 - of these sort of classic uh
07:25 - computational visualization algorithm
07:28 - things you know when you first start
07:30 - learning creative code and graphics and
07:31 - programming and think hey let's make a
07:33 - fireworks simulation and there's
07:35 - particles and a little physics and some
07:37 - stuff there so I want to do this um
07:39 - today uh before I leave here so let's
07:43 - say this is going to be about a two-hour
07:45 - session and spend an hour and a half or
07:47 - so on various computer vision topics and
07:49 - then when there's a half an hour left I
07:50 - will stop and do this coding Challenge
07:52 - and I will also happily take your
07:53 - questions okay so in a moment I'm going
07:56 - to start with the computer vision stuff
07:59 - um before I get to that let me just say
08:01 - a few words again if you are new here uh
08:04 - I'm going to mention that uh if you're
08:07 - wondering what this is you can go to
08:09 - coding rainbow.com uh all uh what I'm
08:13 - doing now is a kind of raw
08:15 - unfiltered rambling discussion of
08:17 - creative coding topics I will program
08:19 - things and talk about things and watch
08:21 - this YouTube chat and answer questions
08:23 - um and once this is done I will take uh
08:27 - the sort of cogent
08:30 - chunks of video from this two 2our plus
08:33 - session and edit those into uh tutorial
08:35 - videos those will appear on my YouTube
08:37 - channel uh so if you want to be get
08:40 - notifications of those you can subscribe
08:42 - on YouTube um I also am running
08:43 - something called a uh patreon which is a
08:46 - kind of crowdfunding for media content
08:48 - podcasts videos other types of things
08:51 - too um and so you're welcome to consider
08:53 - joining that uh for joining that there
08:55 - is a uh slack channel that you then get
08:57 - invited to where I discuss this discuss
08:59 - topics I'm going to do and answer
09:01 - questions and that sort of thing a nice
09:02 - community of folks um and then the last
09:05 - thing is if you want to know when I'm
09:06 - going to be doing live streams you can
09:08 - scroll down and put your email in here
09:10 - and I will send out emails as those of
09:12 - you who are on this list notice I sent
09:14 - out an email like 15 minutes beforehand
09:15 - but sometimes I'm better about
09:16 - scheduling and I'll tell you a day in
09:18 - advance or two days in advance that sort
09:19 - of thing so this will be um my last uh
09:23 - coding rainbow session for this week uh
09:26 - I'm I'm traveling next week so there
09:28 - won't be any live live session um I am
09:31 - personally committed with this sort of
09:33 - patreon thing that I'm doing to doing
09:34 - four sessions per month which is once
09:38 - per week I have been getting more I I
09:39 - would say I'm I'm right now I'm
09:41 - operating on like six or seven per month
09:43 - so I'm kind of exceeding that but since
09:44 - I'm missing next week certainly the week
09:46 - after I'm going to make sure I schedule
09:48 - to do two live sessions so that I've
09:50 - caught up there um and that's kind of my
09:52 - plan one of the reasons for doing the
09:54 - patreon is to give me a little
09:56 - uh uh uh what's the word looking for so
10:01 - to give me some sort of like uh
10:03 - obligation so to speak so I feel um that
10:06 - that I'm kind of uh making sure I'm
10:08 - doing it ah uh neon cat fan asks in the
10:11 - chat if anyone has backed Pebble too
10:12 - this by the way is a pebble watch I I
10:14 - don't mean to be a Buzz Marketing Pebble
10:16 - by accident I I like it just fine take
10:18 - it or leave it um but I'm thinking of
10:20 - getting a pebble too okay um so I'm
10:23 - going to start getting myself set up to
10:25 - talk about some of these computer vision
10:27 - topics uh if you have some questions
10:29 - before I get started ask in the chat so
10:31 - um two things I want to do I'm going to
10:33 - let's put on some uh music
10:38 - again
10:46 - uh so I'm going to get a few things open
10:51 - here that I'm going to reference
10:59 - [Music]
11:07 - okay you can see all my looking around
11:08 - to try to get that PSI to
11:12 - work it ended yesterday
11:15 - uh okay I'm looking for
11:19 - now
11:21 - uh I'm going to find my playlist
11:26 - [Music]
11:41 - aha
11:43 - okay now let me see here
11:51 - [Music]
11:59 - I'm this is just me this is by the way
12:01 - as if I'm not live streaming right now
12:04 - this is what I would be doing by
12:06 - [Music]
12:10 - myself and i' like lose my chance okay
12:13 - I'm looking for hold on uh I want to I'm
12:16 - starting there's an example that I want
12:17 - to start with and so I just want to pull
12:19 - it
12:20 - up
12:22 - uh LP there we go learning
12:27 - processing video
12:31 - color track is where
12:36 - [Music]
12:43 - I okay want to know something quite
12:46 - amusing here which is that
12:49 - uh I'm using something called cam twist
12:53 - I forgot that I had that running okay
12:55 - I'm going to turn that off
13:00 - so I'm going to talk about cam twist in
13:02 - a minute this was my secret way of maybe
13:03 - getting the PSI to work
13:06 - ah
13:10 - seriously oh that's
13:13 - why
13:16 - no uh sorry everyone hold on I
13:20 - am trying to figure out why my computer
13:22 - is doing cam twist
13:26 - only I might just need to restart
13:30 - [Music]
13:40 - oh
13:54 - boy really wants to do cam twist badly
13:59 - all right I'm going to restart this
14:02 - computer uh hold
14:04 - on save as uh
14:09 - computer vision
14:11 - one hold on this computer is going to
14:16 - restart Oh look The Empty void of
14:20 - nothingness please restart sooner than
14:22 - later oh
14:25 - look oh did you hear that sound did the
14:28 - uh did the B sound actually uh make its
14:32 - way through to the to the stream okay so
14:37 - um I am okay so sorry this is not going
14:40 - very well so far okay let me log back in
14:44 - uh see if I get rid of this cam twist
14:46 - thing that happened by accident uh I'm
14:48 - going to open up processing
14:56 - so open recent computer vision come come
15:02 - come let's see ah I guess I have to
15:05 - uninstall cam
15:07 - twist I should not have installed it I
15:10 - killed my computer by installing cam
15:16 - twist okay boy this is a big failure
15:18 - today okay let's see how do
15:21 - I uh hold on I'm
15:24 - thinking uh probably installed some
15:27 - drivers I have have what's that thing
15:30 - called that I have
15:32 - uh
15:34 - uh clean my
15:45 - Mac okay sorry stop with this I was just
15:48 - going to use this I have this software
15:50 - that will automatically uninstall things
15:52 - nicely but
15:54 - instead
15:56 - uninstaller I want toinstall cam twist
16:01 - here we go
16:04 - uninstall sorry everybody this is really
16:07 - not going very well today uh okay let's
16:10 - see if that helps I might need to
16:13 - restart
16:15 - [Music]
16:22 - again cam twist oh my God dud crazy
16:26 - let's try restarting one more time now
16:28 - that I at least did that
16:36 - uninstall I might have to just I could
16:38 - switch to using a different
16:40 - computer actually I have a whole there's
16:43 - lots of things I could do actually um
16:46 - which I might in a second take some more
16:49 - anyway
16:50 - so just to just to to while um while I'm
16:54 - kind of getting started here what's this
16:56 - over here that's you're seeing
16:59 - there's
17:00 - something oh this it's a
17:04 - t
17:09 - Okay um okay let's see now I'm hoping
17:12 - this is going to
17:16 - be the
17:21 - moment
17:23 - uh usually I do this kind of stuff I I
17:25 - say usually I do this kind of stuff
17:27 - beforehand and I I say that just because
17:28 - aspire to do this beforehand and I had
17:30 - done a lot of this
17:33 - beforehand okay I'm going to take more
17:35 - drastic measures
17:42 - um what I'm going to do is create a
17:49 - new 50 people are watching this total
17:52 - disaster by the way this has happened to
17:53 - be in real life class this is actually
17:55 - real life class too um okay uh
18:00 - gosh uh let's make a new user let's see
18:04 - if I make a new
18:06 - user
18:08 - uh uh coding
18:10 - rainbow uh create user uh that's fine I
18:14 - don't want to password I want this user
18:16 - to be an
18:18 - administrator uh and I want to log
18:27 - out oh look at this coding rainbow is a
18:34 - parrot I'm
18:39 - hoping don't sign in definitely
18:44 - not yes
18:54 - skip oo oh I feel so like I'm in the
18:57 - mountains all right thank you okay uh
19:00 - let's quickly I'm going to do something
19:02 - silly which is I I think I'm actually
19:05 - just going to be fastest here to
19:08 - download
19:10 - processing
19:12 - uh I think this will actually
19:21 - be yeah I it is true that I one of the
19:24 - big issues here is that I'm using a Mac
19:28 - ah okay let's come here take this move
19:32 - this to the
19:37 - desktop
19:41 - and and I'm opening
19:43 - processing I hope this isn't anybody's
19:45 - first time
19:47 - watching uh I don't need this message
19:49 - now I'm going to add a
19:52 - library and I'm going to add a
19:56 - video uh
19:59 - and it's going to install
20:03 - that oh boy this has really been going
20:05 - for a half an hour that the camera's
20:06 - about to shut off that's
20:08 - bad uh okay now uh
20:12 - examples
20:15 - um libraries video let's go to capture
20:20 - let's go to getting started capture and
20:22 - let's hit play and
20:24 - let's ah cam twist has taken over
20:27 - everywhere this is crazy
20:35 - okay oh but look I am back here okay so
20:39 - at least I I I thought I saw some yeah
20:42 - look cam twist is still there oh and all
20:45 - right hold
20:50 - on let's just try one more thing
20:55 - here uh
21:00 - I think I'm going to be back in a
21:05 - second I have some good for all of you
21:07 - who think this is like total complete
21:09 - failure today I do have some good news I
21:12 - purchased some fresh whiteboard
21:17 - markers uh okay now I have a
21:21 - feeling that back here at least
21:29 - if I go
21:30 - to uh
21:32 - video
21:35 - capture getting started
21:38 - capture and run
21:50 - this we're back okay there's an
21:52 - unfortunate reality here which is that I
21:54 - think I've done so many weird things
21:55 - that it now takes like 5 minutes for the
21:58 - Pro to start I'm tempted actually to do
22:00 - these examples in JavaScript uh just in
22:02 - the browser okay so at least I have the
22:05 - camera working and I um and I have a
22:09 - feeling that the cam twist thing which
22:12 - is really irritating
22:15 - me I will uh I might install that back
22:17 - later it's just I
22:20 - think that uh maybe I just need to do
22:25 - this open recent computer Vision
22:32 - one let's try
22:42 - this oh
22:47 - sorry oops uh okay hold on we're getting
22:51 - there
23:11 - okay I've got something going now all
23:13 - right I've got something we can work
23:14 - with here so just frustrating me that
23:20 - uh all these all these like horrible
23:22 - error messages are all because I
23:24 - installed that cam twist thing and I
23:27 - really wish I could get rid of it
23:28 - because it's messing with what it is
23:31 - that I want to do and I want to
23:34 - see I want to get 640 by 480 from the
23:37 - camera so give me a second
23:46 - here oops I need print array ah one more
23:49 - time
23:59 - okay now I'm looking for FaceTime HD
24:03 - camera 640 by 360 really uh that's fine
24:07 - 30 frames per second is cameras three
24:10 - and I'm going say 640
24:12 - by
24:15 - 360 let's start this off so what uh what
24:18 - I'm doing by the way if you're confused
24:19 - is I'm just trying to get my um previous
24:22 - example I I made a video a long time ago
24:25 - about kind of computer vision in general
24:27 - and I I had one example which uh does
24:30 - tracking of a red
24:34 - color so I thought yeah so this is where
24:39 - I'm sort of starting with and so I'm I'm
24:42 - what I'm going to start with the first
24:43 - thing that I'm going to do is you can
24:44 - see that there are some things about
24:46 - this that kind of work in that I am able
24:48 - to effectively
24:50 - track this cups location but you'll
24:53 - notice this sort of like circle is
24:54 - jumping around so this particular
24:56 - example is looking for the sing most red
24:59 - pixel and what I want to do in uh
25:02 - talking about computer vision is a few
25:03 - things number one I want to look at how
25:06 - I would then find the average location
25:08 - of all red pixels which will give me
25:11 - something more stable and more
25:12 - accurate from there I also want to look
25:15 - at um how I would then track motion so I
25:19 - think looking at tracking motion can be
25:20 - useful um pixels that are changing and
25:23 - then from there I want to look at
25:25 - actually blob tracking so not just the
25:27 - average location but thinking about what
25:29 - is the sort of Si what are the what are
25:31 - the dimensions of this blob of red
25:34 - pixels and then what
25:36 - happens when I have uh two of them and
25:39 - can I have multiple blobs moving around
25:41 - and you know what if I just use the red
25:43 - color I don't need a table top this will
25:45 - work so and um yeah so and then I can
25:48 - also I have my
25:53 - permanently okay so I think we're ready
25:55 - to get started with some of this
25:56 - computer vision stuff I apologize for um
26:00 - taking so long to get going with this so
26:04 - let me get back uh to this particular
26:08 - example I'm very frustrated about the
26:11 - red error messages with the cam twist
26:13 - thing there must be like um I I want to
26:16 - like there must be a driver somewhere
26:18 - that cam cam twist what if I
26:24 - do there's still something on the
26:26 - computer o where's
26:29 - this ah look at this ah look at this
26:33 - let's do
26:35 - this okay hold on I I I stupidly used
26:38 - that I um okay hold on we're g to make
26:42 - some magic happen
26:44 - here just bear with me for one more
26:46 - second this is what I
26:50 - want I want to do
26:55 - this I think the like driver or whatever
26:58 - for cam twist is a great thing I love
27:01 - cam twist I was going to use it to show
27:02 - you something really kind of cool but
27:04 - it's messing with my mojo right now
27:08 - uh so let's see uh this is already I
27:11 - think this is what got removed
27:14 - already um okay so let's see if that
27:16 - helps
27:21 - matters oh I should have just looked for
27:23 - that ear I'm such an idiot that I didn't
27:24 - do that earlier okay yay so I um so uh
27:28 - great and so here I am 640 by 360 is
27:31 - still cameras 3 great okay so things
27:34 - will work a little more smoothly now
27:35 - with no error messages yay okay now I
27:38 - need to go to the browser and I have to
27:41 - find these two things that I want to
27:45 - reference
27:47 - um and
27:50 - uh uh open
27:53 - Frameworks uh uh computer
27:59 - computer vision
28:01 - book so uh somebody correct me if I'm
28:04 - wrong but this is um this by the way
28:08 - this website that I'm at which is
28:10 - openframeworks docc fbook is a online
28:14 - book about using open Frameworks which
28:16 - is a C++ creative coding platform and I
28:20 - believe that a lot of this material was
28:22 - put together at a doc Sprint that
28:23 - happened at University of Denver the EDP
28:27 - what's this program EDP
28:30 - Denver
28:32 - uh emerging digital practices at the
28:34 - University of Denver great program Chris
28:36 - Coleman uh is there he supports a lot of
28:39 - wonderful uh uh creative coding types of
28:42 - things anyway um I am not going to work
28:47 - with open Frameworks in C++ in this
28:50 - particular video or session however you
28:52 - will find that a lot of computer is
28:55 - there still a cup taped next to me yes I
28:57 - love that I'm doing this whole tutorial
28:58 - with a cup tape next to me which is now
29:01 - also like this weird cup that looks like
29:03 - it's on my computer
29:06 - screen okay I don't know what I'm doing
29:07 - here this is all making me very
29:09 - uncomfortable all of a sudden uh
29:13 - okay I was talking about something
29:15 - meaningful and important now um ah yes
29:19 - so you will find as you if you do
29:21 - research about uh computer vision and
29:23 - look for examples of artists and um and
29:26 - uh uh and scientists and all sorts of
29:28 - other people working with computer
29:29 - vision that a lot of the open- source
29:31 - libraries and examples and tutorials are
29:34 - written uh with s C++ as a platform
29:36 - there's a number of reasons for this
29:38 - number one uh when you what one of the
29:41 - core things you have to do with computer
29:42 - vision is read pixels and reading pixels
29:46 - can be a slow and expensive operation
29:48 - and uh C and C++ being a kind of
29:51 - language that allows you to program kind
29:53 - of lower level native to the computer
29:54 - itself uh you can kind of squeeze the
29:57 - most speed out of that I'll say that
29:59 - processing um actually runs incredibly
30:01 - fast for doing this kind of stuff too um
30:03 - and for most many things it's going to
30:04 - work just fine um so and also just a lot
30:08 - of the libraries so there's something
30:09 - called open CV open computer vision
30:11 - which is probably uh one of the most
30:13 - well-known computer vision uh code
30:15 - libraries it is written in C++ so if you
30:18 - happen to be you know writing an
30:20 - application that you want to use C++ if
30:23 - you want to use open CV writing in C++
30:25 - could make a lot of sense there is a
30:26 - processing library for open CV there are
30:28 - lots of computer vision libraries for uh
30:31 - JavaScript and so I'm going to stay in
30:33 - those worlds and uh but I encourage all
30:36 - of you watching or participating or
30:38 - learning to explore some of the open
30:40 - framework stuff to communicate with me
30:41 - maybe we can Port some of the examples
30:43 - back and forth so um so that is uh one
30:47 - thing that I just wanted to briefly say
30:48 - about that the the the reason why I'm
30:50 - also showing you um this I just uh um
30:53 - noticed last night is that uh let me let
30:56 - me go to uh so this is um
30:58 - article written by Goan Lev I'm going to
31:01 - try to make it something that you can
31:04 - see here and what I think what's great
31:06 - about this particular article and I
31:08 - encourage you I will include a link to
31:09 - this in this video's description is uh
31:12 - you're going to get a nice uh historical
31:15 - context you know it might sort of seem
31:16 - like oh computer vision that's a new
31:18 - thing or open CV there's this great open
31:21 - CV Library not you know new being in the
31:23 - last 10 years kind of thing is um but
31:25 - artists have been working with computer
31:27 - vision ideas you know since the six late
31:30 - 60s and possibly earlier but you can see
31:33 - myON Krug myin Krueger being kind of a
31:35 - seminal example of that um uh there are
31:39 - other examples of golan's own work uh
31:42 - and um other types of things that you
31:43 - would look here so I would encourage you
31:45 - to read through this the other thing
31:47 - that I think is particularly useful
31:48 - about this article is this section
31:51 - called Elementary computer vision
31:53 - techniques and this is kind of my goal
31:56 - here in this session is to show you how
31:59 - to perform these Elementary computer
32:01 - vision techniques from scratch with the
32:04 - sort of raw guts of the code to
32:06 - understand how these algorithms work in
32:08 - practice you might find it more
32:09 - convenient to just use a library that's
32:10 - going to have it implemented already but
32:13 - I think the idea here is that number one
32:14 - it's kind of interesting you might just
32:16 - sort of enjoy this in an academic sense
32:17 - to sort of learn the other thing is if
32:19 - you to use the library it's often
32:21 - helpful to have a kind of an
32:23 - understanding of how the algorithms are
32:24 - working in order to be able to
32:26 - manipulate the parameters and uh and
32:28 - stuff of the library but also to be
32:30 - honest you might come up with some
32:32 - creative weird strange idea application
32:35 - technique that isn't possible that isn't
32:37 - built in baked into a library so I think
32:39 - it's worth kind of looking at these
32:40 - stuff so I'm going to read these to you
32:42 - uh detecting motion this is something I
32:44 - definitely want to try to do today
32:45 - detecting presence uh we could look at
32:47 - this too detection through brightness
32:49 - thresholding this is a really uh this is
32:51 - would be useful simple object tracking
32:54 - uh basic
32:55 - interactions um and then then there's
32:58 - some uh more stuff here about different
33:00 - examples and authoring tools and that
33:02 - type of thing uh there are also um
33:05 - source code examples frame differencing
33:07 - background subtraction brightness
33:08 - thresholding brightness tracking you
33:10 - know what might be useful to do this
33:12 - says these the following programs are
33:14 - known to work with processing version
33:15 - 135 let's do something for the world
33:18 - today and let's uh download each one of
33:20 - these examples and let's uh check them
33:22 - and make sure they're working with the
33:23 - latest uh processing and update them if
33:25 - they're not I wonder if if these are
33:27 - GitHub links
33:28 - or no these are just uh straight files
33:30 - so I'm going to do that uh first in this
33:32 - session to kind of as an overview things
33:34 - so I encourage you to check out to this
33:36 - I think would give you some nice
33:37 - background and context to the tutorials
33:39 - that I'm going to do and I I also just
33:42 - want to credit them because a lot of my
33:44 - knowledge or ideas come from these
33:45 - tutorials and I think this open
33:47 - Frameworks book also is great I mean
33:50 - it's and there's a lot of really
33:51 - important key stuff one one like really
33:54 - uh fundamental diagram I I have video
33:57 - tutorials that go over this already so
33:59 - this is knowledge that I'm going to
34:01 - assume in the tutorials that I do today
34:03 - but this is sort of a key thing that you
34:05 - need to be comfortable with in terms of
34:08 - how the pixels look how the pixels are
34:10 - numbered and how they're stored in
34:11 - memory but and then the other aspect of
34:14 - this uh is I don't maybe there's not a
34:17 - diagram here I have to find my own
34:19 - diagram for that but which is how do how
34:22 - to think of the pixels as XY
34:25 - pixels but look up that individual index
34:29 - in that onedimensional array okay so
34:31 - that is some background um so I'm going
34:33 - to get the first thing I'm going to do
34:34 - just to kind of get warmed up I think is
34:36 - I want to uh open up these
34:39 - examples um and you know what maybe
34:41 - we're going to make this uh well I'm
34:43 - going to I want to open up these
34:44 - examples and make and see that they work
34:47 - in uh processing
34:50 - three but if you have questions or
34:52 - comments or thoughts there's still a cup
34:55 - here it's a little bit weird uh please
34:58 - let me know uh ah yes so uh one question
35:02 - that's asked is could you try to do an
35:03 - authentication through retina scan or
35:05 - face detection I absolutely want to do
35:08 - in in a way like um so first of all in
35:12 - case uh you're not aware uh where I am
35:16 - keeping track of where I am keeping
35:20 - track of my list of topics is in this uh
35:25 - GitHub repository coding rainbow /
35:28 - rainbow topics so you can open a GitHub
35:30 - issue to suggest a topic you can also
35:32 - upvote them because I uh one thing I can
35:36 - do here sorry about this let me just
35:38 - make this a little smaller uh is it I
35:41 - have the possibility to go sort by uh
35:44 - reactions and so I can sort by thumbs up
35:47 - and you can see that computer vision is
35:49 - right here on the top and I have uh an
35:52 - outline of the things that I'm planning
35:53 - to do and you'll see that I don't know
35:56 - why I'm backwards here you'll see that I
35:57 - have on my list face detection a long
36:00 - time ago I taught a course called uh
36:01 - faceit which was just a whole course
36:03 - only about things you can do
36:04 - computationally with faces face
36:06 - detection face recognition uh you know
36:09 - tracking eye tracking that type of stuff
36:11 - so at some point I'd love to expand that
36:12 - playlist I I have this list of stuff
36:14 - that I want to do in this YouTube
36:15 - channel that is you know I could if I
36:17 - was doing this even if I was doing this
36:19 - every day for like it would probably
36:20 - take me a year to get through all this
36:22 - stuff so we'll see but this is kind of
36:24 - what I'm working with um okay uh
36:28 - um so let's get warmed up here and I'm
36:31 - just going to uh let's go to frame
36:33 - differencing so I'm going to
36:38 - uh open
36:40 - up processing I'm going to save this as
36:43 - okay I want to make a folder on the
36:45 - desktop here called I'll put it under
36:49 - coding rainbow and computer
36:53 - vision uh and then what I'm going to do
36:56 - is save this as in the uh desktop of
37:00 - coding rainbow computer vision let's get
37:02 - a shortcut to that here uh and let's
37:04 - save this one as frame
37:07 - differencing so oops that works uh oops
37:13 - I lost that code yeah so this is frame
37:16 - differencing by go
37:24 - 11 uh oops I'm sorry I'm uh frame
37:28 - differencing paste this in here let's
37:30 - run this so I'm assuming that this isn't
37:33 - going to work and you can see that it is
37:36 - not working so let's update it for
37:38 - processing 3 and let me see if I can
37:40 - find some of the things that are
37:40 - different so the video library so the
37:43 - older version of the processing video
37:45 - library used to be built on top of
37:46 - Quicktime and it's currently now built
37:48 - on top of something called
37:49 - gstreamer uh and one of the things that
37:53 - it needs is a video. start and that
37:56 - might be actually all we
38:00 - need um oh you could see and we had it
38:03 - there oh there we go so this is now
38:04 - working so turns out that all I actually
38:07 - needed to do for this particular example
38:10 - was um was uh add that video. start I
38:13 - would like to change one other thing
38:15 - however I think this is a very
38:17 - reasonable way of doing things but I
38:20 - rather
38:22 - prefer to use
38:25 - the capture event
38:29 - and I will rather than if video.
38:35 - available and I I'm a little skeptical
38:37 - of this load pixels in
38:39 - setup um but it's interesting that that
38:43 - works I'm sort of surprised this I think
38:45 - should be in draw but let's see what
38:48 - happens here we might get some weird
38:49 - flickering based on what I
38:52 - did yeah notice that do you see that
38:54 - flickering so let's see if we can
38:56 - eliminate that
38:59 - flickering uh oh look at that
39:03 - interesting oh I like the way that this
39:05 - is being
39:07 - done so okay I'm not going to get lost
39:10 - in uh I'm not going to get lost in this
39:11 - example because I I want to make some
39:13 - other changes to it but okay but let me
39:15 - let me just cover at least what's going
39:17 - on what's Happening Here and I I kind of
39:19 - screwed it up and I'm gonna I I I'm
39:21 - gonna I'm going to get to that later but
39:24 - uh what's going on here as you can see
39:25 - if I'm completely still
39:28 - the window is black and as I move you
39:31 - start to see these colors what's
39:32 - happening is a video image is a frame of
39:35 - pixels followed by a frame of pixels
39:37 - followed by a frame of pixels followed
39:38 - by a frame of pixels and um what this
39:42 - example is doing is it's taking a
39:44 - current frame of pixels and comparing it
39:46 - to the previous one and taking each
39:48 - color each red green and blue component
39:51 - and subtracting the previous so as the
39:53 - pixels move we're seeing the difference
39:54 - between those two colors um
39:58 - so I I have a feeling that uh each one
40:01 - of these and and actually I'm going to
40:02 - come back to this later um each one of
40:05 - these is probably um probably works just
40:10 - fine uh if I just add the uh video.
40:15 - start so
40:18 - um someone remind me I will get in touch
40:21 - and uh see if I can help just so this is
40:23 - actually really useful I want to use
40:25 - this look there's the cup is
40:27 - so I want to use this idea of uh
40:29 - thresholding as well during this
40:32 - discussion okay we better just get
40:33 - started I think I want to start doing
40:34 - the actual programming of stuff um
40:37 - because I've been going for almost an
40:39 - hour just kind of getting myself set up
40:42 - okay
40:45 - uh
40:48 - so I want to reference golan's
40:54 - article I want to close this I want to
40:58 - get my processing code
41:01 - up I want to start with this particular
41:04 - example which
41:06 - is
41:11 - uh uh going to
41:13 - track this particular
41:18 - cup um so that's working well and then
41:21 - the other thing that I'm going to need
41:22 - is the Whiteboard let's see if that
41:24 - exists
41:30 - how's the focus if someone in the chat
41:32 - could tell me if the focus on this is
41:34 - reasonable that you can read what's
41:46 - here I don't know why today feels like a
41:48 - very all of a sudden feels like a very
41:49 - serious uh oh and I'll turn this light
41:51 - on I like to
41:53 - have oops this is not plugged in ah
41:55 - never mind
41:57 - turn this light on so let's get it a
41:58 - little more light here maybe that's not
42:02 - necessary
42:04 - uh can you see this whiteboard okay I'm
42:07 - going to get out my um
42:12 - new uh
42:19 - markers okay I'm
42:24 - hopeful how's that can you see that can
42:26 - you read that that let me plug
42:29 - this
42:37 - um just going to fix one thing over here
42:41 - to get this light plugged
42:47 - in in the
42:50 - corner tends to work well oops oh what a
42:56 - disaster I got to use the tape
42:58 - here so I don't trip on it
43:01 - okay okay this is sort of silly what I'm
43:03 - doing but I'm doing it anyway okay uh
43:06 - okay I think we are about ready
43:12 - now and let's see focus is good eyes are
43:15 - a little small uh okay so the other
43:19 - thing I think God that's fine G to zoom
43:23 - in here uh okay so oops let me tape this
43:28 - a little bit further
43:31 - over so I can stand here and be talking
43:35 - about this tracking
43:38 - thing and I think if I stand here wait I
43:43 - can't this stand here okay uh great okay
43:46 - so I think I am about ready to go with
43:48 - this first
43:51 - tutorial
43:54 - um by the way Alvaro asks is there a way
43:56 - to find the red pixels without searching
43:58 - all the pixels not really I mean here's
44:02 - the thing you could TR you could search
44:05 - you you know you could you could come up
44:07 - with clever things like for example
44:09 - let's say we know where the red pixel is
44:12 - uh it's like this is so weird like I'm
44:14 - pointing here but I can point here I'm
44:17 - I'm lost okay let's say you know where
44:19 - the red pixel is one frame well you
44:21 - could start by searching the pixels near
44:23 - there to see if you find the red pixel
44:25 - again and that way you could say ah I
44:27 - found it let me not look anymore but
44:29 - ultimately um you need some sort of you
44:32 - know higher level logic uh to strategize
44:36 - for how you might you could do something
44:37 - like I'm just going to look at every 100
44:39 - pixels and if I find something redish
44:41 - then I'll start looking in more detail
44:42 - around that one so you could skip a lot
44:44 - of pixels that type of thing
44:48 - uh okay um so I'm G to put this camera
44:55 - aside I'm going to cycle this I'm
44:58 - apologize today for how long this took
45:01 - me to get uh up and running with
45:06 - um this
45:10 - stuff so in this first
45:12 - video what I'm going to do is move from
45:15 - looking at a single Pixel for the
45:19 - average location of a bunch of pixels
45:21 - and I'm going to also kind of introduce
45:23 - the idea of computer vision a little bit
45:27 - do you guys hear a hum of the fans I
45:29 - have going in here hopefully not it's
45:31 - not so
45:34 - bad okay
45:38 - so and let me oh let me get my code set
45:42 - up a little bit here and then here okay
45:46 - let me close things I don't
45:51 - need okay I think it would be nice let
45:54 - me find a nice image here we
45:59 - go uh
46:04 - okay very low hum in the
46:08 - background uh all right let me
46:16 - see
46:18 - better how's that with the hum
46:21 - better okay I'm glad some of people have
46:23 - just tuned in for those of you just
46:25 - tuned in I wasted not Wast wasted but I
46:27 - spent 45 minutes just trying to get to
46:30 - this point but here I am I'm at this
46:34 - point oh you know what I also have are
46:38 - these These are little like colored
46:40 - Post-it notes and I could put those up
46:42 - in addition to this cup thing but let's
46:43 - just start with the cup
46:45 - thing okay um here we
46:48 - go I'm going to start the first tutorial
46:51 - which is going to be again just
46:53 - reminding myself reintroduce the idea of
46:55 - computer vision reference the Goan L
46:58 - article talk about the um sort of
47:01 - classic techniques and then moving to
47:02 - libraries and then show my example and
47:04 - transition okay here we
47:07 - go
47:13 - uh somebody asked what's the URL of that
47:16 - page I think Oliver might be the only
47:17 - person who can paste a URL into the chat
47:19 - but it's uh if you just search go onle
47:21 - computer vision it will come up on
47:23 - Google okay
47:27 - hello welcome to A continuing series
47:30 - about computer vision now uh I
47:34 - uh okay hold
47:38 - on I this is weird because I feel like
47:40 - I'm starting fresh but I am actually
47:41 - continuing a previous video that I made
47:43 - over a year ago in terms of where it's
47:45 - going to be in the playlist on YouTube
47:46 - but let's just see how this goes
47:50 - okay hello
47:53 - well okay thank you Oliver okay
47:58 - hello welcome I'm here in this video to
48:00 - talk some more about computer vision
48:02 - computer vision being this idea of the a
48:04 - having a computer see having a computer
48:06 - find something if you notice there's
48:08 - this strange red cup this actually isn't
48:10 - part of my computer screen this is a red
48:12 - cup here taped to the wall behind me and
48:14 - in a second I'm going to have a camera
48:16 - pointed at that and I want the computer
48:18 - to be able to find that red cup and this
48:21 - is going to open up a lot of questions
48:22 - around all sorts of different techniques
48:24 - and strategies of getting things that
48:25 - are faster and more accurate and that
48:27 - sort of thing so the first thing that I
48:28 - want to do though is reference for you a
48:30 - source of inspiration for me which is uh
48:32 - an article uh by Goan L called a
48:35 - computer vision for artists and
48:37 - designers pedagogic tools and techniques
48:38 - for novice programmers so there's a link
48:40 - to this article in the description it
48:42 - gives you some historical context and it
48:44 - also walks you through some sort of uh
48:47 - key classic techniques like detecting
48:49 - motion detecting presence detection
48:51 - through brightness thresholding simple
48:53 - object tracking Etc and I'm going to
48:55 - demonstrate a lot of the techniques
48:57 - which I've learned and taken inspiration
48:58 - from this particular um essay online
49:01 - essay so okay so the other thing I'll
49:04 - mention briefly is what my my strategy
49:07 - here for this this set of tutorials
49:08 - there's going to be a whole bunch of
49:09 - them by the time I'm done there could be
49:10 - up to 10 even is that I'm going to show
49:13 - you how to program some of these classic
49:14 - algorithms from scratch and then what
49:18 - from there I'm going to transition to
49:19 - showing you how to use different
49:21 - computer vision libraries that have
49:22 - these algorithms and more sophisticated
49:24 - versions of these algorithms baked into
49:26 - them so it's a question of you know in
49:28 - practice a lot of the time you probably
49:30 - want to just use a library like open CV
49:32 - is one of the ones I'm going to show you
49:34 - but there's some value in understanding
49:35 - the algorithm for when for when you go
49:37 - to use the library for knowing how it
49:39 - works plus you might invent some sort of
49:41 - wacky creative new ideas around computer
49:43 - vision and just sort of creative
49:45 - visualization by having by playing
49:47 - around with these by writing the
49:49 - algorithms yourself okay so um a
49:51 - previous video I started with an example
49:54 - that does exactly this so and this is an
49:56 - example running and processing a Java
49:58 - based platform I will make uh p5js
50:00 - JavaScript versions of these examples
50:02 - which you can find uh hopefully Linked
50:04 - In this video's description as well but
50:07 - here you have a cup a cup taped to a
50:10 - green wall behind me and what you can
50:14 - see here is that I'm drawing a circle at
50:17 - that Cup's location now how did I do
50:19 - that the way that this particular
50:21 - algorithm works is it says look at every
50:23 - single Pixel is that pixel red is that
50:28 - pixel really red is that pixel more red
50:30 - than the other one I found that was kind
50:32 - of red it's looking for the most red
50:34 - pixel for every pixel find its color
50:37 - distance its difference from red and
50:39 - find the one that holds the record for
50:41 - being the most red and then draw a
50:43 - circle at that location but there's an
50:45 - issue while this is working somewhat
50:46 - accurately I could even take this off
50:49 - the
50:51 - wall um you can see it's kind of
50:53 - following it around but it is sort of
50:54 - jiggling I could I could also
50:55 - demonstrate another problem by having
50:57 - two cups now and like now it's jumping
50:59 - back and forth between the two so
51:01 - there's a lot of things that I want to
51:03 - resolve here in these the way that I'm
51:05 - going to improve these examples the
51:07 - first thing that I want to do is simply
51:08 - make it so that I can get a stable
51:12 - location hopefully in the center of this
51:15 - particular cup and so the first thing I
51:16 - can do with this particular example and
51:18 - also by the way notice now it's not
51:20 - finding it anymore this camera is doing
51:22 - some like Auto white balancing
51:24 - brightness stuff which is really can be
51:25 - a problem and I think there's ways of
51:26 - turning that off but in the sort of real
51:28 - world if you take this to an
51:30 - installation or a project you're making
51:31 - you're going to want to have a camera
51:33 - that you can turn off auto white balance
51:35 - Auto all those sort of other automatic
51:37 - settings but I can in this example I can
51:39 - always click and uh kind of re uh
51:42 - recalibrate the color that I'm tracking
51:44 - so the first thing that I want to do is
51:45 - instead of looking for in this
51:47 - particular video instead of looking for
51:49 - the single most
51:50 - pixel that is the most red I want to say
51:53 - is a pixel Red Enough find all those
51:56 - pixels and give me the average location
51:58 - of all of those pixels so let's dive
52:00 - into the code and make that
52:02 - change okay um as you'll notice here
52:06 - every single whoops the core algorithm
52:09 - of essentially
52:10 - all computer
52:13 - vision let me look over here for a
52:15 - second the core algorithm of all of
52:17 - these computer vision examples is this
52:19 - this nested Loop for every X pixel for
52:22 - every y pixel and I something is really
52:24 - bothering me here I don't know why these
52:25 - Extra Spaces are here uh and I want to
52:27 - sort of do Auto for I need to put some
52:29 - spaces here cuz I have a problem please
52:32 - don't be like me live your life with
52:33 - spaces in weird places um okay but um
52:37 - and you can see here what am I doing I
52:39 - am taking and let's just let's just
52:41 - review this for a second I have a new
52:43 - whiteboard marker that I've oh there it
52:45 - is um let's just review this idea really
52:48 - briefly in case uh you didn't watch the
52:50 - previous
52:51 - video
52:53 - this is a grid of pixels
52:57 - it has columns which I could number like
52:59 - this 0 1 2 3 4 it has rows which I could
53:02 - number like this and let's just make
53:04 - those different for the sake of argument
53:07 - then it has pixels the pixels are
53:08 - numbered like this 0 1 2 3 4 5 6 7 8 9
53:12 - 10 11 Etc every single computer vision
53:16 - algorithm that I demonstrate to you will
53:17 - start with for every
53:20 - X for every y so it's looking at every X
53:24 - pixel and every y pixel but then it
53:26 - needs to look up a given pixel here in
53:29 - the onedimensional array of all of the
53:30 - pixel colors and the formula for doing
53:33 - that is X Plus y time width and you can
53:37 - see why that would work because here the
53:39 - width is six the first pixel in column 3
53:43 - and X3 is three the X1 is 3 + 6 which is
53:47 - 9 the X1 is 9 + 6 which is 15 is that
53:50 - right 11 12 13 14 15 so this formula is
53:54 - going to be kind of key
53:56 - so that's right here right for every X
53:59 - for every I find that pixel location and
54:03 - then it's look and then I need to
54:05 - separate out the red green and blue
54:07 - components of the color that's coming
54:09 - from the pixels of that video and then
54:11 - there's this other color called track
54:12 - color that's the color that I'm looking
54:14 - for the red uh is that here yes the red
54:19 - uh cup um and then using the distance
54:23 - formula and to be honest I should really
54:25 - not use the distance formula because it
54:27 - has a square root I should use just
54:28 - distance squared because then I don't
54:30 - have to take the square root but I'm not
54:32 - going to worry about that optimization
54:33 - right now maybe I'll bring that in later
54:35 - I'm checking to see if it's the the if
54:37 - it beats that sort of record it's the
54:39 - most red and have that XY spot so that's
54:41 - what this code is
54:43 - doing so now in the next version of this
54:46 - example instead of looking for um
54:49 - instead of looking for the most red I
54:53 - want to look for anything that me that
54:55 - that is like red enough so the first one
54:57 - thing we need is a threshold variable so
55:00 - I'm going to add to this program I'm
55:02 - going to add a variable called threshold
55:06 - and I'm going to try this just at like
55:07 - 25 I sort of made that up 25 I want any
55:11 - given pixel that is within uh that that
55:17 - that's difference is less than 25 from
55:20 - the color that I'm looking for for to be
55:22 - considered red so let's go down to the
55:25 - algorithm and I'm no longer looking for
55:28 - a record or a closest X or a closest Y
55:33 - what I'm really looking for is like the
55:34 - average X and the average Y and I'm
55:37 - going to make those floats because yeah
55:40 - I think that's going to help out in a
55:41 - little bit just in terms of doing the
55:42 - average stuff and then I also need to
55:45 - have uh a
55:49 - count how many pixels are red okay so I
55:54 - need to I need to ultimately what I want
55:56 - to at the end is I've calculated the
55:57 - average and that I also want to I need
56:00 - to keep track of how many pixels because
56:01 - that's how I'm going to calculate the
56:02 - average by the way okay so now we're
56:04 - looking through we find the current
56:05 - color we know the track color we know
56:07 - that difference so I'm no longer
56:09 - checking and I'm going to save this by
56:10 - the way as computer vision 2 I'm no
56:13 - longer checking is that distance less
56:15 - than the record I just want to know is
56:16 - it less than that given threshold if
56:19 - it's if it is red somewhat red enough
56:22 - then what do I do average X I add its X
56:27 - location in
56:29 - right I add the Y location
56:35 - in and then I increase the count why now
56:40 - those values aren't really average yet
56:42 - yet how do you take the average of five
56:43 - numbers you add all five up and you
56:45 - divide by five so this is what
56:47 - ultimately I'm going to do here the
56:48 - code's over here I'm going to add up all
56:51 - the x's and y's keep track of how many
56:53 - x's and y's I added up and then take the
56:55 - average so now at the end I can say as
56:58 - long as count let's just say as long as
57:00 - we found at least one pixel you know I
57:02 - could say like you know what this only
57:03 - works if I find five pixels that might
57:06 - be more accurate but I'm going to say as
57:07 - long as count is greater than
57:09 - zero I'm going to say average x equals
57:13 - average x divided by
57:16 - count average y equals average y divided
57:20 - by count I'm I'm going to fill with the
57:23 - track color give it a stroke and then
57:25 - draw The Circle at average X average y
57:28 - so you can see now here instead of
57:30 - looking for the single most pixel any
57:32 - pixel within that particular threshold
57:34 - of
57:35 - red uh is is going to be uh considered
57:40 - uh red so let's run this now and see
57:41 - what we get now I don't know if I picked
57:43 - a very good value with value 25 and I
57:46 - should really make that a variable that
57:47 - I can tweak in real time but let's just
57:49 - sort of see okay now what I'm going to
57:51 - do is click here to set that color you
57:53 - can see that's pretty good it's it
57:55 - actually is still sort of like moving
57:57 - around um uh one thing that I think
57:59 - could be useful to do is I could
58:02 - actually show you which pixels um I
58:06 - found and what I'm going to do to do
58:08 - that I think is just do uh I'm gon to
58:13 - this is like not so great but I'm going
58:15 - to draw just like a point there um to
58:18 - sort of see uh a a white point to see
58:21 - what it's sort of finding and what the
58:23 - other thing I want to do is I'm going to
58:25 - just write now I'm going to map the uh
58:28 - the threshold between Mouse X like the
58:30 - lowest threshold would be zero oh the
58:32 - mouse X goes between zero and width and
58:34 - I could have a threshold between zero
58:36 - and like let's just say
58:38 - 100 so this might make things run kind
58:40 - of slow because I'm going to be using
58:41 - the point function a lot but let's sort
58:43 - of see what happens here
58:45 - okay so let me click here you can see oh
58:49 - why are those all so first of
58:51 - all did I uh didn't I say F oh Point by
58:55 - the way is is stroke and I want to say
58:57 - stroke
58:59 - weight uh one and actually just for a
59:02 - second here let's take uh let's like
59:05 - like let's do this and let's make this a
59:07 - little bit smaller so we can really see
59:09 - what's going on here okay so let's run
59:12 - this and we should see a white a white
59:15 - uh pixel for every pixel it's finding
59:17 - that is red
59:18 - like and you can see what it's found
59:21 - here now oh look at this so the
59:23 - threshold is very high so you can see
59:25 - even my hand is kind of within the
59:26 - threshold now so and you can see as I
59:29 - move the mouse that threshold you know
59:31 - my skin is kind of like reddish but as I
59:33 - move over here you can kind of see um
59:36 - see what's going on now I want it wow my
59:39 - lips I got to get out of the
59:42 - frame so you can see now it's quite
59:45 - stable there you go so I found kind of
59:47 - an appropriate threshold I should be
59:49 - have a way of like printing that value
59:51 - out so I know and you can see that it's
59:53 - oops as soon as I move in the picture
59:54 - we're going to we're going to deal with
59:55 - that in a second I want to uh zoom in
60:01 - here um I should be able to
60:03 - unfortunately my arm is too red but I
60:06 - should be able to take this off and move
60:08 - this around and you can see that I have
60:10 - quite a pretty accurate uh tracking as I
60:13 - move this and it's it's quite stable so
60:17 - you can see that even just doing the
60:18 - average location you know again I have
60:21 - nice Lighting in here I have a green
60:22 - background I have a very distinct color
60:24 - that I'm searching for but but if this
60:26 - were an interactive tabletop where you
60:28 - could control the lighting it could have
60:29 - red discs on top of a green table or
60:31 - white discs on top of a black table then
60:33 - this is something you could do so I've
60:34 - shown you one Improvement here the first
60:37 - Improvement is just using the average
60:39 - and again as soon as I introduce another
60:41 - cup you know we've got a problem look at
60:43 - it that dot is right in between them
60:45 - right because it's the average location
60:48 - which is kind of interesting but not
60:49 - what I'm looking for so in not in the
60:52 - the next video I'm going to look at
60:53 - tracking motion which I think will be
60:54 - interesting to see but the video
60:57 - following that I am going to um I'm
61:00 - going to show you how you can track each
61:02 - of these locations as blobs
61:05 - separately okay uh so that concludes
61:09 - this particular video and in the next
61:11 - video we're going to look at motion
61:12 - tracking frame
61:15 - differencing okay how was that was that
61:17 - useful for everybody did that work um I
61:21 - have no idea how long that was uh so
61:25 - that was hopefully good good I there was
61:26 - something I would just that popped into
61:28 - my mind right at the end there that I
61:30 - wanted to
61:31 - do
61:33 - uh but I can't oh I wanted to get the
61:36 - threshold value let me just I want to
61:39 - know that threshold value so I can use
61:41 - it let me
61:43 - um let me just do that right
61:45 - now let me click here kind of like see
61:49 - that seems pretty
61:51 - good um so oh I'm not
61:56 - how do
61:56 - I anybody have an estimation ah okay
61:59 - hold on what I meant to do was uh print
62:04 - line Mouse X or print line threshold uh
62:07 - let's do print line Mouse X comma
62:13 - threshold this is what I meant to
62:17 - do and
62:20 - now come back camera click I think
62:24 - that's so I'm at a threshold of like 80
62:26 - oh and I forgot I was going to add the
62:28 - distance squared thing um so a threshold
62:31 - of like 80 is pretty
62:34 - good
62:36 - uh keep
62:39 - that see I
62:44 - wonder
62:47 - um okay so uh I guess my question for
62:51 - you guys is I think I'm going to go and
62:53 - do the frame differencing thing
62:56 - to look for motion pixels because I
62:58 - think that's kind of interesting to
63:01 - see uh for um how that
63:04 - works yes uh so I was just using point
63:08 - just to be quick and dirty about it I
63:09 - wouldn't usually do that it um I would
63:12 - use either set or I would actually use
63:14 - the pixel array to draw that but it's
63:16 - kind of it runs fast enough right now so
63:19 - it's kind of good enough
63:21 - um so what I want to do
63:27 - going to do the frame differencing so
63:29 - save this uh let me rename these
63:32 - actually for a
63:33 - second um so let me rename these
63:36 - computer vision whoa oh no oh I didn't
63:39 - save this in the right place um so this
63:42 - is this one was uh average
63:46 - point average color tracking
63:49 - average Point color tracking call it
63:54 - that
63:56 - and uh computer vision one which was
64:03 - where which was maybe just on the
64:05 - desktop oh
64:06 - yeah uh this one
64:10 - is oops ah what did I just do something
64:15 - crazy happened oh I I hit present mode
64:17 - by
64:18 - accident uh yes I am planning to use
64:21 - open CV at some point was asked in the
64:23 - chat let me just save this example as
64:26 - oh yeah uh uh computer vision this one
64:31 - is uh a
64:35 - single single Pixel color
64:38 - tracking okay single Pixel color
64:42 - tracking uh and
64:46 - then uh average Point color tracking
64:52 - okay okay so the next thing that I want
64:54 - to do and let me uh cycle these
65:01 - cameras is I want to look at detecting
65:05 - motion um and so to detect
65:10 - motion this would be good to do some
65:12 - dancing in this perhap this video
65:14 - perhaps maybe I better have my music
65:16 - ready
65:27 - okay yes I think I'm ready I played
65:31 - music twice okay
65:37 - sorry okay in this particular
65:40 - video uh
65:42 - um yes show us to make a circle detector
65:46 - so we can find cups of any color yeah
65:49 - well all this is possible okay one step
65:51 - at a time now
65:53 - um my nose is still running I have was
65:55 - terrible cold a week and a half ago and
65:58 - I'm going to mute my microphone so I
66:13 - don't okay so uh the next thing I'm
66:16 - going to do is motion detection looking
66:19 - oh yeah no no no let's I can't remember
66:21 - is is there a distance squared function
66:24 - in processor
66:27 - no
66:31 - so I know there's a MAG squared for the
66:34 - vector object uh distance squared
66:38 - processing.org I don't think there
66:41 - is
66:43 - um so I you I could keep it this way um
66:48 - you know what what I would do is just
66:49 - write my own function and maybe what I
66:52 - maybe I'm going to do that um so so I'll
66:56 - do that at the beginning of the next
66:57 - video I'm going to write a distance
67:00 - squared function in which case uh it can
67:03 - eliminate the square root um which I
67:06 - think will be useful okay
67:11 - so uh let me get rid of this stuff at
67:14 - the
67:15 - top I you know I want to have comments
67:18 - in my code but I find them a little less
67:20 - useful uh while I'm doing these
67:22 - tutorials okay
67:26 - uh okay um here we go
67:35 - whoops
67:38 - um okay now I am ready so in this video
67:43 - I'm going to talk about detecting motion
67:45 - we were searching for a color a specific
67:47 - color now I'm going to search for a
67:51 - specific
67:53 - um oh sorry I'm losing my mind here I'm
67:55 - going to search I'm going to just look
67:56 - for uh pixels that
67:58 - change and then I am going
68:03 - to uh oh no no uh I'm going to I'm going
68:07 - to optimize the distance squared Thing
68:08 - by adding my own function and then look
68:09 - for pixels to change
68:18 - okay get this up and
68:24 - running what happened to The Cup oh
68:26 - right this has to be like
68:28 - this okay uh here we
68:35 - go all
68:40 - right here we
68:44 - go hold on I I think that I don't need I
68:47 - just want to
68:51 - um I think it actually will be fine to
68:54 - have this bigger
68:57 - and let me just see what this looks
69:01 - like
69:06 - for okay
69:10 - great
69:15 - uh
69:18 - okay hello welcome to another computer
69:20 - vision tutorial video now in the first
69:23 - video I showed you how to find the
69:25 - average location of all the red pixels
69:27 - in this particular image and you can see
69:29 - over there I like I'm pointing over here
69:32 - ah okay no start over I I'm like I'm so
69:35 - used to looking at a preview of
69:39 - myself okay start
69:46 - over hello welcome to another computer
69:48 - vision tutorial video in the previous
69:50 - video I looked at how to find a an
69:53 - object of a certain color and find the
69:55 - average location of all the pixels of
69:56 - that color which allows me to very
69:58 - easily track an object like this and you
69:59 - can see I can kind of move this around
70:01 - and I'm tracking it
70:04 - now what I want to do in this next video
70:06 - is look at something related but a
70:09 - little bit different to look at how do I
70:10 - find pixels that have changed so in this
70:13 - sense I'm writing a motion detector
70:15 - motion is pixels that are changing right
70:17 - because if everything is very
70:20 - still none of the pixels are changing
70:23 - but if I move those GRE green pixels are
70:25 - suddenly becoming the my skin color and
70:27 - my skin color pixels are sudden becom
70:29 - green pixels that sort of thing so I'm
70:31 - going to start with this code example up
70:32 - but before I do that let's add just a
70:33 - little sort of simple optimization to it
70:35 - we don't really have a speed issue this
70:37 - is running very very quickly but this
70:38 - can as you move to higher resolution
70:40 - become an issue I did mention in the
70:43 - previous video that this particular
70:45 - algorithm right I'm finding the distance
70:48 - seems weird distance between two colors
70:51 - where well dist you can think of this
70:53 - three-dimensional space as that we live
70:54 - in as a color space and each color you
70:57 - know the x- axis of this space being red
71:00 - and the y- axis being uh green and the
71:03 - z-axis being blue and so colors that are
71:06 - near each other in the space are more
71:07 - similar so that's how this sort of idea
71:10 - of ukian distance works but um the truth
71:13 - is this the distance function uses a
71:14 - square root so I'm going to write my own
71:17 - function here down here I'm just going
71:19 - to call it distance uh squared and I'm
71:21 - going to give it uh six arguments
71:28 - uh uh oops this should be
71:34 - X2 and what I want is to get that
71:37 - distance which is uh X2 minus
71:42 - X1 uh time X2 -
71:47 - X1 plus and then I want to do the same
71:49 - thing with Y so it's the difference
71:52 - between X the X Valu is the difference
71:54 - between the Y value values and the
71:56 - distance between and the difference
71:58 - between the Z values all of those values
72:00 - squared and added together now the
72:02 - actual distance formula would then take
72:04 - a square root of all of that but I'm
72:05 - going to not do the square root thus
72:07 - this function is called distance squared
72:09 - I'm calling distance squared and so I
72:11 - can just change this to this and then
72:13 - what am I checking I'm not checking
72:14 - against the threshold anymore but I'm
72:16 - checking against the threshold squared
72:18 - and now I don't have any square root
72:19 - function which will make the code run a
72:21 - little bit faster and this could also I
72:23 - could eliminate having to square it by
72:24 - just like using the value that's already
72:26 - squared but I'm making the point here so
72:28 - you can see this works exactly the same
72:30 - way same exact math but I've eliminated
72:31 - a square root okay now that I've done
72:33 - that let's start moving on to thinking
72:35 - about um thinking about how I can
72:40 - uh sorry how I can do this Frame
72:43 - differencing okay so first thing I need
72:46 - to deal with is the fact that I have
72:48 - this capture event right in a separate
72:50 - thread the video library is calling this
72:53 - event function capture event every time
72:55 - there's a new image available from the
72:57 - camera video. read here's a new image
72:59 - video. read here's a new image video.
73:02 - read here's a new image so what I need
73:04 - to do is right before I get that New
73:07 - Image let me copy the previous image to
73:10 - save it so I have the previous one and
73:12 - the current one so what I want to do is
73:15 - add actually a p image object I'm going
73:17 - to call it preve for
73:19 - previous and then what I'm going to do
73:21 - here is say previous previous equals
73:24 - create image and I want it to be exactly
73:27 - the same
73:28 - dimensions as the video and I want it to
73:30 - be an RGB image so this is making a
73:33 - blank image in processing and then right
73:36 - before I'm about to read that image I
73:39 - want to say
73:40 - previous do copy the video and then uh
73:45 - the copy function in processing says
73:48 - take what the what take the pixels in
73:49 - the video and copy them to this
73:51 - particular image but you can do all
73:53 - sorts of crazy stuff like you can take a
73:54 - little bit of this image and copy it
73:56 - here and stretch it out but I'm not
73:57 - going to do anything that interesting
73:59 - I'm literally just going to say
74:01 - copy the whole
74:04 - video onto the whole uh
74:08 - previous image so I'm giving it two
74:12 - rectangles and so and the other thing
74:14 - that's probably I worth doing is saying
74:17 - update
74:20 - pixels so this now I should have
74:23 - previous and the current video so if we
74:25 - run this let's just run this to make
74:27 - sure there are no
74:28 - errors my shoe is
74:31 - untied oh look I have a knee I've never
74:33 - I don't think I've ever shown my knee in
74:35 - any of these videos before and that'll
74:37 - get edited
74:38 - out um okay so you can see this is still
74:41 - working nothing's changed but behind the
74:42 - scenes there's this previous image so
74:45 - what I want to do now actually is change
74:48 - what I'm doing oh and I'm um I think I
74:51 - might have messed up by not saving as
74:52 - let me do this right now uh uh um uh
74:56 - motion
74:58 - detection so what I want to do right now
75:01 - is actually look at every pixel in the
75:05 - current image and compare it to the
75:08 - previous
75:09 - one okay so um I'm I'm going to lose
75:13 - this idea of a track color because I'm
75:16 - no
75:16 - longer uh tracking a
75:19 - color and instead what I want to do here
75:21 - is I want to get not only the current
75:24 - color but I want the previous color
75:27 - which is from the previous
75:31 - image and I'm going to call that R2 G2
75:34 - B2 and then I can check the distance
75:36 - between those I can check if they're
75:38 - less than some threshold um now this is
75:42 - a this is a difference threshold how
75:45 - different do they have to be to be
75:46 - considered motion and I'm going to leave
75:48 - all this average stuff in here because
75:50 - I'm going to use that in a moment but
75:52 - just so you see it right now what I'm
75:55 - going to actually do is say uh load
76:00 - pixels and uh in here I'm going to
76:03 - actually just draw to the pixels array
76:04 - of the display itself and I can use that
76:06 - same
76:10 - location and if it's a motion pixel I'm
76:13 - going to set its color to
76:18 - white otherwise set its color to Black
76:23 - and then at the very end I'm going to
76:24 - say up
76:25 - update pixels so oops uh we don't have
76:29 - track color anymore so now I'm going to
76:31 - run this and take a look at what
76:36 - happens come on video come alive oops
76:39 - okay we got an error previous color
76:41 - equals previous pixels location now
76:43 - where did I miss ah I never said
76:46 - previous load
76:47 - pixels so because I'm going to look at
76:50 - the pixels of that previous image just
76:53 - like I'm looking at the pixels of the
76:54 - video got to actually call load pixels
76:57 - okay let's run this again there's a lot
76:58 - of waiting
77:02 - here come on video ah I still have an
77:05 - error uh what did I miss there uh array
77:08 - out of bounds exception I don't see why
77:11 - I should have an array out of bounds
77:14 - exception I make the image exactly the
77:16 - same as the video
77:19 - size I copy it all right let's we're
77:23 - going to do some debugging here I might
77:25 - edit might maybe edit the debugging out
77:27 - I'm not sure
77:29 - yet
77:32 - uh let's look at these particular
77:43 - values oh you know what's going on it
77:46 - takes a while for the video to be
77:50 - ready that's weird
77:57 - really shouldn't matter
78:00 - though
78:03 - because ah the
78:05 - previous video why is that not oh you
78:08 - know what this is uh interestingly
78:10 - enough the video's width and height does
78:12 - not exist yet here I just realized that
78:16 - so because in setup
78:20 - um uh in in setup uh it it hasn't really
78:25 - happened until here so I right now I'm
78:27 - just going to just to confirm that
78:29 - that's the case I'm going to hardcode
78:30 - these values
78:32 - in and that that should fix it but um
78:36 - then we might think about like a
78:38 - different way of doing it yeah so that's
78:40 - going to uh fix the
78:42 - problem except I don't see anything
78:45 - happening okay let's see here uh okay
78:49 - hold on I this let's make an edit point
78:51 - at some point
78:52 - earlier and I'm going to to uh because
78:56 - let me let me just figure out a couple
78:58 - things that maybe I miss missed because
79:00 - I have a feeling that
79:03 - um my order of operations is
79:06 - off uh you
79:09 - know
79:12 - because let me just do this for a second
79:16 - and let me
79:17 - also uh do this
79:31 - come
79:32 - alive oh there we go so I can't tell
79:36 - white is does it think every pixel is
79:39 - really
79:40 - different oh this should be greater then
79:44 - right if it's greater than that make it
79:46 - white otherwise black but it thinks that
79:48 - every pixel is not different so I think
79:51 - I have I'm doing I knew this would be a
79:53 - problem
79:56 - the problem is that I'm reading the
79:59 - image and copying the previous one but
80:01 - I'm doing that separately from what's
80:04 - happening in draw I know I could fix
80:06 - this with just saying
80:10 - um let me just let me confirm that this
80:12 - is the
80:14 - issue to not use capture
80:17 - event just for a
80:19 - second so I should say video. read
80:25 - and then at the
80:28 - end I need
80:30 - another let me get it working and then I
80:33 - will uh continue that video tutorial
80:36 - knowing how it's going to
80:39 - work oh no no read down here
80:53 - sorry now it's still okay good that's
80:56 - interesting so maybe I
81:03 - need hold on let's just do
81:19 - something so what's going wrong here
81:25 - how we doing
81:27 - TimeWise okay so there's definitely
81:29 - something I can you see if there's a
81:35 - delay one frame delay I can't tell uh
81:39 - hold on let me just let me check one
81:41 - other
81:43 - thing let me only if the mouse is
81:46 - pressed let me do this copy
81:59 - ah so this isn't even
82:01 - working okay so something else is
82:04 - wrong uh let's see that's
82:08 - good oh how is this still in here take
82:12 - this
82:14 - out uh if distance is greater than
82:17 - threshold times threshold okay hold on
82:19 - if distance is greater than one
82:24 - make the pixel
82:27 - white I want I must have messed up this
82:31 - function let me use let me use the
82:34 - um the regular one for a
82:38 - second try
82:41 - that debugging I need my debugging
82:47 - music yeah so okay so why are we not
82:52 - getting uh
82:57 - I forget about this for a
82:59 - second do I have something wrong with my
83:02 - pixel
83:05 - stuff oh I never said load pixels for oh
83:08 - yes I did
83:16 - here terrible error do you guys see it
83:20 - now there it is I copy pasted it but I
83:23 - didn't put the previous color in there
83:25 - okay that's
83:29 - good R2 G2 B2 is my
83:33 - name uh yay okay oh very slow very very
83:37 - slow why because I'm using the okay
83:39 - let's fix a bunch of things let's go
83:42 - back get rid of
83:47 - this put this back in okay I'm going to
83:50 - walk back to what I had previously
83:59 - everything's different save okay now
84:02 - this is working it's just so by the way
84:04 - this is just showing the pixels that are
84:06 - different from where it started and I
84:08 - can free frame it this is actually quite
84:10 - useful to
84:12 - show um which maybe I will but let me
84:14 - get back to what I had
84:21 - before see if I can
84:24 - uh there's a certain way that I prefer
84:26 - to write these
84:28 - examples
84:29 - and I just want to
84:34 - see uh if this will work this way and I
84:40 - might I might have the issue that I
84:41 - think I'm going to
84:45 - have but this is this is what I had
84:49 - previously when I started
84:53 - debugging uh
85:02 - okay I didn't have
85:05 - this uh let's see
85:12 - here look at that so oh wow
85:18 - interesting why there was like a lot of
85:20 - noise for a moment at the beginning but
85:22 - now it's doing what I expected it to do
85:29 - um okay what was all look at this people
85:32 - doing strange things software differ
85:35 - okay but I could also change the
85:36 - threshold so oh because of the threshold
85:39 - so let me give it a kind of
85:40 - reasonable threshold of like
85:46 - uh
85:48 - okay um okay so back back back sorry
85:51 - everybody thank you for your patience
85:57 - um let me just start off with the
85:59 - threshold to 50 video load pixels I
86:03 - can't
86:04 - um I think I didn't have video load
86:07 - pixel or previous load
86:09 - pixels okay so the thing that I need to
86:12 - show this is what I had
86:14 - wrong so I'm going to put that
86:17 - back
86:19 - and I also I had this by accident which
86:22 - is fine
86:24 - and I don't need these there although
86:26 - it's nice to sort of have those for
86:28 - reference
86:31 - okay
86:33 - um oh and then this was this was the
86:35 - issue
86:43 - okay okay I'm G to come back the I'm
86:47 - going to come back yeah the noise is due
86:49 - to the auto white balancing when the
86:51 - with but also just that threshold was so
86:52 - high okay I'm going to come back uh into
86:55 - that tutorial this will have to get
86:56 - edited
86:59 - together um and fix those two bugs and
87:02 - keep going oh hey hello
87:05 - cup okay here we
87:08 - go back after a moment of
87:11 - debugging maybe I need a to give it a
87:13 - little space there in case it's harder
87:14 - to edit let me do this
87:17 - again back after a moment of debugging
87:19 - there are two key issues that I had in
87:21 - my code um that caused a lot of problems
87:24 - number one is something that's a little
87:26 - bit of a a Nuance to the um the way the
87:29 - processing video library works but the
87:31 - video stuff is happening separately
87:34 - behind the scenes um and by the time we
87:36 - get down to this line of code the video
87:39 - actually the camera hasn't like opened
87:41 - its connection yet so the video width
87:42 - and height doesn't actually exist so I
87:44 - could be smarter about how I create that
87:46 - image but I think just to get this
87:47 - example working right now I'm just going
87:49 - to hardcode in the width and the height
87:51 - I know that my camera is giving me a
87:53 - 640x 360 the image so I want my
87:55 - background image to be that as well the
87:57 - other thing that I didn't notice I had
87:59 - as I went over here is right the current
88:02 - color is from the video the previous
88:04 - color is from the previous image the
88:06 - previous frame but I want those red
88:09 - green and blue second values to be not
88:12 - from current color but from previous
88:13 - color so I've got to I've got to fix
88:18 - that and now that I have that the other
88:21 - thing that I think might be necessary
88:23 - maybe it doesn't matter oh I might have
88:24 - not had this in there so I need to also
88:26 - make sure that I'm loading the videoos
88:28 - pixels and the previous uh pixels and so
88:30 - now we should be able to see white
88:34 - pixels wherever there is no motion
88:37 - meaning the the the pixel is the thread
88:40 - the distance is less and and black
88:41 - pixels where there is motion so let's
88:43 - take a look at that
88:46 - and let me try to zoom in here so you
88:49 - can see what's going on come on image so
88:52 - you can see it's very very white and now
88:55 - you can see if my arm is very very still
88:58 - there is no motion but if I move my arm
89:00 - the pixels are black you can see around
89:02 - the edges and I can kind of walk in and
89:04 - you can even see like if I move the
89:05 - T-shirt around uh you could see this and
89:08 - this would be a good time to see what
89:10 - happens with some
89:14 - dancing motion dance
89:17 - detection okay uh I was I thought you
89:20 - weren't expecting that if you ended and
89:22 - now you might be sorry you're watching
89:23 - this video okay um so there's a couple
89:26 - more things I want to do with this
89:27 - number one let me just show you
89:28 - something interesting about this I I
89:29 - sort of actually also weirdly feel like
89:32 - reversing that so let's see the white as
89:34 - the black as the background and white
89:36 - pixels otherwise um but one thing I want
89:38 - to show you is I'm actually every time
89:40 - there's a new image from the video I'm
89:42 - copying the previous one but I could
89:44 - also by the way say hey let's take this
89:46 - code and just add it in mous
89:51 - pressed so what this is doing you'll see
89:53 - in a second
89:56 - is as this
89:58 - runs speed up here you're going to see
90:01 - uh it's all
90:03 - white I could click and it's now it's
90:06 - all black I'm going to click again
90:07 - there's a lot of Auto white balancing
90:08 - going on you can see here that now it's
90:11 - just showing me pixels that are
90:12 - different from the background because
90:14 - it's memorized the background you know
90:15 - another way that I could make this a
90:16 - little bit more clear is at the end
90:19 - here I could draw the video
90:25 - and draw the previous one I'll make them
90:27 - kind of small at the
90:31 - top this is going to make things a
90:33 - little bit more clear are you running
90:38 - Run come on computer vision
90:43 - time so you can see here now this is
90:46 - what it's comparing it's comparing you
90:48 - know this image up here to the one on
90:50 - the right and if I go like
90:52 - this I and then I move you can see
90:55 - that's been out unfortunately the camera
90:57 - Auto white balance so if I had a camera
90:59 - that didn't Auto white balance you can
91:00 - see I could come back into my spot and
91:03 - try to find it oh look I can't get
91:06 - there I oh there I am no okay anyway you
91:09 - get the idea so I could be out of the
91:11 - frame and save it now it's the
91:13 - background now that cup is shaking it
91:15 - stopped shaking save it again and I can
91:18 - move my arm in and you can see I'm
91:19 - getting a really nice silhouette so this
91:21 - is the kind of thing you can do also for
91:23 - for getting Silhouettes but you want
91:25 - good lighting it really helps to have a
91:27 - solid colored background you don't need
91:29 - a green screen but certainly that's
91:30 - helping the cause here but really you
91:32 - need a camera that's not going to do all
91:33 - this Auto white balancing stuff you can
91:34 - see how it how quickly it changes okay
91:36 - let's add one more thing to this now
91:39 - which is that remember how we were
91:40 - looking for the average location of all
91:43 - of the red pixels well I can now do
91:46 - exactly that here I can say anytime you
91:50 - find a motion pixel a pixel with a
91:52 - distance greater than some
91:55 - threshold then also what I want is to
91:59 - see that particular pixel and I'm going
92:02 - to fill it white with a black okay so
92:04 - let's make it um let's make it some like
92:06 - a pinkish color so we can really see it
92:09 - uh and maybe make it a little bit bigger
92:12 - so this is going to be interesting
92:14 - because what I'm going to do is look for
92:15 - the average area of motion and let's see
92:18 - what that gets
92:20 - us oh I didn't mean to have oh whoops uh
92:23 - let me let me do a couple things here
92:25 - let's take these out we don't need to
92:29 - look at those right now and let's put
92:30 - this back in capture event so we're
92:33 - always always getting that previous
92:37 - frame awkwardly standing while waiting
92:39 - for camera to start okay but you can see
92:42 - I'm to move out of the frame and I can
92:43 - put my hand in here you can see this is
92:45 - actually doing a pretty decent job of
92:47 - hand tracking because you know it's not
92:50 - perfect by any means but you get a sense
92:52 - because my hand is the thing that's
92:53 - moving now if I stop moving it's going
92:55 - to completely go away but I could store
92:58 - that one thing Improvement I could make
92:59 - to this that I'll uh is I could keep
93:01 - that location as a global variable and
93:03 - if there isn't any motion I could stay
93:05 - where it was last let's add that so
93:07 - let's make that let's make this average
93:09 - thing a global
93:13 - variable and over here what I'm going to
93:16 - do is
93:18 - only only alter it if there are at least
93:22 - let's say uh 20 pixels that are 20
93:24 - motion pixels otherwise it'll stay where
93:27 - it was before and let's always draw
93:29 - it so this is just a slight Improvement
93:32 - to this that I think will help uh make
93:34 - it feel like it's doing something more
93:36 - along the lines of what you might expect
93:38 - or want it to do so you can see I can
93:40 - move myself
93:42 - around and uh now 20 I guess is not that
93:45 - much I guess there's so many pixels
93:47 - there let's just say there are 200 I
93:49 - don't know what's a reasonable number
93:51 - there's probably you know there's
93:52 - millions of pixels so these are probably
93:53 - like such incredibly low numbers that
93:55 - I'm
93:57 - using um and you can see as I
94:02 - move anyway you could play with these
94:05 - values and get something that's doing
94:07 - something slightly better but you can
94:08 - see the other thing that I would do here
94:10 - and since we're here is I'm going to um
94:12 - I'm just going to add uh a lurp x a
94:15 - variable called lur I'm going to show
94:16 - you that you can use linear
94:17 - interpolation I have a whole video All
94:19 - About lurp that you that I should link
94:21 - to from here but I can say also the
94:24 - thing I can do is I can say let me
94:27 - actually take a alert point and always
94:31 - say
94:33 - uh and say lurp x equals lurp uh between
94:38 - average X and lurp X and actually let me
94:41 - I like to say lurp X first I think uh
94:44 - and then 0.1 so what I'm doing is I'm
94:47 - always just going 10% of the way towards
94:50 - the new point which is actually going to
94:52 - smooth things out quite a bit and I
94:54 - encourage you to uh look up my video
94:56 - about the lurp function which would kind
94:57 - of explain how that algorithm Works a
94:59 - bit more uh and here we go and that
95:02 - camera just went off but uh I'm going to
95:04 - turn that back on and so you can see the
95:06 - sort of final result that we have here
95:08 - and the final result that we have here
95:10 - is that I have something that's kind of
95:14 - smooth as as I move my hand around where
95:16 - does it go
95:18 - to why does it go somewhere else I don't
95:21 - know I have a bug in my program where
95:22 - it's like uh and going somewhere else I
95:24 - kind of want to fix that
95:27 - um oh because it's adding all this stuff
95:30 - up oo okay uh yeah yeah yeah so this
95:33 - needs to be average
95:36 - x
95:37 - i it's adding up all those points even
95:41 - and but only only dividing it by count
95:43 - when it gets about 300 so I get that
95:45 - like added thing when it's less than 200
95:47 - that was terrible so uh what I want
95:50 - actually my Global variable is to be uh
95:52 - the actual uh I'll call this motion X
95:56 - motion
95:57 - Y and I actually only want to update
96:00 - those motion X and motion Y and then I
96:04 - want to lurp
96:05 - that
96:07 - oops and this is now I think going to be
96:11 - a final version of this that works
96:14 - correctly so I was always adding up all
96:16 - those values for the average but then
96:18 - not calculating the average and so that
96:20 - was making it go way off the screen and
96:21 - you can see now I'm going to move off
96:23 - the screen and you can see I have sort
96:24 - of a very rudimentary like you know as
96:27 - long as I'm moving my hand around and I
96:29 - don't come in the
96:31 - scene I'm kind of getting uh it's it's
96:33 - kind of following me in a sort of like
96:35 - nicely interpolated way okay so you can
96:37 - see that opens up a lot of possibilities
96:39 - if I'm in here you know it's going to
96:41 - kind of follow me around I could turn my
96:43 - music back on and I can do the pig dot
96:47 - dance
96:54 - I am a magic pink dot
96:56 - manipulator okay that's uh hopefully you
96:58 - turned this off and you didn't have to
97:00 - experience that um so this is now a
97:02 - second video where we've looked at um
97:04 - kind of how you can use motion frame
97:05 - differencing to sort of track a point
97:07 - around the screen and in the next video
97:09 - I'm going to return back to where we
97:11 - were tracking just this cup and looking
97:13 - for the average amount of red pixels to
97:15 - actually think about this cup as a blob
97:17 - so that if I add a second blob second
97:20 - blob we can track both of them
97:21 - individually okay thanks for watching
97:25 - goodbye
97:27 - uh
97:29 - okay
97:32 - uh all right how are we doing TimeWise
97:34 - it's 107 this has been an hour and 37
97:37 - minutes I want to do the blob
97:40 - detection so I think in terms of my list
97:44 - I'm going to do the let me go back as I
97:46 - screwed up and let me get
97:50 - um um let me open
97:53 - up the I have frame different motion
97:56 - detection single average Point color
97:57 - tracking I screwed this up and I started
97:59 - messing with it right yeah so I need to
98:01 - put this back to what it was that's
98:04 - frustrating uh but I don't think yeah I
98:06 - don't think I went that far with it
98:11 - uh well I added the distance Square
98:14 - thing but that's fine I want that
98:19 - anyway okay great so I want to do blob
98:22 - tracking
98:25 - so this is going to be and I don't need
98:28 - the previous I do want the TR track
98:29 - color I do want the
98:32 - threshold uh I don't need the
98:35 - previous uh
98:40 - okay save this so I think this is going
98:43 - to be I'm just checking the chat will
98:47 - this lesson be okay so people ask will
98:48 - this lesson be available offline so uh
98:51 - for people who might be joining late
98:52 - what is this who am I where are we in
98:54 - the world Carmen San
98:56 - Diego no I won't sing um you don't want
98:59 - me to sing uh so I'm this is a live
99:02 - session where I'm kind of stumbling my
99:03 - way through these tutorials this live
99:05 - entire live session will be archived on
99:07 - my YouTube channel um the uh then uh
99:11 - edited version so far I've done two
99:12 - tutorials a average uh so the edited
99:16 - versions of these tutorials will then
99:17 - become Standalone videos also on my
99:19 - YouTube channel and then finally oh
99:22 - that's it oh and I I do in the chat it
99:24 - is true that I do have a Google drive
99:25 - folder with all of the the Raw videos
99:28 - that I give people who subscribe to the
99:30 - patreon access to honestly if somebody
99:32 - was at a school somewhere in the world
99:34 - and they wanted to use the videos but
99:35 - they can't get a good connection to
99:37 - YouTube I would be happy to share them
99:39 - um so you know if if you have a
99:41 - compelling reason why you need the video
99:43 - files I'm open to that okay
99:46 - um
99:48 - okay uh Oliver mentions I need to
99:50 - separate the average XY local locally
99:52 - and globally uh I guess I figured that
99:54 - out um okay so um let me see here I
99:58 - think uh I want to get back to this now
100:00 - the blob thing is much more complicated
100:03 - and what I'm going to need to do is
100:06 - actually there's there's a whole
100:09 - algorithm that I need to
100:12 - cover and
100:14 - basically the way I'm going to do this I
100:16 - want to talk through this for a second
100:18 - and then I'm going to uh do it again
100:23 - um what I'm going to do is let's say
100:27 - this
100:27 - is the
100:29 - scene and there are a bunch of
100:32 - blobs I want to have a blob object I
100:36 - think I I think I'm actually ready to
100:37 - just record this um and what I'm doing
100:39 - is I'm looking for any pixels of a given
100:41 - color when I find the pixel of a given
100:43 - color I check to see if it's within a
100:45 - reasonable distance of some other pixel
100:47 - that I found if it is those things join
100:50 - together as a
100:51 - blob if it is not then it makes its own
100:54 - new blob and at the end I have a whole
100:56 - bunch of blobs and I look through that
100:58 - list and maybe I throw away blobs that
101:00 - are too small oh this is going to be
101:02 - easy I'm just gonna do it I'm ready for
101:05 - this oh this is going to be exciting I
101:07 - can't believe I'm about to do a blob
101:08 - detection from scratch tutorial this is
101:11 - great I'm very happy about
101:13 - this I'm gonna be very glad if this
101:15 - works okay
101:23 - oops I'm in the wrong frame
101:26 - okay drink a little bit of this nice
101:28 - delicious
101:32 - tea I believe I cycled the
101:36 - cameras I'm going to have this point
101:38 - over here to
101:40 - start move this up here okay now I need
101:42 - to save this as
101:45 - blob
101:48 - tracking and I'm not going to do oh look
101:51 - my lips are a blob
101:54 - um
101:57 - okay uh I think I am just
102:01 - ready uh someone asked what is update
102:04 - pixels yeah so it might work without
102:06 - update pixels processing is kind of
102:08 - funny in this way my point of view on
102:10 - load pixels and update pixels is you
102:12 - know first I just put them everywhere
102:14 - like if I'm about to look at the pixels
102:15 - I call load pixels if I'm about to
102:17 - change the pixels like with the copy
102:19 - function I call update pixels after and
102:20 - then later I might try commenting out
102:22 - those lines and see if it's still Works
102:23 - anyway but technically speaking
102:25 - processing doesn't give you access to
102:27 - the memory of those pixel colors unless
102:30 - you first call load pixels and it
102:31 - doesn't actually change them in what it
102:33 - draws until you call update pixels and
102:36 - this is for the display window and for
102:37 - individual images as well
102:42 - okay jumping
102:45 - jacks I'm losing my
102:47 - energy break
102:49 - dancing okay up uh yep pull the muscle
102:52 - okay we be
102:56 - fine okay here we go the
103:00 - last last not I think this is the last
103:03 - computer vision topic I will tackle
103:05 - today and I'm very excited about it then
103:07 - we will do
103:09 - fireworks and then I will say goodbye
103:11 - for unfortunately for a little bit more
103:13 - than a week don't don't be too
103:16 - sad trust me there's more to life than
103:19 - my weird live YouTube stream thing okay
103:22 - anyway okay here we
103:25 - go I I'm having a paranoid fear that I
103:28 - didn't turn this camera off and on so
103:31 - I'm just going to do
103:33 - that very briefly
103:40 - okay hello welcome to yet another
103:43 - computer vision tutorial video in this
103:45 - video oh my God I'm so excited I'm going
103:48 - to show you how to program from scratch
103:49 - not from scratch but how to program the
103:51 - raw algorithm algorithm for blob
103:53 - detection yourself and what do I mean by
103:55 - blob detection so in two videos back I
103:57 - made an example that finds it's over
104:00 - here what no it's over here where is it
104:02 - okay over here that finds this cup that
104:04 - I have taped to my green screen behind
104:05 - me by looking for the average location
104:08 - of all of the red pixels it finds and
104:10 - this works perfectly beautifully nicely
104:12 - however there's a problem if I add a
104:15 - second cup look at the average location
104:17 - is in between those two things and I
104:19 - want to be able to track them
104:21 - individually as individ ual blobs so how
104:24 - do we do that so I want to talk about
104:26 - how this algorithm works so let's what
104:29 - what's going on here there is a an image
104:32 - that the camera is seeing it is seeing
104:35 - two red cups taped to a wall I don't
104:37 - know what what my life has become that
104:40 - I'm taping plastic cups to walls that
104:42 - are painted green but that's just what
104:44 - it
104:45 - is okay so it's looking at every single
104:48 - Pixel and it's asking a question is this
104:51 - red and you know you can insert
104:53 - something else there is this a bright
104:55 - pixel is it a dark pixel is it a blue
104:57 - pixel you know you could be using a a
105:00 - connect and depth tracking is it a close
105:01 - pixel is it a far pixel there's lots of
105:03 - things you could substitute for this
105:05 - question but for my demonstration of the
105:06 - algorithm it's going to work nicely if I
105:08 - ask is it red and so the answer is going
105:10 - to be no is it red no is it red no is it
105:13 - red no no no it's a very negative
105:14 - program just no no no no no no no no no
105:18 - but eventually at some
105:20 - point it gets to over here and is it red
105:23 - and it's like yes yes it's red so if
105:27 - it's red then we have to ask the
105:29 - question is it did I find a red pixel
105:32 - before or is this a new have I have I
105:34 - found the first red pixel and as soon as
105:36 - it's find the first red pixel it has to
105:38 - make a blob so the blob is going to be a
105:43 - Java class an object which is a blob
105:46 - it's going to say ah I found the first
105:47 - red pixel so I'm making a blob object
105:50 - and I'm going to call this blob a
105:53 - and blob a has an x a y and a width and
105:56 - a height it's like a little rectangle
106:00 - now what happens next oh it goes to the
106:02 - next pixel is it red yes it's red yes
106:05 - it's red is it near one of the existing
106:10 - blobs it is so let's just put it in Blob
106:12 - a and maybe blob a gets a little wider
106:14 - then it looks for the next pixel oh it's
106:15 - near blob a put it in Blob a make a
106:17 - little wider it keeps going then it says
106:18 - no no no no no finds another one oh it's
106:19 - part of blah B no no no no no no
106:21 - eventually it gets on here and it finds
106:22 - another yes well is it near blob a and
106:24 - it suddenly realizes no look at that
106:27 - that distance is greater than some
106:29 - threshold it's time for me to make
106:31 - another blob so it's looking for all the
106:34 - red pixels and finding the clusters of
106:36 - red pixels near each other within some
106:39 - that are far enough by some threshold
106:41 - amount so that's the algorithm we need
106:43 - to program and the blob I'm going to
106:44 - think of really just as a rectangle it's
106:47 - going to have an X and A Y and it's
106:49 - going to have a width and a height okay
106:51 - so let's see if we can make that
106:54 - happen here we are over here oh oh was I
106:59 - not was I on the Whiteboard I think I
107:01 - was on the Whiteboard that whole time
107:02 - somebody will tell me if I
107:04 - wasn't uh
107:06 - okay that was weird you know I was okay
107:09 - anyway I'm back hopefully I was on the
107:12 - Whiteboard um okay so now what do I need
107:14 - to do okay the first thing I'm going to
107:16 - do is I'm going to make a blob a new tab
107:19 - in this processing
107:20 - sketch okay good and I'm going to give
107:23 - it an x a y and a width and a height and
107:27 - then I need a
107:29 - Constructor and uh the Constructor when
107:32 - I make the first blob it gets an X and A
107:36 - Y this is tricky so what's the x is
107:39 - going to be that X the Y is going to be
107:41 - that Y and the width is going to be a
107:43 - width of one and the height is going to
107:45 - be a height of one okay great so that's
107:47 - what happens when I first make the blob
107:50 - oops now let's think about this so now
107:52 - let's let's go back to this
107:55 - algorithm and I don't need what do I
107:57 - need H I need to have some sort of
108:01 - variable
108:02 - list of
108:07 - blobs so I'm going to make an array list
108:10 - of blob objects now if array lists are
108:11 - new to you it's like a flexibly sized
108:14 - array so I can start with none and I can
108:16 - add more and that sort of thing and this
108:17 - is something that I encourage you to
108:20 - look into and one thing that I'm going
108:22 - to have have to do uh I lost my tra of
108:25 - thought okay one thing I'm GNA have to
108:26 - do is say uh blobs do CLE so this is
108:31 - something that's going to be really
108:32 - really key and I'm going to bring this
108:34 - up again later but what I'm look this
108:36 - algorithm is going to do is just show me
108:38 - a snapshot of blobs at this moment in
108:40 - time and then a snapshot of blobs at the
108:43 - next moment in time but it's not going
108:44 - to know which blob is which over time
108:46 - but I'm going to get to that in a future
108:47 - video talk more about that in a little
108:49 - bit so I don't need this average
108:50 - location anymore I don't need this count
108:52 - this was all for my previous example but
108:54 - what I'm doing here is what
108:57 - happens as soon as I find a pixel that
109:00 - meets this red threshold well what I
109:03 - need to do what I'm going to do is just
109:05 - say blob B is a new blob at that
109:08 - particular X and Y and then I'm going to
109:11 - say blobs do add blob B so this is the
109:14 - idea anytime I find a pixel I make a new
109:17 - blob only I don't always make a new blob
109:20 - right I only make a new blob well when
109:22 - would I make a a new blob if
109:25 - blobs is
109:28 - empty then I make a new blob right so if
109:31 - there are no blobs and I found a pixel
109:33 - it has to be now
109:37 - otherwise and I'm going to do this a
109:38 - slightly different way but um another
109:41 - way that I could do that is for every
109:45 - blob let's add a Boolean variable saying
109:48 - found is false so I want to Loop through
109:51 - every blob and say is one these blobs my
109:54 - home so if there are no blobs by the
109:58 - way if not
110:03 - found then I add a new blob to that
110:06 - array list so this is the algorithms
110:09 - over here I start by assuming well I
110:12 - haven't found a blob that's a home for
110:14 - this pixel but now I'm going to look
110:15 - through all the blobs and see if one of
110:17 - those is a home if after that Loop which
110:19 - I haven't written yet I still haven't
110:21 - found one then this this pixel is a new
110:23 - blob okay so the very first thing I need
110:26 - to do is say what is the distance or
110:30 - let's let write it this way if B
110:34 - contains or is near let's write a
110:36 - function called is near I think I I
110:38 - think actually in an example that I saw
110:40 - it was called that um if blob is near
110:42 - this particular XY point so that's one
110:45 - thing I can do to check what's the
110:47 - distance between this XY point and this
110:49 - particular blob so let's go to the blob
110:51 - now and say uh is let's write a function
110:54 - that's a Boolean function it's got to
110:56 - return true or false is near and it gets
110:59 - an X I'm going to call this like uh I
111:02 - just use xcore I I should come up with a
111:04 - different somebody suggests a better
111:06 - variable name but um if this particular
111:08 - XY point is near I need to either return
111:11 - true or false so the first thing I need
111:12 - to do is what's the distance between XY
111:16 - and
111:17 - XY so um I'm going to call this like PX
111:21 - for like pixel X
111:23 - and let's do that up here too I don't
111:24 - like this underscore thing it looks so
111:26 - obnoxious no I don't have any no not
111:28 - that I have any problems with
111:29 - underscores they're underscores are
111:30 - lovely nice
111:32 - characters but I'm going to call it PX
111:34 - for like pixel X but actually here's the
111:37 - thing I actually want to test I think I
111:41 - want to test if it's near the center of
111:42 - the blob not the corner of The Blob so
111:45 - one thing I'm going to do is say CX C CX
111:48 - for Center X is x + W / 2
111:53 - and Cy is X Plus y + h / 2 that's
111:58 - finding the center right X plus the
112:00 - width no no that's not the center X plus
112:03 - the width divided two don't be
112:05 - ridiculous X
112:08 - Plus width divided two thank you very
112:12 - much y plus height divided two that's
112:14 - the center right if you have a rectangle
112:16 - X plus the width of the rectangle
112:18 - divided two that's the center location
112:20 - so I want to know if that pixel
112:26 - is within some distance now uh um again
112:31 - I could let's use distance squared to
112:33 - like not oh don't I have distance
112:34 - squared in this example right here there
112:37 - it is oh but it's only that's a 3D
112:41 - distance let's let's make a 2d version
112:43 - of it I have this from a previous
112:46 - example where I was using
112:49 - uh color by the way did you know in Java
112:52 - you can just have the a function with
112:53 - the same name as long as it's two
112:55 - different arguments two different sets
112:57 - of arguments it'll know which one to
112:58 - call that's called method overloading
113:00 - okay so I'm going to go back here and
113:03 - I'm going to say if the distance is less
113:05 - than some
113:07 - particular uh threshold I don't know
113:11 - what's a good distance let's say 50
113:12 - pixels away if it's within let's say
113:15 - it's within 25 pixels then um then
113:18 - return true and this is definitely a
113:20 - variable that I'm going to want to make
113:22 - a something that I can change otherwise
113:25 - uh return
113:27 - false
113:30 - okay so now what I'm going to do is and
113:34 - I don't oh all this stuff is irrelevant
113:36 - this was from my previous example so if
113:39 - blob is near
113:41 - XY then uh first what I want to do is
113:44 - blob add XY I want to add that point to
113:46 - The Blob and then I want to say found
113:49 - equals true and then I'm going to say
113:51 - break now
113:53 - there's a little bit of a problem here
113:55 - where I probably should check all of the
113:57 - blobs and find like the clo the one that
113:59 - it's closest to but I'm not going to
114:01 - worry about that right now I'm just
114:02 - going to do this Loop to find I'm just
114:04 - going to find the first one so now I
114:07 - need to add that XY so
114:10 - here I need to write a function add that
114:13 - pixel X and pixel y so what does that do
114:16 - well the thing that I need to change is
114:19 - I need to um I need to check oh this is
114:24 - tricky here let's think about this for a
114:27 - second I'm going to use a diagram
114:29 - there's probably a smarter way I could
114:30 - do this maybe somebody in the chat or
114:33 - will give me a suggestion but let's say
114:35 - at some point I have a blob like
114:38 - this um and it has an X and Y and it has
114:41 - a width and a height so the first thing
114:44 - I need to figure out is is that pixel
114:47 - inside this rectangle is all right if
114:49 - it's inside that rectangle I don't do
114:51 - anything if it's over here I suddenly
114:54 - want my rectangle to be like that if
114:56 - it's over here I suddenly want my
114:58 - rectangle to be like that so you know
114:59 - what I think I want to change about my
115:01 - blob I'm going to change
115:04 - something I'm going to have the blob
115:06 - instead of having x y
115:08 - w I'm going to have Min
115:11 - X Min
115:13 - y Max
115:16 - x max y I'm just going to keep track of
115:19 - the top left and to and bottom right
115:20 - corner of the blob
115:23 - and actually that allows me to have this
115:24 - argument be XY and I'm just going to say
115:28 - when the blob
115:29 - starts minimum
115:31 - X and the minimum Y and the maximum X
115:35 - and the maximum
115:38 - Y and I could have called those
115:41 - bottom bottom bottom XY top XY but
115:45 - anyway all those are that now when I
115:47 - check if it's
115:49 - near now I am getting the average so I'm
115:52 - going to say uh minimum x + maximum x /
116:00 - 2 and minimum y plus maximum y / two the
116:05 - distance is still the same thing between
116:07 - this x y and then the add function is
116:10 - going to be easier because what I'm
116:12 - going to do is I'm going to say minimum
116:15 - x equals the minimum of X and minimum X
116:22 - this is a processing function minimum
116:24 - that says if x is less than minimum X
116:28 - whichever one of these is less use that
116:30 - one so I should be able to just do
116:36 - this and the same thing
116:40 - here like this so I just want to get I
116:44 - could have written if statements like if
116:45 - x is less than minimum X then the
116:47 - minimum X is now X that sort of thing
116:49 - but this should do that trick this
116:52 - should add the blob okay and then by the
116:56 - way what do I've got here I've got
116:59 - everything I need to draw a rectangle so
117:01 - I'm going to write a function called
117:03 - show and I'm going to say uh stroke zero
117:07 - fill to 55 and I'm going to say uh just
117:11 - stroke weight two so I make sure it's
117:14 - kind of thick and then I'm going to say
117:15 - wrect mode Corners by the way in
117:18 - processing the rectangle mode Corners
117:20 - allows you to specify the top left and
117:22 - the bottom right of a rectangle and
117:24 - those are the values I have so I'm going
117:25 - to say rect Minx Min y Max x max y so I
117:31 - added a whole The Blob does a couple
117:33 - things it checks to see if a pixel is
117:35 - near it and could say true or false it
117:37 - also can add that pixel to expand or
117:39 - contract its rectangle and then it can
117:41 - also draw that rectangle and now in this
117:44 - particular
117:45 - algorithm this is it I think I've got
117:48 - everything here if it's near am I if
117:51 - it's near add that point I found it
117:54 - otherwise add a new blob and then at the
117:57 - end here after I go through all the
118:00 - pixels I should be able to go through
118:03 - all of the
118:04 - blobs and say blob.
118:07 - show okay I'm
118:10 - sure I missed
118:12 - something but let's try running
118:15 - it the variable PX does not exist uh oh
118:20 - right because this is now X and Y
118:25 - uh oh Max x equals x I have an error in
118:27 - the chat someone's telling me there's an
118:28 - error in the Constructor Max thank you
118:31 - okay so this was a big error that would
118:33 - have caused me a major
118:37 - problem okay here we go let's see what
118:40 - I've got here now oh what is that
118:43 - craziness oh look at this it's finding
118:46 - zillions of little tiny blobs oh look at
118:48 - all the little tiny blobs little tiny
118:50 - blobs look find some more little tiny
118:52 - blobs so uh I think my distance
118:55 - threshold needs to be a little bit
118:58 - bigger 25 pixels so that's is something
119:01 - I need to uh make um make a variable so
119:05 - I want to make this a variable let's
119:06 - just do this right now um oh right
119:09 - because this all the way is distance
119:10 - squared so it wasn't so crazy so I'm
119:13 - going to make a uh so this is the color
119:15 - threshold and I want to make a a
119:18 - distance threshold and I'm going to say
119:20 - that's equal to 25 just having these be
119:21 - the
119:23 - same and first of all this needs to be
119:25 - distance threshold time distance
119:26 - threshold and I'm going to add a uh just
119:30 - right now I'm going to add key pressed
119:32 - function and I'm going to say if uh the
119:35 - key equals a then distance threshold
119:40 - Plus+ else if key equals z and this is a
119:44 - really quick way for me to just adjust
119:45 - that uh minus minus and then uh print
119:49 - line distance threshold just so I can uh
119:52 - modify it on the
119:54 - Fly here we go come on everybody here
119:58 - come the blobs here come the blobs blobs
120:01 - the musical here oh yeah much better so
120:04 - we can see here now Tada now this is
120:08 - still getting multiple blobs and I can
120:11 - uh tweak things uh for example I should
120:13 - probably click on the color look my lips
120:15 - are a blob my fingers are a blob but you
120:18 - can see um one thing I one thing I can
120:20 - do here let's zoom into this is I can
120:24 - consider Blobs of a certain size to be
120:28 - useless so I can uh one thing I can do
120:31 - is say
120:34 - here
120:35 - um right I can say if
120:39 - blob do uh uh size oh if b. size is
120:45 - greater than 100 for example I can only
120:47 - show right now blobs that have a certain
120:50 - size and there is no size function I
120:52 - could write one and I could just say uh
120:55 - you know return Max x minus Minx
121:00 - * Max y minus Min y like the the width
121:04 - and the height of the blob so to speak I
121:06 - multiply them together and you know I
121:08 - could say uh I could you know they have
121:11 - to be greater than like you know 500
121:14 - this would get rid of small
121:17 - blobs right oh and that threshold yeah
121:20 - yeah I meant to I meant to by the way so
121:24 - you know this is also what I can change
121:26 - here let me add this second one and you
121:29 - can see how nicely this is working now
121:31 - my arm is BL let me go over here and you
121:34 - can see you can see what I'm getting now
121:36 - I could still uh that threshold you can
121:39 - see that there's two blobs up top there
121:41 - let me make that threshold if I keep
121:43 - making that threshold there we go now
121:45 - it's just one blob and again I could do
121:48 - things like interpolate or whatever and
121:50 - let's do this
121:52 - and here we are and oh oh boy we have to
121:54 - do
121:58 - something ah no Bobs Bobs I'm being
122:01 - eaten by The Bobs that's not what I
122:03 - meant to
122:04 - do come on give me some
122:09 - red I am blob
122:16 - man okay
122:19 - anyway whatever they get the point so
122:22 - this I think um stop music excuse so I
122:24 - think I've shown you the basic idea of a
122:26 - blob algorithm there's I think a bunch
122:28 - of things I could improve here one I
122:29 - could make a nicer interface to kind of
122:31 - tweak these thresholds of color the
122:33 - distance threshold you know it might be
122:35 - nice to sort of draw the rectangle blob
122:37 - rectangle with some Alpha so I could see
122:38 - what's behind it um you know one thing
122:41 - that's really kind of uh important about
122:43 - this to mention I'll mention this again
122:45 - is
122:48 - um come back to me
122:50 - code uh is that um whoops it's funny it
122:54 - worked much better without me clicking
122:56 - on it anyway um is that there's no sense
122:58 - of an uh uh I should so by the way this
123:02 - this distance that threshold should
123:04 - really be like 75 to start with and
123:07 - let's make this like uh let's make this
123:10 - less I don't know what I'm doing here um
123:12 - so one of the things that's really
123:13 - important is let's say you wanted to
123:16 - have an image follow this cup and an
123:20 - image follow this cup look it's working
123:22 - beautifully right now an image follow
123:23 - this cup and an image follow this cup
123:25 - like what if I wanted to put a cat over
123:26 - here and a dog over here well it's not
123:30 - I'm not always going to you know I might
123:32 - like this blob is going to be found
123:33 - first because of the way I'm iterating
123:35 - through the pixels so this blob is
123:36 - always going to be blob zero but now
123:39 - this blob is going to be blob zero this
123:40 - cup that is it's blob zero but it's this
123:43 - other cup so these blobs do not there's
123:45 - no way these blobs don't have ID numbers
123:47 - there's no way to track them Over time
123:49 - however that is something we could add
123:51 - so I'm to show you how to do that boy
123:52 - this is working so nicely I'm so
123:55 - pleased all right oh
123:58 - I look I I could put Mickey Mouse ears
124:01 - on myself I need anyway I'm going to go
124:02 - do this on my own time you don't need to
124:04 - like watch me do the weird stuff with
124:05 - The Blob but um I'm going to do that in
124:08 - a future video let me say one last thing
124:10 - so ultimately you know if you want to do
124:13 - this and I'm going to show this in in
124:14 - another video there are ample sets of
124:16 - processing libraries there's blob
124:18 - detection there's open CV there's a lot
124:20 - of processing libraries that will do
124:21 - this there's also something that I
124:22 - haven't implemented in this algorithm
124:24 - which is actually to find the Contours
124:25 - of this cup I'm just finding kind of the
124:27 - minimum maximum area of The Blob so
124:30 - those types of things I would recommend
124:32 - uh thinking about Contours but and and
124:34 - so I'm going to show you at some point
124:36 - how to do this stuff without writing all
124:37 - the code for yourself but just use a
124:39 - library that does the same thing but it
124:40 - is interesting to see one thing that I
124:42 - think is good to see about this is a lot
124:43 - of the libraries are built in just to
124:45 - look for bright or dark blobs and so you
124:48 - would have to apply some type of
124:49 - brightness threshold to the image first
124:51 - before passing it to the blob detection
124:52 - Library which would be fine but custom
124:54 - baking it yourself you can just like
124:56 - look for a specific color like red okay
124:59 - thank you for watching this blob
125:00 - detection video I'm hoping it was useful
125:02 - and I'll see you in the future computer
125:04 - vision videos
125:08 - goodbye uh
125:11 - okay
125:13 - um oh yes uh Oliver makes a good point
125:17 - which is that I could merge there's H
125:19 - various optimizations I could do here
125:21 - like merging the blobs if they overlap
125:24 - um but yes
125:26 - um so I think that's good for computer
125:30 - vision for today let's go look at my
125:31 - GitHub issue and let's see what I
125:36 - made uh
125:38 - rainbow
125:41 - topics uh
125:43 - issues uh sort by thumbs up computer
125:47 - vision okay so what did I do let me edit
125:50 - this I did did
125:53 - um average Point let me zoom in here so
125:56 - you guys can see I did average Point
126:00 - tracking I did motion detection frame
126:07 - differencing and then I did
126:11 - blob detection
126:15 - algorithm so we can see here what's on
126:18 - my list I don't know if any of you want
126:20 - to um so this is on my list next would
126:24 - be looking at a library like open CV for
126:26 - doing this looking at some of the stuff
126:28 - in JavaScript to see how it works and
126:29 - performs I want to show you how to like
126:31 - keep track of blobs over time uh in
126:34 - addition to libraries we should look at
126:36 - open t other tools op
126:39 - tsps and uh Community core Vision CCV I
126:43 - should look at those uh face detection
126:46 - face detection with persistence saving
126:47 - faces to files is kind of an interesting
126:49 - thing more stuff in the browser Kyle
126:51 - McDonald has a great resource for this
126:53 - so I really only got scratched the
126:55 - surface but you know being here for two
126:57 - hours I think to have done three solid
126:59 - tutorials on computer vision I feel
127:01 - pretty good about
127:02 - that um okay uh so anybody see anything
127:07 - that they want to type in the chat that
127:08 - I'm missing from this list but actually
127:10 - better yet just go and uh write a
127:12 - comment here add your comment here and
127:14 - I'll add it to the list okay so I'm just
127:18 - about finished for today I'm feeling
127:20 - like I have to I want to do the firor
127:21 - Works thing I have a question for you
127:22 - guys in the chat so let me open up my
127:25 - fireworks
127:28 - example uh fireworks fireworks fireworks
127:31 - here it is so this is the
127:35 - example and so um and I'm going to also
127:39 - open
127:41 - up maybe
127:44 - uh
127:46 - examples uh topics
127:52 - under simulate I think multiple simple
127:55 - particle
128:00 - system oh I messed something up I got to
128:03 - fix this oh um I gotta I gotta file a
128:08 - quickly um I got to file a GitHub issue
128:10 - on
128:13 - processing
128:15 - uh or actually somebody watching file
128:17 - this go to processing. docs and um
128:22 - I was replacing a lot of get functions
128:25 - get with vectors changed to copy so this
128:28 - used to be get but I changed it by
128:30 - accident to copy but it's calling get
128:32 - from the array list and it shouldn't be
128:34 - so I need to go through the examples and
128:36 - revert some of them back somebody file
128:38 - that in processing. docs shiftman me and
128:40 - your dri or or better yet just do a pull
128:42 - request to the uh example but um I will
128:45 - I will fix that later but okay so I have
128:47 - a question for you guys which
128:49 - is I have two
128:52 - two ways I could do this one is I could
128:56 - from scratch from nothing I think I
128:57 - could do this with in a half an hour or
128:59 - less make this fireworks example from
129:03 - scratch the other option is I could take
129:06 - an existing particle system example and
129:09 - adapt like this one and adapt it to be
129:11 - the fireworks so I wouldn't be doing all
129:13 - the code from scratch um I don't know
129:17 - which would be more useful you know
129:19 - certainly I would do it the adapt way
129:22 - but I wonder if there will be people who
129:23 - might actually just sort of end up at
129:25 - this fireworks video from nowhere and
129:27 - actually having the whole thing might be
129:28 - useful let me know in the chat what you
129:38 - think boy you guys in the chat are
129:40 - really quite far behind me to make your
129:44 - own particle system so to do it from
129:47 - scratch scratch two votes for scratch
129:52 - scratch three votes for Scratch all
129:53 - right scratch Yeah scratch Yeah
129:57 - scratch okay scratch would be nice
130:00 - scratch oh everybody okay we're gonna do
130:02 - it from scratch that's good to see
130:05 - okay
130:07 - um so don't save
130:12 - that uh the other question is should I
130:15 - do this in JavaScript I think I'm going
130:16 - to do this in
130:18 - processing because um then I can extend
130:21 - it into 3D more
130:23 - easily and um then I'll make a
130:27 - JavaScript Port of
130:28 - it yes little scratch I do it from
130:31 - scratch hopefully I I'm gonna make a
130:34 - JavaScript Port of it keep me honest
130:36 - about this like bother me about this
130:38 - because I think it'll be nice to have
130:40 - people make their you know JavaScript
130:42 - p5js fireworks things in the browser for
130:44 - Fourth of July oh everybody now there's
130:47 - voting for P5 JS maybe I should do oh I
130:50 - have an idea
130:52 - I'll do it from scratch in p5js
130:56 - because yeah I'm not going to do it in
130:58 - scratch so that's a great idea I'll do
131:00 - it from scratch in p5js since I already
131:02 - have the processing example
131:04 - done and then what I'll do is I'll come
131:06 - back to the processing example and
131:08 - extend it to
131:10 - 3D Oliver always was the best
131:12 - suggestions okay how about I do it in
131:14 - scratch and I'll do it in C which I've
131:17 - never used before in my life or python
131:19 - which I just don't know at all okay uh
131:22 - um so um let me just coding rainbow fire
131:28 - um coding challenge fireworks okay so I
131:31 - need to get set up for a
131:33 - second did you guys hear that something
131:35 - fell behind me um super shape test that
131:39 - was using recent
131:41 - P5 where is that coding rainbow super
131:44 - shape test here it
131:47 - is and I'm going to call this
131:52 - firewor uh coding challenge
131:55 - fireworks uh
131:58 - P5 and I want to open that with the atom
132:03 - editor um I'm going to erase everything
132:08 - here and I'm going to do create
132:14 - canvas uh function
132:19 - setup and and I'm just going to give
132:22 - myself a little bit of something to
132:24 - start
132:27 - with uh and
132:29 - then one thing I'm going to do just
132:33 - um I think it's okay for me
132:38 - to start with the files I know I'm going
132:41 - to need a particle. JS file and I'm
132:45 - going to need a
132:47 - um firework DJs file
132:51 - okay uh and then in
132:54 - index I want to make
132:56 - sure I am
132:58 - referencing particle and
133:01 - Firework
133:05 - okay and then I
133:10 - need uh I need uh CD desktop CD coding
133:17 - rainbow ah CD coding rainbow
133:24 - um run a local
133:26 - [Music]
133:27 - server and
133:30 - minimize camera goes
133:33 - off uh Local Host turn those back
133:42 - on okay and where am I
133:47 - fireworks hey one thing I don't want to
133:49 - forget
133:52 - is to reference a source of inspiration
133:55 - for me for this project is Seb Le
133:59 - fireworks I forget what it's
134:01 - called pixel
134:05 - pyros so uh if you're not familiar with
134:08 - this project um oh you can hear the
134:12 - sound I'm going
134:17 - to I was going
134:21 - so this is a project by um uh Seb Lee
134:26 - delile did I pronounce his name right
134:27 - Seb friend of mine wonderful guy a host
134:29 - of the creative coding podcast subscribe
134:32 - and support the creative coding podcast
134:33 - on patreon um and uh Seb created a
134:38 - project which is I believe he used open
134:40 - Frameworks and lasers and computer
134:41 - vision all sorts of stuff we've been
134:43 - talking about to create this uh kind of
134:45 - I mean this crazy sort of like fireworks
134:48 - asteroids kind of crazy game that
134:51 - happens outside take a look at the
134:52 - project I'm going to do you can see uh
134:55 - you know
134:57 - the the kind of little bits of
134:59 - similarity here I'm going to do a you
135:01 - know quite a simplified version of this
135:03 - you can see there's a lot more thought
135:05 - in terms of the graphics the design the
135:06 - trails all that sort of stuff but um
135:10 - anyway so I'd encourage you to check out
135:11 - that it's a wonderful project uh and I'm
135:13 - going to I just wanted to mention that
135:15 - as a kind of like where I took sort of
135:17 - like the visual idea for making this
135:19 - from okay okay uh now let's see
135:24 - here so I can close
135:28 - that uh and I think I am just about
135:33 - ready
135:35 - now Index close so sketch
135:39 - particle and Firework
135:43 - okay all right are you
135:47 - ready and a one and a too hold on I need
135:52 - to give myself
135:54 - some energy here okay it is time for
135:59 - cutting
136:00 - r cing
136:24 - okay I'll stop doing that
136:26 - now okay now we are ready uh to
136:32 - go oh I'm feel a little bit dizzy and
136:34 - laded from
136:37 - that okay it's very hot in
136:40 - here let me turn this fan on for a
136:45 - second and now it's
136:49 - time for for
136:52 - firks okay all right I'm stoping using
136:55 - myself with my own entertainment value
136:58 - and oh I got I dizzy again everything's
137:01 - gonna be fine um okay I'm gonna I'm
137:03 - gonna start this
137:16 - now
137:18 - uh okay let's see
137:22 - um let me run
137:24 - this actually one thing I want to do is
137:27 - let me just do
137:30 - this let's try
137:39 - this oh hold on I'm GNA fix my
137:42 - processing example to be yeah it's silly
137:46 - to have the background 51 it should be
137:48 - zero and
137:51 - uh let's give
138:00 - them this should do the
138:03 - trick there we
138:06 - go okay I think I'm ready
138:10 - now
138:12 - fireworks
138:13 - okay oh you guys everyone's asking
138:15 - personal questions about me in the chat
138:17 - um I guess I can Mar I am married I do
138:20 - have two children they are uh four and
138:23 - seven years old actually 8 years old now
138:24 - and almost five okay
138:27 - uh here we go I ready I'm going to do
138:30 - fireworks coding
138:35 - challenge did I I recently cycled the
138:38 - camera I'm just going to do it again I
138:40 - don't think I'm going to need the I
138:41 - don't think I'm going to use the
138:42 - Whiteboard at all for this
138:46 - so okay
138:49 - uh okay here we go
138:51 - oh oh oh let me just fix one more thing
138:53 - sorry everybody I'm G to get to this now
138:56 - just fix this camera ah come on
139:04 - camera there there we go okay uh last
139:08 - thing I'm going to do today coding
139:10 - challenge fireworks happy 4th of July
139:12 - it's been two hours and 20 minutes uh
139:15 - this should take about a half an hour or
139:17 - less and then I will be saying goodbye
139:18 - for a while but um that sort of thing
139:20 - okay okay uh here we
139:25 - go hello happy 4th of July if that is a
139:29 - holiday that you celebrate for H never
139:31 - mind forget about that it's too like
139:33 - I'll just do
139:34 - fireworks I don't care about the fourth
139:36 - I mean I it's a nice holiday fine
139:37 - whatever but we are a global community
139:41 - and I don't need to be so focused on
139:43 - holidays specific this is just a
139:44 - fireworks video
139:51 - hello and welcome to another coding
139:54 - challenge I want to put a sound effect
139:57 - there I don't have my sound effects up
139:59 - forget it okay here we go I'm really
140:01 - doing it this
140:04 - time hello and welcome to another coding
140:07 - challenge in this coding challenge I'm
140:09 - going to program a fireworks
140:14 - simulation I will try not to make
140:16 - ridiculous sound effects during it um
140:18 - let me just start I like doing that but
140:20 - I don't
140:21 - okay let's start one more
140:23 - time you know what just hold
140:27 - on uh I think they should happen a
140:30 - little more
140:32 - often okay last
140:39 - time hello and welcome to another coding
140:42 - challenge in this coding challenge I'm
140:44 - going to program a fireworks
140:48 - simulation um and I'm going to program
140:50 - it for from scratch in JavaScript in the
140:52 - browser the version that's running
140:54 - actually behind me is a version that
140:55 - I've made in processing a javab base
140:57 - platform the code for the one behind me
140:58 - and the one that I will make in this
141:00 - video will both be available in links in
141:02 - the description and at the end of this
141:04 - video I I'm hoping to return back to
141:06 - this processing one and also uh turn it
141:08 - into 3D fireworks this might have a
141:10 - three-dimensional like quality to it but
141:12 - it's really just two Dimensions um okay
141:15 - so here we go so let me minimize this
141:18 - code which was the processing version
141:19 - get rid of that and I have a blank
141:21 - JavaScript can HTML 5 canvas and I have
141:23 - some JavaScript code so the first thing
141:25 - that I need to do is I need to have uh I
141:28 - want to have this idea of a particle I
141:30 - need to have a particle so I'm going to
141:33 - just write a particle
141:36 - uh a Constructor
141:38 - function uh where oh you know what I'm
141:40 - going to do is I'm going to the particle
141:42 - should have a position which will be a
141:44 - vector the particle I need to use
141:46 - physics here it's going to have a
141:47 - velocity which will right now be just
141:49 - zero and the particle is also going to
141:51 - have an acceleration so I'm going to
141:53 - kind of custom bake a physics engine
141:55 - this is the same sort of model that I
141:56 - use in all my nature of code tutorials
141:58 - and videos about physics but I'm and I'm
141:59 - just going to kind of bake this from
142:01 - scratch really quickly and then I'm
142:03 - going to add a function called
142:05 - update and that function does what it
142:08 - takes the velocity and adds it to the
142:12 - position and it takes the uh
142:17 - acceleration and adds it to the velocity
142:19 - now where does does it get acceleration
142:22 - well that I need to have a function I'm
142:24 - going to call it apply force and in that
142:26 - function I'm going to get some sort of
142:28 - force and I'm going to add that Force to
142:31 - the acceleration this is the idea of
142:32 - force accumulation Force equals mass
142:35 - time acceleration or acceleration equals
142:38 - acceleration equals force equals
142:41 - masstimes acceleration or acceleration
142:42 - equals force divided by mass but I'm
142:44 - going to eliminate mass for Simplicity
142:46 - so acceleration equals force are all the
142:48 - forces of a moment added together so
142:50 - once I do that I also need to make sure
142:52 - that um after I update the particle each
142:55 - frame that I multiply its acceleration
142:57 - by zero to sort of clear it out because
142:59 - the acceleration at each moment in time
143:01 - is going to start with
143:02 - zero okay so now I'm kind of got this
143:06 - both last thing I need to do with this
143:07 - particle is I need to have a function
143:09 - I'm going to call it show which draws
143:12 - just for Simplicity it just draws the
143:13 - particle at um where where where mix it
143:18 - as a point this position dox
143:21 - and this.position doy and what I'm going
143:24 - to do just for um one thing I learned
143:26 - recently about p5js which by the time
143:28 - you watch this video in the future may
143:30 - not really be the case anymore but if I
143:32 - set the stroke and the stroke weight up
143:35 - just in setup and don't set it over and
143:37 - over again it sometimes can run a lot
143:39 - faster um so just to test that things
143:41 - are working I'm going to U make a
143:43 - variable called a firework and I'm going
143:45 - to say that firework is a new
143:49 - particle which lives in the center of
143:51 - the window and I'm going to say here in
143:54 - background firework in draw I'm going to
143:56 - say firework do update and Firework doow
143:59 - so I want to now go back to my sketch
144:01 - and see ah I have some errors so
144:03 - particle. JS let me make this a little
144:04 - bit
144:05 - bigger that's really big but uh
144:08 - particle. JS line uh number six has an
144:12 - error uh let's see particle D this do
144:15 - apply Force equals ah function is
144:18 - spelled with a C
144:20 - refresh there we go so you can see
144:22 - there's the particle in the center
144:23 - things are working so far uh the next
144:26 - thing I want to do is let me give let me
144:28 - have this particle
144:30 - start uh at a random width and all the
144:35 - way at the bottom of the window and let
144:37 - me give that particle a velocity
144:39 - pointing up so let me say its velocity
144:41 - is -4 pointing up me run this there we
144:45 - go we can see it's going up each time I
144:46 - refresh it it starts in a new random
144:49 - location and starts going up so we're
144:50 - getting somewhere the next thing that I
144:53 - want to do is see if I can add some
144:56 - gravity so I'm going to make a Glo
144:57 - gravity a global variable and it's going
145:00 - to be a
145:02 - vector that does what it points down so
145:05 - negative uh no pointing down is positive
145:08 - so zero comma I'm going to say 0 2 and
145:10 - then I'm also going to say firework do
145:12 - apply Force gravity so I'm now adding
145:15 - gravity to that particle so let's run
145:19 - this uh acceleration is not defined
145:22 - let's go back to the particle uh where
145:25 - where H this do acceleration always
145:28 - forget the this Let me
145:31 - refresh uh didn't make it very high but
145:33 - that's sort of reasonable so let's make
145:35 - the particles velocity a lot bigger like
145:38 - -10 okay so that's good so we can see so
145:41 - this is the start of our firework
145:43 - simulation something shooting up from
145:45 - the bottom and then at some point it's
145:47 - going to explode and make a lot of
145:48 - particles but before I could do that
145:50 - what I want to have is just have a lot
145:51 - of things shooting up from the bottom
145:53 - continuously so let's get that going so
145:55 - instead of having uh one single firework
145:59 - what I really want is to have an array
146:01 - of them and actually what I want is for
146:04 - the firework to be its own object so I'm
146:08 - going to create a
146:10 - firework uh uh function sorry and a
146:15 - Constructor function and the first thing
146:17 - I'm going to do is it's going to have a
146:20 - local variable which is a so I'm I'm
146:22 - basically going to do what I did here
146:24 - right I want it to have in this firework
146:26 - object I want it to have a particle it's
146:29 - going to have that particle the firework
146:30 - itself can have an update function and
146:34 - whoops what happens in the update
146:36 - function it does all these these these
146:39 - things it adds gravity and updates that
146:42 - Firework and then I'm going to also have
146:43 - a show function for the firework
146:47 - object and I have a I can see I have a
146:49 - syntax
146:51 - error
146:53 - uh which I'm going to fix in a second so
146:56 - the idea here is the particle right a
146:59 - particle is an individual particle this
147:02 - firework object right now is one
147:04 - particle but the firework object is also
147:06 - going to in a moment not just be the
147:08 - particle moving up but suddenly all the
147:10 - particles that explode from it so I need
147:12 - this object to keep track of that
147:13 - individual particle and then also an
147:15 - array of particles but this should at
147:17 - least get me now if I say
147:20 - uh um firework do push new
147:26 - Firework and then I should be able to
147:29 - say firework dot uh I should be able to
147:32 - say oh fireworks should be an array then
147:35 - I should be able say look at all of the
147:40 - fireworks. a length i++ and you know I
147:43 - could use a for each Loop but I'm
147:45 - choosing not to just for clarity um
147:47 - update fireworks
147:50 - uh indexi doow okay here we go so
147:55 - now okay firework is not defined in line
147:58 - six uh yep I need the as always I always
148:01 - forget the this dot this dot this dot
148:04 - I'm going to do the this dot this dot
148:05 - this dot this dot the this Dot Song
148:07 - never forget the this dot somebody
148:10 - compos that song for me uh and run this
148:13 - again there you can see okay so it
148:14 - happened and now what I'm going to do
148:17 - is I have this line of code that puts a
148:20 - new firework object in the array and I
148:22 - could put that line of code in draw and
148:25 - if I put it in draw over and over and
148:27 - over again it's just making these
148:28 - fireworks making these fireworks I don't
148:29 - want to make them that often so I am
148:32 - going to say if random one is less than
148:35 - 0.1 so every frame there is a 10% chance
148:40 - of making a new firework let's try
148:43 - that that's a little bit better so it's
148:45 - making them kind of randomly every so
148:47 - often so that's a good start and now
148:49 - what I also want to do is you know I
148:51 - think this should be a random value so
148:53 - let's say random between -15 and5 so
148:57 - that way they don't all go and so that
149:00 - the range might be off there let me make
149:02 - the range a little bit
149:05 - calmer let's do this so anyway you get
149:08 - the idea that they're not they're also
149:10 - not all going to just go up to exactly
149:11 - the same height so now we're pretty good
149:13 - we've got our system of the fireworks
149:16 - going up over time but I need to figure
149:20 - out what's the point where I want them
149:21 - to go poof and explode into a bunch of
149:24 - particles okay so how do I do
149:27 - that here in the update function one
149:31 - thing I should edit Point timeout I have
149:35 - to blow my
149:36 - nose maybe
149:41 - this okay I'm looking at the chat
149:45 - okay
149:47 - okay back um
149:51 - I what I need to do is I want to check
149:53 - something I could do is I say how do I
149:54 - know when the firework gets to the top
149:56 - Point well it's velocity is negative
149:58 - it's velocity is negative it's velocity
150:00 - is negative in the y direction now it's
150:02 - zero now it's positive now it's positive
150:04 - I wanted to explode the moment it
150:06 - reaches that top point so I can say if
150:09 - this
150:10 - firework dot velocity is pointing down
150:15 - is greater than zero is greater than or
150:17 - equal to zero this is the moment where I
150:20 - want it to explode so what I'm actually
150:22 - going to do is I'm going to say this.
150:23 - firework equals null so I'm just going
150:26 - to like set the firework to null so that
150:30 - um uh it's like that will make it
150:33 - disappear essentially so in the and I'm
150:36 - going to need some like I'm going to
150:38 - have to say if this. firework so I only
150:41 - want to update apply force and update it
150:44 - if it exists and I also only want to
150:47 - show it if it exists so let's just see
150:50 - you know there's lots of other ways I
150:52 - could do this but this is just going to
150:53 - be a sort of way of me tracking I could
150:56 - have actually a Boolean variable like
150:58 - exploded or something I might I might
150:59 - change it to that later but let's see
151:00 - how this
151:01 - works so oop H that's
151:06 - weird
151:08 - uh if this oh well that's if the Y
151:12 - component of the Velocity right if the Y
151:15 - component of the Velocity let's add that
151:18 - o cannot read velocity of no where did
151:20 - that happen ah okay well this is a issue
151:23 - so this little bit can go inside here
151:27 - like also as long as it
151:30 - exists there you can see now it's
151:32 - disappearing the moment it kind of gets
151:34 - to the top so that's good and what I
151:36 - want is when it gets to the top I want
151:38 - it to just go into a whole bunch of
151:40 - particles so I actually kind of feel
151:42 - like I'm going to just change this just
151:44 - for to be I'm going to say this do
151:47 - exploded is false as long as not this
151:50 - dot exploded fly Force if it's then say
151:53 - this dot exploded equals false
151:57 - because as long as
152:00 - this uh as long as not this dot exploded
152:03 - I I think I would prefer to use a
152:06 - Boolean
152:08 - variable uh it equals true so this
152:10 - should be the same exact result but I'm
152:12 - not doing the sort of null thing okay so
152:14 - I used a Boolean variable to track when
152:16 - it's exploded now what do I do when it
152:18 - explodes well what I need to do is I
152:21 - need to suddenly right here I'm going to
152:24 - just say this.
152:26 - explode so I want to put this in a
152:28 - separate
152:29 - function and I'm going to write a
152:31 - function now called this.
152:34 - explode and what do I need to do in this
152:36 - function I need to make a whole lot of
152:37 - particles let's make a 100 of them so
152:39 - for VAR I equals z i is less than 100
152:44 - i++ what I need to do is say VAR P
152:46 - equals a new particle and where should
152:48 - that particle start so it's about to
152:51 - explode where should that particle start
152:53 - it should start where this fireworks
152:55 - position dox and this
152:59 - fireworks. position
153:02 - doy so I need to make a whole lot of
153:04 - these particles and now I need an array
153:06 - the firework object in addition to
153:08 - keeping track of this sort of like seed
153:09 - firework should keep track of this do
153:13 - particles an
153:14 - array so it has an empty array and I am
153:18 - now going to say
153:21 - particles.
153:23 - push P okay particles push P now what I
153:29 - also then need to do
153:32 - is and I'm going to just do this here
153:35 - right
153:37 - here what I need to do is display all
153:39 - those particles index i. show so oh and
153:45 - this has to be this do
153:47 - particles and this has to be this do
153:49 - particles in xi. show so what I've added
153:51 - here is the moment the particle reaches
153:54 - the top it makes a 100 new particles and
153:57 - then draws all those so let's see what
153:59 - this looks
154:00 - like oops cannot read show of undefined
154:03 - firework JS index 30 oh this should be
154:06 - this. particles. length because I don't
154:11 - want it to show non-existent particles
154:13 - that array is only going to have 100 as
154:14 - soon as as soon as it is exploded let's
154:16 - run this
154:18 - again look at that that oh it made 100
154:21 - particles none of which move or do
154:24 - anything pretty weird right well first
154:26 - of all why aren't they moving well I
154:27 - forgot
154:29 - something I forgot that I also should
154:33 - call uh here in
154:36 - update I should also call for all of
154:39 - those particles apply
154:41 - force uh
154:43 - gravity and for all those particles I
154:46 - have to update them so I need those
154:48 - particles to experience physics as well
154:51 - well look what's happening it's making
154:54 - those fireworks but they're all why what
154:57 - happens when you make a new particle it
154:58 - shoots straight up so I need to make
155:00 - those particles in a different way so
155:03 - let's look at how I'm doing that if I go
155:05 - back to the particle object the particle
155:07 - is always made with a
155:09 - velocity that randomly points up between
155:12 - -12 and8 so I could use like inheritance
155:15 - and have like a different two different
155:17 - kinds of particles that inherit but I
155:19 - think what I'm going to do is just I'll
155:21 - just add a third argument here and I'll
155:24 - call it uh
155:27 - Exploder and I'll
155:29 - say if Exploder I don't like Exploder
155:33 - that sounds violent I'm already using
155:35 - explode I guess uh I'm going to call it
155:38 - um
155:40 - firework uh if
155:44 - firework make the velocity that way
155:47 - otherwise
155:49 - make the velocity and I'm I I'm just
155:52 - going to do something different just so
155:54 - what I'm going to do is I'm going to say
155:55 - I want to say P5 Vector random 2D so I'm
156:00 - going to have any random Direction okay
156:02 - so if that's Boolean variable is true
156:06 - it's going to make it as like one of
156:07 - those original firework things so let me
156:10 - go back to this firework object and this
156:13 - particle it needs the last argument of
156:16 - true these particles um it needs the
156:19 - last argument is false but in JavaScript
156:21 - if I don't I can also just pass nothing
156:23 - in and that variable will have the value
156:25 - of undefined which will evaluate to
156:27 - false so this should now if I refresh
156:30 - this we can see that I'm getting
156:32 - something closer so now why are they why
156:35 - are they exploding in this perfect
156:37 - circle well the reason why they're
156:39 - exploding in A Perfect Circle oops I
156:41 - have some
156:43 - old notes from a computer vision
156:45 - tutorial is I'm giving them a random
156:48 - velocity
156:52 - which is a unit Vector all of length one
156:55 - so they're all going to explode out in a
156:57 - perfect circle so one thing I might do
156:59 - is just have those the lengths of those
157:02 - vectors be a slightly random length but
157:04 - and I'm not going to do this in this
157:05 - tutorial but you should make heart
157:08 - fireworks for example so what if you
157:10 - could figure
157:11 - out U if I draw a heart like this from
157:15 - the
157:16 - center vectors pointing out to the edges
157:18 - of a heart so you could actually or you
157:20 - could use you got a fireworks that
157:22 - display letters or particular kinds of
157:23 - shapes so the way that you pick those
157:25 - initial velocities of that explosion can
157:28 - really make hearts or rainbows or
157:29 - unicorns or whatever kind of shapes you
157:31 - can imagine that you might like to make
157:33 - so I encourage you to do that as a kind
157:34 - of Riff Off of this you can also notice
157:36 - that right now it's running really
157:37 - really slow so that's another thing
157:38 - we're going to have to fix but let me
157:40 - just go back to here and I am going to
157:45 - um where was I under particle now the
157:47 - other thing I want to do um
157:50 - is I actually want to in the particle
157:53 - object I think I want to keep track of
157:58 - this this whether it's the original
158:00 - firework or the particle because I want
158:02 - to like do other things that are
158:03 - different so I'm going to say
158:07 - this um because I also want oh you know
158:11 - what I'm but I'm gonna leave that for
158:12 - later okay so let me fix this and say um
158:15 - random 2D and then this. velocity
158:18 - multiply by something
158:20 - like I'll I know what I'm going to do in
158:22 - a second multiply by between um you know
158:27 - uh uh two uh one and six so now it's a
158:32 - magnitude is going to be scaled by some
158:34 - random amount let me run this
158:36 - again oh okay that didn't
158:40 - work what did I not do right let me look
158:42 - at this this do velocity multiply oh
158:45 - random a random value between one and
158:52 - six okay so you can see now they're
158:54 - really exploding kind of like wildly
158:56 - there's also two many of them so I can't
158:58 - really see what's going on that well so
159:00 - I'm going to go back to the sketch and
159:01 - make them like quite a bit less
159:05 - often okay so there's one thing they
159:07 - don't look so much like fireworks one
159:09 - thing that happens with a firework is it
159:11 - kind of like bursts out and it like
159:12 - really like slows down almost as if
159:14 - there's like friction or air resist like
159:16 - an immense amount of air resistance in
159:18 - the air so I'm going to add
159:20 - that uh and a quick way I can do that is
159:23 - in the update fun but I only want those
159:25 - to be for the Noni I'm calling the thing
159:27 - at the bottom the firework for the nonf
159:29 - firework
159:30 - particles so I want to say if it's not
159:34 - the bottom firor particle then I also
159:37 - want to say this St velocity multiply by
159:39 - like 0.95 so I really want its velocity
159:42 - to slow down so let's see how that
159:46 - looks uh and let me make that a bit more
159:48 - extreme
159:50 - just so we see that that's really
159:53 - working yeah so you can see ah so you
159:56 - can see that that is working now the
159:57 - other thing you notice is those
159:58 - fireworks they're not fading out at all
160:00 - so I really think this is where I'm
160:02 - going to have to lose one of my
160:03 - optimizations but what I need to do is I
160:05 - want to have a lifespan variable and I'm
160:08 - going to make that lifespan 255 and if
160:11 - it
160:14 - is okay I should be back now um I
160:18 - checked and what was actually recording
160:20 - to dis uh hold on let me just what was
160:24 - actually recording to dis worked but it
160:26 - stopped a bit before the I don't know
160:29 - actually where it cut out so um so I am
160:33 - I but I I just watched the video back
160:34 - and it actually cut
160:36 - out right here where I added this bit of
160:39 - code so let me refresh this
160:44 - okay so um so this will have to get
160:47 - spliced together once again thank you m
160:49 - who has been helping me doing an amazing
160:51 - job editing these things together when
160:52 - this kind of stuff happens we're just
160:54 - about done though which is good
160:55 - hopefully I'm not going to lose any more
160:58 - Outlets or whatever and I'm about to go
161:01 - right back into it okay uh let me get
161:05 - the chat here going and here we go
161:12 - okay Power
161:15 - okay lost power but I'm back now and
161:18 - what I just was is I was saying if this
161:21 - is not one of the seed fireworks
161:24 - particles if it's not one of the seed
161:27 - firework particles let's take its
161:29 - velocity and multiply it by something
161:32 - like 85 so that it slows down um slows
161:37 - down every uh frame and you can see that
161:39 - kind of gives it this sort of like burst
161:41 - out that sort of slows down and stops
161:42 - now there sort of a funny thing
161:44 - happening where they're still there and
161:46 - when you see a firework it explodes and
161:47 - kind of like Fades out and you know I'm
161:49 - not going to get too crazy with visual
161:51 - dressing here you can make stuff Sparkle
161:53 - and have trails and glow and all sorts
161:54 - of stuff like that but at least least
161:57 - add something where the fireworks Fade
161:59 - Out so what I want to add is a variable
162:01 - oh I already did because that's before
162:04 - the power ran out I'm going to add a
162:06 - variable called this. lifespan equals
162:09 - 255 and what I'm going to do is in the
162:12 - update function I'm going to say as long
162:14 - also if it's not one of the seed ones I
162:17 - want that lifespan to uh go down by one
162:22 - and this maybe I want it to go down
162:23 - let's actually have it go down by four
162:24 - each frame and what I want is for the
162:28 - particle to uh have a stroke which is
162:32 - its lifespan so uh so I want to give it
162:35 - some Alpha so I'm going to say if it's
162:38 - not the uh the sort of seed firework do
162:42 - that to the stroke
162:45 - otherwise uh just have a regular stroke
162:48 - and then also let's let's make them
162:50 - stroke weight two and we'll make the uh
162:53 - those a little bit thicker so let's see
162:55 - what this looks like
162:57 - now was it running really slow no oh
163:00 - lifespan is not defined because I need
163:02 - to say this do lifespan let's try that
163:06 - again so you can see here now this is a
163:09 - little bit better now you know I should
163:13 - fiddle with these values like maybe this
163:16 - should be uh you know 0.9 and its
163:20 - initial values should actually be
163:22 - between like two and 10 and whoops uh
163:25 - and over here we could see what that
163:27 - looks like now and whether this is
163:29 - better or worse I don't know but I'm
163:31 - going to let you sort of like consider
163:33 - that on your own but I now have the
163:35 - basic idea you can see very quickly now
163:38 - though it's starting to run rather slow
163:40 - so we're losing a lot of frame rate here
163:42 - why are we losing a lot of frame rate
163:44 - well it doesn't matter whether the
163:45 - particles have faded out or left the
163:47 - screen I'm never I'm never getting rid
163:50 - of them so there's a bunch of things I
163:52 - need to do number one I need to say I
163:55 - need to figure out a way of getting rid
163:57 - of particles so here in this um in the
164:00 - fireworks system what I need to do is
164:03 - I'm looping through all the particles
164:04 - first of all I actually want to Loop
164:06 - through the list backwards because I'm
164:07 - going to do something where I'm start
164:08 - plucking them out of the list and if the
164:10 - list is shrinking it's Contracting from
164:12 - the end it works better if I'm going
164:14 - through it backwards and taking things
164:16 - off the the the back end so what I'm
164:18 - going to do is I'm going to change this
164:19 - Loop to say go from particles. length
164:22 - minus1 and greater than or equal to 0
164:27 - and IUS minus let's make sure that still
164:30 - works so nothing's changed it's still
164:32 - working and what I need to do ah go away
164:36 - finder what I need to do now is say okay
164:39 - well if this
164:42 - particles index I is done then this
164:47 - particles do uh splice I so splice is a
164:52 - JavaScript function that deletes
164:53 - something from an array and you can
164:55 - actually splice at I a bunch of things
164:57 - after it but I just want that one
164:58 - particle so if the particle is done
165:00 - splice well how do I know if it's done I
165:02 - need to write a function that says if
165:03 - it's done so in particle. JS I've got
165:06 - another function I need to add I'll just
165:08 - add it over here this DOD and what I'll
165:10 - do is I'll say
165:12 - if if this.
165:16 - lifespan uh is less than zero then
165:19 - return true so that lifespan which is
165:22 - counting down else return false so let's
165:26 - run this it's hard to oops we have an
165:29 - error particle. JS line 30 uh line 30
165:32 - here this not done equals
165:36 - function so now I have no way of knowing
165:39 - if it's actually removing the particles
165:41 - it does seem to be like performing a bit
165:42 - better like not slowing down so those
165:44 - particles are being deleted but they're
165:46 - actually still a firework object that
165:49 - system object in that list so what I
165:51 - want to do now is add over in the
165:53 - firework object also a function that
165:56 - says this
165:59 - Doone and how do I know if that thing is
166:02 - done well it is done if that particle is
166:05 - exploded and this. Firework dot sorry
166:09 - this.
166:10 - particles. length equals
166:15 - zero right the particle system itself is
166:18 - done as long as it's it's in a state of
166:19 - having exploded and there are no and all
166:21 - those particles have faded out so if
166:23 - that's the case I should be able to say
166:25 - return true otherwise return uh false so
166:30 - now I can go back to the sketch here and
166:34 - what can I do here in this sketch I also
166:36 - want to Loop through this thing
166:38 - backwards fireworks. length minus one I
166:41 - is greater than or equal to zero iusus
166:44 - and I want to say if fireworks. length
166:49 - oh sorry
166:50 - fireworks.on ah fireworks indexi
166:54 - Doone then fireworks in uh splice I
166:59 - comma 1 so now and what I'm going to do
167:01 - is I'm also going to add just to make
167:04 - sure this is all working I'm going to
167:06 - add
167:07 - console.log
167:08 - fireworks. length so now we should be
167:11 - able to
167:14 - see you know as a you can see that that
167:17 - length is going down so it's never going
167:19 - to be too many things on the screen so
167:22 - performance-wise it's going to work fine
167:24 - so this now is and you know JavaScript
167:27 - canvas drawing can be a little bit slow
167:29 - but you can see I've got kind of you
167:30 - know with 100 particles per system it's
167:33 - kind of running reasonably well now we
167:34 - can make this look a little bit nicer uh
167:37 - for example I could um add oops I could
167:40 - add a little bit of alpha to the
167:42 - background meaning have the background
167:44 - um transition in to and we'll have each
167:47 - firework draw a little bit of Trail
167:49 - let's see how this looks right that has
167:51 - a little bit more firework like quality
167:53 - to it that's nice then of course I could
167:57 - say well let me give it a color
168:00 - mode of
168:02 - HSB and I could say for each firework
168:06 - let's for each firework system is going
168:08 - to get its own
168:10 - color uh so uh it should get a hue value
168:14 - is a random
168:16 - Hue and then ooh every time I make a
168:21 - particle I'm going to also want so the
168:24 - system gets a hue and then I'm going to
168:26 - want to send that
168:28 - Hue into um let's do that before the
168:32 - last argument here into the particle
168:35 - object so they can use it as
168:37 - well uh so I anytime I make a new
168:40 - particle even in the explode function I
168:42 - also make new particles so I'm going to
168:44 - say this. h and
168:47 - false and then now in the particle
168:50 - object I can add a variable to get that
168:55 - Hue
168:56 - value and then I can
168:59 - say uh stroke is the Hue 255
169:05 - 255 H 255
169:08 - 255 uh with the with no Alpha and now
169:13 - when you run this we can see we have now
169:16 - we have rainbow oh how come I lost the
169:18 - trail
169:19 - that's weird what did I do to lose the
169:21 - trail oh you know why I lost the trail
169:23 - is because I changed it to huse the
169:25 - color mode to
169:27 - HSB and the background is now doing
169:30 - something weird so this should fix that
169:33 - I think whoops
169:37 - ah look at that I wonder if this is a
169:39 - bug in p5js that we've just found well
169:42 - I'm going to do something here which
169:43 - might make things run a quite a bit slow
169:46 - but I'm going to just change the color
169:47 - mode to RGB here here and in each
169:49 - particle right before the particle is
169:51 - drawn I'm going to change the color mode
169:53 - to HSB let's see if that
169:57 - works there we go so uh that should be I
170:01 - think that seems like a bug to me like
170:02 - there should be a way to have an alpha
170:04 - with HSB color mode but now we've got it
170:06 - working um and you can see there we go
170:08 - so there could be a lot of finesse here
170:10 - right I could have those velocities go
170:12 - at an angle I could think more
170:14 - thoughtfully about what the velocities
170:15 - of the bursting particles are I could
170:18 - have uh a variable amount of particles
170:21 - um I could think more thoughtfully about
170:23 - the design I could actually store a list
170:25 - of history of the positions to draw a
170:26 - trail myself I could use like textures I
170:29 - could use something called additive
170:30 - blending maybe I'll um to make things
170:32 - appear more glow like but um but you can
170:36 - see here here's the basic idea so I
170:38 - encourage you to take my JavaScript code
170:40 - and make some improvements on it and I
170:42 - want to make a 3D webg version of this
170:45 - but before I'm ready to do that I'm this
170:47 - is this kind of concludes this video but
170:49 - I'm just going to keep going I'm going
170:51 - to go back to my processing one I'm
170:53 - going to close this I'm going to go back
170:56 - to my processing sketch which is
170:58 - basically ex
171:00 - 100% exactly the same code that I just
171:04 - wrote but it is oh it's doing it full
171:06 - screen I forgot that it's doing it so
171:08 - one of the things about using Java in a
171:09 - desktop environment is I can kind of get
171:11 - a bit more speed out of it so I have now
171:13 - this full screen application but this is
171:14 - still 2D so what I want to do with this
171:17 - one and let's um let's take off the full
171:19 - screen for a second just so I can kind
171:21 - of see it a bit more clearly let's make
171:23 - it 800 by
171:25 - 600 what I'm going to do here is I'm
171:27 - going to change this to P
171:31 - 3D each particle when it gets drawn is a
171:35 - point but I'm going to say um push
171:40 - Matrix I'm G to I need to do three
171:43 - actually I could just use I'm going to
171:45 - do do this anyway I'm going to use
171:46 - Translate
171:50 - to add that Z axis and I'm going to say
171:54 - uh point at 0
171:56 - 0 so let's just make sure this still
172:00 - runs oops they're all shooting off above
172:03 - the screen because when I made it
172:05 - smaller the initial
172:08 - velocity uh should uh be less strong so
172:14 - let me just run this again I'll fix that
172:16 - again later okay so that's still working
172:18 - work now what I want to do though
172:21 - however is these particles when it
172:24 - explodes somewhere somewhere I create
172:28 - that Vector the random Vector probably
172:30 - in particle system that firework
172:32 - object uh and uh yes and then it makes a
172:37 - new right here it makes a new random 2D
172:40 - Vector I want this to be Random 3D let's
172:45 - look at that let's see if this works
172:49 - now can you see anything different here
172:51 - I'm not so sure you can but technically
172:54 - speaking it should be a random 3D Vector
172:57 - let's see if we can now actually start
172:58 - to rotate the scene to see if this
173:01 - really works so I'm going to
173:03 - add uh I'm gonna import a library called
173:08 - pyam which I always which I've been
173:10 - doing which uh I can now say I can add a
173:14 - pz cam
173:15 - object and I can say a cam equals new
173:19 - peyam this and I'm going to say 500 like
173:21 - I want to look at it from 500 pixels
173:23 - away the other thing that I need to do
173:25 - is when I make the initial particles um
173:29 - their
173:30 - location uh sorry when I make that
173:32 - initial particle its location should be
173:35 - random uh py cam makes everything
173:37 - relative to the center 0 0 so I want to
173:40 - look for random negative width divided
173:42 - by two to width divided by two and then
173:44 - I also want to change the bottom of the
173:47 - screen is now height divided by two so
173:50 - let's run this and see what
173:53 - happens
173:56 - o oh py Cam oh okay hold on py cam is
174:00 - very unhappy with my oh clearing of the
174:03 - background
174:04 - technique so I'm going to lose the
174:08 - trails I can get those back in another
174:10 - way and just say background zero I
174:13 - forgot about that once I have
174:14 - peyam okay now let's start manipulating
174:17 - the scene
174:21 - can you see I'm looking at it from above
174:24 - now yeah so you can see I need to make a
174:26 - lot more of these to be able to see this
174:29 - more easily let's add let's have a lot
174:31 - more being
174:33 - added um and let's also make the stroke
174:36 - weight of these particles uh much
174:40 - bigger and let's have their lifespan
174:43 - last a little bit
174:44 - longer
174:47 - um and and let's run
174:51 - this and okay so now and let's actually
174:54 - just make this full screen again because
174:56 - that might help uh so I want to also
174:58 - make the initial random velocity much
175:02 - bigger and I'm going to go back and make
175:04 - this full
175:08 - screen uh in p3d and let's see if we get
175:11 - some nice 3D fireworks here oh that I
175:14 - can kind of like yeah you can see there
175:16 - they are oh no no no
175:18 - oh yeah they are 3D but they're all like
175:21 - in one plane so I should also probably
175:24 - mess with where they
175:27 - start okay so let's mess with where they
175:29 - start so this starting location is uh oh
175:33 - it happens here which is a particle and
175:36 - I don't give it a z location it's Z new
175:39 - particle a random uh okay hold on the
175:43 - new particle gets a random XY and a z
175:48 - and it should have that X Y and
175:50 - Z and so let's give it a z random and
175:54 - then let's give it a random Z which is
175:57 - going to be sometime somewhere between
175:59 - 300 and
176:00 - 300 and so I'm going to run
176:04 - this okay now let's sort of zoom out and
176:09 - look there we go so we can see H that's
176:12 - not so there is some zdepth there it's
176:14 - not very much let's make that more
176:16 - extreme
176:21 - I'm pretty sure did I get it we should
176:23 - know now yeah okay now you can see I've
176:27 - got 3D
176:29 - fireworks so and then you can see that I
176:32 - could probably do something where I have
176:33 - them burst out quite a bit more and I
176:35 - now have upside down so anyway you get
176:38 - the idea you can play with this more so
176:40 - I encourage you I'm going to post in the
176:43 - description of this video the processing
176:45 - code I'm going to clean this up a little
176:47 - bit the processing code for for the 3D
176:48 - fireworks as well as the browser
176:51 - JavaScript code uh I need to get rid of
176:54 - the full screen thing is has to stop
176:56 - stop as well as the
177:00 - um I lost I lost everything ah come on
177:04 - no come
177:06 - back uh fireworks fireworks fireworks
177:08 - somebody see it fireworks P5 as well as
177:11 - the this code the JavaScript version of
177:13 - the 2D fireworks and I hope that you
177:15 - will make pretty shapes out of them I
177:17 - hope that you will add I hope that you
177:18 - will think of different ways of doing
177:20 - this and come up with a creative take on
177:22 - this and post it share it with me in the
177:24 - comments or on Twitter or whatever
177:26 - wherever you find on the internet to
177:27 - share it and I hope you enjoyed this
177:29 - quick coding challenge wasn't very quick
177:31 - probably uh of of how to program a
177:34 - fireworks simulation from scratch thanks
177:37 - for
177:39 - watching oh yeah draw a quad where the
177:42 - ground is maybe was a great suggestion
177:45 - okay everybody I'm done for today uh
177:48 - this second part of the stream is now 20
177:50 - minutes I have no idea I think I've been
177:51 - doing this for about three hours today
177:53 - uh three computer vision tutorials plus
177:56 - one fourth of July uh fireworks coding
177:59 - challenge if you have any last
178:02 - questions oh have I used
178:05 - 3js I haven't and 3js would be something
178:09 - good I think to try programming this in
178:11 - to see how that works um I um I've been
178:14 - using the webg renderer of p5js which um
178:18 - but I um you know it's I haven't gotten
178:20 - as comfortable with it yet myself and I
178:22 - think they're all it's still sort of new
178:23 - and there's probably bugs in it so uh
178:25 - you know probably I'm going to try to
178:27 - maybe see if I can get the 3D version of
178:28 - this working as
178:29 - well uh any last questions before I go
178:33 - okay so let me just before I leave let
178:35 - me just remind you uh coding rainbow.com
178:39 - is the website uh make sure you are if
178:42 - you want to be that is subscribed on
178:44 - YouTube if you want to join the slack
178:46 - Channel Discussion Group you can
178:48 - subscribe on patreon it's a crowdfunding
178:50 - thing totally optional but I'm just
178:52 - letting you know it's there for anyone
178:53 - who feels so inclined um and then also
178:57 - if you want updates about when I'm going
178:59 - to post my next live stream you can get
179:01 - an email update by signing up there so
179:03 - that's coding rainbow.com you'll be able
179:04 - to find all of these
179:06 - links uh thank you everyone I am going
179:09 - to be away next week I will be on the
179:11 - internet um so you're welcome to ask me
179:13 - questions or make YouTube comments or
179:16 - and so these videos will kind of Trickle
179:18 - over the next week and the next live
179:20 - stream will probably be something like
179:22 - Tuesday July 12th or Monday July 11th or
179:24 - Wednesday July 13th somewhere around
179:27 - there will be my next live stream I will
179:29 - do four at least four sessions in July I
179:32 - might continue the computer vision stuff
179:34 - or come up with other topics based on
179:35 - the discussion on GitHub and in the
179:38 - slack
179:40 - uh WG Bros wants a shout out game that
179:45 - WG Bros has been making at plan n.i
179:50 - plz. go check it
179:52 - out why can't the NFC processing
179:55 - function accept along long as an
179:57 - argument so processing as a sort of
179:59 - simplified creative coding sketching
180:01 - environment stays away from Longs and
180:03 - doubles and if you want to use those um
180:07 - data types the sort of more advanc for
180:09 - sort of advanced math stuff then just
180:11 - use the Java system math functions uh
180:13 - with those uh with those uh particular
180:16 - data types
180:18 - um oh I was going to answer some
180:20 - questions on GitHub I I'm not going to
180:23 - do this today but let let me just see
180:26 - let's see let me at least let's see if
180:28 - this one is quick so uh one thing that
180:31 - I'm doing is for anything on GitHub you
180:34 - can also just you can suggest topics but
180:36 - you can also just ask a question you can
180:38 - include your code with the question or
180:39 - it can be a general question so oh
180:43 - shoot there was another issue did it um
180:47 - which I
180:50 - thought was it this one no though this
180:53 - is a
180:55 - question but there was a question it
180:57 - seems to be gone now that was about a
180:59 - particular piece of
181:01 - code and I edited the I
181:06 - changed where did it
181:08 - go well I can't find it now this is is
181:11 - it sorted by newest yeah sort by uh
181:16 - recently updated
181:19 - computer
181:20 - Visions uh this no this is I guess the
181:24 - qu oh yeah this is the top I do want to
181:25 - talk about this but not today I will oh
181:28 - well there was a question here that I
181:29 - thought I was going to try to answer
181:30 - online but um but you can ask your
181:33 - questions here and I will in live
181:35 - streams do like a Q&A where I will make
181:37 - a quick video that answers the question
181:38 - here and you can include your code a
181:39 - link to your code if you can't solve a
181:41 - particular problem that sort of thing or
181:42 - it can just be a general question okay
181:44 - everybody uh the archive for this stream
181:47 - will be up at some point later today or
181:49 - tomorrow I hope and um thank you for
181:52 - watching I'm sorry for those of you who
181:53 - just joined in I have been going for
181:55 - almost three hours at this point so I as
181:58 - much as I would love to one of these
181:59 - days this I would like to do maybe for
182:02 - the 100th episode I will do an eight
182:03 - hour all day session I'm approaching
182:06 - episode 50 soon um but uh today I'm kind
182:09 - of out of steam and it's almost 3 and I
182:11 - got to eat something and do some other
182:13 - stuff this afternoon check my email that
182:14 - sort of thing so thanks you again for
182:16 - watching I love that you all
182:18 - participating and uh giving me feedback
182:20 - and watching the videos and subscribing
182:22 - and all that stuff uh share with your
182:24 - friends um if people uh and keep in
182:29 - touch okay goodbye
182:33 - everybody uh here we go I'm going
182:36 - to I'm I'm I'm signing off signing
182:41 - off this has been cing rainbow cing
182:45 - rainbow with me chief
182:51 - CH theme song is coming this is a
182:54 - temporary song I want some I need some
182:55 - more music tracks to play it is
182:58 - coming Chia
183:00 - areri arir sayara goodbye Shalom can I
183:05 - say shalom for goodbye I don't know okay
183:07 - yeah of course I can peace at least I
183:10 - could say peace is a nice sentiment I'm
183:12 - I'm sorry that I missed like a so many
183:14 - languages in my kind of eurocentric view
183:17 - I going to get more next time if I ever
183:19 - do that again okay goodbye

Cleaned transcript:

so stop hello I'm trying to make a grand entrance today welcome to coding rainbow episode 48 uh I've typically had a problem where this sound isn't working correctly when I first started the last couple times so please immediately in the chat if you could let me know is there any static clipping I'm playing some music can you hear the music in addition to seeing me talk and hearing me talk um hopefully that's working okay welcome I have a bunch of things I'd like to discuss um this is episode 48 I'm live from the school for poetic computation here in the West Village of New York City uh sound sounds good thank you very much uh and I'm I Okay so turn the music off for a second so I so first of all if you're watching this in the archive go and check the video description there'll be links to time codes of where various things happen but I I'm a little bit flumed and flustered because I today what I want to do and it's been requested and I wanted to spend most of today talking about and looking at different examples around the larger topic of computer vision have this camera that I found here it is a Sony PlayStation I camera and you know I used this it was this is probably like five years ago at some at this point but I used to use this with processing on my Mac all the time and it was good for an external webcam um and uh it uh doesn't really work so much anymore so I have a weird sort of like hacky way that I might try to get it to work and you might be asking uh why why do you want to use that camera anyway you've got this thing I'm going to go here right I have a webcam right there there I look it's me look at this a little behind the scenes going on right now you're seeing this live composite but really what I am is a person standing in front of a green screen and then I'm putting the my computer screen behind me and then anyway you get the idea but the point is I could use this um in uh to demonstrate I need a live I want a live camera feed to demonstrate some computer vision ideas and topics um but what I was hoping to do was have a uh take this camera here I don't know what I'm looking at anymore and uh tape it right here and point it down at the table because I have these cups o maybe these would be good for juggling no not so good for juggling um I have these cups look at I have these cups and I was going to use these as uh things for the camera to look at uh and move them around and show you how to and and talk about blob detection um with these that's being so to make a kind of interactive tabletop type thing but I couldn't get that camera to work so I think what I'm going to do today is luckily so just so happens I happen to have this green screen here so I can actually move my laptop over to here and uh point the camera and I have this really nice clean image so one of the things you want in it with working with computer vision applications um the types of things that you might do is to create a a really for a lot of the demonstration I want to show you having a high contrast image something with a very different foreground and background and so oh look at this watch this I have a weird idea I'm looking this is the problem I'm looking I'm not looking at you because you're the one watching and I have a piece of tape here this is going to be excellent there we go now we're going to use this for blob detection so one of the one of the things that I want to do today I'm standing in front of it is whoa look at this which is the real cup is this the real cup or is this the oh my mind is exploding freakish i' like everywhere I look there's a screen or a camera or some copy of me and I'm just take a deep breath put my music back on okay I think everything's everything's starting to feel a little better and a little more Cal I'm walked into it okay so one of the things I want to talk about today is blob detection and what do I mean by blob detection I mean how can I have a camera a computer how does it computer vision by the way this idea of computer vision the computer that sees how do we write algorithms for the computer to be able to look at an image and analyze that image and produce some sort of result some evaluation of that image and that can be a lot of things from I think there's a person there or I actually recognize that there this is a landscape scene of a beach you know all sorts of machine learning type kind of things but I want to start from the very Basics and we could say like okay there what colors am I seeing me the the camera I'm seeing green and I'm seeing red where are the red colors they're over there is there a lot of red is there a little bit of red um that sort of thing so I want to start to look at uh that type of stuff okay so um so that's kind of one of the main topics today the other thing is um I got to close this uh let me see if I can find this uh I'm going to open up processing I am going to uh so let's see it's about 1130 a.m. eastern time right now and I am going to uh find an example I should have should have prepared uh processing uh maybe here fireworks oh it's not here oh you know I probably already put it maybe I put it on the uh desktop here uh no uh I want to find something hold on you need to listen to some music while I'm looking oh no ah hold on everybody okay I'm I'm I'm searching for something now enjoy the music need to get some more creative comments music where would I have save that oh I know where it is I know where it is time out I know where it is I forgot where I put it okay okay so I want to do a uh coding challenge today since it's the July 4th holiday coming up fireworks in in here these United States where I am currently and so this is kind of one of these uh guess I should turn the music off maybe um oh it stopped anyway um this is one of these sort of classic uh computational visualization algorithm things you know when you first start learning creative code and graphics and programming and think hey let's make a fireworks simulation and there's particles and a little physics and some stuff there so I want to do this um today uh before I leave here so let's say this is going to be about a twohour session and spend an hour and a half or so on various computer vision topics and then when there's a half an hour left I will stop and do this coding Challenge and I will also happily take your questions okay so in a moment I'm going to start with the computer vision stuff um before I get to that let me just say a few words again if you are new here uh I'm going to mention that uh if you're wondering what this is you can go to coding rainbow.com uh all uh what I'm doing now is a kind of raw unfiltered rambling discussion of creative coding topics I will program things and talk about things and watch this YouTube chat and answer questions um and once this is done I will take uh the sort of cogent chunks of video from this two 2our plus session and edit those into uh tutorial videos those will appear on my YouTube channel uh so if you want to be get notifications of those you can subscribe on YouTube um I also am running something called a uh patreon which is a kind of crowdfunding for media content podcasts videos other types of things too um and so you're welcome to consider joining that uh for joining that there is a uh slack channel that you then get invited to where I discuss this discuss topics I'm going to do and answer questions and that sort of thing a nice community of folks um and then the last thing is if you want to know when I'm going to be doing live streams you can scroll down and put your email in here and I will send out emails as those of you who are on this list notice I sent out an email like 15 minutes beforehand but sometimes I'm better about scheduling and I'll tell you a day in advance or two days in advance that sort of thing so this will be um my last uh coding rainbow session for this week uh I'm I'm traveling next week so there won't be any live live session um I am personally committed with this sort of patreon thing that I'm doing to doing four sessions per month which is once per week I have been getting more I I would say I'm I'm right now I'm operating on like six or seven per month so I'm kind of exceeding that but since I'm missing next week certainly the week after I'm going to make sure I schedule to do two live sessions so that I've caught up there um and that's kind of my plan one of the reasons for doing the patreon is to give me a little uh uh uh what's the word looking for so to give me some sort of like uh obligation so to speak so I feel um that that I'm kind of uh making sure I'm doing it ah uh neon cat fan asks in the chat if anyone has backed Pebble too this by the way is a pebble watch I I don't mean to be a Buzz Marketing Pebble by accident I I like it just fine take it or leave it um but I'm thinking of getting a pebble too okay um so I'm going to start getting myself set up to talk about some of these computer vision topics uh if you have some questions before I get started ask in the chat so um two things I want to do I'm going to let's put on some uh music again uh so I'm going to get a few things open here that I'm going to reference okay you can see all my looking around to try to get that PSI to work it ended yesterday uh okay I'm looking for now uh I'm going to find my playlist aha okay now let me see here I'm this is just me this is by the way as if I'm not live streaming right now this is what I would be doing by myself and i' like lose my chance okay I'm looking for hold on uh I want to I'm starting there's an example that I want to start with and so I just want to pull it up uh LP there we go learning processing video color track is where I okay want to know something quite amusing here which is that uh I'm using something called cam twist I forgot that I had that running okay I'm going to turn that off so I'm going to talk about cam twist in a minute this was my secret way of maybe getting the PSI to work ah seriously oh that's why no uh sorry everyone hold on I am trying to figure out why my computer is doing cam twist only I might just need to restart oh boy really wants to do cam twist badly all right I'm going to restart this computer uh hold on save as uh computer vision one hold on this computer is going to restart Oh look The Empty void of nothingness please restart sooner than later oh look oh did you hear that sound did the uh did the B sound actually uh make its way through to the to the stream okay so um I am okay so sorry this is not going very well so far okay let me log back in uh see if I get rid of this cam twist thing that happened by accident uh I'm going to open up processing so open recent computer vision come come come let's see ah I guess I have to uninstall cam twist I should not have installed it I killed my computer by installing cam twist okay boy this is a big failure today okay let's see how do I uh hold on I'm thinking uh probably installed some drivers I have have what's that thing called that I have uh uh clean my Mac okay sorry stop with this I was just going to use this I have this software that will automatically uninstall things nicely but instead uninstaller I want toinstall cam twist here we go uninstall sorry everybody this is really not going very well today uh okay let's see if that helps I might need to restart again cam twist oh my God dud crazy let's try restarting one more time now that I at least did that uninstall I might have to just I could switch to using a different computer actually I have a whole there's lots of things I could do actually um which I might in a second take some more anyway so just to just to to while um while I'm kind of getting started here what's this over here that's you're seeing there's something oh this it's a t Okay um okay let's see now I'm hoping this is going to be the moment uh usually I do this kind of stuff I I say usually I do this kind of stuff beforehand and I I say that just because aspire to do this beforehand and I had done a lot of this beforehand okay I'm going to take more drastic measures um what I'm going to do is create a new 50 people are watching this total disaster by the way this has happened to be in real life class this is actually real life class too um okay uh gosh uh let's make a new user let's see if I make a new user uh uh coding rainbow uh create user uh that's fine I don't want to password I want this user to be an administrator uh and I want to log out oh look at this coding rainbow is a parrot I'm hoping don't sign in definitely not yes skip oo oh I feel so like I'm in the mountains all right thank you okay uh let's quickly I'm going to do something silly which is I I think I'm actually just going to be fastest here to download processing uh I think this will actually be yeah I it is true that I one of the big issues here is that I'm using a Mac ah okay let's come here take this move this to the desktop and and I'm opening processing I hope this isn't anybody's first time watching uh I don't need this message now I'm going to add a library and I'm going to add a video uh and it's going to install that oh boy this has really been going for a half an hour that the camera's about to shut off that's bad uh okay now uh examples um libraries video let's go to capture let's go to getting started capture and let's hit play and let's ah cam twist has taken over everywhere this is crazy okay oh but look I am back here okay so at least I I I thought I saw some yeah look cam twist is still there oh and all right hold on let's just try one more thing here uh I think I'm going to be back in a second I have some good for all of you who think this is like total complete failure today I do have some good news I purchased some fresh whiteboard markers uh okay now I have a feeling that back here at least if I go to uh video capture getting started capture and run this we're back okay there's an unfortunate reality here which is that I think I've done so many weird things that it now takes like 5 minutes for the Pro to start I'm tempted actually to do these examples in JavaScript uh just in the browser okay so at least I have the camera working and I um and I have a feeling that the cam twist thing which is really irritating me I will uh I might install that back later it's just I think that uh maybe I just need to do this open recent computer Vision one let's try this oh sorry oops uh okay hold on we're getting there okay I've got something going now all right I've got something we can work with here so just frustrating me that uh all these all these like horrible error messages are all because I installed that cam twist thing and I really wish I could get rid of it because it's messing with what it is that I want to do and I want to see I want to get 640 by 480 from the camera so give me a second here oops I need print array ah one more time okay now I'm looking for FaceTime HD camera 640 by 360 really uh that's fine 30 frames per second is cameras three and I'm going say 640 by 360 let's start this off so what uh what I'm doing by the way if you're confused is I'm just trying to get my um previous example I I made a video a long time ago about kind of computer vision in general and I I had one example which uh does tracking of a red color so I thought yeah so this is where I'm sort of starting with and so I'm I'm what I'm going to start with the first thing that I'm going to do is you can see that there are some things about this that kind of work in that I am able to effectively track this cups location but you'll notice this sort of like circle is jumping around so this particular example is looking for the sing most red pixel and what I want to do in uh talking about computer vision is a few things number one I want to look at how I would then find the average location of all red pixels which will give me something more stable and more accurate from there I also want to look at um how I would then track motion so I think looking at tracking motion can be useful um pixels that are changing and then from there I want to look at actually blob tracking so not just the average location but thinking about what is the sort of Si what are the what are the dimensions of this blob of red pixels and then what happens when I have uh two of them and can I have multiple blobs moving around and you know what if I just use the red color I don't need a table top this will work so and um yeah so and then I can also I have my permanently okay so I think we're ready to get started with some of this computer vision stuff I apologize for um taking so long to get going with this so let me get back uh to this particular example I'm very frustrated about the red error messages with the cam twist thing there must be like um I I want to like there must be a driver somewhere that cam cam twist what if I do there's still something on the computer o where's this ah look at this ah look at this let's do this okay hold on I I I stupidly used that I um okay hold on we're g to make some magic happen here just bear with me for one more second this is what I want I want to do this I think the like driver or whatever for cam twist is a great thing I love cam twist I was going to use it to show you something really kind of cool but it's messing with my mojo right now uh so let's see uh this is already I think this is what got removed already um okay so let's see if that helps matters oh I should have just looked for that ear I'm such an idiot that I didn't do that earlier okay yay so I um so uh great and so here I am 640 by 360 is still cameras 3 great okay so things will work a little more smoothly now with no error messages yay okay now I need to go to the browser and I have to find these two things that I want to reference um and uh uh open Frameworks uh uh computer computer vision book so uh somebody correct me if I'm wrong but this is um this by the way this website that I'm at which is openframeworks docc fbook is a online book about using open Frameworks which is a C++ creative coding platform and I believe that a lot of this material was put together at a doc Sprint that happened at University of Denver the EDP what's this program EDP Denver uh emerging digital practices at the University of Denver great program Chris Coleman uh is there he supports a lot of wonderful uh uh creative coding types of things anyway um I am not going to work with open Frameworks in C++ in this particular video or session however you will find that a lot of computer is there still a cup taped next to me yes I love that I'm doing this whole tutorial with a cup tape next to me which is now also like this weird cup that looks like it's on my computer screen okay I don't know what I'm doing here this is all making me very uncomfortable all of a sudden uh okay I was talking about something meaningful and important now um ah yes so you will find as you if you do research about uh computer vision and look for examples of artists and um and uh uh and scientists and all sorts of other people working with computer vision that a lot of the open source libraries and examples and tutorials are written uh with s C++ as a platform there's a number of reasons for this number one uh when you what one of the core things you have to do with computer vision is read pixels and reading pixels can be a slow and expensive operation and uh C and C++ being a kind of language that allows you to program kind of lower level native to the computer itself uh you can kind of squeeze the most speed out of that I'll say that processing um actually runs incredibly fast for doing this kind of stuff too um and for most many things it's going to work just fine um so and also just a lot of the libraries so there's something called open CV open computer vision which is probably uh one of the most wellknown computer vision uh code libraries it is written in C++ so if you happen to be you know writing an application that you want to use C++ if you want to use open CV writing in C++ could make a lot of sense there is a processing library for open CV there are lots of computer vision libraries for uh JavaScript and so I'm going to stay in those worlds and uh but I encourage all of you watching or participating or learning to explore some of the open framework stuff to communicate with me maybe we can Port some of the examples back and forth so um so that is uh one thing that I just wanted to briefly say about that the the the reason why I'm also showing you um this I just uh um noticed last night is that uh let me let me go to uh so this is um article written by Goan Lev I'm going to try to make it something that you can see here and what I think what's great about this particular article and I encourage you I will include a link to this in this video's description is uh you're going to get a nice uh historical context you know it might sort of seem like oh computer vision that's a new thing or open CV there's this great open CV Library not you know new being in the last 10 years kind of thing is um but artists have been working with computer vision ideas you know since the six late 60s and possibly earlier but you can see myON Krug myin Krueger being kind of a seminal example of that um uh there are other examples of golan's own work uh and um other types of things that you would look here so I would encourage you to read through this the other thing that I think is particularly useful about this article is this section called Elementary computer vision techniques and this is kind of my goal here in this session is to show you how to perform these Elementary computer vision techniques from scratch with the sort of raw guts of the code to understand how these algorithms work in practice you might find it more convenient to just use a library that's going to have it implemented already but I think the idea here is that number one it's kind of interesting you might just sort of enjoy this in an academic sense to sort of learn the other thing is if you to use the library it's often helpful to have a kind of an understanding of how the algorithms are working in order to be able to manipulate the parameters and uh and stuff of the library but also to be honest you might come up with some creative weird strange idea application technique that isn't possible that isn't built in baked into a library so I think it's worth kind of looking at these stuff so I'm going to read these to you uh detecting motion this is something I definitely want to try to do today detecting presence uh we could look at this too detection through brightness thresholding this is a really uh this is would be useful simple object tracking uh basic interactions um and then then there's some uh more stuff here about different examples and authoring tools and that type of thing uh there are also um source code examples frame differencing background subtraction brightness thresholding brightness tracking you know what might be useful to do this says these the following programs are known to work with processing version 135 let's do something for the world today and let's uh download each one of these examples and let's uh check them and make sure they're working with the latest uh processing and update them if they're not I wonder if if these are GitHub links or no these are just uh straight files so I'm going to do that uh first in this session to kind of as an overview things so I encourage you to check out to this I think would give you some nice background and context to the tutorials that I'm going to do and I I also just want to credit them because a lot of my knowledge or ideas come from these tutorials and I think this open Frameworks book also is great I mean it's and there's a lot of really important key stuff one one like really uh fundamental diagram I I have video tutorials that go over this already so this is knowledge that I'm going to assume in the tutorials that I do today but this is sort of a key thing that you need to be comfortable with in terms of how the pixels look how the pixels are numbered and how they're stored in memory but and then the other aspect of this uh is I don't maybe there's not a diagram here I have to find my own diagram for that but which is how do how to think of the pixels as XY pixels but look up that individual index in that onedimensional array okay so that is some background um so I'm going to get the first thing I'm going to do just to kind of get warmed up I think is I want to uh open up these examples um and you know what maybe we're going to make this uh well I'm going to I want to open up these examples and make and see that they work in uh processing three but if you have questions or comments or thoughts there's still a cup here it's a little bit weird uh please let me know uh ah yes so uh one question that's asked is could you try to do an authentication through retina scan or face detection I absolutely want to do in in a way like um so first of all in case uh you're not aware uh where I am keeping track of where I am keeping track of my list of topics is in this uh GitHub repository coding rainbow / rainbow topics so you can open a GitHub issue to suggest a topic you can also upvote them because I uh one thing I can do here sorry about this let me just make this a little smaller uh is it I have the possibility to go sort by uh reactions and so I can sort by thumbs up and you can see that computer vision is right here on the top and I have uh an outline of the things that I'm planning to do and you'll see that I don't know why I'm backwards here you'll see that I have on my list face detection a long time ago I taught a course called uh faceit which was just a whole course only about things you can do computationally with faces face detection face recognition uh you know tracking eye tracking that type of stuff so at some point I'd love to expand that playlist I I have this list of stuff that I want to do in this YouTube channel that is you know I could if I was doing this even if I was doing this every day for like it would probably take me a year to get through all this stuff so we'll see but this is kind of what I'm working with um okay uh um so let's get warmed up here and I'm just going to uh let's go to frame differencing so I'm going to uh open up processing I'm going to save this as okay I want to make a folder on the desktop here called I'll put it under coding rainbow and computer vision uh and then what I'm going to do is save this as in the uh desktop of coding rainbow computer vision let's get a shortcut to that here uh and let's save this one as frame differencing so oops that works uh oops I lost that code yeah so this is frame differencing by go 11 uh oops I'm sorry I'm uh frame differencing paste this in here let's run this so I'm assuming that this isn't going to work and you can see that it is not working so let's update it for processing 3 and let me see if I can find some of the things that are different so the video library so the older version of the processing video library used to be built on top of Quicktime and it's currently now built on top of something called gstreamer uh and one of the things that it needs is a video. start and that might be actually all we need um oh you could see and we had it there oh there we go so this is now working so turns out that all I actually needed to do for this particular example was um was uh add that video. start I would like to change one other thing however I think this is a very reasonable way of doing things but I rather prefer to use the capture event and I will rather than if video. available and I I'm a little skeptical of this load pixels in setup um but it's interesting that that works I'm sort of surprised this I think should be in draw but let's see what happens here we might get some weird flickering based on what I did yeah notice that do you see that flickering so let's see if we can eliminate that flickering uh oh look at that interesting oh I like the way that this is being done so okay I'm not going to get lost in uh I'm not going to get lost in this example because I I want to make some other changes to it but okay but let me let me just cover at least what's going on what's Happening Here and I I kind of screwed it up and I'm gonna I I I'm gonna I'm going to get to that later but uh what's going on here as you can see if I'm completely still the window is black and as I move you start to see these colors what's happening is a video image is a frame of pixels followed by a frame of pixels followed by a frame of pixels followed by a frame of pixels and um what this example is doing is it's taking a current frame of pixels and comparing it to the previous one and taking each color each red green and blue component and subtracting the previous so as the pixels move we're seeing the difference between those two colors um so I I have a feeling that uh each one of these and and actually I'm going to come back to this later um each one of these is probably um probably works just fine uh if I just add the uh video. start so um someone remind me I will get in touch and uh see if I can help just so this is actually really useful I want to use this look there's the cup is so I want to use this idea of uh thresholding as well during this discussion okay we better just get started I think I want to start doing the actual programming of stuff um because I've been going for almost an hour just kind of getting myself set up okay uh so I want to reference golan's article I want to close this I want to get my processing code up I want to start with this particular example which is uh uh going to track this particular cup um so that's working well and then the other thing that I'm going to need is the Whiteboard let's see if that exists how's the focus if someone in the chat could tell me if the focus on this is reasonable that you can read what's here I don't know why today feels like a very all of a sudden feels like a very serious uh oh and I'll turn this light on I like to have oops this is not plugged in ah never mind turn this light on so let's get it a little more light here maybe that's not necessary uh can you see this whiteboard okay I'm going to get out my um new uh markers okay I'm hopeful how's that can you see that can you read that that let me plug this um just going to fix one thing over here to get this light plugged in in the corner tends to work well oops oh what a disaster I got to use the tape here so I don't trip on it okay okay this is sort of silly what I'm doing but I'm doing it anyway okay uh okay I think we are about ready now and let's see focus is good eyes are a little small uh okay so the other thing I think God that's fine G to zoom in here uh okay so oops let me tape this a little bit further over so I can stand here and be talking about this tracking thing and I think if I stand here wait I can't this stand here okay uh great okay so I think I am about ready to go with this first tutorial um by the way Alvaro asks is there a way to find the red pixels without searching all the pixels not really I mean here's the thing you could TR you could search you you know you could you could come up with clever things like for example let's say we know where the red pixel is uh it's like this is so weird like I'm pointing here but I can point here I'm I'm lost okay let's say you know where the red pixel is one frame well you could start by searching the pixels near there to see if you find the red pixel again and that way you could say ah I found it let me not look anymore but ultimately um you need some sort of you know higher level logic uh to strategize for how you might you could do something like I'm just going to look at every 100 pixels and if I find something redish then I'll start looking in more detail around that one so you could skip a lot of pixels that type of thing uh okay um so I'm G to put this camera aside I'm going to cycle this I'm apologize today for how long this took me to get uh up and running with um this stuff so in this first video what I'm going to do is move from looking at a single Pixel for the average location of a bunch of pixels and I'm going to also kind of introduce the idea of computer vision a little bit do you guys hear a hum of the fans I have going in here hopefully not it's not so bad okay so and let me oh let me get my code set up a little bit here and then here okay let me close things I don't need okay I think it would be nice let me find a nice image here we go uh okay very low hum in the background uh all right let me see better how's that with the hum better okay I'm glad some of people have just tuned in for those of you just tuned in I wasted not Wast wasted but I spent 45 minutes just trying to get to this point but here I am I'm at this point oh you know what I also have are these These are little like colored Postit notes and I could put those up in addition to this cup thing but let's just start with the cup thing okay um here we go I'm going to start the first tutorial which is going to be again just reminding myself reintroduce the idea of computer vision reference the Goan L article talk about the um sort of classic techniques and then moving to libraries and then show my example and transition okay here we go uh somebody asked what's the URL of that page I think Oliver might be the only person who can paste a URL into the chat but it's uh if you just search go onle computer vision it will come up on Google okay hello welcome to A continuing series about computer vision now uh I uh okay hold on I this is weird because I feel like I'm starting fresh but I am actually continuing a previous video that I made over a year ago in terms of where it's going to be in the playlist on YouTube but let's just see how this goes okay hello well okay thank you Oliver okay hello welcome I'm here in this video to talk some more about computer vision computer vision being this idea of the a having a computer see having a computer find something if you notice there's this strange red cup this actually isn't part of my computer screen this is a red cup here taped to the wall behind me and in a second I'm going to have a camera pointed at that and I want the computer to be able to find that red cup and this is going to open up a lot of questions around all sorts of different techniques and strategies of getting things that are faster and more accurate and that sort of thing so the first thing that I want to do though is reference for you a source of inspiration for me which is uh an article uh by Goan L called a computer vision for artists and designers pedagogic tools and techniques for novice programmers so there's a link to this article in the description it gives you some historical context and it also walks you through some sort of uh key classic techniques like detecting motion detecting presence detection through brightness thresholding simple object tracking Etc and I'm going to demonstrate a lot of the techniques which I've learned and taken inspiration from this particular um essay online essay so okay so the other thing I'll mention briefly is what my my strategy here for this this set of tutorials there's going to be a whole bunch of them by the time I'm done there could be up to 10 even is that I'm going to show you how to program some of these classic algorithms from scratch and then what from there I'm going to transition to showing you how to use different computer vision libraries that have these algorithms and more sophisticated versions of these algorithms baked into them so it's a question of you know in practice a lot of the time you probably want to just use a library like open CV is one of the ones I'm going to show you but there's some value in understanding the algorithm for when for when you go to use the library for knowing how it works plus you might invent some sort of wacky creative new ideas around computer vision and just sort of creative visualization by having by playing around with these by writing the algorithms yourself okay so um a previous video I started with an example that does exactly this so and this is an example running and processing a Java based platform I will make uh p5js JavaScript versions of these examples which you can find uh hopefully Linked In this video's description as well but here you have a cup a cup taped to a green wall behind me and what you can see here is that I'm drawing a circle at that Cup's location now how did I do that the way that this particular algorithm works is it says look at every single Pixel is that pixel red is that pixel really red is that pixel more red than the other one I found that was kind of red it's looking for the most red pixel for every pixel find its color distance its difference from red and find the one that holds the record for being the most red and then draw a circle at that location but there's an issue while this is working somewhat accurately I could even take this off the wall um you can see it's kind of following it around but it is sort of jiggling I could I could also demonstrate another problem by having two cups now and like now it's jumping back and forth between the two so there's a lot of things that I want to resolve here in these the way that I'm going to improve these examples the first thing that I want to do is simply make it so that I can get a stable location hopefully in the center of this particular cup and so the first thing I can do with this particular example and also by the way notice now it's not finding it anymore this camera is doing some like Auto white balancing brightness stuff which is really can be a problem and I think there's ways of turning that off but in the sort of real world if you take this to an installation or a project you're making you're going to want to have a camera that you can turn off auto white balance Auto all those sort of other automatic settings but I can in this example I can always click and uh kind of re uh recalibrate the color that I'm tracking so the first thing that I want to do is instead of looking for in this particular video instead of looking for the single most pixel that is the most red I want to say is a pixel Red Enough find all those pixels and give me the average location of all of those pixels so let's dive into the code and make that change okay um as you'll notice here every single whoops the core algorithm of essentially all computer vision let me look over here for a second the core algorithm of all of these computer vision examples is this this nested Loop for every X pixel for every y pixel and I something is really bothering me here I don't know why these Extra Spaces are here uh and I want to sort of do Auto for I need to put some spaces here cuz I have a problem please don't be like me live your life with spaces in weird places um okay but um and you can see here what am I doing I am taking and let's just let's just review this for a second I have a new whiteboard marker that I've oh there it is um let's just review this idea really briefly in case uh you didn't watch the previous video this is a grid of pixels it has columns which I could number like this 0 1 2 3 4 it has rows which I could number like this and let's just make those different for the sake of argument then it has pixels the pixels are numbered like this 0 1 2 3 4 5 6 7 8 9 10 11 Etc every single computer vision algorithm that I demonstrate to you will start with for every X for every y so it's looking at every X pixel and every y pixel but then it needs to look up a given pixel here in the onedimensional array of all of the pixel colors and the formula for doing that is X Plus y time width and you can see why that would work because here the width is six the first pixel in column 3 and X3 is three the X1 is 3 + 6 which is 9 the X1 is 9 + 6 which is 15 is that right 11 12 13 14 15 so this formula is going to be kind of key so that's right here right for every X for every I find that pixel location and then it's look and then I need to separate out the red green and blue components of the color that's coming from the pixels of that video and then there's this other color called track color that's the color that I'm looking for the red uh is that here yes the red uh cup um and then using the distance formula and to be honest I should really not use the distance formula because it has a square root I should use just distance squared because then I don't have to take the square root but I'm not going to worry about that optimization right now maybe I'll bring that in later I'm checking to see if it's the the if it beats that sort of record it's the most red and have that XY spot so that's what this code is doing so now in the next version of this example instead of looking for um instead of looking for the most red I want to look for anything that me that that is like red enough so the first one thing we need is a threshold variable so I'm going to add to this program I'm going to add a variable called threshold and I'm going to try this just at like 25 I sort of made that up 25 I want any given pixel that is within uh that that that's difference is less than 25 from the color that I'm looking for for to be considered red so let's go down to the algorithm and I'm no longer looking for a record or a closest X or a closest Y what I'm really looking for is like the average X and the average Y and I'm going to make those floats because yeah I think that's going to help out in a little bit just in terms of doing the average stuff and then I also need to have uh a count how many pixels are red okay so I need to I need to ultimately what I want to at the end is I've calculated the average and that I also want to I need to keep track of how many pixels because that's how I'm going to calculate the average by the way okay so now we're looking through we find the current color we know the track color we know that difference so I'm no longer checking and I'm going to save this by the way as computer vision 2 I'm no longer checking is that distance less than the record I just want to know is it less than that given threshold if it's if it is red somewhat red enough then what do I do average X I add its X location in right I add the Y location in and then I increase the count why now those values aren't really average yet yet how do you take the average of five numbers you add all five up and you divide by five so this is what ultimately I'm going to do here the code's over here I'm going to add up all the x's and y's keep track of how many x's and y's I added up and then take the average so now at the end I can say as long as count let's just say as long as we found at least one pixel you know I could say like you know what this only works if I find five pixels that might be more accurate but I'm going to say as long as count is greater than zero I'm going to say average x equals average x divided by count average y equals average y divided by count I'm I'm going to fill with the track color give it a stroke and then draw The Circle at average X average y so you can see now here instead of looking for the single most pixel any pixel within that particular threshold of red uh is is going to be uh considered uh red so let's run this now and see what we get now I don't know if I picked a very good value with value 25 and I should really make that a variable that I can tweak in real time but let's just sort of see okay now what I'm going to do is click here to set that color you can see that's pretty good it's it actually is still sort of like moving around um uh one thing that I think could be useful to do is I could actually show you which pixels um I found and what I'm going to do to do that I think is just do uh I'm gon to this is like not so great but I'm going to draw just like a point there um to sort of see uh a a white point to see what it's sort of finding and what the other thing I want to do is I'm going to just write now I'm going to map the uh the threshold between Mouse X like the lowest threshold would be zero oh the mouse X goes between zero and width and I could have a threshold between zero and like let's just say 100 so this might make things run kind of slow because I'm going to be using the point function a lot but let's sort of see what happens here okay so let me click here you can see oh why are those all so first of all did I uh didn't I say F oh Point by the way is is stroke and I want to say stroke weight uh one and actually just for a second here let's take uh let's like like let's do this and let's make this a little bit smaller so we can really see what's going on here okay so let's run this and we should see a white a white uh pixel for every pixel it's finding that is red like and you can see what it's found here now oh look at this so the threshold is very high so you can see even my hand is kind of within the threshold now so and you can see as I move the mouse that threshold you know my skin is kind of like reddish but as I move over here you can kind of see um see what's going on now I want it wow my lips I got to get out of the frame so you can see now it's quite stable there you go so I found kind of an appropriate threshold I should be have a way of like printing that value out so I know and you can see that it's oops as soon as I move in the picture we're going to we're going to deal with that in a second I want to uh zoom in here um I should be able to unfortunately my arm is too red but I should be able to take this off and move this around and you can see that I have quite a pretty accurate uh tracking as I move this and it's it's quite stable so you can see that even just doing the average location you know again I have nice Lighting in here I have a green background I have a very distinct color that I'm searching for but but if this were an interactive tabletop where you could control the lighting it could have red discs on top of a green table or white discs on top of a black table then this is something you could do so I've shown you one Improvement here the first Improvement is just using the average and again as soon as I introduce another cup you know we've got a problem look at it that dot is right in between them right because it's the average location which is kind of interesting but not what I'm looking for so in not in the the next video I'm going to look at tracking motion which I think will be interesting to see but the video following that I am going to um I'm going to show you how you can track each of these locations as blobs separately okay uh so that concludes this particular video and in the next video we're going to look at motion tracking frame differencing okay how was that was that useful for everybody did that work um I have no idea how long that was uh so that was hopefully good good I there was something I would just that popped into my mind right at the end there that I wanted to do uh but I can't oh I wanted to get the threshold value let me just I want to know that threshold value so I can use it let me um let me just do that right now let me click here kind of like see that seems pretty good um so oh I'm not how do I anybody have an estimation ah okay hold on what I meant to do was uh print line Mouse X or print line threshold uh let's do print line Mouse X comma threshold this is what I meant to do and now come back camera click I think that's so I'm at a threshold of like 80 oh and I forgot I was going to add the distance squared thing um so a threshold of like 80 is pretty good uh keep that see I wonder um okay so uh I guess my question for you guys is I think I'm going to go and do the frame differencing thing to look for motion pixels because I think that's kind of interesting to see uh for um how that works yes uh so I was just using point just to be quick and dirty about it I wouldn't usually do that it um I would use either set or I would actually use the pixel array to draw that but it's kind of it runs fast enough right now so it's kind of good enough um so what I want to do going to do the frame differencing so save this uh let me rename these actually for a second um so let me rename these computer vision whoa oh no oh I didn't save this in the right place um so this is this one was uh average point average color tracking average Point color tracking call it that and uh computer vision one which was where which was maybe just on the desktop oh yeah uh this one is oops ah what did I just do something crazy happened oh I I hit present mode by accident uh yes I am planning to use open CV at some point was asked in the chat let me just save this example as oh yeah uh uh computer vision this one is uh a single single Pixel color tracking okay single Pixel color tracking uh and then uh average Point color tracking okay okay so the next thing that I want to do and let me uh cycle these cameras is I want to look at detecting motion um and so to detect motion this would be good to do some dancing in this perhap this video perhaps maybe I better have my music ready okay yes I think I'm ready I played music twice okay sorry okay in this particular video uh um yes show us to make a circle detector so we can find cups of any color yeah well all this is possible okay one step at a time now um my nose is still running I have was terrible cold a week and a half ago and I'm going to mute my microphone so I don't okay so uh the next thing I'm going to do is motion detection looking oh yeah no no no let's I can't remember is is there a distance squared function in processor no so I know there's a MAG squared for the vector object uh distance squared processing.org I don't think there is um so I you I could keep it this way um you know what what I would do is just write my own function and maybe what I maybe I'm going to do that um so so I'll do that at the beginning of the next video I'm going to write a distance squared function in which case uh it can eliminate the square root um which I think will be useful okay so uh let me get rid of this stuff at the top I you know I want to have comments in my code but I find them a little less useful uh while I'm doing these tutorials okay uh okay um here we go whoops um okay now I am ready so in this video I'm going to talk about detecting motion we were searching for a color a specific color now I'm going to search for a specific um oh sorry I'm losing my mind here I'm going to search I'm going to just look for uh pixels that change and then I am going to uh oh no no uh I'm going to I'm going to optimize the distance squared Thing by adding my own function and then look for pixels to change okay get this up and running what happened to The Cup oh right this has to be like this okay uh here we go all right here we go hold on I I think that I don't need I just want to um I think it actually will be fine to have this bigger and let me just see what this looks like for okay great uh okay hello welcome to another computer vision tutorial video now in the first video I showed you how to find the average location of all the red pixels in this particular image and you can see over there I like I'm pointing over here ah okay no start over I I'm like I'm so used to looking at a preview of myself okay start over hello welcome to another computer vision tutorial video in the previous video I looked at how to find a an object of a certain color and find the average location of all the pixels of that color which allows me to very easily track an object like this and you can see I can kind of move this around and I'm tracking it now what I want to do in this next video is look at something related but a little bit different to look at how do I find pixels that have changed so in this sense I'm writing a motion detector motion is pixels that are changing right because if everything is very still none of the pixels are changing but if I move those GRE green pixels are suddenly becoming the my skin color and my skin color pixels are sudden becom green pixels that sort of thing so I'm going to start with this code example up but before I do that let's add just a little sort of simple optimization to it we don't really have a speed issue this is running very very quickly but this can as you move to higher resolution become an issue I did mention in the previous video that this particular algorithm right I'm finding the distance seems weird distance between two colors where well dist you can think of this threedimensional space as that we live in as a color space and each color you know the x axis of this space being red and the y axis being uh green and the zaxis being blue and so colors that are near each other in the space are more similar so that's how this sort of idea of ukian distance works but um the truth is this the distance function uses a square root so I'm going to write my own function here down here I'm just going to call it distance uh squared and I'm going to give it uh six arguments uh uh oops this should be X2 and what I want is to get that distance which is uh X2 minus X1 uh time X2 X1 plus and then I want to do the same thing with Y so it's the difference between X the X Valu is the difference between the Y value values and the distance between and the difference between the Z values all of those values squared and added together now the actual distance formula would then take a square root of all of that but I'm going to not do the square root thus this function is called distance squared I'm calling distance squared and so I can just change this to this and then what am I checking I'm not checking against the threshold anymore but I'm checking against the threshold squared and now I don't have any square root function which will make the code run a little bit faster and this could also I could eliminate having to square it by just like using the value that's already squared but I'm making the point here so you can see this works exactly the same way same exact math but I've eliminated a square root okay now that I've done that let's start moving on to thinking about um thinking about how I can uh sorry how I can do this Frame differencing okay so first thing I need to deal with is the fact that I have this capture event right in a separate thread the video library is calling this event function capture event every time there's a new image available from the camera video. read here's a new image video. read here's a new image video. read here's a new image so what I need to do is right before I get that New Image let me copy the previous image to save it so I have the previous one and the current one so what I want to do is add actually a p image object I'm going to call it preve for previous and then what I'm going to do here is say previous previous equals create image and I want it to be exactly the same dimensions as the video and I want it to be an RGB image so this is making a blank image in processing and then right before I'm about to read that image I want to say previous do copy the video and then uh the copy function in processing says take what the what take the pixels in the video and copy them to this particular image but you can do all sorts of crazy stuff like you can take a little bit of this image and copy it here and stretch it out but I'm not going to do anything that interesting I'm literally just going to say copy the whole video onto the whole uh previous image so I'm giving it two rectangles and so and the other thing that's probably I worth doing is saying update pixels so this now I should have previous and the current video so if we run this let's just run this to make sure there are no errors my shoe is untied oh look I have a knee I've never I don't think I've ever shown my knee in any of these videos before and that'll get edited out um okay so you can see this is still working nothing's changed but behind the scenes there's this previous image so what I want to do now actually is change what I'm doing oh and I'm um I think I might have messed up by not saving as let me do this right now uh uh um uh motion detection so what I want to do right now is actually look at every pixel in the current image and compare it to the previous one okay so um I'm I'm going to lose this idea of a track color because I'm no longer uh tracking a color and instead what I want to do here is I want to get not only the current color but I want the previous color which is from the previous image and I'm going to call that R2 G2 B2 and then I can check the distance between those I can check if they're less than some threshold um now this is a this is a difference threshold how different do they have to be to be considered motion and I'm going to leave all this average stuff in here because I'm going to use that in a moment but just so you see it right now what I'm going to actually do is say uh load pixels and uh in here I'm going to actually just draw to the pixels array of the display itself and I can use that same location and if it's a motion pixel I'm going to set its color to white otherwise set its color to Black and then at the very end I'm going to say up update pixels so oops uh we don't have track color anymore so now I'm going to run this and take a look at what happens come on video come alive oops okay we got an error previous color equals previous pixels location now where did I miss ah I never said previous load pixels so because I'm going to look at the pixels of that previous image just like I'm looking at the pixels of the video got to actually call load pixels okay let's run this again there's a lot of waiting here come on video ah I still have an error uh what did I miss there uh array out of bounds exception I don't see why I should have an array out of bounds exception I make the image exactly the same as the video size I copy it all right let's we're going to do some debugging here I might edit might maybe edit the debugging out I'm not sure yet uh let's look at these particular values oh you know what's going on it takes a while for the video to be ready that's weird really shouldn't matter though because ah the previous video why is that not oh you know what this is uh interestingly enough the video's width and height does not exist yet here I just realized that so because in setup um uh in in setup uh it it hasn't really happened until here so I right now I'm just going to just to confirm that that's the case I'm going to hardcode these values in and that that should fix it but um then we might think about like a different way of doing it yeah so that's going to uh fix the problem except I don't see anything happening okay let's see here uh okay hold on I this let's make an edit point at some point earlier and I'm going to to uh because let me let me just figure out a couple things that maybe I miss missed because I have a feeling that um my order of operations is off uh you know because let me just do this for a second and let me also uh do this come alive oh there we go so I can't tell white is does it think every pixel is really different oh this should be greater then right if it's greater than that make it white otherwise black but it thinks that every pixel is not different so I think I have I'm doing I knew this would be a problem the problem is that I'm reading the image and copying the previous one but I'm doing that separately from what's happening in draw I know I could fix this with just saying um let me just let me confirm that this is the issue to not use capture event just for a second so I should say video. read and then at the end I need another let me get it working and then I will uh continue that video tutorial knowing how it's going to work oh no no read down here sorry now it's still okay good that's interesting so maybe I need hold on let's just do something so what's going wrong here how we doing TimeWise okay so there's definitely something I can you see if there's a delay one frame delay I can't tell uh hold on let me just let me check one other thing let me only if the mouse is pressed let me do this copy ah so this isn't even working okay so something else is wrong uh let's see that's good oh how is this still in here take this out uh if distance is greater than threshold times threshold okay hold on if distance is greater than one make the pixel white I want I must have messed up this function let me use let me use the um the regular one for a second try that debugging I need my debugging music yeah so okay so why are we not getting uh I forget about this for a second do I have something wrong with my pixel stuff oh I never said load pixels for oh yes I did here terrible error do you guys see it now there it is I copy pasted it but I didn't put the previous color in there okay that's good R2 G2 B2 is my name uh yay okay oh very slow very very slow why because I'm using the okay let's fix a bunch of things let's go back get rid of this put this back in okay I'm going to walk back to what I had previously everything's different save okay now this is working it's just so by the way this is just showing the pixels that are different from where it started and I can free frame it this is actually quite useful to show um which maybe I will but let me get back to what I had before see if I can uh there's a certain way that I prefer to write these examples and I just want to see uh if this will work this way and I might I might have the issue that I think I'm going to have but this is this is what I had previously when I started debugging uh okay I didn't have this uh let's see here look at that so oh wow interesting why there was like a lot of noise for a moment at the beginning but now it's doing what I expected it to do um okay what was all look at this people doing strange things software differ okay but I could also change the threshold so oh because of the threshold so let me give it a kind of reasonable threshold of like uh okay um okay so back back back sorry everybody thank you for your patience um let me just start off with the threshold to 50 video load pixels I can't um I think I didn't have video load pixel or previous load pixels okay so the thing that I need to show this is what I had wrong so I'm going to put that back and I also I had this by accident which is fine and I don't need these there although it's nice to sort of have those for reference okay um oh and then this was this was the issue okay okay I'm G to come back the I'm going to come back yeah the noise is due to the auto white balancing when the with but also just that threshold was so high okay I'm going to come back uh into that tutorial this will have to get edited together um and fix those two bugs and keep going oh hey hello cup okay here we go back after a moment of debugging maybe I need a to give it a little space there in case it's harder to edit let me do this again back after a moment of debugging there are two key issues that I had in my code um that caused a lot of problems number one is something that's a little bit of a a Nuance to the um the way the processing video library works but the video stuff is happening separately behind the scenes um and by the time we get down to this line of code the video actually the camera hasn't like opened its connection yet so the video width and height doesn't actually exist so I could be smarter about how I create that image but I think just to get this example working right now I'm just going to hardcode in the width and the height I know that my camera is giving me a 640x 360 the image so I want my background image to be that as well the other thing that I didn't notice I had as I went over here is right the current color is from the video the previous color is from the previous image the previous frame but I want those red green and blue second values to be not from current color but from previous color so I've got to I've got to fix that and now that I have that the other thing that I think might be necessary maybe it doesn't matter oh I might have not had this in there so I need to also make sure that I'm loading the videoos pixels and the previous uh pixels and so now we should be able to see white pixels wherever there is no motion meaning the the the pixel is the thread the distance is less and and black pixels where there is motion so let's take a look at that and let me try to zoom in here so you can see what's going on come on image so you can see it's very very white and now you can see if my arm is very very still there is no motion but if I move my arm the pixels are black you can see around the edges and I can kind of walk in and you can even see like if I move the Tshirt around uh you could see this and this would be a good time to see what happens with some dancing motion dance detection okay uh I was I thought you weren't expecting that if you ended and now you might be sorry you're watching this video okay um so there's a couple more things I want to do with this number one let me just show you something interesting about this I I sort of actually also weirdly feel like reversing that so let's see the white as the black as the background and white pixels otherwise um but one thing I want to show you is I'm actually every time there's a new image from the video I'm copying the previous one but I could also by the way say hey let's take this code and just add it in mous pressed so what this is doing you'll see in a second is as this runs speed up here you're going to see uh it's all white I could click and it's now it's all black I'm going to click again there's a lot of Auto white balancing going on you can see here that now it's just showing me pixels that are different from the background because it's memorized the background you know another way that I could make this a little bit more clear is at the end here I could draw the video and draw the previous one I'll make them kind of small at the top this is going to make things a little bit more clear are you running Run come on computer vision time so you can see here now this is what it's comparing it's comparing you know this image up here to the one on the right and if I go like this I and then I move you can see that's been out unfortunately the camera Auto white balance so if I had a camera that didn't Auto white balance you can see I could come back into my spot and try to find it oh look I can't get there I oh there I am no okay anyway you get the idea so I could be out of the frame and save it now it's the background now that cup is shaking it stopped shaking save it again and I can move my arm in and you can see I'm getting a really nice silhouette so this is the kind of thing you can do also for for getting Silhouettes but you want good lighting it really helps to have a solid colored background you don't need a green screen but certainly that's helping the cause here but really you need a camera that's not going to do all this Auto white balancing stuff you can see how it how quickly it changes okay let's add one more thing to this now which is that remember how we were looking for the average location of all of the red pixels well I can now do exactly that here I can say anytime you find a motion pixel a pixel with a distance greater than some threshold then also what I want is to see that particular pixel and I'm going to fill it white with a black okay so let's make it um let's make it some like a pinkish color so we can really see it uh and maybe make it a little bit bigger so this is going to be interesting because what I'm going to do is look for the average area of motion and let's see what that gets us oh I didn't mean to have oh whoops uh let me let me do a couple things here let's take these out we don't need to look at those right now and let's put this back in capture event so we're always always getting that previous frame awkwardly standing while waiting for camera to start okay but you can see I'm to move out of the frame and I can put my hand in here you can see this is actually doing a pretty decent job of hand tracking because you know it's not perfect by any means but you get a sense because my hand is the thing that's moving now if I stop moving it's going to completely go away but I could store that one thing Improvement I could make to this that I'll uh is I could keep that location as a global variable and if there isn't any motion I could stay where it was last let's add that so let's make that let's make this average thing a global variable and over here what I'm going to do is only only alter it if there are at least let's say uh 20 pixels that are 20 motion pixels otherwise it'll stay where it was before and let's always draw it so this is just a slight Improvement to this that I think will help uh make it feel like it's doing something more along the lines of what you might expect or want it to do so you can see I can move myself around and uh now 20 I guess is not that much I guess there's so many pixels there let's just say there are 200 I don't know what's a reasonable number there's probably you know there's millions of pixels so these are probably like such incredibly low numbers that I'm using um and you can see as I move anyway you could play with these values and get something that's doing something slightly better but you can see the other thing that I would do here and since we're here is I'm going to um I'm just going to add uh a lurp x a variable called lur I'm going to show you that you can use linear interpolation I have a whole video All About lurp that you that I should link to from here but I can say also the thing I can do is I can say let me actually take a alert point and always say uh and say lurp x equals lurp uh between average X and lurp X and actually let me I like to say lurp X first I think uh and then 0.1 so what I'm doing is I'm always just going 10% of the way towards the new point which is actually going to smooth things out quite a bit and I encourage you to uh look up my video about the lurp function which would kind of explain how that algorithm Works a bit more uh and here we go and that camera just went off but uh I'm going to turn that back on and so you can see the sort of final result that we have here and the final result that we have here is that I have something that's kind of smooth as as I move my hand around where does it go to why does it go somewhere else I don't know I have a bug in my program where it's like uh and going somewhere else I kind of want to fix that um oh because it's adding all this stuff up oo okay uh yeah yeah yeah so this needs to be average x i it's adding up all those points even and but only only dividing it by count when it gets about 300 so I get that like added thing when it's less than 200 that was terrible so uh what I want actually my Global variable is to be uh the actual uh I'll call this motion X motion Y and I actually only want to update those motion X and motion Y and then I want to lurp that oops and this is now I think going to be a final version of this that works correctly so I was always adding up all those values for the average but then not calculating the average and so that was making it go way off the screen and you can see now I'm going to move off the screen and you can see I have sort of a very rudimentary like you know as long as I'm moving my hand around and I don't come in the scene I'm kind of getting uh it's it's kind of following me in a sort of like nicely interpolated way okay so you can see that opens up a lot of possibilities if I'm in here you know it's going to kind of follow me around I could turn my music back on and I can do the pig dot dance I am a magic pink dot manipulator okay that's uh hopefully you turned this off and you didn't have to experience that um so this is now a second video where we've looked at um kind of how you can use motion frame differencing to sort of track a point around the screen and in the next video I'm going to return back to where we were tracking just this cup and looking for the average amount of red pixels to actually think about this cup as a blob so that if I add a second blob second blob we can track both of them individually okay thanks for watching goodbye uh okay uh all right how are we doing TimeWise it's 107 this has been an hour and 37 minutes I want to do the blob detection so I think in terms of my list I'm going to do the let me go back as I screwed up and let me get um um let me open up the I have frame different motion detection single average Point color tracking I screwed this up and I started messing with it right yeah so I need to put this back to what it was that's frustrating uh but I don't think yeah I don't think I went that far with it uh well I added the distance Square thing but that's fine I want that anyway okay great so I want to do blob tracking so this is going to be and I don't need the previous I do want the TR track color I do want the threshold uh I don't need the previous uh okay save this so I think this is going to be I'm just checking the chat will this lesson be okay so people ask will this lesson be available offline so uh for people who might be joining late what is this who am I where are we in the world Carmen San Diego no I won't sing um you don't want me to sing uh so I'm this is a live session where I'm kind of stumbling my way through these tutorials this live entire live session will be archived on my YouTube channel um the uh then uh edited version so far I've done two tutorials a average uh so the edited versions of these tutorials will then become Standalone videos also on my YouTube channel and then finally oh that's it oh and I I do in the chat it is true that I do have a Google drive folder with all of the the Raw videos that I give people who subscribe to the patreon access to honestly if somebody was at a school somewhere in the world and they wanted to use the videos but they can't get a good connection to YouTube I would be happy to share them um so you know if if you have a compelling reason why you need the video files I'm open to that okay um okay uh Oliver mentions I need to separate the average XY local locally and globally uh I guess I figured that out um okay so um let me see here I think uh I want to get back to this now the blob thing is much more complicated and what I'm going to need to do is actually there's there's a whole algorithm that I need to cover and basically the way I'm going to do this I want to talk through this for a second and then I'm going to uh do it again um what I'm going to do is let's say this is the scene and there are a bunch of blobs I want to have a blob object I think I I think I'm actually ready to just record this um and what I'm doing is I'm looking for any pixels of a given color when I find the pixel of a given color I check to see if it's within a reasonable distance of some other pixel that I found if it is those things join together as a blob if it is not then it makes its own new blob and at the end I have a whole bunch of blobs and I look through that list and maybe I throw away blobs that are too small oh this is going to be easy I'm just gonna do it I'm ready for this oh this is going to be exciting I can't believe I'm about to do a blob detection from scratch tutorial this is great I'm very happy about this I'm gonna be very glad if this works okay oops I'm in the wrong frame okay drink a little bit of this nice delicious tea I believe I cycled the cameras I'm going to have this point over here to start move this up here okay now I need to save this as blob tracking and I'm not going to do oh look my lips are a blob um okay uh I think I am just ready uh someone asked what is update pixels yeah so it might work without update pixels processing is kind of funny in this way my point of view on load pixels and update pixels is you know first I just put them everywhere like if I'm about to look at the pixels I call load pixels if I'm about to change the pixels like with the copy function I call update pixels after and then later I might try commenting out those lines and see if it's still Works anyway but technically speaking processing doesn't give you access to the memory of those pixel colors unless you first call load pixels and it doesn't actually change them in what it draws until you call update pixels and this is for the display window and for individual images as well okay jumping jacks I'm losing my energy break dancing okay up uh yep pull the muscle okay we be fine okay here we go the last last not I think this is the last computer vision topic I will tackle today and I'm very excited about it then we will do fireworks and then I will say goodbye for unfortunately for a little bit more than a week don't don't be too sad trust me there's more to life than my weird live YouTube stream thing okay anyway okay here we go I I'm having a paranoid fear that I didn't turn this camera off and on so I'm just going to do that very briefly okay hello welcome to yet another computer vision tutorial video in this video oh my God I'm so excited I'm going to show you how to program from scratch not from scratch but how to program the raw algorithm algorithm for blob detection yourself and what do I mean by blob detection so in two videos back I made an example that finds it's over here what no it's over here where is it okay over here that finds this cup that I have taped to my green screen behind me by looking for the average location of all of the red pixels it finds and this works perfectly beautifully nicely however there's a problem if I add a second cup look at the average location is in between those two things and I want to be able to track them individually as individ ual blobs so how do we do that so I want to talk about how this algorithm works so let's what what's going on here there is a an image that the camera is seeing it is seeing two red cups taped to a wall I don't know what what my life has become that I'm taping plastic cups to walls that are painted green but that's just what it is okay so it's looking at every single Pixel and it's asking a question is this red and you know you can insert something else there is this a bright pixel is it a dark pixel is it a blue pixel you know you could be using a a connect and depth tracking is it a close pixel is it a far pixel there's lots of things you could substitute for this question but for my demonstration of the algorithm it's going to work nicely if I ask is it red and so the answer is going to be no is it red no is it red no is it red no no no it's a very negative program just no no no no no no no no no but eventually at some point it gets to over here and is it red and it's like yes yes it's red so if it's red then we have to ask the question is it did I find a red pixel before or is this a new have I have I found the first red pixel and as soon as it's find the first red pixel it has to make a blob so the blob is going to be a Java class an object which is a blob it's going to say ah I found the first red pixel so I'm making a blob object and I'm going to call this blob a and blob a has an x a y and a width and a height it's like a little rectangle now what happens next oh it goes to the next pixel is it red yes it's red yes it's red is it near one of the existing blobs it is so let's just put it in Blob a and maybe blob a gets a little wider then it looks for the next pixel oh it's near blob a put it in Blob a make a little wider it keeps going then it says no no no no no finds another one oh it's part of blah B no no no no no no eventually it gets on here and it finds another yes well is it near blob a and it suddenly realizes no look at that that distance is greater than some threshold it's time for me to make another blob so it's looking for all the red pixels and finding the clusters of red pixels near each other within some that are far enough by some threshold amount so that's the algorithm we need to program and the blob I'm going to think of really just as a rectangle it's going to have an X and A Y and it's going to have a width and a height okay so let's see if we can make that happen here we are over here oh oh was I not was I on the Whiteboard I think I was on the Whiteboard that whole time somebody will tell me if I wasn't uh okay that was weird you know I was okay anyway I'm back hopefully I was on the Whiteboard um okay so now what do I need to do okay the first thing I'm going to do is I'm going to make a blob a new tab in this processing sketch okay good and I'm going to give it an x a y and a width and a height and then I need a Constructor and uh the Constructor when I make the first blob it gets an X and A Y this is tricky so what's the x is going to be that X the Y is going to be that Y and the width is going to be a width of one and the height is going to be a height of one okay great so that's what happens when I first make the blob oops now let's think about this so now let's let's go back to this algorithm and I don't need what do I need H I need to have some sort of variable list of blobs so I'm going to make an array list of blob objects now if array lists are new to you it's like a flexibly sized array so I can start with none and I can add more and that sort of thing and this is something that I encourage you to look into and one thing that I'm going to have have to do uh I lost my tra of thought okay one thing I'm GNA have to do is say uh blobs do CLE so this is something that's going to be really really key and I'm going to bring this up again later but what I'm look this algorithm is going to do is just show me a snapshot of blobs at this moment in time and then a snapshot of blobs at the next moment in time but it's not going to know which blob is which over time but I'm going to get to that in a future video talk more about that in a little bit so I don't need this average location anymore I don't need this count this was all for my previous example but what I'm doing here is what happens as soon as I find a pixel that meets this red threshold well what I need to do what I'm going to do is just say blob B is a new blob at that particular X and Y and then I'm going to say blobs do add blob B so this is the idea anytime I find a pixel I make a new blob only I don't always make a new blob right I only make a new blob well when would I make a a new blob if blobs is empty then I make a new blob right so if there are no blobs and I found a pixel it has to be now otherwise and I'm going to do this a slightly different way but um another way that I could do that is for every blob let's add a Boolean variable saying found is false so I want to Loop through every blob and say is one these blobs my home so if there are no blobs by the way if not found then I add a new blob to that array list so this is the algorithms over here I start by assuming well I haven't found a blob that's a home for this pixel but now I'm going to look through all the blobs and see if one of those is a home if after that Loop which I haven't written yet I still haven't found one then this this pixel is a new blob okay so the very first thing I need to do is say what is the distance or let's let write it this way if B contains or is near let's write a function called is near I think I I think actually in an example that I saw it was called that um if blob is near this particular XY point so that's one thing I can do to check what's the distance between this XY point and this particular blob so let's go to the blob now and say uh is let's write a function that's a Boolean function it's got to return true or false is near and it gets an X I'm going to call this like uh I just use xcore I I should come up with a different somebody suggests a better variable name but um if this particular XY point is near I need to either return true or false so the first thing I need to do is what's the distance between XY and XY so um I'm going to call this like PX for like pixel X and let's do that up here too I don't like this underscore thing it looks so obnoxious no I don't have any no not that I have any problems with underscores they're underscores are lovely nice characters but I'm going to call it PX for like pixel X but actually here's the thing I actually want to test I think I want to test if it's near the center of the blob not the corner of The Blob so one thing I'm going to do is say CX C CX for Center X is x + W / 2 and Cy is X Plus y + h / 2 that's finding the center right X plus the width no no that's not the center X plus the width divided two don't be ridiculous X Plus width divided two thank you very much y plus height divided two that's the center right if you have a rectangle X plus the width of the rectangle divided two that's the center location so I want to know if that pixel is within some distance now uh um again I could let's use distance squared to like not oh don't I have distance squared in this example right here there it is oh but it's only that's a 3D distance let's let's make a 2d version of it I have this from a previous example where I was using uh color by the way did you know in Java you can just have the a function with the same name as long as it's two different arguments two different sets of arguments it'll know which one to call that's called method overloading okay so I'm going to go back here and I'm going to say if the distance is less than some particular uh threshold I don't know what's a good distance let's say 50 pixels away if it's within let's say it's within 25 pixels then um then return true and this is definitely a variable that I'm going to want to make a something that I can change otherwise uh return false okay so now what I'm going to do is and I don't oh all this stuff is irrelevant this was from my previous example so if blob is near XY then uh first what I want to do is blob add XY I want to add that point to The Blob and then I want to say found equals true and then I'm going to say break now there's a little bit of a problem here where I probably should check all of the blobs and find like the clo the one that it's closest to but I'm not going to worry about that right now I'm just going to do this Loop to find I'm just going to find the first one so now I need to add that XY so here I need to write a function add that pixel X and pixel y so what does that do well the thing that I need to change is I need to um I need to check oh this is tricky here let's think about this for a second I'm going to use a diagram there's probably a smarter way I could do this maybe somebody in the chat or will give me a suggestion but let's say at some point I have a blob like this um and it has an X and Y and it has a width and a height so the first thing I need to figure out is is that pixel inside this rectangle is all right if it's inside that rectangle I don't do anything if it's over here I suddenly want my rectangle to be like that if it's over here I suddenly want my rectangle to be like that so you know what I think I want to change about my blob I'm going to change something I'm going to have the blob instead of having x y w I'm going to have Min X Min y Max x max y I'm just going to keep track of the top left and to and bottom right corner of the blob and actually that allows me to have this argument be XY and I'm just going to say when the blob starts minimum X and the minimum Y and the maximum X and the maximum Y and I could have called those bottom bottom bottom XY top XY but anyway all those are that now when I check if it's near now I am getting the average so I'm going to say uh minimum x + maximum x / 2 and minimum y plus maximum y / two the distance is still the same thing between this x y and then the add function is going to be easier because what I'm going to do is I'm going to say minimum x equals the minimum of X and minimum X this is a processing function minimum that says if x is less than minimum X whichever one of these is less use that one so I should be able to just do this and the same thing here like this so I just want to get I could have written if statements like if x is less than minimum X then the minimum X is now X that sort of thing but this should do that trick this should add the blob okay and then by the way what do I've got here I've got everything I need to draw a rectangle so I'm going to write a function called show and I'm going to say uh stroke zero fill to 55 and I'm going to say uh just stroke weight two so I make sure it's kind of thick and then I'm going to say wrect mode Corners by the way in processing the rectangle mode Corners allows you to specify the top left and the bottom right of a rectangle and those are the values I have so I'm going to say rect Minx Min y Max x max y so I added a whole The Blob does a couple things it checks to see if a pixel is near it and could say true or false it also can add that pixel to expand or contract its rectangle and then it can also draw that rectangle and now in this particular algorithm this is it I think I've got everything here if it's near am I if it's near add that point I found it otherwise add a new blob and then at the end here after I go through all the pixels I should be able to go through all of the blobs and say blob. show okay I'm sure I missed something but let's try running it the variable PX does not exist uh oh right because this is now X and Y uh oh Max x equals x I have an error in the chat someone's telling me there's an error in the Constructor Max thank you okay so this was a big error that would have caused me a major problem okay here we go let's see what I've got here now oh what is that craziness oh look at this it's finding zillions of little tiny blobs oh look at all the little tiny blobs little tiny blobs look find some more little tiny blobs so uh I think my distance threshold needs to be a little bit bigger 25 pixels so that's is something I need to uh make um make a variable so I want to make this a variable let's just do this right now um oh right because this all the way is distance squared so it wasn't so crazy so I'm going to make a uh so this is the color threshold and I want to make a a distance threshold and I'm going to say that's equal to 25 just having these be the same and first of all this needs to be distance threshold time distance threshold and I'm going to add a uh just right now I'm going to add key pressed function and I'm going to say if uh the key equals a then distance threshold Plus+ else if key equals z and this is a really quick way for me to just adjust that uh minus minus and then uh print line distance threshold just so I can uh modify it on the Fly here we go come on everybody here come the blobs here come the blobs blobs the musical here oh yeah much better so we can see here now Tada now this is still getting multiple blobs and I can uh tweak things uh for example I should probably click on the color look my lips are a blob my fingers are a blob but you can see um one thing I one thing I can do here let's zoom into this is I can consider Blobs of a certain size to be useless so I can uh one thing I can do is say here um right I can say if blob do uh uh size oh if b. size is greater than 100 for example I can only show right now blobs that have a certain size and there is no size function I could write one and I could just say uh you know return Max x minus Minx * Max y minus Min y like the the width and the height of the blob so to speak I multiply them together and you know I could say uh I could you know they have to be greater than like you know 500 this would get rid of small blobs right oh and that threshold yeah yeah I meant to I meant to by the way so you know this is also what I can change here let me add this second one and you can see how nicely this is working now my arm is BL let me go over here and you can see you can see what I'm getting now I could still uh that threshold you can see that there's two blobs up top there let me make that threshold if I keep making that threshold there we go now it's just one blob and again I could do things like interpolate or whatever and let's do this and here we are and oh oh boy we have to do something ah no Bobs Bobs I'm being eaten by The Bobs that's not what I meant to do come on give me some red I am blob man okay anyway whatever they get the point so this I think um stop music excuse so I think I've shown you the basic idea of a blob algorithm there's I think a bunch of things I could improve here one I could make a nicer interface to kind of tweak these thresholds of color the distance threshold you know it might be nice to sort of draw the rectangle blob rectangle with some Alpha so I could see what's behind it um you know one thing that's really kind of uh important about this to mention I'll mention this again is um come back to me code uh is that um whoops it's funny it worked much better without me clicking on it anyway um is that there's no sense of an uh uh I should so by the way this this distance that threshold should really be like 75 to start with and let's make this like uh let's make this less I don't know what I'm doing here um so one of the things that's really important is let's say you wanted to have an image follow this cup and an image follow this cup look it's working beautifully right now an image follow this cup and an image follow this cup like what if I wanted to put a cat over here and a dog over here well it's not I'm not always going to you know I might like this blob is going to be found first because of the way I'm iterating through the pixels so this blob is always going to be blob zero but now this blob is going to be blob zero this cup that is it's blob zero but it's this other cup so these blobs do not there's no way these blobs don't have ID numbers there's no way to track them Over time however that is something we could add so I'm to show you how to do that boy this is working so nicely I'm so pleased all right oh I look I I could put Mickey Mouse ears on myself I need anyway I'm going to go do this on my own time you don't need to like watch me do the weird stuff with The Blob but um I'm going to do that in a future video let me say one last thing so ultimately you know if you want to do this and I'm going to show this in in another video there are ample sets of processing libraries there's blob detection there's open CV there's a lot of processing libraries that will do this there's also something that I haven't implemented in this algorithm which is actually to find the Contours of this cup I'm just finding kind of the minimum maximum area of The Blob so those types of things I would recommend uh thinking about Contours but and and so I'm going to show you at some point how to do this stuff without writing all the code for yourself but just use a library that does the same thing but it is interesting to see one thing that I think is good to see about this is a lot of the libraries are built in just to look for bright or dark blobs and so you would have to apply some type of brightness threshold to the image first before passing it to the blob detection Library which would be fine but custom baking it yourself you can just like look for a specific color like red okay thank you for watching this blob detection video I'm hoping it was useful and I'll see you in the future computer vision videos goodbye uh okay um oh yes uh Oliver makes a good point which is that I could merge there's H various optimizations I could do here like merging the blobs if they overlap um but yes um so I think that's good for computer vision for today let's go look at my GitHub issue and let's see what I made uh rainbow topics uh issues uh sort by thumbs up computer vision okay so what did I do let me edit this I did did um average Point let me zoom in here so you guys can see I did average Point tracking I did motion detection frame differencing and then I did blob detection algorithm so we can see here what's on my list I don't know if any of you want to um so this is on my list next would be looking at a library like open CV for doing this looking at some of the stuff in JavaScript to see how it works and performs I want to show you how to like keep track of blobs over time uh in addition to libraries we should look at open t other tools op tsps and uh Community core Vision CCV I should look at those uh face detection face detection with persistence saving faces to files is kind of an interesting thing more stuff in the browser Kyle McDonald has a great resource for this so I really only got scratched the surface but you know being here for two hours I think to have done three solid tutorials on computer vision I feel pretty good about that um okay uh so anybody see anything that they want to type in the chat that I'm missing from this list but actually better yet just go and uh write a comment here add your comment here and I'll add it to the list okay so I'm just about finished for today I'm feeling like I have to I want to do the firor Works thing I have a question for you guys in the chat so let me open up my fireworks example uh fireworks fireworks fireworks here it is so this is the example and so um and I'm going to also open up maybe uh examples uh topics under simulate I think multiple simple particle system oh I messed something up I got to fix this oh um I gotta I gotta file a quickly um I got to file a GitHub issue on processing uh or actually somebody watching file this go to processing. docs and um I was replacing a lot of get functions get with vectors changed to copy so this used to be get but I changed it by accident to copy but it's calling get from the array list and it shouldn't be so I need to go through the examples and revert some of them back somebody file that in processing. docs shiftman me and your dri or or better yet just do a pull request to the uh example but um I will I will fix that later but okay so I have a question for you guys which is I have two two ways I could do this one is I could from scratch from nothing I think I could do this with in a half an hour or less make this fireworks example from scratch the other option is I could take an existing particle system example and adapt like this one and adapt it to be the fireworks so I wouldn't be doing all the code from scratch um I don't know which would be more useful you know certainly I would do it the adapt way but I wonder if there will be people who might actually just sort of end up at this fireworks video from nowhere and actually having the whole thing might be useful let me know in the chat what you think boy you guys in the chat are really quite far behind me to make your own particle system so to do it from scratch scratch two votes for scratch scratch three votes for Scratch all right scratch Yeah scratch Yeah scratch okay scratch would be nice scratch oh everybody okay we're gonna do it from scratch that's good to see okay um so don't save that uh the other question is should I do this in JavaScript I think I'm going to do this in processing because um then I can extend it into 3D more easily and um then I'll make a JavaScript Port of it yes little scratch I do it from scratch hopefully I I'm gonna make a JavaScript Port of it keep me honest about this like bother me about this because I think it'll be nice to have people make their you know JavaScript p5js fireworks things in the browser for Fourth of July oh everybody now there's voting for P5 JS maybe I should do oh I have an idea I'll do it from scratch in p5js because yeah I'm not going to do it in scratch so that's a great idea I'll do it from scratch in p5js since I already have the processing example done and then what I'll do is I'll come back to the processing example and extend it to 3D Oliver always was the best suggestions okay how about I do it in scratch and I'll do it in C which I've never used before in my life or python which I just don't know at all okay uh um so um let me just coding rainbow fire um coding challenge fireworks okay so I need to get set up for a second did you guys hear that something fell behind me um super shape test that was using recent P5 where is that coding rainbow super shape test here it is and I'm going to call this firewor uh coding challenge fireworks uh P5 and I want to open that with the atom editor um I'm going to erase everything here and I'm going to do create canvas uh function setup and and I'm just going to give myself a little bit of something to start with uh and then one thing I'm going to do just um I think it's okay for me to start with the files I know I'm going to need a particle. JS file and I'm going to need a um firework DJs file okay uh and then in index I want to make sure I am referencing particle and Firework okay and then I need uh I need uh CD desktop CD coding rainbow ah CD coding rainbow um run a local server and minimize camera goes off uh Local Host turn those back on okay and where am I fireworks hey one thing I don't want to forget is to reference a source of inspiration for me for this project is Seb Le fireworks I forget what it's called pixel pyros so uh if you're not familiar with this project um oh you can hear the sound I'm going to I was going so this is a project by um uh Seb Lee delile did I pronounce his name right Seb friend of mine wonderful guy a host of the creative coding podcast subscribe and support the creative coding podcast on patreon um and uh Seb created a project which is I believe he used open Frameworks and lasers and computer vision all sorts of stuff we've been talking about to create this uh kind of I mean this crazy sort of like fireworks asteroids kind of crazy game that happens outside take a look at the project I'm going to do you can see uh you know the the kind of little bits of similarity here I'm going to do a you know quite a simplified version of this you can see there's a lot more thought in terms of the graphics the design the trails all that sort of stuff but um anyway so I'd encourage you to check out that it's a wonderful project uh and I'm going to I just wanted to mention that as a kind of like where I took sort of like the visual idea for making this from okay okay uh now let's see here so I can close that uh and I think I am just about ready now Index close so sketch particle and Firework okay all right are you ready and a one and a too hold on I need to give myself some energy here okay it is time for cutting r cing okay I'll stop doing that now okay now we are ready uh to go oh I'm feel a little bit dizzy and laded from that okay it's very hot in here let me turn this fan on for a second and now it's time for for firks okay all right I'm stoping using myself with my own entertainment value and oh I got I dizzy again everything's gonna be fine um okay I'm gonna I'm gonna start this now uh okay let's see um let me run this actually one thing I want to do is let me just do this let's try this oh hold on I'm GNA fix my processing example to be yeah it's silly to have the background 51 it should be zero and uh let's give them this should do the trick there we go okay I think I'm ready now fireworks okay oh you guys everyone's asking personal questions about me in the chat um I guess I can Mar I am married I do have two children they are uh four and seven years old actually 8 years old now and almost five okay uh here we go I ready I'm going to do fireworks coding challenge did I I recently cycled the camera I'm just going to do it again I don't think I'm going to need the I don't think I'm going to use the Whiteboard at all for this so okay uh okay here we go oh oh oh let me just fix one more thing sorry everybody I'm G to get to this now just fix this camera ah come on camera there there we go okay uh last thing I'm going to do today coding challenge fireworks happy 4th of July it's been two hours and 20 minutes uh this should take about a half an hour or less and then I will be saying goodbye for a while but um that sort of thing okay okay uh here we go hello happy 4th of July if that is a holiday that you celebrate for H never mind forget about that it's too like I'll just do fireworks I don't care about the fourth I mean I it's a nice holiday fine whatever but we are a global community and I don't need to be so focused on holidays specific this is just a fireworks video hello and welcome to another coding challenge I want to put a sound effect there I don't have my sound effects up forget it okay here we go I'm really doing it this time hello and welcome to another coding challenge in this coding challenge I'm going to program a fireworks simulation I will try not to make ridiculous sound effects during it um let me just start I like doing that but I don't okay let's start one more time you know what just hold on uh I think they should happen a little more often okay last time hello and welcome to another coding challenge in this coding challenge I'm going to program a fireworks simulation um and I'm going to program it for from scratch in JavaScript in the browser the version that's running actually behind me is a version that I've made in processing a javab base platform the code for the one behind me and the one that I will make in this video will both be available in links in the description and at the end of this video I I'm hoping to return back to this processing one and also uh turn it into 3D fireworks this might have a threedimensional like quality to it but it's really just two Dimensions um okay so here we go so let me minimize this code which was the processing version get rid of that and I have a blank JavaScript can HTML 5 canvas and I have some JavaScript code so the first thing that I need to do is I need to have uh I want to have this idea of a particle I need to have a particle so I'm going to just write a particle uh a Constructor function uh where oh you know what I'm going to do is I'm going to the particle should have a position which will be a vector the particle I need to use physics here it's going to have a velocity which will right now be just zero and the particle is also going to have an acceleration so I'm going to kind of custom bake a physics engine this is the same sort of model that I use in all my nature of code tutorials and videos about physics but I'm and I'm just going to kind of bake this from scratch really quickly and then I'm going to add a function called update and that function does what it takes the velocity and adds it to the position and it takes the uh acceleration and adds it to the velocity now where does does it get acceleration well that I need to have a function I'm going to call it apply force and in that function I'm going to get some sort of force and I'm going to add that Force to the acceleration this is the idea of force accumulation Force equals mass time acceleration or acceleration equals acceleration equals force equals masstimes acceleration or acceleration equals force divided by mass but I'm going to eliminate mass for Simplicity so acceleration equals force are all the forces of a moment added together so once I do that I also need to make sure that um after I update the particle each frame that I multiply its acceleration by zero to sort of clear it out because the acceleration at each moment in time is going to start with zero okay so now I'm kind of got this both last thing I need to do with this particle is I need to have a function I'm going to call it show which draws just for Simplicity it just draws the particle at um where where where mix it as a point this position dox and this.position doy and what I'm going to do just for um one thing I learned recently about p5js which by the time you watch this video in the future may not really be the case anymore but if I set the stroke and the stroke weight up just in setup and don't set it over and over again it sometimes can run a lot faster um so just to test that things are working I'm going to U make a variable called a firework and I'm going to say that firework is a new particle which lives in the center of the window and I'm going to say here in background firework in draw I'm going to say firework do update and Firework doow so I want to now go back to my sketch and see ah I have some errors so particle. JS let me make this a little bit bigger that's really big but uh particle. JS line uh number six has an error uh let's see particle D this do apply Force equals ah function is spelled with a C refresh there we go so you can see there's the particle in the center things are working so far uh the next thing I want to do is let me give let me have this particle start uh at a random width and all the way at the bottom of the window and let me give that particle a velocity pointing up so let me say its velocity is 4 pointing up me run this there we go we can see it's going up each time I refresh it it starts in a new random location and starts going up so we're getting somewhere the next thing that I want to do is see if I can add some gravity so I'm going to make a Glo gravity a global variable and it's going to be a vector that does what it points down so negative uh no pointing down is positive so zero comma I'm going to say 0 2 and then I'm also going to say firework do apply Force gravity so I'm now adding gravity to that particle so let's run this uh acceleration is not defined let's go back to the particle uh where where H this do acceleration always forget the this Let me refresh uh didn't make it very high but that's sort of reasonable so let's make the particles velocity a lot bigger like 10 okay so that's good so we can see so this is the start of our firework simulation something shooting up from the bottom and then at some point it's going to explode and make a lot of particles but before I could do that what I want to have is just have a lot of things shooting up from the bottom continuously so let's get that going so instead of having uh one single firework what I really want is to have an array of them and actually what I want is for the firework to be its own object so I'm going to create a firework uh uh function sorry and a Constructor function and the first thing I'm going to do is it's going to have a local variable which is a so I'm I'm basically going to do what I did here right I want it to have in this firework object I want it to have a particle it's going to have that particle the firework itself can have an update function and whoops what happens in the update function it does all these these these things it adds gravity and updates that Firework and then I'm going to also have a show function for the firework object and I have a I can see I have a syntax error uh which I'm going to fix in a second so the idea here is the particle right a particle is an individual particle this firework object right now is one particle but the firework object is also going to in a moment not just be the particle moving up but suddenly all the particles that explode from it so I need this object to keep track of that individual particle and then also an array of particles but this should at least get me now if I say uh um firework do push new Firework and then I should be able to say firework dot uh I should be able to say oh fireworks should be an array then I should be able say look at all of the fireworks. a length i++ and you know I could use a for each Loop but I'm choosing not to just for clarity um update fireworks uh indexi doow okay here we go so now okay firework is not defined in line six uh yep I need the as always I always forget the this dot this dot this dot I'm going to do the this dot this dot this dot this dot the this Dot Song never forget the this dot somebody compos that song for me uh and run this again there you can see okay so it happened and now what I'm going to do is I have this line of code that puts a new firework object in the array and I could put that line of code in draw and if I put it in draw over and over and over again it's just making these fireworks making these fireworks I don't want to make them that often so I am going to say if random one is less than 0.1 so every frame there is a 10% chance of making a new firework let's try that that's a little bit better so it's making them kind of randomly every so often so that's a good start and now what I also want to do is you know I think this should be a random value so let's say random between 15 and5 so that way they don't all go and so that the range might be off there let me make the range a little bit calmer let's do this so anyway you get the idea that they're not they're also not all going to just go up to exactly the same height so now we're pretty good we've got our system of the fireworks going up over time but I need to figure out what's the point where I want them to go poof and explode into a bunch of particles okay so how do I do that here in the update function one thing I should edit Point timeout I have to blow my nose maybe this okay I'm looking at the chat okay okay back um I what I need to do is I want to check something I could do is I say how do I know when the firework gets to the top Point well it's velocity is negative it's velocity is negative it's velocity is negative in the y direction now it's zero now it's positive now it's positive I wanted to explode the moment it reaches that top point so I can say if this firework dot velocity is pointing down is greater than zero is greater than or equal to zero this is the moment where I want it to explode so what I'm actually going to do is I'm going to say this. firework equals null so I'm just going to like set the firework to null so that um uh it's like that will make it disappear essentially so in the and I'm going to need some like I'm going to have to say if this. firework so I only want to update apply force and update it if it exists and I also only want to show it if it exists so let's just see you know there's lots of other ways I could do this but this is just going to be a sort of way of me tracking I could have actually a Boolean variable like exploded or something I might I might change it to that later but let's see how this works so oop H that's weird uh if this oh well that's if the Y component of the Velocity right if the Y component of the Velocity let's add that o cannot read velocity of no where did that happen ah okay well this is a issue so this little bit can go inside here like also as long as it exists there you can see now it's disappearing the moment it kind of gets to the top so that's good and what I want is when it gets to the top I want it to just go into a whole bunch of particles so I actually kind of feel like I'm going to just change this just for to be I'm going to say this do exploded is false as long as not this dot exploded fly Force if it's then say this dot exploded equals false because as long as this uh as long as not this dot exploded I I think I would prefer to use a Boolean variable uh it equals true so this should be the same exact result but I'm not doing the sort of null thing okay so I used a Boolean variable to track when it's exploded now what do I do when it explodes well what I need to do is I need to suddenly right here I'm going to just say this. explode so I want to put this in a separate function and I'm going to write a function now called this. explode and what do I need to do in this function I need to make a whole lot of particles let's make a 100 of them so for VAR I equals z i is less than 100 i++ what I need to do is say VAR P equals a new particle and where should that particle start so it's about to explode where should that particle start it should start where this fireworks position dox and this fireworks. position doy so I need to make a whole lot of these particles and now I need an array the firework object in addition to keeping track of this sort of like seed firework should keep track of this do particles an array so it has an empty array and I am now going to say particles. push P okay particles push P now what I also then need to do is and I'm going to just do this here right here what I need to do is display all those particles index i. show so oh and this has to be this do particles and this has to be this do particles in xi. show so what I've added here is the moment the particle reaches the top it makes a 100 new particles and then draws all those so let's see what this looks like oops cannot read show of undefined firework JS index 30 oh this should be this. particles. length because I don't want it to show nonexistent particles that array is only going to have 100 as soon as as soon as it is exploded let's run this again look at that that oh it made 100 particles none of which move or do anything pretty weird right well first of all why aren't they moving well I forgot something I forgot that I also should call uh here in update I should also call for all of those particles apply force uh gravity and for all those particles I have to update them so I need those particles to experience physics as well well look what's happening it's making those fireworks but they're all why what happens when you make a new particle it shoots straight up so I need to make those particles in a different way so let's look at how I'm doing that if I go back to the particle object the particle is always made with a velocity that randomly points up between 12 and8 so I could use like inheritance and have like a different two different kinds of particles that inherit but I think what I'm going to do is just I'll just add a third argument here and I'll call it uh Exploder and I'll say if Exploder I don't like Exploder that sounds violent I'm already using explode I guess uh I'm going to call it um firework uh if firework make the velocity that way otherwise make the velocity and I'm I I'm just going to do something different just so what I'm going to do is I'm going to say I want to say P5 Vector random 2D so I'm going to have any random Direction okay so if that's Boolean variable is true it's going to make it as like one of those original firework things so let me go back to this firework object and this particle it needs the last argument of true these particles um it needs the last argument is false but in JavaScript if I don't I can also just pass nothing in and that variable will have the value of undefined which will evaluate to false so this should now if I refresh this we can see that I'm getting something closer so now why are they why are they exploding in this perfect circle well the reason why they're exploding in A Perfect Circle oops I have some old notes from a computer vision tutorial is I'm giving them a random velocity which is a unit Vector all of length one so they're all going to explode out in a perfect circle so one thing I might do is just have those the lengths of those vectors be a slightly random length but and I'm not going to do this in this tutorial but you should make heart fireworks for example so what if you could figure out U if I draw a heart like this from the center vectors pointing out to the edges of a heart so you could actually or you could use you got a fireworks that display letters or particular kinds of shapes so the way that you pick those initial velocities of that explosion can really make hearts or rainbows or unicorns or whatever kind of shapes you can imagine that you might like to make so I encourage you to do that as a kind of Riff Off of this you can also notice that right now it's running really really slow so that's another thing we're going to have to fix but let me just go back to here and I am going to um where was I under particle now the other thing I want to do um is I actually want to in the particle object I think I want to keep track of this this whether it's the original firework or the particle because I want to like do other things that are different so I'm going to say this um because I also want oh you know what I'm but I'm gonna leave that for later okay so let me fix this and say um random 2D and then this. velocity multiply by something like I'll I know what I'm going to do in a second multiply by between um you know uh uh two uh one and six so now it's a magnitude is going to be scaled by some random amount let me run this again oh okay that didn't work what did I not do right let me look at this this do velocity multiply oh random a random value between one and six okay so you can see now they're really exploding kind of like wildly there's also two many of them so I can't really see what's going on that well so I'm going to go back to the sketch and make them like quite a bit less often okay so there's one thing they don't look so much like fireworks one thing that happens with a firework is it kind of like bursts out and it like really like slows down almost as if there's like friction or air resist like an immense amount of air resistance in the air so I'm going to add that uh and a quick way I can do that is in the update fun but I only want those to be for the Noni I'm calling the thing at the bottom the firework for the nonf firework particles so I want to say if it's not the bottom firor particle then I also want to say this St velocity multiply by like 0.95 so I really want its velocity to slow down so let's see how that looks uh and let me make that a bit more extreme just so we see that that's really working yeah so you can see ah so you can see that that is working now the other thing you notice is those fireworks they're not fading out at all so I really think this is where I'm going to have to lose one of my optimizations but what I need to do is I want to have a lifespan variable and I'm going to make that lifespan 255 and if it is okay I should be back now um I checked and what was actually recording to dis uh hold on let me just what was actually recording to dis worked but it stopped a bit before the I don't know actually where it cut out so um so I am I but I I just watched the video back and it actually cut out right here where I added this bit of code so let me refresh this okay so um so this will have to get spliced together once again thank you m who has been helping me doing an amazing job editing these things together when this kind of stuff happens we're just about done though which is good hopefully I'm not going to lose any more Outlets or whatever and I'm about to go right back into it okay uh let me get the chat here going and here we go okay Power okay lost power but I'm back now and what I just was is I was saying if this is not one of the seed fireworks particles if it's not one of the seed firework particles let's take its velocity and multiply it by something like 85 so that it slows down um slows down every uh frame and you can see that kind of gives it this sort of like burst out that sort of slows down and stops now there sort of a funny thing happening where they're still there and when you see a firework it explodes and kind of like Fades out and you know I'm not going to get too crazy with visual dressing here you can make stuff Sparkle and have trails and glow and all sorts of stuff like that but at least least add something where the fireworks Fade Out so what I want to add is a variable oh I already did because that's before the power ran out I'm going to add a variable called this. lifespan equals 255 and what I'm going to do is in the update function I'm going to say as long also if it's not one of the seed ones I want that lifespan to uh go down by one and this maybe I want it to go down let's actually have it go down by four each frame and what I want is for the particle to uh have a stroke which is its lifespan so uh so I want to give it some Alpha so I'm going to say if it's not the uh the sort of seed firework do that to the stroke otherwise uh just have a regular stroke and then also let's let's make them stroke weight two and we'll make the uh those a little bit thicker so let's see what this looks like now was it running really slow no oh lifespan is not defined because I need to say this do lifespan let's try that again so you can see here now this is a little bit better now you know I should fiddle with these values like maybe this should be uh you know 0.9 and its initial values should actually be between like two and 10 and whoops uh and over here we could see what that looks like now and whether this is better or worse I don't know but I'm going to let you sort of like consider that on your own but I now have the basic idea you can see very quickly now though it's starting to run rather slow so we're losing a lot of frame rate here why are we losing a lot of frame rate well it doesn't matter whether the particles have faded out or left the screen I'm never I'm never getting rid of them so there's a bunch of things I need to do number one I need to say I need to figure out a way of getting rid of particles so here in this um in the fireworks system what I need to do is I'm looping through all the particles first of all I actually want to Loop through the list backwards because I'm going to do something where I'm start plucking them out of the list and if the list is shrinking it's Contracting from the end it works better if I'm going through it backwards and taking things off the the the back end so what I'm going to do is I'm going to change this Loop to say go from particles. length minus1 and greater than or equal to 0 and IUS minus let's make sure that still works so nothing's changed it's still working and what I need to do ah go away finder what I need to do now is say okay well if this particles index I is done then this particles do uh splice I so splice is a JavaScript function that deletes something from an array and you can actually splice at I a bunch of things after it but I just want that one particle so if the particle is done splice well how do I know if it's done I need to write a function that says if it's done so in particle. JS I've got another function I need to add I'll just add it over here this DOD and what I'll do is I'll say if if this. lifespan uh is less than zero then return true so that lifespan which is counting down else return false so let's run this it's hard to oops we have an error particle. JS line 30 uh line 30 here this not done equals function so now I have no way of knowing if it's actually removing the particles it does seem to be like performing a bit better like not slowing down so those particles are being deleted but they're actually still a firework object that system object in that list so what I want to do now is add over in the firework object also a function that says this Doone and how do I know if that thing is done well it is done if that particle is exploded and this. Firework dot sorry this. particles. length equals zero right the particle system itself is done as long as it's it's in a state of having exploded and there are no and all those particles have faded out so if that's the case I should be able to say return true otherwise return uh false so now I can go back to the sketch here and what can I do here in this sketch I also want to Loop through this thing backwards fireworks. length minus one I is greater than or equal to zero iusus and I want to say if fireworks. length oh sorry fireworks.on ah fireworks indexi Doone then fireworks in uh splice I comma 1 so now and what I'm going to do is I'm also going to add just to make sure this is all working I'm going to add console.log fireworks. length so now we should be able to see you know as a you can see that that length is going down so it's never going to be too many things on the screen so performancewise it's going to work fine so this now is and you know JavaScript canvas drawing can be a little bit slow but you can see I've got kind of you know with 100 particles per system it's kind of running reasonably well now we can make this look a little bit nicer uh for example I could um add oops I could add a little bit of alpha to the background meaning have the background um transition in to and we'll have each firework draw a little bit of Trail let's see how this looks right that has a little bit more firework like quality to it that's nice then of course I could say well let me give it a color mode of HSB and I could say for each firework let's for each firework system is going to get its own color uh so uh it should get a hue value is a random Hue and then ooh every time I make a particle I'm going to also want so the system gets a hue and then I'm going to want to send that Hue into um let's do that before the last argument here into the particle object so they can use it as well uh so I anytime I make a new particle even in the explode function I also make new particles so I'm going to say this. h and false and then now in the particle object I can add a variable to get that Hue value and then I can say uh stroke is the Hue 255 255 H 255 255 uh with the with no Alpha and now when you run this we can see we have now we have rainbow oh how come I lost the trail that's weird what did I do to lose the trail oh you know why I lost the trail is because I changed it to huse the color mode to HSB and the background is now doing something weird so this should fix that I think whoops ah look at that I wonder if this is a bug in p5js that we've just found well I'm going to do something here which might make things run a quite a bit slow but I'm going to just change the color mode to RGB here here and in each particle right before the particle is drawn I'm going to change the color mode to HSB let's see if that works there we go so uh that should be I think that seems like a bug to me like there should be a way to have an alpha with HSB color mode but now we've got it working um and you can see there we go so there could be a lot of finesse here right I could have those velocities go at an angle I could think more thoughtfully about what the velocities of the bursting particles are I could have uh a variable amount of particles um I could think more thoughtfully about the design I could actually store a list of history of the positions to draw a trail myself I could use like textures I could use something called additive blending maybe I'll um to make things appear more glow like but um but you can see here here's the basic idea so I encourage you to take my JavaScript code and make some improvements on it and I want to make a 3D webg version of this but before I'm ready to do that I'm this is this kind of concludes this video but I'm just going to keep going I'm going to go back to my processing one I'm going to close this I'm going to go back to my processing sketch which is basically ex 100% exactly the same code that I just wrote but it is oh it's doing it full screen I forgot that it's doing it so one of the things about using Java in a desktop environment is I can kind of get a bit more speed out of it so I have now this full screen application but this is still 2D so what I want to do with this one and let's um let's take off the full screen for a second just so I can kind of see it a bit more clearly let's make it 800 by 600 what I'm going to do here is I'm going to change this to P 3D each particle when it gets drawn is a point but I'm going to say um push Matrix I'm G to I need to do three actually I could just use I'm going to do do this anyway I'm going to use Translate to add that Z axis and I'm going to say uh point at 0 0 so let's just make sure this still runs oops they're all shooting off above the screen because when I made it smaller the initial velocity uh should uh be less strong so let me just run this again I'll fix that again later okay so that's still working work now what I want to do though however is these particles when it explodes somewhere somewhere I create that Vector the random Vector probably in particle system that firework object uh and uh yes and then it makes a new right here it makes a new random 2D Vector I want this to be Random 3D let's look at that let's see if this works now can you see anything different here I'm not so sure you can but technically speaking it should be a random 3D Vector let's see if we can now actually start to rotate the scene to see if this really works so I'm going to add uh I'm gonna import a library called pyam which I always which I've been doing which uh I can now say I can add a pz cam object and I can say a cam equals new peyam this and I'm going to say 500 like I want to look at it from 500 pixels away the other thing that I need to do is when I make the initial particles um their location uh sorry when I make that initial particle its location should be random uh py cam makes everything relative to the center 0 0 so I want to look for random negative width divided by two to width divided by two and then I also want to change the bottom of the screen is now height divided by two so let's run this and see what happens o oh py Cam oh okay hold on py cam is very unhappy with my oh clearing of the background technique so I'm going to lose the trails I can get those back in another way and just say background zero I forgot about that once I have peyam okay now let's start manipulating the scene can you see I'm looking at it from above now yeah so you can see I need to make a lot more of these to be able to see this more easily let's add let's have a lot more being added um and let's also make the stroke weight of these particles uh much bigger and let's have their lifespan last a little bit longer um and and let's run this and okay so now and let's actually just make this full screen again because that might help uh so I want to also make the initial random velocity much bigger and I'm going to go back and make this full screen uh in p3d and let's see if we get some nice 3D fireworks here oh that I can kind of like yeah you can see there they are oh no no no oh yeah they are 3D but they're all like in one plane so I should also probably mess with where they start okay so let's mess with where they start so this starting location is uh oh it happens here which is a particle and I don't give it a z location it's Z new particle a random uh okay hold on the new particle gets a random XY and a z and it should have that X Y and Z and so let's give it a z random and then let's give it a random Z which is going to be sometime somewhere between 300 and 300 and so I'm going to run this okay now let's sort of zoom out and look there we go so we can see H that's not so there is some zdepth there it's not very much let's make that more extreme I'm pretty sure did I get it we should know now yeah okay now you can see I've got 3D fireworks so and then you can see that I could probably do something where I have them burst out quite a bit more and I now have upside down so anyway you get the idea you can play with this more so I encourage you I'm going to post in the description of this video the processing code I'm going to clean this up a little bit the processing code for for the 3D fireworks as well as the browser JavaScript code uh I need to get rid of the full screen thing is has to stop stop as well as the um I lost I lost everything ah come on no come back uh fireworks fireworks fireworks somebody see it fireworks P5 as well as the this code the JavaScript version of the 2D fireworks and I hope that you will make pretty shapes out of them I hope that you will add I hope that you will think of different ways of doing this and come up with a creative take on this and post it share it with me in the comments or on Twitter or whatever wherever you find on the internet to share it and I hope you enjoyed this quick coding challenge wasn't very quick probably uh of of how to program a fireworks simulation from scratch thanks for watching oh yeah draw a quad where the ground is maybe was a great suggestion okay everybody I'm done for today uh this second part of the stream is now 20 minutes I have no idea I think I've been doing this for about three hours today uh three computer vision tutorials plus one fourth of July uh fireworks coding challenge if you have any last questions oh have I used 3js I haven't and 3js would be something good I think to try programming this in to see how that works um I um I've been using the webg renderer of p5js which um but I um you know it's I haven't gotten as comfortable with it yet myself and I think they're all it's still sort of new and there's probably bugs in it so uh you know probably I'm going to try to maybe see if I can get the 3D version of this working as well uh any last questions before I go okay so let me just before I leave let me just remind you uh coding rainbow.com is the website uh make sure you are if you want to be that is subscribed on YouTube if you want to join the slack Channel Discussion Group you can subscribe on patreon it's a crowdfunding thing totally optional but I'm just letting you know it's there for anyone who feels so inclined um and then also if you want updates about when I'm going to post my next live stream you can get an email update by signing up there so that's coding rainbow.com you'll be able to find all of these links uh thank you everyone I am going to be away next week I will be on the internet um so you're welcome to ask me questions or make YouTube comments or and so these videos will kind of Trickle over the next week and the next live stream will probably be something like Tuesday July 12th or Monday July 11th or Wednesday July 13th somewhere around there will be my next live stream I will do four at least four sessions in July I might continue the computer vision stuff or come up with other topics based on the discussion on GitHub and in the slack uh WG Bros wants a shout out game that WG Bros has been making at plan n.i plz. go check it out why can't the NFC processing function accept along long as an argument so processing as a sort of simplified creative coding sketching environment stays away from Longs and doubles and if you want to use those um data types the sort of more advanc for sort of advanced math stuff then just use the Java system math functions uh with those uh with those uh particular data types um oh I was going to answer some questions on GitHub I I'm not going to do this today but let let me just see let's see let me at least let's see if this one is quick so uh one thing that I'm doing is for anything on GitHub you can also just you can suggest topics but you can also just ask a question you can include your code with the question or it can be a general question so oh shoot there was another issue did it um which I thought was it this one no though this is a question but there was a question it seems to be gone now that was about a particular piece of code and I edited the I changed where did it go well I can't find it now this is is it sorted by newest yeah sort by uh recently updated computer Visions uh this no this is I guess the qu oh yeah this is the top I do want to talk about this but not today I will oh well there was a question here that I thought I was going to try to answer online but um but you can ask your questions here and I will in live streams do like a Q&A where I will make a quick video that answers the question here and you can include your code a link to your code if you can't solve a particular problem that sort of thing or it can just be a general question okay everybody uh the archive for this stream will be up at some point later today or tomorrow I hope and um thank you for watching I'm sorry for those of you who just joined in I have been going for almost three hours at this point so I as much as I would love to one of these days this I would like to do maybe for the 100th episode I will do an eight hour all day session I'm approaching episode 50 soon um but uh today I'm kind of out of steam and it's almost 3 and I got to eat something and do some other stuff this afternoon check my email that sort of thing so thanks you again for watching I love that you all participating and uh giving me feedback and watching the videos and subscribing and all that stuff uh share with your friends um if people uh and keep in touch okay goodbye everybody uh here we go I'm going to I'm I'm I'm signing off signing off this has been cing rainbow cing rainbow with me chief CH theme song is coming this is a temporary song I want some I need some more music tracks to play it is coming Chia areri arir sayara goodbye Shalom can I say shalom for goodbye I don't know okay yeah of course I can peace at least I could say peace is a nice sentiment I'm I'm sorry that I missed like a so many languages in my kind of eurocentric view I going to get more next time if I ever do that again okay goodbye
