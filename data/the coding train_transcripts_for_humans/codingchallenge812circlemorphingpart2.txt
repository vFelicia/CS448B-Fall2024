With timestamps:

00:00 - oh hi again if you made it through the
00:03 - previous coding challenge on circle
00:06 - morphing Wow I'm I'm amazed if you
00:09 - didn't that makes a lot of sense to me
00:10 - you could be here anyway this is gonna
00:12 - be much simpler famous last words
00:14 - this is probably gonna be like really
00:16 - complicated and I don't know check the
00:17 - time maybe this video is like three and
00:18 - a half hours long my classes are all
00:20 - smudged my hair is falling out it's been
00:22 - like I've been here for like 17 hours
00:24 - straight
00:25 - coding things there's no windows in this
00:28 - room anyway but but here we go okay
00:30 - let's see so what do I have now I have
00:31 - taken my last circle morphing coding
00:33 - challenge and I've made this very very
00:35 - simple sketch it's very little code in
00:37 - it it has an array called circle path it
00:40 - has the spacing variable as a function
00:41 - to convert a radius and angle to of the
00:45 - polar core into a Cartesian coordinate
00:46 - and then it just makes the circle path
00:48 - and draws the circle path here it is and
00:53 - there's the circle it's so nice it's so
00:56 - lovely it's so round and elegant and
00:58 - quiet and I'm happy with it now I want
01:03 - to turn this into a triangle and I don't
01:04 - want to get lost in all this code like I
01:07 - got lost before let's figure out if we
01:08 - can do this in a simpler way and one way
01:11 - I could do this is this is all my notes
01:16 - from before what do you think about it
01:18 - remember I have the circle it's all
01:20 - these points then I have think about a
01:24 - triangle which is really just the path
01:26 - of these points what if I just start
01:28 - deleting these other points so
01:29 - eventually I left wit I have maybe like
01:31 - 90 points around but I'm left with just
01:33 - three points I think I could do this so
01:37 - what I need to do is start deleting the
01:39 - points so one kind of crazy thing I
01:42 - could just try which I know won't really
01:44 - work is I could say I'm gonna say here
01:51 - at the beginning of draw I'm gonna do
01:52 - one per frame while circle path length
01:57 - is greater than three not while if if
02:01 - circle path that length is greater than
02:03 - 3 if there's more than three points
02:05 - let's get rid of one so I'm gonna say
02:09 - I'm going to say let index equal floor
02:13 - random circle path length that's me
02:16 - picking a random index from this
02:19 - particular rate I should do this at the
02:21 - end of draw because I should at least
02:22 - draw it once with all the points so
02:24 - let's do this at the end of draw this
02:27 - videos could be so short I'm so excited
02:29 - I didn't code the beginning part but I
02:31 - did in the last video okay so if I find
02:33 - that then I'm just gonna say circle path
02:35 - dot splice index 1 I'm just gonna delete
02:39 - that just it's gone I'm gonna bleed it
02:41 - let's watch this down let's I got a
02:46 - triangle so every single time this is
02:49 - kind of kind of like morph to be a
02:51 - triangle but it's not the equilateral
02:53 - triangle so what I need to do is only
02:56 - pick a valid set of points so what are
03:00 - the valid index values so I need to have
03:05 - an array I'm gonna call indices indices
03:12 - plural of index and while I'm doing this
03:15 - I'm gonna say indices I'm gonna have a
03:19 - variable called let I equals 0 and I'm
03:24 - gonna say Indus indices dot push hi so I
03:31 - want to put all the index values that
03:34 - are in this array into a separate
03:36 - arrange yeah that's probably a better
03:37 - way to do this but this is the way I'm
03:38 - thinking about it first so now what I'm
03:40 - gonna do is instead of picking a random
03:42 - number this is kind of nuts I'm going to
03:47 - first I'm gonna use our pick a random
03:51 - number that's part of the indices then I
03:56 - am going to and so this is indices that
04:01 - link bear with me for a second
04:03 - I think I might need to diagram this so
04:05 - what I'm doing is actually completely
04:06 - redundant and unnecessary but it's going
04:09 - to allow me to do something else in a
04:10 - moment so I have this array you could
04:12 - imagine this is one array maybe it has 1
04:17 - 2 3 4 5 6 7 8 elements in it 0 through 7
04:21 - and these are all of those points these
04:23 - are all the vectors XY XY these
04:27 - seven points now I make another array
04:32 - which just has 0 1 2 3 4 5 6 & 7 in it
04:37 - so now I could start saying hey let me
04:39 - take this out of here what number is
04:41 - that which is a 3 go delete the third
04:43 - one okay oh there's a problem here
04:49 - if I'm removing things from the array
04:53 - well let me keep going my thought here
04:55 - then I'm gonna have to like fix this
04:56 - problem so what I want to do is only put
04:59 - the valid index values in here and then
05:03 - I can skip the ones that are the points
05:07 - of the equilateral triangle that's what
05:08 - I was gonna do this isn't actually gonna
05:09 - work well I'm thinking this through and
05:11 - realizing it's not going to work oh
05:12 - don't worry we're gonna get there when
05:14 - we come back let me accept why this
05:16 - isn't gonna work this was a nice idea
05:18 - because what I was gonna say is so now
05:22 - if I pick the index is this particular
05:26 - element of that array then I could
05:28 - splice it this is gonna cause all sorts
05:31 - of strange and weird problems oh that
05:37 - was kind of fun what would what just
05:40 - happened there index
05:43 - yeah because so I put all that so what I
05:51 - wanted to do is say what I wanted to do
05:54 - up here just bear with me for a second
05:55 - is if a modulus 120 is not equal to zero
06:00 - then it's a valid index I don't want to
06:03 - be able to delete I have a better idea
06:08 - well okay no hold on I got to think this
06:11 - through someone's gonna give me a good
06:12 - idea in the chat probably right we could
06:16 - just mark some points as fixed or
06:18 - something that's probably gonna be
06:19 - better interestingly enough so this
06:22 - isn't gonna work why is this not gonna
06:23 - work because when I start this is the
06:26 - thing when I start deleting elements of
06:28 - the array then the index values change
06:31 - as the array elements change so while
06:33 - this was like kind of a nice idea like
06:35 - oh let me just put a list of valid
06:36 - things that I can delete once I pick one
06:38 - valid thing to delete
06:39 - then those other things move around and
06:40 - those I have to like reshuffle all the
06:42 - index guys this is a terrible idea
06:43 - so another thing I could do what's the
06:46 - one thing that's kind of weird that you
06:47 - can do in in JavaScript is that you can
06:52 - attach properties to existing objects so
06:55 - I think this might actually work for me
06:56 - here because I have all these vector
06:58 - objects and so let me get rid of this
07:00 - idea of the indices that was an
07:02 - interesting idea I'm now going to get
07:03 - rid of and let me get let me get rid of
07:07 - this here leave just comment this out so
07:09 - what I want to do is with these I'm
07:12 - gonna say I'm just gonna attach a
07:16 - property like active so this this
07:19 - function polar truck Tejan returns a p5
07:21 - vector object and I could make my own
07:23 - class and make my own object but I'm
07:26 - just going to keep track is this active
07:27 - they're all active to start and then
07:29 - what I'm gonna do is I am going to when
07:38 - I'm drawing them I'm gonna say if V dot
07:41 - active whoops then draw the vertex so
07:47 - this has to go here so as I only draw
07:50 - the active ones so I can instead are
07:52 - actually deleting it I can remove a flag
07:54 - I mean the thing is if I was gonna do
07:57 - this in order it would be much easier I
07:58 - was gonna do it randomly probably should
08:00 - just done this in order cuz I could just
08:02 - delete them wanted to talk and then skip
08:04 - the ones that I didn't want to delete
08:06 - anyway I don't know why I'm doing it
08:08 - this way now I actually go back to my
08:09 - index thing but I was gonna say I can
08:12 - also say if if angle mod 120 equals zero
08:19 - this is one of the fixed ones so I can
08:24 - also say it's a fixed one this means it
08:26 - can never be deactivated so one thing I
08:31 - could do now and actually this is kind
08:32 - of ridiculous what I'm about to do but
08:34 - I'm just gonna say I'm just gonna every
08:40 - time through draw I'm gonna pick a
08:43 - random one I'm going to and I'm gonna
08:51 - say
08:52 - I'm going to get that vector so circular
08:56 - path index and then I'm going to say as
09:00 - long as V as long as it's not a fixed
09:04 - one I'm gonna deactivate it now here's
09:07 - the thing ah so this is me doing it
09:09 - randomly I'm leaving all of them there
09:11 - I'm never removing anything from the
09:12 - array and so I'm just deactivating them
09:15 - as long as they're not a fixed one and
09:17 - we should see here now the thing is it's
09:22 - happening in this like weird long amount
09:25 - of time because it still could pick ones
09:27 - so what I could do here now this is kind
09:30 - of ridiculous but I could say what I
09:33 - could do is I could say let active list
09:37 - is a new array every time oh boy I could
09:40 - sure I could do this in a better way but
09:42 - now I could look at everything that's
09:43 - there I could probably use like oh I
09:49 - could use filter I could use filter I
09:51 - won't use it right now but filter is a
09:53 - way of saying like give me a new array
09:55 - by filtering out all the ones that are
09:56 - not active or not fixed that's what I
09:59 - should do so I should say if but I'm
10:02 - gonna just do this a manually if circle
10:04 - path so so here's my vector if it's
10:11 - active and not fixed then it's part of
10:17 - the active list and so I can add it to
10:23 - that active list so now I have this I'm
10:26 - rebuilding this egg I can do this
10:27 - because you know it's just like a
10:28 - hundred points I can mess around as much
10:30 - as I want so I'm making this active list
10:31 - and now I'm just gonna pull from the
10:37 - active list and there's no way it can be
10:40 - fixed cuz it couldn't be in there
10:41 - there's no way it could be active so I'm
10:42 - gonna do this and now whoops index is
10:47 - not defined sketch line 45 I
10:53 - and whoops so sketch line 53 I have to
10:58 - make sure as long as as long as there's
11:06 - something there right because when it
11:09 - gets to nothing oh I'm gonna have to put
11:11 - it back
11:11 - oh I got to put it back maybe I'll leave
11:14 - that as an exercise so let's let me make
11:16 - this let me make this circular path let
11:20 - me make this stroke wait just to let me
11:23 - make the radius 200 and the spacing just
11:29 - two degrees so this will be more
11:32 - interesting it's happening really quite
11:35 - slowly but it that's crazy how it jumps
11:39 - too cuz the thing is it can like it's
11:40 - deleting all these little subsampled
11:42 - ones and you don't really notice it so I
11:44 - think probably an order to deleting them
11:46 - would make more sense so like for
11:49 - example I mean now this is ridiculous
11:51 - that I did all this stuff just to be
11:52 - able to do it randomly but for example
11:54 - if I just took the first one that
11:59 - [Music]
12:01 - right now this is one that Golan has
12:03 - already I believe so now I'm just
12:05 - deleting them one at a time and then I
12:07 - could add them back one at a time so
12:11 - thank you this is yet another example
12:13 - see you can see there's so many possible
12:15 - ways you could think about this I'm
12:16 - gonna be done with this this was another
12:18 - coding challenge I'll leave it as an
12:20 - exercise to put all the points back you
12:23 - know but you can see these are two
12:27 - possibilities so let me remind you if
12:29 - you go to github.com slash goal on 11 /
12:36 - circle morphing here is where you're
12:39 - going to find many many other ways of
12:42 - doing it so Oh super ellipse formula
12:44 - that would have been a good way treating
12:46 - it as a rounded rect also many better
12:48 - ways than I could have thought of so I
12:49 - did two coding challenges kind of trying
12:51 - to do this triangle two circle morphing
12:53 - I hope that you make some you can tweet
12:55 - them at me hashtag circle morphing at
12:57 - Schiffman
12:58 - you can these the code from my two will
13:01 - be on github and you can and you can
13:05 - what am I talking about I you can link
13:08 - to your own on by your pull request on
13:10 - my readme and all of that I plank my new
13:12 - outro music which though but also be out
13:16 - for music afterwards
13:17 - what I hope I hope get a copyright
13:18 - violation for this music I got it from a
13:21 - place where it said I was allowed to use
13:22 - it okay thank you thank you goodbye
13:29 - [Music]
13:36 - you

Cleaned transcript:

oh hi again if you made it through the previous coding challenge on circle morphing Wow I'm I'm amazed if you didn't that makes a lot of sense to me you could be here anyway this is gonna be much simpler famous last words this is probably gonna be like really complicated and I don't know check the time maybe this video is like three and a half hours long my classes are all smudged my hair is falling out it's been like I've been here for like 17 hours straight coding things there's no windows in this room anyway but but here we go okay let's see so what do I have now I have taken my last circle morphing coding challenge and I've made this very very simple sketch it's very little code in it it has an array called circle path it has the spacing variable as a function to convert a radius and angle to of the polar core into a Cartesian coordinate and then it just makes the circle path and draws the circle path here it is and there's the circle it's so nice it's so lovely it's so round and elegant and quiet and I'm happy with it now I want to turn this into a triangle and I don't want to get lost in all this code like I got lost before let's figure out if we can do this in a simpler way and one way I could do this is this is all my notes from before what do you think about it remember I have the circle it's all these points then I have think about a triangle which is really just the path of these points what if I just start deleting these other points so eventually I left wit I have maybe like 90 points around but I'm left with just three points I think I could do this so what I need to do is start deleting the points so one kind of crazy thing I could just try which I know won't really work is I could say I'm gonna say here at the beginning of draw I'm gonna do one per frame while circle path length is greater than three not while if if circle path that length is greater than 3 if there's more than three points let's get rid of one so I'm gonna say I'm going to say let index equal floor random circle path length that's me picking a random index from this particular rate I should do this at the end of draw because I should at least draw it once with all the points so let's do this at the end of draw this videos could be so short I'm so excited I didn't code the beginning part but I did in the last video okay so if I find that then I'm just gonna say circle path dot splice index 1 I'm just gonna delete that just it's gone I'm gonna bleed it let's watch this down let's I got a triangle so every single time this is kind of kind of like morph to be a triangle but it's not the equilateral triangle so what I need to do is only pick a valid set of points so what are the valid index values so I need to have an array I'm gonna call indices indices plural of index and while I'm doing this I'm gonna say indices I'm gonna have a variable called let I equals 0 and I'm gonna say Indus indices dot push hi so I want to put all the index values that are in this array into a separate arrange yeah that's probably a better way to do this but this is the way I'm thinking about it first so now what I'm gonna do is instead of picking a random number this is kind of nuts I'm going to first I'm gonna use our pick a random number that's part of the indices then I am going to and so this is indices that link bear with me for a second I think I might need to diagram this so what I'm doing is actually completely redundant and unnecessary but it's going to allow me to do something else in a moment so I have this array you could imagine this is one array maybe it has 1 2 3 4 5 6 7 8 elements in it 0 through 7 and these are all of those points these are all the vectors XY XY these seven points now I make another array which just has 0 1 2 3 4 5 6 & 7 in it so now I could start saying hey let me take this out of here what number is that which is a 3 go delete the third one okay oh there's a problem here if I'm removing things from the array well let me keep going my thought here then I'm gonna have to like fix this problem so what I want to do is only put the valid index values in here and then I can skip the ones that are the points of the equilateral triangle that's what I was gonna do this isn't actually gonna work well I'm thinking this through and realizing it's not going to work oh don't worry we're gonna get there when we come back let me accept why this isn't gonna work this was a nice idea because what I was gonna say is so now if I pick the index is this particular element of that array then I could splice it this is gonna cause all sorts of strange and weird problems oh that was kind of fun what would what just happened there index yeah because so I put all that so what I wanted to do is say what I wanted to do up here just bear with me for a second is if a modulus 120 is not equal to zero then it's a valid index I don't want to be able to delete I have a better idea well okay no hold on I got to think this through someone's gonna give me a good idea in the chat probably right we could just mark some points as fixed or something that's probably gonna be better interestingly enough so this isn't gonna work why is this not gonna work because when I start this is the thing when I start deleting elements of the array then the index values change as the array elements change so while this was like kind of a nice idea like oh let me just put a list of valid things that I can delete once I pick one valid thing to delete then those other things move around and those I have to like reshuffle all the index guys this is a terrible idea so another thing I could do what's the one thing that's kind of weird that you can do in in JavaScript is that you can attach properties to existing objects so I think this might actually work for me here because I have all these vector objects and so let me get rid of this idea of the indices that was an interesting idea I'm now going to get rid of and let me get let me get rid of this here leave just comment this out so what I want to do is with these I'm gonna say I'm just gonna attach a property like active so this this function polar truck Tejan returns a p5 vector object and I could make my own class and make my own object but I'm just going to keep track is this active they're all active to start and then what I'm gonna do is I am going to when I'm drawing them I'm gonna say if V dot active whoops then draw the vertex so this has to go here so as I only draw the active ones so I can instead are actually deleting it I can remove a flag I mean the thing is if I was gonna do this in order it would be much easier I was gonna do it randomly probably should just done this in order cuz I could just delete them wanted to talk and then skip the ones that I didn't want to delete anyway I don't know why I'm doing it this way now I actually go back to my index thing but I was gonna say I can also say if if angle mod 120 equals zero this is one of the fixed ones so I can also say it's a fixed one this means it can never be deactivated so one thing I could do now and actually this is kind of ridiculous what I'm about to do but I'm just gonna say I'm just gonna every time through draw I'm gonna pick a random one I'm going to and I'm gonna say I'm going to get that vector so circular path index and then I'm going to say as long as V as long as it's not a fixed one I'm gonna deactivate it now here's the thing ah so this is me doing it randomly I'm leaving all of them there I'm never removing anything from the array and so I'm just deactivating them as long as they're not a fixed one and we should see here now the thing is it's happening in this like weird long amount of time because it still could pick ones so what I could do here now this is kind of ridiculous but I could say what I could do is I could say let active list is a new array every time oh boy I could sure I could do this in a better way but now I could look at everything that's there I could probably use like oh I could use filter I could use filter I won't use it right now but filter is a way of saying like give me a new array by filtering out all the ones that are not active or not fixed that's what I should do so I should say if but I'm gonna just do this a manually if circle path so so here's my vector if it's active and not fixed then it's part of the active list and so I can add it to that active list so now I have this I'm rebuilding this egg I can do this because you know it's just like a hundred points I can mess around as much as I want so I'm making this active list and now I'm just gonna pull from the active list and there's no way it can be fixed cuz it couldn't be in there there's no way it could be active so I'm gonna do this and now whoops index is not defined sketch line 45 I and whoops so sketch line 53 I have to make sure as long as as long as there's something there right because when it gets to nothing oh I'm gonna have to put it back oh I got to put it back maybe I'll leave that as an exercise so let's let me make this let me make this circular path let me make this stroke wait just to let me make the radius 200 and the spacing just two degrees so this will be more interesting it's happening really quite slowly but it that's crazy how it jumps too cuz the thing is it can like it's deleting all these little subsampled ones and you don't really notice it so I think probably an order to deleting them would make more sense so like for example I mean now this is ridiculous that I did all this stuff just to be able to do it randomly but for example if I just took the first one that right now this is one that Golan has already I believe so now I'm just deleting them one at a time and then I could add them back one at a time so thank you this is yet another example see you can see there's so many possible ways you could think about this I'm gonna be done with this this was another coding challenge I'll leave it as an exercise to put all the points back you know but you can see these are two possibilities so let me remind you if you go to github.com slash goal on 11 / circle morphing here is where you're going to find many many other ways of doing it so Oh super ellipse formula that would have been a good way treating it as a rounded rect also many better ways than I could have thought of so I did two coding challenges kind of trying to do this triangle two circle morphing I hope that you make some you can tweet them at me hashtag circle morphing at Schiffman you can these the code from my two will be on github and you can and you can what am I talking about I you can link to your own on by your pull request on my readme and all of that I plank my new outro music which though but also be out for music afterwards what I hope I hope get a copyright violation for this music I got it from a place where it said I was allowed to use it okay thank you thank you goodbye you
