With timestamps:

00:01 - hello welcome to a winter themed coating
00:05 - challenge you know something that I that
00:08 - I thought I should say is this coding
00:10 - challenge is probably very similar to my
00:12 - previous Purple Reign coding challenge
00:15 - but instead of Purple Rain we're going
00:18 - to have wintery white snow so I've got a
00:21 - blank p5.js sketch here I am going to
00:25 - try to make little snow particles that
00:27 - fall I'm getting some suggestions from
00:29 - the chat about like wind and that type
00:31 - of thing so let's just get started
00:34 - oh I've got a nice PNG snowflake there
00:37 - okay so I'm getting lots of so this I
00:39 - don't know how this is gonna go you
00:40 - might be watching this as a recorded
00:41 - video sometime in the future from your
00:43 - spaceship that's flying around but but I
00:48 - at the time of this recording there's a
00:50 - live chat going on and I'm gonna try to
00:52 - get some good suggestions so the very
00:54 - first thing that I need to do this is my
00:55 - codes all it is I'm gonna start with an
00:57 - object-oriented approach and I'm
01:00 - actually going to make a new JavaScript
01:02 - file and I'm gonna call that file
01:04 - snowflake dot Jas and I am going to make
01:11 - a class called snowflake and that class
01:17 - is going to have a constructor and it's
01:20 - going to have a position and all of
01:26 - these are going to be vector objects if
01:27 - you haven't seen a vector object yet a
01:29 - vector is an object that holds an X or Y
01:32 - and a Z because we could do this later
01:34 - maybe a part two in 3d and WebGL we
01:37 - could swirl around the snow and go
01:39 - through it in 3d or boy wouldn't that be
01:41 - exciting but we need a velocity and we
01:45 - need an acceleration all right now also
01:51 - we want a function just to render the
01:54 - snowflake and for now I'm just gonna say
01:56 - it's white and it's about four pixels
02:02 - wide and it is just a point and so the
02:05 - point will be at the position the X&Y
02:10 - position oh look at this I'm
02:13 - wonderful sprite sheet of snow textures
02:17 - we're gonna grab that so thank you I'm
02:19 - seeing that being submitted Alka if you
02:21 - could make me a nice like URL that I can
02:24 - download it here as we're going alright
02:26 - so what do I want to do now okay so I
02:30 - definitely want to have an array so I'm
02:35 - gonna make an array empty a ram to call
02:37 - it snow and what I'm gonna do is I'm
02:40 - gonna say snow dot push a new snowflake
02:45 - so I'm gonna have at least one new
02:47 - snowflake I'm gonna have one new
02:52 - snowflake and then I'm going to say for
02:56 - every flake in of snow right this is my
03:00 - new favorite kind of JavaScript loop
03:03 - where I have an array of many things and
03:05 - I could say for every element in that
03:07 - array but it's up in does something
03:09 - different oh I got to do a video about
03:11 - that cuz I really botched my previous
03:13 - one I'm gonna say snow Oh - flake dot
03:17 - render and let's probably pass in never
03:24 - mind let's let's let's set the location
03:26 - of the snow in the constructor itself
03:28 - let's just hard code it right now and
03:31 - let's see we get Oh snowflake is not
03:34 - define why is snowflake not defined
03:37 - because I forgot in my HTML file to
03:40 - reference that javascript file and I'm
03:47 - being told by Simon that maybe I have a
03:50 - syntax error somewhere I'm not sure
03:54 - where I'll let's just see what happens
03:58 - oh there it is there is a beautiful
04:02 - snowflake
04:05 - I have a keyboard now I don't know how
04:07 - to use it yet but very excited about
04:09 - this edition okay
04:10 - there is the beautiful snowflake now
04:14 - what I could do is I could actually say
04:17 - in draw let's keep adding snowflakes now
04:21 - I think I'm adding many many many
04:23 - snowflakes but they're all being added
04:25 - right in the same spot so let's add all
04:27 - of our snowflakes at a random location
04:31 - let's pick a random with a random
04:35 - exposition and a random Y position is
04:49 - associated with snow in my head it's a
04:51 - winter or something anyway now here's
04:54 - the thing I think I want to create all
04:57 - my snowflakes above off the screen and
05:00 - have them fall down so let's do that
05:03 - so let's actually in the snowflake
05:06 - object let's create the Y location
05:08 - something like between negative 100 and
05:11 - negative 10 so somewhere above the
05:14 - window so now if I were to rerun this
05:15 - sketch I won't see any of it but I can
05:19 - add a function I'm going to call it
05:21 - update and what I'm going to do an
05:23 - update is I'm going to add the velocity
05:25 - to the position and breaking news - drew
05:31 - - breaking news somebody will think that
05:33 - sound effect eventually I now have our
05:37 - sprite sheet there we go
05:40 - so let me download this desktop snow and
05:48 - call it flakes 16 okay so we've got some
05:53 - images we'll be able to use later great
05:55 - okay now oh I would say is the position
05:58 - of each snowflake needs to change over
06:00 - time how about based on the object's
06:02 - velocity so I can use vector math to say
06:07 - add the velocity to the position every
06:09 - frame and so I can now say flake update
06:14 - I want them all to update
06:17 - now I still see them moving down cuz
06:19 - they none of them have a velocity so I
06:21 - could do something just to test and I
06:23 - could say hey give all of them a
06:24 - velocity vector that's kind of fast
06:26 - pointing down like zero comma five and
06:29 - we would see there's all of us know but
06:30 - this this this is not really snow yet
06:33 - right what we want I mean it's never
06:37 - gonna be actual snow wouldn't it be
06:38 - wonderful like it's magic I need more
06:40 - props have snow falling in but what I
06:43 - want is I want to see it feel a little
06:47 - bit more like gravity so what I'm going
06:49 - to do is I'm actually gonna create a
06:51 - global variable called gravity because
06:55 - gravity isn't part of a snowflake it's
06:57 - part of the world so to speak and I'm
06:59 - gonna say gravity equals create vector
07:02 - and I'm gonna make up something a little
07:05 - small gravity pointing down and then
07:08 - actually what I want to do is again I
07:11 - want the velocity to start at zero but I
07:15 - want the acceleration equal to gravity
07:20 - and I want to add the object's
07:23 - acceleration to its velocity so I'm
07:25 - gonna do more with this in a little bit
07:26 - but the idea is gravity is a force a
07:29 - force is a vector that moves an object
07:32 - with mass that accelerates an object
07:35 - with mass F equals n times a right so so
07:39 - what I want to do is take the gravity
07:40 - force and put it in the objects
07:42 - acceleration which changes the velocity
07:43 - over time and what we would see now is
07:49 - snow starting to fall faster as it gets
07:52 - further down right so this is starting
07:53 - to look a little bit more like snow
07:55 - there's a lot more for us to do here we
07:57 - want to we want to add some wind you
07:59 - know we probably want the gravity in the
08:01 - case of snow
08:03 - gravity's probably the wrong word I
08:04 - should just to be very light so it feels
08:08 - like it's moving very very slowly
08:10 - however hmm I wanted to create this
08:16 - parallax effect so so how do I do that
08:21 - let's think about this well one thing I
08:23 - would like to do is give the the
08:27 - give this the snowflakes themselves some
08:30 - kind of size so let's try this let's
08:34 - give them a property called R that's a
08:36 - random number between four and eight and
08:38 - use that as the stroke weight and we can
08:43 - see now this is kind of nice
08:44 - right so this is nice now somebody in
08:47 - the chat I don't know want some help
08:49 - here
08:49 - so what do I want I want the bigger ones
08:54 - falling slower and the smaller ones
08:56 - falling faster no the other way around
08:58 - if something's further away it's smaller
09:00 - and it will look like it's falling
09:02 - slower if it's bigger it's closer to
09:03 - look like it's falling faster is that
09:05 - right and so should I actually just
09:09 - alter the gravity like let's make a copy
09:13 - of the gravity vector so one thing I
09:16 - should do okay so first of all I should
09:18 - write a function called apply force and
09:21 - that takes a force and what it does is
09:24 - it just adds that force to the object's
09:26 - acceleration big and then I clear out
09:30 - the acceleration every frame so this is
09:34 - known as force accumulation I have lots
09:35 - of videos that go through this in more
09:36 - detail but the idea is there's different
09:38 - techniques for doing this that what I
09:40 - want to do is say there's a bunch of
09:41 - forces in the world I want to accumulate
09:43 - all of those forces so so like I might
09:48 - have some wind I might have some gravity
09:50 - so and we may be at some like Perlin
09:52 - noise flow field kind of thing yes I
09:55 - need to have a mass and although people
09:58 - are giving me great suggested to the
09:59 - child I'm gonna get to those not ready
10:00 - yet so what I really want to do is I
10:03 - just want to say flake apply force
10:07 - gravity because gravity is a force
10:09 - that's coming from outside that I want
10:11 - to send into each snowflake so this
10:13 - should really be the same exact the same
10:17 - exact sketch now we've really got to fix
10:18 - something before we get too far so
10:20 - number one is IV either want to like
10:23 - recycle the snowflakes when they get to
10:24 - the bottom or remove them because as you
10:26 - know this is already running really slow
10:28 - after a little while let's deal with
10:30 - that so what I want to do is I want to
10:33 - loop
10:39 - and actually I'm going to do this thing
10:40 - that I do in lots of coding challenges
10:43 - where I'm gonna loop through an array
10:46 - backwards and I'm gonna say if flake
10:52 - off-screen snow dot splice I can't type
11:03 - today I comma one so what am i doing so
11:06 - what I'm doing here is I want to go
11:07 - through every miss flake if snow index I
11:11 - is off-screen so I need to use an
11:14 - iterator a counter to go through all the
11:17 - elements of the array because I want to
11:19 - eventually use the splice function which
11:21 - removes something from the array and the
11:24 - thing that it removes i specify the
11:25 - index i want to remove the snowflake at
11:28 - that index and just just the one i don't
11:30 - want to remove the one the one after and
11:32 - i'm going through the array backwards so
11:34 - as i remove them the array slides down
11:37 - and is shorter and I don't end up
11:38 - missing any elements definitely done
11:40 - this in other videos before okay so this
11:43 - isn't going to work because this idea
11:45 - solely off screen isn't magic so I need
11:48 - to go back to the snowflake object and I
11:51 - need to write a function called
11:52 - off-screen and yeah I'm being told
11:58 - breaking news to do that I'm being told
12:01 - that I have I plus plus somewhere where
12:03 - I need I - - I will fix that but
12:06 - definitely would result in a problematic
12:07 - infinite loop I now want to say return
12:13 - of the boolean value of if it's
12:16 - off-screen and I can determine that by
12:18 - saying this dot pause dot Y is greater
12:21 - than is it greater than height plus this
12:25 - dot R so in other words if it's off the
12:30 - screen based on its size then then
12:33 - return this will evaluate to true or
12:34 - false if it's true it's off the screen
12:36 - all right all right back to sketch now
12:39 - this definitely needs to be I - - thank
12:42 - you for that correction and now let's
12:44 - rerun this sketch all right now the
12:51 - question
12:52 - let's look at the length of the array
12:55 - 194 193 so that's definitely working
12:58 - it's kind of hovering around 200
13:01 - particles which is reasonable to render
13:02 - that's good
13:04 - okay so now I think what I want is let's
13:08 - try to get that parallax effect let's
13:10 - see if we can make that happen
13:12 - so what what would happen if I before I
13:19 - send in the force
13:20 - oh so interestingly enough I'm ignoring
13:27 - an aspect of Newton's law so typically I
13:30 - might do something like this
13:40 - right what did I just do here what I
13:42 - said is before I take that incoming
13:45 - force and add it to the acceleration
13:46 - divided it by mass and that's because
13:49 - force equals mass times acceleration or
13:52 - acceleration equals force divided by
13:54 - mass so this is me dividing it by mass
13:57 - now of course with gravity ha the force
14:01 - of gravity is scaled by mass because
14:04 - force of gravity equals the mass of one
14:07 - object engine masters another object
14:08 - divided by just 2 squared so this is
14:10 - kind of actually irrelevant here this is
14:13 - problematic so I am going to not include
14:16 - this right now but what I'm actually
14:18 - going to do is I am going to I'm gonna
14:23 - like have a little like parallax that
14:28 - how you spell it parallax effect hack
14:31 - let's see if this works
14:33 - somebody will hopefully help me with
14:38 - this I really need help with this so
14:40 - what I want to do is I want to make a
14:43 - copy of that incoming force and I just
14:46 - want to I'm just going to multiply it by
14:49 - the object size because if it's bigger
14:52 - I want that force to appear let it and
14:54 - that it's stronger and then I'm gonna do
14:56 - that so let's this let's see if let's
14:58 - see what this does
14:59 - I think it's not strong enough and also
15:08 - there's kind of an issue where yeah
15:13 - let's let's make this size differential
15:15 - much more extreme
15:24 - that's sort of like kind of I forgot to
15:29 - set the terminal velocity that's a good
15:31 - point
15:32 - so I should have the snow have a
15:34 - terminal velocity and that terminal
15:37 - velocity so let's let's try that let's
15:39 - see if we can make this this terminal V
15:43 - equals this dot R we're gonna make it
15:48 - related to its size I don't need another
15:51 - variable let's try that okay so let's
15:58 - see I'm so I'm very thrown off by the so
16:00 - I want to say this dot velocity dot
16:03 - limit this dot R so the limit is a
16:10 - vector function that takes a given
16:12 - vector and limits the length of it so
16:15 - let's see how this what this does too
16:21 - much speed yes way too much speed right
16:25 - so let's say it's limited by its size
16:29 - times point like 20 percent of its size
16:35 - that's better right
16:37 - all right let's see if we can use a
16:39 - sprite sheet now really as an exercise
16:42 - to yourself if you're watching this and
16:44 - you're following along you should stop
16:47 - right now more small ones and fewer big
16:50 - ones okay great suggestion so how do we
16:53 - do that oh I love this suggestion how do
16:55 - we have pick a random number that's more
16:58 - likely to be small than big let's write
17:02 - a function called get random size and
17:08 - I'm going to just put that separately up
17:09 - here function get random size and what
17:14 - I'm going to do now is let's do the pick
17:17 - two random numbers approach this whole
17:19 - this will kind of be easy
17:26 - so I want to pick two random numbers and
17:29 - I'm going to say if random 2 is less
17:35 - than random 1 or its greater than
17:38 - wait-wait-wait is greater than random 1
17:43 - so smaller numbers will be more often
17:46 - then return random 1 while true so this
18:00 - isn't very efficient I feel like there's
18:01 - so many other more efficient techniques
18:03 - but basically basically what I'm doing
18:05 - is I am trying to pick 2 random numbers
18:09 - 1 which qualifies the other one so so in
18:16 - other words let's say I pick a point 1
18:18 - well now you pick a second random number
18:22 - point 1 is going to make it past this
18:24 - level 90% of the time point 2 is gonna
18:27 - make it past 80% of time 0.8 is only
18:29 - gonna make it past 20% of the time so
18:31 - this is linear but I think it'll do
18:33 - pretty well for now and then I want to
18:35 - map that value which has a value between
18:38 - 0 and 1 and so I don't really need to
18:40 - map it I'm just a random 1 times 36 so
18:44 - now we should have more smaller ones and
18:50 - you can kind of see this is true right
18:52 - there's there's a lot more smaller ones
18:54 - than big ones okay Lucas in the chat is
18:58 - giving me an excellent suggestion which
19:01 - is to use the absolute value of a
19:03 - Gaussian distribution let's try that so
19:07 - what I'm going to do is I'm gonna
19:08 - comment this solution out and I'm going
19:14 - to give myself a random Gaussian number
19:19 - so they're in P 5 there is a function
19:22 - that will give you a Gaussian
19:23 - distribution which is a normalized
19:25 - distribution or the bell curve and I can
19:27 - change I can alter the mean or the
19:29 - standard deviation so I could say the
19:32 - mean I want the mean to be 0 but but I
19:38 - want to the standard deviation to be
19:40 - let's call it 36 so I'm going to say R
19:45 - equals random Gaussian x 36 I'm gonna
19:49 - scale it up and then I'm going to return
19:52 - the absolute value because random
19:55 - Gaussian will give me negative numbers
19:56 - all centered around zero and will give
19:58 - me a lot more smaller ones than larger
20:00 - ones let's take a look at this whoa
20:03 - that's a lot more so I don't want that
20:06 - standard deviation that big I suppose I
20:12 - could also square it you know I don't
20:20 - want the and then yeah this is kind of
20:27 - now I'm kind of getting somewhere but I
20:29 - am kind of liking how this looks it is
20:31 - running very slow over time so why is it
20:34 - running so slow over time because I have
20:38 - many many snowflakes and in fact I'm
20:40 - adding so many but they these small ones
20:43 - never really get to the bottom so one
20:45 - thing I need to do is I need to in
20:48 - addition to having a a maximum velocity
20:56 - I also want to say if this dot velocity
21:00 - magnitude magnitude is greater than is
21:11 - less than 1 this dot velocity normalize
21:21 - ok so and is it I don't think it's
21:24 - possible because there's some and I also
21:27 - think that I want to say so actually do
21:35 - you know what I can do I don't actually
21:36 - need to do this limiting here I think I
21:40 - don't want to ever create a snowflake
21:41 - that's less than like 2 pixels so
21:44 - another thing that I could do is I can
21:46 - constrain that absolute value squared
21:51 - between two pixels and
21:53 - 36 pixels so now because you can see
21:57 - there were just so so many small ones
21:59 - and so this now if we look at the size
22:02 - you know I'm staying it's getting bigger
22:05 - over time but I'm hopefully staying a
22:09 - bit more within the realm of reason yeah
22:12 - look how many small so I think though
22:14 - that I do need the minimum velocity to
22:17 - be more than do you think that I want
22:24 - them to move at least let's try let's
22:26 - try something
22:36 - this velocity dot that dot normalize
22:42 - okay so this should be better but I can
22:53 - also really fix the number by as
22:56 - everybody is suggesting by just
22:58 - recycling them so let's try that
23:02 - let's try instead of deleting them let's
23:09 - just create a function in the snowflake
23:14 - called randomize and what that function
23:19 - is going to do is actually all of this
23:23 - stuff
23:32 - and so when when this dot pause dot y is
23:45 - greater than C merging if I had just had
23:49 - the whiteboard I was drawn that breath
23:52 - and it would have made more sense if
23:53 - this dot pause iy is greater than height
23:55 - plus this dot R then this dot randomized
24:01 - so I'm just going to recycle these once
24:04 - I get to the bottom I'm gonna recycle
24:06 - them back up to the top this way I can
24:08 - really control the number of snowflakes
24:11 - I kind of want to just start this whole
24:13 - challenge over so let's let's have 300
24:17 - and let's see what happens so this is
24:21 - going to consistently only ever have 300
24:24 - what's a little bit interesting about
24:25 - this is that the smaller ones takes so
24:28 - long to get to the bottom oh I'm still
24:32 - adding them so one thing that I need to
24:34 - do is stop adding them if I'm gonna do
24:36 - this approach and this we should see
24:40 - over time we're gonna have very few
24:42 - large ones so that distribution is
24:45 - actually going to be even smaller
24:48 - because this the small ones takes so
24:51 - long to go anyway so so they like stay
24:54 - on the screen so actually I'm going to
24:57 - alter the distribution a little bit
24:59 - let's do one more let's do one more way
25:07 - of changing the size I'm just going to
25:12 - pick a random number between 0 & 1 and
25:15 - I'm going to square that number and I'm
25:21 - going to return 1 minus R so this is now
25:25 - if I had a whiteboard I could diagram
25:27 - this okay hmm
25:33 - oh but I need to scale that up by 36 so
25:37 - you can see what this looks like it's
25:39 - hard to tell but there should be many
25:41 - fewer now let me put that to the tenth
25:43 - power
25:46 - not one - are why do I think was one -
25:48 - are oh yeah there we go this is what I
25:53 - mention - and what I actually want to do
25:56 - is have at least a minimum size of 0.1
26:01 - there this is pretty good let's have a
26:05 - minimum size of point to and besides 0.5
26:11 - I'm just curious here all right okay so
26:19 - I think this now is working pretty well
26:21 - and actually what I want to do is
26:24 - constrain that result to between two
26:27 - pixels and 36 and won't anything less
26:29 - than two pixels there we go okay
26:35 - this is starting to look pretty good boy
26:37 - if I spent power 10 is a bit large I
26:40 - didn't realize I did that had that in
26:42 - there okay but I kind of like it with
26:44 - that distribution so if I'm going to
26:55 - constrain it then I can do this okay
26:58 - let's see how this looks so anyway we've
27:01 - seen so many different ways of creating
27:04 - more values that are smaller than larger
27:09 - and I'm gonna leave this one in here as
27:11 - this kind of simplest solution which is
27:13 - just to take a random value between 0
27:15 - and 1 and make that exponential so I've
27:19 - much more likely to pick a smaller one
27:21 - than a large one because it is squaring
27:25 - and value less than 1 is making that
27:27 - value smaller but I'm actually doing it
27:29 - to the 5th power that sort of thing okay
27:31 - so so now what I want to do is finally
27:35 - go and let's try to use this sprite
27:37 - sheet so Alka I think generously I think
27:45 - there's a thirty to one so this is going
27:49 - to be good it's going to be I'm going to
27:50 - do this flakes 32 dot PNG so if I
27:56 - understand what this image is correctly
28:00 - it is a whole bunch of snowflake designs
28:05 - that are 32 by 32 pixels now again I
28:08 - would like to suggest that you as a
28:10 - viewer generate these algorithmically
28:12 - but I'm just gonna copy them from this
28:15 - image so I've actually never done this
28:17 - before this is a way of you know it's I
28:20 - what I would always do is just load
28:21 - these those all separate images it was
28:22 - obviously much better to load just a
28:24 - single image file and see if I can copy
28:26 - the pieces of it so let's see if this
28:28 - works
28:28 - ooh boy this is exciting okay so so
28:32 - let's go to here let's add preload I'm
28:38 - gonna call this I'm gonna call this
28:41 - textures and I'm gonna say textures
28:49 - equals load image F 30 flakes 32 PNG
28:57 - okay so let's first just make sure that
29:00 - that image is there let's see that it's
29:08 - there oh oh 0 0 let's draw it at 0 0
29:15 - okay so we can see that that image is
29:17 - there so I'm getting all of these
29:21 - snowflake images which is absolutely
29:24 - lovely and what I want to do now is copy
29:29 - them into separate images so I'm gonna
29:34 - call this files and I'm gonna call and
29:37 - make another array called textures of
29:39 - file it's a call this file and what I
29:43 - want to do is I want to say for every X
29:48 - all the way up to I guess we could call
29:52 - this sprite sheet is that the it's not
29:56 - an array why did I set it as an array
29:58 - I'm losing my mind it's an image it's an
30:04 - image the textures will be an array I
30:06 - want to load that one image and then
30:09 - chop it up and I'm sure there's a way to
30:11 - do this autumn
30:12 - matically with some library or something
30:14 - but I'm gonna do it manually here so I'm
30:15 - gonna load that image and then I'm gonna
30:18 - want to go through the width of that
30:23 - image X plus equal 32 so I'm going to
30:26 - assume that each one of those is 32 by
30:28 - 32 and then I want to go through the Y
30:37 - and then what I want to do is I want to
30:41 - get a new image I want to say an image
30:44 - is sprite sheet dot get now what's the
30:49 - chance that this works sprite sheet get
30:52 - X comma Y 32 32 this should pull out a
30:56 - slice the get function in p5 should pull
30:59 - out a slice of that image a little
31:01 - square just from that position and then
31:04 - I can say textures dot push that image
31:12 - alright now here's the thing I want to
31:15 - debug to see that this is really working
31:17 - so I'm gonna just get rid of I'm gonna
31:19 - get rid of the draw function completely
31:21 - and what I also want to do is I am going
31:24 - to draw these images at their X&Y
31:27 - location so let's see if this actually
31:29 - works if the get function does what I
31:31 - wanted to do hmm
31:34 - now I probably need a can't tell if it
31:37 - work because there's no background uh it
31:40 - worked so the get function you can
31:42 - notice it took a little while there
31:43 - because it had to like chop everything
31:45 - up that was kind of a slow process but
31:47 - this actually worked so now I have an
31:48 - array of all those images I can put the
31:55 - draw function back I now what I want to
32:00 - do actually I need to do this beforehand
32:05 - and then what I want to do is give each
32:08 - one a design which is a random texture
32:10 - and I'm going to pass that design in and
32:15 - each snowflake is going to get that
32:20 - design as an image
32:25 - and I that probably should put it in the
32:28 - randomized but let's just get this to
32:29 - work and I'm now going to say instead of
32:32 - drawing it let's say image mode center
32:41 - and then whoops image mode center then I
32:44 - want to draw that image it's current
32:48 - image at with its size okay dare this
32:52 - work oh boy
32:55 - what just happened oh I didn't draw it
32:57 - at the right position I also got to
33:02 - include its position and there we go
33:07 - look at all the snowflakes now I almost
33:10 - feel like I need because they're so
33:12 - lightweight I kind of feel like I need
33:15 - more big bigger ones so I could go back
33:20 - to one of my ridiculous
33:26 - other techniques or I could just lower
33:29 - this let's just square that random
33:32 - number so I have more big ones but
33:35 - that's too many big ones and I should
33:38 - probably constrain it to 32 cuz that's
33:45 - the maximum size look it's our snow
33:58 - [Music]
34:01 - there we've made a nice book what did it
34:05 - take me like an hour it's a 12:45 I was
34:07 - gonna wrap this up around one o'clock
34:08 - but I think that it would I was gonna
34:11 - try to add a little Perlin noise wind
34:15 - well let's try them spinning so I don't
34:17 - understand how this is gonna make it
34:18 - look more like snow but let's try it so
34:22 - let's let's go here and add a variable
34:26 - called angle which can be a random angle
34:29 - between zero and 2pi and I'm going to in
34:35 - when I draw the snowflake I want to say
34:38 - a push translate this dot pause dot X
34:46 - this dot pause dot Y and then draw the
34:50 - image instead at zero zero and then have
34:55 - pop and then after I translate I want to
34:57 - rotate by some angle okay so let's just
35:00 - take a look at this first whoops what
35:03 - did I miss
35:04 - angle is not defined doesn't happen yet
35:16 - okay so I don't know if you can tell are
35:23 - they rotated at random angles it looks
35:25 - like they are yeah I'm definitely gonna
35:28 - do the noise function don't worry
35:30 - everybody it's coming so let's now let's
35:37 - have them rotate based on their
35:39 - velocities magnitude I don't know and
35:44 - that's way too much because we're in if
35:48 - I went to angle mode degrees but I could
35:50 - just divide that by a hundred they're
35:55 - all rotating in the same direction that
35:58 - doesn't seem right let's have them some
36:01 - of them go a randomly to the other
36:03 - direction so let's also have a direction
36:13 - and then oh let me I should write one of
36:15 - those fancy things right
36:16 - were you how do you do that where I have
36:18 - the little boolean thing if random one
36:20 - is is greater than 0.5 I give it a value
36:25 - of 1 or like negative 1 what's this
36:26 - thing called did everybody always uses
36:28 - in complains that I don't ternary
36:31 - operator yeah so someone who someone I
36:33 - never use these because I am just an
36:36 - old-fashioned and fried probably so
36:38 - ternary operation encode turnery let's
36:42 - look at the ternary operation syntax
36:45 - JavaScript I mean it's the same and most
36:49 - I'll get a look at it like this ah this
36:52 - is the condition and if it's true it's
36:54 - this one if it's false it's this one so
36:57 - what I want to say is this right
37:03 - if random is greater than 0.5 give it a
37:06 - value of 1 otherwise negative 1 all
37:09 - right so I think this should work
37:10 - because now I want to change the angle
37:13 - and this should be an update by the way
37:16 - I want to change the angle by this times
37:22 - this direction times this so some of
37:24 - them will go randomly to the other side
37:28 - okay so this is nice with them spinning
37:33 - okay so now I want to do some
37:37 - side-to-side motion so some options are
37:39 - sine wave Perlin noise wind actual like
37:45 - a wind force what does everybody think
37:48 - Perlin noise wind they spin too fast it
37:53 - is kind of fast right so let's make them
37:58 - spin slower sine Alka is suggesting a
38:06 - sine wave so a sine wave just to have
38:10 - them sway left and right like not as a
38:13 - force but as just an oscillating motion
38:17 - interesting I have not tried this so I
38:22 - then would need
38:24 - to have some sort of offset which is the
38:28 - result of sign of maybe that angle I
38:33 - know I said random when I map oh I don't
38:37 - actually need to map because sign goes
38:40 - between negative 1 and 1 times maybe I
38:43 - could use their size and then I can just
38:48 - so I need they need to have an off South
38:50 - X offset which is 0 I'm gonna make this
38:55 - a property of the object and then I'm
39:02 - going to just use that and let's see
39:12 - what happens here whoops
39:16 - what did I miss what'd I get wrong here
39:18 - angle is not defined this dot angle okay
39:30 - let's try this
39:30 - ooh what do we think of this so I could
39:40 - also have them do this with a little
39:41 - wind this is pretty nice this is turning
39:44 - out quite lovely let me get rid of the
39:47 - console
39:57 - [Music]
40:04 - this is actually quite nice all right
40:07 - now we really I really want to put some
40:09 - wind in here
40:10 - now what can I add I want to create some
40:15 - Perlin noise wind so the first thing I
40:17 - just want to see is let me just create
40:19 - some global wind so in draw let me
40:27 - create a variable called wind create
40:32 - vector and I am going to have that be
40:38 - the wind x is going to be just going to
40:42 - control a punt from the mouse and I'm
40:48 - going to create a vector with that I'm
40:50 - going to create a vector and then I'm
40:51 - going to also apply that force so I
40:57 - create a vector so I just want to see
41:00 - how this looks so you can see this wind
41:06 - is much too strong and it's also very
41:09 - uniform so that's not good but it is
41:13 - kind of it's the right idea so let's
41:16 - just I just want to sort of see what the
41:17 - range of magnitude that makes sense is
41:22 - oh one issue is because I'm constraining
41:31 - them with like a top speed if the X
41:35 - force takes over they are not falling
41:38 - anymore hmm so I really should oh this
41:41 - is so problematic my all my weird
41:45 - constraints in here but let's make the
41:47 - wind much weaker so with a weaker wind
41:52 - so okay so this is kind of a there's a
41:55 - lot there's some issues here because as
41:57 - they start to accelerate more and more
41:59 - the but I think as long as I keep the
42:01 - wind fairly weak we're gonna be fine
42:03 - here but I could probably do a better
42:07 - job with the constraining now
42:10 - what if I now have the wind be purlins
42:17 - noisy so instead I'm gonna have and I'm
42:24 - gonna do this in a weird sort of way
42:26 - because what I want also is I want I
42:29 - kind of want to have more of a flow
42:31 - field kind of wind so it's different all
42:38 - over and I could also have the wind
42:40 - pushing it down a little bit with the
42:44 - wind I could have the wind be a vector
42:45 - Oh an angle whoo okay this is really
42:48 - good
42:48 - so actually hold on this so let me
42:54 - change this let me have a X offset equal
43:00 - to zero and now what I'm going to do is
43:03 - I am going to say let wind wind angle
43:08 - equal noise of X offset times two pi
43:19 - then I am going to make a vector from
43:23 - that angle and then I'm just gonna I'm
43:31 - gonna do that right now and then I'm
43:32 - gonna let X offset and I should control
43:36 - it by the mouse just to see if this is
43:38 - working but let's let that X offset go
43:40 - up in time so you can see this is kind
43:44 - of like nuts because it's changing so
43:48 - often and it's quite strong so if some
43:50 - things that I need to do are number one
43:52 - is shrink that shrink that wind down by
43:57 - quite a bit and also have it change less
44:03 - often so and now you can see it's
44:10 - totally uniform so I really don't want
44:13 - to have the same wind for each snowflake
44:16 - oh and of course now I have to have the
44:19 - snowflakes wrap so and and if I wrap I
44:22 - don't mean rap music wise I need them if
44:24 - go off the left to come back on the
44:26 - other side as well or to randomize and
44:29 - go back from the top so so first of all
44:33 - I want to make this wind much smaller
44:34 - and I'm going to need different wind for
44:39 - each flake so I am now going to have the
44:45 - noise x offset is going to be the Z I
44:52 - want to say this is going to be down
44:54 - called Z offset this is kind of like
44:57 - crazy what I'm doing without like
45:01 - diagramming this or really explaining it
45:03 - I'm what I'm going to attempt to do is
45:06 - I'm going to have an X offset which is
45:08 - going to equal the snow the flakes
45:12 - exposition divided by the width of the
45:18 - window and the y offset is going to be
45:21 - the snow's Y position divided by height
45:24 - and so I'm going to get the wind is
45:27 - going to be different depending on where
45:30 - you are with changing very very slowly
45:37 - over time and this should not be here
45:40 - any more this has to be here so now what
45:45 - we should get is there we go we have a
45:49 - nice flow field e distribution of wind
45:52 - so that was kinda like overly
45:54 - complicated well I think what I'm gonna
45:56 - do is when they leave the screen I've
45:58 - just set them back up to the top so I
46:01 - think in the snowflake if they where do
46:07 - I where do I set them so I can say if
46:11 - this pause X so I kind of want this
46:15 - off-screen function because what I want
46:20 - to do is return this or this stop pause
46:26 - dot X is less than negative this dot R
46:30 - or this dot pause dot X is greater than
46:36 - negative
46:37 - that it's greater than with Plus this
46:41 - dot R so if any of these are true if any
46:45 - of these are true its off-screen and
46:47 - then here it's much simpler for me to
46:49 - just say if this dot off-screen
46:55 - randomize okay ah
46:59 - and al-khaliq a good point or signs make
47:02 - a good point
47:02 - that I could start that I that I could
47:05 - keep I could constrain that angle so the
47:07 - wind really kind of so I think but let's
47:16 - let's take a look at this I think this
47:22 - is better not now can you really see
47:23 - that there's wind let's try to make that
47:26 - wind much bigger so what I want to do
47:29 - and I really should put this in the
47:31 - snowflake as a function I should really
47:38 - I should let them enter the opposite
47:40 - side okay that's a really good point
47:43 - because it's weird that they're not
47:45 - entering from the side so what I'll do
47:49 - that's actually a really good point let
47:51 - me change that oh that's so smart so I
47:54 - think I'm going to go back to what it
47:57 - was before whoops
48:13 - what am I doing here there okay so if so
48:20 - I could still use the randomize I you
48:23 - know what I should just have them wrap
48:25 - wrap around so this is their only
48:27 - randomize when they get to the bottom if
48:29 - this dot paws dot X is less than this
48:32 - dot R is less than just this dot R that
48:38 - negative this dot R the only thing is I
48:43 - can't really guarantee that they're
48:44 - gonna re-enter on the other side but
48:47 - let's try it let's say this dot pause x
48:50 - equals this dot with plus this dot R and
48:55 - let's just try if it is greater than
48:59 - width plus the star let's set that to
49:03 - negative let's just try this this is
49:06 - wrapping left and right let's see if
49:10 - this kind of has a nicer effect with not
49:14 - this dot with thank you that was a
49:17 - mistake so this should help so hopefully
49:23 - that helps a little bit I kind of want
49:25 - to have more snow it feels like it's too
49:27 - few particles so I'm gonna go back to
49:29 - the sketch and see if I can get away
49:31 - with 400 okay now I want to see the wind
49:37 - be a little bit stronger just to have a
49:39 - sense that that's actually doing
49:40 - something and so I'm going to do that
49:43 - here I'm gonna make the wind 10 times as
49:51 - strong just to sort of see yeah so if
49:54 - you can see that whoa there's a lot more
49:56 - swirling going on here so that's kind of
49:58 - interesting I mean finding the right
50:00 - balance there you can see how there's a
50:02 - flow field that they're following
50:03 - gravity probably needs to be a lot
50:05 - stronger if I'm gonna make that win that
50:07 - much stronger so let's go and make the
50:10 - gravity also stronger so I don't know
50:17 - what's gonna cancel what out but you can
50:19 - see balancing those two forces of the
50:21 - wind and gravity on the sine wave I kind
50:24 - of want to see the sine wave also maybe
50:27 - be a little bit more prominent so where
50:29 - do I calculate that that X offset um
50:32 - let's let's just expand that by five
50:35 - just out of curiosity yeah
50:38 - so that's too much but let's expand it
50:42 - by two and maybe that angle is kind of
50:45 - oh because it's tied to the spinning so
50:50 - I could actually also have it oscillate
50:53 - twice as fast so I don't know there's
50:58 - Pearlie noise Winn
51:00 - there's oscillating sine waves I think
51:02 - maybe wind should change over time it is
51:04 - changing over time if I programmed it
51:06 - correctly the wind is changing over time
51:09 - because the Z offset is changing over
51:13 - time I could make that happen much
51:14 - faster
51:15 - I don't know how noticeable this will be
51:17 - so now there are so many parameters here
51:19 - so this I don't know that this was a
51:23 - coding challenge this was more just like
51:25 - I think this live stream might just
51:26 - stand alone as a live stream and all of
51:28 - its mess maybe they'll edit this out
51:30 - maybe I'll come back and redo this
51:31 - coding challenge but what I would like
51:35 - is to see people do creative variations
51:38 - on this so what are some things you
51:40 - could do number one is you could be more
51:41 - thoughtful about the design you could
51:43 - add other elements to the scene you
51:44 - could have the snow pile up you could
51:46 - generate algorithmic snowflake designs
51:50 - you could be more you could create a lot
51:52 - of sliders to control all the different
51:54 - possibilities here am i but this I could
51:58 - do a background I should do a background
52:00 - I could add some text make some of them
52:02 - translucent oh my god so many different
52:04 - possibilities so I'm gonna leave that
52:06 - maybe I'll come back and add some of
52:07 - those features but we're gonna save this
52:09 - and I am now going to go back I mean how
52:16 - could it go back to my fundraiser is
52:21 - anybody still watching this
52:26 - [Music]

Cleaned transcript:

hello welcome to a winter themed coating challenge you know something that I that I thought I should say is this coding challenge is probably very similar to my previous Purple Reign coding challenge but instead of Purple Rain we're going to have wintery white snow so I've got a blank p5.js sketch here I am going to try to make little snow particles that fall I'm getting some suggestions from the chat about like wind and that type of thing so let's just get started oh I've got a nice PNG snowflake there okay so I'm getting lots of so this I don't know how this is gonna go you might be watching this as a recorded video sometime in the future from your spaceship that's flying around but but I at the time of this recording there's a live chat going on and I'm gonna try to get some good suggestions so the very first thing that I need to do this is my codes all it is I'm gonna start with an objectoriented approach and I'm actually going to make a new JavaScript file and I'm gonna call that file snowflake dot Jas and I am going to make a class called snowflake and that class is going to have a constructor and it's going to have a position and all of these are going to be vector objects if you haven't seen a vector object yet a vector is an object that holds an X or Y and a Z because we could do this later maybe a part two in 3d and WebGL we could swirl around the snow and go through it in 3d or boy wouldn't that be exciting but we need a velocity and we need an acceleration all right now also we want a function just to render the snowflake and for now I'm just gonna say it's white and it's about four pixels wide and it is just a point and so the point will be at the position the X&Y position oh look at this I'm wonderful sprite sheet of snow textures we're gonna grab that so thank you I'm seeing that being submitted Alka if you could make me a nice like URL that I can download it here as we're going alright so what do I want to do now okay so I definitely want to have an array so I'm gonna make an array empty a ram to call it snow and what I'm gonna do is I'm gonna say snow dot push a new snowflake so I'm gonna have at least one new snowflake I'm gonna have one new snowflake and then I'm going to say for every flake in of snow right this is my new favorite kind of JavaScript loop where I have an array of many things and I could say for every element in that array but it's up in does something different oh I got to do a video about that cuz I really botched my previous one I'm gonna say snow Oh flake dot render and let's probably pass in never mind let's let's let's set the location of the snow in the constructor itself let's just hard code it right now and let's see we get Oh snowflake is not define why is snowflake not defined because I forgot in my HTML file to reference that javascript file and I'm being told by Simon that maybe I have a syntax error somewhere I'm not sure where I'll let's just see what happens oh there it is there is a beautiful snowflake I have a keyboard now I don't know how to use it yet but very excited about this edition okay there is the beautiful snowflake now what I could do is I could actually say in draw let's keep adding snowflakes now I think I'm adding many many many snowflakes but they're all being added right in the same spot so let's add all of our snowflakes at a random location let's pick a random with a random exposition and a random Y position is associated with snow in my head it's a winter or something anyway now here's the thing I think I want to create all my snowflakes above off the screen and have them fall down so let's do that so let's actually in the snowflake object let's create the Y location something like between negative 100 and negative 10 so somewhere above the window so now if I were to rerun this sketch I won't see any of it but I can add a function I'm going to call it update and what I'm going to do an update is I'm going to add the velocity to the position and breaking news drew breaking news somebody will think that sound effect eventually I now have our sprite sheet there we go so let me download this desktop snow and call it flakes 16 okay so we've got some images we'll be able to use later great okay now oh I would say is the position of each snowflake needs to change over time how about based on the object's velocity so I can use vector math to say add the velocity to the position every frame and so I can now say flake update I want them all to update now I still see them moving down cuz they none of them have a velocity so I could do something just to test and I could say hey give all of them a velocity vector that's kind of fast pointing down like zero comma five and we would see there's all of us know but this this this is not really snow yet right what we want I mean it's never gonna be actual snow wouldn't it be wonderful like it's magic I need more props have snow falling in but what I want is I want to see it feel a little bit more like gravity so what I'm going to do is I'm actually gonna create a global variable called gravity because gravity isn't part of a snowflake it's part of the world so to speak and I'm gonna say gravity equals create vector and I'm gonna make up something a little small gravity pointing down and then actually what I want to do is again I want the velocity to start at zero but I want the acceleration equal to gravity and I want to add the object's acceleration to its velocity so I'm gonna do more with this in a little bit but the idea is gravity is a force a force is a vector that moves an object with mass that accelerates an object with mass F equals n times a right so so what I want to do is take the gravity force and put it in the objects acceleration which changes the velocity over time and what we would see now is snow starting to fall faster as it gets further down right so this is starting to look a little bit more like snow there's a lot more for us to do here we want to we want to add some wind you know we probably want the gravity in the case of snow gravity's probably the wrong word I should just to be very light so it feels like it's moving very very slowly however hmm I wanted to create this parallax effect so so how do I do that let's think about this well one thing I would like to do is give the the give this the snowflakes themselves some kind of size so let's try this let's give them a property called R that's a random number between four and eight and use that as the stroke weight and we can see now this is kind of nice right so this is nice now somebody in the chat I don't know want some help here so what do I want I want the bigger ones falling slower and the smaller ones falling faster no the other way around if something's further away it's smaller and it will look like it's falling slower if it's bigger it's closer to look like it's falling faster is that right and so should I actually just alter the gravity like let's make a copy of the gravity vector so one thing I should do okay so first of all I should write a function called apply force and that takes a force and what it does is it just adds that force to the object's acceleration big and then I clear out the acceleration every frame so this is known as force accumulation I have lots of videos that go through this in more detail but the idea is there's different techniques for doing this that what I want to do is say there's a bunch of forces in the world I want to accumulate all of those forces so so like I might have some wind I might have some gravity so and we may be at some like Perlin noise flow field kind of thing yes I need to have a mass and although people are giving me great suggested to the child I'm gonna get to those not ready yet so what I really want to do is I just want to say flake apply force gravity because gravity is a force that's coming from outside that I want to send into each snowflake so this should really be the same exact the same exact sketch now we've really got to fix something before we get too far so number one is IV either want to like recycle the snowflakes when they get to the bottom or remove them because as you know this is already running really slow after a little while let's deal with that so what I want to do is I want to loop and actually I'm going to do this thing that I do in lots of coding challenges where I'm gonna loop through an array backwards and I'm gonna say if flake offscreen snow dot splice I can't type today I comma one so what am i doing so what I'm doing here is I want to go through every miss flake if snow index I is offscreen so I need to use an iterator a counter to go through all the elements of the array because I want to eventually use the splice function which removes something from the array and the thing that it removes i specify the index i want to remove the snowflake at that index and just just the one i don't want to remove the one the one after and i'm going through the array backwards so as i remove them the array slides down and is shorter and I don't end up missing any elements definitely done this in other videos before okay so this isn't going to work because this idea solely off screen isn't magic so I need to go back to the snowflake object and I need to write a function called offscreen and yeah I'm being told breaking news to do that I'm being told that I have I plus plus somewhere where I need I I will fix that but definitely would result in a problematic infinite loop I now want to say return of the boolean value of if it's offscreen and I can determine that by saying this dot pause dot Y is greater than is it greater than height plus this dot R so in other words if it's off the screen based on its size then then return this will evaluate to true or false if it's true it's off the screen all right all right back to sketch now this definitely needs to be I thank you for that correction and now let's rerun this sketch all right now the question let's look at the length of the array 194 193 so that's definitely working it's kind of hovering around 200 particles which is reasonable to render that's good okay so now I think what I want is let's try to get that parallax effect let's see if we can make that happen so what what would happen if I before I send in the force oh so interestingly enough I'm ignoring an aspect of Newton's law so typically I might do something like this right what did I just do here what I said is before I take that incoming force and add it to the acceleration divided it by mass and that's because force equals mass times acceleration or acceleration equals force divided by mass so this is me dividing it by mass now of course with gravity ha the force of gravity is scaled by mass because force of gravity equals the mass of one object engine masters another object divided by just 2 squared so this is kind of actually irrelevant here this is problematic so I am going to not include this right now but what I'm actually going to do is I am going to I'm gonna like have a little like parallax that how you spell it parallax effect hack let's see if this works somebody will hopefully help me with this I really need help with this so what I want to do is I want to make a copy of that incoming force and I just want to I'm just going to multiply it by the object size because if it's bigger I want that force to appear let it and that it's stronger and then I'm gonna do that so let's this let's see if let's see what this does I think it's not strong enough and also there's kind of an issue where yeah let's let's make this size differential much more extreme that's sort of like kind of I forgot to set the terminal velocity that's a good point so I should have the snow have a terminal velocity and that terminal velocity so let's let's try that let's see if we can make this this terminal V equals this dot R we're gonna make it related to its size I don't need another variable let's try that okay so let's see I'm so I'm very thrown off by the so I want to say this dot velocity dot limit this dot R so the limit is a vector function that takes a given vector and limits the length of it so let's see how this what this does too much speed yes way too much speed right so let's say it's limited by its size times point like 20 percent of its size that's better right all right let's see if we can use a sprite sheet now really as an exercise to yourself if you're watching this and you're following along you should stop right now more small ones and fewer big ones okay great suggestion so how do we do that oh I love this suggestion how do we have pick a random number that's more likely to be small than big let's write a function called get random size and I'm going to just put that separately up here function get random size and what I'm going to do now is let's do the pick two random numbers approach this whole this will kind of be easy so I want to pick two random numbers and I'm going to say if random 2 is less than random 1 or its greater than waitwaitwait is greater than random 1 so smaller numbers will be more often then return random 1 while true so this isn't very efficient I feel like there's so many other more efficient techniques but basically basically what I'm doing is I am trying to pick 2 random numbers 1 which qualifies the other one so so in other words let's say I pick a point 1 well now you pick a second random number point 1 is going to make it past this level 90% of the time point 2 is gonna make it past 80% of time 0.8 is only gonna make it past 20% of the time so this is linear but I think it'll do pretty well for now and then I want to map that value which has a value between 0 and 1 and so I don't really need to map it I'm just a random 1 times 36 so now we should have more smaller ones and you can kind of see this is true right there's there's a lot more smaller ones than big ones okay Lucas in the chat is giving me an excellent suggestion which is to use the absolute value of a Gaussian distribution let's try that so what I'm going to do is I'm gonna comment this solution out and I'm going to give myself a random Gaussian number so they're in P 5 there is a function that will give you a Gaussian distribution which is a normalized distribution or the bell curve and I can change I can alter the mean or the standard deviation so I could say the mean I want the mean to be 0 but but I want to the standard deviation to be let's call it 36 so I'm going to say R equals random Gaussian x 36 I'm gonna scale it up and then I'm going to return the absolute value because random Gaussian will give me negative numbers all centered around zero and will give me a lot more smaller ones than larger ones let's take a look at this whoa that's a lot more so I don't want that standard deviation that big I suppose I could also square it you know I don't want the and then yeah this is kind of now I'm kind of getting somewhere but I am kind of liking how this looks it is running very slow over time so why is it running so slow over time because I have many many snowflakes and in fact I'm adding so many but they these small ones never really get to the bottom so one thing I need to do is I need to in addition to having a a maximum velocity I also want to say if this dot velocity magnitude magnitude is greater than is less than 1 this dot velocity normalize ok so and is it I don't think it's possible because there's some and I also think that I want to say so actually do you know what I can do I don't actually need to do this limiting here I think I don't want to ever create a snowflake that's less than like 2 pixels so another thing that I could do is I can constrain that absolute value squared between two pixels and 36 pixels so now because you can see there were just so so many small ones and so this now if we look at the size you know I'm staying it's getting bigger over time but I'm hopefully staying a bit more within the realm of reason yeah look how many small so I think though that I do need the minimum velocity to be more than do you think that I want them to move at least let's try let's try something this velocity dot that dot normalize okay so this should be better but I can also really fix the number by as everybody is suggesting by just recycling them so let's try that let's try instead of deleting them let's just create a function in the snowflake called randomize and what that function is going to do is actually all of this stuff and so when when this dot pause dot y is greater than C merging if I had just had the whiteboard I was drawn that breath and it would have made more sense if this dot pause iy is greater than height plus this dot R then this dot randomized so I'm just going to recycle these once I get to the bottom I'm gonna recycle them back up to the top this way I can really control the number of snowflakes I kind of want to just start this whole challenge over so let's let's have 300 and let's see what happens so this is going to consistently only ever have 300 what's a little bit interesting about this is that the smaller ones takes so long to get to the bottom oh I'm still adding them so one thing that I need to do is stop adding them if I'm gonna do this approach and this we should see over time we're gonna have very few large ones so that distribution is actually going to be even smaller because this the small ones takes so long to go anyway so so they like stay on the screen so actually I'm going to alter the distribution a little bit let's do one more let's do one more way of changing the size I'm just going to pick a random number between 0 & 1 and I'm going to square that number and I'm going to return 1 minus R so this is now if I had a whiteboard I could diagram this okay hmm oh but I need to scale that up by 36 so you can see what this looks like it's hard to tell but there should be many fewer now let me put that to the tenth power not one are why do I think was one are oh yeah there we go this is what I mention and what I actually want to do is have at least a minimum size of 0.1 there this is pretty good let's have a minimum size of point to and besides 0.5 I'm just curious here all right okay so I think this now is working pretty well and actually what I want to do is constrain that result to between two pixels and 36 and won't anything less than two pixels there we go okay this is starting to look pretty good boy if I spent power 10 is a bit large I didn't realize I did that had that in there okay but I kind of like it with that distribution so if I'm going to constrain it then I can do this okay let's see how this looks so anyway we've seen so many different ways of creating more values that are smaller than larger and I'm gonna leave this one in here as this kind of simplest solution which is just to take a random value between 0 and 1 and make that exponential so I've much more likely to pick a smaller one than a large one because it is squaring and value less than 1 is making that value smaller but I'm actually doing it to the 5th power that sort of thing okay so so now what I want to do is finally go and let's try to use this sprite sheet so Alka I think generously I think there's a thirty to one so this is going to be good it's going to be I'm going to do this flakes 32 dot PNG so if I understand what this image is correctly it is a whole bunch of snowflake designs that are 32 by 32 pixels now again I would like to suggest that you as a viewer generate these algorithmically but I'm just gonna copy them from this image so I've actually never done this before this is a way of you know it's I what I would always do is just load these those all separate images it was obviously much better to load just a single image file and see if I can copy the pieces of it so let's see if this works ooh boy this is exciting okay so so let's go to here let's add preload I'm gonna call this I'm gonna call this textures and I'm gonna say textures equals load image F 30 flakes 32 PNG okay so let's first just make sure that that image is there let's see that it's there oh oh 0 0 let's draw it at 0 0 okay so we can see that that image is there so I'm getting all of these snowflake images which is absolutely lovely and what I want to do now is copy them into separate images so I'm gonna call this files and I'm gonna call and make another array called textures of file it's a call this file and what I want to do is I want to say for every X all the way up to I guess we could call this sprite sheet is that the it's not an array why did I set it as an array I'm losing my mind it's an image it's an image the textures will be an array I want to load that one image and then chop it up and I'm sure there's a way to do this autumn matically with some library or something but I'm gonna do it manually here so I'm gonna load that image and then I'm gonna want to go through the width of that image X plus equal 32 so I'm going to assume that each one of those is 32 by 32 and then I want to go through the Y and then what I want to do is I want to get a new image I want to say an image is sprite sheet dot get now what's the chance that this works sprite sheet get X comma Y 32 32 this should pull out a slice the get function in p5 should pull out a slice of that image a little square just from that position and then I can say textures dot push that image alright now here's the thing I want to debug to see that this is really working so I'm gonna just get rid of I'm gonna get rid of the draw function completely and what I also want to do is I am going to draw these images at their X&Y location so let's see if this actually works if the get function does what I wanted to do hmm now I probably need a can't tell if it work because there's no background uh it worked so the get function you can notice it took a little while there because it had to like chop everything up that was kind of a slow process but this actually worked so now I have an array of all those images I can put the draw function back I now what I want to do actually I need to do this beforehand and then what I want to do is give each one a design which is a random texture and I'm going to pass that design in and each snowflake is going to get that design as an image and I that probably should put it in the randomized but let's just get this to work and I'm now going to say instead of drawing it let's say image mode center and then whoops image mode center then I want to draw that image it's current image at with its size okay dare this work oh boy what just happened oh I didn't draw it at the right position I also got to include its position and there we go look at all the snowflakes now I almost feel like I need because they're so lightweight I kind of feel like I need more big bigger ones so I could go back to one of my ridiculous other techniques or I could just lower this let's just square that random number so I have more big ones but that's too many big ones and I should probably constrain it to 32 cuz that's the maximum size look it's our snow there we've made a nice book what did it take me like an hour it's a 1245 I was gonna wrap this up around one o'clock but I think that it would I was gonna try to add a little Perlin noise wind well let's try them spinning so I don't understand how this is gonna make it look more like snow but let's try it so let's let's go here and add a variable called angle which can be a random angle between zero and 2pi and I'm going to in when I draw the snowflake I want to say a push translate this dot pause dot X this dot pause dot Y and then draw the image instead at zero zero and then have pop and then after I translate I want to rotate by some angle okay so let's just take a look at this first whoops what did I miss angle is not defined doesn't happen yet okay so I don't know if you can tell are they rotated at random angles it looks like they are yeah I'm definitely gonna do the noise function don't worry everybody it's coming so let's now let's have them rotate based on their velocities magnitude I don't know and that's way too much because we're in if I went to angle mode degrees but I could just divide that by a hundred they're all rotating in the same direction that doesn't seem right let's have them some of them go a randomly to the other direction so let's also have a direction and then oh let me I should write one of those fancy things right were you how do you do that where I have the little boolean thing if random one is is greater than 0.5 I give it a value of 1 or like negative 1 what's this thing called did everybody always uses in complains that I don't ternary operator yeah so someone who someone I never use these because I am just an oldfashioned and fried probably so ternary operation encode turnery let's look at the ternary operation syntax JavaScript I mean it's the same and most I'll get a look at it like this ah this is the condition and if it's true it's this one if it's false it's this one so what I want to say is this right if random is greater than 0.5 give it a value of 1 otherwise negative 1 all right so I think this should work because now I want to change the angle and this should be an update by the way I want to change the angle by this times this direction times this so some of them will go randomly to the other side okay so this is nice with them spinning okay so now I want to do some sidetoside motion so some options are sine wave Perlin noise wind actual like a wind force what does everybody think Perlin noise wind they spin too fast it is kind of fast right so let's make them spin slower sine Alka is suggesting a sine wave so a sine wave just to have them sway left and right like not as a force but as just an oscillating motion interesting I have not tried this so I then would need to have some sort of offset which is the result of sign of maybe that angle I know I said random when I map oh I don't actually need to map because sign goes between negative 1 and 1 times maybe I could use their size and then I can just so I need they need to have an off South X offset which is 0 I'm gonna make this a property of the object and then I'm going to just use that and let's see what happens here whoops what did I miss what'd I get wrong here angle is not defined this dot angle okay let's try this ooh what do we think of this so I could also have them do this with a little wind this is pretty nice this is turning out quite lovely let me get rid of the console this is actually quite nice all right now we really I really want to put some wind in here now what can I add I want to create some Perlin noise wind so the first thing I just want to see is let me just create some global wind so in draw let me create a variable called wind create vector and I am going to have that be the wind x is going to be just going to control a punt from the mouse and I'm going to create a vector with that I'm going to create a vector and then I'm going to also apply that force so I create a vector so I just want to see how this looks so you can see this wind is much too strong and it's also very uniform so that's not good but it is kind of it's the right idea so let's just I just want to sort of see what the range of magnitude that makes sense is oh one issue is because I'm constraining them with like a top speed if the X force takes over they are not falling anymore hmm so I really should oh this is so problematic my all my weird constraints in here but let's make the wind much weaker so with a weaker wind so okay so this is kind of a there's a lot there's some issues here because as they start to accelerate more and more the but I think as long as I keep the wind fairly weak we're gonna be fine here but I could probably do a better job with the constraining now what if I now have the wind be purlins noisy so instead I'm gonna have and I'm gonna do this in a weird sort of way because what I want also is I want I kind of want to have more of a flow field kind of wind so it's different all over and I could also have the wind pushing it down a little bit with the wind I could have the wind be a vector Oh an angle whoo okay this is really good so actually hold on this so let me change this let me have a X offset equal to zero and now what I'm going to do is I am going to say let wind wind angle equal noise of X offset times two pi then I am going to make a vector from that angle and then I'm just gonna I'm gonna do that right now and then I'm gonna let X offset and I should control it by the mouse just to see if this is working but let's let that X offset go up in time so you can see this is kind of like nuts because it's changing so often and it's quite strong so if some things that I need to do are number one is shrink that shrink that wind down by quite a bit and also have it change less often so and now you can see it's totally uniform so I really don't want to have the same wind for each snowflake oh and of course now I have to have the snowflakes wrap so and and if I wrap I don't mean rap music wise I need them if go off the left to come back on the other side as well or to randomize and go back from the top so so first of all I want to make this wind much smaller and I'm going to need different wind for each flake so I am now going to have the noise x offset is going to be the Z I want to say this is going to be down called Z offset this is kind of like crazy what I'm doing without like diagramming this or really explaining it I'm what I'm going to attempt to do is I'm going to have an X offset which is going to equal the snow the flakes exposition divided by the width of the window and the y offset is going to be the snow's Y position divided by height and so I'm going to get the wind is going to be different depending on where you are with changing very very slowly over time and this should not be here any more this has to be here so now what we should get is there we go we have a nice flow field e distribution of wind so that was kinda like overly complicated well I think what I'm gonna do is when they leave the screen I've just set them back up to the top so I think in the snowflake if they where do I where do I set them so I can say if this pause X so I kind of want this offscreen function because what I want to do is return this or this stop pause dot X is less than negative this dot R or this dot pause dot X is greater than negative that it's greater than with Plus this dot R so if any of these are true if any of these are true its offscreen and then here it's much simpler for me to just say if this dot offscreen randomize okay ah and alkhaliq a good point or signs make a good point that I could start that I that I could keep I could constrain that angle so the wind really kind of so I think but let's let's take a look at this I think this is better not now can you really see that there's wind let's try to make that wind much bigger so what I want to do and I really should put this in the snowflake as a function I should really I should let them enter the opposite side okay that's a really good point because it's weird that they're not entering from the side so what I'll do that's actually a really good point let me change that oh that's so smart so I think I'm going to go back to what it was before whoops what am I doing here there okay so if so I could still use the randomize I you know what I should just have them wrap wrap around so this is their only randomize when they get to the bottom if this dot paws dot X is less than this dot R is less than just this dot R that negative this dot R the only thing is I can't really guarantee that they're gonna reenter on the other side but let's try it let's say this dot pause x equals this dot with plus this dot R and let's just try if it is greater than width plus the star let's set that to negative let's just try this this is wrapping left and right let's see if this kind of has a nicer effect with not this dot with thank you that was a mistake so this should help so hopefully that helps a little bit I kind of want to have more snow it feels like it's too few particles so I'm gonna go back to the sketch and see if I can get away with 400 okay now I want to see the wind be a little bit stronger just to have a sense that that's actually doing something and so I'm going to do that here I'm gonna make the wind 10 times as strong just to sort of see yeah so if you can see that whoa there's a lot more swirling going on here so that's kind of interesting I mean finding the right balance there you can see how there's a flow field that they're following gravity probably needs to be a lot stronger if I'm gonna make that win that much stronger so let's go and make the gravity also stronger so I don't know what's gonna cancel what out but you can see balancing those two forces of the wind and gravity on the sine wave I kind of want to see the sine wave also maybe be a little bit more prominent so where do I calculate that that X offset um let's let's just expand that by five just out of curiosity yeah so that's too much but let's expand it by two and maybe that angle is kind of oh because it's tied to the spinning so I could actually also have it oscillate twice as fast so I don't know there's Pearlie noise Winn there's oscillating sine waves I think maybe wind should change over time it is changing over time if I programmed it correctly the wind is changing over time because the Z offset is changing over time I could make that happen much faster I don't know how noticeable this will be so now there are so many parameters here so this I don't know that this was a coding challenge this was more just like I think this live stream might just stand alone as a live stream and all of its mess maybe they'll edit this out maybe I'll come back and redo this coding challenge but what I would like is to see people do creative variations on this so what are some things you could do number one is you could be more thoughtful about the design you could add other elements to the scene you could have the snow pile up you could generate algorithmic snowflake designs you could be more you could create a lot of sliders to control all the different possibilities here am i but this I could do a background I should do a background I could add some text make some of them translucent oh my god so many different possibilities so I'm gonna leave that maybe I'll come back and add some of those features but we're gonna save this and I am now going to go back I mean how could it go back to my fundraiser is anybody still watching this
