With timestamps:

00:04 - hello I think I am streaming live I am
00:07 - here in New York City at the
00:11 - facilities of ITP in a small room with a
00:14 - camera and a laptop and a screen and a
00:16 - green screen uh to talk about what's new
00:19 - in processing 3 I did this about a week
00:21 - ago and found some bugs in uh processing
00:24 - 3 and I'm going to attempt to do this
00:26 - again so the if you happen to be
00:27 - watching and I'm sort of looking over
00:29 - here at this other screen here to see if
00:31 - there is anyone watching I can't tell
00:34 - but and first of all if you are watching
00:35 - please tell me how the audio is because
00:37 - I need to stop and start if the audio is
00:39 - no good but what I'm going to do here is
00:41 - twofold one is I'm going to improvise
00:44 - and talk and like kind of go through my
00:46 - script and look at some things and get
00:47 - kind of get ready and then at a certain
00:49 - point I'm going to hit a record button
00:51 - over here which is that's when I'm going
00:52 - to start trying to record the more
00:54 - official video the one that I'll save
00:55 - for later posting but all of this the
00:57 - raw footage and everything will be
01:00 - uh stored forever and ever on YouTube
01:03 - unless I decide to delete it because
01:04 - it's way too embarrassing but it has to
01:06 - get really embarrassing for me to find
01:07 - it embarrassing because generally I'm
01:10 - I'm just embarrassing
01:12 - um I'm I'm in a room by myself talking
01:14 - to a camera which is just embarrassing
01:17 - uh so uh oh and uh if I have some time
01:19 - you know I I have about uh an an hour
01:22 - and a half to do this not that anyone
01:24 - would I expect be sitting here and
01:26 - watching this for an hour and a half but
01:27 - at a certain point once I get through
01:28 - some of the stuff that I need to get
01:30 - through I'm also happy if you're got the
01:31 - chat open if you want to ask random
01:33 - questions about processing or other
01:35 - types of creative coding things I'm
01:37 - happy to try to answer uh questions as
01:39 - well so I'm going to take a quick look
01:41 - over here at the chat uh to see if
01:43 - anyone posted anything uh uh I love that
01:46 - there's from the UK and turkey it sounds
01:48 - like the audio is good which is
01:50 - excellent uh so um the first thing I'm
01:52 - going to do is just kind of talk through
01:53 - my script here um let's see if I can
01:56 - pull that up so this is for the video
01:58 - what I'm int what I think I'm going to
01:59 - talk I want to sort of say hello and
02:01 - welcome who's this video for who am I uh
02:04 - and that the video is about what's new
02:05 - in processing 3 I want to look at the
02:07 - welcome screen um which uh has um a sort
02:12 - of option of what to do in terms of like
02:14 - saving your processing to Sketchbook
02:15 - versus you're processing a three
02:17 - Sketchbook uh I want to look at the
02:19 - editor and kind of there's a lot of new
02:20 - stuff in the editor in terms of just
02:22 - visual design and color but I want to
02:24 - mostly look at the error checking how
02:26 - that works Auto completion uh tweak mode
02:29 - and uh the debugger however I'm not
02:31 - going to spend very much time on the
02:32 - debugger because I have an entirely
02:34 - other video that I already made about
02:35 - the debugger uh I want to just emphasize
02:39 - how much faster and speedier and less
02:41 - flickery the open jail renderers are
02:43 - this is really du due to many people's
02:45 - work uh but single lot a few Andre cbri
02:48 - and yakob vter did I pronounce that
02:51 - right uh spend a lot of time working on
02:54 - the openg renderer uh there's a new full
02:56 - screen function you can span on multiple
02:59 - displays on talk through that talk a
03:01 - little about support for high density
03:03 - displays um uh just mention briefly some
03:08 - of the the sort of stronger restrictions
03:10 - in terms of how you call the size
03:11 - function look at the contributions
03:13 - manager and how amazing and wonderful it
03:15 - is now and next steps and the wiki and
03:19 - GitHub and how you can contribute and
03:20 - all that sort of stuff so that's my
03:21 - script does anybody have any feedback on
03:24 - that script uh what I like to do since
03:26 - there's a 30se second delay before you
03:27 - hear what I say is I like to do magic
03:30 - tricks with my magic invisible water
03:31 - this is water that's
03:36 - invisible but oh so
03:40 - delicious okay that was about 30 seconds
03:42 - of me drinking the
03:44 - water
03:46 - uh let's see I don't see any other
03:49 - comments I got 14 14 that's one in a
03:53 - four double digits people watching this
03:56 - I'm really Ming up in the world uh so I
03:59 - think that's kind of my
04:01 - plan interested in the difference
04:03 - between open GL and how to get the most
04:05 - from that so um Mike uh bronberg asked
04:08 - which I don't know if I pronounced your
04:10 - name correctly uh uh how to get the most
04:13 - from some of the new stuff in opengl so
04:15 - maybe I can talk about that a little bit
04:16 - after I get sort of this core video done
04:18 - the core video I just want to be like 10
04:20 - to 15 minutes and kind of gloss over the
04:22 - higher level stuff and then maybe we can
04:24 - have a little bit of discussion to be
04:25 - honest with you I'm not as uh my my
04:28 - expertise in terms of kind of like
04:31 - the the guts of the open gel stuff and
04:33 - processing is not as uh deep as it could
04:36 - be um just been kind of watching with
04:38 - Glee and amazement of how much work has
04:40 - gone into the open gel engine but I can
04:41 - try to offer a few tips or a few bits of
04:43 - knowledge that I have but um that's that
04:46 - good enough okay um any other questions
04:50 - comments losing viewership folks down to
04:53 - 12 I really I need like I want like a
04:55 - giant ticker just so I can be like
04:57 - inundated with this like number just
04:59 - really it's like strange I don't have
05:02 - the like Periscope thing where I just
05:03 - see hearts floating everywhere I just
05:05 - like maybe I could have some like hearts
05:07 - hanging from the ceiling in this room
05:08 - which would make me feel better I have a
05:11 - you you I I feel the warmth and love of
05:13 - the world in this strange place by
05:15 - myself talking to a camera you studio
05:18 - audience okay so uh rather than keep
05:20 - rambling I am going to get started to
05:22 - make this video I think
05:24 - because I think I'm ready to do it I the
05:26 - thing is I'm probably going to have to
05:27 - do it a couple times which when I'm
05:29 - going to record this a couple times I'll
05:30 - do it once try to get through the whole
05:32 - thing and if you guys have questions or
05:34 - feedback I'll record it again if there's
05:35 - anyone out there with a flare or a
05:38 - talent for video editing it's possible
05:40 - that I could conceivably
05:43 - um uh make the final video as kind of
05:45 - editing together pieces of like the good
05:47 - part from here and a good part from here
05:49 - but you know my sort of style is just
05:50 - try to do the whole thing in one take
05:52 - it's informal and I'll make mistakes
05:53 - along the way but that's also okay so
05:55 - I'm going to come back to my magic water
05:58 - because I need some water before I
06:03 - start and um I think that's
06:09 - it does the line have move up down yet
06:12 - text editor does the line move up down
06:14 - yet me goes to download Line duplicate
06:16 - in place sorry I don't understand that
06:18 - question zhie so um if you want to
06:21 - clarify I can maybe kind of look at it
06:23 - again later I am however because I I get
06:26 - distracted by seeing myself in this chat
06:28 - page I'm going to kind of close CL this
06:30 - laptop for a second so I won't be
06:31 - looking at the chat for like about 10
06:33 - minutes or so I have a non-invisible
06:34 - coffee
06:37 - drink and I think I will get started
06:41 - okay feel like um I need a little more
06:43 - water so I'm having trouble getting
06:44 - going stepping out of frame for a
06:51 - second okay here we go welcome to
06:55 - processing three this is I'm take
06:58 - one
07:02 - Clapper okay I have to go over here oops
07:04 - to turn this mouse on because I got to
07:06 - press the record button you know this
07:07 - mouse is like way in the way okay I
07:12 - should probably have a different
07:12 - background than the just gray one but
07:14 - the gray one will have to
07:15 - do I keep burping which you can probably
07:18 - hear which is like really
07:21 - embarrassing it's live live
07:24 - YouTube okay here we
07:28 - go hello and welcome uh my name is Dan
07:31 - schiffman and I am here right now in
07:33 - this room to talk about uh what's new in
07:36 - processing 3 um processing three is the
07:39 - result of start
07:43 - over uh who am I new in processing three
07:47 - on beh I was going to say that okay once
07:49 - I get some momentum going I'll probably
07:51 - be
07:53 - fine try that one more
07:56 - time hit
07:58 - record hello welcome uh my name is Dan
08:01 - shiffman and I am oh the camera went off
08:04 - good thing I remembered good thing I
08:06 - just started these cameras have this bad
08:09 - habit of powering off after 30 minutes
08:11 - cuz I'm using Canon 5DS I think there's
08:13 - a setting that I can change but I
08:15 - haven't changed it okay stop and here we
08:18 - go this is going to be
08:21 - it hello uh my name is Dan schiffman and
08:24 - I'm here on behalf of the processing
08:26 - foundation and the many many well not so
08:29 - many there not so many there's really
08:32 - just a few core people who volunteer
08:34 - frosting is a very small team there's
08:35 - not a lot of people I want to thank
08:37 - people but without like listing names
08:38 - and all that I guess I won't worry about
08:40 - that too much I can't take any credit
08:41 - for any of this I'm just making the
08:46 - video hello and welcome my name is Dan
08:49 - schiffman I am here on behalf of the
08:51 - processing foundation and all of the
08:53 - volunteers so many people who have put
08:55 - in so much time and effort to make this
08:57 - new thing that's come out right now
08:59 - called processing 3 now processing isn't
09:01 - new processing has been around all the
09:02 - way since 2001 processing 3 is the
09:05 - newest and in my opinion the greatest
09:07 - really really an amazing and like I
09:09 - don't know I sound like Donald Trump in
09:11 - my over exaggeration but it's a really
09:13 - wonderful uh that's going to be like a
09:15 - cultural reference that's no one's going
09:17 - to want to hear two years from
09:21 - now I I'm going to start
09:23 - over no one's really listening to me I'm
09:26 - going to this I that was fine except I
09:29 - said Donald Trump it's the best ever
09:32 - processing video version of processing
09:35 - it's the
09:36 - greatest let's make processing great
09:39 - again
09:41 - okay all right I was not hired for host
09:44 - of The Daily Show clearly okay here we
09:49 - go hello my name is Dan schiffman and I
09:52 - am here on behalf of the processing
09:54 - foundation and all of the volunteers who
09:55 - have put a ton of time and effort into
09:58 - making this new version of processing
10:00 - that has just come out processing 3 now
10:02 - processing is not a new project
10:04 - processing has been around all the way
10:05 - since 2001 it's almost 15 years of work
10:08 - that has gone into processing but this
10:10 - new version has a lot of new features
10:11 - that I'm particularly excited about and
10:13 - so what I'd like to do in this video is
10:15 - kind of Hit the high points and kind of
10:16 - walk through what's new in processing 3
10:19 - see what I can show to you if you have
10:20 - questions maybe you can add them in the
10:22 - comments or find me on Twitter and I'll
10:24 - make more videos to answer some of those
10:26 - questions um but first let me just say
10:28 - so in terms of the audience audence for
10:29 - this video If processing is totally new
10:31 - to you what I might suggest doing is
10:33 - going to the processing website link
10:35 - below as well as the hello processing
10:37 - tutorial which will also be linked below
10:38 - which will give you kind of an
10:39 - introduction to what processing is and
10:42 - uh how and how how to program with
10:44 - processing here I just want to look kind
10:46 - of look at what's new what's new in
10:47 - three that wasn't there in two okay so
10:50 - uh before I get but not before I'm going
10:52 - to just do it right now so the first
10:54 - thing I'm going to do is I have
10:55 - processing 3 look at that wonderfully
10:57 - beautiful icon designed by me because I
11:00 - have no visual Talent whatsoever but I'm
11:02 - so pleased to be involved with this
11:03 - project that so everything looks so
11:05 - wonderful um I'm going to click on this
11:07 - icon and processing three launches now
11:11 - one of the things you'll notice I don't
11:13 - know if this has ever happened before
11:14 - probably has but there's a welcome
11:16 - screen here and uh one of the new things
11:19 - about processing 3 is that processing 3
11:22 - allows the possibility of keeping your
11:24 - sketch folder from processing to intact
11:26 - meaning all the libraries all of your
11:28 - sketches is intact so that if you ever
11:31 - need to go back to using processing 2 or
11:33 - move between the two versions you can
11:35 - have separate sketch folders and this is
11:36 - kind of the recommended way of working
11:38 - you can say you could use your existing
11:41 - Sketchbook folder and just kind of bring
11:43 - all those sketches into processing 3 or
11:44 - you could kind of start fresh and pull
11:46 - things over a little bit as you need you
11:48 - know so the hope of course is that you
11:50 - know after a little while processing 3
11:52 - is going to be the main version you find
11:53 - yourself using but as libraries are
11:55 - still being updated and changing you
11:57 - might want to sort of keep some of your
11:58 - historical stuff if you have a kind of
12:01 - project you have to just get running for
12:02 - this exhibition this day so I'm going to
12:04 - do that uh I'm going to here I'm going
12:06 - to select create a new Sketchbook folder
12:09 - and I'm going to click get started now
12:11 - what it's doing is it is opening up the
12:14 - finder and it's telling me where do you
12:15 - want that new processing sketch folder
12:17 - to be now this won't exist for you I
12:18 - happened to before I made this video I
12:20 - made a folder here called processing 3
12:22 - in my documents folder so that's the
12:24 - folder I'm going to select that's the
12:26 - folder I'm going to hit uh open to and
12:28 - now that is my processing Sketchbook and
12:30 - if I go to Sketchbook you can see
12:32 - there's nothing in there because I've
12:34 - started completely fresh and if I have a
12:36 - shortcut here on the the desktop just so
12:38 - we can take a look at that folder you
12:39 - can see what's been made automatically
12:41 - there a folder for examples libraries
12:44 - modes and tools so those are some things
12:46 - I'll talk about when I get to the
12:47 - contributions manager but uh this is
12:50 - where your sketches would appear as you
12:52 - start to make new ones and save them of
12:53 - course you can save them anywhere on
12:54 - your computer but in you know the
12:56 - Sketchbook is the default location
12:57 - essentially Okay so what's next on my
13:00 - script that's in front of me um let's
13:02 - start looking actually at the at the
13:04 - editor itself so the thing that's
13:06 - changed the most in processing three and
13:08 - just at a glance is the visual design of
13:10 - the editor icons are a little different
13:12 - there's a new button over there look at
13:14 - this line numbers right there's line
13:16 - numbers for your code uh these line
13:18 - numbers look strangely spaced out
13:20 - perhaps it's only because I've made the
13:21 - font for the editor quite large just for
13:24 - demonstration purposes in this video and
13:26 - so in fact I could start typing some
13:28 - code
13:30 - uh and I could say
13:34 - size and I could say
13:38 - draw
13:44 - uh and there we go I wrote some code oh
13:48 - boy did I make a lot of mistakes or what
13:50 - so one of the things that I don't know
13:52 - what just happened there while I was
13:53 - typing or watching I kind of like lost
13:55 - my train of thought for a minute I was
13:56 - like in the zone of being hypnotized and
13:58 - typing but one of the things you'll
13:59 - notice is that where there are errors
14:02 - you'll see oh look at this there's a
14:03 - little squiggly line there showing me
14:05 - there's an error here now you can
14:06 - obviously see I'm missing a second
14:08 - parenthesis here so one of the new
14:09 - features of processing three is that the
14:13 - uh real time error checking as you're
14:15 - writing your code processing behind the
14:17 - scenes is checking to find errors and
14:18 - highlighting them for you in certain
14:20 - ways you can also see this error is is
14:23 - highlighted right here missing right
14:25 - parentheses and look at that isn't that
14:27 - just like the greatest error Mage you've
14:29 - ever seen so one of the things that
14:31 - we've worked on quite hard in this new
14:33 - version is rewriting kind of standard
14:35 - Java error messages to try to make them
14:37 - make a little more sense and be a little
14:38 - friendly and quite helpful and this is
14:40 - you know it doesn't work perfectly in
14:42 - all cases but this is a case where
14:43 - you've seen it's worked quite well so I
14:45 - could go here and I could close that
14:48 - right parenthesis and we could see oh
14:49 - there's some other errors some other
14:51 - squiggly lines what's going on and now
14:54 - ah something else that's new right I'm
14:57 - missing a right curly bracket perhaps uh
14:59 - but one of the things that's new down
15:01 - here that you can see is the the message
15:03 - area the message area where you might
15:05 - normally type things like print line uh
15:08 - ah I sort of messed that up uh the
15:11 - message area is where you might see the
15:12 - results of uh print messages that you
15:14 - put in your code to kind of try to debug
15:16 - your code uh that's always just been the
15:19 - place where you also see the error
15:20 - messages it's one window error message
15:22 - spit out there your print line spit out
15:24 - there there are now two tabs there's the
15:26 - console where where the results of
15:28 - things that you log the console through
15:29 - print line up here and then this errors
15:31 - Tab and this errors tab will actually
15:33 - show you what the current error is and
15:36 - what line number it's on so and and you
15:39 - can see this red dot here is indicating
15:40 - that it's an error I believe there is
15:42 - also the possibility for uh processing
15:45 - to to demonstrate to give you a warning
15:47 - something that's like not such a good
15:49 - idea but your code will run anyway and
15:51 - that would probably be represented by a
15:52 - yellow dot if I'm right about that so
15:54 - let me fix some errors so we can uh I
15:57 - want to kind of demonstrate um some
15:59 - information some some some ideas to you
16:02 - so I'm going to take this out so one
16:04 - thing I want to show you here uh
16:08 - is uh let me do this okay so one thing I
16:12 - want to show you sorry that was a little
16:14 - bit awkward is notice how I'm missing a
16:16 - parenthesis up here and I'm missing a
16:18 - semicolon here previously in this
16:20 - scenario processing would have only ever
16:22 - shown you the first error once you fix
16:24 - the first error then it'll show you the
16:26 - second error now what you'll notice is
16:28 - down here in the console multiple the
16:30 - error console multiple errors are are
16:32 - listed and again you can see missing
16:34 - right parentheses missing a semicolon
16:37 - both of these have the Red Dot they're
16:38 - errors this is like great I love these
16:41 - error messages they're so nice and
16:42 - helpful and explain exactly what they
16:44 - should be so I'm going to correct those
16:47 - errors uh now processing just found one
16:50 - more error notice I didn't actually
16:54 - declare this variable y anywhere but I
16:56 - used it and now I have the V the the
16:59 - variable y does not exist which again is
17:01 - exactly what that error message should
17:02 - be so this is just thrilling and I can
17:04 - fix that error by saying in y and now uh
17:07 - oh I have the I spelled ellips wrong I
17:10 - have another error Spell ellips
17:12 - correctly and now all the errors have
17:14 - gone away uh and I'm going to hit save
17:17 - uh oops I don't need to hit save and you
17:19 - can see that um everything's gone I can
17:21 - click back to the message console so
17:23 - that's a little bit about the error
17:24 - checking I went on a little longer than
17:26 - I might have intended to um but I think
17:28 - I will stop there so that's one of the
17:29 - main new features um in the processing
17:32 - editor now another feature that is very
17:35 - exciting is code completion so first of
17:38 - all that realtime error checking thing
17:40 - that was happening you can actually turn
17:42 - that off if it starts to get in your way
17:44 - it's it's it's telling you errors
17:45 - constantly while you're typing and maybe
17:47 - that's something you just want to see
17:48 - when you when you hit save or when you
17:49 - hit run so in the processing preferences
17:53 - uh right here under continuously check
17:55 - for errors if you wanted to turn that
17:56 - off you could turn that off here I'm
17:58 - going to leave it on on but I'm going to
17:59 - add something else here this is not on
18:01 - by default uh um but it is something
18:04 - that you can quickly enable in the
18:06 - preferences code completion so a lot of
18:08 - you who have worked with other types of
18:10 - development environments are probably
18:11 - quite familiar with code completion you
18:13 - start typing and it's like hey maybe
18:14 - you're saying ellipse or maybe you're
18:16 - saying rectangle let me fill that code
18:17 - in for you this is now available for you
18:19 - in the processing development
18:20 - environment so I'm going to select code
18:23 - completion I'm going to select okay and
18:25 - I'm going to come down here and I'm
18:26 - going to say eel and then I'm going to
18:28 - say control space now code completion
18:31 - doesn't trigger automatically uh um the
18:35 - way that you trigger It Is by clicking
18:37 - control space and you can see when I
18:39 - typed control e control space it's
18:41 - making a guess do I want to type ellipse
18:44 - ellipse mode or use this ellipse
18:47 - constant um and you can see it's also
18:49 - giving you a little bit more information
18:51 - what are the arguments it expects
18:52 - ellipse expects four Arguments for
18:54 - floating Point numbers ellipse mode
18:56 - expect one AR argument and integer so
18:58 - I'm going to do ellipse mode and I'm
19:00 - going to type Center and I'm going to
19:01 - code completion that and you can see uh
19:05 - there we go so this is something that's
19:07 - possible in the IDE um it will also code
19:11 - completion also will pop up if I was
19:13 - making like a vector
19:16 - object whenever I hit the dot so as soon
19:18 - as I say V Dot I see a list of all the
19:21 - available functions for that particular
19:23 - object and I can kind of scroll through
19:24 - them and and select the one that I want
19:26 - and I know that I've got the spelling
19:28 - right and I know what the number of
19:29 - arguments expected are so this is a
19:30 - great uh really great new feature that's
19:32 - um that's in processing 3 okay moving on
19:36 - to the next item uh tweak mode so let me
19:41 - uh let's find an example to open up and
19:43 - I I probably should have thought of one
19:45 - in advance that I meant to open uh and
19:47 - I'm going to go under topics
19:51 - and uh animation uh no
19:55 - wait uh let's do simulation I know so
19:58 - simulation uh flocking this is one of
20:00 - the ones I always like to do and what
20:02 - I'm going to do right okay so you're
20:05 - probably familiar with the Run button
20:07 - this runs the sketch there it is you see
20:10 - it there there is another way you can
20:12 - run the sketch known as present mode uh
20:15 - I'm going to now present mode the sketch
20:17 - which just puts the sketch sort of in
20:20 - front of a background full screen to
20:21 - hide the rest of your operating system
20:23 - desktop and there is now a third way
20:26 - that I can call the sketch trigger the
20:29 - sketch and I'm going to come over to
20:31 - this part because I think this is what I
20:33 - want to demonstrate I can go sketch
20:36 - tweak so I'm going to run this sketch
20:39 - tweak and now notice the sketch running
20:41 - and look at the code I am going to
20:45 - scroll down see certain numbers suddenly
20:48 - have an underline under them and here's
20:50 - some numbers these are the weights in
20:52 - this flocking example each one of these
20:55 - B boid elements operates with three
20:57 - rules sep separation alignment and
20:59 - cohesion so let's say I want to turn off
21:03 - the alignment rule make alignment zero
21:06 - and make cohesion zero and make
21:09 - separation much much higher you can see
21:11 - that the behavior and I really should
21:14 - have to I'm going to do this video again
21:15 - because I'm dis practicing now that you
21:17 - can see how the behavior has really
21:19 - changed based on the strength of this
21:21 - parameter so if you want to just have a
21:23 - quick and dirty way to play with values
21:27 - and how they affect the behav of your
21:29 - code you can do that through this tweak
21:31 - mode interface and then once I hit stop
21:34 - tweak mode is going to ask hey do you
21:35 - want to keep those changes whatever
21:37 - those new variable values are do you
21:38 - want to keep those in the sketch now
21:40 - this is U no substitute for building
21:43 - your own interface or having interesting
21:45 - procedural and algorithmic generative
21:47 - ways to change values in your code it's
21:49 - really just a quick extra tool for
21:51 - sketching out ideas and trying different
21:53 - colors that you can play with and in
21:55 - fact tweak mode has a Color Picker built
21:56 - into it as well which is often useful um
21:58 - in addition to just tweaking different
22:00 - values okay ah and now the last new how
22:04 - long have I been talking for 12 minutes
22:05 - the last new feature that I would like
22:08 - to demonstrate here that's part of the
22:10 - editor is the debugger and I'm actually
22:12 - going to talk very little about the
22:14 - debugger because I've made an entirely
22:15 - separate video about the debugger that
22:17 - you can walk watch and I'll have that
22:19 - linked below again in the description
22:20 - for this video but right here there is
22:23 - this icon this insect icon that if I
22:26 - click it enables a debugger this is is a
22:29 - variable um this is a variable inspector
22:32 - there's different buttons now uh a step
22:35 - continue there's this idea of break
22:37 - points the debugger allows you to run
22:39 - the code stop at a given instant look at
22:41 - all the variable values and step through
22:43 - your code one line at a time to try to
22:45 - determine what the problem might be so I
22:47 - just got that's sort of like the
22:48 - overview of what's possible here with
22:49 - the debugger and um I encourage you to
22:52 - take a look at the other video if you
22:53 - want to kind of dive into that a bit
22:55 - more okay so what else is new in
22:59 - processing 3 so something that has
23:01 - really changed which if you like full
23:04 - screen fast Graphics is that the the a
23:08 - lot of the the engine in particular the
23:10 - openg GL engine the the engine that
23:12 - drives the p2d and p3d renderers has
23:15 - really changed um processing used to be
23:18 - based on this thing called an applet
23:20 - this very ancient piece of technology
23:23 - that used to allow you to embed Java
23:25 - programs into a web browser well that's
23:27 - a really dead technology and was kind of
23:29 - a stumbling block this uh with each
23:32 - sketch being tied to being an applet
23:35 - could really hampered performance and
23:36 - certain types of things that you might
23:38 - want to do full screen with a sketch
23:40 - this has all changed now that applet as
23:42 - a dependency has been removed from the
23:44 - processing core engine so let's take a
23:47 - look at some of the new things that have
23:49 - come up in that sense so I'm going to
23:51 - find myself an example I'm going to go
23:54 - under uh topics under shaders shaders
23:58 - are a nice way of looking at some of the
24:00 - p3d possibilities I will go to nebula so
24:04 - if we look at this uh nebula sketch this
24:08 - is actually rendered in p2d it's loading
24:11 - a Shader and if I hit
24:13 - run we can see there's a window and its
24:16 - size is 640x 360 so one of the new
24:20 - things you can do is there's a brand new
24:22 - function besides size and that is the
24:24 - function full screen so if I comment
24:27 - this out
24:29 - and instead of typing size I type full
24:32 - screen and oops and I don't need to save
24:35 - it um and if I hit stop and I hit
24:42 - run I'm in the land of white I'm in an
24:45 - apple advertisement I'm not sure what
24:50 - happened spinning ball of death what's
24:53 - going on with the
24:57 - world
24:59 - uh hello come back ah what's I got an
25:03 - error could not run this oh interesting
25:05 - something
25:06 - changed let's try p3d so what's what's
25:10 - weird is it worked with
25:12 - um alert GitHub found a bug I think you
25:17 - know I just use a different example for
25:19 - this video uh okay let's see what's
25:21 - going on let's try let's close this
25:26 - example oh I know it happened this is my
25:29 - mistake this is not a bug at all I'm a
25:33 - terrible person I've made a mistake I'm
25:36 - going to keep going because this is my
25:37 - practice round or maybe somebody could
25:38 - edit this video later okay let's start
25:41 - let me come
25:42 - back let's run this I'm going to come
25:44 - back to oh and I don't want to save
25:48 - this this nebula sketch you can see it
25:51 - here running 640x480 window the size
25:54 - function is determine that window size
25:56 - and what I want to do is change
25:58 - now from the size function to calling a
26:00 - function called full screen now full
26:03 - screen does not require Dimensions does
26:05 - not require a width or a height because
26:08 - by Nature it's going to just draw the
26:10 - sketch at whatever the size of your
26:11 - screen is however it does require a
26:13 - renderer with no argument passed in it
26:15 - will be the default renderer but since
26:17 - this is a um so maybe I should start
26:19 - demonstrating full screen with a regular
26:21 - sketch but since this um particular
26:24 - sketch requires at least the p2d
26:26 - renderer I need to say p2d
26:28 - and I can run the sketch and I see up
26:31 - there this is what I was looking for I
26:33 - just like this is my excuse that I could
26:34 - make weird hand motions and pretend that
26:36 - I'm floating in space okay so you can
26:39 - see here how uh speedy and fast this is
26:42 - how easy it is to suddenly make your
26:43 - sketch run full screen comment that back
26:45 - out set it to size uh there's if you've
26:48 - used earlier versions of processing you
26:49 - might have noticed like different
26:50 - flickering problems or the window takes
26:52 - a while to get going there's in
26:54 - processing 3 you'll find that a lot of
26:55 - stuff is much uh faster in terms of like
26:58 - getting the sketch running and also just
26:59 - faster in terms of the frame rate of
27:01 - what it's rendering uh due to so many
27:03 - things changing behind the scenes um
27:05 - another thing um let's just look at a
27:07 - different example uh I'll go down to uh
27:10 - demos maybe I'll find something there
27:12 - under Graphics uh let's try a tree foil
27:17 - this might be an interesting one and
27:19 - let's make this one uh full screen p
27:26 - p3d and
27:29 - uh this one's kind of nice a little bit
27:32 - dark can't doesn't doesn't show up as
27:34 - well it's it's coming more to light
27:37 - please don't hurt me tree foil I'm I'm a
27:39 - friendly human um so one of the things I
27:42 - want to mention here actually like in
27:44 - addition to just the full screen being
27:45 - so easy to use with the function and
27:47 - kind of launching instantly that um you
27:51 - know a very common scenario of working
27:52 - with processing is you've got your thing
27:54 - you made it on your laptop you're
27:55 - plugging in a projector now you want to
27:56 - see your sketch on the projector you
27:57 - want to see full screen in past times
28:00 - it's been a big hassle full screen in
28:02 - addition to taking the renderer can
28:03 - actually take as an argument the display
28:05 - you want to display it on so if I were
28:07 - to say full screen one that might be the
28:10 - default display your laptop screen if
28:11 - I'm connected to a projector and I say
28:13 - two then that sketch is only going to go
28:15 - instantly onto the uh display number two
28:19 - which would be your projector it sort of
28:20 - depends what your operating system
28:21 - settings are but this works uh really
28:24 - well and I should have this over to the
28:26 - right so when I'm typing you can see it
28:28 - better uh and then also really exciting
28:32 - is there is an option of saying span and
28:34 - what full screen span will do is if you
28:36 - have multiple monitors it'll take that
28:38 - sketch and span it across them so for
28:40 - multiscreen displays this is a really
28:43 - fantastic uh option that just sort of
28:45 - just works instead of trying to find
28:46 - some weird strange stack Overflow Java
28:49 - hack thing to make that work um another
28:52 - thing that is new in processing 3 is a a
28:56 - way to deal with high uh high density
28:59 - displays so um uh Mac retina machines
29:03 - other types of displays that have super
29:05 - high density displays uh fine resolution
29:08 - of picture but this is like it's hard to
29:10 - just do this video continuously I just
29:13 - need to take a break
29:16 - um it's mostly because I took too long
29:18 - for the earlier stuff I'm already at 20
29:20 - minutes so I have to I have to take
29:21 - about half as amount of time and move
29:23 - through this stuff faster but I'm going
29:24 - to keep going just to practice um that
29:27 - uh
29:28 - um uh there's a new function called
29:31 - pixel density I should have just like an
29:35 - example ready to go I actually just use
29:36 - this Hue example so um for example here
29:40 - if I were on a high If This Were a high
29:42 - density display I could say uh pixel
29:46 - density density 2 and processing behind
29:49 - the scenes will do all of that pixel
29:52 - doubling uh to make the lines and the
29:56 - anti-al and everything look fine ER and
29:58 - crisper and more beautiful in that sort
30:00 - of like high density display way the
30:02 - other thing I'll mention is that there
30:04 - is a new experimental renderer which is
30:07 - particularly well suited to highdensity
30:08 - displays that you might take a look it's
30:10 - not the default renderer it's kind of
30:12 - hidden there in the documentation but uh
30:14 - it's the Java
30:17 - FX um so fx2d it's based on a technology
30:21 - called Java FX so if you want to get the
30:23 - highest quality 2D rendering on a
30:25 - highdensity display you might look into
30:28 - trying this fx2d renderer see how it
30:30 - works and chime in on GitHub with any
30:32 - bug reports or um and have questions
30:35 - about it you can also ask those on the
30:36 - Forum okay speaking of uh the size
30:40 - function it's always been the case in
30:42 - processing that the idea is that the
30:45 - size function you know it's generally
30:46 - good practice not to use hard-coded
30:48 - numbers in your code the size function
30:50 - in processing is the one place where you
30:52 - need to use hard-coded numbers in your
30:54 - code it's it's a the that the the the
30:58 - the hardcoded numbers there allow for a
30:59 - lot of these new possibilities in terms
31:01 - of rendering and uh bug-free I should
31:04 - just say there's a way around it look at
31:07 - the wiki I've lost lost my Steam on this
31:10 - video so I'm going to start over soon so
31:12 - I'm racing through the last thing and
31:14 - then there's the contributions
31:16 - manager uh I'm going to I'm going to
31:18 - pause for a second and take a break
31:19 - because um I took too long at the
31:21 - beginning of this video but let me run
31:23 - through the contributions manager stuff
31:24 - I'm kind of so and then I also want to
31:26 - look at the contributions manager which
31:28 - is new uh it's fully integrated
31:31 - everything's in the same place uh you
31:33 - can search for things like the connect
31:35 - library for want install on up a library
31:37 - you click install uh once you see once
31:40 - you click install you'll see a green
31:42 - icon that is installed libraries that
31:44 - don't aren't that uh aren't um
31:48 - compatible or gray out and then if there
31:52 - are libraries available for an update
31:53 - you'll see them in your update list with
31:55 - that icon and you can actually click
31:56 - update and it'll update them you can see
31:58 - that I'm on3 but the current version is
31:59 - 04 then I was going to mention the wiki
32:02 - which has more details I don't need to
32:04 - give all the details in this video and
32:07 - that the LI you know many libraries are
32:10 - still being updated for 3.0 a lot of
32:12 - them are grayed out if you're a library
32:13 - developer please get in touch we really
32:15 - want to help you update it and if you
32:17 - have any questions leave them in the
32:19 - comments in this
32:20 - video uh leave them in the comments in
32:23 - this
32:24 - video um that's one thing I want to say
32:26 - oh uh report bug on GitHub and also you
32:28 - can ask questions at the processing
32:30 - forum and always you can send me a
32:32 - message uh at shiffman uh so that that
32:35 - was my rehearsal I'm going to hit stop
32:37 - here even though I I kind of lost steam
32:40 - after about 15 minutes which I should be
32:41 - able to talk for 20 minutes I do that in
32:43 - class all the time I'm going to pause
32:45 - and I'm going to look at the chat for a
32:47 - second and see
32:50 - what uh see what comments you have so if
32:53 - anybody has any feedback or comments
32:56 - right now I'm going to try to start over
32:57 - and do this video again there's some
32:59 - things that I figured out that I was
33:00 - doing wrong that I can have ready better
33:03 - uh there's some mistakes I made that
33:05 - sort of thing so I'm kind of getting
33:07 - myself set up again I'm going to drink
33:08 - some more water I'm going to look at
33:10 - these
33:12 - demos I'm try to pick the best one
33:14 - rotating arcs is a good one particles
33:17 - what does that one do oh this is me
33:21 - apparently oh that's kind of a good one
33:24 - to demonstrate speed and I can move the
33:26 - mouse around 3D this this one will do
33:29 - look how fast it is so many particles
33:31 - hundreds of thousands of millions of
33:32 - particles I guess I could use that
33:34 - one um planets let's try this
33:38 - [Music]
33:40 - one that's more spaciness I like the
33:42 - nebul I think I should start with the
33:44 - Hue example for just doing a 2d
33:46 - one uh
33:49 - examples um Yellow Tail is a great one
33:53 - too um performance
33:56 - tests uh low level
34:03 - ribbons I think I'll do the particle one
34:05 - it's sort of like a classic thing that
34:06 - people are used to seeing I think
34:08 - that'll work well okay any other
34:10 - comments nice sketch with the particles
34:11 - okay good so I'm going to use that one
34:15 - okay I need a little short break for a
34:17 - minute I'm going to drink some more of
34:18 - this
34:22 - water here's the problem I have to leave
34:26 - the live if I if I turn off off the live
34:28 - stream oh boy it's the audio sometimes
34:30 - getting hello it's kind of hitting that
34:33 - red thing if I talk too loud but you did
34:35 - you guys notice any crackling or audio I
34:38 - think it's okay I I don't haven't been
34:41 - talking too loud um I have to leave this
34:44 - running because I can't turn the stream
34:46 - off and turn it back on but I need to go
34:47 - refill my water so I'm say back into
34:51 - minutes getting more water so if you're
34:55 - watching that's my message to you you
34:58 - I'm going to take my magical invisible
35:00 - water cup and go refill it and I'll be
35:02 - back in 2 minutes if you have any
35:04 - comments or about that sort of my list
35:06 - and script let me know I'm I think I'm
35:08 - ready to do this it's 2:10 I even have
35:11 - like an an hour more time so I think I
35:14 - just have to get my energy going and
35:16 - just power through the whole thing and
35:17 - and be more succinct I went on and on
35:19 - and on about certain things just need to
35:20 - show the error check I showed like five
35:22 - different errors just showed two Auto
35:25 - completion just show it tweak mode I
35:27 - need a better example for tweak
35:30 - mode that was too complicated let me
35:33 - find
35:34 - one uh so let me come let me find it if
35:37 - you have a suggestion for an example for
35:39 - tweak
35:40 - mode um just like Basics like form or
35:45 - something uh shape Primitives see these
35:49 - are static though it has to be something
35:52 - animated uh oops I'm here
35:55 - uh math
36:02 - noise noise wave let's try
36:10 - that oh this is going to
36:13 - work um because if I do this oops if I
36:17 - do sketch
36:18 - tweak so this is kind of a little bit of
36:21 - bug that tweak mode in I guess it has to
36:23 - do that it like like resets your code
36:26 - but it's fine oh so this is good because
36:28 - I can show this that I'm tweaking the
36:30 - background that's great and I can also
36:34 - show this ah yeah this is good but I
36:37 - just have to position it over here I
36:39 - don't have a lot of screen real estate
36:41 - because I made the resolution so low but
36:44 - I think noise wave this will work I can
36:47 - I can fuss with this I can make this
36:48 - work because this is a nice one too this
36:50 - incrementation yeah look how that
36:52 - changes it oh yeah this is good okay
36:55 - great noise wave will be a good example
36:58 - Le uh okay um so let me
37:01 - quit
37:03 - quit
37:06 - quit quit
37:08 - quit quit don't save quit don't
37:14 - save and
37:17 - now quit quit
37:23 - processing oh no bigger bigger bigger
37:26 - bigger
37:28 - I'll be right back in two minutes I need
37:30 - like a little clock I could just put on
37:32 - a timer but it's it's going to be less
37:33 - than two minutes 30
37:45 - seconds I am currently live streaming
37:47 - from my office are you I am taking a
37:49 - break to get some water now I am going
37:52 - back on YouTube it's just me
37:55 - talking processing
37:58 - I wish it was my new like something else
38:07 - but okay I'm back oh and of course the
38:09 - camera without fail goes
38:11 - off so that's good I've got it back on
38:16 - uh I have to
38:17 - get ready again so a couple things I
38:20 - have to do here is I have to go to the
38:24 - preferences I have to reset process
38:28 - thing
38:30 - to uh not know it's been run
38:34 - before uh
38:39 - and oh yeah hot
38:42 - Pik that's right when I went to get my
38:44 - water I kept talking it's a good thing I
38:46 - didn't go I don't know do something I
38:49 - shouldn't be
38:50 - doing that's very funny
38:52 - I I was just talking to Gordy Gord is
38:55 - now live on YouTube um okay
39:03 - uh nine
39:05 - people okay I'm
39:08 - GNA I'm going to check
39:12 - here
39:14 - and uh
39:17 - okay uh I'm going to post something
39:20 - actually no I I think I posted enough
39:22 - times that I'm live streaming so people
39:25 - will find it or they won't find it
39:29 - okay any last
39:36 - comments looking reading Twitter for no
39:40 - reason more comments
39:43 - below
39:45 - okay
39:47 - okay
39:48 - and here we go okay my goal is to do
39:53 - this video again and take about about
39:57 - about um 10 less minutes to do it to be
40:01 - much more efficient about it
40:04 - um
40:06 - and and I just I think I'm ready to do
40:09 - it actually I'm going to drink a little
40:12 - bit of the coffee so I'm losing some
40:14 - energy
40:26 - here
40:37 - okay processing
40:41 - three my favorite version of processing
40:45 - ever water
40:49 - chat still
40:51 - working you know I've got a
40:53 - little gray area down here but I'm just
40:56 - going to leave that it's fine
40:59 - okay thanks thanks for tuning in Z
41:03 - gono and if anybody else finds their way
41:07 - here here we
41:09 - go
41:11 - okay camera
41:13 - one that's not a camera that's not a
41:16 - camera get some energy going
41:21 - here kiding okay here we go and
41:25 - processing three
41:33 - oops hello and welcome uh my name is Dan
41:36 - schiffman and I am here on behalf of the
41:38 - processing Foundation to talk about
41:40 - processing three
41:43 - um shoot forgot what I was saying always
41:46 - takes me a few minutes to get
41:49 - going
41:51 - uh hold on sorry
41:55 - everybody I kind of wish I had gotten
41:58 - through it that first time it's sort of
41:59 - hard to do this the second time but it's
42:02 - fine I can do
42:11 - it
42:14 - okay hi uh my name is Dan schiffman and
42:17 - I am here to talk about processing three
42:21 - uh I forgot the first sentence that I'm
42:24 - saying exactly
42:25 - again shoot
42:32 - hello uh my name is Dan schiffman and
42:34 - I'm here on behalf of the processing
42:36 - foundation and the all of the volunteers
42:38 - who have spent a lot of time and a ton
42:40 - of effort over the last uh you know many
42:43 - years in fact working on the processing
42:45 - software to talk about the newest
42:46 - version of processing processing 3 and
42:49 - what's what's new about processing 3 now
42:50 - processing which I've now said that word
42:52 - like 10 times in the first sentence is
42:54 - not a new project and processing has
42:56 - been around all the way since 2001 in
42:58 - fact I think we're coming up on the 15th
43:00 - anniversary of the processing software
43:02 - itself um so this video is really meant
43:05 - for those of you who have been using
43:07 - processing and want to sort of see what
43:09 - what are some of the new features of the
43:10 - development environment what are some
43:11 - things that it can do and what are some
43:12 - reasons why certain things have changed
43:14 - that's my goal to talk about those
43:15 - things in this video however if
43:17 - processing itself and programming is
43:19 - something that's completely new to you I
43:21 - would recommend checking out just the
43:22 - processing website and the hello
43:24 - processing tutorial um both of which I
43:26 - will link to below
43:27 - there's nothing below me but a flooor
43:29 - but I'm probably embedded in a web page
43:31 - somewhere talking uh in in the in the in
43:34 - the description for this video so take a
43:36 - look at that so my goal is just kind of
43:38 - give you a quick overview uh of the
43:40 - features kind of look at each one for a
43:42 - minute or two and then of course uh I
43:45 - would be glad to take any questions
43:46 - which you can ask in the comments of
43:48 - this video or on the processing Forum or
43:50 - you're welcome to send me or a um or the
43:53 - processing Foundation itself a message
43:54 - on Twitter and the links to those will
43:56 - also anything I say will be a link below
43:58 - in the video will just somehow be there
44:00 - uh by the fact of me saying it okay so
44:02 - let's get started and let's look at
44:04 - processing 3 so I have processing 3 it's
44:06 - right over there in the corner it's a
44:08 - lovely icon not at all designed by me
44:11 - because I'm incapable of Designing
44:12 - things that look nice but uh many people
44:15 - have worked on many things in processing
44:17 - that make it look absolutely beautiful
44:18 - and that's one of my favorite things
44:20 - about the new editor is you're going to
44:21 - see it has just a new look to it and a
44:23 - lot of new features uh which that look
44:25 - supports so let's launch it
44:28 - and one of the first things you'll
44:29 - notice is that a welcome screen comes up
44:32 - so here's something that's here's the
44:33 - first thing that's new about processing
44:35 - three if you have been using processing
44:37 - for a long time you've got a whole set
44:39 - of sketches in libraries and your
44:40 - processing 2 and they're kind of
44:42 - archived projects that work and you
44:44 - don't want to mess with them you can
44:45 - start fresh and have a completely new
44:47 - Sketchbook with its own set of libraries
44:49 - and tools and modes just for processing
44:51 - three and that's kind of the recommend
44:53 - the re the recommended uh option for you
44:55 - here you can see this option here you
44:57 - could of course just use the old
44:58 - Sketchbook you know most sketches are
45:00 - going to work between two and three not
45:02 - that much has changed but there are some
45:04 - significant things and for larger more
45:06 - complex project particular if you're
45:07 - using external libraries you you now
45:09 - have the option to keep those intact
45:11 - from processing two and kind of get
45:13 - things working in three as you have uh
45:15 - kind of time for okay so I'm going to do
45:18 - that and I'm going to hit get started
45:20 - I'm going to get a new sketch folder and
45:22 - what you'll see is it's the finders open
45:24 - up and it's saying like hey where do you
45:25 - want this new sketch folder to be so
45:27 - this processing folder was my processing
45:29 - 2 Sketchbook this won't appear for you I
45:31 - I made that folder before the video
45:33 - started but I'm going to select this
45:34 - folder processing 3 and that's going to
45:36 - be my Sketchbook and you can see here
45:38 - under Sketchbook it's empty it's there's
45:40 - nothing there yet I haven't made any
45:42 - sketches maybe I'll make one in this
45:43 - video and it will appear there and that
45:45 - will be a nice happy moment so looking
45:48 - at the editor it's new there's some new
45:50 - icons there's some new tabs down here
45:52 - and look at this line numbers so many of
45:54 - you have always wanted to have line
45:56 - numbers in the processing ID and they're
45:58 - there now and one of the reasons why
45:59 - they're there is there's an entirely new
46:00 - error checking system which refers back
46:02 - and forth to line numbers which so
46:04 - having them there can be quite useful uh
46:06 - for a variety of reasons so let's um
46:08 - let's start with the new editor I want
46:10 - to kind of quickly you know go through
46:12 - some of the new features here in the
46:13 - editor and the first one I want to look
46:14 - at is just how error checking works now
46:16 - I realize no no it's fine uh I realize I
46:20 - just ignore that preferences screen for
46:22 - a second edit that out um I was checking
46:25 - to make sure it was set right so what
46:26 - I'm going to start doing is I'm going to
46:27 - type some code and I'm going to type
46:29 - void setup and I'm going to type void
46:32 - draw and I'm going to type size 200
46:36 - comma 200 semicolon now you can see I
46:39 - have a syntax error there right a
46:41 - parentheses is needed so a couple things
46:43 - you'll notice one is processing is like
46:45 - detecting the errors as you type so as
46:47 - you type it's finding errors as you
46:48 - correct those errors those errors go
46:50 - away and this one I found is um first
46:52 - you'll note this squiggly line is
46:53 - showing you where that error is most
46:55 - likely occurring you know sometimes it's
46:57 - going to get it wrong but almost all the
46:58 - time it's going to get it right and the
47:00 - error message here missing right
47:02 - parenthesis so this is something that's
47:04 - new about processing 3 and I'm very
47:06 - excited about it because we spent a lot
47:08 - of time working on rewriting the Java
47:09 - error messages so detecting errors and
47:12 - giving more helpful feedback and this
47:14 - this just like brings tears to my eyes
47:15 - because that's exactly what's missing a
47:17 - right parenthesis and that's you know a
47:19 - helpful message rather than unexpected
47:21 - token missing error I don't know
47:23 - something like that so we can correct
47:25 - that error and we can also do things
47:28 - like in I'm going to say int x = 50 and
47:31 - I'm going to say ellipse 300 300 3 2 200
47:35 - 50 50 semicolon so now something you'll
47:38 - notice this is also exciting there are
47:41 - two errors here one is a missing
47:43 - semicolon one is a missing right
47:44 - parenthesis so something new about
47:46 - processing three is that if I go to this
47:50 - down here to the console the console is
47:52 - where you see print line messages come
47:53 - out you know for debugging and other
47:55 - things it used to also be where all the
47:56 - ER messages happened now there is a
47:59 - separate errors Tab and if I go into
48:01 - that errors tab you'll see that each
48:02 - error is listed individually now zooming
48:05 - back out for a second you can see a
48:07 - couple other things these error messages
48:09 - are listed in which tab they're in now
48:11 - in this case I have a simple sketch I
48:13 - haven't even saved it yet so there's
48:14 - just one tab but you might have errors
48:16 - in different tabs as well as the line
48:18 - number the line number is listed here as
48:20 - well so you get a full list of the error
48:22 - messages I can click on one and now it's
48:24 - even highlighted in the IDE so this
48:26 - ability to go go through your list of
48:27 - Errors find them debug them fix them is
48:30 - a wonderful thing uh and it's and it's
48:33 - new and it works great and you can see
48:34 - as I start to correct
48:36 - them uh those
48:38 - errors disappear ah look at that I
48:42 - forgot so this is interesting I didn't
48:44 - expect this to happen but I'm making a
48:46 - video live let's talk about this for a
48:47 - second I was like why the errors
48:48 - disappear there's still an error so this
48:50 - actually isn't an error notice it's a
48:52 - yellow line and notice there's a yellow
48:55 - dot here before there were red dots
48:57 - there so there's something called a
48:59 - warning which is that this variable is a
49:01 - variable I declared but I never used it
49:04 - it's a warning saying like you know your
49:05 - codee's going to run just fine but does
49:07 - it really make sense to declare that
49:08 - variable and not use it maybe you want
49:10 - to remove that line of code so this is
49:12 - and again you have a nice message the
49:13 - value of local variable X is not used so
49:16 - this is something that processing 3 has
49:17 - also warnings and I kind of earlier had
49:19 - the preferences window up for a second I
49:21 - kind of quickly shoved it away this is
49:23 - something that you can configure in the
49:25 - preferences so for example you can turn
49:27 - off warnings like you don't really care
49:29 - about the warnings if the code's going
49:30 - to run the codee's going to run turn off
49:32 - the warnings the other thing you can do
49:34 - is turn off this continuously check for
49:36 - errors option so if that's kind of
49:38 - getting in the way of your workflow and
49:40 - you just want to see the errors kind of
49:41 - when you finish typing um you can
49:43 - disable that option now this brings me
49:46 - to my next item in my list code
49:48 - completion with control space another
49:51 - new feature for the editor is code
49:53 - completion which is a a great feature
49:56 - tons of text Ed code editors and text
49:58 - editors have this you're typing some
50:00 - code it's a long thing to spell the
50:03 - editor just sort of magically knows what
50:04 - it is you're going to type and fills in
50:05 - the rest for you a feature like this is
50:08 - now available in the processing IDE so
50:09 - I'm going to select that option on it
50:11 - won't be on by default so you're going
50:13 - to have to go to your preferences and
50:14 - select it but once I've done that I can
50:17 - do things like Type e control space and
50:20 - you can see here uh if I zoom into that
50:24 - I'm being given the options so I typed e
50:27 - did I mean to type ellipse or ellipse
50:29 - mode or ellipse and in addition to
50:31 - showing me which things I might be
50:32 - interested in typing it's showing me
50:34 - what that function expects how many
50:35 - arguments so there's a little bit of
50:37 - metadata not as much as a full reference
50:39 - but some information to help you along
50:41 - and if I were to hit enter there it
50:42 - fills it in and I can just go and fill
50:44 - in the arguments uh however I might want
50:47 - them whoops and I could get that there
50:50 - and now I have the ellipse function so
50:52 - code completion is there you can also
50:54 - use it with objects uh if you have an
50:56 - object dot the uh code completion will
50:58 - show you suddenly what are all the
50:59 - functions available inside of that
51:01 - object which in many cases is super
51:03 - useful because you can't remember is it
51:05 - you know was it called dist or distance
51:07 - or you know check intersection or check
51:10 - Collision that's a quick way to kind of
51:12 - look up and see what those functions are
51:13 - available and get know what the
51:14 - arguments are and have them typed for
51:15 - you okay so those are two core uh
51:19 - features oh I'm missing a right
51:20 - parentheses let's figure out where that
51:22 - is line number nine oh no that's still
51:24 - just that warning uh so that that's an
51:26 - old that error is just there
51:28 - historically by accident I probably
51:30 - should have gone away by now but I made
51:32 - it go away by clicking save okay uh okay
51:36 - so let's look at another new feature in
51:38 - processing 3 now this is a feature
51:39 - that's been around that you could have
51:40 - added to processing as a separate mode
51:42 - it's called tweak mode but now it's in
51:45 - processing directly so I'm going to go
51:47 - grab an example I think the example that
51:48 - I want to use for this is the example
51:50 - called noise wave I'm going to pull this
51:52 - example over here and you know there of
51:55 - course there is a run option for a
51:57 - sketch run it present which presents it
52:00 - full screen uh with UHS a sketch in the
52:03 - middle of the screen with a full screen
52:04 - background but I'm going to show you
52:05 - this last option tweak so I'm going to
52:07 - run the sketch I'm I'm not going to run
52:09 - it I'm going to tweak it I'm going to
52:11 - put the sketch over here and as I run
52:13 - tweak mode you can see certain parts of
52:16 - the code have changed look at this next
52:18 - to background there's an underline there
52:20 - and also this option that I can click on
52:22 - so I can click on here and I could just
52:24 - tweak the color of the background right
52:26 - from the the code itself okay I like
52:28 - this color I'm going to keep that then I
52:30 - could also go down and find certain
52:31 - values like okay I want to tweak um I
52:35 - want to tweak the range of what noise is
52:37 - being mapped to so ah 300 down to higher
52:42 - two or I could make this one uh this go
52:45 - down to 100 so you can see that the code
52:47 - is responding in real time to me
52:48 - changing these numbers oops somebody
52:50 - just banged on the door and uh you know
52:52 - I could also go down here and say okay
52:54 - well this is a sort of noise
52:55 - incrementation level
52:56 - look how how that drastically affects
52:58 - Things based on what I do so you can sit
53:00 - there and tweak values in real time as
53:02 - the code is running and then if I hit
53:04 - stop it's going to give me the option do
53:06 - I want to keep those changes so I change
53:09 - a lot of hard-coded values in the code I
53:10 - like the way it looks much better I can
53:12 - say yes of course it's an example so it
53:14 - wants me to save it and and I've got
53:16 - those new values so this is a great new
53:18 - feature I would say it's not really a
53:19 - substitute for like building your own
53:21 - interface or having some interesting
53:23 - generative or procedural way to affect
53:26 - the way parameters in your program work
53:28 - but for quick and dirty sketching and
53:30 - trying out different values this is a
53:31 - really nice feature to have in the
53:33 - IDE okay one more new feature to have uh
53:36 - one more new feature that is in the IDE
53:38 - that I would like to demonstrate to you
53:39 - it is the debugger and I'm really going
53:41 - to gloss over this because I've already
53:43 - made an entire video all about the
53:45 - debugger and I'll make sure a link to
53:47 - that is included also Below in the
53:49 - description but I'll just point out to
53:50 - you where it is uh this insect icon up
53:53 - here if you click it it enables the
53:55 - debugger you get a a few different
53:57 - options uh for how you can run the
53:59 - sketch the whole point of the debugger
54:00 - is allow you to pause the code and
54:02 - Advance line by line so there's options
54:04 - like continue and step there's ways of
54:07 - adding break points which are moments
54:08 - where the code should pause and then
54:10 - there's this new pane over here which is
54:12 - the variable inspector so that variable
54:14 - inspector will show you what the current
54:16 - variable values are at a certain break
54:18 - point so I'm just going to add a break
54:20 - point here you can see uh diamond is now
54:22 - oops I head is in front of that you can
54:24 - see I click here and I add a break Point
54:26 - there's a diamond there and if I then
54:29 - run the code under debug the code runs
54:32 - and uh whoops um shoot I was doing so
54:37 - well with this video U let me try adding
54:40 - it here
54:42 - uh uh I'm not sure what happened uh
54:46 - shoot I should went too far with my
54:47 - discretion of the debugger watch the
54:49 - other video it's fully explain I might
54:51 - have to edit this
54:52 - out at some point just cut myself off
54:55 - and go to the next thing cuz I don't
54:56 - need to demonstrate the debugger itself
54:58 - so let me let me actually like
55:00 - um uh kind of start over for a second
55:02 - back where I was and just say uh I'm
55:05 - going to start for where I was talking
55:06 - about the debugger
55:07 - icon so this is the debugger icon up
55:11 - here in the right hand corner if you
55:13 - enable that debugger icon you'll see
55:15 - that there are a bunch of different
55:17 - options for stepping through the code
55:20 - continue pausing uh boy I really screwed
55:23 - this
55:24 - up uh I'm going to
55:27 - let me start over from the debugger and
55:29 - see if I can wonder why that didn't work
55:31 - but I'm not going to not going to
55:33 - explore that right now um I'm just start
55:35 - I'm going to pretend I'm starting over
55:36 - talking about the debugger and then I'm
55:37 - going to keep going and maybe this can
55:39 - be spliced together as I am recording um
55:42 - so the last feature that I want to talk
55:44 - about is the debugger uh now oops oh
55:47 - shoot now I stepped on The Wire things
55:49 - are really going haywire let me fix this
55:51 - audio cable here
55:53 - okay the last feature I want to talk
55:55 - about is the debugger uh now I don't
55:57 - need to spend tooo much time on the
55:58 - debugger because I have an entirely
56:00 - other video that goes through the
56:01 - debugger in detail and I'll make sure
56:03 - there's a link to that below that you
56:04 - can go and watch but the core idea for a
56:06 - debugger is it allows you to pause the
56:08 - sketch at a given moment step through
56:10 - the sketch line by line and look at what
56:12 - the values of variables are at different
56:14 - moments to try to diagnose a problem
56:16 - with the sketch so to enable the
56:17 - debugger there's this nice insect icon
56:20 - up here in the top right you can click
56:22 - on that um and once you click on that
56:25 - you can see some options have changed
56:27 - here you can run The Code by debugging
56:29 - you can step you can continue and also
56:31 - there is this uh variable inspector over
56:33 - there in the right where variable values
56:35 - will be displayed so for more details
56:37 - about that take a look at the debug
56:39 - video okay the next topic I want to talk
56:42 - about is full screen and fast graphics
56:45 - and openg G and a lot of that's that's
56:48 - changed in really exciting new ways in
56:50 - processing 3 so let me open up a simple
56:53 - example here uh open recent uh Hue so
56:57 - this is one of my personal favorite
56:58 - little processing examples it's just
57:00 - demonstrating how Hue Works based on the
57:02 - why uh the Y value of uh the mouse I'm
57:06 - drawing colors of different Hues so one
57:09 - of the things that Pro the sort of core
57:11 - function of procing that you're familiar
57:13 - with is the size function and we we did
57:16 - see that there is this way of saying uh
57:18 - present and what present does is it
57:20 - takes a sketch and places it in the
57:22 - middle of the screen with a nice
57:23 - background behind it but there is a new
57:26 - function available in processing called
57:28 - full screen so what full screen is a
57:31 - replacement for size you no longer need
57:33 - to use both of those so if I comment out
57:35 - the size function and say full
57:38 - screen and I run
57:40 - it you will see my sketch is now
57:43 - happening instantly full screen and
57:45 - what's really wonderful about this is
57:47 - the full screen function doesn't just
57:48 - take your sketch and run it full screen
57:50 - on the display that you're currently
57:52 - working on you know what's one of the
57:55 - most common scenarios of why people work
57:57 - with processing they've got a project
57:59 - it's on their laptop it's hooked up to a
58:00 - projector it's part of an installation
58:02 - if I were to say if I have two displays
58:04 - and I say full screen one this sketch is
58:07 - going to run on this particular display
58:09 - if I change it to full screen 2 this
58:11 - sketch is going to run on the projector
58:13 - so the ability to quickly and easily
58:15 - send your sketch full screen to a
58:17 - particular display is a new feature of
58:19 - processing with this full screen
58:21 - function and in addition to that if I
58:24 - simply just say span full screen span
58:27 - this is a scenario that if I have
58:28 - multiple displays the sketch will span
58:30 - across all of them which you know if
58:32 - you've worked in multiscreen uh
58:35 - installations and environments before
58:36 - this is a very difficult thing to
58:37 - accomplish and now um this is possible
58:41 - just um just by um uh working in uh
58:45 - processing with the full screen function
58:47 - okay so what is ah there's a little bit
58:49 - more to this than that so what I want to
58:51 - do is uh close this
58:53 - sketch and go to a different uh example
58:57 - I'm just going to go to this uh uh demos
58:59 - Graphics uh particles and one of the
59:01 - things I want to talk about here is
59:03 - what's happened with openg rendering and
59:06 - processing so you'll notice processing
59:09 - has multiple renderers there's the the
59:11 - default renderer which is what I've just
59:13 - been using before there's the p2d
59:15 - renderer for Hardware accelerated
59:16 - two-dimensional graphics and the p3d
59:18 - renderer for Hardware accelerated 3D
59:20 - Graphics processing used to be built on
59:22 - top of this thing called applet old
59:25 - ancient technology to allow you to embed
59:27 - uh Java applications in a web browser
59:29 - kind of a dead defunct technology
59:31 - processing 3 has now removed applet as a
59:34 - dependency this makes uh three all
59:37 - sketches but in particular uh open gel
59:40 - uh 3D and 2D sketches p2d and p3d
59:43 - sketches run faster start faster less
59:46 - flicker quick full screen so all of
59:48 - these options that we're talking about
59:51 - are available here so if I were to say
59:53 - full
59:55 - screen you can see here is a nice Speedy
59:59 - demonstration
60:00 - whoops oh I forgot I've got to give it
60:03 - the renderer right so one thing that I
60:05 - that I mentioned before oops uh that I
60:07 - mentioned before about um that about the
60:10 - full screen function is you can pass it
60:12 - the particular display you want to go to
60:14 - but you also can pass it the renderer
60:16 - you want so p2d comma 1 would be the p2d
60:18 - renderer on the first display p2d comma
60:21 - 2 would be the p2d render on the second
60:23 - display right now I'm just going to do
60:25 - p2d on the default display uh oops read
60:27 - only and I'm going to oops I can't save
60:29 - it and I'm going to run
60:32 - it and you can see here it is so this is
60:35 - a sketch with a lot of particles running
60:37 - and processing super fast at a nice high
60:39 - frame rate full screen it started
60:41 - instantly this is a lot of work um has
60:44 - gone into updating not just this applet
60:47 - thing but just making these renderers
60:48 - work better with new openl features a
60:51 - more efficient code more stuff happening
60:53 - on the hardware card and so if you take
60:54 - a look on GitHub you'll see
60:56 - all you'll see the names of the folks
60:57 - who have really spent a ton of time
60:59 - fixing and fixing and fixing bugs to
61:00 - make this work really really well so you
61:02 - should thank them for that okay the
61:04 - other new thing about display uh working
61:06 - with displays and processing is that uh
61:09 - and let me just go back not that this I
61:11 - don't know why I need to open this but
61:13 - I'm going to go back to this Hue example
61:14 - for a second is that you know the world
61:16 - is now full of what what's known as high
61:19 - density displays so a Mac retina machine
61:21 - is a high density display a uh uh
61:25 - there's there's other types of high
61:26 - density displays for use with Windows
61:28 - computers so if you want to get that
61:30 - sort of finer quality rendering with
61:32 - processing you can do so with the new
61:34 - pixel density function so I'll just type
61:36 - that in here for example if I say pixel
61:38 - density 2 what this will do is it will
61:41 - sort of turn on retina or high density
61:44 - display rendering so you'll see finer
61:46 - smoother lines like you might like you
61:48 - want to see on a high density display I
61:50 - should also mention that really changes
61:52 - the way you think about the dimensions
61:54 - of your window right cuz there's the
61:56 - sort of Dimensions that you think it is
61:57 - 640 and 360 then there's the real pixel
62:00 - dimensions of that window because
62:02 - there's more pixels going in there to
62:04 - make it look sort of higher resolution
62:05 - so there's also some new variables pixel
62:08 - width and pixel height that you can use
62:10 - for Pixel processing and that sort of
62:11 - thing and there's more information about
62:13 - that in the reference okay uh oh finally
62:16 - there is an additional experimental
62:18 - renderer so if you're interested in
62:21 - really beautiful perfect high density
62:23 - display 2D rendering you might take a
62:25 - look at the this new renderer that's
62:28 - called fx2d so this is based on this is
62:32 - built on top of a technology called Java
62:34 - FX and it's uh optimized for like Fast
62:37 - high quality 2D rendering on a high
62:40 - density display it's experimental though
62:42 - certain things work certain things don't
62:43 - work give it a try and certainly um ask
62:46 - questions on the Forum or post bugs to
62:48 - GitHub for that okay the last thing I'll
62:51 - mention about this while we're on the
62:52 - size function is it's important to note
62:54 - that processing three requires you to
62:56 - use hardcoded numbers in the size
62:58 - function this is a requirement for uh uh
63:01 - that helps all the engine behind the
63:03 - scenes that's working to make the window
63:04 - open correctly full screen not full
63:06 - screen very quickly and be in the right
63:08 - position there are ways around it
63:10 - there's a uh uh and on the wiki I'm
63:12 - going to show you a Wiki page it'll be
63:13 - linked below there if you need to use a
63:15 - variable for that size function there's
63:17 - a way that you can uh get around it and
63:19 - other things that you might do if you're
63:20 - working with processing an environment
63:21 - like Eclipse but as a core rule right
63:23 - now that's become a little bit more
63:25 - strict with processing three you want to
63:26 - make sure you use a hard-coded number
63:27 - for size and size should be the first
63:29 - line and setup otherwise things can
63:31 - break and do strange things okay so I'm
63:33 - almost through this video I've been
63:35 - talking and talking and talking about
63:36 - new features in processing 3 and the
63:38 - last thing that I want to show you is
63:40 - the new contributions manager so one of
63:42 - the most exciting things about working
63:44 - with processing is the fact that there
63:45 - are all these libraries that you can use
63:48 - libraries to do interesting types of
63:50 - geometry to simulate physics to to use
63:52 - different kinds of hardware and sensors
63:54 - so um
63:56 - there is a new contributions manager
63:58 - which allows you to manage what
64:00 - libraries you have installed updating
64:02 - libraries with new versions um H and it
64:06 - it's it works great so I'm going to show
64:08 - you some of the features of that so if I
64:09 - go to sketch import Library ad Library
64:12 - it's going to pull up the contributions
64:13 - manager so one of the first things you
64:15 - can see here is that it this
64:17 - contributions manager is now fully
64:19 - integrated as one thing so whether
64:20 - you're looking for a library a mode a
64:23 - tool or example and by the way this is
64:25 - new example packages if you're the
64:27 - author of a textbook or if you're giving
64:29 - a workshop or if you just have a whole
64:31 - set of examples that you would like to
64:32 - release you can release example packages
64:35 - that can get downloaded into the the
64:37 - development environment directly so you
64:39 - can see here are three um four uh such
64:41 - examples from a couple of uh books that
64:43 - are out there about processing right now
64:45 - so you can see here there's a list of
64:47 - all of the uh libraries that are
64:50 - available to you and I can scroll
64:52 - through these list I can filter by
64:53 - certain keywords like I could say video
64:56 - I could filter also by a category here
64:58 - if I want and uh one thing I want to
65:00 - show you really quickly as you can see
65:02 - here I I I pre-installed a library but
65:05 - there's an exclamation point meaning
65:06 - this library is due for an update so a
65:09 - library that is installed you'll see in
65:10 - a minute has a green check mark and a
65:12 - library that's installed that needs an
65:13 - update has an exclamation point a
65:15 - library that's gray out is one that is
65:17 - not compatible with this version of
65:19 - processing so hopefully all libraries
65:21 - will soon become compatible with
65:23 - processing 3 and then they'll appear in
65:25 - the contribution manager and you can
65:26 - install them but let's just install a
65:28 - library just to go through that I'm
65:29 - going to go to connect uh I'm going to
65:32 - just type in Connect I'm going to
65:33 - install this Library I'm going to click
65:34 - on this install button right down here
65:36 - I'm going to install it it's downloading
65:38 - it's installed and if I look for that
65:40 - Library again whoops um you can see that
65:43 - there is the green check mark right
65:45 - there another useful tab by the way is
65:47 - up here I can go over to updates and I
65:50 - can see oh here are all the libraries
65:52 - that are available for updates and I can
65:53 - actually just collect select update all
65:56 - so if I have like 10 libraries that need
65:57 - to be updated I can just select update
65:59 - all and you can see actually how quickly
66:01 - it updated it download installed and
66:03 - that that that exclamation part became
66:05 - green so now those libraries are there
66:07 - the examples are there uh you can see
66:09 - which is the available version what's
66:11 - installed um so hopefully this new
66:14 - contributions manager will make it
66:15 - really easy to keep track of what you
66:17 - have what needs updating what isn't
66:19 - compatible what is compatible that sort
66:20 - of thing it sort of brings me to my next
66:22 - Point processing three is new there's a
66:24 - lot of libraries out there for
66:25 - processing if you are a library
66:27 - developer uh please get in touch with us
66:30 - if you need help updating your library
66:31 - for processing 3 uh you can post on the
66:34 - Forum you can send us an email you can
66:36 - uh tweet to processing org um we really
66:38 - like to be able to help people figure
66:40 - out how to make sure to get their
66:41 - libraries updated for processing 3 um
66:44 - and in the editor so um let us know what
66:46 - you need us to do for that and so the
66:49 - last thing I want to show you is just if
66:51 - you need more information about what's
66:53 - changed I've kind of this and you don't
66:55 - listen to me just whoops ramble uh and
66:57 - not look at this YouTube live event um
67:00 - I'm going to show you there is this
67:01 - changes in 3.0 Wiki so this will be
67:04 - linked in the video but this goes
67:05 - through all of these new interface
67:07 - things a lot of these rules about size
67:09 - the new renderers the syntax what's
67:11 - deprecated all of these types of things
67:12 - in in sort of text form so I'd also
67:14 - encourage you to read that over so
67:16 - you're very kind to listen to this very
67:18 - long video uh and look at these new
67:21 - features of processing 3 please let me
67:23 - know what you think if there's uh things
67:25 - that I miss Miss ask questions uh if
67:27 - there's ideas you have you can
67:29 - participate on the Forum you can post a
67:31 - bug report on GitHub and you can send us
67:33 - a messages in all the other kinds of
67:34 - ways people send each other messages in
67:36 - this today's world so thanks very much
67:39 - enjoy the rest of your day if you're
67:40 - still watching and I hope to come back
67:43 - and make more videos about things that
67:44 - you can do in processing okay
67:52 - bye-bye all right I don't know if anyone
67:54 - is still there
67:58 - uh okay 11 people are watching so I
68:00 - finished that video there was only one
68:03 - big big problem where there was like a
68:05 - section in the Middle where I couldn't
68:07 - get the debugger to work so I'm going to
68:08 - look at that right now uh just to see if
68:10 - I can fix the debugger if people have
68:12 - other questions they want to ask I will
68:14 - stick around on
68:17 - um YouTube for at least
68:19 - another um for at least
68:23 - another 15 minutes or I just got a
68:25 - strange text
68:27 - message
68:29 - uh uh hold on let me see what's going on
68:36 - uh uh okay actually I have a
68:40 - um I have a message that I have to
68:43 - attend to so actually I'm going to just
68:45 - be finished for today with this stream
68:48 - uh if anybody has any
68:50 - questions um you could send me an email
68:52 - or post me that message on Twitter I
68:54 - will uh and I'm going to look into this
68:57 - debugger thing and see if there's a bug
68:58 - that I need to post hopefully this video
69:00 - will do and I can kind of edit it uh to
69:02 - get it up there without having to
69:03 - rerecord it okay thanks for tuning in
69:06 - and uh post questions in the comments or
69:08 - you know how to reach me on
69:09 - Twitter I keep saying
69:11 - Twitter um and uh that's all okay going
69:15 - to
69:17 - stop
69:20 - uh oh wait I have to stop the stream
69:22 - over
69:24 - here

Cleaned transcript:

hello I think I am streaming live I am here in New York City at the facilities of ITP in a small room with a camera and a laptop and a screen and a green screen uh to talk about what's new in processing 3 I did this about a week ago and found some bugs in uh processing 3 and I'm going to attempt to do this again so the if you happen to be watching and I'm sort of looking over here at this other screen here to see if there is anyone watching I can't tell but and first of all if you are watching please tell me how the audio is because I need to stop and start if the audio is no good but what I'm going to do here is twofold one is I'm going to improvise and talk and like kind of go through my script and look at some things and get kind of get ready and then at a certain point I'm going to hit a record button over here which is that's when I'm going to start trying to record the more official video the one that I'll save for later posting but all of this the raw footage and everything will be uh stored forever and ever on YouTube unless I decide to delete it because it's way too embarrassing but it has to get really embarrassing for me to find it embarrassing because generally I'm I'm just embarrassing um I'm I'm in a room by myself talking to a camera which is just embarrassing uh so uh oh and uh if I have some time you know I I have about uh an an hour and a half to do this not that anyone would I expect be sitting here and watching this for an hour and a half but at a certain point once I get through some of the stuff that I need to get through I'm also happy if you're got the chat open if you want to ask random questions about processing or other types of creative coding things I'm happy to try to answer uh questions as well so I'm going to take a quick look over here at the chat uh to see if anyone posted anything uh uh I love that there's from the UK and turkey it sounds like the audio is good which is excellent uh so um the first thing I'm going to do is just kind of talk through my script here um let's see if I can pull that up so this is for the video what I'm int what I think I'm going to talk I want to sort of say hello and welcome who's this video for who am I uh and that the video is about what's new in processing 3 I want to look at the welcome screen um which uh has um a sort of option of what to do in terms of like saving your processing to Sketchbook versus you're processing a three Sketchbook uh I want to look at the editor and kind of there's a lot of new stuff in the editor in terms of just visual design and color but I want to mostly look at the error checking how that works Auto completion uh tweak mode and uh the debugger however I'm not going to spend very much time on the debugger because I have an entirely other video that I already made about the debugger uh I want to just emphasize how much faster and speedier and less flickery the open jail renderers are this is really du due to many people's work uh but single lot a few Andre cbri and yakob vter did I pronounce that right uh spend a lot of time working on the openg renderer uh there's a new full screen function you can span on multiple displays on talk through that talk a little about support for high density displays um uh just mention briefly some of the the sort of stronger restrictions in terms of how you call the size function look at the contributions manager and how amazing and wonderful it is now and next steps and the wiki and GitHub and how you can contribute and all that sort of stuff so that's my script does anybody have any feedback on that script uh what I like to do since there's a 30se second delay before you hear what I say is I like to do magic tricks with my magic invisible water this is water that's invisible but oh so delicious okay that was about 30 seconds of me drinking the water uh let's see I don't see any other comments I got 14 14 that's one in a four double digits people watching this I'm really Ming up in the world uh so I think that's kind of my plan interested in the difference between open GL and how to get the most from that so um Mike uh bronberg asked which I don't know if I pronounced your name correctly uh uh how to get the most from some of the new stuff in opengl so maybe I can talk about that a little bit after I get sort of this core video done the core video I just want to be like 10 to 15 minutes and kind of gloss over the higher level stuff and then maybe we can have a little bit of discussion to be honest with you I'm not as uh my my expertise in terms of kind of like the the guts of the open gel stuff and processing is not as uh deep as it could be um just been kind of watching with Glee and amazement of how much work has gone into the open gel engine but I can try to offer a few tips or a few bits of knowledge that I have but um that's that good enough okay um any other questions comments losing viewership folks down to 12 I really I need like I want like a giant ticker just so I can be like inundated with this like number just really it's like strange I don't have the like Periscope thing where I just see hearts floating everywhere I just like maybe I could have some like hearts hanging from the ceiling in this room which would make me feel better I have a you you I I feel the warmth and love of the world in this strange place by myself talking to a camera you studio audience okay so uh rather than keep rambling I am going to get started to make this video I think because I think I'm ready to do it I the thing is I'm probably going to have to do it a couple times which when I'm going to record this a couple times I'll do it once try to get through the whole thing and if you guys have questions or feedback I'll record it again if there's anyone out there with a flare or a talent for video editing it's possible that I could conceivably um uh make the final video as kind of editing together pieces of like the good part from here and a good part from here but you know my sort of style is just try to do the whole thing in one take it's informal and I'll make mistakes along the way but that's also okay so I'm going to come back to my magic water because I need some water before I start and um I think that's it does the line have move up down yet text editor does the line move up down yet me goes to download Line duplicate in place sorry I don't understand that question zhie so um if you want to clarify I can maybe kind of look at it again later I am however because I I get distracted by seeing myself in this chat page I'm going to kind of close CL this laptop for a second so I won't be looking at the chat for like about 10 minutes or so I have a noninvisible coffee drink and I think I will get started okay feel like um I need a little more water so I'm having trouble getting going stepping out of frame for a second okay here we go welcome to processing three this is I'm take one Clapper okay I have to go over here oops to turn this mouse on because I got to press the record button you know this mouse is like way in the way okay I should probably have a different background than the just gray one but the gray one will have to do I keep burping which you can probably hear which is like really embarrassing it's live live YouTube okay here we go hello and welcome uh my name is Dan schiffman and I am here right now in this room to talk about uh what's new in processing 3 um processing three is the result of start over uh who am I new in processing three on beh I was going to say that okay once I get some momentum going I'll probably be fine try that one more time hit record hello welcome uh my name is Dan shiffman and I am oh the camera went off good thing I remembered good thing I just started these cameras have this bad habit of powering off after 30 minutes cuz I'm using Canon 5DS I think there's a setting that I can change but I haven't changed it okay stop and here we go this is going to be it hello uh my name is Dan schiffman and I'm here on behalf of the processing foundation and the many many well not so many there not so many there's really just a few core people who volunteer frosting is a very small team there's not a lot of people I want to thank people but without like listing names and all that I guess I won't worry about that too much I can't take any credit for any of this I'm just making the video hello and welcome my name is Dan schiffman I am here on behalf of the processing foundation and all of the volunteers so many people who have put in so much time and effort to make this new thing that's come out right now called processing 3 now processing isn't new processing has been around all the way since 2001 processing 3 is the newest and in my opinion the greatest really really an amazing and like I don't know I sound like Donald Trump in my over exaggeration but it's a really wonderful uh that's going to be like a cultural reference that's no one's going to want to hear two years from now I I'm going to start over no one's really listening to me I'm going to this I that was fine except I said Donald Trump it's the best ever processing video version of processing it's the greatest let's make processing great again okay all right I was not hired for host of The Daily Show clearly okay here we go hello my name is Dan schiffman and I am here on behalf of the processing foundation and all of the volunteers who have put a ton of time and effort into making this new version of processing that has just come out processing 3 now processing is not a new project processing has been around all the way since 2001 it's almost 15 years of work that has gone into processing but this new version has a lot of new features that I'm particularly excited about and so what I'd like to do in this video is kind of Hit the high points and kind of walk through what's new in processing 3 see what I can show to you if you have questions maybe you can add them in the comments or find me on Twitter and I'll make more videos to answer some of those questions um but first let me just say so in terms of the audience audence for this video If processing is totally new to you what I might suggest doing is going to the processing website link below as well as the hello processing tutorial which will also be linked below which will give you kind of an introduction to what processing is and uh how and how how to program with processing here I just want to look kind of look at what's new what's new in three that wasn't there in two okay so uh before I get but not before I'm going to just do it right now so the first thing I'm going to do is I have processing 3 look at that wonderfully beautiful icon designed by me because I have no visual Talent whatsoever but I'm so pleased to be involved with this project that so everything looks so wonderful um I'm going to click on this icon and processing three launches now one of the things you'll notice I don't know if this has ever happened before probably has but there's a welcome screen here and uh one of the new things about processing 3 is that processing 3 allows the possibility of keeping your sketch folder from processing to intact meaning all the libraries all of your sketches is intact so that if you ever need to go back to using processing 2 or move between the two versions you can have separate sketch folders and this is kind of the recommended way of working you can say you could use your existing Sketchbook folder and just kind of bring all those sketches into processing 3 or you could kind of start fresh and pull things over a little bit as you need you know so the hope of course is that you know after a little while processing 3 is going to be the main version you find yourself using but as libraries are still being updated and changing you might want to sort of keep some of your historical stuff if you have a kind of project you have to just get running for this exhibition this day so I'm going to do that uh I'm going to here I'm going to select create a new Sketchbook folder and I'm going to click get started now what it's doing is it is opening up the finder and it's telling me where do you want that new processing sketch folder to be now this won't exist for you I happened to before I made this video I made a folder here called processing 3 in my documents folder so that's the folder I'm going to select that's the folder I'm going to hit uh open to and now that is my processing Sketchbook and if I go to Sketchbook you can see there's nothing in there because I've started completely fresh and if I have a shortcut here on the the desktop just so we can take a look at that folder you can see what's been made automatically there a folder for examples libraries modes and tools so those are some things I'll talk about when I get to the contributions manager but uh this is where your sketches would appear as you start to make new ones and save them of course you can save them anywhere on your computer but in you know the Sketchbook is the default location essentially Okay so what's next on my script that's in front of me um let's start looking actually at the at the editor itself so the thing that's changed the most in processing three and just at a glance is the visual design of the editor icons are a little different there's a new button over there look at this line numbers right there's line numbers for your code uh these line numbers look strangely spaced out perhaps it's only because I've made the font for the editor quite large just for demonstration purposes in this video and so in fact I could start typing some code uh and I could say size and I could say draw uh and there we go I wrote some code oh boy did I make a lot of mistakes or what so one of the things that I don't know what just happened there while I was typing or watching I kind of like lost my train of thought for a minute I was like in the zone of being hypnotized and typing but one of the things you'll notice is that where there are errors you'll see oh look at this there's a little squiggly line there showing me there's an error here now you can obviously see I'm missing a second parenthesis here so one of the new features of processing three is that the uh real time error checking as you're writing your code processing behind the scenes is checking to find errors and highlighting them for you in certain ways you can also see this error is is highlighted right here missing right parentheses and look at that isn't that just like the greatest error Mage you've ever seen so one of the things that we've worked on quite hard in this new version is rewriting kind of standard Java error messages to try to make them make a little more sense and be a little friendly and quite helpful and this is you know it doesn't work perfectly in all cases but this is a case where you've seen it's worked quite well so I could go here and I could close that right parenthesis and we could see oh there's some other errors some other squiggly lines what's going on and now ah something else that's new right I'm missing a right curly bracket perhaps uh but one of the things that's new down here that you can see is the the message area the message area where you might normally type things like print line uh ah I sort of messed that up uh the message area is where you might see the results of uh print messages that you put in your code to kind of try to debug your code uh that's always just been the place where you also see the error messages it's one window error message spit out there your print line spit out there there are now two tabs there's the console where where the results of things that you log the console through print line up here and then this errors Tab and this errors tab will actually show you what the current error is and what line number it's on so and and you can see this red dot here is indicating that it's an error I believe there is also the possibility for uh processing to to demonstrate to give you a warning something that's like not such a good idea but your code will run anyway and that would probably be represented by a yellow dot if I'm right about that so let me fix some errors so we can uh I want to kind of demonstrate um some information some some some ideas to you so I'm going to take this out so one thing I want to show you here uh is uh let me do this okay so one thing I want to show you sorry that was a little bit awkward is notice how I'm missing a parenthesis up here and I'm missing a semicolon here previously in this scenario processing would have only ever shown you the first error once you fix the first error then it'll show you the second error now what you'll notice is down here in the console multiple the error console multiple errors are are listed and again you can see missing right parentheses missing a semicolon both of these have the Red Dot they're errors this is like great I love these error messages they're so nice and helpful and explain exactly what they should be so I'm going to correct those errors uh now processing just found one more error notice I didn't actually declare this variable y anywhere but I used it and now I have the V the the variable y does not exist which again is exactly what that error message should be so this is just thrilling and I can fix that error by saying in y and now uh oh I have the I spelled ellips wrong I have another error Spell ellips correctly and now all the errors have gone away uh and I'm going to hit save uh oops I don't need to hit save and you can see that um everything's gone I can click back to the message console so that's a little bit about the error checking I went on a little longer than I might have intended to um but I think I will stop there so that's one of the main new features um in the processing editor now another feature that is very exciting is code completion so first of all that realtime error checking thing that was happening you can actually turn that off if it starts to get in your way it's it's it's telling you errors constantly while you're typing and maybe that's something you just want to see when you when you hit save or when you hit run so in the processing preferences uh right here under continuously check for errors if you wanted to turn that off you could turn that off here I'm going to leave it on on but I'm going to add something else here this is not on by default uh um but it is something that you can quickly enable in the preferences code completion so a lot of you who have worked with other types of development environments are probably quite familiar with code completion you start typing and it's like hey maybe you're saying ellipse or maybe you're saying rectangle let me fill that code in for you this is now available for you in the processing development environment so I'm going to select code completion I'm going to select okay and I'm going to come down here and I'm going to say eel and then I'm going to say control space now code completion doesn't trigger automatically uh um the way that you trigger It Is by clicking control space and you can see when I typed control e control space it's making a guess do I want to type ellipse ellipse mode or use this ellipse constant um and you can see it's also giving you a little bit more information what are the arguments it expects ellipse expects four Arguments for floating Point numbers ellipse mode expect one AR argument and integer so I'm going to do ellipse mode and I'm going to type Center and I'm going to code completion that and you can see uh there we go so this is something that's possible in the IDE um it will also code completion also will pop up if I was making like a vector object whenever I hit the dot so as soon as I say V Dot I see a list of all the available functions for that particular object and I can kind of scroll through them and and select the one that I want and I know that I've got the spelling right and I know what the number of arguments expected are so this is a great uh really great new feature that's um that's in processing 3 okay moving on to the next item uh tweak mode so let me uh let's find an example to open up and I I probably should have thought of one in advance that I meant to open uh and I'm going to go under topics and uh animation uh no wait uh let's do simulation I know so simulation uh flocking this is one of the ones I always like to do and what I'm going to do right okay so you're probably familiar with the Run button this runs the sketch there it is you see it there there is another way you can run the sketch known as present mode uh I'm going to now present mode the sketch which just puts the sketch sort of in front of a background full screen to hide the rest of your operating system desktop and there is now a third way that I can call the sketch trigger the sketch and I'm going to come over to this part because I think this is what I want to demonstrate I can go sketch tweak so I'm going to run this sketch tweak and now notice the sketch running and look at the code I am going to scroll down see certain numbers suddenly have an underline under them and here's some numbers these are the weights in this flocking example each one of these B boid elements operates with three rules sep separation alignment and cohesion so let's say I want to turn off the alignment rule make alignment zero and make cohesion zero and make separation much much higher you can see that the behavior and I really should have to I'm going to do this video again because I'm dis practicing now that you can see how the behavior has really changed based on the strength of this parameter so if you want to just have a quick and dirty way to play with values and how they affect the behav of your code you can do that through this tweak mode interface and then once I hit stop tweak mode is going to ask hey do you want to keep those changes whatever those new variable values are do you want to keep those in the sketch now this is U no substitute for building your own interface or having interesting procedural and algorithmic generative ways to change values in your code it's really just a quick extra tool for sketching out ideas and trying different colors that you can play with and in fact tweak mode has a Color Picker built into it as well which is often useful um in addition to just tweaking different values okay ah and now the last new how long have I been talking for 12 minutes the last new feature that I would like to demonstrate here that's part of the editor is the debugger and I'm actually going to talk very little about the debugger because I've made an entirely separate video about the debugger that you can walk watch and I'll have that linked below again in the description for this video but right here there is this icon this insect icon that if I click it enables a debugger this is is a variable um this is a variable inspector there's different buttons now uh a step continue there's this idea of break points the debugger allows you to run the code stop at a given instant look at all the variable values and step through your code one line at a time to try to determine what the problem might be so I just got that's sort of like the overview of what's possible here with the debugger and um I encourage you to take a look at the other video if you want to kind of dive into that a bit more okay so what else is new in processing 3 so something that has really changed which if you like full screen fast Graphics is that the the a lot of the the engine in particular the openg GL engine the the engine that drives the p2d and p3d renderers has really changed um processing used to be based on this thing called an applet this very ancient piece of technology that used to allow you to embed Java programs into a web browser well that's a really dead technology and was kind of a stumbling block this uh with each sketch being tied to being an applet could really hampered performance and certain types of things that you might want to do full screen with a sketch this has all changed now that applet as a dependency has been removed from the processing core engine so let's take a look at some of the new things that have come up in that sense so I'm going to find myself an example I'm going to go under uh topics under shaders shaders are a nice way of looking at some of the p3d possibilities I will go to nebula so if we look at this uh nebula sketch this is actually rendered in p2d it's loading a Shader and if I hit run we can see there's a window and its size is 640x 360 so one of the new things you can do is there's a brand new function besides size and that is the function full screen so if I comment this out and instead of typing size I type full screen and oops and I don't need to save it um and if I hit stop and I hit run I'm in the land of white I'm in an apple advertisement I'm not sure what happened spinning ball of death what's going on with the world uh hello come back ah what's I got an error could not run this oh interesting something changed let's try p3d so what's what's weird is it worked with um alert GitHub found a bug I think you know I just use a different example for this video uh okay let's see what's going on let's try let's close this example oh I know it happened this is my mistake this is not a bug at all I'm a terrible person I've made a mistake I'm going to keep going because this is my practice round or maybe somebody could edit this video later okay let's start let me come back let's run this I'm going to come back to oh and I don't want to save this this nebula sketch you can see it here running 640x480 window the size function is determine that window size and what I want to do is change now from the size function to calling a function called full screen now full screen does not require Dimensions does not require a width or a height because by Nature it's going to just draw the sketch at whatever the size of your screen is however it does require a renderer with no argument passed in it will be the default renderer but since this is a um so maybe I should start demonstrating full screen with a regular sketch but since this um particular sketch requires at least the p2d renderer I need to say p2d and I can run the sketch and I see up there this is what I was looking for I just like this is my excuse that I could make weird hand motions and pretend that I'm floating in space okay so you can see here how uh speedy and fast this is how easy it is to suddenly make your sketch run full screen comment that back out set it to size uh there's if you've used earlier versions of processing you might have noticed like different flickering problems or the window takes a while to get going there's in processing 3 you'll find that a lot of stuff is much uh faster in terms of like getting the sketch running and also just faster in terms of the frame rate of what it's rendering uh due to so many things changing behind the scenes um another thing um let's just look at a different example uh I'll go down to uh demos maybe I'll find something there under Graphics uh let's try a tree foil this might be an interesting one and let's make this one uh full screen p p3d and uh this one's kind of nice a little bit dark can't doesn't doesn't show up as well it's it's coming more to light please don't hurt me tree foil I'm I'm a friendly human um so one of the things I want to mention here actually like in addition to just the full screen being so easy to use with the function and kind of launching instantly that um you know a very common scenario of working with processing is you've got your thing you made it on your laptop you're plugging in a projector now you want to see your sketch on the projector you want to see full screen in past times it's been a big hassle full screen in addition to taking the renderer can actually take as an argument the display you want to display it on so if I were to say full screen one that might be the default display your laptop screen if I'm connected to a projector and I say two then that sketch is only going to go instantly onto the uh display number two which would be your projector it sort of depends what your operating system settings are but this works uh really well and I should have this over to the right so when I'm typing you can see it better uh and then also really exciting is there is an option of saying span and what full screen span will do is if you have multiple monitors it'll take that sketch and span it across them so for multiscreen displays this is a really fantastic uh option that just sort of just works instead of trying to find some weird strange stack Overflow Java hack thing to make that work um another thing that is new in processing 3 is a a way to deal with high uh high density displays so um uh Mac retina machines other types of displays that have super high density displays uh fine resolution of picture but this is like it's hard to just do this video continuously I just need to take a break um it's mostly because I took too long for the earlier stuff I'm already at 20 minutes so I have to I have to take about half as amount of time and move through this stuff faster but I'm going to keep going just to practice um that uh um uh there's a new function called pixel density I should have just like an example ready to go I actually just use this Hue example so um for example here if I were on a high If This Were a high density display I could say uh pixel density density 2 and processing behind the scenes will do all of that pixel doubling uh to make the lines and the antial and everything look fine ER and crisper and more beautiful in that sort of like high density display way the other thing I'll mention is that there is a new experimental renderer which is particularly well suited to highdensity displays that you might take a look it's not the default renderer it's kind of hidden there in the documentation but uh it's the Java FX um so fx2d it's based on a technology called Java FX so if you want to get the highest quality 2D rendering on a highdensity display you might look into trying this fx2d renderer see how it works and chime in on GitHub with any bug reports or um and have questions about it you can also ask those on the Forum okay speaking of uh the size function it's always been the case in processing that the idea is that the size function you know it's generally good practice not to use hardcoded numbers in your code the size function in processing is the one place where you need to use hardcoded numbers in your code it's it's a the that the the the the hardcoded numbers there allow for a lot of these new possibilities in terms of rendering and uh bugfree I should just say there's a way around it look at the wiki I've lost lost my Steam on this video so I'm going to start over soon so I'm racing through the last thing and then there's the contributions manager uh I'm going to I'm going to pause for a second and take a break because um I took too long at the beginning of this video but let me run through the contributions manager stuff I'm kind of so and then I also want to look at the contributions manager which is new uh it's fully integrated everything's in the same place uh you can search for things like the connect library for want install on up a library you click install uh once you see once you click install you'll see a green icon that is installed libraries that don't aren't that uh aren't um compatible or gray out and then if there are libraries available for an update you'll see them in your update list with that icon and you can actually click update and it'll update them you can see that I'm on3 but the current version is 04 then I was going to mention the wiki which has more details I don't need to give all the details in this video and that the LI you know many libraries are still being updated for 3.0 a lot of them are grayed out if you're a library developer please get in touch we really want to help you update it and if you have any questions leave them in the comments in this video uh leave them in the comments in this video um that's one thing I want to say oh uh report bug on GitHub and also you can ask questions at the processing forum and always you can send me a message uh at shiffman uh so that that was my rehearsal I'm going to hit stop here even though I I kind of lost steam after about 15 minutes which I should be able to talk for 20 minutes I do that in class all the time I'm going to pause and I'm going to look at the chat for a second and see what uh see what comments you have so if anybody has any feedback or comments right now I'm going to try to start over and do this video again there's some things that I figured out that I was doing wrong that I can have ready better uh there's some mistakes I made that sort of thing so I'm kind of getting myself set up again I'm going to drink some more water I'm going to look at these demos I'm try to pick the best one rotating arcs is a good one particles what does that one do oh this is me apparently oh that's kind of a good one to demonstrate speed and I can move the mouse around 3D this this one will do look how fast it is so many particles hundreds of thousands of millions of particles I guess I could use that one um planets let's try this one that's more spaciness I like the nebul I think I should start with the Hue example for just doing a 2d one uh examples um Yellow Tail is a great one too um performance tests uh low level ribbons I think I'll do the particle one it's sort of like a classic thing that people are used to seeing I think that'll work well okay any other comments nice sketch with the particles okay good so I'm going to use that one okay I need a little short break for a minute I'm going to drink some more of this water here's the problem I have to leave the live if I if I turn off off the live stream oh boy it's the audio sometimes getting hello it's kind of hitting that red thing if I talk too loud but you did you guys notice any crackling or audio I think it's okay I I don't haven't been talking too loud um I have to leave this running because I can't turn the stream off and turn it back on but I need to go refill my water so I'm say back into minutes getting more water so if you're watching that's my message to you you I'm going to take my magical invisible water cup and go refill it and I'll be back in 2 minutes if you have any comments or about that sort of my list and script let me know I'm I think I'm ready to do this it's 210 I even have like an an hour more time so I think I just have to get my energy going and just power through the whole thing and and be more succinct I went on and on and on about certain things just need to show the error check I showed like five different errors just showed two Auto completion just show it tweak mode I need a better example for tweak mode that was too complicated let me find one uh so let me come let me find it if you have a suggestion for an example for tweak mode um just like Basics like form or something uh shape Primitives see these are static though it has to be something animated uh oops I'm here uh math noise noise wave let's try that oh this is going to work um because if I do this oops if I do sketch tweak so this is kind of a little bit of bug that tweak mode in I guess it has to do that it like like resets your code but it's fine oh so this is good because I can show this that I'm tweaking the background that's great and I can also show this ah yeah this is good but I just have to position it over here I don't have a lot of screen real estate because I made the resolution so low but I think noise wave this will work I can I can fuss with this I can make this work because this is a nice one too this incrementation yeah look how that changes it oh yeah this is good okay great noise wave will be a good example Le uh okay um so let me quit quit quit quit quit quit don't save quit don't save and now quit quit processing oh no bigger bigger bigger bigger I'll be right back in two minutes I need like a little clock I could just put on a timer but it's it's going to be less than two minutes 30 seconds I am currently live streaming from my office are you I am taking a break to get some water now I am going back on YouTube it's just me talking processing I wish it was my new like something else but okay I'm back oh and of course the camera without fail goes off so that's good I've got it back on uh I have to get ready again so a couple things I have to do here is I have to go to the preferences I have to reset process thing to uh not know it's been run before uh and oh yeah hot Pik that's right when I went to get my water I kept talking it's a good thing I didn't go I don't know do something I shouldn't be doing that's very funny I I was just talking to Gordy Gord is now live on YouTube um okay uh nine people okay I'm GNA I'm going to check here and uh okay uh I'm going to post something actually no I I think I posted enough times that I'm live streaming so people will find it or they won't find it okay any last comments looking reading Twitter for no reason more comments below okay okay and here we go okay my goal is to do this video again and take about about about um 10 less minutes to do it to be much more efficient about it um and and I just I think I'm ready to do it actually I'm going to drink a little bit of the coffee so I'm losing some energy here okay processing three my favorite version of processing ever water chat still working you know I've got a little gray area down here but I'm just going to leave that it's fine okay thanks thanks for tuning in Z gono and if anybody else finds their way here here we go okay camera one that's not a camera that's not a camera get some energy going here kiding okay here we go and processing three oops hello and welcome uh my name is Dan schiffman and I am here on behalf of the processing Foundation to talk about processing three um shoot forgot what I was saying always takes me a few minutes to get going uh hold on sorry everybody I kind of wish I had gotten through it that first time it's sort of hard to do this the second time but it's fine I can do it okay hi uh my name is Dan schiffman and I am here to talk about processing three uh I forgot the first sentence that I'm saying exactly again shoot hello uh my name is Dan schiffman and I'm here on behalf of the processing foundation and the all of the volunteers who have spent a lot of time and a ton of effort over the last uh you know many years in fact working on the processing software to talk about the newest version of processing processing 3 and what's what's new about processing 3 now processing which I've now said that word like 10 times in the first sentence is not a new project and processing has been around all the way since 2001 in fact I think we're coming up on the 15th anniversary of the processing software itself um so this video is really meant for those of you who have been using processing and want to sort of see what what are some of the new features of the development environment what are some things that it can do and what are some reasons why certain things have changed that's my goal to talk about those things in this video however if processing itself and programming is something that's completely new to you I would recommend checking out just the processing website and the hello processing tutorial um both of which I will link to below there's nothing below me but a flooor but I'm probably embedded in a web page somewhere talking uh in in the in the in the description for this video so take a look at that so my goal is just kind of give you a quick overview uh of the features kind of look at each one for a minute or two and then of course uh I would be glad to take any questions which you can ask in the comments of this video or on the processing Forum or you're welcome to send me or a um or the processing Foundation itself a message on Twitter and the links to those will also anything I say will be a link below in the video will just somehow be there uh by the fact of me saying it okay so let's get started and let's look at processing 3 so I have processing 3 it's right over there in the corner it's a lovely icon not at all designed by me because I'm incapable of Designing things that look nice but uh many people have worked on many things in processing that make it look absolutely beautiful and that's one of my favorite things about the new editor is you're going to see it has just a new look to it and a lot of new features uh which that look supports so let's launch it and one of the first things you'll notice is that a welcome screen comes up so here's something that's here's the first thing that's new about processing three if you have been using processing for a long time you've got a whole set of sketches in libraries and your processing 2 and they're kind of archived projects that work and you don't want to mess with them you can start fresh and have a completely new Sketchbook with its own set of libraries and tools and modes just for processing three and that's kind of the recommend the re the recommended uh option for you here you can see this option here you could of course just use the old Sketchbook you know most sketches are going to work between two and three not that much has changed but there are some significant things and for larger more complex project particular if you're using external libraries you you now have the option to keep those intact from processing two and kind of get things working in three as you have uh kind of time for okay so I'm going to do that and I'm going to hit get started I'm going to get a new sketch folder and what you'll see is it's the finders open up and it's saying like hey where do you want this new sketch folder to be so this processing folder was my processing 2 Sketchbook this won't appear for you I I made that folder before the video started but I'm going to select this folder processing 3 and that's going to be my Sketchbook and you can see here under Sketchbook it's empty it's there's nothing there yet I haven't made any sketches maybe I'll make one in this video and it will appear there and that will be a nice happy moment so looking at the editor it's new there's some new icons there's some new tabs down here and look at this line numbers so many of you have always wanted to have line numbers in the processing ID and they're there now and one of the reasons why they're there is there's an entirely new error checking system which refers back and forth to line numbers which so having them there can be quite useful uh for a variety of reasons so let's um let's start with the new editor I want to kind of quickly you know go through some of the new features here in the editor and the first one I want to look at is just how error checking works now I realize no no it's fine uh I realize I just ignore that preferences screen for a second edit that out um I was checking to make sure it was set right so what I'm going to start doing is I'm going to type some code and I'm going to type void setup and I'm going to type void draw and I'm going to type size 200 comma 200 semicolon now you can see I have a syntax error there right a parentheses is needed so a couple things you'll notice one is processing is like detecting the errors as you type so as you type it's finding errors as you correct those errors those errors go away and this one I found is um first you'll note this squiggly line is showing you where that error is most likely occurring you know sometimes it's going to get it wrong but almost all the time it's going to get it right and the error message here missing right parenthesis so this is something that's new about processing 3 and I'm very excited about it because we spent a lot of time working on rewriting the Java error messages so detecting errors and giving more helpful feedback and this this just like brings tears to my eyes because that's exactly what's missing a right parenthesis and that's you know a helpful message rather than unexpected token missing error I don't know something like that so we can correct that error and we can also do things like in I'm going to say int x = 50 and I'm going to say ellipse 300 300 3 2 200 50 50 semicolon so now something you'll notice this is also exciting there are two errors here one is a missing semicolon one is a missing right parenthesis so something new about processing three is that if I go to this down here to the console the console is where you see print line messages come out you know for debugging and other things it used to also be where all the ER messages happened now there is a separate errors Tab and if I go into that errors tab you'll see that each error is listed individually now zooming back out for a second you can see a couple other things these error messages are listed in which tab they're in now in this case I have a simple sketch I haven't even saved it yet so there's just one tab but you might have errors in different tabs as well as the line number the line number is listed here as well so you get a full list of the error messages I can click on one and now it's even highlighted in the IDE so this ability to go go through your list of Errors find them debug them fix them is a wonderful thing uh and it's and it's new and it works great and you can see as I start to correct them uh those errors disappear ah look at that I forgot so this is interesting I didn't expect this to happen but I'm making a video live let's talk about this for a second I was like why the errors disappear there's still an error so this actually isn't an error notice it's a yellow line and notice there's a yellow dot here before there were red dots there so there's something called a warning which is that this variable is a variable I declared but I never used it it's a warning saying like you know your codee's going to run just fine but does it really make sense to declare that variable and not use it maybe you want to remove that line of code so this is and again you have a nice message the value of local variable X is not used so this is something that processing 3 has also warnings and I kind of earlier had the preferences window up for a second I kind of quickly shoved it away this is something that you can configure in the preferences so for example you can turn off warnings like you don't really care about the warnings if the code's going to run the codee's going to run turn off the warnings the other thing you can do is turn off this continuously check for errors option so if that's kind of getting in the way of your workflow and you just want to see the errors kind of when you finish typing um you can disable that option now this brings me to my next item in my list code completion with control space another new feature for the editor is code completion which is a a great feature tons of text Ed code editors and text editors have this you're typing some code it's a long thing to spell the editor just sort of magically knows what it is you're going to type and fills in the rest for you a feature like this is now available in the processing IDE so I'm going to select that option on it won't be on by default so you're going to have to go to your preferences and select it but once I've done that I can do things like Type e control space and you can see here uh if I zoom into that I'm being given the options so I typed e did I mean to type ellipse or ellipse mode or ellipse and in addition to showing me which things I might be interested in typing it's showing me what that function expects how many arguments so there's a little bit of metadata not as much as a full reference but some information to help you along and if I were to hit enter there it fills it in and I can just go and fill in the arguments uh however I might want them whoops and I could get that there and now I have the ellipse function so code completion is there you can also use it with objects uh if you have an object dot the uh code completion will show you suddenly what are all the functions available inside of that object which in many cases is super useful because you can't remember is it you know was it called dist or distance or you know check intersection or check Collision that's a quick way to kind of look up and see what those functions are available and get know what the arguments are and have them typed for you okay so those are two core uh features oh I'm missing a right parentheses let's figure out where that is line number nine oh no that's still just that warning uh so that that's an old that error is just there historically by accident I probably should have gone away by now but I made it go away by clicking save okay uh okay so let's look at another new feature in processing 3 now this is a feature that's been around that you could have added to processing as a separate mode it's called tweak mode but now it's in processing directly so I'm going to go grab an example I think the example that I want to use for this is the example called noise wave I'm going to pull this example over here and you know there of course there is a run option for a sketch run it present which presents it full screen uh with UHS a sketch in the middle of the screen with a full screen background but I'm going to show you this last option tweak so I'm going to run the sketch I'm I'm not going to run it I'm going to tweak it I'm going to put the sketch over here and as I run tweak mode you can see certain parts of the code have changed look at this next to background there's an underline there and also this option that I can click on so I can click on here and I could just tweak the color of the background right from the the code itself okay I like this color I'm going to keep that then I could also go down and find certain values like okay I want to tweak um I want to tweak the range of what noise is being mapped to so ah 300 down to higher two or I could make this one uh this go down to 100 so you can see that the code is responding in real time to me changing these numbers oops somebody just banged on the door and uh you know I could also go down here and say okay well this is a sort of noise incrementation level look how how that drastically affects Things based on what I do so you can sit there and tweak values in real time as the code is running and then if I hit stop it's going to give me the option do I want to keep those changes so I change a lot of hardcoded values in the code I like the way it looks much better I can say yes of course it's an example so it wants me to save it and and I've got those new values so this is a great new feature I would say it's not really a substitute for like building your own interface or having some interesting generative or procedural way to affect the way parameters in your program work but for quick and dirty sketching and trying out different values this is a really nice feature to have in the IDE okay one more new feature to have uh one more new feature that is in the IDE that I would like to demonstrate to you it is the debugger and I'm really going to gloss over this because I've already made an entire video all about the debugger and I'll make sure a link to that is included also Below in the description but I'll just point out to you where it is uh this insect icon up here if you click it it enables the debugger you get a a few different options uh for how you can run the sketch the whole point of the debugger is allow you to pause the code and Advance line by line so there's options like continue and step there's ways of adding break points which are moments where the code should pause and then there's this new pane over here which is the variable inspector so that variable inspector will show you what the current variable values are at a certain break point so I'm just going to add a break point here you can see uh diamond is now oops I head is in front of that you can see I click here and I add a break Point there's a diamond there and if I then run the code under debug the code runs and uh whoops um shoot I was doing so well with this video U let me try adding it here uh uh I'm not sure what happened uh shoot I should went too far with my discretion of the debugger watch the other video it's fully explain I might have to edit this out at some point just cut myself off and go to the next thing cuz I don't need to demonstrate the debugger itself so let me let me actually like um uh kind of start over for a second back where I was and just say uh I'm going to start for where I was talking about the debugger icon so this is the debugger icon up here in the right hand corner if you enable that debugger icon you'll see that there are a bunch of different options for stepping through the code continue pausing uh boy I really screwed this up uh I'm going to let me start over from the debugger and see if I can wonder why that didn't work but I'm not going to not going to explore that right now um I'm just start I'm going to pretend I'm starting over talking about the debugger and then I'm going to keep going and maybe this can be spliced together as I am recording um so the last feature that I want to talk about is the debugger uh now oops oh shoot now I stepped on The Wire things are really going haywire let me fix this audio cable here okay the last feature I want to talk about is the debugger uh now I don't need to spend tooo much time on the debugger because I have an entirely other video that goes through the debugger in detail and I'll make sure there's a link to that below that you can go and watch but the core idea for a debugger is it allows you to pause the sketch at a given moment step through the sketch line by line and look at what the values of variables are at different moments to try to diagnose a problem with the sketch so to enable the debugger there's this nice insect icon up here in the top right you can click on that um and once you click on that you can see some options have changed here you can run The Code by debugging you can step you can continue and also there is this uh variable inspector over there in the right where variable values will be displayed so for more details about that take a look at the debug video okay the next topic I want to talk about is full screen and fast graphics and openg G and a lot of that's that's changed in really exciting new ways in processing 3 so let me open up a simple example here uh open recent uh Hue so this is one of my personal favorite little processing examples it's just demonstrating how Hue Works based on the why uh the Y value of uh the mouse I'm drawing colors of different Hues so one of the things that Pro the sort of core function of procing that you're familiar with is the size function and we we did see that there is this way of saying uh present and what present does is it takes a sketch and places it in the middle of the screen with a nice background behind it but there is a new function available in processing called full screen so what full screen is a replacement for size you no longer need to use both of those so if I comment out the size function and say full screen and I run it you will see my sketch is now happening instantly full screen and what's really wonderful about this is the full screen function doesn't just take your sketch and run it full screen on the display that you're currently working on you know what's one of the most common scenarios of why people work with processing they've got a project it's on their laptop it's hooked up to a projector it's part of an installation if I were to say if I have two displays and I say full screen one this sketch is going to run on this particular display if I change it to full screen 2 this sketch is going to run on the projector so the ability to quickly and easily send your sketch full screen to a particular display is a new feature of processing with this full screen function and in addition to that if I simply just say span full screen span this is a scenario that if I have multiple displays the sketch will span across all of them which you know if you've worked in multiscreen uh installations and environments before this is a very difficult thing to accomplish and now um this is possible just um just by um uh working in uh processing with the full screen function okay so what is ah there's a little bit more to this than that so what I want to do is uh close this sketch and go to a different uh example I'm just going to go to this uh uh demos Graphics uh particles and one of the things I want to talk about here is what's happened with openg rendering and processing so you'll notice processing has multiple renderers there's the the default renderer which is what I've just been using before there's the p2d renderer for Hardware accelerated twodimensional graphics and the p3d renderer for Hardware accelerated 3D Graphics processing used to be built on top of this thing called applet old ancient technology to allow you to embed uh Java applications in a web browser kind of a dead defunct technology processing 3 has now removed applet as a dependency this makes uh three all sketches but in particular uh open gel uh 3D and 2D sketches p2d and p3d sketches run faster start faster less flicker quick full screen so all of these options that we're talking about are available here so if I were to say full screen you can see here is a nice Speedy demonstration whoops oh I forgot I've got to give it the renderer right so one thing that I that I mentioned before oops uh that I mentioned before about um that about the full screen function is you can pass it the particular display you want to go to but you also can pass it the renderer you want so p2d comma 1 would be the p2d renderer on the first display p2d comma 2 would be the p2d render on the second display right now I'm just going to do p2d on the default display uh oops read only and I'm going to oops I can't save it and I'm going to run it and you can see here it is so this is a sketch with a lot of particles running and processing super fast at a nice high frame rate full screen it started instantly this is a lot of work um has gone into updating not just this applet thing but just making these renderers work better with new openl features a more efficient code more stuff happening on the hardware card and so if you take a look on GitHub you'll see all you'll see the names of the folks who have really spent a ton of time fixing and fixing and fixing bugs to make this work really really well so you should thank them for that okay the other new thing about display uh working with displays and processing is that uh and let me just go back not that this I don't know why I need to open this but I'm going to go back to this Hue example for a second is that you know the world is now full of what what's known as high density displays so a Mac retina machine is a high density display a uh uh there's there's other types of high density displays for use with Windows computers so if you want to get that sort of finer quality rendering with processing you can do so with the new pixel density function so I'll just type that in here for example if I say pixel density 2 what this will do is it will sort of turn on retina or high density display rendering so you'll see finer smoother lines like you might like you want to see on a high density display I should also mention that really changes the way you think about the dimensions of your window right cuz there's the sort of Dimensions that you think it is 640 and 360 then there's the real pixel dimensions of that window because there's more pixels going in there to make it look sort of higher resolution so there's also some new variables pixel width and pixel height that you can use for Pixel processing and that sort of thing and there's more information about that in the reference okay uh oh finally there is an additional experimental renderer so if you're interested in really beautiful perfect high density display 2D rendering you might take a look at the this new renderer that's called fx2d so this is based on this is built on top of a technology called Java FX and it's uh optimized for like Fast high quality 2D rendering on a high density display it's experimental though certain things work certain things don't work give it a try and certainly um ask questions on the Forum or post bugs to GitHub for that okay the last thing I'll mention about this while we're on the size function is it's important to note that processing three requires you to use hardcoded numbers in the size function this is a requirement for uh uh that helps all the engine behind the scenes that's working to make the window open correctly full screen not full screen very quickly and be in the right position there are ways around it there's a uh uh and on the wiki I'm going to show you a Wiki page it'll be linked below there if you need to use a variable for that size function there's a way that you can uh get around it and other things that you might do if you're working with processing an environment like Eclipse but as a core rule right now that's become a little bit more strict with processing three you want to make sure you use a hardcoded number for size and size should be the first line and setup otherwise things can break and do strange things okay so I'm almost through this video I've been talking and talking and talking about new features in processing 3 and the last thing that I want to show you is the new contributions manager so one of the most exciting things about working with processing is the fact that there are all these libraries that you can use libraries to do interesting types of geometry to simulate physics to to use different kinds of hardware and sensors so um there is a new contributions manager which allows you to manage what libraries you have installed updating libraries with new versions um H and it it's it works great so I'm going to show you some of the features of that so if I go to sketch import Library ad Library it's going to pull up the contributions manager so one of the first things you can see here is that it this contributions manager is now fully integrated as one thing so whether you're looking for a library a mode a tool or example and by the way this is new example packages if you're the author of a textbook or if you're giving a workshop or if you just have a whole set of examples that you would like to release you can release example packages that can get downloaded into the the development environment directly so you can see here are three um four uh such examples from a couple of uh books that are out there about processing right now so you can see here there's a list of all of the uh libraries that are available to you and I can scroll through these list I can filter by certain keywords like I could say video I could filter also by a category here if I want and uh one thing I want to show you really quickly as you can see here I I I preinstalled a library but there's an exclamation point meaning this library is due for an update so a library that is installed you'll see in a minute has a green check mark and a library that's installed that needs an update has an exclamation point a library that's gray out is one that is not compatible with this version of processing so hopefully all libraries will soon become compatible with processing 3 and then they'll appear in the contribution manager and you can install them but let's just install a library just to go through that I'm going to go to connect uh I'm going to just type in Connect I'm going to install this Library I'm going to click on this install button right down here I'm going to install it it's downloading it's installed and if I look for that Library again whoops um you can see that there is the green check mark right there another useful tab by the way is up here I can go over to updates and I can see oh here are all the libraries that are available for updates and I can actually just collect select update all so if I have like 10 libraries that need to be updated I can just select update all and you can see actually how quickly it updated it download installed and that that that exclamation part became green so now those libraries are there the examples are there uh you can see which is the available version what's installed um so hopefully this new contributions manager will make it really easy to keep track of what you have what needs updating what isn't compatible what is compatible that sort of thing it sort of brings me to my next Point processing three is new there's a lot of libraries out there for processing if you are a library developer uh please get in touch with us if you need help updating your library for processing 3 uh you can post on the Forum you can send us an email you can uh tweet to processing org um we really like to be able to help people figure out how to make sure to get their libraries updated for processing 3 um and in the editor so um let us know what you need us to do for that and so the last thing I want to show you is just if you need more information about what's changed I've kind of this and you don't listen to me just whoops ramble uh and not look at this YouTube live event um I'm going to show you there is this changes in 3.0 Wiki so this will be linked in the video but this goes through all of these new interface things a lot of these rules about size the new renderers the syntax what's deprecated all of these types of things in in sort of text form so I'd also encourage you to read that over so you're very kind to listen to this very long video uh and look at these new features of processing 3 please let me know what you think if there's uh things that I miss Miss ask questions uh if there's ideas you have you can participate on the Forum you can post a bug report on GitHub and you can send us a messages in all the other kinds of ways people send each other messages in this today's world so thanks very much enjoy the rest of your day if you're still watching and I hope to come back and make more videos about things that you can do in processing okay byebye all right I don't know if anyone is still there uh okay 11 people are watching so I finished that video there was only one big big problem where there was like a section in the Middle where I couldn't get the debugger to work so I'm going to look at that right now uh just to see if I can fix the debugger if people have other questions they want to ask I will stick around on um YouTube for at least another um for at least another 15 minutes or I just got a strange text message uh uh hold on let me see what's going on uh uh okay actually I have a um I have a message that I have to attend to so actually I'm going to just be finished for today with this stream uh if anybody has any questions um you could send me an email or post me that message on Twitter I will uh and I'm going to look into this debugger thing and see if there's a bug that I need to post hopefully this video will do and I can kind of edit it uh to get it up there without having to rerecord it okay thanks for tuning in and uh post questions in the comments or you know how to reach me on Twitter I keep saying Twitter um and uh that's all okay going to stop uh oh wait I have to stop the stream over here
