With timestamps:

00:01 - Hello and welcome.
00:02 - I am starting a new
series of videos
00:04 - all about working with data.
00:06 - Working with data in
JavaScript, in particular, using
00:10 - the p5.js JavaScript framework.
00:12 - But, of course, this
topic is much bigger
00:14 - than any one library or
framework or programming
00:16 - language.
00:17 - It's really about, there's
this world out there
00:20 - and there's lots of stuff.
00:22 - You could get that stuff
and use it in a project.
00:24 - And why might you want to do
that and what kinds of results
00:26 - can you get with that?
00:27 - And really, I want to
focus on how to do that.
00:29 - So what I have here is, kind
of, a quick demonstration.
00:32 - I would love to just
sit here and show you
00:34 - 100 amazing and
interesting projects made
00:37 - with data on the web.
00:38 - But I'm just going to show
you one, which, I think,
00:42 - relates to what
the kinds of things
00:44 - I'm hoping to demonstrate
in these videos,
00:46 - is this project
called the Wind Map,
00:48 - it's by Fernanda Viegas
and Martin Wattenberg.
00:50 - And you can see here, there
is a map of the United States.
00:53 - There are these white streaks
flowing across the map.
00:56 - And you could imagine, there's
some underlying data, latitudes
00:59 - and longitudes, wind
speeds, wind direction.
01:02 - And somehow, that
data is being read
01:04 - and then the data is being
interpreted and manifested
01:06 - through drawing.
01:07 - So thicker white lines
for higher wind speeds,
01:10 - lines in a particular
direction for a particular wind
01:13 - direction.
01:13 - And so, what are the building
blocks of a project like this?
01:17 - What are all the pieces?
01:18 - How do you read the data?
01:19 - How do you cycle
through the data?
01:21 - How do you draw with the data?
01:22 - And what if the data
comes from this thing
01:24 - called an API, which requires
you to log in and have,
01:28 - like, secret key, and
all of this horribly
01:29 - scary, strange stuff.
01:31 - I would like to make this seem
like a very easy and welcoming,
01:34 - friendly thing for
you to be able to do.
01:36 - That's my goal here.
01:37 - So in this first
video, what I want
01:39 - to do is make a list
of the kinds of ways
01:41 - you might find data.
01:42 - And I've got a few
examples over here.
01:45 - But I think just to get away
from the computer for a second,
01:48 - I'm going to move over here.
01:49 - Hello again.
01:51 - So let's think
about this question.
01:54 - So first of all, I've got to
go back to the computer again.
01:56 - Let's say you're interested
in a particular kind of thing.
02:00 - Like you like flowers.
02:02 - Flowers, that's,
like, your thing.
02:04 - Oh, boy.
02:04 - I really should have
planned for this in advance.
02:06 - But let's say flowers
is your thing.
02:08 - So you might google, "flowers."
02:11 - And then you're going to get
all this commercial stuff trying
02:15 - to sell you flowers.
02:16 - Well, I really just want to
know how to grow flowers.
02:18 - I'm really off topic.
02:19 - I don't care.
02:19 - How to grow beautiful flowers.
02:24 - OK.
02:24 - Whatever.
02:25 - So I could go here be
like, oh, look here's
02:27 - this website about
flower gardens
02:30 - and I want to get some
data about flowers.
02:32 - I'm not really getting anywhere.
02:36 - I could be a much
better googler and I
02:38 - could say, "flower database."
02:40 - No, forget database.
02:41 - "Flower data."
02:44 - Ah!
02:44 - Flower data sets.
02:45 - Now I'm getting somewhere.
02:46 - The point of what I'm
doing is actually just
02:50 - to be sort of random here.
02:51 - This will happen to you.
02:53 - You have an interest
in a piece or kind
02:55 - of data and googling around
and you're finding things.
02:57 - What are you going to find?
02:58 - So first of all, I think there's
two approaches to a project.
03:01 - One is you actually
have an interest
03:02 - and you're looking for a
particular kind of data.
03:04 - But right now you might say to
yourself, I'll do that later.
03:07 - I'm just going to use some
existing examples of data sets
03:09 - that are out there
that you, me, that I
03:14 - am going to show you how to do.
03:17 - But there is a reason
for talking about this.
03:19 - So you're going to
come across and you're
03:21 - going to see a lot of things.
03:22 - So first of all, the data could
come in a variety of formats.
03:26 - Here's a list of some
formats that you might see.
03:29 - CSV.
03:31 - What is that?
03:32 - XML.
03:34 - What is that?
03:36 - JSON.
03:37 - What is that?
03:38 - You might just find a text file.
03:42 - You might just find a PDF.
03:43 - Or you might actually not
find any of these formats,
03:45 - but you see the data right
there on the web page.
03:49 - I mean, if that data is there.
03:50 - How do you get access
to that if it's not
03:52 - in one of these quote
unquote "formats."
03:54 - And then there's this
side discussion of,
03:57 - what if you see this word "API"?
04:00 - So what you're looking for,
when it's working with data,
04:04 - is you want to find somebody
on the internet who says,
04:07 - I have this data.
04:09 - It's about flowers and I
would like you to have it.
04:11 - Please enjoy it.
04:12 - And I prepared it for you with
examples and documentation
04:15 - to make it easy for you.
04:17 - And a particular
keyword, in the content
04:18 - of what you're looking for,
is you might be looking
04:21 - for data of the format JSON.
04:24 - The reason why you might
be looking for this
04:26 - is, JSON stands for a
JavaScript Object Notation.
04:31 - That might be convenient, right?
04:32 - Because we, you, I
have spent many a day
04:37 - making videos about
JavaScript Object Notation.
04:40 - Because I could say,
here's a flower.
04:43 - And its name is sunflower.
04:50 - And its color is like--
04:54 - I don't want to use
the-- it's fine.
04:55 - Whatever.
04:55 - You get the idea.
04:56 - I could put a variable
for its color.
04:58 - I could have a variable--
04:59 - I went off.
05:00 - I was thinking about flowers
and I lost my train of thought.
05:04 - So this is JavaScript
Object Notation.
05:06 - It's how you write
objects into your code.
05:09 - It turns out that
this data format
05:11 - is exactly the same as this.
05:12 - Now there's a little
bit of nuance there
05:14 - of some slight differences.
05:16 - But if you find data
that's been prepared
05:18 - it's like somebody said, are
you programming in JavaScript?
05:22 - Would you like data
made for you to use?
05:24 - Here it is.
05:25 - So this is an ideal scenario.
05:27 - You're happy if you find data
in this JavaScript Object
05:30 - Notation.
05:31 - And the next video
I'm gonna make
05:32 - is essentially all about what
that is and the actual syntax.
05:35 - Now another format
of data that you
05:37 - might find very intuitive
and familiar to work with,
05:40 - is this format known as CSV.
05:42 - Now CSV is a particular kind of
a larger format, which I really
05:47 - mean tabular data.
05:49 - So what does it mean for
data to be in a table?
05:54 - You have name, age, gender.
05:58 - Dan, 42, male.
06:00 - That's how old I am.
06:01 - Let's just get that out
there on the internet.
06:04 - I'm youthful at heart though.
06:06 - And then there's some
other data there.
06:09 - I could put my phone
number in there
06:10 - and I could say my phone number
and make this video even more
06:12 - embarrassing.
06:13 - But you're familiar
with this probably--
06:17 - whoops, that's the wrong
thing I was going to open,
06:19 - like Google Docs,
that's tabular data.
06:23 - And in fact, you can
have a Google Spreadsheet
06:25 - and access that
Google spreadsheet
06:27 - in your JavaScript program.
06:28 - And in fact, you can tie
that to a Google form.
06:30 - So this is a topic
that I want to explore.
06:34 - The reason why I'm mentioning
CSV as a particular format,
06:39 - is that what a raw
format for tabular data
06:43 - is to have all of the
cells separated by commas.
06:48 - So you can see an
example of this.
06:50 - Here is a table of
comma separated values.
06:53 - The first row being the
header, "x, y, diameter, name."
06:56 - The next row being some values.
06:57 - The next row being some values.
06:58 - And in fact, this
is a p5 sketch.
07:02 - That kind of loads that
and using the data,
07:04 - puts the things on the screen.
07:06 - So at some point
I'll demonstrate
07:07 - that in more detail in a
particular video dedicated
07:10 - to just CSV.
07:11 - There's lots of
CSV data out there.
07:13 - Here's one that I think
is interesting to look at.
07:18 - Right here.
07:18 - This is Citi Bike data.
07:20 - Citi Bike is a bike sharing
system in New York City
07:25 - and they have all
of the trip data.
07:26 - So the date, the
latitude, the longitude,
07:28 - the address, where it
was picked up, the time.
07:30 - It is a huge data set.
07:31 - How would you load that data
set, read that data set,
07:33 - maybe draw lines
of people riding
07:35 - their bikes all over the
map of New York City.
07:37 - So this is the kind
of thing that I
07:39 - want to explore in
these sets of videos.
07:41 - So that's really what I've got
here with CSV data and JSON
07:47 - data.
07:48 - Now XML is another
standardized format for data.
07:52 - These three up here are
really standardized format.
07:55 - What I mean by
standardized format
07:56 - is, you the human being
want to look at data
08:00 - in a nice presented way.
08:02 - Like if you're
interested in movies--
08:06 - I don't know why I'm
plugging some IMDB here,
08:08 - but you could go to this
website and be like,
08:10 - oh, look at all this data here.
08:11 - And I can see it
and I can soak it in
08:13 - and I can find the movie that
I'm interested in and yay.
08:16 - But this is not useful
for a computer to read.
08:21 - This is designed, visually, for
you to look at with your eyes.
08:24 - And you could make
the same argument
08:26 - that this Google
Doc has actually
08:28 - done that as well
with the column
08:30 - headings and colors and lines of
grids, all that sort of stuff.
08:34 - But the point of
these data formats,
08:36 - if I come back over here,
is that these are all
08:39 - designed for computers to read.
08:41 - There's commas
separating everything.
08:43 - There's this
programming syntax that
08:45 - has kind of got curly brackets,
and semicolons, and quotes,
08:49 - and commas.
08:49 - So it's the standardized format.
08:53 - If you can find a standardized
format, that's a good thing.
08:57 - P5 has a particular
set of functions
08:59 - that allow you to read
JSON data very easily,
09:02 - read CSV data very easily,
read XML data in a slightly
09:05 - trickier way, but it works.
09:07 - But you might also
be in a scenario,
09:09 - at some point,
where you just found
09:11 - the data not in a format that's
meant for a computer to read.
09:14 - Like there's just a text file
with a lot of stuff in it.
09:17 - Or there's just a web
page and it's all there,
09:19 - but it's like a
mess and it's not
09:20 - in a standard format
or some PDF document.
09:23 - So, at some point, I would
like to make one video
09:25 - to talk about how you might deal
with some scenarios like that
09:29 - if you find a particular
piece of data online
09:31 - but it's not handed to you in
this nice, friendly JSON way.
09:35 - And then, of course, there's
this question of API.
09:38 - Now if you have
a fixed data set,
09:42 - just like, this is the data.
09:44 - It might come as a file.
09:45 - But if there is a huge data
set or a data set that's
09:48 - changing over time, like
Twitter is a data set that's
09:51 - changing over time
because people
09:52 - are posting to it continuously.
09:55 - All the articles that
appeared in the New York Times
09:57 - in 1950, that's not
really changing over time.
10:00 - I don't think.
10:01 - Unless was could do time travel.
10:02 - But anyway.
10:02 - You could download
that and have that.
10:04 - So an API stands for Application
Programming Interface.
10:09 - Meaning, you're
writing an application,
10:11 - somebody else has
an application,
10:13 - that other person says, oh, I
would love for your application
10:16 - to talk to mine.
10:17 - So I'm going to make an
interface for those two things
10:19 - to talk to each other.
10:20 - And that interface
might be sending
10:22 - data in one of these
formats back and forth.
10:24 - So the tricky thing is if,
just to use the New York
10:27 - Times as an example, the
New York Times has an API,
10:30 - it's very nice of them.
10:31 - They're like, hey, we have this
newspaper and all this stuff
10:33 - and why don't you read
it like human being
10:36 - or why doesn't your
computer program read it.
10:38 - And we'll make it easier by
giving it to you in an API.
10:41 - But you've got to log in, get
an account, get a secret key,
10:44 - figure out how to
query the API, how
10:46 - do you say I want the
articles from this year.
10:48 - Or that have this
certain key word in them.
10:51 - And so that's the kind
of thing we're gonna do.
10:53 - And just to run through
a few examples of that.
10:57 - For example, here if I'm
interested in flowers.
11:02 - This is me querying the New
York Times Article search--
11:06 - didn't try these examples
to see if they worked.
11:08 - Let me try a different one.
11:09 - Let's try this one, I'm going to
search for the word "computer."
11:12 - This is very sad.
11:17 - I have to go look at why the
New York Times one didn't work.
11:19 - But one of the
APIs that I'm gonna
11:22 - spend some time showing you
is an API called WordNik.
11:25 - Let me move this over here.
11:26 - Where you can see here I've
put in the word "apple,"
11:29 - and I've click this
button called Examples.
11:31 - And WordNik has given me back
a set of example sentences
11:35 - that have the word
"apple" in it.
11:38 - This is Google Image Search,
I passed it the word "apple"
11:41 - and I'm getting some--
11:42 - I like flowers better.
11:43 - Let's go back to "flower."
11:45 - And you can see I'm getting a
whole bunch of flower images.
11:48 - So this API, meaning Application
Programming Interface,
11:52 - Google has a server.
11:53 - I have a program.
11:54 - Those two programs are
talking to each other
11:56 - because Google has
this API built.
11:58 - But the point is, I can't just
download all of Google's data
12:01 - as a big CSV.
12:03 - I've got a query that API.
12:04 - So how does that work?
12:06 - Instagram's another one.
12:09 - Flower.
12:10 - Whoops.
12:12 - Let's just turn that off.
12:15 - Google Sheets, we talked about.
12:17 - OK, so that's kind
of the basic--
12:18 - I don't know how well this went.
12:21 - It's too late now,
because you've already
12:22 - watched this video if
you're watching it now.
12:24 - But the next video
that I'm gonna make
12:26 - is only really going to be
about what is the JSON format?
12:30 - How does it work?
12:31 - How do you pull the data format
of JSON into your project
12:35 - and do something with it.
12:36 - So that's what I'm going to
do in a few short minutes,
12:40 - in the next video.
12:41 - Thanks for watching
and see you soon.
12:47 - OK.
12:48 - Wait, I need.

Cleaned transcript:

Hello and welcome. I am starting a new series of videos all about working with data. Working with data in JavaScript, in particular, using the p5.js JavaScript framework. But, of course, this topic is much bigger than any one library or framework or programming language. It's really about, there's this world out there and there's lots of stuff. You could get that stuff and use it in a project. And why might you want to do that and what kinds of results can you get with that? And really, I want to focus on how to do that. So what I have here is, kind of, a quick demonstration. I would love to just sit here and show you 100 amazing and interesting projects made with data on the web. But I'm just going to show you one, which, I think, relates to what the kinds of things I'm hoping to demonstrate in these videos, is this project called the Wind Map, it's by Fernanda Viegas and Martin Wattenberg. And you can see here, there is a map of the United States. There are these white streaks flowing across the map. And you could imagine, there's some underlying data, latitudes and longitudes, wind speeds, wind direction. And somehow, that data is being read and then the data is being interpreted and manifested through drawing. So thicker white lines for higher wind speeds, lines in a particular direction for a particular wind direction. And so, what are the building blocks of a project like this? What are all the pieces? How do you read the data? How do you cycle through the data? How do you draw with the data? And what if the data comes from this thing called an API, which requires you to log in and have, like, secret key, and all of this horribly scary, strange stuff. I would like to make this seem like a very easy and welcoming, friendly thing for you to be able to do. That's my goal here. So in this first video, what I want to do is make a list of the kinds of ways you might find data. And I've got a few examples over here. But I think just to get away from the computer for a second, I'm going to move over here. Hello again. So let's think about this question. So first of all, I've got to go back to the computer again. Let's say you're interested in a particular kind of thing. Like you like flowers. Flowers, that's, like, your thing. Oh, boy. I really should have planned for this in advance. But let's say flowers is your thing. So you might google, "flowers." And then you're going to get all this commercial stuff trying to sell you flowers. Well, I really just want to know how to grow flowers. I'm really off topic. I don't care. How to grow beautiful flowers. OK. Whatever. So I could go here be like, oh, look here's this website about flower gardens and I want to get some data about flowers. I'm not really getting anywhere. I could be a much better googler and I could say, "flower database." No, forget database. "Flower data." Ah! Flower data sets. Now I'm getting somewhere. The point of what I'm doing is actually just to be sort of random here. This will happen to you. You have an interest in a piece or kind of data and googling around and you're finding things. What are you going to find? So first of all, I think there's two approaches to a project. One is you actually have an interest and you're looking for a particular kind of data. But right now you might say to yourself, I'll do that later. I'm just going to use some existing examples of data sets that are out there that you, me, that I am going to show you how to do. But there is a reason for talking about this. So you're going to come across and you're going to see a lot of things. So first of all, the data could come in a variety of formats. Here's a list of some formats that you might see. CSV. What is that? XML. What is that? JSON. What is that? You might just find a text file. You might just find a PDF. Or you might actually not find any of these formats, but you see the data right there on the web page. I mean, if that data is there. How do you get access to that if it's not in one of these quote unquote "formats." And then there's this side discussion of, what if you see this word "API"? So what you're looking for, when it's working with data, is you want to find somebody on the internet who says, I have this data. It's about flowers and I would like you to have it. Please enjoy it. And I prepared it for you with examples and documentation to make it easy for you. And a particular keyword, in the content of what you're looking for, is you might be looking for data of the format JSON. The reason why you might be looking for this is, JSON stands for a JavaScript Object Notation. That might be convenient, right? Because we, you, I have spent many a day making videos about JavaScript Object Notation. Because I could say, here's a flower. And its name is sunflower. And its color is like I don't want to use the it's fine. Whatever. You get the idea. I could put a variable for its color. I could have a variable I went off. I was thinking about flowers and I lost my train of thought. So this is JavaScript Object Notation. It's how you write objects into your code. It turns out that this data format is exactly the same as this. Now there's a little bit of nuance there of some slight differences. But if you find data that's been prepared it's like somebody said, are you programming in JavaScript? Would you like data made for you to use? Here it is. So this is an ideal scenario. You're happy if you find data in this JavaScript Object Notation. And the next video I'm gonna make is essentially all about what that is and the actual syntax. Now another format of data that you might find very intuitive and familiar to work with, is this format known as CSV. Now CSV is a particular kind of a larger format, which I really mean tabular data. So what does it mean for data to be in a table? You have name, age, gender. Dan, 42, male. That's how old I am. Let's just get that out there on the internet. I'm youthful at heart though. And then there's some other data there. I could put my phone number in there and I could say my phone number and make this video even more embarrassing. But you're familiar with this probably whoops, that's the wrong thing I was going to open, like Google Docs, that's tabular data. And in fact, you can have a Google Spreadsheet and access that Google spreadsheet in your JavaScript program. And in fact, you can tie that to a Google form. So this is a topic that I want to explore. The reason why I'm mentioning CSV as a particular format, is that what a raw format for tabular data is to have all of the cells separated by commas. So you can see an example of this. Here is a table of comma separated values. The first row being the header, "x, y, diameter, name." The next row being some values. The next row being some values. And in fact, this is a p5 sketch. That kind of loads that and using the data, puts the things on the screen. So at some point I'll demonstrate that in more detail in a particular video dedicated to just CSV. There's lots of CSV data out there. Here's one that I think is interesting to look at. Right here. This is Citi Bike data. Citi Bike is a bike sharing system in New York City and they have all of the trip data. So the date, the latitude, the longitude, the address, where it was picked up, the time. It is a huge data set. How would you load that data set, read that data set, maybe draw lines of people riding their bikes all over the map of New York City. So this is the kind of thing that I want to explore in these sets of videos. So that's really what I've got here with CSV data and JSON data. Now XML is another standardized format for data. These three up here are really standardized format. What I mean by standardized format is, you the human being want to look at data in a nice presented way. Like if you're interested in movies I don't know why I'm plugging some IMDB here, but you could go to this website and be like, oh, look at all this data here. And I can see it and I can soak it in and I can find the movie that I'm interested in and yay. But this is not useful for a computer to read. This is designed, visually, for you to look at with your eyes. And you could make the same argument that this Google Doc has actually done that as well with the column headings and colors and lines of grids, all that sort of stuff. But the point of these data formats, if I come back over here, is that these are all designed for computers to read. There's commas separating everything. There's this programming syntax that has kind of got curly brackets, and semicolons, and quotes, and commas. So it's the standardized format. If you can find a standardized format, that's a good thing. P5 has a particular set of functions that allow you to read JSON data very easily, read CSV data very easily, read XML data in a slightly trickier way, but it works. But you might also be in a scenario, at some point, where you just found the data not in a format that's meant for a computer to read. Like there's just a text file with a lot of stuff in it. Or there's just a web page and it's all there, but it's like a mess and it's not in a standard format or some PDF document. So, at some point, I would like to make one video to talk about how you might deal with some scenarios like that if you find a particular piece of data online but it's not handed to you in this nice, friendly JSON way. And then, of course, there's this question of API. Now if you have a fixed data set, just like, this is the data. It might come as a file. But if there is a huge data set or a data set that's changing over time, like Twitter is a data set that's changing over time because people are posting to it continuously. All the articles that appeared in the New York Times in 1950, that's not really changing over time. I don't think. Unless was could do time travel. But anyway. You could download that and have that. So an API stands for Application Programming Interface. Meaning, you're writing an application, somebody else has an application, that other person says, oh, I would love for your application to talk to mine. So I'm going to make an interface for those two things to talk to each other. And that interface might be sending data in one of these formats back and forth. So the tricky thing is if, just to use the New York Times as an example, the New York Times has an API, it's very nice of them. They're like, hey, we have this newspaper and all this stuff and why don't you read it like human being or why doesn't your computer program read it. And we'll make it easier by giving it to you in an API. But you've got to log in, get an account, get a secret key, figure out how to query the API, how do you say I want the articles from this year. Or that have this certain key word in them. And so that's the kind of thing we're gonna do. And just to run through a few examples of that. For example, here if I'm interested in flowers. This is me querying the New York Times Article search didn't try these examples to see if they worked. Let me try a different one. Let's try this one, I'm going to search for the word "computer." This is very sad. I have to go look at why the New York Times one didn't work. But one of the APIs that I'm gonna spend some time showing you is an API called WordNik. Let me move this over here. Where you can see here I've put in the word "apple," and I've click this button called Examples. And WordNik has given me back a set of example sentences that have the word "apple" in it. This is Google Image Search, I passed it the word "apple" and I'm getting some I like flowers better. Let's go back to "flower." And you can see I'm getting a whole bunch of flower images. So this API, meaning Application Programming Interface, Google has a server. I have a program. Those two programs are talking to each other because Google has this API built. But the point is, I can't just download all of Google's data as a big CSV. I've got a query that API. So how does that work? Instagram's another one. Flower. Whoops. Let's just turn that off. Google Sheets, we talked about. OK, so that's kind of the basic I don't know how well this went. It's too late now, because you've already watched this video if you're watching it now. But the next video that I'm gonna make is only really going to be about what is the JSON format? How does it work? How do you pull the data format of JSON into your project and do something with it. So that's what I'm going to do in a few short minutes, in the next video. Thanks for watching and see you soon. OK. Wait, I need.
