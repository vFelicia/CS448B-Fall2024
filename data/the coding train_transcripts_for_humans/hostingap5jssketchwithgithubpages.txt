With timestamps:

00:01 - hello did you hear that
00:03 - that's my digital bell sound effect
00:05 - because i don't have my bell with me
00:07 - i am here in a recording studio where i
00:10 - haven't been
00:10 - for many many months to make a tutorial
00:13 - for you
00:14 - hopefully you're watching this at some
00:15 - point in the future or in the past after
00:17 - you've invented time travel or whatever
00:19 - and none of this matters but uh it is
00:21 - september 2020 right now i have not
00:23 - recorded anything
00:24 - here since march 2020 we're in the midst
00:26 - of a global pandemic
00:27 - um i am luckily in a room where i can
00:30 - close the door
00:31 - and i don't have to wear my mask for the
00:32 - moment while i record this and i hope
00:34 - everybody's doing well but let me just
00:35 - jump on in
00:37 - and what i want to show you is how to
00:38 - take a p5.js sketch
00:40 - maybe something you even made in the
00:41 - p5.js web editor and
00:43 - upload it to github and host it online
00:46 - uh using github pages if you're watching
00:49 - this uh the video has hopefully replaced
00:51 - this one right here github pages for
00:53 - hosting p5.js sketchers why am i making
00:55 - this video again well i made this one
00:57 - over four years ago and the interface
00:59 - and some of the ways that it works has
01:00 - changed
01:01 - so it's time to make it a new although i
01:03 - will note that oddly enough i seem to
01:05 - have the same haircut
01:07 - as in this one oh cody rainbow reveal
01:11 - i'm gonna show you two ways how to do
01:12 - this the first way is the easiest way
01:13 - where you can just drag and drop your
01:15 - files
01:15 - uh into the browser and upload them and
01:17 - then i'm gonna show you how to do this
01:18 - with
01:19 - terminal typing some commands to push
01:21 - your files
01:22 - from your local computer onto github to
01:24 - host them there
01:25 - so the first thing is you need your p5
01:26 - sketch most of the time i'm working in
01:28 - p5 in the web editor
01:30 - there might be some like magic way to go
01:32 - right from the web editor directly to
01:33 - github
01:34 - but frankly you're probably more likely
01:35 - going to need to download your code
01:36 - first
01:37 - so you can go here to download and it's
01:39 - going to
01:40 - download a zip file with your html file
01:44 - css file
01:45 - javascript files and any other files
01:46 - that have to do with your sketch
01:48 - i have these files downloaded and in a
01:50 - folder on my
01:51 - desktop i also have the all the code
01:54 - open
01:55 - in visual studio code this is not
01:57 - necessary right now because i'm not
01:58 - making any changes to it
01:59 - but visual studio code is the editor
02:02 - that i use to develop locally on my
02:04 - computer
02:04 - and i have a whole video about that that
02:06 - you could take a look at as well as a
02:07 - workflow
02:08 - series about some of these different
02:09 - pieces that i'm using one small thing
02:11 - that i want to point out
02:12 - is that the reason you're able to see
02:15 - your p5 sketch over there running
02:17 - is because what's actually being loaded
02:19 - is an html page
02:20 - and that html page has references to
02:24 - all of your javascript files in it
02:26 - sketch.js particles.js boundary.jsray.js
02:28 - so this is kind of a sophisticated
02:30 - example that i'm choosing to use but you
02:32 - probably just have sketch.js
02:33 - if you've just started and making a p5
02:36 - sketch with just one javascript file
02:38 - up here this is where the p5 library
02:41 - itself
02:41 - is loaded it's loaded from a url a cdn
02:45 - a content delivery network you might
02:47 - notice when you download your sketch
02:49 - from the p5 web editor
02:50 - it actually downloads the p5 library as
02:53 - well and then references it locally
02:55 - just like it's one of these other
02:57 - javascript files i prefer
02:59 - generally to load from the cdn but if
03:00 - you weren't connected to the internet
03:02 - and we're running your p5.js sketch
03:04 - locally
03:04 - having the p5 library itself downloaded
03:06 - is super useful
03:07 - but none of that is really relevant here
03:09 - what this video is about is just
03:10 - uploading any html javascript any files
03:14 - for hosting a web page it doesn't have
03:15 - to be a p5.js sketch and in order to do
03:17 - that well first you have to have a
03:19 - github account of course there's other
03:21 - places you could upload your files
03:22 - beyond just github but i'm showing you
03:24 - how to do it with github pages
03:26 - this is my github profile page you can
03:28 - see it has all of my various
03:30 - repositories for the ml5 library the
03:32 - nature of code book
03:33 - some of the courses i'm currently
03:34 - teaching this semester but now in order
03:37 - to get my p5.js sketch into a repo i
03:39 - want to make a brand new one so to do
03:41 - that there's this plus
03:43 - button up in the top right i'm going to
03:44 - hit new repository
03:46 - i'm going to name it p5 uh sketch
03:50 - video tutorial notice that by the way
03:54 - you can't actually have spaces so it's
03:55 - going to automatically rename it with
03:56 - the dashes for me and i'm saying
03:58 - i'm going to write a quick description
04:02 - i want this to be public although you
04:04 - could choose to make it private even
04:06 - with github pages for hosting
04:08 - and then now oh i have a quandary what
04:10 - do i do
04:11 - the clue that you should take a look at
04:13 - is skip this step if you are importing
04:15 - an existing repository i am not
04:18 - importing an existing repository yes i
04:20 - am bringing some existing code
04:21 - but i haven't actually made a git repo
04:24 - anywhere yet
04:25 - the difference between git and github
04:27 - itself a web hosting platform for git
04:29 - repos
04:30 - git being just the software the version
04:31 - control software itself is a really
04:33 - important distinction that i cover in a
04:35 - bit more detail in the first video in
04:36 - this series
04:37 - so you might want to double back and
04:38 - check that but what i'm doing here is
04:40 - actually creating the repo
04:42 - on the github website and then i'm going
04:44 - to bring my files into it
04:45 - the easiest way to do that is to add a
04:47 - readme file readme file is actually also
04:49 - where you can just
04:50 - describe everything about your project
04:51 - and talk to the community and put lots
04:53 - of nice
04:53 - like rainbows and hearts in it if you
04:55 - want
04:58 - but i'm just going to let it be a
04:59 - default one right now and then
05:01 - also why not i'll choose a license
05:03 - because i want this to be an open source
05:05 - repository open source licenses is a
05:08 - huge
05:08 - topic that i'm not getting into right
05:10 - now but one thing that i could do is
05:12 - make a quick decision of just picking
05:14 - mit
05:15 - which i know to be a very permissive
05:16 - license that allow would allow anybody
05:18 - to reuse this code in any way that they
05:20 - so choose now i'm going to create the
05:22 - repository
05:24 - and here it is here's my p5 sketch video
05:27 - tutorial
05:28 - uh it has my readme which i would
05:30 - probably want to edit and add a lot more
05:32 - information in but i'll leave it by as
05:33 - default right now
05:35 - and then it's time to upload the p5.js
05:38 - sketch files to do that i can just
05:40 - navigate to the files themselves
05:42 - i can select them and just drag them in
05:45 - give the github website is going to
05:47 - recognize that i'm bringing in files i
05:48 - can let go
05:49 - it's uploading them and then this is the
05:51 - key next step
05:52 - i want to commit them a commit is like a
05:55 - save to the repo
05:57 - and in general it's nice to write a note
05:59 - about what it is you're doing although i
06:01 - could certainly just leave the
06:02 - add files the upload default message but
06:04 - i'm going to add a little note in there
06:10 - and now i'm presented with two options
06:12 - generally speaking when you're adding
06:14 - files or changing files into git repo
06:16 - you might want to consider doing
06:18 - something called a pull request which is
06:19 - something that i've referred to in
06:21 - previous videos
06:22 - it's a proposal to changes that aren't
06:24 - actually
06:25 - merged in yet but right now i can keep
06:27 - things really simple
06:28 - and i could just commit directly to the
06:30 - main branch if this
06:31 - wasn't a repository that i owned that
06:33 - wasn't part of my account i wouldn't
06:35 - have that option i would only be able to
06:37 - propose these new files as a change as a
06:40 - pull request
06:41 - i'm going to hit commit i'll do my
06:43 - processing files dance
06:45 - and here they are we can now see that
06:47 - all of the files are there
06:48 - and there's only one step left for me to
06:50 - do github pages for hosting is not
06:53 - enabled by default so i need to find the
06:55 - settings for this repository
06:57 - it's actually over here on the top right
06:58 - under these three dots i think if my
07:00 - browser page a little smaller you'll
07:02 - probably more likely see it as a button
07:03 - like this
07:04 - i can click on settings make it larger
07:06 - again and then i can scroll down you can
07:08 - see there's lots of options of things
07:09 - you could consider but i'm really only
07:11 - want to look at right now
07:12 - this github pages so github pages is
07:15 - currently disabled
07:16 - i can select a branch in order to enable
07:19 - it
07:20 - now on a simple project like this that i
07:21 - just started there's only one
07:23 - branch and you could check my video on
07:25 - branches to understand what those are
07:27 - but the main branch is called main and
07:29 - i'm going to select it
07:31 - and this is an interesting option it's
07:32 - giving me here so i want to keep this
07:35 - default setting of root
07:36 - i want my whole repo to be hosted as a
07:39 - website
07:39 - but if you had a repo that had some
07:41 - stuff in it that's just for the repo
07:43 - itself and maybe a directory that's
07:45 - for hosting online i could change this
07:48 - to using
07:49 - maybe this docs folder or i'm not sure
07:50 - what other options i have but i'm going
07:52 - to keep
07:52 - root i'm going to hit save we can see
07:55 - it's now enabled and it says your site
07:58 - is ready to be published at
08:00 - shiffman.github.io
08:01 - p5 sketch video tutorial you can see
08:05 - that there's a
08:05 - url that's formed based on my github
08:08 - account name
08:09 - shiffman and my repo name p5 sketch
08:11 - video tutorial
08:12 - you can actually use github pages to
08:14 - host with a custom domain
08:15 - i'd have to come back and do another
08:16 - video tutorial about that but hopefully
08:18 - right now if i just click on this
08:20 - there it is i have now hosted
08:23 - my p5.js sketch on github
08:27 - using github pages and i could copy this
08:30 - url i could tweet it i could email it i
08:32 - could send it all around the world and
08:33 - have people come and experience my
08:35 - sketch
08:36 - as well as view my code on github itself
08:39 - and even propose changes and make pull
08:41 - requests and write comments and issues
08:44 - and all of that wonderful stuff that
08:45 - comes with
08:46 - the sort of collaborative software that
08:47 - is get on the github
08:49 - site now that i've done all of that you
08:51 - could stop this video i mean you could
08:52 - have stopped it quite a long time ago to
08:54 - be perfectly honest
08:55 - but if you want to stick with me i am
08:57 - now going to show you how to create the
08:59 - repo
09:00 - locally on your computer and then push
09:03 - it to github
09:04 - without using the github website
09:06 - interface instead just typing commands
09:08 - into your local
09:09 - console so for me i use as my terminal
09:12 - application something called item
09:14 - mac has terminal by default built in on
09:17 - windows people use
09:19 - i don't know powershell other things
09:21 - what else do people use so put some
09:23 - stuff on the screen
09:24 - you might be on linux so as long as you
09:27 - have console access to your computer
09:29 - and i can see if i type pwd or print
09:31 - working directory
09:32 - i'm on my desktop under a folder called
09:36 - p5 sketches
09:37 - and that's the name of this directory
09:38 - that has ls
09:40 - all of these files in for my p5.js
09:42 - sketch
09:43 - i've also already installed git that
09:46 - software
09:47 - on my laptop if you haven't done that
09:49 - and you want to learn more about working
09:51 - with git
09:51 - locally in terminal i have another video
09:54 - which also covers that
09:55 - in a bit more detail but to create a
09:57 - repo
09:58 - on my local computer in a particular
10:00 - directory i can type git init
10:02 - big word of warning i have seen this
10:05 - happen
10:06 - so many times with students it's very
10:08 - easy by accident
10:09 - to type git init like in the root
10:11 - directory of your computer
10:12 - or even just in like your documents
10:14 - folder and suddenly you've turned your
10:16 - entire computer into one
10:18 - giant monstrous git repo and could cause
10:20 - all sorts of things to go haywire
10:22 - if that happens to you there's a really
10:25 - easy way to undo it
10:27 - and i'm going to show that to you but
10:28 - let me first finish off with typing git
10:30 - init here in the correct
10:32 - place so now i've initialized an empty
10:35 - git repository
10:37 - in this folder why is it empty aren't
10:39 - there files in there well the reason why
10:41 - it's empty is of course
10:42 - you always have to add and commit those
10:44 - files as you might have seen in some of
10:46 - my other videos
10:47 - but let me just address this undoing by
10:50 - accident making your whole computer into
10:51 - a git repo
10:52 - if i type ls-all i think that's what i
10:55 - type
10:56 - this is going to give me more
10:57 - information about what's actually in
10:59 - this directory
11:00 - it's like permissions and all sorts of
11:02 - stuff and you can see there's a new
11:04 - folder called dot get i don't actually
11:07 - see that folder here in my finder
11:09 - because hidden files by default are
11:10 - turned off but i can turn them on with a
11:12 - quick key command shift command period
11:14 - and you can see there it is there is
11:16 - this git folder
11:18 - all i need to do if i didn't want this
11:20 - to be a git repo anymore
11:22 - is hit command delete just delete that
11:24 - folder now you don't usually want to do
11:26 - this
11:26 - but if you by accident had a folder a
11:28 - hidden folder called
11:29 - git like in the root of your computer
11:31 - you didn't mean to do that
11:33 - just deleting it will sort of undo that
11:34 - problem i'm really getting into a lot of
11:36 - tangents in this video hopefully this is
11:38 - still helpful
11:39 - back to here so just to check to make
11:41 - sure everything is kind of working the
11:43 - way i think
11:44 - i'm going to type git status and you can
11:46 - see like
11:48 - oh i'm on branch this makes me very
11:51 - unhappy because
11:53 - i usually use as the default branch name
11:56 - for my
11:57 - repos the word main i think it's more
11:59 - clear it's also a bit more inclusive
12:01 - language it's what is
12:02 - github is choosing to use as its default
12:05 - branch as of october 1st 2020
12:07 - but my computer defaulted to the word
12:10 - master so here you're getting a little
12:12 - extra lesson
12:12 - about how to change your branch name and
12:15 - i'm going to actually before i do that i
12:16 - think i need to add and commit some
12:18 - files
12:18 - so i'm going to add everything and i'm
12:20 - going to commit them which is a short
12:22 - message
12:23 - like initial commit of p5.js sketch
12:28 - and i've covered these commands in
12:29 - previous videos
12:31 - now i'm going to say git branch main
12:34 - get check that creates a branch called
12:36 - main get checkout
12:38 - main and there we go now i'm in the main
12:40 - branch and then i can say
12:43 - i think it's git remove master
12:46 - no i don't know why i just thought git
12:49 - remove would work
12:50 - so you can see even me who's been doing
12:52 - this for years and years i can't
12:53 - remember what any of these commands are
12:54 - i have to look them up
12:55 - thankfully while i'm recording this
12:56 - video i have a live chat going and i was
12:58 - just
12:58 - handed the answer get by cody garden
13:01 - with cj check out that youtube channel
13:03 - kit branch dash d
13:06 - master okay so i've deleted that branch
13:10 - so now i am here and i can type git
13:12 - status once more just to make sure
13:13 - everything's okay
13:15 - and i'm on branch made nothing to commit
13:18 - i've got all my files there i
13:19 - am good to go now i can go back to
13:22 - github and i'm going to create another
13:23 - repository new repo
13:28 - p5 demo 2.
13:34 - and i'm back to this quandary again oh
13:36 - what do i do
13:37 - guess what remember i said skip this
13:40 - step if you're importing an existing
13:41 - repository
13:42 - well guess what now i'm importing an
13:44 - existing repository because i need the
13:46 - repository locally on this laptop
13:48 - right here so i don't want to add a
13:49 - readme i don't want to add a git ignore
13:50 - i don't want to choose a license i just
13:51 - want to create the repository
13:53 - and it is empty it's blank luckily for
13:56 - me
13:57 - oh thank you github for providing me a
14:01 - nice set of commands that i can type in
14:03 - to get this repo up here on uh
14:07 - on um github itself so the first
14:09 - instructions it's giving me is create a
14:11 - new repository on the command line i
14:13 - actually already showed you that i kind
14:14 - of awkwardly did it and
14:16 - you know you could see how you could do
14:17 - it here with a readme file and also like
14:19 - just creating the main branch boy that
14:21 - was much more elegant there
14:23 - but or i could push an existing
14:25 - repository from the command line which
14:26 - is what i did so this is what i need to
14:28 - do
14:28 - i want to say git remote add origin
14:31 - so what that does is it's creating a
14:33 - remote version of the repo that's
14:35 - locally on my computer
14:37 - on github server and this is the url
14:40 - path
14:41 - to that particular repo paste this in
14:43 - here hit
14:44 - enter it's done then i could create that
14:47 - main branch
14:48 - which i guess this is the one way of
14:50 - doing it that i didn't know about
14:52 - what i did before that's probably the
14:53 - way i would double back and do it but
14:55 - then i could
14:56 - and then so i don't need to do that now
14:57 - and now i can just push it
14:59 - and by the way this word origin in here
15:02 - is quite optional
15:03 - i could have called it github or my
15:05 - special wonderful server
15:07 - that's just the name of the remote so
15:09 - i'm saying hey i have a repo i want to
15:10 - add a remote and i can have multiple
15:12 - remotes like maybe i'm hosting my
15:13 - website and like on five different
15:15 - servers and they each have a git
15:17 - repo remote and i can name them
15:18 - different things so i can know where
15:19 - they're going
15:20 - but by default most people use the word
15:22 - origin i actually like to call it github
15:24 - because sometimes it's a bit more clear
15:25 - to me but i'm just gonna use this
15:28 - i'm gonna hit this it
15:31 - is done now you might get an error
15:33 - message here
15:34 - where it's telling you like i'm not
15:36 - authenticated
15:37 - i don't i'm not logged in so i have also
15:40 - done some stuff to set up my computer to
15:42 - automatically be logged into that git
15:43 - account i need to make a video to show
15:45 - you how to do that but if you run into
15:47 - trouble there
15:48 - what i would suggest is coming up to the
15:50 - top and switching it to https
15:53 - and then use this url instead
15:56 - for when you do git remote add origin
15:58 - and then use this https
16:01 - remote that will allow you to type in
16:02 - your username and password for like kind
16:04 - of like a one-time login to push the
16:06 - repo
16:06 - all right now i should be able to just
16:08 - refresh this page i pushed everything
16:11 - and there it is now i got this like
16:14 - obnoxious ds
16:15 - store file which is something that mac
16:16 - made and i don't have a readme file
16:18 - so there's some cleanup that i should
16:19 - probably do to this repo but overall
16:22 - we're ready to go i can just go once
16:24 - again i can head over to
16:26 - settings github pages enable it on the
16:28 - main branch
16:30 - hit save scroll back down
16:34 - find my url open it up this is my p5
16:37 - sketch
16:38 - same result as before but i had to like
16:40 - wander my way through all of those
16:42 - uh terrifying but not so bad really if
16:45 - you think about it
16:46 - uh command things to put into my
16:48 - terminal shell console thingy
16:50 - i hope this video was helpful to you i'm
16:51 - sure there are aspects that are
16:52 - confusing
16:53 - that there's missing pieces that are
16:55 - gaps in your understanding and knowledge
16:57 - please ask those questions in the
16:59 - comments also i was kind of figuring out
17:01 - some of the steps to do while i was
17:02 - doing them in this video but i
17:04 - am going to put all the steps in a clear
17:06 - guide that you're seeing right here
17:07 - in the video description or at least the
17:09 - link from the video description so hope
17:10 - you enjoy those
17:12 - later goodbye the video is over now
17:15 - i don't have a train whistle it's just
17:17 - gonna end

Cleaned transcript:

hello did you hear that that's my digital bell sound effect because i don't have my bell with me i am here in a recording studio where i haven't been for many many months to make a tutorial for you hopefully you're watching this at some point in the future or in the past after you've invented time travel or whatever and none of this matters but uh it is september 2020 right now i have not recorded anything here since march 2020 we're in the midst of a global pandemic um i am luckily in a room where i can close the door and i don't have to wear my mask for the moment while i record this and i hope everybody's doing well but let me just jump on in and what i want to show you is how to take a p5.js sketch maybe something you even made in the p5.js web editor and upload it to github and host it online uh using github pages if you're watching this uh the video has hopefully replaced this one right here github pages for hosting p5.js sketchers why am i making this video again well i made this one over four years ago and the interface and some of the ways that it works has changed so it's time to make it a new although i will note that oddly enough i seem to have the same haircut as in this one oh cody rainbow reveal i'm gonna show you two ways how to do this the first way is the easiest way where you can just drag and drop your files uh into the browser and upload them and then i'm gonna show you how to do this with terminal typing some commands to push your files from your local computer onto github to host them there so the first thing is you need your p5 sketch most of the time i'm working in p5 in the web editor there might be some like magic way to go right from the web editor directly to github but frankly you're probably more likely going to need to download your code first so you can go here to download and it's going to download a zip file with your html file css file javascript files and any other files that have to do with your sketch i have these files downloaded and in a folder on my desktop i also have the all the code open in visual studio code this is not necessary right now because i'm not making any changes to it but visual studio code is the editor that i use to develop locally on my computer and i have a whole video about that that you could take a look at as well as a workflow series about some of these different pieces that i'm using one small thing that i want to point out is that the reason you're able to see your p5 sketch over there running is because what's actually being loaded is an html page and that html page has references to all of your javascript files in it sketch.js particles.js boundary.jsray.js so this is kind of a sophisticated example that i'm choosing to use but you probably just have sketch.js if you've just started and making a p5 sketch with just one javascript file up here this is where the p5 library itself is loaded it's loaded from a url a cdn a content delivery network you might notice when you download your sketch from the p5 web editor it actually downloads the p5 library as well and then references it locally just like it's one of these other javascript files i prefer generally to load from the cdn but if you weren't connected to the internet and we're running your p5.js sketch locally having the p5 library itself downloaded is super useful but none of that is really relevant here what this video is about is just uploading any html javascript any files for hosting a web page it doesn't have to be a p5.js sketch and in order to do that well first you have to have a github account of course there's other places you could upload your files beyond just github but i'm showing you how to do it with github pages this is my github profile page you can see it has all of my various repositories for the ml5 library the nature of code book some of the courses i'm currently teaching this semester but now in order to get my p5.js sketch into a repo i want to make a brand new one so to do that there's this plus button up in the top right i'm going to hit new repository i'm going to name it p5 uh sketch video tutorial notice that by the way you can't actually have spaces so it's going to automatically rename it with the dashes for me and i'm saying i'm going to write a quick description i want this to be public although you could choose to make it private even with github pages for hosting and then now oh i have a quandary what do i do the clue that you should take a look at is skip this step if you are importing an existing repository i am not importing an existing repository yes i am bringing some existing code but i haven't actually made a git repo anywhere yet the difference between git and github itself a web hosting platform for git repos git being just the software the version control software itself is a really important distinction that i cover in a bit more detail in the first video in this series so you might want to double back and check that but what i'm doing here is actually creating the repo on the github website and then i'm going to bring my files into it the easiest way to do that is to add a readme file readme file is actually also where you can just describe everything about your project and talk to the community and put lots of nice like rainbows and hearts in it if you want but i'm just going to let it be a default one right now and then also why not i'll choose a license because i want this to be an open source repository open source licenses is a huge topic that i'm not getting into right now but one thing that i could do is make a quick decision of just picking mit which i know to be a very permissive license that allow would allow anybody to reuse this code in any way that they so choose now i'm going to create the repository and here it is here's my p5 sketch video tutorial uh it has my readme which i would probably want to edit and add a lot more information in but i'll leave it by as default right now and then it's time to upload the p5.js sketch files to do that i can just navigate to the files themselves i can select them and just drag them in give the github website is going to recognize that i'm bringing in files i can let go it's uploading them and then this is the key next step i want to commit them a commit is like a save to the repo and in general it's nice to write a note about what it is you're doing although i could certainly just leave the add files the upload default message but i'm going to add a little note in there and now i'm presented with two options generally speaking when you're adding files or changing files into git repo you might want to consider doing something called a pull request which is something that i've referred to in previous videos it's a proposal to changes that aren't actually merged in yet but right now i can keep things really simple and i could just commit directly to the main branch if this wasn't a repository that i owned that wasn't part of my account i wouldn't have that option i would only be able to propose these new files as a change as a pull request i'm going to hit commit i'll do my processing files dance and here they are we can now see that all of the files are there and there's only one step left for me to do github pages for hosting is not enabled by default so i need to find the settings for this repository it's actually over here on the top right under these three dots i think if my browser page a little smaller you'll probably more likely see it as a button like this i can click on settings make it larger again and then i can scroll down you can see there's lots of options of things you could consider but i'm really only want to look at right now this github pages so github pages is currently disabled i can select a branch in order to enable it now on a simple project like this that i just started there's only one branch and you could check my video on branches to understand what those are but the main branch is called main and i'm going to select it and this is an interesting option it's giving me here so i want to keep this default setting of root i want my whole repo to be hosted as a website but if you had a repo that had some stuff in it that's just for the repo itself and maybe a directory that's for hosting online i could change this to using maybe this docs folder or i'm not sure what other options i have but i'm going to keep root i'm going to hit save we can see it's now enabled and it says your site is ready to be published at shiffman.github.io p5 sketch video tutorial you can see that there's a url that's formed based on my github account name shiffman and my repo name p5 sketch video tutorial you can actually use github pages to host with a custom domain i'd have to come back and do another video tutorial about that but hopefully right now if i just click on this there it is i have now hosted my p5.js sketch on github using github pages and i could copy this url i could tweet it i could email it i could send it all around the world and have people come and experience my sketch as well as view my code on github itself and even propose changes and make pull requests and write comments and issues and all of that wonderful stuff that comes with the sort of collaborative software that is get on the github site now that i've done all of that you could stop this video i mean you could have stopped it quite a long time ago to be perfectly honest but if you want to stick with me i am now going to show you how to create the repo locally on your computer and then push it to github without using the github website interface instead just typing commands into your local console so for me i use as my terminal application something called item mac has terminal by default built in on windows people use i don't know powershell other things what else do people use so put some stuff on the screen you might be on linux so as long as you have console access to your computer and i can see if i type pwd or print working directory i'm on my desktop under a folder called p5 sketches and that's the name of this directory that has ls all of these files in for my p5.js sketch i've also already installed git that software on my laptop if you haven't done that and you want to learn more about working with git locally in terminal i have another video which also covers that in a bit more detail but to create a repo on my local computer in a particular directory i can type git init big word of warning i have seen this happen so many times with students it's very easy by accident to type git init like in the root directory of your computer or even just in like your documents folder and suddenly you've turned your entire computer into one giant monstrous git repo and could cause all sorts of things to go haywire if that happens to you there's a really easy way to undo it and i'm going to show that to you but let me first finish off with typing git init here in the correct place so now i've initialized an empty git repository in this folder why is it empty aren't there files in there well the reason why it's empty is of course you always have to add and commit those files as you might have seen in some of my other videos but let me just address this undoing by accident making your whole computer into a git repo if i type lsall i think that's what i type this is going to give me more information about what's actually in this directory it's like permissions and all sorts of stuff and you can see there's a new folder called dot get i don't actually see that folder here in my finder because hidden files by default are turned off but i can turn them on with a quick key command shift command period and you can see there it is there is this git folder all i need to do if i didn't want this to be a git repo anymore is hit command delete just delete that folder now you don't usually want to do this but if you by accident had a folder a hidden folder called git like in the root of your computer you didn't mean to do that just deleting it will sort of undo that problem i'm really getting into a lot of tangents in this video hopefully this is still helpful back to here so just to check to make sure everything is kind of working the way i think i'm going to type git status and you can see like oh i'm on branch this makes me very unhappy because i usually use as the default branch name for my repos the word main i think it's more clear it's also a bit more inclusive language it's what is github is choosing to use as its default branch as of october 1st 2020 but my computer defaulted to the word master so here you're getting a little extra lesson about how to change your branch name and i'm going to actually before i do that i think i need to add and commit some files so i'm going to add everything and i'm going to commit them which is a short message like initial commit of p5.js sketch and i've covered these commands in previous videos now i'm going to say git branch main get check that creates a branch called main get checkout main and there we go now i'm in the main branch and then i can say i think it's git remove master no i don't know why i just thought git remove would work so you can see even me who's been doing this for years and years i can't remember what any of these commands are i have to look them up thankfully while i'm recording this video i have a live chat going and i was just handed the answer get by cody garden with cj check out that youtube channel kit branch dash d master okay so i've deleted that branch so now i am here and i can type git status once more just to make sure everything's okay and i'm on branch made nothing to commit i've got all my files there i am good to go now i can go back to github and i'm going to create another repository new repo p5 demo 2. and i'm back to this quandary again oh what do i do guess what remember i said skip this step if you're importing an existing repository well guess what now i'm importing an existing repository because i need the repository locally on this laptop right here so i don't want to add a readme i don't want to add a git ignore i don't want to choose a license i just want to create the repository and it is empty it's blank luckily for me oh thank you github for providing me a nice set of commands that i can type in to get this repo up here on uh on um github itself so the first instructions it's giving me is create a new repository on the command line i actually already showed you that i kind of awkwardly did it and you know you could see how you could do it here with a readme file and also like just creating the main branch boy that was much more elegant there but or i could push an existing repository from the command line which is what i did so this is what i need to do i want to say git remote add origin so what that does is it's creating a remote version of the repo that's locally on my computer on github server and this is the url path to that particular repo paste this in here hit enter it's done then i could create that main branch which i guess this is the one way of doing it that i didn't know about what i did before that's probably the way i would double back and do it but then i could and then so i don't need to do that now and now i can just push it and by the way this word origin in here is quite optional i could have called it github or my special wonderful server that's just the name of the remote so i'm saying hey i have a repo i want to add a remote and i can have multiple remotes like maybe i'm hosting my website and like on five different servers and they each have a git repo remote and i can name them different things so i can know where they're going but by default most people use the word origin i actually like to call it github because sometimes it's a bit more clear to me but i'm just gonna use this i'm gonna hit this it is done now you might get an error message here where it's telling you like i'm not authenticated i don't i'm not logged in so i have also done some stuff to set up my computer to automatically be logged into that git account i need to make a video to show you how to do that but if you run into trouble there what i would suggest is coming up to the top and switching it to https and then use this url instead for when you do git remote add origin and then use this https remote that will allow you to type in your username and password for like kind of like a onetime login to push the repo all right now i should be able to just refresh this page i pushed everything and there it is now i got this like obnoxious ds store file which is something that mac made and i don't have a readme file so there's some cleanup that i should probably do to this repo but overall we're ready to go i can just go once again i can head over to settings github pages enable it on the main branch hit save scroll back down find my url open it up this is my p5 sketch same result as before but i had to like wander my way through all of those uh terrifying but not so bad really if you think about it uh command things to put into my terminal shell console thingy i hope this video was helpful to you i'm sure there are aspects that are confusing that there's missing pieces that are gaps in your understanding and knowledge please ask those questions in the comments also i was kind of figuring out some of the steps to do while i was doing them in this video but i am going to put all the steps in a clear guide that you're seeing right here in the video description or at least the link from the video description so hope you enjoy those later goodbye the video is over now i don't have a train whistle it's just gonna end
