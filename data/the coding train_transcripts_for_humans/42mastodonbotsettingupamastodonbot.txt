With timestamps:

00:00 - (bell dings)
- Hello, welcome to the second
00:02 - Mastodon video, in the
first video I talked a bit
00:04 - about what Mastodon is or
at least my impressions
00:06 - of it, the idea of decentralization.
00:08 - And in this video, the
reason why I'm doing this,
00:10 - is that I want to find a platform
00:11 - to write crazy weird experimental
avant-garde art bots.
00:16 - And so, I'm going to use this platform.
00:19 - (creepy piano music)
Bots in space!
00:25 - The sound that that, this was going to,
00:26 - ya know this, yeah it just seemed better
00:28 - when I thought of playing this music
00:29 - then the way it turned out but,
00:30 - so the first thing I'm going to want to do
00:32 - is sign up for an account
here, bots in space.
00:35 - And I am going to say sign
up with coding train bot
00:42 - and I am going to use the email address,
00:44 - Daniel at the coding train dot com.
00:47 - I'm going to use the password,
ooh suggested password,
00:50 - I don't think I should use this,
00:51 - because then you will all see it.
00:53 - I'm going to use the password,
00:55 - I love blueberries or heart heart rainbow.
01:02 - Sure you'll all be able to
guess my password really easily.
01:06 - What is, what does this nonsense, go away!
01:09 - A message with confirmation link
01:10 - has been sent to your email address.
01:12 - Verify email address, ah,
my email address has been...
01:15 - (bell dings)
Okay, so I clicked the
01:19 - verify my email, I have now put
in my username and password.
01:22 - I'm going to click log in,
and now welcome to Mastodon.
01:26 - I'm going to save this, just why not.
01:28 - This is my full handle at coding
train bot at bots in space.
01:33 - I'm not going to skip through
this little tutorial here,
01:35 - but first thing I'm going
to do, very important,
01:37 - is I'm going to go to edit profile,
01:39 - and I'm just going to go down here.
01:40 - I would want to put other stuff here,
01:41 - maybe I'll do that eventually,
01:43 - but I want to go here and I want
to click this is a bot account.
01:46 - Because one of the nice
things about Mastodon,
01:48 - it has a feature for you to indicate
01:50 - that a particular account is a bot,
01:52 - which is, you know, a really nice thing
01:53 - to do in terms of transparency.
01:56 - Okay, the other thing that I want to do
01:58 - is I want to go down under development,
02:00 - so I'm a hit save changes, we're down here
02:02 - in the bottom there's a little
option under development,
02:04 - I'm going to want to click that,
02:06 - and I want to create a new application.
02:08 - So I'm going to create a new application,
02:09 - it is coding train example bot.
02:13 - The website will just
be thecodingtrain.com.
02:17 - I want to, what do I want
to be able to do, so.
02:21 - You have a lot of options in terms of
02:23 - what permissions you can give your bot.
02:25 - Like maybe the bot can
only read certain things,
02:29 - or only write certain things.
02:31 - But I'm actually going to keep
the red global write checked,
02:35 - and the red global read checked,
02:38 - so that everything, and follow,
02:40 - so this bot can basically do everything.
02:41 - It can read all the posts, it can write
02:44 - as many posts as it
wants, and it can follow.
02:46 - So I'm going to hit submit and
then I'm going to click here.
02:50 - And now, now the thing is, this is stuff
02:53 - that I really do not want
to share with anybody.
02:56 - So what I'm going to do is I'm going to
02:58 - quickly just turn the
screen off, no that's me.
03:00 - I'm going to turn the
screen off, there we go,
03:02 - I'm going to regenerate that access token.
03:04 - I'm going to go back to, I'm going to copy
03:08 - this stuff somewhere secret,
03:09 - actually I'm not going
to worry about that now,
03:10 - I'm going to go back to Mastodon,
03:12 - then I'm going to put the
screen back, there I am.
03:15 - So that you can't hack
my bot at this moment.
03:17 - Alright, so, what's next, I want,
03:21 - there's a lot of different ways
03:22 - you could write a Mastodon bot.
03:24 - I'm sure you could come up with some way
03:26 - that I can't even think of right now.
03:27 - I'm going to use node.js, which
is a JavaScript framework,
03:32 - for executing JavaScript code.
03:35 - And I am going to do all
this from the command line.
03:39 - So I, you're going to want
to have node installed
03:42 - and you're going also to,
03:44 - you're going to want to
have some shell access
03:45 - to your computer to be able to do this.
03:47 - And I'll link to different workflow videos
03:49 - about how to get that stuff set up
03:50 - if you don't have that already.
03:51 - So, what I'm going to do
is I'm in a directory,
03:54 - I'm on coding train desktop Mastodon bot.
03:57 - The first thing I'm going to do,
03:58 - is I'm just going to type npm init.
04:00 - What this does is it
starts up my node project.
04:03 - This is going to create
a package.json file,
04:06 - which has all the
configuration information
04:08 - for my node project, I
could just manually make
04:10 - that file or copy it from another project,
04:12 - but it's nice that this tool
will step me through it.
04:15 - So package name Mastodon bot sounds good.
04:17 - This is version, I dunno, 0.0.1
04:20 - The description is example code
04:22 - for Mastodon bot on coding train.
04:27 - Entry point, I'm going to
have a file called bot.js.
04:30 - I'm not going to worry
about testing right now,
04:31 - I don't have a Git repository.
04:33 - Bot, Mastodon, education,
will be some keywords.
04:38 - The author is me, I guess
license will be MIT,
04:42 - and this looks all looks good to me.
04:44 - So now, if I open this
up in Visual Studio Code,
04:49 - we can see it has created a,
04:54 - it has created a package.json file
04:57 - with all of that information
in it that I just typed.
05:00 - Okay, the next thing that I want to do
05:02 - is create my JavaScript file
that is going to run the bot.
05:05 - So I'm just going to click new file
05:07 - and I'm going to say bot.js, and just
05:09 - to test things out I'm
going to say console.log
05:12 - Mastodon bot starting dot dot dot.
05:16 - So, this is where all of my code
05:18 - for the bot is going to go.
05:19 - And the very first thing
that I'm going to do
05:22 - is just test this code by executing it.
05:24 - And the way that I do that,
is going back to terminal,
05:26 - and by the way, yes, there is actually
05:29 - a terminal directly in Visual Code Studio,
05:34 - and I could actually
just run it right here,
05:36 - by saying like node bot.js,
and maybe I should do that.
05:40 - This is so tiny though, I don't know why,
05:42 - I'm just not used to
using this terminal yet.
05:45 - So I'm going to stick with
my using a separate iTerm.
05:47 - And I'm going to run node bot.js.
05:50 - And we can see all it's
doing is console logging
05:51 - that Mastodon bot starting.
05:53 - Okay, how am I going
to connect to Mastodon?
05:56 - So, in order to do this, I'm
going to use a node package
06:00 - that will communicate with
the Mastodon API directly.
06:03 - So let's find that, sure
let's look at notifications.
06:08 - Let's search node Mastodon
API and let's see.
06:14 - So what comes up, Mastodon dash API npm.
06:19 - This one looks pretty good,
let's go over to GitHub and see.
06:23 - Alright, so this is actually the one,
06:24 - this is the one that I'm
going to choose to use.
06:27 - It was last updated eight days ago,
06:29 - I've used this before in
making a practice example,
06:32 - so this one is going to work fine for me.
06:34 - And so now, the next
thing that I need to do,
06:38 - is I need to run npm install.
06:40 - Because if I'm going to use this package
06:42 - to communicate with my bot, I need
06:45 - to make sure I have it installed.
06:47 - So this npm install dash
dash save Mastodon API,
06:50 - and yes, I could use Yarn which is
06:52 - another package manager for node,
06:53 - but I've still, I'm like an npm person.
06:57 - Whenever there's the thing
that's people are using
06:59 - instead of Yarn, that's
when I'll use Yarn.
07:02 - Npm install, save, the
dash dash save by the way,
07:05 - is a argument so that it
automatically gets added
07:07 - to the package.json file and there we go.
07:11 - So if I go over here we can
see if I look in package.json,
07:14 - there is now also a
dependency, Mastodon dash API.
07:18 - So that is now a project dependency.
07:20 - Doot doot doot doot doot
doot, breaking news,
07:22 - Alka in the chat is telling me
07:24 - that you no longer have
to use dash dash save,
07:26 - so maybe it adds it automatically
07:28 - whether or not you use
dash dash save or not.
07:29 - That's a nice little extra tip for today.
07:32 - Okay, what I want to do now is require it.
07:37 - And again, I'm not using, I'm going to,
07:39 - sort of still, I'm using require.
07:41 - So I want to say const, Mastodon,
07:45 - let's just call it const m maybe,
07:48 - no let's, I don't know, Mastodon
07:49 - equals require Mastodon dash API.
07:53 - So I am now requiring it, which means,
07:56 - that's basically, I'm importing it.
07:57 - And then what I want to
do is I want to connect.
08:00 - And there's a lot of ways
that you can connect live
08:04 - in your code because
maybe you're making an app
08:06 - and you want people to be able
08:07 - to authenticate with different accounts.
08:08 - I don't need to do any of that.
08:10 - I just want to, do this.
08:16 - New, constant m equals new Mastodon.
08:21 - And I'm going to do this,
and I'm going to need
08:24 - to put in my access
token, I'm going to need.
08:27 - I'm not too worried about this,
08:28 - and I need to put in
my particular instance,
08:36 - which is bots in space.
08:37 - So this is the, since I am now going
08:40 - to run my bot through bots in space,
08:43 - the API URL for making API
queries is at bots in space,
08:48 - bots in dot space slash API slash v one.
08:50 - Now maybe someday there'll
be a v two of the API,
08:53 - a v three, but this should always work.
08:55 - And now I just need to
get that access token,
08:57 - which I'm throwing caution to the wind,
08:59 - by the time you watch this video,
09:00 - the access token will have changed.
09:02 - But just to show you, I'm
going to go back to here,
09:05 - I'm going to go to settings, that's fine,
09:09 - I'm going to go to,
where am I, development,
09:14 - coding train example bot, I'm
going to grab the access token,
09:18 - I'm going to paste it
here, and then I think,
09:22 - I'm pretty sure I need
also the client secret,
09:29 - which is this thing, and...
09:35 - Client key, which is this thing.
09:42 - And then now, I should
be all set and connected.
09:48 - So the next thing that
I can do if I'm looking
09:50 - through this API, oh yeah,
09:52 - this is actually what
I wanted to do, yeah.
09:55 - Is I can so now, ah, I'm being
told that I wrote secrent.
10:01 - So that should be secret,
thank you very much.
10:03 - Alright, so here's the thing,
we got to talk about something.
10:07 - There are three core ways to
engage with the Mastodon API.
10:15 - Sad to erase my beautifully
decentralized diagram.
10:19 - There are three ways to
engage with the Mastodon API.
10:23 - And this is very similar to
how Twitter used to work,
10:25 - Twitter doesn't work this way anymore,
10:27 - but luckily for us Mastodon does.
10:30 - There is the get, a get
request is basically saying,
10:33 - hey, I would like to get
a whole bunch of stuff,
10:36 - like get me this list of user accounts,
10:38 - get me this list of posts, toots,
10:41 - statuses, tweets, whatever
you want to call them.
10:43 - Search for every toot
that has the word mango
10:46 - in it, that's what get is for.
10:48 - There is also post, I really
should have written these
10:50 - in all capital letters, post is
10:52 - for posting something to Mastodon.
10:55 - Like for example, I want
to post a new status,
10:58 - or I want to follow, or favorite,
11:01 - or reblog something,
all of those are posts.
11:04 - And then, there is what is really,
11:08 - the exciting thing, the streaming API.
11:11 - The streaming API is a way for you
11:13 - to essentially have almost
like a socket connection.
11:17 - A like, an attached connection
11:20 - to Mastodon where you're
just listening for events.
11:23 - So every time somebody follows
somebody you'll get an event,
11:26 - or every time somebody posts
a status you'll get an event.
11:29 - So this is what's really powerful
11:30 - in the way that you can kind
of engage with the service
11:33 - in a realtime synchronous way.
11:36 - And unfortunately, this a thing
11:37 - that Twitter recently
removed from their API.
11:39 - And there's other ways to
do the same exact thing,
11:42 - but it's a bit roundabout, plus, good luck
11:44 - getting your bot approved from Twitter
11:46 - or something that you can use there.
11:47 - Okay, so in this video to
test the first idea out,
11:52 - I just want to do a post, so
what I want to do is a post.
11:56 - Okay, so coming back over here,
12:00 - we can see this is what I have to do.
12:03 - Post with a sum path,
now what is the path?
12:07 - So now we need to look up
Mastodon API documentation.
12:12 - And we should be able to on this page here
12:16 - look under posts, and we can see,
12:22 - I can, this is a post
for following something,
12:25 - for blocking, unblocking, for muting.
12:27 - But I want to post a status.
12:43 - Hold on, there we go, sorry about that.
12:47 - This is where it is, I
want to post a new status.
12:50 - So remember, what is my API...
12:55 - URL, it's this one, so
ultimately the endpoint
12:58 - that I want to go to is v one statuses.
13:02 - But I don't do it here, the path,
13:05 - I could put right here, statuses.
13:09 - Then I need some parameters and
I'm going to put a callback,
13:13 - which I will use my fancy ES6 arrow syntax
13:16 - that I have covered in other videos,
13:19 - I'll come back to that in a second.
13:20 - So params, let's make
that a separate variable,
13:23 - to JavaScript object, so these param,
13:26 - this is super important,
what are the parameters?
13:29 - Well, we can go back to
the API documentation,
13:31 - and we can look, here they are.
13:33 - I can say this is the status,
the text that I want to post.
13:36 - In reply to, well, is
it in reply to somebody,
13:39 - a different, an ID of a different status.
13:42 - Media IDs for images,
all sorts of stuff here.
13:44 - Language, is it sensitive content,
13:46 - there's all sorts of things.
13:47 - But basically I'm just going to say,
13:50 - status choo choo.
13:55 - And there we go, why, why did
you format yourself like this?
13:58 - What kind of crazy indentation is that?
14:01 - This isn't right, I'm going to
have to deal with that later.
14:03 - Okay, so now, and then in
the callback, what do I get?
14:08 - It's probably like error,
first callbacks I'm guessing.
14:11 - Error or data, I'm just do this.
14:13 - So let's just do, say like,
14:14 - if error, console dot error error.
14:19 - And then, otherwise,
console dot log data, okay.
14:26 - So now, here we go, I have my code, right.
14:30 - I started the bot, I connected,
14:32 - there's all my secret information,
14:34 - credit card number and
social security number's
14:36 - embedded in there somewhere.
14:37 - Here's my status that I want
to post and there we go.
14:40 - And hopefully nobody's already
14:41 - hacked my account and posted stuff.
14:44 - So let's go look over here...
14:47 - Okay, wait, no I'm in the wrong account,
14:49 - where did I, got to go to bots in space.
14:52 - And I got to go to my profile,
14:55 - which isn't anything yet,
somewhere it'll show up here.
14:58 - Where's my profile, is this me?
15:01 - That's local, who knows,
okay, let's run this code.
15:06 - Node bot.js, okay, we got an error,
15:09 - Mastodon is not defined,
why is Mastodon not defined?
15:12 - Because I used a capital down here
15:15 - and I didn't use a capital up here.
15:16 - So this Mastodon,
importing the whole library
15:20 - is now a function that
I can call to connect.
15:21 - So let's try this again.
15:25 - Whoo, that seemed to have worked
15:27 - except it didn't console log anything.
15:29 - Thank you to Wilbur in the chat,
15:32 - who just told me that I
actually put the wrong path here
15:35 - to the API, so if I go back
to the API documenation,
15:39 - you can see the path, the
endpoint is statuses plural.
15:43 - So let's try this one more time.
15:45 - Statuses, and now, let me run this again.
15:50 - Ah look, and we can see we
got all this metadata back,
15:53 - because it was successful,
if I go back here,
15:55 - if I go to bots in space, look at that,
15:57 - there we are, choo choo! (train whistle)
16:01 - Okay, we did it, we successfully made
16:05 - our first Mastodon bot that
is posting just from...
16:12 - Just from the node, directly to Mastodon.
16:15 - Okay, so there's a few things
that I want to show you next.
16:18 - I would like to show you, number one,
16:20 - is how to effectively hide your,
16:22 - you can open source your bot,
16:23 - but still hide your client
secret, client code,
16:27 - all that sort of stuff, so
I want to show you that.
16:29 - And also, we'll just look at some
16:31 - of the other parameters for...
16:34 - Some of the other parameters for posting.
16:37 - (energetic music)

Cleaned transcript:

(bell dings) Hello, welcome to the second Mastodon video, in the first video I talked a bit about what Mastodon is or at least my impressions of it, the idea of decentralization. And in this video, the reason why I'm doing this, is that I want to find a platform to write crazy weird experimental avantgarde art bots. And so, I'm going to use this platform. (creepy piano music) Bots in space! The sound that that, this was going to, ya know this, yeah it just seemed better when I thought of playing this music then the way it turned out but, so the first thing I'm going to want to do is sign up for an account here, bots in space. And I am going to say sign up with coding train bot and I am going to use the email address, Daniel at the coding train dot com. I'm going to use the password, ooh suggested password, I don't think I should use this, because then you will all see it. I'm going to use the password, I love blueberries or heart heart rainbow. Sure you'll all be able to guess my password really easily. What is, what does this nonsense, go away! A message with confirmation link has been sent to your email address. Verify email address, ah, my email address has been... (bell dings) Okay, so I clicked the verify my email, I have now put in my username and password. I'm going to click log in, and now welcome to Mastodon. I'm going to save this, just why not. This is my full handle at coding train bot at bots in space. I'm not going to skip through this little tutorial here, but first thing I'm going to do, very important, is I'm going to go to edit profile, and I'm just going to go down here. I would want to put other stuff here, maybe I'll do that eventually, but I want to go here and I want to click this is a bot account. Because one of the nice things about Mastodon, it has a feature for you to indicate that a particular account is a bot, which is, you know, a really nice thing to do in terms of transparency. Okay, the other thing that I want to do is I want to go down under development, so I'm a hit save changes, we're down here in the bottom there's a little option under development, I'm going to want to click that, and I want to create a new application. So I'm going to create a new application, it is coding train example bot. The website will just be thecodingtrain.com. I want to, what do I want to be able to do, so. You have a lot of options in terms of what permissions you can give your bot. Like maybe the bot can only read certain things, or only write certain things. But I'm actually going to keep the red global write checked, and the red global read checked, so that everything, and follow, so this bot can basically do everything. It can read all the posts, it can write as many posts as it wants, and it can follow. So I'm going to hit submit and then I'm going to click here. And now, now the thing is, this is stuff that I really do not want to share with anybody. So what I'm going to do is I'm going to quickly just turn the screen off, no that's me. I'm going to turn the screen off, there we go, I'm going to regenerate that access token. I'm going to go back to, I'm going to copy this stuff somewhere secret, actually I'm not going to worry about that now, I'm going to go back to Mastodon, then I'm going to put the screen back, there I am. So that you can't hack my bot at this moment. Alright, so, what's next, I want, there's a lot of different ways you could write a Mastodon bot. I'm sure you could come up with some way that I can't even think of right now. I'm going to use node.js, which is a JavaScript framework, for executing JavaScript code. And I am going to do all this from the command line. So I, you're going to want to have node installed and you're going also to, you're going to want to have some shell access to your computer to be able to do this. And I'll link to different workflow videos about how to get that stuff set up if you don't have that already. So, what I'm going to do is I'm in a directory, I'm on coding train desktop Mastodon bot. The first thing I'm going to do, is I'm just going to type npm init. What this does is it starts up my node project. This is going to create a package.json file, which has all the configuration information for my node project, I could just manually make that file or copy it from another project, but it's nice that this tool will step me through it. So package name Mastodon bot sounds good. This is version, I dunno, 0.0.1 The description is example code for Mastodon bot on coding train. Entry point, I'm going to have a file called bot.js. I'm not going to worry about testing right now, I don't have a Git repository. Bot, Mastodon, education, will be some keywords. The author is me, I guess license will be MIT, and this looks all looks good to me. So now, if I open this up in Visual Studio Code, we can see it has created a, it has created a package.json file with all of that information in it that I just typed. Okay, the next thing that I want to do is create my JavaScript file that is going to run the bot. So I'm just going to click new file and I'm going to say bot.js, and just to test things out I'm going to say console.log Mastodon bot starting dot dot dot. So, this is where all of my code for the bot is going to go. And the very first thing that I'm going to do is just test this code by executing it. And the way that I do that, is going back to terminal, and by the way, yes, there is actually a terminal directly in Visual Code Studio, and I could actually just run it right here, by saying like node bot.js, and maybe I should do that. This is so tiny though, I don't know why, I'm just not used to using this terminal yet. So I'm going to stick with my using a separate iTerm. And I'm going to run node bot.js. And we can see all it's doing is console logging that Mastodon bot starting. Okay, how am I going to connect to Mastodon? So, in order to do this, I'm going to use a node package that will communicate with the Mastodon API directly. So let's find that, sure let's look at notifications. Let's search node Mastodon API and let's see. So what comes up, Mastodon dash API npm. This one looks pretty good, let's go over to GitHub and see. Alright, so this is actually the one, this is the one that I'm going to choose to use. It was last updated eight days ago, I've used this before in making a practice example, so this one is going to work fine for me. And so now, the next thing that I need to do, is I need to run npm install. Because if I'm going to use this package to communicate with my bot, I need to make sure I have it installed. So this npm install dash dash save Mastodon API, and yes, I could use Yarn which is another package manager for node, but I've still, I'm like an npm person. Whenever there's the thing that's people are using instead of Yarn, that's when I'll use Yarn. Npm install, save, the dash dash save by the way, is a argument so that it automatically gets added to the package.json file and there we go. So if I go over here we can see if I look in package.json, there is now also a dependency, Mastodon dash API. So that is now a project dependency. Doot doot doot doot doot doot, breaking news, Alka in the chat is telling me that you no longer have to use dash dash save, so maybe it adds it automatically whether or not you use dash dash save or not. That's a nice little extra tip for today. Okay, what I want to do now is require it. And again, I'm not using, I'm going to, sort of still, I'm using require. So I want to say const, Mastodon, let's just call it const m maybe, no let's, I don't know, Mastodon equals require Mastodon dash API. So I am now requiring it, which means, that's basically, I'm importing it. And then what I want to do is I want to connect. And there's a lot of ways that you can connect live in your code because maybe you're making an app and you want people to be able to authenticate with different accounts. I don't need to do any of that. I just want to, do this. New, constant m equals new Mastodon. And I'm going to do this, and I'm going to need to put in my access token, I'm going to need. I'm not too worried about this, and I need to put in my particular instance, which is bots in space. So this is the, since I am now going to run my bot through bots in space, the API URL for making API queries is at bots in space, bots in dot space slash API slash v one. Now maybe someday there'll be a v two of the API, a v three, but this should always work. And now I just need to get that access token, which I'm throwing caution to the wind, by the time you watch this video, the access token will have changed. But just to show you, I'm going to go back to here, I'm going to go to settings, that's fine, I'm going to go to, where am I, development, coding train example bot, I'm going to grab the access token, I'm going to paste it here, and then I think, I'm pretty sure I need also the client secret, which is this thing, and... Client key, which is this thing. And then now, I should be all set and connected. So the next thing that I can do if I'm looking through this API, oh yeah, this is actually what I wanted to do, yeah. Is I can so now, ah, I'm being told that I wrote secrent. So that should be secret, thank you very much. Alright, so here's the thing, we got to talk about something. There are three core ways to engage with the Mastodon API. Sad to erase my beautifully decentralized diagram. There are three ways to engage with the Mastodon API. And this is very similar to how Twitter used to work, Twitter doesn't work this way anymore, but luckily for us Mastodon does. There is the get, a get request is basically saying, hey, I would like to get a whole bunch of stuff, like get me this list of user accounts, get me this list of posts, toots, statuses, tweets, whatever you want to call them. Search for every toot that has the word mango in it, that's what get is for. There is also post, I really should have written these in all capital letters, post is for posting something to Mastodon. Like for example, I want to post a new status, or I want to follow, or favorite, or reblog something, all of those are posts. And then, there is what is really, the exciting thing, the streaming API. The streaming API is a way for you to essentially have almost like a socket connection. A like, an attached connection to Mastodon where you're just listening for events. So every time somebody follows somebody you'll get an event, or every time somebody posts a status you'll get an event. So this is what's really powerful in the way that you can kind of engage with the service in a realtime synchronous way. And unfortunately, this a thing that Twitter recently removed from their API. And there's other ways to do the same exact thing, but it's a bit roundabout, plus, good luck getting your bot approved from Twitter or something that you can use there. Okay, so in this video to test the first idea out, I just want to do a post, so what I want to do is a post. Okay, so coming back over here, we can see this is what I have to do. Post with a sum path, now what is the path? So now we need to look up Mastodon API documentation. And we should be able to on this page here look under posts, and we can see, I can, this is a post for following something, for blocking, unblocking, for muting. But I want to post a status. Hold on, there we go, sorry about that. This is where it is, I want to post a new status. So remember, what is my API... URL, it's this one, so ultimately the endpoint that I want to go to is v one statuses. But I don't do it here, the path, I could put right here, statuses. Then I need some parameters and I'm going to put a callback, which I will use my fancy ES6 arrow syntax that I have covered in other videos, I'll come back to that in a second. So params, let's make that a separate variable, to JavaScript object, so these param, this is super important, what are the parameters? Well, we can go back to the API documentation, and we can look, here they are. I can say this is the status, the text that I want to post. In reply to, well, is it in reply to somebody, a different, an ID of a different status. Media IDs for images, all sorts of stuff here. Language, is it sensitive content, there's all sorts of things. But basically I'm just going to say, status choo choo. And there we go, why, why did you format yourself like this? What kind of crazy indentation is that? This isn't right, I'm going to have to deal with that later. Okay, so now, and then in the callback, what do I get? It's probably like error, first callbacks I'm guessing. Error or data, I'm just do this. So let's just do, say like, if error, console dot error error. And then, otherwise, console dot log data, okay. So now, here we go, I have my code, right. I started the bot, I connected, there's all my secret information, credit card number and social security number's embedded in there somewhere. Here's my status that I want to post and there we go. And hopefully nobody's already hacked my account and posted stuff. So let's go look over here... Okay, wait, no I'm in the wrong account, where did I, got to go to bots in space. And I got to go to my profile, which isn't anything yet, somewhere it'll show up here. Where's my profile, is this me? That's local, who knows, okay, let's run this code. Node bot.js, okay, we got an error, Mastodon is not defined, why is Mastodon not defined? Because I used a capital down here and I didn't use a capital up here. So this Mastodon, importing the whole library is now a function that I can call to connect. So let's try this again. Whoo, that seemed to have worked except it didn't console log anything. Thank you to Wilbur in the chat, who just told me that I actually put the wrong path here to the API, so if I go back to the API documenation, you can see the path, the endpoint is statuses plural. So let's try this one more time. Statuses, and now, let me run this again. Ah look, and we can see we got all this metadata back, because it was successful, if I go back here, if I go to bots in space, look at that, there we are, choo choo! (train whistle) Okay, we did it, we successfully made our first Mastodon bot that is posting just from... Just from the node, directly to Mastodon. Okay, so there's a few things that I want to show you next. I would like to show you, number one, is how to effectively hide your, you can open source your bot, but still hide your client secret, client code, all that sort of stuff, so I want to show you that. And also, we'll just look at some of the other parameters for... Some of the other parameters for posting. (energetic music)
