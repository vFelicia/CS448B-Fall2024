With timestamps:

00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel and welcome to this
00:03 - video this is John from programming
00:05 - knowledge and in this video guys we're
00:07 - going to learn how to use array as a
00:10 - function parameter so from the previous
00:13 - tutorials we already implemented
00:15 - functions that could take few parameters
00:18 - and then return a value based on the
00:22 - parameter that we have passed to the
00:25 - function now in this particular video
00:28 - guys we're going to learn how to pass
00:30 - the array as a function parameter and of
00:33 - course we already know how the array
00:37 - works inside our C program we already
00:41 - implemented a simple program that
00:45 - demonstrates the capability of using
00:48 - array we already implemented
00:51 - multi-dimensional array and even
00:54 - iterated the content or the elements of
00:58 - our array now we could take that further
01:01 - by using a function and in this video
01:04 - guys I'm going to show you how you can
01:06 - sum up the values of your array and then
01:09 - we're going to use a function for that
01:12 - so as I've said we're gonna pass the
01:15 - array as a function parameter so here
01:18 - inside our C program we could declare a
01:22 - new variable or a new array so for
01:26 - example int and then my number array
01:34 - okay so my my number array is the name
01:38 - of our array and then it should take in
01:42 - or has the size of say for example six
01:46 - so the number of elements is six right
01:51 - we could specify the values inside our
01:55 - curly braces now we could specify the
02:01 - values 23 30 21 18
02:11 - let's say 17 one two three four five and
02:16 - another one for our last element say for
02:20 - example twenty five so these are all the
02:23 - elements of our array and then we're
02:26 - we're going to sum up the value of this
02:30 - by using a function so what we can do
02:34 - here is to add a function above the main
02:39 - function or whatever we could also
02:41 - insert function right after the main
02:44 - function so for example the function
02:49 - will return the total so it should say
02:52 - int this is the return type and then the
02:56 - name of our array so total value of
02:59 - array so this will be the name of our
03:03 - function total value of array so again
03:06 - this is the return type and this will
03:10 - represent the total value of the
03:13 - elements that we have here so total
03:15 - value of array and then of course we
03:18 - need to specify the argument or the
03:22 - parameters and because we're trying to
03:26 - sum up the value of our of our array we
03:29 - could specify that the first parameter
03:33 - is an array okay so it's a for example
03:37 - int and then number array and this is
03:43 - the first parameter and represents the
03:46 - main number array here okay and then we
03:49 - could also specify the size of the array
03:53 - so basically we have six here so we
03:58 - could say here in and then size and
04:01 - again this will represent the size of
04:04 - our mind number array and of course we
04:08 - need to add curly braces inside and
04:12 - inside this function we could add the
04:15 - logic to add all the elements of our
04:18 - array and then return the sum or the
04:22 - total
04:23 - so we could say here in total equals
04:29 - zero okay that that's the initial value
04:34 - of our total variable and then we could
04:38 - try to either it the elements of our
04:41 - array by using the for loop statement
04:43 - statement the same for loop that we have
04:49 - implemented from the previous tutorials
04:52 - okay so for loop so we could say here in
04:56 - I was the zero and then I is less than
05:01 - the size of our array and then I plus
05:07 - plus and then inside the for loop we
05:10 - could say sum or total equals total plus
05:19 - the number array right there and then we
05:25 - could specify the index which is we're
05:29 - going to use I so this is the variable I
05:33 - that we have declared inside our for
05:36 - loop so number array and then the index
05:39 - I okay and of course guys this is the
05:44 - same say the same with this particular
05:47 - line we could write it with this
05:51 - particular line total equals our plus
05:57 - equals and then number array and then of
06:01 - course specify the index of that
06:03 - particular number array so again this
06:06 - particular line is the same with this
06:09 - line or we are all we are doing here is
06:12 - trying to accumulate the total of our
06:17 - number array right here so after the
06:21 - total plus equals number array we could
06:24 - return the value of the total so by
06:28 - using the return statement and then of
06:31 - course the variable total okay okay so I
06:36 - think our function
06:37 - or our function total value over a is
06:40 - already set we could now call this
06:43 - particular function inside our main
06:46 - function right here so basically for us
06:50 - to call that particular function all we
06:52 - have to do is use the name which is
06:56 - total value of array so total value of
07:00 - array right there and then open and
07:05 - close and then we're going to supply the
07:09 - parameters which is the first one is the
07:13 - array or the my number of my number
07:18 - array so my number array and then of
07:22 - course the second parameter is the size
07:24 - of the array which is 6 right there and
07:31 - then of course this particular function
07:33 - returns in which is the total we could
07:36 - catch the value by using also in and
07:39 - then you could say here sum equals the
07:44 - return of this function that has the
07:47 - parameters array and the size of the
07:50 - array and then right after that one we
07:52 - could print the sum of all the elements
07:55 - so print F and then we can say here the
07:59 - total value is you could use the percent
08:06 - d and then backslash N and then comma
08:12 - and then of course specifying the sum
08:15 - variable okay and now we could compile
08:19 - and run our program so I think we have
08:25 - an error here because we use the comma
08:27 - so we need to remove that in compile and
08:31 - run again our program so it should say
08:34 - here the total value is 134 which is the
08:41 - total of this particular value elements
08:44 - here from our my number array okay so we
08:50 - could also
08:51 - fung's I mean add element to this
08:53 - particular array so it should say after
08:57 - 25 because I'd like for example 50 and
09:01 - then another 125 so basically the length
09:07 - of our array or the size of our array
09:10 - should be 8 because we already added two
09:13 - elements the 50 and 25 and of course we
09:17 - need also to change this particular
09:22 - parameter here it should say also 8 okay
09:26 - so let's try to compile and run our
09:29 - program and as you can see here the
09:33 - value is now 205 ok so let me explain to
09:38 - you in details how this works so first
09:43 - we define the elements of our my number
09:48 - array and the size of this or the number
09:51 - of elements of this particular array is
09:53 - 8 right there and then right after that
09:56 - we call the function total value of
09:59 - array and then we pass in D be my number
10:03 - array as the parameter and of course the
10:06 - second parameter is 8 which is the size
10:09 - of our number array now for the total
10:13 - value of our function as you can see
10:16 - here it takes two parameters the array
10:20 - and of course the size of the array and
10:23 - then inside here we initialize and
10:28 - declare the total variable equal to 0
10:31 - and then we iterate the my number array
10:36 - or number by using the for loop and then
10:40 - we use the I as the index variable so I
10:43 - equal to 0 and then I is less than 2 the
10:48 - size that we have specified then I plus
10:51 - plus and then of course in order to get
10:54 - the total of the elements we're using
10:57 - total equals total plus number array so
11:03 - basically this is the
11:05 - same with this line total plus equals
11:08 - number array and then specify the eye
11:13 - index so say for example this particular
11:18 - eye the value of I is zero then it's
11:23 - going to get the value 23 and then I
11:26 - value one it should get the thirty high
11:30 - value to is 21
11:32 - I value three is 18 and so on so you get
11:37 - the idea and then of course after that
11:40 - we get the total value and then of
11:44 - course return that to this particular
11:47 - variable sum and the last thing is we
11:50 - display that the total value is and then
11:54 - specifying the sum of all the elements
11:57 - that we have from this number array okay
12:01 - so if you have questions guys please let
12:04 - me know in the comment section as always
12:05 - we will try to answer your questions and
12:09 - again guys thank you for watching and if
12:13 - you are new here in our youtube channel
12:15 - and you want content about programming
12:17 - so I am inviting you to subscribe and
12:20 - press the notification bell so you'll
12:23 - get updated whenever we have a new
12:24 - upload so thank you for watching again
12:26 - guys and see you in the next video

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel and welcome to this video this is John from programming knowledge and in this video guys we're going to learn how to use array as a function parameter so from the previous tutorials we already implemented functions that could take few parameters and then return a value based on the parameter that we have passed to the function now in this particular video guys we're going to learn how to pass the array as a function parameter and of course we already know how the array works inside our C program we already implemented a simple program that demonstrates the capability of using array we already implemented multidimensional array and even iterated the content or the elements of our array now we could take that further by using a function and in this video guys I'm going to show you how you can sum up the values of your array and then we're going to use a function for that so as I've said we're gonna pass the array as a function parameter so here inside our C program we could declare a new variable or a new array so for example int and then my number array okay so my my number array is the name of our array and then it should take in or has the size of say for example six so the number of elements is six right we could specify the values inside our curly braces now we could specify the values 23 30 21 18 let's say 17 one two three four five and another one for our last element say for example twenty five so these are all the elements of our array and then we're we're going to sum up the value of this by using a function so what we can do here is to add a function above the main function or whatever we could also insert function right after the main function so for example the function will return the total so it should say int this is the return type and then the name of our array so total value of array so this will be the name of our function total value of array so again this is the return type and this will represent the total value of the elements that we have here so total value of array and then of course we need to specify the argument or the parameters and because we're trying to sum up the value of our of our array we could specify that the first parameter is an array okay so it's a for example int and then number array and this is the first parameter and represents the main number array here okay and then we could also specify the size of the array so basically we have six here so we could say here in and then size and again this will represent the size of our mind number array and of course we need to add curly braces inside and inside this function we could add the logic to add all the elements of our array and then return the sum or the total so we could say here in total equals zero okay that that's the initial value of our total variable and then we could try to either it the elements of our array by using the for loop statement statement the same for loop that we have implemented from the previous tutorials okay so for loop so we could say here in I was the zero and then I is less than the size of our array and then I plus plus and then inside the for loop we could say sum or total equals total plus the number array right there and then we could specify the index which is we're going to use I so this is the variable I that we have declared inside our for loop so number array and then the index I okay and of course guys this is the same say the same with this particular line we could write it with this particular line total equals our plus equals and then number array and then of course specify the index of that particular number array so again this particular line is the same with this line or we are all we are doing here is trying to accumulate the total of our number array right here so after the total plus equals number array we could return the value of the total so by using the return statement and then of course the variable total okay okay so I think our function or our function total value over a is already set we could now call this particular function inside our main function right here so basically for us to call that particular function all we have to do is use the name which is total value of array so total value of array right there and then open and close and then we're going to supply the parameters which is the first one is the array or the my number of my number array so my number array and then of course the second parameter is the size of the array which is 6 right there and then of course this particular function returns in which is the total we could catch the value by using also in and then you could say here sum equals the return of this function that has the parameters array and the size of the array and then right after that one we could print the sum of all the elements so print F and then we can say here the total value is you could use the percent d and then backslash N and then comma and then of course specifying the sum variable okay and now we could compile and run our program so I think we have an error here because we use the comma so we need to remove that in compile and run again our program so it should say here the total value is 134 which is the total of this particular value elements here from our my number array okay so we could also fung's I mean add element to this particular array so it should say after 25 because I'd like for example 50 and then another 125 so basically the length of our array or the size of our array should be 8 because we already added two elements the 50 and 25 and of course we need also to change this particular parameter here it should say also 8 okay so let's try to compile and run our program and as you can see here the value is now 205 ok so let me explain to you in details how this works so first we define the elements of our my number array and the size of this or the number of elements of this particular array is 8 right there and then right after that we call the function total value of array and then we pass in D be my number array as the parameter and of course the second parameter is 8 which is the size of our number array now for the total value of our function as you can see here it takes two parameters the array and of course the size of the array and then inside here we initialize and declare the total variable equal to 0 and then we iterate the my number array or number by using the for loop and then we use the I as the index variable so I equal to 0 and then I is less than 2 the size that we have specified then I plus plus and then of course in order to get the total of the elements we're using total equals total plus number array so basically this is the same with this line total plus equals number array and then specify the eye index so say for example this particular eye the value of I is zero then it's going to get the value 23 and then I value one it should get the thirty high value to is 21 I value three is 18 and so on so you get the idea and then of course after that we get the total value and then of course return that to this particular variable sum and the last thing is we display that the total value is and then specifying the sum of all the elements that we have from this number array okay so if you have questions guys please let me know in the comment section as always we will try to answer your questions and again guys thank you for watching and if you are new here in our youtube channel and you want content about programming so I am inviting you to subscribe and press the notification bell so you'll get updated whenever we have a new upload so thank you for watching again guys and see you in the next video
