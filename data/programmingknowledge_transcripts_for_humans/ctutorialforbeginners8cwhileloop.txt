With timestamps:

00:00 - hello guys welcome once again in this
00:02 - video I'm going to show you how to use
00:06 - Loops in C and I will start with a while
00:09 - loop and in the next couple of video I
00:12 - will teach you how to use do while and
00:15 - for Loop and some other formats of loop
00:20 - so let's start with a loop so what is a
00:25 - loop a loop is a code or a piece of code
00:30 - which enables you to do a particular
00:33 - task again and again okay so as the name
00:37 - suggest it will Loop through the
00:40 - statement or the task again and again
00:43 - until and unless your provided condition
00:46 - is not
00:47 - true so let's see uh how we can use l
00:52 - Loop to print 10 numbers from 1 to 10 so
00:57 - what I have done is I have written this
01:02 - code to
01:03 - print the number so I will ask the user
01:07 - to enter please enter a number and then
01:11 - whenever he enters the number using this
01:14 - read line I will pass this number to the
01:17 - integer and I will store this into this
01:21 - int variable which is
01:23 - number I've also declared a integer
01:27 - variable called int and I have
01:30 - initialized it with for example zero
01:34 - okay now let's see how we can declare a
01:38 - while loop a while loop start with this
01:42 - keyword while and then you give this
01:45 - brackets and then you give these curly
01:50 - braces so in this brackets comes the
01:53 - condition and inside these curly braces
01:56 - comes your statement or the task you
01:59 - want to perform so I want to print 10
02:03 - numbers right so what I can do is I can
02:08 - say while
02:10 - count is less
02:14 - than my number which is this
02:17 - one I want to
02:20 - print that number so I will say
02:28 - number
02:31 - and I will use this placeholder
02:34 - to show the number and I will say n o
02:39 - okay and let's
02:42 - give this slash n to change the line
02:49 - okay and this slash must be back slash
02:54 - and now I will increase the value of
02:57 - count one by one
03:00 - so I will say count
03:03 - Plus+ so this count Plus+ will increase
03:06 - the value by one by one so let's just
03:10 - run the code and let's see what happens
03:12 - and I will explain you once again now I
03:16 - have run the code and it will ask me to
03:19 - enter a number I will enter number and I
03:22 - will press enter and it
03:25 - repeats my print statement 10 times
03:30 - 1 2 3 4 5 6 7 8 9 10 right so I'm
03:36 - printing this number 10
03:38 - times now to make it more interesting I
03:42 - will just change this number by this
03:46 - count and I will start it once again and
03:50 - I will just give 10 once again and I
03:53 - will press enter and now you can see it
03:56 - start from 0 1 2 3 4 5 6 78 9 and total
04:01 - these are 10 numbers right so now what
04:05 - this code is
04:07 - doing first of all user has entered a
04:10 - number for example 10 and this count
04:13 - value is zero okay so it goes to this
04:17 - while loop and it sees okay 0o is less
04:21 - than 10 so I will print this and the
04:25 - value of count is zero so I will print
04:27 - number is equal to Z and I will increase
04:30 - the count by one so now the value in the
04:35 - count is one and then once again it will
04:38 - go to the while condition and once again
04:41 - it sees 1 is less than 10 so it will
04:45 - print one here once again count will be
04:49 - increased by one so its value is two it
04:51 - goes here two is less than 10 it
04:54 - performs this code then three three is
04:58 - less than 10 4 is less than 10 5 6 7 8
05:04 - 9 and it as soon as it sees that the
05:09 - count is 10 this code will not be
05:12 - performed okay so it will go up to 9
05:16 - because 9 is less than 10 and when it
05:19 - the value of count is 10 10 is not less
05:22 - than 10 so it will not print this 10
05:25 - here so in this way you can loop around
05:31 - a
05:32 - statement and you can perform a certain
05:35 - statement or certain piece of code again
05:37 - and again
05:40 - to print this value or to perform some
05:43 - task until and unless your condition is
05:47 - true okay so while this condition is
05:51 - true you can perform this code otherwise
05:54 - it will go out of the code okay now as
06:00 - we have seen in the last video you can
06:02 - use break to break a loop or a statement
06:07 - so you can write
06:12 - break and you can just do it like this
06:17 - and what this break does is it will
06:20 - break the loop and for the first time
06:24 - whenever it's your quote sees this break
06:26 - in the loop it will just go out of the
06:29 - loop right for example I will just run
06:32 - the code once again and I will give 10
06:35 - input once again and you can see here it
06:39 - only printed zero why it printed zero
06:43 - because once again the number value is
06:47 - 10 count is zero it will go here it will
06:50 - perform your code it will print number
06:53 - is equal to zero it will increase the
06:55 - count but it sees there is a break here
06:58 - so
06:59 - it doesn't go around the loop but it
07:03 - goes out of the loop when it sees this
07:05 - break so this use of break is also
07:09 - important in some conditions whenever
07:12 - you need to go out of the loop without
07:16 - performing the whole condition so just
07:20 - remember that so I hope you have enjoyed
07:22 - this video please rate comment and
07:24 - subscribe and bye for now

Cleaned transcript:

hello guys welcome once again in this video I'm going to show you how to use Loops in C and I will start with a while loop and in the next couple of video I will teach you how to use do while and for Loop and some other formats of loop so let's start with a loop so what is a loop a loop is a code or a piece of code which enables you to do a particular task again and again okay so as the name suggest it will Loop through the statement or the task again and again until and unless your provided condition is not true so let's see uh how we can use l Loop to print 10 numbers from 1 to 10 so what I have done is I have written this code to print the number so I will ask the user to enter please enter a number and then whenever he enters the number using this read line I will pass this number to the integer and I will store this into this int variable which is number I've also declared a integer variable called int and I have initialized it with for example zero okay now let's see how we can declare a while loop a while loop start with this keyword while and then you give this brackets and then you give these curly braces so in this brackets comes the condition and inside these curly braces comes your statement or the task you want to perform so I want to print 10 numbers right so what I can do is I can say while count is less than my number which is this one I want to print that number so I will say number and I will use this placeholder to show the number and I will say n o okay and let's give this slash n to change the line okay and this slash must be back slash and now I will increase the value of count one by one so I will say count Plus+ so this count Plus+ will increase the value by one by one so let's just run the code and let's see what happens and I will explain you once again now I have run the code and it will ask me to enter a number I will enter number and I will press enter and it repeats my print statement 10 times 1 2 3 4 5 6 7 8 9 10 right so I'm printing this number 10 times now to make it more interesting I will just change this number by this count and I will start it once again and I will just give 10 once again and I will press enter and now you can see it start from 0 1 2 3 4 5 6 78 9 and total these are 10 numbers right so now what this code is doing first of all user has entered a number for example 10 and this count value is zero okay so it goes to this while loop and it sees okay 0o is less than 10 so I will print this and the value of count is zero so I will print number is equal to Z and I will increase the count by one so now the value in the count is one and then once again it will go to the while condition and once again it sees 1 is less than 10 so it will print one here once again count will be increased by one so its value is two it goes here two is less than 10 it performs this code then three three is less than 10 4 is less than 10 5 6 7 8 9 and it as soon as it sees that the count is 10 this code will not be performed okay so it will go up to 9 because 9 is less than 10 and when it the value of count is 10 10 is not less than 10 so it will not print this 10 here so in this way you can loop around a statement and you can perform a certain statement or certain piece of code again and again to print this value or to perform some task until and unless your condition is true okay so while this condition is true you can perform this code otherwise it will go out of the code okay now as we have seen in the last video you can use break to break a loop or a statement so you can write break and you can just do it like this and what this break does is it will break the loop and for the first time whenever it's your quote sees this break in the loop it will just go out of the loop right for example I will just run the code once again and I will give 10 input once again and you can see here it only printed zero why it printed zero because once again the number value is 10 count is zero it will go here it will perform your code it will print number is equal to zero it will increase the count but it sees there is a break here so it doesn't go around the loop but it goes out of the loop when it sees this break so this use of break is also important in some conditions whenever you need to go out of the loop without performing the whole condition so just remember that so I hope you have enjoyed this video please rate comment and subscribe and bye for now
