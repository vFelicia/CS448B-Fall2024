With timestamps:

00:00 - hey what's going on guys welcome back to
00:01 - our YouTube channel and welcome to this
00:04 - video this is the part 7 of our laravel
00:07 - tutorial series and in this video we're
00:10 - going to discuss how to work with models
00:13 - and migrations but before going into
00:16 - models and database migrations let's try
00:19 - to add first the about and services
00:22 - links here in our navigation bar so
00:27 - let's go ahead and try to do that in our
00:29 - code editor and in here we can try to
00:32 - open up our app that blade dot PHP so
00:35 - let's go ahead under views and then
00:39 - layout app that blade that PHP and as
00:43 - you can see here we have here the links
00:45 - of the login and register so all we have
00:49 - to do now is just copy this and paste it
00:53 - here so we'll just add the links suffer
00:57 - example for our home let's just put
01:00 - slash there for our home and then copy
01:04 - that for our services so the link for
01:12 - our services is slash services and the
01:16 - same thing with our about page that
01:20 - there and change this link in to slash
01:25 - about and then let's just go ahead save
01:29 - this and let's refresh our page and
01:36 - there you go we can see that we have the
01:40 - Home Services and About section but I
01:44 - think we need to modify the layout
01:47 - because we want this home services and
01:50 - about to align with login and register
01:53 - so in order for us to do that let's go
01:55 - back to our code editor and in here
01:59 - instead of having one nav item so let's
02:04 - make it free for our home and then the
02:12 - same thing for our
02:13 - services close the list item tag and
02:18 - paste another one so save this and here
02:23 - refresh so as you can see now we have
02:28 - the home services about login and
02:31 - register links online together and if
02:36 - you try to click any of these links it
02:39 - should work for all of them
02:42 - so the about services home and also the
02:46 - login and register links one last thing
02:50 - that we will modify here is that we need
02:53 - to add some class to our content to
02:56 - properly position our text services and
03:01 - also the about Us section let's go back
03:05 - to our code editor and try to modify
03:07 - this and in here let's go to the main
03:13 - element and it has a class of B Y - 4
03:17 - for now so let's add a container class
03:20 - for this and then say go back to our
03:24 - browser and refresh there you go you can
03:29 - see that the about or this elements are
03:34 - slightly indented from the left so about
03:39 - us and also with the services now that
03:43 - we have that covered let's try to go to
03:45 - the topic models and database migrations
03:49 - so the first thing that we're gonna need
03:51 - is the page B my admin if you are using
03:55 - one or Sam or any versions of the
03:59 - wampserver so the PHP myadmin is
04:03 - embedded into that and included on the
04:07 - installation process and I hope that you
04:10 - included that during the installation
04:11 - process of the one server or lamp or any
04:15 - version or any variation of the one
04:18 - server now we need page we may admin
04:21 - because we're going we're going to add a
04:23 - database here so all we have to do is
04:27 - click the new and then we're just gonna
04:30 - name our database ah speak a project
04:33 - there you go and then create now we
04:39 - don't want to create tables here because
04:41 - we want our laravel project to
04:43 - automatically create tables for us so
04:46 - let's go back to our code editor and
04:48 - make some changes and add controllers
04:52 - add borders for our project and in here
04:56 - let's try to open our terminal so I'll
04:58 - shift e so this will open up our
05:01 - integrated terminal for our atom code
05:04 - editor and from here we can issue
05:09 - commands or run commands artisan
05:11 - commands page B commands or any other
05:13 - commands that we need so the first thing
05:17 - that we're gonna need is to create a
05:19 - controller for our post so the key word
05:22 - for that is PHP artisan make and then
05:29 - Colin and then controller and of course
05:33 - the name of our controller which is post
05:34 - controller and then enter and we're just
05:41 - going to wait for a few seconds to allow
05:44 - the installations or to allow the
05:45 - generation of files so there you go
05:48 - controller created successfully and the
05:51 - next thing is we need to we need to add
05:54 - a controller or I mean a modal but for
05:58 - now let's try to check first if the
06:00 - controller has been generated for us
06:01 - here in our project so as you can see we
06:06 - have here the post controller the deck
06:09 - extends controllers and really use the
06:13 - illuminate coming from the laravel and
06:17 - added the namespace controllers so the
06:20 - next thing that we're going to generate
06:23 - is a modal so in order for us to do that
06:26 - just like the controller is to issue a
06:30 - command PHP artisan and then make and
06:33 - then instead of controller we're going
06:35 - to use a modal and try to
06:40 - generate a post model so as you can see
06:43 - we need to or I think the best way here
06:46 - is to use a singular form of post so
06:52 - here we are using post and then enter
06:55 - and before that we need to add /m
07:01 - because we're going to use the
07:02 - migrations so this will enable us to
07:05 - generate the table from our laravel
07:07 - project so - m and then enter and there
07:12 - you go model created successfully and
07:15 - created migration post table so as you
07:19 - can see if we try to go to our database
07:22 - view database and then migrations we
07:25 - have here the create post table a great
07:30 - post table migrations so as you can see
07:32 - it extends migration class and then it
07:35 - has the two function up and down and
07:39 - then we need to modify this method
07:43 - function up because currently this
07:46 - particular function create a post table
07:50 - with this attribute ID which is Auto
07:53 - incremented and also it includes the
07:56 - time stamps for created and updated add
07:59 - which will be automatically filled in
08:02 - when we try to run the migration command
08:04 - and since we're dealing with post we
08:06 - probably need to more algebra which are
08:09 - title and body so in order for us to do
08:13 - that is we need to add it here in our
08:16 - app function so table and then string
08:21 - and then of course we need to name our
08:24 - attributes such as title there you go
08:28 - and another one for our body so table
08:34 - and then we want to make sure that we
08:39 - use the medium text here because usually
08:43 - the body of a post
08:45 - tends to be longer than the title right
08:47 - so medium tags and then this will be
08:50 - the body of our post so save this and as
08:54 - you can see here if you try to go to
08:56 - migrations we also have the migration or
09:01 - create user stable migration for our
09:03 - users
09:04 - so with including all the attributes ID
09:07 - name email password and all other
09:11 - attributes included here now we will
09:15 - make few changes here before we run the
09:18 - migration and create our table so let's
09:21 - try to go to our ENB
09:23 - file to input our database details so we
09:29 - have here the database the username and
09:32 - the password
09:33 - so I think the username and password are
09:36 - already set but we have to update the
09:40 - database name which is in our case we
09:43 - have used the PK project there we go and
09:47 - then save this so before we run the
09:52 - migration command and generate the
09:53 - tables I'm going to show you a quick
09:56 - change that I made in providers app
10:00 - service provider dot PHP so under
10:03 - provider folder or providers directory
10:06 - and then app service provider dot PHP
10:09 - make sure to import the illuminate
10:11 - support passage and facade and then
10:13 - schema and inside this function book
10:16 - make sure to add this schema default
10:18 - string land which is 191 and if you have
10:22 - added that already we're good to go and
10:26 - we're now going to issue the PHP artisan
10:29 - migrate command so PHP artisan and then
10:34 - migrate and if we try to check our page
10:43 - with my admin and refresh our project
10:48 - core PK project so as you can see we
10:50 - have here all the tables generated
10:54 - coming from our project or PK project so
10:57 - we have here the post inside this post
11:00 - we have the ID which is the
11:02 - auto-generated ID
11:04 - and the title which is the land is 191
11:09 - so we have set this in our code and the
11:14 - body and of course the time stamps
11:16 - decorated that and updated that so in
11:19 - the next tutorial I'm going to show you
11:22 - how to populate this table by using the
11:25 - tinker command and also we're going to
11:28 - work with fetching data in our database
11:31 - so I think that's all there is to it for
11:33 - this tutorial and I hope you have
11:35 - learned something and see you in the
11:37 - next tutorial thanks

Cleaned transcript:

hey what's going on guys welcome back to our YouTube channel and welcome to this video this is the part 7 of our laravel tutorial series and in this video we're going to discuss how to work with models and migrations but before going into models and database migrations let's try to add first the about and services links here in our navigation bar so let's go ahead and try to do that in our code editor and in here we can try to open up our app that blade dot PHP so let's go ahead under views and then layout app that blade that PHP and as you can see here we have here the links of the login and register so all we have to do now is just copy this and paste it here so we'll just add the links suffer example for our home let's just put slash there for our home and then copy that for our services so the link for our services is slash services and the same thing with our about page that there and change this link in to slash about and then let's just go ahead save this and let's refresh our page and there you go we can see that we have the Home Services and About section but I think we need to modify the layout because we want this home services and about to align with login and register so in order for us to do that let's go back to our code editor and in here instead of having one nav item so let's make it free for our home and then the same thing for our services close the list item tag and paste another one so save this and here refresh so as you can see now we have the home services about login and register links online together and if you try to click any of these links it should work for all of them so the about services home and also the login and register links one last thing that we will modify here is that we need to add some class to our content to properly position our text services and also the about Us section let's go back to our code editor and try to modify this and in here let's go to the main element and it has a class of B Y 4 for now so let's add a container class for this and then say go back to our browser and refresh there you go you can see that the about or this elements are slightly indented from the left so about us and also with the services now that we have that covered let's try to go to the topic models and database migrations so the first thing that we're gonna need is the page B my admin if you are using one or Sam or any versions of the wampserver so the PHP myadmin is embedded into that and included on the installation process and I hope that you included that during the installation process of the one server or lamp or any version or any variation of the one server now we need page we may admin because we're going we're going to add a database here so all we have to do is click the new and then we're just gonna name our database ah speak a project there you go and then create now we don't want to create tables here because we want our laravel project to automatically create tables for us so let's go back to our code editor and make some changes and add controllers add borders for our project and in here let's try to open our terminal so I'll shift e so this will open up our integrated terminal for our atom code editor and from here we can issue commands or run commands artisan commands page B commands or any other commands that we need so the first thing that we're gonna need is to create a controller for our post so the key word for that is PHP artisan make and then Colin and then controller and of course the name of our controller which is post controller and then enter and we're just going to wait for a few seconds to allow the installations or to allow the generation of files so there you go controller created successfully and the next thing is we need to we need to add a controller or I mean a modal but for now let's try to check first if the controller has been generated for us here in our project so as you can see we have here the post controller the deck extends controllers and really use the illuminate coming from the laravel and added the namespace controllers so the next thing that we're going to generate is a modal so in order for us to do that just like the controller is to issue a command PHP artisan and then make and then instead of controller we're going to use a modal and try to generate a post model so as you can see we need to or I think the best way here is to use a singular form of post so here we are using post and then enter and before that we need to add /m because we're going to use the migrations so this will enable us to generate the table from our laravel project so m and then enter and there you go model created successfully and created migration post table so as you can see if we try to go to our database view database and then migrations we have here the create post table a great post table migrations so as you can see it extends migration class and then it has the two function up and down and then we need to modify this method function up because currently this particular function create a post table with this attribute ID which is Auto incremented and also it includes the time stamps for created and updated add which will be automatically filled in when we try to run the migration command and since we're dealing with post we probably need to more algebra which are title and body so in order for us to do that is we need to add it here in our app function so table and then string and then of course we need to name our attributes such as title there you go and another one for our body so table and then we want to make sure that we use the medium text here because usually the body of a post tends to be longer than the title right so medium tags and then this will be the body of our post so save this and as you can see here if you try to go to migrations we also have the migration or create user stable migration for our users so with including all the attributes ID name email password and all other attributes included here now we will make few changes here before we run the migration and create our table so let's try to go to our ENB file to input our database details so we have here the database the username and the password so I think the username and password are already set but we have to update the database name which is in our case we have used the PK project there we go and then save this so before we run the migration command and generate the tables I'm going to show you a quick change that I made in providers app service provider dot PHP so under provider folder or providers directory and then app service provider dot PHP make sure to import the illuminate support passage and facade and then schema and inside this function book make sure to add this schema default string land which is 191 and if you have added that already we're good to go and we're now going to issue the PHP artisan migrate command so PHP artisan and then migrate and if we try to check our page with my admin and refresh our project core PK project so as you can see we have here all the tables generated coming from our project or PK project so we have here the post inside this post we have the ID which is the autogenerated ID and the title which is the land is 191 so we have set this in our code and the body and of course the time stamps decorated that and updated that so in the next tutorial I'm going to show you how to populate this table by using the tinker command and also we're going to work with fetching data in our database so I think that's all there is to it for this tutorial and I hope you have learned something and see you in the next tutorial thanks
