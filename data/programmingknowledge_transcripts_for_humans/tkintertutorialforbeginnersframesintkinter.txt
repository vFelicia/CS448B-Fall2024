With timestamps:

00:03 - hey everyone today we're gonna talk
00:06 - about grouping and organizing widgets in
00:08 - the master window and we're gonna make
00:10 - use of frame class and pack geometry
00:12 - manager a frame in itself will work like
00:15 - a container a frame is a rectangular
00:17 - region that would be used to arrange
00:19 - positions of other widgets
00:22 - so basically it is used to organize a
00:24 - group of widgets so let me start writing
00:27 - the program for it
00:32 - or I'll write from
00:34 - linter
00:36 - import start
00:40 - okay so I do not need to import every
00:42 - single module separately in enter I'll
00:45 - just write the class name I do not need
00:48 - to mention Tick Tock button or something
00:49 - like that then I'll take the screen I'll
00:53 - write when equals TK
00:55 - and brackets here I didn't need to write
00:58 - inter dot TK because I've already
01:01 - imported it
01:03 - then I have given the title I'll write
01:05 - win dot title
01:06 - let the title be friends
01:10 - so the third step was adding widgets now
01:14 - I will be adding widgets so frames are
01:16 - also widgets that helps in organizing
01:19 - other widgets I will take the button
01:21 - widget only
01:23 - since we talked about that in the last
01:25 - video so to organize my buttons I would
01:27 - use the frame class now I'll write frame
01:30 - equals
01:32 - frame
01:33 - and in Brackets when
01:36 - because I want the string on the window
01:39 - right
01:41 - so you can see that we can give a lot of
01:44 - arguments for frame
01:45 - so you can given PG this was for the
01:49 - normal background color of the frame
01:53 - then again given BD that is the
01:56 - water size and you can give in the
01:59 - cursor so the mouse cursor will change
02:02 - to this pattern specified pattern when
02:05 - you hover over the frame
02:07 - and then you can mention the size you
02:10 - can tell the height and width
02:12 - then you have relief here which was also
02:16 - there in buttons so it's the same here
02:19 - you can specify the kind of Border you
02:21 - want for the frame
02:23 - here I won't be specifying anything
02:25 - because I would be getting some widgets
02:28 - over it so it's no use it won't be
02:31 - displayed
02:33 - so with the frame class I have made a
02:36 - rectangular area and then I'll pack it
02:39 - to the left side of the screen so I'll
02:41 - write frame dot pack
02:43 - side equals left we discussed this in
02:46 - the last video while we were discussing
02:48 - back a little bit
02:50 - we talked about side fill and expand I
02:53 - hope you remember so I'll be writing
02:55 - side equals left in the argument we're
02:58 - back
02:59 - okay
03:00 - I will take up another frame so that you
03:03 - can understand what frames actually do
03:04 - the grouping would be clear so I'll
03:07 - write Frame 2
03:09 - equals frame when because I want this
03:13 - frame on the window
03:15 - and then I'll back this to the right
03:18 - side okay it's all right side equals
03:22 - right
03:24 - then I'll get my buttons I'll write B1
03:29 - equals
03:30 - button
03:34 - now last time when we declared the
03:36 - buttons you might remember that we used
03:38 - window
03:39 - as the master argument but right now
03:42 - since I won my button on this Frame I'll
03:45 - write the frame variable okay so I'll
03:48 - write frame comma text equals
03:52 - button one
03:55 - let the background be pink
03:59 - and foreground be white
04:03 - then I'll pack this button I'll write B1
04:06 - dot pack
04:07 - similarly I'll declare button two
04:10 - I write P2 equals button
04:14 - frame
04:18 - comma text equals button two
04:22 - and background color sky blue and
04:25 - foreground White
04:29 - and then I'll pack it
04:32 - P2 dot back
04:34 - then I'll have two more buttons B3 and
04:37 - B4 I'll get them on the second frame
04:40 - that I declared
04:42 - you might notice that I have not given
04:43 - any commands for the buttons
04:46 - so let's start focus on that because
04:48 - right now our main focus is
04:50 - understanding frames
04:52 - so let me get my button three and button
04:54 - four I'll write B3 equals button
04:58 - frame two
05:01 - text equals button three
05:05 - background purple and foreground White
05:11 - okay then I'll pack it
05:14 - let me get the button four
05:17 - button frame two
05:20 - text equals button four
05:23 - background let it be light green
05:25 - and for round repeat White
05:29 - then I'll pack it I'll write P4 dot back
05:35 - then I'll call the main Loop this main
05:38 - Loop would be called for the master
05:39 - window only the parent window so I'll
05:42 - write when dot main Loop
05:45 - so let's run this and see if we get the
05:47 - buttons on the left and right sides
05:50 - according to the frames
06:00 - so I can see the buttons the four
06:04 - buttons that I declared and they are on
06:07 - sides button one and two is on the left
06:09 - side and button three and four are on
06:11 - the right side because
06:13 - I have packed the frame
06:15 - one on the left side
06:18 - and Frame 2 was packed on the right side
06:23 - as we have not given any command to the
06:25 - buttons nothing is happening when we are
06:27 - clicking them
06:28 - you can think about how differently you
06:31 - can pack these buttons just like we have
06:33 - packed the frames
06:35 - you can use the site or expand or fill
06:38 - arguments and that's what we'd be
06:41 - talking about in the next video we'll be
06:43 - discussing geometry managers
06:46 - thank you

Cleaned transcript:

hey everyone today we're gonna talk about grouping and organizing widgets in the master window and we're gonna make use of frame class and pack geometry manager a frame in itself will work like a container a frame is a rectangular region that would be used to arrange positions of other widgets so basically it is used to organize a group of widgets so let me start writing the program for it or I'll write from linter import start okay so I do not need to import every single module separately in enter I'll just write the class name I do not need to mention Tick Tock button or something like that then I'll take the screen I'll write when equals TK and brackets here I didn't need to write inter dot TK because I've already imported it then I have given the title I'll write win dot title let the title be friends so the third step was adding widgets now I will be adding widgets so frames are also widgets that helps in organizing other widgets I will take the button widget only since we talked about that in the last video so to organize my buttons I would use the frame class now I'll write frame equals frame and in Brackets when because I want the string on the window right so you can see that we can give a lot of arguments for frame so you can given PG this was for the normal background color of the frame then again given BD that is the water size and you can give in the cursor so the mouse cursor will change to this pattern specified pattern when you hover over the frame and then you can mention the size you can tell the height and width then you have relief here which was also there in buttons so it's the same here you can specify the kind of Border you want for the frame here I won't be specifying anything because I would be getting some widgets over it so it's no use it won't be displayed so with the frame class I have made a rectangular area and then I'll pack it to the left side of the screen so I'll write frame dot pack side equals left we discussed this in the last video while we were discussing back a little bit we talked about side fill and expand I hope you remember so I'll be writing side equals left in the argument we're back okay I will take up another frame so that you can understand what frames actually do the grouping would be clear so I'll write Frame 2 equals frame when because I want this frame on the window and then I'll back this to the right side okay it's all right side equals right then I'll get my buttons I'll write B1 equals button now last time when we declared the buttons you might remember that we used window as the master argument but right now since I won my button on this Frame I'll write the frame variable okay so I'll write frame comma text equals button one let the background be pink and foreground be white then I'll pack this button I'll write B1 dot pack similarly I'll declare button two I write P2 equals button frame comma text equals button two and background color sky blue and foreground White and then I'll pack it P2 dot back then I'll have two more buttons B3 and B4 I'll get them on the second frame that I declared you might notice that I have not given any commands for the buttons so let's start focus on that because right now our main focus is understanding frames so let me get my button three and button four I'll write B3 equals button frame two text equals button three background purple and foreground White okay then I'll pack it let me get the button four button frame two text equals button four background let it be light green and for round repeat White then I'll pack it I'll write P4 dot back then I'll call the main Loop this main Loop would be called for the master window only the parent window so I'll write when dot main Loop so let's run this and see if we get the buttons on the left and right sides according to the frames so I can see the buttons the four buttons that I declared and they are on sides button one and two is on the left side and button three and four are on the right side because I have packed the frame one on the left side and Frame 2 was packed on the right side as we have not given any command to the buttons nothing is happening when we are clicking them you can think about how differently you can pack these buttons just like we have packed the frames you can use the site or expand or fill arguments and that's what we'd be talking about in the next video we'll be discussing geometry managers thank you
