With timestamps:

00:01 - hey guys welcome to the next video on
00:02 - nodejs tutorial for beginners and in
00:05 - this video we will talk about templating
00:07 - engines so so far what we have learned
00:10 - is how we can uh pass these kind of
00:13 - parameters to the client using
00:17 - expressjs so before starting templating
00:20 - engines I wanted to show you how we can
00:23 - uh you know transfer or show the HTML
00:26 - file on the browser using Express uh Js
00:30 - so let's get started with that and then
00:33 - we will start with the templating
00:35 - engines so I have these two files about.
00:40 - HTML and HTML or
00:42 - index.html right so these two HTML files
00:46 - I have so what I'm going to do is in the
00:50 - root route what I want to do is I want
00:54 - to send the index.html file right so the
00:59 - way you do it is you take this reply uh
01:03 - argument and then call a method called
01:06 - send file okay so just call a method
01:10 - called send file and then the name of
01:14 - the file which you want to send so
01:17 - because we are in the current directory
01:18 - so I'm going to take the d name plus the
01:23 - file name so the file name I want to
01:25 - send is
01:28 - index.html right in the same way you can
01:31 - uh just send the contact. HTML or about.
01:36 - HTML which we have here right so here I
01:41 - want to send about.
01:45 - [Music]
01:46 - HTML and I'm going to save my code and
01:49 - my nodemon is already running so I don't
01:53 - need to rerun it once again and I'm
01:55 - going to open my browser and I'm going
01:58 - to refresh this this and it says uh this
02:03 - doesn't exist yeah I forgot to give the
02:06 - forward slash here so I just need to
02:09 - give forward slash and once again I will
02:11 - save and I will refresh the page once
02:15 - again and now it says homepage and let's
02:19 - uh call the about page also so just
02:23 - write about and it says about page so
02:26 - this is how you can send any file to the
02:29 - browser using the send file method right
02:33 - now this is how you can send the static
02:36 - files but for example you want to send
02:39 - some parameters with the HTML file or
02:43 - you want to inject some uh parameter in
02:46 - your HTML file then what will you do so
02:50 - for that we use the templating engines
02:54 - and there are many engines which you can
02:56 - use with Express uh JS for example Jade
03:01 - or jazz or uh some other engines like uh
03:06 - underscore or toffee but what we are
03:09 - going to use is the templating engine
03:12 - called ejs or embedded JS so let's get
03:16 - started with
03:18 - ejs so what I'm going to do is first of
03:21 - all I'm going to open the website on
03:24 - which uh we can find more documentation
03:27 - on ejs or embeded JS so just open this
03:32 - website which is called embeded js.
03:34 - comom whose short form is uh ejs right
03:38 - and when you will scroll down you will
03:41 - see how you can use this EGS with your
03:46 - HTML and uh how you can embed the
03:50 - parameters in your html text or file
03:53 - right so for that first of all we need
03:57 - to add a package
04:00 - ejs in our project so ejs is a node
04:06 - package so I'm going to first of all
04:08 - install ejx package using npm so let me
04:12 - clear the terminal and I will just write
04:16 - npm install and I will just give the
04:19 - flag save also so it will be added to
04:22 - our uh package.json file also and then
04:26 - just write
04:28 - ejs okay and theness press enter which
04:30 - is going to add this package to our
04:34 - project and once it's done you will be
04:36 - able to see uh this EGS is added to your
04:40 - package.json and you will also see EGS
04:44 - is added to your node modules also right
04:48 - so I'm going to just close this and
04:50 - close the HTML files and now the way you
04:54 - uh you know add this EGS or to use this
04:58 - EGS uh we need to add the view engine
05:03 - property or you need to set the view
05:05 - engine property to your Express app so
05:09 - you take this app variable and then call
05:13 - a method called set and then we will set
05:17 - a property which is called view engine
05:21 - so just give single code and just write
05:25 - view engine and the next property is the
05:28 - name of the engine so in this case we
05:31 - are using ejs right so the property name
05:36 - is view engine and the value is ejs okay
05:41 - now we can use ejs in our project Now by
05:47 - default uh when Express uh sees that the
05:51 - engine view engine is EGS it looks in
05:54 - the directory called view okay by
05:59 - default it's going to look in a
06:01 - directory called View for the ejs files
06:04 - so we are going to make a directory
06:07 - called view so just create a directory
06:09 - and name it as
06:11 - View and inside this directory all our
06:15 - uh you know ejs files will go right so
06:19 - what we want is for example in the last
06:21 - video we have uh created this route for
06:25 - students and whenever some ID is uh you
06:29 - know passed for the student then his
06:32 - name is returned to the for example
06:36 - client or to the browser right so we are
06:39 - going to take the same route but this
06:42 - time what we are going to do is we are
06:45 - going to uh you know transfer this data
06:49 - to the uh HTML file and inject in this
06:53 - parameter to the HTML file and then
06:56 - present it to the client for example
06:59 - okay so what I'm going to do is I'm
07:02 - going to just create a new file inside
07:05 - my view folder so this is my view folder
07:08 - and I'm going to create a student file
07:10 - because this is a students route so I'm
07:13 - going to create a students dot ejs file
07:17 - okay so it's not going to be a HTML file
07:20 - but it's going to be a ejs file right
07:24 - but the content which you will give
07:26 - inside this EGS file will be the same as
07:30 - uh your normal HTML file have so for
07:35 - example I'm going to just copy this code
07:37 - from my index.html which doesn't have
07:39 - much it just have the body of HTML page
07:43 - and the main H1 tag right so I'm just
07:48 - going to copy and then in the student.
07:51 - EGS file I'm going to just paste this
07:55 - code
07:56 - right now the way EGS works
07:59 - is uh we need to go to
08:03 - index.js and instead of uh using this
08:07 - kind of code uh reply or re. send
08:12 - instead of this what we are going to do
08:14 - is we are going to just write
08:17 - re. render okay so here we are going to
08:22 - use R do
08:26 - render and then it takes two parameters
08:30 - so the first parameter here will be the
08:33 - name of your view file so in this case
08:37 - our view file name is students right you
08:40 - can see here students. ejs so we can
08:44 - just uh pass the view file name which is
08:48 - student and the extension you don't need
08:50 - to give it here okay just the name of
08:53 - the file and the second parameter it
08:55 - takes is the object now this object is a
08:59 - key value pair so the first uh is the
09:03 - key for example we want to send the
09:06 - student name so I'm going to just name
09:09 - uh the key as name itself because it's a
09:12 - student name right and the value for it
09:16 - is the value which we have here so in
09:20 - the last video we had this kind of uh
09:23 - you know small object and this has the
09:28 - key value p here so for example we
09:31 - requested student one then it's going to
09:33 - give us the uh result by returning its
09:38 - name students name right so this is how
09:41 - you can get the student Name by ID so
09:45 - I'm going to pass it here okay and then
09:48 - we don't need this thing here because we
09:51 - are already sending our uh you know
09:54 - parameter using this render method and
09:58 - to the
09:59 - student file now the way you uh add this
10:05 - name parameter to your ejs file is so
10:09 - I'm going to go to uh H1 tag here and if
10:14 - you have seen inside in the embedded js.
10:18 - comom you do it something like this so
10:21 - you take this uh angle bracket start
10:25 - your angle bracket then this mod sign
10:28 - then equals and then the parameter name
10:31 - and then end with mod and then closing
10:34 - angle bracket so I can just copy this uh
10:38 - from here and I will do the same here so
10:41 - in your H1 tag or any tag for example
10:44 - it's paragraph tag or it's any other h2
10:48 - tag or other tags you can do the same so
10:53 - just use a tag and inside your tag just
10:56 - start angle bracket mod equals and then
10:59 - the parameter name so our parameter name
11:02 - is name itself right so we want to pass
11:06 - in our EGS file this parameter name
11:09 - right so that's why I have written name
11:12 - here okay and then I'm going to just
11:15 - save everything and uh I'm going to
11:18 - rerun my uh app so I'm going to just use
11:23 - noon.
11:25 - index.js and then I'm going to go to my
11:27 - browser and and in here I'm going to ask
11:32 - for the students uh file because here we
11:37 - have the students. ejs right and we will
11:41 - give the student route here and then the
11:44 - ID of the students so ID of the student
11:46 - for example I want to give one here
11:49 - right and then press enter it gives me
11:52 - some errors which I'm going to see what
11:54 - the error is so the error which I can
11:57 - see here is it says fail to look up view
12:01 - students in views directory and I name
12:04 - my directory as view not views so this
12:08 - is the error you will see if you uh do
12:10 - anything wrong and by the message it
12:13 - looks like my directory name view is
12:16 - wrong we need to name it as views okay
12:20 - so my directory name views must
12:23 - be I'm going to rename it as views
12:27 - instead of view okay and then I'm going
12:30 - to uh refresh my page once
12:33 - again and hopefully this time I can see
12:37 - this message Mark because uh student ID
12:40 - 1 is for Mark right so we can just addit
12:44 - our um student. EGS file for example uh
12:49 - you
12:52 - have
12:53 - requested the
12:57 - student name
13:01 - name and then you give the student name
13:05 - and for uh for example I want to add the
13:07 - ID also I want to show the ID on my uh
13:11 - student uh HTML file also so I will just
13:14 - add the parameter tag here and I will
13:17 - say ID and then the colon and then I
13:23 - will use the same method like this here
13:26 - and here I will just rename it as ID and
13:30 - I need to pass this ID parameter from
13:33 - here right so let's go to the index.js
13:37 - file and then here in the
13:41 - second element in the Json you can just
13:44 - add ID and then just pass uh this ID
13:48 - there so the ID will be request.
13:51 - parents. ID right so just give colon
13:54 - here and then pass your ID here okay so
13:57 - first uh element of the Json or object
14:01 - is name and second element of the Json
14:03 - object is ID right in the same way you
14:06 - can add multiple object in your uh
14:10 - second parameters right so just save
14:13 - your code and then uh run it once again
14:16 - so I'm going to just ask for the student
14:19 - one once again and now it says you have
14:22 - a requested the student name Mark and
14:25 - the ID is one for example I will just
14:29 - add two here and press enter this time I
14:32 - have Tom and then the ID is two and once
14:36 - again for example for three then the
14:39 - John name and the ID is three here okay
14:44 - so this is just the starting for the
14:46 - templating engine in the future videos
14:48 - we will see some more Concepts on ejs so
14:51 - stay tuned and please welcome and
14:53 - subscribe and bye for now

Cleaned transcript:

hey guys welcome to the next video on nodejs tutorial for beginners and in this video we will talk about templating engines so so far what we have learned is how we can uh pass these kind of parameters to the client using expressjs so before starting templating engines I wanted to show you how we can uh you know transfer or show the HTML file on the browser using Express uh Js so let's get started with that and then we will start with the templating engines so I have these two files about. HTML and HTML or index.html right so these two HTML files I have so what I'm going to do is in the root route what I want to do is I want to send the index.html file right so the way you do it is you take this reply uh argument and then call a method called send file okay so just call a method called send file and then the name of the file which you want to send so because we are in the current directory so I'm going to take the d name plus the file name so the file name I want to send is index.html right in the same way you can uh just send the contact. HTML or about. HTML which we have here right so here I want to send about. HTML and I'm going to save my code and my nodemon is already running so I don't need to rerun it once again and I'm going to open my browser and I'm going to refresh this this and it says uh this doesn't exist yeah I forgot to give the forward slash here so I just need to give forward slash and once again I will save and I will refresh the page once again and now it says homepage and let's uh call the about page also so just write about and it says about page so this is how you can send any file to the browser using the send file method right now this is how you can send the static files but for example you want to send some parameters with the HTML file or you want to inject some uh parameter in your HTML file then what will you do so for that we use the templating engines and there are many engines which you can use with Express uh JS for example Jade or jazz or uh some other engines like uh underscore or toffee but what we are going to use is the templating engine called ejs or embedded JS so let's get started with ejs so what I'm going to do is first of all I'm going to open the website on which uh we can find more documentation on ejs or embeded JS so just open this website which is called embeded js. comom whose short form is uh ejs right and when you will scroll down you will see how you can use this EGS with your HTML and uh how you can embed the parameters in your html text or file right so for that first of all we need to add a package ejs in our project so ejs is a node package so I'm going to first of all install ejx package using npm so let me clear the terminal and I will just write npm install and I will just give the flag save also so it will be added to our uh package.json file also and then just write ejs okay and theness press enter which is going to add this package to our project and once it's done you will be able to see uh this EGS is added to your package.json and you will also see EGS is added to your node modules also right so I'm going to just close this and close the HTML files and now the way you uh you know add this EGS or to use this EGS uh we need to add the view engine property or you need to set the view engine property to your Express app so you take this app variable and then call a method called set and then we will set a property which is called view engine so just give single code and just write view engine and the next property is the name of the engine so in this case we are using ejs right so the property name is view engine and the value is ejs okay now we can use ejs in our project Now by default uh when Express uh sees that the engine view engine is EGS it looks in the directory called view okay by default it's going to look in a directory called View for the ejs files so we are going to make a directory called view so just create a directory and name it as View and inside this directory all our uh you know ejs files will go right so what we want is for example in the last video we have uh created this route for students and whenever some ID is uh you know passed for the student then his name is returned to the for example client or to the browser right so we are going to take the same route but this time what we are going to do is we are going to uh you know transfer this data to the uh HTML file and inject in this parameter to the HTML file and then present it to the client for example okay so what I'm going to do is I'm going to just create a new file inside my view folder so this is my view folder and I'm going to create a student file because this is a students route so I'm going to create a students dot ejs file okay so it's not going to be a HTML file but it's going to be a ejs file right but the content which you will give inside this EGS file will be the same as uh your normal HTML file have so for example I'm going to just copy this code from my index.html which doesn't have much it just have the body of HTML page and the main H1 tag right so I'm just going to copy and then in the student. EGS file I'm going to just paste this code right now the way EGS works is uh we need to go to index.js and instead of uh using this kind of code uh reply or re. send instead of this what we are going to do is we are going to just write re. render okay so here we are going to use R do render and then it takes two parameters so the first parameter here will be the name of your view file so in this case our view file name is students right you can see here students. ejs so we can just uh pass the view file name which is student and the extension you don't need to give it here okay just the name of the file and the second parameter it takes is the object now this object is a key value pair so the first uh is the key for example we want to send the student name so I'm going to just name uh the key as name itself because it's a student name right and the value for it is the value which we have here so in the last video we had this kind of uh you know small object and this has the key value p here so for example we requested student one then it's going to give us the uh result by returning its name students name right so this is how you can get the student Name by ID so I'm going to pass it here okay and then we don't need this thing here because we are already sending our uh you know parameter using this render method and to the student file now the way you uh add this name parameter to your ejs file is so I'm going to go to uh H1 tag here and if you have seen inside in the embedded js. comom you do it something like this so you take this uh angle bracket start your angle bracket then this mod sign then equals and then the parameter name and then end with mod and then closing angle bracket so I can just copy this uh from here and I will do the same here so in your H1 tag or any tag for example it's paragraph tag or it's any other h2 tag or other tags you can do the same so just use a tag and inside your tag just start angle bracket mod equals and then the parameter name so our parameter name is name itself right so we want to pass in our EGS file this parameter name right so that's why I have written name here okay and then I'm going to just save everything and uh I'm going to rerun my uh app so I'm going to just use noon. index.js and then I'm going to go to my browser and and in here I'm going to ask for the students uh file because here we have the students. ejs right and we will give the student route here and then the ID of the students so ID of the student for example I want to give one here right and then press enter it gives me some errors which I'm going to see what the error is so the error which I can see here is it says fail to look up view students in views directory and I name my directory as view not views so this is the error you will see if you uh do anything wrong and by the message it looks like my directory name view is wrong we need to name it as views okay so my directory name views must be I'm going to rename it as views instead of view okay and then I'm going to uh refresh my page once again and hopefully this time I can see this message Mark because uh student ID 1 is for Mark right so we can just addit our um student. EGS file for example uh you have requested the student name name and then you give the student name and for uh for example I want to add the ID also I want to show the ID on my uh student uh HTML file also so I will just add the parameter tag here and I will say ID and then the colon and then I will use the same method like this here and here I will just rename it as ID and I need to pass this ID parameter from here right so let's go to the index.js file and then here in the second element in the Json you can just add ID and then just pass uh this ID there so the ID will be request. parents. ID right so just give colon here and then pass your ID here okay so first uh element of the Json or object is name and second element of the Json object is ID right in the same way you can add multiple object in your uh second parameters right so just save your code and then uh run it once again so I'm going to just ask for the student one once again and now it says you have a requested the student name Mark and the ID is one for example I will just add two here and press enter this time I have Tom and then the ID is two and once again for example for three then the John name and the ID is three here okay so this is just the starting for the templating engine in the future videos we will see some more Concepts on ejs so stay tuned and please welcome and subscribe and bye for now
