With timestamps:

00:00 - hello guys welcome to the next video
00:02 - tutorial on C programming for beginners
00:05 - in the last two videos we have seen how
00:08 - a loop Works in a c and we have learned
00:12 - how to use while loop and do while loop
00:15 - in C now in this video we are going to
00:19 - learn how to use for Loop in C so for
00:24 - Loop is also a kind of loop which
00:26 - depends upon uh the
00:28 - initialization
00:30 - condition and the increment uh property
00:34 - so let's see what is the basic structure
00:37 - of for Loop and then we will take an
00:40 - example and see how it works so the
00:44 - basic structure of for Loop looks like
00:48 - this and this structure starts with a
00:51 - keyword for and then comes these
00:57 - brackets and in these bracket comes
01:01 - three uh
01:03 - arguments and these arguments are
01:06 - separated by these
01:08 - semicolon okay so this is these are the
01:12 - semicolons and these are three different
01:17 - parameters and then comes these two
01:19 - curly braces and if the condition in
01:24 - this for Loop is true then this code
01:28 - inside your for Loop will be
01:31 - executed now first parameter in this for
01:34 - Loop is called inited or initialization
01:38 - of something second parameter checks
01:42 - whether some condition is true or not
01:46 - which is related to
01:48 - initialization and then the third
01:50 - parameter is the increment of uh the
01:53 - parameter which you have
01:55 - initialized in the first uh parameter so
02:00 - this is the basic uh structure of for
02:03 - Loop now let's take the same example
02:06 - which we uh have been seeing in the last
02:10 - uh two videos just
02:13 - printing 0 to 10 as an integer so I will
02:17 - just uh declare a variable which is
02:21 - equal to
02:23 - Z and on the basis of this variable I
02:26 - want to print 10 but in the last video I
02:31 - have shown you that you need to declare
02:33 - this first of all initialize it and then
02:37 - you need to give the while loop and then
02:40 - check the condition and then
02:43 - increment but in the for Loop it uh it's
02:47 - done automatically and you don't need to
02:49 - initialize uh anything separately but
02:52 - what we will do is we'll just start with
02:55 - four and then with a bracket and inside
02:59 - this Brack bracket I told you first
03:01 - parameter is the initialization so
03:04 - initialization you can do it like this
03:06 - int
03:08 - I and then I is equal to Z right it's
03:13 - just like declaring a variable
03:17 - in a is equal to0 like this okay so in
03:22 - Fall we don't need to do this kind of
03:25 - initialization separately but we can do
03:28 - it inside the f Loop okay now comes the
03:32 - semicolon and then comes the condition
03:35 - so as we have seen in the last two
03:38 - videos that in y Loop and doy Loop we
03:41 - check some condition to fulfill and if
03:45 - this condition is fulfilled then we
03:48 - execute the code so in this uh for Loop
03:52 - we are checking if I
03:55 - is less than 10 okay okay so we are
04:01 - checking this condition if the I value
04:04 - of I is less than 10 because we have
04:07 - initialize I with zero I value of I will
04:11 - be uh you
04:12 - know replaced here and it will check
04:16 - first of all 0 is 0 is less than 10
04:19 - which is true and it will keep on going
04:22 - uh like this until and unless the
04:25 - condition is met now the third parameter
04:28 - is in incrementing the values like this
04:32 - I
04:32 - ++ and in the previous videos I have
04:36 - told you I ++ just means I for example I
04:42 - is equal to I + one it's just like this
04:48 - I in
04:50 - short whenever you want to increment the
04:53 - value of uh any variable you just write
04:56 - I ++ like this okay now comes your curly
05:02 - braces so what we have done in our for
05:04 - Loop we have
05:06 - initialized uh a variable and then we
05:10 - are checking on the basis of that
05:11 - variable if some condition is true and
05:14 - we are incrementing the variable which
05:18 - we have initialized now we just need to
05:22 - uh do whatever we want to do inside our
05:26 - for Loop for example we want to print so
05:30 - we just write print F and then we can
05:34 - write
05:36 - the value of I is equal to
05:43 - percentage d right and then comma
05:50 - I and don't forget this semicolon here
05:55 - and this should be value Okay so
06:00 - the for Loop takes care of your
06:01 - initialization condition and increment
06:04 - and then you can you know do whatever
06:08 - you want to do inside your Loop and this
06:10 - Loop will print the value of uh I from 0
06:15 - to 10 and it's incrementing it also now
06:19 - let's first uh run our program and let's
06:21 - see what's the
06:23 - result and first of all what's it's
06:27 - saying some error it's showing so I will
06:30 - see what's the error and the error is
06:34 - for Loop initial declaration are only
06:36 - allowed
06:37 - in uh here okay so what will we will do
06:44 - here so if you see this error which says
06:49 - that for for Loop initial declaration or
06:53 - only allowed in c99 mode then you have
06:59 - c99 which is a newer version of C is not
07:03 - enabled in your IDE especially in code
07:07 - blocks so to enable this c99 in your uh
07:12 - code blocks you just need to go to your
07:15 - project so just right click your project
07:18 - here or you can just go to the settings
07:21 - here so I will prefer to go to my
07:23 - project and right click my project and I
07:26 - will go to the build or or the
07:30 - properties here the last option so go to
07:32 - the last option called
07:34 - properties and in here go to project
07:38 - build option so click this project
07:41 - builds
07:43 - option and in here it will open product
07:46 - build option and in here you will be
07:49 - able to see compiler flags and there is
07:52 - a tab called other options okay in other
07:56 - options you just need to type this
07:59 - minus STD is equal to
08:02 - c99 okay so just type this minus STD is
08:06 - equal to
08:08 - c99 and just click okay click okay and I
08:14 - will just uh paste it here so you can
08:17 - see uh it better it's minus STD c99 okay
08:24 - now when I compile this program and run
08:26 - this it runs right
08:30 - and I should
08:32 - give this line break here so we can see
08:36 - the output and now we can see from 0 to
08:41 - 9 the value of I is printed and how it's
08:45 - working so initially we initialize the
08:48 - value of I is equal to0 and then C
08:52 - checks this condition if the value of I
08:56 - which is initially zero is less than 10
08:58 - or not
09:00 - if it's less than 10 then it goes here
09:02 - and executes your code first and then
09:07 - after your code execution just above
09:10 - this curly braces ending it increases
09:14 - the value of I so then before the value
09:18 - of I was Zero now it becomes one and
09:22 - then once again it checks whether this
09:24 - condition is true 1 is less than 10
09:27 - which is not true it prints the value of
09:30 - I and then increments the value of I
09:33 - just before here so I becomes two and it
09:37 - goes and goes and goes until and unless
09:40 - this condition becomes false and then it
09:45 - goes out of the loop okay so once again
09:48 - it prints from 0 to 9 and if you want to
09:52 - print uh 0 to 10 just add equal to after
09:57 - your greater than or less than sign okay
10:02 - so there is a simple rule here is always
10:07 - use equal to after you're greater than
10:10 - or uh smaller than this symbol okay and
10:15 - once again when you run the program it
10:17 - prints from 0 to 10 okay so in this way
10:21 - you uh can use for Loop and c I hope you
10:24 - have enjoyed this video please wrate
10:26 - comment and subscribe and bye for now

Cleaned transcript:

hello guys welcome to the next video tutorial on C programming for beginners in the last two videos we have seen how a loop Works in a c and we have learned how to use while loop and do while loop in C now in this video we are going to learn how to use for Loop in C so for Loop is also a kind of loop which depends upon uh the initialization condition and the increment uh property so let's see what is the basic structure of for Loop and then we will take an example and see how it works so the basic structure of for Loop looks like this and this structure starts with a keyword for and then comes these brackets and in these bracket comes three uh arguments and these arguments are separated by these semicolon okay so this is these are the semicolons and these are three different parameters and then comes these two curly braces and if the condition in this for Loop is true then this code inside your for Loop will be executed now first parameter in this for Loop is called inited or initialization of something second parameter checks whether some condition is true or not which is related to initialization and then the third parameter is the increment of uh the parameter which you have initialized in the first uh parameter so this is the basic uh structure of for Loop now let's take the same example which we uh have been seeing in the last uh two videos just printing 0 to 10 as an integer so I will just uh declare a variable which is equal to Z and on the basis of this variable I want to print 10 but in the last video I have shown you that you need to declare this first of all initialize it and then you need to give the while loop and then check the condition and then increment but in the for Loop it uh it's done automatically and you don't need to initialize uh anything separately but what we will do is we'll just start with four and then with a bracket and inside this Brack bracket I told you first parameter is the initialization so initialization you can do it like this int I and then I is equal to Z right it's just like declaring a variable in a is equal to0 like this okay so in Fall we don't need to do this kind of initialization separately but we can do it inside the f Loop okay now comes the semicolon and then comes the condition so as we have seen in the last two videos that in y Loop and doy Loop we check some condition to fulfill and if this condition is fulfilled then we execute the code so in this uh for Loop we are checking if I is less than 10 okay okay so we are checking this condition if the I value of I is less than 10 because we have initialize I with zero I value of I will be uh you know replaced here and it will check first of all 0 is 0 is less than 10 which is true and it will keep on going uh like this until and unless the condition is met now the third parameter is in incrementing the values like this I ++ and in the previous videos I have told you I ++ just means I for example I is equal to I + one it's just like this I in short whenever you want to increment the value of uh any variable you just write I ++ like this okay now comes your curly braces so what we have done in our for Loop we have initialized uh a variable and then we are checking on the basis of that variable if some condition is true and we are incrementing the variable which we have initialized now we just need to uh do whatever we want to do inside our for Loop for example we want to print so we just write print F and then we can write the value of I is equal to percentage d right and then comma I and don't forget this semicolon here and this should be value Okay so the for Loop takes care of your initialization condition and increment and then you can you know do whatever you want to do inside your Loop and this Loop will print the value of uh I from 0 to 10 and it's incrementing it also now let's first uh run our program and let's see what's the result and first of all what's it's saying some error it's showing so I will see what's the error and the error is for Loop initial declaration are only allowed in uh here okay so what will we will do here so if you see this error which says that for for Loop initial declaration or only allowed in c99 mode then you have c99 which is a newer version of C is not enabled in your IDE especially in code blocks so to enable this c99 in your uh code blocks you just need to go to your project so just right click your project here or you can just go to the settings here so I will prefer to go to my project and right click my project and I will go to the build or or the properties here the last option so go to the last option called properties and in here go to project build option so click this project builds option and in here it will open product build option and in here you will be able to see compiler flags and there is a tab called other options okay in other options you just need to type this minus STD is equal to c99 okay so just type this minus STD is equal to c99 and just click okay click okay and I will just uh paste it here so you can see uh it better it's minus STD c99 okay now when I compile this program and run this it runs right and I should give this line break here so we can see the output and now we can see from 0 to 9 the value of I is printed and how it's working so initially we initialize the value of I is equal to0 and then C checks this condition if the value of I which is initially zero is less than 10 or not if it's less than 10 then it goes here and executes your code first and then after your code execution just above this curly braces ending it increases the value of I so then before the value of I was Zero now it becomes one and then once again it checks whether this condition is true 1 is less than 10 which is not true it prints the value of I and then increments the value of I just before here so I becomes two and it goes and goes and goes until and unless this condition becomes false and then it goes out of the loop okay so once again it prints from 0 to 9 and if you want to print uh 0 to 10 just add equal to after your greater than or less than sign okay so there is a simple rule here is always use equal to after you're greater than or uh smaller than this symbol okay and once again when you run the program it prints from 0 to 10 okay so in this way you uh can use for Loop and c I hope you have enjoyed this video please wrate comment and subscribe and bye for now
