With timestamps:

00:01 - hello guys in the last video I have
00:02 - shown you how to use switch cases in C++
00:07 - now in this video I'm going to talk to
00:09 - you about loops and I'm going to show
00:12 - you how to use for Loop in C++ that's
00:16 - the most basic uh type of Loop in
00:20 - C++ so let's see how we can uh declare
00:24 - for Loop and how we can use for Loop so
00:27 - for the Declaration of for Loop uh the
00:30 - Declaration syntax looks like this so
00:34 - what you
00:36 - uh do is You' write four and just give
00:41 - these two parentheses and this four
00:45 - takes three parameter first is the
00:48 - initialization and then it is separated
00:51 - by semicolon second is the condition and
00:55 - third is the
00:57 - increment okay and in this curly bra you
01:01 - provide the code you want to execute
01:05 - according to the condition which is met
01:08 - in the loop so let's take an example I'm
01:12 - going to declare a
01:15 - loop so I will write
01:19 - here
01:21 - four and I will give these two brackets
01:25 - and I will give these two curly braces
01:27 - which is the basic syntax of
01:30 - for now I'm going to declare the
01:33 - initialization for so for example I will
01:36 - take integer in
01:40 - I is equal to 1 then I will separate it
01:46 - by semicolon then I will give the
01:49 - condition so for example I want to give
01:51 - the condition Loop till my condition
01:56 - reaches 10 for example so I
02:01 - is less than or equal
02:04 - to
02:06 - 10
02:09 - okay and then the third condition is the
02:13 - increment so I will give semicolon once
02:16 - again and I will get should say
02:21 - i++ so this means that we are
02:25 - incrementing I by One this is just like
02:29 - saying that
02:31 - I is equal to
02:35 - I + 1 okay so this is this and this is
02:41 - same so we are incrementing I by one
02:46 - every time it sees the condition oh it's
02:50 - less than 10 still it increase the I by
02:54 - one now we will output
02:58 - our variable I so I will say C
03:03 - out I and once
03:07 - again endl okay now I will build the
03:11 - program and let's see what happens I
03:14 - will run the program and you see what
03:17 - happens here is it's looping so it goes
03:23 - to the for Loop and it initializes I is
03:26 - equal to 1 and it's it goes into the
03:29 - execution of for Loop and it prints one
03:32 - and once again it goes back to for Loop
03:35 - and increment it by one right so what's
03:39 - happening I is equal to 1 it prints it
03:42 - it increments it by one goes to the loop
03:44 - once again now this time I is equal to 2
03:47 - and it sees condition Which is less than
03:50 - 10 2 is less than 10 then it prints two
03:54 - once again and increment I by 1 which is
03:57 - I is equal to 3 goes to the condition
04:00 - condition once again and it sees yes um
04:04 - I equal to 3 is less than 10 so it
04:07 - prints three once again and this Loop
04:11 - happens until 10 is printed and then it
04:16 - goes to the loop once again and sees
04:19 - okay now I is equal to 11 which is not
04:23 - fulfilling this condition I is less than
04:25 - or equal to 10 so I'm not going to print
04:29 - this and I'm going to break the for Loop
04:31 - and I'm going to go out of the loop and
04:34 - return zero so this is printing this
04:39 - these values of I one by one until this
04:43 - condition is met okay
04:46 - now there is one more thing you can do
04:50 - with the the for Loop is to decrement
04:52 - the value it's not necessary that you
04:55 - need to increment the value every time
04:58 - and it's also not necess necessary to
05:00 - incre increase the value by one you can
05:04 - increase the value by two or you can
05:06 - initialize the value by something else
05:09 - so let's see let's initialize I by some
05:14 - other value for example six and I will
05:18 - say the condition would be I is less
05:21 - than or equal to 60 for example and I
05:24 - will
05:25 - increase this I by five so I will write
05:29 - I
05:30 - + equal
05:33 - to 5 that means increment the value of
05:39 - uh I by five and assign
05:42 - it to I okay so once again when I build
05:47 - my program and run it you can see it's
05:51 - showing me six for the first time and
05:54 - increase this six by five so 6 + 5 is 11
06:01 - and then it sees the condition
06:03 - okay 11 is less than 60 so I'm going to
06:07 - increase it five once
06:09 - again
06:11 - then 16 is less than 60 so I'm going to
06:15 - increase it by 51 again so in this way
06:19 - you can initialize your I by any value
06:23 - and you can increment this I by any
06:25 - value and you can give any condition uh
06:30 - which can be equal to equal to or which
06:32 - can be less than or greater than or
06:34 - whatever
06:36 - Valu the second thing is you can
06:39 - decrement the value of I also so let me
06:42 - show you this example also so for
06:44 - example I
06:45 - initialize um I is equal to 10 and I
06:51 - want that I
06:54 - should print until I is greater than
07:00 - or equal to
07:02 - 1 equal to 1 okay and I will decrement I
07:08 - by one every time so I will say minus
07:10 - minus and this minus is just
07:16 - like I is equal to i - 1 okay so this
07:23 - like I is is just like you minus the
07:27 - value of I by 1 right
07:30 - so now what will happen let's see let's
07:33 - build the program and run it and you can
07:36 - see this time I starts from 10 because
07:39 - we initialize the value of i as 10 so it
07:43 - prints 10 and it goes to l once again
07:46 - and it sees okay I is equal to 9 this
07:49 - time because we minus 10 by 1 which is 9
07:54 - so I is equal to 9 which is still
07:56 - greater than or equal to 1 so I will
07:58 - print it once again nine and once again
08:01 - this Loop will happen and happen until
08:03 - one is reached and the condition will be
08:07 - false then right so in this way you can
08:10 - use for Loop in C++ I hope you have
08:13 - enjoyed this video please RIT comment
08:15 - and subscribe and bye for now

Cleaned transcript:

hello guys in the last video I have shown you how to use switch cases in C++ now in this video I'm going to talk to you about loops and I'm going to show you how to use for Loop in C++ that's the most basic uh type of Loop in C++ so let's see how we can uh declare for Loop and how we can use for Loop so for the Declaration of for Loop uh the Declaration syntax looks like this so what you uh do is You' write four and just give these two parentheses and this four takes three parameter first is the initialization and then it is separated by semicolon second is the condition and third is the increment okay and in this curly bra you provide the code you want to execute according to the condition which is met in the loop so let's take an example I'm going to declare a loop so I will write here four and I will give these two brackets and I will give these two curly braces which is the basic syntax of for now I'm going to declare the initialization for so for example I will take integer in I is equal to 1 then I will separate it by semicolon then I will give the condition so for example I want to give the condition Loop till my condition reaches 10 for example so I is less than or equal to 10 okay and then the third condition is the increment so I will give semicolon once again and I will get should say i++ so this means that we are incrementing I by One this is just like saying that I is equal to I + 1 okay so this is this and this is same so we are incrementing I by one every time it sees the condition oh it's less than 10 still it increase the I by one now we will output our variable I so I will say C out I and once again endl okay now I will build the program and let's see what happens I will run the program and you see what happens here is it's looping so it goes to the for Loop and it initializes I is equal to 1 and it's it goes into the execution of for Loop and it prints one and once again it goes back to for Loop and increment it by one right so what's happening I is equal to 1 it prints it it increments it by one goes to the loop once again now this time I is equal to 2 and it sees condition Which is less than 10 2 is less than 10 then it prints two once again and increment I by 1 which is I is equal to 3 goes to the condition condition once again and it sees yes um I equal to 3 is less than 10 so it prints three once again and this Loop happens until 10 is printed and then it goes to the loop once again and sees okay now I is equal to 11 which is not fulfilling this condition I is less than or equal to 10 so I'm not going to print this and I'm going to break the for Loop and I'm going to go out of the loop and return zero so this is printing this these values of I one by one until this condition is met okay now there is one more thing you can do with the the for Loop is to decrement the value it's not necessary that you need to increment the value every time and it's also not necess necessary to incre increase the value by one you can increase the value by two or you can initialize the value by something else so let's see let's initialize I by some other value for example six and I will say the condition would be I is less than or equal to 60 for example and I will increase this I by five so I will write I + equal to 5 that means increment the value of uh I by five and assign it to I okay so once again when I build my program and run it you can see it's showing me six for the first time and increase this six by five so 6 + 5 is 11 and then it sees the condition okay 11 is less than 60 so I'm going to increase it five once again then 16 is less than 60 so I'm going to increase it by 51 again so in this way you can initialize your I by any value and you can increment this I by any value and you can give any condition uh which can be equal to equal to or which can be less than or greater than or whatever Valu the second thing is you can decrement the value of I also so let me show you this example also so for example I initialize um I is equal to 10 and I want that I should print until I is greater than or equal to 1 equal to 1 okay and I will decrement I by one every time so I will say minus minus and this minus is just like I is equal to i 1 okay so this like I is is just like you minus the value of I by 1 right so now what will happen let's see let's build the program and run it and you can see this time I starts from 10 because we initialize the value of i as 10 so it prints 10 and it goes to l once again and it sees okay I is equal to 9 this time because we minus 10 by 1 which is 9 so I is equal to 9 which is still greater than or equal to 1 so I will print it once again nine and once again this Loop will happen and happen until one is reached and the condition will be false then right so in this way you can use for Loop in C++ I hope you have enjoyed this video please RIT comment and subscribe and bye for now
