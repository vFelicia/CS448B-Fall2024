With timestamps:

00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel this is John from
00:03 - programming knowledge and in this
00:05 - tutorial guys I want to talk to you guys
00:07 - about variables in C now when we're
00:11 - using c programming language a lot of
00:13 - times we're going to be dealing with
00:15 - data so there's gonna be different data
00:17 - values or different information that
00:20 - we're gonna want to keep trap and use
00:23 - inside of our programs and sometimes it
00:26 - can be difficult to maintain and keep
00:28 - track of all that data and that's where
00:31 - variables come in
00:32 - so basically variable is essentially a
00:35 - container where we can store different
00:38 - pieces of information so different data
00:41 - values we could sort of things like
00:43 - numbers or texts or characters and these
00:47 - variables make it a lot easier for us to
00:49 - keep track and manage all the data in
00:52 - our C program so I'm going to show you
00:54 - guys basically how variables work or how
00:57 - variables can be useful and how we can
01:00 - use them in our C programs but down here
01:04 - I have a very basic program so I'm
01:07 - basically just printing out a little
01:10 - story
01:10 - so it says there once was a man named
01:13 - Mike he was 50 years old he really liked
01:17 - the name Mike but did not like being 50
01:22 - so this is a simple program we're just
01:24 - printing out a bunch of different lines
01:26 - of text and then when I run this program
01:31 - you'll see we print out the actual story
01:34 - so over here we have the actual story
01:38 - and this is great ok but let's say that
01:43 - I'm reading through my story and I'm
01:45 - reading through my program and I'm
01:47 - thinking to myself hmmm I think I want
01:51 - to change the character's name so
01:53 - instead of calling the character Mike
01:55 - why don't we call him like John in order
01:58 - to make that change so I'm gonna have to
02:01 - look through my entire program and find
02:03 - every place where we mentioned the
02:06 - character's name so right here is one so
02:11 - change it to join
02:16 - and remember keep looking here and there
02:21 - is another one so we'll change this to
02:26 - Jen right so I had to manually go
02:28 - through and change every instance of the
02:30 - character's name to John so let's say
02:34 - that's okay that's that sounds pretty
02:36 - good but maybe I'm thinking I want to
02:39 - make the character a little bit younger
02:42 - so instead of like 50 years old so let's
02:48 - change it to maybe thirty thirty years
02:52 - old instead of fifty years old okay
02:54 - we're going to change the hit here he
02:57 - was thirty years old and also in here
03:01 - the last line of our story
03:04 - so that's thirty instead of fifty if I
03:09 - was to run this program then all that
03:11 - information will be updated and will now
03:14 - have new story ok so here's the problem
03:19 - though I'm dealing with a very short
03:21 - story so I mean this is four lines we
03:24 - only mentioned the character's age and
03:26 - name only twice but imagine if I have if
03:31 - I was writing out a huge C program that
03:34 - had hundreds of lines in the story so
03:38 - story had hundreds of lines and maybe we
03:40 - mention a character's name hundreds of
03:43 - times never mentioned their age hundreds
03:46 - of times and if we wanted to change the
03:49 - characters HR name I would have to go
03:53 - through and manually change it every
03:56 - single location and that would take
03:58 - forever and it would be a huge job for
04:02 - us to change all the instances of the
04:04 - name of our character and also for our
04:07 - further age of our character so
04:10 - basically that's not a good way for us
04:12 - to manage and maintain the data for our
04:13 - programs okay basically you have two
04:16 - pieces of data that we're working with
04:18 - and consistently in this program the
04:21 - character is age and the character's
04:23 - name
04:25 - what I want to show you guys now is how
04:27 - we can use variables to better keep
04:29 - track I mean manage this pieces of
04:32 - information so remember a variable is
04:34 - basically just a container where we can
04:37 - store some data so I want to create two
04:40 - variables which will store the
04:41 - character's name and the character's age
04:43 - and I'll show you guys how this can make
04:47 - our program a lot easier to manage up
04:50 - here before the print statement I'm just
04:55 - going to make a new line and I'm going
04:58 - I'm gonna come over here and I want to
05:00 - create a variable now whenever we create
05:02 - a variable in C we have to be see a
05:04 - couple of couple pieces of information
05:06 - the first thing we have to tell C is
05:08 - that what type of information we want
05:11 - this variable to store now I'm going to
05:14 - get into the different data types that
05:16 - we can represent and see more in the
05:18 - next tutorial but for now just know that
05:20 - there's a bunch of different types of
05:22 - data that we can store and C can see we
05:26 - can sort things like numbers characters
05:29 - we can store text we can start decimal
05:31 - numbers all sort of all sorts of stuff
05:33 - like that
05:34 - in our case I'm going to store the
05:36 - character's name and the character's age
05:40 - basically just a collection of
05:42 - characters so in order to create this
05:43 - variable the first thing that I have to
05:45 - see that I want to create a variable
05:49 - that's gonna store some characters and
05:52 - to do that I'm just gonna type out
05:55 - char here just like that and basically
05:59 - telling C we're gonna store characters
06:02 - and instead inside of this variable so
06:05 - after we type outright I want to type
06:09 - the name of the variable that I want to
06:11 - create remember that a variable is a
06:13 - container and it's a good idea for us to
06:16 - give these containers descriptive names
06:19 - and those names will basically let us
06:22 - know what that variable is in storing
06:25 - inside of it so I'm gonna call this
06:27 - character name now what I want to do is
06:34 - basically I want to store multiple
06:36 - characters so over here we're telling
06:38 - see that I want to store a character but
06:42 - in C we can also store instead of just
06:45 - like said of just storing like one
06:48 - single character we can store a bunch of
06:50 - characters and that would be kind of
06:53 - like you know name so there's like four
06:57 - characters in here so in order for us to
07:00 - store a bunch of characters inside of
07:02 - this particular variable after we type
07:05 - the character variable name we're gonna
07:08 - have to make an open and close square
07:09 - brackets and that's gonna tell the C
07:13 - that we want to store a bunch of
07:15 - characters inside of this part
07:17 - particular variable so char character
07:21 - name open and close square brackets and
07:24 - I'm gonna set this equal to something so
07:27 - I'm essentially assigning a value to
07:28 - this particular variable and I'm just
07:31 - gonna make an open close quotation marks
07:34 - so equals and then quotation marks and
07:37 - inside of here we're gonna type out the
07:39 - value that we want to store so in my
07:42 - case I'm just gonna store the
07:43 - character's name which is John and then
07:47 - as always in C we're gonna have to end
07:49 - this off with a semicolon
07:51 - so all right basically what I did here
07:56 - was I created a variable and I told see
07:59 - that I want to store in the variable I
08:02 - wanted to store a character and I give
08:04 - this variable a name character name and
08:08 - then I use this open and close square
08:11 - brackets to tell see that I wanted to
08:15 - store a bunch of characters not just one
08:20 - now what we can do is we can make
08:22 - another variable to store the characters
08:24 - age so in this case we're gonna do
08:29 - something similar but we're gonna want
08:31 - to store a number and there's a bunch of
08:33 - different ways that we can store numbers
08:35 - in C but for our purposes we're a
08:38 - starting age so we're gonna use
08:40 - something called an integer and an
08:44 - integer is basically just a whole number
08:46 - so I'm just gonna type out int here in
08:49 - and that basically stands for integer
08:53 - and now we're gonna give this name so
08:57 - I'm gonna call this character age and
09:04 - I'm gonna set this equal to a number so
09:07 - in our story the age is 35 so I'm just
09:10 - gonna type out 35 there and now we can
09:14 - again and this off with a semicolon
09:18 - so I have here two variables this one
09:21 - starting the character name and this one
09:26 - is for our age now the question becomes
09:30 - how we can use this inside our program
09:33 - well basically what we can do is we can
09:37 - print them out alongside with with this
09:39 - text and we can actually use this printf
09:42 - function in order to do that so I'm
09:45 - gonna show you guys how to do this and
09:46 - then we're gonna talk about it so
09:48 - basically I'm gonna go over here and as
09:51 - you can see we have here the character
09:54 - name which is Shawn okay so we can
09:57 - replace this with percent s so percent s
10:01 - is basically a placeholder so after this
10:06 - we're going to add comma here and then
10:10 - we're gonna add the character name
10:13 - variable so basically we're telling see
10:17 - that we're going to print this
10:20 - particular tax and percent s is just a
10:23 - placeholder that will automatically be
10:27 - replaced by the value of our variable
10:30 - character name so we have the first
10:35 - instance of the character name and then
10:39 - right here we also have we also need to
10:44 - replace this with percent s and an odd
10:47 - comma and then character name because we
10:50 - want to replace that with our value of
10:53 - our variable character name which is
10:54 - giant and of course like here we also
11:00 - need to replace this with the
11:05 - the actual value of our character age so
11:08 - what we can do here is just we can add
11:11 - percent B so % D is also a placeholder
11:15 - for printing the integer so this is like
11:21 - teacher integer character h plus 35 and
11:25 - then % d and then we're gonna add comma
11:29 - here so and then character h the same
11:35 - thing here character age and then we're
11:40 - going to replace this with percent d
11:44 - placeholder for integer so if we try to
11:46 - run our program so let's do that build
11:49 - and run and we will we should have d so
11:57 - we have a process return so I think we
11:59 - have something or we have an error with
12:03 - our program so let's try to debug this
12:06 - so warning format s expects per ad
12:10 - argument type of carton but argument 2
12:15 - has type in that's basically because we
12:18 - didn't add the square brackets there so
12:22 - build and run so there you go we have
12:27 - now the output there one other ones was
12:30 - a man named John he was 35 years old who
12:35 - you like the name John but did not like
12:36 - being 35 and of course every time you
12:39 - can if we want to change something with
12:41 - this story so for example itself John
12:44 - really will say Michael and we can
12:49 - change also the age like 40 and then see
12:58 - that and then build and run so as you
13:02 - can see here we now have the updated
13:05 - story so Michael and then 40 years old
13:09 - so the good thing about variable is that
13:11 - we can reuse this into our entire
13:14 - program so we have every time we have
13:18 - changes here
13:18 - all the variables or all the value
13:21 - should be reflected in our the rest on
13:26 - our program so in in our case we have
13:30 - updated all the values for our story
13:33 - okay so I think that's it for this
13:36 - tutorial guys and in the next video
13:37 - we're going to continue working on with
13:39 - variables because there's a lot to
13:41 - discuss with variables and it is just
13:44 - the beginning so see you in the next
13:47 - video

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel this is John from programming knowledge and in this tutorial guys I want to talk to you guys about variables in C now when we're using c programming language a lot of times we're going to be dealing with data so there's gonna be different data values or different information that we're gonna want to keep trap and use inside of our programs and sometimes it can be difficult to maintain and keep track of all that data and that's where variables come in so basically variable is essentially a container where we can store different pieces of information so different data values we could sort of things like numbers or texts or characters and these variables make it a lot easier for us to keep track and manage all the data in our C program so I'm going to show you guys basically how variables work or how variables can be useful and how we can use them in our C programs but down here I have a very basic program so I'm basically just printing out a little story so it says there once was a man named Mike he was 50 years old he really liked the name Mike but did not like being 50 so this is a simple program we're just printing out a bunch of different lines of text and then when I run this program you'll see we print out the actual story so over here we have the actual story and this is great ok but let's say that I'm reading through my story and I'm reading through my program and I'm thinking to myself hmmm I think I want to change the character's name so instead of calling the character Mike why don't we call him like John in order to make that change so I'm gonna have to look through my entire program and find every place where we mentioned the character's name so right here is one so change it to join and remember keep looking here and there is another one so we'll change this to Jen right so I had to manually go through and change every instance of the character's name to John so let's say that's okay that's that sounds pretty good but maybe I'm thinking I want to make the character a little bit younger so instead of like 50 years old so let's change it to maybe thirty thirty years old instead of fifty years old okay we're going to change the hit here he was thirty years old and also in here the last line of our story so that's thirty instead of fifty if I was to run this program then all that information will be updated and will now have new story ok so here's the problem though I'm dealing with a very short story so I mean this is four lines we only mentioned the character's age and name only twice but imagine if I have if I was writing out a huge C program that had hundreds of lines in the story so story had hundreds of lines and maybe we mention a character's name hundreds of times never mentioned their age hundreds of times and if we wanted to change the characters HR name I would have to go through and manually change it every single location and that would take forever and it would be a huge job for us to change all the instances of the name of our character and also for our further age of our character so basically that's not a good way for us to manage and maintain the data for our programs okay basically you have two pieces of data that we're working with and consistently in this program the character is age and the character's name what I want to show you guys now is how we can use variables to better keep track I mean manage this pieces of information so remember a variable is basically just a container where we can store some data so I want to create two variables which will store the character's name and the character's age and I'll show you guys how this can make our program a lot easier to manage up here before the print statement I'm just going to make a new line and I'm going I'm gonna come over here and I want to create a variable now whenever we create a variable in C we have to be see a couple of couple pieces of information the first thing we have to tell C is that what type of information we want this variable to store now I'm going to get into the different data types that we can represent and see more in the next tutorial but for now just know that there's a bunch of different types of data that we can store and C can see we can sort things like numbers characters we can store text we can start decimal numbers all sort of all sorts of stuff like that in our case I'm going to store the character's name and the character's age basically just a collection of characters so in order to create this variable the first thing that I have to see that I want to create a variable that's gonna store some characters and to do that I'm just gonna type out char here just like that and basically telling C we're gonna store characters and instead inside of this variable so after we type outright I want to type the name of the variable that I want to create remember that a variable is a container and it's a good idea for us to give these containers descriptive names and those names will basically let us know what that variable is in storing inside of it so I'm gonna call this character name now what I want to do is basically I want to store multiple characters so over here we're telling see that I want to store a character but in C we can also store instead of just like said of just storing like one single character we can store a bunch of characters and that would be kind of like you know name so there's like four characters in here so in order for us to store a bunch of characters inside of this particular variable after we type the character variable name we're gonna have to make an open and close square brackets and that's gonna tell the C that we want to store a bunch of characters inside of this part particular variable so char character name open and close square brackets and I'm gonna set this equal to something so I'm essentially assigning a value to this particular variable and I'm just gonna make an open close quotation marks so equals and then quotation marks and inside of here we're gonna type out the value that we want to store so in my case I'm just gonna store the character's name which is John and then as always in C we're gonna have to end this off with a semicolon so all right basically what I did here was I created a variable and I told see that I want to store in the variable I wanted to store a character and I give this variable a name character name and then I use this open and close square brackets to tell see that I wanted to store a bunch of characters not just one now what we can do is we can make another variable to store the characters age so in this case we're gonna do something similar but we're gonna want to store a number and there's a bunch of different ways that we can store numbers in C but for our purposes we're a starting age so we're gonna use something called an integer and an integer is basically just a whole number so I'm just gonna type out int here in and that basically stands for integer and now we're gonna give this name so I'm gonna call this character age and I'm gonna set this equal to a number so in our story the age is 35 so I'm just gonna type out 35 there and now we can again and this off with a semicolon so I have here two variables this one starting the character name and this one is for our age now the question becomes how we can use this inside our program well basically what we can do is we can print them out alongside with with this text and we can actually use this printf function in order to do that so I'm gonna show you guys how to do this and then we're gonna talk about it so basically I'm gonna go over here and as you can see we have here the character name which is Shawn okay so we can replace this with percent s so percent s is basically a placeholder so after this we're going to add comma here and then we're gonna add the character name variable so basically we're telling see that we're going to print this particular tax and percent s is just a placeholder that will automatically be replaced by the value of our variable character name so we have the first instance of the character name and then right here we also have we also need to replace this with percent s and an odd comma and then character name because we want to replace that with our value of our variable character name which is giant and of course like here we also need to replace this with the the actual value of our character age so what we can do here is just we can add percent B so % D is also a placeholder for printing the integer so this is like teacher integer character h plus 35 and then % d and then we're gonna add comma here so and then character h the same thing here character age and then we're going to replace this with percent d placeholder for integer so if we try to run our program so let's do that build and run and we will we should have d so we have a process return so I think we have something or we have an error with our program so let's try to debug this so warning format s expects per ad argument type of carton but argument 2 has type in that's basically because we didn't add the square brackets there so build and run so there you go we have now the output there one other ones was a man named John he was 35 years old who you like the name John but did not like being 35 and of course every time you can if we want to change something with this story so for example itself John really will say Michael and we can change also the age like 40 and then see that and then build and run so as you can see here we now have the updated story so Michael and then 40 years old so the good thing about variable is that we can reuse this into our entire program so we have every time we have changes here all the variables or all the value should be reflected in our the rest on our program so in in our case we have updated all the values for our story okay so I think that's it for this tutorial guys and in the next video we're going to continue working on with variables because there's a lot to discuss with variables and it is just the beginning so see you in the next video
