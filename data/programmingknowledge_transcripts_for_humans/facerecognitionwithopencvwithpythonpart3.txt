With timestamps:

00:00 - so you guys welcome back to the new
00:01 - video and this is the third part of the
00:03 - series
00:04 - so in this video we're gonna see that
00:07 - like
00:07 - what i what is this function doing and
00:10 - what is the rest of the code doing okay
00:12 - so let me just explain
00:14 - that what actually this function is
00:15 - returning us and what type of
00:17 - coordinates are they
00:18 - okay so just let me open my notepad
00:24 - okay so this function like this function
00:27 - so let me just select a brush here
00:31 - okay okay so just function like space
00:34 - cascade dot
00:35 - detect multiscale which is uh this
00:38 - variable faces just means that this
00:41 - basis is a list and this list is storing
00:45 - the contents of the face
00:46 - so if i draw here like if i draw pieces
00:50 - like like if this is the person here
00:55 - like if this is person one like person
00:57 - one and if this is the person two
01:01 - okay so these both are faces okay
01:05 - so these are the top coordinates like x
01:08 - y
01:08 - are the top coordinates of the faces and
01:10 - this is the width
01:12 - this is the height okay so a box
01:16 - it returns like this detect multi scale
01:19 - returns a block to you like it returns a
01:22 - box
01:23 - in which we have the top left and
01:27 - we have the top left coordinates of x y
01:30 - and
01:30 - the height is h and the width
01:34 - is w okay so this function just returns
01:39 - x this function returns x
01:42 - y w and z so the w and h
01:47 - x y w and h okay so these are the
01:49 - coordinates and by this
01:51 - w and h we can just calculate it what
01:53 - are what can be these coordinates like
01:55 - this can be like x plus h and y plus w
01:59 - right like you can just calculate it by
02:03 - adding w
02:03 - and h in x and y so we can get this
02:06 - these and this coordinate also
02:08 - so this function is just returning as a
02:10 - coordinates so that
02:12 - we can just uh make a box into the field
02:16 - around the face okay that said about
02:19 - this
02:19 - let us move forward okay so now let us
02:22 - see that
02:23 - the further code so this line like faces
02:26 - is sorted faces key lambda x2 into
02:30 - x3 so what is it is doing so it is just
02:34 - arranging your faces like if you have
02:36 - multiple faces in the video field
02:38 - like if i show my face my sister's face
02:40 - my brother's face
02:41 - my parents face my every my friend's
02:44 - face so
02:45 - multiple number of faces will come right
02:47 - and we have to sort that faces in
02:49 - increasing or decreasing order as per
02:50 - our need
02:52 - okay so what we are doing here is we are
02:55 - passing the function name sorted and we
02:57 - are just using
02:58 - using a laptop function okay so in this
03:01 - uh this line mean that we are passing
03:04 - our faces list here
03:05 - like in this faces list
03:09 - we have uh x y h and w coordinates
03:13 - uh numbers okay and we pass this list
03:16 - here
03:17 - and we are just calculating so this
03:20 - means that
03:23 - okay so like faces lists like if we have
03:26 - faces
03:27 - then faces contains a list of
03:30 - x y w and
03:33 - h okay so it is zero index this is one
03:38 - index this is two index is three index
03:40 - okay so the area of image is built area
03:43 - of any image is
03:49 - [Music]
03:58 - okay this is width into height and this
04:00 - is basically area
04:02 - and the image which have larger area
04:05 - will obviously come first if we are
04:07 - sorting it in a decreasing order
04:09 - and if the area is less then it will
04:12 - come first in
04:13 - the sorted order if we are sorting it in
04:15 - an ascending order right
04:17 - so this so in this here so
04:20 - lambda x is just representing our faces
04:24 - and we are just using lambda function
04:27 - here if you don't like what is lambda
04:28 - function so let like
04:30 - just get a quick overview by seeing the
04:32 - documents
04:33 - documentations okay so x is representing
04:37 - this spaces
04:38 - and x2 into x3 basically is area of
04:41 - image
04:42 - area of the face for the area of the box
04:44 - which hasn't been
04:46 - okay and reverse is equal to true means
04:48 - which we are
04:49 - just arranging this in a descending
04:52 - order like we are sorting it in a
04:53 - descending order
04:54 - right so and these like if we are having
04:58 - faces like this first faces this second
05:01 - phase is this
05:02 - third phase is like small face then big
05:05 - face
05:05 - and small place and these all faces will
05:07 - be sorted in a descending order like
05:09 - first become
05:10 - big and small and then small this one
05:13 - okay so in this way we sort our faces
05:17 - and every data will be stored in this
05:22 - in this variable okay so i hope that you
05:25 - get a clear understanding of what we are
05:27 - actually doing here
05:28 - and now just forget this line
05:31 - as of now so now we are just we will
05:34 - just hydrate
05:35 - every and you'll just store every face
05:39 - in our data
05:39 - [Music]
05:41 - so now we are we are just i'm trending
05:43 - in our faces a
05:44 - so uh let us see that we are starting a
05:48 - for loop here
05:49 - and four log is going to end okay
05:52 - and this x y w h is are the coordinates
05:56 - of the face so face and faces means that
06:00 - it is like this is phase one this is
06:03 - phase two this is phase four
06:05 - like these are the faces and the
06:08 - coordinates of each and every face
06:10 - will come in this x y w and h variables
06:13 - okay as we iterate over every faces then
06:16 - the
06:16 - uh coordinates of every phase will come
06:19 - in x y w and h
06:21 - okay and this offset simply means that
06:24 - we are providing a padding
06:25 - so if you have done html before before
06:28 - you might know that what is padding
06:30 - which is what is margin
06:31 - so padding is basically uh
06:39 - so if we are having our face here this
06:41 - is our face then this gap
06:43 - is basically padding okay so this gap is
06:46 - starting
06:48 - sorry about the handwriting uh actually
06:50 - pen is quite bold here
06:52 - okay so if we are having a face here
06:54 - like
06:56 - and this is covered in a box then this
06:59 - box
07:00 - is having a padding of five okay
07:03 - so this length is basically five or five
07:05 - carry
07:06 - okay so we have just given the padding
07:09 - of five to like
07:10 - uh show a clear user interface okay
07:14 - so as before we are just having this uh
07:18 - this box as outer box which is which we
07:21 - are having the coordinates x y and
07:24 - everything
07:24 - so now here we are just extracting the
07:27 - face section
07:28 - so this line is basically extracting the
07:30 - section of a face
07:32 - so it is subtracting the offset so
07:35 - basically it is subtracting the padding
07:38 - and it is just uh calculating a
07:41 - particular section of a face
07:43 - initially there was padding and now we
07:44 - are discovering the particular section
07:46 - of the face
07:47 - okay and after that like you will see
07:50 - you can understand this easily like
07:52 - we're just subtracting offset
07:54 - from length from top and bottom
07:58 - and subtracting from left and right okay
08:00 - we are just subtracting our padding and
08:03 - just getting the section of face by this
08:05 - line okay just
08:06 - go through it once and by this face
08:09 - selection we are just resizing my face
08:11 - to 100 cross 100 image
08:14 - okay so i hope that you understand it
08:17 - and now this skip so this tip just means
08:21 - that
08:21 - when we start recording our face then
08:24 - after every second i will skip after
08:27 - every second or
08:28 - after every iteration this tip will
08:31 - increment
08:32 - okay like we have recorded one first
08:34 - phase second phase third phase
08:36 - like a particular uh time frame of the
08:39 - face
08:40 - is being recorded by this script by the
08:42 - script
08:44 - okay so after every tense phase like
08:47 - when i started the recording when i
08:48 - started recording my face
08:50 - so i recorded at first second second
08:52 - second
08:53 - third second fourth second i'm recording
08:56 - my face at
08:56 - every second okay so when i read the
08:59 - 10th second of
09:00 - camera i will just do a skip operation
09:04 - okay and after every 10th phase
09:08 - i will be recording this 10th face into
09:10 - my array
09:12 - okay i'll be recording each tenth
09:14 - hydrated phase
09:16 - in my array so that i don't have many
09:19 - faces in my area and i have a good
09:24 - recognize later so as you can see that
09:28 - like after each 10th 10th iteration
09:32 - i am just appending my face into the
09:34 - phase data
09:35 - and sprinting the length of face that's
09:38 - it and
09:38 - after and after that we will do in the
09:41 - next video
09:42 - before that just go through everything
09:43 - which i've checked
09:45 - so let's meet in the next video till

Cleaned transcript:

so you guys welcome back to the new video and this is the third part of the series so in this video we're gonna see that like what i what is this function doing and what is the rest of the code doing okay so let me just explain that what actually this function is returning us and what type of coordinates are they okay so just let me open my notepad okay so this function like this function so let me just select a brush here okay okay so just function like space cascade dot detect multiscale which is uh this variable faces just means that this basis is a list and this list is storing the contents of the face so if i draw here like if i draw pieces like like if this is the person here like if this is person one like person one and if this is the person two okay so these both are faces okay so these are the top coordinates like x y are the top coordinates of the faces and this is the width this is the height okay so a box it returns like this detect multi scale returns a block to you like it returns a box in which we have the top left and we have the top left coordinates of x y and the height is h and the width is w okay so this function just returns x this function returns x y w and z so the w and h x y w and h okay so these are the coordinates and by this w and h we can just calculate it what are what can be these coordinates like this can be like x plus h and y plus w right like you can just calculate it by adding w and h in x and y so we can get this these and this coordinate also so this function is just returning as a coordinates so that we can just uh make a box into the field around the face okay that said about this let us move forward okay so now let us see that the further code so this line like faces is sorted faces key lambda x2 into x3 so what is it is doing so it is just arranging your faces like if you have multiple faces in the video field like if i show my face my sister's face my brother's face my parents face my every my friend's face so multiple number of faces will come right and we have to sort that faces in increasing or decreasing order as per our need okay so what we are doing here is we are passing the function name sorted and we are just using using a laptop function okay so in this uh this line mean that we are passing our faces list here like in this faces list we have uh x y h and w coordinates uh numbers okay and we pass this list here and we are just calculating so this means that okay so like faces lists like if we have faces then faces contains a list of x y w and h okay so it is zero index this is one index this is two index is three index okay so the area of image is built area of any image is okay this is width into height and this is basically area and the image which have larger area will obviously come first if we are sorting it in a decreasing order and if the area is less then it will come first in the sorted order if we are sorting it in an ascending order right so this so in this here so lambda x is just representing our faces and we are just using lambda function here if you don't like what is lambda function so let like just get a quick overview by seeing the documents documentations okay so x is representing this spaces and x2 into x3 basically is area of image area of the face for the area of the box which hasn't been okay and reverse is equal to true means which we are just arranging this in a descending order like we are sorting it in a descending order right so and these like if we are having faces like this first faces this second phase is this third phase is like small face then big face and small place and these all faces will be sorted in a descending order like first become big and small and then small this one okay so in this way we sort our faces and every data will be stored in this in this variable okay so i hope that you get a clear understanding of what we are actually doing here and now just forget this line as of now so now we are just we will just hydrate every and you'll just store every face in our data so now we are we are just i'm trending in our faces a so uh let us see that we are starting a for loop here and four log is going to end okay and this x y w h is are the coordinates of the face so face and faces means that it is like this is phase one this is phase two this is phase four like these are the faces and the coordinates of each and every face will come in this x y w and h variables okay as we iterate over every faces then the uh coordinates of every phase will come in x y w and h okay and this offset simply means that we are providing a padding so if you have done html before before you might know that what is padding which is what is margin so padding is basically uh so if we are having our face here this is our face then this gap is basically padding okay so this gap is starting sorry about the handwriting uh actually pen is quite bold here okay so if we are having a face here like and this is covered in a box then this box is having a padding of five okay so this length is basically five or five carry okay so we have just given the padding of five to like uh show a clear user interface okay so as before we are just having this uh this box as outer box which is which we are having the coordinates x y and everything so now here we are just extracting the face section so this line is basically extracting the section of a face so it is subtracting the offset so basically it is subtracting the padding and it is just uh calculating a particular section of a face initially there was padding and now we are discovering the particular section of the face okay and after that like you will see you can understand this easily like we're just subtracting offset from length from top and bottom and subtracting from left and right okay we are just subtracting our padding and just getting the section of face by this line okay just go through it once and by this face selection we are just resizing my face to 100 cross 100 image okay so i hope that you understand it and now this skip so this tip just means that when we start recording our face then after every second i will skip after every second or after every iteration this tip will increment okay like we have recorded one first phase second phase third phase like a particular uh time frame of the face is being recorded by this script by the script okay so after every tense phase like when i started the recording when i started recording my face so i recorded at first second second second third second fourth second i'm recording my face at every second okay so when i read the 10th second of camera i will just do a skip operation okay and after every 10th phase i will be recording this 10th face into my array okay i'll be recording each tenth hydrated phase in my array so that i don't have many faces in my area and i have a good recognize later so as you can see that like after each 10th 10th iteration i am just appending my face into the phase data and sprinting the length of face that's it and after and after that we will do in the next video before that just go through everything which i've checked so let's meet in the next video till
