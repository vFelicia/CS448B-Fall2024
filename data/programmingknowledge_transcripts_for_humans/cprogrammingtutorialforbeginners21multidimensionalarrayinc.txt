With timestamps:

00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel and welcome to this
00:03 - video this is John from programming
00:05 - knowledge and in this video guys we're
00:07 - going to talk about multi-dimensional
00:08 - arrays in our C program so from the
00:13 - previous tutorial we have learned how to
00:14 - use the basic array so we have
00:18 - implemented one-dimensional array we
00:21 - trying to display the contents of an
00:25 - array by using the for loop and of
00:27 - course we declare and initialize one
00:30 - dimensional array from the previous
00:32 - tutorial now as I've said from this
00:34 - tutorial we're going to learn how to
00:36 - work with multi-dimensional array so
00:39 - basically against multi-dimensional
00:41 - array works like the same with the
00:44 - one-dimensional array but the difference
00:47 - is that it contains the array contains
00:50 - set of arrays source in C programming
00:53 - language it will allow us or it allows
00:57 - us to use multi-dimensional arrays and
00:59 - the declaration or multi-dimensional
01:02 - declaration for that is by using the
01:05 - type of force as I've said from the
01:08 - previous tutorial if you want to store
01:11 - multiple values you have to use a race
01:15 - and in order for you to declare an array
01:18 - you have to specify the type of that
01:21 - particular array so you have to specify
01:24 - the type and then of course the name of
01:27 - the array and then you have to specify
01:30 - the size here so for example size now
01:35 - this is good for one dimensional array
01:40 - so you have to specify the type the name
01:43 - and of course the size of your array now
01:47 - comes the multi-dimensional array or
01:50 - two-dimensional array so you could do it
01:52 - like this so size 2 and then this is the
01:57 - size 1 so this is how you declare
02:03 - multi-dimensional array or
02:04 - two-dimensional array inside our C
02:06 - program so the type of course you don't
02:09 - you know you don't want to forget that
02:11 - the size of or I mean
02:14 - type of the value that you want to save
02:17 - in this particular array so and then the
02:20 - name and then of course the size one and
02:24 - then the size two
02:27 - now if you want to create three
02:30 - dimensional array you could do it like
02:32 - this size - I'm in size three so you
02:38 - have square brackets for your size one
02:41 - square brackets for your size 2n square
02:44 - brackets for your size three so again
02:47 - this is how you can declare your
02:50 - multi-dimensional array but you know the
02:53 - simplest form of multi-dimensional array
02:55 - is by just specifying two sizes and
03:00 - basically against this this will
03:03 - represent the columns and rows of your
03:08 - array or multi-dimensional array because
03:11 - multi-dimensional array works like a
03:12 - table so size 1 will be your number of
03:17 - rows and the size 2 will represent the
03:23 - number of columns so let's try this
03:26 - let's try to declare and initialize
03:31 - multi-dimensional array so following
03:33 - this particular declaration type so the
03:37 - first thing is of course the type so in
03:40 - and then we could say here a or a
03:44 - variable name a this is the name of our
03:46 - array multi-dimensional array and then
03:49 - of course we can specify the size for
03:51 - our rows so for example 3 right there
03:55 - and then the size of our columns or
03:59 - number of columns so that's basically
04:02 - like 4 and then you could you know
04:05 - initialize this by using the equal sign
04:07 - and then open and close curly braces so
04:11 - in this inside these curly braces we
04:13 - could declare or initialize the values
04:17 - for our rows and columns as I've said
04:22 - multi-dimensional arrays are you know
04:25 - composed of
04:27 - a race right there okay
04:30 - so if you could add array of values
04:32 - right here this will represent the Row 1
04:37 - of our array so like for example 0 1 and
04:45 - then 2 and then 3
04:51 - okay so again this is for initializing
04:59 - the role visualizing the row index by 0
05:08 - okay so we could access this by using
05:12 - the index 0 okay and for example
05:18 - basically we declare it here like 3 so
05:23 - we need to add more arrays to this so
05:28 - open and close curly braces and another
05:34 - one to make it you know the length is 3
05:38 - so in here we could display or add 4 and
05:43 - then 5 and then 6 then 7 okay and then
05:50 - the other row will have 8 then 9 and
05:56 - then 10 and then 11 okay so basically we
06:01 - now have declared and initialized or
06:05 - multi-dimensional array so the 3 here
06:09 - represent this rows three rows and as
06:14 - you can see here we have declared four
06:16 - columns so it should count or I mean you
06:21 - know the column starting from this 0 4 8
06:24 - and then 1 5 9 2 6 10 3 7 11 so this
06:32 - will be for the the 8 and the 0
06:36 - represents the column 0
06:41 - and then one 5x9 represents column one
06:45 - so why this is representing column zero
06:49 - that's because our index is you know is
06:55 - zero base or your meaning it will start
06:58 - counting from zero so this will be the
07:02 - column zero column one column two and
07:04 - the column three okay and of course we
07:13 - could try to display the value of this
07:17 - we could access the values of our
07:19 - multi-dimensional arrays by using the
07:21 - indexes of the columns and rows so for
07:25 - example we want to change the value of
07:32 - the values that we could get from the
07:37 - row two and column three so basically
07:44 - the value of or the value that we could
07:47 - get from our array index two and three
07:52 - is 11 because this is the row two and
07:58 - this is column three
08:00 - so 0 1 2 3 so we get the 11 or the value
08:07 - 11 so if you want to change this to
08:10 - something like 8 so we could do it or
08:13 - assign a value to this by 8 so it should
08:16 - display 11 or I mean 8 instead of 11 so
08:20 - we could try that so printf and then % D
08:26 - which is the format format specifier for
08:29 - our in value so we could specify the
08:32 - array index 2 and then index 3 so if you
08:38 - try to compile and run our program we
08:42 - should get now the value 8 value 8 as
08:49 - you can see here that's because we
08:51 - already modified the value
08:55 - inside the array of index 2 & 3 so let's
09:00 - try to comment this and then compile and
09:04 - build our program and as you can see
09:08 - we're getting 11 that's because that's
09:10 - the initial value of the array index 2 &
09:14 - 3
09:15 - now we could use array or I mean like we
09:20 - could use loops here to access and
09:24 - change the value of our array or
09:28 - multi-dimensional array and of course
09:30 - because we're using multi-dimensional
09:31 - array we could also use nested loops to
09:35 - change and access the values of our
09:38 - array so say for example we could
09:42 - declare for loop here and this is for
09:46 - example int and then row equals 0 and
09:51 - then Rho is less than or yeah Rho is
09:58 - less than like for example 2 or 3 okay
10:09 - and then Rho plus plus so basically
10:12 - we're iterating from 0 1 & 2 because
10:18 - we're we only have like 3 rows but we
10:24 - starting we're starting from zero so
10:25 - that's make but making it like the value
10:30 - of our row should only be within 2 not 3
10:36 - that's why we're using single or I mean
10:39 - less than 3 right here and then of
10:43 - course we could make another loop for
10:46 - our column so int column and then equals
10:52 - to 0 and then column is less than 4 and
11:02 - then we're going to say here
11:09 - plus plus okay and then of course we
11:12 - could use this particular print a printf
11:15 - statement to display the values of our
11:20 - array so percent D we could use here the
11:26 - re name which is a because we're using
11:30 - the array name a so a and then we were
11:37 - going to specify here the columns and
11:39 - rows so percent D and then here percent
11:44 - D equals percent D so inside here we
11:51 - could specify the row and then the
11:56 - column and of course the value of that
12:01 - particular row and column okay so this
12:04 - will be a row and of course this will be
12:07 - column okay
12:09 - so again we're just trying to get the
12:11 - value of inside our array represented by
12:15 - this particular row and column okay so
12:18 - this these are the indexes the row and
12:21 - column so let's try to build or compile
12:24 - and run our program and we're getting
12:26 - this particular output right here but we
12:28 - don't want that let's try to add a
12:31 - backslash n to add a new line every
12:36 - execution so as you can see here we have
12:40 - all the values coming from our array so
12:43 - array and then we have index 0 0 so the
12:46 - value is 0 right there as you can see
12:50 - and then a 0 1 so the value is 1 is 0 2
12:58 - is 2 a 0 3 is 3 and a 1 and a 1 0 is 4
13:06 - and so on so that's how you can that's
13:10 - how you can use the multi-dimensional
13:13 - array inside our C program
13:15 - ok and I think that's clear enough how
13:19 - you could iterate and
13:21 - modify your multi-dimensional array by
13:25 - using four loops so again if you have
13:27 - questions you can ask questions in the
13:29 - comment section below
13:30 - and again once again guys thank you for
13:33 - watching and see you in the next video

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel and welcome to this video this is John from programming knowledge and in this video guys we're going to talk about multidimensional arrays in our C program so from the previous tutorial we have learned how to use the basic array so we have implemented onedimensional array we trying to display the contents of an array by using the for loop and of course we declare and initialize one dimensional array from the previous tutorial now as I've said from this tutorial we're going to learn how to work with multidimensional array so basically against multidimensional array works like the same with the onedimensional array but the difference is that it contains the array contains set of arrays source in C programming language it will allow us or it allows us to use multidimensional arrays and the declaration or multidimensional declaration for that is by using the type of force as I've said from the previous tutorial if you want to store multiple values you have to use a race and in order for you to declare an array you have to specify the type of that particular array so you have to specify the type and then of course the name of the array and then you have to specify the size here so for example size now this is good for one dimensional array so you have to specify the type the name and of course the size of your array now comes the multidimensional array or twodimensional array so you could do it like this so size 2 and then this is the size 1 so this is how you declare multidimensional array or twodimensional array inside our C program so the type of course you don't you know you don't want to forget that the size of or I mean type of the value that you want to save in this particular array so and then the name and then of course the size one and then the size two now if you want to create three dimensional array you could do it like this size I'm in size three so you have square brackets for your size one square brackets for your size 2n square brackets for your size three so again this is how you can declare your multidimensional array but you know the simplest form of multidimensional array is by just specifying two sizes and basically against this this will represent the columns and rows of your array or multidimensional array because multidimensional array works like a table so size 1 will be your number of rows and the size 2 will represent the number of columns so let's try this let's try to declare and initialize multidimensional array so following this particular declaration type so the first thing is of course the type so in and then we could say here a or a variable name a this is the name of our array multidimensional array and then of course we can specify the size for our rows so for example 3 right there and then the size of our columns or number of columns so that's basically like 4 and then you could you know initialize this by using the equal sign and then open and close curly braces so in this inside these curly braces we could declare or initialize the values for our rows and columns as I've said multidimensional arrays are you know composed of a race right there okay so if you could add array of values right here this will represent the Row 1 of our array so like for example 0 1 and then 2 and then 3 okay so again this is for initializing the role visualizing the row index by 0 okay so we could access this by using the index 0 okay and for example basically we declare it here like 3 so we need to add more arrays to this so open and close curly braces and another one to make it you know the length is 3 so in here we could display or add 4 and then 5 and then 6 then 7 okay and then the other row will have 8 then 9 and then 10 and then 11 okay so basically we now have declared and initialized or multidimensional array so the 3 here represent this rows three rows and as you can see here we have declared four columns so it should count or I mean you know the column starting from this 0 4 8 and then 1 5 9 2 6 10 3 7 11 so this will be for the the 8 and the 0 represents the column 0 and then one 5x9 represents column one so why this is representing column zero that's because our index is you know is zero base or your meaning it will start counting from zero so this will be the column zero column one column two and the column three okay and of course we could try to display the value of this we could access the values of our multidimensional arrays by using the indexes of the columns and rows so for example we want to change the value of the values that we could get from the row two and column three so basically the value of or the value that we could get from our array index two and three is 11 because this is the row two and this is column three so 0 1 2 3 so we get the 11 or the value 11 so if you want to change this to something like 8 so we could do it or assign a value to this by 8 so it should display 11 or I mean 8 instead of 11 so we could try that so printf and then % D which is the format format specifier for our in value so we could specify the array index 2 and then index 3 so if you try to compile and run our program we should get now the value 8 value 8 as you can see here that's because we already modified the value inside the array of index 2 & 3 so let's try to comment this and then compile and build our program and as you can see we're getting 11 that's because that's the initial value of the array index 2 & 3 now we could use array or I mean like we could use loops here to access and change the value of our array or multidimensional array and of course because we're using multidimensional array we could also use nested loops to change and access the values of our array so say for example we could declare for loop here and this is for example int and then row equals 0 and then Rho is less than or yeah Rho is less than like for example 2 or 3 okay and then Rho plus plus so basically we're iterating from 0 1 & 2 because we're we only have like 3 rows but we starting we're starting from zero so that's make but making it like the value of our row should only be within 2 not 3 that's why we're using single or I mean less than 3 right here and then of course we could make another loop for our column so int column and then equals to 0 and then column is less than 4 and then we're going to say here plus plus okay and then of course we could use this particular print a printf statement to display the values of our array so percent D we could use here the re name which is a because we're using the array name a so a and then we were going to specify here the columns and rows so percent D and then here percent D equals percent D so inside here we could specify the row and then the column and of course the value of that particular row and column okay so this will be a row and of course this will be column okay so again we're just trying to get the value of inside our array represented by this particular row and column okay so this these are the indexes the row and column so let's try to build or compile and run our program and we're getting this particular output right here but we don't want that let's try to add a backslash n to add a new line every execution so as you can see here we have all the values coming from our array so array and then we have index 0 0 so the value is 0 right there as you can see and then a 0 1 so the value is 1 is 0 2 is 2 a 0 3 is 3 and a 1 and a 1 0 is 4 and so on so that's how you can that's how you can use the multidimensional array inside our C program ok and I think that's clear enough how you could iterate and modify your multidimensional array by using four loops so again if you have questions you can ask questions in the comment section below and again once again guys thank you for watching and see you in the next video
