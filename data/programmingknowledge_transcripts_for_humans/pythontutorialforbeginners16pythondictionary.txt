With timestamps:

00:00 - hey guys welcome to the next video and
00:02 - Python tutorial for beginners in this
00:04 - video I'm going to show you how to use
00:06 - dictionaries in Python so first of all
00:09 - what are dictionaries so dictionaries in
00:12 - Python are like associative lists or a
00:15 - map now you can think of dictionary as a
00:20 - list of pairs so let me show you how to
00:24 - define a dictionary so you can define
00:26 - any variable name and to define a
00:29 - dictionary first of all you use these
00:31 - curly brackets and inside these curly
00:34 - brackets you provide a list of key value
00:37 - pairs so let's provide the list of key
00:41 - value pairs so first key is name and the
00:45 - name is max the second key is for
00:50 - example age and the age of Max is let's
00:55 - say 14 and we can also write here in
00:59 - which year he was born so we can just
01:02 - write here and he was born in 2004 for
01:07 - example and I'm going to press ENTER
01:09 - here and once again I'm going to just
01:12 - access the values inside this dictionary
01:15 - which is D and you can see our
01:17 - dictionary is created now so as I said
01:21 - dictionary is a list of key value pairs
01:24 - and all these values which you see here
01:27 - before this colon are called keys so
01:31 - name is a key here here is a key here
01:34 - and ade is a key here and whatever
01:37 - values you see after the colon are
01:41 - called values so max is a value 2004 is
01:45 - a value and 14 is a value and you can
01:48 - access the values from a dictionary
01:50 - based upon their keys so for example I
01:54 - have this dictionary D I can use the
01:57 - square bracket and the key name for
01:59 - example I want to get the name value I
02:03 - can just give the name key here and then
02:06 - press ENTER and it's going to return me
02:08 - the Associated value related to key name
02:12 - in the same way
02:13 - you can use other keys also for example
02:16 - age and I'm going to press ENTER and
02:19 - it's going to give me 14 which is the
02:21 - value so age is a key here and 14 is the
02:25 - value now what type of data types you
02:28 - can store in a dictionary so as key you
02:31 - can define any data type so let me
02:34 - define a new dictionary here and I'm
02:37 - going to give these curly brackets and
02:39 - as I said you can define a string value
02:43 - as key also you can define a number as a
02:46 - key for example 15 : 15 let's try the
02:51 - float values so I'm going to just write
02:53 - 15 0.1 : 15 0.1 this is also allowed in
02:59 - dictionary so you can use string values
03:02 - you can use integer values you can use
03:05 - decimal values as key and also let's try
03:09 - the boolean value so you can use the
03:13 - boolean values also as keys and you can
03:17 - use a couple also as a key so I'm going
03:20 - to just give a tuple two comma three and
03:23 - then I'm going to assign a value of five
03:26 - to this key and as values also you can
03:29 - use string values or decimal values or
03:32 - integer values or a boolean values or
03:34 - any kind of collection you can use as a
03:38 - value so I'm going to press ENTER here
03:40 - and now to access let's say we want to
03:42 - access the value for this key which is
03:46 - this tuple so I'm going to just enter
03:49 - this tuple inside these square brackets
03:51 - and it's going to return me five or I
03:55 - can just provide inside the square
03:57 - bracket true here and then press Enter
04:00 - it's going to return me the value which
04:04 - is associated with it which is true
04:06 - itself or I can just write here 15 and
04:10 - it's going to return me 15 in turn
04:12 - because 15 is associated with this value
04:15 - which is also 15 now what happens when a
04:18 - key is not there and we try to access it
04:21 - so I'm going to just access hundred from
04:24 - this a dictionary it's going to give us
04:27 - error that this key is not present in
04:30 - the dictionary you can also use the LAN
04:32 - method to find out the number of items
04:35 - in the dictionary and you can see it
04:37 - says five items are there in the
04:39 - dictionary II and we can count this item
04:42 - so this is one item two item three item
04:45 - for item and the fifth item is here or
04:48 - in other words you can also say that
04:51 - Elian function is going to return you
04:53 - the number of key value pairs which are
04:55 - stored in dictionary you can also use
04:59 - for example I'm going to use my D
05:02 - dictionary now and you can also use a
05:05 - method called get and then you can give
05:09 - the key name here in the parenthesis so
05:12 - let's say I want to get that value
05:14 - associated with the name key I can get
05:18 - it like this and it's going to give me
05:20 - the value associated with the name key
05:24 - you can also add a new key so this D
05:27 - dictionary you can see there are right
05:29 - now three key value pairs and I can add
05:32 - one more key value pair so to add a key
05:35 - value pair you need to just write D and
05:39 - in the square bracket you just need to
05:41 - give the name of the new key so I'm
05:44 - going to just write surname here which
05:47 - is the name of the new key in the
05:49 - dictionary D and then you need to give
05:51 - the value associated with that key so
05:55 - when I press ENTER and once again when I
05:58 - try to access the values inside the
06:01 - dictionary now you can see that surname
06:05 - is added to your dictionary now if you
06:08 - want to remove any key value pair from a
06:11 - list then you can use d dot pop method
06:15 - and then the name of the key which you
06:17 - want to remove let's say we want to
06:19 - remove the surname once again which we
06:21 - have added and you can just press enter
06:24 - and now you can just print the values
06:27 - inside D now you can see the surname key
06:30 - value pair is remove you can also use a
06:34 - clear function so let's see what's there
06:37 - in the e dictionary so these are the
06:39 - values inside
06:40 - dictionary I can use a dot clear - clear
06:44 - the values inside the dictionary so once
06:48 - again when I try to access e it will
06:51 - give me the empty dictionary also you
06:54 - can delete the dictionary using de el
06:57 - function and the name of the dictionary
06:59 - and when I press ENTER and when I try to
07:02 - access this dictionary e once again it's
07:04 - going to say that this name is not
07:07 - defined you can also update the values
07:09 - in a dictionary so this is my dictionary
07:11 - and I want to update the name for
07:13 - example so I can use the dictionary name
07:16 - and then the key here for example name
07:19 - and the new name I want to associate
07:22 - with this key is let's say a new name
07:25 - here and when I try to access this
07:28 - dictionary once again
07:30 - you can see the name is changed you can
07:32 - also use a method called update to
07:35 - update this key value pair so once again
07:38 - I want to change the key value pair
07:41 - which is name so I can give this curly
07:44 - bracket and then give the key value pair
07:46 - which I want to change so name and the
07:50 - new name will be max once again
07:52 - and once again when I try to access the
07:54 - dictionary it will give me this
07:57 - dictionary and you can see the name is
07:59 - updated now now there is a function in
08:02 - dictionary called keys which is used to
08:05 - list out all the keys of that dictionary
08:08 - so you can see it will list out all the
08:10 - keys of the particular dictionary there
08:15 - is also a function called values which
08:17 - will list out all the values of that
08:20 - dictionary if you want to list out all
08:23 - the key value pairs you can use the
08:26 - function called items here it will give
08:28 - you the key value pair list now the last
08:32 - function I want to show here is let me
08:34 - list out the content of the dictionary
08:36 - first of all so there is one more
08:38 - function which you can use here is which
08:40 - is pop item and you don't need to give
08:43 - any argument with this pop item when you
08:46 - press Enter
08:47 - it's going to remove the last key value
08:49 - pair which you have added or updated so
08:53 - here we have
08:54 - dated this name key value pair that's
08:57 - why this is removed and now when you try
09:00 - to see the content of the dictionary
09:03 - this name key value pair is removed so
09:07 - this is how you can use dictionaries in
09:09 - Python I hope you have enjoyed this
09:11 - video I will see you in the next video

Cleaned transcript:

hey guys welcome to the next video and Python tutorial for beginners in this video I'm going to show you how to use dictionaries in Python so first of all what are dictionaries so dictionaries in Python are like associative lists or a map now you can think of dictionary as a list of pairs so let me show you how to define a dictionary so you can define any variable name and to define a dictionary first of all you use these curly brackets and inside these curly brackets you provide a list of key value pairs so let's provide the list of key value pairs so first key is name and the name is max the second key is for example age and the age of Max is let's say 14 and we can also write here in which year he was born so we can just write here and he was born in 2004 for example and I'm going to press ENTER here and once again I'm going to just access the values inside this dictionary which is D and you can see our dictionary is created now so as I said dictionary is a list of key value pairs and all these values which you see here before this colon are called keys so name is a key here here is a key here and ade is a key here and whatever values you see after the colon are called values so max is a value 2004 is a value and 14 is a value and you can access the values from a dictionary based upon their keys so for example I have this dictionary D I can use the square bracket and the key name for example I want to get the name value I can just give the name key here and then press ENTER and it's going to return me the Associated value related to key name in the same way you can use other keys also for example age and I'm going to press ENTER and it's going to give me 14 which is the value so age is a key here and 14 is the value now what type of data types you can store in a dictionary so as key you can define any data type so let me define a new dictionary here and I'm going to give these curly brackets and as I said you can define a string value as key also you can define a number as a key for example 15 15 let's try the float values so I'm going to just write 15 0.1 15 0.1 this is also allowed in dictionary so you can use string values you can use integer values you can use decimal values as key and also let's try the boolean value so you can use the boolean values also as keys and you can use a couple also as a key so I'm going to just give a tuple two comma three and then I'm going to assign a value of five to this key and as values also you can use string values or decimal values or integer values or a boolean values or any kind of collection you can use as a value so I'm going to press ENTER here and now to access let's say we want to access the value for this key which is this tuple so I'm going to just enter this tuple inside these square brackets and it's going to return me five or I can just provide inside the square bracket true here and then press Enter it's going to return me the value which is associated with it which is true itself or I can just write here 15 and it's going to return me 15 in turn because 15 is associated with this value which is also 15 now what happens when a key is not there and we try to access it so I'm going to just access hundred from this a dictionary it's going to give us error that this key is not present in the dictionary you can also use the LAN method to find out the number of items in the dictionary and you can see it says five items are there in the dictionary II and we can count this item so this is one item two item three item for item and the fifth item is here or in other words you can also say that Elian function is going to return you the number of key value pairs which are stored in dictionary you can also use for example I'm going to use my D dictionary now and you can also use a method called get and then you can give the key name here in the parenthesis so let's say I want to get that value associated with the name key I can get it like this and it's going to give me the value associated with the name key you can also add a new key so this D dictionary you can see there are right now three key value pairs and I can add one more key value pair so to add a key value pair you need to just write D and in the square bracket you just need to give the name of the new key so I'm going to just write surname here which is the name of the new key in the dictionary D and then you need to give the value associated with that key so when I press ENTER and once again when I try to access the values inside the dictionary now you can see that surname is added to your dictionary now if you want to remove any key value pair from a list then you can use d dot pop method and then the name of the key which you want to remove let's say we want to remove the surname once again which we have added and you can just press enter and now you can just print the values inside D now you can see the surname key value pair is remove you can also use a clear function so let's see what's there in the e dictionary so these are the values inside dictionary I can use a dot clear clear the values inside the dictionary so once again when I try to access e it will give me the empty dictionary also you can delete the dictionary using de el function and the name of the dictionary and when I press ENTER and when I try to access this dictionary e once again it's going to say that this name is not defined you can also update the values in a dictionary so this is my dictionary and I want to update the name for example so I can use the dictionary name and then the key here for example name and the new name I want to associate with this key is let's say a new name here and when I try to access this dictionary once again you can see the name is changed you can also use a method called update to update this key value pair so once again I want to change the key value pair which is name so I can give this curly bracket and then give the key value pair which I want to change so name and the new name will be max once again and once again when I try to access the dictionary it will give me this dictionary and you can see the name is updated now now there is a function in dictionary called keys which is used to list out all the keys of that dictionary so you can see it will list out all the keys of the particular dictionary there is also a function called values which will list out all the values of that dictionary if you want to list out all the key value pairs you can use the function called items here it will give you the key value pair list now the last function I want to show here is let me list out the content of the dictionary first of all so there is one more function which you can use here is which is pop item and you don't need to give any argument with this pop item when you press Enter it's going to remove the last key value pair which you have added or updated so here we have dated this name key value pair that's why this is removed and now when you try to see the content of the dictionary this name key value pair is removed so this is how you can use dictionaries in Python I hope you have enjoyed this video I will see you in the next video
