With timestamps:

00:00 - we won't welcome to programming
00:01 - knowledge so this is our fifth tutorial
00:03 - on our jungle series like in the
00:05 - previous four tutorials I showed you how
00:07 - to create a Django project django app
00:10 - then how you can work with the request
00:12 - and the response part why urls and in
00:15 - the previous tutorial that was the
00:18 - fourth one I told you how you can
00:21 - connect your front-end part with your
00:23 - back-end park how you can create a
00:25 - template folder as well as a static
00:26 - folder and one thing I showed you then I
00:30 - can render an HTML page then how can
00:33 - work with the chrome developer tools how
00:36 - you can work with the responsive design
00:37 - of bootstrap and why we use it and one
00:41 - thing I told you that we have created
00:44 - the github repository of our source code
00:46 - you can move to the github link this is
00:49 - our github link and then you can
00:51 - download this code as well this whole
00:54 - project from here alone then download
00:57 - zip file when you move to the parent
00:59 - directory you need to run these two
01:01 - command tape install - our requirement
01:03 - store tht then Python manage dot P one
01:06 - run server so this would help you to run
01:11 - your project on the local machine and
01:13 - this would be pretty helpful to you as
01:14 - well so one thing you can do is okay one
01:20 - thing you can do here is now we are
01:24 - going to work with templates so
01:26 - basically templates are HTML files and
01:29 - we can reuse them to render the backend
01:33 - logic into the front-end part so first
01:37 - thing I am going to show you that the in
01:39 - previous tutorial we created a page so
01:43 - this is the page we created in the
01:45 - previous tutorial so I would try to
01:46 - control you and this would this is a
01:50 - shortcut to see the front-end code so
01:52 - this is the whole front end code and
01:55 - what noticeable we can notice from this
01:57 - is that this front-end code will always
02:01 - like the same HTML structure we are
02:04 - going to use it in a different file as
02:08 - well so the we aren't going to like
02:11 - suppose you know
02:12 - like I'll give you a practical example
02:14 - like this is an apart and like this
02:19 - navbar is going to be common in all the
02:23 - pages so when we move to an another page
02:26 - so this number will remain common and
02:28 - this HTML structure will also remain
02:31 - common so what can be different the
02:34 - content of that page might be different
02:37 - from the another page and it will be
02:39 - different and the title can be different
02:41 - as well but the basic HTML structure and
02:44 - the navbar and the footer will always
02:47 - remain common to every page because
02:49 - number is something you will help your
02:53 - application from to navigate from one
02:55 - page to another and you will copy the
02:58 - nav but every time you make a new page
03:00 - so that that front end code will always
03:05 - be common to all the pages and we can
03:08 - make this with the help of these things
03:10 - which are extends block title block
03:13 - content and law I will give you a
03:14 - practical example how you can use it and
03:16 - what what is the importance of it so
03:19 - first inside my templates folder I would
03:22 - create a new file that is the first one
03:27 - is indexed or HTML is already there then
03:29 - I would create second dot HTML okay now
03:35 - I have created second dot HTML - I have
03:40 - to provide a URL to access this page as
03:42 - well so I would copy this path and paste
03:47 - it here and instead of this first page I
03:51 - would do this as second page this is my
03:56 - second page and I would also second page
04:02 - and this is also change this second page
04:07 - so to be just quick I did this so I have
04:11 - provided a new paths my second page used
04:13 - on my second page and have named this
04:15 - URL as my second page so it is showing
04:17 - an error because wise doing an error
04:20 - because 10 now I have not defined my
04:23 - second page inside my views
04:25 - I would go back to my views or py so
04:28 - like the previous today was one of my
04:31 - post page with used to render an image
04:33 - to - tml I would create a second page as
04:35 - well my for my second page which would
04:41 - take requests as an input parameter and
04:45 - would return render requests coop second
04:56 - dot HTML so so I told you like this
05:02 - would I have created a second or - tml
05:04 - page in my template folder then I
05:06 - provided the URL then a view function to
05:08 - that URL as well so when I moved to my
05:12 - page my second page okay so I'm I'm to
05:18 - my paycheck but till now it's bland
05:20 - nothing is there in that page but what I
05:22 - wanted to tell you if you use the source
05:26 - code of the front-end part extend of
05:28 - black so this shortcut post by ctrl + u
05:31 - and this is the source code of the first
05:34 - page so you want all this thing to be
05:36 - common in that page as well okay before
05:40 - I do this I would show you one thing as
05:43 - well I would copy this navbar okay I
05:47 - have copied this navbar and I would
05:49 - paste this in my index dot HTML okay
05:54 - please make sure this is index dot HTML
05:57 - okay this is index dot HTML and when I
06:02 - move to the my first page okay I will
06:07 - move to my first page my first page so
06:16 - this is the cutter so school of my first
06:18 - page and this has been updated because
06:22 - it has a nav bar in it as well and when
06:25 - I move to this page okay
06:30 - now this looks pretty cool okay so what
06:33 - I told you that inside my first page I
06:36 - have given a
06:39 - a bar and what I will do one thing also
06:42 - I would change the title as well to make
06:46 - sure there is no confusion my first page
06:55 - okay so this looks pretty fine and
06:58 - pretty cool till now okay
07:01 - and this would this this is my first
07:03 - page and what I need to do this is my
07:07 - first page now I would move to the
07:09 - second or HTML file as well and inside
07:13 - my second or HTML file what I will do I
07:15 - would type first hunt extends in lips
07:25 - dot HTML and I would give this as a
07:32 - person command okay so this would when I
07:38 - move to the second page so yeah this is
07:44 - this my second plate as well and you can
07:46 - see this has blown all the things which
07:49 - were there in the first page as well but
07:53 - I need to take care about one thing that
07:55 - my title should be different so I will
07:58 - move back to my index dot HTML and
08:01 - inside this I have to mention the title
08:04 - in this way block title and because when
08:10 - I might move to an another page so I
08:13 - would type percent block title and
08:23 - percent end block okay I inside - the
08:35 - second dot HTML I would repeat this as
08:39 - well so just to be quick I would copy
08:42 - this
08:50 - I would copy this okay this looks pretty
09:04 - fine
09:05 - so I will open put the pages this is my
09:10 - second page okay and open the first page
09:17 - as well so this is my first page and
09:22 - this is my second page so you can feel
09:26 - the difference say that within two lines
09:29 - of code I cloned all the HTML structure
09:34 - as well as the navbar for the index
09:37 - short HTML to second one HTML and I
09:39 - provided two routes to them one was my
09:42 - first page with the name with the title
09:45 - my first page and another one will title
09:47 - my second page so this looks pretty good
09:50 - and what you can do now is you want to
09:55 - change the content so inside index dot
09:58 - HTML I would move this h1 directory
10:03 - inside a content so the type of names
10:08 - that first paid as well so I would type
10:15 - % block content person end block so when
10:33 - I reload my page so this is my first
10:35 - page so it says hello world Django
10:39 - project first page and when i refresh
10:41 - this page this is also this hello world
10:44 - Django project first page but I want to
10:47 - change this content this particular
10:49 - content block content so I would do one
10:54 - thing I will move back to the second on
10:56 - HTML and I would type percent block
11:03 - content and again and talk and I would
11:17 - type this given head actual heading
11:22 - second page extends first page with the
11:34 - common nav bar this should work fine so
11:43 - see the magic
11:45 - now the second page extends first page
11:48 - with a common nav bar and this is my
11:51 - first page okay and this is my second
11:54 - page so you can feel the difference like
11:57 - inside my first index on HTML for the
12:00 - only thing what that was a driving force
12:03 - I would open this thing and she can show
12:07 - you that the content of this page is
12:11 - here this is the actual line and this
12:14 - was the content of the first page and
12:16 - inside the second page this was the
12:19 - content okay but you can see that all
12:23 - other things are common with the title
12:26 - being different and the content feel
12:28 - different everything is common so what I
12:31 - wanted to tell you show you that when
12:35 - you use the extend functionality of the
12:38 - template with the I think with the three
12:41 - or four lines of code you can close the
12:44 - first page all the HTML nav bar from the
12:48 - first page to another page and this will
12:51 - reduce your HTML code as well and this
12:54 - will help you to make dynamic HTML pages
12:58 - in future so what you need to do is you
13:01 - need to create index dot HTML then you
13:05 - need to define a dynamic block title to
13:07 - it so okay this looks fine then you need
13:11 - a dynamic block content to it as well
13:13 - and you need to extend this in the
13:16 - in page as well with the help of this
13:18 - line okay so do with the help of only
13:20 - four to five lines of code we were able
13:22 - to extend to the first page to on a
13:25 - second page so in the next tutorial
13:28 - I'm going to work with Django templates
13:31 - as well I'm going to show you more
13:33 - functionality of it so thank you guys
13:35 - thank you so much thank you

Cleaned transcript:

we won't welcome to programming knowledge so this is our fifth tutorial on our jungle series like in the previous four tutorials I showed you how to create a Django project django app then how you can work with the request and the response part why urls and in the previous tutorial that was the fourth one I told you how you can connect your frontend part with your backend park how you can create a template folder as well as a static folder and one thing I showed you then I can render an HTML page then how can work with the chrome developer tools how you can work with the responsive design of bootstrap and why we use it and one thing I told you that we have created the github repository of our source code you can move to the github link this is our github link and then you can download this code as well this whole project from here alone then download zip file when you move to the parent directory you need to run these two command tape install our requirement store tht then Python manage dot P one run server so this would help you to run your project on the local machine and this would be pretty helpful to you as well so one thing you can do is okay one thing you can do here is now we are going to work with templates so basically templates are HTML files and we can reuse them to render the backend logic into the frontend part so first thing I am going to show you that the in previous tutorial we created a page so this is the page we created in the previous tutorial so I would try to control you and this would this is a shortcut to see the frontend code so this is the whole front end code and what noticeable we can notice from this is that this frontend code will always like the same HTML structure we are going to use it in a different file as well so the we aren't going to like suppose you know like I'll give you a practical example like this is an apart and like this navbar is going to be common in all the pages so when we move to an another page so this number will remain common and this HTML structure will also remain common so what can be different the content of that page might be different from the another page and it will be different and the title can be different as well but the basic HTML structure and the navbar and the footer will always remain common to every page because number is something you will help your application from to navigate from one page to another and you will copy the nav but every time you make a new page so that that front end code will always be common to all the pages and we can make this with the help of these things which are extends block title block content and law I will give you a practical example how you can use it and what what is the importance of it so first inside my templates folder I would create a new file that is the first one is indexed or HTML is already there then I would create second dot HTML okay now I have created second dot HTML I have to provide a URL to access this page as well so I would copy this path and paste it here and instead of this first page I would do this as second page this is my second page and I would also second page and this is also change this second page so to be just quick I did this so I have provided a new paths my second page used on my second page and have named this URL as my second page so it is showing an error because wise doing an error because 10 now I have not defined my second page inside my views I would go back to my views or py so like the previous today was one of my post page with used to render an image to tml I would create a second page as well my for my second page which would take requests as an input parameter and would return render requests coop second dot HTML so so I told you like this would I have created a second or tml page in my template folder then I provided the URL then a view function to that URL as well so when I moved to my page my second page okay so I'm I'm to my paycheck but till now it's bland nothing is there in that page but what I wanted to tell you if you use the source code of the frontend part extend of black so this shortcut post by ctrl + u and this is the source code of the first page so you want all this thing to be common in that page as well okay before I do this I would show you one thing as well I would copy this navbar okay I have copied this navbar and I would paste this in my index dot HTML okay please make sure this is index dot HTML okay this is index dot HTML and when I move to the my first page okay I will move to my first page my first page so this is the cutter so school of my first page and this has been updated because it has a nav bar in it as well and when I move to this page okay now this looks pretty cool okay so what I told you that inside my first page I have given a a bar and what I will do one thing also I would change the title as well to make sure there is no confusion my first page okay so this looks pretty fine and pretty cool till now okay and this would this this is my first page and what I need to do this is my first page now I would move to the second or HTML file as well and inside my second or HTML file what I will do I would type first hunt extends in lips dot HTML and I would give this as a person command okay so this would when I move to the second page so yeah this is this my second plate as well and you can see this has blown all the things which were there in the first page as well but I need to take care about one thing that my title should be different so I will move back to my index dot HTML and inside this I have to mention the title in this way block title and because when I might move to an another page so I would type percent block title and percent end block okay I inside the second dot HTML I would repeat this as well so just to be quick I would copy this I would copy this okay this looks pretty fine so I will open put the pages this is my second page okay and open the first page as well so this is my first page and this is my second page so you can feel the difference say that within two lines of code I cloned all the HTML structure as well as the navbar for the index short HTML to second one HTML and I provided two routes to them one was my first page with the name with the title my first page and another one will title my second page so this looks pretty good and what you can do now is you want to change the content so inside index dot HTML I would move this h1 directory inside a content so the type of names that first paid as well so I would type % block content person end block so when I reload my page so this is my first page so it says hello world Django project first page and when i refresh this page this is also this hello world Django project first page but I want to change this content this particular content block content so I would do one thing I will move back to the second on HTML and I would type percent block content and again and talk and I would type this given head actual heading second page extends first page with the common nav bar this should work fine so see the magic now the second page extends first page with a common nav bar and this is my first page okay and this is my second page so you can feel the difference like inside my first index on HTML for the only thing what that was a driving force I would open this thing and she can show you that the content of this page is here this is the actual line and this was the content of the first page and inside the second page this was the content okay but you can see that all other things are common with the title being different and the content feel different everything is common so what I wanted to tell you show you that when you use the extend functionality of the template with the I think with the three or four lines of code you can close the first page all the HTML nav bar from the first page to another page and this will reduce your HTML code as well and this will help you to make dynamic HTML pages in future so what you need to do is you need to create index dot HTML then you need to define a dynamic block title to it so okay this looks fine then you need a dynamic block content to it as well and you need to extend this in the in page as well with the help of this line okay so do with the help of only four to five lines of code we were able to extend to the first page to on a second page so in the next tutorial I'm going to work with Django templates as well I'm going to show you more functionality of it so thank you guys thank you so much thank you
