With timestamps:

00:00 - and in this video guys we're going to
00:02 - continue working and discussing file
00:06 - handling in C programming so from the
00:09 - previous tutorial so actually this is
00:11 - part two of the file handling video
00:14 - tutorial and in the previous tutorial we
00:17 - discussed the basics on file handling
00:19 - and also discussed the five major
00:23 - operations that can be performed on a
00:26 - file so for example recreation as the
00:29 - first operation and then opening reading
00:33 - writing and closing a file and also we
00:38 - discuss the steps for processing a file
00:41 - so basically if you want to handle files
00:46 - inside your C program you need to
00:49 - declare a file pointer variable as the
00:53 - first step and then the second step will
00:56 - be opening a file using the F open
00:59 - function and then right after that one
01:02 - process the file so for example you want
01:05 - to count the number of lines inside of
01:08 - that particular file or you want to add
01:12 - something to that file you can do that
01:14 - so that's the process s or processing of
01:18 - the file and then of course closing the
01:20 - file using the F close function and from
01:25 - the previous tutorial also we briefly
01:28 - discuss the different functions that we
01:30 - could use when we are handling files in
01:33 - C so for example the get see the put C
01:37 - get W and put W and the other functions
01:42 - so in this video guys I'm just going to
01:44 - show you how you can read the content of
01:48 - a file and display it in your simple
01:52 - program so we're just gonna use this
01:54 - main function right here so I have here
01:57 - the main that C file and ya mean that CA
02:01 - file and then we're just gonna use this
02:03 - main function right here just to get the
02:08 - contents of our file so as you can
02:10 - probably remember from the previous
02:12 - tutorial we
02:13 - already created a file inside our file
02:17 - system and let me show you that okay so
02:22 - I have you the file and then file name
02:24 - that tags and it contains the tax hello
02:31 - world as you can see here so this is
02:33 - written from our C program and in this
02:37 - video we're going to read this by using
02:40 - also our C program so in order for us to
02:44 - again if you want to handle files in our
02:47 - C the first step is to declare a pointer
02:51 - variable so the pointer variable goes
02:55 - like this so we need to call on this
02:59 - file class and then add the semicolon
03:03 - I'm in the asterisk or star symbol as
03:08 - you can see here and then of course the
03:10 - name of your variable so I'm just gonna
03:12 - name it file name and then semicolon at
03:17 - the end so this is our printer variable
03:22 - as I've said this is the first step for
03:27 - handling files in C we have to declare a
03:34 - pointer variable and then the next step
03:39 - say since we're getting the content of a
03:42 - file
03:42 - I just want to assign the content of a
03:45 - file into a single variable so for
03:47 - example I'm just going to declare here
03:49 - another variable called char CH or the
03:55 - name of the variable e CH and then I'm
03:57 - just going to assume the land when I
04:01 - read there you go and then semicolon so
04:04 - basically this particular variable will
04:07 - hold the contents of our file okay next
04:14 - line will be using the file name
04:17 - variable right here which is our pointer
04:20 - variable and then the second step in the
04:24 - process is of course open the file by
04:27 - use
04:27 - F open function we already use this
04:30 - function from the previous video so in
04:33 - here we're just going to specify specify
04:37 - the name of the file which has file name
04:40 - that text as you can see here so that
04:43 - will be file name that txt and then
04:47 - we're gonna use the R symbol okay
04:53 - that's basically reading the file name
05:00 - or I'm in the file coming from our file
05:02 - system and then the next step is of
05:06 - course if we want to print the contents
05:09 - of our file so we're just gonna use the
05:12 - printf function right here and then
05:15 - specify the format specifier percent s
05:23 - because we're going to display character
05:28 - or strings of character here coming from
05:31 - our file and then comma and then we
05:35 - discuss the function in the previous
05:39 - tutorial F gets F gets a so basically
05:45 - this function read string of characters
05:51 - from a file and this particular function
05:55 - takes for a few parameters so for
05:59 - example we're just gonna specify the
06:04 - four parameters here so for example the
06:13 - variable Z H that's the variable that
06:17 - will hold the contents of our file and
06:19 - then so for example 50 this is the count
06:24 - of characters that we're going to allow
06:28 - to be saved in our char CH variable and
06:33 - then of course the file name okay and as
06:40 - always a
06:41 - you are working with file sins we're
06:44 - opening the file here we need to use
06:47 - also D closing function which is f pros
06:51 - right here and then we're going to
06:54 - specify the file name right here okay so
07:00 - for example the file name and that's
07:05 - about it and we can run our program
07:09 - right now let's just save this and build
07:12 - and run so it's going to output hello
07:17 - world so for example just to show you a
07:22 - basic example let's just fill out our
07:25 - file in the world this is a string from
07:37 - file so we're just going to test this so
07:45 - save and let's run again our program
07:50 - okay so as you can see here in the world
07:54 - comma and then this is a string coming
07:57 - from a file as you can see here so
07:59 - basically we successfully read or get
08:05 - the contents of our file name that txt
08:10 - file okay so now there are other
08:14 - operations that you may want to do in
08:18 - your file so for example you want to
08:24 - make count the number of lines that's
08:27 - possible again this particular symbol
08:30 - right here is like opening a file in a
08:35 - read mode okay so our that's basically
08:39 - what we use here so as I've said there
08:44 - are also other functions that we could
08:46 - use when trying to under files in our C
08:49 - program
08:51 - and of course F gets is one of them but
08:54 - there are also some for example we have
08:59 - get C so this reads a character from a
09:05 - file okay
09:09 - we also have get W so this will be for
09:16 - reading an integer and we also have F
09:23 - gets that's what we used here so f gets
09:26 - reads screen string of characters from a
09:36 - file okay and then of course there are
09:39 - other functions that you could use to
09:42 - write this is right thing into the file
09:50 - so we have put C foot W so basically put
10:02 - C write a character a file and then put
10:05 - W write an integer to a file and then we
10:09 - have F printf for writing and we also
10:16 - have left foots okay to write string of
10:25 - characters into a certain file so I hope
10:29 - you understand the basics of handling
10:32 - files in C and of course as always if
10:36 - you have questions you can ask questions
10:38 - in a comment section below and we will
10:41 - try to answer your queries and thank you
10:45 - again for watching guys and see you in
10:47 - the next video

Cleaned transcript:

and in this video guys we're going to continue working and discussing file handling in C programming so from the previous tutorial so actually this is part two of the file handling video tutorial and in the previous tutorial we discussed the basics on file handling and also discussed the five major operations that can be performed on a file so for example recreation as the first operation and then opening reading writing and closing a file and also we discuss the steps for processing a file so basically if you want to handle files inside your C program you need to declare a file pointer variable as the first step and then the second step will be opening a file using the F open function and then right after that one process the file so for example you want to count the number of lines inside of that particular file or you want to add something to that file you can do that so that's the process s or processing of the file and then of course closing the file using the F close function and from the previous tutorial also we briefly discuss the different functions that we could use when we are handling files in C so for example the get see the put C get W and put W and the other functions so in this video guys I'm just going to show you how you can read the content of a file and display it in your simple program so we're just gonna use this main function right here so I have here the main that C file and ya mean that CA file and then we're just gonna use this main function right here just to get the contents of our file so as you can probably remember from the previous tutorial we already created a file inside our file system and let me show you that okay so I have you the file and then file name that tags and it contains the tax hello world as you can see here so this is written from our C program and in this video we're going to read this by using also our C program so in order for us to again if you want to handle files in our C the first step is to declare a pointer variable so the pointer variable goes like this so we need to call on this file class and then add the semicolon I'm in the asterisk or star symbol as you can see here and then of course the name of your variable so I'm just gonna name it file name and then semicolon at the end so this is our printer variable as I've said this is the first step for handling files in C we have to declare a pointer variable and then the next step say since we're getting the content of a file I just want to assign the content of a file into a single variable so for example I'm just going to declare here another variable called char CH or the name of the variable e CH and then I'm just going to assume the land when I read there you go and then semicolon so basically this particular variable will hold the contents of our file okay next line will be using the file name variable right here which is our pointer variable and then the second step in the process is of course open the file by use F open function we already use this function from the previous video so in here we're just going to specify specify the name of the file which has file name that text as you can see here so that will be file name that txt and then we're gonna use the R symbol okay that's basically reading the file name or I'm in the file coming from our file system and then the next step is of course if we want to print the contents of our file so we're just gonna use the printf function right here and then specify the format specifier percent s because we're going to display character or strings of character here coming from our file and then comma and then we discuss the function in the previous tutorial F gets F gets a so basically this function read string of characters from a file and this particular function takes for a few parameters so for example we're just gonna specify the four parameters here so for example the variable Z H that's the variable that will hold the contents of our file and then so for example 50 this is the count of characters that we're going to allow to be saved in our char CH variable and then of course the file name okay and as always a you are working with file sins we're opening the file here we need to use also D closing function which is f pros right here and then we're going to specify the file name right here okay so for example the file name and that's about it and we can run our program right now let's just save this and build and run so it's going to output hello world so for example just to show you a basic example let's just fill out our file in the world this is a string from file so we're just going to test this so save and let's run again our program okay so as you can see here in the world comma and then this is a string coming from a file as you can see here so basically we successfully read or get the contents of our file name that txt file okay so now there are other operations that you may want to do in your file so for example you want to make count the number of lines that's possible again this particular symbol right here is like opening a file in a read mode okay so our that's basically what we use here so as I've said there are also other functions that we could use when trying to under files in our C program and of course F gets is one of them but there are also some for example we have get C so this reads a character from a file okay we also have get W so this will be for reading an integer and we also have F gets that's what we used here so f gets reads screen string of characters from a file okay and then of course there are other functions that you could use to write this is right thing into the file so we have put C foot W so basically put C write a character a file and then put W write an integer to a file and then we have F printf for writing and we also have left foots okay to write string of characters into a certain file so I hope you understand the basics of handling files in C and of course as always if you have questions you can ask questions in a comment section below and we will try to answer your queries and thank you again for watching guys and see you in the next video
