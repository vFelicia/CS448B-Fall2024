With timestamps:

00:00 - in this video we are going to
00:02 - write our first program
00:04 - which is hello world
00:07 - program
00:08 - and
00:09 - uh
00:11 - so we have opened intellij idea for that
00:13 - and
00:15 - the first the program structure goes
00:17 - like function one main
00:20 - i'll be explaining the program to you in
00:22 - a while
00:24 - parent allen
00:26 - is a command for printing a statement
00:29 - and hello
00:30 - world
00:32 - okay so when i run this program
00:36 - this
00:37 - gives me okay so you can run a program
00:39 - form here and here also so i prefer
00:42 - running program from here
00:44 - okay so this gives me an output as hello
00:47 - world
00:48 - okay so what it does is
00:51 - like
00:52 - what
00:53 - i will be
00:55 - explaining you the part of the program
00:57 - so what is the fun the fun is a word in
01:00 - kotlin programming language or many
01:02 - programming language and fun stands for
01:05 - function
01:06 - a function is
01:07 - section of program that performs a
01:09 - specific
01:10 - task so i can create another function in
01:13 - the same program so
01:15 - this is of the fund represents a
01:17 - function
01:18 - and main main is the name of this
01:21 - function this particular function has a
01:23 - name main
01:25 - function have names so they can be
01:27 - distinguished from each other the
01:29 - function is called main because it is
01:31 - the first or the main function that is
01:34 - called when you run the program so when
01:35 - i whenever i run the program
01:38 - it search for the main function and that
01:40 - is run
01:42 - every time you
01:44 - run the so fun main
01:47 - is
01:49 - the function main function
01:52 - okay the function name is always
01:54 - followed by a parenthesis this is the
01:55 - parenthesis open and close parenthesis
01:57 - inside the parentheses you can put
02:00 - information
02:02 - for the function to use
02:04 - okay so whatever information the
02:06 - function is using you can put it there
02:09 - now
02:10 - there are curly braces
02:11 - outside this fun way
02:13 - so these curly braces
02:15 - inside these curly braces we are we
02:18 - write the task we have to perform
02:22 - now
02:23 - this
02:24 - line prints the
02:26 - text hello world
02:28 - okay parent talents tells the system to
02:31 - print a line of text
02:33 - inside the parenthesis these parentheses
02:37 - okay
02:39 - you put the text to be printed notice
02:42 - that the text we printed is surrounded
02:44 - by quotes these are the codes
02:46 - this tells the system that everything
02:48 - inside the quotation mark should be
02:50 - these this should be everything inside
02:52 - the quotation marks would be printed
02:54 - exactly as it is
02:57 - so to actually print the text the whole
02:59 - printer instruction has to be inside the
03:02 - main function okay
03:03 - so so far that is clear
03:07 - now
03:08 - uh
03:09 - we will be learning more about the print
03:11 - function what about
03:12 - we don't write
03:14 - ln here when what what happens when we
03:17 - run this program
03:18 - so when we run this program the
03:20 - we will find that the output is same to
03:22 - same there is no change in the output
03:25 - so what is the difference between print
03:26 - and print ln
03:28 - when i add one more line here and that
03:32 - say print
03:34 - hi
03:37 - and
03:38 - when i run this program
03:39 - you can you will find the difference
03:43 - so
03:45 - this
03:46 - this
03:47 - high is printed just right after the
03:50 - hello world even if i have
03:52 - uh wrote and then wrote it in the next
03:54 - line
03:55 - and when i uh give the command print ln
03:58 - here
03:59 - then what will happen
04:02 - so i have run this program
04:04 - and
04:06 - we will let it compile
04:08 - now you can see that high is printed on
04:10 - the next line so we can conclude that
04:12 - the ln in the println stands for
04:16 - next line or we can say
04:18 - when we use println the
04:21 - the the text inside the quotation mark
04:23 - is printed in the next line
04:27 - so for this you can
04:29 - also use the
04:31 - black backslash n or the escape sequence
04:35 - so
04:36 - i'll be demonstrating that so in this
04:39 - code under this quotation mark when i
04:41 - use black says backslash n here and run
04:44 - this program
04:48 - so
04:48 - here we can find that
04:50 - again the high is under the hello world
04:53 - so what this backslash n command tells
04:56 - you or the escape sequence tells the
04:58 - program when i enter into the print
05:01 - hello world and then this backslash n
05:03 - tells me to go to the next line and then
05:06 - print hi
05:07 - okay so that that's about the backslash
05:09 - n command
05:11 - now we will talk about some comments in
05:13 - kotlin so
05:15 - i have to write here that this is
05:18 - my first
05:21 - code
05:23 - how i write here and
05:25 - when i write the this thing here this
05:28 - text here this has no effect on the code
05:32 - so
05:33 - after using this to slash
05:38 - this program this this sentence is not a
05:41 - part of code so the symbol slash slash
05:45 - represents a single line command which
05:47 - tells the compiler to ignore everything
05:50 - from this symbol to the end of the line
05:53 - okay typically signal time single line
05:55 - comment is used to make a quick comment
05:57 - about a single line of code
05:59 - so
06:00 - comments are very important in any code
06:02 - because after some time after one month
06:05 - two month or three month when i will be
06:06 - looking in the code i will not be
06:08 - recognizing anything in it
06:11 - or i can say that when i when me and my
06:14 - friend are working on a project
06:17 - and i have to share my code code with
06:19 - him so
06:21 - he also should understand the
06:24 - thing which i have used in code and why
06:25 - i am used use that in code so that's why
06:29 - these are important comment okay so what
06:32 - if i have to
06:33 - write a multi-line command
06:36 - such that i have to
06:37 - write
06:38 - three four lines of command
06:41 - so i have you i will use this this
06:46 - symbol and this pair of symbols denotes
06:50 - a multi-line comment
06:52 - so it tells the compiler that everything
06:54 - that comes under this and this
06:57 - symbol should be ignored
07:00 - okay
07:02 - so these are about the
07:04 - comment

Cleaned transcript:

in this video we are going to write our first program which is hello world program and uh so we have opened intellij idea for that and the first the program structure goes like function one main i'll be explaining the program to you in a while parent allen is a command for printing a statement and hello world okay so when i run this program this gives me okay so you can run a program form here and here also so i prefer running program from here okay so this gives me an output as hello world okay so what it does is like what i will be explaining you the part of the program so what is the fun the fun is a word in kotlin programming language or many programming language and fun stands for function a function is section of program that performs a specific task so i can create another function in the same program so this is of the fund represents a function and main main is the name of this function this particular function has a name main function have names so they can be distinguished from each other the function is called main because it is the first or the main function that is called when you run the program so when i whenever i run the program it search for the main function and that is run every time you run the so fun main is the function main function okay the function name is always followed by a parenthesis this is the parenthesis open and close parenthesis inside the parentheses you can put information for the function to use okay so whatever information the function is using you can put it there now there are curly braces outside this fun way so these curly braces inside these curly braces we are we write the task we have to perform now this line prints the text hello world okay parent talents tells the system to print a line of text inside the parenthesis these parentheses okay you put the text to be printed notice that the text we printed is surrounded by quotes these are the codes this tells the system that everything inside the quotation mark should be these this should be everything inside the quotation marks would be printed exactly as it is so to actually print the text the whole printer instruction has to be inside the main function okay so so far that is clear now uh we will be learning more about the print function what about we don't write ln here when what what happens when we run this program so when we run this program the we will find that the output is same to same there is no change in the output so what is the difference between print and print ln when i add one more line here and that say print hi and when i run this program you can you will find the difference so this this high is printed just right after the hello world even if i have uh wrote and then wrote it in the next line and when i uh give the command print ln here then what will happen so i have run this program and we will let it compile now you can see that high is printed on the next line so we can conclude that the ln in the println stands for next line or we can say when we use println the the the text inside the quotation mark is printed in the next line so for this you can also use the black backslash n or the escape sequence so i'll be demonstrating that so in this code under this quotation mark when i use black says backslash n here and run this program so here we can find that again the high is under the hello world so what this backslash n command tells you or the escape sequence tells the program when i enter into the print hello world and then this backslash n tells me to go to the next line and then print hi okay so that that's about the backslash n command now we will talk about some comments in kotlin so i have to write here that this is my first code how i write here and when i write the this thing here this text here this has no effect on the code so after using this to slash this program this this sentence is not a part of code so the symbol slash slash represents a single line command which tells the compiler to ignore everything from this symbol to the end of the line okay typically signal time single line comment is used to make a quick comment about a single line of code so comments are very important in any code because after some time after one month two month or three month when i will be looking in the code i will not be recognizing anything in it or i can say that when i when me and my friend are working on a project and i have to share my code code with him so he also should understand the thing which i have used in code and why i am used use that in code so that's why these are important comment okay so what if i have to write a multiline command such that i have to write three four lines of command so i have you i will use this this symbol and this pair of symbols denotes a multiline comment so it tells the compiler that everything that comes under this and this symbol should be ignored okay so these are about the comment
