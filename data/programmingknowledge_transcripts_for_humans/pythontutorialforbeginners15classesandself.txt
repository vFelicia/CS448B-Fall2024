With timestamps:

00:00 - hello guys in this video we are going to
00:02 - learn about creating classes and using
00:06 - classes in Python now we all know that
00:09 - python is an objectoriented programming
00:13 - language and in object oriented
00:16 - programming language a class is an
00:20 - extensible program code template for
00:24 - creating object providing initial values
00:27 - of states and implementing ations of
00:32 - Behavior now this definition of class
00:35 - you may think that you know what is this
00:39 - so let me give you an example suppose
00:42 - you want to create a class or you want
00:46 - to save some data uh for a person now
00:51 - person has some attribute for example
00:54 - first name last name and uh for example
00:58 - you want to print
01:00 - uh the person's name so a class can also
01:05 - have
01:07 - member functions or member methods right
01:12 - so we are going to take this example of
01:15 - person and we are going to create a
01:19 - person class and we are going to uh give
01:21 - the attribute to this class as first
01:24 - name and last name and we will try to
01:27 - print the person's name okay so let's
01:32 - see how we can create a class in Python
01:36 - now in Python the class is created by
01:40 - using the
01:41 - word class itself and then you give the
01:45 - name to the class in our case we want to
01:48 - give uh the name to the class as
01:52 - person so we will give this person name
01:57 - to the class and then this colon comes
02:01 - and inside this class you can
02:05 - Define member functions or member
02:11 - variables now how you can uh Define
02:13 - member functions in uh a class you just
02:17 - need to give for example I want to uh
02:21 - print the name first name and last name
02:25 - of the person I can create uh I can
02:29 - create create a method to print this so
02:33 - I can create a function like this
02:38 - print full name for example this is the
02:42 - function name but we all know that
02:44 - function whenever we want to define a
02:46 - function we use def in front of a
02:49 - function right and then we can pass some
02:53 - argument
02:55 - here
02:57 - now whenever we use a function inside a
03:01 - class the first argument we give to the
03:05 - member function is a keyword called
03:10 - self and this self is nothing but a
03:15 - pointer or the self points to the class
03:19 - itself okay so this class whenever you
03:23 - we create an instance of a class which
03:26 - I'm going to show you how you can create
03:28 - an instance or object of a class this
03:32 - self point to the object of the class so
03:35 - just wait for a while and you will
03:37 - understand and then you pass the name of
03:42 - the argument so for
03:44 - example first name
03:48 - and
03:50 - last
03:52 - name okay then
03:56 - colon and then you can give the
03:58 - definition to the class so for example I
04:03 - want to um set the value of first name
04:07 - and last name so what I can do is I can
04:10 - use the same keyword
04:13 - self to call the first name variable and
04:18 - last name variable of the class this
04:22 - should
04:23 - be last right and then we use a DOT sep
04:29 - operator to call them so for example we
04:32 - want to set the first name we just use
04:36 - self and first name is equal to first
04:41 - name and
04:43 - then in a similar way we can just Define
04:48 - the second variable or SEC setting the
04:51 - second variable which is last name so
04:54 - self. last name is equal to last name
04:58 - okay it's better better
05:00 - to rename this function as set full name
05:05 - okay so what this function is doing it's
05:09 - setting the first name and last name to
05:12 - the variables in a class or member
05:15 - variables in the class which are first
05:18 - name and last name so whatever argument
05:20 - you pass here first name and last name
05:23 - will be passed to the member variable of
05:27 - the class which are also first name and
05:29 - last CL name okay now we have already
05:34 - created this class and now we are going
05:37 - to create a second member function to
05:41 - print this
05:43 - um first name and last name a full name
05:46 - okay so we will Define a second function
05:50 - called
05:53 - print full
05:56 - name and this will not take any any
06:00 - argument and we are just going to
06:05 - return or we are just going to print
06:09 - uh the first name and last name okay so
06:13 - we are going to
06:15 - print here first name so to call any
06:21 - member function or member variable of a
06:23 - class you just need to use self and self
06:27 - just indicates that it's a member
06:31 - variable or member of a class okay so
06:34 - always use self and we are going to
06:37 - print uh self. first name which is the
06:40 - first name and then we can just give a
06:44 - little space here to separate them first
06:48 - name and last name and then you can just
06:51 - take the last name and print
06:54 - it now in order to create an instance of
06:58 - a class so how you can create an
07:01 - instance of a class this is just a
07:05 - definition of the class right we have
07:07 - done defined the definition of the class
07:11 - right now in order to create the
07:13 - instance of a class so that we can use
07:16 - this
07:17 - class we can use this class by creating
07:21 - the instance of the class so whenever
07:24 - you want to end the class and you want
07:27 - to execute this class just remember that
07:29 - you start from
07:33 - the corner here right so and don't
07:36 - forget about indentation in uh this
07:40 - class declaration so when you start with
07:43 - no indentation here then you are in the
07:46 - new line and you are outside the class
07:49 - okay now in order to create a instance
07:52 - of uh the class or object of the class
07:56 - we can just Define the object name
08:00 - for
08:02 - example person
08:07 - name so this is the object name or
08:10 - instance name of a class we want to give
08:13 - and then is equal to the name of the
08:18 - class and then this these brackets okay
08:24 - and this will create the object of
08:27 - person class
08:29 - with a name person
08:32 - name okay so let's try to run the
08:35 - program and let's see if it contains any
08:38 - error or not save okay and it doesn't
08:43 - contain any error so it's running fine
08:46 - but we want to use the member function
08:49 - of the class so how we can use this
08:53 - member function of a class we can use
08:57 - the member function of a class using
08:59 - this instance of the class or object of
09:02 - the class okay so just take the object
09:05 - of the class and in the next line we
09:09 - just copy the object of the class
09:13 - Dot and then we can see there are two
09:17 - options which are member functions of
09:19 - the class print full name and set name
09:22 - so I'm going to take set
09:24 - name set name of the class function so
09:28 - this is the member function of a person
09:30 - class and we are accessing this member
09:33 - function using the instance or object of
09:36 - the class okay and in between we give
09:39 - dot separator so that now this instance
09:44 - can call the member functions or member
09:48 - variable of the class and now we can set
09:52 - the first name and last name for
09:58 - example programming is the first name
10:03 - and knowledge is the last
10:09 - name okay so we have set the first name
10:13 - and last name of the person and just
10:18 - remember that this is used as a default
10:22 - so this uh will be automatically taken
10:26 - by by your class and these are the two
10:31 - important uh you know two important
10:34 - argument which you need to uh pass and
10:37 - this will be taken automatically okay so
10:41 - self is by default for a member function
10:45 - invisible in a sense that we you just
10:48 - need to pass the other arguments except
10:53 - for the self argument so first name we
10:56 - passed as programming and last name we
10:59 - passed as knowledge so this is
11:03 - setting the first name and last name of
11:05 - a person now in order to print this name
11:10 - we can once again use the instance or
11:12 - object of a class dot we can call the
11:16 - second function of a class called print
11:19 - name which takes no argument
11:24 - right and now let's try to save the
11:27 - program and run this so run this and
11:32 - what it's
11:34 - saying it's
11:37 - saying
11:41 - that this member function which you are
11:45 - calling which is print full name doesn't
11:49 - have any argument which is zero argument
11:52 - right takes zero argument but one was
11:57 - given right right
12:00 - so I intentionally leave this self in
12:04 - this function so that we can see this
12:07 - error so always remember you have to at
12:12 - least pass self whenever you define a
12:17 - member function in a class so if even if
12:22 - it doesn't take any parameter or
12:25 - argument you need to pass self to a
12:28 - member function
12:29 - okay now when I save the program and run
12:32 - it it will run fine right and it prints
12:36 - the name programming space knowledge
12:40 - which I wanted to print right so always
12:44 - remember few
12:46 - things whenever you define a member
12:49 - function in a class always use self as a
12:53 - first argument and then give your rest
12:58 - of the the argument and even if your
13:02 - function or member function doesn't take
13:05 - any argument you just or you must pass
13:09 - at least one argument which is
13:12 - self okay on what is self self is just a
13:17 - pointer to the class instance so this
13:23 - self is pointing to this person name and
13:28 - this is called called class instance and
13:30 - whenever we create the class instance it
13:34 - will assign this person here at the
13:37 - place of self and
13:40 - then it will be name will be set as
13:43 - person name which is this instance do
13:46 - first name person name do last name and
13:50 - then whenever we call this function it
13:53 - will print person name. first name
13:57 - Person name. last name
14:00 - so in this way you can use or you can
14:04 - create classes in Python there is lot
14:07 - more uh in defining and creating or
14:10 - using classes in Python this is just uh
14:14 - starting or create how to create a class
14:16 - in Python so I will uh show you how to U
14:21 - use other uh functionalities in class in
14:26 - later videos and hopefully you
14:29 - understood the concept of the class and
14:32 - hopefully you enjoyed this video please
14:34 - RIT comment and subscribe and bye for
14:37 - now

Cleaned transcript:

hello guys in this video we are going to learn about creating classes and using classes in Python now we all know that python is an objectoriented programming language and in object oriented programming language a class is an extensible program code template for creating object providing initial values of states and implementing ations of Behavior now this definition of class you may think that you know what is this so let me give you an example suppose you want to create a class or you want to save some data uh for a person now person has some attribute for example first name last name and uh for example you want to print uh the person's name so a class can also have member functions or member methods right so we are going to take this example of person and we are going to create a person class and we are going to uh give the attribute to this class as first name and last name and we will try to print the person's name okay so let's see how we can create a class in Python now in Python the class is created by using the word class itself and then you give the name to the class in our case we want to give uh the name to the class as person so we will give this person name to the class and then this colon comes and inside this class you can Define member functions or member variables now how you can uh Define member functions in uh a class you just need to give for example I want to uh print the name first name and last name of the person I can create uh I can create create a method to print this so I can create a function like this print full name for example this is the function name but we all know that function whenever we want to define a function we use def in front of a function right and then we can pass some argument here now whenever we use a function inside a class the first argument we give to the member function is a keyword called self and this self is nothing but a pointer or the self points to the class itself okay so this class whenever you we create an instance of a class which I'm going to show you how you can create an instance or object of a class this self point to the object of the class so just wait for a while and you will understand and then you pass the name of the argument so for example first name and last name okay then colon and then you can give the definition to the class so for example I want to um set the value of first name and last name so what I can do is I can use the same keyword self to call the first name variable and last name variable of the class this should be last right and then we use a DOT sep operator to call them so for example we want to set the first name we just use self and first name is equal to first name and then in a similar way we can just Define the second variable or SEC setting the second variable which is last name so self. last name is equal to last name okay it's better better to rename this function as set full name okay so what this function is doing it's setting the first name and last name to the variables in a class or member variables in the class which are first name and last name so whatever argument you pass here first name and last name will be passed to the member variable of the class which are also first name and last CL name okay now we have already created this class and now we are going to create a second member function to print this um first name and last name a full name okay so we will Define a second function called print full name and this will not take any any argument and we are just going to return or we are just going to print uh the first name and last name okay so we are going to print here first name so to call any member function or member variable of a class you just need to use self and self just indicates that it's a member variable or member of a class okay so always use self and we are going to print uh self. first name which is the first name and then we can just give a little space here to separate them first name and last name and then you can just take the last name and print it now in order to create an instance of a class so how you can create an instance of a class this is just a definition of the class right we have done defined the definition of the class right now in order to create the instance of a class so that we can use this class we can use this class by creating the instance of the class so whenever you want to end the class and you want to execute this class just remember that you start from the corner here right so and don't forget about indentation in uh this class declaration so when you start with no indentation here then you are in the new line and you are outside the class okay now in order to create a instance of uh the class or object of the class we can just Define the object name for example person name so this is the object name or instance name of a class we want to give and then is equal to the name of the class and then this these brackets okay and this will create the object of person class with a name person name okay so let's try to run the program and let's see if it contains any error or not save okay and it doesn't contain any error so it's running fine but we want to use the member function of the class so how we can use this member function of a class we can use the member function of a class using this instance of the class or object of the class okay so just take the object of the class and in the next line we just copy the object of the class Dot and then we can see there are two options which are member functions of the class print full name and set name so I'm going to take set name set name of the class function so this is the member function of a person class and we are accessing this member function using the instance or object of the class okay and in between we give dot separator so that now this instance can call the member functions or member variable of the class and now we can set the first name and last name for example programming is the first name and knowledge is the last name okay so we have set the first name and last name of the person and just remember that this is used as a default so this uh will be automatically taken by by your class and these are the two important uh you know two important argument which you need to uh pass and this will be taken automatically okay so self is by default for a member function invisible in a sense that we you just need to pass the other arguments except for the self argument so first name we passed as programming and last name we passed as knowledge so this is setting the first name and last name of a person now in order to print this name we can once again use the instance or object of a class dot we can call the second function of a class called print name which takes no argument right and now let's try to save the program and run this so run this and what it's saying it's saying that this member function which you are calling which is print full name doesn't have any argument which is zero argument right takes zero argument but one was given right right so I intentionally leave this self in this function so that we can see this error so always remember you have to at least pass self whenever you define a member function in a class so if even if it doesn't take any parameter or argument you need to pass self to a member function okay now when I save the program and run it it will run fine right and it prints the name programming space knowledge which I wanted to print right so always remember few things whenever you define a member function in a class always use self as a first argument and then give your rest of the the argument and even if your function or member function doesn't take any argument you just or you must pass at least one argument which is self okay on what is self self is just a pointer to the class instance so this self is pointing to this person name and this is called called class instance and whenever we create the class instance it will assign this person here at the place of self and then it will be name will be set as person name which is this instance do first name person name do last name and then whenever we call this function it will print person name. first name Person name. last name so in this way you can use or you can create classes in Python there is lot more uh in defining and creating or using classes in Python this is just uh starting or create how to create a class in Python so I will uh show you how to U use other uh functionalities in class in later videos and hopefully you understood the concept of the class and hopefully you enjoyed this video please RIT comment and subscribe and bye for now
