With timestamps:

00:00 - and in this video
00:01 - we are going to learn about the in
00:03 - operator in kotlin language so uh to
00:06 - study the inoperator uh
00:09 - we i would like to consider that the
00:12 - example to declare a variable and check
00:14 - if it is it lies within a specific range
00:18 - okay so i have a main function
00:23 - and inside the main function i will
00:25 - create a value
00:27 - n is equals to 5. and i have to check
00:31 - that
00:32 - if the values lie in 1 to 10 or if the
00:35 - values lie lies in 2 11 to 20
00:39 - so i'll just create a if statement
00:42 - if n is greater than 0
00:48 - or i can say that greater than equals to
00:50 - 1
00:52 - and
00:53 - so i'll
00:54 - just introduce the logical operator and
00:59 - and
01:01 - n should be less than or equal to 10
01:03 - okay so if that's the case
01:06 - uh
01:07 - then i should
01:09 - print
01:11 - that
01:13 - n is in 1 to 10
01:17 - okay
01:18 - and
01:19 - else if
01:22 - um
01:23 - n is
01:24 - less than n is greater than equals to
01:27 - 11
01:28 - and
01:30 - n is
01:33 - less than equal to
01:35 - 20
01:37 - so i have to
01:39 - print
01:40 - that
01:42 - and is in
01:45 - is in
01:46 - 11 to
01:47 - 20
01:50 - or i can
01:52 - introduce an else statement as well
01:55 - which
01:55 - prints
01:57 - that
01:58 - n
01:59 - is not in
02:02 - 1 to 20
02:04 - okay so when i go ahead and
02:06 - run this function or this code
02:10 - what i'll find is
02:12 - the
02:13 - the function checks if the variable lies
02:17 - within a specific range
02:20 - okay so our variable
02:22 - or the value n was equals to five
02:25 - and
02:26 - it lies in one to ten
02:28 - so just
02:30 - if we let the
02:33 - code to finish
02:34 - okay so it prints that analyzing n is in
02:38 - one to ten
02:40 - okay
02:41 - so uh when i see the code it
02:44 - underlines this with a line okay so when
02:47 - i hover over it and hit alt plus enter
02:51 - it says that convert to a range check
02:54 - okay so when i click on that
02:56 - it it prints n in 1.10
03:01 - okay
03:02 - so
03:02 - uh the in operate this is the in
03:05 - operator
03:06 - uh we are going to study okay so instead
03:10 - of uh this whole thing n is greater than
03:12 - 11 and
03:14 - uh logical operator and n is less than
03:16 - equals to 20 what we can do is we can
03:19 - use the in operator
03:22 - okay so what inoperator does is
03:24 - in the in operator
03:27 - iterates or i can say
03:31 - checks the
03:33 - in the range okay so what i can do here
03:35 - is i can just write n in
03:38 - 11 dot dot 20
03:41 - so
03:42 - it automatically
03:45 - introduce this signs
03:47 - and
03:48 - it
03:49 - uh states that
03:51 - uh and
03:52 - we will check n
03:54 - in 11 to 20 and both will include
03:58 - the
03:59 - equal to sign
04:00 - okay so instead of using now when i see
04:03 - uh the if statement
04:05 - it also
04:07 - uh
04:08 - is underlined so when i hover over it it
04:10 - shows that cascade if should be replaced
04:13 - with when and when i go uh on it and hit
04:16 - alt plus enter it shows replace if with
04:19 - when and then i hit enter
04:21 - it replaces it with the when statement
04:25 - okay
04:26 - so the kotlin or the i can say the
04:29 - intelligent idea is very useful
04:32 - and it's just most of the things
04:35 - to make the code easier and
04:37 - readable and
04:38 - less redundant
04:40 - okay
04:41 - so
04:42 - that was it for this video stay tuned

Cleaned transcript:

and in this video we are going to learn about the in operator in kotlin language so uh to study the inoperator uh we i would like to consider that the example to declare a variable and check if it is it lies within a specific range okay so i have a main function and inside the main function i will create a value n is equals to 5. and i have to check that if the values lie in 1 to 10 or if the values lie lies in 2 11 to 20 so i'll just create a if statement if n is greater than 0 or i can say that greater than equals to 1 and so i'll just introduce the logical operator and and n should be less than or equal to 10 okay so if that's the case uh then i should print that n is in 1 to 10 okay and else if um n is less than n is greater than equals to 11 and n is less than equal to 20 so i have to print that and is in is in 11 to 20 or i can introduce an else statement as well which prints that n is not in 1 to 20 okay so when i go ahead and run this function or this code what i'll find is the the function checks if the variable lies within a specific range okay so our variable or the value n was equals to five and it lies in one to ten so just if we let the code to finish okay so it prints that analyzing n is in one to ten okay so uh when i see the code it underlines this with a line okay so when i hover over it and hit alt plus enter it says that convert to a range check okay so when i click on that it it prints n in 1.10 okay so uh the in operate this is the in operator uh we are going to study okay so instead of uh this whole thing n is greater than 11 and uh logical operator and n is less than equals to 20 what we can do is we can use the in operator okay so what inoperator does is in the in operator iterates or i can say checks the in the range okay so what i can do here is i can just write n in 11 dot dot 20 so it automatically introduce this signs and it uh states that uh and we will check n in 11 to 20 and both will include the equal to sign okay so instead of using now when i see uh the if statement it also uh is underlined so when i hover over it it shows that cascade if should be replaced with when and when i go uh on it and hit alt plus enter it shows replace if with when and then i hit enter it replaces it with the when statement okay so the kotlin or the i can say the intelligent idea is very useful and it's just most of the things to make the code easier and readable and less redundant okay so that was it for this video stay tuned
