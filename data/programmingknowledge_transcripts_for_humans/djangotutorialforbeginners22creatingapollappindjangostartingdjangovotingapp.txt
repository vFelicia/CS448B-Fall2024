With timestamps:

00:00 - one welcome to programming knowledge so
00:02 - I again welcome you all to programming
00:03 - knowledge so hi guys this is the twenty
00:06 - second tutorial of our django series so
00:08 - this is the github link about a posh
00:09 - stream you can move to this project
00:11 - download this project I have defined
00:14 - below the instructions and I would be
00:16 - updating this session soon because you
00:17 - know we are going to working on a new
00:19 - app and basically we are going to work
00:21 - in the same report sheet so basically I
00:23 - wanted to do this because we are going
00:25 - to make inside a single Django project
00:27 - we are basically going to develop two
00:29 - apps so I would define few changes how
00:32 - you can use two apps inside of the
00:35 - single project so main motive would be
00:37 - it because we would be using the same
00:38 - template and I would tell you how you
00:40 - can use the same template and defining
00:42 - the other pattern part so this how this
00:45 - way how you can use the basic template
00:48 - which we used in a previous app in this
00:50 - app as well and I would do finding which
00:52 - changes you have to do so this would
00:54 - help you out so let's get started so
00:56 - basically in this we are going to design
00:58 - a Django voting app so in this app we
01:01 - have a list of programming programming
01:04 - languages which the user within in that
01:08 - we will provide real time suggestions
01:10 - under the search like suppose any user
01:13 - types a letter J then we would provide
01:16 - them suggestions the programming
01:18 - language is starting with the letter J
01:19 - such a Java or JavaScript or same in the
01:22 - if you type P then we would have P is
01:25 - like Perl programming programming
01:27 - language Python so in this like C or C
01:30 - stands for C and C++ so providing
01:34 - suggestions or like in the P we could
01:35 - also define a suggestion under PHP as
01:37 - well so like in this tutorial we are
01:40 - going to create a voting app we're going
01:41 - to start with this and we vote for each
01:43 - programming language then we use a
01:45 - progress bar that how many words they
01:47 - have got and we then would return or
01:50 - render a progress progress bar on the
01:53 - front-end part and we would update the
01:55 - vote for each language if you vote for
01:57 - more okay so let's get started with this
02:00 - so basically this is my server so the
02:05 - server has started okay because I so
02:07 - basically I would define some some few
02:09 - changes like this is my settings or py
02:12 - file so
02:13 - earlier it was temperate / calculator
02:16 - app but now it is voting app because we
02:18 - would be listening to the templates
02:20 - folder so I would move to the templates
02:22 - folder yeah this is the templates folder
02:24 - so it it has two folders the one is for
02:27 - calculator app and another is for voting
02:29 - app so we are referring to the voting
02:32 - aye Holden inside the templates so for
02:35 - the earlier happy you should tackle a
02:37 - trap so you need to define unchanged
02:39 - calculator app if you are using
02:40 - calculator app and then if you are using
02:42 - voting immunity to win gotiya so
02:45 - basically what we did we greatly the
02:48 - same HTML page okay now then for
02:51 - calculator app we if you want to use
02:53 - then we need to define template slash
02:55 - calculator app if we are going to run
02:58 - the calculator app okay and if you want
03:01 - to run the voting app we need to define
03:02 - template slash voting okay so this is
03:06 - the main the change we need to define so
03:09 - the please take care about it and I will
03:11 - define this in the portion attractions
03:13 - as well okay and the next okay now we
03:16 - will move to URL start pivotal okay the
03:19 - one thing URL start py file of Django
03:23 - projects okay so basically when I do
03:28 - okay so this is calculated app so
03:33 - include calculator I have dot URLs so
03:35 - for voting app we will do voting app
03:37 - include voting app dot URLs
03:39 - this is very simple okay so basically in
03:42 - the same way I'll give a quick overview
03:44 - for templates we have templates folder
03:46 - let me again show you the templates
03:48 - folder yes templates for calculator app
03:50 - templates so voting app then you are
03:52 - installed py file for calculator app as
03:54 - well and voting episode okay now we will
03:58 - move to UNF start py file so basically
04:01 - I'm clicking on new or if - ah - I'm
04:02 - viola voting app okay so this is very
04:04 - similar we have done at this as earlier
04:07 - as well so like we have like URL pattern
04:11 - the path use dot index name is equal to
04:13 - index now if I go to use dot py file so
04:16 - I move to the view store py file of
04:18 - voting app ok so you this is a back end
04:22 - logic for also working on ok so
04:25 - before this what we can do so this is
04:27 - the index so we can what we can do so we
04:33 - need to generate let me do one thing or
04:36 - we can do what we can do I'll run this
04:39 - server
04:39 - okay and then I'll move to voting yeah
04:51 - here you can see like this is Django
04:54 - voting ah okay and like I've defined
04:57 - food changes I moved to an index or HTML
05:00 - file
05:00 - so basically when I'm moving to index
05:02 - dot HTML file
05:03 - I'm moving to the voting app okay so
05:06 - this looks fine okay so I change the
05:09 - title Django voting app I will finance
05:11 - Django voting tab Django voting app
05:16 - Django putting up good good about
05:18 - instructions I move to the about
05:20 - instructions so pick your favorite
05:22 - language okay so you need to define when
05:25 - this I pick your favorite favorite
05:27 - language and would okay sign would okay
05:32 - this is very simple then select your
05:33 - language and see result this is the
05:35 - basic instructions okay in the number I
05:38 - had to find some changes you can see
05:39 - like in the nav class Nevada and
05:43 - background is dark so here you can see
05:45 - this Inaba dark reference to this one
05:47 - background dog refresher this color so
05:49 - hey because either never has been
05:51 - darkened further to see the response in
05:54 - nature we can press control shift I okay
05:57 - okay so here you can see it's good okay
06:00 - we have the nav bar so if it's working
06:02 - fine so in the about pick your favorite
06:04 - language select your language and see
06:05 - results okay so in this next like so
06:09 - basically we are going to define and one
06:13 - thing we need to make sure that that in
06:16 - the form I had to find the image like I
06:20 - am referring to the static folder okay
06:22 - let me go to the static folder this is
06:24 - main door jpg okay and this is main to
06:27 - wrote jpg okay so so basically in main
06:31 - road jpg this was referring to the
06:33 - calculator app and this is main Touro
06:35 - jpg and this is mm to this coding
06:38 - background structure okay so basically
06:40 - so like and the good part is that index
06:44 - dot HTML still exists so this is the
06:48 - index dot HTML of calculator app so this
06:51 - is this is index dot HTML of calculator
06:53 - app and this is the whole logic we had
06:55 - written it better if end result okay and
06:58 - here you can see here you can see the
07:00 - nav bar is equal to I can show you one
07:03 - thing they nabbed one light and navbar
07:05 - background is like that this is for the
07:06 - calculator app okay and like in this
07:10 - even image we had made also that was
07:14 - main road jpg so here I can try to show
07:17 - the similarities between that under the
07:19 - same Django broaden we are making it to
07:21 - apps and basically I wanted to show you
07:23 - one thing that we are using the same
07:24 - template for both the apps without
07:26 - writing the code as much just making the
07:30 - modification necessaries we needed okay
07:32 - so this is also good so basically I'll
07:34 - just quickly like if you want to use
07:36 - calculator app you need to define
07:38 - template slash calculator app here okay
07:41 - so very quick overview the templates
07:43 - calculator app is there and the same
07:45 - with templates voting I will app is
07:47 - there and then both of them have index
07:48 - HTML index of HTML one has a different
07:51 - image one has another image and
07:53 - background art and background like what
07:55 - the different respective numbers what I
07:57 - have defined so in order to run the
07:59 - respective file what can you do you need
08:02 - to define template slash calculator have
08:03 - when you are going to run the calculator
08:05 - app and templates are floating up when
08:07 - you're going to run the boarding up so
08:08 - let me very clear with this so it
08:11 - doesn't create an issue okay so
08:13 - basically what I want you to do I want
08:16 - you to solve to get further like move on
08:22 - with the backend part also because will
08:24 - be view we are going to use this
08:25 - ready-made template which is help us in
08:27 - the first attempt I want you to solve
08:28 - one coding problem here because this
08:31 - will help you to make a back and logic
08:33 - so I type ctrl n like you have an array
08:36 - okay and it has all the elements like it
08:41 - can be any elements 1 2 2 2 comma 3
08:45 - comma 3 comma 3 or something like mixed
08:48 - numbers as well or like 4 comma 4 comma
08:51 - 4
08:52 - okay okay the fitnah might not be
08:55 - necessary it is sorted I'll give this a
08:57 - seven to one three four five six
09:02 - okay okay what I can do this is an
09:05 - addict okay I will copy this okay I'll
09:09 - open the page okay sorry sorry sorry
09:14 - I'll open the ideally yes okay so this
09:18 - is the array so what I want to do to
09:20 - like I want you to get the frequency of
09:25 - each element okay so like what I'm going
09:29 - to tell you that if I do add it dot
09:32 - count one okay so we to tell us three
09:37 - like one is three times this is a 1 this
09:39 - is a 1 this is a 1 2 3 times 3 so like
09:43 - but I want you to do like like what I
09:46 - want you to do like basically I want you
09:48 - to design a data structure in such a way
09:51 - so with this this this is very necessary
09:53 - which sources frequency of each element
09:57 - in like a frequency of each element of
09:59 - the array its source and itself so you
10:02 - want to design a data structure so so I
10:05 - would give you a hint like in this
10:08 - tutorial what you can do you can define
10:11 - dictionary as a data structure in which
10:14 - a key will be element element of array
10:22 - okay good and the value will be
10:28 - frequency okay so it might not be
10:33 - necessary that a deck should be sorted
10:35 - or unsorted it could be anything random
10:37 - numbers sorted unsorted that is not in
10:39 - the case of and if a new element is
10:42 - added to the array you should update the
10:45 - frequency okay so then update the
10:49 - frequency update the frequency okay so
10:54 - you need to define like the when you
10:56 - traverse the rider or till the time you
10:58 - can do one thing you can over you can be
11:01 - like from a little bit this so this is
11:03 - the your array you
11:05 - to define a data structure which would I
11:06 - am giving you a hint to that you need to
11:08 - define a dictionary okay
11:10 - dictionary okay so dictionary is the
11:12 - data structure you are going to use so
11:14 - so basically key will be the element of
11:17 - that and value will be the frequency so
11:19 - you need divine in such a way okay
11:20 - so you can think on this problem because
11:23 - this problem is very necessary for us to
11:25 - think on the backend part okay and till
11:28 - time what we have seen like like images
11:31 - being changed about changed and
11:33 - information okay I'll update the
11:34 - information part yet okay like when I
11:37 - click on instruction this all
11:39 - instructions part I can go to this
11:40 - enough about working fine okay and I
11:43 - change the image as our example so one
11:47 - instruction input instruction in order
11:49 - to use a calculator to have you need to
11:51 - change here the template our calculator
11:54 - app and template shot a template slash
11:56 - calculator for calculator and template
11:58 - slash voting app for the voting app okay
12:00 - in order to run the respective apps
12:02 - okay so till know we are you know voting
12:03 - app so we have defined template flash
12:05 - code here so I'll catch up you in the
12:07 - next tutorial so we will solve this
12:10 - problem what is a very good problem this
12:12 - is basically related to data structures
12:14 - and algorithms but it would help you out
12:16 - to solve this back-end part so thank you
12:18 - guys I'll catch up in the next section

Cleaned transcript:

one welcome to programming knowledge so I again welcome you all to programming knowledge so hi guys this is the twenty second tutorial of our django series so this is the github link about a posh stream you can move to this project download this project I have defined below the instructions and I would be updating this session soon because you know we are going to working on a new app and basically we are going to work in the same report sheet so basically I wanted to do this because we are going to make inside a single Django project we are basically going to develop two apps so I would define few changes how you can use two apps inside of the single project so main motive would be it because we would be using the same template and I would tell you how you can use the same template and defining the other pattern part so this how this way how you can use the basic template which we used in a previous app in this app as well and I would do finding which changes you have to do so this would help you out so let's get started so basically in this we are going to design a Django voting app so in this app we have a list of programming programming languages which the user within in that we will provide real time suggestions under the search like suppose any user types a letter J then we would provide them suggestions the programming language is starting with the letter J such a Java or JavaScript or same in the if you type P then we would have P is like Perl programming programming language Python so in this like C or C stands for C and C++ so providing suggestions or like in the P we could also define a suggestion under PHP as well so like in this tutorial we are going to create a voting app we're going to start with this and we vote for each programming language then we use a progress bar that how many words they have got and we then would return or render a progress progress bar on the frontend part and we would update the vote for each language if you vote for more okay so let's get started with this so basically this is my server so the server has started okay because I so basically I would define some some few changes like this is my settings or py file so earlier it was temperate / calculator app but now it is voting app because we would be listening to the templates folder so I would move to the templates folder yeah this is the templates folder so it it has two folders the one is for calculator app and another is for voting app so we are referring to the voting aye Holden inside the templates so for the earlier happy you should tackle a trap so you need to define unchanged calculator app if you are using calculator app and then if you are using voting immunity to win gotiya so basically what we did we greatly the same HTML page okay now then for calculator app we if you want to use then we need to define template slash calculator app if we are going to run the calculator app okay and if you want to run the voting app we need to define template slash voting okay so this is the main the change we need to define so the please take care about it and I will define this in the portion attractions as well okay and the next okay now we will move to URL start pivotal okay the one thing URL start py file of Django projects okay so basically when I do okay so this is calculated app so include calculator I have dot URLs so for voting app we will do voting app include voting app dot URLs this is very simple okay so basically in the same way I'll give a quick overview for templates we have templates folder let me again show you the templates folder yes templates for calculator app templates so voting app then you are installed py file for calculator app as well and voting episode okay now we will move to UNF start py file so basically I'm clicking on new or if ah I'm viola voting app okay so this is very similar we have done at this as earlier as well so like we have like URL pattern the path use dot index name is equal to index now if I go to use dot py file so I move to the view store py file of voting app ok so you this is a back end logic for also working on ok so before this what we can do so this is the index so we can what we can do so we need to generate let me do one thing or we can do what we can do I'll run this server okay and then I'll move to voting yeah here you can see like this is Django voting ah okay and like I've defined food changes I moved to an index or HTML file so basically when I'm moving to index dot HTML file I'm moving to the voting app okay so this looks fine okay so I change the title Django voting app I will finance Django voting tab Django voting app Django putting up good good about instructions I move to the about instructions so pick your favorite language okay so you need to define when this I pick your favorite favorite language and would okay sign would okay this is very simple then select your language and see result this is the basic instructions okay in the number I had to find some changes you can see like in the nav class Nevada and background is dark so here you can see this Inaba dark reference to this one background dog refresher this color so hey because either never has been darkened further to see the response in nature we can press control shift I okay okay so here you can see it's good okay we have the nav bar so if it's working fine so in the about pick your favorite language select your language and see results okay so in this next like so basically we are going to define and one thing we need to make sure that that in the form I had to find the image like I am referring to the static folder okay let me go to the static folder this is main door jpg okay and this is main to wrote jpg okay so so basically in main road jpg this was referring to the calculator app and this is main Touro jpg and this is mm to this coding background structure okay so basically so like and the good part is that index dot HTML still exists so this is the index dot HTML of calculator app so this is this is index dot HTML of calculator app and this is the whole logic we had written it better if end result okay and here you can see here you can see the nav bar is equal to I can show you one thing they nabbed one light and navbar background is like that this is for the calculator app okay and like in this even image we had made also that was main road jpg so here I can try to show the similarities between that under the same Django broaden we are making it to apps and basically I wanted to show you one thing that we are using the same template for both the apps without writing the code as much just making the modification necessaries we needed okay so this is also good so basically I'll just quickly like if you want to use calculator app you need to define template slash calculator app here okay so very quick overview the templates calculator app is there and the same with templates voting I will app is there and then both of them have index HTML index of HTML one has a different image one has another image and background art and background like what the different respective numbers what I have defined so in order to run the respective file what can you do you need to define template slash calculator have when you are going to run the calculator app and templates are floating up when you're going to run the boarding up so let me very clear with this so it doesn't create an issue okay so basically what I want you to do I want you to solve to get further like move on with the backend part also because will be view we are going to use this readymade template which is help us in the first attempt I want you to solve one coding problem here because this will help you to make a back and logic so I type ctrl n like you have an array okay and it has all the elements like it can be any elements 1 2 2 2 comma 3 comma 3 comma 3 or something like mixed numbers as well or like 4 comma 4 comma 4 okay okay the fitnah might not be necessary it is sorted I'll give this a seven to one three four five six okay okay what I can do this is an addict okay I will copy this okay I'll open the page okay sorry sorry sorry I'll open the ideally yes okay so this is the array so what I want to do to like I want you to get the frequency of each element okay so like what I'm going to tell you that if I do add it dot count one okay so we to tell us three like one is three times this is a 1 this is a 1 this is a 1 2 3 times 3 so like but I want you to do like like what I want you to do like basically I want you to design a data structure in such a way so with this this this is very necessary which sources frequency of each element in like a frequency of each element of the array its source and itself so you want to design a data structure so so I would give you a hint like in this tutorial what you can do you can define dictionary as a data structure in which a key will be element element of array okay good and the value will be frequency okay so it might not be necessary that a deck should be sorted or unsorted it could be anything random numbers sorted unsorted that is not in the case of and if a new element is added to the array you should update the frequency okay so then update the frequency update the frequency okay so you need to define like the when you traverse the rider or till the time you can do one thing you can over you can be like from a little bit this so this is the your array you to define a data structure which would I am giving you a hint to that you need to define a dictionary okay dictionary okay so dictionary is the data structure you are going to use so so basically key will be the element of that and value will be the frequency so you need divine in such a way okay so you can think on this problem because this problem is very necessary for us to think on the backend part okay and till time what we have seen like like images being changed about changed and information okay I'll update the information part yet okay like when I click on instruction this all instructions part I can go to this enough about working fine okay and I change the image as our example so one instruction input instruction in order to use a calculator to have you need to change here the template our calculator app and template shot a template slash calculator for calculator and template slash voting app for the voting app okay in order to run the respective apps okay so till know we are you know voting app so we have defined template flash code here so I'll catch up you in the next tutorial so we will solve this problem what is a very good problem this is basically related to data structures and algorithms but it would help you out to solve this backend part so thank you guys I'll catch up in the next section
