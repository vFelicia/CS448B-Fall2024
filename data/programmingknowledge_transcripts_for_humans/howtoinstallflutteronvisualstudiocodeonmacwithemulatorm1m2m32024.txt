With timestamps:

00:00 - hey guys in this video I'm going to show
00:01 - you how you can install and set up
00:03 - flutter on your Mac operating system
00:06 - using visual studio code I'm also going
00:09 - to show you how you can run your flutter
00:12 - app on iOS emulator and the Android
00:17 - emulator so let's see how we can do it
00:19 - so first of all open your favorite
00:21 - browser and search for install flutter
00:23 - and the first link which will appear
00:24 - here will be from docs. flutter. deev
00:28 - for/ get started for/ install so I'm
00:31 - going to click on this link if you land
00:33 - to the homepage of docs. flutter. deev
00:37 - then click on get started here and you
00:40 - will be able to see these options we
00:44 - need to choose the Mac OS and as I
00:46 - mentioned I'm going to show you how you
00:49 - can set up flutter for Android as well
00:52 - as iOS with the Android and iOS
00:56 - emulators so let's see them one by one
01:00 - so first of all I'm going to uh click on
01:02 - iOS option here and then here it's going
01:05 - to show you the hardware and software
01:08 - requirements and when you scroll down a
01:10 - little it's going to show you what tools
01:13 - you will require in order to run your
01:16 - flut app on let's say the iOS emulator
01:21 - right because we have selected the iOS
01:23 - option as you can see here we need the X
01:27 - code here and then you can optionally
01:32 - also install this tool I'm not going to
01:35 - show you this tool but I'm going to show
01:38 - you how you can set up xcode and run
01:41 - your uh flutter app using the IOS app so
01:45 - we are going to proceed with xcode
01:47 - installation in few seconds but let's
01:50 - scroll down a little here and here you
01:52 - will be able to see text editor or
01:54 - integrated development environment so
01:56 - you can see Visual Studio code Android
01:59 - Studio and intellig idea as I mentioned
02:03 - we are going to uh do it on Visual
02:05 - Studio code so I'm expecting you already
02:08 - have installed Visual Studio code on
02:10 - your Mac operating system because this
02:12 - installation is really easy right when I
02:16 - scroll down a little here I can see uh
02:19 - install the flutter SDK option here you
02:23 - have two uh options you can install the
02:28 - flutter SDK using visual studio code or
02:31 - you can install the flutter SDK using
02:34 - this ZIP file option so you can choose
02:37 - any option from here but I recommend you
02:40 - to choose this option which says
02:42 - download and install and and we are
02:44 - going to proceed with the installation
02:46 - of flutter SDK using the direct download
02:50 - and install option you have two options
02:53 - here first one is for Intel processors
02:56 - and other one is for apple silicon chips
02:59 - for for example M1 M2 or M3 chip I have
03:03 - a Macbook which support apple silicon so
03:05 - I'm going to click on this option and
03:09 - once you click on this option this ZIP
03:11 - file is going to download so it's around
03:15 - 1.1 gigabyte file so just wait for few
03:18 - seconds until this file is downloaded
03:21 - and once this ZIP file is downloaded you
03:24 - can see it will look like this now when
03:26 - you uh scroll down a little in this
03:29 - document mentation it recommends us to
03:31 - create this development folder under
03:35 - your home directory and then it
03:38 - recommends us that we extract our
03:41 - flutter zip file in this development
03:44 - folder so first of all we going to open
03:47 - our terminal and once you open the
03:50 - terminal as you can see it recommends us
03:53 - to create this development folder under
03:56 - your home directory so when you open
03:59 - your uh terminal you are directly in
04:02 - your home directory and when you write
04:05 - PWD here the home directly uh path looks
04:09 - like this for/ users for slash your
04:12 - username right under this we need to
04:14 - create the development folder to create
04:18 - the development folder just write mkdir
04:22 - and then development and then press
04:24 - enter and then you will be able to see
04:28 - this development folder on under your
04:30 - home directory so you can see that this
04:33 - development folder is
04:36 - created so just copy this command but we
04:39 - need to change this command a little so
04:42 - I'm going to copy this command and paste
04:43 - it here let me just maximize this
04:46 - terminal and here we need to make few
04:50 - changes so because our uh flutter zip
04:54 - file is located in the downloads folder
04:58 - and not in the development folder folder
05:00 - so instead of this what we need to do is
05:04 - we need to just write till for slash
05:07 - downloads for Slash the name of your
05:10 - flutter file right so if you write uh
05:13 - flutter and then press tab on your
05:16 - keyboard it's going to autoc complete
05:19 - your file name right so the command in
05:22 - our case is this unzip for/ till SL
05:26 - downloads SL flutter Mac OS and whatever
05:31 - the version of uh flutter you have
05:34 - downloaded so this might change in your
05:37 - case and that's why I'm saying that you
05:41 - can use the autocomplete feature of your
05:43 - Mac terminal so I'm going to just press
05:46 - enter here and you can see it's
05:49 - unzipping this uh ZIP file once this ZIP
05:52 - file is unzipped in the development
05:55 - folder let me clear the terminal and
05:59 - let's CD into our development folder and
06:03 - here when you do LS you will be able to
06:06 - see this flutter folder here so when you
06:08 - uh just go to your uh macbook's desktop
06:12 - you can see this go option here just
06:14 - click on home folder which is going to
06:17 - open your home folder in your home
06:19 - folder you will be able to see this
06:21 - development folder and then under
06:23 - development you have this flutter folder
06:26 - and under flutter you have all these
06:28 - files and in the next step we need to
06:30 - add the flutter path to our environment
06:33 - variables so if you're using newer
06:37 - versions of Mech it supports zsh on your
06:41 - terminal so what you need to do is you
06:44 - just need to add this uh flutter bin
06:48 - path in your zsh n file or you can also
06:54 - do the same in your zshrc file so if you
06:59 - already have zshrc file then you can add
07:04 - this path to zshrc file also so in my
07:08 - case zshrc File is already uh present so
07:14 - let me uh just write CD here so I'm in
07:17 - my home folder and when I write LS space
07:21 - hyphen Al you will be able to see that
07:26 - uh I have this zshrc file right
07:30 - so you can add this path into the zshrc
07:34 - file also if you don't have the zsh EnV
07:39 - file if you don't have zsh EnV or zshrc
07:44 - file just create this zsh n file and
07:48 - then just paste this path there in my
07:52 - case I'm going to open the zshrc file so
07:57 - I'm going to just write open
08:00 - then dot zshrc here and then press enter
08:04 - which is going to open my zshrc which
08:08 - already contains some other exports I'm
08:11 - going to just add this new export at the
08:15 - bottom of this file which is export path
08:19 - is equal to home/ development SL flutter
08:23 - for/ bin colon dollar path as you might
08:28 - already remember remember
08:30 - that you can see this path here right so
08:33 - this is our home folder and then for/
08:36 - development and our flutter
08:39 - directory resides in the development
08:41 - folder and we are going to put this path
08:45 - into our zshrc which is the bin path
08:50 - inside this bin path there is this
08:53 - flutter binary which we are going to use
08:56 - once this environment variable is set so
08:59 - once you have added this path just save
09:02 - your file by pressing command s and then
09:05 - close your file so once you saved your
09:08 - file just close your terminal so just
09:11 - close your terminal then open a new
09:14 - instance of your terminal and once the
09:17 - terminal is open you can run the flutter
09:20 - command so I'm going to just write uh
09:22 - flutter here and then space hyphen
09:25 - hyphen version and then press enter and
09:28 - it's going to show show me the version
09:30 - of flutter I have so you can see uh it
09:34 - has shown me this kind of uh welcome to
09:36 - flutter uh text here and it's going to
09:40 - also show me the flutter version which I
09:42 - have installed once you see this kind of
09:45 - output when you give flutter version
09:47 - command that means we have set the right
09:51 - environment variable for our flutter
09:54 - binary now once we have flutter
09:58 - installed
10:00 - then let's move to the next steps so I'm
10:03 - going to scroll up a little and we are
10:06 - going to uh install the X code so first
10:09 - of all you need to open the app store
10:11 - you can find the App Store icon on the
10:14 - doc this is the App Store icon so just
10:16 - click on that or you can also search for
10:20 - App Store in your Launchpad and then
10:23 - click on that and App Store will start
10:26 - from here just search for xcode
10:29 - and then press enter which is going to
10:31 - search for xcode and the result which we
10:35 - are uh looking for is this one which is
10:38 - called excode developer tools here I'm
10:42 - going to click on this uh download
10:45 - button so in my case it shows this
10:47 - warning which ISS download the older
10:49 - version of xcode the current version
10:51 - requires Mac OS 13.5 or later but you
10:55 - can download the last compatible version
10:58 - because right right now if I click on
11:00 - the Apple logo and then click on about
11:03 - uh this Mac I have the 13 version not
11:07 - the 13.5 so I can uh download the older
11:11 - version if you have the latest version
11:13 - of Mac OS uh you can download the latest
11:16 - version of uh compatible xcode here I'm
11:20 - going to click on download button which
11:22 - is going to start the download of the
11:25 - xcode so you can see uh this download
11:29 - has been started it's around 7 GB uh of
11:33 - download so it will take some time for
11:35 - the download to complete you can also go
11:38 - to the Launchpad and see the download
11:41 - process here you can see this download
11:44 - is going on so it's going to download
11:47 - around 7 7 GB of uh data so it'll take
11:52 - some time so just wait for the download
11:54 - to finish so once the download is
11:56 - complete it's going to start the
11:58 - installation process as you can see when
12:00 - I hover over this circle installation
12:03 - process is about 2% complete so now the
12:07 - xcode is installed on my Mac operating
12:10 - system once it's installed you will be
12:12 - able to see open button in front of
12:16 - xcode also in the Launchpad you will be
12:19 - able to see this xcode icon so I'm going
12:21 - to click on this xcode icon let me
12:24 - minimize this app store and then it's
12:27 - going to start the xcode so for the
12:30 - first time when xcode starts on your Mac
12:32 - operating system it's going to ask to
12:34 - agree with the license terms and
12:36 - conditions so if you want you can read
12:39 - these license terms and conditions and
12:41 - then click on agree and then give your
12:44 - MacBooks password which you use to log
12:46 - to your Mac operating system and then
12:49 - press okay and then you will be able to
12:51 - see this kind of window which says
12:53 - select the platforms which you would
12:55 - like to develop for for now I want to
12:58 - use it for Mac OS and iOS development
13:03 - later I can also install the toolkit for
13:06 - watch Os or TV OS but for now I don't
13:09 - want that so I will just uh leave it as
13:12 - default and then click on install which
13:14 - is going to start the installation of
13:16 - additional components and you can see
13:19 - the progress bar of the installation so
13:21 - at this point I just need to wait for
13:23 - this progress bar to reach to the 100%
13:26 - Mark and once that's done and xcode is
13:29 - going to launch in few seconds so you
13:32 - can see uh xcode has been
13:35 - started first of all it says what's new
13:38 - in xcode excode Cloud Swift UI and it's
13:42 - going to give you the list of all the
13:45 - features I can click on continue here
13:48 - and now xcode has been started once you
13:52 - have xcode let's also install Android
13:55 - Studio so first of all open your
13:57 - favorite browser and search for Android
13:59 - studio and the first link which will
14:00 - appear here will be from
14:04 - developer.android.com we going to click
14:06 - on this uh link and when this web page
14:09 - opens you will be able to see straight
14:11 - away this download button on this uh web
14:14 - page so we are going to click on this
14:16 - download button which is going to show
14:18 - you uh this kind of terms and conditions
14:21 - page you can read about these terms and
14:24 - conditions here and then scroll down at
14:28 - the very B bottom where you need to
14:30 - agree with these terms and conditions so
14:33 - if you agree just check this check box
14:36 - and then you will see two buttons here
14:40 - so if you are using the MacBook or Mac
14:43 - operating system with Intel chip then
14:45 - you can click on this button if you are
14:48 - using the Mac operating system with the
14:51 - Apple chip for example M1 M2 M3 or any
14:54 - other Apple chip then click on this
14:57 - button so so I have a MacBook with an
15:00 - apple chip so I'm going to click on this
15:02 - apple chip uh button here which is going
15:05 - to start the download of this DMG file
15:10 - so you can see uh at the time of uh
15:13 - making this video this file is around
15:15 - 1.1 gigabyte files which is going to
15:18 - take some time to download so just wait
15:20 - for the download to complete here so
15:23 - once this DMG file is downloaded I'm
15:25 - going to click on this DMG file and then
15:29 - I'm going to minimize this
15:31 - browser so as you can see on this window
15:34 - the installation process is really
15:36 - simple you just need to drag this
15:38 - Android Studio icon into your
15:40 - applications folder so if you are using
15:43 - your MacBook and it's trackpad you just
15:47 - need to press command key on your
15:49 - keyboard and then select Android studio
15:51 - and then drag and drop this uh icon on
15:55 - your applications folder which is going
15:57 - to copy Android Studio into your
16:01 - applications folder you can see this
16:04 - copying is done now once the copying is
16:07 - done the Android Studio is installed on
16:10 - our Mac operating system and then you
16:12 - can click on the Launchpad and then
16:15 - search for Android Studio here so I'm
16:18 - going to just uh search for Android
16:20 - Studio you can see this icon is
16:23 - available here so I'm going to click on
16:25 - this Android Studio icon just going to
16:27 - start the Android Studio on our Mac
16:30 - operating system so first of all you
16:32 - will see this kind of window which says
16:35 - import Android Studio settings so if you
16:38 - are uh starting Android Studio for the
16:41 - first time I will recommend you to just
16:44 - leave this uh radio button on do not
16:47 - import settings here and then click on
16:51 - okay and then you will see this kind of
16:55 - window which says help improve Android
16:57 - Studio I don't want to share any uh data
17:00 - with uh Google so I'm going to click on
17:03 - don't send
17:04 - here and you can see this kind of
17:07 - Android Studio Setup Wizard so at this
17:10 - point I'm going to click on next here
17:13 - and then I'm going to choose the
17:14 - standard installation type you can also
17:17 - choose the custom one but uh I will
17:21 - recommend you to choose the standard one
17:23 - for now and then click on next and then
17:27 - you will see all these settings so you
17:30 - can verify all these settings here and
17:33 - then if you are happy with all those
17:35 - settings click on next and then on this
17:38 - next window you will see this license
17:40 - agreement so if you want you can read
17:43 - these license terms and conditions and
17:45 - if you agree with those license terms
17:47 - and conditions click on accept here and
17:51 - also select the second uh item here in
17:54 - this list which is the SDK arm and then
17:58 - accept here also okay so you need to
18:01 - accept in both the sections one for
18:04 - Android SDK license and other for
18:07 - Android SDK armed DBT
18:10 - license once you see this finish button
18:13 - click on finish which is going to start
18:16 - the download of all the components which
18:20 - Android Studio requires for its
18:22 - installation so this setting up of
18:25 - components uh will only happen once when
18:28 - you start your Android Studio for the
18:30 - first time so at this point you just
18:33 - need to wait for uh few seconds until
18:37 - this installation of all those
18:38 - components uh is going on and now as you
18:41 - can see after a few seconds I can see
18:44 - this finish button here so I'm going to
18:46 - click on this finish button which is
18:48 - going to start Android Studio on my Mac
18:51 - operating system so once your Android
18:54 - Studio starts we are going to go to the
18:56 - plugins section here and then we are
18:59 - going to search for flutter here and you
19:03 - will see this result for flutter so I'm
19:05 - going to click on install and then click
19:08 - on accept which is going to install this
19:10 - flutter plug-in in addition it's also
19:14 - going to add the support for DOT so dot
19:17 - will also be installed so I'm going to
19:19 - click on install here and then it's
19:21 - going to install flutter and also it's
19:25 - going to install the dot programming
19:27 - language once this is downloaded it's
19:30 - asking me to relaunch the Android Studio
19:32 - so I'm going to just click on restart
19:34 - IDE and then click on restart which is
19:38 - going to restart my Android Studio
19:41 - IDE once my Android Studio IDE starts I
19:45 - can see this new Option here for
19:47 - creating a new flutter project so once
19:51 - you have installed the flutter plug-in
19:54 - here let's open our terminal and let's
19:57 - run this command command which is called
20:00 - flutter doctor command and then press
20:03 - enter and it's going to show you uh the
20:06 - status of all uh the tools so when I run
20:10 - flutter doctor command I can see under
20:14 - Android tool chain that the command line
20:18 - tools component is missing here right so
20:22 - let's see how we can solve this problem
20:25 - so for this open your Android Studio
20:29 - and then if you see this kind of
20:32 - interface then select more actions and
20:36 - then select SDK manager and then select
20:40 - Android's SDK option here and you will
20:43 - be able to see this SDK tools option and
20:47 - here you can see uh the flutter doctor
20:51 - command is complaining about this option
20:55 - which says Android SDK command line to
20:58 - tools which is not installed yet so we
21:01 - are going to just uh check this check
21:03 - box and then click on apply and then
21:07 - click on okay which is going to install
21:09 - the Android SDK command line tool once
21:12 - that's done just click on finish and now
21:15 - you can see this is installed and we can
21:19 - run the command once again so I'm going
21:22 - to click on okay and then once we run
21:26 - the flutter doctor command once again
21:28 - again you can see that error is gone so
21:30 - now I have one more warning here but I
21:35 - don't see this command line tools
21:38 - component is missing error right so now
21:41 - I have one more warning here which says
21:44 - some Android license not accepted so for
21:47 - this I'm going to run this command which
21:50 - is suggested here so for this I'm going
21:52 - to run this command which is flutter
21:55 - doctor space hyphen hyphen and Android
21:58 - hyphen license you can see this command
22:01 - I have already typed which is flutter
22:03 - doctor Android license press
22:06 - enter and then press y here and then
22:10 - press enter and once again press Y and
22:12 - then press enter and then just keep on
22:15 - pressing y until this license terms and
22:18 - conditions uh is accepted right so once
22:22 - you see that all SDK package license
22:25 - accepted I can run the flutter doctor
22:28 - command once again and this time I can
22:31 - see that Android tool chain is now fully
22:35 - installed so now when I run the flutter
22:38 - doctor command I can see uh this xcode
22:41 - error which says and it says xcode
22:44 - installation is incomplete a full
22:46 - installation is necessary for iOS and
22:49 - Mac OS development so to solve this we
22:52 - just need to open the xcode I'm going to
22:55 - just search for xcode and then open this
22:58 - xcode once this x code opens you will
23:02 - see the xcode menu at the top just click
23:05 - on xcode here and then select settings
23:09 - here if you see preferences option you
23:11 - can select the preferences option here
23:15 - once you do that just select locations
23:19 - tab here so select location Tab and here
23:22 - if you see uh this command line tool
23:24 - empty then select the version of xcode
23:29 - and it's going to ask you uh to provide
23:31 - your MacBooks password which you use to
23:34 - log to your Macbook so I'm going to just
23:36 - uh provide that password and now I can
23:39 - see that this xcode version is selected
23:43 - now let's run this uh flutter doctor
23:46 - command once again and now that error
23:49 - which we were seeing is gone right so
23:53 - now we have successfully installed the
23:56 - essential uh tools for Android
23:58 - development and also the essential tools
24:02 - for the iOS development earlier we were
24:06 - seeing this xcode related error now we
24:09 - are just seeing this coka pad not
24:12 - installed that we will uh not require
24:15 - for now so I'm going to leave it as it
24:18 - is but other tools are installed right
24:21 - now once flutter SDK xcode and Android
24:25 - Studio are installed on our Mac
24:27 - operating system now let's move to the
24:30 - visual studio code and for that just
24:33 - open Visual Studio code editor and
24:36 - before doing anything here we just need
24:39 - to install the extension for the flutter
24:42 - so here click on this extensions Tab and
24:46 - then search for
24:48 - flutter and the first extension which
24:51 - will appear here will be uh this one
24:54 - this is the official app and you can see
24:57 - see this has been
24:59 - downloaded around 7.8 million times and
25:04 - it's from do code.org so we are going to
25:08 - install this extension just click on
25:10 - install which is going to install this
25:12 - extension and once this extension is
25:15 - installed you can see this disable
25:17 - uninstall and switch to pre-release
25:20 - version right so now let's go to the
25:25 - Explorer section here and here once your
25:28 - flutter extension is installed you can
25:31 - create your uh flutter project in
25:35 - several different ways right you can use
25:38 - the terminal to create your flutter app
25:41 - you can also use the command pallet of
25:44 - Visual Studio code to create your
25:48 - Android project so let me show you first
25:51 - of all how you can use the command
25:53 - pallet to create your flutter app for
25:56 - this press command shift p on your
26:00 - keyboard which is going to give you this
26:03 - kind of uh pallet here after this Arrow
26:07 - just write uh flutter and then colon and
26:12 - you will see this option here which says
26:16 - new project okay so I'm going to click
26:19 - on new project option here now here it
26:22 - says select your template so you can
26:25 - select the application template empty
26:28 - applications template skeleton and other
26:31 - uh project options are also available so
26:34 - I'm going to select the first option
26:36 - which is the application template here
26:39 - and then I need to choose the location
26:42 - where I want to save my project so so
26:45 - let's say I want to save my project into
26:47 - my documents folder so I'm going to uh
26:49 - select my folder here and then click on
26:53 - select folder to create the project in
26:56 - so I'm going to click here
26:58 - and now you need to give your project
27:00 - name here I can see the default name for
27:03 - my project which is flutter application
27:06 - I'm going to uh rename it
27:09 - to let's say mycore
27:13 - flut underscore app and the thing to
27:17 - remember here is I have given this name
27:20 - all in small letters and they are
27:24 - separated by underscores right so if
27:27 - possible just name your project in small
27:30 - letters and if it contains multiple
27:33 - words separate them by underscores once
27:36 - you have given the name to your project
27:39 - just press enter as suggested here so
27:42 - I'm going to press enter key on my
27:44 - keyboard and then click on Save here
27:46 - then it's going to also ask you to
27:49 - provide the workspace option from here
27:51 - I'm going to choose the same folder for
27:53 - example so I have created this my
27:56 - flutter app so I'm going to choose the
27:58 - same um uh folder for creating this
28:02 - workspace and you can see this flutter
28:05 - app has been created and you will see in
28:09 - some time this flutter app will be
28:12 - populated with few different folders and
28:15 - files right so this is the template we
28:18 - have chosen and that's why you will see
28:21 - all these files here right now once our
28:24 - flutter app is created it all already
28:27 - contains the sample code so we just need
28:30 - to run this in uh an Android emulator or
28:34 - iOS emulator to test it right so for
28:37 - this once again you can press command
28:40 - shift p on your keyboard which is going
28:42 - to open this kind of pallet once again
28:45 - and then colon and then just write
28:49 - launch emulator okay so this time we
28:53 - need to write flutter colon launch
28:55 - emulator and you will see this option
28:57 - which says flutter coolon launch
29:00 - emulator option click on this launch
29:02 - emulator option and you will see uh all
29:05 - these options here so this iOS simulator
29:09 - and this other Android simulator are
29:13 - installed when you have installed the
29:16 - xcode and the Android Studio on your Mac
29:20 - operating system right so if you have
29:22 - already installed xcode and Android
29:25 - Studio you will see both these options
29:29 - right when you have installed xcode this
29:32 - option is included in your Mac operating
29:36 - system for iOS simulator and when you
29:38 - have installed Android Studio this
29:41 - option has been installed on your Mac
29:45 - operating system for the Android
29:47 - emulator so let's say first of all we
29:49 - want to run our app on iOS simulator so
29:52 - we will choose iOS simulator here which
29:55 - is going to start the iOS simulator here
29:58 - you can see the iOS simulator is
30:01 - starting now once your iOS simulator uh
30:04 - has been started let me resize this uh
30:08 - Visual Studio code editor and then let's
30:11 - move this simulator on the side let's
30:14 - run this app you can run this app using
30:17 - this uh run option on the top so just
30:20 - click on run option on the top and then
30:23 - click on run without debugging I'm going
30:26 - to click on run without debugging option
30:28 - here now I can see this app has been
30:31 - launched on my iOS simulator and I can
30:34 - test this app by pressing on this plus
30:36 - button and everything is working I can
30:39 - also see this uh option here which says
30:41 - D Dev tool includes additional tools for
30:45 - debugging I can click on open here and
30:49 - then you can see open widget for
30:53 - inspector open CPU profiler and all
30:56 - these options here right so you can also
30:59 - choose these kind of options to uh debug
31:03 - your application now let's launch our
31:05 - app on the Android emulator also for
31:09 - this once again press command shift p on
31:12 - your pallet so once uh we have tested
31:15 - the app on iOS simulator I'm going to
31:18 - just press on this stop button to stop
31:21 - the application on the iOS simulator and
31:25 - now let's run our application on the
31:27 - Android Simulator for this just press
31:30 - command shift p and then once again
31:33 - choose flutter colon launch emulator
31:36 - option now this time select the option
31:39 - which says Android at the end okay so
31:42 - for example this option says Android at
31:45 - the end this is the default emulator
31:47 - which comes with Android studio right so
31:50 - I'm going to select uh this option here
31:53 - and once I select this option it's going
31:55 - to launch the Android emulator you can
31:57 - see the Android emulator has been
31:59 - launched and I can move this on the side
32:02 - for example and then let's run our app
32:06 - by just uh pressing run and then click
32:09 - on run without debugging now our app has
32:13 - been launched on this Android simulator
32:17 - okay so once again we can just uh press
32:20 - on this plus button and everything is
32:22 - working fine right so we have tested our
32:26 - app on the Android simulator and the iOS
32:31 - simulator now let me show you one more
32:34 - option to create the project using
32:36 - command line and launch your app using
32:39 - command line on the Android emulator and
32:42 - the iOS emulator so for this I'm going
32:45 - to close both these emulators first so
32:50 - let me close this one and let me also
32:53 - close this uh iOS emulator and then uh
32:57 - just quit from here and then let me just
33:01 - uh close this uh project from here okay
33:05 - and we are going to create a new project
33:07 - so now I'm going to open a separate
33:10 - folder and I'm going to uh show you how
33:12 - you can create a flutter application
33:16 - using the flutter commands so here I'm
33:18 - going to click on open folder here and
33:21 - then once again I'm going to create a
33:23 - new folder and I'm going to name my
33:26 - folder
33:27 - as apps so this is the folder where your
33:31 - flutter app will be created right so
33:35 - this will be the parent folder where all
33:37 - your flutter apps can be created I'm
33:39 - going to click on create here and then
33:42 - click on open which is going to open
33:45 - this flutter app right so now let's say
33:48 - I want to use the terminal to uh create
33:52 - this uh project so I'm going to just
33:54 - click on Terminal New terminal here and
33:57 - because we have already installed the
34:00 - flutter uh SDK and we have set the
34:03 - environment variables for flutter SDK in
34:06 - the terminal we can write uh flutter
34:10 - space create and give the name of your
34:14 - app right say I'm going to name my app
34:17 - as
34:18 - mycore appcore 2 this will be the second
34:22 - app right and then press enter which is
34:25 - going to create your flutter app you can
34:28 - see this flutter app has been created
34:31 - and it has also uh created the sample uh
34:36 - template for us right then you can read
34:40 - this uh output here you just need to CD
34:43 - into your application and then run the
34:46 - flutter run Command right so I'm going
34:49 - to CD into my app to uh folder here and
34:54 - then I can run the flutter run run
34:57 - command but before this I need to launch
35:00 - either the Android emulator or the iOS
35:04 - emulator once again I can go to the
35:06 - flutter documentation from where we have
35:09 - uh installed the flutter SDK and then
35:13 - when I click on the Mac OS option and
35:15 - iOS option at the very bottom you will
35:18 - also see the command using which you can
35:21 - launch your iOS emulator and you can see
35:26 - this is the command so you can also use
35:29 - this command once you have xcode
35:31 - installed to launch your iOS simulator
35:34 - so I'm going to just copy this command
35:36 - then click on the spotlight option and
35:39 - then uh just open the terminal from here
35:41 - once the terminal is open I can just
35:44 - paste this command here and then press
35:46 - enter which is going to launch the iOS
35:48 - emulator right so you can use this
35:50 - command also to launch your iOS emulator
35:54 - and then once the emulator is open Let's
35:59 - uh run this flutter app here you just
36:01 - need to run flutter run command so I'm
36:04 - going to just write flutter space run
36:06 - and then press enter and it's going to
36:09 - run this flutter app on my iOS uh
36:13 - emulator just wait for little bit you
36:17 - can see the app has been launched on my
36:20 - iOS emulator so using this command line
36:24 - tool also you can create and run your
36:26 - app let me just uh press contrl C here
36:30 - close this application and now I can
36:33 - just close this iOS simulator now if you
36:37 - want to launch the Android simulator you
36:40 - need to open the Android studio app so
36:42 - go to the Launchpad and then search for
36:44 - Android uh studio and then launch
36:47 - Android Studio from here if you see this
36:49 - kind of interface here click on Three
36:51 - Dots here and then click on virtual
36:55 - device manager option
36:57 - let's say there is no project on your
36:59 - Android uh Studio then you will be able
37:02 - to find this uh device manager option in
37:06 - more options here so click on uh more
37:08 - options drop down menu and then click on
37:10 - virtual device manager where you will
37:13 - see the virtual device so just select
37:16 - the device here one device will be
37:19 - present here also create multiple
37:21 - virtual devices using this device
37:23 - manager so I'm going to launch the
37:25 - emulator from here which is going to
37:28 - launch my Android emulator as I
37:31 - mentioned and then I'm going to just uh
37:35 - minimize this and once the Android
37:39 - emulator has been launched I can just
37:42 - run the app using the same command which
37:45 - is flutter run and it's going to
37:47 - relaunch my application in the Android
37:50 - emulator now right I can see that the
37:53 - application has been launched this time
37:55 - on the the Android emulator right this
37:58 - is how you can use Visual Studio code to
38:01 - create your flutter applications and
38:04 - launch them on iOS or the Android
38:09 - emulators I hope you've enjoyed this
38:11 - video and I will see you in the next
38:12 - video

Cleaned transcript:

hey guys in this video I'm going to show you how you can install and set up flutter on your Mac operating system using visual studio code I'm also going to show you how you can run your flutter app on iOS emulator and the Android emulator so let's see how we can do it so first of all open your favorite browser and search for install flutter and the first link which will appear here will be from docs. flutter. deev for/ get started for/ install so I'm going to click on this link if you land to the homepage of docs. flutter. deev then click on get started here and you will be able to see these options we need to choose the Mac OS and as I mentioned I'm going to show you how you can set up flutter for Android as well as iOS with the Android and iOS emulators so let's see them one by one so first of all I'm going to uh click on iOS option here and then here it's going to show you the hardware and software requirements and when you scroll down a little it's going to show you what tools you will require in order to run your flut app on let's say the iOS emulator right because we have selected the iOS option as you can see here we need the X code here and then you can optionally also install this tool I'm not going to show you this tool but I'm going to show you how you can set up xcode and run your uh flutter app using the IOS app so we are going to proceed with xcode installation in few seconds but let's scroll down a little here and here you will be able to see text editor or integrated development environment so you can see Visual Studio code Android Studio and intellig idea as I mentioned we are going to uh do it on Visual Studio code so I'm expecting you already have installed Visual Studio code on your Mac operating system because this installation is really easy right when I scroll down a little here I can see uh install the flutter SDK option here you have two uh options you can install the flutter SDK using visual studio code or you can install the flutter SDK using this ZIP file option so you can choose any option from here but I recommend you to choose this option which says download and install and and we are going to proceed with the installation of flutter SDK using the direct download and install option you have two options here first one is for Intel processors and other one is for apple silicon chips for for example M1 M2 or M3 chip I have a Macbook which support apple silicon so I'm going to click on this option and once you click on this option this ZIP file is going to download so it's around 1.1 gigabyte file so just wait for few seconds until this file is downloaded and once this ZIP file is downloaded you can see it will look like this now when you uh scroll down a little in this document mentation it recommends us to create this development folder under your home directory and then it recommends us that we extract our flutter zip file in this development folder so first of all we going to open our terminal and once you open the terminal as you can see it recommends us to create this development folder under your home directory so when you open your uh terminal you are directly in your home directory and when you write PWD here the home directly uh path looks like this for/ users for slash your username right under this we need to create the development folder to create the development folder just write mkdir and then development and then press enter and then you will be able to see this development folder on under your home directory so you can see that this development folder is created so just copy this command but we need to change this command a little so I'm going to copy this command and paste it here let me just maximize this terminal and here we need to make few changes so because our uh flutter zip file is located in the downloads folder and not in the development folder folder so instead of this what we need to do is we need to just write till for slash downloads for Slash the name of your flutter file right so if you write uh flutter and then press tab on your keyboard it's going to autoc complete your file name right so the command in our case is this unzip for/ till SL downloads SL flutter Mac OS and whatever the version of uh flutter you have downloaded so this might change in your case and that's why I'm saying that you can use the autocomplete feature of your Mac terminal so I'm going to just press enter here and you can see it's unzipping this uh ZIP file once this ZIP file is unzipped in the development folder let me clear the terminal and let's CD into our development folder and here when you do LS you will be able to see this flutter folder here so when you uh just go to your uh macbook's desktop you can see this go option here just click on home folder which is going to open your home folder in your home folder you will be able to see this development folder and then under development you have this flutter folder and under flutter you have all these files and in the next step we need to add the flutter path to our environment variables so if you're using newer versions of Mech it supports zsh on your terminal so what you need to do is you just need to add this uh flutter bin path in your zsh n file or you can also do the same in your zshrc file so if you already have zshrc file then you can add this path to zshrc file also so in my case zshrc File is already uh present so let me uh just write CD here so I'm in my home folder and when I write LS space hyphen Al you will be able to see that uh I have this zshrc file right so you can add this path into the zshrc file also if you don't have the zsh EnV file if you don't have zsh EnV or zshrc file just create this zsh n file and then just paste this path there in my case I'm going to open the zshrc file so I'm going to just write open then dot zshrc here and then press enter which is going to open my zshrc which already contains some other exports I'm going to just add this new export at the bottom of this file which is export path is equal to home/ development SL flutter for/ bin colon dollar path as you might already remember remember that you can see this path here right so this is our home folder and then for/ development and our flutter directory resides in the development folder and we are going to put this path into our zshrc which is the bin path inside this bin path there is this flutter binary which we are going to use once this environment variable is set so once you have added this path just save your file by pressing command s and then close your file so once you saved your file just close your terminal so just close your terminal then open a new instance of your terminal and once the terminal is open you can run the flutter command so I'm going to just write uh flutter here and then space hyphen hyphen version and then press enter and it's going to show show me the version of flutter I have so you can see uh it has shown me this kind of uh welcome to flutter uh text here and it's going to also show me the flutter version which I have installed once you see this kind of output when you give flutter version command that means we have set the right environment variable for our flutter binary now once we have flutter installed then let's move to the next steps so I'm going to scroll up a little and we are going to uh install the X code so first of all you need to open the app store you can find the App Store icon on the doc this is the App Store icon so just click on that or you can also search for App Store in your Launchpad and then click on that and App Store will start from here just search for xcode and then press enter which is going to search for xcode and the result which we are uh looking for is this one which is called excode developer tools here I'm going to click on this uh download button so in my case it shows this warning which ISS download the older version of xcode the current version requires Mac OS 13.5 or later but you can download the last compatible version because right right now if I click on the Apple logo and then click on about uh this Mac I have the 13 version not the 13.5 so I can uh download the older version if you have the latest version of Mac OS uh you can download the latest version of uh compatible xcode here I'm going to click on download button which is going to start the download of the xcode so you can see uh this download has been started it's around 7 GB uh of download so it will take some time for the download to complete you can also go to the Launchpad and see the download process here you can see this download is going on so it's going to download around 7 7 GB of uh data so it'll take some time so just wait for the download to finish so once the download is complete it's going to start the installation process as you can see when I hover over this circle installation process is about 2% complete so now the xcode is installed on my Mac operating system once it's installed you will be able to see open button in front of xcode also in the Launchpad you will be able to see this xcode icon so I'm going to click on this xcode icon let me minimize this app store and then it's going to start the xcode so for the first time when xcode starts on your Mac operating system it's going to ask to agree with the license terms and conditions so if you want you can read these license terms and conditions and then click on agree and then give your MacBooks password which you use to log to your Mac operating system and then press okay and then you will be able to see this kind of window which says select the platforms which you would like to develop for for now I want to use it for Mac OS and iOS development later I can also install the toolkit for watch Os or TV OS but for now I don't want that so I will just uh leave it as default and then click on install which is going to start the installation of additional components and you can see the progress bar of the installation so at this point I just need to wait for this progress bar to reach to the 100% Mark and once that's done and xcode is going to launch in few seconds so you can see uh xcode has been started first of all it says what's new in xcode excode Cloud Swift UI and it's going to give you the list of all the features I can click on continue here and now xcode has been started once you have xcode let's also install Android Studio so first of all open your favorite browser and search for Android studio and the first link which will appear here will be from developer.android.com we going to click on this uh link and when this web page opens you will be able to see straight away this download button on this uh web page so we are going to click on this download button which is going to show you uh this kind of terms and conditions page you can read about these terms and conditions here and then scroll down at the very B bottom where you need to agree with these terms and conditions so if you agree just check this check box and then you will see two buttons here so if you are using the MacBook or Mac operating system with Intel chip then you can click on this button if you are using the Mac operating system with the Apple chip for example M1 M2 M3 or any other Apple chip then click on this button so so I have a MacBook with an apple chip so I'm going to click on this apple chip uh button here which is going to start the download of this DMG file so you can see uh at the time of uh making this video this file is around 1.1 gigabyte files which is going to take some time to download so just wait for the download to complete here so once this DMG file is downloaded I'm going to click on this DMG file and then I'm going to minimize this browser so as you can see on this window the installation process is really simple you just need to drag this Android Studio icon into your applications folder so if you are using your MacBook and it's trackpad you just need to press command key on your keyboard and then select Android studio and then drag and drop this uh icon on your applications folder which is going to copy Android Studio into your applications folder you can see this copying is done now once the copying is done the Android Studio is installed on our Mac operating system and then you can click on the Launchpad and then search for Android Studio here so I'm going to just uh search for Android Studio you can see this icon is available here so I'm going to click on this Android Studio icon just going to start the Android Studio on our Mac operating system so first of all you will see this kind of window which says import Android Studio settings so if you are uh starting Android Studio for the first time I will recommend you to just leave this uh radio button on do not import settings here and then click on okay and then you will see this kind of window which says help improve Android Studio I don't want to share any uh data with uh Google so I'm going to click on don't send here and you can see this kind of Android Studio Setup Wizard so at this point I'm going to click on next here and then I'm going to choose the standard installation type you can also choose the custom one but uh I will recommend you to choose the standard one for now and then click on next and then you will see all these settings so you can verify all these settings here and then if you are happy with all those settings click on next and then on this next window you will see this license agreement so if you want you can read these license terms and conditions and if you agree with those license terms and conditions click on accept here and also select the second uh item here in this list which is the SDK arm and then accept here also okay so you need to accept in both the sections one for Android SDK license and other for Android SDK armed DBT license once you see this finish button click on finish which is going to start the download of all the components which Android Studio requires for its installation so this setting up of components uh will only happen once when you start your Android Studio for the first time so at this point you just need to wait for uh few seconds until this installation of all those components uh is going on and now as you can see after a few seconds I can see this finish button here so I'm going to click on this finish button which is going to start Android Studio on my Mac operating system so once your Android Studio starts we are going to go to the plugins section here and then we are going to search for flutter here and you will see this result for flutter so I'm going to click on install and then click on accept which is going to install this flutter plugin in addition it's also going to add the support for DOT so dot will also be installed so I'm going to click on install here and then it's going to install flutter and also it's going to install the dot programming language once this is downloaded it's asking me to relaunch the Android Studio so I'm going to just click on restart IDE and then click on restart which is going to restart my Android Studio IDE once my Android Studio IDE starts I can see this new Option here for creating a new flutter project so once you have installed the flutter plugin here let's open our terminal and let's run this command command which is called flutter doctor command and then press enter and it's going to show you uh the status of all uh the tools so when I run flutter doctor command I can see under Android tool chain that the command line tools component is missing here right so let's see how we can solve this problem so for this open your Android Studio and then if you see this kind of interface then select more actions and then select SDK manager and then select Android's SDK option here and you will be able to see this SDK tools option and here you can see uh the flutter doctor command is complaining about this option which says Android SDK command line to tools which is not installed yet so we are going to just uh check this check box and then click on apply and then click on okay which is going to install the Android SDK command line tool once that's done just click on finish and now you can see this is installed and we can run the command once again so I'm going to click on okay and then once we run the flutter doctor command once again again you can see that error is gone so now I have one more warning here but I don't see this command line tools component is missing error right so now I have one more warning here which says some Android license not accepted so for this I'm going to run this command which is suggested here so for this I'm going to run this command which is flutter doctor space hyphen hyphen and Android hyphen license you can see this command I have already typed which is flutter doctor Android license press enter and then press y here and then press enter and once again press Y and then press enter and then just keep on pressing y until this license terms and conditions uh is accepted right so once you see that all SDK package license accepted I can run the flutter doctor command once again and this time I can see that Android tool chain is now fully installed so now when I run the flutter doctor command I can see uh this xcode error which says and it says xcode installation is incomplete a full installation is necessary for iOS and Mac OS development so to solve this we just need to open the xcode I'm going to just search for xcode and then open this xcode once this x code opens you will see the xcode menu at the top just click on xcode here and then select settings here if you see preferences option you can select the preferences option here once you do that just select locations tab here so select location Tab and here if you see uh this command line tool empty then select the version of xcode and it's going to ask you uh to provide your MacBooks password which you use to log to your Macbook so I'm going to just uh provide that password and now I can see that this xcode version is selected now let's run this uh flutter doctor command once again and now that error which we were seeing is gone right so now we have successfully installed the essential uh tools for Android development and also the essential tools for the iOS development earlier we were seeing this xcode related error now we are just seeing this coka pad not installed that we will uh not require for now so I'm going to leave it as it is but other tools are installed right now once flutter SDK xcode and Android Studio are installed on our Mac operating system now let's move to the visual studio code and for that just open Visual Studio code editor and before doing anything here we just need to install the extension for the flutter so here click on this extensions Tab and then search for flutter and the first extension which will appear here will be uh this one this is the official app and you can see see this has been downloaded around 7.8 million times and it's from do code.org so we are going to install this extension just click on install which is going to install this extension and once this extension is installed you can see this disable uninstall and switch to prerelease version right so now let's go to the Explorer section here and here once your flutter extension is installed you can create your uh flutter project in several different ways right you can use the terminal to create your flutter app you can also use the command pallet of Visual Studio code to create your Android project so let me show you first of all how you can use the command pallet to create your flutter app for this press command shift p on your keyboard which is going to give you this kind of uh pallet here after this Arrow just write uh flutter and then colon and you will see this option here which says new project okay so I'm going to click on new project option here now here it says select your template so you can select the application template empty applications template skeleton and other uh project options are also available so I'm going to select the first option which is the application template here and then I need to choose the location where I want to save my project so so let's say I want to save my project into my documents folder so I'm going to uh select my folder here and then click on select folder to create the project in so I'm going to click here and now you need to give your project name here I can see the default name for my project which is flutter application I'm going to uh rename it to let's say mycore flut underscore app and the thing to remember here is I have given this name all in small letters and they are separated by underscores right so if possible just name your project in small letters and if it contains multiple words separate them by underscores once you have given the name to your project just press enter as suggested here so I'm going to press enter key on my keyboard and then click on Save here then it's going to also ask you to provide the workspace option from here I'm going to choose the same folder for example so I have created this my flutter app so I'm going to choose the same um uh folder for creating this workspace and you can see this flutter app has been created and you will see in some time this flutter app will be populated with few different folders and files right so this is the template we have chosen and that's why you will see all these files here right now once our flutter app is created it all already contains the sample code so we just need to run this in uh an Android emulator or iOS emulator to test it right so for this once again you can press command shift p on your keyboard which is going to open this kind of pallet once again and then colon and then just write launch emulator okay so this time we need to write flutter colon launch emulator and you will see this option which says flutter coolon launch emulator option click on this launch emulator option and you will see uh all these options here so this iOS simulator and this other Android simulator are installed when you have installed the xcode and the Android Studio on your Mac operating system right so if you have already installed xcode and Android Studio you will see both these options right when you have installed xcode this option is included in your Mac operating system for iOS simulator and when you have installed Android Studio this option has been installed on your Mac operating system for the Android emulator so let's say first of all we want to run our app on iOS simulator so we will choose iOS simulator here which is going to start the iOS simulator here you can see the iOS simulator is starting now once your iOS simulator uh has been started let me resize this uh Visual Studio code editor and then let's move this simulator on the side let's run this app you can run this app using this uh run option on the top so just click on run option on the top and then click on run without debugging I'm going to click on run without debugging option here now I can see this app has been launched on my iOS simulator and I can test this app by pressing on this plus button and everything is working I can also see this uh option here which says D Dev tool includes additional tools for debugging I can click on open here and then you can see open widget for inspector open CPU profiler and all these options here right so you can also choose these kind of options to uh debug your application now let's launch our app on the Android emulator also for this once again press command shift p on your pallet so once uh we have tested the app on iOS simulator I'm going to just press on this stop button to stop the application on the iOS simulator and now let's run our application on the Android Simulator for this just press command shift p and then once again choose flutter colon launch emulator option now this time select the option which says Android at the end okay so for example this option says Android at the end this is the default emulator which comes with Android studio right so I'm going to select uh this option here and once I select this option it's going to launch the Android emulator you can see the Android emulator has been launched and I can move this on the side for example and then let's run our app by just uh pressing run and then click on run without debugging now our app has been launched on this Android simulator okay so once again we can just uh press on this plus button and everything is working fine right so we have tested our app on the Android simulator and the iOS simulator now let me show you one more option to create the project using command line and launch your app using command line on the Android emulator and the iOS emulator so for this I'm going to close both these emulators first so let me close this one and let me also close this uh iOS emulator and then uh just quit from here and then let me just uh close this uh project from here okay and we are going to create a new project so now I'm going to open a separate folder and I'm going to uh show you how you can create a flutter application using the flutter commands so here I'm going to click on open folder here and then once again I'm going to create a new folder and I'm going to name my folder as apps so this is the folder where your flutter app will be created right so this will be the parent folder where all your flutter apps can be created I'm going to click on create here and then click on open which is going to open this flutter app right so now let's say I want to use the terminal to uh create this uh project so I'm going to just click on Terminal New terminal here and because we have already installed the flutter uh SDK and we have set the environment variables for flutter SDK in the terminal we can write uh flutter space create and give the name of your app right say I'm going to name my app as mycore appcore 2 this will be the second app right and then press enter which is going to create your flutter app you can see this flutter app has been created and it has also uh created the sample uh template for us right then you can read this uh output here you just need to CD into your application and then run the flutter run Command right so I'm going to CD into my app to uh folder here and then I can run the flutter run run command but before this I need to launch either the Android emulator or the iOS emulator once again I can go to the flutter documentation from where we have uh installed the flutter SDK and then when I click on the Mac OS option and iOS option at the very bottom you will also see the command using which you can launch your iOS emulator and you can see this is the command so you can also use this command once you have xcode installed to launch your iOS simulator so I'm going to just copy this command then click on the spotlight option and then uh just open the terminal from here once the terminal is open I can just paste this command here and then press enter which is going to launch the iOS emulator right so you can use this command also to launch your iOS emulator and then once the emulator is open Let's uh run this flutter app here you just need to run flutter run command so I'm going to just write flutter space run and then press enter and it's going to run this flutter app on my iOS uh emulator just wait for little bit you can see the app has been launched on my iOS emulator so using this command line tool also you can create and run your app let me just uh press contrl C here close this application and now I can just close this iOS simulator now if you want to launch the Android simulator you need to open the Android studio app so go to the Launchpad and then search for Android uh studio and then launch Android Studio from here if you see this kind of interface here click on Three Dots here and then click on virtual device manager option let's say there is no project on your Android uh Studio then you will be able to find this uh device manager option in more options here so click on uh more options drop down menu and then click on virtual device manager where you will see the virtual device so just select the device here one device will be present here also create multiple virtual devices using this device manager so I'm going to launch the emulator from here which is going to launch my Android emulator as I mentioned and then I'm going to just uh minimize this and once the Android emulator has been launched I can just run the app using the same command which is flutter run and it's going to relaunch my application in the Android emulator now right I can see that the application has been launched this time on the the Android emulator right this is how you can use Visual Studio code to create your flutter applications and launch them on iOS or the Android emulators I hope you've enjoyed this video and I will see you in the next video
