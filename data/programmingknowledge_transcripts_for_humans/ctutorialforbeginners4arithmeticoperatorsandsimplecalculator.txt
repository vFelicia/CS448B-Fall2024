With timestamps:

00:00 - hello guys in this video I'm going to
00:02 - teach you about basic arithmetic
00:05 - operators in C shop so there are
00:10 - commonly five arithmetic operator we use
00:14 - in
00:15 - C which are plus minus multiplication
00:20 - for M multiplication we use estx or this
00:24 - star symbol division for division we use
00:27 - this slash symbol and and for showing
00:30 - the remainder we use this modulus
00:35 - symbol so for example I will take an
00:38 - example
00:40 - of a simple
00:42 - calculator for which we are going to
00:45 - take two values and we want the addition
00:50 - subtraction multiplication and division
00:53 - of those two numbers and we want to show
00:56 - this uh the result on the screen so how
01:00 - can we do it so what I'm going to do is
01:04 - I will declare two number so these are
01:07 - the number in Num one and num two which
01:11 - holds the two numbers which user will
01:14 - give okay now I will declare three more
01:18 - integers which will hold the result of
01:21 - addition subtraction and multiplication
01:24 - and this data type is int I will declare
01:28 - one more variable called division which
01:31 - will hold the result of division of
01:33 - those two numbers and this data type I
01:36 - have taken float because when you divide
01:38 - two numbers the result can be a float
01:43 - value right so I have taken this a flat
01:48 - now what I have done is I'm asking the
01:51 - user to input the first number so I will
01:55 - uh write console. write enter first
01:58 - number and uh in my first number
02:02 - variable which is num one I'm
02:05 - reading the value which is entered by
02:10 - the user so I will say num 1 is equal
02:13 - convert do 2 in 32 because we are
02:17 - reading the line and this is a string
02:20 - when a user enters something it's a
02:23 - string and we need to convert it to the
02:26 - integer that's why we are using convert
02:28 - to int
02:31 - so this is this line of code
02:35 - will take a string from the user because
02:39 - we are reading the read line and it will
02:43 - convert it to the integer and then
02:45 - assign it to this num one similarly I am
02:48 - doing the same for the second number I'm
02:51 - asking the user to enter the second
02:53 - number and whatever user enters I will
02:57 - put it into the second number
03:00 - so this code I will provide a link below
03:03 - you will be able to find this code so
03:05 - don't worry you will uh you can directly
03:08 - copy this code and test it on your
03:11 - Visual Studio C project
03:14 - so after entering the two numbers what
03:17 - I'm going to do is I will take a add
03:20 - variable which I have declared here and
03:22 - in this add variable I
03:25 - am saving the addition of two numbers so
03:29 - how you do uh the addition by by using
03:33 - this plus arithmetic operator right in a
03:37 - similar way I'm saving the subtraction
03:40 - of this two number by using this minus
03:44 - arithmetic operator so number number one
03:47 - minus number two now in for
03:50 - multiplication I'm using this estx
03:53 - symbol to multiply these two numbers and
03:57 - for division I'm using
04:00 - slash symbol to divide these two numbers
04:04 - but notice when I will divide a number
04:09 - by a second number it will not give you
04:13 - the remainder or it will not give you uh
04:18 - the decimal
04:20 - points because there is a special uh
04:24 - quality in this slash symbol that it
04:27 - only gives you the whole value which you
04:31 - which is a multiple it will not give you
04:33 - the remainder or it will not give you
04:35 - the decimal value so I will also show
04:38 - you how you can show the result in
04:40 - decimal for but first let's see the
04:42 - result of this so this is the
04:46 - interesting part of this uh code and we
04:50 - will be watching this in detail now what
04:54 - I'm going to do next is I'm just
04:56 - printing the result at addition so I
05:00 - will show the
05:02 - add subtraction I will show it in Sub
05:06 - sub multiplication I will I'm printing
05:09 - multiplication and the division I'm
05:12 - printing division okay so this is the
05:15 - code I have now let's try and run this
05:18 - code so the program ask us to enter the
05:23 - first number for example I will enter 23
05:26 - as a first
05:27 - number and now user ask or program ask
05:31 - us to enter the second number I enter
05:34 - four as a second number and when I press
05:37 - enter you will get the result so the
05:40 - result is addition is 27 yes 23 + 4 is
05:46 - 27 the subtraction is 19 so 23 - 4 is 19
05:52 - the multiplication is 92 23 * by 4 is 93
05:57 - this is correct but see here the
06:00 - division is five it's giving us
06:03 - five so
06:05 - it's giving the multiple of
06:10 - 23 so 4 * 5 is 20 and the remainer is
06:16 - three here which cannot be divided
06:18 - further right so it's only showing
06:21 - whatever it can multiply and the
06:24 - remainder it's not showing so that's why
06:27 - it's showing the this value now to show
06:30 - the remainder what you can do is I can
06:35 - add one more line
06:41 - here remainder and I can add one more
06:45 - variable
06:47 - here in the int variable I will write r
06:52 - m and now for this I will write here
07:01 - after this
07:02 - Division I will use remainder is equal
07:06 - to
07:07 - num 1
07:11 - mod num 2 okay so
07:16 - now I will just copy this and paste it
07:19 - here and now when I run the program I
07:22 - will give the same two numbers
07:25 - 23 and four and you can see here when
07:29 - you divide 23 by 4 you get will get the
07:34 - remainder here so by using this modulus
07:37 - symbol you can show the remainder and
07:40 - the full multip multiple of four you can
07:44 - give by
07:46 - this slash symbol now for example you
07:51 - may need the float value or the exact
07:54 - value you want uh to show when you want
07:58 - to divide two numbers
08:00 - so what you can do is you can
08:03 - add this float
08:09 - here and what this bracket float means
08:12 - is it's called a cast operator type
08:16 - casting operator and what it will do is
08:20 - whatever is the result of the division
08:22 - of these number it will convert that
08:25 - into the float and then it will assign
08:28 - it to your divide variable and this
08:31 - divide variable is a float right we have
08:35 - declared it as a float so now what will
08:38 - uh this code will do is it will divide
08:40 - these two numbers and the result is a
08:43 - float right so the it will convert these
08:47 - division to a float by this typ cast
08:51 - operator and what is a typ cast operator
08:54 - in the brackets you would just give
08:57 - the data type you are expecting so this
09:00 - is the typ cast operator we are
09:02 - expecting float here and now when we run
09:05 - the
09:06 - program and we will give the same
09:08 - numbers once again 23 by4 and now you
09:12 - can see the exact division 5.75 when you
09:17 - multiply or when you divide 23 by 4 the
09:22 - exact value or exact division is
09:25 - 5.75 by type cast operator you can show
09:28 - the exact value or but when you remove
09:32 - this typ class operator it will give you
09:34 - only the multiple and not not the
09:36 - remainder right so this is a little
09:39 - trick uh to convert your division to a
09:45 - decimal point or floating
09:47 - point so these are the basic operator we
09:51 - use in C not the basic operator but it's
09:55 - called arithmetic operation to be
09:58 - specific
09:59 - so these are the basic arithmetic
10:01 - operators in C I hope you have enjoyed
10:04 - this video please writ comment and
10:06 - subscribe and bye for now

Cleaned transcript:

hello guys in this video I'm going to teach you about basic arithmetic operators in C shop so there are commonly five arithmetic operator we use in C which are plus minus multiplication for M multiplication we use estx or this star symbol division for division we use this slash symbol and and for showing the remainder we use this modulus symbol so for example I will take an example of a simple calculator for which we are going to take two values and we want the addition subtraction multiplication and division of those two numbers and we want to show this uh the result on the screen so how can we do it so what I'm going to do is I will declare two number so these are the number in Num one and num two which holds the two numbers which user will give okay now I will declare three more integers which will hold the result of addition subtraction and multiplication and this data type is int I will declare one more variable called division which will hold the result of division of those two numbers and this data type I have taken float because when you divide two numbers the result can be a float value right so I have taken this a flat now what I have done is I'm asking the user to input the first number so I will uh write console. write enter first number and uh in my first number variable which is num one I'm reading the value which is entered by the user so I will say num 1 is equal convert do 2 in 32 because we are reading the line and this is a string when a user enters something it's a string and we need to convert it to the integer that's why we are using convert to int so this is this line of code will take a string from the user because we are reading the read line and it will convert it to the integer and then assign it to this num one similarly I am doing the same for the second number I'm asking the user to enter the second number and whatever user enters I will put it into the second number so this code I will provide a link below you will be able to find this code so don't worry you will uh you can directly copy this code and test it on your Visual Studio C project so after entering the two numbers what I'm going to do is I will take a add variable which I have declared here and in this add variable I am saving the addition of two numbers so how you do uh the addition by by using this plus arithmetic operator right in a similar way I'm saving the subtraction of this two number by using this minus arithmetic operator so number number one minus number two now in for multiplication I'm using this estx symbol to multiply these two numbers and for division I'm using slash symbol to divide these two numbers but notice when I will divide a number by a second number it will not give you the remainder or it will not give you uh the decimal points because there is a special uh quality in this slash symbol that it only gives you the whole value which you which is a multiple it will not give you the remainder or it will not give you the decimal value so I will also show you how you can show the result in decimal for but first let's see the result of this so this is the interesting part of this uh code and we will be watching this in detail now what I'm going to do next is I'm just printing the result at addition so I will show the add subtraction I will show it in Sub sub multiplication I will I'm printing multiplication and the division I'm printing division okay so this is the code I have now let's try and run this code so the program ask us to enter the first number for example I will enter 23 as a first number and now user ask or program ask us to enter the second number I enter four as a second number and when I press enter you will get the result so the result is addition is 27 yes 23 + 4 is 27 the subtraction is 19 so 23 4 is 19 the multiplication is 92 23 * by 4 is 93 this is correct but see here the division is five it's giving us five so it's giving the multiple of 23 so 4 * 5 is 20 and the remainer is three here which cannot be divided further right so it's only showing whatever it can multiply and the remainder it's not showing so that's why it's showing the this value now to show the remainder what you can do is I can add one more line here remainder and I can add one more variable here in the int variable I will write r m and now for this I will write here after this Division I will use remainder is equal to num 1 mod num 2 okay so now I will just copy this and paste it here and now when I run the program I will give the same two numbers 23 and four and you can see here when you divide 23 by 4 you get will get the remainder here so by using this modulus symbol you can show the remainder and the full multip multiple of four you can give by this slash symbol now for example you may need the float value or the exact value you want uh to show when you want to divide two numbers so what you can do is you can add this float here and what this bracket float means is it's called a cast operator type casting operator and what it will do is whatever is the result of the division of these number it will convert that into the float and then it will assign it to your divide variable and this divide variable is a float right we have declared it as a float so now what will uh this code will do is it will divide these two numbers and the result is a float right so the it will convert these division to a float by this typ cast operator and what is a typ cast operator in the brackets you would just give the data type you are expecting so this is the typ cast operator we are expecting float here and now when we run the program and we will give the same numbers once again 23 by4 and now you can see the exact division 5.75 when you multiply or when you divide 23 by 4 the exact value or exact division is 5.75 by type cast operator you can show the exact value or but when you remove this typ class operator it will give you only the multiple and not not the remainder right so this is a little trick uh to convert your division to a decimal point or floating point so these are the basic operator we use in C not the basic operator but it's called arithmetic operation to be specific so these are the basic arithmetic operators in C I hope you have enjoyed this video please writ comment and subscribe and bye for now
