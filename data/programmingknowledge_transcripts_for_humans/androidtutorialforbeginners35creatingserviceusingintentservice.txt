With timestamps:

00:00 - hello guys welcome to the next video
00:02 - tutorial on android app development for
00:04 - beginners in this video we will see how
00:06 - we can use intent service class to
00:10 - create our services now the good thing
00:13 - about intent service class is that we
00:17 - can handle different requests in a
00:21 - asynchronous manner and how it does it
00:25 - it creates a worker thread to you
00:29 - automatically which can handle
00:32 - asynchronous requests so let's see how
00:36 - we can use intent service class to
00:38 - create our services I have this button
00:42 - start service and stop service and I
00:45 - have this added text as I have taken in
00:48 - the last video okay
00:50 - and I have given on click method here
00:55 - which is stop service for stop button
00:58 - and start service for start button ok so
01:02 - you may not know these things by
01:04 - previous video now what I'm going to do
01:08 - is I'm going to go to my Java folder and
01:12 - here besides my main activity Java class
01:17 - I'm going to create a new Java class and
01:20 - this Java class I'm going to call it as
01:23 - for example my service and click OK and
01:27 - it's going to create our my service
01:29 - class and this my service class we are
01:32 - going to extend with intent service
01:35 - class ok and it will give you this red
01:40 - bulb here that means we need to import
01:43 - this class and second we need to
01:47 - implement our method which is called on
01:52 - handle intent method ok so we need to
01:56 - overwrite this and one more thing it
01:59 - requires is you need to overwrite the
02:04 - constructor ok so you need to create a
02:07 - matching super 4 constructor okay and
02:11 - this takes us straight
02:13 - which we are going to give as a thread
02:18 - name so for example I'm going to delete
02:20 - this argument in the constructor and I'm
02:23 - going to give directly the name to my
02:26 - thread you can give any name for example
02:28 - my intent thread or intent service
02:31 - thread whatever you wish and inside your
02:34 - on handle intent method you can perform
02:37 - a long-running task for example waiting
02:40 - for something to happen or you're in a
02:44 - long while loop you can perform this
02:47 - long-running task inside this on handle
02:50 - intent method right so I'm going to
02:54 - write a code which I have written in the
02:57 - last video for waiting for 20 second so
03:00 - if you don't know this code where this
03:02 - comes from it comes from the last video
03:05 - where I was waiting for 20 seconds right
03:09 - in a synchronized manner but you need to
03:12 - notice here that I am NOT adding the
03:15 - self stop method which I have done in
03:18 - the last video this is because this
03:21 - intent service is able to handle itself
03:25 - and it's able to stop itself when the
03:28 - all the works in the thread are done
03:31 - right so we are not adding the stop self
03:34 - method here now what I'm going to do is
03:37 - I'm going to add these two methods which
03:39 - are called on start and on destroy
03:42 - method so first of all on start command
03:46 - and second method was on destroy so on
03:51 - destroy okay and in here what we can do
03:57 - is we can start our service or we can
04:00 - display the message that our service has
04:02 - been started and in here we can display
04:06 - the message that our service has been
04:08 - stopped okay so I'm going to add these
04:12 - messages here one is for starting the
04:17 - service I am going to add the toast
04:19 - which will display this message and
04:22 - second is to destroy the service okay
04:26 - it so we know that our service has been
04:30 - destroyed okay now once everything is
04:37 - done what you need to do is you need to
04:40 - call these this class and these method
04:43 - in your mainactivity.java class but
04:47 - notice here that this name we have given
04:51 - this name we can see the description
04:53 - name used to name the worker thread
04:57 - important only for debugging so here you
05:00 - can give the name to your thread
05:03 - according to your you know needs or
05:06 - requirement right and what this intent
05:09 - service class is going to do is whenever
05:11 - you want to start a service it's going
05:14 - to create a special worker thread to
05:18 - handle your risk quest asynchronously so
05:21 - you don't need to explicitly define the
05:25 - thread which we have done in the last
05:27 - video to handle the asynchronous request
05:31 - so what we are going to do now is we are
05:35 - going to go to our main activity Java
05:37 - file here and in our main activity the
05:41 - Java class we are going to make our two
05:44 - method which are start service and stop
05:47 - service for our two buttons for starting
05:51 - and stopping the services right and in
05:54 - here inside the start service method I'm
05:56 - going to create an intent intent is
06:01 - equal to new intent and first argument
06:08 - is this and second argument is the class
06:11 - we are calling which is my service dot
06:15 - plus okay and we can start the service
06:19 - using start service method and pass the
06:23 - intent in it and the same thing we are
06:27 - going to do in our stop service method
06:30 - for stop service button click event and
06:33 - instead of starting service this button
06:36 - will stop service so call stop service
06:40 - and pass this intent object here now one
06:43 - thing which is remaining is we want to
06:46 - call our service to our manifest file so
06:51 - go to Android manifest dot XML file and
06:55 - add this service element here ok so
06:59 - service and your service name which is
07:03 - my service and close this service and we
07:07 - are going to add this exported Android
07:10 - exported false
07:11 - ok so Android exported is equal to false
07:17 - ok
07:18 - and now we are going to run our app so
07:21 - my app is running now so I can start the
07:24 - service by start service button and I
07:26 - can see this message so we started and
07:28 - at the same time I can insert some text
07:31 - inside my added text input so both tasks
07:36 - are handled parallely write the starting
07:39 - of the service which is waiting for 20
07:42 - second and the entering of our text
07:45 - inside our added text ok and you can
07:49 - destroy the service by this stop service
07:52 - so once again start service and destroy
07:55 - service so the service will be destroyed
07:58 - from here so in this way you can use
08:00 - intent service class in your Android app
08:03 - I hope you have enjoyed this video
08:05 - please rate comment subscribe and bye
08:06 - for now

Cleaned transcript:

hello guys welcome to the next video tutorial on android app development for beginners in this video we will see how we can use intent service class to create our services now the good thing about intent service class is that we can handle different requests in a asynchronous manner and how it does it it creates a worker thread to you automatically which can handle asynchronous requests so let's see how we can use intent service class to create our services I have this button start service and stop service and I have this added text as I have taken in the last video okay and I have given on click method here which is stop service for stop button and start service for start button ok so you may not know these things by previous video now what I'm going to do is I'm going to go to my Java folder and here besides my main activity Java class I'm going to create a new Java class and this Java class I'm going to call it as for example my service and click OK and it's going to create our my service class and this my service class we are going to extend with intent service class ok and it will give you this red bulb here that means we need to import this class and second we need to implement our method which is called on handle intent method ok so we need to overwrite this and one more thing it requires is you need to overwrite the constructor ok so you need to create a matching super 4 constructor okay and this takes us straight which we are going to give as a thread name so for example I'm going to delete this argument in the constructor and I'm going to give directly the name to my thread you can give any name for example my intent thread or intent service thread whatever you wish and inside your on handle intent method you can perform a longrunning task for example waiting for something to happen or you're in a long while loop you can perform this longrunning task inside this on handle intent method right so I'm going to write a code which I have written in the last video for waiting for 20 second so if you don't know this code where this comes from it comes from the last video where I was waiting for 20 seconds right in a synchronized manner but you need to notice here that I am NOT adding the self stop method which I have done in the last video this is because this intent service is able to handle itself and it's able to stop itself when the all the works in the thread are done right so we are not adding the stop self method here now what I'm going to do is I'm going to add these two methods which are called on start and on destroy method so first of all on start command and second method was on destroy so on destroy okay and in here what we can do is we can start our service or we can display the message that our service has been started and in here we can display the message that our service has been stopped okay so I'm going to add these messages here one is for starting the service I am going to add the toast which will display this message and second is to destroy the service okay it so we know that our service has been destroyed okay now once everything is done what you need to do is you need to call these this class and these method in your mainactivity.java class but notice here that this name we have given this name we can see the description name used to name the worker thread important only for debugging so here you can give the name to your thread according to your you know needs or requirement right and what this intent service class is going to do is whenever you want to start a service it's going to create a special worker thread to handle your risk quest asynchronously so you don't need to explicitly define the thread which we have done in the last video to handle the asynchronous request so what we are going to do now is we are going to go to our main activity Java file here and in our main activity the Java class we are going to make our two method which are start service and stop service for our two buttons for starting and stopping the services right and in here inside the start service method I'm going to create an intent intent is equal to new intent and first argument is this and second argument is the class we are calling which is my service dot plus okay and we can start the service using start service method and pass the intent in it and the same thing we are going to do in our stop service method for stop service button click event and instead of starting service this button will stop service so call stop service and pass this intent object here now one thing which is remaining is we want to call our service to our manifest file so go to Android manifest dot XML file and add this service element here ok so service and your service name which is my service and close this service and we are going to add this exported Android exported false ok so Android exported is equal to false ok and now we are going to run our app so my app is running now so I can start the service by start service button and I can see this message so we started and at the same time I can insert some text inside my added text input so both tasks are handled parallely write the starting of the service which is waiting for 20 second and the entering of our text inside our added text ok and you can destroy the service by this stop service so once again start service and destroy service so the service will be destroyed from here so in this way you can use intent service class in your Android app I hope you have enjoyed this video please rate comment subscribe and bye for now
