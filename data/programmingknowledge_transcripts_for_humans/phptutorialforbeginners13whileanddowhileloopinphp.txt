With timestamps:

00:00 - hello guys welcome once again in this
00:02 - video I'm going to teach you about loops
00:04 - in PHP and in this particular video I'm
00:08 - going to teach you about a while loop
00:10 - and do while loop but first of all what
00:14 - is a while loop by the name itself uh
00:18 - you can understand that why a loop is a
00:22 - piece of code which will execute again
00:25 - and again in Loop until and unless some
00:29 - condition is true or false okay so Loop
00:33 - is a piece of code which we use to
00:36 - execute a piece of code again and again
00:40 - until and unless some condition is
00:43 - met so let's start with Y Loop for
00:48 - example I want to print some string
00:51 - again and again 10 times uh without
00:56 - writing the code 10 times right so for
00:59 - example example I want to
01:05 - print
01:07 - Echo and for
01:12 - example
01:14 - programming knowledge I want to print it
01:18 - 10 times but I don't want to I mean
01:21 - repeat the code I don't want to do it
01:25 - like this 10 times I just want to use
01:27 - the same line and I want to print this
01:30 - 10 times how can I do it so I can do it
01:34 - using Loops so for example what I will
01:37 - do here is I will just first of all I
01:40 - will declare a
01:42 - counter counter and I will initialize it
01:46 - by
01:47 - one and let's see how we can use file
01:50 - Loop first what is the basic skeleton of
01:52 - file so while loop is declared by this
01:56 - keyword while and these two brackets and
02:00 - here comes your
02:03 - uh your code so this is the keyword to
02:07 - declare y Loop and this bracket comes
02:10 - the condition which has to mat uh in
02:12 - order to uh execute the code inside your
02:15 - y Loop so I want to print this whenever
02:21 - some condition is true now in while loop
02:26 - there is a number called zero
02:30 - and whenever you give as a argument to Y
02:33 - Loop your condition will never be true
02:36 - because Zer is equal to false in PHP
02:41 - whenever you passes pass it as an
02:45 - argument for checking some condition and
02:48 - on the other hand one is considered as
02:52 - always true so if you give one as a y
02:56 - Loop and it will keep on running forever
03:00 - without stopping so never attempt
03:04 - something like this until and unless you
03:06 - have some concrete reason of doing this
03:10 - otherwise it will crash your browser it
03:12 - will crash your computer and you you
03:15 - know it can be harmful for your uh
03:18 - program so never try something like this
03:22 - until and unless you have some reason to
03:24 - do it
03:26 - okay okay so for example I want to print
03:29 - this 10 times how can I do it I can
03:33 - provide a condition to this while loop
03:35 - that until and unless this
03:39 - counter is less than or equal to 10 I
03:43 - want to print this but we are not uh
03:47 - using this counter anywhere right so it
03:50 - will always be less counter we
03:53 - initialize this counter by one and one
03:56 - is always less than 10 then this is the
03:59 - same condition as giving one to here
04:03 - this is the same condition like this
04:06 - which which will never be met right so
04:09 - what we can do is we can increase this
04:11 - counter every time we execute this code
04:16 - we can increase it like this by this
04:18 - increment
04:20 - operator and what this will do let's see
04:24 - it will print out this 10 times let's
04:28 - try to run the program
04:30 - and it prints this programming knowledge
04:32 - 10 times let me provide this break which
04:37 - I always forget so that it will be
04:40 - printed
04:41 - in line by line you see now for example
04:45 - I want to check uh whether is it
04:49 - executing 10 times really or not what I
04:52 - can do is I can just provide this single
04:56 - codes here for
04:58 - example
05:01 - and or even I can use double quotes also
05:04 - and I can use the
05:07 - concatenation operator so I can
05:11 - concatenate uh
05:13 - this
05:15 - here
05:17 - counter and so I want to just print the
05:20 - counter value not the counter Plus+
05:24 - right and then I want to provide the
05:27 - break okay so space
05:31 - Discounter and then the break in double
05:35 - codes I will provide the
05:37 - break and let's do it with the single
05:41 - codes for now single Cod single code
05:46 - single quotation and single quotation
05:49 - and here I should add a my and symbol
05:54 - otherwise it will not recognize this and
05:56 - let's see what is the value of counter
05:58 - one by one
06:00 - okay we just rerun it and you see the
06:04 - value of counter first of all is 1 2 3 4
06:07 - 5 6 7 8 until 10 right so what's
06:12 - happening here
06:14 - is you provide the value of counter is
06:16 - equal to one and it goes to this code
06:19 - and here value of counter is one and
06:23 - Which is less than 10 so it will execute
06:25 - this code and the value of counter will
06:28 - be printed one here
06:29 - and then your counter will be increased
06:32 - by one so the value of counter becomes
06:34 - two here it will go once again to the
06:36 - loop it will check two is less than or
06:39 - less than 10 still it will print this
06:42 - and the counter will be two and counter
06:44 - will be increased to one more which is
06:47 - three and it will keep on doing this
06:50 - until and unless this counter becomes 11
06:53 - and this condition is false 11 is not
06:57 - less than or equal to 10 so this code
07:01 - will not be executed and your uh code
07:05 - will go out yeah
07:08 - okay so this is how you can use while
07:12 - loop and what is the basic thing here
07:17 - until and unless this condition is true
07:20 - your code will be
07:22 - executed now you can also use two while
07:26 - loop to perform the same task but the
07:30 - problem with do while loop is not a
07:32 - problem but the property of do while
07:34 - loop is it will execute at least once
07:39 - even if your condition is true so for
07:42 - example I will show you how you can
07:44 - declare do while loop you just need to
07:48 - write do
07:50 - here instead of while and it'll include
07:53 - these curly braces and after
07:56 - your curly braces you provide while
08:00 - and you just give the semicolon here
08:03 - okay
08:05 - so by the you sceleton itself you can
08:09 - understand what it will do it will do
08:11 - first so do means do something so your
08:16 - program will come here it will execute
08:18 - this condition and it will check this
08:22 - condition after executing this code okay
08:26 - while whether whenever you were using
08:29 - while it will checking the condition
08:31 - first and then executing but in the case
08:34 - of do while loop it will execute the
08:36 - code first and then check the condition
08:39 - for example I uh do it like
08:42 - this uh or I do it
08:46 - like this which is never true right so
08:52 - our program should idly go out of the
08:55 - loop right because this condition is not
08:58 - true so whenever I run this what will
09:02 - you expect it will run at least once
09:07 - because doy Loop executes your code even
09:11 - if the condition is false at least once
09:14 - and then checks the condition okay so
09:18 - this is the property of two while loop
09:20 - it will execute your code and then
09:22 - checks the properties and if this is 10
09:26 - and once again you will run it it will
09:28 - execute it like this
09:30 - okay so remember this whenever you want
09:34 - to check the condition first use while
09:38 - loop and whenever you want to perform
09:40 - your code at least once before checking
09:42 - the condition use do while loop so I
09:46 - hope you have enjoyed this video please
09:47 - wait comment and subscribe and bye for
09:49 - now

Cleaned transcript:

hello guys welcome once again in this video I'm going to teach you about loops in PHP and in this particular video I'm going to teach you about a while loop and do while loop but first of all what is a while loop by the name itself uh you can understand that why a loop is a piece of code which will execute again and again in Loop until and unless some condition is true or false okay so Loop is a piece of code which we use to execute a piece of code again and again until and unless some condition is met so let's start with Y Loop for example I want to print some string again and again 10 times uh without writing the code 10 times right so for example example I want to print Echo and for example programming knowledge I want to print it 10 times but I don't want to I mean repeat the code I don't want to do it like this 10 times I just want to use the same line and I want to print this 10 times how can I do it so I can do it using Loops so for example what I will do here is I will just first of all I will declare a counter counter and I will initialize it by one and let's see how we can use file Loop first what is the basic skeleton of file so while loop is declared by this keyword while and these two brackets and here comes your uh your code so this is the keyword to declare y Loop and this bracket comes the condition which has to mat uh in order to uh execute the code inside your y Loop so I want to print this whenever some condition is true now in while loop there is a number called zero and whenever you give as a argument to Y Loop your condition will never be true because Zer is equal to false in PHP whenever you passes pass it as an argument for checking some condition and on the other hand one is considered as always true so if you give one as a y Loop and it will keep on running forever without stopping so never attempt something like this until and unless you have some concrete reason of doing this otherwise it will crash your browser it will crash your computer and you you know it can be harmful for your uh program so never try something like this until and unless you have some reason to do it okay okay so for example I want to print this 10 times how can I do it I can provide a condition to this while loop that until and unless this counter is less than or equal to 10 I want to print this but we are not uh using this counter anywhere right so it will always be less counter we initialize this counter by one and one is always less than 10 then this is the same condition as giving one to here this is the same condition like this which which will never be met right so what we can do is we can increase this counter every time we execute this code we can increase it like this by this increment operator and what this will do let's see it will print out this 10 times let's try to run the program and it prints this programming knowledge 10 times let me provide this break which I always forget so that it will be printed in line by line you see now for example I want to check uh whether is it executing 10 times really or not what I can do is I can just provide this single codes here for example and or even I can use double quotes also and I can use the concatenation operator so I can concatenate uh this here counter and so I want to just print the counter value not the counter Plus+ right and then I want to provide the break okay so space Discounter and then the break in double codes I will provide the break and let's do it with the single codes for now single Cod single code single quotation and single quotation and here I should add a my and symbol otherwise it will not recognize this and let's see what is the value of counter one by one okay we just rerun it and you see the value of counter first of all is 1 2 3 4 5 6 7 8 until 10 right so what's happening here is you provide the value of counter is equal to one and it goes to this code and here value of counter is one and Which is less than 10 so it will execute this code and the value of counter will be printed one here and then your counter will be increased by one so the value of counter becomes two here it will go once again to the loop it will check two is less than or less than 10 still it will print this and the counter will be two and counter will be increased to one more which is three and it will keep on doing this until and unless this counter becomes 11 and this condition is false 11 is not less than or equal to 10 so this code will not be executed and your uh code will go out yeah okay so this is how you can use while loop and what is the basic thing here until and unless this condition is true your code will be executed now you can also use two while loop to perform the same task but the problem with do while loop is not a problem but the property of do while loop is it will execute at least once even if your condition is true so for example I will show you how you can declare do while loop you just need to write do here instead of while and it'll include these curly braces and after your curly braces you provide while and you just give the semicolon here okay so by the you sceleton itself you can understand what it will do it will do first so do means do something so your program will come here it will execute this condition and it will check this condition after executing this code okay while whether whenever you were using while it will checking the condition first and then executing but in the case of do while loop it will execute the code first and then check the condition for example I uh do it like this uh or I do it like this which is never true right so our program should idly go out of the loop right because this condition is not true so whenever I run this what will you expect it will run at least once because doy Loop executes your code even if the condition is false at least once and then checks the condition okay so this is the property of two while loop it will execute your code and then checks the properties and if this is 10 and once again you will run it it will execute it like this okay so remember this whenever you want to check the condition first use while loop and whenever you want to perform your code at least once before checking the condition use do while loop so I hope you have enjoyed this video please wait comment and subscribe and bye for now
