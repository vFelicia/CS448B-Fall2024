With timestamps:

00:00 - in this video we will be talking about
00:01 - the tools that you have to install in
00:04 - your PC to get started you working with
00:07 - the mavic okay so first thing first you
00:10 - need Java uh because it's a Java based
00:13 - uh tool navigation so you require Java
00:17 - in your PC so to install Java uh you can
00:21 - just go here and in your browser and
00:23 - just write down wait
00:27 - download
00:29 - Java
00:31 - jdk okay so first thing uh first link
00:35 - will come from Oracle itself okay just
00:39 - open it and here you can see uh
00:42 - whichever operating system that you are
00:44 - using select according to according to
00:46 - that uh if you are using Windows select
00:48 - windows or Linux or Mac OS right now I'm
00:51 - using Windows 11 so I will select
00:53 - windows and I will again in any of these
00:59 - three options available you can download
01:01 - anyone uh so I like to install the
01:03 - direct installer for that Java and I
01:06 - will just click click here and it will
01:09 - start downloading the jdk file for my PC
01:13 - okay so I will not download it again as
01:17 - I have downloaded okay so wait a minute
01:21 - let me cancel it after uh downloading
01:25 - this uh wait a minute I will show you
01:28 - uh just in case uh it is downloading uh
01:33 - now okay so if you have if you guys are
01:36 - liking this series so do hit that like
01:38 - button and share with you share it with
01:41 - your friends who wants to learn Maven
01:42 - okay uh okay wait uh as I told you I
01:46 - have already installed jdk in my PC so
01:49 - you don't uh need to do anything or you
01:52 - just come here come at this site and
01:55 - click on the x 24 x 64 installer and
01:58 - click on this link it will start
02:00 - download the jdk file for for the latest
02:03 - version which is 19 for now at the time
02:06 - of recording of this lecture and that is
02:09 - a exe file that is executable file okay
02:11 - just go inside your uh
02:14 - I'm a file explorer and go inside uh
02:17 - your C drive and after C drive you can
02:21 - go inside your program files and inside
02:22 - program files you can find Java Java
02:25 - folder is being created okay after the
02:27 - installation just open the Java file you
02:30 - can see jdk 19 is here installed in my
02:33 - PC and I will just go double click on
02:36 - that folder and after in this folder uh
02:40 - as you can see bin folder is there okay
02:42 - so you you just double click on it and
02:44 - inside these all these Java files are
02:47 - jdk files are there so you just need to
02:49 - click on this address bar and click Ctrl
02:53 - C so to copy this path and after copying
02:56 - this path just go come in come in your
02:58 - start and write edit
03:01 - edit okay so after writing edit you can
03:03 - see edit the system environment
03:05 - variables is uh best match comes over
03:07 - here you just click on it and this
03:10 - window will pop up and after here here
03:12 - you can click on this edit environment
03:14 - variables and so now we have two options
03:17 - you can set this environment variable
03:20 - path for the user variables like this is
03:23 - my user if you have if you are using
03:25 - multiple users in your inside your
03:27 - windows so then you can choose this path
03:30 - so and if you are using only single user
03:34 - in your windows you can choose the
03:36 - system variable service I prefer system
03:38 - variables because in in some cases there
03:41 - are multiple users inside your PC then
03:44 - you have to create a that separate
03:46 - separate path for the each user so
03:48 - instead of creating that you just come
03:50 - over a system variables and click on the
03:53 - path
03:53 - click on edit click on new and just
03:57 - paste paste this okay so this path you
04:00 - have to paste it over here oh I will not
04:03 - pasting pasting as I have already done
04:05 - that part you just paste it over here
04:06 - click on OK and just to ensure
04:11 - come here here path as well click on
04:14 - edit click on new Click Cash control V
04:18 - to paste it and just say okay okay and
04:22 - okay so you have to say okay okay and
04:26 - you will get out of this window and
04:29 - after doing all these things uh you can
04:31 - see exe file is also downloaded just
04:33 - open I will show you and I will not
04:35 - install as I I literally installed in my
04:38 - PC already uh I'll just show you okay so
04:41 - here you can see it it's giving me
04:42 - message that it is already installed on
04:45 - the PC do you want to reinstall it I
04:47 - will say no you just go ahead and say
04:49 - yes yes or next next so the Java will be
04:52 - installed on your PC that's it
04:54 - okay so this is a about Java okay so
04:57 - after installing Java uh you have to
05:00 - check whether all everything is good or
05:02 - you have your path is set up and you are
05:05 - good to go for the first checklist of
05:06 - our tools so for that verification you
05:10 - just come on come on start and click
05:12 - right click and as you can see terminal
05:14 - is here you can click on that and the
05:18 - terminal will get open and you just
05:20 - write one command Java
05:22 - minus minus over
05:24 - select hit enter and it should show the
05:28 - Java version that you have installed
05:30 - right now in your PC okay so if
05:33 - everything goes fine you should see this
05:36 - message or else if there are again some
05:39 - messages where a Java is not recognized
05:42 - as a command in that case you want you
05:45 - should you have you should miss some
05:48 - steps you go back and check this video
05:50 - again and try to install again okay so
05:53 - this is for our first Tool uh the second
05:56 - tool is of course Maven you are learning
05:59 - Maven you have to install Maven in your
06:01 - PC right so click on the new tab and
06:04 - just type
06:06 - download Navin
06:09 - sorry in my typo just give me all right
06:13 - okay so first link come which is
06:15 - official link from Apache
06:17 - you will just open this and after
06:20 - opening this these are the six system
06:22 - requirements uh just pause the video and
06:24 - see what are the system requirements
06:26 - that you you require as you say first
06:29 - request system requirement is jdk itself
06:31 - that we have downloaded in our first
06:33 - step so we are good to go for the jdk uh
06:36 - so there is no memory requirement uh so
06:39 - as many memory you have it's fine uh
06:42 - this requirements is there so you
06:43 - approximately 10 NP is required uh to
06:46 - Maven a solution itself so I guess no
06:50 - one is is there who doesn't have 10 MB
06:53 - of space inside this disk okay an
06:55 - operating system no minimum requirement
06:57 - uh startup scripts are included such as
07:00 - shell scripts and windows batch file so
07:02 - operating system you can use anyone
07:04 - okay so here you can see they have given
07:07 - four options you can download any one uh
07:11 - I personally like binary zip archive
07:13 - file so I will just come here and click
07:16 - on this link the this will download the
07:18 - Apache Maven zip file uh once installed
07:21 - I will go and
07:23 - click open when done
07:26 - or instead I will go inside my downloads
07:29 - folder I will click here okay so this
07:31 - you can see so first of all I need to
07:34 - extract this extract all
07:37 - uh I will browse just extract on like
07:41 - this
07:42 - and click on OK so it will extract
07:45 - everything what is inside that zip file
07:47 - so here you can see uh this file is
07:50 - being extracted uh I will just do one
07:54 - thing uh I will just
07:56 - cut this out and after cutting this I
07:59 - will come inside my C drive come inside
08:01 - my program files and inside my Java
08:05 - folder itself that we have seen all
08:08 - right
08:09 - program files inside Java I will paste
08:13 - that here itself okay
08:16 - I will paste it paste that extracted
08:18 - folder over here and now you have to do
08:21 - one thing we have to do is click on it
08:24 - click on bin and whatever inside is
08:26 - click on this path Ctrl C okay wait
08:31 - Ctrl C you have to copy that part and
08:34 - again come into the start and write edit
08:38 - edit edit the system where environment
08:40 - variables environment variables and just
08:43 - go inside path click on edit click on
08:48 - new and paste that path and just place
08:51 - okay and come down here and come here
08:57 - click on new click on Ctrl V and click
09:02 - OK OK
09:04 - and again okay so this part is done we
09:09 - have set the environment variables now
09:11 - after doing this we have to check
09:14 - whether everything is okay so for that
09:17 - again we have one command uh so let me
09:19 - just restart my terminal so that it
09:22 - knows the maven is installed in your PC
09:25 - okay and so the command is m v n minus
09:30 - minus
09:31 - version
09:33 - okay uh there is no and if you need to
09:38 - run this program this okay so Java home
09:40 - is a environment variable is not defined
09:43 - correctly so first let me go and rectify
09:47 - this error and I will come back okay
09:50 - okay so the problem that causes that
09:53 - Maven dot is is the internal command
09:57 - error so uh we have done all this right
10:01 - so we come into the edit we go into this
10:04 - environment variables and we are going
10:06 - inside our path we are clicking on edit
10:09 - and we are adding that path over here
10:11 - okay so this part this thing we have
10:14 - done correctly okay up to that I I hope
10:17 - you got this so one thing uh if you come
10:20 - over inside the terminal and just write
10:23 - mvn minus minus version and wait for a
10:28 - second okay now
10:30 - inside of a what Maven does is Maven
10:33 - come here inside our environment
10:35 - variables and check for the one variable
10:38 - name and Java home so we have to create
10:40 - that Java home variable so how to create
10:42 - it again come inside your edit and click
10:46 - come here and just click on new and set
10:50 - the variable name as Java underscore
10:55 - home
10:56 - all caps and the value should be the
10:59 - folder all right so the folder is as I
11:03 - showed you jdk 19 so don't go inside the
11:05 - bin just get this much path Ctrl C and
11:11 - get inside your variables and Ctrl V and
11:15 - just click OK after clicking OK so you
11:18 - can see one variable will got created
11:20 - over here and as that same variable you
11:23 - have to create over here as well Java
11:25 - home and this is the variable and once
11:27 - you create click on OK click on ok just
11:29 - come clear this out come inside your
11:32 - terminal and just write mvn minus minus
11:35 - version and hit enter so now I hope you
11:38 - see Apache Maven 3.9.0 and this is the
11:42 - binary code and the maven home this is
11:45 - and the Java version is also telling us
11:48 - and it is also telling us where Java is
11:50 - installed in this PC and some default
11:52 - local and platform encoding to tf8 okay
11:55 - and the OS number OS name is also
11:58 - telling us okay so this many information
12:00 - it gives you I hope you also get this
12:03 - information when when you try to run
12:06 - this command okay so we have done
12:09 - installing Maven done in short Java and
12:12 - we now again we required git okay so why
12:16 - to why to use git git is a very powerful
12:20 - word version controls management tool
12:23 - okay so you just come in here itself and
12:26 - now right
12:28 - download it and hit enter so first thing
12:32 - uh first link you see is the official
12:34 - from git distributed it is the new
12:39 - distributed is the new center live okay
12:41 - so you can see it automatically detects
12:43 - your OS and gives you the link
12:46 - for your OS so once you click on the
12:49 - download for Windows uh click here to
12:52 - download the latest this click here to
12:54 - download and it will download the 50mb
12:57 - file which is like the executable file
13:00 - once it it got downloaded you just click
13:03 - on it uh let let the default
13:05 - installation be there click on okay okay
13:08 - next next this will install git in your
13:11 - PC successfully and once it installed it
13:14 - is very a powerful tool we will see when
13:18 - we are started using Maven and build
13:21 - started building some projects using
13:24 - Maven and Java you can see uh it is
13:27 - downloaded just click on it and go next
13:31 - next and install this tool as well okay
13:34 - and last last checklist is any IDE your
13:39 - preference you if you want vs code you
13:42 - can use vs code if you want Eclipse you
13:44 - can use Eclipse you can you can also use
13:49 - I guess very much powerful and very good
13:54 - looking ID so uh I would also suggest
13:57 - you to download the IntelliJ IDEA if you
13:59 - are following me and if you are if you
14:01 - want to follow this course okay so I'm
14:04 - assuming that you are you have already
14:06 - downloaded IntelliJ IDEA if not let me
14:09 - just quickly give you uh overview how
14:11 - you can download it just come here and
14:13 - write download
14:17 - IntelliJ IDEA
14:20 - if you hit enter first link comes from
14:23 - judgment itself just click on it
14:26 - and you will get to the IntelliJ IDEA
14:29 - download page uh now according to your
14:32 - operating system you can choose anywhere
14:34 - either Windows Mac OS Linux and I am
14:38 - currently now I am using Windows 11
14:39 - that's why I will click on Windows and
14:42 - there are two editions of this IDE one
14:45 - is Ultimate one and one is Community
14:46 - Edition uh so I will download the
14:49 - Community Edition because it is the free
14:51 - one and open source also and but the
14:54 - ultimate one is the you get more
14:57 - features and 30-day trial trial also so
15:00 - if you want you can download but it is
15:01 - paid I want you can compare all these uh
15:04 - features that you get in a paid one and
15:07 - a free one also so go ahead and click on
15:09 - download exe file or zip file whatever
15:11 - you want it will start download it is
15:14 - around 700 MB uh it depends upon your
15:17 - download speed it will get downloaded
15:20 - and just go ahead and click next next
15:21 - your IDE will get installed in your
15:24 - system okay I will doing cancel because
15:26 - I have downloaded already okay so
15:30 - assuming that you have downloaded this
15:32 - idea and if you if you want to follow
15:34 - along this code uh let's get let's go in
15:38 - our IDE and create our first Maven
15:40 - project okay all right let's go
15:45 - so I will come into my IDE first time if
15:49 - you are opening this you will see one
15:51 - window like this and there are no
15:53 - project here because since I work
15:55 - working along Java so there are some
15:57 - Java projects also in kotlin budgets
15:58 - also so ignore this one uh you just
16:01 - click on uh projects tab click on new
16:04 - project and you just have to name your
16:07 - project right so I will write my
16:14 - I'll adjust my first mapping okay so uh
16:19 - select the location uh wherever you want
16:21 - to store this project so I didn't build
16:24 - paper I will just go ahead into my
16:29 - desktop I will create one folder name as
16:33 - maven and inside that I will store my
16:36 - project okay you can choose anywhere
16:38 - anywhere you want uh so the language of
16:41 - this development is Java build system is
16:44 - a maven remember build system to say
16:47 - selected as Maven uh and because we are
16:50 - working with Maven itself and we need
16:53 - jdk so here uh whatever jdks which are
16:57 - installed in your system it will show
16:58 - all the jdk over here select whatever
17:01 - jdk you want I will go with the latest
17:03 - 119 and if if there is no jdk listed
17:07 - over here you can just go ahead and
17:08 - download the jdk and if there is any jdk
17:11 - downloaded install downloaded and
17:13 - installed in your PC already just go
17:15 - ahead and add jdk folder and give the
17:17 - path to the IntelliJ IDEA where your jdk
17:21 - resides okay
17:23 - I will just go with 19 add sample code
17:26 - Okay add one settings uh I don't need
17:30 - anything okay and I will just hit create
17:35 - all right
17:37 - it is working like let it finish it will
17:41 - download the plugins which are required
17:43 - for the maven project to run it is
17:46 - downloading here you can see the
17:47 - background task I will show you waiting
17:49 - for Maven import completion and Maven
17:52 - plugins will get downloaded Okay so
17:57 - but if you are running this first time
17:59 - it will take time some time let it be uh
18:03 - by the time I will give you the IDE over
18:06 - you if you are using first time uh so
18:09 - this is how the IntelliJ IDEA looks like
18:11 - uh here you have the project tab where
18:14 - all those uh directories I've listed
18:17 - over here in a such a beautiful manner
18:18 - you can switch a switch between this
18:20 - idea Java or and here's the main file
18:23 - main domain.java file where uh our Java
18:26 - code is written just a simple hello
18:28 - world which is given by IntelliJ IDEA
18:30 - itself just to quick start our the
18:33 - development process and here is a
18:35 - project tab you can hide and an ID
18:38 - so that you can get the more view of
18:41 - this
18:42 - your file and after that uh one more is
18:47 - one more thing is here you can see Maven
18:49 - Maven tab is there if you click on it it
18:51 - will show you all those life cycles uh
18:55 - and the life cycles I hope you watched
18:57 - the previous video where we have
18:58 - discussed all those like uh build life
19:00 - cycles clean validate compilation and I
19:03 - have given you the theoretical knowledge
19:06 - of that these all these life cycles also
19:08 - you can come and I will show you how to
19:11 - use this tab also uh but first I guess
19:15 - yeah it's over and plugins also here you
19:17 - can see clean compiler deploy install
19:19 - jar all this plugins are also there we
19:22 - will have separate plugins video okay
19:26 - now uh I guess the processing is done
19:29 - yeah our project is ready to go and what
19:33 - we have done uh is we have created our
19:36 - first project now we have to understand
19:38 - the dependencies okay so I hope you
19:41 - watched the previous video uh where I
19:43 - discuss about how to add these
19:44 - dependencies and how dependent
19:46 - dependencies looks like how what are the
19:48 - types of dependencies okay so let's go
19:51 - and create our first dependencies so if
19:54 - you recall uh I have told you that to
19:57 - create a dependencies how to manage the
19:59 - dependencies or you have one file called
20:02 - palm.xml okay so this is our Maven
20:05 - project you can see we have one pom.xml
20:08 - file just double click on it it will
20:10 - open that form.xml file so since this is
20:13 - a file extension is dot XML so extreme
20:16 - XML files contains the tags okay so
20:19 - these are the tags so so the parent tag
20:21 - is the project one so under which all
20:24 - these uh tags are written so our parent
20:27 - tag is Project under which model version
20:29 - is there uh this is XML scheme namespace
20:32 - schemas which are written on in the web
20:36 - itself if you go go on this site you can
20:39 - found all those schemas and
20:43 - group ID is there artifact ID for our
20:46 - project artifact ID is the project name
20:48 - itself and version is given by the
20:50 - Integrity itself okay and some
20:53 - properties of our project
20:56 - all right this is the file which is
20:59 - generated by the IntelliJ IDEA and given
21:01 - to us so now if I want to create some
21:05 - dependencies in my project how can I add
21:08 - dependencies over here okay so you see
21:12 - uh
21:14 - you just have to
21:16 - wait a second okay so now
21:20 - if you want to create some dependencies
21:22 - inside this so there are many ways to
21:25 - create the differential one way is
21:26 - straightforward you can you just go here
21:28 - and write
21:30 - dependencies so it will create the
21:32 - dependencies tag and uh after that and
21:36 - one thing we have the dependencies as
21:39 - our parent tag inside which all those
21:42 - dependencies reside is here as you can
21:45 - see dependency is the parent type under
21:47 - which dependency tag is there so we have
21:49 - to write the dependency type okay we
21:52 - write dependence
21:55 - okay and uh the thing because I love
22:00 - Italian idea is this it will
22:02 - automatically give me the group ID and
22:03 - artifact ID that you want to enter so
22:05 - let's enter uh let's create the stream
22:07 - framework uh dependency for our project
22:10 - I will write at a artifact ID at Spring
22:14 - slash
22:15 - spring
22:18 - SPI and G spring slash code
22:23 - okay
22:25 - uh
22:28 - Let It Be
22:30 - uh the version I will use this
22:35 - okay I am getting married when you see
22:38 - uh
22:42 - it's fine uh so you see this is the one
22:45 - way you can create the dependencies you
22:48 - you just you just need to go ahead and
22:49 - write start writing in this uh like if I
22:53 - write J unit uh that is one word uh
22:56 - dependencies uh wait wait let me clear
22:59 - this out so that interview had a get
23:01 - that we are writing this for the first
23:03 - time okay J
23:06 - junit dependency this is our
23:10 - this is over there yes so I have I have
23:14 - added added junit dependency in my
23:16 - project okay so this is the one way you
23:19 - can add the dependencies but here you
23:22 - have to uh know the name of that
23:24 - artifact uh article ID means the
23:26 - dependency name to be precise and again
23:30 - the rest of the things is easy it will
23:33 - automatically shift the cursor to the
23:34 - GOP ID and come to the version and it
23:36 - would automatically add the scope here
23:39 - you can see I have not written the scope
23:40 - tag into it has automatically added the
23:42 - scope telling that uh that please use
23:46 - this junit dependencies for my project
23:48 - uh when to use in the test phase because
23:50 - J unit is the testing uh
23:53 - a related Library Auto Tool okay so here
23:56 - you can see we have created one
23:58 - dependencies so now I will give you one
24:00 - another way how you can add the
24:03 - dependencies right so if you go to the
24:06 - uh this
24:09 - code
24:11 - if you go into generate and it will if
24:14 - you go to the
24:17 - manage a dependency template uh okay so
24:21 - it will give you the dependency template
24:23 - I don't know what the template I just
24:24 - need uh wait a second
24:28 - manage dependencies okay we have nothing
24:31 - to show I guess we do it okay so add
24:36 - dependency button is there if you click
24:37 - on it uh it will show you the this tab
24:40 - so our project name is there my first
24:43 - Maven and only stable and now here you
24:47 - can see the search button is search bar
24:49 - is there you can search any framework
24:51 - that you want in your project over here
24:54 - uh you just need to write spring if you
24:58 - want to use ping in your project and one
25:01 - more thing uh these all implementation
25:03 - are done by the ID IntelliJ IDEA you
25:06 - don't have to uh worry about it you just
25:09 - go ahead and search the dependency name
25:11 - and again if you want to search any
25:13 - dependencies uh you just need to go and
25:16 - go to the maven Repository
25:19 - repository here you can see all these
25:22 - dependencies you can see any
25:24 - dependencies that you want to search you
25:26 - just go here and like spring
25:30 - okay and hit search
25:32 - Spring contact spring core all the
25:35 - dependencies will come and these uh
25:38 - IntelliJ IDEA is integrated this
25:39 - functionality inside their IDE so that
25:42 - you can come here and write the spring
25:44 - and get that spring if you want this
25:46 - spring uh you can again you can select
25:50 - the scope of this I integride has given
25:53 - me the scope to compile so I will set it
25:56 - as compile and again you have version
25:58 - you if you you want to use the previous
26:01 - version you can go ahead and use
26:02 - previous version also I will go with the
26:05 - latest one or the IntelliJ IDEA that
26:07 - provided me and if I want this spring I
26:11 - have selected the version I am good to
26:14 - go and I will just click on ADD
26:16 - so after I click on add this
26:20 - dependencies you can see these two tags
26:23 - have been added inside my uh com.xml
26:26 - file okay so now uh if this is the two
26:31 - way by which you can add the
26:32 - dependencies right so if I go into
26:34 - inside my Maven and if I go inside my
26:37 - life cycle and I will just click on
26:39 - install
26:40 - okay it will run my uh maving command
26:44 - and you can see it it's giving me the
26:47 - error I guess could not find the
26:49 - artifact okay so J unit uh is not
26:53 - found I have to use that
26:57 - okay okay okay wait a minute so I will
27:00 - just remove this dependencies
27:03 - I guess right let it be
27:07 - okay so it doesn't find my dependency of
27:12 - that junit okay I will click on install
27:14 - again
27:15 - now you can see there is no folder right
27:18 - it will here you can see process
27:20 - finished with exit code 1 our build
27:23 - failure why so I'm getting the errors oh
27:27 - okay okay
27:31 - wait a minute guys
27:35 - okay
27:40 - to rerun the maven using okay okay for
27:44 - more information wait a minute guys I
27:47 - will be back
27:50 - okay so guys I'll figure out the error
27:52 - the error causing because the spring
27:54 - framework spring framework dependencies
27:57 - so that doesn't work for that let me
28:01 - just add one more dependencies uh so so
28:04 - that you can
28:06 - uh get what I'm trying to tell you J
28:10 - unit I will add the dependency of J unit
28:12 - itself
28:15 - uh let me go ahead and add
28:19 - okay it's getting added
28:24 - okay
28:26 - so
28:32 - okay fine now uh you can see uh inside
28:36 - my this root folder uh previously there
28:40 - are two two or two folders okay life
28:42 - cycle and plugin only but as soon as I
28:44 - create this J unit dependencies and and
28:47 - my reload and I reload my Maven project
28:50 - it will
28:52 - it has created one more folder named
28:55 - dependencies inside which uh junit
28:58 - dependency is there okay so you can see
29:00 - as I as I added J unit dependencies over
29:02 - here you can see j18 dependencies also
29:05 - added my memory deposit direct folder
29:08 - directory structure and if I uh now if I
29:10 - go ahead and insert my life cycle and
29:13 - click on install
29:14 - uh it should go ahead and get this
29:17 - dependency and install it and yes build
29:20 - success Target project is also created a
29:23 - Target folder is also created we'll see
29:26 - what is Target we are having separate
29:28 - video on this uh what are the classes
29:30 - and how the this actual works we'll see
29:35 - but for this video I hope you got some
29:39 - idea about this form red XML file how to
29:41 - add dependencies now one more thing if
29:43 - you want to delete the dependency if you
29:45 - are just going inside this dependencies
29:47 - tab and uh in future you want to delete
29:50 - this dependencies you no more required J
29:53 - unit inside your project you just go
29:55 - ahead and come here J unit you click on
29:57 - the junit uh you you come over three
30:00 - three dots and you have the remove you
30:02 - can remove and as soon as you click on
30:04 - this you just have to come here and load
30:06 - mapping changes it will reload your
30:09 - project and see all the any dependencies
30:11 - got added or removed if this dependency
30:14 - as soon as I load my project that
30:16 - dependencies folder is gone because no
30:19 - more dependencies are required for our
30:20 - project okay as soon as you add no
30:23 - dependencies no dependencies folder will
30:25 - get created over here so I hope you got
30:28 - some idea how to add or manage the
30:32 - dependencies inside the IntelliJ IDEA
30:35 - and what is form.xml file and we'll
30:38 - continue this project we'll create one
30:40 - Java project and uh I'll see you in one
30:43 - live demonstration of when by creating
30:45 - one project using Maven okay so thank
30:47 - you for watching this video and I will
30:48 - see you in the next one

Cleaned transcript:

in this video we will be talking about the tools that you have to install in your PC to get started you working with the mavic okay so first thing first you need Java uh because it's a Java based uh tool navigation so you require Java in your PC so to install Java uh you can just go here and in your browser and just write down wait download Java jdk okay so first thing uh first link will come from Oracle itself okay just open it and here you can see uh whichever operating system that you are using select according to according to that uh if you are using Windows select windows or Linux or Mac OS right now I'm using Windows 11 so I will select windows and I will again in any of these three options available you can download anyone uh so I like to install the direct installer for that Java and I will just click click here and it will start downloading the jdk file for my PC okay so I will not download it again as I have downloaded okay so wait a minute let me cancel it after uh downloading this uh wait a minute I will show you uh just in case uh it is downloading uh now okay so if you have if you guys are liking this series so do hit that like button and share with you share it with your friends who wants to learn Maven okay uh okay wait uh as I told you I have already installed jdk in my PC so you don't uh need to do anything or you just come here come at this site and click on the x 24 x 64 installer and click on this link it will start download the jdk file for for the latest version which is 19 for now at the time of recording of this lecture and that is a exe file that is executable file okay just go inside your uh I'm a file explorer and go inside uh your C drive and after C drive you can go inside your program files and inside program files you can find Java Java folder is being created okay after the installation just open the Java file you can see jdk 19 is here installed in my PC and I will just go double click on that folder and after in this folder uh as you can see bin folder is there okay so you you just double click on it and inside these all these Java files are jdk files are there so you just need to click on this address bar and click Ctrl C so to copy this path and after copying this path just go come in come in your start and write edit edit okay so after writing edit you can see edit the system environment variables is uh best match comes over here you just click on it and this window will pop up and after here here you can click on this edit environment variables and so now we have two options you can set this environment variable path for the user variables like this is my user if you have if you are using multiple users in your inside your windows so then you can choose this path so and if you are using only single user in your windows you can choose the system variable service I prefer system variables because in in some cases there are multiple users inside your PC then you have to create a that separate separate path for the each user so instead of creating that you just come over a system variables and click on the path click on edit click on new and just paste paste this okay so this path you have to paste it over here oh I will not pasting pasting as I have already done that part you just paste it over here click on OK and just to ensure come here here path as well click on edit click on new Click Cash control V to paste it and just say okay okay and okay so you have to say okay okay and you will get out of this window and after doing all these things uh you can see exe file is also downloaded just open I will show you and I will not install as I I literally installed in my PC already uh I'll just show you okay so here you can see it it's giving me message that it is already installed on the PC do you want to reinstall it I will say no you just go ahead and say yes yes or next next so the Java will be installed on your PC that's it okay so this is a about Java okay so after installing Java uh you have to check whether all everything is good or you have your path is set up and you are good to go for the first checklist of our tools so for that verification you just come on come on start and click right click and as you can see terminal is here you can click on that and the terminal will get open and you just write one command Java minus minus over select hit enter and it should show the Java version that you have installed right now in your PC okay so if everything goes fine you should see this message or else if there are again some messages where a Java is not recognized as a command in that case you want you should you have you should miss some steps you go back and check this video again and try to install again okay so this is for our first Tool uh the second tool is of course Maven you are learning Maven you have to install Maven in your PC right so click on the new tab and just type download Navin sorry in my typo just give me all right okay so first link come which is official link from Apache you will just open this and after opening this these are the six system requirements uh just pause the video and see what are the system requirements that you you require as you say first request system requirement is jdk itself that we have downloaded in our first step so we are good to go for the jdk uh so there is no memory requirement uh so as many memory you have it's fine uh this requirements is there so you approximately 10 NP is required uh to Maven a solution itself so I guess no one is is there who doesn't have 10 MB of space inside this disk okay an operating system no minimum requirement uh startup scripts are included such as shell scripts and windows batch file so operating system you can use anyone okay so here you can see they have given four options you can download any one uh I personally like binary zip archive file so I will just come here and click on this link the this will download the Apache Maven zip file uh once installed I will go and click open when done or instead I will go inside my downloads folder I will click here okay so this you can see so first of all I need to extract this extract all uh I will browse just extract on like this and click on OK so it will extract everything what is inside that zip file so here you can see uh this file is being extracted uh I will just do one thing uh I will just cut this out and after cutting this I will come inside my C drive come inside my program files and inside my Java folder itself that we have seen all right program files inside Java I will paste that here itself okay I will paste it paste that extracted folder over here and now you have to do one thing we have to do is click on it click on bin and whatever inside is click on this path Ctrl C okay wait Ctrl C you have to copy that part and again come into the start and write edit edit edit the system where environment variables environment variables and just go inside path click on edit click on new and paste that path and just place okay and come down here and come here click on new click on Ctrl V and click OK OK and again okay so this part is done we have set the environment variables now after doing this we have to check whether everything is okay so for that again we have one command uh so let me just restart my terminal so that it knows the maven is installed in your PC okay and so the command is m v n minus minus version okay uh there is no and if you need to run this program this okay so Java home is a environment variable is not defined correctly so first let me go and rectify this error and I will come back okay okay so the problem that causes that Maven dot is is the internal command error so uh we have done all this right so we come into the edit we go into this environment variables and we are going inside our path we are clicking on edit and we are adding that path over here okay so this part this thing we have done correctly okay up to that I I hope you got this so one thing uh if you come over inside the terminal and just write mvn minus minus version and wait for a second okay now inside of a what Maven does is Maven come here inside our environment variables and check for the one variable name and Java home so we have to create that Java home variable so how to create it again come inside your edit and click come here and just click on new and set the variable name as Java underscore home all caps and the value should be the folder all right so the folder is as I showed you jdk 19 so don't go inside the bin just get this much path Ctrl C and get inside your variables and Ctrl V and just click OK after clicking OK so you can see one variable will got created over here and as that same variable you have to create over here as well Java home and this is the variable and once you create click on OK click on ok just come clear this out come inside your terminal and just write mvn minus minus version and hit enter so now I hope you see Apache Maven 3.9.0 and this is the binary code and the maven home this is and the Java version is also telling us and it is also telling us where Java is installed in this PC and some default local and platform encoding to tf8 okay and the OS number OS name is also telling us okay so this many information it gives you I hope you also get this information when when you try to run this command okay so we have done installing Maven done in short Java and we now again we required git okay so why to why to use git git is a very powerful word version controls management tool okay so you just come in here itself and now right download it and hit enter so first thing uh first link you see is the official from git distributed it is the new distributed is the new center live okay so you can see it automatically detects your OS and gives you the link for your OS so once you click on the download for Windows uh click here to download the latest this click here to download and it will download the 50mb file which is like the executable file once it it got downloaded you just click on it uh let let the default installation be there click on okay okay next next this will install git in your PC successfully and once it installed it is very a powerful tool we will see when we are started using Maven and build started building some projects using Maven and Java you can see uh it is downloaded just click on it and go next next and install this tool as well okay and last last checklist is any IDE your preference you if you want vs code you can use vs code if you want Eclipse you can use Eclipse you can you can also use I guess very much powerful and very good looking ID so uh I would also suggest you to download the IntelliJ IDEA if you are following me and if you are if you want to follow this course okay so I'm assuming that you are you have already downloaded IntelliJ IDEA if not let me just quickly give you uh overview how you can download it just come here and write download IntelliJ IDEA if you hit enter first link comes from judgment itself just click on it and you will get to the IntelliJ IDEA download page uh now according to your operating system you can choose anywhere either Windows Mac OS Linux and I am currently now I am using Windows 11 that's why I will click on Windows and there are two editions of this IDE one is Ultimate one and one is Community Edition uh so I will download the Community Edition because it is the free one and open source also and but the ultimate one is the you get more features and 30day trial trial also so if you want you can download but it is paid I want you can compare all these uh features that you get in a paid one and a free one also so go ahead and click on download exe file or zip file whatever you want it will start download it is around 700 MB uh it depends upon your download speed it will get downloaded and just go ahead and click next next your IDE will get installed in your system okay I will doing cancel because I have downloaded already okay so assuming that you have downloaded this idea and if you if you want to follow along this code uh let's get let's go in our IDE and create our first Maven project okay all right let's go so I will come into my IDE first time if you are opening this you will see one window like this and there are no project here because since I work working along Java so there are some Java projects also in kotlin budgets also so ignore this one uh you just click on uh projects tab click on new project and you just have to name your project right so I will write my I'll adjust my first mapping okay so uh select the location uh wherever you want to store this project so I didn't build paper I will just go ahead into my desktop I will create one folder name as maven and inside that I will store my project okay you can choose anywhere anywhere you want uh so the language of this development is Java build system is a maven remember build system to say selected as Maven uh and because we are working with Maven itself and we need jdk so here uh whatever jdks which are installed in your system it will show all the jdk over here select whatever jdk you want I will go with the latest 119 and if if there is no jdk listed over here you can just go ahead and download the jdk and if there is any jdk downloaded install downloaded and installed in your PC already just go ahead and add jdk folder and give the path to the IntelliJ IDEA where your jdk resides okay I will just go with 19 add sample code Okay add one settings uh I don't need anything okay and I will just hit create all right it is working like let it finish it will download the plugins which are required for the maven project to run it is downloading here you can see the background task I will show you waiting for Maven import completion and Maven plugins will get downloaded Okay so but if you are running this first time it will take time some time let it be uh by the time I will give you the IDE over you if you are using first time uh so this is how the IntelliJ IDEA looks like uh here you have the project tab where all those uh directories I've listed over here in a such a beautiful manner you can switch a switch between this idea Java or and here's the main file main domain.java file where uh our Java code is written just a simple hello world which is given by IntelliJ IDEA itself just to quick start our the development process and here is a project tab you can hide and an ID so that you can get the more view of this your file and after that uh one more is one more thing is here you can see Maven Maven tab is there if you click on it it will show you all those life cycles uh and the life cycles I hope you watched the previous video where we have discussed all those like uh build life cycles clean validate compilation and I have given you the theoretical knowledge of that these all these life cycles also you can come and I will show you how to use this tab also uh but first I guess yeah it's over and plugins also here you can see clean compiler deploy install jar all this plugins are also there we will have separate plugins video okay now uh I guess the processing is done yeah our project is ready to go and what we have done uh is we have created our first project now we have to understand the dependencies okay so I hope you watched the previous video uh where I discuss about how to add these dependencies and how dependent dependencies looks like how what are the types of dependencies okay so let's go and create our first dependencies so if you recall uh I have told you that to create a dependencies how to manage the dependencies or you have one file called palm.xml okay so this is our Maven project you can see we have one pom.xml file just double click on it it will open that form.xml file so since this is a file extension is dot XML so extreme XML files contains the tags okay so these are the tags so so the parent tag is the project one so under which all these uh tags are written so our parent tag is Project under which model version is there uh this is XML scheme namespace schemas which are written on in the web itself if you go go on this site you can found all those schemas and group ID is there artifact ID for our project artifact ID is the project name itself and version is given by the Integrity itself okay and some properties of our project all right this is the file which is generated by the IntelliJ IDEA and given to us so now if I want to create some dependencies in my project how can I add dependencies over here okay so you see uh you just have to wait a second okay so now if you want to create some dependencies inside this so there are many ways to create the differential one way is straightforward you can you just go here and write dependencies so it will create the dependencies tag and uh after that and one thing we have the dependencies as our parent tag inside which all those dependencies reside is here as you can see dependency is the parent type under which dependency tag is there so we have to write the dependency type okay we write dependence okay and uh the thing because I love Italian idea is this it will automatically give me the group ID and artifact ID that you want to enter so let's enter uh let's create the stream framework uh dependency for our project I will write at a artifact ID at Spring slash spring SPI and G spring slash code okay uh Let It Be uh the version I will use this okay I am getting married when you see uh it's fine uh so you see this is the one way you can create the dependencies you you just you just need to go ahead and write start writing in this uh like if I write J unit uh that is one word uh dependencies uh wait wait let me clear this out so that interview had a get that we are writing this for the first time okay J junit dependency this is our this is over there yes so I have I have added added junit dependency in my project okay so this is the one way you can add the dependencies but here you have to uh know the name of that artifact uh article ID means the dependency name to be precise and again the rest of the things is easy it will automatically shift the cursor to the GOP ID and come to the version and it would automatically add the scope here you can see I have not written the scope tag into it has automatically added the scope telling that uh that please use this junit dependencies for my project uh when to use in the test phase because J unit is the testing uh a related Library Auto Tool okay so here you can see we have created one dependencies so now I will give you one another way how you can add the dependencies right so if you go to the uh this code if you go into generate and it will if you go to the manage a dependency template uh okay so it will give you the dependency template I don't know what the template I just need uh wait a second manage dependencies okay we have nothing to show I guess we do it okay so add dependency button is there if you click on it uh it will show you the this tab so our project name is there my first Maven and only stable and now here you can see the search button is search bar is there you can search any framework that you want in your project over here uh you just need to write spring if you want to use ping in your project and one more thing uh these all implementation are done by the ID IntelliJ IDEA you don't have to uh worry about it you just go ahead and search the dependency name and again if you want to search any dependencies uh you just need to go and go to the maven Repository repository here you can see all these dependencies you can see any dependencies that you want to search you just go here and like spring okay and hit search Spring contact spring core all the dependencies will come and these uh IntelliJ IDEA is integrated this functionality inside their IDE so that you can come here and write the spring and get that spring if you want this spring uh you can again you can select the scope of this I integride has given me the scope to compile so I will set it as compile and again you have version you if you you want to use the previous version you can go ahead and use previous version also I will go with the latest one or the IntelliJ IDEA that provided me and if I want this spring I have selected the version I am good to go and I will just click on ADD so after I click on add this dependencies you can see these two tags have been added inside my uh com.xml file okay so now uh if this is the two way by which you can add the dependencies right so if I go into inside my Maven and if I go inside my life cycle and I will just click on install okay it will run my uh maving command and you can see it it's giving me the error I guess could not find the artifact okay so J unit uh is not found I have to use that okay okay okay wait a minute so I will just remove this dependencies I guess right let it be okay so it doesn't find my dependency of that junit okay I will click on install again now you can see there is no folder right it will here you can see process finished with exit code 1 our build failure why so I'm getting the errors oh okay okay wait a minute guys okay to rerun the maven using okay okay for more information wait a minute guys I will be back okay so guys I'll figure out the error the error causing because the spring framework spring framework dependencies so that doesn't work for that let me just add one more dependencies uh so so that you can uh get what I'm trying to tell you J unit I will add the dependency of J unit itself uh let me go ahead and add okay it's getting added okay so okay fine now uh you can see uh inside my this root folder uh previously there are two two or two folders okay life cycle and plugin only but as soon as I create this J unit dependencies and and my reload and I reload my Maven project it will it has created one more folder named dependencies inside which uh junit dependency is there okay so you can see as I as I added J unit dependencies over here you can see j18 dependencies also added my memory deposit direct folder directory structure and if I uh now if I go ahead and insert my life cycle and click on install uh it should go ahead and get this dependency and install it and yes build success Target project is also created a Target folder is also created we'll see what is Target we are having separate video on this uh what are the classes and how the this actual works we'll see but for this video I hope you got some idea about this form red XML file how to add dependencies now one more thing if you want to delete the dependency if you are just going inside this dependencies tab and uh in future you want to delete this dependencies you no more required J unit inside your project you just go ahead and come here J unit you click on the junit uh you you come over three three dots and you have the remove you can remove and as soon as you click on this you just have to come here and load mapping changes it will reload your project and see all the any dependencies got added or removed if this dependency as soon as I load my project that dependencies folder is gone because no more dependencies are required for our project okay as soon as you add no dependencies no dependencies folder will get created over here so I hope you got some idea how to add or manage the dependencies inside the IntelliJ IDEA and what is form.xml file and we'll continue this project we'll create one Java project and uh I'll see you in one live demonstration of when by creating one project using Maven okay so thank you for watching this video and I will see you in the next one
