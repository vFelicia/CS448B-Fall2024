With timestamps:

00:00 - so today we are going to continue with
00:01 - the rails tutorial
00:03 - so to start with first we will start a
00:05 - rail server
00:07 - okay so let's start a rail server with
00:10 - the command rails server
00:12 - so the short form of this command is
00:13 - rails s also
00:15 - so now when i like but i can previous
00:18 - tutorial i have showed you some
00:20 - like these things how to create a server
00:23 - console and the generate command
00:25 - so we had generated a control controller
00:27 - for the same
00:28 - so let's move to our server so let's
00:31 - refresh this page
00:32 - so here you can see like this is the
00:35 - page we get
00:36 - okay so let's define one another route
00:39 - and let's say get
00:42 - slash index and it moves to
00:46 - a root slash index hash index
00:49 - so let's define a index method here
00:53 - so let's define
00:57 - index and this should be on the top
00:59 - basically
01:00 - like above all so let's
01:03 - yeah perfectly fine so let's
01:06 - uh render index
01:10 - okay now uh i hope you must have watched
01:13 - my previous tutorial to like
01:15 - get so basically we are creating an
01:17 - index route which
01:18 - hits to root slash index and
01:21 - root hash index and when we move to root
01:24 - hash index it calls the index method
01:26 - and it renders the index erb so let's
01:29 - create an index crb which
01:31 - is by default should be created in the
01:32 - root folder and it should be the name
01:38 - index.html.erb
01:40 - and it says h1 with index page
01:44 - okay so yeah so let's
01:49 - move to this route slash index
01:53 - so okay it is showing an
01:56 - error okay it's a quite a small error uh
01:59 - i'll help you resolve it so basically in
02:02 - our route dot
02:03 - rb we i forgot to put it like a
02:06 - colon here so yeah now it should work
02:09 - fine
02:10 - so now we have like achieved the index
02:13 - page okay
02:14 - let's move to the another page contact
02:19 - and let's move to the another page about
02:23 - okay so it works perfectly fine
02:26 - so what you need to do like here you
02:29 - have
02:30 - the leg written render index so
02:33 - instead of index if you want to like
02:36 - you the one thing you could also do is
02:38 - like we can comment these things
02:41 - and we can comment these things and
02:44 - this is not required like uh like
02:46 - console statements are not word uh
02:49 - you can see that whenever i hit that
02:50 - method the console is uh
02:52 - these statements are run in the console
02:55 - so
02:56 - uh when i remove this line okay let me
02:58 - remove this line
02:59 - render contact render about and render
03:02 - index
03:03 - so real by default has the ability
03:06 - to map that erb if the method name is
03:09 - same
03:10 - okay and here you can see contact
03:14 - and here you can see index
03:18 - okay so if inside the index you want to
03:21 - by default render index so you can leave
03:23 - blank
03:24 - and if you want to render about you
03:27 - could also do that
03:28 - okay so when i hit the index page
03:32 - i move to the about page okay index
03:34 - route moves to the about page
03:35 - so like this sounds little confusing but
03:38 - we should follow the convention
03:40 - because it increases the readability of
03:42 - the code and we know what is going
03:44 - out when so basically you should put
03:47 - these statements
03:48 - and it's like easier to debug than
03:51 - uh contact so uh
03:54 - so now we can like remove the statements
03:58 - so yeah so now what we can do
04:02 - a short activity like we are going to
04:05 - perform right now
04:07 - so we know that when we hit the root
04:10 - most route of this page like this
04:12 - is so we get the ruby on rails page so
04:15 - for that what we can type we can define
04:17 - the root
04:18 - and it should be root hash index
04:23 - so uh one thing i wanted to make clear
04:26 - don't
04:27 - confuse this root keyword with my root
04:30 - controller because
04:31 - i could have named any root controller
04:34 - but this is a like
04:35 - a reserved keyword in rails for the like
04:37 - giving the root route
04:38 - so let's refresh this page and now and
04:40 - you can see now this root is the
04:42 - this route is the index row so
04:46 - you could also do this to about
04:50 - so now about one becomes the root
04:52 - perfectly fine
04:54 - you could also do this to contact
04:57 - contact
04:58 - and contact one will become the like
05:01 - default one
05:02 - so this is how it's performed so this is
05:04 - how we have achieved this
05:06 - uh like the root route so this is like
05:08 - easy to do
05:09 - and uh yeah so let's keep it this to
05:12 - index
05:14 - if we are keeping this to index then
05:15 - this is not required okay
05:18 - so we can either comment this out or
05:20 - like i'll comment this out because this
05:21 - is not required
05:23 - and i'll move this to top now
05:26 - like yeah so this is perfectly fine so
05:29 - uh now one format uh one one short
05:33 - active we are going to supposed to do we
05:34 - are going to create a one
05:35 - like api method uh
05:39 - let's create api and
05:43 - let's end this let's create
05:47 - a variable response response
05:52 - and let's uh give them a key so
05:55 - basically in rails we give a
05:57 - key by giving a colon so status
06:00 - and is equal to 200
06:03 - and basically it is like a hash map
06:06 - and message is equal to
06:09 - hello world now uh
06:13 - basically there are a lot of render
06:14 - methods we can do render
06:16 - json and this is we
06:19 - sent the response so basically i'm
06:21 - showing you this because
06:22 - like this is like most a used one so it
06:25 - will help you and now i'll type
06:26 - get flash response
06:31 - and we hit like the root
06:35 - hash api so
06:38 - when i hit move to the response route i
06:41 - i call the api method
06:42 - of the root and then we can see the
06:44 - response so let's move to response
06:47 - so here you can see a status of 200 and
06:49 - a message of hello world is there
06:51 - so this is how we have cros uh created
06:53 - created a mock json response
06:56 - so that's good so there are multiple
06:59 - uh you could like figure out these uh i
07:01 - close this
07:02 - close this all as well and this and yeah
07:06 - so there are like multiple methods like
07:08 - one is json
07:10 - another is status okay i'm telling you
07:14 - you can like refer there are many then
07:17 - one is html
07:19 - uh one is body one is
07:23 - ht like like html there is a xml
07:27 - then there is a json there is js as well
07:30 - so uh there are many methods like plain
07:35 - uh text so there are many
07:38 - so you can like uh serialize your data
07:40 - like in many ways
07:42 - as like you want so this is this one
07:45 - will be like
07:46 - json so this one is perfect so now let's
07:50 - uh do
07:51 - uh one one thing i'll show you let's
07:54 - create
07:55 - a file header dot
07:59 - html dot erb
08:02 - and let's create another file
08:05 - new file footer dot
08:09 - html dot erb so
08:12 - one thing like you must have like a
08:15 - scene here like i'm putting a underscore
08:17 - tag in between
08:18 - like in front when naming this file so
08:21 - basically this
08:22 - underscore tag defines a partial so
08:25 - i i'll give this a notes like this is a
08:28 - underscore
08:29 - tag means a partial
08:33 - so partial is something where you can it
08:35 - renders the same thing again and again
08:37 - so i'll show you
08:40 - when i move to like this page
08:45 - header.html.erb so i'll create
08:48 - header okay and i'll close this
08:52 - and i'll put a hr tag so
08:55 - i'll put a hr tag in the top and the
08:57 - bottom as well
08:58 - in the same way i'll copy the same code
09:00 - in the footer
09:03 - and i'll this name is add to footer
09:06 - okay when i move to my index page so
09:09 - when i move to my index page so i'll
09:11 - define
09:12 - so this is like uh like
09:15 - rails has a template engine so this is
09:17 - the syntax
09:18 - render header
09:22 - and this is how we define like this is
09:24 - like these braces are very important
09:26 - because this
09:27 - signifies the template engine rails okay
09:30 - so
09:30 - let's let's
09:34 - close the server and i'll start the
09:36 - server again
09:40 - so let's the server should start
09:43 - so yeah the server has started so let's
09:46 - refresh the page
09:47 - at the index so here you can see i have
09:51 - a header
09:52 - okay and in the same way
09:56 - in the same way i can render a footer
10:02 - okay
10:06 - so like yeah so
10:10 - this is how we achieve and now we can
10:12 - use this partial everywhere
10:14 - like if in this page we want a footer
10:16 - only
10:17 - okay or we want a footer at the
10:21 - footer only so we can do only footer
10:24 - and let's refresh and move to contact
10:28 - so here i only have the footer so this
10:30 - is how you can maintain the partials
10:32 - and partials can be rendered only
10:34 - wherever they are required
10:36 - so thank you everyone for watching this
10:38 - tutorial so i'll catch you in the next
10:40 - tutorial with some more content on rails
10:42 - thank you everyone

Cleaned transcript:

so today we are going to continue with the rails tutorial so to start with first we will start a rail server okay so let's start a rail server with the command rails server so the short form of this command is rails s also so now when i like but i can previous tutorial i have showed you some like these things how to create a server console and the generate command so we had generated a control controller for the same so let's move to our server so let's refresh this page so here you can see like this is the page we get okay so let's define one another route and let's say get slash index and it moves to a root slash index hash index so let's define a index method here so let's define index and this should be on the top basically like above all so let's yeah perfectly fine so let's uh render index okay now uh i hope you must have watched my previous tutorial to like get so basically we are creating an index route which hits to root slash index and root hash index and when we move to root hash index it calls the index method and it renders the index erb so let's create an index crb which is by default should be created in the root folder and it should be the name index.html.erb and it says h1 with index page okay so yeah so let's move to this route slash index so okay it is showing an error okay it's a quite a small error uh i'll help you resolve it so basically in our route dot rb we i forgot to put it like a colon here so yeah now it should work fine so now we have like achieved the index page okay let's move to the another page contact and let's move to the another page about okay so it works perfectly fine so what you need to do like here you have the leg written render index so instead of index if you want to like you the one thing you could also do is like we can comment these things and we can comment these things and this is not required like uh like console statements are not word uh you can see that whenever i hit that method the console is uh these statements are run in the console so uh when i remove this line okay let me remove this line render contact render about and render index so real by default has the ability to map that erb if the method name is same okay and here you can see contact and here you can see index okay so if inside the index you want to by default render index so you can leave blank and if you want to render about you could also do that okay so when i hit the index page i move to the about page okay index route moves to the about page so like this sounds little confusing but we should follow the convention because it increases the readability of the code and we know what is going out when so basically you should put these statements and it's like easier to debug than uh contact so uh so now we can like remove the statements so yeah so now what we can do a short activity like we are going to perform right now so we know that when we hit the root most route of this page like this is so we get the ruby on rails page so for that what we can type we can define the root and it should be root hash index so uh one thing i wanted to make clear don't confuse this root keyword with my root controller because i could have named any root controller but this is a like a reserved keyword in rails for the like giving the root route so let's refresh this page and now and you can see now this root is the this route is the index row so you could also do this to about so now about one becomes the root perfectly fine you could also do this to contact contact and contact one will become the like default one so this is how it's performed so this is how we have achieved this uh like the root route so this is like easy to do and uh yeah so let's keep it this to index if we are keeping this to index then this is not required okay so we can either comment this out or like i'll comment this out because this is not required and i'll move this to top now like yeah so this is perfectly fine so uh now one format uh one one short active we are going to supposed to do we are going to create a one like api method uh let's create api and let's end this let's create a variable response response and let's uh give them a key so basically in rails we give a key by giving a colon so status and is equal to 200 and basically it is like a hash map and message is equal to hello world now uh basically there are a lot of render methods we can do render json and this is we sent the response so basically i'm showing you this because like this is like most a used one so it will help you and now i'll type get flash response and we hit like the root hash api so when i hit move to the response route i i call the api method of the root and then we can see the response so let's move to response so here you can see a status of 200 and a message of hello world is there so this is how we have cros uh created created a mock json response so that's good so there are multiple uh you could like figure out these uh i close this close this all as well and this and yeah so there are like multiple methods like one is json another is status okay i'm telling you you can like refer there are many then one is html uh one is body one is ht like like html there is a xml then there is a json there is js as well so uh there are many methods like plain uh text so there are many so you can like uh serialize your data like in many ways as like you want so this is this one will be like json so this one is perfect so now let's uh do uh one one thing i'll show you let's create a file header dot html dot erb and let's create another file new file footer dot html dot erb so one thing like you must have like a scene here like i'm putting a underscore tag in between like in front when naming this file so basically this underscore tag defines a partial so i i'll give this a notes like this is a underscore tag means a partial so partial is something where you can it renders the same thing again and again so i'll show you when i move to like this page header.html.erb so i'll create header okay and i'll close this and i'll put a hr tag so i'll put a hr tag in the top and the bottom as well in the same way i'll copy the same code in the footer and i'll this name is add to footer okay when i move to my index page so when i move to my index page so i'll define so this is like uh like rails has a template engine so this is the syntax render header and this is how we define like this is like these braces are very important because this signifies the template engine rails okay so let's let's close the server and i'll start the server again so let's the server should start so yeah the server has started so let's refresh the page at the index so here you can see i have a header okay and in the same way in the same way i can render a footer okay so like yeah so this is how we achieve and now we can use this partial everywhere like if in this page we want a footer only okay or we want a footer at the footer only so we can do only footer and let's refresh and move to contact so here i only have the footer so this is how you can maintain the partials and partials can be rendered only wherever they are required so thank you everyone for watching this tutorial so i'll catch you in the next tutorial with some more content on rails thank you everyone
