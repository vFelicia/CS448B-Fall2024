With timestamps:

00:00 - hey what's going on guys welcome back to
00:01 - programming knowledge and this is
00:04 - another video tutorial series and in
00:06 - this particular series were gonna be
00:07 - building an application a very simple
00:10 - application this application will enable
00:13 - us to create read update and delete a
00:16 - particular record in our database so if
00:20 - you're interested and want to learn more
00:21 - about this project stay tuned and surely
00:25 - I will give you all the steps needed to
00:27 - create this particular application so if
00:30 - you're new here in our channel please
00:32 - consider subscribing and turn on the
00:34 - notification bells so you get updated
00:36 - whenever we have a new upload so let's
00:38 - go directly to the main content of this
00:41 - video and here we have the expected
00:45 - output of our application so here we
00:48 - have the table displaying all the
00:50 - records of users so for now we have only
00:54 - three records available in our database
00:57 - and we have few options here so for
00:59 - example we have the recycle icon to
01:03 - enable us to delete this if you want to
01:06 - delete this particular record you can
01:08 - delete this if you click on this recycle
01:10 - icon so click and then you will be
01:13 - presented with this confirmation are you
01:16 - sure you want to delete this user so if
01:18 - you really want to delete this user so
01:21 - you just have to click on OK and there
01:24 - you have it
01:25 - user deleted with success ok and then we
01:30 - also have the full name is enabled with
01:32 - a link so if we try to click on the link
01:35 - we will be they're redirected to another
01:38 - page which is the Edit user so we have
01:42 - here the IDs we cannot edit the ID but
01:47 - we can edit the full name and email
01:51 - address of this particular user and of
01:53 - course here at the left side we have the
01:57 - option to add new user so if we try to
02:00 - add a new user here so say for example
02:03 - the name is John Doe and John Doe
02:07 - gmail.com and click on save so their
02:12 - user
02:14 - with success and we have a new user
02:17 - which is John Doe and we have the email
02:20 - John Doe at gmail.com so this is the
02:24 - expected output of our project I know
02:26 - this is just a very simple application
02:28 - but it will help you get started with
02:30 - PHP jQuery and other underlying
02:34 - technologies that we're gonna use here
02:36 - so this is how the files are organized
02:38 - with this project so we have here the
02:42 - directory for classes directory for CSS
02:45 - database directory for includes and GS
02:50 - and of course this two important files
02:54 - which is deformed at PHP and index dot
02:57 - PHP so under classes we have two files
03:01 - which is data based at PHP and user that
03:04 - PHP so I'm gonna be providing you the
03:07 - starter files for this project so you
03:09 - could follow me along with this tutorial
03:12 - so you can find the link in the
03:15 - description below you can download the
03:17 - files or the starter files but for this
03:19 - project and you can follow along with
03:21 - this tutorial so before going any
03:24 - further with our project I'm going to
03:26 - show you first the structure of our
03:28 - database so what I have here is
03:31 - programming knowledge as the database
03:34 - name and the table name is crude
03:37 - underscore users so that's C R UD
03:42 - underscore users and the user or the
03:47 - crude animal users table has three
03:49 - attributes namely ID name and email so
03:55 - the ID is the primary key with the type
03:57 - in and the land is 11 and of course the
04:02 - auto increment is enabled for this
04:05 - particular attribute and of course the
04:07 - second one is the name the type is
04:10 - varchar' of our car which is the land
04:13 - s100 and of course the same with email
04:16 - the land is 100 and type is were
04:20 - chartered worker for this particular
04:22 - attribute email so that's the structure
04:26 - of our crude
04:27 - underscore users table and all our
04:29 - records will go here and for now let's
04:32 - go back to our editor and start working
04:35 - with our project so the first thing that
04:37 - we're gonna need is to set up our
04:39 - database dot PHP so we're going to
04:41 - create a database class so as you can
04:44 - see I have here the database that PHP
04:46 - file and we have a class NIDA base with
04:49 - five attributes for the host name the
04:53 - database name the user name password and
04:56 - this connection variable or connection
05:00 - attribute so we have you the method for
05:02 - the DB connection so we have try and
05:07 - catch clause and of course this is the
05:11 - standard way of connecting to our
05:14 - database we're just going to supply all
05:16 - necessary information such as the host
05:19 - name the database name the user name and
05:22 - the password and of course other
05:23 - properties or attributes needed for this
05:25 - connection which is for now we have the
05:28 - PDO attribute error mode is error mode
05:31 - underscore exception and of course video
05:35 - the second attribute is the MySQL
05:37 - attribute initialize command which has
05:40 - set names utf-8 as the character
05:43 - encoding for our connection so that's
05:47 - the basic connection and we're just
05:50 - gonna use this class to connect to our
05:52 - database and of course we're gonna
05:54 - include this or require this database
05:55 - class to our user that PHP class so in
06:00 - this file we're gonna require the
06:01 - database class so the first thing is
06:04 - required once and then database that PHP
06:10 - so we can now use the class database in
06:14 - our user dot PHP file so as you can see
06:17 - we have here the class user and inside
06:20 - this class we're going to add several
06:23 - functions such as the constructor the
06:26 - function to execute queries function to
06:29 - insert function to update function to
06:32 - delete and of course another function to
06:34 - redirect by using a URL so the first
06:39 - thing the
06:40 - we're going to add here is the attribute
06:45 - which is private con and of course the
06:50 - constructor for this particular user
06:52 - class so public function underscore
06:59 - underscore construct okay and then curly
07:04 - braces open and close curly braces
07:07 - inside here we're going to define or
07:12 - create an object for our database class
07:15 - so database equals new database and of
07:20 - course this database we're going to
07:23 - assign this to a new variable which is
07:26 - DB equals database and of course the
07:32 - method to connect to our database
07:35 - matches we have DB connection and then
07:40 - open and close and then let's just
07:42 - assign our attribute connection so this
07:47 - one equals DB okay so another function
07:54 - which is the function to run our s SQL
07:58 - queries so public function and then the
08:04 - name is run query and this accepts SQL
08:11 - statement and of course we're just going
08:14 - to define the statement statement and
08:17 - then the attribute which is the
08:19 - connection and call the method prepare
08:24 - to prepare the statement that we're
08:27 - going to execute and then of course
08:29 - return the statement variable okay so
08:34 - let's just leave this function for now
08:36 - and then we're just going to use this
08:38 - function later on in our project so
08:41 - another function that we're going to
08:42 - create is the insert function so this
08:45 - will be another public function
08:51 - then insert and of course this function
08:56 - accepts the name and of course the email
08:59 - of our user
09:01 - so first let's I the try and catch class
09:07 - for this function so exception e ok so
09:18 - now we have the try and catch and this
09:21 - should be video exception and whenever
09:24 - we have an exception with our code we
09:28 - should display this exception by using
09:31 - the e and then getting the message by
09:34 - using the get message function so right
09:39 - here we're going to define the statement
09:40 - and then we're going to use the
09:43 - connection and call the prepare method
09:48 - or function and supply the SQL statement
09:53 - which is insert into table name which is
09:58 - crude users and then we're going to
10:01 - supply the attribute or attributes which
10:05 - are name and email and the values should
10:10 - be named and of course email okay and
10:20 - then of course we need to bind the
10:22 - parameters that we're going to use so
10:25 - statement and then the function bind
10:29 - parameter and of course the name and
10:34 - then of course the variable name the
10:38 - same read the email and this should be
10:43 - email and of course this one should be
10:46 - emailed and then stmd
10:52 - we're going to execute the statement
11:00 - and return as DMT okay so there you have
11:07 - it we now have the public function
11:08 - insert that will enable us to insert the
11:11 - user by using name and email attributes
11:15 - so last time we have created the
11:20 - database that PHP and the database class
11:23 - so we already have this deep connection
11:25 - function and all the other details on
11:29 - how to connect to our database and also
11:32 - in the last video we also have created
11:34 - the insert function and the construct
11:36 - function of the user class so in this
11:39 - particular video guys we will update
11:42 - this update function so we're gonna be
11:45 - dealing with this particular functional
11:47 - also this two functions below which is
11:50 - the delete and redirect URL method so
11:54 - first let's just start on the function
11:58 - for update so let's just add the public
12:02 - function and then update in this
12:06 - particular method or function guys takes
12:09 - three parameters which is the name okay
12:15 - and the email and of course it's ID so
12:20 - of course this is going to be pretty
12:22 - standard format we're going to use here
12:26 - we will add the try and catch block so
12:29 - this is gonna be a video exception and
12:34 - inside the try catch or the try block we
12:38 - will be adding the statement and of
12:42 - course we're going to use our connection
12:52 - right and then repair and we'll just
13:00 - have to type in the SQL command which
13:05 - has update so we're going to update the
13:09 - users
13:10 - okay so set name equal to name
13:22 - and then of course the email will be
13:26 - equals to email and we're ID equals the
13:35 - supplied ID so here we're gonna be using
13:40 - the statement and then we need to bind
13:45 - the parameter which is for our number
13:50 - one is the name course so we'll just
13:56 - have to copy this line for the other
13:59 - parameters so the second will be for
14:02 - email okay and then this one also for
14:09 - email and then this is for our ID okay
14:17 - you just have to make sure guys that the
14:19 - name here all this is the same with the
14:23 - what we have here in the SQL command so
14:27 - so if you are or if you're having the
14:30 - name here so make sure it is the same
14:33 - with this parameters in the bind bottom
14:36 - part so just to make sure that it is
14:40 - clear for you that you need to have the
14:43 - same keyword from here and here so after
14:48 - this we need to execute our code so
14:58 - we're gonna calling the function execute
15:01 - and of course return the
15:09 - statement that we have here on the
15:12 - update function so that's pretty much it
15:15 - for the update function so we have the
15:20 - try and catch and also the statement and
15:26 - binding the parameters and executing in
15:29 - the last is to return the statement and
15:32 - of course if something bad happens here
15:34 - we need to display something which is we
15:39 - just have to use the eve area ball and
15:42 - the get message for us to have a very
15:46 - meaningful message if something went
15:51 - wrong here at the top so there you go we
15:54 - have the complete function for our
15:57 - update so whenever we have to call the
16:00 - update or update the value for our users
16:04 - for example the name the email so we
16:07 - just have to use this function so
16:09 - another method that we're going to
16:12 - define here is the delete function so
16:16 - public function delete and of course
16:21 - this particular function takes in a ID
16:25 - so there you go and of course as I've
16:30 - mentioned before we need to have this
16:32 - try and catch statement so that we will
16:37 - know or the application will not exit
16:41 - abnormally so there you go and then e
16:45 - horrible so after that one I just have
16:49 - to copy this line and paste it here
16:53 - okay so I noticed that the color of my
16:56 - code changes because I think I mess up
16:59 - with the double code here so I just have
17:02 - to add here and there you go so inside
17:07 - here we're going to define another
17:09 - variable which is the statement and
17:14 - using our connection we're going to
17:19 - have the prepare function and of course
17:23 - our SQL which is delete from crude users
17:33 - which is our table name and the ID so
17:40 - we're IV equals our parameter ID so
17:48 - statement and then we need to bind the
17:55 - parameter and ID so I think I also type
18:05 - it here it should be small P okay and of
18:14 - course I just have to return the
18:18 - statement here so there so that's our
18:23 - function delete and last function that
18:27 - we're going to define here is the
18:31 - redirect method or function so public
18:34 - function click for public function
18:40 - redirect okay and this particular
18:45 - function takes in a URL and their
18:51 - location which is the URL there we go so
18:57 - that's the user class so as a sort of
19:02 - review we define the constructor the run
19:07 - query function we also have the insert
19:09 - the update and delete and also this last
19:14 - function which is redirect so the next
19:17 - file that we're going to modify next is
19:19 - the form that PHP so form that PHP file
19:23 - is where the adding of users and
19:25 - anything of users happen so we're going
19:28 - to add the form inside the main element
19:30 - here
19:31 - before that we need to add the heading
19:34 - one element that says or edit users and
19:40 - this particular element has the style
19:43 - we're going to add the margin to top and
19:48 - set it to 10px and of course after that
19:52 - one we need to add the paragraph that
19:54 - says required fields are in asterisk
19:59 - it's just assess that all the fields
20:02 - with asterisks are required so basically
20:06 - we're just telling the users that you
20:09 - need to supply or they need to fill up
20:12 - the required fields ok so after this we
20:17 - need to define the form for no let's
20:21 - just remove the class and also the
20:25 - action ok and after this one we need to
20:29 - add a division or a div element with
20:33 - class form group ok and of course we
20:40 - need to have the label for our ID and of
20:48 - course it says or the ID or the label
20:50 - for this as ID input type text and the
20:58 - name is ivy we're going to add the idea
21:01 - for this particular element which is of
21:04 - course value ID and I think the value
21:08 - for this now we'll just leave it as
21:11 - empty and we'll just set this input into
21:16 - read-only because we're not going to
21:18 - edit the ID so the only values that are
21:23 - editable as the name and email so I
21:28 - think we just have to copy this one for
21:34 - our name and one for our email ok but I
21:41 - forgot to add a class for this
21:45 - so this is going to be form control so
21:50 - I'll just have to copy this class and
21:54 - paste it for the other inputs and of
21:59 - course this particular particular label
22:01 - is for name so name and of course the
22:11 - name for this particular element is name
22:15 - and the ID is tidy so it should not be
22:21 - read-only and as for the value we're
22:25 - going to go back to this later on for
22:28 - setting the value for this particular
22:31 - input so the same thing with our email
22:34 - so it's going this is good this is going
22:37 - to be for our email so the label for our
22:42 - email and of course the name is email
22:46 - and IDs of course the email so the same
22:54 - thing with the name it's not going to be
22:57 - a read-only and the value is empty for
23:05 - now so another step is to add the
23:07 - placeholder for this email so
23:09 - placeholder is say for example John Doe
23:15 - at gmail.com and the this particular
23:23 - field is required and of course the max
23:27 - length for this is 100 so there you go
23:32 - another for this name input we need to
23:36 - have this required attribute and max
23:40 - length of 100 and of course we need to
23:44 - also have this place holder for this
23:48 - particular input element so this is
23:52 - going to be the first name
23:55 - first name and last name okay and we
24:02 - need to add this to have the asterisks
24:07 - for this fields to signify that it's
24:11 - that these particular fields are
24:13 - required so after this we need to add
24:17 - the button for our forms or input type
24:21 - button and the name of this is BTN see
24:28 - the value is of course save so this
24:36 - particular input button we need to have
24:39 - the class so it should be with class BTN
24:46 - and BTN primary and another class mark
24:53 - margin bottom and value is two so for
24:59 - now let's just go to our browser and try
25:01 - to preview our form that PHP file so
25:06 - this is our website let's just refresh
25:09 - this and try to click on this add new so
25:14 - this is our website if you try to click
25:16 - on this add new option so we now have
25:20 - the form we have the heading 1 add or
25:24 - edit users required fields or industries
25:27 - so we have you the ID which is read-only
25:31 - the name with asterisk and also the
25:35 - placeholder first name and last name and
25:38 - email and we have the email input and of
25:43 - course the submit button so in this
25:45 - particular tutorial guys in this
25:47 - particular video we're going to continue
25:48 - working on with the form dot PHP file
25:51 - and include or integrate the user class
25:56 - that we have created from the previous
25:58 - videos so let's go back to our code
26:00 - editor and start working with our form
26:03 - that page be fine so in this video we're
26:06 - going to add the logic for handling
26:08 - if the user wants to add records or want
26:11 - to add users to our database and also
26:13 - we're going to add the logic handling
26:16 - the Edit editing of certain records from
26:18 - our database so I think we're going to
26:21 - start with the post variable so in this
26:24 - particular logic we're going to handle
26:27 - the save or saving of users to our
26:31 - database so we have here the button name
26:34 - as BTN Save
26:36 - so we're just going to check if that
26:39 - particular name of the variable is set
26:41 - in our post variables so if we set the
26:48 - post and of course the name of our
26:53 - button ok and open and close parentheses
27:01 - so it just means that if the user
27:04 - submitted the form with our button bTW
27:06 - and save then process this logic inside
27:09 - for adding the user to our database but
27:13 - first let's just change this type or
27:17 - bottom type in to submit instead of
27:19 - button ok to ensure that the form will
27:22 - be submitted if the user clicks on this
27:25 - particular button so let's go back to
27:27 - this logic and try to setup the handling
27:32 - of inserting records to our database so
27:37 - first let's just get the value of our
27:40 - name so we're going to use the strip
27:43 - tags for that and of course the name of
27:47 - our input variable or I mean input
27:52 - element so this is for the name and of
27:56 - course we need one for our email so
27:59 - let's just copy and paste the same line
28:03 - and just change this into email ok and
28:08 - try to align this and of course as
28:12 - always we need to try or we need to add
28:15 - try and catch
28:18 - logic also or lines just to make sure
28:22 - that our software our project will exit
28:30 - normally okay and if ID is not equal to
28:39 - null then we need to make sure that
28:48 - we're going to update the users but
28:52 - first I think we need to set up or we
28:55 - need a new object of our user class that
29:00 - we have defined in our previous
29:01 - tutorials so before we're going to use
29:04 - the user class we're going to require it
29:07 - first so require ones and then of course
29:10 - the classes and user data HB so that
29:15 - file contains our user class and let's
29:20 - create the object of our user so object
29:24 - user equals new user ok and then we can
29:29 - just use this particular object here in
29:31 - our logic down below so next again if
29:38 - the ID is not equal to null then we need
29:40 - to make sure to update the user ok
29:46 - object user and then update and this of
29:52 - course this particular method or
29:54 - function we have already defined it in
29:57 - our user dot PHP so update and it takes
30:01 - three parameters the name email and ID
30:04 - which we're going to supply it here
30:07 - named email and of course the ID for
30:11 - that particular user and after that
30:15 - we're going to read the req object user
30:21 - redirect to
30:25 - index dot PHP index dot PHP and let's
30:31 - just set the query variable update were
30:34 - updated so as you can see also the
30:38 - rhetoric function we already define it
30:42 - here in our user that page with class so
30:45 - function redirect and if the ID is not
30:51 - equal to null or if the idea is null
30:55 - then we need to insert a new user
30:59 - so object if object object Jack user
31:15 - insert and of course the insert function
31:18 - takes in two parameters which is the
31:21 - email and the name and after that we're
31:25 - just going to redirect the page into the
31:30 - index dot PHP and update this query
31:32 - variable into inserted okay and
31:36 - otherwise we need to read the req to
31:42 - index dot PHP and say that there was an
31:48 - error during the processing of inserting
31:51 - the user to the database and of course
31:56 - we need also to display it's if
32:00 - something happens so our logic of up so
32:03 - get message okay and that's it for our
32:11 - adding the user to our database so again
32:14 - we also need to work on with the editing
32:18 - of user okay so here you need to check
32:26 - if the user for ID
32:33 - edit ID of the user if the Edit ID query
32:42 - variable is set we need to do something
32:46 - and set the values here in our form so
32:48 - as you can see now that the values here
32:51 - in our form for example the name so it's
32:55 - kind of empty for now so let's make sure
32:59 - to add values to this if the Edit ID is
33:04 - set so first thing that we're going to
33:07 - need is to get the ID so okay and the
33:13 - Edit ID and we're going to define a
33:18 - statement here statement and of course
33:21 - using or object user we're going to run
33:24 - a query again this particular function
33:28 - we have already defined it in our user
33:30 - that page with user that PHP file under
33:33 - the user class so this particular
33:36 - function takes in a warrant as SQL
33:41 - statement so select all from the table
33:48 - name which is the crude users we're IP
33:53 - equals the ID that we're going to supply
33:58 - then after this line we need to execute
34:02 - the statement by using the execute
34:05 - function and array array for our ID
34:23 - okay and we need to get the user wrong
34:29 - user equals s TM T and then fetch and
34:37 - video fetch associative very Hey
34:45 - there you go and then we need to end a
34:48 - statement here else we're just going to
34:54 - set the ID in to known and of course the
34:59 - role user null as well and when now we
35:04 - can set the values from or we can set
35:07 - the values to our form
35:09 - if the Edit ID is present or is set so
35:15 - here at the forum we need to make sure
35:19 - that the form is populated with the
35:26 - correct values so input type text with
35:32 - our name I did this is for the input
35:35 - variable or input element ID so in here
35:41 - we need to display of course the idea of
35:46 - our user so print and then draw a user
35:50 - and then we're just going to get the ID
35:53 - and the same thing with the others so
35:59 - let's check for now values and instead
36:07 - of ID we're going to use name for this
36:11 - and also this we're going to use the
36:14 - email email value okay so we have not
36:23 - yet tested our script but let's just
36:25 - continue working on with this index not
36:28 - PHP and try to display all the users
36:32 - that we have at
36:33 - to EDD so later on we're going to have
36:36 - to test the project if all the things
36:40 - that we have worked works and try to see
36:45 - if there's any problems with our logic
36:48 - or anything so for now let's just
36:52 - continue working on with this index at
36:55 - the HP and try to display all the users
36:59 - from our database so the first step that
37:03 - we're gonna make is to require first the
37:07 - user class so again because we're going
37:11 - to use this class to manipulate all the
37:15 - necessary things that we need for class
37:19 - for the users okay so new sir classes
37:22 - inserted at page P and we're going to
37:26 - add a new object out of this particular
37:29 - class user so object user was your user
37:34 - and here we need to run a query for us
37:42 - to get all the users that are saved in
37:47 - our database so here I think inside here
37:52 - and then we need to have we need to add
37:56 - a table for this right so before that
38:00 - we're going to add a division or their
38:03 - element and you need to have this class
38:10 - table responsive responsive and inside
38:18 - this div is the table actual table and
38:21 - this table has to have this plus table
38:25 - and table stripe okay and table SM and
38:33 - we need to define the table head for
38:36 - this which contains a table rock for our
38:43 - headers okay
38:45 - so th this is for righty and the course
38:54 - before ring and the email email there
39:05 - you go and we're just going to add
39:07 - another MPP boom head for this so this
39:14 - is actually for the actions say for
39:16 - example if we want to add it or
39:18 - something so we can add for this
39:21 - particular column a value or a bottle
39:24 - something like that if we need to so
39:26 - after the table head we need to run the
39:29 - query first to get the users from our
39:32 - database so the finder query and inside
39:39 - this is select all from good users and
39:45 - the final statement we're going to use
39:48 - the object to run the query there you go
39:55 - and we're going to use the query that we
39:58 - have already defined and then here we
40:01 - need to execute the statement okay so
40:08 - after this we need to define the table
40:11 - body of our table of course and we need
40:17 - to check first if we have something or
40:22 - we've got something from our statement
40:24 - so if statement raw count is greater
40:31 - than greater than zero which means we
40:36 - have users who are rehab already users
40:39 - that have been added to our database so
40:46 - if the user or we have users then we
40:51 - need to execute the fetching of the
40:58 - users are the actual users so raw user
41:01 - and equals the statement fetch and video
41:11 - fetch associative array and of course
41:17 - opening curly brace and this also and
41:29 - first we're going to arrange this first
41:32 - and we're going to close first this
41:36 - statement okay below I think it should
41:43 - be here mmm here right about here so HP
42:02 - and close the while statement and of
42:07 - course we're going to close the if
42:09 - statement okay so after that we're going
42:14 - to if the user has or if the statement
42:18 - has Rose then which means we need to
42:22 - populate our table so first we need to
42:28 - define the table row first okay and also
42:31 - the table data so the first thing that
42:37 - we're going to add here is the ID of the
42:41 - user so this will be for ID so pin row
42:49 - user and then of course we're going to
42:52 - get the ID
42:58 - okay and the second one will be our name
43:08 - okay
43:09 - so raw user and the name but for this
43:15 - particular table data we need to do
43:19 - something also for editing or user so
43:24 - instead of playing displaying the name
43:27 - we need to add a link that links to our
43:32 - form that PHP file and we're going to
43:35 - supply the ID for this link because as
43:39 - you can remember the foreign dot PHP
43:42 - file can accept edit underscore ID which
43:47 - signify the idea that we're going or
43:50 - we're trying to edit so form that PHP
43:56 - and then we find the eddie underscore ID
44:00 - equals PHP and we're going to paint the
44:09 - ID of our user there you go and of
44:18 - course we need to close our link so
44:26 - right about here you have to close the
44:29 - deal which contains the name of our
44:34 - users so whenever we click on this
44:36 - particular user name it will be
44:38 - redirected to form that PHP that
44:40 - contains our setting the edit underscore
44:43 - ID and if the edit underscore ID is set
44:48 - then that's the time that the form will
44:51 - be populated with values are the ID the
44:56 - name and the email so let's go back here
45:00 - and of course now that we have the name
45:04 - we also need one for our email
45:08 - so this one is for our email and we need
45:13 - to add another one for delete so of
45:18 - course we want our project to have this
45:22 - delete capability or functionality so
45:26 - whenever we click on this lilit function
45:28 - then we're going to there's a dialog box
45:32 - or a dialog that says or a confirmation
45:36 - that says do you really want do you
45:39 - really want to delete this particular
45:41 - user so if you want to confirm then the
45:43 - user will be deleted okay so I think
45:48 - we're we're just going to copy and paste
45:50 - this link here and instead replace this
45:59 - into this link and instead of form that
46:04 - PHP we need to set this into index dot
46:07 - PHP and of course the theory variable
46:11 - into delete underscore ID so we're gonna
46:15 - leave this row ID here and instead of
46:20 - using the name we're going to get or use
46:27 - the feature of bootstrap to display a
46:34 - trash icon there you go so if we try to
46:39 - refresh our page right now so let's go
46:42 - back to our browser and try to see our
46:45 - index dot PHP so go back to index dot
46:52 - PHP and here we have index dot PHP and
46:56 - as you can see we now have records to
46:59 - our table but it is not formatting
47:03 - correctly okay so let's go back to our
47:05 - code and try to edit and try to figure
47:08 - out what's wrong with our logic because
47:11 - we know that we have already the record
47:15 - but it is not aligned correctly with our
47:19 - columns form full name
47:20 - in the actions here for our date so
47:24 - let's go back to our code editor okay so
47:28 - we need to change something here so
47:31 - instead of separating this table records
47:37 - for table data so we need to make sure
47:41 - that all the table records or table data
47:45 - belongs to this particular table record
47:47 - so there you go so table records and all
47:55 - the table data inside so save and
48:00 - refresh this page so there you go we
48:05 - have the data that comes from our
48:08 - database so now let's try to add a new
48:12 - record to this form or this table so go
48:15 - to the form that page B by clicking on
48:18 - this add new icon or option here and so
48:24 - the first thing that we're going to
48:26 - input is the name so for example we need
48:30 - we will just name our new user as Jake
48:38 - Jake number and the email is Jake nomer
48:43 - at gmail.com and save so as you can see
48:50 - the Jake number has been added so this
48:53 - particular table but we don't have the
48:56 - prompt that the user has been added so
48:58 - we're going to work on that so the first
49:00 - thing that we're going to add is the
49:02 - user is prompt
49:04 - so say for example we're trying to add
49:06 - users so there should be a display here
49:08 - that says that the user has been added
49:11 - successfully or whenever we have already
49:14 - deleted the subject or to the users then
49:16 - there should be a display also for the
49:21 - the user has been deleted successfully
49:23 - or if there's an error and also if the
49:28 - user has been edited
49:30 - excess fully so we're going to all we're
49:32 - going to add all that in this particular
49:35 - video so let's start let's go back to
49:38 - our code editor and try working on with
49:40 - our index that page ok so right about
49:45 - here
49:45 - we need to add all the prompts or all
49:48 - the display if there's an action that
49:52 - has been done in our project so if we
49:55 - added users if we add the users or if we
49:59 - have deleted the users or if there's an
50:02 - error of any actions that we have
50:05 - defined or we have done in our project
50:08 - so the first thing is we need to open up
50:12 - our page tag here and check if the
50:18 - period variable for updated is set so
50:23 - the first event or action that we're
50:27 - going to check if there's an app date so
50:33 - this is this query variable is coming
50:37 - from the form dot PHP so if you try to
50:40 - go here in form dot PHP and we have here
50:44 - after editing or updating the file or
50:47 - the user we're going to redirect the
50:51 - user into index dot PHP and we're
50:53 - setting up the update that query
50:55 - variable so here we're just trying to
50:57 - check if that particular variable is
51:00 - present then we need to display
51:02 - something so echo and then define the
51:07 - dip here let's just close this div first
51:13 - and add classes to this so class we're
51:19 - going to use the alert coming from the
51:24 - bootstrap so alert and this alert is of
51:27 - type info and alert it should be
51:32 - dismissible this mis'able fade and show
51:40 - and the role of this particular element
51:43 - s alert okay
51:48 - and inside this we need to define a
51:52 - strong message so strong user and update
52:05 - that with success and we need to add a
52:11 - button to our alert so far on this is
52:19 - actually for closing the alert
52:22 - so button and then we're just going to
52:26 - close this right now and the type of
52:30 - this should be course button and this
52:36 - should have the class of cloves and data
52:43 - dismiss again guys this is the power
52:49 - absolute stop technology so if you want
52:52 - to know more about bootstrap technology
52:54 - so we have plenty of tutorials in our
52:57 - channel you can check that out and try
53:01 - to learn this awesome project bootstrap
53:04 - so a label should be force close and
53:15 - straight contain also span and close
53:21 - this as well and try to add another
53:33 - attribute
53:39 - they should be inside these fine
53:41 - gentlemen there you go
53:43 - and here is the icon for our nose button
53:50 - so times there you go
53:54 - and we'll just try this for now so save
53:59 - index dot PHP and let's try to go to our
54:02 - browser refresh the page and let's go to
54:06 - form that PHP by clicking on this record
54:13 - so we have here a error for us so form
54:21 - that page be on line 15 song called call
54:24 - to undefined function fetch on line 15
54:28 - so we're going to try and check if
54:30 - what's the problem with this particular
54:33 - function so for line 15 so there you go
54:41 - row user and we miss the symbol greater
54:47 - than sign and we just need to refresh
54:50 - this okay and say let's go back to our
54:55 - back and refresh so there you go we have
55:01 - the user with IDs ID equals to 7 so the
55:06 - values for name is Jake Nomar and the
55:09 - email is Jake number at gmail.com so for
55:12 - example we don't like the the last name
55:14 - for this so Jake we're just going to use
55:17 - Jake Cuenca for now and save so there
55:24 - you go we have the alert that says the
55:27 - user updated with success so we know
55:31 - that our alert function or alert logic
55:35 - is working so we're trying to do the
55:38 - same thing with update I mean a delete
55:42 - in error and also the whenever we have
55:46 - added a new user
55:49 - okay so go back to you next up HP and
55:53 - for us to have or for us to save time
55:57 - I'll just copy and paste this line or
56:00 - these lines and try to paste it here
56:04 - else if it said deleted so we're just
56:11 - going to change the values also here
56:13 - user diluted with success there you go
56:17 - and of course we need to add another one
56:22 - for inserted else if inserted is defined
56:30 - then this will be inserted with success
56:35 - and another one for error as a URL query
56:44 - error is defined then it means
56:56 - eebee or database error something like
56:59 - that and try to change this message also
57:03 - so say for example something something
57:09 - went wrong with your action try again so
57:26 - for now let's try this insert that if it
57:30 - will work for us and maybe delete that
57:33 - later on so go back to our and try to
57:37 - refresh the page so insert it let's try
57:43 - to add a new user so this will be Jean
57:47 - for James James Jones and the email is
57:54 - James Jones at gmail.com there you go
57:59 - and try to save so there you go
58:02 - user inserted with success so we know
58:05 - that the alert for our data insertion is
58:11 - working so another one is for the delete
58:14 - ok so I think we we already have defined
58:19 - the link and as you can see this is
58:22 - working link but we need to add certain
58:26 - logic for this for the deletion of user
58:28 - should work so let's go back to our
58:32 - quota to code editor for now okay so in
58:36 - our index dot PHP we need also to try to
58:41 - delete if the user click on the delete
58:46 - button so if is set the get variable
58:55 - if get delete ie is set then that means
59:01 - that the user try is trying to delete a
59:06 - certain record from our database so get
59:10 - and of course you need to supply the
59:14 - delete ID ID there you go
59:18 - so time catch again the PDO exception
59:28 - okay so and try to display video
59:35 - exception the message from the exception
59:38 - of course and inside here we're going to
59:41 - check if the user ID is not equal to
59:45 - null because there's no point if the
59:48 - user ID is now there's going are there's
59:52 - no point of deleting it from our user
59:58 - and it will cause errors if the ID is
60:01 - not a force or forces we're going to
60:04 - check if it is none so if object user
60:08 - delete and of course we need to supply
60:12 - the ID for that and open and close
60:17 - parentheses an object user we need to
60:21 - use the redirect function and redirect
60:25 - to index that PHP but of course we
60:29 - delete that query variable so delete
60:32 - that and before anything else also we
60:37 - need to add a confirmation if we user
60:41 - trying
60:41 - tries to delete certain record so for
60:47 - now we're going to add a confirmation
60:49 - class for this particular bar and delete
60:51 - so that we can prompt the user if he
60:59 - accidentally click on that particular a
61:01 - delete button so class
61:03 - and Confirmation there you go and then
61:08 - we're going to define here the query or
61:12 - J quick information so if the class
61:16 - confirmation and then if the user are I
61:19 - mean the jQuery detects the click on
61:21 - confirmation class then we can return
61:23 - are you sure you want to delete this
61:25 - user and the user has the option to go
61:30 - or continue with this action so save
61:33 - index that page me and try to refresh
61:36 - our page so after refreshing the page I
61:40 - got this error and expect a dollar sign
61:45 - on line 20 so we just need to add a
61:52 - variable name here so should be okay so
61:57 - save that index at PHP and go back to
61:59 - our browser so let's try to delete a
62:02 - record here so I think the second record
62:06 - is good so click on this and a
62:09 - confirmation will be displayed are you
62:11 - sure you want to delete this user and
62:14 - then click on ok so as you can see user
62:18 - deleted with success but I think what I
62:20 - think the user is still there so we're
62:24 - going to check what's wrong with our
62:26 - logic so here we're just going to try
62:30 - and display the ID if there's an ID here
62:35 - so or if the ID is set here so ID for
62:41 - them was to ID and we're going to
62:45 - disable first 30 direct for now so we
62:49 - can see if there's something wrong with
62:51 - our logic so let's go back to our
62:54 - browser refresh the page and click on
62:59 - this and okay so my program expects
63:05 - these two parameters so as you can see
63:07 - we have an error here user that PHP on
63:11 - line 55 so we'll try to try to figure
63:15 - out what's wrong with
63:17 - fifty-five so let's go to user dot PHP
63:23 - and online 55 we need to figure out so
63:28 - here I think we need to make some
63:29 - changes so as you can see my param
63:31 - expects us to have two parameters but we
63:34 - only supplied one which is the ID so we
63:36 - need also to include the placeholder for
63:38 - that and I'll just copy and paste this
63:42 - here and also I've noticed that I
63:46 - spelled B from keyword SQL and also I
63:51 - missed the execute okay so I think it
63:59 - should do or it should solve our problem
64:02 - so before that also you need to change
64:04 - the index dot PHP so uncomment this line
64:07 - and remove the VAR down test and let's
64:10 - try to go back to our browser and check
64:13 - to see if now lately Todd and it is
64:15 - working so refresh the page and try to
64:20 - delete certain record by clicking this
64:22 - icon and okay so there you go user
64:27 - delete edit success and we now only have
64:29 - four records and we can try another one
64:33 - for this okay and okay
64:35 - and you can view the information of this
64:41 - also and redirecting to edit dot PHP
64:44 - with all the information included for
64:47 - this particular user and here's all the
64:51 - users from our database so I think that
64:54 - concludes our five-part tutorial series
64:56 - on this particular project so we can now
64:59 - add user we can now read the user we can
65:02 - update and of course we can delete the
65:04 - user so thank you for watching and if
65:07 - you're new here in our channel please
65:08 - consider subscribing and press the
65:10 - notification bell so you can get updated
65:12 - whenever we have a new upload thanks

Cleaned transcript:

hey what's going on guys welcome back to programming knowledge and this is another video tutorial series and in this particular series were gonna be building an application a very simple application this application will enable us to create read update and delete a particular record in our database so if you're interested and want to learn more about this project stay tuned and surely I will give you all the steps needed to create this particular application so if you're new here in our channel please consider subscribing and turn on the notification bells so you get updated whenever we have a new upload so let's go directly to the main content of this video and here we have the expected output of our application so here we have the table displaying all the records of users so for now we have only three records available in our database and we have few options here so for example we have the recycle icon to enable us to delete this if you want to delete this particular record you can delete this if you click on this recycle icon so click and then you will be presented with this confirmation are you sure you want to delete this user so if you really want to delete this user so you just have to click on OK and there you have it user deleted with success ok and then we also have the full name is enabled with a link so if we try to click on the link we will be they're redirected to another page which is the Edit user so we have here the IDs we cannot edit the ID but we can edit the full name and email address of this particular user and of course here at the left side we have the option to add new user so if we try to add a new user here so say for example the name is John Doe and John Doe gmail.com and click on save so their user with success and we have a new user which is John Doe and we have the email John Doe at gmail.com so this is the expected output of our project I know this is just a very simple application but it will help you get started with PHP jQuery and other underlying technologies that we're gonna use here so this is how the files are organized with this project so we have here the directory for classes directory for CSS database directory for includes and GS and of course this two important files which is deformed at PHP and index dot PHP so under classes we have two files which is data based at PHP and user that PHP so I'm gonna be providing you the starter files for this project so you could follow me along with this tutorial so you can find the link in the description below you can download the files or the starter files but for this project and you can follow along with this tutorial so before going any further with our project I'm going to show you first the structure of our database so what I have here is programming knowledge as the database name and the table name is crude underscore users so that's C R UD underscore users and the user or the crude animal users table has three attributes namely ID name and email so the ID is the primary key with the type in and the land is 11 and of course the auto increment is enabled for this particular attribute and of course the second one is the name the type is varchar' of our car which is the land s100 and of course the same with email the land is 100 and type is were chartered worker for this particular attribute email so that's the structure of our crude underscore users table and all our records will go here and for now let's go back to our editor and start working with our project so the first thing that we're gonna need is to set up our database dot PHP so we're going to create a database class so as you can see I have here the database that PHP file and we have a class NIDA base with five attributes for the host name the database name the user name password and this connection variable or connection attribute so we have you the method for the DB connection so we have try and catch clause and of course this is the standard way of connecting to our database we're just going to supply all necessary information such as the host name the database name the user name and the password and of course other properties or attributes needed for this connection which is for now we have the PDO attribute error mode is error mode underscore exception and of course video the second attribute is the MySQL attribute initialize command which has set names utf8 as the character encoding for our connection so that's the basic connection and we're just gonna use this class to connect to our database and of course we're gonna include this or require this database class to our user that PHP class so in this file we're gonna require the database class so the first thing is required once and then database that PHP so we can now use the class database in our user dot PHP file so as you can see we have here the class user and inside this class we're going to add several functions such as the constructor the function to execute queries function to insert function to update function to delete and of course another function to redirect by using a URL so the first thing the we're going to add here is the attribute which is private con and of course the constructor for this particular user class so public function underscore underscore construct okay and then curly braces open and close curly braces inside here we're going to define or create an object for our database class so database equals new database and of course this database we're going to assign this to a new variable which is DB equals database and of course the method to connect to our database matches we have DB connection and then open and close and then let's just assign our attribute connection so this one equals DB okay so another function which is the function to run our s SQL queries so public function and then the name is run query and this accepts SQL statement and of course we're just going to define the statement statement and then the attribute which is the connection and call the method prepare to prepare the statement that we're going to execute and then of course return the statement variable okay so let's just leave this function for now and then we're just going to use this function later on in our project so another function that we're going to create is the insert function so this will be another public function then insert and of course this function accepts the name and of course the email of our user so first let's I the try and catch class for this function so exception e ok so now we have the try and catch and this should be video exception and whenever we have an exception with our code we should display this exception by using the e and then getting the message by using the get message function so right here we're going to define the statement and then we're going to use the connection and call the prepare method or function and supply the SQL statement which is insert into table name which is crude users and then we're going to supply the attribute or attributes which are name and email and the values should be named and of course email okay and then of course we need to bind the parameters that we're going to use so statement and then the function bind parameter and of course the name and then of course the variable name the same read the email and this should be email and of course this one should be emailed and then stmd we're going to execute the statement and return as DMT okay so there you have it we now have the public function insert that will enable us to insert the user by using name and email attributes so last time we have created the database that PHP and the database class so we already have this deep connection function and all the other details on how to connect to our database and also in the last video we also have created the insert function and the construct function of the user class so in this particular video guys we will update this update function so we're gonna be dealing with this particular functional also this two functions below which is the delete and redirect URL method so first let's just start on the function for update so let's just add the public function and then update in this particular method or function guys takes three parameters which is the name okay and the email and of course it's ID so of course this is going to be pretty standard format we're going to use here we will add the try and catch block so this is gonna be a video exception and inside the try catch or the try block we will be adding the statement and of course we're going to use our connection right and then repair and we'll just have to type in the SQL command which has update so we're going to update the users okay so set name equal to name and then of course the email will be equals to email and we're ID equals the supplied ID so here we're gonna be using the statement and then we need to bind the parameter which is for our number one is the name course so we'll just have to copy this line for the other parameters so the second will be for email okay and then this one also for email and then this is for our ID okay you just have to make sure guys that the name here all this is the same with the what we have here in the SQL command so so if you are or if you're having the name here so make sure it is the same with this parameters in the bind bottom part so just to make sure that it is clear for you that you need to have the same keyword from here and here so after this we need to execute our code so we're gonna calling the function execute and of course return the statement that we have here on the update function so that's pretty much it for the update function so we have the try and catch and also the statement and binding the parameters and executing in the last is to return the statement and of course if something bad happens here we need to display something which is we just have to use the eve area ball and the get message for us to have a very meaningful message if something went wrong here at the top so there you go we have the complete function for our update so whenever we have to call the update or update the value for our users for example the name the email so we just have to use this function so another method that we're going to define here is the delete function so public function delete and of course this particular function takes in a ID so there you go and of course as I've mentioned before we need to have this try and catch statement so that we will know or the application will not exit abnormally so there you go and then e horrible so after that one I just have to copy this line and paste it here okay so I noticed that the color of my code changes because I think I mess up with the double code here so I just have to add here and there you go so inside here we're going to define another variable which is the statement and using our connection we're going to have the prepare function and of course our SQL which is delete from crude users which is our table name and the ID so we're IV equals our parameter ID so statement and then we need to bind the parameter and ID so I think I also type it here it should be small P okay and of course I just have to return the statement here so there so that's our function delete and last function that we're going to define here is the redirect method or function so public function click for public function redirect okay and this particular function takes in a URL and their location which is the URL there we go so that's the user class so as a sort of review we define the constructor the run query function we also have the insert the update and delete and also this last function which is redirect so the next file that we're going to modify next is the form that PHP so form that PHP file is where the adding of users and anything of users happen so we're going to add the form inside the main element here before that we need to add the heading one element that says or edit users and this particular element has the style we're going to add the margin to top and set it to 10px and of course after that one we need to add the paragraph that says required fields are in asterisk it's just assess that all the fields with asterisks are required so basically we're just telling the users that you need to supply or they need to fill up the required fields ok so after this we need to define the form for no let's just remove the class and also the action ok and after this one we need to add a division or a div element with class form group ok and of course we need to have the label for our ID and of course it says or the ID or the label for this as ID input type text and the name is ivy we're going to add the idea for this particular element which is of course value ID and I think the value for this now we'll just leave it as empty and we'll just set this input into readonly because we're not going to edit the ID so the only values that are editable as the name and email so I think we just have to copy this one for our name and one for our email ok but I forgot to add a class for this so this is going to be form control so I'll just have to copy this class and paste it for the other inputs and of course this particular particular label is for name so name and of course the name for this particular element is name and the ID is tidy so it should not be readonly and as for the value we're going to go back to this later on for setting the value for this particular input so the same thing with our email so it's going this is good this is going to be for our email so the label for our email and of course the name is email and IDs of course the email so the same thing with the name it's not going to be a readonly and the value is empty for now so another step is to add the placeholder for this email so placeholder is say for example John Doe at gmail.com and the this particular field is required and of course the max length for this is 100 so there you go another for this name input we need to have this required attribute and max length of 100 and of course we need to also have this place holder for this particular input element so this is going to be the first name first name and last name okay and we need to add this to have the asterisks for this fields to signify that it's that these particular fields are required so after this we need to add the button for our forms or input type button and the name of this is BTN see the value is of course save so this particular input button we need to have the class so it should be with class BTN and BTN primary and another class mark margin bottom and value is two so for now let's just go to our browser and try to preview our form that PHP file so this is our website let's just refresh this and try to click on this add new so this is our website if you try to click on this add new option so we now have the form we have the heading 1 add or edit users required fields or industries so we have you the ID which is readonly the name with asterisk and also the placeholder first name and last name and email and we have the email input and of course the submit button so in this particular tutorial guys in this particular video we're going to continue working on with the form dot PHP file and include or integrate the user class that we have created from the previous videos so let's go back to our code editor and start working with our form that page be fine so in this video we're going to add the logic for handling if the user wants to add records or want to add users to our database and also we're going to add the logic handling the Edit editing of certain records from our database so I think we're going to start with the post variable so in this particular logic we're going to handle the save or saving of users to our database so we have here the button name as BTN Save so we're just going to check if that particular name of the variable is set in our post variables so if we set the post and of course the name of our button ok and open and close parentheses so it just means that if the user submitted the form with our button bTW and save then process this logic inside for adding the user to our database but first let's just change this type or bottom type in to submit instead of button ok to ensure that the form will be submitted if the user clicks on this particular button so let's go back to this logic and try to setup the handling of inserting records to our database so first let's just get the value of our name so we're going to use the strip tags for that and of course the name of our input variable or I mean input element so this is for the name and of course we need one for our email so let's just copy and paste the same line and just change this into email ok and try to align this and of course as always we need to try or we need to add try and catch logic also or lines just to make sure that our software our project will exit normally okay and if ID is not equal to null then we need to make sure that we're going to update the users but first I think we need to set up or we need a new object of our user class that we have defined in our previous tutorials so before we're going to use the user class we're going to require it first so require ones and then of course the classes and user data HB so that file contains our user class and let's create the object of our user so object user equals new user ok and then we can just use this particular object here in our logic down below so next again if the ID is not equal to null then we need to make sure to update the user ok object user and then update and this of course this particular method or function we have already defined it in our user dot PHP so update and it takes three parameters the name email and ID which we're going to supply it here named email and of course the ID for that particular user and after that we're going to read the req object user redirect to index dot PHP index dot PHP and let's just set the query variable update were updated so as you can see also the rhetoric function we already define it here in our user that page with class so function redirect and if the ID is not equal to null or if the idea is null then we need to insert a new user so object if object object Jack user insert and of course the insert function takes in two parameters which is the email and the name and after that we're just going to redirect the page into the index dot PHP and update this query variable into inserted okay and otherwise we need to read the req to index dot PHP and say that there was an error during the processing of inserting the user to the database and of course we need also to display it's if something happens so our logic of up so get message okay and that's it for our adding the user to our database so again we also need to work on with the editing of user okay so here you need to check if the user for ID edit ID of the user if the Edit ID query variable is set we need to do something and set the values here in our form so as you can see now that the values here in our form for example the name so it's kind of empty for now so let's make sure to add values to this if the Edit ID is set so first thing that we're going to need is to get the ID so okay and the Edit ID and we're going to define a statement here statement and of course using or object user we're going to run a query again this particular function we have already defined it in our user that page with user that PHP file under the user class so this particular function takes in a warrant as SQL statement so select all from the table name which is the crude users we're IP equals the ID that we're going to supply then after this line we need to execute the statement by using the execute function and array array for our ID okay and we need to get the user wrong user equals s TM T and then fetch and video fetch associative very Hey there you go and then we need to end a statement here else we're just going to set the ID in to known and of course the role user null as well and when now we can set the values from or we can set the values to our form if the Edit ID is present or is set so here at the forum we need to make sure that the form is populated with the correct values so input type text with our name I did this is for the input variable or input element ID so in here we need to display of course the idea of our user so print and then draw a user and then we're just going to get the ID and the same thing with the others so let's check for now values and instead of ID we're going to use name for this and also this we're going to use the email email value okay so we have not yet tested our script but let's just continue working on with this index not PHP and try to display all the users that we have at to EDD so later on we're going to have to test the project if all the things that we have worked works and try to see if there's any problems with our logic or anything so for now let's just continue working on with this index at the HP and try to display all the users from our database so the first step that we're gonna make is to require first the user class so again because we're going to use this class to manipulate all the necessary things that we need for class for the users okay so new sir classes inserted at page P and we're going to add a new object out of this particular class user so object user was your user and here we need to run a query for us to get all the users that are saved in our database so here I think inside here and then we need to have we need to add a table for this right so before that we're going to add a division or their element and you need to have this class table responsive responsive and inside this div is the table actual table and this table has to have this plus table and table stripe okay and table SM and we need to define the table head for this which contains a table rock for our headers okay so th this is for righty and the course before ring and the email email there you go and we're just going to add another MPP boom head for this so this is actually for the actions say for example if we want to add it or something so we can add for this particular column a value or a bottle something like that if we need to so after the table head we need to run the query first to get the users from our database so the finder query and inside this is select all from good users and the final statement we're going to use the object to run the query there you go and we're going to use the query that we have already defined and then here we need to execute the statement okay so after this we need to define the table body of our table of course and we need to check first if we have something or we've got something from our statement so if statement raw count is greater than greater than zero which means we have users who are rehab already users that have been added to our database so if the user or we have users then we need to execute the fetching of the users are the actual users so raw user and equals the statement fetch and video fetch associative array and of course opening curly brace and this also and first we're going to arrange this first and we're going to close first this statement okay below I think it should be here mmm here right about here so HP and close the while statement and of course we're going to close the if statement okay so after that we're going to if the user has or if the statement has Rose then which means we need to populate our table so first we need to define the table row first okay and also the table data so the first thing that we're going to add here is the ID of the user so this will be for ID so pin row user and then of course we're going to get the ID okay and the second one will be our name okay so raw user and the name but for this particular table data we need to do something also for editing or user so instead of playing displaying the name we need to add a link that links to our form that PHP file and we're going to supply the ID for this link because as you can remember the foreign dot PHP file can accept edit underscore ID which signify the idea that we're going or we're trying to edit so form that PHP and then we find the eddie underscore ID equals PHP and we're going to paint the ID of our user there you go and of course we need to close our link so right about here you have to close the deal which contains the name of our users so whenever we click on this particular user name it will be redirected to form that PHP that contains our setting the edit underscore ID and if the edit underscore ID is set then that's the time that the form will be populated with values are the ID the name and the email so let's go back here and of course now that we have the name we also need one for our email so this one is for our email and we need to add another one for delete so of course we want our project to have this delete capability or functionality so whenever we click on this lilit function then we're going to there's a dialog box or a dialog that says or a confirmation that says do you really want do you really want to delete this particular user so if you want to confirm then the user will be deleted okay so I think we're we're just going to copy and paste this link here and instead replace this into this link and instead of form that PHP we need to set this into index dot PHP and of course the theory variable into delete underscore ID so we're gonna leave this row ID here and instead of using the name we're going to get or use the feature of bootstrap to display a trash icon there you go so if we try to refresh our page right now so let's go back to our browser and try to see our index dot PHP so go back to index dot PHP and here we have index dot PHP and as you can see we now have records to our table but it is not formatting correctly okay so let's go back to our code and try to edit and try to figure out what's wrong with our logic because we know that we have already the record but it is not aligned correctly with our columns form full name in the actions here for our date so let's go back to our code editor okay so we need to change something here so instead of separating this table records for table data so we need to make sure that all the table records or table data belongs to this particular table record so there you go so table records and all the table data inside so save and refresh this page so there you go we have the data that comes from our database so now let's try to add a new record to this form or this table so go to the form that page B by clicking on this add new icon or option here and so the first thing that we're going to input is the name so for example we need we will just name our new user as Jake Jake number and the email is Jake nomer at gmail.com and save so as you can see the Jake number has been added so this particular table but we don't have the prompt that the user has been added so we're going to work on that so the first thing that we're going to add is the user is prompt so say for example we're trying to add users so there should be a display here that says that the user has been added successfully or whenever we have already deleted the subject or to the users then there should be a display also for the the user has been deleted successfully or if there's an error and also if the user has been edited excess fully so we're going to all we're going to add all that in this particular video so let's start let's go back to our code editor and try working on with our index that page ok so right about here we need to add all the prompts or all the display if there's an action that has been done in our project so if we added users if we add the users or if we have deleted the users or if there's an error of any actions that we have defined or we have done in our project so the first thing is we need to open up our page tag here and check if the period variable for updated is set so the first event or action that we're going to check if there's an app date so this is this query variable is coming from the form dot PHP so if you try to go here in form dot PHP and we have here after editing or updating the file or the user we're going to redirect the user into index dot PHP and we're setting up the update that query variable so here we're just trying to check if that particular variable is present then we need to display something so echo and then define the dip here let's just close this div first and add classes to this so class we're going to use the alert coming from the bootstrap so alert and this alert is of type info and alert it should be dismissible this mis'able fade and show and the role of this particular element s alert okay and inside this we need to define a strong message so strong user and update that with success and we need to add a button to our alert so far on this is actually for closing the alert so button and then we're just going to close this right now and the type of this should be course button and this should have the class of cloves and data dismiss again guys this is the power absolute stop technology so if you want to know more about bootstrap technology so we have plenty of tutorials in our channel you can check that out and try to learn this awesome project bootstrap so a label should be force close and straight contain also span and close this as well and try to add another attribute they should be inside these fine gentlemen there you go and here is the icon for our nose button so times there you go and we'll just try this for now so save index dot PHP and let's try to go to our browser refresh the page and let's go to form that PHP by clicking on this record so we have here a error for us so form that page be on line 15 song called call to undefined function fetch on line 15 so we're going to try and check if what's the problem with this particular function so for line 15 so there you go row user and we miss the symbol greater than sign and we just need to refresh this okay and say let's go back to our back and refresh so there you go we have the user with IDs ID equals to 7 so the values for name is Jake Nomar and the email is Jake number at gmail.com so for example we don't like the the last name for this so Jake we're just going to use Jake Cuenca for now and save so there you go we have the alert that says the user updated with success so we know that our alert function or alert logic is working so we're trying to do the same thing with update I mean a delete in error and also the whenever we have added a new user okay so go back to you next up HP and for us to have or for us to save time I'll just copy and paste this line or these lines and try to paste it here else if it said deleted so we're just going to change the values also here user diluted with success there you go and of course we need to add another one for inserted else if inserted is defined then this will be inserted with success and another one for error as a URL query error is defined then it means eebee or database error something like that and try to change this message also so say for example something something went wrong with your action try again so for now let's try this insert that if it will work for us and maybe delete that later on so go back to our and try to refresh the page so insert it let's try to add a new user so this will be Jean for James James Jones and the email is James Jones at gmail.com there you go and try to save so there you go user inserted with success so we know that the alert for our data insertion is working so another one is for the delete ok so I think we we already have defined the link and as you can see this is working link but we need to add certain logic for this for the deletion of user should work so let's go back to our quota to code editor for now okay so in our index dot PHP we need also to try to delete if the user click on the delete button so if is set the get variable if get delete ie is set then that means that the user try is trying to delete a certain record from our database so get and of course you need to supply the delete ID ID there you go so time catch again the PDO exception okay so and try to display video exception the message from the exception of course and inside here we're going to check if the user ID is not equal to null because there's no point if the user ID is now there's going are there's no point of deleting it from our user and it will cause errors if the ID is not a force or forces we're going to check if it is none so if object user delete and of course we need to supply the ID for that and open and close parentheses an object user we need to use the redirect function and redirect to index that PHP but of course we delete that query variable so delete that and before anything else also we need to add a confirmation if we user trying tries to delete certain record so for now we're going to add a confirmation class for this particular bar and delete so that we can prompt the user if he accidentally click on that particular a delete button so class and Confirmation there you go and then we're going to define here the query or J quick information so if the class confirmation and then if the user are I mean the jQuery detects the click on confirmation class then we can return are you sure you want to delete this user and the user has the option to go or continue with this action so save index that page me and try to refresh our page so after refreshing the page I got this error and expect a dollar sign on line 20 so we just need to add a variable name here so should be okay so save that index at PHP and go back to our browser so let's try to delete a record here so I think the second record is good so click on this and a confirmation will be displayed are you sure you want to delete this user and then click on ok so as you can see user deleted with success but I think what I think the user is still there so we're going to check what's wrong with our logic so here we're just going to try and display the ID if there's an ID here so or if the ID is set here so ID for them was to ID and we're going to disable first 30 direct for now so we can see if there's something wrong with our logic so let's go back to our browser refresh the page and click on this and okay so my program expects these two parameters so as you can see we have an error here user that PHP on line 55 so we'll try to try to figure out what's wrong with fiftyfive so let's go to user dot PHP and online 55 we need to figure out so here I think we need to make some changes so as you can see my param expects us to have two parameters but we only supplied one which is the ID so we need also to include the placeholder for that and I'll just copy and paste this here and also I've noticed that I spelled B from keyword SQL and also I missed the execute okay so I think it should do or it should solve our problem so before that also you need to change the index dot PHP so uncomment this line and remove the VAR down test and let's try to go back to our browser and check to see if now lately Todd and it is working so refresh the page and try to delete certain record by clicking this icon and okay so there you go user delete edit success and we now only have four records and we can try another one for this okay and okay and you can view the information of this also and redirecting to edit dot PHP with all the information included for this particular user and here's all the users from our database so I think that concludes our fivepart tutorial series on this particular project so we can now add user we can now read the user we can update and of course we can delete the user so thank you for watching and if you're new here in our channel please consider subscribing and press the notification bell so you can get updated whenever we have a new upload thanks
