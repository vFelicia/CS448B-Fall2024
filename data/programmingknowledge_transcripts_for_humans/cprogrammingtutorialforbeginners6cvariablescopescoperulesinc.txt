With timestamps:

00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel and welcome to this
00:03 - video this is John from programming
00:06 - knowledge and in this video guys we're
00:08 - gonna talk about the scope of a variable
00:10 - and of course we're going to talk about
00:13 - the operators in C and how we can use
00:16 - them so let's go ahead and talk about
00:19 - the scope of a variable so basically a
00:22 - scope is a region of the program and the
00:26 - scope of variable reference of the area
00:28 - of the program where the variables can
00:31 - be accessed after its declaration so
00:34 - basically in the C program we have like
00:37 - three different scope or a different
00:42 - location that we can declare our
00:45 - variables so the first one is inside the
00:48 - function or a block so we have the first
00:53 - one will be the local variable here we
00:57 - go we can declare a variable inside our
01:02 - function the second one the second one
01:06 - will be the global variable okay and of
01:10 - course we can also this declare a
01:12 - variable inside the function parameter
01:17 - so function parameters okay so that's
01:23 - all the area that we can like declare
01:26 - the variables and set the values to it
01:30 - so but basically we do have like only
01:33 - the two that is most common although we
01:38 - are most of the time setting the
01:42 - function parameters in declaring
01:45 - variables to it like almost every
01:48 - function but yeah the most common way of
01:52 - you know declaring a variable is the
01:55 - local and global local and global
01:58 - variable so again when we say global or
02:03 - local variable it is a a variable that
02:07 - is declared inside a particular function
02:11 - or a block of function
02:13 - so a variables that are declared within
02:15 - the function block and can be used only
02:17 - within the function is called local
02:19 - variable so this is how we can implement
02:25 - this in our C program so for example in
02:29 - here we're going to declare by the way
02:35 - guess this is a comment and the way to
02:41 - make comment in C program is by using
02:43 - the double slash so this means this is
02:46 - this is a single line comment and of
02:48 - course we do have the slash and then the
02:53 - asterisk and then asterisk and then
02:56 - forward slash so this is multi-line
02:59 - comment so we can like add comments in
03:02 - between these lines and this double
03:07 - double slash will be the single line
03:10 - comment okay so I hope you get the idea
03:14 - of this comments and basically guys
03:16 - these comments will not be interpreted
03:18 - by our C program okay so as I've said
03:22 - we're going to discuss or we're going to
03:24 - declare a local variable here local
03:29 - variable definition and initialization
03:36 - initialization right there I'm just
03:38 - going to remove this single line comment
03:40 - okay so in the way to declare a variable
03:46 - in C is like in or this is the type of
03:53 - information that we want to save so in
03:56 - and then so for example the variable
03:58 - name is X and we can do it like this
04:02 - Y and then Z so basically what we're
04:06 - doing here is declaring three variables
04:09 - of in type okay so this is the variable
04:14 - definition and of course we can
04:17 - initialize it by saying X equals to 10
04:22 - okay
04:23 - x equals to 10
04:26 - in y equals x plus five and then we can
04:34 - also say Z equals y y variable plus one
04:41 - okay so that's how we can declare a
04:47 - variable and initialize the value into
04:50 - the variable so this is the definition
04:54 - in X Y Z and then of course the actual
04:58 - installation initialization which is
05:01 - right here x equals to 10 y equals x
05:05 - plus 5 and then Z equals y plus 1 okay
05:10 - so of course you can always print this
05:13 - so for example print mean def and then
05:17 - value of so for example Z equals percent
05:27 - D remember percent D is just the
05:30 - placeholder for our integer value so the
05:34 - value of Z equals the C variable okay
05:39 - and then save and of course you can
05:41 - compile or build and run your C program
05:46 - so let's try that okay so we need to add
05:52 - the same column at the end of the line
05:54 - to mark that it is ending in this
05:57 - particular line so build and run and
06:03 - there you go the value of Z equals 16
06:06 - because we said the x equals to 10 and
06:09 - then dy equals 2x plus 5 and of course Z
06:15 - equals y plus 1 that will result 216
06:21 - okay so that's how you declare and
06:24 - initialize a local variable now let's go
06:27 - on with the global variable or global
06:30 - scope of a variable so variables that
06:34 - are declared outside of a function can
06:36 - and can be accessed inside the function
06:38 - is called global variables so server
06:41 - example you want to declare a global
06:45 - variable all you have to do is before
06:47 - the in main function okay right here we
06:51 - can declare the global variable okay and
07:01 - we can declare it like int age and then
07:07 - we have like the semicolon at the end of
07:11 - the declaration okay in age and then
07:15 - semicolon so global variable
07:18 - initialization so after the after
07:22 - defining a local variable the system or
07:25 - the compiler won't initialize the value
07:31 - or any value to our local variable so we
07:34 - have to initialize it by by ourselves
07:37 - like this so if we try to define the
07:42 - variables right here it won't have any
07:45 - initial I or initial value so we have to
07:49 - declare it like this x equals to 10 y
07:53 - equals x plus 5 z equals y plus 1 but
07:59 - global variables get initialized
08:01 - automatically by the computer or AZ by
08:05 - the compiler and so for example if we
08:10 - declared in the variable type as in then
08:13 - the initial default value will be 0 okay
08:17 - remember you have to remember that so
08:20 - the difference between global and local
08:22 - variable is whenever we declare the
08:27 - variable in our local scope it won't get
08:32 - any initial value so we have to
08:35 - initialize it by ourselves but the
08:37 - global variable is initialized by
08:39 - default depending on the type of value
08:44 - that we have saved in our variable so
08:46 - for example it in the
08:48 - and it will default or initial default
08:52 - value will be 0 and if char so for
08:58 - example char T so the default value will
09:02 - be single code and then backslash zero
09:07 - and then backslash I I'm in single code
09:11 - of course when we say float load M so
09:19 - the initial value of that is equal to
09:21 - zero when we say double the initial
09:26 - value of that is also zero and when we
09:32 - say pointer the initial value of this is
09:38 - equal to null okay so you have to
09:43 - remember that whenever you declare a
09:47 - global variable there is a default value
09:50 - for our variables okay so as I've said
09:54 - global variables can be accessed inside
09:56 - our main function or any function so
09:59 - because this is a global variable right
10:02 - okay so I think that's all there is to
10:04 - it for this video guys and if you want
10:07 - to learn more about C programming
10:08 - language so make sure it was the next
10:11 - video and that's it thank you for
10:14 - watching and see you in the next video

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel and welcome to this video this is John from programming knowledge and in this video guys we're gonna talk about the scope of a variable and of course we're going to talk about the operators in C and how we can use them so let's go ahead and talk about the scope of a variable so basically a scope is a region of the program and the scope of variable reference of the area of the program where the variables can be accessed after its declaration so basically in the C program we have like three different scope or a different location that we can declare our variables so the first one is inside the function or a block so we have the first one will be the local variable here we go we can declare a variable inside our function the second one the second one will be the global variable okay and of course we can also this declare a variable inside the function parameter so function parameters okay so that's all the area that we can like declare the variables and set the values to it so but basically we do have like only the two that is most common although we are most of the time setting the function parameters in declaring variables to it like almost every function but yeah the most common way of you know declaring a variable is the local and global local and global variable so again when we say global or local variable it is a a variable that is declared inside a particular function or a block of function so a variables that are declared within the function block and can be used only within the function is called local variable so this is how we can implement this in our C program so for example in here we're going to declare by the way guess this is a comment and the way to make comment in C program is by using the double slash so this means this is this is a single line comment and of course we do have the slash and then the asterisk and then asterisk and then forward slash so this is multiline comment so we can like add comments in between these lines and this double double slash will be the single line comment okay so I hope you get the idea of this comments and basically guys these comments will not be interpreted by our C program okay so as I've said we're going to discuss or we're going to declare a local variable here local variable definition and initialization initialization right there I'm just going to remove this single line comment okay so in the way to declare a variable in C is like in or this is the type of information that we want to save so in and then so for example the variable name is X and we can do it like this Y and then Z so basically what we're doing here is declaring three variables of in type okay so this is the variable definition and of course we can initialize it by saying X equals to 10 okay x equals to 10 in y equals x plus five and then we can also say Z equals y y variable plus one okay so that's how we can declare a variable and initialize the value into the variable so this is the definition in X Y Z and then of course the actual installation initialization which is right here x equals to 10 y equals x plus 5 and then Z equals y plus 1 okay so of course you can always print this so for example print mean def and then value of so for example Z equals percent D remember percent D is just the placeholder for our integer value so the value of Z equals the C variable okay and then save and of course you can compile or build and run your C program so let's try that okay so we need to add the same column at the end of the line to mark that it is ending in this particular line so build and run and there you go the value of Z equals 16 because we said the x equals to 10 and then dy equals 2x plus 5 and of course Z equals y plus 1 that will result 216 okay so that's how you declare and initialize a local variable now let's go on with the global variable or global scope of a variable so variables that are declared outside of a function can and can be accessed inside the function is called global variables so server example you want to declare a global variable all you have to do is before the in main function okay right here we can declare the global variable okay and we can declare it like int age and then we have like the semicolon at the end of the declaration okay in age and then semicolon so global variable initialization so after the after defining a local variable the system or the compiler won't initialize the value or any value to our local variable so we have to initialize it by by ourselves like this so if we try to define the variables right here it won't have any initial I or initial value so we have to declare it like this x equals to 10 y equals x plus 5 z equals y plus 1 but global variables get initialized automatically by the computer or AZ by the compiler and so for example if we declared in the variable type as in then the initial default value will be 0 okay remember you have to remember that so the difference between global and local variable is whenever we declare the variable in our local scope it won't get any initial value so we have to initialize it by ourselves but the global variable is initialized by default depending on the type of value that we have saved in our variable so for example it in the and it will default or initial default value will be 0 and if char so for example char T so the default value will be single code and then backslash zero and then backslash I I'm in single code of course when we say float load M so the initial value of that is equal to zero when we say double the initial value of that is also zero and when we say pointer the initial value of this is equal to null okay so you have to remember that whenever you declare a global variable there is a default value for our variables okay so as I've said global variables can be accessed inside our main function or any function so because this is a global variable right okay so I think that's all there is to it for this video guys and if you want to learn more about C programming language so make sure it was the next video and that's it thank you for watching and see you in the next video
