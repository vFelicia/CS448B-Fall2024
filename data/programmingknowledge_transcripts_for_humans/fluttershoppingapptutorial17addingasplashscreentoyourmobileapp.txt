With timestamps:

00:00 - so as i said in the previous video in
00:02 - this video we shall
00:04 - start with developing the flutter part
00:06 - so before we dive right into the code i
00:08 - just want to open figma
00:10 - and show you a few things so uh i added
00:13 - two new screens okay and i'll tell you
00:16 - how the flow is gonna be so for
00:19 - means prototyping means deciding how the
00:22 - flow is gonna be we need to go in the
00:24 - prototyping section
00:25 - okay then from here everything is very
00:27 - simple i select this
00:28 - screen now if i want now if this screen
00:32 - is clicked
00:33 - i want to go on the seller screen so
00:35 - what i'm gonna do is i'm gonna select
00:37 - this
00:37 - big white circle and drag it to the
00:40 - screen
00:41 - to the next screen where i want it to go
00:44 - okay now over here i have many options
00:46 - to choose i am just
00:48 - gonna make it smart animate okay
00:52 - now so this is done so now what will
00:53 - happen then that if we click on this
00:55 - screen in figma preview we will be taken
00:58 - to this
00:58 - screen and now over here if i click on
01:02 - this
01:02 - item i want to go on the product screen
01:05 - so that is how our flow is gonna be
01:07 - that if i click on any of the seller i
01:10 - will be able to see all
01:12 - the products that that seller has okay
01:15 - and then after that if any of the
01:17 - product is clicked
01:20 - then we will for sure go to its uh
01:22 - product details
01:24 - okay so with this our very basic
01:26 - prototyping is done
01:28 - let's see
01:33 - okay so now if i click on this screen i
01:36 - am taken
01:36 - to the category screen and you
01:40 - saw how the better bias which was in
01:42 - center flew to the top left
01:44 - corner this is called hero animation and
01:46 - we shall be doing it
01:48 - okay and then after that if i click on
01:50 - this i am taken to the
01:52 - product screen and now if i click on any
01:54 - of the products
01:55 - i am able to see its details so this
01:59 - is what our flow is gonna be for now so
02:01 - let's
02:03 - open uh vs code and start coding
02:07 - okay so first i'll create a new project
02:19 - i'm gonna write flutter create
02:23 - better buys
02:26 - so this will create a flutter project
02:28 - with the name better buys
02:31 - okay so this will take a few seconds
02:34 - and in the meantime i have opened my
02:36 - emulator
02:38 - uh you can open your simulator um
02:42 - or you can connect your real device with
02:45 - it
02:46 - okay so now once this is built i'll open
02:49 - this folder
02:50 - okay means this project
03:02 - okay
03:08 - okay so once it is open i'll simply
03:11 - start building it
03:15 - okay so in main dot dot
03:19 - over here we have all the starting code
03:22 - okay so i'll go to run run without
03:24 - debugging
03:28 - and now it has started running so this
03:30 - is the
03:31 - initial project that flutter comes with
03:35 - if i click on this the value is gonna
03:37 - change over here so we are gonna remove
03:39 - this
03:39 - and directly start with our splash
03:43 - screen so i'll remove all the
03:45 - unnecessary code
03:47 - this complete my home it is not required
03:54 - okay now i'll remove this comments as
03:57 - well
03:59 - and i also want to remove this debug
04:02 - mode banner that we have over here
04:05 - so for that we have a key value property
04:09 - called debug show checked mode banner
04:12 - i am going to make it false
04:17 - okay and after this i'm gonna create a
04:21 - new folder inside my lib folder
04:23 - okay that is gonna be screens okay and
04:26 - then inside this i'm gonna create a new
04:29 - file that is gonna be
04:31 - splash screen dot dot
04:35 - okay so now this screen is created over
04:37 - here i'll import the
04:39 - flutter material so import
04:44 - material dot flutter a dot dot i'm sorry
04:54 - okay then after that i'll create a
04:56 - stateless widget
04:58 - okay that is gonna be called splash
05:02 - screen okay then instead of returning a
05:05 - container we are gonna return a scaffold
05:08 - because every screen should have a
05:10 - scaffold then
05:12 - a scaffold has a home okay
05:15 - so now the home is gonna be a container
05:23 - and inside the container we are gonna
05:26 - have a child
05:28 - and the child is gonna be text and the
05:30 - text is
05:32 - splash screen okay so this is done
05:42 - okay
05:47 - so i don't know why it is giving another
05:55 - okay so it doesn't have a home but it
05:57 - has a body i am extremely sorry for that
06:03 - okay so the body is gonna be a container
06:07 - okay and now we have this i'm gonna
06:10 - import it in our main dot dot and add it
06:13 - in the home so that
06:14 - as soon as the app starts we are able to
06:16 - see this screen which is
06:18 - in turn our splash screen so to import
06:21 - any local files
06:23 - the standard practices if you leave a
06:25 - line and use
06:27 - referential operator okay so
06:30 - i'm gonna write import dot slash
06:33 - and that is the instance of this class
06:36 - then inside this we in
06:38 - this folder i'm sorry then inside this
06:39 - we have the screens folder
06:41 - and then we have the splash screen
06:44 - okay and now over here instead of my
06:47 - home page it is gonna be
06:51 - splash screen
06:55 - okay so this is done
06:58 - and now over here instead of this i am
07:01 - gonna use an
07:02 - arrow operator
07:05 - okay because that is better and that is
07:08 - also
07:08 - recommended so this is done let's save
07:14 - this
07:18 - okay so once this is complete we can see
07:21 - splash screen but it is in the
07:24 - top left corner and it is almost hidden
07:26 - by the notch
07:27 - okay so we'll fix so that is not an
07:29 - issue but
07:30 - we got to see that our screen is intact
07:34 - okay so let's see the design the first
07:37 - thing we notice is the background color
07:39 - so
07:40 - let's get back to design so i'm gonna
07:43 - get this color and that is this okay
07:46 - so now inside our splash screen
07:50 - the container has a parameter called
07:53 - color
07:54 - okay and then it will take a color color
07:57 - class
07:58 - and then i can simply write the code of
08:00 - the color so now what happens is that
08:02 - this color requires a hexadecimal
08:06 - now even though it is a hexadecimal the
08:08 - color will
08:09 - color class will read it as a string
08:12 - okay so to convert so to make the color
08:15 - class read it as an
08:16 - hexadecimal all we need to do is add 0
08:20 - x f okay so this f stands for
08:23 - opacity and this is the format in which
08:27 - this color understands okay so now if i
08:30 - save this this color should be applied
08:31 - on our screen
08:32 - so let's see
08:37 - okay and it is only applied to this part
08:40 - i'm sorry
08:43 - i'll remove this now let's see
08:48 - and the color is applied to the entire
08:50 - screen okay now in center we need a
08:53 - better vice in text
08:54 - okay so for that i'm gonna have a child
08:58 - and the child is a text the text says
09:01 - better bias okay and the text
09:06 - should be in the center so for that i'm
09:07 - gonna write alignment
09:10 - and then from the alignment enum
09:16 - i am gonna use center
09:20 - okay so this is done let's save this
09:25 - and now we can see better vice in the
09:27 - center well although
09:29 - this font and color is very different
09:31 - from what we have here so you can see
09:33 - the font we have over here is pacifico
09:36 - okay so now to add this font in our
09:39 - project we are gonna use a package that
09:41 - is
09:41 - google fonts package
09:45 - okay so for that i'm gonna write to
09:47 - google fonts
09:49 - flutter so this will take us to the
09:52 - package
09:53 - i'm extremely sorry okay so i'm
09:56 - extremely sorry for that so the first
09:58 - link that is pub.dev
10:00 - has this package that is google fonts
10:03 - okay so
10:04 - i'm gonna copy it and simply paste it in
10:07 - my pubspec.yaml file
10:11 - so in pubspec.tml inside dependencies
10:16 - i'll place this and save this and then
10:18 - pub get should automatically start
10:20 - running and it did
10:22 - okay so this is the package that we are
10:24 - going to use we can use this to add any
10:26 - kind of font all we need to do is
10:28 - in the style inside text widget we just
10:32 - need to write google fonts
10:33 - and the font name okay so the proper
10:37 - instructions of
10:37 - installing is over here okay and this is
10:40 - the package that we add
10:42 - so i copied it
10:45 - will have to wait for a few seconds for
10:47 - this to complete running
10:50 - so once this is done we will open our
10:52 - splash
10:53 - screen and over here i'll simply paste
10:56 - it
10:58 - so now let's apply the pacifico font in
11:00 - our text
11:02 - so simply we are gonna go here write a
11:05 - style and then
11:07 - google fonts dot pasi
11:12 - fico
11:15 - okay so now let's
11:19 - wait for this google phone to recognize
11:21 - pacifico because it runs on real time in
11:24 - the
11:24 - on the internet so it will take a few
11:27 - moments
11:30 - okay so once it has recognized let's
11:33 - save this nc
11:40 - ok so now you can see once it has
11:42 - completed we
11:43 - get a bunch of errors over here and that
11:46 - is because we added a package and didn't
11:49 - restart it so the next time when we
11:52 - restart it
11:52 - so or just start it we will not
11:56 - be seeing these errors but anyways the
11:59 - font is applied now we just need to
12:01 - change the color and its
12:03 - size so for that inside this we have a
12:06 - property called color
12:10 - okay and that takes a color
12:14 - now again we need to get the color from
12:16 - our sigma file so i'll simply copy this
12:20 - paste it over here and and the color
12:24 - class will not understand so i'll have
12:26 - to add 0x
12:27 - for ff in front of it okay and then
12:30 - along with this i'll also change the
12:32 - size okay so the size is gonna be
12:36 - 20 let's see how it looks if it is not
12:39 - in accordance with our design we shall
12:41 - change it again
12:43 - so let's format it
12:47 - so once it is formatted let's save it
12:52 - okay and now you can see a better bias
12:55 - is here but it is
12:56 - very small i shall increase the size
12:59 - let's make it
13:00 - 25 okay so over here it is actually the
13:04 - pixels
13:05 - size okay so it can be a little bit more
13:08 - bigger
13:10 - let's make it 27 and
13:13 - this looks fine okay this is looking
13:16 - very aesthetical now
13:17 - in the next video we shall continue to
13:20 - the next screen
13:21 - okay so this was for the video thank you

Cleaned transcript:

so as i said in the previous video in this video we shall start with developing the flutter part so before we dive right into the code i just want to open figma and show you a few things so uh i added two new screens okay and i'll tell you how the flow is gonna be so for means prototyping means deciding how the flow is gonna be we need to go in the prototyping section okay then from here everything is very simple i select this screen now if i want now if this screen is clicked i want to go on the seller screen so what i'm gonna do is i'm gonna select this big white circle and drag it to the screen to the next screen where i want it to go okay now over here i have many options to choose i am just gonna make it smart animate okay now so this is done so now what will happen then that if we click on this screen in figma preview we will be taken to this screen and now over here if i click on this item i want to go on the product screen so that is how our flow is gonna be that if i click on any of the seller i will be able to see all the products that that seller has okay and then after that if any of the product is clicked then we will for sure go to its uh product details okay so with this our very basic prototyping is done let's see okay so now if i click on this screen i am taken to the category screen and you saw how the better bias which was in center flew to the top left corner this is called hero animation and we shall be doing it okay and then after that if i click on this i am taken to the product screen and now if i click on any of the products i am able to see its details so this is what our flow is gonna be for now so let's open uh vs code and start coding okay so first i'll create a new project i'm gonna write flutter create better buys so this will create a flutter project with the name better buys okay so this will take a few seconds and in the meantime i have opened my emulator uh you can open your simulator um or you can connect your real device with it okay so now once this is built i'll open this folder okay means this project okay okay so once it is open i'll simply start building it okay so in main dot dot over here we have all the starting code okay so i'll go to run run without debugging and now it has started running so this is the initial project that flutter comes with if i click on this the value is gonna change over here so we are gonna remove this and directly start with our splash screen so i'll remove all the unnecessary code this complete my home it is not required okay now i'll remove this comments as well and i also want to remove this debug mode banner that we have over here so for that we have a key value property called debug show checked mode banner i am going to make it false okay and after this i'm gonna create a new folder inside my lib folder okay that is gonna be screens okay and then inside this i'm gonna create a new file that is gonna be splash screen dot dot okay so now this screen is created over here i'll import the flutter material so import material dot flutter a dot dot i'm sorry okay then after that i'll create a stateless widget okay that is gonna be called splash screen okay then instead of returning a container we are gonna return a scaffold because every screen should have a scaffold then a scaffold has a home okay so now the home is gonna be a container and inside the container we are gonna have a child and the child is gonna be text and the text is splash screen okay so this is done okay so i don't know why it is giving another okay so it doesn't have a home but it has a body i am extremely sorry for that okay so the body is gonna be a container okay and now we have this i'm gonna import it in our main dot dot and add it in the home so that as soon as the app starts we are able to see this screen which is in turn our splash screen so to import any local files the standard practices if you leave a line and use referential operator okay so i'm gonna write import dot slash and that is the instance of this class then inside this we in this folder i'm sorry then inside this we have the screens folder and then we have the splash screen okay and now over here instead of my home page it is gonna be splash screen okay so this is done and now over here instead of this i am gonna use an arrow operator okay because that is better and that is also recommended so this is done let's save this okay so once this is complete we can see splash screen but it is in the top left corner and it is almost hidden by the notch okay so we'll fix so that is not an issue but we got to see that our screen is intact okay so let's see the design the first thing we notice is the background color so let's get back to design so i'm gonna get this color and that is this okay so now inside our splash screen the container has a parameter called color okay and then it will take a color color class and then i can simply write the code of the color so now what happens is that this color requires a hexadecimal now even though it is a hexadecimal the color will color class will read it as a string okay so to convert so to make the color class read it as an hexadecimal all we need to do is add 0 x f okay so this f stands for opacity and this is the format in which this color understands okay so now if i save this this color should be applied on our screen so let's see okay and it is only applied to this part i'm sorry i'll remove this now let's see and the color is applied to the entire screen okay now in center we need a better vice in text okay so for that i'm gonna have a child and the child is a text the text says better bias okay and the text should be in the center so for that i'm gonna write alignment and then from the alignment enum i am gonna use center okay so this is done let's save this and now we can see better vice in the center well although this font and color is very different from what we have here so you can see the font we have over here is pacifico okay so now to add this font in our project we are gonna use a package that is google fonts package okay so for that i'm gonna write to google fonts flutter so this will take us to the package i'm extremely sorry okay so i'm extremely sorry for that so the first link that is pub.dev has this package that is google fonts okay so i'm gonna copy it and simply paste it in my pubspec.yaml file so in pubspec.tml inside dependencies i'll place this and save this and then pub get should automatically start running and it did okay so this is the package that we are going to use we can use this to add any kind of font all we need to do is in the style inside text widget we just need to write google fonts and the font name okay so the proper instructions of installing is over here okay and this is the package that we add so i copied it will have to wait for a few seconds for this to complete running so once this is done we will open our splash screen and over here i'll simply paste it so now let's apply the pacifico font in our text so simply we are gonna go here write a style and then google fonts dot pasi fico okay so now let's wait for this google phone to recognize pacifico because it runs on real time in the on the internet so it will take a few moments okay so once it has recognized let's save this nc ok so now you can see once it has completed we get a bunch of errors over here and that is because we added a package and didn't restart it so the next time when we restart it so or just start it we will not be seeing these errors but anyways the font is applied now we just need to change the color and its size so for that inside this we have a property called color okay and that takes a color now again we need to get the color from our sigma file so i'll simply copy this paste it over here and and the color class will not understand so i'll have to add 0x for ff in front of it okay and then along with this i'll also change the size okay so the size is gonna be 20 let's see how it looks if it is not in accordance with our design we shall change it again so let's format it so once it is formatted let's save it okay and now you can see a better bias is here but it is very small i shall increase the size let's make it 25 okay so over here it is actually the pixels size okay so it can be a little bit more bigger let's make it 27 and this looks fine okay this is looking very aesthetical now in the next video we shall continue to the next screen okay so this was for the video thank you
