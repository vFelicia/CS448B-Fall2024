With timestamps:

00:00 - hello guys welcome to the next video on
00:02 - JavaFX tutorial for beginners in this
00:05 - video and the next video I'm going to
00:07 - show you how you can use media player
00:10 - class in Java effects and we are going
00:13 - to create a media player which you can
00:16 - play pause and load the video from your
00:20 - Java FX application so let's get started
00:24 - in the first video I'm going to show you
00:26 - how you can create a media view
00:28 - component and load your video in it and
00:31 - in the next video I am going to show you
00:33 - how to add some extra functionality in
00:36 - your media player so let's get started
00:39 - first of all create a new project so I'm
00:42 - going to create a new Java FX projects
00:45 - go to others and in here choose Java FX
00:49 - project click Next name your project for
00:52 - example media player dam ok and then
01:00 - click finish and inside your project
01:04 - just go to the source folder and in here
01:07 - you have application folder so first of
01:10 - all what we are going to do is we are
01:12 - going to create a FX ml file inside our
01:14 - application package so right click on
01:17 - your application package go to others
01:19 - and take a new F XML document name it as
01:25 - main dot effects and also just name it
01:28 - as main and everything will be ok so
01:31 - click finish and then right click on
01:34 - your main dot F XML file so this is our
01:37 - main dot F XML file right-click and go
01:40 - to source and then go to generate
01:45 - controller this is going to create a
01:47 - controller class for our F XML file and
01:51 - by default its name is main controller
01:54 - which is fine for us so click OK and now
01:57 - we have main dot Java main controller
01:59 - dot java application dot CSS which was
02:02 - created by the project but we will not
02:06 - use this and we have main dot F XML file
02:10 - here now go to your main
02:13 - Java file and in here we are going to
02:16 - replace these two line with our line
02:21 - which loads of a may not have XML file
02:24 - right now it's just creating a modern
02:26 - pane and creating a scene out of it
02:28 - right so we will replace these two line
02:31 - by these two lines which loads our F XML
02:35 - file as you know till now we are using
02:38 - these two lines to load the affectional
02:41 - files right now
02:43 - the skeleton of our project is ready so
02:46 - let's create some media player you know
02:50 - components and styles so right click on
02:53 - your main dot F XML file and open with
02:56 - the scene builder and it's going to open
02:58 - your Ramin dot F external file with the
03:01 - scene builder and just delete your end
03:04 - campaign first and we are going to use
03:06 - this time a border pain for a media
03:09 - player so just drag and drop a border
03:11 - pain component in your main dot F XML
03:16 - file here and then we are going to
03:19 - search for a media view so just search
03:22 - for media and it's going to give you
03:25 - this result which is media views which
03:28 - you can drag and drop in the center of
03:31 - your border pain here okay now select
03:34 - your media view and change the ID of it
03:38 - so go to code and change the ID of it
03:40 - for example MV for media view and then
03:45 - we will just add the controller to this
03:48 - F XML file so go to controller category
03:51 - at the left bottom and just choose your
03:55 - application not main controller from
03:57 - here and then save your I mean lot of
04:00 - XML file go to your project refresh your
04:03 - project right click and refresh and then
04:05 - go to your main controller dot Java
04:08 - class and this we are going to implement
04:11 - first of all initialize able here so
04:13 - just write implements initialize able
04:16 - which will tell us to implement the
04:20 - unimplemented methods so click this
04:22 - button and then add on in
04:24 - demented method which is going to
04:26 - implement this default method here now
04:29 - we are going to create an instance or
04:33 - object of media view which we have
04:36 - created here so this ID is M V which we
04:40 - are going to create in this main
04:42 - controller so just right at the rate FX
04:46 - M L and then write private media view so
04:53 - just a damn you in medium u object and
04:56 - name it as M V as you have given in the
05:01 - main dot of XML file now we are going to
05:03 - add two more class objects here one is
05:08 - the class object of media player so just
05:11 - write media player and the name it as
05:15 - mp4 example and then add an object of
05:20 - media so just write media and then
05:25 - search for media and then just name it
05:29 - as M II okay and let's add this private
05:33 - attribute in front of this media player
05:35 - and the media class objects and then we
05:39 - are going to go to our initialize a
05:41 - method here and first of all we need a
05:45 - media so we want to open a video from
05:48 - our media player right so we need to
05:52 - have some video somewhere to add it so
05:55 - there are two ways of adding a video you
05:59 - can add this video directly from its
06:01 - location for example is located
06:04 - somewhere in your computer and you want
06:06 - to directly give the part of the video
06:09 - location you can just copy the part from
06:12 - your video location and then use it here
06:16 - or otherwise you can you know create a
06:19 - resource folder here something like
06:21 - media package or folder and inside this
06:25 - place this video and then call it from
06:29 - there so we are going to use the second
06:31 - method which is we are going to add a
06:35 - media package here so just right click
06:37 - on your soul
06:38 - package and create a new package called
06:42 - media so package and we will name it as
06:46 - media and click finish
06:48 - and inside this package we are going to
06:51 - drag and drop our video which we want to
06:54 - play so my video name is vid not mp4
06:57 - which I'm going to drag and drop inside
07:00 - this media package okay and just say
07:04 - copy files and click OK and you can see
07:07 - our vid dot mp4 is here right now we
07:12 - want to play this video so what we need
07:15 - to use we need to have the path of it so
07:19 - just write the string path and then we
07:25 - will create an instance of a file so
07:27 - just write file and it will take the
07:31 - path of the video so if you can see here
07:35 - this video dot mp4 is inside my source
07:39 - folder so my parent folder is source and
07:43 - inside my source we have a media folder
07:46 - and inside my media folder we have mid
07:49 - dot mp4 so just write SRC /media slash
07:55 - veda dot mp4 okay and then we want to
08:01 - have the absolute path of it so just
08:03 - write the dot absolute path but before
08:06 - that we will add our media class so just
08:10 - the import Java dot IO which will add
08:14 - this media file class and then just call
08:18 - get absolute path or on it which will
08:21 - give you the absolute path now we are
08:24 - going to create an instance of media so
08:28 - just take this object which is Emme and
08:31 - we will create a new instance of it so
08:34 - just create new media and this media
08:41 - takes few arguments basically it takes
08:45 - the source of your you know file so just
08:49 - create a new file
08:51 - instance here new file and give the part
08:56 - which you have created here and then
08:58 - just call to URI to strength
09:03 - okay so just call to string here I think
09:07 - we have imported the wrong media class
09:10 - instead of this media class we need to
09:13 - use Java effects scene media and media
09:16 - class right not this Java FX print
09:19 - attribute standard media so just delete
09:22 - this and add this Java FX scene media
09:25 - dot media class okay so the error is
09:28 - gone now we will create an instance of
09:31 - media players who just write media
09:33 - player is equal to new media player and
09:38 - this takes an instance of media so just
09:42 - pass media here and me and then we will
09:45 - just use our MV object which is media
09:50 - view object and we will call a method
09:53 - called set Media Player so just call a
09:57 - method called set media player which
09:59 - takes an instance of media player just
10:03 - pass it here and we are almost done okay
10:07 - so now save everything save your code
10:11 - and we are going to run it right-click
10:13 - your project and run it as java
10:17 - application and now you can see your
10:21 - video is loaded in your scene here right
10:27 - but you can see here I can resize my
10:32 - scene but here you can see this video
10:37 - size is not changing and also this video
10:43 - is not even started right it's just
10:47 - loaded but it's not started so first of
10:50 - all we will try to start this video and
10:53 - then we will you know write the code to
10:56 - preserve the ratio of this video when we
10:59 - resize our
11:01 - see in here okay first of all we will
11:03 - write the code to play our video
11:08 - so just take this media player object
11:10 - and then call a method called a set
11:14 - autoplay so just write set or to play
11:18 - and this takes a boolean argument and we
11:22 - are going to give it true so just write
11:25 - true here which will play your video
11:28 - okay so just save your code and run your
11:31 - code once again so your video is running
11:42 - now right I'm going to reduce the volume
11:45 - so you can hear my voice not the video
11:49 - voice but the video is loaded and now
11:52 - it's played right now we want to change
11:56 - the ratio of this video size so that
12:01 - when we resize our scene this video is
12:04 - also resized so I'm going to close my
12:08 - app and go to the code here and first of
12:12 - all I'm going to create some properties
12:15 - here so first of all I'm going to create
12:17 - our double property here so just go here
12:20 - and create a double properties just
12:23 - write double property and first of all
12:25 - just write width here and take your
12:29 - media view and then just call fit width
12:35 - property okay and same we will do for
12:39 - the height so just add a double property
12:43 - once again and name it as height and
12:47 - instead of using this fit width property
12:51 - we will use width height property now
12:56 - import these double property class so
12:59 - just right click on this bulb or click
13:02 - on this bulb and import double property
13:04 - here okay and now take your width object
13:09 - so just right width and then call a
13:12 - method called bind here
13:15 - and then we are going to give some
13:19 - binding here right so just right
13:23 - bindings dot select double so just
13:28 - search for select double from here and
13:31 - then it takes two argument one is the
13:36 - media view select property and the other
13:39 - is the name of the property right so
13:43 - just use your media view here and just
13:46 - call scene property here
13:48 - okay so just write scene property and
13:53 - the second argument is the width so just
13:58 - in the double quotes what you need to do
14:00 - is just write double quotes and then we
14:03 - just need to pass width here okay same
14:06 - we will do for the height so just copy
14:09 - this height object and then replace here
14:13 - with height and this will help you to
14:17 - preserve the ratio of the video right so
14:21 - save everything and then once again run
14:24 - your app and now you can see your video
14:27 - is resized according to your border pane
14:33 - right so we can just resize the scene
14:36 - that will be resized according to our
14:39 - scene so you can see here the video is
14:43 - resized okay so this is the code for
14:46 - resizing now I will stop this video here
14:50 - and in the next video we will see how we
14:53 - can add some more properties to our
14:56 - media player so stay tuned and please
14:58 - recommend subscribe and bye for now

Cleaned transcript:

hello guys welcome to the next video on JavaFX tutorial for beginners in this video and the next video I'm going to show you how you can use media player class in Java effects and we are going to create a media player which you can play pause and load the video from your Java FX application so let's get started in the first video I'm going to show you how you can create a media view component and load your video in it and in the next video I am going to show you how to add some extra functionality in your media player so let's get started first of all create a new project so I'm going to create a new Java FX projects go to others and in here choose Java FX project click Next name your project for example media player dam ok and then click finish and inside your project just go to the source folder and in here you have application folder so first of all what we are going to do is we are going to create a FX ml file inside our application package so right click on your application package go to others and take a new F XML document name it as main dot effects and also just name it as main and everything will be ok so click finish and then right click on your main dot F XML file so this is our main dot F XML file rightclick and go to source and then go to generate controller this is going to create a controller class for our F XML file and by default its name is main controller which is fine for us so click OK and now we have main dot Java main controller dot java application dot CSS which was created by the project but we will not use this and we have main dot F XML file here now go to your main Java file and in here we are going to replace these two line with our line which loads of a may not have XML file right now it's just creating a modern pane and creating a scene out of it right so we will replace these two line by these two lines which loads our F XML file as you know till now we are using these two lines to load the affectional files right now the skeleton of our project is ready so let's create some media player you know components and styles so right click on your main dot F XML file and open with the scene builder and it's going to open your Ramin dot F external file with the scene builder and just delete your end campaign first and we are going to use this time a border pain for a media player so just drag and drop a border pain component in your main dot F XML file here and then we are going to search for a media view so just search for media and it's going to give you this result which is media views which you can drag and drop in the center of your border pain here okay now select your media view and change the ID of it so go to code and change the ID of it for example MV for media view and then we will just add the controller to this F XML file so go to controller category at the left bottom and just choose your application not main controller from here and then save your I mean lot of XML file go to your project refresh your project right click and refresh and then go to your main controller dot Java class and this we are going to implement first of all initialize able here so just write implements initialize able which will tell us to implement the unimplemented methods so click this button and then add on in demented method which is going to implement this default method here now we are going to create an instance or object of media view which we have created here so this ID is M V which we are going to create in this main controller so just right at the rate FX M L and then write private media view so just a damn you in medium u object and name it as M V as you have given in the main dot of XML file now we are going to add two more class objects here one is the class object of media player so just write media player and the name it as mp4 example and then add an object of media so just write media and then search for media and then just name it as M II okay and let's add this private attribute in front of this media player and the media class objects and then we are going to go to our initialize a method here and first of all we need a media so we want to open a video from our media player right so we need to have some video somewhere to add it so there are two ways of adding a video you can add this video directly from its location for example is located somewhere in your computer and you want to directly give the part of the video location you can just copy the part from your video location and then use it here or otherwise you can you know create a resource folder here something like media package or folder and inside this place this video and then call it from there so we are going to use the second method which is we are going to add a media package here so just right click on your soul package and create a new package called media so package and we will name it as media and click finish and inside this package we are going to drag and drop our video which we want to play so my video name is vid not mp4 which I'm going to drag and drop inside this media package okay and just say copy files and click OK and you can see our vid dot mp4 is here right now we want to play this video so what we need to use we need to have the path of it so just write the string path and then we will create an instance of a file so just write file and it will take the path of the video so if you can see here this video dot mp4 is inside my source folder so my parent folder is source and inside my source we have a media folder and inside my media folder we have mid dot mp4 so just write SRC /media slash veda dot mp4 okay and then we want to have the absolute path of it so just write the dot absolute path but before that we will add our media class so just the import Java dot IO which will add this media file class and then just call get absolute path or on it which will give you the absolute path now we are going to create an instance of media so just take this object which is Emme and we will create a new instance of it so just create new media and this media takes few arguments basically it takes the source of your you know file so just create a new file instance here new file and give the part which you have created here and then just call to URI to strength okay so just call to string here I think we have imported the wrong media class instead of this media class we need to use Java effects scene media and media class right not this Java FX print attribute standard media so just delete this and add this Java FX scene media dot media class okay so the error is gone now we will create an instance of media players who just write media player is equal to new media player and this takes an instance of media so just pass media here and me and then we will just use our MV object which is media view object and we will call a method called set Media Player so just call a method called set media player which takes an instance of media player just pass it here and we are almost done okay so now save everything save your code and we are going to run it rightclick your project and run it as java application and now you can see your video is loaded in your scene here right but you can see here I can resize my scene but here you can see this video size is not changing and also this video is not even started right it's just loaded but it's not started so first of all we will try to start this video and then we will you know write the code to preserve the ratio of this video when we resize our see in here okay first of all we will write the code to play our video so just take this media player object and then call a method called a set autoplay so just write set or to play and this takes a boolean argument and we are going to give it true so just write true here which will play your video okay so just save your code and run your code once again so your video is running now right I'm going to reduce the volume so you can hear my voice not the video voice but the video is loaded and now it's played right now we want to change the ratio of this video size so that when we resize our scene this video is also resized so I'm going to close my app and go to the code here and first of all I'm going to create some properties here so first of all I'm going to create our double property here so just go here and create a double properties just write double property and first of all just write width here and take your media view and then just call fit width property okay and same we will do for the height so just add a double property once again and name it as height and instead of using this fit width property we will use width height property now import these double property class so just right click on this bulb or click on this bulb and import double property here okay and now take your width object so just right width and then call a method called bind here and then we are going to give some binding here right so just right bindings dot select double so just search for select double from here and then it takes two argument one is the media view select property and the other is the name of the property right so just use your media view here and just call scene property here okay so just write scene property and the second argument is the width so just in the double quotes what you need to do is just write double quotes and then we just need to pass width here okay same we will do for the height so just copy this height object and then replace here with height and this will help you to preserve the ratio of the video right so save everything and then once again run your app and now you can see your video is resized according to your border pane right so we can just resize the scene that will be resized according to our scene so you can see here the video is resized okay so this is the code for resizing now I will stop this video here and in the next video we will see how we can add some more properties to our media player so stay tuned and please recommend subscribe and bye for now
