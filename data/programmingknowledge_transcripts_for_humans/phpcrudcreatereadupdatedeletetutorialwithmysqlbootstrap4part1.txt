With timestamps:

00:00 - hey what's going on guys welcome back to
00:01 - programming knowledge and this is
00:04 - another video tutorial series and in
00:06 - this particular series were gonna be
00:07 - building an application a very simple
00:10 - application this application will enable
00:13 - us to create read update and delete a
00:16 - particular record in our database so if
00:20 - you're interested and want to learn more
00:21 - about this project stay tuned and surely
00:25 - I will give you all the steps needed to
00:27 - create this particular application by
00:30 - the way guys this is a five-part video
00:31 - tutorial series so if you're new here in
00:33 - our channel please consider subscribing
00:36 - and turn on the notification bells so
00:38 - you get updated whenever we have a new
00:40 - upload so let's go directly to the main
00:43 - content of this video and here we have
00:46 - the expected output of our application
00:49 - so here we have the table displaying all
00:53 - the records of users so for now we have
00:56 - only three records available in our
00:59 - database and we have few options here so
01:02 - for example we have the recycle icon to
01:06 - enable us to delete this if you want to
01:09 - delete this particular record you can
01:11 - delete this if you click on this recycle
01:13 - icon so click and then you will be
01:16 - presented with this confirmation are you
01:19 - sure you want to delete this user so if
01:20 - you really want to delete this user so
01:24 - you just have to click on OK and there
01:27 - you have it
01:28 - user deleted with success ok and then we
01:32 - also have the full name is enabled with
01:35 - a link so if we try to click on the link
01:38 - we will be redirected to another page
01:41 - which is the Edit user so we have here
01:46 - the ID as we cannot edit the ID but we
01:51 - can edit the full name and email address
01:54 - of this particular user and of course
01:57 - here at the left side we have the option
02:01 - to add new user so if we try to add a
02:04 - new user here so say for example the
02:06 - name is John Doe and John Doe gmail.com
02:11 - and click on save
02:13 - so their user inserted with success and
02:18 - we have a new user which is Gendo and we
02:22 - have the email John Doe at gmail.com so
02:26 - this is the expected output of our
02:28 - project I know this is just a very
02:30 - simple application but it will help you
02:32 - get started with PHP jQuery and other
02:36 - underlying technologies that we're gonna
02:38 - use here so this is how the files are
02:41 - organized with this project so we have
02:43 - here the directory for classes directory
02:47 - for CSS database directory for includes
02:51 - and GS and of course this two important
02:56 - files which is deformed at PHP and index
03:00 - dot PHP so under classes we have two
03:03 - files which is database that PHP and
03:06 - user that PHP so I'm gonna be providing
03:09 - you the starter files for this project
03:12 - so you could follow me along with this
03:14 - tutorial so you can find the link in the
03:17 - description below you can download the
03:20 - files or the starter files but for this
03:22 - project and you can follow along with
03:24 - this tutorial so before going any
03:27 - further with our project I'm going to
03:29 - show you first the structure of our
03:31 - database so what I have here is
03:34 - programming knowledge as the database
03:37 - name and the table name is crude
03:40 - underscore users so that's C R u D
03:45 - underscore users and the user or the
03:50 - crude Anasuya users table has three
03:52 - attributes namely ID name and email so
03:58 - the ID is the primary key with the type
04:00 - in and the land is 11 and of course the
04:05 - auto increment is enabled for this
04:07 - particular attribute and of course the
04:10 - second one is the name the type is
04:13 - varchar' of our car which is the land
04:16 - s100 and of course the same with email
04:19 - the length is 100 and type is varchar'
04:23 - of our car for this particular
04:26 - attribute email so that's the structure
04:29 - of our crude underscore users table and
04:32 - all our records will go here and for now
04:35 - let's go back to our editor and start
04:37 - working with our project so the first
04:40 - thing that we're gonna need is to set up
04:41 - our database dot PHP so we're going to
04:44 - create a database class so as you can
04:47 - see I have here the database that PHP
04:49 - file and we have a class database with
04:52 - five attributes for the host name the
04:56 - database name the user name password and
04:59 - this connection variable or connection
05:02 - attribute so we have you the method for
05:05 - the DB connection so we have try and
05:10 - catch clause and of course this is the
05:14 - standard way of connecting to our
05:16 - database we're just going to supply all
05:19 - necessary information such as the host
05:22 - name the database name the username and
05:24 - the password
05:25 - and of course other properties or
05:27 - attributes needed for this connection
05:29 - which is for now we have the PDO
05:31 - attribute error mode is error mode
05:34 - underscore exception and of course video
05:38 - the second attribute is the MySQL
05:40 - attribute initialize command which has
05:42 - set names utf-8 as the character
05:46 - encoding for our connection so that's
05:50 - the basic connection and we're just
05:52 - gonna use this class to connect to our
05:54 - database and of course we're gonna
05:56 - include this or require this database
05:58 - class to our user that page be class so
06:03 - in this file we're gonna require the
06:04 - database class so the first thing is
06:07 - required once and then database that PHP
06:12 - so we can now use the class database in
06:17 - our user dot PHP file so as you can see
06:20 - we have here the class user and inside
06:23 - this class we're going to add several
06:25 - functions such as the constructor the
06:29 - function to execute queries function to
06:32 - insert function to update function to
06:35 - delete and of course another function to
06:37 - redirect by using a
06:39 - URL so the first thing that we're going
06:43 - to add here is the attribute which is
06:49 - private coin and of course the
06:53 - constructor for this particular user
06:55 - class so public function underscore
07:02 - underscore construct okay and then curly
07:07 - braces open and close curly braces
07:10 - inside here we're going to define or
07:15 - create an object for our database class
07:18 - so database equals new database and of
07:23 - course this database we're going to
07:26 - assign this to a new variable which is
07:29 - DB equals database and of course the
07:35 - method to connect to our database which
07:38 - is we have DB connection and then open
07:43 - and close and then let's just assign our
07:46 - attribute connection so this one equals
07:54 - DB okay so another function which is the
07:57 - function to run or as SQL queries so
08:02 - public function and then the name is run
08:09 - query and this accepts SQL statement and
08:15 - of course we're just going to define the
08:18 - statement statement and then the
08:21 - attribute which is the connection and
08:23 - called the method prepare to prepare the
08:29 - statement that we're going to execute
08:31 - and then of course return the statement
08:36 - variable okay so let's just leave this
08:38 - function for now and then we're just
08:40 - going to use this function later on in
08:43 - our project so another function that
08:45 - we're going to create is the insert
08:47 - function so this will be another public
08:50 - function
08:54 - then insert and of course this function
08:59 - accepts the name and of course the email
09:02 - of our user so first let's add the
09:09 - trying catch class for this function so
09:13 - exception e ok so now we have the try
09:22 - and catch and this should be PDO
09:25 - exception and whenever we have an
09:28 - exception with our code we should
09:31 - display this exception by using the e
09:34 - and then getting the message by using
09:37 - the get message function so right here
09:42 - we're going to define the statement and
09:44 - then we're going to use the connection
09:47 - and call the prepare method or function
09:51 - and supply the SQL statement which is
09:56 - insert into table name which is crude
10:01 - users and then we're going to supply the
10:05 - attribute or attributes which are name
10:09 - and email and the values should be named
10:17 - and of course email ok and then of
10:23 - course we need to bind the parameters
10:25 - that we're going to use so statement and
10:29 - then the function bind parameter and of
10:35 - course the name and then of course the
10:39 - variable name the same read the email
10:42 - and this should be email and of course
10:48 - this one should be emailed and then stmd
10:55 - we're going to execute the statement
11:02 - and return as DMT okay so there you have
11:10 - it we now have the public function
11:11 - insert that will enable us to insert the
11:14 - user by using name and email attributes
11:18 - so in the next video we are going to
11:20 - work on with this functions update
11:23 - delete and redirect method

Cleaned transcript:

hey what's going on guys welcome back to programming knowledge and this is another video tutorial series and in this particular series were gonna be building an application a very simple application this application will enable us to create read update and delete a particular record in our database so if you're interested and want to learn more about this project stay tuned and surely I will give you all the steps needed to create this particular application by the way guys this is a fivepart video tutorial series so if you're new here in our channel please consider subscribing and turn on the notification bells so you get updated whenever we have a new upload so let's go directly to the main content of this video and here we have the expected output of our application so here we have the table displaying all the records of users so for now we have only three records available in our database and we have few options here so for example we have the recycle icon to enable us to delete this if you want to delete this particular record you can delete this if you click on this recycle icon so click and then you will be presented with this confirmation are you sure you want to delete this user so if you really want to delete this user so you just have to click on OK and there you have it user deleted with success ok and then we also have the full name is enabled with a link so if we try to click on the link we will be redirected to another page which is the Edit user so we have here the ID as we cannot edit the ID but we can edit the full name and email address of this particular user and of course here at the left side we have the option to add new user so if we try to add a new user here so say for example the name is John Doe and John Doe gmail.com and click on save so their user inserted with success and we have a new user which is Gendo and we have the email John Doe at gmail.com so this is the expected output of our project I know this is just a very simple application but it will help you get started with PHP jQuery and other underlying technologies that we're gonna use here so this is how the files are organized with this project so we have here the directory for classes directory for CSS database directory for includes and GS and of course this two important files which is deformed at PHP and index dot PHP so under classes we have two files which is database that PHP and user that PHP so I'm gonna be providing you the starter files for this project so you could follow me along with this tutorial so you can find the link in the description below you can download the files or the starter files but for this project and you can follow along with this tutorial so before going any further with our project I'm going to show you first the structure of our database so what I have here is programming knowledge as the database name and the table name is crude underscore users so that's C R u D underscore users and the user or the crude Anasuya users table has three attributes namely ID name and email so the ID is the primary key with the type in and the land is 11 and of course the auto increment is enabled for this particular attribute and of course the second one is the name the type is varchar' of our car which is the land s100 and of course the same with email the length is 100 and type is varchar' of our car for this particular attribute email so that's the structure of our crude underscore users table and all our records will go here and for now let's go back to our editor and start working with our project so the first thing that we're gonna need is to set up our database dot PHP so we're going to create a database class so as you can see I have here the database that PHP file and we have a class database with five attributes for the host name the database name the user name password and this connection variable or connection attribute so we have you the method for the DB connection so we have try and catch clause and of course this is the standard way of connecting to our database we're just going to supply all necessary information such as the host name the database name the username and the password and of course other properties or attributes needed for this connection which is for now we have the PDO attribute error mode is error mode underscore exception and of course video the second attribute is the MySQL attribute initialize command which has set names utf8 as the character encoding for our connection so that's the basic connection and we're just gonna use this class to connect to our database and of course we're gonna include this or require this database class to our user that page be class so in this file we're gonna require the database class so the first thing is required once and then database that PHP so we can now use the class database in our user dot PHP file so as you can see we have here the class user and inside this class we're going to add several functions such as the constructor the function to execute queries function to insert function to update function to delete and of course another function to redirect by using a URL so the first thing that we're going to add here is the attribute which is private coin and of course the constructor for this particular user class so public function underscore underscore construct okay and then curly braces open and close curly braces inside here we're going to define or create an object for our database class so database equals new database and of course this database we're going to assign this to a new variable which is DB equals database and of course the method to connect to our database which is we have DB connection and then open and close and then let's just assign our attribute connection so this one equals DB okay so another function which is the function to run or as SQL queries so public function and then the name is run query and this accepts SQL statement and of course we're just going to define the statement statement and then the attribute which is the connection and called the method prepare to prepare the statement that we're going to execute and then of course return the statement variable okay so let's just leave this function for now and then we're just going to use this function later on in our project so another function that we're going to create is the insert function so this will be another public function then insert and of course this function accepts the name and of course the email of our user so first let's add the trying catch class for this function so exception e ok so now we have the try and catch and this should be PDO exception and whenever we have an exception with our code we should display this exception by using the e and then getting the message by using the get message function so right here we're going to define the statement and then we're going to use the connection and call the prepare method or function and supply the SQL statement which is insert into table name which is crude users and then we're going to supply the attribute or attributes which are name and email and the values should be named and of course email ok and then of course we need to bind the parameters that we're going to use so statement and then the function bind parameter and of course the name and then of course the variable name the same read the email and this should be email and of course this one should be emailed and then stmd we're going to execute the statement and return as DMT okay so there you have it we now have the public function insert that will enable us to insert the user by using name and email attributes so in the next video we are going to work on with this functions update delete and redirect method
