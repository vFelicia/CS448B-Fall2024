With timestamps:

00:00 - hey what's going on guys welcome back to
00:02 - our YouTube channel and welcome to this
00:04 - video so this is the part 13 of our
00:08 - laravel for beginners tutorial and in
00:11 - this video we're going to discuss or
00:13 - we're going to talk about how to enable
00:16 - editing and deleting of information or
00:20 - deleting of our data coming from our
00:22 - database so in the previous video we
00:24 - have worked with our post or our blog
00:27 - right so we can now have or we can I
00:31 - will see all the posts coming from our
00:33 - database and of course we can also go
00:36 - into details by clicking the specific
00:39 - post in this particular page so there we
00:44 - go we have here the post 3 and of course
00:48 - we have post two with all the details
00:50 - and now let's try to add the added
00:54 - functionality and also the delete
00:57 - functionality of this particular post so
01:00 - if there are several post here on this
01:04 - particular page so we have an option to
01:07 - edit or even delete that particular post
01:11 - so in order for us to do that we need to
01:13 - go to our code editor and try to modify
01:17 - our show page so as you can see we have
01:24 - the resources the views and of course
01:30 - the page and we also have here the files
01:36 - for our post so we have here - oh that
01:39 - lady at the HP and in here we need to
01:42 - add a link so right after the written
01:48 - iron information so we need to add a
01:51 - link for our edit so let's just try to
01:55 - add furs and HR element to have a
02:00 - separation of these two elements they
02:04 - are small and of course the link that
02:06 - we're going to add so this link should
02:09 - redirect to post
02:12 - then the ID of our post and of course
02:20 - the Edit and then it should say edit and
02:29 - it should have a class VPN and VPN
02:35 - default so if you try to save this and
02:40 - go back to our browser and refresh so we
02:46 - now have the Edit link here and you try
02:49 - to click on this one we are being
02:52 - redirected to this page
02:55 - PK project that LOC slash post and then
03:00 - slash one and then add it so now let's
03:04 - go back to our code editor and try to
03:06 - modify our post controller so up and
03:11 - then HTTP controllers and of course our
03:16 - post controller so we have here the
03:19 - store function and of course we have
03:23 - also the show before or from the
03:27 - previous video we have worked with show
03:29 - and then we're just getting the post so
03:32 - we're just going to do that also for our
03:35 - edit function and also we can just copy
03:38 - this line and just modify instead of
03:44 - saying show it should have the Edit
03:48 - keyword and of course we're also passing
03:51 - the post variable to our edit page so
03:56 - let's go back to our resources and then
03:59 - post we need to create a new file here
04:02 - to say edit blade that PHP okay and
04:10 - we're going to copy the mark-up from
04:15 - create blade that PHP because I think
04:18 - there are almost the same so in this
04:21 - page or are creating a post and of
04:24 - course in this page
04:25 - we're editing the particular post so
04:31 - instead of saying create a post it
04:33 - should be edit post and of course in
04:37 - here yes we need to say instead of empty
04:41 - we need to say post and of course the
04:46 - title of our post the same with the body
04:50 - of a post so post and body of the post
04:55 - and since we're editing a particular
04:58 - post we need to include or submit also
05:02 - the post ID so instead of just passing
05:07 - the post controller at store so we need
05:10 - to make it an array to pass also the ID
05:16 - of our post
05:17 - so that's post ID
05:23 - there you go and as you can see we have
05:27 - here the post method but if you try to
05:31 - view our route list by opening our
05:35 - terminal so let's try to view first our
05:40 - list so that's the HP artisan and then
05:48 - route list so we have here all the route
05:55 - for our project and as you can see we
05:58 - have here the update right so post and
06:02 - then of course the idea of our post and
06:04 - as you can see the method for this
06:08 - particular route as put or patch but we
06:16 - can't directly say here put so we need
06:21 - to have some kind of mechanism to enable
06:25 - to say put so in here we need to pass in
06:32 - some hidden field so form and then
06:38 - he then and of course the underscore
06:42 - method good so this is somewhat like a
06:47 - bypass because we cannot directly go
06:50 - here and say put so instead it should be
06:54 - post here and then here we can say the
07:00 - method should be put for our update
07:05 - route so save this and then I'm just
07:08 - going to close that terminal and let's
07:11 - go back to our post controller and try
07:15 - to update our update function here so in
07:19 - here in our update function you could
07:22 - just copy the logic coming from our
07:25 - store function so we can copy all this
07:28 - lines and paste it here there you go and
07:35 - we just need to change the post because
07:41 - we're not doing or we're not creating a
07:44 - new post we're editing the post so what
07:47 - we need here is to find the particular
07:50 - post fine and then passing in the ID of
07:55 - the post and of course instead of saying
07:58 - post updated or post created it should
08:01 - be post updated so there you go save our
08:07 - post controller that PHP and let's go
08:11 - back to our browser and in here refresh
08:15 - so we have here the Edit post page so
08:20 - let's try to go back to our blog first
08:22 - and then try to see post two and then
08:28 - this is the post oh and then if you try
08:30 - to click on edit we can see that the
08:33 - title is postal and we can just edit the
08:37 - body here so this is the second post
08:39 - body and this is updated by a certain
08:46 - user just to make sure just to show that
08:49 - we have updated
08:51 - this particular post so submit so we're
08:58 - getting this exception so the put method
09:00 - is not supported for this route so I
09:04 - think we need to change something here
09:07 - so oh there you go so instead of using
09:11 - store it should be update here so save
09:15 - that and let's go back to our page so
09:21 - Doug and then post two and then edit
09:27 - this is the second post buddy and this
09:30 - is updated and then submit so there you
09:35 - go post updated and then if you try to
09:39 - go see the post to we can now see that
09:42 - the post has been updated so now let's
09:46 - add the delete function just like what
09:50 - we have in our edit function or edit
09:52 - form we need to submit also the post ID
09:56 - for our delete function and also specify
09:59 - the move method so you know in that
10:02 - manner we need to also make our delete
10:06 - function as a form so we need to add a
10:10 - form here instead of just a pure link so
10:16 - that's form form and then open and the
10:30 - action of our form that will be post
10:39 - controller and then I destroy because
10:47 - we're using this for particular function
10:50 - to delete our post and then of course
10:54 - the idea of our post post IB specify the
11:01 - post ID and then
11:04 - for this we need to specify the method
11:07 - here so method and of course this should
11:12 - be post and we need to add a class here
11:21 - for our form so class all right because
11:32 - we want this to float right side of our
11:36 - Edit link so pull right and then we're
11:40 - going to close this one close our form
11:46 - and in here we need to add two things
11:54 - the method or the spoofing method that
11:59 - we have the same like for our edit so we
12:04 - need to add hidden field so underscore
12:09 - method and of course the keyword elite
12:13 - and of course here we also need to add
12:18 - the submit so form and then submit open
12:26 - and close and then delete this is our
12:29 - submit button so delete and we need to
12:35 - add a class here for our button so
12:42 - that's BTN and then BTN danger so let's
12:48 - try this refresh so we're getting syntax
12:55 - error and expected period so let's go
12:58 - back to our editor and identify the oh
13:05 - there you go so post it should be the
13:10 - post ID so Save
13:15 - let's go back to our page post three so
13:26 - it says undefined class constant closed
13:29 - so I think we also missed that instead
13:33 - of closed so it should have the open and
13:36 - closed parenthesis so let's go back to
13:41 - our page post three and then delete so
13:47 - now we are being redirected to the
13:50 - destroy function of our post controller
13:52 - so let's go to that function so destroy
13:56 - and in here we just need to find the
13:59 - post just like what we have in our
14:03 - update and show so find the post and
14:08 - then of course we need to delete the
14:10 - post using that function and then we
14:14 - need to redirect to our post page so
14:19 - that's post post and of course we need
14:25 - to pass in a message
14:29 - so that's success and then the post
14:38 - remove so save that and then refresh or
14:44 - maybe it's better to go to our post
14:47 - first so blog and then post three and
14:51 - then press the delete so as you can see
14:56 - we have removed the post number three
14:58 - and we have the message here post remove
15:01 - so we have successfully created our
15:04 - create read update and delete and in the
15:08 - next video we're going to talk about or
15:10 - we're going to discuss about user
15:12 - authentication so thanks and see you in
15:15 - the next video

Cleaned transcript:

hey what's going on guys welcome back to our YouTube channel and welcome to this video so this is the part 13 of our laravel for beginners tutorial and in this video we're going to discuss or we're going to talk about how to enable editing and deleting of information or deleting of our data coming from our database so in the previous video we have worked with our post or our blog right so we can now have or we can I will see all the posts coming from our database and of course we can also go into details by clicking the specific post in this particular page so there we go we have here the post 3 and of course we have post two with all the details and now let's try to add the added functionality and also the delete functionality of this particular post so if there are several post here on this particular page so we have an option to edit or even delete that particular post so in order for us to do that we need to go to our code editor and try to modify our show page so as you can see we have the resources the views and of course the page and we also have here the files for our post so we have here oh that lady at the HP and in here we need to add a link so right after the written iron information so we need to add a link for our edit so let's just try to add furs and HR element to have a separation of these two elements they are small and of course the link that we're going to add so this link should redirect to post then the ID of our post and of course the Edit and then it should say edit and it should have a class VPN and VPN default so if you try to save this and go back to our browser and refresh so we now have the Edit link here and you try to click on this one we are being redirected to this page PK project that LOC slash post and then slash one and then add it so now let's go back to our code editor and try to modify our post controller so up and then HTTP controllers and of course our post controller so we have here the store function and of course we have also the show before or from the previous video we have worked with show and then we're just getting the post so we're just going to do that also for our edit function and also we can just copy this line and just modify instead of saying show it should have the Edit keyword and of course we're also passing the post variable to our edit page so let's go back to our resources and then post we need to create a new file here to say edit blade that PHP okay and we're going to copy the markup from create blade that PHP because I think there are almost the same so in this page or are creating a post and of course in this page we're editing the particular post so instead of saying create a post it should be edit post and of course in here yes we need to say instead of empty we need to say post and of course the title of our post the same with the body of a post so post and body of the post and since we're editing a particular post we need to include or submit also the post ID so instead of just passing the post controller at store so we need to make it an array to pass also the ID of our post so that's post ID there you go and as you can see we have here the post method but if you try to view our route list by opening our terminal so let's try to view first our list so that's the HP artisan and then route list so we have here all the route for our project and as you can see we have here the update right so post and then of course the idea of our post and as you can see the method for this particular route as put or patch but we can't directly say here put so we need to have some kind of mechanism to enable to say put so in here we need to pass in some hidden field so form and then he then and of course the underscore method good so this is somewhat like a bypass because we cannot directly go here and say put so instead it should be post here and then here we can say the method should be put for our update route so save this and then I'm just going to close that terminal and let's go back to our post controller and try to update our update function here so in here in our update function you could just copy the logic coming from our store function so we can copy all this lines and paste it here there you go and we just need to change the post because we're not doing or we're not creating a new post we're editing the post so what we need here is to find the particular post fine and then passing in the ID of the post and of course instead of saying post updated or post created it should be post updated so there you go save our post controller that PHP and let's go back to our browser and in here refresh so we have here the Edit post page so let's try to go back to our blog first and then try to see post two and then this is the post oh and then if you try to click on edit we can see that the title is postal and we can just edit the body here so this is the second post body and this is updated by a certain user just to make sure just to show that we have updated this particular post so submit so we're getting this exception so the put method is not supported for this route so I think we need to change something here so oh there you go so instead of using store it should be update here so save that and let's go back to our page so Doug and then post two and then edit this is the second post buddy and this is updated and then submit so there you go post updated and then if you try to go see the post to we can now see that the post has been updated so now let's add the delete function just like what we have in our edit function or edit form we need to submit also the post ID for our delete function and also specify the move method so you know in that manner we need to also make our delete function as a form so we need to add a form here instead of just a pure link so that's form form and then open and the action of our form that will be post controller and then I destroy because we're using this for particular function to delete our post and then of course the idea of our post post IB specify the post ID and then for this we need to specify the method here so method and of course this should be post and we need to add a class here for our form so class all right because we want this to float right side of our Edit link so pull right and then we're going to close this one close our form and in here we need to add two things the method or the spoofing method that we have the same like for our edit so we need to add hidden field so underscore method and of course the keyword elite and of course here we also need to add the submit so form and then submit open and close and then delete this is our submit button so delete and we need to add a class here for our button so that's BTN and then BTN danger so let's try this refresh so we're getting syntax error and expected period so let's go back to our editor and identify the oh there you go so post it should be the post ID so Save let's go back to our page post three so it says undefined class constant closed so I think we also missed that instead of closed so it should have the open and closed parenthesis so let's go back to our page post three and then delete so now we are being redirected to the destroy function of our post controller so let's go to that function so destroy and in here we just need to find the post just like what we have in our update and show so find the post and then of course we need to delete the post using that function and then we need to redirect to our post page so that's post post and of course we need to pass in a message so that's success and then the post remove so save that and then refresh or maybe it's better to go to our post first so blog and then post three and then press the delete so as you can see we have removed the post number three and we have the message here post remove so we have successfully created our create read update and delete and in the next video we're going to talk about or we're going to discuss about user authentication so thanks and see you in the next video
