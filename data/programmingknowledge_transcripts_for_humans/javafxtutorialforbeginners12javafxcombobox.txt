With timestamps:

00:00 - hello guys welcome to the next video on
00:02 - Java fix tutorial for beginners in this
00:04 - video we will see how we can use and add
00:08 - combobox
00:09 - in Java FX so let's get started to start
00:13 - with I have created a project in which I
00:16 - have a min dot Java file in which I have
00:20 - added this line to add the main dot F
00:24 - XML and I have created this blank F XML
00:28 - file okay
00:29 - so till now I think you know how to do
00:33 - this okay and now what I'm going to do
00:36 - is first of all I'm going to create a
00:38 - controller class and one way of creating
00:41 - controller class is just right-clicking
00:44 - on the F XML file and then go to source
00:48 - and in here you can just click this
00:52 - generate controller and it's going to
00:54 - give you the automatic name if you
00:57 - satisfy with this name you can just
00:59 - click OK
01:00 - ok and it's going to create you this
01:03 - controller class now what I'm going to
01:07 - do is first of all I'm going to open my
01:09 - F XML file using scene builder and in
01:13 - this scene builder I have this anchor
01:15 - pane and I'm going to provide the size
01:18 - to this anchor pane as I always do which
01:22 - is 300 by 300 right so it has some
01:28 - initial size and now what I'm going to
01:30 - do is I'm going to go to the controls
01:33 - section here and I can see here a combo
01:37 - box control so I will drag and drop this
01:39 - combo box control here and I can resize
01:43 - it and you can see in the properties you
01:46 - can give the property called prompt text
01:49 - so for example you can give the prompt
01:53 - text something like you want to show
01:56 - some list of names so you can just say
01:59 - select name ok and press ENTER and it's
02:04 - going to give you this prompt text on
02:08 - the combo box right now just save it and
02:12 - now what
02:13 - I'm going to do is I'm going to go to my
02:15 - eclipses and in the controller main
02:18 - controller I am going to implement our
02:20 - interface called initialize able okay so
02:23 - just add this interface and this
02:26 - interface has a method which we need to
02:30 - implement that's why it's showing this
02:32 - error to us so just click the bulb and
02:36 - just add the unimplemented method okay
02:40 - and it's going to add this one method
02:42 - which is initialize able and we can use
02:46 - this method to initialize some
02:49 - components so what I'm going to do is
02:52 - first of all I'm going to add aa box
02:56 - element here so I will add at the rate
02:58 - FX ml and then I'm going to add public
03:03 - combo box and this combo box works as a
03:06 - list so you need to provide the type of
03:10 - you know data type which you want to
03:14 - have inside the combo box so for example
03:17 - we want to have the string data type
03:20 - here and then you can provide the name
03:23 - to your combo box for example combo box
03:27 - now what we are going to do is we are
03:29 - going to define observable list and I'm
03:33 - going to name it as list itself and I'm
03:36 - going to initialize it as effects
03:39 - collection dot observable ArrayList and
03:44 - inside these brackets you can give some
03:49 - argument as a list so for example I can
03:52 - give the list of names for example
03:55 - something like these and just import
03:59 - this class called observable list which
04:03 - is in JavaFX collection and now the
04:06 - error will go okay and now you can take
04:09 - this combo box and go inside your
04:12 - initialize method here and then you can
04:16 - just call a method called set items so
04:21 - just use this method called set items
04:24 - and this takes observable you
04:27 - list okay so you can just copy this and
04:29 - paste it here right so what this method
04:33 - does is whenever you run your code it
04:37 - initialize or it calls this method first
04:40 - which calls this code and it's going to
04:43 - initialize your combo box right and now
04:46 - one thing is remaining we need to link
04:49 - this combo box with the combo box which
04:52 - we have in the scene builder so select
04:55 - this combo box and then go to the code
04:59 - and then in the effects ID section you
05:03 - just need to give the same name as this
05:05 - variable name okay and one more thing we
05:08 - need to do here is go to the controller
05:11 - section on the left hand side and
05:13 - provide the controller class here so
05:16 - just choose application dot main
05:18 - controller from here and now save
05:20 - everything so save it and go to your
05:24 - project and right click on your project
05:26 - and refresh it and then save it and then
05:30 - run your project and now we can see the
05:33 - combo box with these populated names
05:37 - okay so we can choose some names but
05:40 - it's not doing anything so let's just
05:43 - create a method to listen this selection
05:46 - event okay so just close everything and
05:50 - go to your main controller dot Java
05:53 - class and in here we are going to create
05:56 - a method which will be a public void
06:01 - combo changed and the argument will be
06:04 - action event and what we are going to do
06:06 - is we are going to link this method to
06:10 - of a combo box in the scene builder okay
06:13 - so just go to your scene builder select
06:16 - your combo box and just choose this
06:20 - method which we have created which is
06:21 - combo changed and then what I'm going to
06:25 - do is I'm going to take a label here so
06:28 - just drag and drop a label in your scene
06:32 - builder and what I'm going to do is I'm
06:35 - going to display the name when I select
06:39 - some name
06:40 - using this combo box okay so I'm going
06:45 - to give some ID to this label so for
06:48 - example my label and the same ID I'm
06:54 - going to just copy it and I'm going to
06:56 - save my code first and I'm going to go
06:59 - to my controller and I'm going to define
07:03 - this label with this name okay okay so
07:07 - we have this label and this label we can
07:09 - use inside this combo changed method and
07:13 - what we are going to do we are going to
07:16 - just use this label and set some text on
07:18 - it so just call set text and what we
07:22 - want to set to this label we want to
07:24 - take the combo box and get the values
07:27 - which is set on the combo box so just
07:30 - use get value method which will give you
07:34 - the current selected value okay and it's
07:38 - going to set it on this label right so
07:42 - just save your code and run your code
07:44 - once again and when I select some name
07:47 - from here you can see it's set on the
07:50 - label right now for example you want to
07:53 - change the number of items in your combo
07:56 - box dynamically so on this button click
08:00 - event you want to add some more items to
08:05 - your combo box so I'm going to just
08:07 - comment this code for now and what I can
08:10 - do is I can take my combo box object and
08:14 - then call a method called get items
08:19 - so just take get items dot add all and
08:26 - this takes a collection of values so I'm
08:30 - going to provide some extra names here
08:33 - and save my code and run my app once
08:38 - again and whenever I select something
08:40 - from here you can see some more names
08:44 - are added to the combo box okay
08:47 - this action I can do with some button
08:51 - also so let's create one
08:54 - more function for example something like
08:57 - this and you can say button action here
09:01 - okay and in your scene builder you can
09:05 - drag and drop a button from here and you
09:09 - can just call this function which we
09:11 - have created which is button action and
09:13 - save everything and refresh your project
09:17 - once again and run it once again and
09:21 - right now we have four names inside the
09:25 - combo box and when we click this button
09:27 - it's going to increase the names right
09:30 - which we have added from this function
09:34 - okay now we can also add these lists
09:39 - from the effects ml file so for example
09:42 - I want to initiate this list from the F
09:47 - XML file what I can do is I'm going to
09:49 - comment this code so it's not going to
09:52 - populate this list to the combo box and
09:54 - I'm going to go to my main effects ml
09:57 - file and in here in the combo box so I
10:01 - have this combo box here what I'm going
10:04 - to do is I'm going to just extend this
10:08 - element something like this and in
10:11 - between these combo box tags I'm going
10:14 - to add the element called items so just
10:19 - add these items and then add element
10:22 - called effects collection so just add
10:26 - this effects collection here but it's
10:29 - not going to give you any intelligence
10:31 - because you need to import a collection
10:34 - class here so just add this line import
10:38 - Java FX dot collection dot star okay and
10:42 - now you can add effects collection and
10:45 - just close it and give the attribute
10:49 - here called FX Factory is equal to
10:53 - observable ArrayList this is the same
10:56 - list which we have defined in the
10:59 - collector class okay so now in between
11:03 - these elements for the effects
11:07 - collection you can add the items and how
11:10 - you can add the items you can add the
11:13 - items something like this so just add
11:15 - string and then FX value is equal to
11:19 - your text for example item 1 item 2 item
11:22 - 3 and so on for example item 4 and then
11:27 - you can save your code and run it once
11:31 - again and now you can see here it's
11:34 - propagated with item 1 2 3 & 4 okay so
11:39 - you can also populate your combo box
11:42 - using the F XML file something like this
11:47 - so this is all about combo box in Java
11:51 - FX I hope you have enjoyed this video
11:53 - please rate comment subscribe and bye
11:54 - for now

Cleaned transcript:

hello guys welcome to the next video on Java fix tutorial for beginners in this video we will see how we can use and add combobox in Java FX so let's get started to start with I have created a project in which I have a min dot Java file in which I have added this line to add the main dot F XML and I have created this blank F XML file okay so till now I think you know how to do this okay and now what I'm going to do is first of all I'm going to create a controller class and one way of creating controller class is just rightclicking on the F XML file and then go to source and in here you can just click this generate controller and it's going to give you the automatic name if you satisfy with this name you can just click OK ok and it's going to create you this controller class now what I'm going to do is first of all I'm going to open my F XML file using scene builder and in this scene builder I have this anchor pane and I'm going to provide the size to this anchor pane as I always do which is 300 by 300 right so it has some initial size and now what I'm going to do is I'm going to go to the controls section here and I can see here a combo box control so I will drag and drop this combo box control here and I can resize it and you can see in the properties you can give the property called prompt text so for example you can give the prompt text something like you want to show some list of names so you can just say select name ok and press ENTER and it's going to give you this prompt text on the combo box right now just save it and now what I'm going to do is I'm going to go to my eclipses and in the controller main controller I am going to implement our interface called initialize able okay so just add this interface and this interface has a method which we need to implement that's why it's showing this error to us so just click the bulb and just add the unimplemented method okay and it's going to add this one method which is initialize able and we can use this method to initialize some components so what I'm going to do is first of all I'm going to add aa box element here so I will add at the rate FX ml and then I'm going to add public combo box and this combo box works as a list so you need to provide the type of you know data type which you want to have inside the combo box so for example we want to have the string data type here and then you can provide the name to your combo box for example combo box now what we are going to do is we are going to define observable list and I'm going to name it as list itself and I'm going to initialize it as effects collection dot observable ArrayList and inside these brackets you can give some argument as a list so for example I can give the list of names for example something like these and just import this class called observable list which is in JavaFX collection and now the error will go okay and now you can take this combo box and go inside your initialize method here and then you can just call a method called set items so just use this method called set items and this takes observable you list okay so you can just copy this and paste it here right so what this method does is whenever you run your code it initialize or it calls this method first which calls this code and it's going to initialize your combo box right and now one thing is remaining we need to link this combo box with the combo box which we have in the scene builder so select this combo box and then go to the code and then in the effects ID section you just need to give the same name as this variable name okay and one more thing we need to do here is go to the controller section on the left hand side and provide the controller class here so just choose application dot main controller from here and now save everything so save it and go to your project and right click on your project and refresh it and then save it and then run your project and now we can see the combo box with these populated names okay so we can choose some names but it's not doing anything so let's just create a method to listen this selection event okay so just close everything and go to your main controller dot Java class and in here we are going to create a method which will be a public void combo changed and the argument will be action event and what we are going to do is we are going to link this method to of a combo box in the scene builder okay so just go to your scene builder select your combo box and just choose this method which we have created which is combo changed and then what I'm going to do is I'm going to take a label here so just drag and drop a label in your scene builder and what I'm going to do is I'm going to display the name when I select some name using this combo box okay so I'm going to give some ID to this label so for example my label and the same ID I'm going to just copy it and I'm going to save my code first and I'm going to go to my controller and I'm going to define this label with this name okay okay so we have this label and this label we can use inside this combo changed method and what we are going to do we are going to just use this label and set some text on it so just call set text and what we want to set to this label we want to take the combo box and get the values which is set on the combo box so just use get value method which will give you the current selected value okay and it's going to set it on this label right so just save your code and run your code once again and when I select some name from here you can see it's set on the label right now for example you want to change the number of items in your combo box dynamically so on this button click event you want to add some more items to your combo box so I'm going to just comment this code for now and what I can do is I can take my combo box object and then call a method called get items so just take get items dot add all and this takes a collection of values so I'm going to provide some extra names here and save my code and run my app once again and whenever I select something from here you can see some more names are added to the combo box okay this action I can do with some button also so let's create one more function for example something like this and you can say button action here okay and in your scene builder you can drag and drop a button from here and you can just call this function which we have created which is button action and save everything and refresh your project once again and run it once again and right now we have four names inside the combo box and when we click this button it's going to increase the names right which we have added from this function okay now we can also add these lists from the effects ml file so for example I want to initiate this list from the F XML file what I can do is I'm going to comment this code so it's not going to populate this list to the combo box and I'm going to go to my main effects ml file and in here in the combo box so I have this combo box here what I'm going to do is I'm going to just extend this element something like this and in between these combo box tags I'm going to add the element called items so just add these items and then add element called effects collection so just add this effects collection here but it's not going to give you any intelligence because you need to import a collection class here so just add this line import Java FX dot collection dot star okay and now you can add effects collection and just close it and give the attribute here called FX Factory is equal to observable ArrayList this is the same list which we have defined in the collector class okay so now in between these elements for the effects collection you can add the items and how you can add the items you can add the items something like this so just add string and then FX value is equal to your text for example item 1 item 2 item 3 and so on for example item 4 and then you can save your code and run it once again and now you can see here it's propagated with item 1 2 3 & 4 okay so you can also populate your combo box using the F XML file something like this so this is all about combo box in Java FX I hope you have enjoyed this video please rate comment subscribe and bye for now
