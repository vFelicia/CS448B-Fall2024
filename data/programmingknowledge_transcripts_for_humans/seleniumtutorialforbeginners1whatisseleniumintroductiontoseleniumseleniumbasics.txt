With timestamps:

00:01 - hello everyone this is varsha
00:03 - welcome to programming knowledge so in
00:05 - the previous tutorial we learned how
00:07 - does an automation tool work and how
00:09 - does it overcome the
00:10 - challenges in manual testing in this
00:13 - tutorial we will learn about the
00:14 - selenium the selenium framework why is
00:16 - it called as a framework and
00:19 - what are its advantages and
00:20 - disadvantages and its components
00:23 - so let's get started now here as an
00:24 - automation tool we will be studying the
00:26 - selenium webdriver
00:28 - for this you need to have some prior
00:30 - knowledge about the java
00:31 - and i have also explained what are the
00:33 - requirements of an automation tester
00:36 - i will give the link in the description
00:37 - box so when you go for an interview
00:40 - as an automation tester the very first
00:42 - question that comes to you
00:44 - is what is selenium see this is very
00:47 - important before mastering your skills
00:49 - in selenium you need to know what is
00:51 - selenium is at
00:52 - components as advantages and
00:53 - disadvantages and what are the different
00:55 - types of frameworks
00:56 - so we will be studying about selenium
00:58 - today
01:01 - so first let let us understand what is
01:03 - selenium
01:05 - selenium is a portable framework for
01:08 - testing
01:09 - web applications now here there are
01:12 - three terms to understand
01:13 - in this definition one is portable
01:16 - second is framework third is web
01:19 - application
01:21 - now what is portable portable
01:24 - in general it means to be easily
01:27 - transported or relocated that is the
01:29 - meaning of portable
01:30 - now what is framework framework
01:34 - we can divide the word framework into
01:36 - two parts frame
01:37 - plus work that is if we work in a frame
01:41 - like here
01:42 - you can see this house right
01:47 - this is a house frame or a basic
01:48 - structure or a supporting structure
01:51 - with the help of this structure we will
01:52 - be able to build a house
01:55 - so this is a framework so framework just
01:58 - gives us the basic structure
02:01 - which will add our code for greater
02:04 - functionality of the system now
02:07 - you must be thinking why do we use
02:09 - framework we use framework for
02:11 - reusability
02:12 - and we don't need to build things from
02:14 - scratch
02:15 - like suppose uh let us take up an
02:18 - example
02:19 - if you are making a dynamic web page and
02:21 - what will you do you will create folders
02:23 - like
02:24 - suppose index.html then style.css
02:28 - validate.php and etc see the problem
02:31 - here is not that you have to create
02:32 - folders but the problem is that you have
02:34 - to follow the same process
02:36 - again and again but if you use a
02:38 - framework we don't have to worry about
02:40 - that
02:41 - you just need to code your logic and
02:43 - that's it so that's framework
02:45 - framework just gives us the basic
02:47 - structure round
02:49 - which we will add our code for greater
02:52 - functionality of the system
02:54 - okay that's framework next we have web
02:58 - applications
03:00 - now there are basically three types of
03:01 - applications web-based application
03:04 - desktop application and mobile
03:06 - applications
03:08 - web-based applications are applications
03:10 - that can be accessed through browsers
03:12 - that is like the online forms the
03:14 - registration forms
03:15 - those are online based applications
03:18 - then we have the desktop application the
03:20 - desktop applications are the
03:21 - applications in which
03:23 - uh we we install in the local system
03:26 - for example the microsoft word excel
03:28 - powerpoint
03:30 - that's your desktop application mobile
03:32 - applications are application we install
03:34 - our mobile in our mobile through a play
03:37 - store we download some apps like
03:39 - whatsapp flipkart amazon those are
03:42 - mobile applications
03:43 - now selenium is a portable framework for
03:46 - testing
03:46 - only web applications selenium tests
03:49 - only web applications that is the
03:51 - application that can be accessed through
03:53 - browsers
03:57 - this also serves as a limitation but we
03:59 - will discuss that later
04:02 - so moving forward why selenium
04:08 - first thing we will choose selenium
04:10 - because of cost
04:11 - selenium is free it is open source as
04:14 - compared to the
04:15 - other tools like qtp and uft they are a
04:18 - paid
04:20 - the second point is flexibility selenium
04:23 - supports multiple programming languages
04:25 - like
04:26 - java c sharp python ruby and many more
04:30 - whereas if you go to some other tool
04:31 - like qtp it supports only vbscript
04:35 - next is the multiple browsers selenium
04:38 - supports multiple browsers like
04:40 - chrome firefox safari and many more
04:43 - whereas
04:44 - if you take qtp as a selenium tool it
04:46 - supports only chrome
04:48 - it also supports multiple os like
04:51 - windows linux apple
04:52 - and many more
04:55 - the main important point is that why are
04:57 - we using selenium because it supports
05:00 - parallel testing now let me tell you
05:01 - what is parallel testing
05:04 - the browser will execute the commands in
05:06 - two ways
05:08 - one is the parallel execution second is
05:11 - the cross browser execution
05:13 - now here you see on the screen parallel
05:15 - execution
05:16 - let us understand that first parallel
05:18 - executions are execution in which the
05:20 - test scripts
05:21 - opens all the browser at the same time
05:23 - and executes at the same time
05:26 - it's called as parallel execution here
05:29 - you can see there's a test script
05:30 - then you can see there are three
05:32 - browsers over here the first one is
05:34 - chrome the second is the firefox the
05:35 - third is the internet explorer
05:38 - so the test script will open all the
05:40 - browser at the same time and executed at
05:42 - the same time
05:43 - this is parallel execution we will
05:46 - explain uh i will
05:47 - explain it with an example just wait
05:50 - first understand what is cross browser
05:51 - execution
05:54 - cross browser execution let us take up
05:55 - an example like suppose
05:57 - uh in the test script over here it is
06:00 - written to insert
06:02 - some value in the drop down menu so this
06:04 - command will be first
06:06 - executed in the chrome browser when the
06:09 - execution is finished
06:10 - that is when the value is inserted in
06:12 - the drop down menu
06:14 - then the firefox browser will be open
06:18 - and the command to insert the value in
06:20 - the drop down box will be executed
06:23 - and when that command is executed then
06:25 - the internet explorer will be opened and
06:28 - the command will be executed
06:29 - so this is called cross browser
06:31 - execution that means the test script
06:33 - will open
06:34 - the brow chrome browser first after two
06:36 - three minutes when the execution is done
06:38 - it opens the firefox browser and then
06:41 - after some time it will open the
06:42 - internet explorer browser
06:43 - this is cross browse execution cross
06:46 - browser execution
06:47 - whereas in parallel execution if we have
06:50 - the same command to insert some value in
06:52 - the drop down menu
06:53 - then this command will be executed in
06:55 - all the browsers
06:56 - at the same time this is parallel
06:59 - execution
07:00 - and selenium supports parallel execution
07:05 - now let's move a little deeper towards
07:07 - the selenium
07:08 - uh we will study the selenium components
07:10 - which come prices of the selenium suite
07:12 - total we have the four components like
07:14 - the ide
07:15 - rc web driver and grid let us discuss
07:19 - ide first now the selenium
07:22 - ide is the most simplest tool in the
07:25 - entire suites of selenium
07:26 - it is nothing but an integrated
07:29 - development environment
07:31 - see earlier this ide was simply just a
07:33 - firefox extension
07:35 - and it's just a play around tool like
07:38 - you know you just play record
07:39 - functionality
07:40 - mainly it is useful prototyping and it
07:42 - is used only for demo purposes
07:45 - you cannot use ide for creating
07:47 - automation real-time projects because of
07:49 - its some limitations we will discuss
07:51 - those limitations later
07:52 - then the next component is the rc that
07:54 - is the selenium remote control
07:58 - it is used to write web application test
08:01 - in different programming languages it
08:03 - interacts with the browser with the help
08:05 - of the rc server
08:08 - through which we can interact to the web
08:10 - browser but
08:11 - this rc server got deprecated in the
08:13 - serenium version 2
08:15 - and was replaced by the web driver in
08:17 - the selenium version 3.
08:19 - we will discuss that also why it
08:21 - happened
08:23 - the next component is the selenium
08:25 - webdriver
08:27 - the selenium webdriver is one of the
08:29 - most important component in the selenium
08:32 - suites it is an api to create
08:36 - and execute the test cases and it is a
08:38 - successor of
08:39 - rc basically the selenium webdriver is a
08:42 - collection of
08:42 - open source api and which will be used
08:45 - to automate
08:46 - the testing of a web application as i
08:49 - said we will study the selenium
08:50 - webdriver very deeply the next component
08:53 - is grid
08:54 - the selenium grid is used to run
08:56 - multiple test scripts
08:57 - simultaneously on the different browser
09:00 - and platforms
09:01 - and it supports parallel testing what is
09:03 - parallel testing i explained in the
09:04 - previous slide
09:05 - so because of a grid we can selenium
09:09 - supports parallel testing
09:10 - so these are the four components in
09:12 - selenium
09:14 - let us discuss the drawbacks of ide the
09:16 - first drawback
09:17 - selenium id is a mozzarella firefox
09:20 - plugin
09:20 - which means the tests can be recorded
09:23 - only in the firefox browser and not
09:26 - in any other browser second it's not
09:28 - suitable for dynamic web pages
09:30 - because it is just a prototyping tool
09:32 - which works well
09:34 - only with the static web pages and not
09:36 - with the dynamic web pages
09:38 - third data driven testing is not
09:41 - possible
09:42 - fourth cannot provide detailed test
09:44 - reports
09:45 - whereas rc the next version of ide can
09:48 - provide detailed reports
09:51 - then we cannot perform database testing
09:54 - through ide same because it is just a
09:56 - prototyping tool it is used for demo and
09:58 - it is not used for
09:59 - automating web applications due to these
10:02 - drawbacks
10:03 - rc came into picture now we have
10:05 - discussed the components of selenium
10:07 - let's see the versions of selenium
10:08 - here we have total four versions
10:10 - selenium version one
10:12 - selenium version two three and four now
10:14 - see here we will dig into
10:16 - some history of the selenium here the
10:18 - selenium version one
10:20 - we have the selenium ide rc plus grid
10:23 - so when jason huggins introduced the
10:25 - selenium the tool was called as a
10:27 - javascript program
10:28 - he called it as a javascript tester
10:32 - but he had one major issue that that is
10:35 - called as the same origin
10:37 - policy so now what is you must be
10:39 - thinking that what is the same origin
10:41 - policy
10:42 - this policy says that when javascript is
10:45 - executed in the domain it can access the
10:48 - web pages in
10:50 - that domain only and it can not access
10:53 - any other web page in the another domain
10:56 - for example suppose like a web page in
10:59 - the google
11:00 - like if you have a domain google.com
11:02 - okay so you can
11:03 - access the search bar the email the
11:05 - drive but
11:07 - that can be accessible but nothing can
11:09 - be accessible outside the google.com
11:12 - like if you want to access you yahoo uh
11:15 - mantra
11:15 - or amazon or any other domain that
11:17 - cannot be accessible
11:19 - definitely this is because of some
11:21 - security reasons so that is why this is
11:23 - called as a same
11:24 - origin policy now to overcome this
11:27 - policy
11:28 - remote control server was designed that
11:30 - is the selenium rc now the main reason
11:33 - to create the server was to trick the
11:35 - browser
11:36 - in believing that the selenium code in
11:39 - which we are running the scripts and the
11:40 - web application under test
11:43 - are in the same domain now here
11:46 - this same origin policy is solved uh so
11:48 - this was the version one of selenium
11:51 - where we have the id rc and grid
11:54 - where the same origin policy was solved
11:57 - in the version one
11:59 - then comes the selenium version two here
12:01 - we have the ide the web driver the rc
12:04 - and the grid
12:05 - see in 2007 when this uh when siemens
12:08 - stewart
12:09 - he invented this web driver now why did
12:12 - he invent this webdriver because the
12:14 - architecture of the rc was very
12:16 - complicated
12:18 - and in rc we need a separate server to
12:21 - talk to this
12:22 - like we need a separate server to talk
12:24 - to the browser so what he did is
12:26 - he removed the requirement of the
12:28 - separate server
12:30 - and this is the selenium version 2 where
12:32 - the web driver was introduced
12:34 - now why you must be thinking like why
12:35 - web driver and rc is
12:37 - introduced over here in the version two
12:39 - because the web driver was in the
12:40 - development phase
12:42 - and they were trying to implement it so
12:44 - that is the reason why we have uh
12:46 - in the selenium version too the ide the
12:48 - web driver the rc and the grid
12:50 - so in the selenium version 3 we had the
12:53 - ide
12:54 - webdriver and grid here you see that the
12:56 - rc was completely deprecated and we only
12:59 - have the web driver
13:00 - currently we have the selenium version 4
13:02 - that have many new features that this is
13:04 - the new version of selenium 4 and now
13:06 - it is still in development recently
13:08 - there was a version
13:09 - known as alpha version was introduced
13:12 - and this version was mainly introduced
13:14 - because of
13:16 - complete w3c protocol adoption
13:19 - but this change in protocol isn't going
13:21 - to impact any of the user because
13:23 - uh many major of the browser drivers
13:26 - like the
13:26 - firefox the chrome driver and they all
13:29 - are included in the selenium 3.8 version
13:32 - which we are going to use and i i will
13:34 - be also explaining i'll be uh explaining
13:36 - some of the features of the selenium
13:38 - fourth version we will do that
13:40 - also like there are many ways to take
13:42 - screenshot in the selenium four version
13:44 - there are two to three methods
13:45 - so there are new apis added there are
13:48 - some ways to access the web elements
13:50 - also and there are some of the features
13:51 - that are very new
13:52 - introduced in the selenium version so
13:54 - mainly we will be studying about the
13:56 - selenium web driver
13:57 - now you must be thinking why selenium
14:00 - web driver
14:02 - now why are we studying the selenium web
14:04 - driver for that we need to know the
14:05 - drawbacks of the
14:07 - selenium rc
14:12 - now this is the architecture of the
14:13 - selenium rc
14:15 - this is the main reason why we are
14:17 - studying the web driver
14:19 - so the selenium rc is a test tool that
14:22 - allows you to write automated web
14:25 - applications in various programming
14:27 - languages like
14:28 - java python ruby so let's see the
14:31 - architecture of selenium rc
14:34 - first we need to write the test scripts
14:37 - in supported languages like
14:38 - java python or any other supported
14:40 - language
14:42 - but before writing these test scripts
14:45 - the major requirement in rc is the rc
14:48 - server
14:49 - so first you need to start the rc server
14:51 - before you run a core
14:53 - and this rc server is a separate
14:55 - application
14:56 - this rc uh is uh responsible for uh
14:59 - receiving the silliness command
15:01 - from your test scripts it interprets
15:04 - them
15:05 - and then reports the result back to the
15:06 - script
15:08 - now i use the word selenius over here
15:10 - now what is the selenius commands they
15:12 - are nothing but the commands that are
15:13 - written in the test scripts are called
15:15 - as
15:16 - cylinders commands in id and rc they are
15:18 - called as syringes commands
15:20 - now let's look at the browser
15:23 - interaction
15:24 - how the browser interacts the browser
15:27 - interactions happens through the rc
15:28 - server
15:30 - this rc server is a simple http post
15:34 - and http get request to communicate okay
15:37 - it uses the simple http posts and get
15:40 - request to communicate to the browser
15:42 - now how this communication happens
15:45 - this rc server acts like a proxy now you
15:48 - see there is a complete cycle
15:51 - starting from your test script then the
15:53 - rc the rc server
15:55 - injects the javascript in the web
15:57 - browser runs your commands
15:59 - takes back the results sends it to the
16:01 - rc server
16:02 - and then the result is displayed this
16:05 - whole
16:06 - cycle gets repeated for each and every
16:08 - command
16:09 - which is written in the test scripts
16:11 - this is how the test case
16:13 - gets executed in the rc server like the
16:16 - selenium rc tool
16:18 - this is how the whole cycle goes for
16:21 - each and
16:21 - every test scripts now everything was
16:24 - good but
16:25 - why was rc not good enough to run test
16:28 - scripts let me tell you why
16:29 - what are those drawbacks first time
16:33 - taken for execution of command is locker
16:35 - why because there is an additional
16:37 - server rc to so it executes each and
16:39 - every command is executed through the rc
16:42 - so it takes a lot of time for execution
16:45 - the api supported by rc are redundant
16:48 - and confusing
16:50 - because one command means many meaning
16:53 - it has a lot of meaning for one command
16:55 - like suppose there is a command called
16:56 - as click and click at
16:59 - so which one to use it's very confusing
17:01 - for the developers
17:03 - then there is complicated architecture
17:06 - rc consists of an additional server that
17:08 - acts as an middleman also the mobile
17:11 - apps cannot be tested
17:13 - using rc so these are the drawbacks of
17:15 - rc
17:17 - now let's see how does selenium web
17:19 - driver overcome these drawbacks
17:21 - for this we need to understand the
17:23 - architecture of the web driver
17:26 - so in the web driver architecture we
17:28 - have the test scripts
17:30 - the web browser and the web server
17:32 - however we do not have an additional
17:34 - server for communication like the rc
17:36 - server
17:37 - which we saw in the selenium rc
17:41 - which makes the architecture of the web
17:43 - driver very very easy
17:45 - because we don't have an additional
17:47 - server in this as you can see
17:49 - there are direct interactions with the
17:50 - web browser
17:52 - so as an advantage the selenium does not
17:55 - use an additional server
17:56 - and since there is no intermediate
17:58 - server there
18:00 - then the browser is controlled directly
18:02 - from the
18:04 - system due to this direct communication
18:07 - the overall cycle that we saw in the rc
18:10 - server
18:10 - was which was very indirect
18:12 - communication since this entire
18:13 - communication made the execution very
18:15 - slow
18:16 - so that's why we have the web driver in
18:18 - which the execution is faster than the
18:21 - rc server
18:22 - as you can see the execution time for
18:24 - command is shorter
18:26 - due to the simple architecture now you
18:28 - have seen the architecture of rc
18:30 - and webdriver let's compare the selenium
18:33 - rc
18:33 - and the selenium webdriver
18:37 - let's see in terms of api now rc
18:40 - is less object oriented api
18:44 - now the api and rc is very confusing and
18:47 - redundant for example we have commands
18:49 - like click
18:50 - or click at commands which one to use so
18:53 - it was very confusing for the developers
18:55 - and
18:56 - the direct browsers interpreted
18:59 - different commands also
19:01 - which was very challenging for the
19:03 - developers working on different browsers
19:04 - for different browsers
19:06 - browsers there were different commands
19:08 - so it was very challenging
19:10 - whereas for selenium webdriver it is
19:12 - very simpler api and it is very easier
19:14 - to use
19:15 - for example we have the click function
19:17 - to click on the web element we have the
19:19 - send key command to send text on very
19:21 - on any web element in the web page so it
19:24 - has a very simpler api
19:28 - now let's see in terms of speed selenium
19:30 - rc is slow in execution
19:33 - and in terms of speed web driver is
19:36 - faster in execution
19:38 - because in selenium rc we have the rc
19:40 - server whereas in webdriver there is no
19:42 - additional server
19:44 - next let's let's see in terms of browser
19:47 - support
19:47 - see rcn webdriver supports multiple
19:49 - browser but rc does not have
19:52 - support for html unit which is a
19:55 - headless browser
19:57 - now let's see what is this headless
19:59 - browser
20:00 - headless browser is a browser which does
20:03 - not
20:03 - have a ui this helps to make testing
20:06 - more faster
20:08 - because it does not need a real browser
20:10 - for testing it does not take
20:12 - time to load the web elements so and the
20:15 - headless browser is very quick
20:16 - so rc and webdriver this support
20:19 - multiple browser but
20:20 - rc does not support html unit that is
20:24 - the headless browser
20:25 - whereas the web driver supports the
20:27 - headless browser and it is
20:28 - and it makes the execution move faster
20:31 - next we have the
20:32 - uh comparison in terms of testing mobile
20:35 - applications
20:36 - selenium rc does not support testing of
20:38 - mobile applications
20:40 - whereas web drivers selenium web driver
20:42 - it supports testing of mobile
20:43 - applications there is an application
20:45 - name as apm
20:46 - through which we can test mobile
20:47 - applications
20:49 - so these were the difference between the
20:50 - rc and the web driver
20:53 - but every component has its own
20:55 - drawbacks
20:56 - so let us see the drawbacks of webdriver
21:00 - one cannot readily support new browsers
21:03 - but rc can
21:05 - and it does not have a built-in command
21:07 - for automatic generation of test results
21:10 - see uh it cannot readily support new
21:12 - browsers there are many
21:14 - new versions coming up so this challenge
21:16 - can be overcome
21:18 - second uh we don't have built-in
21:19 - commands for automatic generation of
21:21 - test results whereas in rc we have we
21:23 - can generate test results there's a
21:25 - proper format in rc
21:27 - whereas in web driver we don't but we
21:29 - can use
21:30 - a third party tool we can integrate
21:32 - third-party tools for the
21:34 - test results generation so now we will
21:37 - discuss some advantages and
21:38 - disadvantages of selenium
21:41 - advantages of selenium selenium is an
21:44 - open source tool
21:45 - and it supports multiple operating
21:47 - system and multiple browsers like chrome
21:50 - safari internet explorer and many more
21:52 - it also supports multiple programming
21:54 - languages like java python c
21:56 - ruby etc apart from all this we can also
22:00 - integrate the third party tools in
22:02 - selenium like
22:03 - apache pui auto i t sql and why do we
22:06 - need to integrate this we will
22:07 - understand that in the next slide
22:09 - here you see the disadvantages of
22:11 - selenium the first disadvantage is that
22:14 - it can not support window based
22:16 - application
22:17 - it can only support the web-based
22:19 - application
22:20 - but to overcome this disadvantage we can
22:23 - use a third-party tool that is the auto
22:25 - id or the seculi tool
22:27 - the second is that it cannot support
22:29 - test reports but if we integrate test ng
22:31 - or extend reports
22:33 - through that we can generate test
22:34 - reports
22:36 - third cannot support excel files now you
22:39 - must be thinking
22:40 - why do we use excel files we use excel
22:42 - files while we doing
22:43 - uh while we are doing the uh data driven
22:46 - testing
22:47 - we use it because suppose there is a
22:49 - username and a password field
22:51 - and there are many test data to it like
22:54 - for user name you have the admin for
22:56 - password you have admin at the rate one
22:58 - two three
22:58 - that's one test data the second test
23:00 - data third fourth so like this there can
23:02 - be many test data
23:03 - to check the expected and the output
23:05 - result we will match it and then we will
23:07 - pass the status as
23:09 - fail or pass so matching those and
23:12 - results and communicating the test
23:15 - scripts to the excel files that selenium
23:17 - cannot support that
23:19 - but through apache pui we can do it next
23:21 - we have less or no technical support in
23:23 - selenium because selenium is an open
23:25 - source tool so there is very less or
23:27 - technical support
23:28 - but there are many forums and
23:29 - communities on internet whereas
23:32 - wherever you can write your queries and
23:35 - you can
23:36 - get your answers then writing test cases
23:39 - are sometimes very time consuming
23:41 - because it is just a programming
23:43 - interface and not an ide
23:44 - see whereas if you go in other tools
23:46 - like the qtp and uft
23:48 - though those are id as well as the
23:50 - programming interface that means you can
23:53 - record also you can record also the test
23:56 - scripts that you have written whereas
23:58 - over here it is just a programming
24:00 - interface
24:00 - each and every command needs to be
24:02 - written so at times it becomes very
24:04 - time consuming so these are the
24:05 - disadvantages of selenium
24:07 - till now we have learned uh what is
24:09 - selenium why is it called as a framework
24:11 - we have learned the versions of selenium
24:13 - their components that drawbacks and why
24:16 - are we starting the uh web driver we
24:19 - have also learned what are the
24:20 - advantages and disadvantages so in the
24:22 - next tutorial in the next video we will
24:24 - learn
24:24 - the installation part of selenium and
24:27 - then we will start the
24:28 - implementation of selenium until then
24:30 - stay tuned and thank you please like
24:33 - share and subscribe

Cleaned transcript:

hello everyone this is varsha welcome to programming knowledge so in the previous tutorial we learned how does an automation tool work and how does it overcome the challenges in manual testing in this tutorial we will learn about the selenium the selenium framework why is it called as a framework and what are its advantages and disadvantages and its components so let's get started now here as an automation tool we will be studying the selenium webdriver for this you need to have some prior knowledge about the java and i have also explained what are the requirements of an automation tester i will give the link in the description box so when you go for an interview as an automation tester the very first question that comes to you is what is selenium see this is very important before mastering your skills in selenium you need to know what is selenium is at components as advantages and disadvantages and what are the different types of frameworks so we will be studying about selenium today so first let let us understand what is selenium selenium is a portable framework for testing web applications now here there are three terms to understand in this definition one is portable second is framework third is web application now what is portable portable in general it means to be easily transported or relocated that is the meaning of portable now what is framework framework we can divide the word framework into two parts frame plus work that is if we work in a frame like here you can see this house right this is a house frame or a basic structure or a supporting structure with the help of this structure we will be able to build a house so this is a framework so framework just gives us the basic structure which will add our code for greater functionality of the system now you must be thinking why do we use framework we use framework for reusability and we don't need to build things from scratch like suppose uh let us take up an example if you are making a dynamic web page and what will you do you will create folders like suppose index.html then style.css validate.php and etc see the problem here is not that you have to create folders but the problem is that you have to follow the same process again and again but if you use a framework we don't have to worry about that you just need to code your logic and that's it so that's framework framework just gives us the basic structure round which we will add our code for greater functionality of the system okay that's framework next we have web applications now there are basically three types of applications webbased application desktop application and mobile applications webbased applications are applications that can be accessed through browsers that is like the online forms the registration forms those are online based applications then we have the desktop application the desktop applications are the applications in which uh we we install in the local system for example the microsoft word excel powerpoint that's your desktop application mobile applications are application we install our mobile in our mobile through a play store we download some apps like whatsapp flipkart amazon those are mobile applications now selenium is a portable framework for testing only web applications selenium tests only web applications that is the application that can be accessed through browsers this also serves as a limitation but we will discuss that later so moving forward why selenium first thing we will choose selenium because of cost selenium is free it is open source as compared to the other tools like qtp and uft they are a paid the second point is flexibility selenium supports multiple programming languages like java c sharp python ruby and many more whereas if you go to some other tool like qtp it supports only vbscript next is the multiple browsers selenium supports multiple browsers like chrome firefox safari and many more whereas if you take qtp as a selenium tool it supports only chrome it also supports multiple os like windows linux apple and many more the main important point is that why are we using selenium because it supports parallel testing now let me tell you what is parallel testing the browser will execute the commands in two ways one is the parallel execution second is the cross browser execution now here you see on the screen parallel execution let us understand that first parallel executions are execution in which the test scripts opens all the browser at the same time and executes at the same time it's called as parallel execution here you can see there's a test script then you can see there are three browsers over here the first one is chrome the second is the firefox the third is the internet explorer so the test script will open all the browser at the same time and executed at the same time this is parallel execution we will explain uh i will explain it with an example just wait first understand what is cross browser execution cross browser execution let us take up an example like suppose uh in the test script over here it is written to insert some value in the drop down menu so this command will be first executed in the chrome browser when the execution is finished that is when the value is inserted in the drop down menu then the firefox browser will be open and the command to insert the value in the drop down box will be executed and when that command is executed then the internet explorer will be opened and the command will be executed so this is called cross browser execution that means the test script will open the brow chrome browser first after two three minutes when the execution is done it opens the firefox browser and then after some time it will open the internet explorer browser this is cross browse execution cross browser execution whereas in parallel execution if we have the same command to insert some value in the drop down menu then this command will be executed in all the browsers at the same time this is parallel execution and selenium supports parallel execution now let's move a little deeper towards the selenium uh we will study the selenium components which come prices of the selenium suite total we have the four components like the ide rc web driver and grid let us discuss ide first now the selenium ide is the most simplest tool in the entire suites of selenium it is nothing but an integrated development environment see earlier this ide was simply just a firefox extension and it's just a play around tool like you know you just play record functionality mainly it is useful prototyping and it is used only for demo purposes you cannot use ide for creating automation realtime projects because of its some limitations we will discuss those limitations later then the next component is the rc that is the selenium remote control it is used to write web application test in different programming languages it interacts with the browser with the help of the rc server through which we can interact to the web browser but this rc server got deprecated in the serenium version 2 and was replaced by the web driver in the selenium version 3. we will discuss that also why it happened the next component is the selenium webdriver the selenium webdriver is one of the most important component in the selenium suites it is an api to create and execute the test cases and it is a successor of rc basically the selenium webdriver is a collection of open source api and which will be used to automate the testing of a web application as i said we will study the selenium webdriver very deeply the next component is grid the selenium grid is used to run multiple test scripts simultaneously on the different browser and platforms and it supports parallel testing what is parallel testing i explained in the previous slide so because of a grid we can selenium supports parallel testing so these are the four components in selenium let us discuss the drawbacks of ide the first drawback selenium id is a mozzarella firefox plugin which means the tests can be recorded only in the firefox browser and not in any other browser second it's not suitable for dynamic web pages because it is just a prototyping tool which works well only with the static web pages and not with the dynamic web pages third data driven testing is not possible fourth cannot provide detailed test reports whereas rc the next version of ide can provide detailed reports then we cannot perform database testing through ide same because it is just a prototyping tool it is used for demo and it is not used for automating web applications due to these drawbacks rc came into picture now we have discussed the components of selenium let's see the versions of selenium here we have total four versions selenium version one selenium version two three and four now see here we will dig into some history of the selenium here the selenium version one we have the selenium ide rc plus grid so when jason huggins introduced the selenium the tool was called as a javascript program he called it as a javascript tester but he had one major issue that that is called as the same origin policy so now what is you must be thinking that what is the same origin policy this policy says that when javascript is executed in the domain it can access the web pages in that domain only and it can not access any other web page in the another domain for example suppose like a web page in the google like if you have a domain google.com okay so you can access the search bar the email the drive but that can be accessible but nothing can be accessible outside the google.com like if you want to access you yahoo uh mantra or amazon or any other domain that cannot be accessible definitely this is because of some security reasons so that is why this is called as a same origin policy now to overcome this policy remote control server was designed that is the selenium rc now the main reason to create the server was to trick the browser in believing that the selenium code in which we are running the scripts and the web application under test are in the same domain now here this same origin policy is solved uh so this was the version one of selenium where we have the id rc and grid where the same origin policy was solved in the version one then comes the selenium version two here we have the ide the web driver the rc and the grid see in 2007 when this uh when siemens stewart he invented this web driver now why did he invent this webdriver because the architecture of the rc was very complicated and in rc we need a separate server to talk to this like we need a separate server to talk to the browser so what he did is he removed the requirement of the separate server and this is the selenium version 2 where the web driver was introduced now why you must be thinking like why web driver and rc is introduced over here in the version two because the web driver was in the development phase and they were trying to implement it so that is the reason why we have uh in the selenium version too the ide the web driver the rc and the grid so in the selenium version 3 we had the ide webdriver and grid here you see that the rc was completely deprecated and we only have the web driver currently we have the selenium version 4 that have many new features that this is the new version of selenium 4 and now it is still in development recently there was a version known as alpha version was introduced and this version was mainly introduced because of complete w3c protocol adoption but this change in protocol isn't going to impact any of the user because uh many major of the browser drivers like the firefox the chrome driver and they all are included in the selenium 3.8 version which we are going to use and i i will be also explaining i'll be uh explaining some of the features of the selenium fourth version we will do that also like there are many ways to take screenshot in the selenium four version there are two to three methods so there are new apis added there are some ways to access the web elements also and there are some of the features that are very new introduced in the selenium version so mainly we will be studying about the selenium web driver now you must be thinking why selenium web driver now why are we studying the selenium web driver for that we need to know the drawbacks of the selenium rc now this is the architecture of the selenium rc this is the main reason why we are studying the web driver so the selenium rc is a test tool that allows you to write automated web applications in various programming languages like java python ruby so let's see the architecture of selenium rc first we need to write the test scripts in supported languages like java python or any other supported language but before writing these test scripts the major requirement in rc is the rc server so first you need to start the rc server before you run a core and this rc server is a separate application this rc uh is uh responsible for uh receiving the silliness command from your test scripts it interprets them and then reports the result back to the script now i use the word selenius over here now what is the selenius commands they are nothing but the commands that are written in the test scripts are called as cylinders commands in id and rc they are called as syringes commands now let's look at the browser interaction how the browser interacts the browser interactions happens through the rc server this rc server is a simple http post and http get request to communicate okay it uses the simple http posts and get request to communicate to the browser now how this communication happens this rc server acts like a proxy now you see there is a complete cycle starting from your test script then the rc the rc server injects the javascript in the web browser runs your commands takes back the results sends it to the rc server and then the result is displayed this whole cycle gets repeated for each and every command which is written in the test scripts this is how the test case gets executed in the rc server like the selenium rc tool this is how the whole cycle goes for each and every test scripts now everything was good but why was rc not good enough to run test scripts let me tell you why what are those drawbacks first time taken for execution of command is locker why because there is an additional server rc to so it executes each and every command is executed through the rc so it takes a lot of time for execution the api supported by rc are redundant and confusing because one command means many meaning it has a lot of meaning for one command like suppose there is a command called as click and click at so which one to use it's very confusing for the developers then there is complicated architecture rc consists of an additional server that acts as an middleman also the mobile apps cannot be tested using rc so these are the drawbacks of rc now let's see how does selenium web driver overcome these drawbacks for this we need to understand the architecture of the web driver so in the web driver architecture we have the test scripts the web browser and the web server however we do not have an additional server for communication like the rc server which we saw in the selenium rc which makes the architecture of the web driver very very easy because we don't have an additional server in this as you can see there are direct interactions with the web browser so as an advantage the selenium does not use an additional server and since there is no intermediate server there then the browser is controlled directly from the system due to this direct communication the overall cycle that we saw in the rc server was which was very indirect communication since this entire communication made the execution very slow so that's why we have the web driver in which the execution is faster than the rc server as you can see the execution time for command is shorter due to the simple architecture now you have seen the architecture of rc and webdriver let's compare the selenium rc and the selenium webdriver let's see in terms of api now rc is less object oriented api now the api and rc is very confusing and redundant for example we have commands like click or click at commands which one to use so it was very confusing for the developers and the direct browsers interpreted different commands also which was very challenging for the developers working on different browsers for different browsers browsers there were different commands so it was very challenging whereas for selenium webdriver it is very simpler api and it is very easier to use for example we have the click function to click on the web element we have the send key command to send text on very on any web element in the web page so it has a very simpler api now let's see in terms of speed selenium rc is slow in execution and in terms of speed web driver is faster in execution because in selenium rc we have the rc server whereas in webdriver there is no additional server next let's let's see in terms of browser support see rcn webdriver supports multiple browser but rc does not have support for html unit which is a headless browser now let's see what is this headless browser headless browser is a browser which does not have a ui this helps to make testing more faster because it does not need a real browser for testing it does not take time to load the web elements so and the headless browser is very quick so rc and webdriver this support multiple browser but rc does not support html unit that is the headless browser whereas the web driver supports the headless browser and it is and it makes the execution move faster next we have the uh comparison in terms of testing mobile applications selenium rc does not support testing of mobile applications whereas web drivers selenium web driver it supports testing of mobile applications there is an application name as apm through which we can test mobile applications so these were the difference between the rc and the web driver but every component has its own drawbacks so let us see the drawbacks of webdriver one cannot readily support new browsers but rc can and it does not have a builtin command for automatic generation of test results see uh it cannot readily support new browsers there are many new versions coming up so this challenge can be overcome second uh we don't have builtin commands for automatic generation of test results whereas in rc we have we can generate test results there's a proper format in rc whereas in web driver we don't but we can use a third party tool we can integrate thirdparty tools for the test results generation so now we will discuss some advantages and disadvantages of selenium advantages of selenium selenium is an open source tool and it supports multiple operating system and multiple browsers like chrome safari internet explorer and many more it also supports multiple programming languages like java python c ruby etc apart from all this we can also integrate the third party tools in selenium like apache pui auto i t sql and why do we need to integrate this we will understand that in the next slide here you see the disadvantages of selenium the first disadvantage is that it can not support window based application it can only support the webbased application but to overcome this disadvantage we can use a thirdparty tool that is the auto id or the seculi tool the second is that it cannot support test reports but if we integrate test ng or extend reports through that we can generate test reports third cannot support excel files now you must be thinking why do we use excel files we use excel files while we doing uh while we are doing the uh data driven testing we use it because suppose there is a username and a password field and there are many test data to it like for user name you have the admin for password you have admin at the rate one two three that's one test data the second test data third fourth so like this there can be many test data to check the expected and the output result we will match it and then we will pass the status as fail or pass so matching those and results and communicating the test scripts to the excel files that selenium cannot support that but through apache pui we can do it next we have less or no technical support in selenium because selenium is an open source tool so there is very less or technical support but there are many forums and communities on internet whereas wherever you can write your queries and you can get your answers then writing test cases are sometimes very time consuming because it is just a programming interface and not an ide see whereas if you go in other tools like the qtp and uft though those are id as well as the programming interface that means you can record also you can record also the test scripts that you have written whereas over here it is just a programming interface each and every command needs to be written so at times it becomes very time consuming so these are the disadvantages of selenium till now we have learned uh what is selenium why is it called as a framework we have learned the versions of selenium their components that drawbacks and why are we starting the uh web driver we have also learned what are the advantages and disadvantages so in the next tutorial in the next video we will learn the installation part of selenium and then we will start the implementation of selenium until then stay tuned and thank you please like share and subscribe
