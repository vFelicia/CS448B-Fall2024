With timestamps:

00:00 - hello guys welcome to the next video
00:02 - tutorial on Java programming for
00:04 - beginners in this video we will see how
00:07 - link list work in Java link lists are
00:12 - similar to array list in a sense that
00:16 - they can contain value or list of values
00:21 - but basically those those two things are
00:25 - totally different in terms of
00:27 - performance and in terms of usage
00:31 - also so let's see how we can uh use
00:34 - links lists in Java so first of all to
00:39 - declare a link list you need to uh use
00:43 - this keyword called link list and in
00:46 - angular bracket you give the data type
00:48 - of uh the list you want to make and then
00:52 - you give your variable name is equal to
00:54 - new instance of Link lists okay and for
00:59 - the first time when you write this code
01:02 - it'll give you little error because you
01:06 - haven't included this link list class
01:09 - which is there in java. utle so you just
01:13 - need to hover over link list and then
01:17 - you just need to import link list so
01:20 - just click this it will import link list
01:23 - class in your program now to add the
01:27 - values you can just do it something like
01:31 - this name do add and then you can add
01:36 - your name so for
01:41 - example some name you can
01:46 - add and some more name you can add like
01:50 - these and to access the values in the
01:53 - list you can use uh this for Loop or
01:58 - Advanced for loop as we can say and we
02:02 - can just use this something like this
02:06 - name is our list name and
02:09 - then you can just print this X and when
02:14 - you run this
02:16 - program you will be able to see your
02:18 - list something like this now in order to
02:21 - add some more values if you want to add
02:24 - the mo value at the top you can just use
02:28 - this list Dot
02:31 - add first and you can add value at the
02:35 - top of this list something like
02:39 - this okay if you want to add the value
02:44 - at the bottom you can do it something
02:47 - like this name dot
02:50 - add at the last
02:54 - okay so you can add this to the last for
02:59 - example example I want to add Zach at
03:02 - the last so whenever I run the program
03:06 - you see in my list at the top the name
03:10 - Jack is there which we added at the
03:12 - first add first using add first method
03:16 - and at the last of my list there is a
03:18 - name called sack which we added
03:22 - using add last method in a similar way
03:26 - you can
03:27 - remove first and last value by using
03:31 - remove method so
03:33 - name
03:36 - dot remove last it will remove the last
03:40 - value name
03:43 - dot remove
03:46 - first and it will remove the first value
03:50 - okay so once again run the
03:53 - program and it removes Jack and Zach
03:56 - from the list okay now if you want to uh
04:01 - remove all the data you can just write
04:05 - name dot clear and it will clear all the
04:09 - data from the list so something like
04:13 - this and nothing is
04:14 - printed if you want to
04:18 - uh get the size of this list you can
04:22 - just print it like
04:25 - this so name dot size
04:30 - and it will print the size of the list
04:33 - run the program and our size of the list
04:37 - is six because it contains six elements
04:43 - okay there are some other methods for
04:46 - example you want to add at some
04:49 - particular position you can add it also
04:53 - for example I can add
04:57 - name Dot
05:00 - add and add can be overloaded so you can
05:05 - give the index of the element for
05:09 - example I want to add at index
05:12 - one uh some element for
05:19 - example index one element okay and run
05:24 - the program and now at the index one I
05:27 - have this index one zero 1 right so you
05:32 - can add on the basis of index
05:35 - also in a similar way uh you can remove
05:39 - on the basis of index so name dot
05:47 - remove at index one it will remove
05:51 - Patrick because at first or zero index
05:55 - Jack is there and at first place or
05:57 - first index
05:59 - Patrick is there so now it's removed and
06:02 - we have only five engs okay so there are
06:08 - some other method like uh set and get
06:13 - method which you can use to set and get
06:16 - the values for example you are not happy
06:19 - with the name Patrick with small P at
06:22 - the starting you can change it
06:25 - to Patrick to the capital P so you can
06:31 - just write set at the index one because
06:35 - Patrick at is at the index one zero is
06:38 - this one Patrick is one and we will
06:41 - remove this otherwise it will remove the
06:43 - first index and then we can just
06:48 - write
06:49 - here Patrick with capital
06:53 - P okay and then semicolon and run the
06:58 - program
07:00 - and it
07:01 - adds Patrick with capital P so it change
07:05 - this name with this name so setting
07:09 - change the name or modifies your list at
07:13 - the particular
07:15 - index so there are some other method and
07:19 - which you can search by yourself you
07:21 - just need to write the name of the list
07:24 - and Dot and here comes all the method
07:27 - which you can use to to access the
07:31 - values to the list insert values in the
07:33 - list sort value there is a method called
07:36 - sort so you can sort it and you can even
07:40 - check if the uh list is empty or not and
07:46 - there are so many method which you can
07:49 - just use and see what suits your
07:53 - requirement so I hope you have enjoyed
07:55 - this video please RIT comment and
07:56 - subscribe and bye for

Cleaned transcript:

hello guys welcome to the next video tutorial on Java programming for beginners in this video we will see how link list work in Java link lists are similar to array list in a sense that they can contain value or list of values but basically those those two things are totally different in terms of performance and in terms of usage also so let's see how we can uh use links lists in Java so first of all to declare a link list you need to uh use this keyword called link list and in angular bracket you give the data type of uh the list you want to make and then you give your variable name is equal to new instance of Link lists okay and for the first time when you write this code it'll give you little error because you haven't included this link list class which is there in java. utle so you just need to hover over link list and then you just need to import link list so just click this it will import link list class in your program now to add the values you can just do it something like this name do add and then you can add your name so for example some name you can add and some more name you can add like these and to access the values in the list you can use uh this for Loop or Advanced for loop as we can say and we can just use this something like this name is our list name and then you can just print this X and when you run this program you will be able to see your list something like this now in order to add some more values if you want to add the mo value at the top you can just use this list Dot add first and you can add value at the top of this list something like this okay if you want to add the value at the bottom you can do it something like this name dot add at the last okay so you can add this to the last for example example I want to add Zach at the last so whenever I run the program you see in my list at the top the name Jack is there which we added at the first add first using add first method and at the last of my list there is a name called sack which we added using add last method in a similar way you can remove first and last value by using remove method so name dot remove last it will remove the last value name dot remove first and it will remove the first value okay so once again run the program and it removes Jack and Zach from the list okay now if you want to uh remove all the data you can just write name dot clear and it will clear all the data from the list so something like this and nothing is printed if you want to uh get the size of this list you can just print it like this so name dot size and it will print the size of the list run the program and our size of the list is six because it contains six elements okay there are some other methods for example you want to add at some particular position you can add it also for example I can add name Dot add and add can be overloaded so you can give the index of the element for example I want to add at index one uh some element for example index one element okay and run the program and now at the index one I have this index one zero 1 right so you can add on the basis of index also in a similar way uh you can remove on the basis of index so name dot remove at index one it will remove Patrick because at first or zero index Jack is there and at first place or first index Patrick is there so now it's removed and we have only five engs okay so there are some other method like uh set and get method which you can use to set and get the values for example you are not happy with the name Patrick with small P at the starting you can change it to Patrick to the capital P so you can just write set at the index one because Patrick at is at the index one zero is this one Patrick is one and we will remove this otherwise it will remove the first index and then we can just write here Patrick with capital P okay and then semicolon and run the program and it adds Patrick with capital P so it change this name with this name so setting change the name or modifies your list at the particular index so there are some other method and which you can search by yourself you just need to write the name of the list and Dot and here comes all the method which you can use to to access the values to the list insert values in the list sort value there is a method called sort so you can sort it and you can even check if the uh list is empty or not and there are so many method which you can just use and see what suits your requirement so I hope you have enjoyed this video please RIT comment and subscribe and bye for
