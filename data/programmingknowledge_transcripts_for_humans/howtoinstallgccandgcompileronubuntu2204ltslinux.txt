With timestamps:

00:00 - hey guys in this video I'm going to show
00:01 - you how you can add the support for GCC
00:04 - and G plus plus on your Ubuntu operating
00:07 - system
00:08 - so using GCC you can compile C programs
00:11 - and using G plus plus you can compile C
00:15 - plus plus programs on your Ubuntu
00:18 - operating system
00:19 - so let's see how we can add the support
00:21 - for both of these compilers so first of
00:25 - all you need to open your terminal you
00:27 - can open the terminal by pressing Ctrl
00:30 - alt t
00:32 - at the same time or you can go to
00:36 - Applications and then open the terminal
00:38 - from here also once the terminal is open
00:41 - you need to give these two commands so
00:44 - the first command is sudo apt
00:48 - update and then press enter and then
00:51 - give your ubuntu's password which you
00:54 - use to login to your Ubuntu operating
00:57 - system
00:59 - so what this command is going to do is
01:01 - it's going to update the package index
01:04 - on your Ubuntu operating system just
01:08 - wait for this command to finish so once
01:11 - this command is finished let me clear
01:13 - the terminal you can clear the terminal
01:15 - by giving this command clear and then
01:19 - press enter which is going to basically
01:21 - clear your terminal right so the First
01:24 - Command was sudo apt update once this
01:28 - command is finished the second command
01:30 - we need to give here is sudo apt install
01:34 - build Essentials so this command is
01:38 - going to install the build essential
01:40 - development package which automatically
01:43 - adds the support for GCC and G plus plus
01:47 - right so just give this command sudo apt
01:49 - install build essential and then press
01:51 - enter
01:52 - and then press y to continue and then
01:55 - press enter
01:57 - and just wait for this command to finish
02:00 - so once these two commands finished
02:02 - successfully let me clear the terminal
02:04 - and now you can give the g6c command or
02:08 - G plus plus command to test that
02:11 - so to test the version of GCC you have
02:15 - on your Ubuntu operating system you can
02:16 - just write this command GCC hyphen
02:20 - hyphen version and then press enter and
02:24 - it's going to give you some outputs like
02:26 - this right so it says GCC
02:29 - Ubuntu and then the version of GCC which
02:33 - we have installed is 11.3.0 similarly
02:37 - you can check the version of G plus plus
02:40 - so just write G plus plus hyphen hyphen
02:42 - version and it's also going to give you
02:46 - the version of G plus plus on your
02:49 - Ubuntu operating system
02:51 - now let's check whether this G CC
02:55 - command and G plus plus command is
02:58 - working fine on your Ubuntu operating
03:00 - system for this you can create a very
03:03 - simple see uh program and compile it and
03:07 - test it right so in order to create any
03:09 - file uh on your Ubuntu operating system
03:12 - you give the touch command but before
03:14 - that we are going to create a directory
03:17 - in which we want to create our C or C
03:19 - plus plus program so you can just write
03:22 - mkdir and the name of your folder in
03:26 - which you want to create your C or C
03:28 - plus plus program right
03:30 - I'm going to name my folder as work
03:34 - folder for example
03:36 - and what it's going to do is it's going
03:38 - to create this work folder right this
03:42 - work folder is created then you can go
03:45 - inside this work folder and then you
03:47 - create a c or C plus plus file here so
03:51 - just write touch and then the name of
03:54 - your file I'm going to name my file as
03:56 - let's say test dot C okay so test dot C
04:00 - and then press enter
04:03 - once you have created your zip file when
04:06 - you give this LS command you will be
04:09 - able to see the file name inside your
04:12 - work folder
04:13 - once the C file is created you can open
04:16 - this C file using any editor of your
04:20 - choice if you haven't installed any
04:22 - editor on your Ubuntu operating system
04:25 - you can open the C file with the default
04:28 - editor which is the G edit editor right
04:32 - so you can just write G edit here and
04:36 - then test dot C and then press enter
04:40 - which is going to open this C file in
04:43 - this graphical
04:45 - editor so this editor comes
04:49 - pre-installed in your Ubuntu operating
04:52 - system so if you don't have any editor
04:54 - just open it with your G edit uh
04:58 - application and then I'm going to just
05:01 - add a very simple hello world C program
05:05 - here you can find this program anywhere
05:07 - on on internet so I'm not going to uh
05:11 - write the full program here and then
05:14 - once you have your C program just save
05:16 - it and then close this file
05:19 - once you have your program in order to
05:21 - compile your C program you can give this
05:26 - command GCC and then hyphen o and then
05:31 - the name of your binaries so this is
05:35 - going to be the name of your binary file
05:38 - which means the output of your
05:41 - compilation right and then give the name
05:44 - of your
05:45 - C file so my C file name which I have
05:49 - created is test.c and in this test dot C
05:54 - I have my C program and I want to
05:57 - compile this so I have written GCC
05:59 - hyphen o test is the name of the output
06:04 - which I want to generate and this is the
06:07 - file which I want to compile press enter
06:10 - and once you have given the enter
06:15 - command
06:16 - once it's successful
06:19 - when you LS into your folder once again
06:22 - you will see that a new file is created
06:26 - here which is a binary file and this
06:29 - file you can run now right and it will
06:32 - give you the output of your program so
06:36 - you can just write dot forward slash and
06:39 - the name of your binary
06:41 - which is in our case test dot forward
06:44 - slash test press enter and it prints
06:47 - hello world because in our C program we
06:50 - were printing hello world
06:52 - so this is how you can compile and run
06:56 - your C program now let's say your C
06:59 - program contains some error so I'm going
07:01 - to just open my C file with G edit
07:05 - command so G edit test dot C
07:08 - and here let's say I will remove the
07:11 - semicolon here in every line of C you
07:15 - need this semicolon at the end but if
07:18 - you don't provide this semicolon that
07:21 - means your compiler will give you an
07:24 - error so when you give this GCC command
07:27 - to compile your C program
07:29 - when you press enter you can see
07:32 - it gives us error because compilation
07:36 - has failed and it says error expected
07:39 - semicolon before return here on this
07:43 - line it also shows you uh where can the
07:48 - possible error come from right so you
07:51 - need to fix that so you can fix that
07:53 - once again by going to the program
07:55 - adding this semicolon once again
07:58 - and let's say this time I edit my
08:01 - program and add some more exclamation
08:05 - marks here and then save and then close
08:09 - it right let me clear the terminal once
08:12 - again let me clear this terminal
08:16 - that command is clear right and then
08:19 - once again when you give the GCC hyphen
08:22 - o
08:23 - test and the name of your file and once
08:27 - that's compiled you can run it once
08:30 - again and this time you will see the new
08:33 - output with the hello world but we but
08:37 - we have added these Marks here so it
08:42 - will also print that right now let's
08:44 - create a very simple C plus plus program
08:47 - in order to test whether G plus plus
08:49 - command is working or not
08:51 - so for this first of all I'm in my home
08:54 - directory I'm going to create a new
08:57 - directory in which I will create my C
09:00 - plus plus file so I'm going to just
09:02 - write mkdir and then
09:06 - I'm going to give the name of my uh
09:09 - directory in which I want to create my C
09:11 - plus plus file right so I'm going to
09:13 - name my file as work
09:16 - CPP okay
09:19 - and then press enter and it's going to
09:21 - create this work CPP folder I'm going to
09:25 - CD into this work cpb folder
09:29 - and then here I'm going to create a new
09:32 - C plus file
09:34 - to create a new file on your Ubuntu
09:37 - operating system you can use the touch
09:39 - command just write touch and the name of
09:42 - your
09:43 - C plus plus file you can give test dot
09:48 - CPP name to your file or you can give
09:51 - test.cc to your C plus plus file both
09:55 - extension will work right
09:57 - so for now I'm going to name my file as
10:00 - test dot CPP and then press enter and
10:04 - when you Alice into this directory you
10:07 - can see this new file is created now in
10:11 - order to edit this file you can use any
10:14 - editor of your choice if you haven't
10:16 - installed any editor on your Ubuntu
10:19 - operating system you have a default
10:22 - editor called G edit so you can use GA
10:26 - edit so just write G edit and the name
10:29 - of your C plus plus file which is test
10:31 - dot CPP in our case and then press enter
10:34 - and it's going to open this file in the
10:37 - default editor which is called G edit
10:40 - here you can write a very simple C plus
10:42 - program
10:44 - I'm not going to show you how you can
10:47 - write a C plus plus program you can find
10:49 - this very simple program anywhere on
10:52 - internet right but let's say we want to
10:55 - compile this program what this program
10:57 - does it prints hello world right so once
11:01 - you have written the program save the
11:03 - file close it once you have closed the
11:07 - file in order to compile your C plus
11:11 - program you write G plus plus and then
11:16 - hyphen O then the name of your
11:19 - executable file I'm going to name my
11:21 - executable file same as the C plus plus
11:24 - file without any extension right so test
11:29 - so this will be the output of my
11:32 - compilation once this C plus plus file
11:35 - is compiled and then the name of your
11:38 - file which is
11:39 - test.cpp I'm going to press enter here
11:42 - which is going to compile my C plus
11:45 - program and once again when you LS into
11:48 - your directory you can see this new
11:50 - binary file which is created which is
11:53 - the output of my C plus plus compilation
11:57 - so
11:59 - once this file is created you can run
12:01 - your executable file or binary file by
12:04 - giving dot forward slash the name of
12:07 - your executable file or binary file
12:10 - press enter and it's going to print
12:12 - hello world here
12:14 - now let's say your file contains some
12:17 - error so I'm going to once again open my
12:20 - test.cpp file using G edit press enter
12:23 - and let's say I will remove this
12:26 - semicolon from here
12:28 - now you might already know that on every
12:32 - line in C plus plus you need to end that
12:35 - line with the semicolon if I remove the
12:38 - semicolon then I will get the
12:40 - compilation error right so I'm going to
12:42 - save my program and then I'm going to
12:45 - once again try to compile my C plus plus
12:48 - file using G plus plus command which is
12:51 - the same command which I used earlier
12:53 - right this time when I compile my
12:57 - program you can see it gives us error so
13:00 - this is called the compilation error and
13:03 - it will show you the approximate
13:06 - location where this error can come from
13:10 - in this case compiler already know where
13:13 - the error is
13:14 - and the error is on line 6 and
13:19 - here right so
13:21 - it even shows you where can the error be
13:25 - so you can fix that error so let's fix
13:28 - the error once again by going to the
13:31 - file adding the semicolons saving the
13:34 - file and then once again when you just
13:37 - compile your program this time you get
13:40 - no error and when you run your program
13:43 - you will get the output of your uh
13:49 - compilation right so this is how you can
13:52 - add the support for GCC and G plus plus
13:54 - on your Ubuntu operating system
13:56 - I hope you have enjoyed this video and I
13:58 - will see you in the next video

Cleaned transcript:

hey guys in this video I'm going to show you how you can add the support for GCC and G plus plus on your Ubuntu operating system so using GCC you can compile C programs and using G plus plus you can compile C plus plus programs on your Ubuntu operating system so let's see how we can add the support for both of these compilers so first of all you need to open your terminal you can open the terminal by pressing Ctrl alt t at the same time or you can go to Applications and then open the terminal from here also once the terminal is open you need to give these two commands so the first command is sudo apt update and then press enter and then give your ubuntu's password which you use to login to your Ubuntu operating system so what this command is going to do is it's going to update the package index on your Ubuntu operating system just wait for this command to finish so once this command is finished let me clear the terminal you can clear the terminal by giving this command clear and then press enter which is going to basically clear your terminal right so the First Command was sudo apt update once this command is finished the second command we need to give here is sudo apt install build Essentials so this command is going to install the build essential development package which automatically adds the support for GCC and G plus plus right so just give this command sudo apt install build essential and then press enter and then press y to continue and then press enter and just wait for this command to finish so once these two commands finished successfully let me clear the terminal and now you can give the g6c command or G plus plus command to test that so to test the version of GCC you have on your Ubuntu operating system you can just write this command GCC hyphen hyphen version and then press enter and it's going to give you some outputs like this right so it says GCC Ubuntu and then the version of GCC which we have installed is 11.3.0 similarly you can check the version of G plus plus so just write G plus plus hyphen hyphen version and it's also going to give you the version of G plus plus on your Ubuntu operating system now let's check whether this G CC command and G plus plus command is working fine on your Ubuntu operating system for this you can create a very simple see uh program and compile it and test it right so in order to create any file uh on your Ubuntu operating system you give the touch command but before that we are going to create a directory in which we want to create our C or C plus plus program so you can just write mkdir and the name of your folder in which you want to create your C or C plus plus program right I'm going to name my folder as work folder for example and what it's going to do is it's going to create this work folder right this work folder is created then you can go inside this work folder and then you create a c or C plus plus file here so just write touch and then the name of your file I'm going to name my file as let's say test dot C okay so test dot C and then press enter once you have created your zip file when you give this LS command you will be able to see the file name inside your work folder once the C file is created you can open this C file using any editor of your choice if you haven't installed any editor on your Ubuntu operating system you can open the C file with the default editor which is the G edit editor right so you can just write G edit here and then test dot C and then press enter which is going to open this C file in this graphical editor so this editor comes preinstalled in your Ubuntu operating system so if you don't have any editor just open it with your G edit uh application and then I'm going to just add a very simple hello world C program here you can find this program anywhere on on internet so I'm not going to uh write the full program here and then once you have your C program just save it and then close this file once you have your program in order to compile your C program you can give this command GCC and then hyphen o and then the name of your binaries so this is going to be the name of your binary file which means the output of your compilation right and then give the name of your C file so my C file name which I have created is test.c and in this test dot C I have my C program and I want to compile this so I have written GCC hyphen o test is the name of the output which I want to generate and this is the file which I want to compile press enter and once you have given the enter command once it's successful when you LS into your folder once again you will see that a new file is created here which is a binary file and this file you can run now right and it will give you the output of your program so you can just write dot forward slash and the name of your binary which is in our case test dot forward slash test press enter and it prints hello world because in our C program we were printing hello world so this is how you can compile and run your C program now let's say your C program contains some error so I'm going to just open my C file with G edit command so G edit test dot C and here let's say I will remove the semicolon here in every line of C you need this semicolon at the end but if you don't provide this semicolon that means your compiler will give you an error so when you give this GCC command to compile your C program when you press enter you can see it gives us error because compilation has failed and it says error expected semicolon before return here on this line it also shows you uh where can the possible error come from right so you need to fix that so you can fix that once again by going to the program adding this semicolon once again and let's say this time I edit my program and add some more exclamation marks here and then save and then close it right let me clear the terminal once again let me clear this terminal that command is clear right and then once again when you give the GCC hyphen o test and the name of your file and once that's compiled you can run it once again and this time you will see the new output with the hello world but we but we have added these Marks here so it will also print that right now let's create a very simple C plus plus program in order to test whether G plus plus command is working or not so for this first of all I'm in my home directory I'm going to create a new directory in which I will create my C plus plus file so I'm going to just write mkdir and then I'm going to give the name of my uh directory in which I want to create my C plus plus file right so I'm going to name my file as work CPP okay and then press enter and it's going to create this work CPP folder I'm going to CD into this work cpb folder and then here I'm going to create a new C plus file to create a new file on your Ubuntu operating system you can use the touch command just write touch and the name of your C plus plus file you can give test dot CPP name to your file or you can give test.cc to your C plus plus file both extension will work right so for now I'm going to name my file as test dot CPP and then press enter and when you Alice into this directory you can see this new file is created now in order to edit this file you can use any editor of your choice if you haven't installed any editor on your Ubuntu operating system you have a default editor called G edit so you can use GA edit so just write G edit and the name of your C plus plus file which is test dot CPP in our case and then press enter and it's going to open this file in the default editor which is called G edit here you can write a very simple C plus program I'm not going to show you how you can write a C plus plus program you can find this very simple program anywhere on internet right but let's say we want to compile this program what this program does it prints hello world right so once you have written the program save the file close it once you have closed the file in order to compile your C plus program you write G plus plus and then hyphen O then the name of your executable file I'm going to name my executable file same as the C plus plus file without any extension right so test so this will be the output of my compilation once this C plus plus file is compiled and then the name of your file which is test.cpp I'm going to press enter here which is going to compile my C plus program and once again when you LS into your directory you can see this new binary file which is created which is the output of my C plus plus compilation so once this file is created you can run your executable file or binary file by giving dot forward slash the name of your executable file or binary file press enter and it's going to print hello world here now let's say your file contains some error so I'm going to once again open my test.cpp file using G edit press enter and let's say I will remove this semicolon from here now you might already know that on every line in C plus plus you need to end that line with the semicolon if I remove the semicolon then I will get the compilation error right so I'm going to save my program and then I'm going to once again try to compile my C plus plus file using G plus plus command which is the same command which I used earlier right this time when I compile my program you can see it gives us error so this is called the compilation error and it will show you the approximate location where this error can come from in this case compiler already know where the error is and the error is on line 6 and here right so it even shows you where can the error be so you can fix that error so let's fix the error once again by going to the file adding the semicolons saving the file and then once again when you just compile your program this time you get no error and when you run your program you will get the output of your uh compilation right so this is how you can add the support for GCC and G plus plus on your Ubuntu operating system I hope you have enjoyed this video and I will see you in the next video
