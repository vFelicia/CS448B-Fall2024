With timestamps:

00:00 - alright guys welcome back to our YouTube
00:01 - channel and welcome to this video this
00:04 - is the part 8 of the Lara blog for
00:06 - beginners tutorial and in this video
00:09 - we're going to discuss how to fetch data
00:13 - with Luke rent and also we're going to
00:16 - populate our database by use by using
00:19 - the tinker command and in order for us
00:23 - to do that let's open or integrate the
00:25 - terminal of our atom editor so in order
00:29 - for us to do that is we have to press
00:31 - shift alt and T and there you go we have
00:36 - opened our integrated terminal and in
00:39 - here we can type we can run the tinker
00:42 - commands from here and also we can
00:45 - populate our database by using the
00:48 - tinker so all we have to do now is type
00:52 - in PHP artisan and then tinker and as
00:58 - you can see we have here the brackets
01:00 - that let us know that we are inside the
01:03 - tinker program and from here we can
01:07 - directly work with our database and
01:09 - directly work with our models so for now
01:14 - let's bring in the post model so app and
01:18 - backslash and then post and then we can
01:22 - have a function in here so for example
01:26 - count and it will return zero which
01:29 - means we don't have yet a post in our
01:33 - post table or post model so now let's
01:38 - create a new instance of our post so in
01:40 - order for us to do that is define the
01:42 - variable dollar sign post and then equal
01:46 - sign and then our in model and then new
01:51 - app backslash and then post then
01:56 - semicolon
01:57 - and make sure you have the backslash
02:00 - instead of forward slash so this will be
02:03 - the backslash and enter so now we have a
02:10 - instance or an instance of our post
02:13 - so it is being saved in our memory and
02:16 - by that we can use that in order for us
02:21 - to move forward and add a post to our
02:24 - post table so now we can use the post
02:27 - instance and then set the title for our
02:31 - first post so let's just make it the
02:35 - title into post one and then semicolon
02:39 - there we go and then of course for our
02:42 - post body let's just do the same for our
02:47 - post body so this is this is the post
02:54 - body semicolon and then there you go
02:59 - this is the post body and then after
03:02 - that one we can save this save the
03:07 - information for our title and our body
03:10 - so post and then save and then enter and
03:16 - it returned it returns true which means
03:20 - that we have saved a certain post to our
03:24 - post table now if we try to check our
03:27 - database inside our PHP myadmin we can
03:31 - see here that we have a post and of
03:33 - course we have the first post which is
03:37 - which has the idea of one that I tell we
03:40 - have set this into post one and of
03:43 - course we have set the body content this
03:47 - is the post body and it also have the
03:51 - created at and updated at fields which
03:54 - is automatically populated for us so
03:57 - let's try to add another one and first
04:00 - let us create a new instance of our post
04:05 - model so new and then app backslash and
04:09 - then post this will create another
04:12 - instance and then we're going to set the
04:17 - title for this this is post two and the
04:24 - post body also we need
04:27 - to set a value for this this is the
04:32 - second post body there you go and we
04:39 - will say finally we will save this
04:42 - values so our database so it returns
04:49 - true again which means that we have now
04:53 - have to post in our post table in our
04:57 - database so refresh here and then you
05:02 - can see we have two posts or two records
05:06 - of our post table so post two and then
05:10 - this is the second post body with D
05:12 - created at and updated at fields now if
05:16 - you try to go back into our project and
05:20 - if you want to add a functionality here
05:23 - for our create read update and delete
05:26 - we're going to need to have different
05:29 - functions and different routes in our
05:32 - laravel project so let's go back to our
05:35 - code editor and try to edit our post
05:39 - controller let us open our post
05:44 - controller and as you can see here it is
05:47 - pretty much empty for now so in order
05:51 - for us to add the functionality for our
05:53 - create read update and delete I think
05:56 - we're gonna need functions or several
05:58 - functions from here so we need the first
06:02 - one is index so it is just a way of
06:05 - listing all our posts from our database
06:07 - another one is create and I'm just going
06:12 - to type it in here you don't need to
06:15 - follow this time so store to actually
06:19 - save our data into our database and then
06:23 - we have the function to add it and also
06:27 - we have a function that should be
06:30 - updating our data and of course we have
06:34 - also show and of course the last one too
06:40 - delete our record from our database so
06:45 - we could actually create this functions
06:49 - manually but we'll try to create this by
06:55 - using some commands so I think I haven't
06:58 - shown you this yet so I think I just
07:02 - have to delete this post controller for
07:06 - now and generate another one so I have
07:15 - deleted the post controller for now and
07:20 - I'm going to generate it again by using
07:26 - some commands so in order for us to do
07:28 - that let's run the command PHP artisan
07:33 - and then make and then controller and of
07:42 - course the name of our controller is
07:44 - post controller with s post controller
07:48 - and then we're just gonna add the
07:51 - resource keyword here and then we're
07:54 - just going to wait for a few seconds to
07:56 - allow the generation of our controller
08:00 - so there you go controller generate that
08:04 - are created successfully and if we try
08:06 - to open up the new post controller we
08:10 - can see that all the functions that we
08:13 - have listed earlier has been generated
08:17 - successfully so we have here the
08:19 - function index so display a listing of
08:22 - the resource and some of the functions
08:25 - here don't need or doesn't need the
08:30 - parameters but there are also functions
08:33 - that need the parameter so say for
08:38 - example this one we have D create so
08:41 - show the form for creating a new
08:43 - resource and then the store has this
08:46 - parameter request and we're going to
08:50 - define some of the logic later on in
08:54 - this function and also we have the show
08:56 - so it has the ID that will identify the
09:01 - record that we want to show here and
09:03 - also we have the edit the same thing it
09:05 - has the ID parameter and also we have
09:09 - the update that requires two parameters
09:13 - the request and of course the ID of the
09:16 - resource and of course the destroy
09:19 - function that will enable us to delete
09:23 - based on the ID of the resource so now
09:27 - that we have laid out all these
09:29 - functions in our controller we need to
09:31 - have a route for each functions right so
09:38 - we're going to add or we're going to go
09:40 - to the web page P of our routes and as
09:46 - you can see we have here the route that
09:49 - we have currently and if you try to go
09:51 - to our command or our terminal let's try
09:54 - to list our routes for now so PHP
09:58 - artisan and then route and then list so
10:04 - these are the currently generated routes
10:08 - for our project so as you can see we
10:10 - have here drag in the home the password
10:14 - the register and all other functions or
10:17 - all other routes that we have set and
10:20 - now let's try to add a route for all our
10:26 - functions because it is a kind of pain
10:29 - in the ass if you try to generate
10:32 - individual routes for our functions
10:37 - right so let's try to generate route for
10:40 - all our resource in our post controller
10:44 - so route and then resource and of course
10:51 - the name will be post and of course
10:58 - the name of our controller which is post
11:01 - controller and then we're going to save
11:05 - this for now save and then let's go back
11:08 - to our terminal and try to run another
11:10 - one PHP artisan and then route and then
11:21 - list so let's try to find our resource
11:27 - or generate that routes for our post
11:30 - controller so as you can see we have
11:32 - here all the the routes related to our
11:36 - post controller so we have here the post
11:39 - store post index post create post show
11:44 - and of course post update and all other
11:48 - functions or all other routes that we
11:51 - that we need in our post controller and
11:54 - I think that's it for this particular
11:57 - video and in the next video we're going
11:59 - to continue working on with our fetching
12:01 - data with Lucan so we're working with
12:03 - the create read update and delete so see
12:08 - you in the next video

Cleaned transcript:

alright guys welcome back to our YouTube channel and welcome to this video this is the part 8 of the Lara blog for beginners tutorial and in this video we're going to discuss how to fetch data with Luke rent and also we're going to populate our database by use by using the tinker command and in order for us to do that let's open or integrate the terminal of our atom editor so in order for us to do that is we have to press shift alt and T and there you go we have opened our integrated terminal and in here we can type we can run the tinker commands from here and also we can populate our database by using the tinker so all we have to do now is type in PHP artisan and then tinker and as you can see we have here the brackets that let us know that we are inside the tinker program and from here we can directly work with our database and directly work with our models so for now let's bring in the post model so app and backslash and then post and then we can have a function in here so for example count and it will return zero which means we don't have yet a post in our post table or post model so now let's create a new instance of our post so in order for us to do that is define the variable dollar sign post and then equal sign and then our in model and then new app backslash and then post then semicolon and make sure you have the backslash instead of forward slash so this will be the backslash and enter so now we have a instance or an instance of our post so it is being saved in our memory and by that we can use that in order for us to move forward and add a post to our post table so now we can use the post instance and then set the title for our first post so let's just make it the title into post one and then semicolon there we go and then of course for our post body let's just do the same for our post body so this is this is the post body semicolon and then there you go this is the post body and then after that one we can save this save the information for our title and our body so post and then save and then enter and it returned it returns true which means that we have saved a certain post to our post table now if we try to check our database inside our PHP myadmin we can see here that we have a post and of course we have the first post which is which has the idea of one that I tell we have set this into post one and of course we have set the body content this is the post body and it also have the created at and updated at fields which is automatically populated for us so let's try to add another one and first let us create a new instance of our post model so new and then app backslash and then post this will create another instance and then we're going to set the title for this this is post two and the post body also we need to set a value for this this is the second post body there you go and we will say finally we will save this values so our database so it returns true again which means that we have now have to post in our post table in our database so refresh here and then you can see we have two posts or two records of our post table so post two and then this is the second post body with D created at and updated at fields now if you try to go back into our project and if you want to add a functionality here for our create read update and delete we're going to need to have different functions and different routes in our laravel project so let's go back to our code editor and try to edit our post controller let us open our post controller and as you can see here it is pretty much empty for now so in order for us to add the functionality for our create read update and delete I think we're gonna need functions or several functions from here so we need the first one is index so it is just a way of listing all our posts from our database another one is create and I'm just going to type it in here you don't need to follow this time so store to actually save our data into our database and then we have the function to add it and also we have a function that should be updating our data and of course we have also show and of course the last one too delete our record from our database so we could actually create this functions manually but we'll try to create this by using some commands so I think I haven't shown you this yet so I think I just have to delete this post controller for now and generate another one so I have deleted the post controller for now and I'm going to generate it again by using some commands so in order for us to do that let's run the command PHP artisan and then make and then controller and of course the name of our controller is post controller with s post controller and then we're just gonna add the resource keyword here and then we're just going to wait for a few seconds to allow the generation of our controller so there you go controller generate that are created successfully and if we try to open up the new post controller we can see that all the functions that we have listed earlier has been generated successfully so we have here the function index so display a listing of the resource and some of the functions here don't need or doesn't need the parameters but there are also functions that need the parameter so say for example this one we have D create so show the form for creating a new resource and then the store has this parameter request and we're going to define some of the logic later on in this function and also we have the show so it has the ID that will identify the record that we want to show here and also we have the edit the same thing it has the ID parameter and also we have the update that requires two parameters the request and of course the ID of the resource and of course the destroy function that will enable us to delete based on the ID of the resource so now that we have laid out all these functions in our controller we need to have a route for each functions right so we're going to add or we're going to go to the web page P of our routes and as you can see we have here the route that we have currently and if you try to go to our command or our terminal let's try to list our routes for now so PHP artisan and then route and then list so these are the currently generated routes for our project so as you can see we have here drag in the home the password the register and all other functions or all other routes that we have set and now let's try to add a route for all our functions because it is a kind of pain in the ass if you try to generate individual routes for our functions right so let's try to generate route for all our resource in our post controller so route and then resource and of course the name will be post and of course the name of our controller which is post controller and then we're going to save this for now save and then let's go back to our terminal and try to run another one PHP artisan and then route and then list so let's try to find our resource or generate that routes for our post controller so as you can see we have here all the the routes related to our post controller so we have here the post store post index post create post show and of course post update and all other functions or all other routes that we that we need in our post controller and I think that's it for this particular video and in the next video we're going to continue working on with our fetching data with Lucan so we're working with the create read update and delete so see you in the next video
