With timestamps:

00:00 - hello and welcome to programming
00:01 - knowledge so in today's video you'll be
00:03 - learning about how to use matplotlib
00:06 - library to plot different types of
00:09 - graphs so we'll start with the simple
00:12 - plot so I'll be using pichumani for this
00:18 - video series so if you are not installed
00:20 - PyCharm I will be giving the link to the
00:23 - video to show how to install pi jam on
00:26 - your Windows or Mac machine
00:29 - so I will open PyCharm ID using
00:32 - spotlight
00:35 - ok so we'll create a new project
00:39 - we will give on project name as met
00:42 - matplotlib
00:46 - tutorial or toad and
00:49 - we'll select project interpreter so we
00:53 - will select new environment using
00:54 - virtual M you can also select peepin or
00:57 - Wanda but I will select virtual M and
00:59 - you can change the location if you want
01:02 - the base interpreter is Python 3.6 and
01:04 - will click on create
01:06 - it is creating the virtual environment
01:08 - for our project if we use the tip you
01:13 - can see the project structure we have
01:15 - the virtual environment directory so in
01:19 - the bottom you can create on click on
01:21 - terminal tab and it will open the
01:23 - terminal so here we will type beep
01:26 - installs matplotlib
01:30 - and press ENTER so this will download
01:34 - the matplotlib library and we will
01:36 - install on our machine
01:39 - so we'll wait till it get downloaded in
01:42 - the store
01:48 - so while it is downloading let me show
01:51 - you the metro T laboratory and what is
01:55 - the use case object so we'll open a new
01:57 - window of Chrome
01:59 - we will type matplotlib
02:06 - let it load so you can see the
02:09 - matplotlib rarey is a Python
02:12 - two-dimensional plot in library which
02:14 - produces quality figures in a variety of
02:17 - formats so you can also use it with
02:21 - Python scripts and also with Jupiter
02:24 - notebook
02:25 - so it is derived from a MATLAB
02:29 - my gem is a multi paradigm numerical
02:32 - computing environment
02:35 - so we can go in examples so here you can
02:39 - see the different are graphs they are
02:42 - provided with extract bar graphs
02:44 - horizontal graph there are n number of
02:48 - graphs here so each one has a
02:51 - demo code with that
02:53 - so if you want you can take a look at it
02:56 - so these are scatter plots
02:59 - we have bar graphs
03:09 - I'll be using our simple plot to show
03:11 - you how to use Matlock clip library
03:14 - let me click on particular
03:20 - you can see the percentages so
03:22 - horizontal bar chart so they have given
03:25 - ask the code also
03:27 - so this code looks little bit advanced
03:31 - so we'll start from the basics and as
03:34 - soon as we learn more about Matt
03:37 - floaties I'll be showing how to use it
03:40 - to produce complex charts
03:48 - so you can also create pie charts
03:51 - you can go through the gallery if you
03:54 - are interest rating this
04:02 - so it is still downloading
04:11 - so it has downloaded and installed so
04:15 - you can see the it is install different
04:18 - packages
04:19 - along with the Metro teeth like numb by
04:24 - six you can see the matplotlib in the
04:27 - end so you can click on our project for
04:32 - body structure and new and click on
04:35 - Python file so we give you the name has
04:40 - met
04:43 - night tooth one will is made up met
04:46 - totally tutorial one so click enter and
04:50 - as you can see it has opened the file
04:54 - and here we can now import the package
04:58 - so we'll use from
05:01 - matplotlib
05:03 - type input pipe lot
05:08 - and we can use alias as dat so I know
05:13 - you want to use a pipe lot we call as
05:16 - vit and the name of the function which
05:18 - we want to use
05:20 - so now we have imported
05:23 - pipe lot package so
05:30 - we'll
05:32 - import our data so here we have a list
05:36 - so I have put as 3 ished sound share
05:39 - with on the list with you it are not PR
05:43 - fine so this contains the ears so I have
05:49 - copied the data from all these
05:50 - particular website cause fiddlestick
05:52 - times
05:53 - so in here you can see the China versus
05:56 - India population from 1950s to - limited
06:02 - year like 2100 so I
06:06 - have copied it from 1950s to 2013 so
06:14 - you can see it is from 1950s so China
06:19 - has like
06:21 - 554 millions and 2130 here 1.4 billion
06:28 - in or India has 1.5 billion so I had
06:32 - copied that data and put it in the list
06:34 - in Python so here contains 1952 - on 30
06:39 - so I'll copy this year least into our
06:43 - metric torial 1py
06:45 - in population China so these floating
06:51 - point values are billions so keep in
06:54 - mind I not take on the whole number as a
06:56 - storm scaled it down to the decimal
06:59 - point to
07:04 - so I will use only two population china
07:06 - here so we plot this saw data using PI
07:10 - plot package so we imported decades
07:13 - using ELT dot plot so this is a function
07:17 - so inside this function will pass the
07:20 - x-axis and y-axis values so X is axis
07:24 - would be here comma Y axis will be
07:27 - population of China
07:28 - okay so after this if you have to show
07:32 - it to the screen so you will use PID
07:34 - dots show function to display it on the
07:37 - desktop so
07:39 - when you run this you will see this
07:42 - figure 1 so this is a simple plot so in
07:47 - x-axis you can see the age and in y axis
07:49 - you can see the scale of the population
07:54 - so you can use the pen pen function to
07:58 - pan or
08:03 - you can use the magnifier to magnify and
08:07 - see the executives of the
08:10 - plot and you can use these arrow keys to
08:13 - undo and redo so if you can you want to
08:16 - go back you can use undo if you want to
08:19 - get one step back back you can use redo
08:21 - so I think this is about
08:24 - configuration of subplot so also we can
08:28 - click on this save to save the file as
08:32 - PNG save the plot has PNG format image
08:35 - and you can also use home to bring it
08:38 - back to the original position so
08:41 - we want to add x-axis and y-axis
08:45 - label so we can do that using vit dot X
08:49 - label so this will display the actual
08:52 - label values so we'll pass the string as
08:55 - here
08:58 - and for the Y label will use PRT dot y
09:02 - label in the pan this is will you
09:05 - population
09:10 - in China
09:12 - in billions
09:15 - okay so we
09:18 - make here is I capital you will run now
09:22 - and you can see the label is put up and
09:26 - in x-axis we have here in y-axis Villa
09:29 - population
09:33 - we also add title but first I will
09:38 - change the population you can also add
09:41 - title so for that we will use PID dot
09:43 - title function
09:47 - so inside this you can pass the screen
09:49 - as
09:51 - population of
09:53 - China
09:57 - so let me run up in this program
10:02 - you can see the title has come up as
10:04 - population of China
10:08 - now we will
10:10 - import our
10:12 - another leash that is population of
10:14 - India we copy and paste it in our
10:17 - matplotlib tutorial one fine I think so
10:22 - now
10:24 - it'll pass this
10:26 - population India list to the plot
10:30 - you cannot give an error equal actually
10:33 - print it but you will be not enough good
10:35 - for me
10:39 - so the better option would be to print
10:43 - it separately using parity dot dot pass
10:46 - here as a first argument comma
10:50 - population of India a second argument
10:54 - now we will change the title as
10:56 - population of China versus India
11:03 - now we'll run this so you can see
11:09 - so
11:10 - you cannot figure out which one is what
11:13 - but according to our previous
11:17 - graph you can see that blue is China and
11:21 - orange is so India so
11:25 - you know which one is we what we can use
11:29 - legend function so for that we will use
11:31 - vit dot legend
11:33 - so inside that will pass
11:37 - the values of the particular line as a
11:41 - summation so the first string would be
11:45 - population of China so you could take
11:49 - China
11:59 - , next will be India so good string is
12:04 - India insane and now run
12:07 - so you can see in the upper left corner
12:11 - you know blue for China and orange for
12:13 - India
12:16 - so this is carried out using the
12:19 - function legend
12:21 - so this is little bit term it can create
12:26 - problems in longer run if you are having
12:28 - more than one or two countries like
12:31 - population of Brazil or population of
12:33 - Russia for example so if we have like 10
12:37 - 15 then the orderly mismatch if you are
12:41 - working on lot of countries so for that
12:44 - the better option would be
12:47 - using our attribute in da not function
12:51 - so I remove this I'll copy this China
12:57 - and now in the plot function will give
12:59 - an attribute as label equal to we pass
13:03 - the string at China
13:05 - and will pass India in the
13:09 - second plot as label equal to
13:12 - label equal to not India
13:16 - so what this will do it will do the same
13:19 - thing is what legend was doing using the
13:22 - leashed
13:24 - so instead of passing through legend we
13:27 - are passing it through plot
13:29 - so this is how you create a simple plot
13:32 - in this video I will be showing you how
13:34 - to use different format strings to
13:37 - customize the plot and also I will be
13:41 - showing you how to use different styles
13:44 - provided by the matplotlib library we'll
13:46 - run our current plot so you
13:50 - can see it is containing only the China
13:54 - and India population graph and you can
13:56 - see the
13:58 - India is so arranged in China it's blue
14:03 - color and India is slowly increasing
14:06 - from 1950s to 120 and at 2000 some poo
14:12 - after 2020 it will intersect the China
14:15 - population
14:16 - so you can use a
14:19 - function provided by my Scottie I
14:21 - already called grid so we can type PA t
14:25 - dot grid and if we run a program now
14:32 - we can see that our graph contains
14:35 - agreed now so this is very much easier
14:38 - for us to understand at what time or at
14:42 - what period both the lines of the
14:44 - population will intersect each other so
14:46 - that is around to around 23 and you can
14:49 - also see it would be more than 1.4
14:51 - billion
14:53 - so at 120
14:56 - China is ahead of India as per the data
14:59 - data
15:00 - so India is somewhere around one point
15:03 - below one point four and China is around
15:06 - 1.45 something million
15:09 - okay
15:16 - so now I will go in my prototype website
15:20 - and here you can see my prototype lot
15:22 - dot plot so in here if you go down you
15:25 - can see the format string so don't worry
15:30 - about the URL I will give this URL in
15:32 - the description of the video so format
15:34 - string contains first marker and in line
15:37 - and in color so
15:39 - so the other combination will also be
15:43 - working but it parsing of them might be
15:47 - ambiguous that is sometime it might be
15:50 - error-prone so it's better to use the
15:53 - given format string that is marker in
15:57 - the line in the color
15:58 - so so in the markers we can see we have
16:02 - point marker etc and pixel circle
16:07 - so the characters which are provided we
16:10 - can use for the particular markers and
16:13 - also for line style you can see solid
16:15 - line styles this is the default that is
16:17 - only one - and four - line style we have
16:20 - to provide two dashes so by default
16:23 - solid line style is
16:25 - included by my plotly
16:28 - so we'll go in our plot and now we can
16:33 - add the format string in our plot
16:35 - function so for that million comma and
16:38 - inside the comma we can use you know any
16:41 - neighborhood comma you can give the
16:42 - format string so for that we'll put
16:44 - first line style so that is dashed and
16:47 - now we'll run so here you can see in
16:49 - China's line dotted line it is given as
16:54 - a dashed so that is due to the form in
16:55 - which here we have included so let me
16:59 - close it and
17:01 - for
17:04 - and
17:05 - now we'll go in the website and you can
17:09 - see there are different line styles so
17:12 - we can use - and dot for a start line
17:16 - style so for India we'll put one comma
17:19 - in the plot function and inside that
17:21 - will you type in now into invitamos - in
17:27 - dot
17:30 - so India is desktop so we'll run now
17:36 - and you can see the India is a plotted
17:39 - in our desk dot line style format
17:47 - and we have one more format so that is a
17:55 - that is : so in which dotted lines lines
17:59 - tall is included so
18:01 - we'll make the China is
18:05 - default format it is a solid line and
18:08 - for India we'll make it as : so this
18:11 - will print
18:12 - the
18:15 - dotted line so here you can see the
18:19 - China is now solid and for India we have
18:22 - dotted
18:24 - so now we will include the different
18:27 - colors so for that will go in the web
18:31 - site
18:33 - and we'll go down and here you can see
18:38 - in a color step so there are different
18:40 - keywords given for black we can use K
18:43 - for wide you can use W for red we can
18:45 - use R so
18:48 - after the line style you will have the
18:51 - keyword for the color for China will
18:53 - give it as R because as you know as you
18:57 - all know it contains already in the
18:59 - colorful color of the flag and for India
19:02 - we'll go with green that is G keywords
19:05 - so here you can see the red is red line
19:07 - is plotted for China and for India tea
19:10 - screen
19:13 - now will uh make it dashed for India the
19:17 - line style and for China will now
19:20 - include our marker so far they will go
19:22 - and top and you can see different
19:24 - markers we are given given as point
19:27 - marker circle marker so we use circle
19:29 - marker that is a Oh key word so we
19:32 - include oh it's alphabet Oh small
19:35 - alphabet before the lines turn and will
19:38 - run and as you can see the little
19:41 - different data points in the data set of
19:43 - China population is are now populated
19:46 - with the
19:47 - regular dot on the line style
19:57 - and there are other markers also you can
20:01 - try with for India I will use different
20:05 - markers so you can go and see which one
20:07 - you can use okay we'll use star marker
20:10 - so further we have include star keyword
20:12 - so we'll put star it is s tricks
20:16 - and we'll run
20:20 - and as you can see the
20:23 - data points in the data set of India is
20:26 - now plotted with a strict symbol
20:30 - so this is the one way we can use the
20:33 - format string another one is by using
20:36 - the labels or the attributes so we can
20:41 - put comma and we can type marker so mark
20:44 - are equal to which marker we have to
20:46 - talk I use so the key word we have to
20:48 - put in the string format so I'll put in
20:51 - inverted commas the keyboard oh and then
20:54 - the line style we won't include so type
20:57 - line style equal to in the inverted
20:59 - commas include - or
21:03 - double - for a dashed line and the third
21:07 - one is color so for yep color equals to
21:11 - in the inverted commas include our four
21:15 - four red color so
21:19 - we'll remove the earlier for midstream
21:21 - and same way we now you'll run and as
21:25 - you can see the it produces the same
21:27 - result as earlier and you can see the
21:31 - code is little more readable due to the
21:34 - segregation of
21:37 - the marker line style and color in two
21:39 - different attributes so we'll do the
21:42 - same thing for India for marker we'll
21:44 - put a
21:45 - star keep in mind to include it in the
21:49 - inverted commas because it's a string so
21:53 - for Martha will put star and for line
21:55 - style we'll equals to in the inverted
21:59 - comma will include double dash comma
22:02 - the color will put green that is G
22:10 - and now we will clear the other corner
22:14 - string
22:15 - and now we'll run
22:17 - and as you can see produces the same
22:20 - result as earlier
22:25 - so this how you use the format strings
22:28 - to
22:30 - customize the plot
22:34 - one more thing is there for color we can
22:37 - directly give the
22:41 - values like red green
22:43 - that is the complete string and it will
22:46 - also include that as a valid argument
22:54 - and also you can also include it is hex
22:57 - value so you can get it online easily
23:02 - and now I will copy it paste
23:06 - so other one is particular color I
23:09 - copied from Internet and the second one
23:11 - is for color - it is hex value
23:14 - so I will put it for China and now you
23:17 - run and as you can see the colors are
23:20 - slightly different now I would use the
23:24 - shade of red for the China and for India
23:27 - I use it was a bit darker in blue color
23:31 - okay so one more thing I want to add is
23:36 - you can also change the line width so by
23:39 - default it is or - I suppose and I'll
23:42 - make it as 4
23:43 - to make the line little bit thick and
23:47 - falta India we will put it as line width
23:51 - is 3 input a comma save and we'll run it
23:56 - as you can see the China line is a bit
24:00 - thick and for India is little bit
24:05 - thin then the China
24:11 - okay
24:17 - let me remove the language
24:26 - if you are having problems with the
24:28 - screen ratio like padding is not
24:31 - supposed to be really good with the
24:34 - graph you're plotting so you can use a
24:37 - function called tight layup so what this
24:39 - will do is according to your screen
24:41 - resolutions it will make the plot
24:45 - bedding match to the screen resolution
24:47 - so that your plot looks really nice on
24:50 - the screen whichever you are working
24:52 - with so it will not show that much
24:56 - difference but if you have any padding
24:59 - issues you can include the slightly odd
25:02 - function
25:06 - you know I'll show you how to if your
25:08 - different
25:10 - styles or themes so for that we have two
25:14 - we have a attribute
25:19 - so we'll type ELT dot style dot
25:23 - available
25:25 - so this attribute contains all the
25:28 - different styles which might blow trip
25:30 - provides so we'll include it in our
25:33 - print function keep in mind that it is a
25:37 - attribute and not a function
25:39 - PID dot style dot available so now we'll
25:43 - run the program
25:50 - and as you can see in the console glow
25:53 - the list of different styles plot styles
25:57 - are available so here you can see
26:00 - c-pawn we have classic we have
26:03 - so let me choose one for demo
26:12 - we'll stop the farm program first
26:18 - now I will show how to use that so type
26:21 - II era T dot style dot use so in this
26:25 - function provide the
26:28 - style
26:29 - value as a string so we start with dark
26:34 - background so this produces a very dark
26:37 - plot with white color edges so let me
26:42 - stop the knot first and then we will run
26:45 - it again
26:53 - you
26:55 - now we'll use a non thorough method
26:57 - another type that is 538 so here you can
27:01 - see the it creates a graph so this looks
27:06 - a little bit more nicer and
27:10 - you can see we have included a grid but
27:14 - it is not showing us
27:16 - let me remove the colors first so let me
27:20 - see what the theme provides
27:28 - okay so team provides these colors so
27:32 - these are very bright and nice as you
27:34 - can see
27:37 - okay so now we'll use another style that
27:40 - is si bon - dark grid
27:43 - so let me copy it and we'll paste it in
27:47 - the style string so now we run so this
27:52 - is little bit different as it as you can
27:54 - see it provides us a dark background
27:57 - okay and colors are so different
28:02 - now
28:03 - you can see we have included a grid
28:06 - function but it is not providing us with
28:08 - the grid so for that we have to put
28:11 - we have to include true as a value in
28:15 - the grid functions not as a stream but
28:18 - as a value
28:26 - you
28:29 - so as you can see it creates a grid and
28:31 - displays it along with the style we are
28:34 - using
28:35 - okay so
28:39 - for me the favorites are 538 and another
28:44 - one is GG plot so GG plot was
28:49 - basically derived from arthur amin
28:52 - language so we'll include that and we'll
28:55 - see how it looks
28:57 - and we'll run now and as you can see it
29:00 - is similar to
29:08 - the support dog treat
29:10 - okay and will now close it and as you
29:15 - can see this is how you can use
29:17 - different styles so one more thing I
29:21 - want to show you these are
29:23 - there is one function which is provided
29:25 - by the matplotlib library which creates
29:27 - comics like graphs so for that we have
29:30 - to include PID dot xkcd function so if
29:34 - we run our graph will be
29:36 - displayed in the form of Hendron dot
29:44 - so as you can see it is like little bit
29:47 - different and it looks like tom using
29:50 - hand
29:51 - so this is helpful if you are putting it
29:55 - in formal way or sharing it with your
29:57 - friends
29:59 - okay so I'll clear all the markers and
30:03 - the line styles
30:06 - so now we can run and we can see
30:10 - our default graph with no markers no
30:14 - line styles in the X scale Ceri format
30:18 - so this is how you use the styles and
30:22 - different format strings for plotting
30:25 - the graph so input is usually I'll be
30:28 - showing you how to use subplots to draw
30:31 - more than one plot and also in I will
30:36 - show you how to draw bar charts using
30:39 - the data
30:40 - so let me run the
30:43 - what we had done in the previous video
30:46 - so we're drawn this simple plot
30:50 - which has years from 1950 to 2030 and
30:56 - population in billions in y axis so we
31:00 - had drawn for Indian population and
31:01 - Chinese population so let me show you
31:04 - how to use subplots I will show you how
31:08 - to plot two subplots in the same
31:11 - adjacent Lane so we first remove this
31:15 - xkcd function and
31:17 - let me use some
31:20 - style so we'll use GG plot for this
31:23 - video and
31:27 - you can just comment out the plot
31:31 - function plot function first
31:35 - the subplots are plotted as the way of
31:39 - matrix so if you want to plot three
31:43 - plots so what it does is three
31:47 - into one so that will be in the matrix
31:51 - form that is in the first row
31:56 - it will have
31:58 - three plots
32:00 - and it will have first love or subplot
32:04 - so like that in the matrix format to be
32:07 - like
32:08 - 2 + 1 3 n 3 so these are passed other
32:14 - parameters to the subplot function so
32:18 - let me just show switch the type ELT dot
32:23 - subplot in that we pass our first one
32:28 - grow and will display two subplots two
32:34 - comma
32:39 - first support
32:42 - this like indexing so we'll give
32:46 - the plot function now
32:49 - inside that will pass over
32:51 - here
32:53 - comma population population of China
32:59 - label
33:00 - equal to you know
33:04 - comma color will cue it is
33:10 - orange
33:13 - orange red will you
33:15 - okay so when you plot title
33:21 - it will be
33:24 - support one
33:29 - and
33:32 - our X label valuable will give a chase
33:35 - here
33:36 - and why label will be population
33:40 - millions so
33:44 - same we will type it for
33:47 - subplot 2
33:49 - in that will pass 1 comma
33:53 - seconds apart comma
33:57 - 2
33:59 - and we'll type alt dot dot function in
34:05 - let me pass here
34:09 - common population of India comma label
34:14 - equal to
34:20 - India
34:22 - color
34:25 - equal to
34:27 - bring so remember we have to pass the
34:32 - legend function on top also
34:34 - the below the first support
34:38 - and we'll type title so eighty dot title
34:44 - will give it is
34:47 - so plot
34:51 - just copy the X label and my little fun
34:54 - talk
34:57 - see you and will turn
35:01 - so as you can see we've got two subplots
35:06 - and in one we have China and another one
35:10 - is India be here
35:12 - yeah but you can see that one is little
35:16 - bit bigger and one is let me to smaller
35:18 - the grid function
35:20 - this is I think the due to the values
35:22 - which are passed
35:26 - okay so this is how you plot
35:28 - two sub plots side-by-side you
35:32 - can also try with different method like
35:37 - style that is
35:42 - 538 so let me see that how it looks
35:47 - okay so this will this looks really nice
35:51 - so this is 538 style
35:58 - okay so we'll create a new
36:00 - file for bar charts
36:15 - and it's concealed so it is at a target
36:18 - repository and I have a pop unit for
36:22 - subplot
36:30 - we've got the data from our
36:34 - main file to the bar chart
36:40 - it is ear operation China India
36:48 - ending lines
36:57 - begin just directly plot the bar chart
37:01 - using power function in that we'll pass
37:04 - the same year
37:07 - population of India
37:11 - labor
37:13 - equality
37:17 - will pass India
37:21 - comma inertia
37:25 - equal to three so
37:29 - same will copy and paste it here
37:33 - and here the pass
37:36 - population of China
37:38 - and make it a Polish ina and color it
37:43 - create thread
37:45 - so
37:52 - so you feel you now
37:55 - run this file
37:58 - really cared
38:00 - by chart like this our China bar chart
38:04 - is showing perfectly but our green
38:07 - colored india's bar chart is like little
38:12 - bit showcasing this is actually
38:14 - happening because
38:15 - the China is China bar chart is all
38:20 - laying on top of India's Pal chart
38:26 - let me show you
38:28 - so for that we can use
38:34 - our method
38:36 - that is
38:38 - that uses offset
38:41 - to separate out fellows but first what
38:45 - we will do is we'll trim down our data
38:48 - below will only contain values from
38:54 - 2015
38:57 - 2025
39:15 - now it is done
39:18 - let me comment this out can turn this
39:23 - a
39:25 - bar chart
39:28 - so what if we want to
39:31 - draw a
39:33 - bar chart it's my fusion
39:38 - we cannot see the green one it is
39:43 - overlaid by the on this
39:45 - China's population
39:47 - so for that we have my third
39:51 - Norcom that so for that we have to use
39:54 - something called as
39:56 - waste
39:58 - so by default it is
40:03 - 0.25 is okay and we
40:09 - also have to pass
40:13 - indices
40:17 - variable called indices
40:20 - in that we pass
40:25 - the function
40:27 - from numpy and we taught a range
40:31 - and it should contain the length of our
40:53 - should contain at least
40:58 - so we are not imported numpy it just
41:03 - import it
41:07 - is imported and
41:11 - what we have to do is you have to pass
41:14 - the
41:16 - indices in each and every function apart
41:20 - so the time indices
41:24 - here
41:36 - fully red color because these indices
41:39 - are not properly set up to work with our
41:45 - ears in particular so it is just giving
41:49 - us the index from zero to ten
41:53 - so what we will do is
41:58 - really
42:01 - for first part indices indices -
42:06 - wait
42:08 - one second we'll keep it as same and
42:12 - pass
42:18 - with
42:22 - wait so that the function will know that
42:26 - we have changed the first
42:29 - value
42:32 - and
42:34 - also meaning
42:56 - not required for second
43:00 - street below
43:12 - epilation comparison
43:17 - between
43:25 - so if you
43:27 - now
43:29 - okay got an error
43:31 - [Music]
43:38 - so if we forgot to remove the here
43:42 - because we are already passing it
43:45 - through the indices so we remove here
43:48 - and we'll also remove
43:51 - and if we say everybody feel run you can
43:57 - say
44:00 - India China comparison but ears are
44:04 - still she showing us indices so funded
44:07 - the work
44:12 - as a function of V dot X ticks so in
44:17 - there to be of the pass ticks s
44:20 - parameter further to the pass
44:22 - our indices
44:25 - variable comma
44:28 - we also pass label equal to the year and
44:36 - if we save any field Ron
44:39 - can see
44:42 - ears are shown here you can see how
44:47 - these increasing
44:51 - and it should be a turn-on
44:53 - who was 2022 a 324
44:58 - India is led near to China in 25 across
45:04 - societies
45:08 - so this is how we plot a
45:11 - path chart a vertical bar chart actually
45:16 - so in today's video I'll be showing you
45:18 - how to plot pie charts using matplotlib
45:21 - library so here we have earlier code is
45:24 - used for bar chart so I'll create a new
45:27 - file
45:30 - new python file so i will give the name
45:34 - is pie chart
45:36 - pie underscore chart
45:44 - so
45:45 - we'll import our code from here so
45:50 - the style and import core will be same
45:54 - so we'll copy and paste it here
45:56 - and
45:58 - the end part that is now
46:01 - not show and product read will copy and
46:04 - paste it here
46:08 - for the pie chart pie chart contains
46:11 - slices so we'll create a list of slices
46:15 - for inside debt we pass some values like
46:18 - 40 and 60 so this makes it makes it at
46:23 - 100% so 40% 60% so we'll put the pie
46:27 - chart using parity dot pie function
46:30 - inside that you passed you passed slices
46:34 - as a parameter
46:39 - now if you don't need
46:43 - you can see the pie chart has
46:48 - drawn on canvas and there are no labels
46:52 - and nothing so we had labels here
47:03 - so type labels
47:05 - eco I do so this is also leashed so
47:09 - inside that pastor strings which you
47:11 - want to show so first is 40 comma 60
47:19 - so for the particular slices this
47:22 - neighbors will be displayed so these
47:24 - labels we have to pass in the PI
47:26 - function so labor is equal to the name
47:29 - of the
47:31 - variable that is labels
47:34 - and
47:36 - so now if we run we can see along with
47:41 - the spices we have the labels also
47:44 - displayed
47:45 - now we will run without this tile 5:30
47:48 - so this is the default pie chart style
47:52 - which matplotlib uses so the color you
47:55 - can see it a little bit different
48:01 - you can also pass parameters such as veg
48:05 - coughs so what veg props does is it will
48:08 - create on the border of this particular
48:12 - color or any parameter you want to pass
48:14 - so will pass each color
48:18 - so this is in the form of dictionary so
48:22 - it is having a key value pair so each
48:25 - color will be Co the color we want to
48:27 - showcase that is white so fear on you
48:30 - can see the wheels dominancy you can see
48:35 - that door edges are now colored as white
48:39 - you can also put another color is black
48:41 - etc if you want
48:45 - so I will show you different parameters
48:49 - it can be passed in the PI function
48:51 - under wedge box so let me take you into
48:56 - the matplotlib documentation
48:59 - so we wedge crops then matplotlib
49:05 - enter
49:07 - okay so here you can see my products is
49:12 - not exist or pi then we have wedge
49:17 - so will go in first link and here there
49:22 - are the different parameters so if you
49:25 - go down
49:26 - you can see the wedge drops property so
49:29 - it can it takes dictionary as a
49:32 - parameter and you can also pass
49:34 - dictionary value as line width and we
49:37 - can set the width of the particular line
49:40 - here
49:42 - some examples are also given so here you
49:46 - can see some slices are outside display
49:50 - so these are used these are displayed
49:53 - using or export parameters I will show
49:55 - it in couple of minutes so will pass
49:59 - line with colon 3 in the veg puffs
50:07 - so here you can see the line width it
50:09 - changed so that edge was there it has
50:12 - now little thick so
50:15 - by default it was one I guess
50:18 - if you zoom in
50:21 - you can see around the circle so that
50:24 - edge is so displayed
50:31 - so this is another page from the
50:33 - documentation where you can see the
50:35 - particular wedge function so the
50:39 - different parameter it takes like edge
50:41 - color we have seen
50:43 - then we have different parameters like
50:46 - line style
50:47 - color
50:50 - so
50:51 - try them out if you want
50:54 - now
50:56 - I'll show you
50:58 - how to add custom colors so we'll create
51:02 - a list of colors and we'll pass
51:06 - like
51:09 - red and then we'll pass green so the
51:13 - 40-person slice will be right color and
51:16 - 60% of the green color so let me run
51:18 - this
51:22 - okay it is not run because we have not
51:26 - integrated colors in the PI function so
51:28 - we'll integrate colors in the Pythons
51:30 - now
51:31 - let me edit it now and so colors
51:36 - equal to the name of the variable that
51:38 - is colors
51:41 - so now if you run
51:44 - you can see the 40% is in the red and 60
51:49 - is in green
51:51 - so this is unwelcome this not only works
51:55 - for the percentage like this but also
51:57 - you can include different values in the
52:01 - slices so I have shown for out of
52:04 - hundred you can include different values
52:08 - so it can be out of n values let me show
52:12 - that quickly
52:15 - so let me make it like 40 60 comma we
52:20 - pass another value such as 30 and then
52:23 - another value 25
52:29 - now we'll pass colors now we'll pass
52:33 - labels so the 30 will pass as other
52:39 - other one will make it
52:41 - and the next would next one will be
52:45 - other two
52:47 - so if we now save it and run it you
52:53 - can see it has now created four slices
52:57 - sixty forty other one another to close
53:01 - this now let's make it as 80 and then
53:04 - this one we make it's 120
53:08 - yeah and we add some different colors
53:12 - like
53:14 - blue comma yellow
53:21 - now we will run and now you can see the
53:26 - according to the slices it is allocated
53:30 - so we can also pass these are
53:33 - hexadecimal codes of color so you can
53:36 - pass it as custom colors I just copy
53:38 - that and paste it here
53:49 - now what will make it as we grab some
53:52 - data so these are the populations of
53:56 - seven countries so I have taken it from
54:01 - a website I will show in the end the
54:03 - website so we'll paste it in the slices
54:05 - and
54:07 - the name of the countries so we put it
54:10 - in the labels I provide this data in the
54:15 - github repository so you can see that in
54:17 - the description of this video and also
54:19 - we'll make s color as black and aligned
54:22 - with there's one so now if we run it
54:27 - you can see the edges now change to
54:30 - black color and/or
54:32 - all the different countries are plotted
54:36 - along with their own slices so the
54:39 - largest is China and in India as you can
54:42 - see and then we have United States
54:44 - Indonesia but this doesn't look all that
54:47 - good
54:48 - so if you have if we have like more than
54:52 - five values then you should go with the
54:55 - bar chart and if you have like less than
54:58 - five values then you can go with the pie
55:00 - chart so if you want to
55:03 - highlight a particular slides so you can
55:06 - remove that particular slice little bit
55:08 - outside from the center of the circle
55:14 - so we'll first remove the last two
55:18 - countries from the labels and also
55:21 - remove the two values from the list of
55:24 - slices and
55:27 - what we'll do is
55:31 - we create explore leashed so inside this
55:36 - it takes a float as a
55:39 - float values as parameter so we pass
55:41 - zero or zero percent and 0.14 United
55:45 - States 0.1 using the sense like 10% so
55:50 - if you run it again
55:55 - we will also have to pass that export
55:57 - value into the Phi function
56:03 - we are getting an error
56:05 - because we have included a comma inside
56:09 - the line width
56:11 - so we'll remove that comma just outside
56:16 - okay so
56:19 - we remove this explode from here
56:26 - we paste it in the front so after labels
56:31 - will type export equal to
56:35 - the explode list comma and now if you
56:41 - run it you can you will be able to see
56:44 - that United States this little bit
56:46 - highlight it outside so this is do the
56:49 - Explorer so it is taking 10% off the
56:52 - whole radius
56:55 - you can see it is just a little bit
56:57 - outside but it is that 10% of the actual
57:01 - radius if we make it like 0.5 that will
57:04 - be like 50 percent of the total radius
57:07 - so if you run it again you can see it is
57:10 - it has come out from the center about
57:14 - half of the radius so this is how you
57:17 - can now
57:18 - highlight a particular sliced or remove
57:21 - that particular slice it will be outside
57:22 - and also we'll add titles so reality dot
57:26 - title will
57:27 - i population
57:32 - pie chart
57:35 - and
57:37 - one more thing i have to show you is
57:40 - you can also create a 3d effect so we
57:45 - for that we have to have shadow equal to
57:47 - true so what this will do is it will
57:50 - create a shadow around the slice slices
57:53 - and it will give feeling of a 3d chart
57:56 - you can see it has created a dark shadow
58:00 - around India and also around India
58:03 - Indonesia
58:06 - let me make it X bar equal to zero point
58:09 - two it is twenty percent so it will look
58:11 - a little bit better
58:16 - if you run again you can see it has
58:20 - taken a twenty percent of the total
58:22 - radius
58:24 - so
58:29 - you can change the colors according to
58:31 - your needs so I'll show you one more
58:34 - thing let
58:35 - starting or equal to 90 so what this
58:38 - will do is
58:40 - the slice the particular slice or label
58:45 - we have it is China in the first place
58:48 - in the list that will be starting from
58:50 - ninety degree the pie chart will start
58:52 - from the China the slice
58:57 - so you can see goes to China in India so
59:01 - one more thing is if you want to discern
59:04 - if you want to display percentage in the
59:07 - slices so you can do that using a
59:10 - parameter called Auto percent that is
59:14 - Auto PCT equals it is a format it's
59:18 - particular format that we have to pass
59:20 - in Airstream so that is percent 1.1 F
59:25 - % % so this is a particular format you
59:29 - have to take into consideration so if
59:31 - you run it again you can see you know
59:33 - slices they have displayed percentages
59:37 - at a particular country has so nine
59:41 - point one person is of United States so
59:43 - I'll show you from where I got this
59:46 - country's population so this is a
59:49 - website kilometers so we net we have the
59:53 - population of all the different
59:55 - countries current population so I have
59:57 - scraped the data from here the data for
59:59 - this video is included into the data dot
60:03 - P Y so this I included in the git
60:05 - repository you can just
60:07 - refer it so I will give you the link to
60:10 - the mind keep on github repository in
60:12 - the description of this video
60:18 - so in today's video you'll be learning
60:20 - about stat plots stat plots are also
60:23 - called as area plots
60:25 - so let's get started
60:27 - area plots are pretty much similar to
60:30 - the line thought these parts can be used
60:34 - to track changes over time for two or
60:36 - more related groups let make up one
60:39 - whole category
60:40 - for example let's compile the work done
60:44 - during a day by student
60:47 - so we'll go in our
60:51 - project and we create a new Python file
60:53 - so we'll give our name Python file name
60:56 - is stack underscore plot
61:00 - and then we press ok and we copy some
61:04 - starting code from the stat plot from
61:07 - pie chart actually that is importing the
61:09 - numpy SNP and from Metro click import
61:13 - pie plot SP arity then we will use the
61:15 - Styles 538 and then we copy the
61:21 - plot dot show and read functions
61:28 - or will remove the title for now okay so
61:34 - so let's go in data out py
61:38 - so we have five lists here so we'll copy
61:42 - them in we paste it here
61:45 - okay so
61:48 - we just plot them using pie chart so we
61:51 - had already done in the last video
61:54 - lecture so in the pie function will pass
61:57 - Unleashed so how many
62:00 - least we want to show so we have four so
62:04 - we'll type 1 comma 1 comma 1 comma 1
62:06 - comma then we close the list and we pass
62:10 - the labels for for the list so first is
62:13 - 8 then second one is sleep
62:19 - okay the second one I actually study
62:22 - then he was dead and we
62:25 - extra inverted comma then we have code
62:29 - and then sleep so I will just
62:33 - remove the comma and how to place the
62:37 - code in front of sleep actually so paste
62:40 - it here we will the comma
62:42 - remove the extra commas now
62:45 - okay so
62:47 - this will plot a normal pie chart so I
62:52 - will show you why I am plotting this
62:54 - so we'll type peyote dot title so in
62:58 - that title you give as pie chart
63:04 - okay make that edge okay we'll run this
63:09 - so for that right click and
63:13 - step pots okay so the normal pie chart
63:17 - will give you four quarters we study eat
63:21 - sleep in code but this is like
63:25 - so what if you want to show data for
63:28 - five days in the continuous manner so we
63:31 - can show that actually using pie chart
63:33 - so for that we'll use this stat plot
63:36 - particularly so here you can see for a
63:39 - particular day one a particular student
63:41 - we have one hour of
63:45 - 18 and eight hours of studying six hours
63:49 - of coding
63:51 - 9 hours of sleep
63:52 - so like that we have five consecutive
63:56 - days so we can see second day here's
63:59 - three three hours of eating five hours
64:03 - of study
64:04 - code for eight hours in sleep for eight
64:07 - hours like that
64:09 - so what we will do will remove the PI
64:11 - function so we type parity dot stat plot
64:14 - will open the and this is so inside that
64:17 - we pass our list so firstly is to be one
64:22 - to show is days actually
64:25 - so you can see the data in the eight we
64:29 - have actually our data is increasing in
64:32 - steady east and you see so what will you
64:37 - do will pass first days
64:39 - as a parameter to state plot so this is
64:42 - a list then we pass eight then we'll
64:46 - pass study then code and then sleep
64:51 - okay so that is enough and we change the
64:55 - title as stat plot
65:02 - state plot and now we rightly can we'll
65:06 - run the file
65:08 - so if you run it now to load you can see
65:13 - that it is showing us the data for five
65:17 - consecutive days on x-axis we have days
65:19 - and on y axis we have hours so you can
65:25 - see we have not even the labels actually
65:27 - so we are not finding which one is what
65:30 - so you can see the
65:34 - we will just close it and we will just
65:37 - put the labels now
65:40 - so you create a list for labels so type
65:44 - labels equal to
65:46 - so we open the
65:50 - square brackets and we pass the string
65:52 - first level is 8 for our first reached
65:55 - then vs sleep not sleep actually we have
65:59 - study then third one is code and then
66:03 - the fourth one is
66:07 - so we passed these labels in the stat
66:11 - plot as parameter so labels equal to
66:13 - labels that is our
66:16 - least and he feel run it now so before
66:21 - running we type PLT dot legend so this
66:23 - is very much important so what this will
66:26 - do this will
66:27 - print the labels on the screen so that
66:30 - we can find it as which color is put in
66:33 - pertaining to which particular label so
66:36 - you can see blue is four eight then
66:41 - orange is for study and on y-axis you
66:44 - can see the Owls and XS is vo days
66:50 - so
66:52 - we have then blue color we have this 8
66:56 - which is actually decreasing
66:59 - middle four third day it was like four
67:02 - or five hours
67:04 - and then the story you can see it is a
67:08 - increasing
67:09 - in order and the code is actually
67:12 - decreasing
67:13 - in the V reach the 50 and the student is
67:17 - actually getting more sleep by the end
67:19 - of the fifth day
67:20 - so you can find it
67:24 - ok so our series
67:27 - we can change the location of the
67:31 - stack plot legend so we'll type in the
67:35 - legend LOC equal to where we want to
67:39 - show that so we'll type upper left so
67:41 - upper space left so this is string that
67:44 - we have to pass in a location LOC
67:47 - variable the legend function so you can
67:50 - see the location of the legend is
67:52 - changed now and it is at upper left
67:54 - corner
67:55 - okay so now what we will do is
67:59 - we will create one more list for colors
68:03 - here you can pass hex code also that is
68:06 - a decimal codes
68:08 - and also the
68:12 - short form or short characters so we
68:15 - have em for magenta C for CN for red and
68:20 - Kay for black yes I already showed you
68:23 - in my little videos you can refer them
68:26 - so we'll pass that list as colors equal
68:30 - to colors in the stat plot function so
68:34 - we will remove the extra spaces white
68:36 - spaces and we run it again we will run
68:39 - it again
68:41 - we will also put
68:44 - tightly out just in case for nice
68:47 - padding so PLT dot tightly out okay so
68:51 - now we will write it here and we will
68:53 - run it again so here you can see our
68:55 - chick colors are chained and it looks
68:57 - really nice now really vibrant
69:01 - okay so
69:03 - magenta is the
69:05 - 8 18 hours see on is there study hours
69:11 - orange orange or kind of fred is coding
69:15 - hours and we have black for sleeping
69:18 - hours
69:19 - but we can see our legend is little bit
69:22 - off the grid with getting outside so we
69:26 - can fix that so what we have to do is
69:29 - in our legend for LOC variable will
69:34 - remove that string and instead of that
69:36 - will pass so tuples so how you create a
69:39 - tuples we have to judge to open and
69:42 - close the pants this an inside debt we
69:46 - have to pass the x and y coordinates or
69:49 - percentage
69:52 - by which you want to shift the legend so
69:56 - we pass so 0.06
69:59 - that is not actually 6 percent that is
70:02 - 0.06 percent and also that it is from
70:06 - left and from the bottom we will pass
70:09 - 0.06 percent so now save it run it again
70:13 - so you can see our legend is now shifted
70:19 - towards the little bit inside of the
70:22 - area plot and you can see it is nicely
70:26 - put so
70:28 - very see how this is how you can
70:31 - customize your stack so this is just one
70:34 - example you can do more kind of this
70:37 - using step loads you can actually create
70:40 - stacked step plots those are actually
70:44 - sit on top of another so as usual I will
70:48 - provide
70:49 - this Python file in my github link in
70:54 - the description of the video so in
70:56 - today's video I will be showing you how
70:58 - to use macro library to plot an
71:02 - Instagram okay so here we will create a
71:07 - new file new
71:09 - python file and we'll type
71:12 - histogram
71:17 - and press enter okay so our file is open
71:23 - so first will input the might correlate
71:26 - library so import matplotlib dot PI plot
71:29 - SP editing so you are importing plot
71:33 - function from metric library okay so
71:40 - now we will open our it up on the top
71:43 - file so in here I have a list which
71:46 - contains blood sugar levels of patience
71:49 - so this is a string which contains data
71:54 - okay and
71:57 - so diabetic blood sugar levels
72:01 - range I will show you so
72:08 - if the range is from
72:12 - 80 to 100 then the person is a non
72:16 - normal person and he doesn't have a
72:18 - diabetic and
72:20 - if it is from 100 to 125 then that
72:25 - person is pre diabetic patient of
72:28 - diabetics and if he has about 125 blood
72:33 - sugar level then he is a diabetic person
72:38 - so we'll plot the histogram using the
72:42 - above chart above
72:45 - let me comment this first
72:50 - so
72:52 - you know this
72:56 - PLT
72:59 - dot
73:02 - yeast
73:04 - like a cystogram function and open curly
73:07 - parenthesis open and close parentheses
73:09 - so inside need with inside that will
73:11 - pass our list that is a blood sugar
73:14 - okay so
73:19 - we run this particular file mr. brown
73:22 - dot py r actually can run looking you
73:25 - forward to add a show function in order
73:29 - to show the histogram on screen so we
73:32 - type prit dot show no point curly open
73:35 - and close and this is stopped and we'll
73:38 - run it again
73:41 - let me check okay so now we can see our
73:46 - resto gram is loaded so by default you
73:50 - can see it is taking the scale from 80
73:54 - to 150
73:55 - because that is the highest number of
73:57 - value 150 be here from less than 80 to
74:01 - 150 and there is the number of people in
74:05 - y-axis so my proudly implicitly has
74:10 - plotted or ten number of beans so beans
74:14 - is actually
74:15 - the number of bars in particular
74:19 - histogram you can say that and
74:22 - now we customize the bins so we'll type
74:25 - beans equal to you we have three
74:28 - categories so we will type in sequel to
74:31 - three and we will pass that beans into
74:34 - the histogram function we type of beans
74:37 - equal to the variable beans and if we
74:41 - run it again
74:43 - we can see that we are presented with
74:47 - only three bins and
74:50 - you can also categorize them using a
74:56 - parameter called edge color we have
74:59 - already used in other graphs so edge
75:01 - color equal to will pass the string is
75:04 - theme of the color we want to place like
75:06 - we can pass G for green so here you can
75:10 - see like we can't see it clearly so
75:12 - we'll make it R for red and we'll run it
75:15 - again so here you can see our beans are
75:18 - surrounded by our edge color of red so
75:22 - that we can easily distinguish between
75:24 - these beans
75:26 - there is one more thing ammeter which
75:27 - you can use
75:29 - so I'll show you that so let me remove
75:31 - the edge color first okay so we'll type
75:34 - our width equal to
75:37 - zero point type eight so R which is
75:43 - actually relative width that is relative
75:47 - to the beam we are targeting so that
75:51 - term it will provide a gap between two
75:54 - bins
75:59 - let me
76:01 - make it explicit so we'll type in sequel
76:05 - to
76:06 - and Unleashed so inside a list we will
76:09 - pass a T comma 100 comma 125 so these
76:13 - are the three categories and the fourth
76:14 - value will be the highest number of
76:19 - category values so we'll pass as 150 so
76:23 - we
76:24 - passed at least into the beans equal to
76:28 - the name of the list that is bins so as
76:31 - you can see now it is recognizing the
76:35 - values we have passed in the bins
76:37 - parameter or bins leashed
76:41 - so it is starting from 82 till less than
76:45 - 150 so this is how you can customize the
76:48 - beans
76:49 - to have a particular raw
76:54 - category and also you can play around
76:57 - with the are good so we'll make it as
76:58 - 0.95 so that you can see that now the
77:01 - width between the two bins are is
77:04 - decrease
77:06 - so
77:08 - one means there will be no gap in
77:10 - between the two bins so you can also
77:13 - pass color parameter so color equal to
77:15 - you can pass G or we can pass
77:18 - green inside of a go string so if we run
77:22 - now our beans color it changed to green
77:26 - you can see and I can I would also show
77:31 - you how to make the beans as hollow so
77:35 - we'll type hitched type equal to step
77:37 - and the step is a string so we enclose
77:41 - it into the
77:43 - single inverted commas and you can see
77:46 - our
77:48 - beans are now Hollow so I will remove
77:51 - them and show you again by really
77:53 - running the program and
77:57 - if you see now you can see that those
78:01 - bins are filled with color and we
78:05 - provide the hitch type a step then it
78:08 - will be Hollow and
78:10 - it will look like steps so
78:15 - that is they did have a kid customized
78:18 - okay now we'll open our data file and
78:22 - I'll pass
78:25 - two strings on to list actually so one
78:28 - is for blood sugar of man and another
78:30 - one is for blood sugar when so this is
78:32 - to static data
78:34 - the least so we'll copy and paste it
78:37 - here and
78:39 - now we'll pass those two lists into our
78:43 - hitch from our histogram function so
78:46 - we'll type that sugar man woman and man
78:50 - okay so instead of directly passing it
78:52 - here we make it as a list and pass it
78:55 - here so let me cut this both of this
78:59 - list from the sugar function okay then
79:02 - we will create a separate variable coil
79:06 - type and inside that we will create a
79:09 - lift and in the camping list we'll pass
79:11 - our both the lists so now if you type
79:15 - type in the extra gram function so it
79:17 - takes both the
79:19 - lift into the histogram function and
79:22 - also will pass colors equal to a list
79:26 - inside that will pass G in anybody comas
79:29 - and our green and red for the colors of
79:34 - the list you know it pass color equal
79:38 - two colors image to our function so if
79:40 - we run it again
79:44 - we can see that
79:46 - the green and red color beans are
79:50 - displayed on the screen but we are not
79:52 - knowing which one is man and which one
79:53 - is a woman so for that we will pass the
79:56 - tangent function and legend function and
79:58 - also the
79:59 - title so we pass PLT tour title and
80:02 - inside that will put the string as a
80:05 - blood sugar levels chart maybe
80:10 - and
80:13 - also we will put labels so we'll go on
80:18 - top and after colors we type label equal
80:22 - to
80:23 - that will pass an interest and in
80:26 - emptiness to the type
80:28 - the string which won't launch so we'll
80:32 - type man and woman so let me enclosing
80:35 - team to the
80:36 - inverted commas
80:39 - okay so now we pass this table into the
80:43 - histogram function
80:46 - by invoking the label equal to label
80:51 - variable okay so if we now turn duck in
80:55 - now before that we have to type the
80:57 - legend function so pH dot legend so
81:02 - you can see the green one is men and red
81:06 - one is women
81:09 - but we forgot to add X&Y labels so we'll
81:13 - get that in a minute so
81:16 - you can see
81:19 - why we have number of people in the XV
81:22 - oh
81:23 - gosh sugar range
81:26 - so we
81:31 - after beans we type of PID Tom X label
81:36 - for labels to blister on x-axis so it is
81:40 - a function inside that will pass a
81:42 - string so we'll type
81:47 - blood sugar
81:49 - range and
81:52 - for y label we'll type PLT or why label
81:56 - and inside that we'll pass a string as
81:59 - number of patients
82:04 - total number of patients
82:11 - and if we turn it again we can see the x
82:16 - and y labels as total number of patients
82:19 - and the blood sugar range on the x axis
82:21 - and y axis respectively
82:23 - so we'll close this
82:30 - so
82:32 - using the h2 Brown you can compare the
82:35 - values so you can see for normal six men
82:40 - are there and in periodic diabetics we
82:44 - have very less number that is two and as
82:47 - compared to the diabetic people normal
82:50 - people are more and women's the more
82:55 - people are more and diabetic diabetic
82:58 - woman's are less so this is how we can
83:01 - compare and analyze the data
83:03 - using the oyster gram
83:06 - so in the future I will show you how to
83:09 - utilize the finance library to
83:13 - display the histogram in a very
83:16 - efficient manner so that's all guys
83:19 - thank you for watching
83:20 - before that I will also show you how to
83:23 - change orientations for that we will
83:26 - type orientation equal to
83:29 - in the it is a string so we'll type WH
83:33 - comma and we'll pass horizontal so this
83:35 - we have to pass English program function
83:37 - okay so if we run it again you can see
83:40 - the x and y axis
83:44 - so total number of patients is now on
83:47 - y-axis and blood sugar in the range is
83:50 - on
83:51 - x-axis so this is how you can change the
83:55 - orientation of this program so thank you
83:58 - guys for watching and I will see you in
84:00 - the next video

Cleaned transcript:

hello and welcome to programming knowledge so in today's video you'll be learning about how to use matplotlib library to plot different types of graphs so we'll start with the simple plot so I'll be using pichumani for this video series so if you are not installed PyCharm I will be giving the link to the video to show how to install pi jam on your Windows or Mac machine so I will open PyCharm ID using spotlight ok so we'll create a new project we will give on project name as met matplotlib tutorial or toad and we'll select project interpreter so we will select new environment using virtual M you can also select peepin or Wanda but I will select virtual M and you can change the location if you want the base interpreter is Python 3.6 and will click on create it is creating the virtual environment for our project if we use the tip you can see the project structure we have the virtual environment directory so in the bottom you can create on click on terminal tab and it will open the terminal so here we will type beep installs matplotlib and press ENTER so this will download the matplotlib library and we will install on our machine so we'll wait till it get downloaded in the store so while it is downloading let me show you the metro T laboratory and what is the use case object so we'll open a new window of Chrome we will type matplotlib let it load so you can see the matplotlib rarey is a Python twodimensional plot in library which produces quality figures in a variety of formats so you can also use it with Python scripts and also with Jupiter notebook so it is derived from a MATLAB my gem is a multi paradigm numerical computing environment so we can go in examples so here you can see the different are graphs they are provided with extract bar graphs horizontal graph there are n number of graphs here so each one has a demo code with that so if you want you can take a look at it so these are scatter plots we have bar graphs I'll be using our simple plot to show you how to use Matlock clip library let me click on particular you can see the percentages so horizontal bar chart so they have given ask the code also so this code looks little bit advanced so we'll start from the basics and as soon as we learn more about Matt floaties I'll be showing how to use it to produce complex charts so you can also create pie charts you can go through the gallery if you are interest rating this so it is still downloading so it has downloaded and installed so you can see the it is install different packages along with the Metro teeth like numb by six you can see the matplotlib in the end so you can click on our project for body structure and new and click on Python file so we give you the name has met night tooth one will is made up met totally tutorial one so click enter and as you can see it has opened the file and here we can now import the package so we'll use from matplotlib type input pipe lot and we can use alias as dat so I know you want to use a pipe lot we call as vit and the name of the function which we want to use so now we have imported pipe lot package so we'll import our data so here we have a list so I have put as 3 ished sound share with on the list with you it are not PR fine so this contains the ears so I have copied the data from all these particular website cause fiddlestick times so in here you can see the China versus India population from 1950s to limited year like 2100 so I have copied it from 1950s to 2013 so you can see it is from 1950s so China has like 554 millions and 2130 here 1.4 billion in or India has 1.5 billion so I had copied that data and put it in the list in Python so here contains 1952 on 30 so I'll copy this year least into our metric torial 1py in population China so these floating point values are billions so keep in mind I not take on the whole number as a storm scaled it down to the decimal point to so I will use only two population china here so we plot this saw data using PI plot package so we imported decades using ELT dot plot so this is a function so inside this function will pass the xaxis and yaxis values so X is axis would be here comma Y axis will be population of China okay so after this if you have to show it to the screen so you will use PID dots show function to display it on the desktop so when you run this you will see this figure 1 so this is a simple plot so in xaxis you can see the age and in y axis you can see the scale of the population so you can use the pen pen function to pan or you can use the magnifier to magnify and see the executives of the plot and you can use these arrow keys to undo and redo so if you can you want to go back you can use undo if you want to get one step back back you can use redo so I think this is about configuration of subplot so also we can click on this save to save the file as PNG save the plot has PNG format image and you can also use home to bring it back to the original position so we want to add xaxis and yaxis label so we can do that using vit dot X label so this will display the actual label values so we'll pass the string as here and for the Y label will use PRT dot y label in the pan this is will you population in China in billions okay so we make here is I capital you will run now and you can see the label is put up and in xaxis we have here in yaxis Villa population we also add title but first I will change the population you can also add title so for that we will use PID dot title function so inside this you can pass the screen as population of China so let me run up in this program you can see the title has come up as population of China now we will import our another leash that is population of India we copy and paste it in our matplotlib tutorial one fine I think so now it'll pass this population India list to the plot you cannot give an error equal actually print it but you will be not enough good for me so the better option would be to print it separately using parity dot dot pass here as a first argument comma population of India a second argument now we will change the title as population of China versus India now we'll run this so you can see so you cannot figure out which one is what but according to our previous graph you can see that blue is China and orange is so India so you know which one is we what we can use legend function so for that we will use vit dot legend so inside that will pass the values of the particular line as a summation so the first string would be population of China so you could take China , next will be India so good string is India insane and now run so you can see in the upper left corner you know blue for China and orange for India so this is carried out using the function legend so this is little bit term it can create problems in longer run if you are having more than one or two countries like population of Brazil or population of Russia for example so if we have like 10 15 then the orderly mismatch if you are working on lot of countries so for that the better option would be using our attribute in da not function so I remove this I'll copy this China and now in the plot function will give an attribute as label equal to we pass the string at China and will pass India in the second plot as label equal to label equal to not India so what this will do it will do the same thing is what legend was doing using the leashed so instead of passing through legend we are passing it through plot so this is how you create a simple plot in this video I will be showing you how to use different format strings to customize the plot and also I will be showing you how to use different styles provided by the matplotlib library we'll run our current plot so you can see it is containing only the China and India population graph and you can see the India is so arranged in China it's blue color and India is slowly increasing from 1950s to 120 and at 2000 some poo after 2020 it will intersect the China population so you can use a function provided by my Scottie I already called grid so we can type PA t dot grid and if we run a program now we can see that our graph contains agreed now so this is very much easier for us to understand at what time or at what period both the lines of the population will intersect each other so that is around to around 23 and you can also see it would be more than 1.4 billion so at 120 China is ahead of India as per the data data so India is somewhere around one point below one point four and China is around 1.45 something million okay so now I will go in my prototype website and here you can see my prototype lot dot plot so in here if you go down you can see the format string so don't worry about the URL I will give this URL in the description of the video so format string contains first marker and in line and in color so so the other combination will also be working but it parsing of them might be ambiguous that is sometime it might be errorprone so it's better to use the given format string that is marker in the line in the color so so in the markers we can see we have point marker etc and pixel circle so the characters which are provided we can use for the particular markers and also for line style you can see solid line styles this is the default that is only one and four line style we have to provide two dashes so by default solid line style is included by my plotly so we'll go in our plot and now we can add the format string in our plot function so for that million comma and inside the comma we can use you know any neighborhood comma you can give the format string so for that we'll put first line style so that is dashed and now we'll run so here you can see in China's line dotted line it is given as a dashed so that is due to the form in which here we have included so let me close it and for and now we'll go in the website and you can see there are different line styles so we can use and dot for a start line style so for India we'll put one comma in the plot function and inside that will you type in now into invitamos in dot so India is desktop so we'll run now and you can see the India is a plotted in our desk dot line style format and we have one more format so that is a that is so in which dotted lines lines tall is included so we'll make the China is default format it is a solid line and for India we'll make it as so this will print the dotted line so here you can see the China is now solid and for India we have dotted so now we will include the different colors so for that will go in the web site and we'll go down and here you can see in a color step so there are different keywords given for black we can use K for wide you can use W for red we can use R so after the line style you will have the keyword for the color for China will give it as R because as you know as you all know it contains already in the colorful color of the flag and for India we'll go with green that is G keywords so here you can see the red is red line is plotted for China and for India tea screen now will uh make it dashed for India the line style and for China will now include our marker so far they will go and top and you can see different markers we are given given as point marker circle marker so we use circle marker that is a Oh key word so we include oh it's alphabet Oh small alphabet before the lines turn and will run and as you can see the little different data points in the data set of China population is are now populated with the regular dot on the line style and there are other markers also you can try with for India I will use different markers so you can go and see which one you can use okay we'll use star marker so further we have include star keyword so we'll put star it is s tricks and we'll run and as you can see the data points in the data set of India is now plotted with a strict symbol so this is the one way we can use the format string another one is by using the labels or the attributes so we can put comma and we can type marker so mark are equal to which marker we have to talk I use so the key word we have to put in the string format so I'll put in inverted commas the keyboard oh and then the line style we won't include so type line style equal to in the inverted commas include or double for a dashed line and the third one is color so for yep color equals to in the inverted commas include our four four red color so we'll remove the earlier for midstream and same way we now you'll run and as you can see the it produces the same result as earlier and you can see the code is little more readable due to the segregation of the marker line style and color in two different attributes so we'll do the same thing for India for marker we'll put a star keep in mind to include it in the inverted commas because it's a string so for Martha will put star and for line style we'll equals to in the inverted comma will include double dash comma the color will put green that is G and now we will clear the other corner string and now we'll run and as you can see produces the same result as earlier so this how you use the format strings to customize the plot one more thing is there for color we can directly give the values like red green that is the complete string and it will also include that as a valid argument and also you can also include it is hex value so you can get it online easily and now I will copy it paste so other one is particular color I copied from Internet and the second one is for color it is hex value so I will put it for China and now you run and as you can see the colors are slightly different now I would use the shade of red for the China and for India I use it was a bit darker in blue color okay so one more thing I want to add is you can also change the line width so by default it is or I suppose and I'll make it as 4 to make the line little bit thick and falta India we will put it as line width is 3 input a comma save and we'll run it as you can see the China line is a bit thick and for India is little bit thin then the China okay let me remove the language if you are having problems with the screen ratio like padding is not supposed to be really good with the graph you're plotting so you can use a function called tight layup so what this will do is according to your screen resolutions it will make the plot bedding match to the screen resolution so that your plot looks really nice on the screen whichever you are working with so it will not show that much difference but if you have any padding issues you can include the slightly odd function you know I'll show you how to if your different styles or themes so for that we have two we have a attribute so we'll type ELT dot style dot available so this attribute contains all the different styles which might blow trip provides so we'll include it in our print function keep in mind that it is a attribute and not a function PID dot style dot available so now we'll run the program and as you can see in the console glow the list of different styles plot styles are available so here you can see cpawn we have classic we have so let me choose one for demo we'll stop the farm program first now I will show how to use that so type II era T dot style dot use so in this function provide the style value as a string so we start with dark background so this produces a very dark plot with white color edges so let me stop the knot first and then we will run it again you now we'll use a non thorough method another type that is 538 so here you can see the it creates a graph so this looks a little bit more nicer and you can see we have included a grid but it is not showing us let me remove the colors first so let me see what the theme provides okay so team provides these colors so these are very bright and nice as you can see okay so now we'll use another style that is si bon dark grid so let me copy it and we'll paste it in the style string so now we run so this is little bit different as it as you can see it provides us a dark background okay and colors are so different now you can see we have included a grid function but it is not providing us with the grid so for that we have to put we have to include true as a value in the grid functions not as a stream but as a value you so as you can see it creates a grid and displays it along with the style we are using okay so for me the favorites are 538 and another one is GG plot so GG plot was basically derived from arthur amin language so we'll include that and we'll see how it looks and we'll run now and as you can see it is similar to the support dog treat okay and will now close it and as you can see this is how you can use different styles so one more thing I want to show you these are there is one function which is provided by the matplotlib library which creates comics like graphs so for that we have to include PID dot xkcd function so if we run our graph will be displayed in the form of Hendron dot so as you can see it is like little bit different and it looks like tom using hand so this is helpful if you are putting it in formal way or sharing it with your friends okay so I'll clear all the markers and the line styles so now we can run and we can see our default graph with no markers no line styles in the X scale Ceri format so this is how you use the styles and different format strings for plotting the graph so input is usually I'll be showing you how to use subplots to draw more than one plot and also in I will show you how to draw bar charts using the data so let me run the what we had done in the previous video so we're drawn this simple plot which has years from 1950 to 2030 and population in billions in y axis so we had drawn for Indian population and Chinese population so let me show you how to use subplots I will show you how to plot two subplots in the same adjacent Lane so we first remove this xkcd function and let me use some style so we'll use GG plot for this video and you can just comment out the plot function plot function first the subplots are plotted as the way of matrix so if you want to plot three plots so what it does is three into one so that will be in the matrix form that is in the first row it will have three plots and it will have first love or subplot so like that in the matrix format to be like 2 + 1 3 n 3 so these are passed other parameters to the subplot function so let me just show switch the type ELT dot subplot in that we pass our first one grow and will display two subplots two comma first support this like indexing so we'll give the plot function now inside that will pass over here comma population population of China label equal to you know comma color will cue it is orange orange red will you okay so when you plot title it will be support one and our X label valuable will give a chase here and why label will be population millions so same we will type it for subplot 2 in that will pass 1 comma seconds apart comma 2 and we'll type alt dot dot function in let me pass here common population of India comma label equal to India color equal to bring so remember we have to pass the legend function on top also the below the first support and we'll type title so eighty dot title will give it is so plot just copy the X label and my little fun talk see you and will turn so as you can see we've got two subplots and in one we have China and another one is India be here yeah but you can see that one is little bit bigger and one is let me to smaller the grid function this is I think the due to the values which are passed okay so this is how you plot two sub plots sidebyside you can also try with different method like style that is 538 so let me see that how it looks okay so this will this looks really nice so this is 538 style okay so we'll create a new file for bar charts and it's concealed so it is at a target repository and I have a pop unit for subplot we've got the data from our main file to the bar chart it is ear operation China India ending lines begin just directly plot the bar chart using power function in that we'll pass the same year population of India labor equality will pass India comma inertia equal to three so same will copy and paste it here and here the pass population of China and make it a Polish ina and color it create thread so so you feel you now run this file really cared by chart like this our China bar chart is showing perfectly but our green colored india's bar chart is like little bit showcasing this is actually happening because the China is China bar chart is all laying on top of India's Pal chart let me show you so for that we can use our method that is that uses offset to separate out fellows but first what we will do is we'll trim down our data below will only contain values from 2015 2025 now it is done let me comment this out can turn this a bar chart so what if we want to draw a bar chart it's my fusion we cannot see the green one it is overlaid by the on this China's population so for that we have my third Norcom that so for that we have to use something called as waste so by default it is 0.25 is okay and we also have to pass indices variable called indices in that we pass the function from numpy and we taught a range and it should contain the length of our should contain at least so we are not imported numpy it just import it is imported and what we have to do is you have to pass the indices in each and every function apart so the time indices here fully red color because these indices are not properly set up to work with our ears in particular so it is just giving us the index from zero to ten so what we will do is really for first part indices indices wait one second we'll keep it as same and pass with wait so that the function will know that we have changed the first value and also meaning not required for second street below epilation comparison between so if you now okay got an error so if we forgot to remove the here because we are already passing it through the indices so we remove here and we'll also remove and if we say everybody feel run you can say India China comparison but ears are still she showing us indices so funded the work as a function of V dot X ticks so in there to be of the pass ticks s parameter further to the pass our indices variable comma we also pass label equal to the year and if we save any field Ron can see ears are shown here you can see how these increasing and it should be a turnon who was 2022 a 324 India is led near to China in 25 across societies so this is how we plot a path chart a vertical bar chart actually so in today's video I'll be showing you how to plot pie charts using matplotlib library so here we have earlier code is used for bar chart so I'll create a new file new python file so i will give the name is pie chart pie underscore chart so we'll import our code from here so the style and import core will be same so we'll copy and paste it here and the end part that is now not show and product read will copy and paste it here for the pie chart pie chart contains slices so we'll create a list of slices for inside debt we pass some values like 40 and 60 so this makes it makes it at 100% so 40% 60% so we'll put the pie chart using parity dot pie function inside that you passed you passed slices as a parameter now if you don't need you can see the pie chart has drawn on canvas and there are no labels and nothing so we had labels here so type labels eco I do so this is also leashed so inside that pastor strings which you want to show so first is 40 comma 60 so for the particular slices this neighbors will be displayed so these labels we have to pass in the PI function so labor is equal to the name of the variable that is labels and so now if we run we can see along with the spices we have the labels also displayed now we will run without this tile 530 so this is the default pie chart style which matplotlib uses so the color you can see it a little bit different you can also pass parameters such as veg coughs so what veg props does is it will create on the border of this particular color or any parameter you want to pass so will pass each color so this is in the form of dictionary so it is having a key value pair so each color will be Co the color we want to showcase that is white so fear on you can see the wheels dominancy you can see that door edges are now colored as white you can also put another color is black etc if you want so I will show you different parameters it can be passed in the PI function under wedge box so let me take you into the matplotlib documentation so we wedge crops then matplotlib enter okay so here you can see my products is not exist or pi then we have wedge so will go in first link and here there are the different parameters so if you go down you can see the wedge drops property so it can it takes dictionary as a parameter and you can also pass dictionary value as line width and we can set the width of the particular line here some examples are also given so here you can see some slices are outside display so these are used these are displayed using or export parameters I will show it in couple of minutes so will pass line with colon 3 in the veg puffs so here you can see the line width it changed so that edge was there it has now little thick so by default it was one I guess if you zoom in you can see around the circle so that edge is so displayed so this is another page from the documentation where you can see the particular wedge function so the different parameter it takes like edge color we have seen then we have different parameters like line style color so try them out if you want now I'll show you how to add custom colors so we'll create a list of colors and we'll pass like red and then we'll pass green so the 40person slice will be right color and 60% of the green color so let me run this okay it is not run because we have not integrated colors in the PI function so we'll integrate colors in the Pythons now let me edit it now and so colors equal to the name of the variable that is colors so now if you run you can see the 40% is in the red and 60 is in green so this is unwelcome this not only works for the percentage like this but also you can include different values in the slices so I have shown for out of hundred you can include different values so it can be out of n values let me show that quickly so let me make it like 40 60 comma we pass another value such as 30 and then another value 25 now we'll pass colors now we'll pass labels so the 30 will pass as other other one will make it and the next would next one will be other two so if we now save it and run it you can see it has now created four slices sixty forty other one another to close this now let's make it as 80 and then this one we make it's 120 yeah and we add some different colors like blue comma yellow now we will run and now you can see the according to the slices it is allocated so we can also pass these are hexadecimal codes of color so you can pass it as custom colors I just copy that and paste it here now what will make it as we grab some data so these are the populations of seven countries so I have taken it from a website I will show in the end the website so we'll paste it in the slices and the name of the countries so we put it in the labels I provide this data in the github repository so you can see that in the description of this video and also we'll make s color as black and aligned with there's one so now if we run it you can see the edges now change to black color and/or all the different countries are plotted along with their own slices so the largest is China and in India as you can see and then we have United States Indonesia but this doesn't look all that good so if you have if we have like more than five values then you should go with the bar chart and if you have like less than five values then you can go with the pie chart so if you want to highlight a particular slides so you can remove that particular slice little bit outside from the center of the circle so we'll first remove the last two countries from the labels and also remove the two values from the list of slices and what we'll do is we create explore leashed so inside this it takes a float as a float values as parameter so we pass zero or zero percent and 0.14 United States 0.1 using the sense like 10% so if you run it again we will also have to pass that export value into the Phi function we are getting an error because we have included a comma inside the line width so we'll remove that comma just outside okay so we remove this explode from here we paste it in the front so after labels will type export equal to the explode list comma and now if you run it you can you will be able to see that United States this little bit highlight it outside so this is do the Explorer so it is taking 10% off the whole radius you can see it is just a little bit outside but it is that 10% of the actual radius if we make it like 0.5 that will be like 50 percent of the total radius so if you run it again you can see it is it has come out from the center about half of the radius so this is how you can now highlight a particular sliced or remove that particular slice it will be outside and also we'll add titles so reality dot title will i population pie chart and one more thing i have to show you is you can also create a 3d effect so we for that we have to have shadow equal to true so what this will do is it will create a shadow around the slice slices and it will give feeling of a 3d chart you can see it has created a dark shadow around India and also around India Indonesia let me make it X bar equal to zero point two it is twenty percent so it will look a little bit better if you run again you can see it has taken a twenty percent of the total radius so you can change the colors according to your needs so I'll show you one more thing let starting or equal to 90 so what this will do is the slice the particular slice or label we have it is China in the first place in the list that will be starting from ninety degree the pie chart will start from the China the slice so you can see goes to China in India so one more thing is if you want to discern if you want to display percentage in the slices so you can do that using a parameter called Auto percent that is Auto PCT equals it is a format it's particular format that we have to pass in Airstream so that is percent 1.1 F % % so this is a particular format you have to take into consideration so if you run it again you can see you know slices they have displayed percentages at a particular country has so nine point one person is of United States so I'll show you from where I got this country's population so this is a website kilometers so we net we have the population of all the different countries current population so I have scraped the data from here the data for this video is included into the data dot P Y so this I included in the git repository you can just refer it so I will give you the link to the mind keep on github repository in the description of this video so in today's video you'll be learning about stat plots stat plots are also called as area plots so let's get started area plots are pretty much similar to the line thought these parts can be used to track changes over time for two or more related groups let make up one whole category for example let's compile the work done during a day by student so we'll go in our project and we create a new Python file so we'll give our name Python file name is stack underscore plot and then we press ok and we copy some starting code from the stat plot from pie chart actually that is importing the numpy SNP and from Metro click import pie plot SP arity then we will use the Styles 538 and then we copy the plot dot show and read functions or will remove the title for now okay so so let's go in data out py so we have five lists here so we'll copy them in we paste it here okay so we just plot them using pie chart so we had already done in the last video lecture so in the pie function will pass Unleashed so how many least we want to show so we have four so we'll type 1 comma 1 comma 1 comma 1 comma then we close the list and we pass the labels for for the list so first is 8 then second one is sleep okay the second one I actually study then he was dead and we extra inverted comma then we have code and then sleep so I will just remove the comma and how to place the code in front of sleep actually so paste it here we will the comma remove the extra commas now okay so this will plot a normal pie chart so I will show you why I am plotting this so we'll type peyote dot title so in that title you give as pie chart okay make that edge okay we'll run this so for that right click and step pots okay so the normal pie chart will give you four quarters we study eat sleep in code but this is like so what if you want to show data for five days in the continuous manner so we can show that actually using pie chart so for that we'll use this stat plot particularly so here you can see for a particular day one a particular student we have one hour of 18 and eight hours of studying six hours of coding 9 hours of sleep so like that we have five consecutive days so we can see second day here's three three hours of eating five hours of study code for eight hours in sleep for eight hours like that so what we will do will remove the PI function so we type parity dot stat plot will open the and this is so inside that we pass our list so firstly is to be one to show is days actually so you can see the data in the eight we have actually our data is increasing in steady east and you see so what will you do will pass first days as a parameter to state plot so this is a list then we pass eight then we'll pass study then code and then sleep okay so that is enough and we change the title as stat plot state plot and now we rightly can we'll run the file so if you run it now to load you can see that it is showing us the data for five consecutive days on xaxis we have days and on y axis we have hours so you can see we have not even the labels actually so we are not finding which one is what so you can see the we will just close it and we will just put the labels now so you create a list for labels so type labels equal to so we open the square brackets and we pass the string first level is 8 for our first reached then vs sleep not sleep actually we have study then third one is code and then the fourth one is so we passed these labels in the stat plot as parameter so labels equal to labels that is our least and he feel run it now so before running we type PLT dot legend so this is very much important so what this will do this will print the labels on the screen so that we can find it as which color is put in pertaining to which particular label so you can see blue is four eight then orange is for study and on yaxis you can see the Owls and XS is vo days so we have then blue color we have this 8 which is actually decreasing middle four third day it was like four or five hours and then the story you can see it is a increasing in order and the code is actually decreasing in the V reach the 50 and the student is actually getting more sleep by the end of the fifth day so you can find it ok so our series we can change the location of the stack plot legend so we'll type in the legend LOC equal to where we want to show that so we'll type upper left so upper space left so this is string that we have to pass in a location LOC variable the legend function so you can see the location of the legend is changed now and it is at upper left corner okay so now what we will do is we will create one more list for colors here you can pass hex code also that is a decimal codes and also the short form or short characters so we have em for magenta C for CN for red and Kay for black yes I already showed you in my little videos you can refer them so we'll pass that list as colors equal to colors in the stat plot function so we will remove the extra spaces white spaces and we run it again we will run it again we will also put tightly out just in case for nice padding so PLT dot tightly out okay so now we will write it here and we will run it again so here you can see our chick colors are chained and it looks really nice now really vibrant okay so magenta is the 8 18 hours see on is there study hours orange orange or kind of fred is coding hours and we have black for sleeping hours but we can see our legend is little bit off the grid with getting outside so we can fix that so what we have to do is in our legend for LOC variable will remove that string and instead of that will pass so tuples so how you create a tuples we have to judge to open and close the pants this an inside debt we have to pass the x and y coordinates or percentage by which you want to shift the legend so we pass so 0.06 that is not actually 6 percent that is 0.06 percent and also that it is from left and from the bottom we will pass 0.06 percent so now save it run it again so you can see our legend is now shifted towards the little bit inside of the area plot and you can see it is nicely put so very see how this is how you can customize your stack so this is just one example you can do more kind of this using step loads you can actually create stacked step plots those are actually sit on top of another so as usual I will provide this Python file in my github link in the description of the video so in today's video I will be showing you how to use macro library to plot an Instagram okay so here we will create a new file new python file and we'll type histogram and press enter okay so our file is open so first will input the might correlate library so import matplotlib dot PI plot SP editing so you are importing plot function from metric library okay so now we will open our it up on the top file so in here I have a list which contains blood sugar levels of patience so this is a string which contains data okay and so diabetic blood sugar levels range I will show you so if the range is from 80 to 100 then the person is a non normal person and he doesn't have a diabetic and if it is from 100 to 125 then that person is pre diabetic patient of diabetics and if he has about 125 blood sugar level then he is a diabetic person so we'll plot the histogram using the above chart above let me comment this first so you know this PLT dot yeast like a cystogram function and open curly parenthesis open and close parentheses so inside need with inside that will pass our list that is a blood sugar okay so we run this particular file mr. brown dot py r actually can run looking you forward to add a show function in order to show the histogram on screen so we type prit dot show no point curly open and close and this is stopped and we'll run it again let me check okay so now we can see our resto gram is loaded so by default you can see it is taking the scale from 80 to 150 because that is the highest number of value 150 be here from less than 80 to 150 and there is the number of people in yaxis so my proudly implicitly has plotted or ten number of beans so beans is actually the number of bars in particular histogram you can say that and now we customize the bins so we'll type beans equal to you we have three categories so we will type in sequel to three and we will pass that beans into the histogram function we type of beans equal to the variable beans and if we run it again we can see that we are presented with only three bins and you can also categorize them using a parameter called edge color we have already used in other graphs so edge color equal to will pass the string is theme of the color we want to place like we can pass G for green so here you can see like we can't see it clearly so we'll make it R for red and we'll run it again so here you can see our beans are surrounded by our edge color of red so that we can easily distinguish between these beans there is one more thing ammeter which you can use so I'll show you that so let me remove the edge color first okay so we'll type our width equal to zero point type eight so R which is actually relative width that is relative to the beam we are targeting so that term it will provide a gap between two bins let me make it explicit so we'll type in sequel to and Unleashed so inside a list we will pass a T comma 100 comma 125 so these are the three categories and the fourth value will be the highest number of category values so we'll pass as 150 so we passed at least into the beans equal to the name of the list that is bins so as you can see now it is recognizing the values we have passed in the bins parameter or bins leashed so it is starting from 82 till less than 150 so this is how you can customize the beans to have a particular raw category and also you can play around with the are good so we'll make it as 0.95 so that you can see that now the width between the two bins are is decrease so one means there will be no gap in between the two bins so you can also pass color parameter so color equal to you can pass G or we can pass green inside of a go string so if we run now our beans color it changed to green you can see and I can I would also show you how to make the beans as hollow so we'll type hitched type equal to step and the step is a string so we enclose it into the single inverted commas and you can see our beans are now Hollow so I will remove them and show you again by really running the program and if you see now you can see that those bins are filled with color and we provide the hitch type a step then it will be Hollow and it will look like steps so that is they did have a kid customized okay now we'll open our data file and I'll pass two strings on to list actually so one is for blood sugar of man and another one is for blood sugar when so this is to static data the least so we'll copy and paste it here and now we'll pass those two lists into our hitch from our histogram function so we'll type that sugar man woman and man okay so instead of directly passing it here we make it as a list and pass it here so let me cut this both of this list from the sugar function okay then we will create a separate variable coil type and inside that we will create a lift and in the camping list we'll pass our both the lists so now if you type type in the extra gram function so it takes both the lift into the histogram function and also will pass colors equal to a list inside that will pass G in anybody comas and our green and red for the colors of the list you know it pass color equal two colors image to our function so if we run it again we can see that the green and red color beans are displayed on the screen but we are not knowing which one is man and which one is a woman so for that we will pass the tangent function and legend function and also the title so we pass PLT tour title and inside that will put the string as a blood sugar levels chart maybe and also we will put labels so we'll go on top and after colors we type label equal to that will pass an interest and in emptiness to the type the string which won't launch so we'll type man and woman so let me enclosing team to the inverted commas okay so now we pass this table into the histogram function by invoking the label equal to label variable okay so if we now turn duck in now before that we have to type the legend function so pH dot legend so you can see the green one is men and red one is women but we forgot to add X&Y labels so we'll get that in a minute so you can see why we have number of people in the XV oh gosh sugar range so we after beans we type of PID Tom X label for labels to blister on xaxis so it is a function inside that will pass a string so we'll type blood sugar range and for y label we'll type PLT or why label and inside that we'll pass a string as number of patients total number of patients and if we turn it again we can see the x and y labels as total number of patients and the blood sugar range on the x axis and y axis respectively so we'll close this so using the h2 Brown you can compare the values so you can see for normal six men are there and in periodic diabetics we have very less number that is two and as compared to the diabetic people normal people are more and women's the more people are more and diabetic diabetic woman's are less so this is how we can compare and analyze the data using the oyster gram so in the future I will show you how to utilize the finance library to display the histogram in a very efficient manner so that's all guys thank you for watching before that I will also show you how to change orientations for that we will type orientation equal to in the it is a string so we'll type WH comma and we'll pass horizontal so this we have to pass English program function okay so if we run it again you can see the x and y axis so total number of patients is now on yaxis and blood sugar in the range is on xaxis so this is how you can change the orientation of this program so thank you guys for watching and I will see you in the next video
