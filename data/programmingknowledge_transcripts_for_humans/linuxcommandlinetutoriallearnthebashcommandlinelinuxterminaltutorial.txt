With timestamps:

00:00 - now the first question you may ask
00:02 - yourself is why bother about learning a
00:06 - command line so the simple answer for
00:09 - this question is graphical user
00:11 - interface or interface like this one
00:15 - is helpful in many tasks but they are
00:18 - not good for all tasks and gradually
00:21 - when you learn command line you will uh
00:23 - observe that you are able to do your
00:27 - day-to-day uh task or any uh task
00:30 - related to some programming much faster
00:34 - than you can do with your graphical user
00:37 - interface now the graphical user
00:39 - interface are user friendly uh you know
00:43 - at the first look but when you want to
00:46 - do more about a program for example
00:49 - knowing the details about uh what's
00:52 - happening in the background then you may
00:55 - want to use command line because uh by
00:58 - using command line you
01:00 - know all the background details of a
01:03 - program right now before diving into the
01:08 - world of Linux command line you need to
01:10 - learn two terms one is the shell and
01:14 - second is the terminal now what is the
01:17 - shell simply put the shell is a program
01:21 - that takes command from the keyboard and
01:24 - gives them to the operating system to
01:26 - perform Right Now command line or shell
01:31 - you can also say it's a CLI CLI stand
01:35 - for command line interface now the
01:38 - second term is the terminal a terminal
01:41 - is a tool which you can use to pass your
01:44 - shell commands this is a program that
01:47 - opens a window and lets you interact
01:50 - with the shell now there are different
01:52 - operating system available for the Linux
01:56 - but I will be using open to operating
01:58 - system now if you don't know how you can
02:01 - install obuntu on a virtual box or
02:04 - VMware Player I have the video on that
02:07 - and you can uh you know watch them and
02:09 - install open 2 on your native Windows
02:12 - operating system also using VMware
02:15 - Player or a virtual box which are
02:18 - virtual machine on which you can host uh
02:21 - your Linux operating system so I will be
02:24 - using open to operating system but you
02:26 - are free to use any other Linux
02:29 - operating system system and uh terminal
02:31 - commands are all same are almost the
02:34 - same on all you know Linux based
02:37 - operating system now on open to how you
02:40 - can open a ter terminal it's really easy
02:43 - so you just need to go to uh this button
02:46 - and then just click it and then search
02:49 - for terminal so just write uh terminal
02:53 - and the first uh icon you will find here
02:57 - is your terminal so when you click it it
03:00 - will open the terminal right now there
03:03 - is uh one command to open uh terminal
03:05 - also which is a keyboard shortcut when
03:08 - you press uh Control Alt T it will also
03:13 - open our terminal okay so this is the
03:15 - shortcut for uh opening the terminal now
03:20 - once you are in the terminal then you
03:22 - can perform bunch of command but before
03:26 - this we need to understand what is a
03:29 - file system
03:30 - and how uh you know these file system
03:34 - work in uh Linux right so like all other
03:39 - operating system the files on Linux
03:42 - system are also arranged in what we
03:45 - called a hierarchal directory structure
03:49 - which means that they are organized in a
03:52 - tree like pattern of directories in
03:55 - Windows you uh know directories as
03:58 - folders also now directories may contain
04:01 - files or other directories also now the
04:05 - most uh uh you know root or basic
04:08 - directory in uh Linux is the root
04:10 - directory and under this directory all
04:13 - files and folders are uh reiding now I
04:18 - will use this graphical uh interface to
04:21 - show you this uh file system of Linux so
04:24 - I will just go here which is files and I
04:28 - will open this and and then I will go uh
04:31 - to this computer so just click this
04:34 - option which says computer and this is
04:37 - your root folder okay and root folder
04:41 - start from this forward slash you can
04:44 - see here okay and then all the
04:46 - directories reside in this root folder
04:49 - for example home uh lib or bin which
04:53 - contain all the binary uh you know
04:56 - binaries of your uh Linux operating
04:59 - system and other folders which we learn
05:02 - later right so every uh Linux operating
05:06 - system has this root folder and under
05:08 - which all the files reide okay now let's
05:12 - start our Linux command line Journey now
05:16 - the First Command you may want to learn
05:19 - is the
05:21 - PWD command which is a present working
05:25 - directory command and this shows you in
05:29 - which directory you are currently in so
05:33 - let's give the PWD command so just give
05:36 - PWD and press enter and it says home/ uh
05:42 - programming knowledge which is my
05:43 - username for this computer okay so
05:46 - whenever you will open uh terminal by
05:50 - default the per present working
05:52 - directory is your home directory which
05:55 - is home/ your username in my case it's
05:59 - uh programming knowledge right now if
06:02 - you want to go to the root folder what
06:06 - you need to do so if you want to go to
06:08 - the root folder there is a command
06:11 - called uh CD which is a change directory
06:15 - command we will learn this change
06:17 - directory command in details in the
06:20 - later video but uh I will just show you
06:22 - how it works so just give CD and then
06:25 - give forward slash here which is our
06:29 - root directory okay so just press enter
06:33 - and then we will be in the root
06:35 - directory so once again when you press
06:37 - PWD command and press enter Then you can
06:42 - see we are now in the root directory the
06:46 - other command is LS which is list this
06:49 - command also we are going to learn in
06:51 - detail in the next uh videos but let's
06:54 - see how it works so LS is to list all
06:58 - the files and directories in the uh
07:02 - present working directory so just uh
07:04 - give LS and press enter and it will show
07:07 - you the same directories and files which
07:10 - you can see here so I will just uh make
07:13 - it a little bit smaller so that we can
07:16 - see so you can see bin daav boot Etc all
07:20 - the files on folders you will be able to
07:23 - find here in this user interface as you
07:27 - can see here also which are listed
07:30 - by using this Lis command Okay so uh I
07:34 - think that's it for this video in the
07:37 - next video we will uh you know start our
07:39 - journey with Linux command line and we
07:42 - will learn the basic command and we will
07:44 - gradually move to the advanced stuff hey
07:47 - guys welcome to the next video on Linux
07:50 - command line tutorial for beginners and
07:52 - in this video we will learn about LS
07:55 - command LS is a Linux shell command that
07:59 - lists
08:00 - directory contents of files and
08:03 - directories now first of all let's open
08:06 - our terminal I have uh told you in the
08:09 - last video If you press control alt T
08:12 - then it's going to open your terminal so
08:14 - just press control all T to open the
08:17 - terminal now for the ls command you need
08:21 - to know some syntax so we all know that
08:25 - LS command can be given by just writing
08:28 - LS on on the terminal but it has some
08:31 - options so these options will come in as
08:35 - a second argument so we can say here
08:38 - comes the options right and then comes
08:43 - the file or directory name so you can
08:46 - say here comes the file uh or directory
08:50 - name so you can write FD okay so LS
08:55 - command comes with options first and
08:58 - then files and directory tree now I will
09:00 - show you what I mean by that so first of
09:05 - all simple LS command will uh you know
09:09 - work like this only which list the
09:12 - content of our directory so we are uh
09:16 - you know whenever we open the terminal
09:19 - we are in the home directory right so we
09:21 - can just say LS and it will show us the
09:25 - contents of our home directory which is
09:29 - uh the desktop or um other document
09:32 - directory or you know downloads or other
09:35 - directories the same when you open this
09:38 - folder when you click here it will also
09:40 - open the home directory and you will be
09:43 - able to see all the contents uh of the
09:45 - directories here so these all the you
09:49 - know contents are here also so whatever
09:52 - you see here will be listed here also
09:55 - okay now the second uh option of using
10:01 - Lis command is by using a directory uh
10:05 - name for example we want to see the
10:08 - contents of uh this document directory
10:12 - right so our document directory contains
10:15 - these two files so how we can list uh
10:19 - the content of this document directory
10:21 - you can just write LS and then just
10:24 - write uh documents and then press enter
10:28 - and it'll list all the files which are
10:31 - there in the documents directory right
10:33 - in the same way if you want to list out
10:36 - all the contents in the downloads folder
10:39 - then I will just say LS downloads okay
10:43 - and press enter and it will show us the
10:46 - contents of the downloads folder right
10:49 - so simple now if you want to list out
10:52 - all the contents of our root folder as I
10:55 - have shown you in the last video you
10:57 - just need to give LS and then forward
10:59 - slash which is our root directory right
11:03 - and press enter it will show us the
11:05 - content of our uh root directory and in
11:08 - here you can verify this by going to
11:11 - this uh computer option and you can
11:14 - match all the directories here and here
11:17 - right now uh by default as I already uh
11:21 - told you we whenever we open the
11:23 - terminal we are in the home uh you know
11:27 - directory right now
11:30 - home directory uh you can just uh give
11:33 - PWD command and it will give you what is
11:36 - your home directory and this is your
11:40 - home directory right right so you are
11:42 - presently in your home directory now in
11:45 - uh other terms when you uh you know want
11:49 - to uh list out the content of home
11:52 - directory you can just say LS and then
11:55 - give this uh till day symbol which will
11:58 - also give you the same content as Lis
12:01 - will give you so let's print out Lis
12:04 - first but uh let me clear all the
12:07 - commands which I have given earlier so
12:10 - to clear the terminal you just need to
12:13 - write clear here so just write clear and
12:16 - press enter and it will clear your
12:18 - terminal and clear means your terminal
12:21 - will be you know blank but when you
12:24 - scroll up all the you know all the
12:27 - commands are there so clear means means
12:29 - it will just scroll down a little and
12:31 - it'll blank out your terminal for you so
12:35 - let's list out again so LS so it gives
12:38 - me the content of my home directory and
12:41 - when whenever you give LS and this till
12:45 - the symbol the till day also means the
12:48 - home directory so whenever you press
12:50 - enter it'll give you the same content
12:53 - and whenever you do uh LS and you can uh
12:58 - type the path
12:59 - Pro uh you know by yourself so home
13:03 - programming knowledge which is my home
13:04 - directory once again and when I press
13:06 - enter it will give me the same uh
13:10 - directory structure right so there are
13:12 - three command to list out uh the same
13:15 - thing one is LS which will give you uh
13:18 - all the contents of your home directory
13:22 - when you open your terminal right and
13:24 - then LS till day which will be uh also
13:28 - giving you the same content so this
13:30 - still there means the your home
13:32 - directory and also your uh you can type
13:36 - the home directory file path something
13:38 - like this now let's see some
13:41 - options so whenever you want to go
13:45 - inside some directory as I have uh done
13:47 - so I will just say LS document and uh
13:52 - you can just list out anything but you
13:55 - can just write LS and then do Dot and
14:00 - this dot dot means you want to print out
14:03 - one step back directory structure right
14:07 - so whenever you press LS like this it
14:10 - will give you programming knowledge
14:13 - because right now we are in home and
14:16 - then programming knowledge so whenever
14:18 - we want to uh print the content of Home
14:21 - folder then uh we just need to give
14:24 - these two D dots it will tell you just
14:28 - one fold back right if you want to go
14:32 - two folders back and you want to list
14:34 - out the content of uh two folders back
14:37 - uh content then you can do dot dot and
14:41 - then forward slash and once again dot
14:43 - dot and then press enter and you can see
14:47 - it will give you your root directory uh
14:50 - you know directories and file structure
14:53 - so this will uh you know go to the root
14:57 - directory because right now we are in
15:00 - home uh our home you know directory so
15:04 - whenever you go one step back you will
15:06 - be here in your home and one step back
15:10 - once again you will be in your root
15:12 - folder okay once again I will uh clear
15:15 - the screen and then we will move forward
15:19 - now uh there is uh are some Flags or
15:23 - options as I told you you can use with
15:25 - ls files so for example you give LS
15:29 - minus L and this means you want to list
15:33 - out all the files and directory in Long
15:35 - format and when you press enter it'll
15:38 - give you the listings in Long format let
15:41 - me just uh make it a little bit bigger
15:44 - and I will give it once again this
15:46 - command so clear and LS minus L and it
15:50 - gives you the you know content in Long
15:53 - format long format means it will give
15:56 - you the details uh who is your uh you
16:00 - know user what are the rights for this
16:04 - file and what is the size of your file
16:07 - and at which date this file was created
16:10 - and the time at which this file is
16:13 - created right now you may be wondering
16:16 - what is this Dr WXR or what are all
16:20 - these things so you can see there these
16:24 - are the user rights so these user rights
16:29 - are separated by uh this minus uh symbol
16:33 - so the first uh you know this thing
16:37 - which is Dr WXR so what does this mean
16:41 - so d means directory here R means
16:46 - read w means uh write X means execute
16:51 - and once again R means write so these
16:53 - are the rights of the owner owner means
16:57 - so whoever is log in so I can uh you
17:01 - know read write execute this uh
17:04 - directory which is desktop right second
17:08 - is the group right after this minus
17:11 - right so execute and read are the rights
17:14 - of the group and then the third is for
17:17 - the others which is only execute this
17:20 - directory okay so this is how you can uh
17:24 - you know list out the long list of five
17:29 - and directories now there is one more
17:31 - command which is LS minus a and this
17:35 - will give you the hidden files also so
17:39 - this will show you the hidden files also
17:42 - so just write LS minus a and it will
17:45 - give you all the hidden files so these
17:48 - are dots and double dots and do Android
17:51 - and Bash history log out. cach these are
17:55 - all the hidden files so hidden files in
17:58 - linux. from dot okay and they will not
18:01 - be shown here you can see these uh dot
18:04 - files are not here so whenever you give
18:08 - LS minus a it will give you all the
18:10 - hidden files right and then you can
18:13 - combine uh the options so whenever you
18:15 - give LS
18:17 - minus a for uh showing the hidden file
18:21 - and then L for showing the long list
18:25 - then it will give you the hidden file
18:26 - and long list come be combined okay so
18:31 - press enter it will give you long list
18:33 - and hidden file right something like
18:36 - this I will make it a little bit bigger
18:38 - so you can see it okay and I will uh
18:40 - just clear the terminal once again now
18:44 - there are some more commands for example
18:47 - you can sort your uh directory by their
18:52 - size so I will just give LS minus L for
18:56 - long list and then when you give capital
18:58 - it s it will sort your directory by
19:02 - their size so press enter and you can
19:04 - see the file which has uh the biggest
19:08 - size is listed first and then uh this
19:13 - will go down as according to the size so
19:16 - whatever file has the lowest size will
19:19 - be at the bottom and whatever files or
19:21 - directory has the biggest size it will
19:23 - go at the top right so you can sort it
19:25 - something like this now for example
19:28 - example we want to uh you know list
19:32 - something which uh Only We Know the
19:35 - extension of so let's uh list for
19:39 - example you can just write LS once again
19:42 - we will uh list out document list so
19:45 - just write documents and press enter and
19:48 - this document has uh this uh test.html
19:52 - and test. CS file but for example I want
19:56 - to only list out all the h HML files
19:59 - which are there in the document folder
20:01 - so what I I can do so I can just write
20:04 - LS and then I can just uh write
20:07 - documents and then I will just give this
20:10 - wild card which is estx so which uh will
20:14 - be will search for all the prefix uh
20:17 - which are there right and then I will
20:19 - just write Dot and then I will just
20:21 - write HTML so this means I want to
20:24 - search for all the files which ends with
20:28 - DOT
20:29 - HTML and then I will press enter and it
20:32 - only prints out this test. HTML which is
20:36 - correct because we wanted to print out
20:38 - only HTML files in the other way when
20:42 - you give uh estx dox which means all the
20:46 - files so whatever all the extensions and
20:49 - all the names right and press enter and
20:52 - it will list out these two files which
20:55 - are there in your documents directory
20:58 - right
20:59 - right now uh you can also output uh the
21:03 - content of your LS to a file so for
21:07 - example I want to uh you know save all
21:12 - the result which I have listed here to
21:15 - some file so I will write LS minus for
21:19 - example L with capital S and then I want
21:22 - to save all the content to a file so I
21:25 - can just give this angle bracket and
21:28 - then the name of the file which uh I
21:32 - want to uh you know save these content
21:35 - to so I will just say out.txt by the way
21:38 - this out.txt is not existing here so it
21:41 - will create this out.txt and then fill
21:45 - all the result of Lis command to this uh
21:49 - you know out.txt file so this arrow
21:53 - means the direction of uh the stream so
21:56 - it will uh put all the content in into
21:58 - the output right and press enter and you
22:02 - will be able to see we have one new file
22:05 - created which is out.txt and when I open
22:08 - this file then it'll uh just you know
22:13 - fill all the result of Ls minus LS
22:17 - command to this output file right so you
22:21 - can do this or you can output the
22:23 - content of the file also to a file now
22:26 - the next command is to list out only the
22:30 - directories so for example you want to
22:32 - just list out only the directories you
22:34 - can just give uh LS minus D and then you
22:39 - just need to give uh estx and forward
22:42 - slash and it will list out all the
22:44 - direct directories okay so you can see
22:47 - it's not listing out the files but only
22:50 - the directories right so these are all
22:53 - the important commands related to LS but
22:57 - this is not all Lis is uh you know
23:00 - having more options and flags and if you
23:04 - want to know more about this Lis command
23:07 - what you can do so you I will just clear
23:10 - the terminal first of all and to know
23:13 - more about this LS command you can just
23:15 - write men and then LS so men is uh you
23:21 - know is a you can say the dictionary
23:24 - kind of thing for your Linux commands
23:28 - right and whenever you give this men
23:30 - command and then uh give the command
23:33 - name which you want to see or uh you
23:35 - want to take the reference of then when
23:38 - you when you click enter here it'll give
23:41 - you all the options which you can uh use
23:43 - with ls so you can see LS minus list
23:47 - directory content so this is the
23:48 - explanation of this and then you can see
23:51 - all the flags so I have shown you how to
23:53 - use minus a but I haven't shown you how
23:56 - to use minus B so you can find find out
23:58 - all the you know important information
24:01 - what this minus B does or what this
24:04 - minus C does or what this minus D does
24:06 - so d as I've have shown you list
24:09 - directory entries right and uh I have
24:12 - also shown you what L does so I have
24:15 - only shown you the important command
24:17 - related to LS but there is a big list uh
24:21 - which you can uh you know execute with
24:23 - this LS command so you just need to
24:26 - write M man and then LS and it will give
24:29 - you this kind of interface which you can
24:31 - see the reference right and you can see
24:34 - at the bottom whenever you press Q or
24:37 - right quit then you uh quit this man
24:41 - terminal so I will just press Q which
24:44 - will quit the uh terminal right so just
24:47 - remember this man command if you want to
24:50 - take the reference of all the all the
24:54 - you know references of particular
24:57 - commands hello guys welcome to the next
24:59 - video on Linux command line tutorial for
25:01 - beginners in this video we will learn
25:04 - how we can use CD command in Linux CD
25:08 - command we can use to change the current
25:10 - working directory in Linux so let's see
25:14 - how we can use it so first of all I'm
25:17 - going to press control alt T to open my
25:21 - terminal and then I'm going to uh just
25:24 - use uh the command so first of all let's
25:28 - see the syntax of CD so you can just use
25:32 - CD as it is and it can be used with the
25:36 - directory name also so you can just
25:39 - write there here right so first of all
25:43 - whenever you give the CD command as it
25:47 - is it's going to uh lend you in the
25:51 - current home directory right so you see
25:55 - it's the home whatever you open whenever
25:59 - you uh open the terminal for the first
26:01 - time it'll uh you know land you there
26:04 - right and then for example you want to
26:09 - uh go to somewhere for example we want
26:12 - to uh change directory to the root
26:15 - directory as we have seen in the first
26:17 - video root directory is this forward
26:19 - slash and then press enter and now we
26:23 - are in the root directory and you know
26:27 - you are in your root d Dory by this
26:29 - forward slash here and uh by default you
26:33 - have this still which is a home yeah
26:35 - right so first of all let's see in which
26:38 - directory we are so we are uh in root
26:43 - directory so we will just give PWD and
26:45 - see if we are in that directory or not
26:48 - so you can see we are in root directory
26:51 - right now once again if you give uh CD
26:55 - and then this uh till day symbol then
26:58 - this means your home directory home
27:02 - directory is nothing but your home slash
27:06 - username right so once again I give this
27:09 - command and then once again I give the
27:12 - PWD command and you can see we are in
27:15 - now our home directory right so This Ti
27:20 - can be used also with CD Command right
27:23 - now there is a command something like CD
27:28 - dot dot and it means we want to go to
27:32 - The Parent Directory of the current
27:35 - working directory so for example our
27:38 - current working directory is
27:42 - home/ programming knowledge which is my
27:44 - username so when I give a CD dot dot
27:48 - then we will go one folder above or
27:52 - parent of the current folder so I will
27:55 - just uh press enter and now you can see
27:58 - we are in the home uh folder so I will
28:01 - just once again give PWD and now we are
28:04 - in the home folder so we go one folder
28:08 - above
28:10 - right in a same way for example I will
28:14 - once again go to my uh home directory by
28:18 - CD till day and then for example I want
28:22 - to uh LS first let's see LS and what are
28:26 - the directories and documents in this
28:29 - folders so in uh my home directory we
28:32 - have a desktop or document folder or
28:36 - other folders right so to uh go inside
28:40 - those folder or to change the directory
28:43 - for example to the document folder you
28:45 - can just write CD and then document okay
28:49 - so just write CD document something like
28:52 - this and you will go to the documents
28:55 - folder once again I will go to my home
28:58 - folder by just uh give giving the CD
29:01 - command and then you can also go to the
29:05 - documents folder by just giving its
29:09 - absolute path so you can just give uh CD
29:13 - home then my username which is
29:15 - programming knowledge and then the
29:18 - documents folder okay so you can either
29:22 - give the absolute path which is home uh
29:26 - username uh documents for example
29:28 - example or you can give the relative
29:30 - path something like uh CD document this
29:33 - is the relative uh path right so we are
29:37 - already in the document so we will go
29:40 - home and then we can say CD uh documents
29:45 - and we will go to the documents folder
29:47 - right so you can give uh absolute path
29:51 - or the relative path related path is
29:54 - nothing but so for example I do LS and
29:58 - whatever directory you see uh inside
30:01 - your present working directory you can
30:04 - just directly give the name of that
30:06 - directory so for example CD and then uh
30:10 - I can just uh give download this time
30:13 - and press enter and we are in the
30:14 - downloads right now the next command is
30:20 - going to the the directory inside the
30:23 - directory so for example uh let's go to
30:27 - our home and let's clear the screen for
30:30 - now and let's see what we have in our uh
30:35 - document folder so I will just go to the
30:38 - documents folder and I will just do LS
30:42 - and uh in here I have uh the two files
30:47 - but for example I will create one more
30:50 - folder here inside a documents folder so
30:52 - I will just go inside the documents
30:55 - folder and I will create a new folder
30:58 - folder for example I will say it's a
31:00 - book folder books folder okay and I want
31:04 - to go inside this folder so how I can do
31:07 - this I can just do CD which will change
31:11 - the directory to the home directory and
31:14 - I can just give uh the command CD
31:18 - documents and then books something like
31:21 - this so you can uh go in the books by
31:25 - giving this command and press enter and
31:28 - we are inside this books folder and then
31:31 - right now it has no files but for
31:34 - example I want to create a document I
31:37 - will say just uh test dot uh txt files
31:42 - right so do txt file and I will just do
31:47 - LS and you see we have the txt file
31:51 - test.txt file now next command is for
31:56 - example I want to na naate inside this
31:59 - books folder and I will create one more
32:02 - folder there is a command to create uh
32:05 - directory by the way but uh this command
32:09 - we are going to see in the later videos
32:11 - that's why I'm not showing you this
32:12 - Command right now and I'm going to use
32:16 - this graphical view to create my folder
32:18 - so for example I will say this
32:21 - is my books folder okay and if You
32:26 - observe I have left a space between my
32:30 - and books right and I left the space
32:34 - intentionally so when I do Lis here it
32:37 - will show me there is a folder called my
32:40 - books but if you uh create a folder or
32:44 - directory with my book for with a space
32:49 - then how you can navigate to this uh
32:51 - directory for example I will do my uh CD
32:55 - and then I will just uh you know write
32:59 - my books and press enter and it will
33:01 - give me the error because CD is just
33:04 - looking for the first uh you know
33:07 - argument after this CD command and if
33:10 - it's a space there are two arguments
33:12 - after this CD command so how you can go
33:15 - inside the folder which has space
33:18 - between it there are three options uh
33:21 - you can use to navigate such kind of
33:24 - folder first option is you can just
33:26 - write CD and and then do my and then you
33:30 - give this backs slash and then you give
33:33 - books for example something like this
33:36 - and when you press enter you will go
33:40 - inside this my books folder okay I will
33:43 - go once again one folder above and the
33:47 - second option is instead of uh using
33:50 - this uh back slash you can just write
33:53 - double code and then you can just write
33:56 - my
33:58 - Books Okay and press enter and also you
34:02 - are in your my books folder right once
34:05 - again I will go back one folder ahead
34:08 - and the third option how you can uh go
34:11 - uh inside this folder of directory which
34:15 - has uh the space between it you can just
34:18 - give single quote around your uh
34:21 - directory name so press enter and also
34:24 - you are in the same directory okay so
34:28 - what are the command we have used today
34:31 - or we have learned today so I will just
34:34 - clear the terminal and I will once again
34:37 - tell you what are the commands we have
34:38 - learned so CD command if you give then
34:42 - you will go to your home directory okay
34:45 - so I will give CD and I'm in my home
34:48 - directory now in order to navigate to a
34:51 - particular directory I need to give its
34:54 - absolute path or relative path so for
34:56 - example I want to go to ro root I will
34:58 - just say uh cd/ root and I'm in the root
35:02 - folder once again I will go to my home
35:05 - folder and for example I want to go to
35:08 - CD user bin okay so I will give its
35:12 - absolute path and I'm in the CD user bin
35:16 - and I can just list out all the content
35:18 - of uh this folder by Alis which we have
35:21 - seen in the last video I will uh clear
35:24 - the terminal once again the next command
35:28 - is the relative path so for example I
35:30 - will once again go to my home directory
35:33 - and I will just say CD and I want to
35:36 - navigate to documents so I can just uh
35:40 - give CD documents or if I want to go uh
35:43 - one folder inside this document I want
35:46 - to navigate to the books folder I can
35:48 - just give uh this uh type of uh you know
35:51 - command and PR press enter and we are in
35:54 - the books folder now we have created
35:57 - created a folder with a space between
36:00 - its name then you can use a CD and then
36:05 - either you can use backwards slash
36:07 - between the space or you can enclose
36:11 - this name between double codes or single
36:14 - codes and you will be inside that
36:17 - directory and you can work with it hello
36:21 - guys welcome to the next video on Linux
36:22 - command line tutorial for beginners in
36:24 - this video we will learn how we can use
36:27 - a cat command in Linux cat is one of the
36:31 - most frequently used command on Linux it
36:35 - has three related function with regard
36:38 - to text files one is displaying text
36:43 - file second is combining copies of uh
36:47 - text files and third is creating new
36:50 - text file so let's see how we can use
36:54 - cat command so I will just press control
36:58 - alt T to open my terminal so I will just
37:02 - press control alt T and it will open my
37:04 - terminal now
37:07 - the Syntax for using cat command is you
37:11 - just need to write cat here and then you
37:15 - uh give options so just give some
37:18 - options and then you give the file names
37:22 - so for example file one file 2 and and
37:27 - so on okay something like this so let's
37:31 - see how we can use cat command so first
37:34 - of all you can just give cat and press
37:38 - enter and you can see uh it's giving us
37:43 - this kind of cursor so we can just type
37:47 - for example
37:49 - hello
37:51 - world and then press enter and it will
37:55 - Echo whatever input we have given right
37:59 - so once again um I can say Echo
38:06 - input and press enter and it will Echo
38:09 - it again so you can see this is the
38:13 - basic functionality without any option
38:17 - for the cat command but cat is not only
38:21 - the echoing uh you know program it can
38:24 - do uh much more than echoing something
38:28 - so to exit this scat command you can
38:32 - just press controll D which means the
38:36 - end of uh the file so just press
38:39 - controll D and you are out of uh this
38:41 - scat Command right now first of all
38:44 - let's see uh what files we have in our
38:49 - folder so I will list all the files in
38:52 - the current folder which is my home
38:54 - folder and uh you can see these are all
38:57 - the files directory in my uh home folder
39:00 - so for example I have this uh file
39:03 - called list one. text okay and I will
39:09 - just show you what are the content of
39:11 - this file so this file contains three
39:14 - lines line one line two and I have a
39:18 - line break or a blank line here and then
39:21 - I have the third line okay so I want to
39:26 - print this uh uh text file on my
39:30 - terminal so I can use cat and then the
39:34 - name of the file so the name of the file
39:37 - is list one. text and press enter and it
39:41 - will display me the content of the file
39:46 - same as like this okay now for example I
39:50 - want to show the content of two files so
39:54 - you can see here I have list one. text
39:57 - here
39:58 - and I also have list 2. text also right
40:02 - so I will just show you the content of
40:04 - list two also so I have uh once again
40:09 - three lines and one blank line here
40:13 - right so for example I want to display
40:15 - the content of both the files I can just
40:19 - add one more uh file name here list 2.
40:22 - text and press enter and then it'll
40:26 - combine the the content of both the file
40:30 - and display me on this terminal right so
40:34 - the first uh uh use of cat command you
40:38 - can say is for displaying the content of
40:41 - a file right or multiple
40:44 - files now there are some options related
40:48 - to cat command so for example I want to
40:53 - show the line number on uh the every
40:57 - line of the content of the file for
41:00 - example so I can use cat and then minus
41:04 - B which will add line number to
41:08 - nonblank lines okay so I will just uh
41:13 - give the name of my list one. text for
41:18 - example and press enter and you can see
41:20 - it adds the line number to the nonblank
41:24 - line so you uh if you remember
41:27 - my list one have one blank line here
41:32 - right and it will skip or it will not
41:36 - add the line number to the blank line
41:38 - but all the lines which have some
41:41 - content it will add add the line number
41:43 - to them now next command First Let Me
41:47 - Clear the terminal and press enter so it
41:50 - will clear the terminal the next command
41:53 - is get minus n and what it will do is it
41:58 - will add line number to all the lines so
42:01 - for example I will just say list one do
42:05 - text and press enter and now it has
42:08 - added the line number to the blank line
42:11 - also
42:13 - right now for example I have a text file
42:18 - which have multiple line breakes
42:21 - something like this a big line breaks
42:24 - right and I want to you know uh display
42:28 - the content of the file and I want to
42:31 - remove uh this these all line break big
42:34 - line break and I just want to show only
42:37 - one line break right so let me save this
42:39 - file and then I will just say
42:44 - cat and I will just give the command
42:48 - minus s and then the name of the file
42:52 - list one. text and press enter and what
42:56 - this command does is it squeezes blank
43:00 - lines to one blank line okay so here
43:06 - there can be many lines but it'll you
43:09 - know squeeze all the blank line to only
43:12 - one blank line and it will not affect
43:15 - the content of the file remember it will
43:18 - only display the content of the file in
43:21 - this format right so it's not changing
43:24 - the content of the file but only
43:26 - displaying it in our convenient uh you
43:30 - know manner right now the next command
43:35 - is cat minus capital E command so I will
43:40 - just uh revert my changes here and I
43:44 - will save this file and now I will just
43:47 - give cat minus capital E and then I will
43:52 - just uh once again uh give this list
43:55 - one. text right and then it adds this
43:59 - dollar symbol at the end of each line
44:03 - okay so you know that this is the end of
44:07 - the line okay so these are the basic
44:10 - commands and option related to cat
44:12 - command now if you want to know more
44:16 - options related to cat you can just
44:19 - enter men if you remember in the earlier
44:22 - video I have shown you how to use men
44:25 - pages so just use men n and then just
44:28 - enter cat and press enter and then you
44:32 - will be able to see there are more
44:34 - options related to cat command for
44:37 - example minus a which means show all
44:42 - or minus E which is equivalent to minus
44:46 - V or these are all the options which you
44:49 - can use with cat command I I just showed
44:52 - you the most important options with cat
44:56 - command so just use man to you know read
45:00 - or learn more about this cat command and
45:04 - when you press Q you quit the these Man
45:08 - pages now uh the cat command can also
45:12 - create new files but this we will see in
45:16 - the next video when I will show you how
45:19 - redirection Works using command
45:23 - line hello guys welcome to the next
45:26 - video on Linux command line tutorial for
45:28 - beginners in this video I'm going to
45:29 - show you how we can use redirection in
45:33 - Linux first of all what is redirection
45:36 - redirection simply means capturing
45:39 - output from a file command or program
45:42 - and sending it as an input to another
45:45 - file command or program and let's see
45:48 - what are the options we have for the
45:51 - redirection so for example you want to
45:55 - uh you know transfer something
45:57 - some output so I will just write output
46:00 - here and then you want to redirect it to
46:03 - a file for example so in this case we
46:06 - want to send some output to a file and
46:09 - the pointing uh you know end of this
46:12 - arrow is the direction of your output so
46:16 - you want to send the output to the file
46:18 - so this point means the direction of
46:23 - your output right so let's see how we
46:26 - can use it so in the last video I've
46:29 - shown you how we can use cat command in
46:31 - Linux so we are going to use this cat
46:33 - command to uh create a file and then uh
46:38 - transferring our uh you know stream to
46:41 - this file so just write cat here and
46:44 - then this angle bracket this means uh we
46:48 - want to redirect our uh you know input
46:52 - or whatever output we are going to type
46:55 - in the terminal to a file and uh let's
46:58 - name a file something so for example
47:02 - text.
47:04 - txt okay and when I press enter here you
47:08 - will see there is a new file created
47:11 - right as soon as you press enter now
47:15 - whatever you write here then this
47:17 - content will be written to the file for
47:20 - example I will just write uh line one
47:24 - line uh two line uh three for example
47:29 - and this will be written to your file
47:32 - and to uh you know show the end of the
47:35 - file you just need to press contrl and D
47:38 - so just press control D to uh you know
47:41 - indicate that this is the end of your
47:43 - file and then you are out of this scad
47:47 - command and let's see what's the content
47:49 - of this test file so I can just uh cat
47:53 - this uh test file here so just press
47:56 - enter and you can see uh the content of
47:59 - this uh
48:01 - test.txt file
48:03 - right now for example what I want to do
48:06 - is I want to once again uh transfer
48:09 - something else uh to this file so once
48:12 - again I will just uh do cat with this uh
48:16 - angle bracket and then the file name and
48:20 - then this time I want to add for example
48:23 - line uh four here and then line
48:27 - uh five for example and let's say I want
48:31 - to add one more line for example line
48:35 - six here okay and then I will just uh
48:40 - press controll D to end this uh file and
48:45 - now I want to see the content of this
48:47 - file so I will just give cat. test.txt
48:51 - right and press enter and now you will
48:54 - see that this test txt file contains
48:58 - line four five and six and earlier
49:01 - whatever content we have written to the
49:03 - file is overwritten by the new content
49:07 - right this content now for example you
49:10 - want to append uh to the file you want
49:13 - uh that this file should not be
49:16 - overwritten but it should be whatever uh
49:19 - you want to add to a file it will be
49:21 - added from the next line for example
49:24 - right so what we do in that case we give
49:27 - the same command with two angle brackets
49:31 - so this is for appending to the existing
49:35 - content of a file right so when you give
49:38 - two angle brackets and press enter and
49:41 - now I will say
49:43 - line seven here line 8 and
49:49 - line nine for example okay and I will
49:52 - press controll D and then once again I
49:54 - will see the content of the file
49:57 - and now it shows me uh line 345 which is
50:01 - from my last uh you know command and
50:05 - then I have added these three new lines
50:07 - so if you want to append to the existing
50:11 - content of a file you may want to use
50:13 - these uh two angle brackets okay now
50:18 - sometimes you want to uh you know add
50:20 - two files and then transfer the content
50:23 - to the new file right so I have these uh
50:28 - two uh files list one and list two for
50:32 - example so let me show you the content
50:35 - of these two file first I will clear the
50:37 - terminal it should be
50:39 - clear and press enter and then cat list
50:45 - one for example and it contains uh these
50:48 - three lines and let me show you the
50:50 - content of uh list two also so it
50:53 - contains these uh three lines also right
50:56 - now I want to add the content of these
50:59 - two files and transfer it to a new file
51:02 - so what I can do is I can just write cat
51:06 - and then I will just uh write the name
51:08 - of these two files list one and then
51:11 - space list uh two and then I will give
51:15 - the angle bracket here something like
51:18 - this and then I want to transfer the
51:21 - content to a new file for example let's
51:23 - say its uh name is out do
51:27 - txt something like this okay and let me
51:31 - make it little bit bigger so we can see
51:33 - the command so this is the command so I
51:36 - want to join these two files and then
51:38 - transfer the content of uh the
51:41 - concatenation of these two files to a
51:43 - new file so when I press enter the new
51:47 - file will be created this file already
51:49 - exist here so it's not creating but if
51:52 - uh it doesn't exit it will create this
51:54 - file and then when I see see the content
51:57 - of this out. text file I can see uh the
52:01 - combination of our two files so in this
52:04 - way you can add uh any number of fil for
52:07 - example you have three or four files you
52:09 - can just write list one list two list
52:10 - three and list four and then redirect it
52:13 - to a new file now for example I would
52:16 - just want to uh redirect the content of
52:19 - these two file to the file two itself so
52:24 - what should I do I can just write
52:26 - something like this so I just write uh
52:29 - cat list one list two and I want to uh
52:32 - transfer the output to the list to
52:34 - itself so I will just write here list
52:38 - two and press enter and it says input
52:42 - file is output file here right so you
52:45 - cannot do this like this so what you
52:48 - need to do here you need to do something
52:51 - like this so you just need to give the
52:55 - list one text and then append it to the
52:59 - second file which is our list 2.txt file
53:03 - right instead of uh giving uh this
53:06 - command if you give uh this command this
53:08 - will work so when you press enter this
53:11 - command is executed and let's see the
53:13 - content of uh list two now so just write
53:16 - list uh 2. text and press enter and now
53:20 - you can see list two contain the
53:22 - combination of uh these two files right
53:26 - so so in this way you can use uh
53:28 - redirection in Linux so it's not uh you
53:32 - know particularly related to the cat
53:35 - command you can do the same thing with
53:37 - for example I will just write LS minus
53:40 - Al to out. text so I will just write
53:45 - out. text and press enter and when I see
53:48 - the content of out. text it'll give me
53:52 - the output of Ls Command right so it's
53:55 - not particularly related to cat command
53:58 - you can use this redirection to uh any
54:02 - other command with any other command for
54:05 - example LS or CD or any other hey guys
54:09 - welcome to the next video on Linux
54:11 - command line tutorial for beginners in
54:13 - this video we will learn how we can use
54:17 - mkd command in Linux we can use mkdir
54:21 - command to create directories in Linux
54:24 - so let's uh see how we can do it so
54:27 - first of all just press control alt T to
54:31 - open your terminal and for example I
54:34 - want to just chain directory to my
54:37 - desktop folder so I will just write
54:40 - desktop and press enter and in the
54:43 - desktop I want to create a directory
54:46 - called image so I can just give mkd R
54:50 - command which is the command to create
54:53 - uh any directory and then the name of
54:55 - the D Dory for example image okay and I
54:59 - will press enter and then it's going to
55:02 - create this uh directory called image
55:05 - now for example I want to create a subd
55:07 - directory inside this image directory I
55:09 - can just write uh mkd R once again and
55:13 - the directory name which already exists
55:16 - and then I will give
55:19 - the forward slash for the subd directory
55:23 - for example I want to create uh subd
55:26 - directory called pix and I will press
55:29 - enter and then when I open this image
55:33 - directory it has this pix uh you know
55:36 - directory right now for example you want
55:40 - to uh create the
55:42 - subdirectory from uh the command or for
55:46 - the directory which don't really exist
55:50 - so for example I want to give this
55:53 - command for example mkdir
55:56 - on the desktop and then I want to create
55:59 - a a directory called names and then I
56:03 - will give a name for example Mark here
56:06 - okay so this directory names doesn't
56:09 - exist on my desktop you can see here
56:12 - right so when I give this command it'll
56:16 - give me the error and the error says
56:18 - cannot create directory names slm Mark
56:22 - no such file or directory because this
56:26 - names uh directory doesn't exist which
56:29 - is a Parent Directory it cannot create
56:32 - this uh Mark subd directory inside the
56:36 - names so in order to create the
56:40 - directory structure you need to use this
56:44 - flag to your uh mkd command which is
56:49 - minus P okay and this flag you can use
56:55 - to uh uh you know create a directory
56:59 - structure okay so this flag can be uh
57:03 - given in two ways this is the short
57:05 - version of uh giving uh this uh flag and
57:10 - if you want to know the full version you
57:13 - can just give two dash and then you can
57:17 - just give parents command here okay so
57:21 - the flag name is parents okay and if if
57:26 - you give uh this command it's going to
57:28 - create uh directory for you also and
57:31 - subdirectory for you which doesn't even
57:34 - exist okay so I'm going to just give
57:37 - this uh short flag which is uh minus p
57:41 - or- p and I will just press enter here
57:45 - and it's going to create this directory
57:47 - and it doesn't give me error and when I
57:49 - go inside this directory there is one
57:51 - more directory called Mark here right so
57:56 - if you want to create directory or subd
57:59 - directory which doesn't really exist you
58:01 - can use minus P flag which with your
58:05 - mkdr command now for example you want to
58:09 - make or create several uh directories
58:13 - inside your Parent Directory so what you
58:16 - can do so you can just write
58:19 - mkd command just write
58:23 - mkd and then minus p and for example I
58:26 - want to create some uh directory with
58:29 - some names inside this names directory
58:32 - so I will just give the name of the
58:35 - names directory and then I will just
58:37 - give these curly brackets and inside the
58:41 - curly brackets I can provide the list of
58:44 - directory which I want to create for
58:47 - example I want to create a directory
58:49 - called John I want to create a directory
58:53 - called uh Tom for example and I want to
58:56 - create a directory called Bob so I want
58:59 - to create three directories inside this
59:02 - names uh directory so let me open this
59:07 - uh directory which is names and right
59:09 - now it has only one U directory which we
59:13 - have already created so let me press
59:15 - enter and let's see what happens and
59:17 - when I press enter it creates some
59:20 - directory with uh this curly brace start
59:24 - and then uh the first name and and then
59:26 - comma so this way you can create but you
59:31 - don't have to give the space between
59:34 - these commas so just remove the space
59:37 - between the commas and press enter once
59:39 - again and this time it will create these
59:43 - three directory so always remember when
59:45 - you give a space it will not create the
59:49 - you know correct directory structure you
59:53 - want so you need to give uh the comma
59:56 - without the space so this format of
59:59 - creating the multiple directory is
60:02 - correct without spaces and this will uh
60:05 - give you errors as we have seen it has
60:08 - created this directory which we uh did
60:11 - not wanted okay so in this way you can
60:15 - use
60:16 - mkdir command in Linux I hope you've
60:19 - enjoyed this video please write comment
60:21 - subscribe and bye for now hello guys
60:24 - welcome to the next video on Linux
60:26 - command line tutorial for beginners in
60:28 - this video we will learn how will we can
60:30 - use rmdir command and how we can use RM
60:35 - command in Linux so let's get started we
60:39 - will start with rmdir command now this
60:43 - uh rmd command we can use to remove the
60:48 - directory or directory structures so
60:52 - let's see how we can use it so you just
60:55 - need to give our MD command in order to
60:57 - use it and the option you can give so
61:01 - you can just write options here and then
61:05 - the directory name so I will just say
61:08 - there okay so this is how you can use it
61:11 - now for example I will just uh CD to
61:16 - my desktop for example and then here
61:20 - once again I will create a directory by
61:23 - mkd command and I will name it as
61:27 - ABC and my directory is created you can
61:30 - see here right so for example I want to
61:33 - remove it so I can just use rmd command
61:37 - to remove it so just uh write
61:40 - rmd and the directory name and press
61:43 - enter and it's going to remove your
61:46 - directory now for example you have a
61:48 - directory structure for example I want
61:51 - to create a directory structure for
61:54 - example mkd
61:57 - a/ b/ c/ d/ e for example so this is the
62:02 - directory structure I want to create and
62:06 - for this I need to use minus P Command
62:09 - right for parents and then press enter
62:12 - and then it's going to create this
62:14 - directory structure now to see this
62:16 - directory structure you can just write
62:19 - LS minus capital r and when you press
62:23 - enter it's going to show you the
62:24 - directory structure so you can see at
62:26 - the top we have um directory a and
62:30 - inside directory a we have directory B
62:32 - and inside directory B we have C and
62:35 - inside C we have D and inside D we have
62:38 - e okay so this is the directory
62:40 - structure which we have created now in
62:43 - order to remove it uh you can just give
62:46 - the same command for example
62:50 - rmd and then just give a SLB SL c/ /
62:56 - d/ e for example okay and when you give
63:01 - this command it's going to uh you know
63:04 - remove or try to remove this directory
63:07 - but uh you can see it hasn't removed
63:11 - this directory actually right and what
63:14 - it does is Let's uh see once again LS
63:18 - minus capital r that it hasn't removed
63:21 - this uh directory it has only removed
63:24 - the top level directory which is this
63:27 - one which is e directory e right now in
63:31 - order to delete the whole directory
63:34 - structure what you need to do is you
63:36 - need to use this flag which is minus P
63:40 - which we have seen in the last video
63:42 - also for parent right and uh e is
63:46 - already being deleted with this command
63:49 - without minus D so uh without minus P
63:54 - it's going to remove only the top level
63:58 - directory which is at the top which is e
64:00 - in our case right now in order to remove
64:04 - the whole directory structure you just
64:05 - need to give minus P flag and then press
64:09 - enter and it's going to remove the whole
64:12 - directory structure for you okay now I'm
64:15 - going to clear the terminal and then
64:17 - once again I want to create the same
64:20 - directory structure and I want to show
64:22 - you uh one more thing so what I'm going
64:26 - to do is I'm going to just create this
64:29 - directory structure and in order to
64:31 - execute the previous command you have
64:33 - executed you just need to press up uh
64:37 - key or up Arrow key and it's going to
64:41 - give you the last command you have
64:42 - executed right and I want to create this
64:46 - uh directory structure once again and I
64:48 - will press enter and it creates the
64:50 - directory structure once again and then
64:53 - I will just do LS capital r and you can
64:56 - see the directory structure is created
64:59 - and then there is one uh command which
65:02 - is uh this rmd minus p and then for
65:07 - example you want uh to uh you know
65:12 - remove the command and see the output
65:15 - okay so you can just give this flag
65:18 - which is for verbos okay so this flag V
65:23 - is called verbos flag and this verbos if
65:27 - you don't know what is verbos verbos
65:30 - refers to the mode or setting that
65:33 - displays or gets extended information so
65:36 - it will give you what's happening in the
65:39 - background the information of all that
65:42 - right and then I will press enter and
65:45 - you can see how uh this rmd command is
65:49 - working so first of all it has removed
65:53 - the top level which is e directory then
65:55 - then D then C then B then a so it works
66:00 - from the top level directory to the you
66:04 - know Parent Directory you can say
66:07 - okay so if you want to uh you know
66:10 - display uh the extended information you
66:13 - can use this uh V flag with P okay now
66:18 - for example once again I will just uh
66:21 - give the clear command which will create
66:24 - my terminal and once again I will create
66:27 - this directory structure which is uh a/
66:30 - b/ c/ d/ e and it's going to create it
66:35 - and once again I will give this command
66:37 - which is LS minus capital r so our
66:41 - directory structure is created right now
66:44 - for example I want to CD to for example
66:49 - a to the B directory okay so now I'm in
66:53 - the B directory okay and here I want to
66:56 - create a file so I will just write cat
67:01 - and I will just say
67:04 - abc.txt file I want to create and then I
67:08 - will just uh give some random text here
67:11 - and I will just press contrl D to
67:14 - indicate the end of the file and now uh
67:19 - this B directory contains this ABD c.
67:23 - text and this we can verify by once
67:25 - again LS minus capital r command and now
67:30 - you can
67:31 - see in our
67:33 - uh B directory we have abc. text so let
67:38 - me go back to directories above so we
67:43 - are in the desktop so it'll uh you know
67:46 - go One Directory back right if you
67:49 - remember how we can use CD then uh you
67:53 - know how to use these dot dot also so
67:55 - right and these double dot means we want
67:58 - to go One Directory ahead or to the
68:02 - parent of the current directory okay so
68:05 - now we are in the desktop and then once
68:08 - again we will give our LS minus capital
68:11 - r and you can see the directory
68:13 - structure so we have a then we have B
68:16 - directory inside a and inside B
68:18 - directory we have this text file and
68:21 - then C directory you can see so this is
68:23 - the directory structure and once again
68:25 - for example I want to use this rmdir
68:29 - command to remove uh the directory
68:33 - structure and let's see what happens so
68:35 - when I press enter it'll give me the
68:40 - error in between so it says fail to
68:43 - remove directory
68:45 - A/B directory does is not empty or
68:49 - directory not empty right and this is
68:53 - due to the fact that if the directory
68:57 - contains a file the rmdir command will
69:01 - not work for that directory so if the
69:04 - directory contains any file you cannot
69:07 - use rmd command directly right so I will
69:11 - just give this command which is LS minus
69:14 - r once again and let's see what it gives
69:17 - so you can see it has deleted the
69:20 - directory e d and c for us because they
69:25 - are empty and removing start from the uh
69:28 - you know the top level so it has deleted
69:31 - e because it was empty then it has
69:33 - deleted D because it was empty and then
69:36 - it was has deleted C directory because
69:39 - it was empty but when it's trying to you
69:44 - know delete the B directory it contains
69:46 - a file so it cannot delete uh this B
69:50 - directory and that's why this error is
69:53 - coming right so so it uh removes the
69:57 - file in our structure right so you can
70:00 - see at this moment uh it has uh given us
70:05 - this problem or error because it's
70:08 - trying to delete uh the directory but
70:11 - directory contains a file now if the
70:13 - directory contains a file there is
70:16 - another command you can use which is RM
70:19 - command and this command we can use to
70:23 - remove the files and directly uh
70:26 - directories okay so just give RM and
70:30 - then your directory so now we only have
70:34 - a and b directory because CD e
70:37 - directories are already deleted right
70:40 - and if you want to delete the whole
70:43 - directory structure you just need to
70:45 - give this flag which is minus r and it
70:49 - stands for recursive okay and we can
70:53 - just add this V uh flag also for just
70:58 - displaying the information what's
71:00 - happening in the background as we have
71:02 - done with uh this MK uh rmd Command
71:07 - right so if you will give this command
71:09 - it's fine but if you want to print the
71:11 - information you can give this V also
71:14 - with uh uh you know RM command and press
71:18 - enter and you can see it has removed uh
71:21 - the text file first and then it has
71:23 - removed the directory structure now you
71:26 - may have observed here that it has only
71:29 - deleted our text file and the B
71:32 - directory because in order to use the RM
71:36 - uh you know command you just need to
71:38 - give the Parent Directory name so you
71:42 - just need to give RM and then minus r
71:46 - and then a would be enough to delete
71:50 - this directory and the child or subd
71:53 - directory inside this directory Dory or
71:55 - whatever file it contains inside this
71:58 - directory okay so you just need to give
72:01 - the Parent Directory and nothing else
72:04 - and I have given the Parent Directory as
72:06 - A/B so it consider the Parent Directory
72:10 - as this B directory inside a directory
72:13 - so it has only removed the text file
72:15 - inside B directory and B directory not a
72:18 - directory and if you want to remove a
72:21 - just give the Parent Directory which is
72:23 - a itself and press enter and it's going
72:25 - to remove this
72:27 - directory so this is the brief uh
72:30 - information about using RM command and
72:35 - rmd command hello guys welcome to the
72:38 - next video on Linux command line
72:41 - tutorial for beginners in this video we
72:43 - will see how we can use CP command in
72:46 - Linux CP command is used to copy files
72:50 - and directories in Linux so let's see
72:53 - how we can use it so just open your
72:55 - terminal by pressing Control Alt T and
72:59 - let's see what are the options we have
73:01 - for CP command so for giving CP command
73:04 - you use CP and then options and then you
73:09 - can uh write the source so you just need
73:13 - to uh give the name of your uh source
73:18 - and then the
73:21 - destination okay so CP and then comes
73:25 - the options for example minus I or minus
73:28 - V or other options and then you give the
73:33 - name or location of your source file or
73:37 - directory and then you need to give the
73:40 - name of the destination where you want
73:42 - to copy the source right so let's get
73:45 - started first of all I will CD to my
73:49 - desktop and in here in the desktop you
73:52 - can already see that I have two
73:54 - directories and a file so for example I
73:57 - want to uh copy a file into a new file
74:01 - so what I can do is I can just write CP
74:04 - and then I can just write the name of my
74:07 - file one which I want to copy and then I
74:11 - want to copy uh this file into a new
74:14 - file called file 2.txt which doesn't
74:18 - really exist so what the CP command is
74:22 - going to do is if this file doesn't
74:24 - exist is is going to create the new file
74:27 - and then copy the content of file one to
74:29 - file two so let's see what happens when
74:32 - we give this command so you can see the
74:35 - new file is created and the content of
74:38 - file one will be copied to file two so
74:42 - let's scat for example file one first
74:45 - and you can see the content of it and
74:48 - then let's scat the content of uh file
74:51 - two and you can see the same content
74:54 - right uh now let me clear the terminal
74:57 - now the second thing we can do here is
75:01 - uh we can copy a file to a directory so
75:05 - for example I can just use CP and then I
75:09 - can just write the name of the file and
75:12 - for example I want to copy it to a
75:14 - directory one which is empty right now
75:18 - so let me show you first of all before
75:20 - giving this command the content of the
75:23 - directory one so I will just use Lis and
75:26 - then directory name right and press
75:29 - enter and it shows nothing that means
75:31 - directory is empty right so now I will
75:34 - do CP and then the name of the file for
75:37 - example I want to copy file one and then
75:40 - the name of the directory which is my
75:43 - destination where I want to save my file
75:45 - right and I will press enter and it's
75:48 - going to copy this file to directory 1
75:51 - and let's do uh LS directory 1 once
75:54 - again and you can see file one is now
75:58 - existing inside directory one right so
76:01 - it has copied the file one into the
76:04 - directory one now for example I want to
76:07 - copy uh file two also into the directory
76:10 - 2 what I can do is I can just write file
76:14 - one uh which is already copied uh if you
76:17 - want to uh you know copy the multiple
76:20 - files you can just do it something like
76:23 - this so you can give the multiple
76:25 - sources here and then at the end you can
76:29 - give the name of the destination so this
76:31 - time I'm going to uh give the directory
76:35 - 2 for example to copy to it so I will
76:38 - just press enter and then I will Alis to
76:41 - directory 2 and you can see these two
76:44 - files are transferred to the directory 2
76:47 - right now for example I want to uh
76:51 - transfer these two files to directory
76:55 - one but we already know that file one is
76:58 - already existing inside the directory
77:01 - one and for example we don't want to
77:05 - overwrite the file one which is inside
77:08 - directory 1 so this command is going to
77:12 - overwrite the file one because it's
77:14 - already existing in the you know
77:17 - directory one so to avoid the
77:19 - overwriting what you can do is you can
77:22 - give this command or flag which is minus
77:25 - I which stands for interactive which ask
77:29 - before overwriting okay so when you
77:32 - press enter it says CP overwrite
77:36 - directory 1 file 1. text so it it will
77:39 - ask you the question and if you give y
77:42 - here then it's going to overwrite your
77:45 - file one and if you give n here then
77:48 - it's going to not overwrite right so we
77:50 - are going to give n so it's going to
77:52 - only copy file two and it's not going to
77:55 - overwrite file one okay so you can use I
77:59 - for uh the interactive interface right
78:04 - now for example uh you can uh you know
78:09 - give the absolute path here or the
78:11 - relative path right so for example I
78:14 - will uh CD to my directory one here and
78:21 - C CD to the directory one and let's do
78:24 - LS here and for example we want to give
78:28 - the L CP command from here so the file
78:32 - two and file one exist in the desktop
78:35 - not the directory one and right now we
78:37 - are in dir1 directory so we can just go
78:42 - one uh you know step back or one folder
78:45 - above by using these do two dots as you
78:48 - already
78:49 - know and uh you can give the name of the
78:52 - file for example file 1. text
78:55 - and then once again dot dot and then
78:58 - this time file two. text right and then
79:02 - for example uh you want to copy it in
79:05 - the current directory you are already in
79:08 - you can use this dot to show or indicate
79:12 - that this is our current directory or
79:14 - destination is our current directory so
79:17 - press enter and it's going to copy these
79:20 - two files to the directory one and we
79:23 - have not given given minus I flag here
79:27 - so it will overwrite these two files
79:29 - okay now this dot here means the current
79:33 - directory so when whenever you do LS
79:36 - minus a it's going to show you dot and
79:40 - then dot dot and then uh file one and
79:43 - file 2. text so this dot means the
79:46 - current directory so if you give this
79:48 - dot it means the current directory you
79:50 - can Al also give this command something
79:53 - like uh dare one something like this but
79:57 - you are already in the directory right
80:00 - so you can give the absolute path of uh
80:03 - the directory for example right so for
80:06 - example home and then uh your uh
80:09 - username and then the desktop which you
80:13 - are in so you are in the desktop uh
80:15 - directory here right and then uh di1
80:20 - directory one okay so you can give this
80:24 - kind of absolute path also or dot also
80:28 - or this kind of relative path also to
80:31 - copy your files now there is one more
80:35 - interesting thing I want to show here
80:37 - and First Let Me Clear the terminal and
80:40 - for example I want to copy the directory
80:44 - one to a directory three which doesn't
80:47 - really exist so what I can do here so I
80:51 - can do something like this CP and and
80:54 - then
80:55 - diir one uh and let me go to the desktop
81:00 - first of all so I will just do CD dot
81:02 - dot so I will be in the desktop and then
81:05 - I will just do CP and then
81:08 - di1 and then I will give the name of my
81:11 - directory which doesn't really exist
81:13 - which is directory 3 right and let's
81:16 - press enter and let's see what happens
81:19 - and it's going to give error and it says
81:22 - omitting directory d ir1 and why it's
81:26 - doing this because this directory
81:28 - contains some files and then it's not
81:32 - able to copy this directory to directory
81:35 - 3 so in order to uh copy a directory
81:38 - which contains a file or files you can
81:42 - uh give this command which is minus
81:45 - capital r or small R I think both are
81:48 - same but uh mostly we use capital r
81:51 - which is for recursive copying right
81:54 - right so press enter and then you can
81:58 - see dir3 is created and we can list out
82:02 - the content of
82:04 - dr3 and you can see the content of
82:07 - directory 1 is transferred to directory
82:13 - 3 now you may ask why this directory 1
82:18 - is not inside directory 3 right because
82:22 - CP command for example when you use for
82:25 - files it will transfer the file inside
82:28 - the directory 3 right so
82:32 - whenever uh you give some a command
82:35 - something like this and if the
82:37 - destination doesn't exist then what is
82:40 - going to do is is going to transfer the
82:43 - content of the directory or Source
82:45 - directory to the destination directory
82:48 - and create this directory first and then
82:51 - uh transfer the content now once again
82:54 - when you give the same command if the
82:57 - directory already exists okay so once
83:01 - this directory already exist and you
83:03 - give the same command let's see what
83:05 - happens and I'm going to just give I uh
83:09 - not I but V uh flag here for verbos and
83:13 - you already know what this means is and
83:16 - I'm going to press enter and you can see
83:18 - what happens here so what's happening
83:22 - here is it's transferring directory one
83:24 - 2 directory 3 and then it's transferring
83:28 - the file inside the directory 1 to
83:30 - directory 3 and we are going to give the
83:32 - same command LS uh directory 3 here and
83:36 - now you can see directory 3 is
83:39 - transferred inside the directory
83:41 - directory one is transferred inside the
83:44 - directory 3 right so if the file already
83:47 - exist it's going to you know copy this
83:51 - uh directory one inside the direct
83:54 - directory 3 if file doesn't exist or
83:56 - directory doesn't exist then it's going
83:58 - to just copy the content of the source
84:01 - to the destination okay so this is how
84:05 - you can use CP command and for more
84:08 - detail you have this command man CP for
84:13 - seeing uh you know all the options which
84:15 - you can use with the CP command and when
84:18 - you press Q it's going to quit hello
84:22 - guys welcome to the next video on Linux
84:24 - command line tutorial for beginners and
84:26 - in this video we will see how we can use
84:29 - MV command in Linux so let's get started
84:32 - I will just press control alt T to open
84:35 - my terminal and you can see on my
84:37 - desktop I have a directory and a file
84:40 - right so first of all I will browse to
84:43 - my directory using CD command and press
84:47 - enter and I can Alis here and I can see
84:50 - I have directory one and file one now to
84:54 - use MV command we have this option so
84:58 - you use MV command with some uh options
85:03 - and then you have a source and then a
85:09 - destination okay so first you use MV uh
85:13 - as a command then you can use uh options
85:17 - like minus V or minus I or minus F then
85:22 - comes your source file it can can be one
85:25 - or many files or directories and then
85:29 - comes the
85:30 - destination file or directory okay so
85:34 - let's see how we can use it so first of
85:37 - all I have this file one and I want to
85:41 - use MV command to change the name of uh
85:44 - this file for example so I will just use
85:47 - MV and then uh the name of the file and
85:51 - then I will just give uh some other name
85:54 - to the file for example file
85:57 - 2.txt okay and press enter and you will
86:02 - see here this file becomes uh file two
86:06 - okay and the content of the file will
86:08 - remain the same so I can use cat cat
86:11 - command to uh you know display the
86:14 - content of the file so just use cat and
86:18 - I have this uh you know content in my
86:21 - file one which is also transferred to
86:23 - the file two now for example I want to
86:27 - create a new file and move the content
86:29 - of file two to file uh you know three
86:32 - for example and I want to just uh you
86:35 - know transfer all the content of file
86:37 - two to file three so I can just use MV
86:41 - and then file two which is a source and
86:44 - then I can uh just write file uh
86:48 - 3.txt here and press enter and you will
86:52 - observe here that file two is gone now
86:56 - and file three is created and the
86:59 - content of the file we can check is the
87:01 - same as file two because it has uh
87:04 - changed the name of the file and moved
87:07 - the content of the file to file three so
87:10 - if the file doesn't really exist then
87:13 - it's going to create the file the simple
87:16 - you know formula of this now for example
87:20 - I want to move uh this file three to
87:23 - directory one I can just use MV and then
87:26 - the file name and then my directory name
87:30 - right now for example I will just open
87:33 - this directory and you can see here file
87:37 - two is already there and I'm going to
87:40 - transfer file three also there right so
87:43 - I will just um press enter MV and the
87:46 - file name and the destination name and
87:49 - then I will LS directory one and let's
87:52 - see the content of it and you can see
87:54 - now it has file two and file three both
87:57 - okay so in this way you can uh transfer
88:01 - the file or move the file to a directory
88:05 - using the move command okay now for
88:09 - example uh I will create a new file for
88:14 - example file three once again so I will
88:17 - just say file
88:19 - 3.txt
88:21 - and this is a new file I want to create
88:23 - on the the desktop and the content for
88:27 - example will be some random text here
88:30 - okay and I will just press controll D to
88:33 - end the file so this is file three and I
88:37 - want to move this file to directory 1
88:39 - which already have file three so let's
88:42 - see what happens now this file three new
88:45 - file contains random text and the old
88:49 - file which is in the directory 3
88:50 - contains uh this kind of text I can show
88:53 - you you this kind of text right so now
88:57 - what I want is I want to transfer this
88:59 - file three
89:01 - to the directory one so I can just use
89:05 - MV and then I can use the name of the
89:08 - file and once again what I have done is
89:11 - I've given the destination name which is
89:14 - directory one right now let me open the
89:18 - directory one and we will see what
89:21 - happens and the result of it so I'll
89:26 - just press enter and it will move the
89:28 - content of file three which is on the
89:32 - desktop to the directory one and what
89:35 - happens here is it will overwrite so the
89:38 - file three which was there on the
89:40 - desktop is you know overwritten and this
89:44 - file in the directory one is overwritten
89:47 - by the desktop file three okay so I can
89:50 - just cat d one file three for example
89:56 - and the content will be the random
89:58 - content which we have given which is the
90:00 - new file three which we have created
90:03 - right so if you want to uh you know move
90:07 - the file which already exist then it
90:11 - will overwrite the file okay so for
90:15 - example once again let's uh see an
90:17 - example but this time what we are going
90:20 - to do is we are going to uh you know uh
90:24 - do it with the sum command so first of
90:27 - all I will create once again file three
90:30 - and this time I will once again give
90:33 - some random text here and press controll
90:36 - D and this time instead of using uh this
90:41 - command like this I will use a flag I
90:45 - and flag I or minus I stands for
90:49 - interactive mode so it will ask you if
90:51 - you want to overwrite the file which was
90:54 - was uh already present in the directory
90:56 - one with the same name so I'm going to
90:58 - just press enter and you can see it will
91:01 - ask me if I want to overwrite and when I
91:04 - press Y and press enter it's going to
91:07 - overwrite the file or if I press uh n
91:11 - and press enter it's not going to
91:13 - overwrite uh the file which was already
91:16 - there in directory one right so I will
91:19 - press n and it will not overwrite okay
91:22 - let me clear the terminal
91:25 - now let's create our directory okay so
91:30 - what I'm going to do is I will just use
91:33 - mkdir command which we have learned in
91:35 - the previous video and I will create a
91:38 - directory 2 for
91:40 - example oops the command was wrong it
91:43 - was mkd not M A KD okay and it's going
91:48 - to create this uh directory tool right
91:52 - now uh for example I want to uh transfer
91:58 - the directory inside the directory to so
92:01 - for example I want to transfer the
92:03 - directory one inside directory 2 I can
92:06 - use the move command so I can just write
92:08 - uh directory one MV directory 1 which is
92:11 - my source and I want to move it inside
92:14 - directory 2 so I can just write the
92:17 - destination name which is directory 2
92:19 - and by the way directory 2 is right now
92:22 - empty you can see there no content
92:24 - inside this and when I press uh this
92:28 - command and press enter it's going to
92:30 - move directory one inside directory 2 so
92:33 - we can just LS inside directory 2 and
92:38 - you can see directory one is there and
92:41 - inside directory one there was uh some
92:44 - file right so I can just write directory
92:47 - one uh directory two and inside that I
92:50 - have directory one and I can Lis the
92:54 - you know files inside the directory one
92:56 - like this and you can see the content is
92:59 - also moved with the directory okay so
93:04 - you can uh you know move the directory
93:06 - and its content using MV command also
93:09 - now let's see what happens when uh the
93:12 - directory which we uh you know want to
93:15 - move this directory to doesn't really
93:17 - exist right so I will just use MV and I
93:21 - will just write directory 2 and I will
93:24 - I want to create a new directory and
93:26 - move the content to uh this directory
93:29 - Tre right so when you do this press
93:33 - enter the name of the directory is
93:35 - changed and content is moved to this
93:38 - directory 3 and the directory two is uh
93:42 - you know disappearing right so if the
93:46 - directory doesn't exist it's going to
93:48 - create a directory and then move the
93:51 - content of the directory inside
93:54 - directory 3 so it will not move the
93:57 - directory true inside directory 3 but
93:59 - the content of directory two inside
94:01 - directory 3 so you can see there is no
94:03 - directory two inside directory 3 it's
94:06 - going to create the directory and you
94:09 - can say it's like renaming the directory
94:12 - if the directory doesn't really exist
94:14 - and if the directory already exists then
94:17 - it's going to transfer directory 2
94:19 - inside directory 3 okay so I hope you
94:23 - understood to the the this basic concept
94:26 - uh which I want to convey here right now
94:30 - there are many command which we uh you
94:34 - know can use for example MV minus V for
94:39 - verbos and for example once again I want
94:41 - to uh transfer the file three to uh the
94:46 - directory so I will just give the
94:48 - directory name and press enter and it
94:50 - gives you uh you know the you know
94:53 - explanation what this command has done
94:56 - so it has moved this file three to the
95:00 - directory 3 right and it has overwritten
95:03 - this thing right and there are many
95:05 - commands and these command you can uh
95:09 - you know know by using this uh command
95:12 - which say which is man and then MV
95:16 - command okay so just write men and MB
95:20 - and it's going to give you the whole uh
95:23 - you know description of using MV Command
95:27 - right so you can use uh minus B with MV
95:30 - command or minus f with MB command I we
95:34 - have already seen and these are the
95:37 - description of all the flags and uh you
95:41 - know options you have with MV command so
95:45 - just use this and uh you know read these
95:48 - uh descriptions and you will be good to
95:50 - go hello guys welcome to the next video
95:53 - on Linux L command line tutorial for
95:54 - beginners in this video we will see how
95:57 - we can use less command in Linux less
96:00 - command we can use to uh you know read
96:03 - the files or if you want to search
96:05 - something inside the files something
96:07 - like patterns or some word you can use
96:10 - less command conveniently to read or uh
96:13 - search in the file so let's see how we
96:16 - can use it so first of all I'm going to
96:18 - open my terminal and first of all I will
96:23 - navigate to my desktop where this big.
96:26 - text file is there so first of all I
96:28 - will CD to the desktop and first of all
96:33 - uh because this is a big file and I want
96:36 - to for example see the content of uh
96:38 - this big text file I want to use scat
96:41 - for you because we have learned uh you
96:43 - can use scat to uh you know print the
96:46 - content of the file so I'm going to use
96:49 - big. text and when I press enter you can
96:52 - see it's print in the content of this
96:55 - text file and because it's really big
96:57 - it's printing and printing and printing
97:00 - and uh for example you want to read from
97:04 - the starting of this uh file when it's
97:08 - uh done Printing and you want to go up
97:11 - let's see what happens so first of all
97:14 - uh let it complete so it's completed and
97:16 - when I want to go to the top and I want
97:18 - to read the content the terminal doesn't
97:21 - allow me to go beyond a a certain level
97:24 - so it's not going to the you know
97:26 - starting of the text file that's why we
97:30 - can use our less command to overcome
97:32 - this problems plus less has uh its own
97:36 - features right so I will first of all uh
97:39 - clear the terminal and now I'm going to
97:42 - use less for you know reading the file
97:47 - content so first of all for using less
97:50 - you just need to you know write less and
97:53 - the name of the file which is big. text
97:56 - right and press enter and you can see uh
98:00 - it will show you the content of the file
98:03 - from the starting so this is the
98:05 - starting of the file and it will show
98:08 - you uh you know some text until uh this
98:12 - terminal allows it to show it and if you
98:15 - want to see the content of the file more
98:17 - you can hit the down arrow key so down
98:21 - arrow key to go one line down at a time
98:25 - you can see you can read down and if you
98:29 - hit up Arrow then you can uh read up or
98:34 - you can uh you know browse over uh the
98:37 - file in the you know up uh now if you
98:41 - want to go through the file Page by Page
98:45 - what uh you can use is you can use a
98:49 - space uh key to uh navigate your to your
98:53 - file Page by page so when I press uh
98:57 - space it's going to show me the next
99:00 - page next page next page next page and
99:03 - it will show me again and again next
99:06 - page so for uh the you know going
99:10 - through the page downwards you can use
99:13 - space uh key now if you want to go
99:16 - upwards Page by Page you can use capital
99:20 - b or b key okay and you can just uh
99:25 - Press B and you will go one page up at a
99:29 - time when you press B okay now if you
99:33 - want to go uh at the end of the file you
99:36 - can just uh press capital G so press
99:40 - shift and G so uh it will be capital G
99:44 - so press shift and G and it will uh you
99:47 - know browse to the end of your text file
99:52 - right and now if you want to go uh at
99:55 - the top at the starting of your file you
99:58 - can just type one and then G and it will
100:02 - go at the beginning of the file so
100:05 - capital Z using shift g at the end and
100:09 - when you press 1 G then it will go at
100:12 - the top right once again capital g at
100:16 - the end and when I press small G also it
100:19 - will browse me to the top also so small
100:22 - G for going to the top and capital G for
100:26 - going to the end right now for example I
100:30 - want to go at the top and now I want to
100:33 - search something inside the text file
100:36 - from up to down so I can use uh this uh
100:39 - forward slash which says uh this less
100:43 - that we want to search from up to down
100:46 - some word and the word for example we
100:48 - are looking for is book inside this text
100:52 - file right and when you press enter it's
100:55 - going to uh you know show you or
100:58 - highlight the first uh book keyword
101:01 - which you are searching for which is
101:03 - this one and now to uh search or to go
101:06 - to the next uh book in the text file you
101:10 - can press n to go to the next item which
101:15 - is uh book right so you can see there
101:17 - are so many book and we are searching or
101:20 - we are going from top to down right so
101:24 - you can see there are so many book Words
101:28 - inside this text file and uh when we are
101:32 - done with uh you know the searching and
101:35 - it's the end of the file it will say
101:37 - pattern not found so now this book is
101:40 - the last uh iteration of this word book
101:44 - right uh after that when you press next
101:46 - or n it's going to uh show this message
101:50 - which says pattern not found now some
101:53 - sometimes you may want to search from
101:55 - down to up and for this you can use this
101:59 - question mark for searching from down to
102:01 - up and then you can uh you know give
102:04 - your keyword which you are looking for
102:06 - and and press enter and the first word
102:10 - from the down is uh this itself and then
102:13 - when you press n it will go through this
102:17 - uh text file and highlight the book from
102:21 - down to up right so you can just press
102:24 - uh n key to you know see where this uh
102:29 - book is used this word is used right now
102:34 - if you want to quit less command you
102:36 - just need to press Q it will quit your
102:39 - less Command right so this is how you
102:43 - can use less command in Linux and uh if
102:46 - you want to know more about less you can
102:48 - just write men and then less and here is
102:52 - the description of less command and the
102:56 - flags and the keys you can use with less
103:00 - commands hello guys welcome to the next
103:02 - video on Linux command line tutorial for
103:04 - beginners in this video we will learn
103:06 - how to use Touch command in Linux the
103:09 - touch command is the easiest way to
103:12 - create new empty files in Linux it is
103:16 - also used to change the time stamps on
103:20 - existing files or directories so let's
103:22 - see how we can use it so first of all I
103:24 - will open my terminal and as you can see
103:28 - on the desktop I have a directory called
103:31 - D so I will just CD to the desktop first
103:35 - of all so CD desktop and then I will
103:39 - just CD inside the directory okay and uh
103:44 - let's uh list all the content of the
103:47 - directory so I will just do LS minus L
103:51 - for long list and you can see this
103:54 - directory contains five files file one
103:58 - file two file three file four and file
104:01 - five and you can see the time of the
104:04 - files uh which is the time stamp at
104:08 - which they are created or updated right
104:12 - now uh for example we want to create a
104:16 - new empty file we can use a touch
104:20 - command to create a new empty file and
104:23 - to uh create a new MD file you just need
104:26 - to write touch which is a command and
104:31 - then there can be options for touch but
104:34 - the simplest way is to give the name of
104:38 - the file so you can see uh the directory
104:41 - already contains five files and I want
104:43 - to create a sixth file so I can just say
104:46 - file six and press enter and then I will
104:50 - uh just list all the files once again
104:53 - and now you can see file six is created
104:56 - right and the time stamp of this file is
104:59 - the time right now which is uh 11:22
105:04 - p.m. right which is the creation of uh
105:08 - this file time stamp of this file right
105:11 - and these files are created at uh 10 05
105:16 - or or 105 p.m. you can say right so the
105:22 - first uh uh you know use of touch
105:24 - command is to create a empty file you
105:27 - cannot create a directory using a touch
105:29 - command you can only create a empty file
105:33 - right now uh earlier with uh touch
105:37 - command I have all only used the name of
105:40 - the file I can even give the you know
105:43 - extension of the file for example file 7
105:46 - do txt or CPP or any other extension and
105:51 - it will create it okay and let's list
105:54 - out all the contents and you can see the
105:58 - file is created and because we are using
106:01 - uh the long listing so it's also showing
106:04 - the permissions and uh the time stamp at
106:07 - which they are created or modified right
106:10 - now the second use of touch command is
106:13 - to change the Tim stamp of a file so let
106:17 - me clear this uh terminal first and I
106:21 - will do LS minus once again and uh you
106:25 - can see uh the time at which these files
106:28 - are created or modified now for example
106:32 - I want to uh you know change the time
106:37 - stamp on these files uh at which they
106:40 - are uh you know modified or created then
106:43 - what I can do is I can use the touch
106:45 - command on them okay so if the file
106:50 - doesn't uh exist and if you use Touch
106:53 - command then it's going to create this
106:56 - file right and if file already exists
107:00 - and you can if you use uh the touch
107:03 - command on this file which already
107:05 - exists it's going to update the time
107:09 - stamp of uh this file to the current uh
107:12 - you know time stamp right so you can see
107:15 - current time stamp is uh 23
107:19 - 24 and I want to change the time stamp
107:22 - of uh this file one I can just do uh
107:25 - Touch file one and press enter and once
107:27 - again I can do LS minus L and you can
107:31 - see file one time stemp was earlier
107:35 - 2205 and right now it's uh
107:39 - 23024 right so in this way you can
107:43 - update the time stamp of the file using
107:46 - a touch command Okay so these are the
107:49 - two uh basic uses of touch command first
107:53 - is to create empty files and second is
107:56 - to uh update the time stamp of a given
108:00 - file hello guys welcome to the next
108:02 - video on Linux command line tutorial for
108:04 - beginners in this video we will see how
108:06 - we can use Nano command in
108:09 - Linux now Nano is a small and friendly
108:13 - text editor and beside the text editing
108:17 - Nano offers many extra features like an
108:21 - interactive search or replace SP and it
108:24 - also has uh some other features like go
108:27 - to line or column number it can show or
108:30 - it can uh you know uh give you the
108:33 - indentation in the file or um some other
108:36 - features so let's see how we can use it
108:39 - so first of all I'm going to uh just
108:42 - change my directory to desktop and in
108:46 - here for example I want to create a new
108:48 - file first of all Nano can be used for
108:51 - creating a new file also so just write
108:55 - Nano and uh then you just need to write
108:58 - the name of your file for example
109:01 - file.txt I want to create this file
109:04 - right and I will press enter and then
109:07 - this is going to uh open this file and
109:11 - create this file in the terminal
109:16 - right now uh you may observe here that
109:21 - the file is open but it's not uh you
109:25 - know shown here okay so this file is not
109:29 - shown because we haven't saved the file
109:32 - so Nano has created a file for us but we
109:35 - need to save it in order to you know see
109:39 - it here on the desktop because we are in
109:41 - the desktop right now right so for
109:43 - example we write something here for
109:45 - example
109:46 - ABC and uh for example b c d and e FG
109:51 - for example some random text okay now in
109:54 - order to save this uh text inside this
109:57 - file. text what you need to do is you
110:00 - need to press control o okay you can see
110:04 - this command is given here which means
110:07 - write out okay so when you press control
110:11 - o it means write out that means uh
110:14 - writing out to the file so just press
110:16 - crol o and this crol o uh will give you
110:21 - uh this kind of uh information which
110:24 - says file name to write and the name of
110:27 - the file so our file name is file. text
110:31 - which is okay so you just need to press
110:33 - enter and it's going to uh save the
110:37 - content of the file and as soon as I
110:39 - press enter you can see file. text is
110:42 - created here and when I open it it's
110:45 - going to show the content of the file
110:47 - which we have inserted using Nano
110:50 - right now Nano has uh some other
110:54 - controls for example uh contrl G will
110:58 - get the help or control X when you press
111:01 - the control X is going to exit from the
111:04 - Nano command so let's press contr X
111:06 - first so I'm going to press contr X and
111:09 - we are out of the Nano command once
111:11 - again once the file is created then we
111:15 - can addit the content of the file by the
111:18 - same command Nano and the file name and
111:21 - you can see we have written this content
111:23 - to our file and now for example I want
111:25 - to edit it so I will uh go to this line
111:28 - for example and you can see there is a
111:32 - command called control k for cut right
111:37 - normally in the normal editors we have
111:40 - contrl C for uh control X for uh cutting
111:45 - and control uh you know V for pasting
111:48 - right but in here we have uh control KY
111:52 - for cutting a line for example so I will
111:55 - just uh press controll K it's going to
111:58 - cut this line and for example I want to
112:01 - go down and paste it here I can press
112:04 - control U you can see this uh command
112:07 - which is control U which stands for
112:10 - uncut so whatever you have cut I will
112:13 - press control U you can paste it like
112:15 - this okay and then press control o to
112:18 - save the content which is going to ask
112:20 - you if you want to save it when you
112:22 - press enter the file content will be
112:25 - changed and you can see the effects here
112:29 - in the you can see like this okay so
112:34 - Nano uh can be used to create uh you
112:37 - know a different kind of files and um uh
112:41 - for example I will just exit from this
112:44 - nanu command and for example I want to
112:47 - create uh C++ file so I will just press
112:50 - Nano and I will just say
112:55 - abc. CPP for C++ file right CPP is the
113:00 - extension of C++ file and when I press
113:03 - enter and in here for example I want to
113:07 - write some code so I will just write
113:10 - uh uh IO stream for example and we need
113:17 - to include it right so
113:20 - hash include I stream and you can see
113:24 - here it's giving us the color so Nano
113:28 - has already recognized that it's a CPP
113:30 - file so it's uh going to uh show you the
113:34 - uh code highlighting for your CPP code
113:38 - right so here I can just write int
113:42 - Main and then I can just give these uh
113:47 - curly brackets and for example I want to
113:50 - print something so I can just say Hello
113:54 - World by STD C
113:58 - out uh hello world in the double codes
114:04 - right and you can see it's doing the
114:07 - highlighting for uh us so Nano is good
114:11 - for uh you know editing some uh you know
114:16 - files which contain some code so it can
114:18 - recognize if the file is a cpb file or C
114:22 - file or Java file or different kind of
114:24 - files okay and it will do the
114:27 - highlighting of or code highlighting for
114:30 - you uh also and it can uh recognize
114:34 - these code files also that's why also
114:37 - Nano is uh you know beneficial to use
114:40 - whenever you want to edit some kind of
114:43 - uh code right so this is how you can use
114:47 - Nano command hello guys welcome to the
114:49 - next video on Linux command line
114:51 - tutorial for beginners in this video we
114:53 - will learn how we can use pseudo command
114:56 - in
114:57 - Linux so first of all what is a pseudo
115:01 - command you can say pseudo is uh the
115:05 - command which rules them all the
115:08 - abbreviation or full form of pseudo is
115:12 - super user do so it allows you to uh
115:18 - some extra privileges as an
115:20 - administrator
115:22 - or a power user so let's see how we can
115:25 - use uh pseudo in Linux now first of all
115:29 - I'm going to open the terminal and right
115:32 - now we are in our uh home folder right
115:37 - by default now for example uh I will
115:40 - first of all uh list out uh all the
115:44 - directory which are in the root uh
115:46 - directory so we'll just do LS and then
115:50 - this forward slash now for example I
115:53 - want to make a directory inside this Etc
115:58 - folder so what I'm going to do is I will
116:00 - just do uh
116:03 - CDC and here I want to create some
116:07 - directory for example so this Etc uh
116:11 - directory contains some of the
116:13 - configuration files and other files you
116:15 - can see and let's say I want to create a
116:18 - directory uh for me for some uh purpose
116:22 - right so I will just use mkdir which we
116:26 - have already seen that this is the
116:28 - command and for example I will say new D
116:34 - for new directory okay and I will press
116:37 - enter and now this gives me this error
116:42 - that mkdir creates a directly new D
116:46 - which doesn't have permission so it's
116:48 - showing the permission denied error
116:52 - this is because uh for example on my
116:56 - Ubuntu Linux operating system by default
117:00 - when I open the terminal it doesn't have
117:03 - the administrative or root privileges so
117:07 - we need to use a special command which
117:09 - is called pseudo in order to uh tell
117:13 - this Linux terminal that we want to
117:16 - execute this command as an administrator
117:20 - right so let's see how we can use it so
117:24 - whenever you see permission denied most
117:29 - cases uh of permission denied can be
117:32 - solved by this pseudo command because uh
117:37 - pseudo allows us to run any command or
117:41 - most of the command using uh ADM
117:44 - distributive privilege or super user
117:46 - privilege okay so let's see we will just
117:51 - give the same command but this time we
117:54 - will just add a pseudo in front of uh
117:57 - this Command right so pseudo
117:59 - mkdir new directory which is the name of
118:02 - the directory and what this command does
118:06 - is first of all when I enter press enter
118:10 - it's going to ask me the password for my
118:13 - computer it's the same password which
118:15 - you provide at the time of login right
118:19 - so I'm going to provide my password and
118:21 - this password password will not be shown
118:24 - uh on the terminal it will be hidden but
118:26 - you just need to type your password and
118:28 - then press enter and you can see here
118:32 - this uh pseudo uh this mkd R command is
118:37 - executed with P sudo or super user
118:41 - Privileges and you because you have
118:43 - already provided the password once now
118:47 - you don't need to provide the password
118:49 - in the same session in the terminal
118:52 - right so uh let's see if uh this uh
118:56 - directory is created or not this time we
118:58 - didn't see any uh permin denied error
119:03 - and most probably it'll create this uh
119:07 - new D directory so let's see uh if it's
119:10 - created or not so let's uh search for uh
119:16 - new dare and hopefully we will be able
119:19 - to find this uh Direct
119:23 - this is here so you can see this uh new
119:26 - directory is created so super user
119:30 - command allows you to execute some
119:33 - command which uh with the super user
119:37 - privileges right now uh whenever we will
119:41 - uh you know learn how to install uh some
119:43 - uh third party software something like
119:46 - GCC or g++ or any other uh libraries
119:50 - which we may require uh to uh perform
119:54 - some task most probably it will ask you
119:58 - for uh this super user privileges for
120:01 - example uh there are some command in um
120:05 - Linux most of the time in Debian
120:07 - operating systems that uh you can give
120:11 - apt get install command so apt
120:16 - get install and the name of the software
120:19 - which we want to install for example
120:22 - want to install GCC you will just give
120:25 - GCC or for example uh g++ or any other
120:30 - software for example but this uh app get
120:34 - install command uh you know asks you
120:38 - most of the time whenever you are
120:39 - installing some software this super user
120:42 - privileges so you just need to add
120:44 - pseudo in front of it and then give your
120:47 - password so that uh this uh software or
120:50 - Library can be installed on your system
120:53 - right so Pudo is for giving the
120:56 - administrative privileges right now uh
121:00 - for example uh I will open the next
121:02 - terminal you whenever you press control
121:06 - shift T it's going to open the new
121:09 - terminal as a second tab so I have the
121:12 - first Tab and second tab so control
121:14 - shift T will open the next tab now
121:18 - whenever I will give uh pseudo
121:22 - minus s and then press enter and I will
121:27 - give the password here once again which
121:29 - will not be shown by the way on the
121:31 - terminal and press enter you can
121:34 - see earlier I was having the user
121:38 - privileges uh which is uh the name of my
121:41 - PC but now I have the root privileges so
121:45 - it changes to the root user and then you
121:49 - can see the ASX here here right this not
121:53 - estx but this hash symbol here which
121:57 - means you are now uh uh in super user
122:01 - mode so you can easily uh you know uh do
122:05 - anything uh as a super user okay so
122:09 - whenever you will give sud sudo minus s
122:12 - you will uh go into the super user mode
122:16 - automatically and that now you can
122:19 - execute uh any command using a super
122:23 - user as yourself
122:26 - right now this is the small introduction
122:29 - for sud sudo Sudo has many capabilities
122:32 - which we are going to learn slowly when
122:35 - we learn more about uh Linux uh and more
122:38 - commands and then we will see slowly how
122:42 - it can be used in more efficient way so
122:45 - this was just a brief introduction how
122:48 - you can use pudum hello guys welcome to
122:51 - the next video on Linux command line
122:52 - trol for beginners in this video we will
122:54 - see how we can use top command in
122:58 - Linux now top command provides a dynamic
123:02 - realtime view of your running system so
123:05 - for example you want to know which uh
123:09 - process in your computer is taking uh
123:13 - most of the your CPU or which uh program
123:17 - is taking most of your uh uh computer
123:21 - memory
123:22 - then you can use a top command to see
123:25 - which program or which process is uh uh
123:28 - you know consuming most of your memory
123:32 - or CPU so let's see how we can uh use it
123:37 - so just uh give top command and press
123:41 - enter and now you can see it's going to
123:45 - give you this uh kind of a list View and
123:49 - you can see it's refreshing every few
123:52 - seconds so this is the time which is the
123:56 - current time and for example you can see
123:59 - right now it's uh refreshing every 3
124:02 - seconds so 36 and then it will be 39 and
124:06 - then once again 42 so it's refreshing
124:09 - every 3 second by default the top
124:12 - command uh refreshes this view every 3
124:16 - seconds right now on the left hand side
124:20 - you will be able to see see uh the
124:23 - P now P ID stands for process ID in
124:28 - Linux every a program or or process have
124:33 - its own ID and this is called process ID
124:37 - in Linux and in short it's called P ID
124:41 - so you can see uh on the right hand side
124:44 - the name of the program which is running
124:47 - uh currently uh and taking some memory
124:50 - on your computer computer so this is the
124:53 - zorg or genome terminal which is our
124:56 - terminal or mongod D which is a
124:59 -  demon which is running on my
125:01 - computer or even this top command how
125:04 - much memory is is it taking now in here
125:07 - you can see uh the CPU usage so the most
125:12 - of the CPU which is uh 5.9 or it's
125:16 - changing dynamically right so
125:19 - 4% it's used by this zorg process right
125:24 - and most of the memory also is used by
125:27 - this zorg process right so in this way
125:31 - you can uh see or take an overview of
125:35 - processes which processes are taking
125:39 - memory or how much memory is used uh in
125:43 - your system or how much uh CPU is used
125:46 - uh in your system so you can see right
125:48 - now total uh CPU usage is for example
125:53 - 8.2 or 7.5% or how much percent is it
125:59 - okay now uh top command provides you uh
126:03 - some more uh you know capabilities or
126:07 - Flags you can say uh in order to uh you
126:11 - know use this top in a better way now as
126:15 - I told you by default this uh view will
126:19 - be refreshed after every three 3 second
126:22 - and this you can verify with this clock
126:25 - so 58 and then it will be one so after 3
126:30 - second now if you want to change this uh
126:32 - refreshing of the data then you just
126:35 - need to press s on this uh terminal so
126:39 - just press s and then you can see here
126:43 - it says change Delay from three to
126:46 - whatever second you want so for example
126:49 - I want to uh you know see
126:52 - the pro you processes frequently or I
126:54 - want to uh refresh this uh top uh
126:57 - frequently for example for every 1
127:00 - second so I will just give one here and
127:03 - press enter and now this will be
127:06 - refreshed this view will be refresh
127:08 - every second and you can verify it with
127:10 - this clock also so 45 46 47 so it's
127:14 - refreshing faster and for example I want
127:17 - to do it a little bit slower so I I can
127:19 - do it five here and press enter and now
127:23 - this view will be refreshed every 5
127:25 - Seconds right so 56 and then one and
127:29 - hopefully it will be six here on the
127:31 - clock you can see like this okay now for
127:35 - example whenever you press I so just
127:39 - press a key I and this key uh allows you
127:45 - to just uh filter out any ideal
127:49 - processes so if any proc process is Idle
127:52 - it will not be shown here whatever
127:54 - process are running here only those
127:58 - processes will be shown all the other
128:00 - idle processes will not be shown or
128:03 - filtered right so these are the only
128:07 - processes which are taking some CPU or
128:09 - memories so that's why these are shown
128:12 - otherwise all idle processes are not
128:14 - shown and once again when you press I
128:17 - then it's going to show you uh the
128:20 - complete View all the processes which
128:23 - are running right now uh next thing here
128:28 - what we can do is we can even uh kill uh
128:32 - a process for example so what I'm going
128:35 - to do is for example I will uh press uh
128:38 - this button here and I will open for
128:41 - example system settings from here when I
128:44 - do this on my uh top command you can see
128:49 - Unity control C uh is running and when I
128:54 - press I so it will just give me the
128:57 - overview of the running processes right
129:00 - so when I do some uh you know some
129:04 - clicks here I will be able to see uh the
129:07 - process which process is for which uh
129:11 - you know what is doing what so this when
129:14 - I press and I can see here this process
129:18 - is
129:19 - 38 uh 7 three for example right so
129:23 - process ID according to the process ID I
129:25 - can kill any process so once again I
129:28 - will press it and then I can see this
129:32 - Unity control C command the process ID
129:34 - is 38 uh 3 7 I think or 3873 it was so
129:41 - let me confirm yeah
129:42 - 3873 so when I press on this terminal K
129:47 - it can ask me uh the process ID so I
129:51 - know the process ID which I want to kill
129:53 - so I will just say
129:56 - 3873 and then I will press enter and
129:59 - once again I will press enter which is
130:02 - going to kill the
130:05 - process which I want to kill using the
130:08 - process ID so now the settings uh window
130:12 - is gone because I killed this uh window
130:15 - right so in this way you can kill any uh
130:19 - process in uh L Linux now process ID and
130:24 - uh what are processes and uh how to kill
130:27 - uh processes we will see in details
130:30 - later also but I just wanted to show you
130:33 - the functionality of top so that uh you
130:36 - know how it works so in this way you can
130:40 - use top command in Linux hello guys
130:44 - welcome to the next video on Linux
130:45 - command line tutorial for beginners in
130:47 - this video we will see how we can use
130:49 - kill command to skill processes in Linux
130:54 - so let's get started first of all what
130:56 - I'm going to do is I'm going to open my
130:58 - terminal and for example I will start
131:02 - some process so I will go here and I
131:04 - will just start this system uh settings
131:08 - okay now I know that uh this is called
131:14 - Unity monitor so I will just use kill
131:18 - command so how you can use kill command
131:21 - you can just give kill and there are
131:24 - some Flags so you can give Flags using
131:28 - this minus here and then the name of uh
131:32 - or P of uh the process which you want to
131:36 - kill so you give P ID here okay so what
131:40 - I need to know is I need to know the P
131:45 - of a process in order to kill it right
131:50 - so first of first of all I will use a
131:53 - command to know the P of a process so
131:57 - just write P off and then the name of
132:01 - the process so I know the name of this
132:04 - process which is this one is Unity
132:08 - control center right and I will just uh
132:11 - press enter which will give me the P ID
132:15 - of this process right so in order to
132:18 - know the P ID of uh process of program
132:22 - uh if you know the name then you can
132:24 - find out the P ID of this uh process
132:27 - right now in order to kill it I can just
132:30 - write kill and then the P so I can just
132:34 - write
132:36 - 3286 which is uh this one this P ID and
132:40 - as soon as I will press enter this is
132:43 - going to be killed or closed right so
132:47 - when I press enter you can see it's
132:49 - killed right now uh if this command
132:54 - doesn't kill or is not able to kill a
132:57 - process somehow there is a Little Bit
133:00 - Stronger uh you know flag you can say
133:04 - you can add to the kill command and this
133:07 - flag will be something like this so I
133:10 - will start the process once again for
133:13 - example this once again and once again I
133:17 - will find the P ID and if you close
133:21 - close or kill the program and start it
133:23 - again it P ID will be changed so it will
133:26 - not be same every time right so you can
133:28 - see it P ID is changed right now this
133:32 - time what I want to do is I want to show
133:36 - you one more stronger command which is
133:39 - kill minus k i l in capital and then the
133:45 - P which is this one right and this will
133:49 - uh you know close the process uh it will
133:52 - force the process uh to be closed but
133:55 - it's not recommended but if you uh need
133:59 - it you know uh in some circumstances
134:02 - then you can use it okay and when I
134:05 - press enter this will be closed right
134:08 - and uh one more command is
134:12 - kill minus 9 right and then the P name
134:18 - or p number right and this minus 9 is
134:22 - called Sig kill command and it's also a
134:27 - very um I mean little bit powerful
134:29 - command to kill some processes if they
134:31 - are not killed by this uh simple kill
134:35 - command so just use this flag minus 9
134:38 - and then most probably this process will
134:41 - be killed okay now uh sometimes you
134:45 - don't even know the name of uh the
134:48 - process so how will you find find the P
134:51 - ID of this process right so in order to
134:56 - find out the list of running processes
134:59 - on your system what you can do is we
135:03 - have seen in the last video how we can
135:05 - use uh top Command right so you can
135:09 - either use top but I have one more
135:11 - command to show you which you can use to
135:14 - find out the P IDs of uh the processes
135:18 - by their names and this command is p s
135:21 - and then you can just write minus
135:25 - uux okay so just write PX PS and minus
135:30 - ux and press enter and this will give
135:33 - you this long list of all running
135:36 - processes right and you can see there
135:39 - are different processes running and on
135:42 - the on the left hand side you can see
135:45 - all these values are the P right so you
135:50 - can uh just match the you know the
135:53 - program name with the p ID and then you
135:56 - know you can uh use this P to kill the
135:59 - process now for example I will once
136:01 - again so you can see there is uh no uh
136:05 - this Unity control center here listed
136:09 - because it's not running right now and
136:12 - there's no uh process like this and when
136:15 - I start this so I'm going to start uh
136:18 - this once again and then I will just run
136:22 - this uh PS ux once again then let's see
136:26 - what happens so I will once again give
136:28 - the same command let me clear the
136:30 - terminal first and then I will just show
136:34 - you this uh PS minus ux command and now
136:37 - you can see uh this process is running
136:40 - so we know that uh this is the name of
136:44 - the process and you can see the P ID of
136:48 - the process and then you can kill it so
136:50 - just write kill and then
136:53 - 3311 which is the P ID okay and then
136:57 - this process will be killed
137:00 - right now uh in uh PS command you can
137:05 - also use for example this is going to
137:08 - give you uh the current user processes
137:11 - right now if you want to see all the
137:15 - processes you can just write PS minus Au
137:19 - ux okay and and a I think stand for all
137:23 - so it will show you uh the processes
137:26 - which is run by all users right so you
137:29 - can uh see you will uh see the root and
137:33 - uh the current user also which is uh my
137:37 - PC or me for example right and you can
137:41 - see all the list of uh all the processes
137:44 - which is uh you know used by all the
137:47 - users right now for example uh if if
137:50 - your
137:52 - uh Linux operating system is containing
137:55 - multiple users and you want to uh you
137:58 - know see which processes are run by
138:02 - which user then you can use uh for
138:05 - example PS and then minus U and this
138:10 - will be I think Capital use and then the
138:13 - username so I don't have multiple user
138:16 - but I know that my username is uh this
138:19 - one so I will just uh paste it and then
138:22 - once again press enter and it's going to
138:25 - give you all the processes run uh you
138:28 - know is running by my username for
138:31 - example right so you can uh see the
138:35 - process name and PID according to this
138:38 - also now there is a last command which I
138:41 - want to show you here so for example uh
138:44 - I will just write PS and then minus
138:49 - Capital C and and for example a name of
138:52 - a process for example genome terminal
138:55 - right and I will press enter and you can
138:58 - see uh it'll list out all the instances
139:02 - or all the you know Pro processes which
139:05 - are uh you know related to this program
139:08 - so there can be multiple for example
139:11 - instances of uh this program running on
139:13 - your system and then it will show you
139:16 - all the you know list of all the
139:17 - instances so in this way also you can
139:20 - use this PS command to find out the P ID
139:23 - of process and then later kill it so I
139:27 - hope you've enjoyed this video please
139:28 - RIT comment subscribe and bye for now
139:31 - hello guys in this video I'm going to
139:33 - show you how we can use Echo command in
139:35 - Linux and I'm also going to show you how
139:38 - we can declare variables and how we can
139:41 - use uh these variables with our Echo
139:44 - command so let's get started so first of
139:47 - all to use Echo command you just use e
139:50 - Co and then some text for example hello
139:55 - world and press enter and what it does
139:59 - according to its name it just displayed
140:02 - displays whatever you write after this
140:06 - Echo command so it echoes anything which
140:09 - you write after this keyword Echo right
140:12 - now you may say that it's good for
140:16 - nothing because it's just echoing
140:18 - whatever we write after this and and uh
140:21 - it's not really useful but the use of uh
140:25 - this Echo command comes when you are
140:27 - using some scripting for example uh bash
140:31 - scripting and then it becomes really uh
140:34 - you know
140:35 - important sometimes to use Echo and
140:39 - maybe in the next video I will show you
140:40 - a brief introduction to uh scripting
140:43 - also and then you will be able to
140:45 - understand how Echo is important right
140:49 - so this is how you can use Echo but
140:52 - there is a good practice uh to use Echo
140:56 - also which is you just use Echo and then
140:59 - you use double quotes around your text
141:03 - or whatever you want to display so for
141:05 - example hello world again and then it
141:10 - displays the same content but it's
141:13 - better to use double Cod around your
141:16 - text okay now how to use variables in uh
141:22 - terminal or in Linux so in order to
141:25 - declare a variable you just need to uh
141:28 - give a name to your variable for
141:30 - example my where for my variable and
141:35 - then give equals to sign so it's
141:38 - important here to note that I'm not
141:42 - providing any space between the variable
141:45 - name and equal to symbol so don't
141:47 - provide any space in between okay and
141:50 - then give any value to your variable for
141:54 - example I will give some name for
141:55 - example Mark and when you press enter it
141:59 - does nothing but whenever you want to uh
142:03 - you know know the value of this variable
142:06 - you can use Echo so just write Echo and
142:08 - then the dollar symbol so just use this
142:12 - kind of uh dollar symbol and then the
142:16 - name of your variable for example my
142:19 - wire okay and press enter and it will
142:22 - display the content of this variable
142:25 - right so what we have done here is we
142:28 - have given some name to our variable and
142:31 - we have assigned some value to our
142:33 - variable using equal to and in order to
142:35 - display uh the content of a variable you
142:38 - can use Echo and a dollar symbol before
142:41 - your variable name and then variable
142:44 - name and it will Echo the content of the
142:47 - variable right now for example I can
142:51 - declare some other variable also but
142:54 - before this I want to uh let you know
142:57 - that this variable is only uh valid for
143:02 - this session of the terminal so as soon
143:04 - as you will uh you know close the
143:07 - terminal then your variable value will
143:09 - be gone right so it's only valid for
143:12 - this session of the terminal right now
143:15 - let's uh declare some other variable for
143:17 - example X is equal to 10 which is uh
143:20 - integer for example okay and press enter
143:24 - and does nothing and then we can Echo
143:27 - something like this so Echo and then uh
143:31 - for example I will just write in double
143:35 - quotes the
143:37 - value of x is and then the dollar symbol
143:44 - and then the uh name of your variable
143:47 - which is X right and press enter and
143:51 - what it prints the value of x is 10
143:54 - which is the value we have assigned to
143:57 - our variable right so in this way you
144:00 - can declare a variable and uh you know
144:03 - Echo its value using Echo and these two
144:06 - things are very uh important whenever
144:08 - you are using scripting right and that
144:12 - we will see in the next video now there
144:15 - are some options uh you can use with
144:19 - Echo so for example when uh for example
144:23 - you want to escape something then what
144:27 - you can do so for example I will just
144:30 - use Echo and then I will use minus E
144:35 - flag for escape and then I will use
144:37 - single quotes here and for example I
144:41 - will
144:42 - say some text so some and I will just
144:47 - provide this for example back slash and
144:50 - then the next uh word for example text
144:56 - okay and this will be escaped because we
144:59 - are using uh minus E here and let's see
145:02 - what happens so once we press enter it
145:07 - gives the tab between the
145:11 - text so one thing uh worth noting here
145:16 - is whenever you uh will give this flag
145:20 - called called minus E it will enable
145:23 - interpretation of backs slash as an
145:25 - escape sequence and then you can use uh
145:30 - different kind of uh sequence something
145:33 - like for example backspace or you can
145:37 - use new line you know escape sequence or
145:41 - you can use tabs as we have seen that it
145:44 - haven't printed sum and then text it has
145:48 - printed sum and then e XT because back
145:52 - SLT is for tab in for horizontal tab to
145:57 - be more precise in uh uh you know in
146:00 - bash scripting right so whenever you
146:04 - want to uh use uh you know back slashes
146:08 - or escape sequence you can use minus E
146:11 - as a flag right so let's see some other
146:15 - examples of uh using this so I will just
146:19 - Echo it once again and this time what
146:22 - I'm going to do is I will use back sln
146:25 - and then some text something like this
146:27 - and press enter and you can see it
146:30 - prints the you know text in the new line
146:34 - so you can see some is in the first line
146:37 - and text in the new line after the space
146:40 - right or you can do something like this
146:42 - without space and press enter and you
146:45 - can see both are printed in the next
146:48 - line and uh there are some more you know
146:52 - sequences for example back SLB or other
146:56 - sequences something like back SL a which
147:00 - is for alert or some other sequences
147:04 - which you can uh you know uh search for
147:07 - using man Man pages and you will be good
147:10 - to go hello guys welcome to the next
147:13 - video on Linux command line tutorial for
147:15 - beginners in this video we will see how
147:17 - we can use file permissions in Linux
147:20 - and especially we are going to talk
147:22 - about symbolic permissions uh in Linux
147:26 - so let's get started first of all what
147:28 - I'm going to do is I will just change
147:30 - the directory to the desktop and you can
147:35 - see here I have a file which uh has a
147:39 - name file itself right so what I want to
147:42 - do is I want to uh list the long listing
147:46 - of this file so I will just do LS minus
147:49 - and
147:50 - and press enter and maybe in the
147:53 - previous video also I have uh you know
147:56 - just uh touched this topic that these uh
148:00 - thing here is the permission for the
148:03 - file now uh the first Dash on the left
148:07 - hand side you can see Dash or minus
148:10 - whatever you call it is the type of file
148:14 - for example if it's uh normal Dash it
148:18 - means it's a normal file if it would be
148:21 - uh D then it would be a directory or if
148:26 - uh it would be a character special file
148:29 - then it would be a c or it would if it
148:32 - would be um B then it would be a binary
148:36 - uh special file right now the next three
148:41 - uh you know group next three dash group
148:44 - or whatever next threee element uh you
148:47 - can say here is for the owner of the
148:50 - file right and then next threee is for
148:54 - the group of uh the file so group uh
148:57 - contains these rights and the last three
149:02 - uh is for the permission is the
149:05 - permission for everybody else
149:08 - right now the next you can see here is
149:12 - one and one stands for the symbolic
149:15 - links of the file so right now we have
149:17 - only one link right now now uh the next
149:21 - is this name which is for the you know
149:26 - owner of the file so the name of the
149:28 - owner of the file is this one right next
149:32 - is the name of the group of the file so
149:35 - this is for the group now next is this
149:39 - one and uh this is for the size of the
149:44 - file so right now our file size is 22
149:48 - and then next is the date on which it's
149:54 - created and then the file name right so
149:58 - these are uh the permissions so
150:00 - basically we are interested this area
150:03 - which is uh the user group and other
150:07 - permissions and the name of uh the user
150:10 - and the group right so let's uh try to
150:14 - uh change the permission of this file so
150:17 - there is a utility called CH mod which
150:20 - stands for change mod to change the
150:23 - permission of the file so for example I
150:26 - want to provide the permission to the
150:29 - user also but first of all what kind of
150:32 - permission we have so for this file for
150:37 - example we have three main kind of uh
150:40 - permission one is read other is write
150:44 - and third one is executable right so R
150:48 - stands for read W stands for write and X
150:52 - stands for executable so read write
150:55 - executable permission for a file okay so
150:58 - for example what I want to do is I want
151:01 - to change the permission of uh others to
151:05 - execute this file so I want to allow the
151:08 - other persons to execute this file for
151:11 - example right so what I can do is I will
151:14 - just use CH mod which is the utility to
151:19 - change the permission of the file and
151:21 - then I can give the first of all uh name
151:26 - of others so for example o stands for
151:29 - others here and then plus or minus plus
151:33 - is for adding the permission and minus
151:36 - is for substracting the permission and
151:38 - then the permission itself so I want to
151:41 - Grant the executable permission to the
151:43 - other user so o stands for other here
151:47 - plus is for adding the permission and X
151:50 - for example is the permission so
151:53 - executable permission right and then the
151:55 - name of the file itself so file right
151:58 - and I will press enter here so
152:01 - permission is changed and once again
152:03 - when we do LS minus L you can see here
152:07 - earlier the others doesn't have the
152:10 - executable permission but now the others
152:13 - have executable permissions right next
152:18 - what we can do here is once again again
152:20 - we can change the permission of others
152:23 - to write also so we can do W here and uh
152:28 - then press enter and once again we will
152:30 - do the long listing and you can see the
152:33 - others can write and execute and uh the
152:37 - read permission they already had so they
152:39 - can now read write and executable now
152:42 - it's not necessary that you want to do
152:45 - this for in the normal circumstances but
152:48 - this is just for the exam example we
152:50 - want to I want to show you right so for
152:53 - example now I want to change the
152:55 - permission of the group and group
152:58 - already have the permission read and
153:01 - write right so I want to change it to
153:03 - read write executable so for the group
153:06 - once again we will use CH mod and then
153:10 - for Group G and then plus X so we will
153:15 - change the permission of the group and
153:18 - the name of the file and and just press
153:20 - enter and then long listing once again
153:23 - and you can see now the group can also
153:26 - read write and executive now for example
153:30 - once again I want to uh you know reduce
153:33 - the permission of uh the group once
153:36 - again so right now group can read write
153:40 - and execute and I want to make it just
153:44 - to read so just allow the group to only
153:47 - read the file so once again CH mod and
153:51 - as I told you g is for group and minus
153:55 - is for reducing the permission right so
153:58 - we want to remove for example write and
154:01 - executable right and then the name of
154:03 - the file and once again when I press
154:06 - enter and once again when I do long
154:09 - listing now you can see group can only
154:12 - read because we have substracted the you
154:16 - know permission of the group to write
154:18 - and execute using this notation okay now
154:24 - uh for example I want to give the
154:26 - permission to uh every everybody so for
154:31 - example I want to give the user of uh
154:34 - this file or owner of this file to read
154:37 - write and execute and also I want to
154:40 - give uh the give the group of this uh
154:44 - file to read write and execute so what I
154:47 - can do is here one more no notation I
154:50 - can use which is for example CH
154:54 - mod and then the user is for uh the user
155:01 - and for example I want to also change
155:03 - the group so you can change the
155:05 - permission for uh multiple uh you know
155:09 - group or user for example you want to
155:11 - change it for user also and for the
155:13 - group also so you can use uh this
155:16 - combination also right and you can ALS
155:19 - Al use equal to so which uh is for
155:23 - granting the permission also so this
155:25 - notation is also used to you know
155:29 - changing the permission and I want to
155:31 - make it uh read write and execute so I
155:35 - will just do read write execute rwx for
155:39 - uh read write execute okay so this will
155:42 - change the permission of user or owner
155:45 - of this file and the group of this file
155:47 - to read write and execute and the name
155:50 - of the file don't forget right and then
155:52 - press enter and once again we will do
155:54 - the long listing and now we can see
155:57 - everybody have read write and execute
156:00 - permissions
156:02 - right now for example I want to uh
156:06 - remove the permission or change the
156:08 - permission to everybody right so for
156:12 - example I want to remove uh the
156:14 - permission for the user and the group
156:17 - and uh the others
156:20 - so that they cannot even read write or
156:22 - execute right so once again I will do CH
156:26 - mod and what you can do is you can do
156:29 - user group and uh the other you can do
156:34 - the notation something like this and
156:37 - then you can for example some do
156:41 - something like minus read write and
156:44 - execute something like this okay and
156:47 - this will uh remove the permission or
156:50 - otherwise you can just do use you can
156:53 - just use a for all and then you can do
156:56 - minus and then do read write and execute
157:01 - right so a stands for all so it stands
157:05 - for user or owner group and others so
157:09 - you are basically want to subtract all
157:11 - the permission from all the users and
157:14 - you can press enter before that we need
157:17 - to give the name of the file press enter
157:20 - and then use long listing and now we can
157:23 - see nobody has the permission to you
157:27 - know change or rewrite or execute this
157:29 - file right now for example I want to
157:33 - give everybody their permission back so
157:36 - I want to give the same status I have in
157:40 - the you know uh starting so I want to
157:43 - give the owner of this file read and
157:45 - write group also read and write and the
157:49 - uh others just the read permission so
157:52 - what I can do is I can do CH
157:55 - mod and for the user I want to add once
157:59 - again the permission read and write okay
158:03 - and then you can use the comma to give
158:06 - the other others the permission for
158:08 - example group and once again we want to
158:11 - give the permission to the group read
158:13 - and right or you can do this thing
158:16 - something like read and write using
158:19 - equal tools both are uh the same
158:22 - commands and uh then for the others we
158:27 - want to just give the read permission
158:29 - something like this and the name of the
158:32 - file okay so use comma in order to you
158:35 - know separate the permission or if you
158:38 - want to uh change the
158:40 - multiple uh permission of the multiple
158:42 - users right and press enter and it gives
158:47 - some uh problem let's see what the the
158:49 - problem is yeah so the problem is uh CH
158:53 - mod is not spelled correctly so I must
158:56 - correct it so I will remove this a and
158:59 - now the command is normal right so I
159:03 - will press enter and now once again I
159:06 - will do the long listing and now once
159:09 - again we have the normal permission of
159:11 - the file so for owner we have read write
159:15 - group we have read write and for other
159:17 - we have read permission so this is how
159:20 - you can change the permission of a file
159:23 - using symbolic notation so this uh RW or
159:28 - X is called a symbolic notation hello
159:32 - guys welcome to the next video on Linux
159:34 - command line tutol for beginners in the
159:36 - last video I've shown you how you can
159:38 - change the permissions of the file using
159:41 - CH mod in Linux now in this video I'm
159:44 - going to show you how we can change the
159:46 - permissions of the directories in uh
159:49 - Linux using CH mod and what are the
159:53 - consequences of changing the directory
159:56 - permissions so let's get started as you
159:59 - can see here I have a directory called
160:01 - di on my desktop so I will change my
160:05 - directory to uh desktop first of all and
160:09 - I will do the long listing of this
160:11 - directory so here I will just use l and
160:15 - D because it's a directory and then the
160:18 - directory name which is is di right and
160:20 - press enter and in here you can see the
160:23 - file permissions now in the last video
160:26 - as I have shown you this first letter
160:28 - shows the type of file or directory so
160:30 - because it's a directory it's showing D
160:33 - here next three uh values here is the
160:36 - permissions of the user and next three
160:40 - is the permission of the group and the
160:42 - next three uh is the permissions of uh
160:46 - everyone else right now let's change the
160:50 - permission of uh this directory for the
160:53 - user so that uh we will uh you know
160:56 - reduce the right capability of the user
161:00 - for example I will just write CH mod
161:03 - here and then I will do user minus W
161:07 - which means we are uh you know
161:09 - subtracting the right permission from
161:11 - the user and the directory name okay so
161:16 - just press enter and then I will do the
161:18 - long listing once again and now we can
161:21 - see the user doesn't have the right
161:24 - permission so now you can see there is a
161:29 - lock symbol appears on the directory
161:32 - right so because it doesn't have the
161:34 - right permission that's why this log
161:36 - symbol appears so let's say we want to
161:41 - Alis the content of the directory so I
161:43 - will just do
161:45 - LISD for example it shows that this D
161:49 - directory has three files right and
161:52 - let's say I will just change to the
161:54 - directory so I will go inside the
161:55 - directory and I will do LS here and in
161:59 - here for example I want to create a new
162:01 - file for example file 4 so what I will
162:05 - do is I will just use a touch command
162:09 - and I will just write file four here so
162:11 - I want to create a fourth file here and
162:14 - when I press enter you can see it says
162:17 - permission denied because we have uh you
162:20 - know taken the right permissions from
162:23 - the user so he cannot create any new
162:26 - file inside the directory right now for
162:30 - example I will uh just go out one step
162:34 - back One Directory back to the desktop
162:37 - and now I will just uh once again give
162:40 - the permissions to the user so write
162:44 - permission I'm just providing so user
162:47 - plus uh w which once again will provide
162:51 - the right permission to the user and
162:54 - then this time I want to take the read
162:57 - permission from the user okay so I have
163:01 - uh added the right permission once again
163:04 - and I want to subtract the read
163:06 - permission from the user so let's see
163:08 - what happens when we do this so just
163:11 - write CH mod U minus r which will
163:14 - subtract the uh read permission from the
163:16 - user for the directory and let's do the
163:19 - long listing here just do this long
163:22 - listing and you can see the read
163:24 - permission is uh taken from the user now
163:28 - right now I will once again go to the
163:33 - directory inside the directory for
163:35 - example so I will do
163:37 - CDD and we can go inside the directory
163:41 - but when we do LS here you see it says
163:44 - permission Deli so we cannot read the
163:47 - content of the directory we can go
163:49 - inside the directory and we know that uh
163:52 - this directory cont contains three files
163:55 - but because we have taken the read
163:57 - permissions from the user we cannot read
164:00 - the content of the directory okay so
164:03 - this is when we change or uh when we
164:06 - take the read permissions from the user
164:09 - so once again I will provide the read
164:12 - permissions to the user so CH mod u+r
164:16 - which will once again give the read
164:17 - permission to the user for this
164:20 - directory and uh it says uh this
164:24 - directory okay first of all I need to go
164:26 - to desktop so change directory to the
164:29 - desktop and then provide this command
164:32 - okay and once again I will do long
164:34 - listing of this uh directory so LS minus
164:38 - LD directory and now we have the read
164:42 - permission also for the user now this
164:44 - time what I want to do is let's take the
164:47 - execute permissions from the user for
164:51 - example so I will just do CH mod then
164:54 - user minus X for the directory right and
164:59 - press enter and once again I will do the
165:01 - long listing so LS minus uh LD for the
165:06 - directory and you can see the execute
165:10 - permissions from the user is taken right
165:13 - so now what I will do once again I will
165:16 - uh try to uh go inside the direct
165:19 - which is dir and it
165:23 - says permission denied right so I cannot
165:27 - execute uh anything with this directory
165:30 - so let's do LS with directory and press
165:34 - enter and this also gives us uh the
165:37 - permission denied right so it uh shows
165:40 - the content of the file but access to
165:43 - this files is not possible right so you
165:47 - cannot even go inside the directory
165:49 - so you know you cannot access the
165:52 - content of the file so for example I I
165:55 - will do LS minus L long listing of uh
165:58 - the directory and you can see everywhere
166:01 - it shows the question mark but it shows
166:03 - the names of the file but the
166:06 - permissions uh it's not showing because
166:08 - you don't have the permission to see
166:10 - even the permissions of uh the files
166:15 - inside this directory because we have
166:16 - taken the execute permissions from from
166:19 - this directory so this is how uh you can
166:22 - change the permissions of the directory
166:24 - and this is how the changing of the
166:27 - permissions of the directory behaves uh
166:30 - so this is the consequences so if you uh
166:33 - you know remove the execute permissions
166:35 - uh you cannot you know change the files
166:39 - and uh you cannot even view the
166:42 - permissions of the file hello guys
166:45 - welcome to the next video on Linux
166:46 - command line tutorial for beginners in
166:49 - the last two videos we have discussed
166:51 - how we can use symbolic permissions in
166:55 - Linux now in this video we will discuss
166:58 - about octal or numerical permissions
167:02 - with the files in Linux so let's get
167:05 - started first of all how uh we can uh
167:09 - you know use or what is octal permission
167:14 - so octal permission is a numerical
167:17 - representation of
167:19 - the file permission for example so let
167:22 - me just change the directory to desktop
167:26 - first of all and then we will create a
167:30 - file using touch for example so I will
167:33 - just say
167:35 - file.txt
167:37 - and our file will be created right and
167:40 - then when we list the permissions of
167:44 - this file so what I can do I can just do
167:47 - LSUS l for the file and then when I do
167:52 - this I can see uh the permissions and
167:55 - this we have seen in the last uh video
167:57 - so these three uh things is for the
168:01 - users other three are for the groups and
168:05 - other three are for the uh you know
168:08 - others right and then we have these uh
168:12 - three representation which is read
168:14 - permission write permission and the
168:17 - execute permission
168:19 - so let me uh simplify the you know n
168:23 - numerical or octal permissions using
168:26 - this concept so what I'm going to do is
168:30 - I will just open a normal text file and
168:34 - let's say this is our
168:36 - users and groups and others like these
168:40 - three uh you know groups
168:43 - users groups and others right and each
168:47 - have its uh per so each have read write
168:51 - and uh the third command which is uh
168:55 - execute right so I'll write read and
168:58 - then it has write and for example
169:01 - execute in the same way group also has
169:04 - read and then the right this will be
169:07 - right and the execute and other also
169:10 - have read and write and execute right
169:15 - now octal representation can be done
169:18 - something like this so for example if we
169:21 - are uh you know using binary notation
169:25 - this is one this is one and this is one
169:27 - right and same is for here so this is
169:31 - one this is one and this is one and this
169:34 - is one this is one and this is one for
169:36 - example right now if we want to provide
169:40 - the permission for a file for the user
169:43 - for example that this will be uh you
169:47 - know users have all the three permission
169:50 - read write and execute permission so
169:54 - let's start from here so what we uh do
169:57 - here so this is equal to one in binary
170:00 - for example and then this is equal to
170:03 - two because uh you can uh you know in
170:07 - binary you can just double the when you
170:10 - go left right and then this is equal to
170:14 - four right and
170:18 - in uh you know when you add these three
170:22 - numbers the addition will be 4 + 2 + 1
170:28 - which is equal to 7 so if you want to
170:32 - allow the user to read write and execute
170:36 - a file then you need to give the number
170:39 - notation 7 and this is calculated like
170:43 - this so you just need to for example
170:46 - start from the right and then uh write
170:49 - here one and then make a double of it
170:52 - two and four for example and then if uh
170:57 - you want to uh you know give the right
170:59 - here do it one otherwise if you want
171:02 - don't want to give the permission then
171:04 - do it zero here so for the group for
171:08 - example I just want to give the group
171:10 - only a read and execute permission so I
171:14 - will just do write is equal to zero okay
171:18 - so what will be the you know numerical
171:21 - notation for this we will start from
171:25 - the right hand side so the value is one
171:28 - here because we want the execute
171:31 - permission the value will be zero here
171:34 - because uh we don't want the right
171:35 - permission right so here will be zero
171:39 - instead of two and here the value will
171:41 - be four because once again we want the
171:45 - permission here and the addition of
171:48 - these value will be uh for example 4 + 1
171:53 - is equal to 5 right so whenever you want
171:57 - to give the only read and execute
172:01 - permission then you just need to give
172:04 - the numerical notation of five here
172:07 - right and same you can do here for
172:10 - example you want to just give the read
172:13 - and write permission to the others then
172:16 - what we can do here we can uh uh just
172:19 - give zero here and then we can give one
172:23 - here and give one here again right and
172:27 - then this notation will be for example
172:31 - zero this notation will be here so let's
172:35 - write zero here for
172:38 - example 0o and then one and then one so
172:44 - let me align everything because these
172:47 - things are not aligned properly so
172:50 - something like this so uh this will be
172:53 - two according to this notation right and
172:57 - this will be four according to our
172:59 - notation here right and the addition of
173:02 - uh these value will be six right and uh
173:08 - so whenever you want to give the read
173:11 - and write permission the notation will
173:13 - be six so there is a table for these
173:17 - notation if you want to calculate it's
173:20 - really easy I have shown you uh this is
173:22 - how you can calculate the value and when
173:25 - you uh use these uh number notations
173:28 - frequently you get used to them and then
173:31 - you don't even need to remember them uh
173:33 - I mean you don't even need to calculate
173:36 - them you can remember them automatically
173:39 - so I have a table for um the values so
173:43 - you can see whenever you don't want to
173:46 - give any permission you just give zero
173:49 - if you want to give uh execute
173:51 - permission you give one you if you want
173:53 - to give write permission you give two
173:56 - and then uh write and execute is three
173:59 - read is uh four read and execute is five
174:03 - read and write is six and read write
174:06 - execute is seven right so this is a
174:09 - simple table and this is how uh we can
174:13 - calculate these value right so you can
174:16 - uh you know calc Cal at all the values
174:19 - uh using this approach now for example I
174:24 - want to change the permission of uh this
174:27 - file using number notation then what I
174:30 - can do is I can just do CH mod and then
174:34 - I can uh for example give zero here for
174:37 - the user zero means uh no permission
174:42 - right so for the user we are not
174:44 - providing no permission for the group
174:46 - also for example we will provide no
174:48 - permission
174:49 - and for the others also we will provide
174:51 - no permission for example for this file
174:54 - and press enter and the command is
174:57 - successful and let's uh give the long
175:00 - listing of uh this file so now nobody
175:03 - have any permission for this file right
175:07 - now for example we want to uh allow the
175:11 - user to Red write and execute right and
175:16 - for uh the group we just want to give
175:21 - the permission read and execute which is
175:24 - five right so you can just do something
175:28 - like this so just write CH mod and for
175:32 - the user we want to give read write and
175:34 - execute and read write and execute the
175:37 - number notation is seven as you can see
175:39 - here right and for the group we want to
175:42 - give five which is read and
175:45 - execute and for example others also we
175:49 - want to give five which is read and
175:51 - execute and the file name and press
175:53 - enter once again do the long listing and
175:56 - now you can see the user have read write
176:00 - and execute the others and the group
176:03 - have read and execute uh permissions
176:07 - okay hello guys welcome to the next
176:09 - video on Linux command line tutorial for
176:11 - beginners in this video we will see how
176:13 - we can create a script in Linux and uh
176:18 - we we will also see how we can execute
176:20 - our script and we will learn how we can
176:23 - write for example our first hello world
176:25 - script now scripting in general is
176:28 - really uh you know deep concept and uh I
176:32 - can make uh separate tutorial about
176:35 - scripting itself right so in this uh
176:38 - video I just want to give you the brief
176:40 - introduction about scripting and how you
176:43 - can use scripting so that you can build
176:45 - on that knowledge and you can you know
176:48 - learn about scripting in different video
176:51 - or different uh you know so from this
176:54 - different Source right so first of all
176:56 - what is a script a script is a text file
177:00 - that contains a sequence of command for
177:03 - a Linux based operating system so let's
177:06 - see how we can create a script so I'm
177:08 - going to open our terminal first of all
177:11 - and in this terminal first of all let's
177:13 - say we want to create a script on the
177:16 - desktop so I will just change the uh
177:18 - directly to the desktop and then I will
177:21 - use our Nano editor for creating a
177:26 - script so for creating a script you just
177:28 - need to write Nano and then the script
177:31 - name so for example I will name my
177:34 - script as uh my script itself now it's
177:39 - enough to give this uh name uh my script
177:43 - here but it's a good practice to give an
177:46 - extension of sh here for uh you know
177:50 - just showing the user that it's a script
177:53 - okay so I'm just adding the extension
177:56 - here but if you don't add this extension
177:59 - it'll work fine so it's uh not going to
178:02 - be different if you don't add this
178:05 - extension now first of all uh we need to
178:08 - know where our bash is located on our
178:12 - system so what I'm going to do is before
178:15 - creating a file or uh let's just create
178:18 - create a file and then uh we are going
178:20 - to uh see further so Nano and then the
178:23 - name of the script and press enter and
178:25 - it's going to open this uh kind of
178:29 - Editor to you right now first uh line
178:33 - which you write in a script is this uh
178:38 - line which you need to use or it's a
178:40 - good practice uh to use this so first is
178:43 - you need to write hash and then this
178:46 - exclamation mark which is called
178:48 - hashbang and then the location of your
178:51 - bash now what I'm going to do is I'm
178:54 - going to open uh different terminal and
178:58 - then we will see the location of our
179:01 - bash uh where is our bash right now what
179:05 - we are going to do is just do which and
179:08 - then just
179:10 - write bash here okay and then press
179:14 - enter and it gives this answer so this
179:17 - which command we are going to learn
179:19 - later what is this Wich command and what
179:21 - it does is but just open a new terminal
179:24 - and just write which bash and it's going
179:26 - to give you the location where bash is
179:30 - located so this is the location so just
179:33 - uh take this location and after this
179:36 - hashbang which we have written here you
179:39 - need to write this location so forward
179:42 - SL bin slash bash okay which is this
179:48 - this location here okay so we just
179:50 - needed to know the location and whatever
179:53 - the location is you just need to write
179:55 - here after this hashbang okay and now
179:58 - you can close the other terminal so this
180:02 - tells uh the you know interpreter that
180:05 - uh this is a script which is using bash
180:09 - and then as I have told you the script
180:13 - is a sequence of commands so for example
180:16 - I can uh normally write LS for a listing
180:19 - for example let's do long listing with
180:22 - this script first of all right so just
180:25 - hashbang and then the long listing which
180:28 - is which you write on the terminal it
180:30 - will list out the you know files or
180:33 - directory on your terminal right now in
180:37 - order to save it you just need to write
180:39 - uh crol o and press enter which will
180:42 - save it and then controll X to exit so
180:46 - you can see here our script is created
180:49 - now in order to execute a script first
180:52 - of all let's see when we execute it what
180:55 - happens so normally you need to give the
180:59 - permission execute permission to your
181:01 - script but if you do it without giving
181:03 - the permission let's see what happens so
181:07 - to execute a script you just need to
181:08 - write dot for Slash and then the name of
181:11 - your script something like uh this so my
181:14 - script right so just write
181:18 - my script here Dosh okay and then when
181:22 - you execute it it
181:24 - says permission denied because your
181:28 - script doesn't have the execute
181:30 - permission when you create it okay so in
181:33 - order to give the execute permission you
181:35 - need to just give the execute permission
181:38 - to it so you can just write um CH mod
181:42 - plus X for uh giving the execute
181:44 - permission to user group and uh the
181:47 - others and then your script name for
181:50 - example okay and then press enter and
181:53 - now your script has the execute
181:55 - permission right so in the last three
181:57 - video we have been learning how to give
181:59 - the permission to the script and that's
182:01 - why I'm I was uh you know creating those
182:04 - video to uh you know let you know how
182:07 - you can change the permission of a file
182:10 - now this will uh change the permission
182:12 - of a file to the execute so you can uh
182:15 - execute uh this script by giving this
182:17 - permission
182:18 - now once again when we do uh dot forward
182:21 - slash and then the script name and press
182:25 - enter what it does is it's going to list
182:28 - out the long listing of your desktop
182:31 - right so you can see let me just make it
182:35 - a little bit bigger and once again uh
182:37 - execute it again and you can see it has
182:39 - done the long listing of uh on the
182:42 - desktop so you can see we have three
182:45 - files on the desktop and each have their
182:48 - own permission so first is the directory
182:51 - other is the file. text and third one is
182:55 - the myscript dosh which have all the
182:59 - execute permission
183:01 - here okay so this is a simple for
183:05 - example hello world script you can write
183:08 - us let's uh modify our script and let's
183:11 - see what else we can do so single
183:13 - command we can um you know you can ask
183:16 - why we need script for executing a
183:19 - single command so let's go to the script
183:23 - again so I will just write Nano and then
183:26 - my script and this is a very basic
183:30 - example I have given you but with this
183:32 - uh scripting you can execute a you know
183:36 - sequence of command not only one command
183:39 - but for example let's do for example I
183:41 - will do LS and then I'll Echo something
183:46 - and let's Echo
183:50 - hello world here okay and then I will
183:53 - just save it CR o and press enter and
183:56 - then CR X and once again when I execute
183:59 - this script it first of all list out uh
184:04 - the contents of the directory and then
184:06 - it prints the hello world which is using
184:09 - the echo Command right now I have shown
184:12 - you in the Echo command tutorial that we
184:15 - can also create a variable in U you know
184:20 - for using it in the Echo so for example
184:24 - I will create a variable let's say it's
184:27 - called Uh string is equal to and I will
184:32 - assign something to it let's
184:34 - say hello world itself something like
184:39 - this okay and uh with Echo you can uh
184:44 - just call this variable by using this
184:47 - dollar symbol so just
184:49 - write something like this okay so string
184:54 - and using uh the dollar symbol before
184:57 - the variable name you can Echo it okay
185:00 - so I will just save it and press enter
185:04 - execute I will exit it and then once
185:06 - again execute the command and it's doing
185:09 - the same so you can see here in this
185:13 - script we are performing the you know
185:16 - series of command and this is what
185:19 - scripting is so you can write uh you
185:22 - know sequence of uh you know command
185:24 - here and execute it and scripting is
185:27 - much advanced than this so it has a
185:30 - functions and it has loops and if
185:33 - conditions so uh you know it's a
185:36 - different topic to learn scripting but I
185:39 - wanted to know uh let you know that uh
185:41 - this kind of scripting exists so you can
185:43 - build on this knowledge and learn about
185:45 - scripting because it's so really uh you
185:48 - know important if you uh want to pursue
185:52 - your uh career in Linux for example
185:58 - hello guys welcome to the next video on
185:59 - uh Linux command line tutorial for
186:01 - beginners in this video I'm going to
186:03 - show you how we can use which command
186:06 - and what is command in Linux so let's
186:10 - see first of all what is which command
186:12 - and how we can use it the which command
186:15 - is used to uh you know return the path
186:18 - name of a file or a command which we use
186:22 - with this Wich command so let's see how
186:25 - we can use it so to use the which
186:27 - command you just need to write which and
186:29 - the command name so for example Alis
186:34 - okay and this will give you so for
186:36 - example I will press enter and this will
186:39 - give me the location of this LS command
186:44 - or wherever this LS executable is
186:47 - located right for example in the last
186:50 - video I wanted to know the path location
186:54 - of The Bash so I have done something
186:56 - like uh this Wich bash and it has given
186:59 - this location to us right now this uh
187:03 - witch command uh will help you whenever
187:06 - you uh will be writing much of the bash
187:09 - scripting and uh uh in bash scripting
187:12 - it's a good practice to uh you know use
187:15 - the full path of the command name so
187:18 - instead of using LS in bash scripting
187:21 - for example so let's open our script
187:24 - first of all Nano which we have created
187:26 - in the last video so I'm just going to
187:29 - open the first of all cd2
187:33 - desktop and then Nano to my script which
187:37 - we have created in the last video right
187:40 - so in Linux it's in best scripting
187:43 - especially it's a good practice to use
187:46 - the location for location for example
187:49 - bin sl/ LS right which is the full
187:53 - location of uh this LS command and then
187:56 - I will just um you know exit out of it
188:00 - and whenever I uh execute this uh my
188:05 - script for once again it'll give me the
188:07 - same result
188:10 - so sometimes whenever you use uh your
188:13 - script in different uh operating system
188:16 - some uh Rec niiz your LS command some
188:19 - wants uh you to give the full path of
188:22 - the for example any command which you
188:24 - use so this is the full command so this
188:27 - is where the which command will be
188:30 - helpful to you to know the location of
188:33 - any for example command for example I
188:36 - want to know the location of uh let's
188:41 - say
188:43 - Firefox and press enter and you can see
188:46 - it's located here so user bin Firefox
188:50 - right so for example I want to know the
188:53 - location of cat so bin cat right so in
188:58 - this way you can uh know the location of
189:01 - uh any uh you know command using this
189:04 - witch command now what is a what is
189:08 - command so let's see how we can use what
189:10 - is command so I'm going to clear the
189:13 - terminal and then this time we are going
189:15 - to use the what is command so what is
189:19 - command is going to display the short
189:22 - manual page description so as I have
189:26 - been uh you know telling you to use Man
189:28 - pages for example man LS and I will just
189:32 - uh press enter it gives this man page
189:35 - which gives the in information about uh
189:38 - you know LS what it does and essentially
189:41 - uh this what is command is going to uh
189:45 - return you short description of this LS
189:48 - command which is there in the main page
189:49 - for example this uh description so let's
189:53 - see how we can uh use this you know what
189:56 - is command so just write what is
190:01 - something like this and then LS and
190:03 - press enter and you can see it gives the
190:06 - short description of this LS command
190:09 - which is there in the M Pages itself so
190:12 - if you wanted to know what this command
190:15 - is doing so you can just do uh what is
190:18 - LS or or any command so let's say I want
190:22 - to do what is uh fir Fox for example and
190:27 - it gives a free and open- Source web
190:29 - browser for mod Silla right and uh this
190:32 - command which we haven't seen for
190:36 - example graph uh we will see it in the
190:38 - later video what is it but let's see
190:41 - what is it so it is uh used to print
190:45 - line matching a pattern right and let's
190:49 - say what is a cat command and it's a
190:52 - concatenation so it is used to
190:54 - concatenation files and print on the
190:57 - standard output so what is command you
191:00 - can use to display a short description
191:03 - of a command which is uh present in the
191:06 - Man pages also so this is how you can
191:09 - use which and what is command in Linux
191:12 - hello guys welcome to the next video on
191:13 - Linux command line tutorial for
191:15 - beginners and in this video we will
191:16 - learn how to use user add command to
191:20 - create users in Linux so to create a
191:24 - user we can use a command called user
191:28 - add and with this command we use some
191:31 - flags and the user name to create a user
191:36 - so let's see how we can create a user
191:38 - using this command so you just need to
191:41 - type this command which is user add and
191:44 - then the name of the user the name of
191:47 - the user can be anything for example
191:49 - Mark or user one or anything which you
191:54 - want so this is the username which you
191:57 - want to give so I want to give the
191:59 - username for example Mark okay and then
192:03 - the second uh flag that you can use is
192:07 - minus m flag right and what this flag is
192:11 - going to uh do is it's going to create a
192:14 - default home directory for this user
192:18 - right so we are going to see once this
192:21 - command is executed this that the home
192:24 - directory with this name will be created
192:27 - whenever we will uh see the home
192:29 - directories right now the next command
192:33 - is minus S command and this is the
192:37 - command for the default uh shell okay so
192:42 - this minus S command is used for uh
192:46 - allowing the user to use the shell
192:49 - whatever we provide after this flag so
192:52 - generally we give the bash so
192:57 - bin slash bash here so something like
193:01 - this okay so this is most commonly used
193:05 - uh you know shell so I'm going to use
193:07 - this now the next command is uh minus uh
193:11 - G this is next flag I beg your pardon
193:15 - and this is the D default user flag and
193:19 - after this after space after this flag
193:22 - whatever User Group you type the user
193:26 - will be assigned that group so the
193:28 - default group is uh users and I would
193:32 - recommend uh that you always use uh with
193:36 - minus G flag uh this users group uh
193:40 - which is uh correct to use there is also
193:44 - some more flags for example minus see
193:47 - for providing uh the commments you can
193:50 - provide any commments here for this user
193:53 - so for example I want to give some
193:56 - comment
193:58 - my comment for example right so any
194:02 - comment can be given to the user using
194:04 - this flag minus C okay now there are
194:09 - much more Flags uh you can use for
194:12 - example minus G for uh giving the user
194:15 - defined group or assigning the user
194:17 - defined Group which we are not going to
194:20 - use but uh just uh use man command on uh
194:24 - with this uh user ad command and you
194:26 - will be able to see what are the you
194:29 - know Flags which you can use with this
194:31 - user ad command and because we are
194:35 - creating the user we need to create user
194:37 - with our root you know access so you
194:41 - just need to write pseudo in front of uh
194:44 - this command in order to create this
194:46 - user because you don't want to uh you
194:49 - know allow anybody to create the user
194:53 - the root user can you know uh create the
194:56 - user right so this is uh the command P
195:00 - sudo and then the user add command then
195:03 - the name of the user then uh the flag am
195:06 - is used for creating the default home
195:09 - directory as is for default shell minus
195:12 - G is for the default group minus C is
195:16 - for the command and then you can press
195:18 - the enter key which is going to ask for
195:20 - your password and then press uh enter
195:23 - once again which is going to create this
195:27 - user now just do LS and then forward
195:32 - slome and you can see a new user here is
195:36 - created with the name Mark which is this
195:40 - name so this directory is created in our
195:43 - home folder for the new user right but
195:47 - you may ask that we haven't provided any
195:50 - password to this user so whenever this
195:53 - user wants to login he will log in with
195:56 - the username and the password but we
195:59 - haven't provided any password here so
196:01 - this password can be uh you know given
196:04 - to the user with the command called pass
196:08 - WD okay not WB but WD okay so when you
196:14 - give this command as it is then it it
196:18 - will allow you to change the you know
196:21 - password for the you root user but when
196:24 - you use this command with uh the
196:27 - argument for example I will use this uh
196:30 - command pass WD with uh the username
196:34 - Mark then this will allow me to change
196:36 - the password of uh the mark right and
196:41 - then you also need to use Pudo command
196:44 - because uh you may have to give the root
196:47 - acces in order to change the password of
196:50 - the user right so whenever you use this
196:54 - like this then it will allow you to
196:56 - change your password and whenever you
196:58 - give the name of the user then it will
197:01 - allow you to change the password of the
197:03 - user okay so press enter and now it says
197:07 - enter the new password so give any
197:10 - password whichever you want to give to
197:12 - the user for example I will give a
197:14 - simple password here and I will press
197:17 - enter and then I need to retype this
197:19 - password so I will retype this password
197:21 - and press enter and you can see it says
197:25 - password updated successfully so now for
197:29 - the new user you can give this name and
197:32 - whatever password you have assigned to
197:34 - this user to the new user and he will be
197:37 - able to log in with this username and
197:40 - password okay so this is how you can
197:43 - create a user in Linux in the next video
197:46 - video we will see how we can uh remove a
197:49 - user in Linux and I will recommend that
197:52 - you can create uh you know four or five
197:55 - users so we can play with these users
197:58 - okay so with the same command you can
198:01 - create multiple users and uh these users
198:04 - we can use in the next video to remove
198:08 - them hello guys welcome to the next
198:10 - video on Linux command line tutorial for
198:12 - beginners in the last video we have seen
198:14 - how to create users in Linux using
198:17 - command line now in this video I'm going
198:20 - to show you how you can remove users
198:23 - using uh command line terminal so first
198:26 - of all let's see whatever users we have
198:29 - so I'm going to just give LS and then
198:32 - forward SL home and you can see here we
198:36 - have three users one is Mark one is my
198:40 - username and other is Tom so in order to
198:44 - remove a user what we do is we use a
198:48 - command called
198:50 - user Dell okay so this is the command to
198:53 - delete users and then whatever name you
198:57 - will give for example I want to remove
198:59 - this user called Mark so I will just use
199:03 - the user name Mark right and then you
199:07 - need to use root permission so you uh
199:10 - use pseudo before this command so just
199:13 - write pseudo user Dell command and then
199:16 - the username you want to delete right
199:19 - and I'm going to press enter here and
199:22 - I'm going to give my password and press
199:24 - enter and once again I will see if the
199:27 - user is deleted or not so I will just
199:29 - Alis and forward
199:31 - slome now you will observe even if you
199:34 - have given this command user Dell which
199:37 - is used to delete the user the home
199:40 - directory for this user is not deleted
199:43 - right so what this command is doing is
199:46 - it's going to delete the username the
199:49 - password and other data for the user but
199:52 - it's not going to delete the home
199:55 - directory for the user and it's also
199:58 - important sometime because for example
200:02 - uh employee resigns from a company who
200:06 - have account on a Linux operating system
200:09 - for example of that company and then he
200:12 - resigns and uh for example administrator
200:16 - wants to delete his username but wants
200:19 - to keep his data whatever work he has
200:21 - done right so this command uh is used to
200:26 - delete the user so user is deleted but
200:30 - the data home directory is still here
200:33 - right so this command is used to delete
200:36 - the user but the home directory will not
200:38 - be deleted but it's also really easy to
200:42 - remove the home directory as well as the
200:45 - user and for this you just need to use
200:48 - Pudo and then the command user Dell and
200:52 - also the name of the user so for example
200:54 - this time we want to remove the user
200:57 - called Tom so I'm going to just write
200:59 - the name Tom and you need to use the
201:02 - flag minus r with this in order to
201:06 - remove the home directory also right so
201:09 - this home directory will also be deleted
201:12 - if you use this minus r flag with this
201:15 - command and I'm going to to press enter
201:18 - and you can see it uh shows uh that Tom
201:22 - maale spool not found so we haven't even
201:25 - created the any mail spool for this uh
201:29 - user so this warning is okay it's uh you
201:33 - know not important in our case right and
201:36 - let's go to the home directory once
201:39 - again and let's see what's there and you
201:41 - can see home directory is also deleted
201:43 - and the username and you know all the
201:45 - data for the user Tom is deleted so if
201:49 - you want to delete the user and also the
201:53 - home directory of the user then use
201:55 - minus r flag with user Dell command
201:58 - otherwise use uh user Dell with the
202:01 - username
202:03 - right now for example we want to remove
202:06 - this home directory for the user how we
202:09 - can do it so it's also really uh simple
202:13 - but be careful with this command so just
202:16 - write
202:17 - P sudo RM so remember we have learned
202:20 - remove command or RM Command right so we
202:23 - will use this command so RM minus r and
202:27 - then forward slome and forward slash the
202:30 - username right but I once again tell you
202:35 - that uh you need to be careful with this
202:37 - command because it's going to remove all
202:40 - the data of uh this user or otherwise if
202:43 - you type uh you know wrong then it can
202:46 - remove the data from the other user also
202:48 - so be careful with this Command right
202:51 - and press enter once again we will uh
202:54 - list all the users and now this is also
202:57 - removed right so in this way you can
203:00 - remove user using Linux command line
203:03 - terminal hello guys welcome to the next
203:06 - video on Linux command line tutorial for
203:08 - beginners and in this video we will
203:10 - learn about the basics of group
203:13 - management using uh Linux terminal
203:17 - so I'm going to show you a bunch of
203:20 - commands and First Command I'm going to
203:22 - show you is a command called
203:26 - uh groups command and this command will
203:29 - allow you to see which are the groups
203:34 - your current user is connected to so my
203:36 - current user I'm loging logged in with
203:40 - uh this programming knowledge and these
203:42 - are the groups my current user is uh you
203:46 - know connected to okay so these are the
203:49 - groups my current user is a member of
203:52 - right now the next command I'm going to
203:55 - show you is uh to list all the groups
204:00 - which are available on your uh operating
204:02 - system so this command uh is uh CAD so
204:08 - this is a directory called uh Etc and in
204:12 - this Etc directory there is a file
204:15 - called groups and uh all the groups are
204:18 - listed there so we are going to just
204:20 - write Etc and then just write uh group
204:25 - here and then press enter and it's going
204:28 - to show you all the groups which are
204:31 - there on your systems right and uh you
204:35 - can
204:36 - see there is a group called Jenkins and
204:40 - uh the last you can see uh the user
204:44 - which is connected to the group so for
204:47 - example my user is connected to uh this
204:50 - group for example or the user from which
204:54 - I'm logged in is connected to uh LP
204:57 - admin also right so this is the command
205:01 - for listing all the groups available in
205:04 - your Linux operating system right now
205:08 - the next command is to add the new group
205:12 - to this list of groups so these groups
205:14 - are added to this file uh in uh you know
205:19 - uh date wise order so whatever group you
205:23 - will add now it will be added to the
205:26 - bottom of uh this file okay so let's add
205:29 - a group so I'm going to write pseudo and
205:32 - then write a command called group AD so
205:35 - just write group add and then the name
205:40 - of the group so for example I want to
205:42 - add a group called Java here I'm going
205:46 - to to press enter and I'm going to give
205:48 - my password so this Java group will be
205:52 - added to the file in the ETC group okay
205:57 - so just cat uh this once again and you
206:01 - can see this uh group is added to your
206:05 - uh you know group list right in the same
206:09 - way I can add multiple groups for
206:11 - example this time I want to add CPP
206:14 - group and then I want to
206:17 - add python group and for example I want
206:22 - to add H database group right and once
206:27 - again I will see all these group using
206:30 - this cat Etc for/ group command and you
206:34 - can see all these groups are added to
206:37 - your group list right now the next
206:40 - command is to delete these groups how we
206:43 - can delete these groups okay so for
206:47 - example I want to delete the group
206:49 - called CPP then I can just write pseudo
206:53 - for giving the root access and then we
206:56 - are just going to write group Dell for
207:00 - deleting the group and the name of the
207:02 - groups for example CPP okay so press
207:05 - enter and then list the groups again and
207:09 - now you can see this group called CPP is
207:11 - deleted now the next command I'm going
207:13 - to show you here is how you can can
207:16 - assign a user to a particular group so
207:20 - for example I want to assign uh the user
207:24 - for example this user programming
207:26 - knowledge to the database group how can
207:29 - I add uh this user to uh this datab base
207:33 - group so for this also we will write uh
207:37 - pseudo first of all and then just write
207:40 - g
207:42 - p
207:44 - WD right and then write minus a flag for
207:50 - adding the group and minus D flag for
207:53 - removing from the group removing user
207:56 - from the group right first of all we
207:58 - will add the user to the group so minus
208:02 - a flag for adding the user and then the
208:05 - username which you want to add to the
208:07 - group so programming knowledge and then
208:09 - the next is the name of the group you
208:14 - want to add it to so this is the name of
208:17 - the group you want to add and this is
208:19 - the command Okay so Pudo G pass WD minus
208:24 - a for adding the group then the username
208:27 - and then the group name and press enter
208:30 - and then you can see we can see the
208:33 - message adding user this to the group
208:36 - this right and then we can list the
208:38 - group once again and you can see this
208:41 - user is now the member of the database
208:45 - group right
208:47 - now if you want to remove this user you
208:49 - can just write instead of a flag you can
208:53 - use D flag for removing the user from
208:57 - the group and press enter and you can
209:00 - see this message removing user Pro
209:03 - programming Knowledge from group
209:05 - database and we can verify it by just uh
209:09 - you know printing the content of this
209:11 - file again and you can see the user
209:14 - programming knowledge is no longer
209:16 - the member of database group right so in
209:20 - this way you can uh use uh group
209:23 - management and these are some of the
209:25 - command which you can use for group
209:28 - management in your Linux operating
209:31 - system hello guys welcome to the next
209:33 - video on Linux command line tutorial for
209:35 - beginners and in this video we will talk
209:38 - about bashrc file in Linux and how we
209:43 - can use it and what is Bash RC file so
209:47 - first of all what is Bash RC file The
209:51 - Bash RC file is a script that is
209:54 - executed whenever a new terminal session
209:58 - is started in interactive mode right so
210:03 - first of all for example you uh open
210:07 - your terminal and uh just check whether
210:10 - you are in your home directory or Not by
210:13 - default you are already in Home Direct
210:16 - whenever you open your terminal right
210:19 - now in here you can just write LS minus
210:23 - a for uh the listing and you will be
210:27 - able to see there is a file called
210:30 - bashrc and this is the file which is
210:34 - responsible whenever you open a new
210:37 - terminal this file is executed this is a
210:41 - kind of a script which is executed first
210:43 - whenever you open a new terminal session
210:48 - right so let's go inside this bashrc
210:52 - file so you can use Nano to display the
210:57 - content of this bashrc file so just
211:01 - write uh Nano do bashrc and you can go
211:05 - inside this file and you can see the
211:07 - content of this file like this or I'm
211:11 - going to just exit by just pressing
211:13 - control X or you can use the command
211:17 - called gedit so just write G edit and
211:22 - then do bashrc right this is also a kind
211:26 - of guy editor which is used uh as a
211:30 - editor for your you know text file or
211:33 - any other file right so just write gedit
211:37 - and do bashrc and press enter and this
211:40 - is going to open this file in this kind
211:43 - of guy editor right so in some operating
211:48 - system I'm talking about the Linux
211:50 - operating systems this bash RC file is
211:53 - already there and some scripts are
211:55 - already there inside this bash RC file
211:59 - so for example I'm using this ub2
212:01 - operating system and it already have a
212:04 - bash RC file and it already have this
212:07 - kind of script inside this bash RC file
212:11 - right now in some other kind of Linux
212:14 - operating system a few days ago I was
212:17 - using for example Linux Mint it doesn't
212:20 - have this bash RC file right so any way
212:24 - if it exist it's okay and if it doesn't
212:28 - exist you can just create one for you
212:30 - using this get gedit command or n no
212:33 - command it doesn't matter right so now
212:38 - what we were talking is that this script
212:41 - is executed whenever you open a new
212:44 - terminal right so so whatever you add to
212:48 - the script it will be executed first
212:51 - whenever you open a new terminal session
212:53 - right so just go at the end of uh this
212:56 - file and if you create a new. bashrc
212:59 - file it's okay just uh go at the end or
213:03 - if you have a new just write there just
213:06 - write for example Echo and then in
213:09 - double
213:10 - quotes this is a test right so
213:16 - just write this uh command here you
213:19 - already know what is Echo Command right
213:22 - and then just close uh this B RC file
213:26 - okay and now we are going to open a new
213:28 - terminal session and this terminal
213:31 - session I can open from here just uh go
213:34 - to file and then you can just say open
213:38 - tab or you can just uh press control
213:41 - shift T to open the new tab you can see
213:45 - the new tab is open so this is first tab
213:47 - we were in and this is a new tab we have
213:50 - created and as soon as we have created
213:53 - this new tab this text we have written
213:56 - in the bash RC file is uh executed right
214:00 - so this is a test and this was uh we
214:03 - have written a echo command for this
214:06 - right so using this we know that this
214:10 - bash RC file is called first because
214:12 - it's uh executing our Echo command also
214:16 - and then uh your uh you know your uh
214:19 - normal terminal operation you can do
214:21 - right once again we can edit uh the BC
214:25 - content so I'm going to just go to the
214:29 - get it command so get gedit do bashrc
214:33 - and this time instead of echoing
214:35 - something I can uh use some aliases for
214:40 - example right so for example what I can
214:44 - do here is is instead of echoing I can
214:48 - do a LS so just write LS
214:54 - LS is equal to for example we want to do
214:57 - the long listing and the color also so
215:02 - LS
215:04 - minus- color is equal to Auto and then
215:09 - we will say minus uh L also we want to
215:12 - do the long listing also right and I
215:15 - will save the content and I will close
215:18 - this and once again I can just uh close
215:22 - this tab and open the new tab this time
215:25 - I will go here and then click open Tab
215:30 - and now when I do LS and press enter is
215:34 - going to do the long listing with the
215:37 - color options for me
215:39 - right so in this way you can customize
215:42 - your bash RC file uh mostly we use this
215:46 - bash RC file for a number of things for
215:48 - example if you want to set up the
215:51 - environment
215:52 - variables uh whenever for example you
215:55 - install Java you need to set up the Java
215:59 - home environment variable and this can
216:01 - be done using this bash RC file right or
216:05 - whenever you want to use git and the you
216:08 - want to see uh which uh you know
216:11 - repository you have checked in or you
216:13 - have cloned you can write a script for
216:16 - this and then you uh will be able to see
216:20 - in the terminal itself uh which uh you
216:22 - know version or which um you know git
216:26 - script uh G git repository you have
216:29 - right so for this bashrc file is really
216:33 - useful so I hope you understood the
216:36 - basic concept of bashrc file hello guys
216:40 - welcome to the next video on Linux
216:42 - command line tutorial for beginners in
216:44 - this video I'm going to show you a bunch
216:46 - of commands which you can use to view
216:48 - the free resources and use resources in
216:52 - your Linux operating system so let's get
216:55 - started the first command which I'm
216:57 - going to show you is the DF command and
217:01 - this DF command reports the amount of
217:03 - available disk space being used by your
217:07 - file system okay so for example I'm in
217:10 - my home folder right now and here I just
217:14 - give this DF command and uh now it gives
217:18 - me uh this uh kind of output right so I
217:23 - can see uh that my root partition have
217:28 - uh this much amount of used memory and
217:31 - this much amount of available memory but
217:34 - what are these numbers these numbers uh
217:37 - doesn't have any units on it and we
217:41 - cannot you know easily understand what
217:44 - amount of uh you know disk space is
217:47 - being used and what amount of dis space
217:51 - is available so for make it human
217:55 - readable there is a flag with this
217:57 - command so just write DF once again and
218:00 - there is a flag called H here and this
218:04 - stands for human readable right so when
218:08 - you give this uh Dash flag with this DF
218:12 - command and press enter you will be able
218:15 - to see the human readable form of the
218:18 - output so now I can say that 12 GB is
218:23 - used on my system and 5 GB is available
218:28 - and all these are other uh you know uh
218:31 - root systems which I'm not you know
218:34 - bothered about right now right so
218:37 - important is my this one this file uh
218:41 - root file system right so let's see the
218:43 - next command now so I'm going to clear
218:47 - the terminal so the next command I'm
218:50 - going to show you is uh the DU command
218:54 - and this du command is used to estimate
218:57 - and display the disk space used by files
219:01 - okay so for example right now in I'm in
219:03 - my home folder and uh I want to estimate
219:08 - this this space used in uh this uh
219:11 - folder called download so I will just go
219:13 - to the download
219:15 - uh folder so just write download CD
219:19 - download and then I can use this command
219:21 - so just write du and then press enter so
219:25 - it's going to uh you know give you all
219:27 - this output and at the last it's going
219:30 - to give you the amount of space used by
219:33 - this folder right now this is also not
219:38 - very human readable so we can just write
219:42 - du and the flag H for for viewing the
219:47 - human readable uh you know form so just
219:50 - give du minus H and then press enter
219:54 - once again and now I can see that uh
219:56 - this folder is using 416 mbes of uh dis
220:01 - space right I can do the same in my home
220:05 - folder but it has lots and lots of files
220:08 - so these files has to be you know it
220:12 - prints these uh files first and then
220:15 - give gives you the memory dis space
220:18 - usage here right so in my home folder
220:21 - there are lots and lots of files and I
220:24 - just want to see this output not all the
220:28 - output related to files so for that I
220:32 - can use du command and then I can use
220:35 - the S command for summary so this s flag
220:40 - is for summary and then I can also use
220:43 - the H for human reading
220:45 - right so du minus sh and then press
220:49 - enter and then it's going to calculate
220:52 - uh the memory and in few seconds you are
220:54 - going to see all the memory used here so
220:58 - you can see my home directory is using
221:01 - 2.5 GB okay and now uh you can see uh
221:06 - these uh you know warnings kind of
221:09 - things and it says permission denied
221:11 - permission denied and permission denied
221:14 - because it's possible that I don't have
221:17 - permission to access these files right
221:20 - so I can use with this command du minus
221:23 - sh I can use this command with sudo okay
221:27 - and then I can give my password and now
221:31 - it's going to give me the direct output
221:34 - without These Warnings okay so this du
221:39 - command will help you to estimate and
221:41 - display the disk space used by files now
221:44 - the Third third command which I'm going
221:46 - to show you is the free command okay and
221:50 - this free Command displays the total
221:53 - amount of free and used physical and
221:56 - swap memory in the system as well as the
222:00 - buffer used by the kernel okay so we can
222:04 - uh just use uh free here and then press
222:08 - enter and then it's going to give you uh
222:12 - the used space here and then the free
222:15 - space here and the cached space which is
222:19 - uh used by your kernel right but
222:23 - important in your case is uh this line
222:26 - of code which is uh this one and this
222:30 - one so this much amount of uh you know
222:33 - uh memory is used by your system and
222:38 - this is uh the amount of memory which is
222:40 - free in your system but this is also not
222:43 - human readable so there are from some
222:46 - Flags which you can use with this free
222:49 - uh command and these flags are for
222:52 - example minus B for byte minus k for
222:56 - kilobyte minus M for Megabyte minus G
223:00 - for gigabyte and minus Tera for terabyte
223:05 - right so minus ter Tera for terabyte so
223:08 - we are going to just see uh the values
223:11 - in megabyte first and then we are going
223:13 - to see the values in gigabytes okay so
223:16 - minus M for Megabyte with this free
223:19 - space and then when you give this
223:21 - command now I can see in a more better
223:25 - way that around 1.1 GB is used and
223:29 - around 8 GB is you know free and for
223:34 - example I can use G flag and now it
223:38 - gives me uh this um output which is uh
223:43 - one is used and and uh zero is uh you
223:47 - know free because uh it's not taking the
223:52 - in consideration the points decimal
223:55 - points right so it's better to use the M
223:59 - command for Megabyte and you can read it
224:03 - easily here okay so these are some of
224:07 - the command which you can use to view
224:10 - the memory usage in your system Let's uh
224:14 - recap these commands once again so I
224:17 - will uh clear the terminal first of all
224:21 - and the First Command was DF Command
224:24 - right and this DF command was used to
224:29 - report the amount of available disc
224:31 - space being used by your file system
224:34 - right and you can use minus H for with
224:38 - it to uh you know view the human and
224:41 - readable form then the next was the DU
224:44 - command Command right so this du command
224:48 - will help you to estimate and display
224:50 - the disk space used by the files right
224:54 - and with this you can use uh the S flag
224:58 - also to view the summary right and you
225:02 - can use even the folder name after these
225:05 - flags you can for example you want to
225:07 - know the um dis space used by Etc folder
225:11 - you can even give the folder name here
225:16 - after these flags and then it's going to
225:18 - give you the you know disk space used by
225:21 - Etc folder and for these permission
225:24 - denied you can use this du command with
225:27 - pseudo so these warning will not be
225:30 - shown right then we have seen the free
225:32 - Command and this free Command is going
225:36 - to display the total amount of free and
225:39 - used physical and swap memory in the
225:42 - system right and then we can use uh some
225:47 - flags with it for example B for bite and
225:51 - K for kilobyte M for Megabyte G for uh
225:54 - uh gigabyte and Terra for you know
225:58 - terabyte and you can even use uh minus H
226:01 - for human readable form okay so once
226:05 - again I can uh do this and you can see
226:09 - now it gives uh these values in human
226:12 - readable forms and this is 1.1 GB and
226:16 - this is uh 864 megabytes okay so in this
226:21 - way you can view the memory in your
226:25 - system hello guys welcome to the next
226:27 - video on Linux command line tutorial for
226:29 - beginners in this video I'm going to
226:31 - show you how you can use watch command
226:33 - in Linux watch is an excellent command
226:36 - which can run scripts or command at a
226:39 - regular interval or
226:41 - repeatedly so for example I'm going to
226:45 - give you an example which I have taken
226:47 - in the last video and uh you have used
226:49 - this free command to know the resources
226:52 - used in our system right and if you use
226:56 - watch command so any command which you
226:58 - use with watch so I'm going to just
227:01 - write watch before this command then
227:04 - this command will be executed repeatedly
227:08 - if you use watch before uh any Command
227:11 - right so let's uh just press
227:15 - enter and you can see after every 2
227:19 - seconds this command is going to be
227:22 - executed and you can see uh the
227:24 - resources used will be changed after 2
227:27 - second you can see it's changed right so
227:31 - by default uh the command will be
227:33 - executed at an interval of 2 seconds
227:36 - right now if you want to make it faster
227:39 - we can do it just uh press contrl C to
227:44 - come out of this command so just press
227:46 - cons contrl C and you will come out of
227:49 - this command now for example we want to
227:52 - increase the frequency to execute this
227:55 - command you can use the flag n and then
227:59 - the number of seconds which you want to
228:03 - provide so earlier by default it was two
228:06 - for example I want to use 1 second
228:08 - interval so I can just write minus M
228:10 - Space 1 and it's going to be executed at
228:13 - an interval of one 1 second so I'm going
228:16 - to press enter once again and now it's
228:19 - uh you know refreshing at a 1 second
228:23 - interval okay now uh even I can uh you
228:28 - know increase this frequency in points
228:31 - also so what we can do is I'm going to
228:34 - press contrl C once again and instead of
228:37 - 1 second for example I want to uh
228:39 - execute this command at an interval of
228:42 - 4.5 second I can just do it by just
228:45 - writing 05 here and press enter and it's
228:49 - going to be executed at. 5 Second you
228:52 - can see every. 5 Second okay so this is
228:57 - how you can use watch command so you can
228:59 - use uh this watch command with any
229:01 - command or even with the script it's
229:03 - going to execute that script um
229:06 - repeatedly okay so in the last video we
229:10 - have also seen the DF command which is
229:13 - dis free Command right so we can also
229:15 - use uh this disk free Command you can
229:18 - just write DF and then press enter and
229:21 - it's going to uh you know execute this
229:25 - command repeatedly right now nothing is
229:28 - happening here because we are not
229:30 - downloading or uploading anything on our
229:33 - system or from our system for example if
229:36 - you download a big file you will be able
229:38 - to see the used memory and available
229:41 - memory
229:42 - changing so you can use it
229:45 - uh as a you know
229:46 - watch to watch uh what kind of memory is
229:50 - used or you can you know think of any
229:54 - command which can be used repeatedly and
229:56 - you can use uh this command with uh that
230:00 - command or a script okay hey guys
230:03 - welcome to the next video on Linux
230:05 - command line tutorial for beginners and
230:08 - in this video I'm going to show you how
230:09 - we can use head and tail commands in
230:12 - Linux so head and tail commands
230:15 - generally we can use with files and the
230:20 - head and tail are actually doing the
230:23 - opposite of each other so the head
230:26 - command can be used to Output the first
230:30 - part of uh the file and the tail command
230:33 - can be used to Output or print the tail
230:37 - part or last part of the file now
230:41 - generally by default whenever you use
230:43 - head or tail command they will print
230:47 - first 10 lines using head command or
230:51 - last 10 line using tail commands Okay so
230:55 - let's uh see how we can use a head and
230:58 - tail command so what I'm going to use do
231:00 - is I'm going to go to the VAR SL log uh
231:06 - directory of my system where lots and
231:09 - lots of log files are there okay so I'm
231:12 - going to do LS and I can see see so many
231:15 - logs files are there right and I want to
231:19 - use the head and tail command to see uh
231:23 - the content of these files right so for
231:26 - example I will use head command and then
231:29 - for example let's see which file we want
231:31 - to uh see so there will be a file called
231:36 - D message file DM
231:38 - SG and just use head with this file so
231:42 - this is a file and and you can use any
231:46 - uh other log file and uh this head file
231:48 - can be used in many ways but generally
231:51 - it's used with log files and other kind
231:54 - of files right so just write head and
231:57 - the name of the log file you want to see
232:00 - and then press enter and it's going to
232:02 - show you the first 10 lines of this text
232:06 - file okay and the tail command can be
232:10 - used to show the last 10 lines so when I
232:12 - use instead of head I use tail D message
232:17 - and then it's going to show the last 10
232:20 - lines of this D message file okay so let
232:24 - me clear the terminal once again now for
232:28 - example I want to uh change the number
232:32 - of lines I want to see okay so this is
232:36 - also possible so for example I want to
232:38 - see just three uh lines uh using head
232:41 - command so I can use head and then then
232:44 - minus n and the number of line for
232:47 - example three I want to see first three
232:50 - lines and the name of your file so just
232:53 - write D message and press enter and it's
232:57 - going to show the first three lines and
232:59 - same you can do with the tail command so
233:02 - you can just write uh tail and then
233:06 - minus N3 and the name of the file it's
233:09 - going to show you the last three uh
233:11 - lines of the file okay basically you can
233:15 - also use uh this tail or head command
233:18 - like this so just write tail and then
233:21 - minus uh the number of line you want to
233:23 - show you don't even need to use uh the N
233:27 - flag with it so the same output will be
233:30 - there okay so this can be used in this
233:35 - way also now uh the other use of uh this
233:39 - uh head and tail command is using the
233:42 - flag F so I'm going to to once again
233:45 - clear the terminal and what I'm going to
233:48 - do is I'm going to just use the tail
233:51 - command for example and then with minus
233:55 - F
233:56 - flag and then the name of the file for
233:59 - example so I'm going to just uh use this
234:01 - file once again and press enter and what
234:04 - it's doing is it's printing the last end
234:06 - line but it's not you know going out of
234:10 - uh the terminal output right so it's
234:13 - hanging around
234:14 - and it's going to watch for this file
234:17 - and whenever this file changes then this
234:20 - output will also change so it's going to
234:23 - append the last uh line for example and
234:27 - it's going to show you the last 10 lines
234:29 - again okay so this F flag is for follow
234:34 - and it's going to uh show you the last
234:37 - 10 line and uh this uh kind of uh you
234:40 - know tail with f can be used whenever
234:44 - you are doing input and outputting using
234:48 - some uh you know input source or output
234:51 - source using serial or uh you know any
234:54 - other uh you know communication you are
234:58 - doing with your Linux operating system
235:00 - so whenever you want to see the output
235:02 - what's the output uh is on the tail of
235:06 - your file then you can use the app flag
235:10 - so it's going to show you appended lines
235:13 - of code here also okay
235:17 - now one more thing you can do with the
235:21 - head and tail commands is you can use
235:24 - multiple files with head and tail
235:26 - commands so for example I use head and
235:30 - then the name of the file first file I
235:32 - want to use is uh once again this file
235:35 - and the next file I want to use for
235:37 - example I can uh search for this
235:41 - file uh let's say
235:44 - you want to use this Kern log file okay
235:49 - so the first file second file and you
235:52 - can use multiple files to see uh the
235:55 - first 10 lines of these files so I'm
235:59 - going to just press enter and you can
236:02 - see first it has printed the first end
236:04 - line of D message file and then it has
236:07 - printed the 10 lines of uh this kernel
236:11 - log file Okay so this is how also you
236:15 - can use uh this command once again I'm
236:18 - going to clear the clear the terminal
236:22 - and once again I can use this command
236:24 - but with this flag which shows the
236:28 - number of lines and just press enter
236:30 - it's going to show you the first three
236:32 - line from the D message command and the
236:35 - first three line from the kernel log
236:37 - file okay so this is how you can use uh
236:41 - generally the head and tail commands in
236:44 - your Linux operating system I hope you
236:45 - enjoyed this video please R comment
236:47 - subscribe and bye for
236:52 - now hello guys in this video I'm going
236:54 - to show you how we can use find command
236:57 - in Linux now first of all what is find
237:00 - command find command is used to search
237:03 - for files in a directory hierarchy so
237:07 - for example I'm in my home folder I can
237:09 - just use pwt command to know this and uh
237:13 - in this folder I will just use LS to
237:17 - list all the files and the other things
237:20 - here right and for example I want to
237:24 - find some file here which I have made
237:28 - few days ago which I don't know in which
237:30 - folder is it right right now I know that
237:34 - this file is here but for example I
237:37 - don't know uh the file location and I
237:40 - just know that it's in the home folder
237:44 - of my uh you know operating system so I
237:48 - can use find for this so just use find
237:51 - and then the directory in which you want
237:54 - to find right so it can be a root
237:57 - directory it can be uh EC
238:01 - directory or any other directory in
238:03 - which you want to search this file in so
238:07 - right now I want to find this file in my
238:10 - home folder right and then comes the
238:13 - file name so you give the flag name here
238:19 - and then you give the file name which
238:21 - you want to search you can do something
238:23 - like this test.sh for example I want to
238:26 - find this uh file name uh or you can do
238:31 - the wild card with these file names so F
238:35 - first of all Let's uh you know give the
238:37 - full name of the file and press enter
238:40 - it's going to search in all the direct
238:44 - iies and uh all the files in this uh
238:47 - home directory and then it's going to
238:50 - search where is this file located and it
238:52 - has searched and I can see the location
238:55 - of this file in a second example you can
238:59 - use for example you just know that this
239:02 - file is called test but you don't know
239:05 - the extension of it so you can use do
239:08 - estx as of wild card and this means that
239:12 - whatever comes after test dot then it
239:16 - will it is going to search for all those
239:19 - files right so I'm going to press enter
239:22 - and it searched this file again right
239:25 - for example you just want to search for
239:28 - U txt extension the files which have txt
239:33 - extension so you can just give uh this
239:36 - estx do txt and press enter and you see
239:42 - we have seen
239:44 - bunch of uh you know result which have
239:47 - txt extension right you can see this txt
239:52 - ds. TST txt so every result which have a
239:57 - txt extension is going to be uh you know
240:00 - listed here now for example I want to
240:03 - search for this particular file file 1.
240:07 - text so I can do something like this I
240:10 - just want to uh you know write here file
240:14 - and one and I just want to you know just
240:18 - write estri here this means that
240:21 - whatever file name which will start from
240:23 - file one is going to be searched and
240:26 - listed in our result so press enter and
240:29 - you can see all these uh result have the
240:34 - file name file one okay so there is a
240:38 - directory also called file one there are
240:41 - uh you know files also in different
240:44 - directories with the same name so in
240:47 - this way you can search for the file in
240:50 - your uh whatever directory in which you
240:53 - want to search so for example I will
240:56 - clear the terminal for now and uh let's
240:59 - find some more things so for example I
241:02 - want to find uh in the root directory so
241:06 - this is going to start from the root and
241:09 - it's going to search the file everywhere
241:11 - else and uh then I'm going to give the
241:15 - name of the file so I will use this flag
241:18 - name and then I will give the name of
241:21 - the file so uh in the last video we were
241:25 - uh you know talking about the message
241:28 - file so I can give the name of this file
241:31 - uh here and then I can just press enter
241:34 - and it's going to search for this file
241:37 - but there is a problem here right and
241:40 - you may recognize by this permission
241:42 - denied warning that that uh it cannot
241:45 - search for this file because there are
241:48 - some directory which we don't have
241:51 - access to so we can use this uh command
241:55 - with the pseudo in front of it so I'm
241:57 - going to clear the terminal once again
242:00 - and I'm going to just write uh pseudo in
242:02 - front of this find command and then
242:05 - press enter and give my password and
242:08 - then it's going to search for this file
242:10 - so you can see this file is inside VAR
242:13 - for SL log and the file name but there
242:16 - are some other uh directory in which
242:19 - this file is also existing for example
242:22 - in bin folder also and then this uh
242:25 - folder location also and in this F
242:28 - folder location also okay so this is how
242:31 - you can use this find command but there
242:34 - are more things you can do with this
242:37 - find command so for example you have
242:40 - created a file and you just know that
242:43 - you have cre created this file a few
242:45 - days ago but you don't know the name of
242:48 - the file and you don't even know the
242:51 - location of the file so you can use this
242:54 - command called uh fine and then you can
242:57 - use uh the location so just give the
243:00 - location in which you want to uh search
243:03 - in and then give this flag called minus
243:07 - M
243:08 - time and then whatever you uh write
243:12 - after this for example minus one is
243:15 - going to look the files which are
243:17 - created uh one day ago till now okay so
243:22 - this can be Min -2 for 2 days - 3 for 3
243:26 - days and uh this can be plus also so you
243:31 - you you can uh you know know that from
243:34 - this time this will be created or
243:36 - something like this so it it can be a
243:38 - plus or you exactly know that this file
243:41 - is created exactly one day ago so you
243:44 - can give the uh one here instead of
243:48 - minus one okay so just give minus one
243:51 - and press uh enter and it's showing all
243:56 - these uh you know result to us so this
243:59 - is how also you can use this find
244:02 - command hello guys welcome to the next
244:04 - video on Linux command line tutorial for
244:06 - beginners in this video I'm going to
244:08 - show you how you can use WC command in
244:11 - Linux WC command or word count prints a
244:15 - count of new lines words and bytes for
244:20 - each input file so generally you can use
244:23 - WC command with a file and it's going to
244:27 - uh you know give you the number of uh
244:29 - lines in the file or number of words in
244:33 - the file or number of characters in the
244:35 - file so let's see how we can use it so
244:39 - you can see on my desktop I have that
244:41 - this test.txt file so I will just uh
244:45 - change the directory to the desktop and
244:48 - then I'm going to give the WC command
244:51 - here and then the name of the file which
244:53 - is test.txt and I will press enter and
244:58 - you can see it gives this kind of output
245:01 - now the first uh you know output here is
245:05 - one and this is the number of line in
245:08 - this file so I'm going to open this file
245:11 - and you can see there is only one line
245:15 - in this uh text file and this is uh due
245:19 - to this so this is the number of line
245:23 - Second here is six so six is the number
245:26 - of words here so I can count these words
245:30 - 1 2 3 4 5 6 so second is the number of
245:34 - words and then the third is the number
245:38 - of characters here so total number of
245:41 - character in this file is uh 42 that's
245:44 - why it's printing this and four fourth
245:47 - is the name of your file okay so this is
245:51 - the simplest use of uh this file you can
245:54 - use now you can also use for example let
245:58 - me uh increase the number of uh lines
246:01 - here so I'm going to paste for example
246:05 - five lines here right and I'm going to
246:08 - give the same command and you can see it
246:10 - gives right now five lines and then it
246:13 - gives the 30 uh word because uh 6
246:19 - into 6 into 5 is uh 30 and then it gives
246:23 - the 210 characters right so this is
246:27 - basically how you can use it now you can
246:31 - use certain Flags uh in your WC command
246:35 - which will give you specifically what
246:38 - you want so for example you want to
246:41 - print only the number of bytes then you
246:44 - can just write a flag called WC minus C
246:48 - and this is going to print only the
246:51 - number of bytes or essentially the
246:53 - number of characters right and just
246:56 - print and just print the number of uh
246:59 - characters which is 210 here right
247:02 - similarly if you want uh to um you know
247:05 - count the number of lines you can just
247:08 - say minus L and then press press enter
247:13 - and gives you number of lines here right
247:16 - or you can uh use uh the W
247:20 - character or W uh you know flag here and
247:24 - it's going to give you the number of
247:26 - words okay and uh you can also use uh a
247:32 - flag called capital L and this capital L
247:37 - prints the length of the longest line
247:41 - for example I'm going to uh just give uh
247:45 - some more uh words here for
247:48 - example
247:50 - uh
247:51 - words words so this is essentially going
247:55 - to uh give you the length of this line
247:59 - because this is the longest line here
248:01 - right so we can just press enter and you
248:05 - can see it gives the number of uh
248:09 - characters in the longest line which is
248:12 - this one in our case okay so these are
248:15 - the flag you can use with WC command
248:18 - hello guys welcome to the next video on
248:20 - Linux command line tutorial for
248:21 - beginners and in this video we will see
248:23 - how we can use Cal command in Linux Now
248:27 - cal command can be used to display
248:30 - conventionally formatted calendar on
248:33 - your command line so let's see how we
248:36 - can use Cal command so to use Cal
248:39 - command you can just use Cal C A and
248:43 - then press enter and it's going to show
248:45 - you the calendar kind of uh you know
248:49 - output here right and uh the date of
248:52 - making this video is 4th January 2017
248:56 - for example right so this is uh the Cal
249:00 - command which is going to show you the
249:02 - current month and the date and the year
249:05 - okay but there are some Flags which you
249:08 - can use with this scal command so the
249:12 - first flag I'm going to show you you can
249:15 - use with this command is actually it's
249:17 - not a flag but it's uh just a command uh
249:21 - you can just use
249:23 - ncal and then press enter and now you
249:27 - can see uh the output in little bit
249:29 - different format so earlier your uh week
249:33 - days are at the top but right now the
249:36 - week days are on the left hand side
249:39 - right so ncal command can be used toew
249:43 - view the week days on the left and the
249:47 - Cal command can be used to view the week
249:49 - days on the top okay so let me clear
249:54 - this terminal now the next flag which
249:57 - you can use with Cal command is the year
250:02 - so whatever year you want to see uh you
250:05 - can just enter the year number for
250:09 - example I want to see
250:11 - 2016 and then press enter and it's going
250:14 - to show all the months in 2016 year
250:19 - right in the format in form so from
250:21 - January to the December is going to show
250:24 - you all the you know calendar month here
250:28 - okay let me clear the terminal again and
250:33 - now the next command or next flag which
250:36 - you can use with this scal is for
250:39 - example you want to just view some month
250:43 - in a particular year so for example I
250:46 - want to see the February of
250:49 - 2014 for example so I can just give two
250:54 - for February February is the second
250:57 - month of the year if it's uh January you
251:00 - can write one March you can write three
251:02 - so for example for February I'm writing
251:04 - two okay and then the year in which I
251:09 - want to see the month so 2014 for
251:12 - example and press enter
251:13 - and then it's just going to show that
251:16 - month which you have entered here not
251:18 - the whole calendar okay so this is also
251:21 - how you can use the Cal command now for
251:25 - example you can uh you know give the for
251:29 - example Cal minus 3 and it's going to
251:34 - give you the current month previous
251:36 - month and the next month okay so just
251:40 - press enter and you can see the the
251:43 - current month is this one previous month
251:46 - and then the next month and by default
251:49 - the when you give Cal command by default
251:53 - this number is minus1 and when you give
251:56 - this it's going to show you the current
251:58 - current
251:59 - month hello guys welcome to the next
252:01 - video on Linux command line tutorial for
252:03 - beginners and in this video we will see
252:05 - how we can use date command in Linux the
252:08 - date command is used to print out or
252:10 - change the value of system time and date
252:14 - information so the date command is
252:16 - really simple you can just use date and
252:19 - it's going to display you the current
252:22 - date and time okay and when you use uh
252:27 - minus s flag with date so you can just
252:30 - use date minus s and with this minus s
252:35 - after this whatever date and time you
252:39 - will set in string as a string it will
252:43 - be set as a system time which is going
252:46 - to be set here as your system time and
252:49 - you will see that time in your system
252:51 - time okay for example uh I want to set a
252:55 - date something like this for example
252:58 - this date is uh 20th November 2003 12:00
253:04 - 48 minutes uh like this okay so it's
253:08 - going to uh set the date to uh November
253:11 - 20 20 3 12:48 p.m. right so in this way
253:18 - you can set the date but right now I'm
253:20 - not going to give this command because I
253:22 - don't want to change the date of my
253:24 - system but this is the flag you can use
253:27 - to set the date now uh there are some uh
253:31 - other flags which you can use with this
253:33 - date command to format the date in which
253:37 - way you want to see the date for example
253:41 - so I have a little list here
253:43 - I'm going to show you this list and
253:45 - these are the flags you can use with
253:48 - your date command and then you will be
253:52 - able to format your uh you know date so
253:55 - for example I want to display first of
253:58 - all I will write this plus symbol and
254:01 - then this uh modulus symbol and I can
254:05 - see uh here that small H is used for the
254:10 - month in the you know in the character
254:15 - format right so what I'm going to do is
254:19 - first of all I'm going to just use D for
254:22 - date of the month small D then modulus
254:27 - small H for the month
254:30 - abbreviation and then I'm going to use
254:34 - modulus y for year okay like this and
254:40 - then press enter and it shows me the
254:43 - date in this format so today at the time
254:46 - of making this video it's uh 4th January
254:49 - 2017 I can uh do more with this so for
254:53 - example I can uh just make it a string
254:57 - like this and then I can add for example
255:02 - this minus symbol in between the date a
255:07 - month and year it's going to format this
255:10 - date like this or I can
255:14 - do forward slash here instead of this so
255:17 - whatever way you want to show the date
255:19 - it's going to show the date in that
255:21 - format right and these are some of the
255:24 - flags you can use with the date command
255:28 - now
255:30 - uh date command is really you know vast
255:34 - command and you can you do lots and lots
255:36 - of thing with the date command so uh
255:40 - let's see the man page and let's see you
255:42 - know what else you can do with the uh
255:45 - date command so I'm going to just write
255:47 - man date and press enter and you can see
255:52 - there are so many flags for example this
255:55 - minus file for file flag and R for
256:02 - reference and you can see s for setting
256:05 - the time as a string and you can see all
256:08 - these uh you know small formats you you
256:13 - can see are listed here so H is same as
256:18 - B and uh you can see hours or you will
256:24 - be able to see y also for year so you
256:28 - can see here and capital Y for here so
256:34 - just go through this man page and uh you
256:37 - know see how you can use this uh date
256:41 - command because it's a really uh you
256:43 - know vast command and in one video it's
256:49 - will be not possible to You Know cover
256:51 - all the flags uh you know with this date
256:54 - command so I will uh suggest you to read
256:57 - this man page whenever you want to right
257:01 - and uh the last example I'm going to
257:04 - give you the date and time for example
257:07 - so you want to print the date and time
257:10 - you can just do something like this so
257:12 - in the string format itself you can just
257:16 - uh write this so just don't forget to
257:19 - add this plus before uh your uh date
257:23 - format and then you can add a string any
257:26 - string and these uh you know Flags
257:29 - modulus M or H or hour or um you know
257:34 - capital M for minute capital S for
257:37 - seconds and then when you give this
257:39 - command you can see it prints the date
257:42 - first and then the time okay so in this
257:46 - way you can use the date
257:48 - command hello guys welcome to the next
257:51 - video on Linux command line tutorial for
257:53 - beginners in this video we will see how
257:55 - to run two or more terminal commands at
257:58 - once in Linux so till now we have seen
258:02 - how we can uh you know use commands but
258:05 - we haven't seen how we can combine two
258:07 - commands and run them together and this
258:10 - is what we are going to see in this
258:12 - video so there are few options we can
258:15 - use to combine commands so the First
258:18 - Command or the first option which we can
258:21 - use to combine command is
258:24 - semicolon and uh I'm going to tell you
258:26 - how this works so whenever you want to
258:30 - combine command for example I want to
258:32 - use LS command and I also want to know
258:36 - uh the present working directory so I'm
258:38 - going to use PWD command and in between
258:41 - I have used this uh semicolon right and
258:44 - this is going to combine these commands
258:48 - and then it's going to show us the
258:50 - output right and I'm going to just press
258:53 - enter and this is what the output is so
258:57 - first of all it has uh you know given us
259:00 - the output for the ls command which is
259:03 - this output and then it has executed the
259:06 - PWD command which is this output right
259:10 - so this is the output from the PW D
259:13 - command and this is the output from the
259:16 - you know LS command so in this way you
259:19 - can you know combine these command using
259:22 - semicolon right we can also execute some
259:26 - uh other commands for example in the
259:28 - last videos I have shown you how to use
259:30 - date command and Cal command and uh
259:34 - let's say we also you want to use uh PWD
259:38 - this time also right so I'm going to
259:41 - just press enter and now it shows the
259:44 - first of all the
259:45 - date with this command then the calendar
259:50 - which is by this command and then the
259:52 - present working direct directory which
259:54 - is by this Command right now one thing
259:58 - to note here is whenever you use a
260:01 - semicolon then for example one command
260:04 - is wrong so what I'm going to do first
260:07 - is for example I want to give this
260:09 - command Cal which is uh not exist exting
260:13 - so it's going to give us this kind of
260:15 - output right so let's use this scale in
260:20 - between here so instead of smaller uh
260:23 - letter Cal I'm going to just use Cal in
260:26 - capital letters and I'm going to press
260:28 - enter here so you can see what happened
260:31 - here so first command is executed which
260:34 - is going to give this output for us
260:36 - second command doesn't really exist so
260:39 - it's going to give us the error but it's
260:42 - also going to go to the next command and
260:45 - it's going to print the next uh command
260:48 - output which is the present working
260:50 - directory right so this command doesn't
260:53 - stop executing command if one command
260:57 - fails right so it's going to execute the
260:59 - next command if uh the command in
261:01 - between also fails right so this is the
261:04 - specialty of uh this command so I'm
261:07 - going to just clear the terminal and
261:09 - then I'm going to talk about the second
261:11 - command the second command to combine uh
261:15 - few commands together is using these ENT
261:20 - symbol double M ENT symbols right and
261:24 - this is essentially is going to do the
261:26 - same so for example I want to do LS once
261:29 - again and then double ment uh I want to
261:33 - do pwt and then once again double MERS
261:37 - then I want to uh see the date so I'm
261:40 - going to give the date and for example I
261:43 - want to see the calendar also so I'm
261:45 - going to give the Cal command and press
261:48 - enter so it gives the same output so the
261:52 - output first will be the ls and then the
261:56 - present working directory then the
261:58 - output for the date and then the output
262:01 - for the calendar right now one thing to
262:05 - note here in both these combining
262:08 - command with semicolon and these ENT is
262:11 - the sequence uh matters here so for
262:14 - example when I use uh date semicolon Cal
262:20 - here then first date will be executed
262:24 - and then calendar will be executed so
262:27 - this sequence matter so for example when
262:29 - you do Cal and then date then it's going
262:32 - to show the calendar first and then the
262:35 - date okay and same is with the ment also
262:40 - so instead of uh this semicolon when you
262:43 - use ENT is going to show us the calendar
262:47 - first and then the date and when we use
262:49 - date m% Cal then it's going to give us
262:54 - the you know this date first and then
262:57 - the calendar okay but what is the
262:59 - difference between these two commands so
263:01 - let me clear the terminal and then I'm
263:04 - going to show show you what is the
263:06 - difference between these two commands
263:08 - Okay so the difference between these two
263:11 - command is when ever you use uh this
263:14 - semicolon is going to
263:16 - run every command regardless of the
263:19 - success or failure of uh the previous
263:22 - Command right so we have already seen
263:25 - for example we give the wrong command
263:28 - which doesn't really exist for example
263:32 - Cal here and then
263:34 - semicolon date then First Command fails
263:38 - here but second execute so it doesn't
263:41 - matter if First Command is failed or the
263:44 - command in between fail it's going to
263:46 - execute all the command there right but
263:50 - when you use the same thing with
263:54 - ment then whenever you know previous
263:58 - command fails then it's going to stop
264:01 - executing the next command so when we
264:03 - use this you see it just give the output
264:06 - that this command doesn't exist and it
264:09 - doesn't go to the next command which is
264:12 - date right we can uh once again check
264:15 - this by writing PWD and personent for
264:19 - example once again uh Capital date here
264:23 - and then ment Cal here right so it uh
264:28 - shows us the output for the PWD and then
264:31 - the next command doesn't really exist so
264:33 - it's you know gives the output command
264:35 - doesn't exist and then it doesn't
264:38 - execute the next command after the error
264:41 - but with the semicolon it's going to
264:44 - execute every command regardless uh the
264:47 - previous command is failed or succeeded
264:49 - okay so this is the difference between
264:51 - these two command now we are going to
264:53 - see the next option which is the r
264:56 - option right so or you can use using
265:01 - these uh double pipes here and uh this
265:05 - is how you can use it so for example you
265:08 - use LS and then you use or for example
265:13 - with these pipes and then PWD and then
265:16 - press enter and then what you see as an
265:20 - output here is the output is the
265:24 - combination of logical R here so if the
265:27 - first command is successful it's not
265:29 - going to go to the second Command right
265:32 - and then when the same command I do with
265:36 - for example LS Capital LS and press
265:39 - enter then it's going to to show you the
265:43 - output for the second Command right so
265:46 - once the first command is not successful
265:49 - the or will allow uh this uh you know
265:53 - these commands to go to the next command
265:55 - and it's going to execute the next
265:57 - command so it's like a logical or
265:59 - operation so if the first uh uh command
266:02 - execution fails then it's going to go to
266:04 - the next command right so this is how
266:07 - you can combine commands in Linux so
266:11 - what we have learned so for example what
266:14 - we have learned is for example we have
266:16 - two command A and B then whenever we use
266:21 - semicolon then run a and then B
266:25 - regardless of the success or failure of
266:28 - a right so A and B are going to run
266:32 - regardless a fails or not right and we
266:36 - have also seen the ENT and in this case
266:39 - if a fails then B is not going to
266:41 - execute
266:42 - right now third is the r operator and in
266:47 - this case b is only going to be executed
266:51 - if a fails right if a succeeds then B
266:54 - will not be executed so these are the
266:57 - few options you can use to combine
267:00 - command hello guys welcome to the next
267:02 - video on Linux command line tutorial for
267:04 - beginners and in this video I'm going to
267:06 - show you how we can use apt get command
267:09 - to install packages or remove packages
267:12 - or manage packages uh on your Debian
267:16 - based Linux operating system so as you
267:19 - all know that obuntu is a Debian based
267:22 - operating system and in most of the
267:24 - Debian based operating system you can
267:27 - use apt minus G command to do uh you
267:32 - know most of the things related with
267:34 - installing packages or removing packages
267:37 - or updating the package manager which
267:39 - are you know there on your system right
267:43 - so first of all what is appg appg is a
267:46 - command line tool for working with ap
267:48 - software packages and uh what's uh the
267:52 - full form of AP AP is the advanced
267:56 - packaging tool which are available for
267:59 - the Debian based operating system right
268:02 - now if you are using for example uh the
268:07 - red head based operating system for
268:09 - example Fedora or sentos you can use yum
268:14 - or I think there is one more command uh
268:17 - called dnf command instead of Apt get
268:21 - right so for all Dean based operating
268:24 - system you can use apt get so just use
268:27 - apt get and uh because you may you need
268:33 - to have super user privileges for using
268:36 - this appg command because you are
268:37 - installing it on your system you just
268:40 - need to use uh Pudo before your appet
268:44 - command now there are uh you know bunch
268:47 - of command which you can use with appg
268:51 - and first is the command called update
268:54 - okay so appg update and what this
268:57 - command is going to do is it's going to
269:00 - resynchronize your local package file uh
269:04 - you know as compared to the remote uh
269:08 - you know server so it's going to
269:09 - resynchronize your local index package
269:12 - files okay and this package files are uh
269:16 - you know uh saved in a file called Etc
269:20 - slapp for/ sources.list so I'm going to
269:24 - show you this file once I perform this
269:27 - command so just press enter here and
269:29 - give your password and then once again
269:32 - press enter and it's going to update all
269:35 - the packages from the remote repository
269:39 - so you can see it's uh you know updating
269:42 - uh all the packages from the remote uh
269:45 - repository and it's going to take few
269:48 - seconds I think and then all the package
269:51 - will be updated okay now as I told you
269:55 - you can see this file for example I can
269:58 - do Nano for this and then
270:03 - Etc and then
270:05 - apt and then uh sources I
270:09 - think sources do list okay and then
270:14 - press enter and you can see there is
270:16 - this file and in this file all the
270:20 - repositories uh where you can find these
270:22 - repositories and uh you know this list
270:25 - of packages are there okay so you can
270:28 - update this package manually also but um
270:32 - you know most of the time when you are
270:33 - new you don't want to change this file
270:37 - it's going to be changed uh
270:39 - automatically by this update Command
270:41 - right but whenever you are a more
270:44 - experienced uh Linux user uh you can
270:47 - change it uh if you know what you are
270:49 - doing okay so for now I'm going to just
270:52 - give uh control X command to exit out of
270:54 - uh this file but these all packages are
270:58 - stored uh in this file okay so now you
271:01 - know where they are stored okay so I'm
271:03 - going to just clear the terminal now for
271:07 - example I want to install uh some
271:09 - software so how you can install it so
271:12 - for example I want to
271:15 - install software called Java but I need
271:19 - to know whether it's there on my system
271:22 - or not so I can just uh give this
271:24 - command Java minus uh version and then
271:28 - press enter and it's going to give me
271:30 - the version of java so it gives me uh
271:33 - you know Java
271:36 - 1.7.0 so I know that Java is already
271:39 - installed so I don't need to install it
271:41 - so let's try once again for example I
271:44 - know that PHP 5 is not installed on my
271:48 - Sy system so I can use once again um PHP
271:53 - minus version and uh now it says uh the
271:57 - program PHP 5 is currently not installed
272:00 - you can install uh it by typing pseudo
272:04 - at installed php5 CLI Command right so
272:09 - if the package or the software is not
272:12 - installed sometimes it's also going to
272:14 - give you the hint whatever command you
272:17 - can use to install this software for
272:19 - example it's uh giving us the hint that
272:22 - you can use this command to install PHP
272:25 - 5 but it's not always correct maybe you
272:29 - want the different version of uh the PHP
272:32 - or for example you want only the php5
272:36 - not the CLI CLI stand for command line
272:40 - interface right so to install a software
272:44 - you do the same so you just write P sudo
272:47 - appt minus get
272:51 - install and then for example PHP 5 which
272:54 - is the software I want to install right
272:57 - and then press enter and you notice that
272:59 - it doesn't uh require my password this
273:02 - time because I already have given this
273:04 - password earlier right now what this
273:07 - command is going to do is it's going to
273:09 - first of all uh uh recognize that
273:13 - whatever uh extra software or
273:16 - dependencies uh this PHP 5 software
273:18 - requires and it's going to make a list
273:21 - of all the you know dependencies and
273:23 - software this PHP software requires and
273:26 - and then it's going to show you this
273:28 - list and it's also going to show you uh
273:32 - the amount of uh you know space it's
273:34 - going to take on your computer so for
273:37 - example this PHP 5 is going to take 25
273:41 - uh .7 megabyte of memory on my system
273:45 - and then it's going to ask you whether
273:47 - you want to install it this much amount
273:50 - of memory will be taken so if you want
273:51 - to install it you can just say y it can
273:55 - be small y or capital Y and then press
273:59 - enter and it's going to start installing
274:02 - this software now it can take uh you
274:05 - know few seconds to few minute to
274:08 - install a particular package depending
274:10 - upon the size of this package and your
274:13 - internet uh you know availability so
274:16 - just uh let it install and then once uh
274:20 - it will be installed we can uh see how
274:23 - we can remove it okay so once uh this
274:25 - package or software is is installed for
274:28 - example I installed PHP 5 I can uh now
274:31 - know the version of it so I can uh just
274:34 - give the clear command and then once
274:36 - again I'm going to give this uh PHP 5
274:38 - version and now it's uh giving me
274:41 - different errors which says PHP passs
274:44 - error so because now PHP 5 is installed
274:48 - on my system php5 takes a file um name
274:52 - with it for example
274:54 - PHP 5 and the file name right something
274:58 - like this and uh now because the PHP 5
275:01 - is installed here to know the version
275:04 - you can just use uh instead of PHP 5
275:08 - minus version you just need to write PHP
275:11 - if I minus V and then press enter and
275:14 - it's going to show you the version of it
275:16 - so now I know that this version of PHP
275:18 - is installed on my system now for
275:21 - example sometimes you want to remove a
275:23 - software from a system and for this you
275:26 - can use once again Pudo appg install so
275:30 - you can use Pudo appg but instead of
275:32 - install you can use remove command with
275:35 - this okay so just use remove with this
275:40 - appg command and it's going to uh you
275:43 - know remove the software from the system
275:47 - but keep in mind it's not going to uh
275:49 - remove all the configuration from your
275:52 - system it's just going to remove this
275:53 - software so if you remember whenever we
275:56 - have installed uh this software using
275:59 - appat installed it has uh you know also
276:03 - downloaded and installed some bunch of
276:05 - dependency of uh this uh PHP 5 uh
276:09 - software for example a and different
276:12 - kind of libraries right now this command
276:16 - is only going to remove this it's not
276:18 - going to remove the configurations or
276:20 - any other thing which is dependent on uh
276:23 - this uh PHP 5 so just give this
276:26 - command and then it's going to just say
276:29 - that it's going to be removed and then
276:32 - just press Y and press enter and
276:35 - sometimes it's going to be removed this
276:37 - uh you know software now if you don't if
276:41 - you want to to uh you know remove the
276:43 - configuration files also for this PHP
276:46 - you can just use uh The Purge flag with
276:50 - this so just write the p g here for
276:55 - Purge so sudo app get remove minus minus
277:00 - PGE and then this command PHP 5 and what
277:04 - it's going to do is it's going to remove
277:07 - all the configuration file uh related to
277:10 - this PHP file
277:12 - okay now uh sometimes you also want to
277:17 - remove some of the libraries or some of
277:20 - the uh you know softwares which are not
277:23 - used by their uh you know initial parent
277:27 - softwares right and for this you can use
277:30 - a command called uh Pudo apt get Auto
277:35 - remove okay so Auto
277:39 - remove and uh this Auto remove command
277:42 - is used to remove packages that were
277:44 - automatically installed to satisfy the
277:47 - dependency for the other packages and
277:50 - are now no longer needed okay so once
277:54 - you give this
277:55 - command you will uh see uh you know once
277:59 - again uh this uh these bunch of uh you
278:02 - know libraries which are which are now
278:05 - going to be uninstalled so if you
278:08 - remember when we have installed PHP 5
278:11 - with this this uh this Apache uh you
278:13 - know software also comes this lib files
278:18 - or libraries also came with uh this PHP
278:21 - so now because we have uninstalled PHP
278:24 - these uh you know packages are also not
278:26 - installed uh you know required so you
278:29 - can uninstall them but always carefully
278:33 - uh read this list sometimes you uh you
278:36 - know end up uh uninstalling the software
278:39 - which you don't even uh want to remove
278:42 - it right but for now I know that yeah
278:45 - it's safe to remove all these things so
278:48 - I can just give Y and then press enter
278:50 - and it's going to remove all the
278:52 - unrequired
278:54 - packages which are not required by the
278:58 - you know their dependencies
279:00 - right so in this way you can use uh this
279:04 - apt get command for installing removing
279:07 - or uh you know removing the dependencies
279:10 - and you know there are lots and lots of
279:14 - flag which you can use with this app get
279:16 - command but this is the you know most
279:18 - frequently used command with this
279:22 - appk hello guys welcome to the next
279:24 - video on Linux command line tutorial for
279:26 - beginners and in this video we will see
279:28 - how we can use if config command in
279:31 - Linux so first of all what is if config
279:35 - command if config stands for interface
279:38 - configuration and it is used to view and
279:41 - change change the configuration of
279:42 - network interface on your system so to
279:46 - use if config you just need to write if
279:49 - config here and that's it and then when
279:53 - you press enter here it's going to show
279:55 - you some output now this first option
280:00 - here suggest that I am connected to a
280:05 - wired you know cable Ethernet cable so
280:10 - you can see when I go here on my open
280:12 - operating system it says wired connected
280:16 - right so if you see here
280:20 - e0 then it's wired connected right if
280:24 - you see here uh for example W
280:28 - l0 then you are wireless connected right
280:33 - so there can be two options here ETS Z
280:37 - or W l0 and that means uh if you are
280:41 - connected through wire then you will see
280:44 - etth Z and then if you see W lens Z then
280:48 - you are connected to the wireless
280:51 - connection right now
280:53 - eth0 is the first ethernet interface
280:57 - additional ethernet interfaces would be
281:01 - named as eth1 or
281:04 - eth2 so there can be multiple uh you
281:07 - know ethernet interfaces uh depending
281:10 - upon the machine you are using for
281:13 - example if you have the machine which
281:16 - have multiple ethernet interfaces it's
281:18 - going to show you uh eth 1 here with
281:22 - eth0 and eth 2 depending upon the you
281:26 - know ethernet interfaces on your Linux
281:29 - operating system but by default uh e
281:33 - eth0 will be your main ethernet
281:36 - interface right now what is this l0 or
281:42 - L this Lo is a loop back interface and
281:47 - this is a special network interface that
281:50 - the system uses to communicate with
281:53 - itself so for now we are not really much
281:57 - concerned about this output but uh just
282:01 - remember that this is for the wired
282:03 - connection right now in here you will uh
282:06 - see some outputs so you can see the link
282:12 - here is the
282:14 - ethernet now second is the hardware
282:17 - address and this is the MAC address of
282:19 - your um computer then here you will see
282:24 - the local IP address of your uh computer
282:28 - and then you have the broadcast uh IP
282:32 - address which is same as the great
282:34 - gateway address I think and there is the
282:38 - mask IP address also okay so this is the
282:42 - MAC address which you cannot change and
282:44 - every uh I think machine have unique Mac
282:48 - address ideally and this is the Lan
282:52 - address so local area network address
282:55 - it's not the uh W van address it's a
283:00 - local area uh you know Network address
283:02 - right now this which you are seeing here
283:07 - is the IPv6 address now there are two
283:11 - kind of uh you know IP addresses ipv4
283:15 - which is a standard and widely used
283:18 - address which is this kind of uh address
283:22 - and IPv6 which is also a standard and uh
283:26 - it's gaining popularity but uh till now
283:30 - this ipv4 is more popular than IPv6
283:34 - right so this is your IPv6 address now
283:38 - uh you can see uh the RX packet and TX
283:43 - packet these are the received packet and
283:46 - transmitted packet at the time of uh the
283:49 - execution of this Command right and zero
283:53 - error and uh you know zero drop overruns
283:57 - is zero so that means your internet is
283:59 - working properly right now if you have
284:04 - multiple uh ethernet interfaces or W Lan
284:09 - interfaces then uh for for example you
284:11 - want to see only one uh interface you
284:14 - can uh do something like this for that
284:17 - so if config and then the name of the
284:20 - interface for example you want to see
284:22 - the eth0 interface it can be eth1 also
284:27 - if you have two ethernet interfaces and
284:30 - it can be ets2 also if you have three
284:32 - ethernet interfaces right so for now we
284:35 - only have one ethernet interace which is
284:38 - eth0 so just give I F config and then
284:42 - the name of your interface and it's just
284:44 - going to show you the information about
284:47 - that interface and no extra information
284:50 - will be shown like this loop back
284:53 - information will not be shown to you
284:55 - okay so give the name of the interface
284:58 - before this if config and it's going to
285:01 - show you the you know information about
285:03 - that
285:04 - interface now uh there are two uh other
285:07 - command I want to talk about here is uh
285:11 - the up command command and the down
285:14 - command okay so let me clear the
285:17 - terminal now when you use for example I
285:20 - have eth0 interface right so when I
285:24 - write if uh config here and then
285:30 - eth0 and with that if I use uh up
285:34 - command or down command then it's going
285:37 - to enable or disable my internet
285:41 - connection right so for example right
285:44 - now I'm connected to Internet I can see
285:47 - that uh the wide connection is there
285:50 - right and I want to uh you know disable
285:53 - my internet connection so I can just
285:56 - write the if config command and the name
285:59 - of the interface I know that my
286:01 - interface name is eth0 which we have
286:03 - seen from uh this command and then uh
286:08 - you can use down command with with that
286:11 - and now I'm going to press enter here
286:14 - and it says uh the permission denied so
286:18 - you need to use this command with Pudo
286:22 - which is going to uh give you the super
286:24 - user privileges so just use sud sudo if
286:27 - config your interface name and down and
286:30 - then press enter and give your password
286:33 - and as as soon as you do this your
286:36 - internet connection will be down okay so
286:39 - you can see I can see this uh message
286:42 - now disconnected you are not offline
286:45 - right now to make my internet connection
286:49 - uh once again up I can just use instead
286:53 - of down I can use up command with this
286:56 - and then press enter and then once again
286:58 - I'm going to give my password here and
287:02 - then press enter and then this is going
287:04 - to uh you know once again reconnect to
287:08 - my network you can see connected right
287:10 - right so these are the two important
287:13 - Flags or these are the two important
287:16 - commands you can use with uh this if
287:19 - config command but there are many flags
287:22 - and many commands you can use with uh
287:26 - this um if config so just do man and if
287:31 - config and see what are the options
287:33 - available and just play with these
287:36 - command there are so many command which
287:38 - I cannot cover in one video but I I just
287:41 - wanted to give you this information that
287:43 - this command exist and how to use it
287:47 - hello guys welcome to the next video on
287:48 - Linux command line tutorial for
287:50 - beginners and in this video I'm going to
287:52 - show you how we can use tar command in
287:54 - Linux tar command is used to create
287:57 - maintain modify and extract files which
288:00 - are archived in the tar format now tar
288:03 - stands for tape archive and it's it's an
288:07 - archiving file format just like zip file
288:11 - okay so let's see how we can use tar
288:14 - file so for using tar file you just need
288:17 - to type t for the tar format and then
288:23 - you use some flags with the tar file so
288:26 - for example you just use C for creating
288:31 - an archive then you can use v v stands
288:36 - for verbos which is used to display the
288:39 - progress in the terminal while creating
288:41 - the archive file okay and then you use f
288:45 - flag to allow you to specify the file
288:48 - name if you don't specify this F flag
288:52 - then uh you know your Linux system is
288:54 - going to uh create a zip file which is
288:57 - going to be system dependent and its
289:00 - name is not defined by you right so
289:04 - let's see how we can use this so you can
289:07 - see on my desktop there is a folder
289:10 - called test right so to make it a tar
289:14 - file or to compress it first of all I
289:17 - will go to the desktop folder and then
289:22 - you can see I have this test folder
289:24 - right now for compressing uh this test
289:27 - folder using tar I can use tar as I told
289:31 - you then
289:33 - cvf flags and then the name of your uh
289:38 - tar file whichever you want to give so
289:41 - for example
289:43 - test. T and then the name of your folder
289:47 - which you want to compress which is test
289:50 - right and then when you press enter you
289:53 - can see it has first showed the progress
289:56 - of compressing and then once this
289:58 - command is done a tar file is created
290:02 - which is shown here right on Ubuntu if
290:06 - you using Ubuntu you can just double
290:08 - click on the star file and is going to
290:11 - show you this kind of uh you know folder
290:14 - extractor this is a GUI program which
290:17 - you also can use but most of the time we
290:21 - must uh use or we I recommend you to use
290:24 - the Star Command to compress the file
290:27 - right now once again if I want to
290:30 - uncompress uh this uh folder once again
290:33 - what I can do I can once again write the
290:38 - command and then for uncompressing or
290:42 - extracting we use a different flag than
290:47 - this uh C right C is for creating the
290:51 - tar file and then for extracting the tar
290:54 - file we can use minus X for extracting
290:59 - okay and then V and F flag will be the
291:03 - same and then the name of your tar file
291:06 - okay and what I'm going to do is I'm
291:08 - going to remove this test folder
291:11 - so that once this tar file will be
291:16 - extracted it's going to you know create
291:19 - or it's going to extract this folder
291:21 - again okay so tar and then xvf and the
291:26 - name of your tar file which is test. tar
291:29 - in my case and then press enter and then
291:32 - you will see this test folder is
291:35 - extracted from this star file right now
291:39 - sometimes you also use the JZ format
291:43 - which is tar.gz and this gz stands for
291:48 - gzip format okay and for this we use a
291:53 - flag called Zed so let me clear the
291:56 - terminal here and once again I want to
292:00 - uh you know compress this uh test folder
292:03 - or directory to a tar.gz file so what
292:08 - I'm going to do is once again I'm I'm
292:10 - going to use star and then minus C for
292:14 - creating VF for veros and uh for
292:18 - allowing the file name and then you use
292:22 - Zed flag to uh you know create the gz
292:26 - format for you okay and then the name of
292:30 - your uh tar file so
292:33 - tar
292:35 - Dogz and then your folder name whatever
292:39 - is the folder okay but you need to
292:42 - remember one thing here that just this
292:45 - Zed flag must come after your C flag
292:50 - okay so C zvf okay and then press enter
292:56 - and it's going to create your tar.gz
292:58 - file right and similarly to extract this
293:02 - folder I'm going to delete this uh
293:04 - folder or directory once again and then
293:07 - I'm going to just use star and then
293:10 - instead of uh this uh C flag I'm going
293:13 - to use x for extracting and then I'm
293:17 - going to just give this command which is
293:19 - uh gz file name okay and press enter and
293:23 - it's going to extract the file and show
293:25 - it here right so in this way you can use
293:29 - a tar command to compress and uncompress
293:33 - folders or directories in Linux hello
293:37 - guys welcome to the next video on Linux
293:39 - command line tutorial for beginners in
293:41 - this video we will learn how to use grab
293:44 - command in
293:45 - Linux grab stands for Global regular
293:49 - expression print now gra grab command
293:52 - processes text line by line and print
293:56 - any line which matches a specified
293:59 - pattern so grab command can be used to
294:02 - search some kind of a pattern or word or
294:06 - sentence in a text file or number of
294:09 - text file
294:10 - using this grab command and some options
294:13 - with grab command so let's see how we
294:16 - can use grab command so first of all I
294:19 - need to have for example some file to
294:22 - use this grab command so I'm going to
294:25 - just change my directory to desktop
294:28 - first of all and then here I'm going to
294:32 - create a file for example what I'm going
294:34 - to do is I'm going to use man and I'm
294:38 - going to use tar and I'm going to dump
294:41 - the man page of tar to a file for
294:45 - example I'm going to name it as file.
294:48 - txt okay and then press enter which is
294:52 - going to create a file you can see this
294:54 - file is created and when I'm going to
294:57 - open this file it's going to show this
294:59 - kind of uh man command output for the
295:03 - tar right
295:05 - now I can use grab command on this file
295:09 - so I'm going to click clear the terminal
295:11 - first of all and
295:13 - then let's open this file and let's see
295:16 - what we want to search for example so
295:19 - for example I want to search for this
295:22 - word in this file called options right
295:25 - so I I can use this command
295:28 - grab and then the pattern which I want
295:33 - to search for for example I want to
295:36 - search for options right so I will just
295:39 - write options here and then the name of
295:42 - the file in which I want to search my
295:45 - pattern in okay so grab and then the
295:49 - word I want to search and then the file
295:53 - name and then press enter and you can
295:55 - see it has searched the
295:58 - line which are containing the options
296:02 - keyword right and when I open uh this
296:06 - file again it's going to show us so you
296:09 - can see this line line is containing the
296:12 - options so this lines has this path name
296:15 - also so you can see this line is printed
296:19 - and then let's search here in this gedit
296:23 - editor also and you can see this line
296:25 - also contain two uh option keyword which
296:29 - is this line right and then we will go
296:32 - down you can see the options with the
296:36 - capital letter is not search because
296:39 - this grab command is case sensitive by
296:41 - default but we can use a flag called I
296:46 - to make it case insensitive and we are
296:49 - going to see in the next command but
296:52 - this will not be searched because the
296:56 - grab command is case sensitive right we
296:59 - will go a little bit down and hopefully
297:03 - we will see the next options Line This
297:07 - is the next options line which is this
297:09 - one right so all the line containing
297:12 - options keyword is searched and printed
297:16 - right now I was talking about the case
297:19 - sensitive uh option right so to make the
297:25 - graph command to look for case
297:29 - insensitive word also so capital or
297:31 - small doesn't matter you can use I flag
297:34 - with it okay so if you use I flag then
297:38 - it's going to search for capital or
297:41 - small letter words and when I print
297:45 - enter you can see it search for small
297:48 - letter options uh line also and you can
297:51 - see it searches for the capital letter
297:54 - options keyword also right now for
297:58 - example I want to print the line number
298:01 - in which this uh result is appearing so
298:05 - I want to print the first of all line
298:08 - number and then the result so I can use
298:11 - the option called uh for example n n is
298:16 - for printing the line number right I can
298:19 - just remove this I which is for case
298:22 - insensitiveness right and when I print
298:25 - enter you can see on the line nine I
298:28 - have this option then 17 and then
298:33 - 348 so I can prove this by just seeing
298:37 - this so you can see this is line 9 you
298:40 - can see here line 9 column uh 29 right
298:45 - and then next is 17 here you can see
298:48 - line number right so it's showing the
298:51 - correct result to
298:53 - us now next is uh the flag we can use to
298:59 - for example we can use multiple uh you
299:03 - know keyword here also so it doesn't uh
299:07 - uh you know it's not necessary that the
299:10 - this has to be a word it can be a
299:12 - sentence also right so for example I
299:15 - will do it once again and this time
299:18 - instead of options I will just see in
299:22 - the text what I want to search for
299:24 - example so I want to uh search for some
299:27 - options line okay not the keyword option
299:31 - but uh this sentence for example some
299:34 - options and instead of options I will
299:37 - just give this keyword called some
299:40 - option so some options and then press
299:44 - enter and it just shows the line which
299:47 - contains this pattern which is some
299:50 - options so once again the line number is
299:53 - 17 as we know it search for this line
299:58 - only okay so this is also you can use uh
300:03 - you know uh grab command now you can
300:06 - also use grab command with with multiple
300:09 - files so let me clear the terminal and
300:13 - let me copy uh this file into different
300:16 - files so for example file uh
300:20 - 2 and then I'm going to create file
300:24 - three also for example and then file
300:27 - four
300:28 - also okay and then I want to search in
300:32 - these all four files uh something so
300:35 - let's search for uh this uh same option
300:39 - in in different files so you can use the
300:43 - same command grab and minus n for line
300:46 - number and then your pattern or sentence
300:48 - whatever you want to search and then the
300:50 - file name so it can be first file name
300:53 - and then file two for example and then
300:58 - file three if you want to search in file
301:00 - three and also file four if you want to
301:02 - search in file four and then press enter
301:05 - and now you can see it's giving the name
301:08 - of the file first and then the line
301:11 - number so
301:12 - file.txt contains this uh pattern then
301:16 - file 2.txt contains this pattern on this
301:20 - line then file three contains this on
301:23 - this line and then file four also
301:25 - contains on this uh uh you know this
301:28 - pattern on this line right now this
301:32 - command you have to type all the file
301:35 - names right this can be made simpler
301:38 - with uh wild card so instead of writing
301:42 - this when you use ASX it means all the
301:46 - files in this folder right so it means
301:49 - uh file one file two file three and file
301:52 - four because these are the file which
301:54 - are there in the desktop folder so this
301:56 - srix means that it's a wild card and it
302:01 - means that it's going to search for all
302:03 - the files and press enter and it's going
302:05 - to uh search or give the same result to
302:10 - you
302:11 - okay now sometimes you want to search
302:16 - for the lines for example in the inverse
302:20 - manner so just search for the lines
302:23 - which doesn't contain this pattern for
302:26 - example right so you can use a flag let
302:29 - me clear the terminal first of all and
302:31 - once again use a graph command and then
302:36 - whenever you use this V flag it means
302:40 - invert match which means that all the
302:44 - you know lines which doesn't contain
302:46 - this pattern it's going to show these
302:49 - lines okay so it's the invert match okay
302:55 - and let me uh just use only one file for
302:58 - now file.txt and then press enter so
303:02 - it's showing all the line which doesn't
303:05 - contain this word which we are searching
303:07 - for let me also show show the line
303:10 - number also so with n I'm going to show
303:14 - the line number so it's only showing the
303:17 - lines which doesn't contain this keyword
303:20 - which is some options right so you can
303:23 - uh verify from here this terminal is not
303:26 - printing all the you know lines right
303:30 - but when you verify it it's not going to
303:33 - show you the line number 17 because this
303:36 - contains uh this um pattern which we are
303:40 - searching for okay so there are many uh
303:44 - you know flags and options which you can
303:47 - use with grab command I just wanted to
303:50 - give you the introduction to G grab
303:52 - command so go ahead and uh just use grab
303:56 - minus H so just write grab minus H here
304:01 - and then press enter and it shows uh
304:03 - that to use help you need to use this
304:07 - command so not minus H but grab app
304:09 - minus minus help okay so just use this
304:13 - minus minus help and then it's going to
304:15 - show you all the flags and options which
304:18 - you can use with uh the you know drab
304:22 - command hello guys welcome to the next
304:24 - video on Linux command line tutorial for
304:26 - beginners and in this video we will
304:28 - learn how to use netstat command in
304:31 - Linux netstat stands for Network
304:34 - statistics and net stat is a command
304:37 - line tool which is used to display n
304:39 - network connections routing tables and a
304:42 - number of network
304:44 - interfaces and in addition it can be
304:47 - used to uh you know view Network
304:50 - protocol state statistics okay so to use
304:54 - net stat command you can use the keyword
304:57 - netstat and you can use few options with
305:01 - netstat command so the first and the
305:04 - default uh option which you can use with
305:07 - Nest stat is minus a and when you give
305:10 - this uh Nest minus a it's going to show
305:14 - you all the you know
305:17 - connections which are available on your
305:20 - uh you know system whether it's TCP or
305:25 - UDP or Unix connections and it's also
305:29 - going to display you the status if it's
305:33 - connected or it's uh listening or it's
305:36 - established and different kind of
305:39 - connection States right but when you
305:42 - give this command and when you scroll a
305:44 - little bit more up you will be able to
305:47 - see that uh you know you they have so
305:51 - many statistics you have you can see it
305:54 - has so many statistics that you uh you
305:58 - know need to use some tool to you know
306:01 - view all these connection at the same
306:05 - time so what we are going to do is we
306:07 - will use this net stat
306:10 - which is this one with a pipe called
306:15 - less okay so that's just give this
306:18 - command n that a and then this single
306:23 - pipe and then we are going to use the
306:26 - output to display with the less uh
306:30 - command okay so when I press enter now
306:34 - you can see it's giving us the first
306:38 - line of output
306:40 - which can be you know displayed on the
306:43 - full terminal and whenever you want to
306:46 - see more you can just press your down
306:49 - button and see more uh you know more
306:51 - options so this is more flexible right
306:56 - now you can see uh there are the state
307:01 - some are listening some are connected
307:03 - some are established you can see uh the
307:07 - path of uh this connection and you can
307:11 - see the type whether it's Unix whether
307:14 - it's UDP or it's TCP connection right
307:19 - and different state can be established
307:21 - listen or connected okay now let me
307:26 - clear the terminal once again uh to quit
307:30 - this uh net stat using less command we
307:33 - already know that you need to press Q to
307:36 - quit and now we can use some more more
307:39 - options with the net stat command so
307:43 - with uh net stat you can use uh t uh
307:47 - option which stands for TCP so if you
307:51 - just want to see the TCP connections
307:53 - then you can use a right and then press
307:57 - enter and it's just going to show you
308:00 - the TCP connections you can see the
308:02 - states and the you know you can see here
308:06 - the type of connection which is TCP only
308:10 - okay and once again press Q to come out
308:13 - of the command because we are using less
308:16 - to view this uh output right in a
308:20 - similar way if you want to see the UDP
308:22 - connections then you use U with this
308:26 - okay and then press enter and it's only
308:30 - going to show you the UDP connections to
308:33 - you so we will come come out of uh this
308:36 - output using Q now the next next option
308:40 - which we can use with nesat is the L
308:45 - flag and L flag will allow us to uh see
308:50 - the output for the ports which are
308:53 - listening okay so L stand for listening
308:57 - state so just give minus L and now you
309:02 - can see whatever uh you know programs
309:06 - are listening you can see the state all
309:08 - listening
309:10 - uh states are showing and uh nothing
309:13 - else right once again I will quit it now
309:17 - the next command is for example you want
309:19 - to see only listening TCP then use L and
309:23 - T for TCP it's just going to show you
309:26 - the listening TCP connection and you may
309:30 - have guessed it correctly that if you
309:32 - want to see the listening UDP you just
309:35 - need to write Lu okay it's going to show
309:38 - you the list in UDP connections right
309:41 - now the next option which you can use
309:44 - with your uh netstat command is the
309:48 - minus s flag and minus s flag is for
309:52 - statistics right so when you give minus
309:55 - s it's going to show you the statistics
309:58 - so press enter and you can see it's
310:01 - showing the statistics IP total uh
310:04 - packets received uh how many packets are
310:08 - received or how many
310:09 - packets are going out and you can see
310:13 - which type of connection it is and then
310:17 - the you know properties of these packets
310:20 - what are what is happening so in the UDP
310:24 - 78 packets are received and 10 packets
310:27 - to unknown Port received right and 80
310:31 - packets are sent right so if you want to
310:33 - see the statistics of every interface
310:37 - then you can use minus s once again I'm
310:40 - going to press Q to quit from uh this
310:44 - command and then if you guesses guessed
310:48 - it correctly you can use minus St for
310:53 - TCP right and then if you want to use
310:57 - minus s u for
310:59 - UDP okay so it's just going to show you
311:02 - the UDP connections and so on now if you
311:06 - want to see the P IDs of the related
311:10 - interfaces then you can use the P minus
311:15 - P option okay so for example we want to
311:18 - see the P ID of all TCP connection which
311:22 - are there okay so press enter and you
311:26 - can see uh the TCP connection and then
311:30 - you will be able to see the P ID related
311:34 - but there is no P ID related to because
311:37 - it's uh state is is closed right so
311:41 - let's uh quit and let's uh just give the
311:45 - P State here okay so just give minus p
311:50 - and now you will be able to see the P
311:52 - IDs and the program names so for example
311:56 - we have the Unix connection and uh here
312:00 - is the P ID of this and the name is
312:03 - demon debus debus demon okay and also
312:07 - you can see the path and the state is
312:10 - connected here okay so if you want to
312:13 - see the P ID of uh this uh you know
312:16 - program which is uh using this
312:19 - connection then you can use the P flag
312:23 - okay and uh obviously if you use T it
312:27 - will show you the TCP and if you use U
312:31 - it's going to show you the UDP and if
312:34 - you're going to if you are going to use
312:36 - x it's going to use show you the Unix
312:39 - Port connections
312:42 - okay now uh if you want to uh see the
312:46 - numeric ports then you use minus n okay
312:52 - minus n stands for numeric and when I
312:55 - press enter Then you can see it's going
312:58 - to show you the numeric ports which are
313:02 - used by different uh you know interfaces
313:05 - on your system right once again I will
313:08 - press quit now uh minus C flag is used
313:13 - to show you the network statistics
313:17 - continuously so I'm just removing the
313:20 - less command and when you use net stat
313:23 - minus C it's going to show you the
313:26 - status continuously you can see after
313:28 - some time this status is refreshing
313:32 - right so it's going to show you the
313:34 - status continuously once again I'm going
313:37 - to just press contr C to quit from this
313:41 - and uh yes so minus C is for continuous
313:46 - okay now uh there are many uh options uh
313:51 - which you can use with uh this net Stat
313:54 - one last important command I want to
313:57 - show you is the net stat IE command so
314:02 - net stat then I is for interface and E
314:07 - stands for EXT extended interface so e
314:10 - is for extend and I stand for uh
314:14 - interface right and when you give this
314:16 - command it's going to show you the same
314:18 - output which is given by if config
314:22 - command so when you give
314:25 - ifig command it's going to show you the
314:28 - same output as the if config command
314:31 - gives okay so if you want to see uh what
314:36 - you know connections you have on your
314:38 - system and what is the IP address and
314:42 - the broadcast address and mass then you
314:45 - can also use uh netstat IE if if config
314:50 - is not available on your terminal
314:54 - okay now some more uh things I want to
314:58 - show you here in the last video we have
315:00 - seen the graph command and this graph is
315:04 - really uh helpful whenever for example
315:08 - you want to use the net stat command so
315:10 - you can use net stat and then we will
315:13 - use a for all n for numeric and then for
315:17 - example you want to search for from the
315:20 - output some lines so for example I will
315:24 - use graph and graph is used to find some
315:28 - content right in the last video we have
315:30 - learned this and then in the single
315:33 - codes for example I want to see what are
315:36 - the ports from the output of net stat
315:40 - which has the port 0 in it okay which
315:44 - has this keyword 0 in it colon 0 okay
315:50 - and when I press enter you can see it's
315:52 - showing the output so this grab is
315:57 - taking the output from the net stat a
316:00 - command and then filtering the lines
316:04 - which have this keyword colon
316:07 - 8 Okay so you can combine these command
316:11 - like this also okay and this pipe means
316:14 - here is that whatever is the output of
316:18 - the First Command after this Pi whatever
316:21 - command is used is going to be
316:23 - implemented on the output of the first
316:26 - command Okay so for example if you use
316:30 - less here then it's going to show you
316:32 - the output of the net set command using
316:36 - less if you use graph here then it's
316:39 - going to show you the output of the net
316:41 - stat using graph okay so this is how you
316:45 - can use net stat in Linux I hope you
316:48 - understood the basic concept of netstat
316:51 - and I hope you enjoyed this video please
316:53 - rate comment and subscribe and bye for
316:54 - now

Cleaned transcript:

now the first question you may ask yourself is why bother about learning a command line so the simple answer for this question is graphical user interface or interface like this one is helpful in many tasks but they are not good for all tasks and gradually when you learn command line you will uh observe that you are able to do your daytoday uh task or any uh task related to some programming much faster than you can do with your graphical user interface now the graphical user interface are user friendly uh you know at the first look but when you want to do more about a program for example knowing the details about uh what's happening in the background then you may want to use command line because uh by using command line you know all the background details of a program right now before diving into the world of Linux command line you need to learn two terms one is the shell and second is the terminal now what is the shell simply put the shell is a program that takes command from the keyboard and gives them to the operating system to perform Right Now command line or shell you can also say it's a CLI CLI stand for command line interface now the second term is the terminal a terminal is a tool which you can use to pass your shell commands this is a program that opens a window and lets you interact with the shell now there are different operating system available for the Linux but I will be using open to operating system now if you don't know how you can install obuntu on a virtual box or VMware Player I have the video on that and you can uh you know watch them and install open 2 on your native Windows operating system also using VMware Player or a virtual box which are virtual machine on which you can host uh your Linux operating system so I will be using open to operating system but you are free to use any other Linux operating system system and uh terminal commands are all same are almost the same on all you know Linux based operating system now on open to how you can open a ter terminal it's really easy so you just need to go to uh this button and then just click it and then search for terminal so just write uh terminal and the first uh icon you will find here is your terminal so when you click it it will open the terminal right now there is uh one command to open uh terminal also which is a keyboard shortcut when you press uh Control Alt T it will also open our terminal okay so this is the shortcut for uh opening the terminal now once you are in the terminal then you can perform bunch of command but before this we need to understand what is a file system and how uh you know these file system work in uh Linux right so like all other operating system the files on Linux system are also arranged in what we called a hierarchal directory structure which means that they are organized in a tree like pattern of directories in Windows you uh know directories as folders also now directories may contain files or other directories also now the most uh uh you know root or basic directory in uh Linux is the root directory and under this directory all files and folders are uh reiding now I will use this graphical uh interface to show you this uh file system of Linux so I will just go here which is files and I will open this and and then I will go uh to this computer so just click this option which says computer and this is your root folder okay and root folder start from this forward slash you can see here okay and then all the directories reside in this root folder for example home uh lib or bin which contain all the binary uh you know binaries of your uh Linux operating system and other folders which we learn later right so every uh Linux operating system has this root folder and under which all the files reide okay now let's start our Linux command line Journey now the First Command you may want to learn is the PWD command which is a present working directory command and this shows you in which directory you are currently in so let's give the PWD command so just give PWD and press enter and it says home/ uh programming knowledge which is my username for this computer okay so whenever you will open uh terminal by default the per present working directory is your home directory which is home/ your username in my case it's uh programming knowledge right now if you want to go to the root folder what you need to do so if you want to go to the root folder there is a command called uh CD which is a change directory command we will learn this change directory command in details in the later video but uh I will just show you how it works so just give CD and then give forward slash here which is our root directory okay so just press enter and then we will be in the root directory so once again when you press PWD command and press enter Then you can see we are now in the root directory the other command is LS which is list this command also we are going to learn in detail in the next uh videos but let's see how it works so LS is to list all the files and directories in the uh present working directory so just uh give LS and press enter and it will show you the same directories and files which you can see here so I will just uh make it a little bit smaller so that we can see so you can see bin daav boot Etc all the files on folders you will be able to find here in this user interface as you can see here also which are listed by using this Lis command Okay so uh I think that's it for this video in the next video we will uh you know start our journey with Linux command line and we will learn the basic command and we will gradually move to the advanced stuff hey guys welcome to the next video on Linux command line tutorial for beginners and in this video we will learn about LS command LS is a Linux shell command that lists directory contents of files and directories now first of all let's open our terminal I have uh told you in the last video If you press control alt T then it's going to open your terminal so just press control all T to open the terminal now for the ls command you need to know some syntax so we all know that LS command can be given by just writing LS on on the terminal but it has some options so these options will come in as a second argument so we can say here comes the options right and then comes the file or directory name so you can say here comes the file uh or directory name so you can write FD okay so LS command comes with options first and then files and directory tree now I will show you what I mean by that so first of all simple LS command will uh you know work like this only which list the content of our directory so we are uh you know whenever we open the terminal we are in the home directory right so we can just say LS and it will show us the contents of our home directory which is uh the desktop or um other document directory or you know downloads or other directories the same when you open this folder when you click here it will also open the home directory and you will be able to see all the contents uh of the directories here so these all the you know contents are here also so whatever you see here will be listed here also okay now the second uh option of using Lis command is by using a directory uh name for example we want to see the contents of uh this document directory right so our document directory contains these two files so how we can list uh the content of this document directory you can just write LS and then just write uh documents and then press enter and it'll list all the files which are there in the documents directory right in the same way if you want to list out all the contents in the downloads folder then I will just say LS downloads okay and press enter and it will show us the contents of the downloads folder right so simple now if you want to list out all the contents of our root folder as I have shown you in the last video you just need to give LS and then forward slash which is our root directory right and press enter it will show us the content of our uh root directory and in here you can verify this by going to this uh computer option and you can match all the directories here and here right now uh by default as I already uh told you we whenever we open the terminal we are in the home uh you know directory right now home directory uh you can just uh give PWD command and it will give you what is your home directory and this is your home directory right right so you are presently in your home directory now in uh other terms when you uh you know want to uh list out the content of home directory you can just say LS and then give this uh till day symbol which will also give you the same content as Lis will give you so let's print out Lis first but uh let me clear all the commands which I have given earlier so to clear the terminal you just need to write clear here so just write clear and press enter and it will clear your terminal and clear means your terminal will be you know blank but when you scroll up all the you know all the commands are there so clear means means it will just scroll down a little and it'll blank out your terminal for you so let's list out again so LS so it gives me the content of my home directory and when whenever you give LS and this till the symbol the till day also means the home directory so whenever you press enter it'll give you the same content and whenever you do uh LS and you can uh type the path Pro uh you know by yourself so home programming knowledge which is my home directory once again and when I press enter it will give me the same uh directory structure right so there are three command to list out uh the same thing one is LS which will give you uh all the contents of your home directory when you open your terminal right and then LS till day which will be uh also giving you the same content so this still there means the your home directory and also your uh you can type the home directory file path something like this now let's see some options so whenever you want to go inside some directory as I have uh done so I will just say LS document and uh you can just list out anything but you can just write LS and then do Dot and this dot dot means you want to print out one step back directory structure right so whenever you press LS like this it will give you programming knowledge because right now we are in home and then programming knowledge so whenever we want to uh print the content of Home folder then uh we just need to give these two D dots it will tell you just one fold back right if you want to go two folders back and you want to list out the content of uh two folders back uh content then you can do dot dot and then forward slash and once again dot dot and then press enter and you can see it will give you your root directory uh you know directories and file structure so this will uh you know go to the root directory because right now we are in home uh our home you know directory so whenever you go one step back you will be here in your home and one step back once again you will be in your root folder okay once again I will uh clear the screen and then we will move forward now uh there is uh are some Flags or options as I told you you can use with ls files so for example you give LS minus L and this means you want to list out all the files and directory in Long format and when you press enter it'll give you the listings in Long format let me just uh make it a little bit bigger and I will give it once again this command so clear and LS minus L and it gives you the you know content in Long format long format means it will give you the details uh who is your uh you know user what are the rights for this file and what is the size of your file and at which date this file was created and the time at which this file is created right now you may be wondering what is this Dr WXR or what are all these things so you can see there these are the user rights so these user rights are separated by uh this minus uh symbol so the first uh you know this thing which is Dr WXR so what does this mean so d means directory here R means read w means uh write X means execute and once again R means write so these are the rights of the owner owner means so whoever is log in so I can uh you know read write execute this uh directory which is desktop right second is the group right after this minus right so execute and read are the rights of the group and then the third is for the others which is only execute this directory okay so this is how you can uh you know list out the long list of five and directories now there is one more command which is LS minus a and this will give you the hidden files also so this will show you the hidden files also so just write LS minus a and it will give you all the hidden files so these are dots and double dots and do Android and Bash history log out. cach these are all the hidden files so hidden files in linux. from dot okay and they will not be shown here you can see these uh dot files are not here so whenever you give LS minus a it will give you all the hidden files right and then you can combine uh the options so whenever you give LS minus a for uh showing the hidden file and then L for showing the long list then it will give you the hidden file and long list come be combined okay so press enter it will give you long list and hidden file right something like this I will make it a little bit bigger so you can see it okay and I will uh just clear the terminal once again now there are some more commands for example you can sort your uh directory by their size so I will just give LS minus L for long list and then when you give capital it s it will sort your directory by their size so press enter and you can see the file which has uh the biggest size is listed first and then uh this will go down as according to the size so whatever file has the lowest size will be at the bottom and whatever files or directory has the biggest size it will go at the top right so you can sort it something like this now for example example we want to uh you know list something which uh Only We Know the extension of so let's uh list for example you can just write LS once again we will uh list out document list so just write documents and press enter and this document has uh this uh test.html and test. CS file but for example I want to only list out all the h HML files which are there in the document folder so what I I can do so I can just write LS and then I can just uh write documents and then I will just give this wild card which is estx so which uh will be will search for all the prefix uh which are there right and then I will just write Dot and then I will just write HTML so this means I want to search for all the files which ends with DOT HTML and then I will press enter and it only prints out this test. HTML which is correct because we wanted to print out only HTML files in the other way when you give uh estx dox which means all the files so whatever all the extensions and all the names right and press enter and it will list out these two files which are there in your documents directory right right now uh you can also output uh the content of your LS to a file so for example I want to uh you know save all the result which I have listed here to some file so I will write LS minus for example L with capital S and then I want to save all the content to a file so I can just give this angle bracket and then the name of the file which uh I want to uh you know save these content to so I will just say out.txt by the way this out.txt is not existing here so it will create this out.txt and then fill all the result of Lis command to this uh you know out.txt file so this arrow means the direction of uh the stream so it will uh put all the content in into the output right and press enter and you will be able to see we have one new file created which is out.txt and when I open this file then it'll uh just you know fill all the result of Ls minus LS command to this output file right so you can do this or you can output the content of the file also to a file now the next command is to list out only the directories so for example you want to just list out only the directories you can just give uh LS minus D and then you just need to give uh estx and forward slash and it will list out all the direct directories okay so you can see it's not listing out the files but only the directories right so these are all the important commands related to LS but this is not all Lis is uh you know having more options and flags and if you want to know more about this Lis command what you can do so you I will just clear the terminal first of all and to know more about this LS command you can just write men and then LS so men is uh you know is a you can say the dictionary kind of thing for your Linux commands right and whenever you give this men command and then uh give the command name which you want to see or uh you want to take the reference of then when you when you click enter here it'll give you all the options which you can uh use with ls so you can see LS minus list directory content so this is the explanation of this and then you can see all the flags so I have shown you how to use minus a but I haven't shown you how to use minus B so you can find find out all the you know important information what this minus B does or what this minus C does or what this minus D does so d as I've have shown you list directory entries right and uh I have also shown you what L does so I have only shown you the important command related to LS but there is a big list uh which you can uh you know execute with this LS command so you just need to write M man and then LS and it will give you this kind of interface which you can see the reference right and you can see at the bottom whenever you press Q or right quit then you uh quit this man terminal so I will just press Q which will quit the uh terminal right so just remember this man command if you want to take the reference of all the all the you know references of particular commands hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how we can use CD command in Linux CD command we can use to change the current working directory in Linux so let's see how we can use it so first of all I'm going to press control alt T to open my terminal and then I'm going to uh just use uh the command so first of all let's see the syntax of CD so you can just use CD as it is and it can be used with the directory name also so you can just write there here right so first of all whenever you give the CD command as it is it's going to uh lend you in the current home directory right so you see it's the home whatever you open whenever you uh open the terminal for the first time it'll uh you know land you there right and then for example you want to uh go to somewhere for example we want to uh change directory to the root directory as we have seen in the first video root directory is this forward slash and then press enter and now we are in the root directory and you know you are in your root d Dory by this forward slash here and uh by default you have this still which is a home yeah right so first of all let's see in which directory we are so we are uh in root directory so we will just give PWD and see if we are in that directory or not so you can see we are in root directory right now once again if you give uh CD and then this uh till day symbol then this means your home directory home directory is nothing but your home slash username right so once again I give this command and then once again I give the PWD command and you can see we are in now our home directory right so This Ti can be used also with CD Command right now there is a command something like CD dot dot and it means we want to go to The Parent Directory of the current working directory so for example our current working directory is home/ programming knowledge which is my username so when I give a CD dot dot then we will go one folder above or parent of the current folder so I will just uh press enter and now you can see we are in the home uh folder so I will just once again give PWD and now we are in the home folder so we go one folder above right in a same way for example I will once again go to my uh home directory by CD till day and then for example I want to uh LS first let's see LS and what are the directories and documents in this folders so in uh my home directory we have a desktop or document folder or other folders right so to uh go inside those folder or to change the directory for example to the document folder you can just write CD and then document okay so just write CD document something like this and you will go to the documents folder once again I will go to my home folder by just uh give giving the CD command and then you can also go to the documents folder by just giving its absolute path so you can just give uh CD home then my username which is programming knowledge and then the documents folder okay so you can either give the absolute path which is home uh username uh documents for example example or you can give the relative path something like uh CD document this is the relative uh path right so we are already in the document so we will go home and then we can say CD uh documents and we will go to the documents folder right so you can give uh absolute path or the relative path related path is nothing but so for example I do LS and whatever directory you see uh inside your present working directory you can just directly give the name of that directory so for example CD and then uh I can just uh give download this time and press enter and we are in the downloads right now the next command is going to the the directory inside the directory so for example uh let's go to our home and let's clear the screen for now and let's see what we have in our uh document folder so I will just go to the documents folder and I will just do LS and uh in here I have uh the two files but for example I will create one more folder here inside a documents folder so I will just go inside the documents folder and I will create a new folder folder for example I will say it's a book folder books folder okay and I want to go inside this folder so how I can do this I can just do CD which will change the directory to the home directory and I can just give uh the command CD documents and then books something like this so you can uh go in the books by giving this command and press enter and we are inside this books folder and then right now it has no files but for example I want to create a document I will say just uh test dot uh txt files right so do txt file and I will just do LS and you see we have the txt file test.txt file now next command is for example I want to na naate inside this books folder and I will create one more folder there is a command to create uh directory by the way but uh this command we are going to see in the later videos that's why I'm not showing you this Command right now and I'm going to use this graphical view to create my folder so for example I will say this is my books folder okay and if You observe I have left a space between my and books right and I left the space intentionally so when I do Lis here it will show me there is a folder called my books but if you uh create a folder or directory with my book for with a space then how you can navigate to this uh directory for example I will do my uh CD and then I will just uh you know write my books and press enter and it will give me the error because CD is just looking for the first uh you know argument after this CD command and if it's a space there are two arguments after this CD command so how you can go inside the folder which has space between it there are three options uh you can use to navigate such kind of folder first option is you can just write CD and and then do my and then you give this backs slash and then you give books for example something like this and when you press enter you will go inside this my books folder okay I will go once again one folder above and the second option is instead of uh using this uh back slash you can just write double code and then you can just write my Books Okay and press enter and also you are in your my books folder right once again I will go back one folder ahead and the third option how you can uh go uh inside this folder of directory which has uh the space between it you can just give single quote around your uh directory name so press enter and also you are in the same directory okay so what are the command we have used today or we have learned today so I will just clear the terminal and I will once again tell you what are the commands we have learned so CD command if you give then you will go to your home directory okay so I will give CD and I'm in my home directory now in order to navigate to a particular directory I need to give its absolute path or relative path so for example I want to go to ro root I will just say uh cd/ root and I'm in the root folder once again I will go to my home folder and for example I want to go to CD user bin okay so I will give its absolute path and I'm in the CD user bin and I can just list out all the content of uh this folder by Alis which we have seen in the last video I will uh clear the terminal once again the next command is the relative path so for example I will once again go to my home directory and I will just say CD and I want to navigate to documents so I can just uh give CD documents or if I want to go uh one folder inside this document I want to navigate to the books folder I can just give uh this uh type of uh you know command and PR press enter and we are in the books folder now we have created created a folder with a space between its name then you can use a CD and then either you can use backwards slash between the space or you can enclose this name between double codes or single codes and you will be inside that directory and you can work with it hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how we can use a cat command in Linux cat is one of the most frequently used command on Linux it has three related function with regard to text files one is displaying text file second is combining copies of uh text files and third is creating new text file so let's see how we can use cat command so I will just press control alt T to open my terminal so I will just press control alt T and it will open my terminal now the Syntax for using cat command is you just need to write cat here and then you uh give options so just give some options and then you give the file names so for example file one file 2 and and so on okay something like this so let's see how we can use cat command so first of all you can just give cat and press enter and you can see uh it's giving us this kind of cursor so we can just type for example hello world and then press enter and it will Echo whatever input we have given right so once again um I can say Echo input and press enter and it will Echo it again so you can see this is the basic functionality without any option for the cat command but cat is not only the echoing uh you know program it can do uh much more than echoing something so to exit this scat command you can just press controll D which means the end of uh the file so just press controll D and you are out of uh this scat Command right now first of all let's see uh what files we have in our folder so I will list all the files in the current folder which is my home folder and uh you can see these are all the files directory in my uh home folder so for example I have this uh file called list one. text okay and I will just show you what are the content of this file so this file contains three lines line one line two and I have a line break or a blank line here and then I have the third line okay so I want to print this uh uh text file on my terminal so I can use cat and then the name of the file so the name of the file is list one. text and press enter and it will display me the content of the file same as like this okay now for example I want to show the content of two files so you can see here I have list one. text here and I also have list 2. text also right so I will just show you the content of list two also so I have uh once again three lines and one blank line here right so for example I want to display the content of both the files I can just add one more uh file name here list 2. text and press enter and then it'll combine the the content of both the file and display me on this terminal right so the first uh uh use of cat command you can say is for displaying the content of a file right or multiple files now there are some options related to cat command so for example I want to show the line number on uh the every line of the content of the file for example so I can use cat and then minus B which will add line number to nonblank lines okay so I will just uh give the name of my list one. text for example and press enter and you can see it adds the line number to the nonblank line so you uh if you remember my list one have one blank line here right and it will skip or it will not add the line number to the blank line but all the lines which have some content it will add add the line number to them now next command First Let Me Clear the terminal and press enter so it will clear the terminal the next command is get minus n and what it will do is it will add line number to all the lines so for example I will just say list one do text and press enter and now it has added the line number to the blank line also right now for example I have a text file which have multiple line breakes something like this a big line breaks right and I want to you know uh display the content of the file and I want to remove uh this these all line break big line break and I just want to show only one line break right so let me save this file and then I will just say cat and I will just give the command minus s and then the name of the file list one. text and press enter and what this command does is it squeezes blank lines to one blank line okay so here there can be many lines but it'll you know squeeze all the blank line to only one blank line and it will not affect the content of the file remember it will only display the content of the file in this format right so it's not changing the content of the file but only displaying it in our convenient uh you know manner right now the next command is cat minus capital E command so I will just uh revert my changes here and I will save this file and now I will just give cat minus capital E and then I will just uh once again uh give this list one. text right and then it adds this dollar symbol at the end of each line okay so you know that this is the end of the line okay so these are the basic commands and option related to cat command now if you want to know more options related to cat you can just enter men if you remember in the earlier video I have shown you how to use men pages so just use men n and then just enter cat and press enter and then you will be able to see there are more options related to cat command for example minus a which means show all or minus E which is equivalent to minus V or these are all the options which you can use with cat command I I just showed you the most important options with cat command so just use man to you know read or learn more about this cat command and when you press Q you quit the these Man pages now uh the cat command can also create new files but this we will see in the next video when I will show you how redirection Works using command line hello guys welcome to the next video on Linux command line tutorial for beginners in this video I'm going to show you how we can use redirection in Linux first of all what is redirection redirection simply means capturing output from a file command or program and sending it as an input to another file command or program and let's see what are the options we have for the redirection so for example you want to uh you know transfer something some output so I will just write output here and then you want to redirect it to a file for example so in this case we want to send some output to a file and the pointing uh you know end of this arrow is the direction of your output so you want to send the output to the file so this point means the direction of your output right so let's see how we can use it so in the last video I've shown you how we can use cat command in Linux so we are going to use this cat command to uh create a file and then uh transferring our uh you know stream to this file so just write cat here and then this angle bracket this means uh we want to redirect our uh you know input or whatever output we are going to type in the terminal to a file and uh let's name a file something so for example text. txt okay and when I press enter here you will see there is a new file created right as soon as you press enter now whatever you write here then this content will be written to the file for example I will just write uh line one line uh two line uh three for example and this will be written to your file and to uh you know show the end of the file you just need to press contrl and D so just press control D to uh you know indicate that this is the end of your file and then you are out of this scad command and let's see what's the content of this test file so I can just uh cat this uh test file here so just press enter and you can see uh the content of this uh test.txt file right now for example what I want to do is I want to once again uh transfer something else uh to this file so once again I will just uh do cat with this uh angle bracket and then the file name and then this time I want to add for example line uh four here and then line uh five for example and let's say I want to add one more line for example line six here okay and then I will just uh press controll D to end this uh file and now I want to see the content of this file so I will just give cat. test.txt right and press enter and now you will see that this test txt file contains line four five and six and earlier whatever content we have written to the file is overwritten by the new content right this content now for example you want to append uh to the file you want uh that this file should not be overwritten but it should be whatever uh you want to add to a file it will be added from the next line for example right so what we do in that case we give the same command with two angle brackets so this is for appending to the existing content of a file right so when you give two angle brackets and press enter and now I will say line seven here line 8 and line nine for example okay and I will press controll D and then once again I will see the content of the file and now it shows me uh line 345 which is from my last uh you know command and then I have added these three new lines so if you want to append to the existing content of a file you may want to use these uh two angle brackets okay now sometimes you want to uh you know add two files and then transfer the content to the new file right so I have these uh two uh files list one and list two for example so let me show you the content of these two file first I will clear the terminal it should be clear and press enter and then cat list one for example and it contains uh these three lines and let me show you the content of uh list two also so it contains these uh three lines also right now I want to add the content of these two files and transfer it to a new file so what I can do is I can just write cat and then I will just uh write the name of these two files list one and then space list uh two and then I will give the angle bracket here something like this and then I want to transfer the content to a new file for example let's say its uh name is out do txt something like this okay and let me make it little bit bigger so we can see the command so this is the command so I want to join these two files and then transfer the content of uh the concatenation of these two files to a new file so when I press enter the new file will be created this file already exist here so it's not creating but if uh it doesn't exit it will create this file and then when I see see the content of this out. text file I can see uh the combination of our two files so in this way you can add uh any number of fil for example you have three or four files you can just write list one list two list three and list four and then redirect it to a new file now for example I would just want to uh redirect the content of these two file to the file two itself so what should I do I can just write something like this so I just write uh cat list one list two and I want to uh transfer the output to the list to itself so I will just write here list two and press enter and it says input file is output file here right so you cannot do this like this so what you need to do here you need to do something like this so you just need to give the list one text and then append it to the second file which is our list 2.txt file right instead of uh giving uh this command if you give uh this command this will work so when you press enter this command is executed and let's see the content of uh list two now so just write list uh 2. text and press enter and now you can see list two contain the combination of uh these two files right so so in this way you can use uh redirection in Linux so it's not uh you know particularly related to the cat command you can do the same thing with for example I will just write LS minus Al to out. text so I will just write out. text and press enter and when I see the content of out. text it'll give me the output of Ls Command right so it's not particularly related to cat command you can use this redirection to uh any other command with any other command for example LS or CD or any other hey guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how we can use mkd command in Linux we can use mkdir command to create directories in Linux so let's uh see how we can do it so first of all just press control alt T to open your terminal and for example I want to just chain directory to my desktop folder so I will just write desktop and press enter and in the desktop I want to create a directory called image so I can just give mkd R command which is the command to create uh any directory and then the name of the D Dory for example image okay and I will press enter and then it's going to create this uh directory called image now for example I want to create a subd directory inside this image directory I can just write uh mkd R once again and the directory name which already exists and then I will give the forward slash for the subd directory for example I want to create uh subd directory called pix and I will press enter and then when I open this image directory it has this pix uh you know directory right now for example you want to uh create the subdirectory from uh the command or for the directory which don't really exist so for example I want to give this command for example mkdir on the desktop and then I want to create a a directory called names and then I will give a name for example Mark here okay so this directory names doesn't exist on my desktop you can see here right so when I give this command it'll give me the error and the error says cannot create directory names slm Mark no such file or directory because this names uh directory doesn't exist which is a Parent Directory it cannot create this uh Mark subd directory inside the names so in order to create the directory structure you need to use this flag to your uh mkd command which is minus P okay and this flag you can use to uh uh you know create a directory structure okay so this flag can be uh given in two ways this is the short version of uh giving uh this uh flag and if you want to know the full version you can just give two dash and then you can just give parents command here okay so the flag name is parents okay and if if you give uh this command it's going to create uh directory for you also and subdirectory for you which doesn't even exist okay so I'm going to just give this uh short flag which is uh minus p or p and I will just press enter here and it's going to create this directory and it doesn't give me error and when I go inside this directory there is one more directory called Mark here right so if you want to create directory or subd directory which doesn't really exist you can use minus P flag which with your mkdr command now for example you want to make or create several uh directories inside your Parent Directory so what you can do so you can just write mkd command just write mkd and then minus p and for example I want to create some uh directory with some names inside this names directory so I will just give the name of the names directory and then I will just give these curly brackets and inside the curly brackets I can provide the list of directory which I want to create for example I want to create a directory called John I want to create a directory called uh Tom for example and I want to create a directory called Bob so I want to create three directories inside this names uh directory so let me open this uh directory which is names and right now it has only one U directory which we have already created so let me press enter and let's see what happens and when I press enter it creates some directory with uh this curly brace start and then uh the first name and and then comma so this way you can create but you don't have to give the space between these commas so just remove the space between the commas and press enter once again and this time it will create these three directory so always remember when you give a space it will not create the you know correct directory structure you want so you need to give uh the comma without the space so this format of creating the multiple directory is correct without spaces and this will uh give you errors as we have seen it has created this directory which we uh did not wanted okay so in this way you can use mkdir command in Linux I hope you've enjoyed this video please write comment subscribe and bye for now hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how will we can use rmdir command and how we can use RM command in Linux so let's get started we will start with rmdir command now this uh rmd command we can use to remove the directory or directory structures so let's see how we can use it so you just need to give our MD command in order to use it and the option you can give so you can just write options here and then the directory name so I will just say there okay so this is how you can use it now for example I will just uh CD to my desktop for example and then here once again I will create a directory by mkd command and I will name it as ABC and my directory is created you can see here right so for example I want to remove it so I can just use rmd command to remove it so just uh write rmd and the directory name and press enter and it's going to remove your directory now for example you have a directory structure for example I want to create a directory structure for example mkd a/ b/ c/ d/ e for example so this is the directory structure I want to create and for this I need to use minus P Command right for parents and then press enter and then it's going to create this directory structure now to see this directory structure you can just write LS minus capital r and when you press enter it's going to show you the directory structure so you can see at the top we have um directory a and inside directory a we have directory B and inside directory B we have C and inside C we have D and inside D we have e okay so this is the directory structure which we have created now in order to remove it uh you can just give the same command for example rmd and then just give a SLB SL c/ / d/ e for example okay and when you give this command it's going to uh you know remove or try to remove this directory but uh you can see it hasn't removed this directory actually right and what it does is Let's uh see once again LS minus capital r that it hasn't removed this uh directory it has only removed the top level directory which is this one which is e directory e right now in order to delete the whole directory structure what you need to do is you need to use this flag which is minus P which we have seen in the last video also for parent right and uh e is already being deleted with this command without minus D so uh without minus P it's going to remove only the top level directory which is at the top which is e in our case right now in order to remove the whole directory structure you just need to give minus P flag and then press enter and it's going to remove the whole directory structure for you okay now I'm going to clear the terminal and then once again I want to create the same directory structure and I want to show you uh one more thing so what I'm going to do is I'm going to just create this directory structure and in order to execute the previous command you have executed you just need to press up uh key or up Arrow key and it's going to give you the last command you have executed right and I want to create this uh directory structure once again and I will press enter and it creates the directory structure once again and then I will just do LS capital r and you can see the directory structure is created and then there is one uh command which is uh this rmd minus p and then for example you want uh to uh you know remove the command and see the output okay so you can just give this flag which is for verbos okay so this flag V is called verbos flag and this verbos if you don't know what is verbos verbos refers to the mode or setting that displays or gets extended information so it will give you what's happening in the background the information of all that right and then I will press enter and you can see how uh this rmd command is working so first of all it has removed the top level which is e directory then then D then C then B then a so it works from the top level directory to the you know Parent Directory you can say okay so if you want to uh you know display uh the extended information you can use this uh V flag with P okay now for example once again I will just uh give the clear command which will create my terminal and once again I will create this directory structure which is uh a/ b/ c/ d/ e and it's going to create it and once again I will give this command which is LS minus capital r so our directory structure is created right now for example I want to CD to for example a to the B directory okay so now I'm in the B directory okay and here I want to create a file so I will just write cat and I will just say abc.txt file I want to create and then I will just uh give some random text here and I will just press contrl D to indicate the end of the file and now uh this B directory contains this ABD c. text and this we can verify by once again LS minus capital r command and now you can see in our uh B directory we have abc. text so let me go back to directories above so we are in the desktop so it'll uh you know go One Directory back right if you remember how we can use CD then uh you know how to use these dot dot also so right and these double dot means we want to go One Directory ahead or to the parent of the current directory okay so now we are in the desktop and then once again we will give our LS minus capital r and you can see the directory structure so we have a then we have B directory inside a and inside B directory we have this text file and then C directory you can see so this is the directory structure and once again for example I want to use this rmdir command to remove uh the directory structure and let's see what happens so when I press enter it'll give me the error in between so it says fail to remove directory A/B directory does is not empty or directory not empty right and this is due to the fact that if the directory contains a file the rmdir command will not work for that directory so if the directory contains any file you cannot use rmd command directly right so I will just give this command which is LS minus r once again and let's see what it gives so you can see it has deleted the directory e d and c for us because they are empty and removing start from the uh you know the top level so it has deleted e because it was empty then it has deleted D because it was empty and then it was has deleted C directory because it was empty but when it's trying to you know delete the B directory it contains a file so it cannot delete uh this B directory and that's why this error is coming right so so it uh removes the file in our structure right so you can see at this moment uh it has uh given us this problem or error because it's trying to delete uh the directory but directory contains a file now if the directory contains a file there is another command you can use which is RM command and this command we can use to remove the files and directly uh directories okay so just give RM and then your directory so now we only have a and b directory because CD e directories are already deleted right and if you want to delete the whole directory structure you just need to give this flag which is minus r and it stands for recursive okay and we can just add this V uh flag also for just displaying the information what's happening in the background as we have done with uh this MK uh rmd Command right so if you will give this command it's fine but if you want to print the information you can give this V also with uh uh you know RM command and press enter and you can see it has removed uh the text file first and then it has removed the directory structure now you may have observed here that it has only deleted our text file and the B directory because in order to use the RM uh you know command you just need to give the Parent Directory name so you just need to give RM and then minus r and then a would be enough to delete this directory and the child or subd directory inside this directory Dory or whatever file it contains inside this directory okay so you just need to give the Parent Directory and nothing else and I have given the Parent Directory as A/B so it consider the Parent Directory as this B directory inside a directory so it has only removed the text file inside B directory and B directory not a directory and if you want to remove a just give the Parent Directory which is a itself and press enter and it's going to remove this directory so this is the brief uh information about using RM command and rmd command hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will see how we can use CP command in Linux CP command is used to copy files and directories in Linux so let's see how we can use it so just open your terminal by pressing Control Alt T and let's see what are the options we have for CP command so for giving CP command you use CP and then options and then you can uh write the source so you just need to uh give the name of your uh source and then the destination okay so CP and then comes the options for example minus I or minus V or other options and then you give the name or location of your source file or directory and then you need to give the name of the destination where you want to copy the source right so let's get started first of all I will CD to my desktop and in here in the desktop you can already see that I have two directories and a file so for example I want to uh copy a file into a new file so what I can do is I can just write CP and then I can just write the name of my file one which I want to copy and then I want to copy uh this file into a new file called file 2.txt which doesn't really exist so what the CP command is going to do is if this file doesn't exist is is going to create the new file and then copy the content of file one to file two so let's see what happens when we give this command so you can see the new file is created and the content of file one will be copied to file two so let's scat for example file one first and you can see the content of it and then let's scat the content of uh file two and you can see the same content right uh now let me clear the terminal now the second thing we can do here is uh we can copy a file to a directory so for example I can just use CP and then I can just write the name of the file and for example I want to copy it to a directory one which is empty right now so let me show you first of all before giving this command the content of the directory one so I will just use Lis and then directory name right and press enter and it shows nothing that means directory is empty right so now I will do CP and then the name of the file for example I want to copy file one and then the name of the directory which is my destination where I want to save my file right and I will press enter and it's going to copy this file to directory 1 and let's do uh LS directory 1 once again and you can see file one is now existing inside directory one right so it has copied the file one into the directory one now for example I want to copy uh file two also into the directory 2 what I can do is I can just write file one uh which is already copied uh if you want to uh you know copy the multiple files you can just do it something like this so you can give the multiple sources here and then at the end you can give the name of the destination so this time I'm going to uh give the directory 2 for example to copy to it so I will just press enter and then I will Alis to directory 2 and you can see these two files are transferred to the directory 2 right now for example I want to uh transfer these two files to directory one but we already know that file one is already existing inside the directory one and for example we don't want to overwrite the file one which is inside directory 1 so this command is going to overwrite the file one because it's already existing in the you know directory one so to avoid the overwriting what you can do is you can give this command or flag which is minus I which stands for interactive which ask before overwriting okay so when you press enter it says CP overwrite directory 1 file 1. text so it it will ask you the question and if you give y here then it's going to overwrite your file one and if you give n here then it's going to not overwrite right so we are going to give n so it's going to only copy file two and it's not going to overwrite file one okay so you can use I for uh the interactive interface right now for example uh you can uh you know give the absolute path here or the relative path right so for example I will uh CD to my directory one here and C CD to the directory one and let's do LS here and for example we want to give the L CP command from here so the file two and file one exist in the desktop not the directory one and right now we are in dir1 directory so we can just go one uh you know step back or one folder above by using these do two dots as you already know and uh you can give the name of the file for example file 1. text and then once again dot dot and then this time file two. text right and then for example uh you want to copy it in the current directory you are already in you can use this dot to show or indicate that this is our current directory or destination is our current directory so press enter and it's going to copy these two files to the directory one and we have not given given minus I flag here so it will overwrite these two files okay now this dot here means the current directory so when whenever you do LS minus a it's going to show you dot and then dot dot and then uh file one and file 2. text so this dot means the current directory so if you give this dot it means the current directory you can Al also give this command something like uh dare one something like this but you are already in the directory right so you can give the absolute path of uh the directory for example right so for example home and then uh your uh username and then the desktop which you are in so you are in the desktop uh directory here right and then uh di1 directory one okay so you can give this kind of absolute path also or dot also or this kind of relative path also to copy your files now there is one more interesting thing I want to show here and First Let Me Clear the terminal and for example I want to copy the directory one to a directory three which doesn't really exist so what I can do here so I can do something like this CP and and then diir one uh and let me go to the desktop first of all so I will just do CD dot dot so I will be in the desktop and then I will just do CP and then di1 and then I will give the name of my directory which doesn't really exist which is directory 3 right and let's press enter and let's see what happens and it's going to give error and it says omitting directory d ir1 and why it's doing this because this directory contains some files and then it's not able to copy this directory to directory 3 so in order to uh copy a directory which contains a file or files you can uh give this command which is minus capital r or small R I think both are same but uh mostly we use capital r which is for recursive copying right right so press enter and then you can see dir3 is created and we can list out the content of dr3 and you can see the content of directory 1 is transferred to directory 3 now you may ask why this directory 1 is not inside directory 3 right because CP command for example when you use for files it will transfer the file inside the directory 3 right so whenever uh you give some a command something like this and if the destination doesn't exist then what is going to do is is going to transfer the content of the directory or Source directory to the destination directory and create this directory first and then uh transfer the content now once again when you give the same command if the directory already exists okay so once this directory already exist and you give the same command let's see what happens and I'm going to just give I uh not I but V uh flag here for verbos and you already know what this means is and I'm going to press enter and you can see what happens here so what's happening here is it's transferring directory one 2 directory 3 and then it's transferring the file inside the directory 1 to directory 3 and we are going to give the same command LS uh directory 3 here and now you can see directory 3 is transferred inside the directory directory one is transferred inside the directory 3 right so if the file already exist it's going to you know copy this uh directory one inside the direct directory 3 if file doesn't exist or directory doesn't exist then it's going to just copy the content of the source to the destination okay so this is how you can use CP command and for more detail you have this command man CP for seeing uh you know all the options which you can use with the CP command and when you press Q it's going to quit hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will see how we can use MV command in Linux so let's get started I will just press control alt T to open my terminal and you can see on my desktop I have a directory and a file right so first of all I will browse to my directory using CD command and press enter and I can Alis here and I can see I have directory one and file one now to use MV command we have this option so you use MV command with some uh options and then you have a source and then a destination okay so first you use MV uh as a command then you can use uh options like minus V or minus I or minus F then comes your source file it can can be one or many files or directories and then comes the destination file or directory okay so let's see how we can use it so first of all I have this file one and I want to use MV command to change the name of uh this file for example so I will just use MV and then uh the name of the file and then I will just give uh some other name to the file for example file 2.txt okay and press enter and you will see here this file becomes uh file two okay and the content of the file will remain the same so I can use cat cat command to uh you know display the content of the file so just use cat and I have this uh you know content in my file one which is also transferred to the file two now for example I want to create a new file and move the content of file two to file uh you know three for example and I want to just uh you know transfer all the content of file two to file three so I can just use MV and then file two which is a source and then I can uh just write file uh 3.txt here and press enter and you will observe here that file two is gone now and file three is created and the content of the file we can check is the same as file two because it has uh changed the name of the file and moved the content of the file to file three so if the file doesn't really exist then it's going to create the file the simple you know formula of this now for example I want to move uh this file three to directory one I can just use MV and then the file name and then my directory name right now for example I will just open this directory and you can see here file two is already there and I'm going to transfer file three also there right so I will just um press enter MV and the file name and the destination name and then I will LS directory one and let's see the content of it and you can see now it has file two and file three both okay so in this way you can uh transfer the file or move the file to a directory using the move command okay now for example uh I will create a new file for example file three once again so I will just say file 3.txt and this is a new file I want to create on the the desktop and the content for example will be some random text here okay and I will just press controll D to end the file so this is file three and I want to move this file to directory 1 which already have file three so let's see what happens now this file three new file contains random text and the old file which is in the directory 3 contains uh this kind of text I can show you you this kind of text right so now what I want is I want to transfer this file three to the directory one so I can just use MV and then I can use the name of the file and once again what I have done is I've given the destination name which is directory one right now let me open the directory one and we will see what happens and the result of it so I'll just press enter and it will move the content of file three which is on the desktop to the directory one and what happens here is it will overwrite so the file three which was there on the desktop is you know overwritten and this file in the directory one is overwritten by the desktop file three okay so I can just cat d one file three for example and the content will be the random content which we have given which is the new file three which we have created right so if you want to uh you know move the file which already exist then it will overwrite the file okay so for example once again let's uh see an example but this time what we are going to do is we are going to uh you know uh do it with the sum command so first of all I will create once again file three and this time I will once again give some random text here and press controll D and this time instead of using uh this command like this I will use a flag I and flag I or minus I stands for interactive mode so it will ask you if you want to overwrite the file which was was uh already present in the directory one with the same name so I'm going to just press enter and you can see it will ask me if I want to overwrite and when I press Y and press enter it's going to overwrite the file or if I press uh n and press enter it's not going to overwrite uh the file which was already there in directory one right so I will press n and it will not overwrite okay let me clear the terminal now let's create our directory okay so what I'm going to do is I will just use mkdir command which we have learned in the previous video and I will create a directory 2 for example oops the command was wrong it was mkd not M A KD okay and it's going to create this uh directory tool right now uh for example I want to uh transfer the directory inside the directory to so for example I want to transfer the directory one inside directory 2 I can use the move command so I can just write uh directory one MV directory 1 which is my source and I want to move it inside directory 2 so I can just write the destination name which is directory 2 and by the way directory 2 is right now empty you can see there no content inside this and when I press uh this command and press enter it's going to move directory one inside directory 2 so we can just LS inside directory 2 and you can see directory one is there and inside directory one there was uh some file right so I can just write directory one uh directory two and inside that I have directory one and I can Lis the you know files inside the directory one like this and you can see the content is also moved with the directory okay so you can uh you know move the directory and its content using MV command also now let's see what happens when uh the directory which we uh you know want to move this directory to doesn't really exist right so I will just use MV and I will just write directory 2 and I will I want to create a new directory and move the content to uh this directory Tre right so when you do this press enter the name of the directory is changed and content is moved to this directory 3 and the directory two is uh you know disappearing right so if the directory doesn't exist it's going to create a directory and then move the content of the directory inside directory 3 so it will not move the directory true inside directory 3 but the content of directory two inside directory 3 so you can see there is no directory two inside directory 3 it's going to create the directory and you can say it's like renaming the directory if the directory doesn't really exist and if the directory already exists then it's going to transfer directory 2 inside directory 3 okay so I hope you understood to the the this basic concept uh which I want to convey here right now there are many command which we uh you know can use for example MV minus V for verbos and for example once again I want to uh transfer the file three to uh the directory so I will just give the directory name and press enter and it gives you uh you know the you know explanation what this command has done so it has moved this file three to the directory 3 right and it has overwritten this thing right and there are many commands and these command you can uh you know know by using this uh command which say which is man and then MV command okay so just write men and MB and it's going to give you the whole uh you know description of using MV Command right so you can use uh minus B with MV command or minus f with MB command I we have already seen and these are the description of all the flags and uh you know options you have with MV command so just use this and uh you know read these uh descriptions and you will be good to go hello guys welcome to the next video on Linux L command line tutorial for beginners in this video we will see how we can use less command in Linux less command we can use to uh you know read the files or if you want to search something inside the files something like patterns or some word you can use less command conveniently to read or uh search in the file so let's see how we can use it so first of all I'm going to open my terminal and first of all I will navigate to my desktop where this big. text file is there so first of all I will CD to the desktop and first of all uh because this is a big file and I want to for example see the content of uh this big text file I want to use scat for you because we have learned uh you can use scat to uh you know print the content of the file so I'm going to use big. text and when I press enter you can see it's print in the content of this text file and because it's really big it's printing and printing and printing and uh for example you want to read from the starting of this uh file when it's uh done Printing and you want to go up let's see what happens so first of all uh let it complete so it's completed and when I want to go to the top and I want to read the content the terminal doesn't allow me to go beyond a a certain level so it's not going to the you know starting of the text file that's why we can use our less command to overcome this problems plus less has uh its own features right so I will first of all uh clear the terminal and now I'm going to use less for you know reading the file content so first of all for using less you just need to you know write less and the name of the file which is big. text right and press enter and you can see uh it will show you the content of the file from the starting so this is the starting of the file and it will show you uh you know some text until uh this terminal allows it to show it and if you want to see the content of the file more you can hit the down arrow key so down arrow key to go one line down at a time you can see you can read down and if you hit up Arrow then you can uh read up or you can uh you know browse over uh the file in the you know up uh now if you want to go through the file Page by Page what uh you can use is you can use a space uh key to uh navigate your to your file Page by page so when I press uh space it's going to show me the next page next page next page next page and it will show me again and again next page so for uh the you know going through the page downwards you can use space uh key now if you want to go upwards Page by Page you can use capital b or b key okay and you can just uh Press B and you will go one page up at a time when you press B okay now if you want to go uh at the end of the file you can just uh press capital G so press shift and G so uh it will be capital G so press shift and G and it will uh you know browse to the end of your text file right and now if you want to go uh at the top at the starting of your file you can just type one and then G and it will go at the beginning of the file so capital Z using shift g at the end and when you press 1 G then it will go at the top right once again capital g at the end and when I press small G also it will browse me to the top also so small G for going to the top and capital G for going to the end right now for example I want to go at the top and now I want to search something inside the text file from up to down so I can use uh this uh forward slash which says uh this less that we want to search from up to down some word and the word for example we are looking for is book inside this text file right and when you press enter it's going to uh you know show you or highlight the first uh book keyword which you are searching for which is this one and now to uh search or to go to the next uh book in the text file you can press n to go to the next item which is uh book right so you can see there are so many book and we are searching or we are going from top to down right so you can see there are so many book Words inside this text file and uh when we are done with uh you know the searching and it's the end of the file it will say pattern not found so now this book is the last uh iteration of this word book right uh after that when you press next or n it's going to uh show this message which says pattern not found now some sometimes you may want to search from down to up and for this you can use this question mark for searching from down to up and then you can uh you know give your keyword which you are looking for and and press enter and the first word from the down is uh this itself and then when you press n it will go through this uh text file and highlight the book from down to up right so you can just press uh n key to you know see where this uh book is used this word is used right now if you want to quit less command you just need to press Q it will quit your less Command right so this is how you can use less command in Linux and uh if you want to know more about less you can just write men and then less and here is the description of less command and the flags and the keys you can use with less commands hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how to use Touch command in Linux the touch command is the easiest way to create new empty files in Linux it is also used to change the time stamps on existing files or directories so let's see how we can use it so first of all I will open my terminal and as you can see on the desktop I have a directory called D so I will just CD to the desktop first of all so CD desktop and then I will just CD inside the directory okay and uh let's uh list all the content of the directory so I will just do LS minus L for long list and you can see this directory contains five files file one file two file three file four and file five and you can see the time of the files uh which is the time stamp at which they are created or updated right now uh for example we want to create a new empty file we can use a touch command to create a new empty file and to uh create a new MD file you just need to write touch which is a command and then there can be options for touch but the simplest way is to give the name of the file so you can see uh the directory already contains five files and I want to create a sixth file so I can just say file six and press enter and then I will uh just list all the files once again and now you can see file six is created right and the time stamp of this file is the time right now which is uh 1122 p.m. right which is the creation of uh this file time stamp of this file right and these files are created at uh 10 05 or or 105 p.m. you can say right so the first uh uh you know use of touch command is to create a empty file you cannot create a directory using a touch command you can only create a empty file right now uh earlier with uh touch command I have all only used the name of the file I can even give the you know extension of the file for example file 7 do txt or CPP or any other extension and it will create it okay and let's list out all the contents and you can see the file is created and because we are using uh the long listing so it's also showing the permissions and uh the time stamp at which they are created or modified right now the second use of touch command is to change the Tim stamp of a file so let me clear this uh terminal first and I will do LS minus once again and uh you can see uh the time at which these files are created or modified now for example I want to uh you know change the time stamp on these files uh at which they are uh you know modified or created then what I can do is I can use the touch command on them okay so if the file doesn't uh exist and if you use Touch command then it's going to create this file right and if file already exists and you can if you use uh the touch command on this file which already exists it's going to update the time stamp of uh this file to the current uh you know time stamp right so you can see current time stamp is uh 23 24 and I want to change the time stamp of uh this file one I can just do uh Touch file one and press enter and once again I can do LS minus L and you can see file one time stemp was earlier 2205 and right now it's uh 23024 right so in this way you can update the time stamp of the file using a touch command Okay so these are the two uh basic uses of touch command first is to create empty files and second is to uh update the time stamp of a given file hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will see how we can use Nano command in Linux now Nano is a small and friendly text editor and beside the text editing Nano offers many extra features like an interactive search or replace SP and it also has uh some other features like go to line or column number it can show or it can uh you know uh give you the indentation in the file or um some other features so let's see how we can use it so first of all I'm going to uh just change my directory to desktop and in here for example I want to create a new file first of all Nano can be used for creating a new file also so just write Nano and uh then you just need to write the name of your file for example file.txt I want to create this file right and I will press enter and then this is going to uh open this file and create this file in the terminal right now uh you may observe here that the file is open but it's not uh you know shown here okay so this file is not shown because we haven't saved the file so Nano has created a file for us but we need to save it in order to you know see it here on the desktop because we are in the desktop right now right so for example we write something here for example ABC and uh for example b c d and e FG for example some random text okay now in order to save this uh text inside this file. text what you need to do is you need to press control o okay you can see this command is given here which means write out okay so when you press control o it means write out that means uh writing out to the file so just press crol o and this crol o uh will give you uh this kind of uh information which says file name to write and the name of the file so our file name is file. text which is okay so you just need to press enter and it's going to uh save the content of the file and as soon as I press enter you can see file. text is created here and when I open it it's going to show the content of the file which we have inserted using Nano right now Nano has uh some other controls for example uh contrl G will get the help or control X when you press the control X is going to exit from the Nano command so let's press contr X first so I'm going to press contr X and we are out of the Nano command once again once the file is created then we can addit the content of the file by the same command Nano and the file name and you can see we have written this content to our file and now for example I want to edit it so I will uh go to this line for example and you can see there is a command called control k for cut right normally in the normal editors we have contrl C for uh control X for uh cutting and control uh you know V for pasting right but in here we have uh control KY for cutting a line for example so I will just uh press controll K it's going to cut this line and for example I want to go down and paste it here I can press control U you can see this uh command which is control U which stands for uncut so whatever you have cut I will press control U you can paste it like this okay and then press control o to save the content which is going to ask you if you want to save it when you press enter the file content will be changed and you can see the effects here in the you can see like this okay so Nano uh can be used to create uh you know a different kind of files and um uh for example I will just exit from this nanu command and for example I want to create uh C++ file so I will just press Nano and I will just say abc. CPP for C++ file right CPP is the extension of C++ file and when I press enter and in here for example I want to write some code so I will just write uh uh IO stream for example and we need to include it right so hash include I stream and you can see here it's giving us the color so Nano has already recognized that it's a CPP file so it's uh going to uh show you the uh code highlighting for your CPP code right so here I can just write int Main and then I can just give these uh curly brackets and for example I want to print something so I can just say Hello World by STD C out uh hello world in the double codes right and you can see it's doing the highlighting for uh us so Nano is good for uh you know editing some uh you know files which contain some code so it can recognize if the file is a cpb file or C file or Java file or different kind of files okay and it will do the highlighting of or code highlighting for you uh also and it can uh recognize these code files also that's why also Nano is uh you know beneficial to use whenever you want to edit some kind of uh code right so this is how you can use Nano command hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how we can use pseudo command in Linux so first of all what is a pseudo command you can say pseudo is uh the command which rules them all the abbreviation or full form of pseudo is super user do so it allows you to uh some extra privileges as an administrator or a power user so let's see how we can use uh pseudo in Linux now first of all I'm going to open the terminal and right now we are in our uh home folder right by default now for example uh I will first of all uh list out uh all the directory which are in the root uh directory so we'll just do LS and then this forward slash now for example I want to make a directory inside this Etc folder so what I'm going to do is I will just do uh CDC and here I want to create some directory for example so this Etc uh directory contains some of the configuration files and other files you can see and let's say I want to create a directory uh for me for some uh purpose right so I will just use mkdir which we have already seen that this is the command and for example I will say new D for new directory okay and I will press enter and now this gives me this error that mkdir creates a directly new D which doesn't have permission so it's showing the permission denied error this is because uh for example on my Ubuntu Linux operating system by default when I open the terminal it doesn't have the administrative or root privileges so we need to use a special command which is called pseudo in order to uh tell this Linux terminal that we want to execute this command as an administrator right so let's see how we can use it so whenever you see permission denied most cases uh of permission denied can be solved by this pseudo command because uh pseudo allows us to run any command or most of the command using uh ADM distributive privilege or super user privilege okay so let's see we will just give the same command but this time we will just add a pseudo in front of uh this Command right so pseudo mkdir new directory which is the name of the directory and what this command does is first of all when I enter press enter it's going to ask me the password for my computer it's the same password which you provide at the time of login right so I'm going to provide my password and this password password will not be shown uh on the terminal it will be hidden but you just need to type your password and then press enter and you can see here this uh pseudo uh this mkd R command is executed with P sudo or super user Privileges and you because you have already provided the password once now you don't need to provide the password in the same session in the terminal right so uh let's see if uh this uh directory is created or not this time we didn't see any uh permin denied error and most probably it'll create this uh new D directory so let's see uh if it's created or not so let's uh search for uh new dare and hopefully we will be able to find this uh Direct this is here so you can see this uh new directory is created so super user command allows you to execute some command which uh with the super user privileges right now uh whenever we will uh you know learn how to install uh some uh third party software something like GCC or g++ or any other uh libraries which we may require uh to uh perform some task most probably it will ask you for uh this super user privileges for example uh there are some command in um Linux most of the time in Debian operating systems that uh you can give apt get install command so apt get install and the name of the software which we want to install for example want to install GCC you will just give GCC or for example uh g++ or any other software for example but this uh app get install command uh you know asks you most of the time whenever you are installing some software this super user privileges so you just need to add pseudo in front of it and then give your password so that uh this uh software or Library can be installed on your system right so Pudo is for giving the administrative privileges right now uh for example uh I will open the next terminal you whenever you press control shift T it's going to open the new terminal as a second tab so I have the first Tab and second tab so control shift T will open the next tab now whenever I will give uh pseudo minus s and then press enter and I will give the password here once again which will not be shown by the way on the terminal and press enter you can see earlier I was having the user privileges uh which is uh the name of my PC but now I have the root privileges so it changes to the root user and then you can see the ASX here here right this not estx but this hash symbol here which means you are now uh uh in super user mode so you can easily uh you know uh do anything uh as a super user okay so whenever you will give sud sudo minus s you will uh go into the super user mode automatically and that now you can execute uh any command using a super user as yourself right now this is the small introduction for sud sudo Sudo has many capabilities which we are going to learn slowly when we learn more about uh Linux uh and more commands and then we will see slowly how it can be used in more efficient way so this was just a brief introduction how you can use pudum hello guys welcome to the next video on Linux command line trol for beginners in this video we will see how we can use top command in Linux now top command provides a dynamic realtime view of your running system so for example you want to know which uh process in your computer is taking uh most of the your CPU or which uh program is taking most of your uh uh computer memory then you can use a top command to see which program or which process is uh uh you know consuming most of your memory or CPU so let's see how we can uh use it so just uh give top command and press enter and now you can see it's going to give you this uh kind of a list View and you can see it's refreshing every few seconds so this is the time which is the current time and for example you can see right now it's uh refreshing every 3 seconds so 36 and then it will be 39 and then once again 42 so it's refreshing every 3 second by default the top command uh refreshes this view every 3 seconds right now on the left hand side you will be able to see see uh the P now P ID stands for process ID in Linux every a program or or process have its own ID and this is called process ID in Linux and in short it's called P ID so you can see uh on the right hand side the name of the program which is running uh currently uh and taking some memory on your computer computer so this is the zorg or genome terminal which is our terminal or mongod D which is a demon which is running on my computer or even this top command how much memory is is it taking now in here you can see uh the CPU usage so the most of the CPU which is uh 5.9 or it's changing dynamically right so 4% it's used by this zorg process right and most of the memory also is used by this zorg process right so in this way you can uh see or take an overview of processes which processes are taking memory or how much memory is used uh in your system or how much uh CPU is used uh in your system so you can see right now total uh CPU usage is for example 8.2 or 7.5% or how much percent is it okay now uh top command provides you uh some more uh you know capabilities or Flags you can say uh in order to uh you know use this top in a better way now as I told you by default this uh view will be refreshed after every three 3 second and this you can verify with this clock so 58 and then it will be one so after 3 second now if you want to change this uh refreshing of the data then you just need to press s on this uh terminal so just press s and then you can see here it says change Delay from three to whatever second you want so for example I want to uh you know see the pro you processes frequently or I want to uh refresh this uh top uh frequently for example for every 1 second so I will just give one here and press enter and now this will be refreshed this view will be refresh every second and you can verify it with this clock also so 45 46 47 so it's refreshing faster and for example I want to do it a little bit slower so I I can do it five here and press enter and now this view will be refreshed every 5 Seconds right so 56 and then one and hopefully it will be six here on the clock you can see like this okay now for example whenever you press I so just press a key I and this key uh allows you to just uh filter out any ideal processes so if any proc process is Idle it will not be shown here whatever process are running here only those processes will be shown all the other idle processes will not be shown or filtered right so these are the only processes which are taking some CPU or memories so that's why these are shown otherwise all idle processes are not shown and once again when you press I then it's going to show you uh the complete View all the processes which are running right now uh next thing here what we can do is we can even uh kill uh a process for example so what I'm going to do is for example I will uh press uh this button here and I will open for example system settings from here when I do this on my uh top command you can see Unity control C uh is running and when I press I so it will just give me the overview of the running processes right so when I do some uh you know some clicks here I will be able to see uh the process which process is for which uh you know what is doing what so this when I press and I can see here this process is 38 uh 7 three for example right so process ID according to the process ID I can kill any process so once again I will press it and then I can see this Unity control C command the process ID is 38 uh 3 7 I think or 3873 it was so let me confirm yeah 3873 so when I press on this terminal K it can ask me uh the process ID so I know the process ID which I want to kill so I will just say 3873 and then I will press enter and once again I will press enter which is going to kill the process which I want to kill using the process ID so now the settings uh window is gone because I killed this uh window right so in this way you can kill any uh process in uh L Linux now process ID and uh what are processes and uh how to kill uh processes we will see in details later also but I just wanted to show you the functionality of top so that uh you know how it works so in this way you can use top command in Linux hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will see how we can use kill command to skill processes in Linux so let's get started first of all what I'm going to do is I'm going to open my terminal and for example I will start some process so I will go here and I will just start this system uh settings okay now I know that uh this is called Unity monitor so I will just use kill command so how you can use kill command you can just give kill and there are some Flags so you can give Flags using this minus here and then the name of uh or P of uh the process which you want to kill so you give P ID here okay so what I need to know is I need to know the P of a process in order to kill it right so first of first of all I will use a command to know the P of a process so just write P off and then the name of the process so I know the name of this process which is this one is Unity control center right and I will just uh press enter which will give me the P ID of this process right so in order to know the P ID of uh process of program uh if you know the name then you can find out the P ID of this uh process right now in order to kill it I can just write kill and then the P so I can just write 3286 which is uh this one this P ID and as soon as I will press enter this is going to be killed or closed right so when I press enter you can see it's killed right now uh if this command doesn't kill or is not able to kill a process somehow there is a Little Bit Stronger uh you know flag you can say you can add to the kill command and this flag will be something like this so I will start the process once again for example this once again and once again I will find the P ID and if you close close or kill the program and start it again it P ID will be changed so it will not be same every time right so you can see it P ID is changed right now this time what I want to do is I want to show you one more stronger command which is kill minus k i l in capital and then the P which is this one right and this will uh you know close the process uh it will force the process uh to be closed but it's not recommended but if you uh need it you know uh in some circumstances then you can use it okay and when I press enter this will be closed right and uh one more command is kill minus 9 right and then the P name or p number right and this minus 9 is called Sig kill command and it's also a very um I mean little bit powerful command to kill some processes if they are not killed by this uh simple kill command so just use this flag minus 9 and then most probably this process will be killed okay now uh sometimes you don't even know the name of uh the process so how will you find find the P ID of this process right so in order to find out the list of running processes on your system what you can do is we have seen in the last video how we can use uh top Command right so you can either use top but I have one more command to show you which you can use to find out the P IDs of uh the processes by their names and this command is p s and then you can just write minus uux okay so just write PX PS and minus ux and press enter and this will give you this long list of all running processes right and you can see there are different processes running and on the on the left hand side you can see all these values are the P right so you can uh just match the you know the program name with the p ID and then you know you can uh use this P to kill the process now for example I will once again so you can see there is uh no uh this Unity control center here listed because it's not running right now and there's no uh process like this and when I start this so I'm going to start uh this once again and then I will just run this uh PS ux once again then let's see what happens so I will once again give the same command let me clear the terminal first and then I will just show you this uh PS minus ux command and now you can see uh this process is running so we know that uh this is the name of the process and you can see the P ID of the process and then you can kill it so just write kill and then 3311 which is the P ID okay and then this process will be killed right now uh in uh PS command you can also use for example this is going to give you uh the current user processes right now if you want to see all the processes you can just write PS minus Au ux okay and and a I think stand for all so it will show you uh the processes which is run by all users right so you can uh see you will uh see the root and uh the current user also which is uh my PC or me for example right and you can see all the list of uh all the processes which is uh you know used by all the users right now for example uh if if your uh Linux operating system is containing multiple users and you want to uh you know see which processes are run by which user then you can use uh for example PS and then minus U and this will be I think Capital use and then the username so I don't have multiple user but I know that my username is uh this one so I will just uh paste it and then once again press enter and it's going to give you all the processes run uh you know is running by my username for example right so you can uh see the process name and PID according to this also now there is a last command which I want to show you here so for example uh I will just write PS and then minus Capital C and and for example a name of a process for example genome terminal right and I will press enter and you can see uh it'll list out all the instances or all the you know Pro processes which are uh you know related to this program so there can be multiple for example instances of uh this program running on your system and then it will show you all the you know list of all the instances so in this way also you can use this PS command to find out the P ID of process and then later kill it so I hope you've enjoyed this video please RIT comment subscribe and bye for now hello guys in this video I'm going to show you how we can use Echo command in Linux and I'm also going to show you how we can declare variables and how we can use uh these variables with our Echo command so let's get started so first of all to use Echo command you just use e Co and then some text for example hello world and press enter and what it does according to its name it just displayed displays whatever you write after this Echo command so it echoes anything which you write after this keyword Echo right now you may say that it's good for nothing because it's just echoing whatever we write after this and and uh it's not really useful but the use of uh this Echo command comes when you are using some scripting for example uh bash scripting and then it becomes really uh you know important sometimes to use Echo and maybe in the next video I will show you a brief introduction to uh scripting also and then you will be able to understand how Echo is important right so this is how you can use Echo but there is a good practice uh to use Echo also which is you just use Echo and then you use double quotes around your text or whatever you want to display so for example hello world again and then it displays the same content but it's better to use double Cod around your text okay now how to use variables in uh terminal or in Linux so in order to declare a variable you just need to uh give a name to your variable for example my where for my variable and then give equals to sign so it's important here to note that I'm not providing any space between the variable name and equal to symbol so don't provide any space in between okay and then give any value to your variable for example I will give some name for example Mark and when you press enter it does nothing but whenever you want to uh you know know the value of this variable you can use Echo so just write Echo and then the dollar symbol so just use this kind of uh dollar symbol and then the name of your variable for example my wire okay and press enter and it will display the content of this variable right so what we have done here is we have given some name to our variable and we have assigned some value to our variable using equal to and in order to display uh the content of a variable you can use Echo and a dollar symbol before your variable name and then variable name and it will Echo the content of the variable right now for example I can declare some other variable also but before this I want to uh let you know that this variable is only uh valid for this session of the terminal so as soon as you will uh you know close the terminal then your variable value will be gone right so it's only valid for this session of the terminal right now let's uh declare some other variable for example X is equal to 10 which is uh integer for example okay and press enter and does nothing and then we can Echo something like this so Echo and then uh for example I will just write in double quotes the value of x is and then the dollar symbol and then the uh name of your variable which is X right and press enter and what it prints the value of x is 10 which is the value we have assigned to our variable right so in this way you can declare a variable and uh you know Echo its value using Echo and these two things are very uh important whenever you are using scripting right and that we will see in the next video now there are some options uh you can use with Echo so for example when uh for example you want to escape something then what you can do so for example I will just use Echo and then I will use minus E flag for escape and then I will use single quotes here and for example I will say some text so some and I will just provide this for example back slash and then the next uh word for example text okay and this will be escaped because we are using uh minus E here and let's see what happens so once we press enter it gives the tab between the text so one thing uh worth noting here is whenever you uh will give this flag called called minus E it will enable interpretation of backs slash as an escape sequence and then you can use uh different kind of uh sequence something like for example backspace or you can use new line you know escape sequence or you can use tabs as we have seen that it haven't printed sum and then text it has printed sum and then e XT because back SLT is for tab in for horizontal tab to be more precise in uh uh you know in bash scripting right so whenever you want to uh use uh you know back slashes or escape sequence you can use minus E as a flag right so let's see some other examples of uh using this so I will just Echo it once again and this time what I'm going to do is I will use back sln and then some text something like this and press enter and you can see it prints the you know text in the new line so you can see some is in the first line and text in the new line after the space right or you can do something like this without space and press enter and you can see both are printed in the next line and uh there are some more you know sequences for example back SLB or other sequences something like back SL a which is for alert or some other sequences which you can uh you know uh search for using man Man pages and you will be good to go hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will see how we can use file permissions in Linux and especially we are going to talk about symbolic permissions uh in Linux so let's get started first of all what I'm going to do is I will just change the directory to the desktop and you can see here I have a file which uh has a name file itself right so what I want to do is I want to uh list the long listing of this file so I will just do LS minus and and press enter and maybe in the previous video also I have uh you know just uh touched this topic that these uh thing here is the permission for the file now uh the first Dash on the left hand side you can see Dash or minus whatever you call it is the type of file for example if it's uh normal Dash it means it's a normal file if it would be uh D then it would be a directory or if uh it would be a character special file then it would be a c or it would if it would be um B then it would be a binary uh special file right now the next three uh you know group next three dash group or whatever next threee element uh you can say here is for the owner of the file right and then next threee is for the group of uh the file so group uh contains these rights and the last three uh is for the permission is the permission for everybody else right now the next you can see here is one and one stands for the symbolic links of the file so right now we have only one link right now now uh the next is this name which is for the you know owner of the file so the name of the owner of the file is this one right next is the name of the group of the file so this is for the group now next is this one and uh this is for the size of the file so right now our file size is 22 and then next is the date on which it's created and then the file name right so these are uh the permissions so basically we are interested this area which is uh the user group and other permissions and the name of uh the user and the group right so let's uh try to uh change the permission of this file so there is a utility called CH mod which stands for change mod to change the permission of the file so for example I want to provide the permission to the user also but first of all what kind of permission we have so for this file for example we have three main kind of uh permission one is read other is write and third one is executable right so R stands for read W stands for write and X stands for executable so read write executable permission for a file okay so for example what I want to do is I want to change the permission of uh others to execute this file so I want to allow the other persons to execute this file for example right so what I can do is I will just use CH mod which is the utility to change the permission of the file and then I can give the first of all uh name of others so for example o stands for others here and then plus or minus plus is for adding the permission and minus is for substracting the permission and then the permission itself so I want to Grant the executable permission to the other user so o stands for other here plus is for adding the permission and X for example is the permission so executable permission right and then the name of the file itself so file right and I will press enter here so permission is changed and once again when we do LS minus L you can see here earlier the others doesn't have the executable permission but now the others have executable permissions right next what we can do here is once again again we can change the permission of others to write also so we can do W here and uh then press enter and once again we will do the long listing and you can see the others can write and execute and uh the read permission they already had so they can now read write and executable now it's not necessary that you want to do this for in the normal circumstances but this is just for the exam example we want to I want to show you right so for example now I want to change the permission of the group and group already have the permission read and write right so I want to change it to read write executable so for the group once again we will use CH mod and then for Group G and then plus X so we will change the permission of the group and the name of the file and and just press enter and then long listing once again and you can see now the group can also read write and executive now for example once again I want to uh you know reduce the permission of uh the group once again so right now group can read write and execute and I want to make it just to read so just allow the group to only read the file so once again CH mod and as I told you g is for group and minus is for reducing the permission right so we want to remove for example write and executable right and then the name of the file and once again when I press enter and once again when I do long listing now you can see group can only read because we have substracted the you know permission of the group to write and execute using this notation okay now uh for example I want to give the permission to uh every everybody so for example I want to give the user of uh this file or owner of this file to read write and execute and also I want to give uh the give the group of this uh file to read write and execute so what I can do is here one more no notation I can use which is for example CH mod and then the user is for uh the user and for example I want to also change the group so you can change the permission for uh multiple uh you know group or user for example you want to change it for user also and for the group also so you can use uh this combination also right and you can ALS Al use equal to so which uh is for granting the permission also so this notation is also used to you know changing the permission and I want to make it uh read write and execute so I will just do read write execute rwx for uh read write execute okay so this will change the permission of user or owner of this file and the group of this file to read write and execute and the name of the file don't forget right and then press enter and once again we will do the long listing and now we can see everybody have read write and execute permissions right now for example I want to uh remove the permission or change the permission to everybody right so for example I want to remove uh the permission for the user and the group and uh the others so that they cannot even read write or execute right so once again I will do CH mod and what you can do is you can do user group and uh the other you can do the notation something like this and then you can for example some do something like minus read write and execute something like this okay and this will uh remove the permission or otherwise you can just do use you can just use a for all and then you can do minus and then do read write and execute right so a stands for all so it stands for user or owner group and others so you are basically want to subtract all the permission from all the users and you can press enter before that we need to give the name of the file press enter and then use long listing and now we can see nobody has the permission to you know change or rewrite or execute this file right now for example I want to give everybody their permission back so I want to give the same status I have in the you know uh starting so I want to give the owner of this file read and write group also read and write and the uh others just the read permission so what I can do is I can do CH mod and for the user I want to add once again the permission read and write okay and then you can use the comma to give the other others the permission for example group and once again we want to give the permission to the group read and right or you can do this thing something like read and write using equal tools both are uh the same commands and uh then for the others we want to just give the read permission something like this and the name of the file okay so use comma in order to you know separate the permission or if you want to uh change the multiple uh permission of the multiple users right and press enter and it gives some uh problem let's see what the the problem is yeah so the problem is uh CH mod is not spelled correctly so I must correct it so I will remove this a and now the command is normal right so I will press enter and now once again I will do the long listing and now once again we have the normal permission of the file so for owner we have read write group we have read write and for other we have read permission so this is how you can change the permission of a file using symbolic notation so this uh RW or X is called a symbolic notation hello guys welcome to the next video on Linux command line tutol for beginners in the last video I've shown you how you can change the permissions of the file using CH mod in Linux now in this video I'm going to show you how we can change the permissions of the directories in uh Linux using CH mod and what are the consequences of changing the directory permissions so let's get started as you can see here I have a directory called di on my desktop so I will change my directory to uh desktop first of all and I will do the long listing of this directory so here I will just use l and D because it's a directory and then the directory name which is is di right and press enter and in here you can see the file permissions now in the last video as I have shown you this first letter shows the type of file or directory so because it's a directory it's showing D here next three uh values here is the permissions of the user and next three is the permission of the group and the next three uh is the permissions of uh everyone else right now let's change the permission of uh this directory for the user so that uh we will uh you know reduce the right capability of the user for example I will just write CH mod here and then I will do user minus W which means we are uh you know subtracting the right permission from the user and the directory name okay so just press enter and then I will do the long listing once again and now we can see the user doesn't have the right permission so now you can see there is a lock symbol appears on the directory right so because it doesn't have the right permission that's why this log symbol appears so let's say we want to Alis the content of the directory so I will just do LISD for example it shows that this D directory has three files right and let's say I will just change to the directory so I will go inside the directory and I will do LS here and in here for example I want to create a new file for example file 4 so what I will do is I will just use a touch command and I will just write file four here so I want to create a fourth file here and when I press enter you can see it says permission denied because we have uh you know taken the right permissions from the user so he cannot create any new file inside the directory right now for example I will uh just go out one step back One Directory back to the desktop and now I will just uh once again give the permissions to the user so write permission I'm just providing so user plus uh w which once again will provide the right permission to the user and then this time I want to take the read permission from the user okay so I have uh added the right permission once again and I want to subtract the read permission from the user so let's see what happens when we do this so just write CH mod U minus r which will subtract the uh read permission from the user for the directory and let's do the long listing here just do this long listing and you can see the read permission is uh taken from the user now right now I will once again go to the directory inside the directory for example so I will do CDD and we can go inside the directory but when we do LS here you see it says permission Deli so we cannot read the content of the directory we can go inside the directory and we know that uh this directory cont contains three files but because we have taken the read permissions from the user we cannot read the content of the directory okay so this is when we change or uh when we take the read permissions from the user so once again I will provide the read permissions to the user so CH mod u+r which will once again give the read permission to the user for this directory and uh it says uh this directory okay first of all I need to go to desktop so change directory to the desktop and then provide this command okay and once again I will do long listing of this uh directory so LS minus LD directory and now we have the read permission also for the user now this time what I want to do is let's take the execute permissions from the user for example so I will just do CH mod then user minus X for the directory right and press enter and once again I will do the long listing so LS minus uh LD for the directory and you can see the execute permissions from the user is taken right so now what I will do once again I will uh try to uh go inside the direct which is dir and it says permission denied right so I cannot execute uh anything with this directory so let's do LS with directory and press enter and this also gives us uh the permission denied right so it uh shows the content of the file but access to this files is not possible right so you cannot even go inside the directory so you know you cannot access the content of the file so for example I I will do LS minus L long listing of uh the directory and you can see everywhere it shows the question mark but it shows the names of the file but the permissions uh it's not showing because you don't have the permission to see even the permissions of uh the files inside this directory because we have taken the execute permissions from from this directory so this is how uh you can change the permissions of the directory and this is how the changing of the permissions of the directory behaves uh so this is the consequences so if you uh you know remove the execute permissions uh you cannot you know change the files and uh you cannot even view the permissions of the file hello guys welcome to the next video on Linux command line tutorial for beginners in the last two videos we have discussed how we can use symbolic permissions in Linux now in this video we will discuss about octal or numerical permissions with the files in Linux so let's get started first of all how uh we can uh you know use or what is octal permission so octal permission is a numerical representation of the file permission for example so let me just change the directory to desktop first of all and then we will create a file using touch for example so I will just say file.txt and our file will be created right and then when we list the permissions of this file so what I can do I can just do LSUS l for the file and then when I do this I can see uh the permissions and this we have seen in the last uh video so these three uh things is for the users other three are for the groups and other three are for the uh you know others right and then we have these uh three representation which is read permission write permission and the execute permission so let me uh simplify the you know n numerical or octal permissions using this concept so what I'm going to do is I will just open a normal text file and let's say this is our users and groups and others like these three uh you know groups users groups and others right and each have its uh per so each have read write and uh the third command which is uh execute right so I'll write read and then it has write and for example execute in the same way group also has read and then the right this will be right and the execute and other also have read and write and execute right now octal representation can be done something like this so for example if we are uh you know using binary notation this is one this is one and this is one right and same is for here so this is one this is one and this is one and this is one this is one and this is one for example right now if we want to provide the permission for a file for the user for example that this will be uh you know users have all the three permission read write and execute permission so let's start from here so what we uh do here so this is equal to one in binary for example and then this is equal to two because uh you can uh you know in binary you can just double the when you go left right and then this is equal to four right and in uh you know when you add these three numbers the addition will be 4 + 2 + 1 which is equal to 7 so if you want to allow the user to read write and execute a file then you need to give the number notation 7 and this is calculated like this so you just need to for example start from the right and then uh write here one and then make a double of it two and four for example and then if uh you want to uh you know give the right here do it one otherwise if you want don't want to give the permission then do it zero here so for the group for example I just want to give the group only a read and execute permission so I will just do write is equal to zero okay so what will be the you know numerical notation for this we will start from the right hand side so the value is one here because we want the execute permission the value will be zero here because uh we don't want the right permission right so here will be zero instead of two and here the value will be four because once again we want the permission here and the addition of these value will be uh for example 4 + 1 is equal to 5 right so whenever you want to give the only read and execute permission then you just need to give the numerical notation of five here right and same you can do here for example you want to just give the read and write permission to the others then what we can do here we can uh uh just give zero here and then we can give one here and give one here again right and then this notation will be for example zero this notation will be here so let's write zero here for example 0o and then one and then one so let me align everything because these things are not aligned properly so something like this so uh this will be two according to this notation right and this will be four according to our notation here right and the addition of uh these value will be six right and uh so whenever you want to give the read and write permission the notation will be six so there is a table for these notation if you want to calculate it's really easy I have shown you uh this is how you can calculate the value and when you uh use these uh number notations frequently you get used to them and then you don't even need to remember them uh I mean you don't even need to calculate them you can remember them automatically so I have a table for um the values so you can see whenever you don't want to give any permission you just give zero if you want to give uh execute permission you give one you if you want to give write permission you give two and then uh write and execute is three read is uh four read and execute is five read and write is six and read write execute is seven right so this is a simple table and this is how uh we can calculate these value right so you can uh you know calc Cal at all the values uh using this approach now for example I want to change the permission of uh this file using number notation then what I can do is I can just do CH mod and then I can uh for example give zero here for the user zero means uh no permission right so for the user we are not providing no permission for the group also for example we will provide no permission and for the others also we will provide no permission for example for this file and press enter and the command is successful and let's uh give the long listing of uh this file so now nobody have any permission for this file right now for example we want to uh allow the user to Red write and execute right and for uh the group we just want to give the permission read and execute which is five right so you can just do something like this so just write CH mod and for the user we want to give read write and execute and read write and execute the number notation is seven as you can see here right and for the group we want to give five which is read and execute and for example others also we want to give five which is read and execute and the file name and press enter once again do the long listing and now you can see the user have read write and execute the others and the group have read and execute uh permissions okay hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will see how we can create a script in Linux and uh we we will also see how we can execute our script and we will learn how we can write for example our first hello world script now scripting in general is really uh you know deep concept and uh I can make uh separate tutorial about scripting itself right so in this uh video I just want to give you the brief introduction about scripting and how you can use scripting so that you can build on that knowledge and you can you know learn about scripting in different video or different uh you know so from this different Source right so first of all what is a script a script is a text file that contains a sequence of command for a Linux based operating system so let's see how we can create a script so I'm going to open our terminal first of all and in this terminal first of all let's say we want to create a script on the desktop so I will just change the uh directly to the desktop and then I will use our Nano editor for creating a script so for creating a script you just need to write Nano and then the script name so for example I will name my script as uh my script itself now it's enough to give this uh name uh my script here but it's a good practice to give an extension of sh here for uh you know just showing the user that it's a script okay so I'm just adding the extension here but if you don't add this extension it'll work fine so it's uh not going to be different if you don't add this extension now first of all uh we need to know where our bash is located on our system so what I'm going to do is before creating a file or uh let's just create create a file and then uh we are going to uh see further so Nano and then the name of the script and press enter and it's going to open this uh kind of Editor to you right now first uh line which you write in a script is this uh line which you need to use or it's a good practice uh to use this so first is you need to write hash and then this exclamation mark which is called hashbang and then the location of your bash now what I'm going to do is I'm going to open uh different terminal and then we will see the location of our bash uh where is our bash right now what we are going to do is just do which and then just write bash here okay and then press enter and it gives this answer so this which command we are going to learn later what is this Wich command and what it does is but just open a new terminal and just write which bash and it's going to give you the location where bash is located so this is the location so just uh take this location and after this hashbang which we have written here you need to write this location so forward SL bin slash bash okay which is this this location here okay so we just needed to know the location and whatever the location is you just need to write here after this hashbang okay and now you can close the other terminal so this tells uh the you know interpreter that uh this is a script which is using bash and then as I have told you the script is a sequence of commands so for example I can uh normally write LS for a listing for example let's do long listing with this script first of all right so just hashbang and then the long listing which is which you write on the terminal it will list out the you know files or directory on your terminal right now in order to save it you just need to write uh crol o and press enter which will save it and then controll X to exit so you can see here our script is created now in order to execute a script first of all let's see when we execute it what happens so normally you need to give the permission execute permission to your script but if you do it without giving the permission let's see what happens so to execute a script you just need to write dot for Slash and then the name of your script something like uh this so my script right so just write my script here Dosh okay and then when you execute it it says permission denied because your script doesn't have the execute permission when you create it okay so in order to give the execute permission you need to just give the execute permission to it so you can just write um CH mod plus X for uh giving the execute permission to user group and uh the others and then your script name for example okay and then press enter and now your script has the execute permission right so in the last three video we have been learning how to give the permission to the script and that's why I'm I was uh you know creating those video to uh you know let you know how you can change the permission of a file now this will uh change the permission of a file to the execute so you can uh execute uh this script by giving this permission now once again when we do uh dot forward slash and then the script name and press enter what it does is it's going to list out the long listing of your desktop right so you can see let me just make it a little bit bigger and once again uh execute it again and you can see it has done the long listing of uh on the desktop so you can see we have three files on the desktop and each have their own permission so first is the directory other is the file. text and third one is the myscript dosh which have all the execute permission here okay so this is a simple for example hello world script you can write us let's uh modify our script and let's see what else we can do so single command we can um you know you can ask why we need script for executing a single command so let's go to the script again so I will just write Nano and then my script and this is a very basic example I have given you but with this uh scripting you can execute a you know sequence of command not only one command but for example let's do for example I will do LS and then I'll Echo something and let's Echo hello world here okay and then I will just save it CR o and press enter and then CR X and once again when I execute this script it first of all list out uh the contents of the directory and then it prints the hello world which is using the echo Command right now I have shown you in the Echo command tutorial that we can also create a variable in U you know for using it in the Echo so for example I will create a variable let's say it's called Uh string is equal to and I will assign something to it let's say hello world itself something like this okay and uh with Echo you can uh just call this variable by using this dollar symbol so just write something like this okay so string and using uh the dollar symbol before the variable name you can Echo it okay so I will just save it and press enter execute I will exit it and then once again execute the command and it's doing the same so you can see here in this script we are performing the you know series of command and this is what scripting is so you can write uh you know sequence of uh you know command here and execute it and scripting is much advanced than this so it has a functions and it has loops and if conditions so uh you know it's a different topic to learn scripting but I wanted to know uh let you know that uh this kind of scripting exists so you can build on this knowledge and learn about scripting because it's so really uh you know important if you uh want to pursue your uh career in Linux for example hello guys welcome to the next video on uh Linux command line tutorial for beginners in this video I'm going to show you how we can use which command and what is command in Linux so let's see first of all what is which command and how we can use it the which command is used to uh you know return the path name of a file or a command which we use with this Wich command so let's see how we can use it so to use the which command you just need to write which and the command name so for example Alis okay and this will give you so for example I will press enter and this will give me the location of this LS command or wherever this LS executable is located right for example in the last video I wanted to know the path location of The Bash so I have done something like uh this Wich bash and it has given this location to us right now this uh witch command uh will help you whenever you uh will be writing much of the bash scripting and uh uh in bash scripting it's a good practice to uh you know use the full path of the command name so instead of using LS in bash scripting for example so let's open our script first of all Nano which we have created in the last video so I'm just going to open the first of all cd2 desktop and then Nano to my script which we have created in the last video right so in Linux it's in best scripting especially it's a good practice to use the location for location for example bin sl/ LS right which is the full location of uh this LS command and then I will just um you know exit out of it and whenever I uh execute this uh my script for once again it'll give me the same result so sometimes whenever you use uh your script in different uh operating system some uh Rec niiz your LS command some wants uh you to give the full path of the for example any command which you use so this is the full command so this is where the which command will be helpful to you to know the location of any for example command for example I want to know the location of uh let's say Firefox and press enter and you can see it's located here so user bin Firefox right so for example I want to know the location of cat so bin cat right so in this way you can uh know the location of uh any uh you know command using this witch command now what is a what is command so let's see how we can use what is command so I'm going to clear the terminal and then this time we are going to use the what is command so what is command is going to display the short manual page description so as I have been uh you know telling you to use Man pages for example man LS and I will just uh press enter it gives this man page which gives the in information about uh you know LS what it does and essentially uh this what is command is going to uh return you short description of this LS command which is there in the main page for example this uh description so let's see how we can uh use this you know what is command so just write what is something like this and then LS and press enter and you can see it gives the short description of this LS command which is there in the M Pages itself so if you wanted to know what this command is doing so you can just do uh what is LS or or any command so let's say I want to do what is uh fir Fox for example and it gives a free and open Source web browser for mod Silla right and uh this command which we haven't seen for example graph uh we will see it in the later video what is it but let's see what is it so it is uh used to print line matching a pattern right and let's say what is a cat command and it's a concatenation so it is used to concatenation files and print on the standard output so what is command you can use to display a short description of a command which is uh present in the Man pages also so this is how you can use which and what is command in Linux hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will learn how to use user add command to create users in Linux so to create a user we can use a command called user add and with this command we use some flags and the user name to create a user so let's see how we can create a user using this command so you just need to type this command which is user add and then the name of the user the name of the user can be anything for example Mark or user one or anything which you want so this is the username which you want to give so I want to give the username for example Mark okay and then the second uh flag that you can use is minus m flag right and what this flag is going to uh do is it's going to create a default home directory for this user right so we are going to see once this command is executed this that the home directory with this name will be created whenever we will uh see the home directories right now the next command is minus S command and this is the command for the default uh shell okay so this minus S command is used for uh allowing the user to use the shell whatever we provide after this flag so generally we give the bash so bin slash bash here so something like this okay so this is most commonly used uh you know shell so I'm going to use this now the next command is uh minus uh G this is next flag I beg your pardon and this is the D default user flag and after this after space after this flag whatever User Group you type the user will be assigned that group so the default group is uh users and I would recommend uh that you always use uh with minus G flag uh this users group uh which is uh correct to use there is also some more flags for example minus see for providing uh the commments you can provide any commments here for this user so for example I want to give some comment my comment for example right so any comment can be given to the user using this flag minus C okay now there are much more Flags uh you can use for example minus G for uh giving the user defined group or assigning the user defined Group which we are not going to use but uh just uh use man command on uh with this uh user ad command and you will be able to see what are the you know Flags which you can use with this user ad command and because we are creating the user we need to create user with our root you know access so you just need to write pseudo in front of uh this command in order to create this user because you don't want to uh you know allow anybody to create the user the root user can you know uh create the user right so this is uh the command P sudo and then the user add command then the name of the user then uh the flag am is used for creating the default home directory as is for default shell minus G is for the default group minus C is for the command and then you can press the enter key which is going to ask for your password and then press uh enter once again which is going to create this user now just do LS and then forward slome and you can see a new user here is created with the name Mark which is this name so this directory is created in our home folder for the new user right but you may ask that we haven't provided any password to this user so whenever this user wants to login he will log in with the username and the password but we haven't provided any password here so this password can be uh you know given to the user with the command called pass WD okay not WB but WD okay so when you give this command as it is then it it will allow you to change the you know password for the you root user but when you use this command with uh the argument for example I will use this uh command pass WD with uh the username Mark then this will allow me to change the password of uh the mark right and then you also need to use Pudo command because uh you may have to give the root acces in order to change the password of the user right so whenever you use this like this then it will allow you to change your password and whenever you give the name of the user then it will allow you to change the password of the user okay so press enter and now it says enter the new password so give any password whichever you want to give to the user for example I will give a simple password here and I will press enter and then I need to retype this password so I will retype this password and press enter and you can see it says password updated successfully so now for the new user you can give this name and whatever password you have assigned to this user to the new user and he will be able to log in with this username and password okay so this is how you can create a user in Linux in the next video video we will see how we can uh remove a user in Linux and I will recommend that you can create uh you know four or five users so we can play with these users okay so with the same command you can create multiple users and uh these users we can use in the next video to remove them hello guys welcome to the next video on Linux command line tutorial for beginners in the last video we have seen how to create users in Linux using command line now in this video I'm going to show you how you can remove users using uh command line terminal so first of all let's see whatever users we have so I'm going to just give LS and then forward SL home and you can see here we have three users one is Mark one is my username and other is Tom so in order to remove a user what we do is we use a command called user Dell okay so this is the command to delete users and then whatever name you will give for example I want to remove this user called Mark so I will just use the user name Mark right and then you need to use root permission so you uh use pseudo before this command so just write pseudo user Dell command and then the username you want to delete right and I'm going to press enter here and I'm going to give my password and press enter and once again I will see if the user is deleted or not so I will just Alis and forward slome now you will observe even if you have given this command user Dell which is used to delete the user the home directory for this user is not deleted right so what this command is doing is it's going to delete the username the password and other data for the user but it's not going to delete the home directory for the user and it's also important sometime because for example uh employee resigns from a company who have account on a Linux operating system for example of that company and then he resigns and uh for example administrator wants to delete his username but wants to keep his data whatever work he has done right so this command uh is used to delete the user so user is deleted but the data home directory is still here right so this command is used to delete the user but the home directory will not be deleted but it's also really easy to remove the home directory as well as the user and for this you just need to use Pudo and then the command user Dell and also the name of the user so for example this time we want to remove the user called Tom so I'm going to just write the name Tom and you need to use the flag minus r with this in order to remove the home directory also right so this home directory will also be deleted if you use this minus r flag with this command and I'm going to to press enter and you can see it uh shows uh that Tom maale spool not found so we haven't even created the any mail spool for this uh user so this warning is okay it's uh you know not important in our case right and let's go to the home directory once again and let's see what's there and you can see home directory is also deleted and the username and you know all the data for the user Tom is deleted so if you want to delete the user and also the home directory of the user then use minus r flag with user Dell command otherwise use uh user Dell with the username right now for example we want to remove this home directory for the user how we can do it so it's also really uh simple but be careful with this command so just write P sudo RM so remember we have learned remove command or RM Command right so we will use this command so RM minus r and then forward slome and forward slash the username right but I once again tell you that uh you need to be careful with this command because it's going to remove all the data of uh this user or otherwise if you type uh you know wrong then it can remove the data from the other user also so be careful with this Command right and press enter once again we will uh list all the users and now this is also removed right so in this way you can remove user using Linux command line terminal hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will learn about the basics of group management using uh Linux terminal so I'm going to show you a bunch of commands and First Command I'm going to show you is a command called uh groups command and this command will allow you to see which are the groups your current user is connected to so my current user I'm loging logged in with uh this programming knowledge and these are the groups my current user is uh you know connected to okay so these are the groups my current user is a member of right now the next command I'm going to show you is uh to list all the groups which are available on your uh operating system so this command uh is uh CAD so this is a directory called uh Etc and in this Etc directory there is a file called groups and uh all the groups are listed there so we are going to just write Etc and then just write uh group here and then press enter and it's going to show you all the groups which are there on your systems right and uh you can see there is a group called Jenkins and uh the last you can see uh the user which is connected to the group so for example my user is connected to uh this group for example or the user from which I'm logged in is connected to uh LP admin also right so this is the command for listing all the groups available in your Linux operating system right now the next command is to add the new group to this list of groups so these groups are added to this file uh in uh you know uh date wise order so whatever group you will add now it will be added to the bottom of uh this file okay so let's add a group so I'm going to write pseudo and then write a command called group AD so just write group add and then the name of the group so for example I want to add a group called Java here I'm going to to press enter and I'm going to give my password so this Java group will be added to the file in the ETC group okay so just cat uh this once again and you can see this uh group is added to your uh you know group list right in the same way I can add multiple groups for example this time I want to add CPP group and then I want to add python group and for example I want to add H database group right and once again I will see all these group using this cat Etc for/ group command and you can see all these groups are added to your group list right now the next command is to delete these groups how we can delete these groups okay so for example I want to delete the group called CPP then I can just write pseudo for giving the root access and then we are just going to write group Dell for deleting the group and the name of the groups for example CPP okay so press enter and then list the groups again and now you can see this group called CPP is deleted now the next command I'm going to show you here is how you can can assign a user to a particular group so for example I want to assign uh the user for example this user programming knowledge to the database group how can I add uh this user to uh this datab base group so for this also we will write uh pseudo first of all and then just write g p WD right and then write minus a flag for adding the group and minus D flag for removing from the group removing user from the group right first of all we will add the user to the group so minus a flag for adding the user and then the username which you want to add to the group so programming knowledge and then the next is the name of the group you want to add it to so this is the name of the group you want to add and this is the command Okay so Pudo G pass WD minus a for adding the group then the username and then the group name and press enter and then you can see we can see the message adding user this to the group this right and then we can list the group once again and you can see this user is now the member of the database group right now if you want to remove this user you can just write instead of a flag you can use D flag for removing the user from the group and press enter and you can see this message removing user Pro programming Knowledge from group database and we can verify it by just uh you know printing the content of this file again and you can see the user programming knowledge is no longer the member of database group right so in this way you can uh use uh group management and these are some of the command which you can use for group management in your Linux operating system hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will talk about bashrc file in Linux and how we can use it and what is Bash RC file so first of all what is Bash RC file The Bash RC file is a script that is executed whenever a new terminal session is started in interactive mode right so first of all for example you uh open your terminal and uh just check whether you are in your home directory or Not by default you are already in Home Direct whenever you open your terminal right now in here you can just write LS minus a for uh the listing and you will be able to see there is a file called bashrc and this is the file which is responsible whenever you open a new terminal this file is executed this is a kind of a script which is executed first whenever you open a new terminal session right so let's go inside this bashrc file so you can use Nano to display the content of this bashrc file so just write uh Nano do bashrc and you can go inside this file and you can see the content of this file like this or I'm going to just exit by just pressing control X or you can use the command called gedit so just write G edit and then do bashrc right this is also a kind of guy editor which is used uh as a editor for your you know text file or any other file right so just write gedit and do bashrc and press enter and this is going to open this file in this kind of guy editor right so in some operating system I'm talking about the Linux operating systems this bash RC file is already there and some scripts are already there inside this bash RC file so for example I'm using this ub2 operating system and it already have a bash RC file and it already have this kind of script inside this bash RC file right now in some other kind of Linux operating system a few days ago I was using for example Linux Mint it doesn't have this bash RC file right so any way if it exist it's okay and if it doesn't exist you can just create one for you using this get gedit command or n no command it doesn't matter right so now what we were talking is that this script is executed whenever you open a new terminal right so so whatever you add to the script it will be executed first whenever you open a new terminal session right so just go at the end of uh this file and if you create a new. bashrc file it's okay just uh go at the end or if you have a new just write there just write for example Echo and then in double quotes this is a test right so just write this uh command here you already know what is Echo Command right and then just close uh this B RC file okay and now we are going to open a new terminal session and this terminal session I can open from here just uh go to file and then you can just say open tab or you can just uh press control shift T to open the new tab you can see the new tab is open so this is first tab we were in and this is a new tab we have created and as soon as we have created this new tab this text we have written in the bash RC file is uh executed right so this is a test and this was uh we have written a echo command for this right so using this we know that this bash RC file is called first because it's uh executing our Echo command also and then uh your uh you know your uh normal terminal operation you can do right once again we can edit uh the BC content so I'm going to just go to the get it command so get gedit do bashrc and this time instead of echoing something I can uh use some aliases for example right so for example what I can do here is is instead of echoing I can do a LS so just write LS LS is equal to for example we want to do the long listing and the color also so LS minus color is equal to Auto and then we will say minus uh L also we want to do the long listing also right and I will save the content and I will close this and once again I can just uh close this tab and open the new tab this time I will go here and then click open Tab and now when I do LS and press enter is going to do the long listing with the color options for me right so in this way you can customize your bash RC file uh mostly we use this bash RC file for a number of things for example if you want to set up the environment variables uh whenever for example you install Java you need to set up the Java home environment variable and this can be done using this bash RC file right or whenever you want to use git and the you want to see uh which uh you know repository you have checked in or you have cloned you can write a script for this and then you uh will be able to see in the terminal itself uh which uh you know version or which um you know git script uh G git repository you have right so for this bashrc file is really useful so I hope you understood the basic concept of bashrc file hello guys welcome to the next video on Linux command line tutorial for beginners in this video I'm going to show you a bunch of commands which you can use to view the free resources and use resources in your Linux operating system so let's get started the first command which I'm going to show you is the DF command and this DF command reports the amount of available disk space being used by your file system okay so for example I'm in my home folder right now and here I just give this DF command and uh now it gives me uh this uh kind of output right so I can see uh that my root partition have uh this much amount of used memory and this much amount of available memory but what are these numbers these numbers uh doesn't have any units on it and we cannot you know easily understand what amount of uh you know disk space is being used and what amount of dis space is available so for make it human readable there is a flag with this command so just write DF once again and there is a flag called H here and this stands for human readable right so when you give this uh Dash flag with this DF command and press enter you will be able to see the human readable form of the output so now I can say that 12 GB is used on my system and 5 GB is available and all these are other uh you know uh root systems which I'm not you know bothered about right now right so important is my this one this file uh root file system right so let's see the next command now so I'm going to clear the terminal so the next command I'm going to show you is uh the DU command and this du command is used to estimate and display the disk space used by files okay so for example right now in I'm in my home folder and uh I want to estimate this this space used in uh this uh folder called download so I will just go to the download uh folder so just write download CD download and then I can use this command so just write du and then press enter so it's going to uh you know give you all this output and at the last it's going to give you the amount of space used by this folder right now this is also not very human readable so we can just write du and the flag H for for viewing the human readable uh you know form so just give du minus H and then press enter once again and now I can see that uh this folder is using 416 mbes of uh dis space right I can do the same in my home folder but it has lots and lots of files so these files has to be you know it prints these uh files first and then give gives you the memory dis space usage here right so in my home folder there are lots and lots of files and I just want to see this output not all the output related to files so for that I can use du command and then I can use the S command for summary so this s flag is for summary and then I can also use the H for human reading right so du minus sh and then press enter and then it's going to calculate uh the memory and in few seconds you are going to see all the memory used here so you can see my home directory is using 2.5 GB okay and now uh you can see uh these uh you know warnings kind of things and it says permission denied permission denied and permission denied because it's possible that I don't have permission to access these files right so I can use with this command du minus sh I can use this command with sudo okay and then I can give my password and now it's going to give me the direct output without These Warnings okay so this du command will help you to estimate and display the disk space used by files now the Third third command which I'm going to show you is the free command okay and this free Command displays the total amount of free and used physical and swap memory in the system as well as the buffer used by the kernel okay so we can uh just use uh free here and then press enter and then it's going to give you uh the used space here and then the free space here and the cached space which is uh used by your kernel right but important in your case is uh this line of code which is uh this one and this one so this much amount of uh you know uh memory is used by your system and this is uh the amount of memory which is free in your system but this is also not human readable so there are from some Flags which you can use with this free uh command and these flags are for example minus B for byte minus k for kilobyte minus M for Megabyte minus G for gigabyte and minus Tera for terabyte right so minus ter Tera for terabyte so we are going to just see uh the values in megabyte first and then we are going to see the values in gigabytes okay so minus M for Megabyte with this free space and then when you give this command now I can see in a more better way that around 1.1 GB is used and around 8 GB is you know free and for example I can use G flag and now it gives me uh this um output which is uh one is used and and uh zero is uh you know free because uh it's not taking the in consideration the points decimal points right so it's better to use the M command for Megabyte and you can read it easily here okay so these are some of the command which you can use to view the memory usage in your system Let's uh recap these commands once again so I will uh clear the terminal first of all and the First Command was DF Command right and this DF command was used to report the amount of available disc space being used by your file system right and you can use minus H for with it to uh you know view the human and readable form then the next was the DU command Command right so this du command will help you to estimate and display the disk space used by the files right and with this you can use uh the S flag also to view the summary right and you can use even the folder name after these flags you can for example you want to know the um dis space used by Etc folder you can even give the folder name here after these flags and then it's going to give you the you know disk space used by Etc folder and for these permission denied you can use this du command with pseudo so these warning will not be shown right then we have seen the free Command and this free Command is going to display the total amount of free and used physical and swap memory in the system right and then we can use uh some flags with it for example B for bite and K for kilobyte M for Megabyte G for uh uh gigabyte and Terra for you know terabyte and you can even use uh minus H for human readable form okay so once again I can uh do this and you can see now it gives uh these values in human readable forms and this is 1.1 GB and this is uh 864 megabytes okay so in this way you can view the memory in your system hello guys welcome to the next video on Linux command line tutorial for beginners in this video I'm going to show you how you can use watch command in Linux watch is an excellent command which can run scripts or command at a regular interval or repeatedly so for example I'm going to give you an example which I have taken in the last video and uh you have used this free command to know the resources used in our system right and if you use watch command so any command which you use with watch so I'm going to just write watch before this command then this command will be executed repeatedly if you use watch before uh any Command right so let's uh just press enter and you can see after every 2 seconds this command is going to be executed and you can see uh the resources used will be changed after 2 second you can see it's changed right so by default uh the command will be executed at an interval of 2 seconds right now if you want to make it faster we can do it just uh press contrl C to come out of this command so just press cons contrl C and you will come out of this command now for example we want to increase the frequency to execute this command you can use the flag n and then the number of seconds which you want to provide so earlier by default it was two for example I want to use 1 second interval so I can just write minus M Space 1 and it's going to be executed at an interval of one 1 second so I'm going to press enter once again and now it's uh you know refreshing at a 1 second interval okay now uh even I can uh you know increase this frequency in points also so what we can do is I'm going to press contrl C once again and instead of 1 second for example I want to uh execute this command at an interval of 4.5 second I can just do it by just writing 05 here and press enter and it's going to be executed at. 5 Second you can see every. 5 Second okay so this is how you can use watch command so you can use uh this watch command with any command or even with the script it's going to execute that script um repeatedly okay so in the last video we have also seen the DF command which is dis free Command right so we can also use uh this disk free Command you can just write DF and then press enter and it's going to uh you know execute this command repeatedly right now nothing is happening here because we are not downloading or uploading anything on our system or from our system for example if you download a big file you will be able to see the used memory and available memory changing so you can use it uh as a you know watch to watch uh what kind of memory is used or you can you know think of any command which can be used repeatedly and you can use uh this command with uh that command or a script okay hey guys welcome to the next video on Linux command line tutorial for beginners and in this video I'm going to show you how we can use head and tail commands in Linux so head and tail commands generally we can use with files and the head and tail are actually doing the opposite of each other so the head command can be used to Output the first part of uh the file and the tail command can be used to Output or print the tail part or last part of the file now generally by default whenever you use head or tail command they will print first 10 lines using head command or last 10 line using tail commands Okay so let's uh see how we can use a head and tail command so what I'm going to use do is I'm going to go to the VAR SL log uh directory of my system where lots and lots of log files are there okay so I'm going to do LS and I can see see so many logs files are there right and I want to use the head and tail command to see uh the content of these files right so for example I will use head command and then for example let's see which file we want to uh see so there will be a file called D message file DM SG and just use head with this file so this is a file and and you can use any uh other log file and uh this head file can be used in many ways but generally it's used with log files and other kind of files right so just write head and the name of the log file you want to see and then press enter and it's going to show you the first 10 lines of this text file okay and the tail command can be used to show the last 10 lines so when I use instead of head I use tail D message and then it's going to show the last 10 lines of this D message file okay so let me clear the terminal once again now for example I want to uh change the number of lines I want to see okay so this is also possible so for example I want to see just three uh lines uh using head command so I can use head and then then minus n and the number of line for example three I want to see first three lines and the name of your file so just write D message and press enter and it's going to show the first three lines and same you can do with the tail command so you can just write uh tail and then minus N3 and the name of the file it's going to show you the last three uh lines of the file okay basically you can also use uh this tail or head command like this so just write tail and then minus uh the number of line you want to show you don't even need to use uh the N flag with it so the same output will be there okay so this can be used in this way also now uh the other use of uh this uh head and tail command is using the flag F so I'm going to to once again clear the terminal and what I'm going to do is I'm going to just use the tail command for example and then with minus F flag and then the name of the file for example so I'm going to just uh use this file once again and press enter and what it's doing is it's printing the last end line but it's not you know going out of uh the terminal output right so it's hanging around and it's going to watch for this file and whenever this file changes then this output will also change so it's going to append the last uh line for example and it's going to show you the last 10 lines again okay so this F flag is for follow and it's going to uh show you the last 10 line and uh this uh kind of uh you know tail with f can be used whenever you are doing input and outputting using some uh you know input source or output source using serial or uh you know any other uh you know communication you are doing with your Linux operating system so whenever you want to see the output what's the output uh is on the tail of your file then you can use the app flag so it's going to show you appended lines of code here also okay now one more thing you can do with the head and tail commands is you can use multiple files with head and tail commands so for example I use head and then the name of the file first file I want to use is uh once again this file and the next file I want to use for example I can uh search for this file uh let's say you want to use this Kern log file okay so the first file second file and you can use multiple files to see uh the first 10 lines of these files so I'm going to just press enter and you can see first it has printed the first end line of D message file and then it has printed the 10 lines of uh this kernel log file Okay so this is how also you can use uh this command once again I'm going to clear the clear the terminal and once again I can use this command but with this flag which shows the number of lines and just press enter it's going to show you the first three line from the D message command and the first three line from the kernel log file okay so this is how you can use uh generally the head and tail commands in your Linux operating system I hope you enjoyed this video please R comment subscribe and bye for now hello guys in this video I'm going to show you how we can use find command in Linux now first of all what is find command find command is used to search for files in a directory hierarchy so for example I'm in my home folder I can just use pwt command to know this and uh in this folder I will just use LS to list all the files and the other things here right and for example I want to find some file here which I have made few days ago which I don't know in which folder is it right right now I know that this file is here but for example I don't know uh the file location and I just know that it's in the home folder of my uh you know operating system so I can use find for this so just use find and then the directory in which you want to find right so it can be a root directory it can be uh EC directory or any other directory in which you want to search this file in so right now I want to find this file in my home folder right and then comes the file name so you give the flag name here and then you give the file name which you want to search you can do something like this test.sh for example I want to find this uh file name uh or you can do the wild card with these file names so F first of all Let's uh you know give the full name of the file and press enter it's going to search in all the direct iies and uh all the files in this uh home directory and then it's going to search where is this file located and it has searched and I can see the location of this file in a second example you can use for example you just know that this file is called test but you don't know the extension of it so you can use do estx as of wild card and this means that whatever comes after test dot then it will it is going to search for all those files right so I'm going to press enter and it searched this file again right for example you just want to search for U txt extension the files which have txt extension so you can just give uh this estx do txt and press enter and you see we have seen bunch of uh you know result which have txt extension right you can see this txt ds. TST txt so every result which have a txt extension is going to be uh you know listed here now for example I want to search for this particular file file 1. text so I can do something like this I just want to uh you know write here file and one and I just want to you know just write estri here this means that whatever file name which will start from file one is going to be searched and listed in our result so press enter and you can see all these uh result have the file name file one okay so there is a directory also called file one there are uh you know files also in different directories with the same name so in this way you can search for the file in your uh whatever directory in which you want to search so for example I will clear the terminal for now and uh let's find some more things so for example I want to find uh in the root directory so this is going to start from the root and it's going to search the file everywhere else and uh then I'm going to give the name of the file so I will use this flag name and then I will give the name of the file so uh in the last video we were uh you know talking about the message file so I can give the name of this file uh here and then I can just press enter and it's going to search for this file but there is a problem here right and you may recognize by this permission denied warning that that uh it cannot search for this file because there are some directory which we don't have access to so we can use this uh command with the pseudo in front of it so I'm going to clear the terminal once again and I'm going to just write uh pseudo in front of this find command and then press enter and give my password and then it's going to search for this file so you can see this file is inside VAR for SL log and the file name but there are some other uh directory in which this file is also existing for example in bin folder also and then this uh folder location also and in this F folder location also okay so this is how you can use this find command but there are more things you can do with this find command so for example you have created a file and you just know that you have cre created this file a few days ago but you don't know the name of the file and you don't even know the location of the file so you can use this command called uh fine and then you can use uh the location so just give the location in which you want to uh search in and then give this flag called minus M time and then whatever you uh write after this for example minus one is going to look the files which are created uh one day ago till now okay so this can be Min 2 for 2 days 3 for 3 days and uh this can be plus also so you you you can uh you know know that from this time this will be created or something like this so it it can be a plus or you exactly know that this file is created exactly one day ago so you can give the uh one here instead of minus one okay so just give minus one and press uh enter and it's showing all these uh you know result to us so this is how also you can use this find command hello guys welcome to the next video on Linux command line tutorial for beginners in this video I'm going to show you how you can use WC command in Linux WC command or word count prints a count of new lines words and bytes for each input file so generally you can use WC command with a file and it's going to uh you know give you the number of uh lines in the file or number of words in the file or number of characters in the file so let's see how we can use it so you can see on my desktop I have that this test.txt file so I will just uh change the directory to the desktop and then I'm going to give the WC command here and then the name of the file which is test.txt and I will press enter and you can see it gives this kind of output now the first uh you know output here is one and this is the number of line in this file so I'm going to open this file and you can see there is only one line in this uh text file and this is uh due to this so this is the number of line Second here is six so six is the number of words here so I can count these words 1 2 3 4 5 6 so second is the number of words and then the third is the number of characters here so total number of character in this file is uh 42 that's why it's printing this and four fourth is the name of your file okay so this is the simplest use of uh this file you can use now you can also use for example let me uh increase the number of uh lines here so I'm going to paste for example five lines here right and I'm going to give the same command and you can see it gives right now five lines and then it gives the 30 uh word because uh 6 into 6 into 5 is uh 30 and then it gives the 210 characters right so this is basically how you can use it now you can use certain Flags uh in your WC command which will give you specifically what you want so for example you want to print only the number of bytes then you can just write a flag called WC minus C and this is going to print only the number of bytes or essentially the number of characters right and just print and just print the number of uh characters which is 210 here right similarly if you want uh to um you know count the number of lines you can just say minus L and then press press enter and gives you number of lines here right or you can uh use uh the W character or W uh you know flag here and it's going to give you the number of words okay and uh you can also use uh a flag called capital L and this capital L prints the length of the longest line for example I'm going to uh just give uh some more uh words here for example uh words words so this is essentially going to uh give you the length of this line because this is the longest line here right so we can just press enter and you can see it gives the number of uh characters in the longest line which is this one in our case okay so these are the flag you can use with WC command hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will see how we can use Cal command in Linux Now cal command can be used to display conventionally formatted calendar on your command line so let's see how we can use Cal command so to use Cal command you can just use Cal C A and then press enter and it's going to show you the calendar kind of uh you know output here right and uh the date of making this video is 4th January 2017 for example right so this is uh the Cal command which is going to show you the current month and the date and the year okay but there are some Flags which you can use with this scal command so the first flag I'm going to show you you can use with this command is actually it's not a flag but it's uh just a command uh you can just use ncal and then press enter and now you can see uh the output in little bit different format so earlier your uh week days are at the top but right now the week days are on the left hand side right so ncal command can be used toew view the week days on the left and the Cal command can be used to view the week days on the top okay so let me clear this terminal now the next flag which you can use with Cal command is the year so whatever year you want to see uh you can just enter the year number for example I want to see 2016 and then press enter and it's going to show all the months in 2016 year right in the format in form so from January to the December is going to show you all the you know calendar month here okay let me clear the terminal again and now the next command or next flag which you can use with this scal is for example you want to just view some month in a particular year so for example I want to see the February of 2014 for example so I can just give two for February February is the second month of the year if it's uh January you can write one March you can write three so for example for February I'm writing two okay and then the year in which I want to see the month so 2014 for example and press enter and then it's just going to show that month which you have entered here not the whole calendar okay so this is also how you can use the Cal command now for example you can uh you know give the for example Cal minus 3 and it's going to give you the current month previous month and the next month okay so just press enter and you can see the the current month is this one previous month and then the next month and by default the when you give Cal command by default this number is minus1 and when you give this it's going to show you the current current month hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will see how we can use date command in Linux the date command is used to print out or change the value of system time and date information so the date command is really simple you can just use date and it's going to display you the current date and time okay and when you use uh minus s flag with date so you can just use date minus s and with this minus s after this whatever date and time you will set in string as a string it will be set as a system time which is going to be set here as your system time and you will see that time in your system time okay for example uh I want to set a date something like this for example this date is uh 20th November 2003 1200 48 minutes uh like this okay so it's going to uh set the date to uh November 20 20 3 1248 p.m. right so in this way you can set the date but right now I'm not going to give this command because I don't want to change the date of my system but this is the flag you can use to set the date now uh there are some uh other flags which you can use with this date command to format the date in which way you want to see the date for example so I have a little list here I'm going to show you this list and these are the flags you can use with your date command and then you will be able to format your uh you know date so for example I want to display first of all I will write this plus symbol and then this uh modulus symbol and I can see uh here that small H is used for the month in the you know in the character format right so what I'm going to do is first of all I'm going to just use D for date of the month small D then modulus small H for the month abbreviation and then I'm going to use modulus y for year okay like this and then press enter and it shows me the date in this format so today at the time of making this video it's uh 4th January 2017 I can uh do more with this so for example I can uh just make it a string like this and then I can add for example this minus symbol in between the date a month and year it's going to format this date like this or I can do forward slash here instead of this so whatever way you want to show the date it's going to show the date in that format right and these are some of the flags you can use with the date command now uh date command is really you know vast command and you can you do lots and lots of thing with the date command so uh let's see the man page and let's see you know what else you can do with the uh date command so I'm going to just write man date and press enter and you can see there are so many flags for example this minus file for file flag and R for reference and you can see s for setting the time as a string and you can see all these uh you know small formats you you can see are listed here so H is same as B and uh you can see hours or you will be able to see y also for year so you can see here and capital Y for here so just go through this man page and uh you know see how you can use this uh date command because it's a really uh you know vast command and in one video it's will be not possible to You Know cover all the flags uh you know with this date command so I will uh suggest you to read this man page whenever you want to right and uh the last example I'm going to give you the date and time for example so you want to print the date and time you can just do something like this so in the string format itself you can just uh write this so just don't forget to add this plus before uh your uh date format and then you can add a string any string and these uh you know Flags modulus M or H or hour or um you know capital M for minute capital S for seconds and then when you give this command you can see it prints the date first and then the time okay so in this way you can use the date command hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will see how to run two or more terminal commands at once in Linux so till now we have seen how we can uh you know use commands but we haven't seen how we can combine two commands and run them together and this is what we are going to see in this video so there are few options we can use to combine commands so the First Command or the first option which we can use to combine command is semicolon and uh I'm going to tell you how this works so whenever you want to combine command for example I want to use LS command and I also want to know uh the present working directory so I'm going to use PWD command and in between I have used this uh semicolon right and this is going to combine these commands and then it's going to show us the output right and I'm going to just press enter and this is what the output is so first of all it has uh you know given us the output for the ls command which is this output and then it has executed the PWD command which is this output right so this is the output from the PW D command and this is the output from the you know LS command so in this way you can you know combine these command using semicolon right we can also execute some uh other commands for example in the last videos I have shown you how to use date command and Cal command and uh let's say we also you want to use uh PWD this time also right so I'm going to just press enter and now it shows the first of all the date with this command then the calendar which is by this command and then the present working direct directory which is by this Command right now one thing to note here is whenever you use a semicolon then for example one command is wrong so what I'm going to do first is for example I want to give this command Cal which is uh not exist exting so it's going to give us this kind of output right so let's use this scale in between here so instead of smaller uh letter Cal I'm going to just use Cal in capital letters and I'm going to press enter here so you can see what happened here so first command is executed which is going to give this output for us second command doesn't really exist so it's going to give us the error but it's also going to go to the next command and it's going to print the next uh command output which is the present working directory right so this command doesn't stop executing command if one command fails right so it's going to execute the next command if uh the command in between also fails right so this is the specialty of uh this command so I'm going to just clear the terminal and then I'm going to talk about the second command the second command to combine uh few commands together is using these ENT symbol double M ENT symbols right and this is essentially is going to do the same so for example I want to do LS once again and then double ment uh I want to do pwt and then once again double MERS then I want to uh see the date so I'm going to give the date and for example I want to see the calendar also so I'm going to give the Cal command and press enter so it gives the same output so the output first will be the ls and then the present working directory then the output for the date and then the output for the calendar right now one thing to note here in both these combining command with semicolon and these ENT is the sequence uh matters here so for example when I use uh date semicolon Cal here then first date will be executed and then calendar will be executed so this sequence matter so for example when you do Cal and then date then it's going to show the calendar first and then the date okay and same is with the ment also so instead of uh this semicolon when you use ENT is going to show us the calendar first and then the date and when we use date m% Cal then it's going to give us the you know this date first and then the calendar okay but what is the difference between these two commands so let me clear the terminal and then I'm going to show show you what is the difference between these two commands Okay so the difference between these two command is when ever you use uh this semicolon is going to run every command regardless of the success or failure of uh the previous Command right so we have already seen for example we give the wrong command which doesn't really exist for example Cal here and then semicolon date then First Command fails here but second execute so it doesn't matter if First Command is failed or the command in between fail it's going to execute all the command there right but when you use the same thing with ment then whenever you know previous command fails then it's going to stop executing the next command so when we use this you see it just give the output that this command doesn't exist and it doesn't go to the next command which is date right we can uh once again check this by writing PWD and personent for example once again uh Capital date here and then ment Cal here right so it uh shows us the output for the PWD and then the next command doesn't really exist so it's you know gives the output command doesn't exist and then it doesn't execute the next command after the error but with the semicolon it's going to execute every command regardless uh the previous command is failed or succeeded okay so this is the difference between these two command now we are going to see the next option which is the r option right so or you can use using these uh double pipes here and uh this is how you can use it so for example you use LS and then you use or for example with these pipes and then PWD and then press enter and then what you see as an output here is the output is the combination of logical R here so if the first command is successful it's not going to go to the second Command right and then when the same command I do with for example LS Capital LS and press enter then it's going to to show you the output for the second Command right so once the first command is not successful the or will allow uh this uh you know these commands to go to the next command and it's going to execute the next command so it's like a logical or operation so if the first uh uh command execution fails then it's going to go to the next command right so this is how you can combine commands in Linux so what we have learned so for example what we have learned is for example we have two command A and B then whenever we use semicolon then run a and then B regardless of the success or failure of a right so A and B are going to run regardless a fails or not right and we have also seen the ENT and in this case if a fails then B is not going to execute right now third is the r operator and in this case b is only going to be executed if a fails right if a succeeds then B will not be executed so these are the few options you can use to combine command hello guys welcome to the next video on Linux command line tutorial for beginners and in this video I'm going to show you how we can use apt get command to install packages or remove packages or manage packages uh on your Debian based Linux operating system so as you all know that obuntu is a Debian based operating system and in most of the Debian based operating system you can use apt minus G command to do uh you know most of the things related with installing packages or removing packages or updating the package manager which are you know there on your system right so first of all what is appg appg is a command line tool for working with ap software packages and uh what's uh the full form of AP AP is the advanced packaging tool which are available for the Debian based operating system right now if you are using for example uh the red head based operating system for example Fedora or sentos you can use yum or I think there is one more command uh called dnf command instead of Apt get right so for all Dean based operating system you can use apt get so just use apt get and uh because you may you need to have super user privileges for using this appg command because you are installing it on your system you just need to use uh Pudo before your appet command now there are uh you know bunch of command which you can use with appg and first is the command called update okay so appg update and what this command is going to do is it's going to resynchronize your local package file uh you know as compared to the remote uh you know server so it's going to resynchronize your local index package files okay and this package files are uh you know uh saved in a file called Etc slapp for/ sources.list so I'm going to show you this file once I perform this command so just press enter here and give your password and then once again press enter and it's going to update all the packages from the remote repository so you can see it's uh you know updating uh all the packages from the remote uh repository and it's going to take few seconds I think and then all the package will be updated okay now as I told you you can see this file for example I can do Nano for this and then Etc and then apt and then uh sources I think sources do list okay and then press enter and you can see there is this file and in this file all the repositories uh where you can find these repositories and uh you know this list of packages are there okay so you can update this package manually also but um you know most of the time when you are new you don't want to change this file it's going to be changed uh automatically by this update Command right but whenever you are a more experienced uh Linux user uh you can change it uh if you know what you are doing okay so for now I'm going to just give uh control X command to exit out of uh this file but these all packages are stored uh in this file okay so now you know where they are stored okay so I'm going to just clear the terminal now for example I want to install uh some software so how you can install it so for example I want to install software called Java but I need to know whether it's there on my system or not so I can just uh give this command Java minus uh version and then press enter and it's going to give me the version of java so it gives me uh you know Java 1.7.0 so I know that Java is already installed so I don't need to install it so let's try once again for example I know that PHP 5 is not installed on my Sy system so I can use once again um PHP minus version and uh now it says uh the program PHP 5 is currently not installed you can install uh it by typing pseudo at installed php5 CLI Command right so if the package or the software is not installed sometimes it's also going to give you the hint whatever command you can use to install this software for example it's uh giving us the hint that you can use this command to install PHP 5 but it's not always correct maybe you want the different version of uh the PHP or for example you want only the php5 not the CLI CLI stand for command line interface right so to install a software you do the same so you just write P sudo appt minus get install and then for example PHP 5 which is the software I want to install right and then press enter and you notice that it doesn't uh require my password this time because I already have given this password earlier right now what this command is going to do is it's going to first of all uh uh recognize that whatever uh extra software or dependencies uh this PHP 5 software requires and it's going to make a list of all the you know dependencies and software this PHP software requires and and then it's going to show you this list and it's also going to show you uh the amount of uh you know space it's going to take on your computer so for example this PHP 5 is going to take 25 uh .7 megabyte of memory on my system and then it's going to ask you whether you want to install it this much amount of memory will be taken so if you want to install it you can just say y it can be small y or capital Y and then press enter and it's going to start installing this software now it can take uh you know few seconds to few minute to install a particular package depending upon the size of this package and your internet uh you know availability so just uh let it install and then once uh it will be installed we can uh see how we can remove it okay so once uh this package or software is is installed for example I installed PHP 5 I can uh now know the version of it so I can uh just give the clear command and then once again I'm going to give this uh PHP 5 version and now it's uh giving me different errors which says PHP passs error so because now PHP 5 is installed on my system php5 takes a file um name with it for example PHP 5 and the file name right something like this and uh now because the PHP 5 is installed here to know the version you can just use uh instead of PHP 5 minus version you just need to write PHP if I minus V and then press enter and it's going to show you the version of it so now I know that this version of PHP is installed on my system now for example sometimes you want to remove a software from a system and for this you can use once again Pudo appg install so you can use Pudo appg but instead of install you can use remove command with this okay so just use remove with this appg command and it's going to uh you know remove the software from the system but keep in mind it's not going to uh remove all the configuration from your system it's just going to remove this software so if you remember whenever we have installed uh this software using appat installed it has uh you know also downloaded and installed some bunch of dependency of uh this uh PHP 5 uh software for example a and different kind of libraries right now this command is only going to remove this it's not going to remove the configurations or any other thing which is dependent on uh this uh PHP 5 so just give this command and then it's going to just say that it's going to be removed and then just press Y and press enter and sometimes it's going to be removed this uh you know software now if you don't if you want to to uh you know remove the configuration files also for this PHP you can just use uh The Purge flag with this so just write the p g here for Purge so sudo app get remove minus minus PGE and then this command PHP 5 and what it's going to do is it's going to remove all the configuration file uh related to this PHP file okay now uh sometimes you also want to remove some of the libraries or some of the uh you know softwares which are not used by their uh you know initial parent softwares right and for this you can use a command called uh Pudo apt get Auto remove okay so Auto remove and uh this Auto remove command is used to remove packages that were automatically installed to satisfy the dependency for the other packages and are now no longer needed okay so once you give this command you will uh see uh you know once again uh this uh these bunch of uh you know libraries which are which are now going to be uninstalled so if you remember when we have installed PHP 5 with this this uh this Apache uh you know software also comes this lib files or libraries also came with uh this PHP so now because we have uninstalled PHP these uh you know packages are also not installed uh you know required so you can uninstall them but always carefully uh read this list sometimes you uh you know end up uh uninstalling the software which you don't even uh want to remove it right but for now I know that yeah it's safe to remove all these things so I can just give Y and then press enter and it's going to remove all the unrequired packages which are not required by the you know their dependencies right so in this way you can use uh this apt get command for installing removing or uh you know removing the dependencies and you know there are lots and lots of flag which you can use with this app get command but this is the you know most frequently used command with this appk hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will see how we can use if config command in Linux so first of all what is if config command if config stands for interface configuration and it is used to view and change change the configuration of network interface on your system so to use if config you just need to write if config here and that's it and then when you press enter here it's going to show you some output now this first option here suggest that I am connected to a wired you know cable Ethernet cable so you can see when I go here on my open operating system it says wired connected right so if you see here e0 then it's wired connected right if you see here uh for example W l0 then you are wireless connected right so there can be two options here ETS Z or W l0 and that means uh if you are connected through wire then you will see etth Z and then if you see W lens Z then you are connected to the wireless connection right now eth0 is the first ethernet interface additional ethernet interfaces would be named as eth1 or eth2 so there can be multiple uh you know ethernet interfaces uh depending upon the machine you are using for example if you have the machine which have multiple ethernet interfaces it's going to show you uh eth 1 here with eth0 and eth 2 depending upon the you know ethernet interfaces on your Linux operating system but by default uh e eth0 will be your main ethernet interface right now what is this l0 or L this Lo is a loop back interface and this is a special network interface that the system uses to communicate with itself so for now we are not really much concerned about this output but uh just remember that this is for the wired connection right now in here you will uh see some outputs so you can see the link here is the ethernet now second is the hardware address and this is the MAC address of your um computer then here you will see the local IP address of your uh computer and then you have the broadcast uh IP address which is same as the great gateway address I think and there is the mask IP address also okay so this is the MAC address which you cannot change and every uh I think machine have unique Mac address ideally and this is the Lan address so local area network address it's not the uh W van address it's a local area uh you know Network address right now this which you are seeing here is the IPv6 address now there are two kind of uh you know IP addresses ipv4 which is a standard and widely used address which is this kind of uh address and IPv6 which is also a standard and uh it's gaining popularity but uh till now this ipv4 is more popular than IPv6 right so this is your IPv6 address now uh you can see uh the RX packet and TX packet these are the received packet and transmitted packet at the time of uh the execution of this Command right and zero error and uh you know zero drop overruns is zero so that means your internet is working properly right now if you have multiple uh ethernet interfaces or W Lan interfaces then uh for for example you want to see only one uh interface you can uh do something like this for that so if config and then the name of the interface for example you want to see the eth0 interface it can be eth1 also if you have two ethernet interfaces and it can be ets2 also if you have three ethernet interfaces right so for now we only have one ethernet interace which is eth0 so just give I F config and then the name of your interface and it's just going to show you the information about that interface and no extra information will be shown like this loop back information will not be shown to you okay so give the name of the interface before this if config and it's going to show you the you know information about that interface now uh there are two uh other command I want to talk about here is uh the up command command and the down command okay so let me clear the terminal now when you use for example I have eth0 interface right so when I write if uh config here and then eth0 and with that if I use uh up command or down command then it's going to enable or disable my internet connection right so for example right now I'm connected to Internet I can see that uh the wide connection is there right and I want to uh you know disable my internet connection so I can just write the if config command and the name of the interface I know that my interface name is eth0 which we have seen from uh this command and then uh you can use down command with with that and now I'm going to press enter here and it says uh the permission denied so you need to use this command with Pudo which is going to uh give you the super user privileges so just use sud sudo if config your interface name and down and then press enter and give your password and as as soon as you do this your internet connection will be down okay so you can see I can see this uh message now disconnected you are not offline right now to make my internet connection uh once again up I can just use instead of down I can use up command with this and then press enter and then once again I'm going to give my password here and then press enter and then this is going to uh you know once again reconnect to my network you can see connected right right so these are the two important Flags or these are the two important commands you can use with uh this if config command but there are many flags and many commands you can use with uh this um if config so just do man and if config and see what are the options available and just play with these command there are so many command which I cannot cover in one video but I I just wanted to give you this information that this command exist and how to use it hello guys welcome to the next video on Linux command line tutorial for beginners and in this video I'm going to show you how we can use tar command in Linux tar command is used to create maintain modify and extract files which are archived in the tar format now tar stands for tape archive and it's it's an archiving file format just like zip file okay so let's see how we can use tar file so for using tar file you just need to type t for the tar format and then you use some flags with the tar file so for example you just use C for creating an archive then you can use v v stands for verbos which is used to display the progress in the terminal while creating the archive file okay and then you use f flag to allow you to specify the file name if you don't specify this F flag then uh you know your Linux system is going to uh create a zip file which is going to be system dependent and its name is not defined by you right so let's see how we can use this so you can see on my desktop there is a folder called test right so to make it a tar file or to compress it first of all I will go to the desktop folder and then you can see I have this test folder right now for compressing uh this test folder using tar I can use tar as I told you then cvf flags and then the name of your uh tar file whichever you want to give so for example test. T and then the name of your folder which you want to compress which is test right and then when you press enter you can see it has first showed the progress of compressing and then once this command is done a tar file is created which is shown here right on Ubuntu if you using Ubuntu you can just double click on the star file and is going to show you this kind of uh you know folder extractor this is a GUI program which you also can use but most of the time we must uh use or we I recommend you to use the Star Command to compress the file right now once again if I want to uncompress uh this uh folder once again what I can do I can once again write the command and then for uncompressing or extracting we use a different flag than this uh C right C is for creating the tar file and then for extracting the tar file we can use minus X for extracting okay and then V and F flag will be the same and then the name of your tar file okay and what I'm going to do is I'm going to remove this test folder so that once this tar file will be extracted it's going to you know create or it's going to extract this folder again okay so tar and then xvf and the name of your tar file which is test. tar in my case and then press enter and then you will see this test folder is extracted from this star file right now sometimes you also use the JZ format which is tar.gz and this gz stands for gzip format okay and for this we use a flag called Zed so let me clear the terminal here and once again I want to uh you know compress this uh test folder or directory to a tar.gz file so what I'm going to do is once again I'm I'm going to use star and then minus C for creating VF for veros and uh for allowing the file name and then you use Zed flag to uh you know create the gz format for you okay and then the name of your uh tar file so tar Dogz and then your folder name whatever is the folder okay but you need to remember one thing here that just this Zed flag must come after your C flag okay so C zvf okay and then press enter and it's going to create your tar.gz file right and similarly to extract this folder I'm going to delete this uh folder or directory once again and then I'm going to just use star and then instead of uh this uh C flag I'm going to use x for extracting and then I'm going to just give this command which is uh gz file name okay and press enter and it's going to extract the file and show it here right so in this way you can use a tar command to compress and uncompress folders or directories in Linux hello guys welcome to the next video on Linux command line tutorial for beginners in this video we will learn how to use grab command in Linux grab stands for Global regular expression print now gra grab command processes text line by line and print any line which matches a specified pattern so grab command can be used to search some kind of a pattern or word or sentence in a text file or number of text file using this grab command and some options with grab command so let's see how we can use grab command so first of all I need to have for example some file to use this grab command so I'm going to just change my directory to desktop first of all and then here I'm going to create a file for example what I'm going to do is I'm going to use man and I'm going to use tar and I'm going to dump the man page of tar to a file for example I'm going to name it as file. txt okay and then press enter which is going to create a file you can see this file is created and when I'm going to open this file it's going to show this kind of uh man command output for the tar right now I can use grab command on this file so I'm going to click clear the terminal first of all and then let's open this file and let's see what we want to search for example so for example I want to search for this word in this file called options right so I I can use this command grab and then the pattern which I want to search for for example I want to search for options right so I will just write options here and then the name of the file in which I want to search my pattern in okay so grab and then the word I want to search and then the file name and then press enter and you can see it has searched the line which are containing the options keyword right and when I open uh this file again it's going to show us so you can see this line line is containing the options so this lines has this path name also so you can see this line is printed and then let's search here in this gedit editor also and you can see this line also contain two uh option keyword which is this line right and then we will go down you can see the options with the capital letter is not search because this grab command is case sensitive by default but we can use a flag called I to make it case insensitive and we are going to see in the next command but this will not be searched because the grab command is case sensitive right we will go a little bit down and hopefully we will see the next options Line This is the next options line which is this one right so all the line containing options keyword is searched and printed right now I was talking about the case sensitive uh option right so to make the graph command to look for case insensitive word also so capital or small doesn't matter you can use I flag with it okay so if you use I flag then it's going to search for capital or small letter words and when I print enter you can see it search for small letter options uh line also and you can see it searches for the capital letter options keyword also right now for example I want to print the line number in which this uh result is appearing so I want to print the first of all line number and then the result so I can use the option called uh for example n n is for printing the line number right I can just remove this I which is for case insensitiveness right and when I print enter you can see on the line nine I have this option then 17 and then 348 so I can prove this by just seeing this so you can see this is line 9 you can see here line 9 column uh 29 right and then next is 17 here you can see line number right so it's showing the correct result to us now next is uh the flag we can use to for example we can use multiple uh you know keyword here also so it doesn't uh uh you know it's not necessary that the this has to be a word it can be a sentence also right so for example I will do it once again and this time instead of options I will just see in the text what I want to search for example so I want to uh search for some options line okay not the keyword option but uh this sentence for example some options and instead of options I will just give this keyword called some option so some options and then press enter and it just shows the line which contains this pattern which is some options so once again the line number is 17 as we know it search for this line only okay so this is also you can use uh you know uh grab command now you can also use grab command with with multiple files so let me clear the terminal and let me copy uh this file into different files so for example file uh 2 and then I'm going to create file three also for example and then file four also okay and then I want to search in these all four files uh something so let's search for uh this uh same option in in different files so you can use the same command grab and minus n for line number and then your pattern or sentence whatever you want to search and then the file name so it can be first file name and then file two for example and then file three if you want to search in file three and also file four if you want to search in file four and then press enter and now you can see it's giving the name of the file first and then the line number so file.txt contains this uh pattern then file 2.txt contains this pattern on this line then file three contains this on this line and then file four also contains on this uh uh you know this pattern on this line right now this command you have to type all the file names right this can be made simpler with uh wild card so instead of writing this when you use ASX it means all the files in this folder right so it means uh file one file two file three and file four because these are the file which are there in the desktop folder so this srix means that it's a wild card and it means that it's going to search for all the files and press enter and it's going to uh search or give the same result to you okay now sometimes you want to search for the lines for example in the inverse manner so just search for the lines which doesn't contain this pattern for example right so you can use a flag let me clear the terminal first of all and once again use a graph command and then whenever you use this V flag it means invert match which means that all the you know lines which doesn't contain this pattern it's going to show these lines okay so it's the invert match okay and let me uh just use only one file for now file.txt and then press enter so it's showing all the line which doesn't contain this word which we are searching for let me also show show the line number also so with n I'm going to show the line number so it's only showing the lines which doesn't contain this keyword which is some options right so you can uh verify from here this terminal is not printing all the you know lines right but when you verify it it's not going to show you the line number 17 because this contains uh this um pattern which we are searching for okay so there are many uh you know flags and options which you can use with grab command I just wanted to give you the introduction to G grab command so go ahead and uh just use grab minus H so just write grab minus H here and then press enter and it shows uh that to use help you need to use this command so not minus H but grab app minus minus help okay so just use this minus minus help and then it's going to show you all the flags and options which you can use with uh the you know drab command hello guys welcome to the next video on Linux command line tutorial for beginners and in this video we will learn how to use netstat command in Linux netstat stands for Network statistics and net stat is a command line tool which is used to display n network connections routing tables and a number of network interfaces and in addition it can be used to uh you know view Network protocol state statistics okay so to use net stat command you can use the keyword netstat and you can use few options with netstat command so the first and the default uh option which you can use with Nest stat is minus a and when you give this uh Nest minus a it's going to show you all the you know connections which are available on your uh you know system whether it's TCP or UDP or Unix connections and it's also going to display you the status if it's connected or it's uh listening or it's established and different kind of connection States right but when you give this command and when you scroll a little bit more up you will be able to see that uh you know you they have so many statistics you have you can see it has so many statistics that you uh you know need to use some tool to you know view all these connection at the same time so what we are going to do is we will use this net stat which is this one with a pipe called less okay so that's just give this command n that a and then this single pipe and then we are going to use the output to display with the less uh command okay so when I press enter now you can see it's giving us the first line of output which can be you know displayed on the full terminal and whenever you want to see more you can just press your down button and see more uh you know more options so this is more flexible right now you can see uh there are the state some are listening some are connected some are established you can see uh the path of uh this connection and you can see the type whether it's Unix whether it's UDP or it's TCP connection right and different state can be established listen or connected okay now let me clear the terminal once again uh to quit this uh net stat using less command we already know that you need to press Q to quit and now we can use some more more options with the net stat command so with uh net stat you can use uh t uh option which stands for TCP so if you just want to see the TCP connections then you can use a right and then press enter and it's just going to show you the TCP connections you can see the states and the you know you can see here the type of connection which is TCP only okay and once again press Q to come out of the command because we are using less to view this uh output right in a similar way if you want to see the UDP connections then you use U with this okay and then press enter and it's only going to show you the UDP connections to you so we will come come out of uh this output using Q now the next next option which we can use with nesat is the L flag and L flag will allow us to uh see the output for the ports which are listening okay so L stand for listening state so just give minus L and now you can see whatever uh you know programs are listening you can see the state all listening uh states are showing and uh nothing else right once again I will quit it now the next command is for example you want to see only listening TCP then use L and T for TCP it's just going to show you the listening TCP connection and you may have guessed it correctly that if you want to see the listening UDP you just need to write Lu okay it's going to show you the list in UDP connections right now the next option which you can use with your uh netstat command is the minus s flag and minus s flag is for statistics right so when you give minus s it's going to show you the statistics so press enter and you can see it's showing the statistics IP total uh packets received uh how many packets are received or how many packets are going out and you can see which type of connection it is and then the you know properties of these packets what are what is happening so in the UDP 78 packets are received and 10 packets to unknown Port received right and 80 packets are sent right so if you want to see the statistics of every interface then you can use minus s once again I'm going to press Q to quit from uh this command and then if you guesses guessed it correctly you can use minus St for TCP right and then if you want to use minus s u for UDP okay so it's just going to show you the UDP connections and so on now if you want to see the P IDs of the related interfaces then you can use the P minus P option okay so for example we want to see the P ID of all TCP connection which are there okay so press enter and you can see uh the TCP connection and then you will be able to see the P ID related but there is no P ID related to because it's uh state is is closed right so let's uh quit and let's uh just give the P State here okay so just give minus p and now you will be able to see the P IDs and the program names so for example we have the Unix connection and uh here is the P ID of this and the name is demon debus debus demon okay and also you can see the path and the state is connected here okay so if you want to see the P ID of uh this uh you know program which is uh using this connection then you can use the P flag okay and uh obviously if you use T it will show you the TCP and if you use U it's going to show you the UDP and if you're going to if you are going to use x it's going to use show you the Unix Port connections okay now uh if you want to uh see the numeric ports then you use minus n okay minus n stands for numeric and when I press enter Then you can see it's going to show you the numeric ports which are used by different uh you know interfaces on your system right once again I will press quit now uh minus C flag is used to show you the network statistics continuously so I'm just removing the less command and when you use net stat minus C it's going to show you the status continuously you can see after some time this status is refreshing right so it's going to show you the status continuously once again I'm going to just press contr C to quit from this and uh yes so minus C is for continuous okay now uh there are many uh options uh which you can use with uh this net Stat one last important command I want to show you is the net stat IE command so net stat then I is for interface and E stands for EXT extended interface so e is for extend and I stand for uh interface right and when you give this command it's going to show you the same output which is given by if config command so when you give ifig command it's going to show you the same output as the if config command gives okay so if you want to see uh what you know connections you have on your system and what is the IP address and the broadcast address and mass then you can also use uh netstat IE if if config is not available on your terminal okay now some more uh things I want to show you here in the last video we have seen the graph command and this graph is really uh helpful whenever for example you want to use the net stat command so you can use net stat and then we will use a for all n for numeric and then for example you want to search for from the output some lines so for example I will use graph and graph is used to find some content right in the last video we have learned this and then in the single codes for example I want to see what are the ports from the output of net stat which has the port 0 in it okay which has this keyword 0 in it colon 0 okay and when I press enter you can see it's showing the output so this grab is taking the output from the net stat a command and then filtering the lines which have this keyword colon 8 Okay so you can combine these command like this also okay and this pipe means here is that whatever is the output of the First Command after this Pi whatever command is used is going to be implemented on the output of the first command Okay so for example if you use less here then it's going to show you the output of the net set command using less if you use graph here then it's going to show you the output of the net stat using graph okay so this is how you can use net stat in Linux I hope you understood the basic concept of netstat and I hope you enjoyed this video please rate comment and subscribe and bye for now
