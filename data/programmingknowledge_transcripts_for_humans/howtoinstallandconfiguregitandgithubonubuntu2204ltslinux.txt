With timestamps:

00:00 - hey guys in this video I'm going to show
00:01 - you how you can install git and
00:04 - configure git with GitHub on your Ubuntu
00:07 - operating system
00:08 - so let's get started and let's see how
00:10 - we can do it so first of all you can
00:12 - open your terminal by pressing Ctrl alt
00:16 - t
00:17 - and it's going to open your terminal or
00:19 - you can go to this applications section
00:22 - and you will be able to see this
00:24 - terminal icon here so you can just uh
00:27 - open Terminal from here once the
00:31 - terminal is open here you can verify if
00:34 - git is installed by just giving git
00:37 - command here and you will see that it's
00:40 - going to give this kind of output which
00:43 - says command gate not found which means
00:47 - git is not installed right so let's try
00:50 - to install git first so you can see it
00:54 - also suggests to install git using this
00:57 - command but before using this command
01:00 - you just need to give this command which
01:02 - is sudo apt update okay and then press
01:07 - enter and give your ubuntu's password
01:10 - and it's going to update all the local
01:13 - package index for Ubuntu once that's
01:16 - done let me clear the terminal so now
01:19 - let's try to install git by giving sudo
01:23 - apt install get here and then press
01:27 - enter
01:28 - and if it gives you uh this kind of
01:31 - output uh that there are some unmet
01:36 - dependencies then you can fix this by
01:40 - running this com Command right so just
01:43 - write sudo and then apt
01:45 - fix broken install okay so let me run
01:49 - this command with sudo Privileges and
01:52 - then press enter
01:54 - and then press Y and then press enter
01:58 - and wait for this command to complete
02:00 - and once this command is complete let me
02:02 - clear the terminal once again and once
02:06 - again I'm going to give this sudo apt
02:09 - install git command and hopefully this
02:12 - time it's going to install git so at
02:15 - this point you can see it's asking me
02:19 - this question which is do you want to
02:20 - continue I will press Y and then press
02:23 - enter which is going to continue the
02:25 - installation so once this installation
02:29 - is finished you will see this kind of
02:33 - output and once git is installed you can
02:37 - give this command get hyphen hyphen
02:40 - version and then press enter and you
02:43 - will see the version of git here right
02:46 - so if it outputs the version of git then
02:51 - git is installed on your Ubuntu
02:53 - operating system right now there are
02:56 - some initial settings which you can do
03:02 - when you start using git on your Ubuntu
03:05 - operating system so let me clear the
03:07 - terminal once again and let me show you
03:10 - those initial settings so you can
03:13 - configure your username and your email
03:17 - using the command git config so just
03:21 - write get config hyphen hyphen Global
03:25 - because we want to set these config
03:27 - globally on our Ubuntu operating system
03:30 - and then you can just write user dot
03:34 - name and then give your username right
03:38 - and then press enter and this username
03:41 - is set for my git account and then I can
03:46 - even set my email right so let me uh
03:51 - give this command which is git dot email
03:55 - right and then give your email ID here
03:58 - and then your email ID is set for now
04:02 - I'm going to just set a random email ID
04:06 - and then press enter and the email ID is
04:10 - set for git here right now in order to
04:14 - see the global config you can give this
04:16 - command git config once again and then
04:19 - hyphen hyphen list and it's going to
04:22 - give you your Go Global configuration
04:25 - for git so you can see I have set these
04:29 - two values here and I can see both the
04:32 - values in the git config
04:35 - so the get installation is successful
04:37 - now let's move forward and integrate our
04:42 - git account with GitHub so that we can
04:46 - push and pull
04:48 - a repository from git and to get it
04:51 - right so I'm going to go to my browser
04:54 - and I'm going to uh just
04:57 - write GitHub
04:59 - dot com and then go to this GitHub
05:04 - website and then I'm going to uh click
05:07 - on sign in if you don't have a GitHub
05:10 - account you can create one very simply
05:12 - and then you can just log in with your
05:17 - account so I'm going to log in with my
05:18 - account and once you have signed into
05:20 - your GitHub account you can create a new
05:23 - repository by clicking on this plus icon
05:27 - and then click on new repository here or
05:31 - you can click on this new button from
05:33 - here also and it's going to uh give you
05:37 - this kind of interface now here you can
05:40 - give a name to your Repository
05:43 - so let's say the repository name which I
05:46 - want to give here is
05:49 - hello uh underscore test for example and
05:53 - here you can also give some description
05:55 - let's say setting up git
05:57 - now this repository will be public but
06:01 - you can also create the private
06:04 - repositories public means anybody on
06:08 - GitHub can see your repository which is
06:11 - fine for me then I can even initialize
06:14 - uh readme file I can just check this
06:17 - checkbox which will create a default
06:20 - readme file for me
06:22 - also it can create a DOT git ignore file
06:26 - and you can even choose the license for
06:30 - now I don't want to do this because I
06:32 - just want to uh
06:34 - create this repository for the
06:36 - demonstration purposes once you are done
06:39 - you can click on create repository and
06:43 - once everything is set up you can see
06:47 - the repository is created here so once
06:50 - this repository is created you can click
06:54 - on this repository and clone this
06:56 - repository in your Ubuntu operating
06:59 - system so you can see I am in my root
07:04 - directory and here I can create a folder
07:08 - I can name my folder as workspace for
07:12 - example so I'm going to just write MK
07:15 - there and then workspace which is going
07:18 - to create this workspace directory for
07:21 - me you can create any uh directory with
07:24 - any name I'm just creating a random
07:27 - directory in which I'm going to clone
07:30 - this repository right then click on the
07:34 - name of the report repository and then
07:35 - click on code here and then click on
07:39 - https and then copy this
07:43 - URL from here okay so this is the URL
07:46 - for your Repository
07:48 - and then on the terminal inside your
07:51 - workspace you just need to give this
07:53 - command git clone and then paste the URL
07:57 - which you have copied which is this one
07:59 - in my case
08:01 - it's uh my username and then the name of
08:06 - the repository right so github.com the
08:08 - username and the name of the repository
08:10 - dot get then press enter which is going
08:14 - to clone this repository once the
08:16 - repository is cloned you can write LS
08:20 - and you will be able to see this hello
08:22 - underscore test
08:24 - directory which is the repository which
08:27 - we have cloned right now if you can see
08:30 - here inside this repository I have this
08:34 - readme.md file and inside this readme.
08:38 - MD file I have this text here so hello
08:42 - underscore test and then setting up git
08:46 - it's there in my readme file right so
08:49 - let's see uh if the same content is
08:51 - there so I'm going to go to my
08:54 - repository directory so I'm going to
08:56 - just do CD and then hello underscore
08:59 - test and I'm going to do LS here you you
09:02 - can see readme.md is here I can just
09:06 - view the content of readme by just
09:10 - writing cat
09:11 - readme.md and you can see the same
09:14 - content is there so now let me create a
09:17 - new uh file for example I'm going to
09:20 - name my file as
09:23 - hello.py so I'm going to
09:25 - just write touch and then
09:28 - hello
09:29 - dot py let's say I want to create a very
09:32 - simple python script so this touch
09:34 - command is going to create the file you
09:37 - can see this file is created
09:39 - now I can open this file by using any
09:43 - editor of my choice
09:45 - I can just use for example
09:49 - G edit here which is the default editor
09:53 - GUI editor I should say which comes with
09:56 - Ubuntu and then the file name which is
09:59 - hello.py
10:01 - and once you give this command it's
10:03 - going to open this hello.py file let me
10:07 - add a very simple
10:09 - python script here and then save this
10:12 - file and then close this file and then
10:15 - let's say I want to uh just add this
10:19 - file and commit this file and push this
10:23 - file to my repository right so how can I
10:26 - uh do this so for doing this let me
10:30 - clear
10:31 - this terminal first
10:34 - so here as you can see I have now two
10:37 - files this is the file which I have
10:39 - created and this is the file which comes
10:43 - with the cloning of the repository here
10:46 - on the GitHub repository I don't see
10:48 - this hello.py file but I want to push
10:51 - this file from my local repository to us
10:55 - to the remote
10:57 - repository right
10:58 - so in order to do this I need to add
11:01 - this and commit this new file which is
11:05 - the hello.py so
11:07 - to view all the uncommented file you can
11:10 - give this command which is git
11:13 - status which is going to give you the
11:16 - status of your local repository you can
11:19 - see this file is untracked untracked
11:22 - means it's not tracked by git till now
11:26 - to add this to your git uh versioning
11:31 - you can write this command which is git
11:33 - add and the name of the file which is uh
11:36 - hello.py in our case and then press
11:38 - enter and then once again give the get
11:41 - States command and this time you will
11:43 - see this Hello dot py file in
11:47 - the green color right and it says
11:51 - changes to be committed so we have added
11:54 - this file to the git but we have to
11:57 - commit this file in order to fully make
12:01 - this the part of git right so for this
12:04 - just write git commit and then hyphen M
12:08 - hyphen m is the flag using which you can
12:11 - give any comment to your comment right
12:14 - so that you remember why you added this
12:20 - file or what changes you have made in
12:22 - this file right so I'm going to just say
12:25 - first pi
12:28 - code for example right and then press
12:31 - enter
12:32 - this is going to commit your file into
12:36 - git once again give get status and now
12:39 - you can see nothing to commit once you
12:43 - see nothing to commit working tree clean
12:45 - that means all the changes are committed
12:48 - into git now you can push your changes
12:52 - to your master Branch or main branch
12:57 - right
12:58 - so in order to push this change to your
13:01 - GitHub repository you can give this
13:03 - command git push or region and then
13:07 - whatever is the branch name in which you
13:10 - want to push right so right now I want
13:13 - to push in this main branch you can see
13:16 - by default this main branch is created
13:18 - right so I will just write origin and
13:22 - then main here and then press enter
13:25 - and then it's going to ask you for your
13:28 - GitHub username and password so give
13:31 - your GitHub username and password I'm
13:34 - going to give the GitHub username and
13:36 - password Here and Now the password and
13:39 - then press enter
13:40 - and you can see uh this says
13:43 - that support for password authentication
13:46 - was removed on this date
13:49 - please see this uh thing so you can't
13:53 - any more authenticate with this method
13:58 - now in order to authenticate you need a
14:01 - new kind of method which I'm going to
14:04 - show you so if you are using this kind
14:06 - of method it will uh not work because it
14:09 - was removed right
14:11 - so go to your GitHub account and here
14:14 - click on your user profile and then
14:17 - click on settings
14:19 - and then on the left hand side go at the
14:21 - very bottom where you see developer
14:24 - settings
14:25 - and then click on personal access tokens
14:28 - you can create a fine grain token which
14:30 - is in beta right now and the token which
14:35 - is classic token right
14:37 - so you can click on classic token and
14:41 - then you can generate a new classic
14:42 - token from here click on generate new
14:45 - token and then click on uh generate new
14:49 - token which is the classic token you can
14:52 - give any note to uh your token let's say
14:55 - I am giving uh the note my token here
15:00 - you can choose the expiration date I can
15:03 - just
15:05 - give a custom expiration date I want to
15:07 - expire this token in one or two days so
15:11 - I'm going to just give a very short
15:14 - expiration because I am doing this for
15:18 - the demonstration purposes you might
15:20 - want to give the expiration for example
15:23 - for 90 days or you can also choose no
15:25 - expiration also
15:27 - then
15:29 - you can select the scope so I can just
15:32 - select all these Scopes here so that I
15:36 - can do
15:37 - all the actions uh using this token
15:41 - right so I'm going to choose
15:44 - all these options here so you can also
15:48 - choose all these options one by one
15:51 - right so you can see I have chosen all
15:54 - the options and then click on generate
15:56 - token
15:57 - and then this is the token which is
16:00 - created right now in my case I can copy
16:03 - this token and save this at some
16:08 - location you can see make sure you copy
16:11 - your personal token you won't be able to
16:14 - uh
16:15 - see it again right so you need to copy
16:18 - this and paste it somewhere where you
16:20 - can access it again I'm going to paste
16:24 - it on the uh
16:26 - editor
16:28 - and then you need to edit this command
16:33 - uh with this token right so the token is
16:37 - this one I'm going to replace this token
16:41 - here in place of token I'm going to give
16:45 - this command in the description of this
16:47 - video so you can also uh use this
16:51 - command then you need to give the
16:54 - username right so in my case my GitHub
16:57 - username is p knowledge right so I can
17:01 - just open the repository once again and
17:05 - you can see this is the
17:07 - username here and this is the repository
17:10 - name you can copy both of uh both of
17:14 - them right and then you can replace this
17:18 - and you can replace this here in place
17:20 - of username and repository name so
17:22 - username in my case is p knowledge and
17:26 - the repository name is hello underscore
17:28 - test right let me copy this command here
17:32 - and then paste it inside my repository
17:35 - I'm going to just paste this command and
17:37 - then press enter and now once again I'm
17:40 - going to uh
17:41 - give the command git push origin Main
17:47 - and then press enter and this time you
17:49 - can see my push is successful
17:53 - so once you see this kind of
17:56 - output this means that this new file is
18:01 - pushed into my repository so I can go to
18:04 - my repository you can see previously it
18:06 - only contained the readme.md file when I
18:11 - refresh this I can see hello.py file
18:14 - also right
18:17 - so this is how you can install git and
18:21 - configure it with GitHub on your Ubuntu
18:24 - operating system I hope you enjoyed this
18:25 - video and I will see you in the next
18:27 - video

Cleaned transcript:

hey guys in this video I'm going to show you how you can install git and configure git with GitHub on your Ubuntu operating system so let's get started and let's see how we can do it so first of all you can open your terminal by pressing Ctrl alt t and it's going to open your terminal or you can go to this applications section and you will be able to see this terminal icon here so you can just uh open Terminal from here once the terminal is open here you can verify if git is installed by just giving git command here and you will see that it's going to give this kind of output which says command gate not found which means git is not installed right so let's try to install git first so you can see it also suggests to install git using this command but before using this command you just need to give this command which is sudo apt update okay and then press enter and give your ubuntu's password and it's going to update all the local package index for Ubuntu once that's done let me clear the terminal so now let's try to install git by giving sudo apt install get here and then press enter and if it gives you uh this kind of output uh that there are some unmet dependencies then you can fix this by running this com Command right so just write sudo and then apt fix broken install okay so let me run this command with sudo Privileges and then press enter and then press Y and then press enter and wait for this command to complete and once this command is complete let me clear the terminal once again and once again I'm going to give this sudo apt install git command and hopefully this time it's going to install git so at this point you can see it's asking me this question which is do you want to continue I will press Y and then press enter which is going to continue the installation so once this installation is finished you will see this kind of output and once git is installed you can give this command get hyphen hyphen version and then press enter and you will see the version of git here right so if it outputs the version of git then git is installed on your Ubuntu operating system right now there are some initial settings which you can do when you start using git on your Ubuntu operating system so let me clear the terminal once again and let me show you those initial settings so you can configure your username and your email using the command git config so just write get config hyphen hyphen Global because we want to set these config globally on our Ubuntu operating system and then you can just write user dot name and then give your username right and then press enter and this username is set for my git account and then I can even set my email right so let me uh give this command which is git dot email right and then give your email ID here and then your email ID is set for now I'm going to just set a random email ID and then press enter and the email ID is set for git here right now in order to see the global config you can give this command git config once again and then hyphen hyphen list and it's going to give you your Go Global configuration for git so you can see I have set these two values here and I can see both the values in the git config so the get installation is successful now let's move forward and integrate our git account with GitHub so that we can push and pull a repository from git and to get it right so I'm going to go to my browser and I'm going to uh just write GitHub dot com and then go to this GitHub website and then I'm going to uh click on sign in if you don't have a GitHub account you can create one very simply and then you can just log in with your account so I'm going to log in with my account and once you have signed into your GitHub account you can create a new repository by clicking on this plus icon and then click on new repository here or you can click on this new button from here also and it's going to uh give you this kind of interface now here you can give a name to your Repository so let's say the repository name which I want to give here is hello uh underscore test for example and here you can also give some description let's say setting up git now this repository will be public but you can also create the private repositories public means anybody on GitHub can see your repository which is fine for me then I can even initialize uh readme file I can just check this checkbox which will create a default readme file for me also it can create a DOT git ignore file and you can even choose the license for now I don't want to do this because I just want to uh create this repository for the demonstration purposes once you are done you can click on create repository and once everything is set up you can see the repository is created here so once this repository is created you can click on this repository and clone this repository in your Ubuntu operating system so you can see I am in my root directory and here I can create a folder I can name my folder as workspace for example so I'm going to just write MK there and then workspace which is going to create this workspace directory for me you can create any uh directory with any name I'm just creating a random directory in which I'm going to clone this repository right then click on the name of the report repository and then click on code here and then click on https and then copy this URL from here okay so this is the URL for your Repository and then on the terminal inside your workspace you just need to give this command git clone and then paste the URL which you have copied which is this one in my case it's uh my username and then the name of the repository right so github.com the username and the name of the repository dot get then press enter which is going to clone this repository once the repository is cloned you can write LS and you will be able to see this hello underscore test directory which is the repository which we have cloned right now if you can see here inside this repository I have this readme.md file and inside this readme. MD file I have this text here so hello underscore test and then setting up git it's there in my readme file right so let's see uh if the same content is there so I'm going to go to my repository directory so I'm going to just do CD and then hello underscore test and I'm going to do LS here you you can see readme.md is here I can just view the content of readme by just writing cat readme.md and you can see the same content is there so now let me create a new uh file for example I'm going to name my file as hello.py so I'm going to just write touch and then hello dot py let's say I want to create a very simple python script so this touch command is going to create the file you can see this file is created now I can open this file by using any editor of my choice I can just use for example G edit here which is the default editor GUI editor I should say which comes with Ubuntu and then the file name which is hello.py and once you give this command it's going to open this hello.py file let me add a very simple python script here and then save this file and then close this file and then let's say I want to uh just add this file and commit this file and push this file to my repository right so how can I uh do this so for doing this let me clear this terminal first so here as you can see I have now two files this is the file which I have created and this is the file which comes with the cloning of the repository here on the GitHub repository I don't see this hello.py file but I want to push this file from my local repository to us to the remote repository right so in order to do this I need to add this and commit this new file which is the hello.py so to view all the uncommented file you can give this command which is git status which is going to give you the status of your local repository you can see this file is untracked untracked means it's not tracked by git till now to add this to your git uh versioning you can write this command which is git add and the name of the file which is uh hello.py in our case and then press enter and then once again give the get States command and this time you will see this Hello dot py file in the green color right and it says changes to be committed so we have added this file to the git but we have to commit this file in order to fully make this the part of git right so for this just write git commit and then hyphen M hyphen m is the flag using which you can give any comment to your comment right so that you remember why you added this file or what changes you have made in this file right so I'm going to just say first pi code for example right and then press enter this is going to commit your file into git once again give get status and now you can see nothing to commit once you see nothing to commit working tree clean that means all the changes are committed into git now you can push your changes to your master Branch or main branch right so in order to push this change to your GitHub repository you can give this command git push or region and then whatever is the branch name in which you want to push right so right now I want to push in this main branch you can see by default this main branch is created right so I will just write origin and then main here and then press enter and then it's going to ask you for your GitHub username and password so give your GitHub username and password I'm going to give the GitHub username and password Here and Now the password and then press enter and you can see uh this says that support for password authentication was removed on this date please see this uh thing so you can't any more authenticate with this method now in order to authenticate you need a new kind of method which I'm going to show you so if you are using this kind of method it will uh not work because it was removed right so go to your GitHub account and here click on your user profile and then click on settings and then on the left hand side go at the very bottom where you see developer settings and then click on personal access tokens you can create a fine grain token which is in beta right now and the token which is classic token right so you can click on classic token and then you can generate a new classic token from here click on generate new token and then click on uh generate new token which is the classic token you can give any note to uh your token let's say I am giving uh the note my token here you can choose the expiration date I can just give a custom expiration date I want to expire this token in one or two days so I'm going to just give a very short expiration because I am doing this for the demonstration purposes you might want to give the expiration for example for 90 days or you can also choose no expiration also then you can select the scope so I can just select all these Scopes here so that I can do all the actions uh using this token right so I'm going to choose all these options here so you can also choose all these options one by one right so you can see I have chosen all the options and then click on generate token and then this is the token which is created right now in my case I can copy this token and save this at some location you can see make sure you copy your personal token you won't be able to uh see it again right so you need to copy this and paste it somewhere where you can access it again I'm going to paste it on the uh editor and then you need to edit this command uh with this token right so the token is this one I'm going to replace this token here in place of token I'm going to give this command in the description of this video so you can also uh use this command then you need to give the username right so in my case my GitHub username is p knowledge right so I can just open the repository once again and you can see this is the username here and this is the repository name you can copy both of uh both of them right and then you can replace this and you can replace this here in place of username and repository name so username in my case is p knowledge and the repository name is hello underscore test right let me copy this command here and then paste it inside my repository I'm going to just paste this command and then press enter and now once again I'm going to uh give the command git push origin Main and then press enter and this time you can see my push is successful so once you see this kind of output this means that this new file is pushed into my repository so I can go to my repository you can see previously it only contained the readme.md file when I refresh this I can see hello.py file also right so this is how you can install git and configure it with GitHub on your Ubuntu operating system I hope you enjoyed this video and I will see you in the next video
