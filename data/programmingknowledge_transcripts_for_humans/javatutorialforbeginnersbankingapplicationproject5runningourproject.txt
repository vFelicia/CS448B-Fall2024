With timestamps:

00:01 - hello and welcome back to the another
00:02 - video the Java tutorial Series so today
00:04 - we are containing our project number one
00:07 - that is banking application and in this
00:09 - video we will finishing it okay so in
00:13 - our previous video we have discussed
00:14 - about the show many functionality of our
00:17 - application and I have told you that
00:20 - when there is mistake is there inside
00:22 - this method that is what if
00:26 - we are checking the cases for the this
00:28 - letter that is uh capital letters
00:31 - capital a capital b capital c capital D
00:35 - and the capital E okay
00:38 - one minute
00:40 - okay so where we are I have told you
00:43 - that one mistake is there inside this
00:45 - code that is we are checking this case
00:47 - case for the capital letter set is
00:48 - capital a capital a Capital C D and E
00:51 - and what if the user is entering this
00:53 - small uh small letters okay so that is a
00:57 - b c d e uh because this switch switch is
01:03 - comparing that case using the Sky asci
01:07 - value of that characters okay so the Sky
01:10 - value of the capital A and as a capital
01:12 - small a are different so that's why user
01:16 - will doesn't know what is happening why
01:18 - the code is not getting run for the case
01:21 - number a because either I entered the
01:24 - small letters okay instead of entering
01:26 - this capital letter so this is the
01:29 - problem
01:30 - so what we can do whether the user will
01:33 - enter that characters in in a small
01:35 - letter or the capital letter and we are
01:37 - storing that inside the option option
01:39 - variable we will convert that uh input
01:42 - into capital letters okay so what we can
01:45 - do is there is one uh inbuilt class
01:49 - inside Java which is character and which
01:51 - has one function that to
01:54 - upper case and this will accept one
01:56 - character and which is which character
01:58 - is this options okay
02:00 - so what this will do let me just
02:03 - increase the font size so that you can
02:05 - see clearly
02:06 - this will uh get that options input from
02:11 - this option and it will conver apply the
02:14 - two uh apply not apply it will pass that
02:18 - options or the letter whether it is in a
02:21 - small or capital letter
02:23 - to the upper case method and uppercase
02:26 - method will return the capitalize form
02:29 - of that character okay so let me just
02:32 - show you uh this implementation of this
02:35 - here you can see the public static care
02:37 - method is set inside the Java this is
02:39 - the document inbuilt methods which are
02:41 - written inside the Java and here you can
02:43 - see what we what it is returning it is
02:45 - returning to uppercase of that character
02:48 - okay
02:49 - so I guess this will remove the problem
02:54 - that we have inside our application
02:56 - and let me just okay so now I guess we
03:01 - have done all the part that we have you
03:04 - want to do inside our bank account class
03:07 - and we have implemented all the
03:09 - functionalities inside this and now we
03:12 - have to run this and we know from uh
03:15 - where our program will get executed
03:17 - inside this main method okay so inside
03:20 - that this is class banking application
03:23 - and this is class bank account so both
03:25 - classes are different and all our
03:27 - functionalities are written inside this
03:28 - bank account class and we now we have to
03:31 - tell this Bank application class that
03:33 - there is a bank account class is there
03:35 - and we have to create one object of that
03:38 - class okay so how to create the object
03:39 - of the class
03:40 - back we will simply write bank account
03:44 - don't worry for time being just remember
03:47 - uh be with me uh I will cover all those
03:51 - classes what is class object inside our
03:53 - upcoming queries inside that oops
03:54 - concept okay a bank account and we will
03:58 - give a name to the object okay so let me
04:01 - just write
04:03 - uh as Bank One whatever you can you can
04:07 - simply give your name also okay overages
04:09 - it doesn't make any sense okay but
04:13 - normal convention is that you should
04:15 - give object name as
04:17 - so that's you can understand by looking
04:21 - at the object name what we have done
04:24 - inside this okay so we'll create a new
04:27 - bank account
04:29 - and here you can see intelligent idea is
04:31 - telling me that this
04:34 - object will require one two parameter
04:38 - that is C name and CID so I have in the
04:41 - previous videos I have told you that
04:42 - this is the Constructor which accepts a
04:45 - cname and CID and I have told you that
04:47 - whenever you create an object of the
04:50 - class it it calls the Constructor of
04:53 - that class and we have written our
04:55 - Constructor over an area of this kind of
04:57 - accept the two parameters so that's why
04:59 - we have to give two parameters to this
05:02 - program so let me just give the customer
05:05 - name as Xyz you can give your name also
05:09 - as a customer name if you want
05:11 - and again
05:14 - second parameter is CID
05:17 - so let's suppose customer ID is
05:21 - let's suppose one
05:24 - zero one okay this is the customer ID
05:27 - okay uh this is pretty much that we have
05:31 - to do and
05:33 - we can now the object is created for
05:36 - that class name bank account okay so
05:39 - using that object we can call any method
05:42 - written inside that bank account class
05:44 - okay so what are the meters written
05:46 - inside this is void deposit void
05:49 - withdraw void Gateway send action void
05:51 - show menu so one thing you tell me or
05:55 - you you decide which method I can call
05:58 - so that all the functionality of our
06:00 - application will be done inside that
06:03 - so I think there is only one method
06:06 - which uh which is there show menu method
06:09 - and which will Implement all these
06:12 - functionalities of our application here
06:15 - itself okay so I will call that method
06:18 - using the object name so for calling
06:21 - that method we will write object name
06:25 - that is bank 1 Dot
06:27 - now you can see show menu is there show
06:30 - menu okay
06:32 - so this will call that show menu method
06:35 - okay inside this okay so I guess this is
06:38 - pretty much that we have to do inside
06:40 - this project so I hope
06:43 - and this will run let me just run this
06:47 - okay it's running and now here you can
06:50 - see it is that asking me the enter the
06:52 - number of terms you want
06:54 - in the series uh wait
06:58 - I guess this running the previous
07:03 - sorry sorry guys this is running the
07:06 - previous class Java class I guess and
07:09 - now I have to run this Java class itself
07:11 - ah yes now see here you can see welcome
07:13 - XYZ your ID is zero one how this is
07:17 - doing uh we are passing x y z and zero
07:20 - one to this class Constructor and this
07:22 - Constructor is assigning that c name and
07:25 - CID value to the customer name and
07:27 - customer ID is over here okay and those
07:29 - customer IDs and customer name are
07:31 - getting printed in on the console here
07:33 - customer name and custom ID so I hope
07:35 - you guys are getting this
07:36 - and now it is asking for the option uh
07:39 - so let's suppose we have to check the
07:41 - balance and deposit the balance and we
07:42 - draw the previous transaction okay so
07:44 - we'll go one by one okay I will type A
07:48 - okay so we will check first of all let
07:50 - me check the error that we have
07:52 - rectified over here okay if I give small
07:54 - a and if I hit enter the check balance
07:57 - should be there so heat was selling
07:59 - invalid option should be invalid option
08:01 - is there uh because I guess this is not
08:04 - working here
08:07 - why it is not working I don't get it
08:10 - okay let it be uh I will Rectify this
08:12 - error and let you know in the upcoming
08:15 - videos okay uh for time now being we
08:18 - will give the capitalized inputs to the
08:20 - other application okay capital a
08:23 - so now here you can see balance is zero
08:25 - it's showing balance is zero because we
08:27 - don't have any uh done uh deposit or
08:29 - withdrawal from our account and
08:32 - initially the value of the balance
08:34 - variable that we have declared over here
08:36 - is
08:37 - zero okay that's why it is printing 0 in
08:41 - this
08:42 - console okay
08:45 - uh okay now let me just increase the
08:48 - size of the console and now if I do B B
08:52 - what is the B deposit uh enter the
08:55 - amount that you want to deposit let's
08:57 - suppose I have to deposit 1000 rupees or
08:59 - thousand dollars in my account okay and
09:01 - then if I hit enter
09:04 - uh now 1000 rupees or thousand dollars I
09:07 - uh deposited in my account now if I do
09:10 - option A that is view balance now here
09:13 - you can see balance is thousand
09:15 - previously it was selling that balance
09:16 - is zero now the balance is 1000 okay
09:20 - uh one second guys
09:25 - so now we have checked the balance that
09:28 - is 1000
09:30 - so we have implemented the check balance
09:32 - and deposit now if I want to withdraw
09:34 - money from my account I have to give
09:37 - input as C
09:39 - um C and uh how do you draw about 1000.
09:46 - okay now it suppose not thousand
09:49 - five hundred and now if I check the
09:51 - balance for checking balance um when it
09:54 - is 100 and now at last I want to check
09:57 - the previous suggestion that I have done
10:00 - the
10:01 - so here you can see if I type D
10:03 - withdrawn 500 that is the thing that I
10:07 - have done previously
10:08 - so that is withdraw for the 500 from the
10:12 - account okay
10:14 - so I guess we have implemented all those
10:17 - checks now at last I have to implement e
10:21 - if I press enter
10:23 - now here you can see process finished
10:26 - with exit code 0 that is our code will
10:28 - get
10:30 - ended and you will get out of this main
10:33 - method okay so this is pretty much about
10:36 - this project I hope you have enjoyed
10:38 - this project and you know upcoming
10:41 - tutorial series we will be starting
10:43 - uh oops concept from the
10:46 - onwards videos okay thank you for
10:47 - watching this video

Cleaned transcript:

hello and welcome back to the another video the Java tutorial Series so today we are containing our project number one that is banking application and in this video we will finishing it okay so in our previous video we have discussed about the show many functionality of our application and I have told you that when there is mistake is there inside this method that is what if we are checking the cases for the this letter that is uh capital letters capital a capital b capital c capital D and the capital E okay one minute okay so where we are I have told you that one mistake is there inside this code that is we are checking this case case for the capital letter set is capital a capital a Capital C D and E and what if the user is entering this small uh small letters okay so that is a b c d e uh because this switch switch is comparing that case using the Sky asci value of that characters okay so the Sky value of the capital A and as a capital small a are different so that's why user will doesn't know what is happening why the code is not getting run for the case number a because either I entered the small letters okay instead of entering this capital letter so this is the problem so what we can do whether the user will enter that characters in in a small letter or the capital letter and we are storing that inside the option option variable we will convert that uh input into capital letters okay so what we can do is there is one uh inbuilt class inside Java which is character and which has one function that to upper case and this will accept one character and which is which character is this options okay so what this will do let me just increase the font size so that you can see clearly this will uh get that options input from this option and it will conver apply the two uh apply not apply it will pass that options or the letter whether it is in a small or capital letter to the upper case method and uppercase method will return the capitalize form of that character okay so let me just show you uh this implementation of this here you can see the public static care method is set inside the Java this is the document inbuilt methods which are written inside the Java and here you can see what we what it is returning it is returning to uppercase of that character okay so I guess this will remove the problem that we have inside our application and let me just okay so now I guess we have done all the part that we have you want to do inside our bank account class and we have implemented all the functionalities inside this and now we have to run this and we know from uh where our program will get executed inside this main method okay so inside that this is class banking application and this is class bank account so both classes are different and all our functionalities are written inside this bank account class and we now we have to tell this Bank application class that there is a bank account class is there and we have to create one object of that class okay so how to create the object of the class back we will simply write bank account don't worry for time being just remember uh be with me uh I will cover all those classes what is class object inside our upcoming queries inside that oops concept okay a bank account and we will give a name to the object okay so let me just write uh as Bank One whatever you can you can simply give your name also okay overages it doesn't make any sense okay but normal convention is that you should give object name as so that's you can understand by looking at the object name what we have done inside this okay so we'll create a new bank account and here you can see intelligent idea is telling me that this object will require one two parameter that is C name and CID so I have in the previous videos I have told you that this is the Constructor which accepts a cname and CID and I have told you that whenever you create an object of the class it it calls the Constructor of that class and we have written our Constructor over an area of this kind of accept the two parameters so that's why we have to give two parameters to this program so let me just give the customer name as Xyz you can give your name also as a customer name if you want and again second parameter is CID so let's suppose customer ID is let's suppose one zero one okay this is the customer ID okay uh this is pretty much that we have to do and we can now the object is created for that class name bank account okay so using that object we can call any method written inside that bank account class okay so what are the meters written inside this is void deposit void withdraw void Gateway send action void show menu so one thing you tell me or you you decide which method I can call so that all the functionality of our application will be done inside that so I think there is only one method which uh which is there show menu method and which will Implement all these functionalities of our application here itself okay so I will call that method using the object name so for calling that method we will write object name that is bank 1 Dot now you can see show menu is there show menu okay so this will call that show menu method okay inside this okay so I guess this is pretty much that we have to do inside this project so I hope and this will run let me just run this okay it's running and now here you can see it is that asking me the enter the number of terms you want in the series uh wait I guess this running the previous sorry sorry guys this is running the previous class Java class I guess and now I have to run this Java class itself ah yes now see here you can see welcome XYZ your ID is zero one how this is doing uh we are passing x y z and zero one to this class Constructor and this Constructor is assigning that c name and CID value to the customer name and customer ID is over here okay and those customer IDs and customer name are getting printed in on the console here customer name and custom ID so I hope you guys are getting this and now it is asking for the option uh so let's suppose we have to check the balance and deposit the balance and we draw the previous transaction okay so we'll go one by one okay I will type A okay so we will check first of all let me check the error that we have rectified over here okay if I give small a and if I hit enter the check balance should be there so heat was selling invalid option should be invalid option is there uh because I guess this is not working here why it is not working I don't get it okay let it be uh I will Rectify this error and let you know in the upcoming videos okay uh for time now being we will give the capitalized inputs to the other application okay capital a so now here you can see balance is zero it's showing balance is zero because we don't have any uh done uh deposit or withdrawal from our account and initially the value of the balance variable that we have declared over here is zero okay that's why it is printing 0 in this console okay uh okay now let me just increase the size of the console and now if I do B B what is the B deposit uh enter the amount that you want to deposit let's suppose I have to deposit 1000 rupees or thousand dollars in my account okay and then if I hit enter uh now 1000 rupees or thousand dollars I uh deposited in my account now if I do option A that is view balance now here you can see balance is thousand previously it was selling that balance is zero now the balance is 1000 okay uh one second guys so now we have checked the balance that is 1000 so we have implemented the check balance and deposit now if I want to withdraw money from my account I have to give input as C um C and uh how do you draw about 1000. okay now it suppose not thousand five hundred and now if I check the balance for checking balance um when it is 100 and now at last I want to check the previous suggestion that I have done the so here you can see if I type D withdrawn 500 that is the thing that I have done previously so that is withdraw for the 500 from the account okay so I guess we have implemented all those checks now at last I have to implement e if I press enter now here you can see process finished with exit code 0 that is our code will get ended and you will get out of this main method okay so this is pretty much about this project I hope you have enjoyed this project and you know upcoming tutorial series we will be starting uh oops concept from the onwards videos okay thank you for watching this video
