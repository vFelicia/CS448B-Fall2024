With timestamps:

00:01 - hey guys in this video I'm going to give
00:02 - you a brief introduction about Sona Cube
00:06 - and also I'm going to show you how you
00:07 - can set up Sona Cube and do some code
00:11 - analysis using Sona Cube on your
00:15 - favorite operating system so let's get
00:18 - started and let's see what is Sona Cube
00:22 - so Sona cube is an opsource platform
00:25 - designed for continuous inspection of
00:28 - code quality that means it plays a
00:32 - crucial role in development life cycle
00:35 - by identifying and addressing potential
00:39 - issues early on ensuring the delivery of
00:42 - high quality software now let's see what
00:46 - are some of the features of Sona Cube so
00:49 - when you run a scan on your code which
00:53 - you are developing using Sona Cube it
00:56 - pushes some metrics to the Sona Cube
00:59 - server so sonak tube is going to analyze
01:01 - your code and provide you a very good
01:05 - metrics of your code quality it's going
01:08 - to continuously inspect your code so
01:11 - whenever you push a new code it's going
01:13 - to run the scanner once again and then
01:17 - it's going to report all the
01:19 - vulnerabilities or bug or potential
01:22 - issues in your code and also Sona Cube
01:25 - comes with extensive rule set so our
01:28 - rule is used to analyze your code based
01:33 - on the language uh you are using for
01:37 - your uh software development so for
01:40 - example if you're using python code
01:42 - there are some rules related to python
01:46 - which are used by sonar Cube to analyze
01:48 - your code and then based on those rules
01:51 - it's going to provide the Matrix you can
01:54 - also add your custom rules in addition
01:58 - to the hundreds of rules which are
02:00 - already available in Sona Cube now what
02:04 - are the benefits of using Sona Cube so
02:08 - the most important benefit is it's going
02:11 - to improve the code maintainability of
02:14 - your code also it's going to uh make
02:17 - your code more secure and it's going to
02:21 - enhance your code reliability because
02:24 - it's going to uh detect the code
02:28 - vulnerabilities like security
02:30 - vulnerabilities issues and then
02:33 - potential uh coverage issues all these
02:37 - issues are detected by sonar Cube and
02:41 - reported in its web interface also it
02:45 - have many type of Integrations so it can
02:48 - integrate with GitHub or Azure devops or
02:52 - your favorite cicd tool so that it can
02:57 - run the code analysis as soon as you
02:59 - push your code to your favorite
03:02 - repository right so it will help you for
03:07 - the whole life cycle of your code
03:10 - development now let's see what are the
03:12 - main components of sonar Cube and then
03:15 - we are going to see how we can run the
03:18 - sonar Cube on our operating system so
03:21 - there are two main components of Sona
03:24 - Cube one is called Sona Cube server and
03:28 - other is called son Sona Cube
03:31 - scanner so in this Sona Cube server when
03:35 - you install a sonar Cube server you need
03:38 - to link it with some database it can be
03:41 - a postr database or any other database
03:44 - which it supports and it also comes with
03:48 - some rules now the second important
03:52 - component in Sona cube is the Sona Cube
03:56 - scanner now let's say you have cloned a
04:00 - repository on your local operating
04:03 - system then you also need to install the
04:07 - Sona Cube scanner on your local machine
04:10 - which is going to scan your
04:13 - code and then it's going to send the
04:18 - analysis via the scanner to the server
04:22 - right so sonar Cube scanner is going to
04:24 - scan your code do the code quality
04:28 - analysis uh then it's going to prepare
04:30 - the Matrix and then it's going to push
04:33 - all the Matrix to the Sona Q server and
04:39 - how it's going to analyze the code it's
04:42 - going to analyze the code based on the
04:44 - rules defined in Sona Cube server right
04:50 - once the available metrix is pushed to
04:53 - sonar Cube server it saves that metrix
04:57 - into the linked database
05:00 - so these are few main components of Sona
05:05 - Cube now let's see how we can install
05:08 - sonar Cube we are going to use the
05:11 - docker images of sonar Cube to uh run
05:15 - Sona Cube on our Linux operating system
05:19 - but these steps will be valid for any
05:22 - other operating system which supports
05:24 - Docker for example Windows or Mac
05:26 - operating system let's also go to the
05:29 - main home hom page of Sona Cube and see
05:32 - uh what are the offerings it's uh
05:35 - providing so it has the community
05:37 - version which you can download it for
05:40 - free and it supports uh all these
05:44 - languages and then it has all these
05:47 - capabilities like detecting bugs and
05:50 - basic
05:51 - vulnerabilities it also reviews security
05:54 - hotspots track code smells and then code
05:57 - quality metrics and history cicd
06:00 - integration and other plugins are
06:03 - available so when you uh use Community
06:06 - version you can use it to learn how
06:09 - sonar Cube works if you want to use the
06:12 - sonar Cube developer version then you
06:14 - can uh use this version which comes with
06:18 - more capabilities in addition to the
06:20 - community version and then you can also
06:23 - use the Enterprise or data center
06:26 - Edition also right so we are going to be
06:29 - using the community edition of sonar
06:32 - Cube so as I said we are going to use
06:35 - the docker to install Sona Cube so you
06:39 - can go to the dockerhub website and then
06:42 - search for Sona Cube here and you will
06:46 - find the official Docker image of the
06:50 - Sona Cube here so you can see this is
06:53 - Sona Cube and it's the docker official
06:56 - image right so to uh get sonar Cube
07:00 - using Docker this is the command for
07:02 - that so just run this command on your
07:05 - terminal which is Docker pull sonar Cube
07:07 - so let me open the terminal here and
07:10 - then let me just run this command which
07:13 - is Docker P Sona Cube and then let me
07:16 - provide my uh password here and it's
07:19 - going to pull the latest image for Sona
07:23 - Cube now I have already pulled this
07:25 - image earlier so it says image is up to
07:28 - date but in your case it's going to
07:30 - download this image right so once this
07:34 - Sona Cube image is uh pulled from the
07:39 - docker repository the next command is
07:43 - this one so once you have a sonar Cube
07:46 - image we also need to pull the post gray
07:50 - image because we are going to use the
07:52 - post gray as a database for our Sona
07:56 - Cube server so this is the command for
07:59 - that so it's going to uh pull the post
08:03 - cray uh image and it's going to run the
08:06 - post cray server using all these
08:09 - attributes so we are going to uh run
08:12 - this uh post gray server with the post
08:15 - gray user sonar post gray password sonar
08:19 - and the post gray DB which will be
08:22 - called sonar Cube so I'm going to put
08:25 - all these commands in the description of
08:27 - this video so you can use them directly
08:30 - on your terminal so I'm going to just
08:32 - copy this uh command so let me just uh
08:36 - paste this command here and then press
08:39 - enter so it's going to uh find the
08:43 - proper Library image for post gray you
08:46 - can see it's extracting that and then
08:48 - it's going to run the container so once
08:52 - post gray container is running we can
08:54 - also check uh this using the docker PS
08:57 - command so I'm going to uh just run
09:00 - Docker PS here and you can see post gray
09:04 - uh container is running here right let
09:08 - me clear the terminal and then we are
09:11 - going to run the last command which is
09:14 - to run the actual Sona Cube server with
09:17 - the linked postr SQL container which we
09:21 - have created right so this is the
09:25 - command for that as I said I'm going to
09:28 - uh paste
09:29 - this code or this command in the
09:32 - description of this video so you can
09:34 - directly use that we are going to start
09:37 - the sonar Cube server on this port which
09:39 - is 9,000 so once that uh sonar Cube
09:44 - server starts it's going to be available
09:46 - on the port
09:48 - 9,000 so I'm going to just uh paste this
09:51 - come the terminal and then uh press
09:53 - enter and it's going to create this uh
09:56 - container once again I can run the
10:00 - Docker PS command and you will be able
10:04 - to see that now my uh Sona Cube
10:08 - container is also running and it's
10:11 - running on Port
10:13 - 9,000 right so we have forwarded this
10:15 - port to our Local Host also so now we
10:19 - can go to our browser and then we can
10:22 - open sonar Cube on the port 9,000 so
10:26 - just write Local Host colon 9000 here
10:29 - and you can see the Sona Cube web
10:33 - interface is starting if it doesn't
10:35 - start immediately that means that you
10:38 - need to wait for some time so just uh
10:40 - wait for one or two minutes and it's
10:42 - going to start automatically so now you
10:45 - can see uh the login page for Sona Cube
10:49 - the default login and password for Sona
10:53 - cube is admin and admin right so you can
10:57 - just write admin
10:59 - as the
11:01 - username and admin as password so I'm
11:04 - going to provide admin as password also
11:07 - and I'm going to Press login here which
11:10 - is going to log me into my Sonar Cube
11:13 - server as soon as I log to my Sona Cube
11:16 - server Sona cube is going to uh ask me
11:19 - to change my password immediately so I
11:22 - need to provide the old password which
11:24 - is admin by default so I'm going to
11:26 - provide that and then I'm going to
11:28 - provide the new password let's say I'm
11:31 - going to provide a new password as
11:32 - admin1 123 and then confirm this
11:36 - password admin 1 2 3 and then I'm going
11:40 - to click on update here which is going
11:42 - to update my password and open this kind
11:45 - of interface now as I mentioned earlier
11:47 - you can link your project which is
11:50 - hosted on Azure devops or GitHub or
11:53 - gitlab or bit bucket or bit bucket
11:57 - server so whatever Dev tool you are
12:00 - using you can uh create the setup for
12:03 - that right but for now for Simplicity
12:06 - I'm going to uh set up the local
12:10 - projects so I'm going to click on this
12:12 - option which is create a local project
12:16 - and here first of all I need to name my
12:19 - project I'm going to name my project as
12:21 - sample because I have a repository
12:25 - called sample and I want to uh create
12:28 - the same uh project name in the Sona
12:32 - Cube so you also need to provide a
12:34 - project name in the Sona Cube so it's a
12:37 - good idea to name the same name as your
12:42 - repository name in Sona Cube
12:45 - also the project key is sample you need
12:48 - to provide the unique project key here
12:51 - so for now I'm going to leave it as
12:53 - default which is sample and the main
12:56 - branch uh is Main in my case because I
13:00 - am hosting this project on the GitHub
13:03 - which I'm going to clone locally in my
13:06 - uh local operating system I'm going to
13:09 - click on next
13:10 - here now here I have two options I'm
13:13 - going to choose the first option which
13:14 - is use Global setting and then scroll
13:18 - down and I'm going to click on create
13:20 - project here which is going to create my
13:22 - project now it asks me how do you want
13:25 - to analyze your repository for that also
13:28 - so you can have all these different
13:31 - options I'm going to choose this option
13:34 - which is locally because I also want to
13:37 - show you how sonar scanner works right
13:42 - and this is possible using the local U
13:46 - scanning right so I'm going to click on
13:48 - locally here and then it says token name
13:52 - I'm going to uh leave it as default
13:55 - which is analyze
13:56 - sample you can also choose the
13:59 - expiration date for your token I'm going
14:01 - to choose let's say no expiration here
14:04 - and then click on generate which is
14:07 - going to generate my token which I'm
14:09 - going to use to scan my uh code and then
14:15 - push that code to the Sona Cube
14:18 - server once that's done you just need to
14:22 - uh copy this uh token somewhere and then
14:26 - click on continue and then you need to
14:29 - decide which type of project you have so
14:32 - if you have Maven project you can click
14:34 - on this option if you have gradal
14:36 - project you can click on this option and
14:38 - then for net you can click on this
14:40 - option I want to run the code analysis
14:44 - on my python project so I'm going to
14:47 - click on this option which says other
14:51 - jsts go python PHP so it includes the
14:55 - Python language
14:56 - also now also I need to decide which
14:59 - operating system I'm using I'm using the
15:01 - Linux operating system so I'm going to
15:03 - choose Linux and then here I have the
15:07 - command to run the scanner right but
15:11 - first of all I need to download the
15:14 - scanner you can see download and unzip
15:17 - the scanner for Linux so I'm going to
15:19 - click on this link which is available
15:21 - here which is going to redirect me to uh
15:24 - the download page for the sonar scanner
15:27 - CLI here I need to choose the Linux
15:30 - 64bit so I'm going to uh select uh Linux
15:34 - 64bit here which is going to download
15:37 - this ZIP file for sonar scanner
15:41 - right now I can just uh click on this
15:45 - ZIP file and extract this ZIP file in
15:48 - the downloads folder
15:50 - itself and all I need to do is so let me
15:54 - go to the sonar Cube directory which I
15:56 - have extracted you can see it have these
15:59 - four
16:00 - folder the configuration is saved in the
16:03 - conf folder so by default when you open
16:06 - this configuration file you can see the
16:09 - default uh URL here is HTTP uh Local
16:14 - Host Port 9000 so we are also running
16:17 - our Sona Cube server on Port 9000 if you
16:22 - are running your sonar Cube server on
16:24 - different URL or Port you need to change
16:27 - this configuration here in our case we
16:30 - are good to go because our sonar Cube
16:32 - server is running on the port 9,000 on
16:36 - Local Host let me just close this now
16:40 - the next important directory here is
16:42 - this bin directory where our sonar
16:46 - scanner binary is available right so we
16:49 - are going to use this sonar scanner
16:52 - binary in order to uh run the Sona
16:56 - scanner on our code but till now we
16:59 - don't have our codee right so let me
17:02 - clone my repository so I have a GitHub
17:05 - repository where I have the
17:07 - sample
17:09 - repository and it has a python script
17:12 - which I want to analyze so I'm going to
17:15 - just click on code here and I'm going to
17:18 - clone this uh repository by just uh
17:22 - clicking on this uh copy and then I'm
17:26 - going to go to the terminal let me open
17:28 - the new terminal here and then I'm going
17:30 - to just write get clone and then
17:34 - whatever I have copied which is going to
17:37 - uh clone my repository in my uh home
17:40 - folder itself so I'm going to go to the
17:43 - samples uh directory which is my uh
17:45 - GitHub repository and here you can see I
17:48 - have this python script and here now I
17:52 - have to run the scanner command so go to
17:56 - your um Local Host 99000 where you uh
18:00 - have clicked on the installation link
18:05 - for scanner just below that you will
18:07 - also find the sonar scanner command
18:12 - which you can run in your project
18:16 - directory so this is the command which
18:18 - we are going to run in our code
18:19 - directory right so let me open the
18:22 - sample directory in Visual Studio code
18:25 - for
18:27 - example and and as I mentioned it has
18:30 - two uh files one is read me other is uh
18:35 - test.py file let me open the terminal
18:39 - also and also let me just uh paste this
18:44 - command which I have copied which is for
18:46 - the Sona scanner right so this is the
18:50 - command let me just explain this command
18:53 - a little so here you can see you can set
18:56 - the project key which which is sample in
18:59 - my case because I have created the
19:01 - sample project key in sonar cube right
19:05 - now where do you want to run your uh
19:09 - code analysis using the scanner in the
19:13 - current directory that's why we have
19:15 - provided dot here right so you need to
19:17 - run this command in your project
19:19 - directory the URL is given here which is
19:23 - Local Host 9,000 where our Sona Cube
19:26 - server is running also we need to
19:28 - provide the D sonar. token and this is
19:33 - our token which we have created
19:36 - previously this is the same token right
19:39 - so this is the token this is the URL and
19:43 - then we have created the project which
19:47 - is called sample right which is this one
19:52 - so this is what uh it's uh showing here
19:55 - in this Command right so now because our
19:58 - Sona scanner resides in the downloads
20:02 - folder so you have the choice to set the
20:05 - environment variable for this Sona
20:08 - scanner path in your bash
20:11 - RC I think you guys can do that but for
20:17 - Simplicity I'm going to just copy the
20:19 - full path of this Sona scanner so right
20:21 - now we will uh go to the downloads
20:25 - folder and then go to the bin directory
20:27 - and then I'm going to right click on the
20:29 - Sona scanner and then I'm going to copy
20:31 - the full path
20:34 - here for the bin directory where my Sona
20:37 - scanner resides and then I'm going to
20:40 - add this path in front of Sona scanner
20:43 - so this is the full path of my binary
20:46 - right so once you set the path in your
20:49 - bash RC for the Sona scanner it's going
20:52 - to run without this long path but for
20:55 - now I need to add this path here right
20:59 - so let's copy this whole command and
21:03 - then I'm in my uh repository directory
21:06 - where my python script is there which I
21:08 - want to analyze so just uh open the
21:13 - directory in the terminal you can see
21:15 - sample directory is open and I'm going
21:16 - to paste this scanner command here and
21:20 - then press enter which is going to run
21:23 - the
21:24 - scanner in your uh project directory you
21:29 - can see it's analyzing the code quality
21:32 - and all the other uh rules and then once
21:37 - everything is done you can see execution
21:39 - is successful here right the scanner
21:42 - also create these temporary or hidden
21:44 - files which is for report task. txt and
21:49 - also the sonar lock
21:51 - right so once your code is analyzed
21:56 - sonar scanner is going to to push the
21:59 - Matrix it has collected to the Sona Cube
22:03 - server so let's go to our browser and
22:07 - here you need to just refresh your uh
22:12 - browser and you can see we are still on
22:14 - Local Host 9000 and once you click on
22:18 - overview you will be able to see the
22:20 - overview of your code analysis
22:24 - right so as I said the
22:28 - Sona scanner has pushed all the Matrix
22:32 - to the Sona Cube server and it has saved
22:37 - the Matrix in the post grade database
22:40 - whose container is running and we can
22:43 - see the result here right now my code
22:47 - quality is passed if your code contains
22:51 - any uh vulnerability issues or
22:54 - maintainability issues or reliability
22:56 - issues you're going to see some bugs
23:00 - here or you will be able to see the Cod
23:02 - smells here and then Security review and
23:06 - vulnerabilities here you can see I don't
23:09 - have any code coverage for my uh project
23:13 - so I can see Zero code coverage but if
23:17 - your project is covered with some
23:20 - tests then you will also see the code
23:23 - coverage percentage here for your unit
23:26 - tests right you will also see the
23:29 - duplicate blocks here so on the overview
23:34 - tab you will be able to see all those
23:37 - you can also see the issues tab here
23:39 - where you will see all the issues
23:41 - related to
23:42 - consistency then all these adoptability
23:46 - and responsibility software quality
23:49 - right you also have the security
23:52 - hotspots right now I don't have any then
23:55 - you also have the measures right right
23:58 - so how is the overview of your project
24:03 - how uh is the
24:06 - reliability analysis over time right so
24:10 - for example if you are
24:13 - pushing the changes to your repository
24:17 - right the scanner is going to scan your
24:19 - code once again or you need to scan your
24:21 - code once again if you are running the
24:23 - scanner locally and then it's going to
24:26 - show you the analysis over time right
24:30 - you also have the code analysis here
24:32 - right now I can see the name of my
24:34 - python script and I don't have any bugs
24:38 - here I have nine lines of code and the
24:42 - coverage and everything is uh available
24:45 - here right so over time you will see
24:49 - this metrics is will be grown right also
24:53 - at the top you can see the list of uh
24:56 - all your projects right now I only have
24:58 - one project which I have created which
25:00 - is
25:01 - sample you also will see the list of all
25:04 - the rules right so Sona Cube server
25:08 - comes with predefined rules for many
25:11 - languages for example Java have 632
25:15 - rules we are using python so it has 268
25:19 - rules you can see for example
25:21 - consistency rule or other rules are
25:24 - available and as I mentioned you can all
25:27 - also add or remove or disable rules from
25:32 - this list
25:34 - right so these are the rules against
25:37 - which your code will be
25:40 - analyzed and it's available here okay
25:44 - you also have the quality profile and
25:47 - then other things quality gate
25:51 - Administration and then more so this is
25:54 - how you can install and set up Sona Cube
25:58 - for your project on your local machine
26:02 - using Docker I hope you've enjoyed this
26:04 - video and I will see you in the next
26:06 - video

Cleaned transcript:

hey guys in this video I'm going to give you a brief introduction about Sona Cube and also I'm going to show you how you can set up Sona Cube and do some code analysis using Sona Cube on your favorite operating system so let's get started and let's see what is Sona Cube so Sona cube is an opsource platform designed for continuous inspection of code quality that means it plays a crucial role in development life cycle by identifying and addressing potential issues early on ensuring the delivery of high quality software now let's see what are some of the features of Sona Cube so when you run a scan on your code which you are developing using Sona Cube it pushes some metrics to the Sona Cube server so sonak tube is going to analyze your code and provide you a very good metrics of your code quality it's going to continuously inspect your code so whenever you push a new code it's going to run the scanner once again and then it's going to report all the vulnerabilities or bug or potential issues in your code and also Sona Cube comes with extensive rule set so our rule is used to analyze your code based on the language uh you are using for your uh software development so for example if you're using python code there are some rules related to python which are used by sonar Cube to analyze your code and then based on those rules it's going to provide the Matrix you can also add your custom rules in addition to the hundreds of rules which are already available in Sona Cube now what are the benefits of using Sona Cube so the most important benefit is it's going to improve the code maintainability of your code also it's going to uh make your code more secure and it's going to enhance your code reliability because it's going to uh detect the code vulnerabilities like security vulnerabilities issues and then potential uh coverage issues all these issues are detected by sonar Cube and reported in its web interface also it have many type of Integrations so it can integrate with GitHub or Azure devops or your favorite cicd tool so that it can run the code analysis as soon as you push your code to your favorite repository right so it will help you for the whole life cycle of your code development now let's see what are the main components of sonar Cube and then we are going to see how we can run the sonar Cube on our operating system so there are two main components of Sona Cube one is called Sona Cube server and other is called son Sona Cube scanner so in this Sona Cube server when you install a sonar Cube server you need to link it with some database it can be a postr database or any other database which it supports and it also comes with some rules now the second important component in Sona cube is the Sona Cube scanner now let's say you have cloned a repository on your local operating system then you also need to install the Sona Cube scanner on your local machine which is going to scan your code and then it's going to send the analysis via the scanner to the server right so sonar Cube scanner is going to scan your code do the code quality analysis uh then it's going to prepare the Matrix and then it's going to push all the Matrix to the Sona Q server and how it's going to analyze the code it's going to analyze the code based on the rules defined in Sona Cube server right once the available metrix is pushed to sonar Cube server it saves that metrix into the linked database so these are few main components of Sona Cube now let's see how we can install sonar Cube we are going to use the docker images of sonar Cube to uh run Sona Cube on our Linux operating system but these steps will be valid for any other operating system which supports Docker for example Windows or Mac operating system let's also go to the main home hom page of Sona Cube and see uh what are the offerings it's uh providing so it has the community version which you can download it for free and it supports uh all these languages and then it has all these capabilities like detecting bugs and basic vulnerabilities it also reviews security hotspots track code smells and then code quality metrics and history cicd integration and other plugins are available so when you uh use Community version you can use it to learn how sonar Cube works if you want to use the sonar Cube developer version then you can uh use this version which comes with more capabilities in addition to the community version and then you can also use the Enterprise or data center Edition also right so we are going to be using the community edition of sonar Cube so as I said we are going to use the docker to install Sona Cube so you can go to the dockerhub website and then search for Sona Cube here and you will find the official Docker image of the Sona Cube here so you can see this is Sona Cube and it's the docker official image right so to uh get sonar Cube using Docker this is the command for that so just run this command on your terminal which is Docker pull sonar Cube so let me open the terminal here and then let me just run this command which is Docker P Sona Cube and then let me provide my uh password here and it's going to pull the latest image for Sona Cube now I have already pulled this image earlier so it says image is up to date but in your case it's going to download this image right so once this Sona Cube image is uh pulled from the docker repository the next command is this one so once you have a sonar Cube image we also need to pull the post gray image because we are going to use the post gray as a database for our Sona Cube server so this is the command for that so it's going to uh pull the post cray uh image and it's going to run the post cray server using all these attributes so we are going to uh run this uh post gray server with the post gray user sonar post gray password sonar and the post gray DB which will be called sonar Cube so I'm going to put all these commands in the description of this video so you can use them directly on your terminal so I'm going to just copy this uh command so let me just uh paste this command here and then press enter so it's going to uh find the proper Library image for post gray you can see it's extracting that and then it's going to run the container so once post gray container is running we can also check uh this using the docker PS command so I'm going to uh just run Docker PS here and you can see post gray uh container is running here right let me clear the terminal and then we are going to run the last command which is to run the actual Sona Cube server with the linked postr SQL container which we have created right so this is the command for that as I said I'm going to uh paste this code or this command in the description of this video so you can directly use that we are going to start the sonar Cube server on this port which is 9,000 so once that uh sonar Cube server starts it's going to be available on the port 9,000 so I'm going to just uh paste this come the terminal and then uh press enter and it's going to create this uh container once again I can run the Docker PS command and you will be able to see that now my uh Sona Cube container is also running and it's running on Port 9,000 right so we have forwarded this port to our Local Host also so now we can go to our browser and then we can open sonar Cube on the port 9,000 so just write Local Host colon 9000 here and you can see the Sona Cube web interface is starting if it doesn't start immediately that means that you need to wait for some time so just uh wait for one or two minutes and it's going to start automatically so now you can see uh the login page for Sona Cube the default login and password for Sona cube is admin and admin right so you can just write admin as the username and admin as password so I'm going to provide admin as password also and I'm going to Press login here which is going to log me into my Sonar Cube server as soon as I log to my Sona Cube server Sona cube is going to uh ask me to change my password immediately so I need to provide the old password which is admin by default so I'm going to provide that and then I'm going to provide the new password let's say I'm going to provide a new password as admin1 123 and then confirm this password admin 1 2 3 and then I'm going to click on update here which is going to update my password and open this kind of interface now as I mentioned earlier you can link your project which is hosted on Azure devops or GitHub or gitlab or bit bucket or bit bucket server so whatever Dev tool you are using you can uh create the setup for that right but for now for Simplicity I'm going to uh set up the local projects so I'm going to click on this option which is create a local project and here first of all I need to name my project I'm going to name my project as sample because I have a repository called sample and I want to uh create the same uh project name in the Sona Cube so you also need to provide a project name in the Sona Cube so it's a good idea to name the same name as your repository name in Sona Cube also the project key is sample you need to provide the unique project key here so for now I'm going to leave it as default which is sample and the main branch uh is Main in my case because I am hosting this project on the GitHub which I'm going to clone locally in my uh local operating system I'm going to click on next here now here I have two options I'm going to choose the first option which is use Global setting and then scroll down and I'm going to click on create project here which is going to create my project now it asks me how do you want to analyze your repository for that also so you can have all these different options I'm going to choose this option which is locally because I also want to show you how sonar scanner works right and this is possible using the local U scanning right so I'm going to click on locally here and then it says token name I'm going to uh leave it as default which is analyze sample you can also choose the expiration date for your token I'm going to choose let's say no expiration here and then click on generate which is going to generate my token which I'm going to use to scan my uh code and then push that code to the Sona Cube server once that's done you just need to uh copy this uh token somewhere and then click on continue and then you need to decide which type of project you have so if you have Maven project you can click on this option if you have gradal project you can click on this option and then for net you can click on this option I want to run the code analysis on my python project so I'm going to click on this option which says other jsts go python PHP so it includes the Python language also now also I need to decide which operating system I'm using I'm using the Linux operating system so I'm going to choose Linux and then here I have the command to run the scanner right but first of all I need to download the scanner you can see download and unzip the scanner for Linux so I'm going to click on this link which is available here which is going to redirect me to uh the download page for the sonar scanner CLI here I need to choose the Linux 64bit so I'm going to uh select uh Linux 64bit here which is going to download this ZIP file for sonar scanner right now I can just uh click on this ZIP file and extract this ZIP file in the downloads folder itself and all I need to do is so let me go to the sonar Cube directory which I have extracted you can see it have these four folder the configuration is saved in the conf folder so by default when you open this configuration file you can see the default uh URL here is HTTP uh Local Host Port 9000 so we are also running our Sona Cube server on Port 9000 if you are running your sonar Cube server on different URL or Port you need to change this configuration here in our case we are good to go because our sonar Cube server is running on the port 9,000 on Local Host let me just close this now the next important directory here is this bin directory where our sonar scanner binary is available right so we are going to use this sonar scanner binary in order to uh run the Sona scanner on our code but till now we don't have our codee right so let me clone my repository so I have a GitHub repository where I have the sample repository and it has a python script which I want to analyze so I'm going to just click on code here and I'm going to clone this uh repository by just uh clicking on this uh copy and then I'm going to go to the terminal let me open the new terminal here and then I'm going to just write get clone and then whatever I have copied which is going to uh clone my repository in my uh home folder itself so I'm going to go to the samples uh directory which is my uh GitHub repository and here you can see I have this python script and here now I have to run the scanner command so go to your um Local Host 99000 where you uh have clicked on the installation link for scanner just below that you will also find the sonar scanner command which you can run in your project directory so this is the command which we are going to run in our code directory right so let me open the sample directory in Visual Studio code for example and and as I mentioned it has two uh files one is read me other is uh test.py file let me open the terminal also and also let me just uh paste this command which I have copied which is for the Sona scanner right so this is the command let me just explain this command a little so here you can see you can set the project key which which is sample in my case because I have created the sample project key in sonar cube right now where do you want to run your uh code analysis using the scanner in the current directory that's why we have provided dot here right so you need to run this command in your project directory the URL is given here which is Local Host 9,000 where our Sona Cube server is running also we need to provide the D sonar. token and this is our token which we have created previously this is the same token right so this is the token this is the URL and then we have created the project which is called sample right which is this one so this is what uh it's uh showing here in this Command right so now because our Sona scanner resides in the downloads folder so you have the choice to set the environment variable for this Sona scanner path in your bash RC I think you guys can do that but for Simplicity I'm going to just copy the full path of this Sona scanner so right now we will uh go to the downloads folder and then go to the bin directory and then I'm going to right click on the Sona scanner and then I'm going to copy the full path here for the bin directory where my Sona scanner resides and then I'm going to add this path in front of Sona scanner so this is the full path of my binary right so once you set the path in your bash RC for the Sona scanner it's going to run without this long path but for now I need to add this path here right so let's copy this whole command and then I'm in my uh repository directory where my python script is there which I want to analyze so just uh open the directory in the terminal you can see sample directory is open and I'm going to paste this scanner command here and then press enter which is going to run the scanner in your uh project directory you can see it's analyzing the code quality and all the other uh rules and then once everything is done you can see execution is successful here right the scanner also create these temporary or hidden files which is for report task. txt and also the sonar lock right so once your code is analyzed sonar scanner is going to to push the Matrix it has collected to the Sona Cube server so let's go to our browser and here you need to just refresh your uh browser and you can see we are still on Local Host 9000 and once you click on overview you will be able to see the overview of your code analysis right so as I said the Sona scanner has pushed all the Matrix to the Sona Cube server and it has saved the Matrix in the post grade database whose container is running and we can see the result here right now my code quality is passed if your code contains any uh vulnerability issues or maintainability issues or reliability issues you're going to see some bugs here or you will be able to see the Cod smells here and then Security review and vulnerabilities here you can see I don't have any code coverage for my uh project so I can see Zero code coverage but if your project is covered with some tests then you will also see the code coverage percentage here for your unit tests right you will also see the duplicate blocks here so on the overview tab you will be able to see all those you can also see the issues tab here where you will see all the issues related to consistency then all these adoptability and responsibility software quality right you also have the security hotspots right now I don't have any then you also have the measures right right so how is the overview of your project how uh is the reliability analysis over time right so for example if you are pushing the changes to your repository right the scanner is going to scan your code once again or you need to scan your code once again if you are running the scanner locally and then it's going to show you the analysis over time right you also have the code analysis here right now I can see the name of my python script and I don't have any bugs here I have nine lines of code and the coverage and everything is uh available here right so over time you will see this metrics is will be grown right also at the top you can see the list of uh all your projects right now I only have one project which I have created which is sample you also will see the list of all the rules right so Sona Cube server comes with predefined rules for many languages for example Java have 632 rules we are using python so it has 268 rules you can see for example consistency rule or other rules are available and as I mentioned you can all also add or remove or disable rules from this list right so these are the rules against which your code will be analyzed and it's available here okay you also have the quality profile and then other things quality gate Administration and then more so this is how you can install and set up Sona Cube for your project on your local machine using Docker I hope you've enjoyed this video and I will see you in the next video
