With timestamps:

00:00 - so in today's video you will be learning
00:01 - about stack plots
00:03 - stack plots are also called as area
00:05 - plots
00:07 - so let's get started area
00:10 - plots are pretty much similar to the
00:12 - line plot
00:14 - these plots can be used to track changes
00:16 - over time
00:17 - for two or more related groups that make
00:20 - up one whole category
00:22 - for example let's compile the work
00:26 - done during a day by student
00:30 - so we'll go in our
00:33 - project and we create a new python file
00:35 - so we'll give on the python file name is
00:38 - stack underscore plot
00:42 - and then we'll press ok and we'll copy
00:45 - some starting code from the stat plots
00:48 - from pie chart actually
00:50 - that is importing the numpy snp and
00:53 - from matplotlib import pipeline as plt
00:56 - then we'll use the style 538
01:00 - and then we'll copy the
01:03 - plot dot show and grid functions
01:10 - or we'll remove the title for now okay
01:14 - so so let's go in data dot py
01:20 - so we have a file list here so we'll
01:23 - copy them
01:25 - and we'll paste it here okay
01:28 - so we just plot them using pie chart
01:32 - so we had already done in the last video
01:35 - lecture
01:36 - so in the pi function will pass a list
01:40 - so how many uh list we want to
01:44 - show so we have four so we'll type one
01:46 - comma one comma one comma one
01:48 - comma then we'll close the list and
01:51 - we'll pass the labels
01:53 - for for the list so first is eight
01:56 - then second one is sleep
01:59 - okay okay the second one is actually
02:03 - study then close that
02:06 - and we'll remove the extra inverted
02:08 - comma then we have
02:10 - code and then sleep so i will just
02:15 - remove the comma and i have to place the
02:18 - code
02:19 - in front of sleep actually so we'll
02:21 - paste it here reveal the comma
02:24 - and we'll remove the extra commas now
02:27 - okay so this will plot
02:30 - a normal pie chart so i will show you
02:34 - why i'm plotting this so we'll type plt
02:38 - dot
02:38 - title so in that title we'll give as pie
02:41 - chart
02:46 - okay we make that h okay and then we
02:50 - will run this so for that
02:53 - we'll right click and we'll run stack
02:56 - parts
02:57 - okay so the normal pie chart will give
02:59 - you
03:00 - four quarters with study each sleep and
03:03 - code
03:04 - but uh this is like so what if you want
03:08 - to show
03:09 - data for five days in continuous manner
03:12 - so we can't show that actually using pie
03:15 - chart so
03:16 - for that we'll use this stack plot
03:18 - particularly
03:19 - so here you can see for a particular day
03:21 - one a particular student will have
03:24 - one hour of eating and
03:28 - eight hours of studying six hours of
03:31 - coding
03:32 - nine hours of sleep so like that
03:36 - we have five consecutive days so
03:39 - you can see second day he has three
03:42 - three hours of eating five hours of
03:45 - study
03:46 - code for eight hours and sleep for eight
03:48 - hours like that
03:51 - so what we will do we will remove the pi
03:53 - function so we'll type plt dot
03:55 - stack plot we'll open the parenthesis so
03:58 - inside that will pass
04:01 - our list so our first list we want to
04:03 - show is
04:05 - days actually so you can see the data
04:09 - in the it we have actually our
04:12 - data is increasing in study list and in
04:15 - sleep
04:17 - so what we will do we will pass first
04:19 - days
04:21 - as a parameter to state plot so this is
04:24 - a list
04:25 - then we will pass eight then it will
04:27 - pass study
04:29 - then code and then sleep
04:33 - okay so that is enough and we change the
04:37 - title as
04:38 - stack plot
04:44 - okay stack plot and now right click and
04:47 - we'll run the
04:48 - file so
04:51 - if you run it now it will load you can
04:54 - see that
04:55 - it is showing us the data for five
04:58 - consecutive days on x-axis we have
05:00 - days and on y-axis we have hours
05:05 - so you can see we have not given the
05:08 - labels actually so we are not
05:10 - finding uh which one is what so
05:14 - you can see the we will just
05:17 - close it and we will just put the labels
05:20 - now
05:22 - so we'll create a list for labels so
05:25 - type labels
05:26 - equal to so we'll open the
05:32 - square brackets and we'll pass the
05:33 - string first label is 8
05:35 - for our first list then we have sleep
05:39 - not sleep actually we have study then
05:42 - third one is code and then the fourth
05:45 - one is
05:46 - sleep so
05:50 - we'll pass these labels in the stack
05:52 - plot as parameters so labels equal to
05:55 - labels that is our list
05:59 - and if we run it now so before running
06:02 - we'll type
06:03 - plt.legend so this is very much
06:05 - important
06:07 - so what this will do this will print the
06:10 - labels on the screen
06:11 - so that we can find it as which color is
06:14 - written pertaining to which particular
06:17 - label
06:18 - so you can see blue is for eight
06:22 - then orange is for study and on y axis
06:26 - we can see the hours
06:28 - and access is we have days
06:31 - okay so we have
06:35 - then blue color we have this uh eight
06:38 - which is actually decreasing
06:40 - in in middle for third day it was like
06:43 - four or five hours
06:47 - and then the story you can see it is a
06:50 - increasing
06:52 - in order and the code is actually
06:54 - decreasing
06:56 - till we reach the fifth day and the
06:58 - student is actually getting more sleep
07:00 - by the end of the fifth day so
07:03 - you can find it okay so
07:07 - another thing is we can change the
07:10 - location of the
07:13 - stack plot legend so we'll type
07:16 - in the legend loc equal to
07:19 - where we want to show that so we'll type
07:22 - upper left
07:22 - so upper space left so this is a string
07:25 - that we have to pass
07:27 - in the location loc variable the legend
07:30 - function so
07:31 - you can see the location of the legend
07:34 - is a change now and it is at the upper
07:36 - left
07:36 - corner okay so now what we will do is
07:42 - we will create one more list for colors
07:45 - here you can pass hex code also that is
07:47 - hexadecimal codes
07:50 - and also the
07:54 - short form or short characters so we
07:57 - have m for magenta c for c
07:59 - n r for red and
08:02 - k for black this i already showed you
08:05 - in my earlier videos you can refer them
08:08 - so we'll pass that
08:10 - list as colors equal to colors
08:13 - in the stack plot function so we'll
08:15 - remove the extra
08:16 - spaces white spaces and we'll run
08:19 - it again we'll run it again
08:23 - okay we'll also put tight layout
08:26 - just in case for nice padding so plt dot
08:30 - tight layout
08:31 - okay so now we'll right click here and
08:34 - we'll run it again
08:35 - so here you can see our check colors are
08:38 - changed and it looks
08:39 - really nice now really vibrant
08:43 - okay so magenta is the
08:48 - eight eighteen hours xi'an is the
08:51 - study hours an orange or kind of red
08:55 - is a coding hours and we have black for
08:58 - sleeping hours but you can see
09:02 - our legend is little bit uh off the grid
09:05 - it is a little bit getting outside so we
09:07 - can fix that
09:08 - so what we have to do is in our
09:12 - legend for loc variable we'll remove
09:16 - that string
09:16 - and instead of that we'll pass a tuple
09:19 - so how you
09:20 - create a tuples you have to just open
09:23 - and
09:23 - close the parenthesis and inside that
09:27 - we have to pass the x and y coordinates
09:30 - or percentage
09:34 - by which you want to shift the legend so
09:37 - we'll pass
09:38 - so 0.06 that is not
09:42 - actually 6 percent that is 0.06 percent
09:45 - and also that is from left and from the
09:49 - bottom we will
09:50 - pass 0.06 percent so now
09:53 - save it run it again so
09:56 - you can see our legend is now
09:59 - shifted towards the little bit inside
10:03 - of the area plot and you can see
10:06 - it is nicely put so
10:10 - by this how this is how you can
10:12 - customize your stack plot
10:14 - so this is just one example you can do
10:17 - more kind of this using
10:19 - stack plots you can actually create uh
10:22 - stacked
10:23 - stack plots those are actually
10:26 - sit one top of the another okay so as
10:29 - usual i will provide
10:31 - this python file in my github link
10:35 - in the description of the video so i
10:37 - hope you like this video
10:39 - thanks for watching and i will see you
10:40 - in the next video

Cleaned transcript:

so in today's video you will be learning about stack plots stack plots are also called as area plots so let's get started area plots are pretty much similar to the line plot these plots can be used to track changes over time for two or more related groups that make up one whole category for example let's compile the work done during a day by student so we'll go in our project and we create a new python file so we'll give on the python file name is stack underscore plot and then we'll press ok and we'll copy some starting code from the stat plots from pie chart actually that is importing the numpy snp and from matplotlib import pipeline as plt then we'll use the style 538 and then we'll copy the plot dot show and grid functions or we'll remove the title for now okay so so let's go in data dot py so we have a file list here so we'll copy them and we'll paste it here okay so we just plot them using pie chart so we had already done in the last video lecture so in the pi function will pass a list so how many uh list we want to show so we have four so we'll type one comma one comma one comma one comma then we'll close the list and we'll pass the labels for for the list so first is eight then second one is sleep okay okay the second one is actually study then close that and we'll remove the extra inverted comma then we have code and then sleep so i will just remove the comma and i have to place the code in front of sleep actually so we'll paste it here reveal the comma and we'll remove the extra commas now okay so this will plot a normal pie chart so i will show you why i'm plotting this so we'll type plt dot title so in that title we'll give as pie chart okay we make that h okay and then we will run this so for that we'll right click and we'll run stack parts okay so the normal pie chart will give you four quarters with study each sleep and code but uh this is like so what if you want to show data for five days in continuous manner so we can't show that actually using pie chart so for that we'll use this stack plot particularly so here you can see for a particular day one a particular student will have one hour of eating and eight hours of studying six hours of coding nine hours of sleep so like that we have five consecutive days so you can see second day he has three three hours of eating five hours of study code for eight hours and sleep for eight hours like that so what we will do we will remove the pi function so we'll type plt dot stack plot we'll open the parenthesis so inside that will pass our list so our first list we want to show is days actually so you can see the data in the it we have actually our data is increasing in study list and in sleep so what we will do we will pass first days as a parameter to state plot so this is a list then we will pass eight then it will pass study then code and then sleep okay so that is enough and we change the title as stack plot okay stack plot and now right click and we'll run the file so if you run it now it will load you can see that it is showing us the data for five consecutive days on xaxis we have days and on yaxis we have hours so you can see we have not given the labels actually so we are not finding uh which one is what so you can see the we will just close it and we will just put the labels now so we'll create a list for labels so type labels equal to so we'll open the square brackets and we'll pass the string first label is 8 for our first list then we have sleep not sleep actually we have study then third one is code and then the fourth one is sleep so we'll pass these labels in the stack plot as parameters so labels equal to labels that is our list and if we run it now so before running we'll type plt.legend so this is very much important so what this will do this will print the labels on the screen so that we can find it as which color is written pertaining to which particular label so you can see blue is for eight then orange is for study and on y axis we can see the hours and access is we have days okay so we have then blue color we have this uh eight which is actually decreasing in in middle for third day it was like four or five hours and then the story you can see it is a increasing in order and the code is actually decreasing till we reach the fifth day and the student is actually getting more sleep by the end of the fifth day so you can find it okay so another thing is we can change the location of the stack plot legend so we'll type in the legend loc equal to where we want to show that so we'll type upper left so upper space left so this is a string that we have to pass in the location loc variable the legend function so you can see the location of the legend is a change now and it is at the upper left corner okay so now what we will do is we will create one more list for colors here you can pass hex code also that is hexadecimal codes and also the short form or short characters so we have m for magenta c for c n r for red and k for black this i already showed you in my earlier videos you can refer them so we'll pass that list as colors equal to colors in the stack plot function so we'll remove the extra spaces white spaces and we'll run it again we'll run it again okay we'll also put tight layout just in case for nice padding so plt dot tight layout okay so now we'll right click here and we'll run it again so here you can see our check colors are changed and it looks really nice now really vibrant okay so magenta is the eight eighteen hours xi'an is the study hours an orange or kind of red is a coding hours and we have black for sleeping hours but you can see our legend is little bit uh off the grid it is a little bit getting outside so we can fix that so what we have to do is in our legend for loc variable we'll remove that string and instead of that we'll pass a tuple so how you create a tuples you have to just open and close the parenthesis and inside that we have to pass the x and y coordinates or percentage by which you want to shift the legend so we'll pass so 0.06 that is not actually 6 percent that is 0.06 percent and also that is from left and from the bottom we will pass 0.06 percent so now save it run it again so you can see our legend is now shifted towards the little bit inside of the area plot and you can see it is nicely put so by this how this is how you can customize your stack plot so this is just one example you can do more kind of this using stack plots you can actually create uh stacked stack plots those are actually sit one top of the another okay so as usual i will provide this python file in my github link in the description of the video so i hope you like this video thanks for watching and i will see you in the next video
