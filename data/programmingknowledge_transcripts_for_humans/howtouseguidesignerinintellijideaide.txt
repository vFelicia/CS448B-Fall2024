With timestamps:

00:00 - hey guys in this video I'm going to show
00:01 - you how you can create your first
00:03 - JavaScript swing GUI application on
00:07 - IntelliJ IDEA IDE
00:09 - so hopefully you already have installed
00:13 - IntelliJ IDEA IDE if you haven't I will
00:16 - link the video in the description where
00:18 - I have shown you how you can install
00:19 - IntelliJ IDEA on your Windows operating
00:22 - system
00:23 - so once you have opened your IntelliJ
00:26 - IDEA IDE
00:27 - go to the file option here and then
00:30 - click on new and then click on project
00:33 - and here
00:34 - there are few options what we are going
00:37 - to do is we are going to create a Java
00:40 - application and here I'm going to choose
00:43 - groovy here
00:44 - and the project SDK is 17 so jdk 17 is
00:50 - installed on my system whatever is the
00:52 - latest version of jdk installed on your
00:55 - system it's going to show that here so
00:57 - just leave it as default and select
00:59 - groovy here and then click on next
01:01 - and give the name of your project I'm
01:04 - going to just name my project as GUI
01:08 - app for example and then I'm going to
01:11 - click on finish
01:14 - which is going to download some files
01:16 - and it's going to create your Java
01:20 - project and now it says open project
01:22 - where would you like to open the project
01:24 - GUI app I'm going to click on this
01:28 - window
01:31 - and you can see this project has been
01:33 - created so once your project is created
01:35 - it's going to look like this here it
01:38 - contains a few folders one is Library
01:41 - other is dot idea we do not need to
01:45 - change anything here also you will see
01:47 - one more folder here which is called SRC
01:50 - here we are going to create our GUI
01:54 - related files right so I'm going to
01:56 - right click on the source folder click
01:58 - on new and here you will be able to see
02:00 - this option which is called swing UI
02:02 - designer just click on GUI form here and
02:06 - on this window you need to provide two
02:08 - things one is the form name and other is
02:10 - the class name so form name I'm going to
02:13 - name my form as Main and class name will
02:16 - be the same
02:18 - the base layout manager is grid layout
02:21 - manager you also have card layout flow
02:25 - layout and other layouts
02:27 - I am going to select the grid layout
02:30 - manager which is default in IntelliJ
02:33 - IDEA and I'm going to click on OK
02:38 - which is going to create this class and
02:40 - you can see it's going to create the
02:43 - main.java class and Main dot form class
02:46 - both you will be able to see here under
02:50 - Main
02:51 - now you can see here there is a GUI
02:54 - designer when you select main dot form
02:57 - and there is this Java file which is
03:00 - right now empty so first of all what you
03:02 - need to do without adding any component
03:06 - from this palette let's try to run this
03:10 - application right so we need to first of
03:14 - all set the title of our jframe we need
03:18 - to set the default close operation we
03:22 - also can set the size all these things
03:25 - we can do in the main dot Java file so
03:28 - without any component you just need to
03:32 - go to your main.java file and first of
03:36 - all you need to extend your GUI
03:39 - application
03:40 - using JS frame so just write after main
03:44 - extends
03:47 - and then just write J free so at every
03:52 - point you will see the hints from
03:54 - IntelliJ IDEA as soon as you add this
03:57 - jframe this you can see Java x dot swing
04:02 - dot Asterix is added in your main class
04:06 - right now I'm going to just create a
04:10 - Constructor function so I am going to
04:12 - just write
04:14 - public
04:15 - and then the name of my class which is
04:19 - Main and then Constructor looks like
04:23 - this so the it has the name similar to
04:27 - your Java class and then inside this
04:31 - Constructor I need to do few things
04:34 - right as I mentioned
04:36 - so what you can do here is I'm going to
04:39 - just copy and paste some code and I will
04:42 - just
04:44 - demonstrate or illustrate what this code
04:47 - is doing
04:48 - you just write set title and whatever
04:51 - title you give here will be the title of
04:54 - your window
04:56 - then you have this set default close
05:00 - operation which means when you close
05:03 - your window what is going to happen it
05:06 - is going to exit your project on window
05:09 - close then you have the default size
05:12 - the initial size will be 300 by 200 also
05:17 - you have this method called set location
05:19 - related to null and
05:22 - if you want to learn more about all
05:25 - these methods you can hover over these
05:27 - functions and you can see more
05:31 - description here right and then at last
05:34 - you need to write set visible is equal
05:36 - to True right so add these five lines in
05:41 - your Constructor and also you can create
05:45 - your public static void main you can
05:49 - just write p s v m and then press enter
05:53 - and it's going to create your public
05:55 - static void main method this is the main
05:58 - entry point of your application as you
06:01 - might have already guessed here we are
06:03 - going to initialize our class so I am
06:06 - going to just write new
06:07 - Main and then give this semicolon just
06:13 - save your application by Ctrl s and then
06:17 - we can run our application so first we
06:20 - need to build our application so just
06:21 - click on this Hammer icon and I can see
06:25 - that there is no error when I build this
06:28 - project so I can run this right so I can
06:32 - right click on this file and then I'm
06:34 - going to click on run main dot Main and
06:37 - you can see this window opens with the
06:40 - size
06:41 - 300 and height will be 200 right and you
06:45 - can see the title is simple GUI app
06:48 - which is this one right when I click on
06:50 - this cross icon it is going to exit and
06:54 - this is what this line of code means
06:58 - right
06:59 - so now our basic empty frame is running
07:03 - so now we can start adding some
07:07 - components into our jframe right so the
07:11 - basic component or the parent component
07:13 - here is jpanel and inside the J panel
07:16 - you add your other components right
07:21 - so I can add for example J label here I
07:24 - can just drag and drop this label into
07:28 - my jpanel
07:30 - and you can see
07:32 - the label is added you can add the field
07:35 - name of the J label so I'm going to uh
07:39 - just write
07:41 - JL and then the field name can be
07:45 - anything for example
07:48 - first name right I can also change the
07:53 - text of this label by default its label
07:55 - I can change it to for example
07:59 - first name here and then press enter and
08:03 - you can see this label is now first name
08:07 - right you can also add some text Fields
08:11 - so you have this text area you have this
08:14 - text pane so you can add one of these
08:18 - items I am going to add this text field
08:21 - so I'm going to drag and drop and this
08:23 - will be your text field so you can see
08:26 - the name of the text field is text field
08:28 - one for now I am going to leave it as
08:30 - default but later you can give a proper
08:33 - field name to each and every component
08:35 - which you add in your jpanel right
08:39 - here you have so many options you can
08:43 - even add the text here you can also
08:48 - add many properties using these
08:52 - properties and value options and also
08:54 - from here I can even preview uh what I'm
08:57 - designing right so I can click on
08:59 - preview here
09:00 - and it shows me this first name and then
09:04 - I can see this text box which is yellow
09:07 - right now right I can also add a j
09:11 - button so I can just search for J button
09:14 - and drag and drop into my jpanel
09:18 - and I can even change uh the title here
09:22 - and I can change the
09:26 - label also for this right so you can see
09:31 - the field name is button one which is
09:33 - fine for me for now I can change the
09:36 - text here I can just write the
09:39 - click
09:40 - me for example and then press enter and
09:44 - then this text is changed right now in
09:47 - order to create a listener for this
09:48 - button
09:49 - click I can just right click on this
09:52 - button and then
09:53 - click on create listener I can also
09:57 - press Ctrl or to create this listener
10:00 - for this button just select this and
10:02 - then you can see there are few uh
10:06 - listeners right
10:08 - what I want to select is the extra
10:11 - action listener but you also have other
10:14 - listeners here as I mentioned I want to
10:17 - select the action listener here and then
10:19 - you can see the action listener will be
10:22 - uh added I will click on OK which is
10:25 - going to add the action listener for
10:28 - this button right and let's say when I
10:31 - press or click on the button I want to
10:35 - show a message dialog which says the
10:38 - hello world message for example right so
10:41 - I can just write J option pane so just
10:45 - import J option pane dot show
10:49 - message dialog just write show message
10:52 - dialog and then the first argument here
10:56 - will be this and the second argument
10:58 - here will be any text which you want to
11:01 - display for example hello world and also
11:04 - I can see uh this error here so this
11:07 - should be main dot this and not simply
11:11 - this right so just write main dot this
11:14 - and this error will go right so once we
11:18 - have this code so this code is
11:23 - essentially going to just open a message
11:25 - dialog and show hello world so I'm going
11:28 - to just once again run my application
11:31 - first of all let me build it and when I
11:34 - run this code you will see
11:37 - that nothing will appear hopefully yes
11:40 - you can see
11:42 - our changes are not visible here and
11:45 - that is because we added our components
11:49 - but we haven't added our jpanel to our
11:52 - class right so in order to add the
11:56 - jpanel to our class we have to give the
11:59 - field name right so I can just write
12:04 - mean
12:06 - panel here and then press enter and once
12:10 - I press enter here this main panel is
12:12 - added as the field name for this jpanel
12:15 - and now you can see this main panel is
12:19 - added in my class now let's add this to
12:23 - our main class right so just write
12:28 - set content Pane and then just give the
12:32 - main panel as an argument here okay
12:37 - once you do that just build your project
12:40 - once again
12:41 - and then run your application and
12:44 - hopefully now you can see that our label
12:47 - is visible text box is visible and when
12:50 - I click on this button you will be able
12:52 - to see Hello World here right what I
12:55 - want to do is I want to enter some text
12:57 - here and I want to display whatever text
13:00 - I add here when I click on the button
13:04 - right so I want to enter a name and I
13:06 - want to show this name in the message
13:09 - dialog so inside this
13:12 - action perform method of this button
13:15 - click I can just declare a string
13:18 - variable which I will name it as
13:21 - first name for example is equal to I
13:25 - will take the input from the text field
13:28 - right so the text field variable name is
13:31 - text field one so I will just take the
13:34 - text field and then I will get the text
13:37 - from there so I will just write get text
13:40 - method
13:42 - and then
13:43 - whatever is the text we write in the
13:46 - text
13:47 - field it will be assigned to this
13:50 - variable and I can just simply instead
13:54 - of writing hello world here I can just
13:56 - write welcome and then I can just write
14:00 - plus and then this first name variable
14:04 - name okay save this and then run your
14:07 - application
14:08 - and then when I enter some name here for
14:12 - example
14:13 - Java and when I just click on click me
14:16 - button it shows welcome Java but there
14:18 - is no space here so we can
14:21 - easily fix this problem I can just write
14:24 - colon space here and once again run my
14:28 - application and then once again I just
14:31 - write
14:33 - Java and then click me and you can see
14:36 - welcome Java okay
14:39 - so this is how you can create your first
14:41 - Java Swing application in IntelliJ IDEA
14:44 - IDE I hope you enjoyed this video and I
14:47 - will see you in the next video

Cleaned transcript:

hey guys in this video I'm going to show you how you can create your first JavaScript swing GUI application on IntelliJ IDEA IDE so hopefully you already have installed IntelliJ IDEA IDE if you haven't I will link the video in the description where I have shown you how you can install IntelliJ IDEA on your Windows operating system so once you have opened your IntelliJ IDEA IDE go to the file option here and then click on new and then click on project and here there are few options what we are going to do is we are going to create a Java application and here I'm going to choose groovy here and the project SDK is 17 so jdk 17 is installed on my system whatever is the latest version of jdk installed on your system it's going to show that here so just leave it as default and select groovy here and then click on next and give the name of your project I'm going to just name my project as GUI app for example and then I'm going to click on finish which is going to download some files and it's going to create your Java project and now it says open project where would you like to open the project GUI app I'm going to click on this window and you can see this project has been created so once your project is created it's going to look like this here it contains a few folders one is Library other is dot idea we do not need to change anything here also you will see one more folder here which is called SRC here we are going to create our GUI related files right so I'm going to right click on the source folder click on new and here you will be able to see this option which is called swing UI designer just click on GUI form here and on this window you need to provide two things one is the form name and other is the class name so form name I'm going to name my form as Main and class name will be the same the base layout manager is grid layout manager you also have card layout flow layout and other layouts I am going to select the grid layout manager which is default in IntelliJ IDEA and I'm going to click on OK which is going to create this class and you can see it's going to create the main.java class and Main dot form class both you will be able to see here under Main now you can see here there is a GUI designer when you select main dot form and there is this Java file which is right now empty so first of all what you need to do without adding any component from this palette let's try to run this application right so we need to first of all set the title of our jframe we need to set the default close operation we also can set the size all these things we can do in the main dot Java file so without any component you just need to go to your main.java file and first of all you need to extend your GUI application using JS frame so just write after main extends and then just write J free so at every point you will see the hints from IntelliJ IDEA as soon as you add this jframe this you can see Java x dot swing dot Asterix is added in your main class right now I'm going to just create a Constructor function so I am going to just write public and then the name of my class which is Main and then Constructor looks like this so the it has the name similar to your Java class and then inside this Constructor I need to do few things right as I mentioned so what you can do here is I'm going to just copy and paste some code and I will just demonstrate or illustrate what this code is doing you just write set title and whatever title you give here will be the title of your window then you have this set default close operation which means when you close your window what is going to happen it is going to exit your project on window close then you have the default size the initial size will be 300 by 200 also you have this method called set location related to null and if you want to learn more about all these methods you can hover over these functions and you can see more description here right and then at last you need to write set visible is equal to True right so add these five lines in your Constructor and also you can create your public static void main you can just write p s v m and then press enter and it's going to create your public static void main method this is the main entry point of your application as you might have already guessed here we are going to initialize our class so I am going to just write new Main and then give this semicolon just save your application by Ctrl s and then we can run our application so first we need to build our application so just click on this Hammer icon and I can see that there is no error when I build this project so I can run this right so I can right click on this file and then I'm going to click on run main dot Main and you can see this window opens with the size 300 and height will be 200 right and you can see the title is simple GUI app which is this one right when I click on this cross icon it is going to exit and this is what this line of code means right so now our basic empty frame is running so now we can start adding some components into our jframe right so the basic component or the parent component here is jpanel and inside the J panel you add your other components right so I can add for example J label here I can just drag and drop this label into my jpanel and you can see the label is added you can add the field name of the J label so I'm going to uh just write JL and then the field name can be anything for example first name right I can also change the text of this label by default its label I can change it to for example first name here and then press enter and you can see this label is now first name right you can also add some text Fields so you have this text area you have this text pane so you can add one of these items I am going to add this text field so I'm going to drag and drop and this will be your text field so you can see the name of the text field is text field one for now I am going to leave it as default but later you can give a proper field name to each and every component which you add in your jpanel right here you have so many options you can even add the text here you can also add many properties using these properties and value options and also from here I can even preview uh what I'm designing right so I can click on preview here and it shows me this first name and then I can see this text box which is yellow right now right I can also add a j button so I can just search for J button and drag and drop into my jpanel and I can even change uh the title here and I can change the label also for this right so you can see the field name is button one which is fine for me for now I can change the text here I can just write the click me for example and then press enter and then this text is changed right now in order to create a listener for this button click I can just right click on this button and then click on create listener I can also press Ctrl or to create this listener for this button just select this and then you can see there are few uh listeners right what I want to select is the extra action listener but you also have other listeners here as I mentioned I want to select the action listener here and then you can see the action listener will be uh added I will click on OK which is going to add the action listener for this button right and let's say when I press or click on the button I want to show a message dialog which says the hello world message for example right so I can just write J option pane so just import J option pane dot show message dialog just write show message dialog and then the first argument here will be this and the second argument here will be any text which you want to display for example hello world and also I can see uh this error here so this should be main dot this and not simply this right so just write main dot this and this error will go right so once we have this code so this code is essentially going to just open a message dialog and show hello world so I'm going to just once again run my application first of all let me build it and when I run this code you will see that nothing will appear hopefully yes you can see our changes are not visible here and that is because we added our components but we haven't added our jpanel to our class right so in order to add the jpanel to our class we have to give the field name right so I can just write mean panel here and then press enter and once I press enter here this main panel is added as the field name for this jpanel and now you can see this main panel is added in my class now let's add this to our main class right so just write set content Pane and then just give the main panel as an argument here okay once you do that just build your project once again and then run your application and hopefully now you can see that our label is visible text box is visible and when I click on this button you will be able to see Hello World here right what I want to do is I want to enter some text here and I want to display whatever text I add here when I click on the button right so I want to enter a name and I want to show this name in the message dialog so inside this action perform method of this button click I can just declare a string variable which I will name it as first name for example is equal to I will take the input from the text field right so the text field variable name is text field one so I will just take the text field and then I will get the text from there so I will just write get text method and then whatever is the text we write in the text field it will be assigned to this variable and I can just simply instead of writing hello world here I can just write welcome and then I can just write plus and then this first name variable name okay save this and then run your application and then when I enter some name here for example Java and when I just click on click me button it shows welcome Java but there is no space here so we can easily fix this problem I can just write colon space here and once again run my application and then once again I just write Java and then click me and you can see welcome Java okay so this is how you can create your first Java Swing application in IntelliJ IDEA IDE I hope you enjoyed this video and I will see you in the next video
