With timestamps:

00:00 - and everyone will come to programming
00:01 - knowledge so I again welcome you all to
00:03 - programming knowledge so this is the
00:05 - twenty nine to two role of our django
00:06 - series so let's get started with the
00:08 - tutorial so in this I have created the
00:11 - new link of my poetry that is Django to
00:13 - do app so now we are going to make app
00:15 - which will we will work on the database
00:17 - the most probably the database we are
00:19 - going to work is SQLite so today we will
00:21 - start the to do app how we can save and
00:23 - a top in the SQLite database then how we
00:26 - can manipulate the data so basically we
00:28 - have many operations to form like SQLite
00:31 - database you to app create read update
00:33 - delete operations and moreover we can do
00:36 - search plus sort we can sort the data as
00:40 - well so we'll perform a reg search and
00:43 - and he will sort the data so in the
00:45 - tutorial we are going to start with the
00:46 - SQLite database and a to do a so so
00:49 - let's get started with this tutorial so
00:51 - I again welcome you all to programming
00:53 - knowledge so let's get started so please
00:55 - make sure that this is the new getup
00:56 - link / repository so you you get updated
00:59 - with the posture okay so this is my link
01:03 - so I already created of app okay
01:07 - because this is we have already learned
01:10 - all this how to create the form so
01:11 - basically it has a two root ITER to do
01:13 - description and to do priority then I
01:15 - have an add button here before we add
01:18 - this we will make a request to save the
01:21 - data we have to define the schema to how
01:24 - we want to add our database okay so
01:26 - actually there is a file called modal
01:28 - short P of py file in so what do you do
01:31 - so this is a model short py file so can
01:34 - you see I take the class to do so it has
01:37 - model short model so basically I need to
01:39 - define the schema okay so so basically
01:43 - like if in the front end of my part I
01:46 - have a title description and a priority
01:47 - so I would define the same at the back
01:50 - end part so I can save my data on the
01:53 - back in part as well okay so let's get
01:55 - started with it so first you know to add
01:57 - create title title is you will do models
02:02 - dot cat field okay so and I'll give max
02:08 - length is equal to 255 okay
02:13 - then description is go to model short x
02:20 - speed because this is a text field and I
02:24 - would give and there's no necessary to
02:27 - give a text field because it can many
02:29 - characters as well so then the next
02:32 - would be title description then priority
02:36 - priority is equal to model short integer
02:42 - field because this is this is going to
02:44 - be integer which priority what you want
02:46 - to give and then create a tag ok this is
02:50 - equal to model store model start date
02:56 - time field date time field so this would
03:00 - keep the date time field this would keep
03:01 - the practical of which ever date you
03:03 - want and I want you to add one parameter
03:05 - or toe under scope add under scope now
03:11 - is equal to true okay so you can do this
03:16 - so my server my server gets you started
03:19 - ok this auto and maybe a auto now under
03:25 - scope add okay that we every start
03:35 - models created model for date/time field
03:39 - now auto now let me check okay got an
03:46 - unexpected keyword argument Auto
03:48 - underscore higher on the scope now no
03:51 - did it did Messer will restart after
03:54 - this let me check
03:58 - okay yeah now it's working fine okay so
04:01 - it's good
04:01 - so Auto underscore now under scope act
04:03 - is equal to true okay so what we can do
04:06 - so we can the we have created the
04:09 - database and now like we have created
04:14 - our database schema so what we can do we
04:16 - can proceed with the form okay so we
04:19 - will move to the front end part index
04:22 - your HTML so I'll define a form action
04:24 - here quickly form action or maybe are
04:27 - you are in first or let me check you
04:30 - should okay this is a submit okay so
04:33 - what we can do so okay okay this is
04:36 - yours retrieve a file to do app okay
04:39 - yeah so here if I make it making a
04:41 - request this is the index page then I'll
04:43 - submit the data then in my views dot py
04:45 - file okay I'll create a object so make
04:49 - sure you import this line okay from dot
04:50 - models import star okay so this would
04:52 - import all the database model okay okay
04:55 - let me do one thing okay before you
04:59 - create a model then you need to migrate
05:01 - as well so you need to type Python
05:02 - managed dot py make migrations okay so
05:12 - python manicotti why so it says create
05:14 - model to do so I hope you can see the
05:16 - model has been created okay now I would
05:19 - do Python this was the earlier corn I
05:21 - did Python manager peeve I make
05:23 - migrations now I would do Python manager
05:25 - py migrate so this would the this will
05:30 - migrate my data so here you can see this
05:32 - has been migrated so even I have my
05:35 - SQLite studio on so I'll refresh this
05:37 - data tables so here you can see the
05:41 - tables as we created so I'll quickly
05:42 - give you an over so here you can see
05:45 - this one so this one has a to-do app on
05:48 - which has five columns okay so which is
05:51 - ID title description priority and
05:54 - created act so this was a schema which I
05:57 - was telling you sir and these are the
05:59 - default Django schemas of which I which
06:02 - I'll explain in the other videos so
06:05 - heidi titles so for each object you have
06:08 - ID than a titled and description and
06:10 - priety Zinta died okay so so what you
06:13 - can do you can move to to do app then
06:17 - what you can do now these are the four
06:20 - emotions so edit table delete table okay
06:23 - remove the database edit is rate of
06:25 - entire database and you can look at the
06:28 - following options so next thing you need
06:30 - to do so we will move to the form okay
06:37 - now we will move to the form and then
06:39 - submit the form quickly and save the
06:41 - data with data like our to-do item into
06:45 - a database okay so let's get let's get
06:48 - done with this so first you need to do
06:50 - object is equal to to do course we I
06:55 - have created then object dot title it is
07:00 - equal to request dot get I hope this is
07:04 - fine title okay and object dot
07:08 - description description is equal to
07:13 - request dot get description description
07:20 - okay then object object dot priority
07:26 - okay I'll show you one thing that in my
07:29 - index dot HTML the sprite is an input I
07:31 - will do number okay that's why I defined
07:32 - an individual fields corresponding to
07:34 - that okay object or priority is equal to
07:37 - request dot get
07:43 - priority priority okay fine then the
07:49 - date will be automatically added
07:50 - attitude it corresponding the time and
07:53 - the even also the ID will go or
07:55 - correspondingly added and I do object
07:58 - dot save okay fine then I would return
08:02 - the same thing object or save don't
08:06 - request indict or HTML or okay then I
08:10 - know I must restart my server Python
08:13 - monitored py run server ok and in my
08:17 - index dot HTML file I make a action %
08:23 - URL submit ok now I will make a
08:30 - percentage sent ok so I hope I hope this
08:34 - is working fine ok let me do one thing
08:38 - what we can do okay now I should make a
08:42 - request
08:43 - test test data like this be a priority
08:51 - number one
08:51 - ok so I have made a request so ok Rover
08:58 - Provo's this we will do ok let me check
09:01 - then some issue person URL
09:09 - because it says that this URL is not
09:11 - matched okay let me check okay okay my
09:18 - mistake I had to do this submit okay so
09:22 - I hope no it's fine
09:24 - so I may I'll make the request again
09:28 - test test data and we test data okay and
09:37 - then priority is equal to one
09:40 - okay I hope this is fine so I made a
09:43 - request and then in the the page what
09:46 - wrote it again so let me check if it's
09:48 - in my data or not so I'll refresh the
09:52 - data okay so let me check
10:01 - so like here you can see so yeah now
10:14 - here you can see when you click on
10:16 - double click on here then I have the
10:18 - structure than the data so this was the
10:20 - data has been added one ID is one title
10:23 - is test description is test data
10:25 - priority is one created at this time
10:27 - okay I hope this is fine
10:28 - so you can okay now I will make another
10:31 - request to make sure this natural
10:33 - Deauville so I make test data to testing
10:39 - application and I give priority to it as
10:46 - like suppose 100 one zero one zero one
10:50 - one zero I'll give one one zero
10:51 - something you can give anything okay one
10:54 - one two something anything and I'll add
10:56 - so I hate you can see that the paper has
10:58 - been hit
10:59 - now I'll check my database so I what I
11:02 - will do and reflect this okay and okay
11:07 - let me to double click it to do app okay
11:11 - okay so here is the finish button okay
11:14 - now it's book sign okay so here is it
11:16 - like you can get familiar with the
11:19 - SQLite pseudo even I so here you can see
11:22 - here is a refresh button also refresh
11:24 - selected database schema and this is the
11:26 - bridge table data so when I click
11:27 - refresh the table data so here you can
11:29 - see the second 10 Zeta 2 testing
11:32 - application with priority 1 1 2 has been
11:33 - added to the database so this works
11:35 - absolutely fine so guys I catch you in
11:37 - the next tutorial like this is the
11:40 - gesture this is the only part way we act
11:43 - the data and the next we're going to add
11:45 - the following options like I told you
11:48 - that is create read update so we'll also
11:51 - do update delete operations search
11:54 - operation and you will sort the data and
11:56 - your read operation also okay so thank
11:58 - you guys thank you so much I'll catch up
11:59 - in the next lecture

Cleaned transcript:

and everyone will come to programming knowledge so I again welcome you all to programming knowledge so this is the twenty nine to two role of our django series so let's get started with the tutorial so in this I have created the new link of my poetry that is Django to do app so now we are going to make app which will we will work on the database the most probably the database we are going to work is SQLite so today we will start the to do app how we can save and a top in the SQLite database then how we can manipulate the data so basically we have many operations to form like SQLite database you to app create read update delete operations and moreover we can do search plus sort we can sort the data as well so we'll perform a reg search and and he will sort the data so in the tutorial we are going to start with the SQLite database and a to do a so so let's get started with this tutorial so I again welcome you all to programming knowledge so let's get started so please make sure that this is the new getup link / repository so you you get updated with the posture okay so this is my link so I already created of app okay because this is we have already learned all this how to create the form so basically it has a two root ITER to do description and to do priority then I have an add button here before we add this we will make a request to save the data we have to define the schema to how we want to add our database okay so actually there is a file called modal short P of py file in so what do you do so this is a model short py file so can you see I take the class to do so it has model short model so basically I need to define the schema okay so so basically like if in the front end of my part I have a title description and a priority so I would define the same at the back end part so I can save my data on the back in part as well okay so let's get started with it so first you know to add create title title is you will do models dot cat field okay so and I'll give max length is equal to 255 okay then description is go to model short x speed because this is a text field and I would give and there's no necessary to give a text field because it can many characters as well so then the next would be title description then priority priority is equal to model short integer field because this is this is going to be integer which priority what you want to give and then create a tag ok this is equal to model store model start date time field date time field so this would keep the date time field this would keep the practical of which ever date you want and I want you to add one parameter or toe under scope add under scope now is equal to true okay so you can do this so my server my server gets you started ok this auto and maybe a auto now under scope add okay that we every start models created model for date/time field now auto now let me check okay got an unexpected keyword argument Auto underscore higher on the scope now no did it did Messer will restart after this let me check okay yeah now it's working fine okay so it's good so Auto underscore now under scope act is equal to true okay so what we can do so we can the we have created the database and now like we have created our database schema so what we can do we can proceed with the form okay so we will move to the front end part index your HTML so I'll define a form action here quickly form action or maybe are you are in first or let me check you should okay this is a submit okay so what we can do so okay okay this is yours retrieve a file to do app okay yeah so here if I make it making a request this is the index page then I'll submit the data then in my views dot py file okay I'll create a object so make sure you import this line okay from dot models import star okay so this would import all the database model okay okay let me do one thing okay before you create a model then you need to migrate as well so you need to type Python managed dot py make migrations okay so python manicotti why so it says create model to do so I hope you can see the model has been created okay now I would do Python this was the earlier corn I did Python manager peeve I make migrations now I would do Python manager py migrate so this would the this will migrate my data so here you can see this has been migrated so even I have my SQLite studio on so I'll refresh this data tables so here you can see the tables as we created so I'll quickly give you an over so here you can see this one so this one has a todo app on which has five columns okay so which is ID title description priority and created act so this was a schema which I was telling you sir and these are the default Django schemas of which I which I'll explain in the other videos so heidi titles so for each object you have ID than a titled and description and priety Zinta died okay so so what you can do you can move to to do app then what you can do now these are the four emotions so edit table delete table okay remove the database edit is rate of entire database and you can look at the following options so next thing you need to do so we will move to the form okay now we will move to the form and then submit the form quickly and save the data with data like our todo item into a database okay so let's get let's get done with this so first you need to do object is equal to to do course we I have created then object dot title it is equal to request dot get I hope this is fine title okay and object dot description description is equal to request dot get description description okay then object object dot priority okay I'll show you one thing that in my index dot HTML the sprite is an input I will do number okay that's why I defined an individual fields corresponding to that okay object or priority is equal to request dot get priority priority okay fine then the date will be automatically added attitude it corresponding the time and the even also the ID will go or correspondingly added and I do object dot save okay fine then I would return the same thing object or save don't request indict or HTML or okay then I know I must restart my server Python monitored py run server ok and in my index dot HTML file I make a action % URL submit ok now I will make a percentage sent ok so I hope I hope this is working fine ok let me do one thing what we can do okay now I should make a request test test data like this be a priority number one ok so I have made a request so ok Rover Provo's this we will do ok let me check then some issue person URL because it says that this URL is not matched okay let me check okay okay my mistake I had to do this submit okay so I hope no it's fine so I may I'll make the request again test test data and we test data okay and then priority is equal to one okay I hope this is fine so I made a request and then in the the page what wrote it again so let me check if it's in my data or not so I'll refresh the data okay so let me check so like here you can see so yeah now here you can see when you click on double click on here then I have the structure than the data so this was the data has been added one ID is one title is test description is test data priority is one created at this time okay I hope this is fine so you can okay now I will make another request to make sure this natural Deauville so I make test data to testing application and I give priority to it as like suppose 100 one zero one zero one one zero I'll give one one zero something you can give anything okay one one two something anything and I'll add so I hate you can see that the paper has been hit now I'll check my database so I what I will do and reflect this okay and okay let me to double click it to do app okay okay so here is the finish button okay now it's book sign okay so here is it like you can get familiar with the SQLite pseudo even I so here you can see here is a refresh button also refresh selected database schema and this is the bridge table data so when I click refresh the table data so here you can see the second 10 Zeta 2 testing application with priority 1 1 2 has been added to the database so this works absolutely fine so guys I catch you in the next tutorial like this is the gesture this is the only part way we act the data and the next we're going to add the following options like I told you that is create read update so we'll also do update delete operations search operation and you will sort the data and your read operation also okay so thank you guys thank you so much I'll catch up in the next lecture
