With timestamps:

00:01 - hello guys welcome once again in this
00:02 - video I'm going to show you how you can
00:04 - use data structure or simply structures
00:07 - in C++ so first of all why we need to
00:11 - use structures in
00:13 - C++ so in the earlier videos I have
00:16 - shown you you can define a variable in
00:19 - C++ like this int and the name of the
00:22 - variable and this semicolon or care and
00:27 - the name of the variable and the
00:29 - semicolon
00:30 - so this int and Care are the predefined
00:35 - data type which is provided by a C++ to
00:38 - us so we haven't defined this int or
00:41 - this
00:43 - Care Now suppose you want to Define your
00:46 - own data type you can use structure to
00:50 - Define your own data types so let me
00:53 - give you an
00:55 - example now for example you want to
00:57 - define a structure for a book
01:00 - a book can contain name book name book
01:06 - author or book ID and you want to use
01:11 - these name author and ID as a data type
01:16 - or book as a data type then how you can
01:19 - define a structure for the book so the
01:23 - basic syntax of the structure is you
01:25 - just
01:28 - write struct
01:34 - and the name of the structure you want
01:38 - to Define so in our case we are defining
01:41 - book or books will be appropriate and
01:44 - then just give these semicolon and this
01:47 - colon to complete the
01:50 - structure now this is the basic
01:53 - definition of structure and now inside
01:56 - structure you you can Define the TR
02:00 - traits of the book for example book has
02:05 - some name book can be written by some
02:08 - author and book has some ID so you can
02:12 - Define it like
02:15 - this
02:16 - care
02:19 - name of array 50 array can contain 50
02:24 - character for
02:26 - example care
02:28 - of
02:31 - author which also can contain 50
02:35 - character and for example in you define
02:39 - the book ID like
02:41 - this so now you have defined a new data
02:45 - type called book and now you can use
02:49 - this data type in order to call these
02:53 - members of your structure so how you can
02:57 - uh call this structure
03:00 - from in your main you just need to once
03:04 - again use the
03:07 - keyword struct and the name of your
03:10 - structure which is book and then you
03:13 - need to give the name of the variable
03:16 - you want to give to your book data type
03:20 - so for example I will Define book one as
03:24 - a variable
03:26 - name and now for example I want to
03:29 - assign the value to my book one variable
03:34 - which is of kind book of the data type
03:37 - of book one variable is books right so I
03:41 - want to assign some values to my book
03:46 - now I can assign value to my book like
03:50 - this I will write the name of my
03:52 - variable book one and when I use dot
03:57 - which is called dot separator
04:00 - then you can see the option I can call
04:04 - any of the three members using this dot
04:07 - separator for example first of all I
04:09 - will call this name and then I can give
04:13 - equal to and give the name of the
04:16 - author so not the name of name of the
04:19 - author but the name of the book so name
04:23 - of the book for example we can give
04:28 - C++ T C++ tutorials okay
04:34 - but one thing uh one more thing I want
04:37 - to um show you that this type of
04:41 - assignment to the character array is not
04:45 - very efficient in order to uh copy a
04:48 - string inside a character array
04:51 - efficiently there is other way of
04:54 - copying this um array inside your
04:58 - character array so what you can do is
05:01 - you can use the
05:05 - keyword string
05:07 - copy and as a first argument of this
05:13 - string copy you can give the name of the
05:16 - variable which is book one. name in
05:19 - which you want to copy the string and as
05:22 - a second variable you can give the name
05:24 - give the
05:25 - string which you want to copy in this
05:28 - character AR variable so this is the
05:32 - more efficient way of
05:36 - copying the string into a character
05:39 - array right
05:42 - so avoid using this type of assignment
05:46 - and whenever you want to assign AR
05:49 - string inside a character array just
05:53 - use the code like this this is more
05:56 - efficient okay so this is a good
05:59 - practice in C++ to use string copy
06:02 - instead of directly assign by equal
06:06 - to now and one more thing in order to
06:09 - use this keyword string copy you need to
06:13 - use this Library so just write include C
06:18 - string Library just include this library
06:20 - in order to use this keyword string copy
06:24 - I will just copy this once again and
06:27 - paste it here and this time I want to
06:29 - give the name of the author for example
06:31 - I will give the name of the author
06:35 - as
06:38 - programming knowledge okay and then I
06:42 - want to assign the ID of the author so I
06:46 - will write book
06:48 - one. ID equal
06:51 - to one for example
06:55 - right now for example I want to access
06:58 - the data which is contained by book
07:02 - variable right what I can do is I will
07:05 - write see
07:14 - out book one
07:24 - name and then you can just access it by
07:29 - this
07:30 - book one.
07:31 - name
07:33 - okay copy it and paste it here and just
07:40 - give the
07:41 - regular end line right I'm going to just
07:46 - copy this two more times and I will say
07:50 - book one
07:53 - author and here also author and book one
07:57 - ID and here also ID
08:00 - now when I compile the program hopefully
08:03 - it will compile
08:08 - successfully yes it compiles with zero
08:11 - error and zero warning now when I run
08:14 - the program this will show whatever I
08:18 - assigned to
08:20 - my
08:22 - book data type you can see you can
08:26 - access
08:27 - this content in this book variable by
08:31 - book DOT book one. name book one. author
08:35 - and book one. ID so in this way you
08:39 - structures allow you to Define your own
08:41 - data type in our case we have defined
08:43 - the data type book and this data type
08:47 - book has the trait name author and ID
08:51 - right and then using this data type we
08:55 - have defined a variable like we we
08:58 - defined
09:01 - it like this so we have the data type
09:05 - the data type in our case is book and
09:07 - the name in our case is book one right
09:11 - and then we can assign values to our
09:16 - variables like this and like this and
09:20 - when we want to access the values inside
09:23 - the variable you can just access it like
09:28 - this book one dot whatever value you
09:31 - want to access so you want to access
09:33 - book one's name then you can write book
09:35 - one name book one author and book one ID
09:39 - okay so in this way you can access the
09:42 - structures content and you can Define
09:46 - more book books like book two book three
09:49 - and you can assign values and you can
09:52 - access the content inside this books so
09:56 - in this way you can Define your own data
09:58 - type you using struct and by the way you
10:02 - can also use functions inside the
10:06 - structure this is a little bit high
10:09 - level programming so for basic it's okay
10:13 - to use just the default data types I
10:17 - hope you have enjoyed this video please
10:19 - wait comment and subscribe and bye for
10:20 - now

Cleaned transcript:

hello guys welcome once again in this video I'm going to show you how you can use data structure or simply structures in C++ so first of all why we need to use structures in C++ so in the earlier videos I have shown you you can define a variable in C++ like this int and the name of the variable and this semicolon or care and the name of the variable and the semicolon so this int and Care are the predefined data type which is provided by a C++ to us so we haven't defined this int or this Care Now suppose you want to Define your own data type you can use structure to Define your own data types so let me give you an example now for example you want to define a structure for a book a book can contain name book name book author or book ID and you want to use these name author and ID as a data type or book as a data type then how you can define a structure for the book so the basic syntax of the structure is you just write struct and the name of the structure you want to Define so in our case we are defining book or books will be appropriate and then just give these semicolon and this colon to complete the structure now this is the basic definition of structure and now inside structure you you can Define the TR traits of the book for example book has some name book can be written by some author and book has some ID so you can Define it like this care name of array 50 array can contain 50 character for example care of author which also can contain 50 character and for example in you define the book ID like this so now you have defined a new data type called book and now you can use this data type in order to call these members of your structure so how you can uh call this structure from in your main you just need to once again use the keyword struct and the name of your structure which is book and then you need to give the name of the variable you want to give to your book data type so for example I will Define book one as a variable name and now for example I want to assign the value to my book one variable which is of kind book of the data type of book one variable is books right so I want to assign some values to my book now I can assign value to my book like this I will write the name of my variable book one and when I use dot which is called dot separator then you can see the option I can call any of the three members using this dot separator for example first of all I will call this name and then I can give equal to and give the name of the author so not the name of name of the author but the name of the book so name of the book for example we can give C++ T C++ tutorials okay but one thing uh one more thing I want to um show you that this type of assignment to the character array is not very efficient in order to uh copy a string inside a character array efficiently there is other way of copying this um array inside your character array so what you can do is you can use the keyword string copy and as a first argument of this string copy you can give the name of the variable which is book one. name in which you want to copy the string and as a second variable you can give the name give the string which you want to copy in this character AR variable so this is the more efficient way of copying the string into a character array right so avoid using this type of assignment and whenever you want to assign AR string inside a character array just use the code like this this is more efficient okay so this is a good practice in C++ to use string copy instead of directly assign by equal to now and one more thing in order to use this keyword string copy you need to use this Library so just write include C string Library just include this library in order to use this keyword string copy I will just copy this once again and paste it here and this time I want to give the name of the author for example I will give the name of the author as programming knowledge okay and then I want to assign the ID of the author so I will write book one. ID equal to one for example right now for example I want to access the data which is contained by book variable right what I can do is I will write see out book one name and then you can just access it by this book one. name okay copy it and paste it here and just give the regular end line right I'm going to just copy this two more times and I will say book one author and here also author and book one ID and here also ID now when I compile the program hopefully it will compile successfully yes it compiles with zero error and zero warning now when I run the program this will show whatever I assigned to my book data type you can see you can access this content in this book variable by book DOT book one. name book one. author and book one. ID so in this way you structures allow you to Define your own data type in our case we have defined the data type book and this data type book has the trait name author and ID right and then using this data type we have defined a variable like we we defined it like this so we have the data type the data type in our case is book and the name in our case is book one right and then we can assign values to our variables like this and like this and when we want to access the values inside the variable you can just access it like this book one dot whatever value you want to access so you want to access book one's name then you can write book one name book one author and book one ID okay so in this way you can access the structures content and you can Define more book books like book two book three and you can assign values and you can access the content inside this books so in this way you can Define your own data type you using struct and by the way you can also use functions inside the structure this is a little bit high level programming so for basic it's okay to use just the default data types I hope you have enjoyed this video please wait comment and subscribe and bye for now
