With timestamps:

00:04 - hey everyone in the last video we made
00:07 - our own snowfall and tried to use the
00:09 - basic concepts to make something better
00:12 - this time we would again move an object
00:14 - around but the movement would be user
00:16 - controlled
00:18 - last time if you remember it was
00:20 - pre-programmed
00:21 - so if I say user control that means we
00:24 - would take the
00:25 - keyboard inputs
00:27 - and move our figure around the screen
00:30 - according to those inputs I hope you
00:33 - remember the key module we talked about
00:35 - in the second video now it's time we put
00:38 - that to use
00:40 - let's get to the code right away we
00:42 - would go step by initializing Pi games
00:44 - setting up a screen the screen size I
00:46 - have taken it to be 500 by 500 you can
00:49 - take any screen size not a problem I
00:51 - have also set up a caption which is
00:54 - moving the given object
00:56 - then we have declared the initial
00:58 - position of the object as X comma y it
01:01 - is 100 comma 100 it is the position on
01:04 - screen we would find our object right
01:06 - after we run the code
01:08 - cool
01:09 - then we have to set up the speed
01:12 - the speed by which the object would move
01:14 - the speed by which we want the object
01:16 - move
01:17 - so it is set up to 3 which means the
01:20 - object should be displayed by three
01:22 - units along the given axis on pressing
01:25 - the respective key once
01:28 - then we have the size of the object I
01:31 - have tried to make a man figure with a
01:33 - circle and rectangle it's my object
01:34 - that's what I want to move around
01:37 - so this width and height is for that
01:39 - rectangle if you didn't understand you
01:42 - would get it when I draw the figure
01:44 - okay
01:46 - so then we have our game Loop the
01:49 - regular one
01:50 - I have given a time delay of 10
01:52 - milliseconds so that object doesn't run
01:55 - and we can observe the defined speed
01:57 - properly
01:58 - dealer is used to pause the program and
02:01 - so we have a refreshed screen after that
02:05 - then we have our events Loop
02:07 - used for handling events and quit the
02:10 - program if asked to do so
02:13 - then I have taken a key variable that
02:16 - would contain a list or sequence of the
02:19 - status of all the keys on the keyboard
02:21 - key is a list of booleans that can be
02:24 - accessed like this
02:26 - we just access it like a normal list but
02:29 - the indexing is done using the key
02:31 - constants so this is done with the help
02:34 - of
02:34 - unders get underscore pressed method
02:39 - the one key that is pressed its state is
02:42 - true other Keys have a false state
02:46 - so I have these four conditions my
02:48 - object can move around in only four
02:51 - directions
02:53 - left right up and down so accordingly I
02:57 - have these four conditions when I press
02:59 - the left Arrow key I will reduce the
03:02 - speed units
03:03 - from current x coordinate
03:06 - when the right arrow key is pressed
03:09 - I will increment the x coordinate by
03:11 - speed units and similarly for going up
03:14 - and down I decrease or increase the y
03:17 - coordinate respectively
03:19 - I would print what Arrow key I have
03:22 - pressed or
03:23 - so that it is it is easy for you to
03:26 - understand and there is no confusion
03:28 - this x greater than 0 and x less than
03:31 - 500 minus width then y greater than 0 y
03:34 - less than 500 minus height these all
03:37 - conditions are used to keep the object
03:40 - within the screen so that the object
03:42 - doesn't run out of the screen
03:44 - so that should be easy to understand
03:47 - now this is the code for making my man
03:50 - flicker so it's just a circle on a
03:53 - rectangle
03:54 - so you use the rect function in draw to
03:58 - draw a rectangle here x comma y are the
04:01 - coordinates or position of the rectangle
04:03 - and width and height are for the size
04:06 - then there is a circle
04:09 - now to place the circle right on top
04:11 - middle of the rectangle
04:13 - I found the mid of the width and also
04:16 - reduced Y axis by 5 so that there is
04:20 - just an overlap of two units between
04:22 - rectangle and the circle
04:25 - I hope you understand the height of the
04:28 - rectangle with 7
04:30 - and if I reduce the y-axis this 7 by 5
04:33 - there is an overlap of only two units
04:36 - hope you can visualize it
04:38 - then we update the program
04:41 - and let's run it
04:49 - okay so this is what we get when we run
04:52 - this code
04:54 - we find our object at the
04:57 - initialize position it's 100 comma 100
04:59 - it's that coordinates 100 comma hundred
05:02 - now if I press the right arrow key I
05:05 - should see right arrow key printed and
05:07 - the object should also move right cool
05:09 - let's do it once
05:12 - the object move right
05:14 - and right arrow key was also printed let
05:17 - me press the down arrow key so it should
05:20 - move down
05:22 - it moved down the object moved down now
05:26 - let's try for left Arrow key we have
05:28 - left auto key printed and it also moved
05:31 - left
05:32 - let me press left Arrow key again
05:35 - so yeah it's going left again I'm gonna
05:37 - press left Arrow key yeah so let me take
05:41 - it to the origin
05:42 - cool
05:44 - in the next video we would try to make
05:46 - the snake game we would try to create
05:49 - that on our own a video game a live
05:52 - working video game
05:54 - for that this moving object program
05:57 - would be very important if you
05:59 - understood this moving object program
06:01 - then the Snake Game program would be
06:04 - very easy for you
06:06 - and
06:08 - from the next video onwards we would put
06:11 - to use all that we have learned till now
06:13 - all the basics that we have learned now
06:15 - and things are going to be very
06:17 - interesting
06:19 - so from now on we would look at the real
06:23 - application of Pi game module which is
06:26 - video game creation things are going to
06:28 - be very fun and easy
06:30 - I hope you're understanding what all I
06:33 - have explained till now everything that
06:35 - I have taught you
06:37 - thank you

Cleaned transcript:

hey everyone in the last video we made our own snowfall and tried to use the basic concepts to make something better this time we would again move an object around but the movement would be user controlled last time if you remember it was preprogrammed so if I say user control that means we would take the keyboard inputs and move our figure around the screen according to those inputs I hope you remember the key module we talked about in the second video now it's time we put that to use let's get to the code right away we would go step by initializing Pi games setting up a screen the screen size I have taken it to be 500 by 500 you can take any screen size not a problem I have also set up a caption which is moving the given object then we have declared the initial position of the object as X comma y it is 100 comma 100 it is the position on screen we would find our object right after we run the code cool then we have to set up the speed the speed by which the object would move the speed by which we want the object move so it is set up to 3 which means the object should be displayed by three units along the given axis on pressing the respective key once then we have the size of the object I have tried to make a man figure with a circle and rectangle it's my object that's what I want to move around so this width and height is for that rectangle if you didn't understand you would get it when I draw the figure okay so then we have our game Loop the regular one I have given a time delay of 10 milliseconds so that object doesn't run and we can observe the defined speed properly dealer is used to pause the program and so we have a refreshed screen after that then we have our events Loop used for handling events and quit the program if asked to do so then I have taken a key variable that would contain a list or sequence of the status of all the keys on the keyboard key is a list of booleans that can be accessed like this we just access it like a normal list but the indexing is done using the key constants so this is done with the help of unders get underscore pressed method the one key that is pressed its state is true other Keys have a false state so I have these four conditions my object can move around in only four directions left right up and down so accordingly I have these four conditions when I press the left Arrow key I will reduce the speed units from current x coordinate when the right arrow key is pressed I will increment the x coordinate by speed units and similarly for going up and down I decrease or increase the y coordinate respectively I would print what Arrow key I have pressed or so that it is it is easy for you to understand and there is no confusion this x greater than 0 and x less than 500 minus width then y greater than 0 y less than 500 minus height these all conditions are used to keep the object within the screen so that the object doesn't run out of the screen so that should be easy to understand now this is the code for making my man flicker so it's just a circle on a rectangle so you use the rect function in draw to draw a rectangle here x comma y are the coordinates or position of the rectangle and width and height are for the size then there is a circle now to place the circle right on top middle of the rectangle I found the mid of the width and also reduced Y axis by 5 so that there is just an overlap of two units between rectangle and the circle I hope you understand the height of the rectangle with 7 and if I reduce the yaxis this 7 by 5 there is an overlap of only two units hope you can visualize it then we update the program and let's run it okay so this is what we get when we run this code we find our object at the initialize position it's 100 comma 100 it's that coordinates 100 comma hundred now if I press the right arrow key I should see right arrow key printed and the object should also move right cool let's do it once the object move right and right arrow key was also printed let me press the down arrow key so it should move down it moved down the object moved down now let's try for left Arrow key we have left auto key printed and it also moved left let me press left Arrow key again so yeah it's going left again I'm gonna press left Arrow key yeah so let me take it to the origin cool in the next video we would try to make the snake game we would try to create that on our own a video game a live working video game for that this moving object program would be very important if you understood this moving object program then the Snake Game program would be very easy for you and from the next video onwards we would put to use all that we have learned till now all the basics that we have learned now and things are going to be very interesting so from now on we would look at the real application of Pi game module which is video game creation things are going to be very fun and easy I hope you're understanding what all I have explained till now everything that I have taught you thank you
