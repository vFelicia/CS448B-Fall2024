With timestamps:

00:00 - hello everyone welcome to programming
00:01 - knowledge so this is the 14 tutorial of
00:04 - our django series so I again will come
00:06 - you all to programming knowledge so this
00:08 - is the 14 tutorial so like this is this
00:10 - is the github link of our repository you
00:13 - can download those download this apology
00:16 - clone it and you can run this repository
00:18 - on your local machine we can download
00:20 - this project so these are the
00:23 - instructions how you can download this
00:24 - project clone this upholstery and
00:26 - install it on your local machine and
00:28 - this would help you to explore out this
00:31 - this project ok so I again welcome
00:34 - welcome you all to programming knowledge
00:36 - so like in this tutorial we are going to
00:39 - work with the alerts in Django forum
00:41 - so basically alert handling informs so
00:44 - in this tutorial we are going to handle
00:46 - alerts in Django there are two types of
00:48 - alert one is for error and there is
00:51 - success so we will fill the form so we
00:54 - will fill the form we will fill form the
00:57 - validate and check form for both the
00:59 - cases use bootstrap on the front-end to
01:02 - render and display messages so let's get
01:04 - started with this so till now we had a
01:06 - we may have made a form so this one this
01:09 - was our form okay on the request method
01:12 - and the on the basically even here you
01:16 - can see on the gate request we used to
01:20 - render the form and the post request
01:22 - view you should submit the form so we
01:24 - would apply the error handling on the
01:26 - post method part so basically before
01:29 - this I will show you some process the
01:33 - process here is about that we have
01:34 - alerts in bootstrap so what we can see
01:39 - alerts provide contextual feedback
01:41 - messages for that typical user actions
01:44 - with the handful of available and
01:46 - flexible alert messages so there are
01:49 - basically many types of alert so this is
01:51 - a primary alert secondary success so big
01:55 - here so here you can see the primary
01:58 - alert is in blue color success is in
02:01 - green color danger is in red color and
02:05 - warning is in yellow color so another
02:08 - type of alert here you can see is like
02:11 - which are dismissible in nature
02:13 - so here you can see the alerts Cherian
02:16 - dismissal in nature have a cross button
02:19 - on the right hand side which can be
02:21 - clicked and on the river on the
02:25 - refreshment over when when i refresh
02:27 - this page so here you can see this alert
02:30 - message comes it comes up again so
02:32 - basically you can cross the button and
02:34 - dismiss the message for that purpose
02:37 - only so let's get started with this so
02:40 - force you will keep trying to keep it
02:42 - simple so if the form is valid title is
02:45 - equal to request or post status update
02:46 - to the request or post subject what i
02:50 - will do i create my dictionary and
02:58 - irrespective of the result file the
02:59 - addition is going to have the form
03:02 - feedback form okay irrespective of the
03:05 - result I'll make condition okay then my
03:09 - dictionary of success is able to prove
03:18 - and in the same way my dictionary of
03:23 - success message is will to form its
03:31 - submitted okay and then what am I going
03:36 - to do I'm going to return this page so I
03:41 - take requests of the parameter
03:43 - my formed order to detection will
03:44 - context is able to my dictionary and you
03:49 - can see now I have returned them my form
03:52 - brought my form to dot HTML and context
03:54 - will do my dictionary so basically I
03:57 - would move to this part we would use
04:00 - this and and here you can see the fits
04:05 - alert warning so it just just I told you
04:08 - you can have a quick they remember that
04:10 - warning is for yellow dangerous for red
04:13 - and green is for success okay what you
04:17 - can do alert alert success
04:25 - and this would okay and I will display
04:36 - the success message here but only I
04:42 - would display the success message on
04:44 - your one condition that is percent if
04:48 - success is equal to is equal to true
04:52 - then only I will display this so I would
04:55 - this is the end of the develop and I
04:57 - would end the condition person and if
05:01 - okay there's a slight error here I hope
05:10 - no it's Riya right so I would buy that
05:13 - monitor py on server okay so I have
05:16 - moved to my form on the get request I
05:19 - saw I get request I render the form and
05:22 - but on the post I will check the error
05:24 - handling so what we can do here I would
05:27 - type test title test subject here you
05:40 - can see it says form submitted okay so
05:45 - okay okay that there was a slight error
05:48 - because I miss the single s here alert
05:50 - alert success so if it would not display
05:52 - the background color but I would refresh
05:55 - this page it says the form grief
05:57 - submission okay okay now it should be
05:59 - divined it says form submitted so we can
06:02 - add a margin top to this so basically
06:05 - this would help us out the tide is able
06:08 - to margin top is equal to one ramp now I
06:17 - know it's pretty fine we have a margin
06:20 - top and on the cross button it it will
06:22 - dissipate so this is pretty cool with
06:24 - this for the same part we can do for the
06:26 - error also okay but for this but what we
06:29 - can do you would move used or py file
06:33 - this would go an else condition so
06:36 - firstly we'll check the error
06:39 - I did this first because I wanted to
06:41 - have a quick idea of how this works okay
06:44 - but if title is not okay what we can do
06:50 - this is our form okay and we can here
06:57 - add P classes over to text text muted
07:07 - note title should be capital okay so
07:23 - this says note title should be capital
07:27 - okay okay so when we move to our form
07:31 - okay now okay
07:33 - I'll save it here then no no this time I
07:38 - would make a get request and render the
07:41 - form okay I think it is throwing an
07:45 - error okay okay okay okay let me for the
07:50 - time being if one pass okay now I would
08:00 - render the perform on get request now
08:02 - this is fine okay so it says title
08:04 - should be capital okay this will just
08:06 - sort of a case I am taking here okay now
08:09 - if title is known is equal to title dot
08:17 - upper so this is the string class in
08:20 - Python which which can be checked if
08:22 - title is not you all right hold upper
08:24 - then we can what we can do we would do
08:30 - the same thing my dictionary of error is
08:35 - equal to true my dictionary of error
08:42 - message is equal to title
08:50 - title should be in capital letters okay
09:00 - title should be in capital okay I hope
09:02 - this is fine we can't have a capital C
09:05 - here title should be in capital and then
09:08 - I would render the page on the same part
09:12 - okay my form go to HTML
09:14 - okay but I would only show the error
09:17 - only on one condition that would be if
09:21 - error should be true and this then I
09:27 - would show an error message okay and
09:32 - this should be my danger class okay so I
09:38 - hope now you have a clearer idea what's
09:40 - happening so I would make the get
09:43 - request test title test subject okay now
09:54 - it says title should be in capital okay
09:56 - and if I make it okay I will make a test
10:00 - title here like in capital test subject
10:05 - or we can have this in small letters no
10:08 - issue test subject okay so it says form
10:13 - submitted I hope the guys this is very
10:15 - clear to you so in next tutorial we are
10:18 - going to work with the more error and
10:21 - exception handling with the routes URL
10:23 - pages and even in the forms also so
10:25 - thank you guys thank you so much

Cleaned transcript:

hello everyone welcome to programming knowledge so this is the 14 tutorial of our django series so I again will come you all to programming knowledge so this is the 14 tutorial so like this is this is the github link of our repository you can download those download this apology clone it and you can run this repository on your local machine we can download this project so these are the instructions how you can download this project clone this upholstery and install it on your local machine and this would help you to explore out this this project ok so I again welcome welcome you all to programming knowledge so like in this tutorial we are going to work with the alerts in Django forum so basically alert handling informs so in this tutorial we are going to handle alerts in Django there are two types of alert one is for error and there is success so we will fill the form so we will fill the form we will fill form the validate and check form for both the cases use bootstrap on the frontend to render and display messages so let's get started with this so till now we had a we may have made a form so this one this was our form okay on the request method and the on the basically even here you can see on the gate request we used to render the form and the post request view you should submit the form so we would apply the error handling on the post method part so basically before this I will show you some process the process here is about that we have alerts in bootstrap so what we can see alerts provide contextual feedback messages for that typical user actions with the handful of available and flexible alert messages so there are basically many types of alert so this is a primary alert secondary success so big here so here you can see the primary alert is in blue color success is in green color danger is in red color and warning is in yellow color so another type of alert here you can see is like which are dismissible in nature so here you can see the alerts Cherian dismissal in nature have a cross button on the right hand side which can be clicked and on the river on the refreshment over when when i refresh this page so here you can see this alert message comes it comes up again so basically you can cross the button and dismiss the message for that purpose only so let's get started with this so force you will keep trying to keep it simple so if the form is valid title is equal to request or post status update to the request or post subject what i will do i create my dictionary and irrespective of the result file the addition is going to have the form feedback form okay irrespective of the result I'll make condition okay then my dictionary of success is able to prove and in the same way my dictionary of success message is will to form its submitted okay and then what am I going to do I'm going to return this page so I take requests of the parameter my formed order to detection will context is able to my dictionary and you can see now I have returned them my form brought my form to dot HTML and context will do my dictionary so basically I would move to this part we would use this and and here you can see the fits alert warning so it just just I told you you can have a quick they remember that warning is for yellow dangerous for red and green is for success okay what you can do alert alert success and this would okay and I will display the success message here but only I would display the success message on your one condition that is percent if success is equal to is equal to true then only I will display this so I would this is the end of the develop and I would end the condition person and if okay there's a slight error here I hope no it's Riya right so I would buy that monitor py on server okay so I have moved to my form on the get request I saw I get request I render the form and but on the post I will check the error handling so what we can do here I would type test title test subject here you can see it says form submitted okay so okay okay that there was a slight error because I miss the single s here alert alert success so if it would not display the background color but I would refresh this page it says the form grief submission okay okay now it should be divined it says form submitted so we can add a margin top to this so basically this would help us out the tide is able to margin top is equal to one ramp now I know it's pretty fine we have a margin top and on the cross button it it will dissipate so this is pretty cool with this for the same part we can do for the error also okay but for this but what we can do you would move used or py file this would go an else condition so firstly we'll check the error I did this first because I wanted to have a quick idea of how this works okay but if title is not okay what we can do this is our form okay and we can here add P classes over to text text muted note title should be capital okay so this says note title should be capital okay okay so when we move to our form okay now okay I'll save it here then no no this time I would make a get request and render the form okay I think it is throwing an error okay okay okay okay let me for the time being if one pass okay now I would render the perform on get request now this is fine okay so it says title should be capital okay this will just sort of a case I am taking here okay now if title is known is equal to title dot upper so this is the string class in Python which which can be checked if title is not you all right hold upper then we can what we can do we would do the same thing my dictionary of error is equal to true my dictionary of error message is equal to title title should be in capital letters okay title should be in capital okay I hope this is fine we can't have a capital C here title should be in capital and then I would render the page on the same part okay my form go to HTML okay but I would only show the error only on one condition that would be if error should be true and this then I would show an error message okay and this should be my danger class okay so I hope now you have a clearer idea what's happening so I would make the get request test title test subject okay now it says title should be in capital okay and if I make it okay I will make a test title here like in capital test subject or we can have this in small letters no issue test subject okay so it says form submitted I hope the guys this is very clear to you so in next tutorial we are going to work with the more error and exception handling with the routes URL pages and even in the forms also so thank you guys thank you so much
