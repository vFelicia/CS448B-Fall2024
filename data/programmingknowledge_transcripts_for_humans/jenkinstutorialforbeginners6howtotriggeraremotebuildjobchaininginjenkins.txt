With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - Jenkins tutorial for beginners in the
00:05 - last video we have seen how we can
00:07 - create our first Jenkins job now in this
00:10 - video we are going to see how we can
00:12 - configure our Jenkins job so that we can
00:16 - run our Jenkins job remotely or how to
00:19 - chain the job execution so let's see
00:23 - them one by one so I have created this
00:28 - HelloWorld Jenkins job in the last video
00:31 - so I'm going to click on this job and
00:34 - then I'm going to click on configure to
00:37 - change the configuration of this Jenkins
00:40 - job now when you reach in the
00:42 - configuration area just click on build
00:44 - triggers and what this bill periodically
00:47 - trigger was doing is it was triggering
00:50 - our job in a periodic way depending on
00:54 - the cron scheme we have provided here
00:58 - now let's say we want to trigger our job
01:00 - remotely then for that we can choose
01:04 - this option which says trigger build
01:06 - remotely so I'm going to choose this
01:09 - checkbox and I'm going to uncheck this
01:12 - build periodically checkbox and here you
01:16 - can see this option which says
01:18 - authentication token and you will also
01:21 - see this message which is a very helpful
01:24 - message which says use the following URL
01:27 - to trigger build remotely so this will
01:31 - be the URL format you can use to trigger
01:35 - the build remotely so I'm going to copy
01:37 - this URL and I'm going to paste it into
01:41 - the next tab so here first option here
01:45 - is Jenkins URL so here you can give the
01:49 - IP address of your server for example
01:52 - right now it's localhost so I can just
01:55 - write
01:56 - localhost and then the port is port 8080
02:00 - or if you have the IP address of this
02:03 - server then you can write the IP address
02:06 - of the server so for the local host
02:08 - instead of localhost I can just write
02:10 - 127.0.0.1 or any other
02:14 - server IP address on which this server
02:17 - is working on now the next thing here is
02:21 - the token name in capital so this token
02:24 - name is I'm going to go to my Jenkins
02:27 - job configuration and this token name is
02:30 - the token name which you will provide
02:33 - here so for example you can provide any
02:37 - complex password or anything here which
02:41 - will be your token name so let's say I
02:43 - just write here one two three four five
02:47 - and I'm going to save my configuration
02:51 - and then I'm going to go to my next tab
02:55 - and instead of the token name I will
02:58 - just provide the token name which I have
02:59 - given for my Jenkins job which is one
03:02 - two three four five right now let's go
03:06 - to the Jenkins job once again and I'm
03:08 - going to go to the home page of Jenkins
03:10 - here you can see the last success was in
03:14 - build 24 and when I click on this job
03:18 - you will be able to see the build
03:20 - history so the last job was 24 so let me
03:26 - go to the next tab and I'm going to just
03:28 - give this URL and then press ENTER which
03:32 - is going to execute my job so I'm going
03:35 - to just give my username and password
03:39 - here once again and then I'm going to
03:42 - just say remember me for this computer
03:45 - and then login and once you do this and
03:47 - when you go to that Jenkins job and when
03:50 - you refresh it you can see the last bill
03:54 - was bill 25 which is triggered using
03:59 - this URL okay so once again I'm going to
04:03 - refresh it and I'm going to just give
04:07 - this URL once again on the next tab and
04:10 - then press ENTER and you will see in a
04:14 - few seconds the new build occurs so this
04:17 - is how you can trigger your build
04:18 - remotely now the next thing I want to
04:21 - show here is how we can change our
04:24 - Jenkins job execution so let's say we
04:28 - a scenario that we have created this
04:31 - Jenkins job which was compiling the Java
04:35 - program and running it right so let's
04:38 - say we want to create few Jenkins job
04:41 - one Jenkins job we want to create is to
04:44 - build our Java program second is to run
04:48 - our jog of Java program and in the third
04:51 - Jenkins job let's say we want to just
04:53 - display the success message so for that
04:56 - we need to create two more Jenkins job
04:59 - and first of all we need to change the
05:01 - name of this Jenkins job which is hello
05:05 - world so we will just rename it to
05:09 - HelloWorld build first of all and then
05:11 - we will create HelloWorld run Jenkins
05:14 - job and HelloWorld success message
05:17 - Jenkins job or sorrow world message job
05:20 - so let me show you how you can rename
05:22 - your Jenkins job so you can see the
05:25 - option here rename which you can use to
05:28 - rename your Jenkins job so instead of
05:31 - using HelloWorld Jenkins job name I want
05:34 - to rename it as HelloWorld build so I'm
05:37 - going to just write hello world build
05:39 - and then I'm going to just click on
05:42 - rename which is going to rename my
05:45 - Jenkins job to HelloWorld build now
05:48 - let's create two more Jenkins job one is
05:51 - HelloWorld run so I'm going to just
05:54 - click on new item and here I'm going to
05:57 - give the name of my Jenkins job this
05:59 - will be the HelloWorld run now one more
06:02 - way of creating the Jenkins job if the
06:05 - jobs are relatively similar then you can
06:08 - copy the configuration of the old
06:11 - Jenkins job into the new Jenkins job
06:14 - using a copy feature and when you scroll
06:17 - down here you will see this option which
06:20 - says copy from and here we can just
06:23 - write hello world build which is the
06:26 - Jenkins job from which we want to copy
06:29 - the configuration to HelloWorld run job
06:32 - and when you click OK all the
06:36 - configuration of hello world build will
06:38 - be copied to this Jenkins job
06:41 - which is hello world run and here we can
06:45 - just change the description so this job
06:48 - is only going to run the Java program so
06:52 - I'm going to just change it to run Java
06:53 - program and when I go down a little and
06:57 - in here I'm going to remove this line
06:59 - because this line was compiling or
07:02 - building or Java program and this we are
07:06 - already doing in the hello world build
07:09 - Jenkins job and this is hello world run
07:12 - so I'm going to just remove this and I
07:14 - just want to run the executable file
07:16 - which was created by a hello world build
07:19 - and this is the hello world run Jenkins
07:22 - job and now I'm going to click on build
07:24 - triggers and instead of using this
07:27 - option which says trigger build remotely
07:29 - we want to build our Jenkins job after
07:33 - the success of the previous job which is
07:38 - hello world build so I'm going to just
07:41 - copy the name of the Jenkins job after
07:44 - which I want to execute this HelloWorld
07:48 - run Jenkins job so after hello world
07:50 - build I want to run HelloWorld one
07:53 - Jenkins job so just check this checkbox
07:56 - and just write the name of the chenkin
07:59 - job after which you want to execute your
08:02 - hello world run Jenkins job and then I'm
08:05 - going to just save my configuration and
08:08 - I'm going to go to the home page and you
08:11 - can see there are two jobs now one is
08:13 - hello world build and another is hello
08:16 - world run I need to change the
08:18 - configuration of hello world build also
08:21 - because now we just want to build our
08:24 - Java program using this Jenkins job and
08:28 - not run it so I'm going to just remove
08:30 - the description here for run I just want
08:33 - to build Java program and in the build
08:35 - trigger let's say we want to just
08:37 - trigger this build remotely or we will
08:41 - just click on the build now button and
08:43 - execute the bill so I will not change
08:45 - this and when you scroll down a little
08:48 - from here I will just remove this Java
08:50 - HelloWorld command because this we are
08:53 - doing in HelloWorld
08:55 - run Jenkins jobs so I'm going to just
08:57 - remove this last command and save this
09:01 - so now both the Jenkins job have been
09:04 - created you can create one more Jenkins
09:06 - job and chain it in a similar fashion so
09:09 - let's create one more chenkin job and
09:11 - this Jenkins all I want to name it as
09:13 - hello world let's say message okay so
09:18 - this is going to just print the message
09:20 - of the execution and I'm going to just
09:25 - say freestyle project and I'm going to
09:27 - just say okay I'm not going to copy the
09:30 - configuration and in the description I'm
09:32 - going to just a display message and in
09:36 - the source code code management I will
09:39 - leave it as none in the bill triggers
09:41 - this will be executed after the hello
09:45 - world
09:45 - run Jenkins so I'm going to just check
09:47 - on this checkbox which says build after
09:50 - the other project build and here I'm
09:52 - going to just write hello world run I'm
09:56 - going to choose this option which says
09:58 - hello world run so this Jenkins job will
10:01 - run after hello world run Jenkins job is
10:04 - executed and now I will just scroll down
10:07 - a little and in the build section I will
10:09 - just choose execute shell and here I
10:13 - will just echo something so I will just
10:15 - write echo and in the double quotes I
10:18 - will just print something which I can
10:21 - recognize so I'm going to just print
10:24 - these echo messages and here in between
10:29 - the lines I want to just say success
10:34 - let's say and now I will just save my
10:36 - job and when I go to the home page now
10:41 - we have three Jenkins job hello world
10:44 - build hello world run and hello world
10:47 - message so let's just start the build of
10:49 - hello world build Jenkins job so for
10:52 - that I can just click on this little
10:54 - arrow here and I can just say build it
10:57 - now which is going to start the build of
10:59 - hello world bill and you will see after
11:03 - some time you can see this is in the
11:06 - queue so hello world run is in the
11:08 - q so as soon as my hello world bill is
11:12 - completed the hollow world run will be
11:15 - executed and now you can see hello world
11:17 - message in the is in the queue because
11:19 - hello world run is completed so hello
11:23 - world message will be executed after the
11:25 - execution of hello world run and when i
11:28 - refresh this page now you can see here
11:31 - build number 27 last build was build
11:35 - number 26 and then after this build was
11:38 - successful hello world run Jenkins job
11:41 - was triggered and you can see the build
11:44 - number one was triggered and after the
11:47 - success of hello world run hello world
11:50 - message was triggered which is triggered
11:53 - by the success of the hello world run
11:56 - and let's see the messages also so let's
12:00 - go to the hello world build first of all
12:02 - and then let's see a build number 27 and
12:05 - console.log and just build the the
12:09 - hollow world java program it's a success
12:12 - and now let's go to the hollow world run
12:15 - which is going to just execute our
12:17 - executable file and let's see in the
12:19 - console it prints hello world it
12:22 - executes our hollow wall executable file
12:25 - using Java HelloWorld command and in the
12:28 - last Jenkins job which is going just to
12:32 - print some message we can just go here
12:35 - hello world message and then when we go
12:37 - to the console output of this you can
12:40 - see this echo command and it echos
12:43 - success so this is how you can change
12:45 - your job execution on success or failure
12:50 - of the last build so I hope you have
12:53 - enjoyed this video please rate comment
12:54 - subscribe and bye for now

Cleaned transcript:

hey guys welcome to the next video on Jenkins tutorial for beginners in the last video we have seen how we can create our first Jenkins job now in this video we are going to see how we can configure our Jenkins job so that we can run our Jenkins job remotely or how to chain the job execution so let's see them one by one so I have created this HelloWorld Jenkins job in the last video so I'm going to click on this job and then I'm going to click on configure to change the configuration of this Jenkins job now when you reach in the configuration area just click on build triggers and what this bill periodically trigger was doing is it was triggering our job in a periodic way depending on the cron scheme we have provided here now let's say we want to trigger our job remotely then for that we can choose this option which says trigger build remotely so I'm going to choose this checkbox and I'm going to uncheck this build periodically checkbox and here you can see this option which says authentication token and you will also see this message which is a very helpful message which says use the following URL to trigger build remotely so this will be the URL format you can use to trigger the build remotely so I'm going to copy this URL and I'm going to paste it into the next tab so here first option here is Jenkins URL so here you can give the IP address of your server for example right now it's localhost so I can just write localhost and then the port is port 8080 or if you have the IP address of this server then you can write the IP address of the server so for the local host instead of localhost I can just write 127.0.0.1 or any other server IP address on which this server is working on now the next thing here is the token name in capital so this token name is I'm going to go to my Jenkins job configuration and this token name is the token name which you will provide here so for example you can provide any complex password or anything here which will be your token name so let's say I just write here one two three four five and I'm going to save my configuration and then I'm going to go to my next tab and instead of the token name I will just provide the token name which I have given for my Jenkins job which is one two three four five right now let's go to the Jenkins job once again and I'm going to go to the home page of Jenkins here you can see the last success was in build 24 and when I click on this job you will be able to see the build history so the last job was 24 so let me go to the next tab and I'm going to just give this URL and then press ENTER which is going to execute my job so I'm going to just give my username and password here once again and then I'm going to just say remember me for this computer and then login and once you do this and when you go to that Jenkins job and when you refresh it you can see the last bill was bill 25 which is triggered using this URL okay so once again I'm going to refresh it and I'm going to just give this URL once again on the next tab and then press ENTER and you will see in a few seconds the new build occurs so this is how you can trigger your build remotely now the next thing I want to show here is how we can change our Jenkins job execution so let's say we a scenario that we have created this Jenkins job which was compiling the Java program and running it right so let's say we want to create few Jenkins job one Jenkins job we want to create is to build our Java program second is to run our jog of Java program and in the third Jenkins job let's say we want to just display the success message so for that we need to create two more Jenkins job and first of all we need to change the name of this Jenkins job which is hello world so we will just rename it to HelloWorld build first of all and then we will create HelloWorld run Jenkins job and HelloWorld success message Jenkins job or sorrow world message job so let me show you how you can rename your Jenkins job so you can see the option here rename which you can use to rename your Jenkins job so instead of using HelloWorld Jenkins job name I want to rename it as HelloWorld build so I'm going to just write hello world build and then I'm going to just click on rename which is going to rename my Jenkins job to HelloWorld build now let's create two more Jenkins job one is HelloWorld run so I'm going to just click on new item and here I'm going to give the name of my Jenkins job this will be the HelloWorld run now one more way of creating the Jenkins job if the jobs are relatively similar then you can copy the configuration of the old Jenkins job into the new Jenkins job using a copy feature and when you scroll down here you will see this option which says copy from and here we can just write hello world build which is the Jenkins job from which we want to copy the configuration to HelloWorld run job and when you click OK all the configuration of hello world build will be copied to this Jenkins job which is hello world run and here we can just change the description so this job is only going to run the Java program so I'm going to just change it to run Java program and when I go down a little and in here I'm going to remove this line because this line was compiling or building or Java program and this we are already doing in the hello world build Jenkins job and this is hello world run so I'm going to just remove this and I just want to run the executable file which was created by a hello world build and this is the hello world run Jenkins job and now I'm going to click on build triggers and instead of using this option which says trigger build remotely we want to build our Jenkins job after the success of the previous job which is hello world build so I'm going to just copy the name of the Jenkins job after which I want to execute this HelloWorld run Jenkins job so after hello world build I want to run HelloWorld one Jenkins job so just check this checkbox and just write the name of the chenkin job after which you want to execute your hello world run Jenkins job and then I'm going to just save my configuration and I'm going to go to the home page and you can see there are two jobs now one is hello world build and another is hello world run I need to change the configuration of hello world build also because now we just want to build our Java program using this Jenkins job and not run it so I'm going to just remove the description here for run I just want to build Java program and in the build trigger let's say we want to just trigger this build remotely or we will just click on the build now button and execute the bill so I will not change this and when you scroll down a little from here I will just remove this Java HelloWorld command because this we are doing in HelloWorld run Jenkins jobs so I'm going to just remove this last command and save this so now both the Jenkins job have been created you can create one more Jenkins job and chain it in a similar fashion so let's create one more chenkin job and this Jenkins all I want to name it as hello world let's say message okay so this is going to just print the message of the execution and I'm going to just say freestyle project and I'm going to just say okay I'm not going to copy the configuration and in the description I'm going to just a display message and in the source code code management I will leave it as none in the bill triggers this will be executed after the hello world run Jenkins so I'm going to just check on this checkbox which says build after the other project build and here I'm going to just write hello world run I'm going to choose this option which says hello world run so this Jenkins job will run after hello world run Jenkins job is executed and now I will just scroll down a little and in the build section I will just choose execute shell and here I will just echo something so I will just write echo and in the double quotes I will just print something which I can recognize so I'm going to just print these echo messages and here in between the lines I want to just say success let's say and now I will just save my job and when I go to the home page now we have three Jenkins job hello world build hello world run and hello world message so let's just start the build of hello world build Jenkins job so for that I can just click on this little arrow here and I can just say build it now which is going to start the build of hello world bill and you will see after some time you can see this is in the queue so hello world run is in the q so as soon as my hello world bill is completed the hollow world run will be executed and now you can see hello world message in the is in the queue because hello world run is completed so hello world message will be executed after the execution of hello world run and when i refresh this page now you can see here build number 27 last build was build number 26 and then after this build was successful hello world run Jenkins job was triggered and you can see the build number one was triggered and after the success of hello world run hello world message was triggered which is triggered by the success of the hello world run and let's see the messages also so let's go to the hello world build first of all and then let's see a build number 27 and console.log and just build the the hollow world java program it's a success and now let's go to the hollow world run which is going to just execute our executable file and let's see in the console it prints hello world it executes our hollow wall executable file using Java HelloWorld command and in the last Jenkins job which is going just to print some message we can just go here hello world message and then when we go to the console output of this you can see this echo command and it echos success so this is how you can change your job execution on success or failure of the last build so I hope you have enjoyed this video please rate comment subscribe and bye for now
