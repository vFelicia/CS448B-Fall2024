With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - Python tutorial for beginners in this
00:04 - video I'm going to show you how to use
00:06 - loops in Python and we will start with
00:09 - the while loop so first of all what is a
00:13 - loop so a loop allows us to repeat over
00:18 - some block of code again and again until
00:22 - and unless some condition is met now
00:25 - let's see how to use while loop in
00:27 - Python so let's say I'm going to declare
00:30 - a variable called I and I'm going to
00:33 - initialize it with the value 0 and to
00:36 - use a while loop you use this keyword
00:38 - and then you provide some condition so
00:41 - let's say I want to check whether the
00:44 - value inside the I variable is less than
00:49 - 5 or not okay and as in the case of if
00:54 - also we have seen we provide after the
00:56 - condition this colon symbol and then in
01:00 - the next line we write the code which we
01:03 - want to perform again and again until
01:07 - this while loop condition is true so
01:11 - let's say we want to just print
01:14 - something and we will print that the
01:17 - value of I is and then we will print the
01:22 - value of I like this also I want to
01:25 - change the value of I with every step so
01:29 - I will change the value of I using this
01:31 - expression which is I plus equals 1 this
01:36 - essentially mean that we want to just
01:40 - add 1 every time whenever this code is
01:44 - executed also we can say that we want to
01:47 - perform this operation I is equal to I
01:50 - plus 1 so this statement is similar to
01:54 - this statement let me provide some
01:56 - spaces here now in here also you will
01:59 - observe that I have provided some
02:00 - indentation here and indentation means
02:03 - that these two lines of code is the part
02:07 - of while loop ok so when I want to write
02:11 - something outside the while
02:13 - I will start from here with no
02:16 - indentation and let's say I want to just
02:19 - print that we are finished and now let
02:22 - me run the code and let's see what's the
02:24 - result and you will see here first of
02:27 - all this string is executed which is the
02:30 - value of I is and then the value of I is
02:34 - printed which is 0 1 2 3 & 4 so as you
02:40 - can see here that we have initialized I
02:42 - is equal to 2 so the initial value of I
02:45 - is 0 now when we come to this code and
02:47 - when this condition is checked here the
02:51 - value of I is 0 which is less than 5
02:55 - that means this condition is true and
02:57 - that means that these two lines of code
03:00 - which are under while loop will be
03:03 - executed so this line is executed where
03:06 - value of I is printed which is I is
03:08 - equal to 0 and this line of code
03:11 - increments the value of I by 1 so when
03:14 - this line of code is executed now the
03:16 - value of I becomes 1 because previously
03:19 - it was 0 and once again this program
03:22 - flow goes to the starting to evaluate
03:25 - this condition and this time the value
03:27 - of I is 1 which is less than 5 and the
03:30 - condition is true once again and again
03:33 - this line is of code is executed and
03:35 - this line of code is executed and the
03:38 - value of I is incremented by 1 once
03:40 - again and the value of I becomes 2 here
03:43 - and this will happen again and again
03:47 - until the value of I becomes 5 and when
03:52 - the value of I becomes 5 this condition
03:55 - will be false and that means this code
03:59 - will not be executed this code will only
04:02 - be executed when the while loop
04:04 - condition is true and then at last this
04:07 - line of code is printed which is
04:10 - finished while loop now let me give you
04:13 - one more example of while loop and I
04:16 - will start from the top once again and
04:18 - this time I will declare a variable
04:19 - called num and I will initialize this
04:21 - value by 0 and also I will declare a
04:25 - variable calls
04:27 - an initial value of sum is also zero now
04:30 - here first of all I will ask the user to
04:33 - enter a number so I'm going to just
04:35 - write and also I will ask the user if he
04:38 - or she wants to exit from the loop
04:42 - he can enter zeros and then in the next
04:45 - line I will start with my while loop and
04:48 - I will give the condition if the number
04:51 - so if the number I'm going to write
04:54 - number is not equals to zero we want to
04:59 - perform some operations and what
05:01 - operation we want to perform we want to
05:04 - ask the user to provide any number and
05:07 - we will transfer this number into the
05:09 - variable num so here I will first of all
05:12 - write input and then I will ask the user
05:15 - to provide the number and when the user
05:18 - provides the number I want to convert it
05:20 - to a float value so I will just type
05:22 - cast this input to a float value and
05:26 - then this number will be assigned to the
05:29 - variable num now here don't forget to
05:32 - give the Kulin and in the next line what
05:35 - I will do is I will just use my some
05:37 - variable and I will just add the number
05:41 - value to the sum so I can just write sum
05:45 - is equal to sum plus num and this means
05:48 - that initially the value of sum will be
05:51 - zero and then this number will be added
05:53 - to the sum and until this loop runs we
05:58 - will get the sum of all the numbers
06:00 - which is entered by the user and at last
06:03 - I'm going to just print the value of sum
06:06 - so now what do you think will happen so
06:09 - in this condition we are evaluating that
06:11 - num should not be equal to zero and then
06:15 - only this code will be executed and we
06:18 - have provided the initial value of
06:20 - number is equal to zero so this
06:23 - condition will never be met and this
06:26 - statement will never be executed so we
06:31 - need to provide the initial value of num
06:33 - is equal to 1 and then whenever the user
06:36 - provides the value this one will be
06:40 - overwritten by
06:41 - the value which is provided by the user
06:44 - so this time when we run the code you
06:48 - can see first of all the program asked
06:51 - us to provide a number so I will provide
06:53 - hundred here and then press ENTER and
06:56 - you can see the sum is printed which is
06:59 - equal to hundred once again we will
07:02 - provide some number and then press ENTER
07:04 - and now you can see sum is equal to 150
07:07 - once again we will provide one number
07:09 - and then press ENTER and now the sum is
07:13 - one zero five zero
07:15 - now let's say we provide a number is you
07:18 - can do zero and then press ENTER you can
07:21 - see that our while loop is finished
07:23 - because zero is not equal to zero that
07:26 - means a false condition and then the
07:30 - flow of program comes out of the loop
07:32 - and then the other while loop will be
07:35 - executed which is this while loop and
07:37 - that's why this output is printed we can
07:40 - also write that sum is equal to so we
07:45 - know that this is the sum so sum equals
07:48 - and then after the comma we will print
07:50 - the value of sum and once again when we
07:52 - execute the code
07:56 - and once I want to exit from the code I
07:58 - can use zero to exit so zero and then
08:01 - press ENTER and I come out of this loop
08:04 - now Python also supports the else
08:06 - statement to be associated with the loop
08:10 - statement so what I mean by the else
08:13 - statement to be associated with the loop
08:16 - statement is that I can use after the
08:20 - end of this while loop condition I can
08:23 - use here else and after the colon I can
08:26 - provide some code which I want to
08:29 - execute once this loop is finished okay
08:33 - so I can write here that I want to print
08:36 - for example finished sum so let me run
08:39 - the code once again and I will quickly
08:43 - provide some numbers here and which will
08:45 - provide the sum and when I provide a
08:48 - zero here then we come out of the loop
08:51 - and you can see this finished some
08:53 - string is printed using this else so
08:56 - once your program comes out of the loop
08:59 - this else statement will be executed
09:01 - similarly we can go down and here also
09:04 - instead of writing this finished while
09:07 - loop we can also give else statement
09:10 - here so I'm going to just write else and
09:12 - after the colon here I need to provide
09:15 - the indentation so for space indentation
09:18 - one two three four and everything will
09:22 - be okay and once I run the code and
09:24 - first of all I will provide zero here to
09:27 - see if this is executed and you can see
09:29 - this else condition is called once your
09:34 - while loop is finished now also you can
09:37 - provide some condition here which is
09:39 - always true so for example I can write
09:41 - through here and this means that while
09:45 - loop evaluates to true every time and
09:48 - this means that this statement will be
09:51 - executed forever so this is also
09:54 - possible but you need to think carefully
09:57 - what do you want to do do you want to
10:00 - execute this code infinitely or do you
10:03 - want at some time that this condition
10:05 - will be false so this is how you can use
10:08 - while loops
10:09 - in Python I hope you have enjoyed this
10:11 - video I will see you in the next video

Cleaned transcript:

hey guys welcome to the next video on Python tutorial for beginners in this video I'm going to show you how to use loops in Python and we will start with the while loop so first of all what is a loop so a loop allows us to repeat over some block of code again and again until and unless some condition is met now let's see how to use while loop in Python so let's say I'm going to declare a variable called I and I'm going to initialize it with the value 0 and to use a while loop you use this keyword and then you provide some condition so let's say I want to check whether the value inside the I variable is less than 5 or not okay and as in the case of if also we have seen we provide after the condition this colon symbol and then in the next line we write the code which we want to perform again and again until this while loop condition is true so let's say we want to just print something and we will print that the value of I is and then we will print the value of I like this also I want to change the value of I with every step so I will change the value of I using this expression which is I plus equals 1 this essentially mean that we want to just add 1 every time whenever this code is executed also we can say that we want to perform this operation I is equal to I plus 1 so this statement is similar to this statement let me provide some spaces here now in here also you will observe that I have provided some indentation here and indentation means that these two lines of code is the part of while loop ok so when I want to write something outside the while I will start from here with no indentation and let's say I want to just print that we are finished and now let me run the code and let's see what's the result and you will see here first of all this string is executed which is the value of I is and then the value of I is printed which is 0 1 2 3 & 4 so as you can see here that we have initialized I is equal to 2 so the initial value of I is 0 now when we come to this code and when this condition is checked here the value of I is 0 which is less than 5 that means this condition is true and that means that these two lines of code which are under while loop will be executed so this line is executed where value of I is printed which is I is equal to 0 and this line of code increments the value of I by 1 so when this line of code is executed now the value of I becomes 1 because previously it was 0 and once again this program flow goes to the starting to evaluate this condition and this time the value of I is 1 which is less than 5 and the condition is true once again and again this line is of code is executed and this line of code is executed and the value of I is incremented by 1 once again and the value of I becomes 2 here and this will happen again and again until the value of I becomes 5 and when the value of I becomes 5 this condition will be false and that means this code will not be executed this code will only be executed when the while loop condition is true and then at last this line of code is printed which is finished while loop now let me give you one more example of while loop and I will start from the top once again and this time I will declare a variable called num and I will initialize this value by 0 and also I will declare a variable calls an initial value of sum is also zero now here first of all I will ask the user to enter a number so I'm going to just write and also I will ask the user if he or she wants to exit from the loop he can enter zeros and then in the next line I will start with my while loop and I will give the condition if the number so if the number I'm going to write number is not equals to zero we want to perform some operations and what operation we want to perform we want to ask the user to provide any number and we will transfer this number into the variable num so here I will first of all write input and then I will ask the user to provide the number and when the user provides the number I want to convert it to a float value so I will just type cast this input to a float value and then this number will be assigned to the variable num now here don't forget to give the Kulin and in the next line what I will do is I will just use my some variable and I will just add the number value to the sum so I can just write sum is equal to sum plus num and this means that initially the value of sum will be zero and then this number will be added to the sum and until this loop runs we will get the sum of all the numbers which is entered by the user and at last I'm going to just print the value of sum so now what do you think will happen so in this condition we are evaluating that num should not be equal to zero and then only this code will be executed and we have provided the initial value of number is equal to zero so this condition will never be met and this statement will never be executed so we need to provide the initial value of num is equal to 1 and then whenever the user provides the value this one will be overwritten by the value which is provided by the user so this time when we run the code you can see first of all the program asked us to provide a number so I will provide hundred here and then press ENTER and you can see the sum is printed which is equal to hundred once again we will provide some number and then press ENTER and now you can see sum is equal to 150 once again we will provide one number and then press ENTER and now the sum is one zero five zero now let's say we provide a number is you can do zero and then press ENTER you can see that our while loop is finished because zero is not equal to zero that means a false condition and then the flow of program comes out of the loop and then the other while loop will be executed which is this while loop and that's why this output is printed we can also write that sum is equal to so we know that this is the sum so sum equals and then after the comma we will print the value of sum and once again when we execute the code and once I want to exit from the code I can use zero to exit so zero and then press ENTER and I come out of this loop now Python also supports the else statement to be associated with the loop statement so what I mean by the else statement to be associated with the loop statement is that I can use after the end of this while loop condition I can use here else and after the colon I can provide some code which I want to execute once this loop is finished okay so I can write here that I want to print for example finished sum so let me run the code once again and I will quickly provide some numbers here and which will provide the sum and when I provide a zero here then we come out of the loop and you can see this finished some string is printed using this else so once your program comes out of the loop this else statement will be executed similarly we can go down and here also instead of writing this finished while loop we can also give else statement here so I'm going to just write else and after the colon here I need to provide the indentation so for space indentation one two three four and everything will be okay and once I run the code and first of all I will provide zero here to see if this is executed and you can see this else condition is called once your while loop is finished now also you can provide some condition here which is always true so for example I can write through here and this means that while loop evaluates to true every time and this means that this statement will be executed forever so this is also possible but you need to think carefully what do you want to do do you want to execute this code infinitely or do you want at some time that this condition will be false so this is how you can use while loops in Python I hope you have enjoyed this video I will see you in the next video
