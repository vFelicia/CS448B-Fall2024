With timestamps:

00:01 - hello guys in the last video I've shown
00:02 - you how to use interfaces in cop in this
00:05 - video I'm going to show you how to
00:07 - explicitly use or Implement interfaces
00:10 - in C so in the last video I've shown you
00:13 - how to declare interfaces and I have
00:15 - also told you that you cannot use field
00:19 - in interfaces and you cannot uh use
00:24 - access modifier in interfaces when you
00:27 - define some member method in
00:30 - interfaces and suppose we have two
00:34 - interfaces for example imer 1 and IM
00:37 - meter 2 and both have the same method in
00:42 - uh themselves then how we can uh use
00:46 - these method explicitly I'm going to
00:50 - show you today so first of all for
00:54 - example I have this example one class in
00:57 - which I have this main class I will in
00:59 - theher it
01:03 - uh from meter
01:08 - 1 I meter 1 and I meter
01:17 - 2 in this class so I I inherit from IM
01:21 - meter 1 and I meter 2 in this example
01:24 - one class and then I can Define the
01:27 - method inside uh this the right class
01:31 - which is example one like this okay and
01:34 - I have shown you how you can uh use this
01:37 - print in
01:39 - here so you can just uh
01:43 - Define an object of example one example
01:47 - one
01:49 - ex is equal
01:53 - to is equal to
01:56 - new example one and you can use this
02:01 - print method here right ex. print
02:06 - okay
02:08 - but and I can run it first of all and
02:11 - show you the result and it will run
02:14 - perfectly
02:16 - fine but uh when I want to it's taking
02:23 - long time to run yeah so I can see the
02:26 - message print meter one but for example
02:30 - I want to explicitly Define the print
02:34 - method for meter one and print method
02:37 - for meter two okay so how can I define
02:40 - it
02:42 - so either I can I have to do like this
02:46 - and there will be ambiguity because
02:51 - the there are two print method with the
02:54 - same name inside the class right so to
02:59 - expl explicitly Define that this print
03:03 - is a part of or this print definition is
03:06 - this one and the meter to print
03:09 - definition is this one we can uh use it
03:13 - like this we can we can explicitly
03:16 - Define this print definition like this
03:20 - so first of all you need to uh remove
03:22 - these XIs specifier from here from both
03:26 - the print method and to explicit
03:30 - declare that this print method is a part
03:33 - of this IM meter one what you can do is
03:36 - just copy this print imer
03:39 - 1 and just use Dot and then Define your
03:45 - method definition in the same way I can
03:48 - just copy IM meter 2 Dot and then I
03:54 - can exp explicitly declare that this
03:59 - method meod declaration is a part of
04:01 - meter 1 and this method declaration is a
04:05 - part of meter 2 and how can I use
04:08 - it I can use it like this so I have to
04:13 - type cast first of all uh this meter so
04:19 - I will use for example I want to print
04:21 - this print meter one message so I need
04:24 - to type cast this like this meter in the
04:28 - brackets
04:30 - and then the outer brackets
04:34 - ex dot I can use this now print
04:39 - method and through this type casting we
04:44 - can specify we are using uh this print
04:47 - method for meter one right in the same
04:50 - way we can typ cast this print method
04:53 - for meter
04:55 - 2 and when we run the
04:58 - program we can see
05:00 - print meter 1 print meter 2 message
05:03 - right so you can do it like this type by
05:06 - type casting but then you cannot use
05:09 - this reference
05:11 - object like this ex do print you cannot
05:16 - see this right or even if you want to do
05:19 - it like this print like this it will
05:23 - show an error and you see it's showing
05:25 - this error that does not contain
05:28 - definition of print
05:30 - because we have explicitly defined
05:33 - the methods for both of the interfaces
05:38 - right for example in some cases you want
05:42 - to use this ex dot some print General
05:47 - method print what you can do
05:50 - is you can do it like
05:53 - this you can uh
05:57 - declare this reference I meter
06:01 - 1 i1 for example as an object of example
06:06 - one and once again
06:10 - I2 and meter 2 I meter 2 as an object of
06:17 - example one and I can use I meter one i1
06:21 - here and I2 here and then also it will
06:23 - work fine when I run the program it
06:26 - shows me the same result or or one more
06:30 - thing you can do here is you want to use
06:35 - this for example IM one print method as
06:40 - normally and you want to use this imer 2
06:43 - method uh explicitly how you can do it
06:47 - you can just remove this uh imer one
06:51 - interface and just give the exess
06:57 - specifier this should be
07:01 - public and then you can just use your
07:06 - example one is equal to
07:10 - ex1 and you don't need this and then you
07:15 - can just
07:16 - say this should be ex and you can just
07:20 - say
07:22 - just use this ex object do print right
07:28 - and when you do it
07:30 - this ex will point to this definition of
07:33 - meter one because you have defined this
07:37 - normally right but for using this which
07:41 - uh in which you have uh given the
07:43 - definition explicitly you need to type
07:46 - cost this like this okay so in this way
07:50 - you can Define
07:53 - your interface definition explicitly and
07:57 - you can Implement your interfaces
07:59 - explicitly in C I hope you have enjoyed
08:02 - this video please WR comment and
08:03 - subscribe and bye for now

Cleaned transcript:

hello guys in the last video I've shown you how to use interfaces in cop in this video I'm going to show you how to explicitly use or Implement interfaces in C so in the last video I've shown you how to declare interfaces and I have also told you that you cannot use field in interfaces and you cannot uh use access modifier in interfaces when you define some member method in interfaces and suppose we have two interfaces for example imer 1 and IM meter 2 and both have the same method in uh themselves then how we can uh use these method explicitly I'm going to show you today so first of all for example I have this example one class in which I have this main class I will in theher it uh from meter 1 I meter 1 and I meter 2 in this class so I I inherit from IM meter 1 and I meter 2 in this example one class and then I can Define the method inside uh this the right class which is example one like this okay and I have shown you how you can uh use this print in here so you can just uh Define an object of example one example one ex is equal to is equal to new example one and you can use this print method here right ex. print okay but and I can run it first of all and show you the result and it will run perfectly fine but uh when I want to it's taking long time to run yeah so I can see the message print meter one but for example I want to explicitly Define the print method for meter one and print method for meter two okay so how can I define it so either I can I have to do like this and there will be ambiguity because the there are two print method with the same name inside the class right so to expl explicitly Define that this print is a part of or this print definition is this one and the meter to print definition is this one we can uh use it like this we can we can explicitly Define this print definition like this so first of all you need to uh remove these XIs specifier from here from both the print method and to explicit declare that this print method is a part of this IM meter one what you can do is just copy this print imer 1 and just use Dot and then Define your method definition in the same way I can just copy IM meter 2 Dot and then I can exp explicitly declare that this method meod declaration is a part of meter 1 and this method declaration is a part of meter 2 and how can I use it I can use it like this so I have to type cast first of all uh this meter so I will use for example I want to print this print meter one message so I need to type cast this like this meter in the brackets and then the outer brackets ex dot I can use this now print method and through this type casting we can specify we are using uh this print method for meter one right in the same way we can typ cast this print method for meter 2 and when we run the program we can see print meter 1 print meter 2 message right so you can do it like this type by type casting but then you cannot use this reference object like this ex do print you cannot see this right or even if you want to do it like this print like this it will show an error and you see it's showing this error that does not contain definition of print because we have explicitly defined the methods for both of the interfaces right for example in some cases you want to use this ex dot some print General method print what you can do is you can do it like this you can uh declare this reference I meter 1 i1 for example as an object of example one and once again I2 and meter 2 I meter 2 as an object of example one and I can use I meter one i1 here and I2 here and then also it will work fine when I run the program it shows me the same result or or one more thing you can do here is you want to use this for example IM one print method as normally and you want to use this imer 2 method uh explicitly how you can do it you can just remove this uh imer one interface and just give the exess specifier this should be public and then you can just use your example one is equal to ex1 and you don't need this and then you can just say this should be ex and you can just say just use this ex object do print right and when you do it this ex will point to this definition of meter one because you have defined this normally right but for using this which uh in which you have uh given the definition explicitly you need to type cost this like this okay so in this way you can Define your interface definition explicitly and you can Implement your interfaces explicitly in C I hope you have enjoyed this video please WR comment and subscribe and bye for now
