With timestamps:

00:00 - so what i've done now and i have created
00:02 - a landing.html.erb
00:05 - so this is the landing page of the
00:06 - application
00:08 - so this is the landing page and it says
00:11 - landing page
00:12 - to check login or
00:16 - log out so simply it is the landing page
00:19 - to check login or log out
00:20 - and let's this is the uh this is the
00:24 - feature landing page to check login or
00:26 - logout so let's
00:28 - exit this facebook console and uh
00:31 - let's clear this so now we need to
00:35 - define in dot short rp
00:37 - we need to define get log out
00:41 - because now this is the last feature we
00:43 - are building get lockout
00:44 - and then we will test our application to
00:46 - define
00:47 - sessions hash destroy
00:53 - as logout
00:59 - so this is session.destroy as the whole
01:02 - so now let's move to session controller
01:04 - okay what happens
01:06 - when we make a session so what happens
01:08 - let's i'll show you
01:11 - okay so one thing i
01:14 - uh like one thing i'll show you one
01:17 - thing uh
01:18 - uh see so what happens when
01:22 - the user authentication is successful
01:25 - so if the user's authentication is
01:28 - successful
01:29 - so we what we do
01:33 - we do session
01:36 - of user id
01:40 - equal to user dot id okay
01:44 - now this is what happens when we
01:47 - see the like we see that the user has
01:50 - successfully logged in so we create a
01:52 - user id and assign that user.id
01:55 - what destroy what we do we do the
01:57 - opposite of this
01:58 - so okay we do the opposite of this that
02:01 - instead of
02:01 - assigning it id we assign it as a nail
02:04 - value
02:05 - okay so this is what we do
02:09 - and this is this happens okay uh
02:13 - yeah then uh uh
02:17 - we like this is we do and uh then we
02:20 - create a helper method and uh
02:22 - application controller dot this is the
02:25 - application controller
02:27 - so we create a help method in this
02:30 - and how do we define this we define
02:34 - a helper method helper underscope method
02:40 - uh which says current underscore user so
02:42 - basically in most of the rails
02:43 - application we
02:44 - use that access the current user using
02:46 - this and if undefined
02:51 - find trend underscore user
02:55 - and we define end so
02:59 - session of user id
03:02 - that is not nil okay if that is not nil
03:06 - then we define current underscore user
03:10 - is equal to correct current control user
03:13 - or
03:13 - user dot find blue dot find
03:19 - session or user id
03:25 - else current underscore user is equal to
03:28 - name
03:29 - right so this is we do it so
03:33 - that exists if session id is exist
03:35 - didn't we find the current user
03:37 - then either then we do put that current
03:40 - user to net
03:42 - okay so if
03:45 - if in this page which say
03:50 - if and underscope user
03:56 - you can underscore user then we say
04:00 - and we say
04:05 - hello hello
04:10 - your current underscore dot email
04:14 - it exists then we say this okay
04:19 - else else
04:23 - we need to show user that they are
04:26 - like okay let's first check this
04:30 - we are in session controller then we a
04:32 - time session is able to use the dot id
04:34 - and then we say
04:35 - render
04:40 - layouts
04:42 - flash landing
04:46 - okay okay uh one thing we all
04:50 - like missed in this is uh
04:54 - like uh that is layouts understanding so
04:56 - one thing i would like to tell you
04:58 - we can also render different layouts
05:02 - uh from here by defining the prefix so
05:05 - if we don't define the prefix then it
05:07 - assumes and we are defining the
05:09 - sessions then it assumes we are in
05:10 - sessions and users the end users
05:12 - so if we can define the process for this
05:15 - so let's
05:16 - run the application sign
05:19 - in okay says
05:23 - unexpected error okay yeah because this
05:25 - is uh
05:26 - ruby so yes
05:30 - else and when we end this block
05:33 - like this fine
05:36 - so let's make again
05:41 - let's log in this and let's create so
05:44 - it's it
05:45 - and landing page to check login or
05:47 - logout hello dummy.com we are perfectly
05:50 - fine
05:51 - so now we on this page we need to create
05:54 - an option to block out if it's if it's
05:57 - if it
05:58 - is signed in okay a hrf
06:05 - and we say
06:11 - log out
06:15 - and for that i told you for if you want
06:18 - to check the confirm the
06:20 - path so what you can do you can simply
06:23 - type this
06:23 - log out and it says logo underscore path
06:27 - perfectly fine so this is logger
06:31 - underscore path and
06:32 - here we go and it says so let's again
06:37 - move to this page okay
06:40 - uh let's do move to sign in okay let's
06:43 - create a different route for this okay
06:46 - let's get to this
06:50 - it slash
06:54 - landing and let's
07:00 - do
07:02 - users hash landing we will create this
07:07 - and so let's
07:10 - create this as
07:13 - landing okay so let's move to user
07:17 - controller let's create this because
07:19 - we don't need to sign this every time to
07:21 - get into this method
07:23 - define landing and then simply render
07:28 - layouts a out
07:34 - dash landing okay
07:39 - and yeah
07:42 - so yeah yeah that is an error because
07:46 - we need to define this in codes
07:51 - so like that is an error now let's uh
07:54 - check for the landing round
07:56 - yeah this is slash landing so let's move
07:58 - to this route
08:02 - so yeah it still stays uh when we move
08:05 - to the landing page to check login our
08:06 - hello address let's move to logo
08:08 - so when we move to hit the logo button
08:11 - so
08:12 - we need to destroy the session and we
08:14 - already do that
08:16 - nothing and then we say render
08:19 - this thing or
08:23 - instead of doing render render again
08:24 - again we can
08:26 - simply use redirect 2 because we have
08:28 - already created the route for that
08:30 - yeah supposedly fine we can do redirect
08:34 - redirect underscore to
08:40 - log code underscore
08:43 - i hope this is fine here
08:47 - yeah fine so let's repair this
08:50 - regular logout and here
08:54 - it hits the button and there is a logo
08:57 - the sum seems an error with this
09:02 - okay three zero to form
09:08 - okay seem some error with this
09:17 - so let me check the route for this
09:27 - okay i did a mistake uh i had to render
09:30 - to landing path sorry
09:32 - this was a mistake yeah
09:37 - so let's say redirect
09:40 - to landing in
09:48 - yeah description
09:54 - so let's move to landing page
10:00 - okay to connect it something seems
10:04 - wrong with the server
10:09 - now it's fine so landing page to check
10:12 - login and log out yeah
10:13 - it is not logged in because last at last
10:15 - you had created enjoy the session
10:17 - so let's create a user from uh like that
10:20 - you assign it
10:21 - with moodle.com and let's sign in with
10:24 - the user
10:27 - it says hello android developer let's do
10:29 - a logout and we are logged out so
10:31 - perfectly fine
10:32 - when we are logged out we don't see
10:33 - anything okay so
10:36 - so for that we can create a message if
10:38 - this is the current user then we do this
10:40 - else else
10:44 - we can show
10:48 - else we can show uh the one we had on
10:52 - the
10:53 - page of the users this one
10:56 - uh hrx i click here to login so this was
11:00 - a better approach to check
11:01 - and yeah it says ending right click here
11:04 - to log in when we do
11:06 - log in let's login and this one two
11:08 - three four five six
11:10 - log in and it's a hello data and we sell
11:12 - all we go
11:13 - so oh we are out of the session so this
11:16 - is how it worked
11:18 - so thank you everyone for watching this
11:19 - tutorial uh let's do
11:21 - a quick recap what we did so we had a
11:24 - signup page
11:25 - where we had signed let's get a new user
11:27 - new user
11:29 - uh mail.com
11:33 - let's create a password one two three
11:35 - four five six again
11:36 - and keep the password same so okay this
11:39 - email is already taken
11:41 - yeah okay let's take user 100
11:45 - one two three four five six
11:49 - your account is created so it's
11:51 - perfectly fine
11:52 - uh click here to log in let's create a
11:55 - user 100 let's login with this
12:02 - so landing page to check blogging yeah
12:04 - hello user at 100ml.com let's click on
12:06 - lockout
12:07 - and we are out of this session click
12:10 - here to log in let's login back
12:11 - so everything works perfectly fine so
12:14 - thank you everyone for watching this
12:15 - video
12:15 - so if you have like uh
12:18 - we can extend this to application for to
12:20 - some objectives so i'll try to
12:23 - object this authentication so that you
12:25 - have a better word
12:26 - thank everyone bye take care

Cleaned transcript:

so what i've done now and i have created a landing.html.erb so this is the landing page of the application so this is the landing page and it says landing page to check login or log out so simply it is the landing page to check login or log out and let's this is the uh this is the feature landing page to check login or logout so let's exit this facebook console and uh let's clear this so now we need to define in dot short rp we need to define get log out because now this is the last feature we are building get lockout and then we will test our application to define sessions hash destroy as logout so this is session.destroy as the whole so now let's move to session controller okay what happens when we make a session so what happens let's i'll show you okay so one thing i uh like one thing i'll show you one thing uh uh see so what happens when the user authentication is successful so if the user's authentication is successful so we what we do we do session of user id equal to user dot id okay now this is what happens when we see the like we see that the user has successfully logged in so we create a user id and assign that user.id what destroy what we do we do the opposite of this so okay we do the opposite of this that instead of assigning it id we assign it as a nail value okay so this is what we do and this is this happens okay uh yeah then uh uh we like this is we do and uh then we create a helper method and uh application controller dot this is the application controller so we create a help method in this and how do we define this we define a helper method helper underscope method uh which says current underscore user so basically in most of the rails application we use that access the current user using this and if undefined find trend underscore user and we define end so session of user id that is not nil okay if that is not nil then we define current underscore user is equal to correct current control user or user dot find blue dot find session or user id else current underscore user is equal to name right so this is we do it so that exists if session id is exist didn't we find the current user then either then we do put that current user to net okay so if if in this page which say if and underscope user you can underscore user then we say and we say hello hello your current underscore dot email it exists then we say this okay else else we need to show user that they are like okay let's first check this we are in session controller then we a time session is able to use the dot id and then we say render layouts flash landing okay okay uh one thing we all like missed in this is uh like uh that is layouts understanding so one thing i would like to tell you we can also render different layouts uh from here by defining the prefix so if we don't define the prefix then it assumes and we are defining the sessions then it assumes we are in sessions and users the end users so if we can define the process for this so let's run the application sign in okay says unexpected error okay yeah because this is uh ruby so yes else and when we end this block like this fine so let's make again let's log in this and let's create so it's it and landing page to check login or logout hello dummy.com we are perfectly fine so now we on this page we need to create an option to block out if it's if it's if it is signed in okay a hrf and we say log out and for that i told you for if you want to check the confirm the path so what you can do you can simply type this log out and it says logo underscore path perfectly fine so this is logger underscore path and here we go and it says so let's again move to this page okay uh let's do move to sign in okay let's create a different route for this okay let's get to this it slash landing and let's do users hash landing we will create this and so let's create this as landing okay so let's move to user controller let's create this because we don't need to sign this every time to get into this method define landing and then simply render layouts a out dash landing okay and yeah so yeah yeah that is an error because we need to define this in codes so like that is an error now let's uh check for the landing round yeah this is slash landing so let's move to this route so yeah it still stays uh when we move to the landing page to check login our hello address let's move to logo so when we move to hit the logo button so we need to destroy the session and we already do that nothing and then we say render this thing or instead of doing render render again again we can simply use redirect 2 because we have already created the route for that yeah supposedly fine we can do redirect redirect underscore to log code underscore i hope this is fine here yeah fine so let's repair this regular logout and here it hits the button and there is a logo the sum seems an error with this okay three zero to form okay seem some error with this so let me check the route for this okay i did a mistake uh i had to render to landing path sorry this was a mistake yeah so let's say redirect to landing in yeah description so let's move to landing page okay to connect it something seems wrong with the server now it's fine so landing page to check login and log out yeah it is not logged in because last at last you had created enjoy the session so let's create a user from uh like that you assign it with moodle.com and let's sign in with the user it says hello android developer let's do a logout and we are logged out so perfectly fine when we are logged out we don't see anything okay so so for that we can create a message if this is the current user then we do this else else we can show else we can show uh the one we had on the page of the users this one uh hrx i click here to login so this was a better approach to check and yeah it says ending right click here to log in when we do log in let's login and this one two three four five six log in and it's a hello data and we sell all we go so oh we are out of the session so this is how it worked so thank you everyone for watching this tutorial uh let's do a quick recap what we did so we had a signup page where we had signed let's get a new user new user uh mail.com let's create a password one two three four five six again and keep the password same so okay this email is already taken yeah okay let's take user 100 one two three four five six your account is created so it's perfectly fine uh click here to log in let's create a user 100 let's login with this so landing page to check blogging yeah hello user at 100ml.com let's click on lockout and we are out of this session click here to log in let's login back so everything works perfectly fine so thank you everyone for watching this video so if you have like uh we can extend this to application for to some objectives so i'll try to object this authentication so that you have a better word thank everyone bye take care
