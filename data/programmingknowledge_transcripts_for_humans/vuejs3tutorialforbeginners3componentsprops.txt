With timestamps:

00:06 - hello everyone welcome to the
00:08 - view js tutorial so today we are going
00:10 - to learn about props and components
00:12 - so components are like custom html
00:14 - elements which we can make in vue.js
00:17 - and we can register those components so
00:19 - so that would increase our reusability
00:21 - in our application
00:23 - so this is a good concept which will you
00:25 - find in other
00:26 - front-end frameworks as well so this is
00:28 - a custom http like
00:30 - for easiness the components are custom
00:32 - html templates
00:33 - and we can use them so like not html
00:36 - templates you can
00:37 - call them as custom html tags which we
00:39 - can use them for
00:40 - reusability in our application and the
00:43 - props is by passing data
00:45 - from parent component to child component
00:47 - so we would make our own
00:49 - props and component and i will show you
00:51 - the same
00:52 - so first we can create a new file that
00:54 - is index
00:56 - three dot html okay so
01:00 - you can create this file or i can name
01:03 - this as
01:04 - p uh p and c dot html
01:08 - so pnc stands for props and components
01:11 - and we can
01:12 - create a new file that is p okay
01:15 - i'll name this as props dot js
01:20 - props and components
01:23 - dot js okay and you can
01:26 - you can also like you can rename this as
01:31 - well and you can type props
01:36 - and components
01:39 - dot html okay now what you can do
01:42 - you can console.log
01:48 - script added so this would be
01:51 - like a confirmation for you script added
01:55 - and you can create your html page here
01:59 - and inside this html page you can put a
02:03 - like this is your html page and you can
02:06 - use this
02:07 - and like what i'll do i'll remove
02:10 - this like yeah this is perfectly fine
02:13 - i'll
02:14 - remove this css this script as well and
02:17 - i'll give this
02:18 - as title as props and components
02:23 - props and components
02:28 - okay now what you can do you can
02:32 - at the bottom of your body you can add a
02:34 - script tag
02:36 - and add a source is equal to props
02:39 - and components procs and components
02:44 - dot js components.js
02:49 - and then you can close this tag
02:53 - props and companies.js and then you can
02:56 - close this tag and refresh the page
02:58 - and you have props and companies.html
03:01 - and then
03:02 - you can right click inspect element
03:06 - and console you will see the script has
03:08 - been added
03:10 - so the script is added now what you can
03:12 - do now you can
03:13 - uh like the script is added now it works
03:15 - perfectly fine
03:17 - now we can create our own component
03:20 - for that what we can do we can move to
03:22 - props and components.js
03:24 - and you can type
03:28 - first you can type constant
03:36 - dot create app
03:39 - and we can close this an empty json
03:43 - object
03:44 - okay then we can
03:47 - app dot mount
03:50 - okay and we can give this a
03:53 - id app so we need to define an id app
03:57 - here
03:57 - so we'll give a div id
04:01 - is equal to app and then we can close
04:04 - this tag
04:05 - so then we can refresh this so view is
04:08 - not defined because we have not added
04:10 - the cdn yet
04:11 - so we can copy the cdn and paste it here
04:16 - so let's refresh the page okay sorry
04:18 - let's refresh this page
04:20 - and here you can see the script added
04:21 - and a component has been mounted
04:24 - but now we are going to create our own
04:27 - component
04:28 - a component and for our creating our own
04:31 - component what you need to do you need
04:33 - to type app.component
04:36 - because we are registering a new
04:38 - component and you need to type this as
04:41 - my card so this is your card
04:44 - and what it defines it will have two
04:47 - things
04:49 - so it will pass a json object
04:52 - and here you will have two things one is
04:55 - the props
04:57 - props is equal to
05:01 - title and props
05:05 - and is equal to title and then you will
05:07 - have a template
05:09 - for the same and you will type a tick
05:11 - symbol
05:13 - the tick symbol is brought the escape
05:15 - key and you will return
05:16 - div okay
05:22 - there
05:24 - dip and then you can return a h4 tag
05:27 - or h1 tag
05:30 - and you can render the title here
05:34 - title okay so the
05:38 - prop you will be getting from the parent
05:40 - company you can render the title at here
05:42 - using template
05:44 - now let's move to the html page and
05:47 - like everything is working till now
05:48 - perfectly fine no error so
05:50 - so what we can do we can add our own
05:52 - prop
05:53 - so let this be our prob be my
05:56 - card so this is a custom html template
06:00 - tag we are using and this is and inside
06:03 - this we are going to pass the title
06:06 - hello world
06:09 - okay let's close this and refresh the
06:11 - page here you can see
06:13 - i have a hello world and when i
06:16 - right click here inspect element so here
06:19 - you can see
06:22 - okay i'll show you so here you can see
06:26 - that what we rendered there like what we
06:30 - rendered
06:31 - like here you can see that i have my
06:33 - card html tag
06:34 - but this on conversion turns out to be
06:37 - this
06:38 - the div id h1 title h1 and dave and the
06:41 - title is the props to title the data we
06:43 - are passing from the parent component to
06:44 - the child
06:45 - so here we are passing the data title
06:47 - hello world and my card
06:49 - so we can also pass some more data that
06:52 - is likes is equal to
06:56 - 25 okay and
07:00 - let the date uh like
07:03 - likes is equal to 25 and let get
07:07 - category is equal to
07:10 - let this be like programming
07:14 - okay so what you can do so this is the
07:17 - data we are passing uh
07:19 - but so far we don't have like uh we
07:22 - don't have we have not mentioned the
07:23 - data we are getting
07:25 - so we need to define likes
07:30 - okay this likes
07:33 - so we have defined likes which we'll be
07:35 - getting
07:36 - and the category also category
07:40 - so we are also getting the category and
07:42 - now inside our html
07:44 - what we can do we can use this
07:47 - so h1 is a title then we can have
07:52 - a p tag saying liked by
07:56 - this much likes
08:01 - liked by this much likes and people and
08:04 - we can close this
08:05 - p tag okay and then
08:09 - what we can do we can also give
08:12 - a category
08:15 - a category and then we can say
08:20 - okay we can give category and type
08:25 - category
08:29 - so when we refresh the page so here you
08:33 - can see hello world programming liked by
08:35 - 25 people
08:36 - so this is a good concept but how we
08:38 - increase the is greasability yes we can
08:40 - increase the usability
08:42 - we can create own my card
08:45 - okay and then close the tag
08:50 - and then title is equal to
08:54 - software okay
08:57 - and the let the likes be
09:04 - 50 and the
09:07 - category you can add
09:11 - category
09:14 - is equal to tech so let's refresh the
09:17 - page and now you can see
09:19 - we have another card saying software
09:21 - tech and liked by 50 people
09:23 - so this is how we use props and
09:25 - components to increase the reusability
09:27 - in
09:27 - our application so this is an ex
09:29 - advanced concept
09:31 - and will help you in for the tutorials
09:33 - thank you so much

Cleaned transcript:

hello everyone welcome to the view js tutorial so today we are going to learn about props and components so components are like custom html elements which we can make in vue.js and we can register those components so so that would increase our reusability in our application so this is a good concept which will you find in other frontend frameworks as well so this is a custom http like for easiness the components are custom html templates and we can use them so like not html templates you can call them as custom html tags which we can use them for reusability in our application and the props is by passing data from parent component to child component so we would make our own props and component and i will show you the same so first we can create a new file that is index three dot html okay so you can create this file or i can name this as p uh p and c dot html so pnc stands for props and components and we can create a new file that is p okay i'll name this as props dot js props and components dot js okay and you can you can also like you can rename this as well and you can type props and components dot html okay now what you can do you can console.log script added so this would be like a confirmation for you script added and you can create your html page here and inside this html page you can put a like this is your html page and you can use this and like what i'll do i'll remove this like yeah this is perfectly fine i'll remove this css this script as well and i'll give this as title as props and components props and components okay now what you can do you can at the bottom of your body you can add a script tag and add a source is equal to props and components procs and components dot js components.js and then you can close this tag props and companies.js and then you can close this tag and refresh the page and you have props and companies.html and then you can right click inspect element and console you will see the script has been added so the script is added now what you can do now you can uh like the script is added now it works perfectly fine now we can create our own component for that what we can do we can move to props and components.js and you can type first you can type constant dot create app and we can close this an empty json object okay then we can app dot mount okay and we can give this a id app so we need to define an id app here so we'll give a div id is equal to app and then we can close this tag so then we can refresh this so view is not defined because we have not added the cdn yet so we can copy the cdn and paste it here so let's refresh the page okay sorry let's refresh this page and here you can see the script added and a component has been mounted but now we are going to create our own component a component and for our creating our own component what you need to do you need to type app.component because we are registering a new component and you need to type this as my card so this is your card and what it defines it will have two things so it will pass a json object and here you will have two things one is the props props is equal to title and props and is equal to title and then you will have a template for the same and you will type a tick symbol the tick symbol is brought the escape key and you will return div okay there dip and then you can return a h4 tag or h1 tag and you can render the title here title okay so the prop you will be getting from the parent company you can render the title at here using template now let's move to the html page and like everything is working till now perfectly fine no error so so what we can do we can add our own prop so let this be our prob be my card so this is a custom html template tag we are using and this is and inside this we are going to pass the title hello world okay let's close this and refresh the page here you can see i have a hello world and when i right click here inspect element so here you can see okay i'll show you so here you can see that what we rendered there like what we rendered like here you can see that i have my card html tag but this on conversion turns out to be this the div id h1 title h1 and dave and the title is the props to title the data we are passing from the parent component to the child so here we are passing the data title hello world and my card so we can also pass some more data that is likes is equal to 25 okay and let the date uh like likes is equal to 25 and let get category is equal to let this be like programming okay so what you can do so this is the data we are passing uh but so far we don't have like uh we don't have we have not mentioned the data we are getting so we need to define likes okay this likes so we have defined likes which we'll be getting and the category also category so we are also getting the category and now inside our html what we can do we can use this so h1 is a title then we can have a p tag saying liked by this much likes liked by this much likes and people and we can close this p tag okay and then what we can do we can also give a category a category and then we can say okay we can give category and type category so when we refresh the page so here you can see hello world programming liked by 25 people so this is a good concept but how we increase the is greasability yes we can increase the usability we can create own my card okay and then close the tag and then title is equal to software okay and the let the likes be 50 and the category you can add category is equal to tech so let's refresh the page and now you can see we have another card saying software tech and liked by 50 people so this is how we use props and components to increase the reusability in our application so this is an ex advanced concept and will help you in for the tutorials thank you so much
