With timestamps:

00:00 - hey guys in this video I'm going to show
00:01 - you how you can install numpy with your
00:05 - Visual Studio code on your Mac operating
00:07 - system in addition I'm also going to
00:10 - show you how you can create a virtual en
00:13 - environment for python for your scripts
00:18 - and this video also covers if you want
00:20 - to use any other pip package on your
00:25 - Visual Studio code how you can install
00:27 - those kind of libraries so let's let's
00:30 - get started so first of all I have this
00:32 - folder opened in Visual Studio code
00:35 - which is right now empty here I want to
00:37 - create a numpy script so I'm going to
00:41 - click on uh this new file option and
00:43 - then I'm going to just uh create a new
00:47 - uh python file I'm going to name it as
00:50 - test.py and once this file is created
00:53 - I'm going to paste a very simple numpy
00:57 - uh script here so the code does doesn't
01:00 - matter here the thing which matters here
01:03 - is you can see import numpy could not be
01:07 - resolved so this error it's showing
01:10 - because we haven't yet installed the
01:14 - numpy package so first of all to start
01:17 - with we can create a virtual EnV so that
01:22 - when we install a numi package it's only
01:26 - available inside that virtual and and it
01:28 - doesn't install that numpy package
01:32 - globally so what you can do here is you
01:34 - can open a new terminal click on
01:36 - Terminal and then open a new terminal on
01:39 - Mac OS you will see that the default uh
01:44 - terminal is Zs but you can also open
01:49 - bash or if your uh Mac operating system
01:52 - supports any other type of terminal you
01:54 - will be able to see the option here we
01:56 - are going to use the zsh terminal in in
02:00 - this video now first of all to create a
02:04 - virtual en just type python on your
02:07 - terminal and then press on the tab key
02:11 - and it's going to autocomplete whatever
02:13 - version of python you have in my case
02:16 - python is recognized by Python 3 if you
02:20 - have any other version of python when
02:22 - you press tab then you will be able to
02:25 - see all the related uh commands which
02:28 - you can use uh with python in my case I
02:32 - have this Python 3 so just type Python 3
02:35 - then space hyphen M then just write VNV
02:41 - and then the name of your virtual
02:42 - environment I'm going to name it as a
02:45 - andv this name can be anything so you
02:48 - can name it as anything or any name you
02:52 - can give here I'm going to name it n
02:55 - here okay so I have given this command
02:59 - which is Python 3 space hyphen m space
03:03 - VNV space EnV and what it does is it
03:08 - creates this directory with the name n
03:13 - and then inside this directory you have
03:15 - all the virtual environment related
03:18 - files so once this n directory is
03:22 - created or whatever you name you have
03:24 - given to your environment that directory
03:26 - will be created you will also observe in
03:29 - your uh Visual Studio code that this
03:33 - environment here is changed to the new
03:37 - environment so you can switch between
03:39 - the virtual environment or any other
03:41 - python environment by clicking here at
03:44 - the bottom where you see the version of
03:46 - python so in my case I have the python
03:49 - 3.12 virtual environment I also have the
03:53 - normal python
03:55 - 3.2 and I have this python 3.9 uh
03:59 - version so I'm going to choose this
04:01 - virtual environment and now once the
04:04 - virtual environment is created we need
04:06 - to activate our virtual environment to
04:08 - activate it just write uh source and
04:12 - then whatever name uh you have given to
04:14 - your environment in my case it's EnV so
04:16 - I'm going to write EnV forward slash bin
04:22 - so you can see in this n we have this
04:25 - bin directory which is created we and we
04:27 - need to call this activate
04:30 - file right so I'm going to write en/
04:33 - bbin SL
04:35 - activate and once you uh write this
04:39 - command just press enter which is going
04:40 - to activate the virtual environment and
04:44 - how you can recognize that this
04:45 - environment is activated you will see
04:47 - this kind of EnV or your environment
04:51 - name in the parenthesis in front of your
04:53 - command line so your virtual environment
04:56 - is created now we just need need to
05:00 - install numpy package so to install
05:02 - numpy package you can give this command
05:05 - pip and then press Tab Key on your
05:09 - keyboard right so it's going to complete
05:11 - the PIP command if you have only pip
05:14 - then it's not going to show you any
05:16 - suggestion if you uh have Pip three then
05:19 - it's going to autoc complete so you can
05:20 - see I have three kind of pip available
05:24 - one is PIP other is PIP three and the
05:28 - third one is PIP
05:30 - 3.12 I'm going to use pip 3 for now but
05:34 - uh if you have any other version you can
05:37 - use that then install just write install
05:41 - and then the name of the package which
05:43 - we want to install in my case it's numpy
05:46 - so I'm going to write numpy here and
05:49 - then press enter which is going to
05:51 - install this numpy package you can see
05:54 - when I have run this command which is
05:57 - PIP 3 install numpy then it has
06:00 - installed the numpy package and once the
06:04 - numpy package is installed I can see
06:06 - this error is already gone when I hover
06:09 - over numpy package earlier I was seeing
06:12 - the error here but now this error is
06:14 - gone so now I can run my script so now
06:18 - once the numpy package is uh installed I
06:21 - can clear the
06:23 - terminal and then to run my python
06:26 - script I can simply write uh python
06:29 - three in my case and then the name of
06:32 - the file which is test.py and then press
06:34 - enter and it's going to run my script
06:37 - and show me the output you can see it
06:40 - shows me the output of my numpy script
06:43 - so this is how you can create the
06:46 - virtual environment with your Visual
06:49 - Studio code and then install any pip
06:52 - package using this kind of approach I
06:56 - have installed numpy but you can just
06:59 - write pip 3 install and any other
07:01 - package if you're using let's say bcrypt
07:04 - or py toch or any other package you can
07:07 - simply write pip 3 space install space
07:10 - that name of the package and that
07:12 - package will be installed on your Mac
07:15 - operating system using visual studio
07:17 - code so that's it for this video I hope
07:20 - you've enjoyed this video and I will see
07:21 - you in the next video

Cleaned transcript:

hey guys in this video I'm going to show you how you can install numpy with your Visual Studio code on your Mac operating system in addition I'm also going to show you how you can create a virtual en environment for python for your scripts and this video also covers if you want to use any other pip package on your Visual Studio code how you can install those kind of libraries so let's let's get started so first of all I have this folder opened in Visual Studio code which is right now empty here I want to create a numpy script so I'm going to click on uh this new file option and then I'm going to just uh create a new uh python file I'm going to name it as test.py and once this file is created I'm going to paste a very simple numpy uh script here so the code does doesn't matter here the thing which matters here is you can see import numpy could not be resolved so this error it's showing because we haven't yet installed the numpy package so first of all to start with we can create a virtual EnV so that when we install a numi package it's only available inside that virtual and and it doesn't install that numpy package globally so what you can do here is you can open a new terminal click on Terminal and then open a new terminal on Mac OS you will see that the default uh terminal is Zs but you can also open bash or if your uh Mac operating system supports any other type of terminal you will be able to see the option here we are going to use the zsh terminal in in this video now first of all to create a virtual en just type python on your terminal and then press on the tab key and it's going to autocomplete whatever version of python you have in my case python is recognized by Python 3 if you have any other version of python when you press tab then you will be able to see all the related uh commands which you can use uh with python in my case I have this Python 3 so just type Python 3 then space hyphen M then just write VNV and then the name of your virtual environment I'm going to name it as a andv this name can be anything so you can name it as anything or any name you can give here I'm going to name it n here okay so I have given this command which is Python 3 space hyphen m space VNV space EnV and what it does is it creates this directory with the name n and then inside this directory you have all the virtual environment related files so once this n directory is created or whatever you name you have given to your environment that directory will be created you will also observe in your uh Visual Studio code that this environment here is changed to the new environment so you can switch between the virtual environment or any other python environment by clicking here at the bottom where you see the version of python so in my case I have the python 3.12 virtual environment I also have the normal python 3.2 and I have this python 3.9 uh version so I'm going to choose this virtual environment and now once the virtual environment is created we need to activate our virtual environment to activate it just write uh source and then whatever name uh you have given to your environment in my case it's EnV so I'm going to write EnV forward slash bin so you can see in this n we have this bin directory which is created we and we need to call this activate file right so I'm going to write en/ bbin SL activate and once you uh write this command just press enter which is going to activate the virtual environment and how you can recognize that this environment is activated you will see this kind of EnV or your environment name in the parenthesis in front of your command line so your virtual environment is created now we just need need to install numpy package so to install numpy package you can give this command pip and then press Tab Key on your keyboard right so it's going to complete the PIP command if you have only pip then it's not going to show you any suggestion if you uh have Pip three then it's going to autoc complete so you can see I have three kind of pip available one is PIP other is PIP three and the third one is PIP 3.12 I'm going to use pip 3 for now but uh if you have any other version you can use that then install just write install and then the name of the package which we want to install in my case it's numpy so I'm going to write numpy here and then press enter which is going to install this numpy package you can see when I have run this command which is PIP 3 install numpy then it has installed the numpy package and once the numpy package is installed I can see this error is already gone when I hover over numpy package earlier I was seeing the error here but now this error is gone so now I can run my script so now once the numpy package is uh installed I can clear the terminal and then to run my python script I can simply write uh python three in my case and then the name of the file which is test.py and then press enter and it's going to run my script and show me the output you can see it shows me the output of my numpy script so this is how you can create the virtual environment with your Visual Studio code and then install any pip package using this kind of approach I have installed numpy but you can just write pip 3 install and any other package if you're using let's say bcrypt or py toch or any other package you can simply write pip 3 space install space that name of the package and that package will be installed on your Mac operating system using visual studio code so that's it for this video I hope you've enjoyed this video and I will see you in the next video
