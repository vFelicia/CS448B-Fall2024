With timestamps:

00:00 - hey guys in this video I'm going to show
00:02 - you how you can download and install
00:05 - goang on your windows 11 operating
00:07 - system in addition I'm also going to
00:10 - show you how you can configure go with
00:14 - your Visual Studio code editor so let's
00:17 - get started and let's start with the
00:19 - installation of go so first of all go to
00:23 - your favorite browser and search for
00:25 - download go and the first link which
00:27 - will appear here will be from go. deev
00:30 - so just click on that link now this will
00:34 - redirect you to
00:36 - go.d sloc SL install page where you can
00:41 - see the procedure of how to install
00:45 - goang on various different operating
00:48 - system now in case you land on the go.
00:52 - deev file which is the main
00:54 - homepage you can click on this download
00:57 - button here and it's going to red direct
01:00 - you to this page which says
01:03 - go.d SL
01:05 - DL so here also you can see featured
01:10 - downloads here we have Microsoft Windows
01:14 - Apple Mac OS and Linux
01:18 - systems and the featured download for
01:21 - Windows is this MSI file if you land on
01:25 - the
01:26 - go.d SL
01:28 - do/ install page you can once again see
01:32 - the download button here and also you
01:35 - can see the instructions so when I click
01:39 - on the download button you will be
01:41 - redirected to the same
01:43 - page now in here as you can see the
01:47 - feature download for Windows is this MSI
01:50 - file if you scroll down here in this
01:53 - list you will also find that MSI link
01:56 - here so we are going to download this
02:00 - MSI file so I'm going to click on this
02:03 - MSI file link now once this MSI file is
02:07 - downloaded you can go to this download
02:10 - icon and you can go to the folder where
02:13 - it's downloaded so I'm going to click on
02:16 - this MSI file and let me minimize the
02:20 - browser and this folder Explorer here
02:23 - and you can see the download of go
02:25 - programming language has been started
02:27 - here so now the process of installation
02:30 - of go is very simple you just need to
02:33 - click on next here and then accept
02:36 - license terms and conditions and click
02:38 - on
02:40 - next and this will be the location where
02:43 - go will be installed on your Windows
02:46 - operating system so if you don't have
02:47 - the good reason to change this location
02:50 - just leave it as default if you want to
02:52 - change the location click on change and
02:54 - then choose your desired
02:57 - folder once you have Prov provided the
03:00 - destination folder where go will be
03:04 - installed click on next and now you are
03:07 - ready to install go so at this point you
03:09 - just need to click on this install
03:11 - button which is going to show you this
03:13 - kind of warning which says do you want
03:15 - to allow this app to make changes on
03:17 - your device what this warning means is
03:21 - go is going to try to add the goang
03:26 - executable file part to your system part
03:30 - and it's asking for your permission I'm
03:33 - going to click on yes here which is
03:35 - going to start the installation process
03:38 - and once you see this kind of message
03:40 - which says completed the go programming
03:43 - language Setup Wizard that means go is
03:46 - successfully installed on your Windows
03:48 - operating system so at this point you
03:51 - can click on finish now in order to
03:53 - check whether go is properly installed
03:56 - on your system or not what you can do is
04:00 - you can just click on the search bar and
04:02 - search for CMD which is going to give
04:06 - you this result which is for command
04:08 - prompt so just click on the command
04:10 - prompt icon here which is going to open
04:13 - the command prompt now here you just
04:15 - need to give a very small command which
04:19 - is
04:20 - Go version and then press
04:23 - enter and if it Returns the version of
04:27 - go then go is properly installed on your
04:31 - windows 11 operating system now how this
04:35 - uh command prompt recognizes that goes
04:38 - uh in your system path now to know that
04:43 - you can just type the command path in
04:46 - your command prompt and you will see at
04:49 - the end that this installer for go have
04:53 - added this path for the go binary file
04:58 - in your system path and that's how your
05:01 - command prompt recognizes that goang uh
05:06 - is installed and it recognizes the go
05:09 - commands right so if this Go version is
05:14 - visible then go is working on your
05:17 - windows 11 operating system now in the
05:21 - next part we are going to configure
05:22 - goang with the visual studio code now if
05:26 - you haven't installed Visual Studio code
05:29 - the procedure is really simple I have
05:31 - already installed Visual Studio code so
05:33 - you can see this icon on my desktop but
05:37 - if you haven't you can just search for
05:39 - VSS code download and then click on this
05:42 - uh link which will redirect you to this
05:46 - download page just click on the Windows
05:49 - option and then just click on the
05:52 - executable file and visual studio code
05:54 - will be installed on your Windows
05:56 - operating system now for first of all
06:00 - what we are going to do is we're going
06:02 - to create a project file for our goang
06:07 - so what I'm going to do is I'm going to
06:09 - go to the documents folder here and I'm
06:13 - going to create a new folder inside my
06:16 - documents folder you are free to choose
06:19 - any location I prefer uh this documents
06:23 - folder so I'm going to just create a
06:25 - folder called go Lang and then press
06:30 - enter and then I'm going to go inside
06:33 - this folder and I can either right click
06:37 - and then click on show more options and
06:40 - then click on open with code so what
06:43 - this is going to do is this is going to
06:46 - open this folder in Visual Studio code
06:50 - so you can see this goang folder is open
06:53 - inside my visual studio code now in
06:56 - order to uh work with go projects in
07:01 - your Visual Studio code you need to
07:03 - install an extension so for that you
07:06 - need to go to this icon which is for
07:09 - extensions so I'm going to click on this
07:11 - extensions icon and once this extensions
07:15 - section is open just search for goang in
07:19 - the search bar this is going to give you
07:21 - many results here but the result we are
07:24 - looking for is this one which says go
07:27 - and it has star on top of that which
07:30 - means it's the main package for the
07:34 - goang for your Visual Studio code editor
07:37 - so I'm going to click on this uh
07:40 - extension and once this extension is
07:42 - open you can see it has around 10
07:46 - million download so it's the main
07:48 - package and it's created by go team at
07:52 - Google so I'm going to click on the
07:54 - install button which is going to install
07:57 - this go extension and once this this
07:59 - extension is installed you can see
08:01 - uninstall and disable buttons so just
08:04 - close this
08:06 - extension file and then we go to the
08:09 - Explorer here so now we are going to
08:12 - create a folder in which we will create
08:14 - our go project so here in my goang
08:19 - directory I'm going to create a folder
08:21 - first I'm going to name it as hello so
08:25 - whatever folder name you give here and
08:29 - inside that folder whatever file you
08:32 - will create for example inside this
08:35 - hello folder I'm going to create a new
08:38 - file with the name main.go
08:41 - right so the folder name is hello and
08:46 - the main go file name is main.go right
08:51 - now here you might see this kind of
08:53 - warning which says the go PLS command is
08:57 - not available run go install hyphen V
09:02 - and this uh latest version of go to
09:05 - install I'm going to click on install
09:08 - here now one thing to note here is I
09:11 - have created Hello uh folder and then I
09:15 - have created main.go file now as you
09:19 - might already know go can be compiled
09:22 - into a binary file right so whenever you
09:26 - will compile this main.go file F the
09:31 - name of the binary file will be the same
09:33 - as the parent folder so when you build
09:38 - your main code it's going to create a
09:42 - binary with the name hello so I have
09:44 - clicked on the install button which is
09:47 - going to start the installation of all
09:50 - these tools and you can see all the
09:53 - tools are now installed and you can see
09:57 - it says succeeded so let's go to the
10:00 - main.go file and here I'm going to add a
10:04 - package main first now what does this
10:07 - mean so this line declares the package
10:11 - to which this go file belongs so in go
10:15 - language programs are organized into
10:18 - packages and the main package is a
10:21 - special package used for creating the
10:23 - executable files and this file where you
10:28 - uh include the main package it should
10:31 - have the main function as the entry
10:34 - point which we are going to declare a
10:37 - little bit later now I'm going to import
10:41 - a package so I'm going to just write
10:45 - import and the package name is
10:49 - fmt so this package which is called
10:53 - fmt provides the function for formatted
10:57 - IO and this is the main package which is
11:02 - used for printing the text on the
11:05 - console so we are going to import that
11:08 - package here let me just close this uh
11:11 - window for now because we don't need it
11:14 - so now we are going to create a main
11:15 - function so the way you declare a
11:18 - function in go is you can just write Fu
11:24 - NC and the name of your function which
11:27 - is Main so as I said every uh go binary
11:33 - or every go program should have one main
11:36 - method which will be the main entry
11:38 - point for your go project right so this
11:43 - is the main function we have created and
11:46 - inside this main function we're going to
11:49 - use this fmt package so I'm going to
11:52 - just write fmt dot print line so just
11:56 - write uh print l n here and then in
12:01 - inside the parenthesis we going to just
12:04 - write hello world or I'm going to just
12:07 - say hello from go for example
12:12 - right so we have created our simple
12:16 - hello world code here just save your
12:19 - file now we have written our code but we
12:22 - can see this error which says go dood
12:26 - file not found in current directory or
12:29 - any Parent Directory right so to solve
12:33 - this problem what we need to do so right
12:36 - now we are in our goang folder and I
12:39 - need to go inside the hello folder first
12:42 - inside my project folder so I'm going to
12:44 - just write CD and then just type hello
12:48 - and once I'm in my hello folder here I
12:52 - just need to initialize the mod or
12:56 - module for the go so I'm going to just
12:59 - write go mod and then in it and then
13:05 - space the name of the module I'm going
13:07 - to name it as hello here and then press
13:11 - enter and what this command does is it's
13:15 - it creates this go dood file and it says
13:20 - module hello and the version of uh uh go
13:24 - is 1.
13:26 - 21.3 right so once this go.mod file is
13:31 - created you can see all the errors are
13:34 - gone right now and we can now uh run our
13:40 - project okay so once that's done we can
13:45 - either click on this run button or we
13:48 - can run our code using the commands also
13:51 - so let me show you first how you can run
13:54 - this program using this run code button
13:56 - so I'm going to just click on run code
13:59 - button and it's going to run this file
14:03 - and hopefully it prints hello from go
14:06 - here which is what we wanted right so
14:10 - this was the first way of running your
14:12 - program inside Visual Studio code right
14:14 - so we have added the extension and then
14:18 - we have initialized our module using
14:22 - command line and then we ran our uh uh
14:26 - go file or program using this button but
14:30 - how you can run your code using the
14:33 - command line so for that you just need
14:35 - to go to terminal and go to the
14:38 - directory so I'm in my goang directory
14:40 - right now so I'm going to CD into the
14:43 - hello directory and once I'm in my hello
14:46 - directory I can simply run my uh code by
14:52 - giving this command which is go run and
14:56 - the name of my file which is Main .o
15:00 - okay so inside my hello directory I have
15:03 - this main.go so I'm going to just go
15:06 - inside the directory and run go run
15:09 - main.go where my main function is there
15:13 - and when I uh run this command it gives
15:16 - me the output hello from go which is
15:19 - this one right now one more simple way
15:23 - of running your go code is just go to
15:28 - the direct and then just write go run
15:31 - space dot that means I want to run my uh
15:36 - code in the directory and go is going to
15:39 - find the main function in that directory
15:43 - right and it's going to executed and
15:45 - it's going to give you the output I'm
15:47 - going to just uh press enter and it's
15:50 - also going to uh give you give us the
15:53 - same result which is Hello from go just
15:56 - wait for a few seconds
15:59 - and it gives us the same result now the
16:03 - third option is to create a binary right
16:06 - now we are running our code directory
16:09 - using the G run command but it's not
16:12 - creating any binary here and in go we
16:15 - can create the binary which is more
16:18 - faster right so to build the binary we
16:23 - can just write Co build and then space
16:27 - Dot and what it's going to do is it's
16:29 - going to create a binary with the same
16:31 - name as your parent folder name which is
16:35 - hello in my case so you can see it has
16:37 - created hello.exe file and now I can run
16:42 - this exe file by using slash and the
16:46 - name of the exe file which is hello.exe
16:49 - in my case and then press enter and it's
16:52 - going to give me the same output which
16:55 - is Hello from go so this is how you can
16:58 - run your go program in few different
17:01 - ways so this is how you can install go
17:04 - on your Windows operating system and
17:07 - configure it with Visual Studio code and
17:10 - run your code using visual studio code
17:12 - or The Terminal I hope you've enjoyed
17:16 - this video and I will see you in the
17:18 - next video

Cleaned transcript:

hey guys in this video I'm going to show you how you can download and install goang on your windows 11 operating system in addition I'm also going to show you how you can configure go with your Visual Studio code editor so let's get started and let's start with the installation of go so first of all go to your favorite browser and search for download go and the first link which will appear here will be from go. deev so just click on that link now this will redirect you to go.d sloc SL install page where you can see the procedure of how to install goang on various different operating system now in case you land on the go. deev file which is the main homepage you can click on this download button here and it's going to red direct you to this page which says go.d SL DL so here also you can see featured downloads here we have Microsoft Windows Apple Mac OS and Linux systems and the featured download for Windows is this MSI file if you land on the go.d SL do/ install page you can once again see the download button here and also you can see the instructions so when I click on the download button you will be redirected to the same page now in here as you can see the feature download for Windows is this MSI file if you scroll down here in this list you will also find that MSI link here so we are going to download this MSI file so I'm going to click on this MSI file link now once this MSI file is downloaded you can go to this download icon and you can go to the folder where it's downloaded so I'm going to click on this MSI file and let me minimize the browser and this folder Explorer here and you can see the download of go programming language has been started here so now the process of installation of go is very simple you just need to click on next here and then accept license terms and conditions and click on next and this will be the location where go will be installed on your Windows operating system so if you don't have the good reason to change this location just leave it as default if you want to change the location click on change and then choose your desired folder once you have Prov provided the destination folder where go will be installed click on next and now you are ready to install go so at this point you just need to click on this install button which is going to show you this kind of warning which says do you want to allow this app to make changes on your device what this warning means is go is going to try to add the goang executable file part to your system part and it's asking for your permission I'm going to click on yes here which is going to start the installation process and once you see this kind of message which says completed the go programming language Setup Wizard that means go is successfully installed on your Windows operating system so at this point you can click on finish now in order to check whether go is properly installed on your system or not what you can do is you can just click on the search bar and search for CMD which is going to give you this result which is for command prompt so just click on the command prompt icon here which is going to open the command prompt now here you just need to give a very small command which is Go version and then press enter and if it Returns the version of go then go is properly installed on your windows 11 operating system now how this uh command prompt recognizes that goes uh in your system path now to know that you can just type the command path in your command prompt and you will see at the end that this installer for go have added this path for the go binary file in your system path and that's how your command prompt recognizes that goang uh is installed and it recognizes the go commands right so if this Go version is visible then go is working on your windows 11 operating system now in the next part we are going to configure goang with the visual studio code now if you haven't installed Visual Studio code the procedure is really simple I have already installed Visual Studio code so you can see this icon on my desktop but if you haven't you can just search for VSS code download and then click on this uh link which will redirect you to this download page just click on the Windows option and then just click on the executable file and visual studio code will be installed on your Windows operating system now for first of all what we are going to do is we're going to create a project file for our goang so what I'm going to do is I'm going to go to the documents folder here and I'm going to create a new folder inside my documents folder you are free to choose any location I prefer uh this documents folder so I'm going to just create a folder called go Lang and then press enter and then I'm going to go inside this folder and I can either right click and then click on show more options and then click on open with code so what this is going to do is this is going to open this folder in Visual Studio code so you can see this goang folder is open inside my visual studio code now in order to uh work with go projects in your Visual Studio code you need to install an extension so for that you need to go to this icon which is for extensions so I'm going to click on this extensions icon and once this extensions section is open just search for goang in the search bar this is going to give you many results here but the result we are looking for is this one which says go and it has star on top of that which means it's the main package for the goang for your Visual Studio code editor so I'm going to click on this uh extension and once this extension is open you can see it has around 10 million download so it's the main package and it's created by go team at Google so I'm going to click on the install button which is going to install this go extension and once this this extension is installed you can see uninstall and disable buttons so just close this extension file and then we go to the Explorer here so now we are going to create a folder in which we will create our go project so here in my goang directory I'm going to create a folder first I'm going to name it as hello so whatever folder name you give here and inside that folder whatever file you will create for example inside this hello folder I'm going to create a new file with the name main.go right so the folder name is hello and the main go file name is main.go right now here you might see this kind of warning which says the go PLS command is not available run go install hyphen V and this uh latest version of go to install I'm going to click on install here now one thing to note here is I have created Hello uh folder and then I have created main.go file now as you might already know go can be compiled into a binary file right so whenever you will compile this main.go file F the name of the binary file will be the same as the parent folder so when you build your main code it's going to create a binary with the name hello so I have clicked on the install button which is going to start the installation of all these tools and you can see all the tools are now installed and you can see it says succeeded so let's go to the main.go file and here I'm going to add a package main first now what does this mean so this line declares the package to which this go file belongs so in go language programs are organized into packages and the main package is a special package used for creating the executable files and this file where you uh include the main package it should have the main function as the entry point which we are going to declare a little bit later now I'm going to import a package so I'm going to just write import and the package name is fmt so this package which is called fmt provides the function for formatted IO and this is the main package which is used for printing the text on the console so we are going to import that package here let me just close this uh window for now because we don't need it so now we are going to create a main function so the way you declare a function in go is you can just write Fu NC and the name of your function which is Main so as I said every uh go binary or every go program should have one main method which will be the main entry point for your go project right so this is the main function we have created and inside this main function we're going to use this fmt package so I'm going to just write fmt dot print line so just write uh print l n here and then in inside the parenthesis we going to just write hello world or I'm going to just say hello from go for example right so we have created our simple hello world code here just save your file now we have written our code but we can see this error which says go dood file not found in current directory or any Parent Directory right so to solve this problem what we need to do so right now we are in our goang folder and I need to go inside the hello folder first inside my project folder so I'm going to just write CD and then just type hello and once I'm in my hello folder here I just need to initialize the mod or module for the go so I'm going to just write go mod and then in it and then space the name of the module I'm going to name it as hello here and then press enter and what this command does is it's it creates this go dood file and it says module hello and the version of uh uh go is 1. 21.3 right so once this go.mod file is created you can see all the errors are gone right now and we can now uh run our project okay so once that's done we can either click on this run button or we can run our code using the commands also so let me show you first how you can run this program using this run code button so I'm going to just click on run code button and it's going to run this file and hopefully it prints hello from go here which is what we wanted right so this was the first way of running your program inside Visual Studio code right so we have added the extension and then we have initialized our module using command line and then we ran our uh uh go file or program using this button but how you can run your code using the command line so for that you just need to go to terminal and go to the directory so I'm in my goang directory right now so I'm going to CD into the hello directory and once I'm in my hello directory I can simply run my uh code by giving this command which is go run and the name of my file which is Main .o okay so inside my hello directory I have this main.go so I'm going to just go inside the directory and run go run main.go where my main function is there and when I uh run this command it gives me the output hello from go which is this one right now one more simple way of running your go code is just go to the direct and then just write go run space dot that means I want to run my uh code in the directory and go is going to find the main function in that directory right and it's going to executed and it's going to give you the output I'm going to just uh press enter and it's also going to uh give you give us the same result which is Hello from go just wait for a few seconds and it gives us the same result now the third option is to create a binary right now we are running our code directory using the G run command but it's not creating any binary here and in go we can create the binary which is more faster right so to build the binary we can just write Co build and then space Dot and what it's going to do is it's going to create a binary with the same name as your parent folder name which is hello in my case so you can see it has created hello.exe file and now I can run this exe file by using slash and the name of the exe file which is hello.exe in my case and then press enter and it's going to give me the same output which is Hello from go so this is how you can run your go program in few different ways so this is how you can install go on your Windows operating system and configure it with Visual Studio code and run your code using visual studio code or The Terminal I hope you've enjoyed this video and I will see you in the next video
