With timestamps:

00:00 - video we are going to calculate
00:03 - we are going to write a program
00:08 - to find out
00:10 - to
00:10 - find
00:12 - transpose of a matrix
00:18 - as you should be aware
00:20 - about what is a transpose of a matrix
00:22 - uh so
00:24 - like if there is a
00:27 - if there is a matrix
00:31 - just let me
00:33 - comment
00:35 - if there is a matrix let's say
00:40 - a b c
00:43 - and
00:45 - abc
00:48 - and then d e f okay
00:51 - and so the transpose of this
00:56 - transposed matrix so transpose of this
00:58 - given matrix would be
01:00 - uh
01:01 - a b
01:02 - c
01:05 - and
01:06 - then
01:07 - here
01:09 - d
01:11 - e
01:12 - f okay
01:14 - so
01:15 - we are going to write the program for
01:17 - doing the same
01:18 - okay
01:19 - so uh firstly uh
01:24 - i
01:24 - would initialize the main function
01:28 - and
01:29 - inside the main function
01:31 - i'll declare the columns
01:34 - and rows so
01:36 - row is equals to 2
01:38 - and
01:40 - value
01:42 - column
01:43 - is equals to
01:45 - col
01:48 - column is equals to 3 okay
01:51 - now
01:51 - i'll take a matrix let's say the matrix
01:55 - is
01:56 - array
01:57 - of
02:03 - array of
02:04 - end array
02:07 - two three four
02:09 - and
02:11 - again entire
02:13 - of
02:14 - let's say five four
02:16 - five six four okay
02:19 - now
02:20 - uh firstly we will display the current
02:23 - matrix
02:24 - also for displaying the
02:28 - current matrix
02:30 - uh instead of using the for loop or the
02:33 - loops that we used in the last video we
02:37 - will just use the
02:38 - keyword display and then i'll pass the
02:42 - matrix okay
02:43 - so
02:46 - in the program display function is
02:49 - only used to
02:50 - print contents of a matrix okay
02:53 - and
02:54 - now
02:55 - i'll initialize the
02:58 - the display function
03:01 - okay
03:04 - okay
03:05 - so
03:06 - now uh inside the display function
03:09 - what i'll do is i have to print the
03:12 - display function okay so as we did in
03:14 - the
03:15 - last
03:17 - video i'll
03:18 - print ln
03:22 - the
03:23 - matrixes
03:27 - and then colon
03:29 - okay and then for
03:32 - rowan matrix
03:37 - and
03:39 - then
03:40 - for
03:42 - column
03:48 - in matrix
03:53 - now
03:54 - i have to
03:56 - print
04:00 - i have to print
04:04 - [Music]
04:10 - column
04:12 - and then some spaces
04:15 - now
04:16 - outside this
04:17 - first for loop
04:19 - i will
04:20 - print ln
04:21 - okay
04:22 - so this is the code to display the
04:25 - matrix as we did in the last video so we
04:28 - have displayed the particular matrix
04:32 - now what we can do is
04:34 - uh we can
04:35 - what we will do is we will transpose the
04:36 - matrix
04:38 - so
04:40 - for
04:40 - trans posing the matrix
04:45 - what we have to do is we have to uh
04:47 - like i can introduce another
04:51 - matrix
04:53 - called transpose
04:54 - and
04:58 - let it be equals to the
05:00 - array column
05:06 - and then
05:09 - entire
05:11 - row
05:13 - so what this particular line means is
05:15 - the column
05:17 - in the transpose
05:19 - is equals to the column in the array
05:21 - okay
05:23 - so
05:24 - end
05:26 - so when i hover over it
05:28 - it's a well column end okay and when i
05:31 - hover over this this is the array and
05:33 - then this is size
05:36 - and then this is in it and then there is
05:38 - an end okay
05:40 - so it it what it does is it
05:43 - decides the size of the particular uh
05:47 - array okay
05:48 - also sorry a matrix so for
05:53 - i in
05:55 - 0 to
05:56 - row minus 1
06:03 - and
06:04 - inside this i'll uh
06:06 - take another
06:08 - uh for statement for i in 0 to
06:12 - column minus 1
06:14 - and inside this
06:16 - what i'll do is
06:17 - i'll make transpose
06:20 - the uh one the transpose one one okay
06:24 - transpose
06:27 - so i'll do j i in here because
06:34 - sorry
06:35 - here would be j
06:37 - because um
06:39 - the transpose 1 1 is equals to the
06:42 - transpose of 1 1 is equal to 1 and the
06:43 - transpose of 2 1 is 1 2 okay so the
06:46 - transpose of 2 1 is matrix of 1 2
06:49 - so i can here do i
06:51 - and then j
06:54 - okay
07:00 - now we have transpose the matrix so
07:03 - finally we have to display the
07:05 - transposed okay so this
07:09 - display
07:11 - transpose
07:15 - and i have already declared the display
07:17 - function
07:19 - so i'll display the transpose
07:21 - and i'll go ahead and run this
07:28 - okay
07:34 - okay there is again some problem
07:38 - okay here uh it should be a
07:41 - column in row not column in matrix so
07:45 - when i
07:47 - run this
07:54 - yeah i can see that this is the matrix
07:57 - in the starting and this is the
07:59 - transpose matrix okay so in this video
08:02 - we have
08:03 - basically uh
08:06 - transposed a matrix
08:08 - okay so that's all for this video stay
08:10 - tuned

Cleaned transcript:

video we are going to calculate we are going to write a program to find out to find transpose of a matrix as you should be aware about what is a transpose of a matrix uh so like if there is a if there is a matrix just let me comment if there is a matrix let's say a b c and abc and then d e f okay and so the transpose of this transposed matrix so transpose of this given matrix would be uh a b c and then here d e f okay so we are going to write the program for doing the same okay so uh firstly uh i would initialize the main function and inside the main function i'll declare the columns and rows so row is equals to 2 and value column is equals to col column is equals to 3 okay now i'll take a matrix let's say the matrix is array of array of end array two three four and again entire of let's say five four five six four okay now uh firstly we will display the current matrix also for displaying the current matrix uh instead of using the for loop or the loops that we used in the last video we will just use the keyword display and then i'll pass the matrix okay so in the program display function is only used to print contents of a matrix okay and now i'll initialize the the display function okay okay so now uh inside the display function what i'll do is i have to print the display function okay so as we did in the last video i'll print ln the matrixes and then colon okay and then for rowan matrix and then for column in matrix now i have to print i have to print column and then some spaces now outside this first for loop i will print ln okay so this is the code to display the matrix as we did in the last video so we have displayed the particular matrix now what we can do is uh we can what we will do is we will transpose the matrix so for trans posing the matrix what we have to do is we have to uh like i can introduce another matrix called transpose and let it be equals to the array column and then entire row so what this particular line means is the column in the transpose is equals to the column in the array okay so end so when i hover over it it's a well column end okay and when i hover over this this is the array and then this is size and then this is in it and then there is an end okay so it it what it does is it decides the size of the particular uh array okay also sorry a matrix so for i in 0 to row minus 1 and inside this i'll uh take another uh for statement for i in 0 to column minus 1 and inside this what i'll do is i'll make transpose the uh one the transpose one one okay transpose so i'll do j i in here because sorry here would be j because um the transpose 1 1 is equals to the transpose of 1 1 is equal to 1 and the transpose of 2 1 is 1 2 okay so the transpose of 2 1 is matrix of 1 2 so i can here do i and then j okay now we have transpose the matrix so finally we have to display the transposed okay so this display transpose and i have already declared the display function so i'll display the transpose and i'll go ahead and run this okay okay there is again some problem okay here uh it should be a column in row not column in matrix so when i run this yeah i can see that this is the matrix in the starting and this is the transpose matrix okay so in this video we have basically uh transposed a matrix okay so that's all for this video stay tuned
