With timestamps:

00:01 - hello guys welcome to the next video
00:02 - tutorial on C programming for beginners
00:06 - and in this video we are going to learn
00:08 - what are Pointers and how to use
00:11 - pointers in C now some of you may think
00:16 - that pointers is a very uh complicated
00:20 - concept to understand but actually it's
00:23 - not so if you can understand this
00:27 - concept it will become really easy to
00:30 - use pointers in
00:32 - C so first of all what are
00:35 - Pointers a pointer is a
00:38 - variable whose value is the address of
00:42 - another
00:43 - variable so once again what is a pointer
00:48 - a
00:48 - pointer is a
00:51 - variable whose value is the address of
00:55 - another variable okay now you may ask
01:00 - what is the address of a
01:03 - variable so in
01:05 - C whenever you declare uh variable for
01:10 - example
01:12 - variable X or variable
01:18 - well is equal to whatever 30 right so
01:23 - whenever you declare a variable in C C
01:28 - stores this variable add some particular
01:33 - memory address in your computer okay now
01:37 - in order to access this uh value or
01:42 - access the address of uh this variable
01:45 - where it's stored in your computer
01:48 - memory you can just uh access this
01:52 - address like this so for example we want
01:54 - to print this address we can just write
01:56 - print F and then we can write
02:03 - address
02:05 - of
02:07 - Val is equal
02:09 - to percentage
02:13 - D and then
02:16 - comma and then comes the interesting
02:19 - part you
02:21 - use and symbol to show the address of
02:25 - any variable so whenever you uh use this
02:30 - end symbol before any V Val variable it
02:34 - will show the address of the V variable
02:37 - right so we have written something like
02:41 - this
02:43 - okay but because address is a hexad
02:47 - decimal value this percentage D will not
02:50 - work here because percentage D we use to
02:54 - print decimal values right and to print
02:57 - hexa decimal values we use use this okay
03:03 - percentage X and this percentage X means
03:07 - we want to print some hexa decimal
03:10 - values in C okay so whenever you use end
03:15 - before a variable name it will give you
03:18 - the address of a variable and let's try
03:21 - to run the program and let's see what it
03:23 - prints and it
03:25 - prints
03:27 - 28 ffc1
03:30 - you see 28
03:32 - ffc1 and this means it's a hexa decimal
03:37 - memory address in your computer where
03:41 - this variable well is stored in your
03:45 - computer okay
03:49 - now once again what is a pointer pointer
03:53 - is a variable a simple variable whose
03:58 - value is the address press of another
04:00 - variable and what is this we are by
04:04 - using end before a variable we are using
04:08 - or we are accessing the address of a
04:10 - variable okay so a pointer can be
04:13 - declared as this value also before that
04:18 - and symbol now to declare a
04:21 - pointer in C you just do something like
04:25 - this so it has the data type and then
04:28 - this s Trix tells C that you want to
04:33 - declare a pointer okay so I declare a
04:39 - pointer Point uh for example
04:44 - p and I will
04:46 - just declare this pointer like this so
04:50 - it's same as a variable right but before
04:57 - if you write this estri before this
05:00 - variable it becomes a pointer now
05:03 - pointer is a variable whose value is a
05:07 - address of another variable okay and why
05:10 - I'm stressing this so now whenever you
05:13 - use this pointer variable pointer p is
05:16 - equal
05:18 - to its value can be the address of
05:21 - another variable so this is our variable
05:24 - and the address of variable is this one
05:27 - so its value can be address of Val okay
05:33 - and whenever you assign this address to
05:37 - the pointer you don't need to use ASX
05:40 - before it okay so at the time of
05:43 - Declaration only you just need to give
05:45 - this srix okay and at the time of
05:48 - assignment you don't need this uh you
05:51 - know estx before this variable now this
05:56 - pointer has the address of this value
06:01 - right
06:03 - now how can you access this value 30
06:08 - using this
06:09 - pointer first of all Let's uh try to
06:13 - print what is in the
06:16 - pointer so once again we write here and
06:20 - let's change the line from
06:23 - here and here
06:28 - also and and we will print this pointer
06:31 - P so we can just
06:36 - write value
06:40 - of
06:42 - pointer variable okay now let's see what
06:47 - is the value of this pointer variable
06:49 - without this uh and symbol okay
06:53 - basically this value and this value
06:56 - should be same why because we have
06:58 - assigned this address of a variable to
07:03 - this pointer variable okay this and this
07:07 - should print same values let's try to
07:10 - run this and it prints the same value 28
07:15 - ff18 and value of pointer variable is 28
07:19 - ff18 right so pointer just stores the
07:24 - address of variables now in order to
07:27 - access the values
07:30 - which is stored on this address you
07:34 - use you can so you want to access the
07:38 - value 30 for example using this pointer
07:42 - so using this pointer you want to uh
07:45 - access this value which is 30 but
07:49 - pointer only uh you know can store the
07:52 - address of the variable
07:55 - so this
07:57 - variable have the value of 30 and the
08:00 - address of 28 FF something right now to
08:05 - access the value of a address you use
08:10 - something like this so value
08:17 - of uh for example
08:22 - pointer pointer you can access it like
08:26 - this by a ASX B for your pointer okay
08:32 - and this basically what it does is
08:37 - it so this pointer contains the address
08:40 - and whenever you add this estx before
08:43 - this pointer it shows the value at that
08:48 - address okay so let's try to run the
08:51 - program and let's change this percentage
08:54 - X to percentage T because we want to
08:57 - access this value which is is an integer
09:00 - 30 right run the program and now it
09:05 - shows the value of pointer is 30
09:08 - right so once again we will repeat what
09:12 - we have
09:13 - learned so every variable in C is stored
09:19 - in your computer at a particular address
09:22 - and this address you can access by
09:25 - adding this end symbol before your
09:30 - variable now what is a pointer a pointer
09:34 - is a variable whose value is the address
09:36 - of another variable right so you can
09:41 - declare pointers like this by just
09:43 - adding uh estri before your variable
09:47 - name and the value of the pointer so you
09:51 - can assign some value to the
09:53 - pointer using the address of another
09:57 - variable so this is our variable for
10:00 - example you want to assign this variable
10:03 - address to the pointer you just assign
10:05 - it like this now to dreference uh this
10:10 - uh pointer de reference means to get the
10:14 - value which is stored at this address
10:18 - which is hold by this pointer you use
10:22 - this estx sign and this estx sign before
10:26 - a pointer tells see that we want to get
10:32 - the value of uh the address which is
10:37 - stored in this
10:39 - pointer okay so don't get
10:43 - confused and in the next video we will
10:46 - learn more about pointers and other
10:49 - stuffs in C so please keep watching and
10:52 - please RIT comment and subscribe and bye
10:55 - for now

Cleaned transcript:

hello guys welcome to the next video tutorial on C programming for beginners and in this video we are going to learn what are Pointers and how to use pointers in C now some of you may think that pointers is a very uh complicated concept to understand but actually it's not so if you can understand this concept it will become really easy to use pointers in C so first of all what are Pointers a pointer is a variable whose value is the address of another variable so once again what is a pointer a pointer is a variable whose value is the address of another variable okay now you may ask what is the address of a variable so in C whenever you declare uh variable for example variable X or variable well is equal to whatever 30 right so whenever you declare a variable in C C stores this variable add some particular memory address in your computer okay now in order to access this uh value or access the address of uh this variable where it's stored in your computer memory you can just uh access this address like this so for example we want to print this address we can just write print F and then we can write address of Val is equal to percentage D and then comma and then comes the interesting part you use and symbol to show the address of any variable so whenever you uh use this end symbol before any V Val variable it will show the address of the V variable right so we have written something like this okay but because address is a hexad decimal value this percentage D will not work here because percentage D we use to print decimal values right and to print hexa decimal values we use use this okay percentage X and this percentage X means we want to print some hexa decimal values in C okay so whenever you use end before a variable name it will give you the address of a variable and let's try to run the program and let's see what it prints and it prints 28 ffc1 you see 28 ffc1 and this means it's a hexa decimal memory address in your computer where this variable well is stored in your computer okay now once again what is a pointer pointer is a variable a simple variable whose value is the address press of another variable and what is this we are by using end before a variable we are using or we are accessing the address of a variable okay so a pointer can be declared as this value also before that and symbol now to declare a pointer in C you just do something like this so it has the data type and then this s Trix tells C that you want to declare a pointer okay so I declare a pointer Point uh for example p and I will just declare this pointer like this so it's same as a variable right but before if you write this estri before this variable it becomes a pointer now pointer is a variable whose value is a address of another variable okay and why I'm stressing this so now whenever you use this pointer variable pointer p is equal to its value can be the address of another variable so this is our variable and the address of variable is this one so its value can be address of Val okay and whenever you assign this address to the pointer you don't need to use ASX before it okay so at the time of Declaration only you just need to give this srix okay and at the time of assignment you don't need this uh you know estx before this variable now this pointer has the address of this value right now how can you access this value 30 using this pointer first of all Let's uh try to print what is in the pointer so once again we write here and let's change the line from here and here also and and we will print this pointer P so we can just write value of pointer variable okay now let's see what is the value of this pointer variable without this uh and symbol okay basically this value and this value should be same why because we have assigned this address of a variable to this pointer variable okay this and this should print same values let's try to run this and it prints the same value 28 ff18 and value of pointer variable is 28 ff18 right so pointer just stores the address of variables now in order to access the values which is stored on this address you use you can so you want to access the value 30 for example using this pointer so using this pointer you want to uh access this value which is 30 but pointer only uh you know can store the address of the variable so this variable have the value of 30 and the address of 28 FF something right now to access the value of a address you use something like this so value of uh for example pointer pointer you can access it like this by a ASX B for your pointer okay and this basically what it does is it so this pointer contains the address and whenever you add this estx before this pointer it shows the value at that address okay so let's try to run the program and let's change this percentage X to percentage T because we want to access this value which is is an integer 30 right run the program and now it shows the value of pointer is 30 right so once again we will repeat what we have learned so every variable in C is stored in your computer at a particular address and this address you can access by adding this end symbol before your variable now what is a pointer a pointer is a variable whose value is the address of another variable right so you can declare pointers like this by just adding uh estri before your variable name and the value of the pointer so you can assign some value to the pointer using the address of another variable so this is our variable for example you want to assign this variable address to the pointer you just assign it like this now to dreference uh this uh pointer de reference means to get the value which is stored at this address which is hold by this pointer you use this estx sign and this estx sign before a pointer tells see that we want to get the value of uh the address which is stored in this pointer okay so don't get confused and in the next video we will learn more about pointers and other stuffs in C so please keep watching and please RIT comment and subscribe and bye for now
