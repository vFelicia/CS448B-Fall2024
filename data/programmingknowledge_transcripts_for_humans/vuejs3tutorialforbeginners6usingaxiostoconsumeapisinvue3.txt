With timestamps:

00:02 - hello everyone uh welcome you all to the
00:04 - new vhs tutorial today we are
00:05 - going to learn about how to fetch an api
00:07 - using vue.js
00:09 - so what you can do you can move to the
00:10 - bootstrap website and click on get
00:12 - starter template
00:14 - and you can copy this template and you
00:16 - can paste this uh
00:17 - in advice i'm dot html and what you can
00:20 - do
00:21 - you can paste on this website and
00:24 - you can refer to this so to fetch an api
00:28 - we are going to first i'll give this a
00:30 - title advice app
00:32 - advice app and what i'm going to do i'm
00:36 - going to use another dependency that is
00:38 - axios axos is very similar to fetch
00:41 - uh you can use axos or fetch it's up to
00:44 - you uh
00:45 - i'll show you how to do this using fetch
00:47 - so
00:48 - this is the api we are going to use
00:50 - advice with json api this is a free api
00:52 - which returns an api
00:54 - and it would you can fetch and advise
00:56 - the id and you can search and advise
00:58 - so this is how we do it and we will
01:00 - first we will
01:01 - try to initialize make a simple one then
01:04 - we can
01:04 - get back to the like how we fetch an api
01:07 - so what you can do
01:08 - uh you can move to this uh get a website
01:12 - uh that is axios uh you can use axial so
01:16 - exercise is
01:17 - basically used to fetch apis so what you
01:20 - can do
01:20 - uh you can move to this link
01:24 - and and you can you click here
01:28 - and what you can do you can simply add
01:30 - this script
01:31 - this is uh so this is accessment.js
01:35 - so you can simply copy this script
01:39 - and you can use this in your project
01:42 - so at the below you can use this so
01:45 - axle is there now what you can do you
01:47 - can also put
01:48 - vue.js in your project and you can
01:51 - install vue.js you can click on view
01:55 - three point x
01:57 - so then you can click on get started
02:00 - and you can click on three point x
02:04 - and you can click on installation so
02:06 - this is how we will get cdn for the
02:08 - vue.js
02:10 - and you can copy this script tag and you
02:13 - can paste this in your html page
02:16 - then we can add our own script tag that
02:18 - is script
02:20 - script and we can give a type is go to
02:23 - text comma javascript javascript is
02:25 - perfectly fine we can
02:26 - give a source that is advise
02:30 - advice app dot js
02:33 - so we have used both the things that is
02:36 - axios
02:37 - and the script a script tag using advice
02:40 - app.js we have used both the things
02:42 - so this would particularly help us so
02:45 - axos is used to catch an api i'll show
02:47 - you how you fetch one
02:48 - so let's make a form uh then we can
02:52 - fetch the api using access okay so let's
02:56 - move with the code then first you need
02:58 - to like i'll show you one thing
03:01 - what you can do in this advice app.js
03:04 - you can do
03:06 - constant my app component
03:10 - and you can give a data app component
03:14 - and you can give a data
03:18 - and you can return a json object
03:23 - okay now you can return a json object
03:25 - plus you will have some methods
03:27 - uh methods is going to be one that will
03:29 - say fetch
03:30 - api okay so effect api is going to be
03:34 - the method and what you can do
03:38 - you can uh create some data that is
03:41 - you can create some null data that is
03:44 - response response
03:48 - is equal to an mg json object okay and
03:51 - this is how you
03:52 - you will do it and like you can do
03:57 - response data is equal to empty json
04:00 - object okay
04:01 - now what we can do we will first fetch
04:04 - an api
04:05 - using axios and you we can mount this
04:08 - hours as well constant
04:11 - my app is equal to
04:16 - view dot create
04:19 - app my app component
04:24 - dot mount so you can use the mount
04:27 - functionality
04:29 - and you can give my app as the id so
04:32 - in this you can give an div div
04:36 - id is equal to my app
04:40 - okay so this is how we do it and we
04:43 - right now for just the sake that we want
04:46 - when we open our
04:47 - application so let me move to this page
04:50 - so what you can do you can right click
04:52 - and you can right click and
04:54 - the uh open containing copy file path
04:58 - and you can paste this path here so this
05:01 - is your js file
05:02 - okay i'm going to open the html file you
05:04 - can click on copy file path
05:06 - and you can open this html page so this
05:10 - is how we open the page and you can
05:11 - right click and inspect element
05:13 - so here you can see everything looks
05:15 - perfectly fine
05:16 - we are good to go with our code so axos
05:19 - has installed
05:20 - and now what i want to do that
05:24 - when i open my application so i already
05:27 - want
05:27 - this dot this fetch api function to be
05:29 - called automatically
05:31 - so for that what you can do you can use
05:33 - the inbuilt functionality there is one
05:35 - more thing mounted
05:37 - so mounted means that you call this
05:40 - method
05:41 - you call this method automatically when
05:44 - your page gets loaded or when the
05:45 - component gets loaded
05:46 - so we want our response to be displayed
05:49 - automatically as we open the website so
05:51 - we don't want something to be clicked
05:53 - so we can call this dot patch api
05:58 - so this dot fetch api will be
05:59 - automatically called when we open the
06:01 - page so
06:02 - for that what i can do uh console
06:06 - dot log
06:09 - com uh we can do mounted
06:13 - okay so this would be automatically
06:14 - called let's refresh the page and here
06:16 - you can see
06:16 - it says mounted so this is automatically
06:19 - called this
06:20 - function method has been automatically
06:21 - called as soon as we load the component
06:24 - so the next what we can do we can
06:27 - uh we can use some response
06:30 - so let's see how we get a response from
06:33 - the api
06:34 - so this is the api we can open this api
06:38 - and here you can see that this
06:41 - api returns a json object which says
06:44 - slip
06:45 - id is equal to 116 and advises advice is
06:47 - one of the top five requests people have
06:49 - is that they
06:49 - this is just an advice and with that we
06:51 - have an
06:52 - id so let's see how we we
06:56 - fetch the api so let's copy this
06:59 - https request and let's put this
07:03 - so we if our this api is constant so we
07:07 - can put this above our code api
07:11 - is equal to this so this is our constant
07:14 - api
07:14 - so it will remain forever for this code
07:17 - and we could
07:18 - just modify it as well so what we can do
07:22 - what we can do we can we can do
07:26 - uh so we want this function we want the
07:29 - we want we want to
07:30 - wait for an api response so what we will
07:33 - do we will make this function
07:34 - asynchronous
07:35 - that is we would wait for this function
07:37 - to load and complete
07:39 - if we make this function asynchronous
07:41 - then we can use an await
07:42 - keyword that is await a wait for the
07:46 - response
07:46 - we need to wait for the response and for
07:48 - that we would do
07:50 - axios dot get
07:55 - api so we are calling dot get api
07:59 - and if we get an api then we will have
08:01 - two things that is
08:03 - then the next thing we will do and
08:06 - plus catch error so
08:09 - if we have an error so we can make a
08:11 - function to call the error
08:13 - error is equal to console dot
08:17 - console
08:20 - dot log error okay
08:24 - so this would automatically confirm the
08:27 - error
08:27 - if if there is no error then we will
08:29 - proceed with the
08:30 - then functionality then we would get the
08:34 - response
08:36 - response okay and
08:39 - we want to do this
08:42 - dot response data
08:46 - is equal to response
08:49 - dot data okay so this is how we do it
08:53 - and we can
08:54 - what we can do we can just simply
08:58 - do this response
09:02 - data okay so let's refresh the page
09:05 - move to our app and this is our app
09:09 - now here you can see just for a
09:12 - automatic automatically we load this
09:14 - page and we get the
09:15 - response data okay so what we can do
09:20 - uh we can we can
09:24 - create a front end so this is how we
09:26 - fetch an api
09:27 - and we can render this using bootstrap
09:30 - so i'll show you quickly how we do it
09:32 - uh you can move to the bootstrap and you
09:34 - can look for cards
09:39 - okay and in this you can copy this
09:44 - and you can first give an h1 tag
09:51 - and you can say advice
09:54 - i have and you can give a style
09:58 - is equal to text a line
10:01 - is equal to center okay
10:05 - and let's refresh this okay sorry let's
10:07 - refresh this and we get advice
10:09 - app and now we can create
10:12 - a card we can paste the card here
10:16 - and we can we can remove this image
10:20 - because we don't need it and we can
10:23 - so we can uh advise for the day
10:30 - day is something we can call this advice
10:35 - for the day is
10:36 - and what we can do uh we have two things
10:40 - so this is we can remove this
10:43 - and we can give 2p
10:46 - class so one is the id
10:50 - and another is the like we are do so
10:52 - what we can do
10:54 - uh what we can do like we have a
10:57 - response data this is perfectly fine
11:00 - and we can create two things
11:04 - one is id so let this be null
11:08 - and another is the text so this should
11:11 - be also null
11:12 - and what we can do this dot response
11:15 - data is able to respond to data
11:17 - and we can do this dot id
11:21 - okay so let me show you one thing
11:25 - so we have a slip and id
11:28 - so we can do response just one.data.slip
11:33 - okay and you can
11:37 - you can do this as well responsordata.id
11:40 - oh okay i'll show you one thing
11:45 - i'll not make this complicated this dot
11:47 - id this is good too
11:50 - i just wanted to show you so i kept an
11:52 - empty json object response.datas.slip
11:55 - dot id
11:58 - okay and this dot
12:01 - text is equal to the same thing
12:05 - and i'll copy this and paste it here
12:09 - at advice
12:12 - and i'll put a comma here and here i'll
12:15 - put
12:16 - id
12:20 - and text
12:24 - okay so let me i think i have done
12:26 - english enough
12:27 - for this and let me refresh so here you
12:30 - can see
12:31 - you get a card advice for the day is uh
12:33 - advice number you get 150 you try using
12:36 - an old idea
12:37 - so this is how you fetch an api and you
12:39 - i have a responses to any card
12:42 - and you can just make it more simple
12:45 - number advice
12:49 - advice id and advice
12:53 - text
12:57 - and you can just simply
13:02 - so you can simply you can simply put a
13:06 - bolt back around it
13:07 - so if you want you can make it bold
13:14 - so you can also make this bold as well
13:20 - and you can just remove this response
13:22 - data because we don't need it
13:24 - and you can style is equal to
13:29 - margin zero auto
13:32 - margin zero auto so let me refresh the
13:35 - page
13:36 - so here you can see so
13:40 - advice text okay let me inspect element
13:43 - and i have given margin zero
13:47 - okay so i've given uh i have given uh
13:50 - like
13:51 - i've given this to the okay let me
13:54 - remove this
13:55 - and let me remove this yes perfectly
13:58 - fine
13:59 - so this is how we fetch an api advice
14:01 - for the day is advice id is 198
14:03 - saying is the shower so we already get
14:06 - the response from the back end and
14:07 - displayed on the front end so this is
14:09 - how we do it so thank you everyone for
14:10 - watching this tutorial

Cleaned transcript:

hello everyone uh welcome you all to the new vhs tutorial today we are going to learn about how to fetch an api using vue.js so what you can do you can move to the bootstrap website and click on get starter template and you can copy this template and you can paste this uh in advice i'm dot html and what you can do you can paste on this website and you can refer to this so to fetch an api we are going to first i'll give this a title advice app advice app and what i'm going to do i'm going to use another dependency that is axios axos is very similar to fetch uh you can use axos or fetch it's up to you uh i'll show you how to do this using fetch so this is the api we are going to use advice with json api this is a free api which returns an api and it would you can fetch and advise the id and you can search and advise so this is how we do it and we will first we will try to initialize make a simple one then we can get back to the like how we fetch an api so what you can do uh you can move to this uh get a website uh that is axios uh you can use axial so exercise is basically used to fetch apis so what you can do uh you can move to this link and and you can you click here and what you can do you can simply add this script this is uh so this is accessment.js so you can simply copy this script and you can use this in your project so at the below you can use this so axle is there now what you can do you can also put vue.js in your project and you can install vue.js you can click on view three point x so then you can click on get started and you can click on three point x and you can click on installation so this is how we will get cdn for the vue.js and you can copy this script tag and you can paste this in your html page then we can add our own script tag that is script script and we can give a type is go to text comma javascript javascript is perfectly fine we can give a source that is advise advice app dot js so we have used both the things that is axios and the script a script tag using advice app.js we have used both the things so this would particularly help us so axos is used to catch an api i'll show you how you fetch one so let's make a form uh then we can fetch the api using access okay so let's move with the code then first you need to like i'll show you one thing what you can do in this advice app.js you can do constant my app component and you can give a data app component and you can give a data and you can return a json object okay now you can return a json object plus you will have some methods uh methods is going to be one that will say fetch api okay so effect api is going to be the method and what you can do you can uh create some data that is you can create some null data that is response response is equal to an mg json object okay and this is how you you will do it and like you can do response data is equal to empty json object okay now what we can do we will first fetch an api using axios and you we can mount this hours as well constant my app is equal to view dot create app my app component dot mount so you can use the mount functionality and you can give my app as the id so in this you can give an div div id is equal to my app okay so this is how we do it and we right now for just the sake that we want when we open our application so let me move to this page so what you can do you can right click and you can right click and the uh open containing copy file path and you can paste this path here so this is your js file okay i'm going to open the html file you can click on copy file path and you can open this html page so this is how we open the page and you can right click and inspect element so here you can see everything looks perfectly fine we are good to go with our code so axos has installed and now what i want to do that when i open my application so i already want this dot this fetch api function to be called automatically so for that what you can do you can use the inbuilt functionality there is one more thing mounted so mounted means that you call this method you call this method automatically when your page gets loaded or when the component gets loaded so we want our response to be displayed automatically as we open the website so we don't want something to be clicked so we can call this dot patch api so this dot fetch api will be automatically called when we open the page so for that what i can do uh console dot log com uh we can do mounted okay so this would be automatically called let's refresh the page and here you can see it says mounted so this is automatically called this function method has been automatically called as soon as we load the component so the next what we can do we can uh we can use some response so let's see how we get a response from the api so this is the api we can open this api and here you can see that this api returns a json object which says slip id is equal to 116 and advises advice is one of the top five requests people have is that they this is just an advice and with that we have an id so let's see how we we fetch the api so let's copy this https request and let's put this so we if our this api is constant so we can put this above our code api is equal to this so this is our constant api so it will remain forever for this code and we could just modify it as well so what we can do what we can do we can we can do uh so we want this function we want the we want we want to wait for an api response so what we will do we will make this function asynchronous that is we would wait for this function to load and complete if we make this function asynchronous then we can use an await keyword that is await a wait for the response we need to wait for the response and for that we would do axios dot get api so we are calling dot get api and if we get an api then we will have two things that is then the next thing we will do and plus catch error so if we have an error so we can make a function to call the error error is equal to console dot console dot log error okay so this would automatically confirm the error if if there is no error then we will proceed with the then functionality then we would get the response response okay and we want to do this dot response data is equal to response dot data okay so this is how we do it and we can what we can do we can just simply do this response data okay so let's refresh the page move to our app and this is our app now here you can see just for a automatic automatically we load this page and we get the response data okay so what we can do uh we can we can create a front end so this is how we fetch an api and we can render this using bootstrap so i'll show you quickly how we do it uh you can move to the bootstrap and you can look for cards okay and in this you can copy this and you can first give an h1 tag and you can say advice i have and you can give a style is equal to text a line is equal to center okay and let's refresh this okay sorry let's refresh this and we get advice app and now we can create a card we can paste the card here and we can we can remove this image because we don't need it and we can so we can uh advise for the day day is something we can call this advice for the day is and what we can do uh we have two things so this is we can remove this and we can give 2p class so one is the id and another is the like we are do so what we can do uh what we can do like we have a response data this is perfectly fine and we can create two things one is id so let this be null and another is the text so this should be also null and what we can do this dot response data is able to respond to data and we can do this dot id okay so let me show you one thing so we have a slip and id so we can do response just one.data.slip okay and you can you can do this as well responsordata.id oh okay i'll show you one thing i'll not make this complicated this dot id this is good too i just wanted to show you so i kept an empty json object response.datas.slip dot id okay and this dot text is equal to the same thing and i'll copy this and paste it here at advice and i'll put a comma here and here i'll put id and text okay so let me i think i have done english enough for this and let me refresh so here you can see you get a card advice for the day is uh advice number you get 150 you try using an old idea so this is how you fetch an api and you i have a responses to any card and you can just make it more simple number advice advice id and advice text and you can just simply so you can simply you can simply put a bolt back around it so if you want you can make it bold so you can also make this bold as well and you can just remove this response data because we don't need it and you can style is equal to margin zero auto margin zero auto so let me refresh the page so here you can see so advice text okay let me inspect element and i have given margin zero okay so i've given uh i have given uh like i've given this to the okay let me remove this and let me remove this yes perfectly fine so this is how we fetch an api advice for the day is advice id is 198 saying is the shower so we already get the response from the back end and displayed on the front end so this is how we do it so thank you everyone for watching this tutorial
