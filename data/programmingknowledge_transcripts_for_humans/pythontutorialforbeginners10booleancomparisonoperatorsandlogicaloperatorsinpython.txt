With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - python turtle for beginners in this
00:05 - video we will talk about the boolean
00:07 - values comparison operators and the
00:10 - logical operators in Python so first of
00:14 - all what is a boolean value so in Python
00:18 - boolean values are two constant objects
00:22 - which are true and false now for this
00:26 - demonstration I will be using a Python
00:30 - interpreter and in PyCharm you can open
00:33 - the python interpreter by going down at
00:37 - the bottom and you will be able to see
00:39 - this option which says python console so
00:43 - just click on this python console option
00:46 - which is going to open the python
00:50 - console and you can move this bar up and
00:54 - down in order to expand your console
00:58 - right so let me just clear this console
01:02 - so we will start from the top so in
01:05 - order to clear this console you can
01:06 - right click and then just say clear all
01:09 - and it's going to clear the console and
01:13 - let me resize this console up to the top
01:16 - and let me just minimize this section
01:19 - also so as I said boolean in Python are
01:23 - two constants objects which are true and
01:26 - false so how you write true and false in
01:29 - Python you write true with a capital T
01:33 - and press Enter this is a true value and
01:37 - false you write with a capital false
01:41 - this is a false value now if you write
01:44 - true with small T this is not recognized
01:48 - by Python also when you write false with
01:52 - small F this is also not recognized by
01:56 - Python now generally we use boolean
01:58 - values in order to find out the result
02:01 - of some condition now let's say you have
02:04 - two numbers and you want to find out
02:07 - which number is greater out of these two
02:10 - numbers you can use a comparison
02:13 - an operator to compare these two numbers
02:15 - and the result will be shown as a
02:19 - boolean value now the next question
02:21 - arises what is a comparison operator so
02:26 - in Python these are some of the
02:29 - comparison operators you can use so you
02:32 - can use this double equals to check the
02:36 - equality between two values you have
02:41 - this not equal operator with this
02:44 - exclamation mark and equals which you
02:47 - can use to check the non equality
02:50 - between two values there is a greater
02:52 - than operator and there is a less than
02:55 - operator and also there is a greater
02:57 - than equals operator and the less than
03:00 - equals operator now examples of each of
03:03 - these operators I have given here so how
03:05 - to use these operators as I said if you
03:07 - have two values let's say two integers X
03:11 - and Y to compare these two integers
03:14 - whether they are equal or not you write
03:16 - on the left hand side post variable and
03:20 - on the left hand side second variable
03:22 - and in between you use the comparison
03:26 - operator it can be equal to operator or
03:29 - non equality operator or greater than or
03:33 - less than or greater than equals or less
03:37 - than equals operator so let's see how we
03:39 - can use these operators in real Python
03:43 - environment so let's say I want to check
03:46 - where the 10 is greater than 9 or not
03:51 - and when I press ENTER it's going to
03:53 - give me true because 10 is greater than
03:56 - 9 now once again let's check if then is
04:00 - less than 9 or not and it will give me a
04:03 - false value which is also a boolean
04:06 - result also we can check equality
04:09 - between two values so we can just write
04:12 - 100 is equal to 100 or not and it will
04:17 - give us true once again we can check if
04:19 - 100 is equal to 99 that will give us
04:23 - false in a same way you can also check
04:25 - for the non Equality
04:27 - for non equality you use this
04:29 - exclamation mark equals and then press
04:32 - ENTER it will say true because 100 is
04:36 - not equal to 99 the same operation you
04:40 - can also perform with some variable so
04:43 - let's say I have a variable called X
04:46 - whose value is 20 and I have a variable
04:49 - called Y and I assign 30 to it and let's
04:53 - say I want to check whether the value in
04:56 - the X is greater than or equal to the
05:00 - value which is there in Y then I can
05:03 - write this kind of a statement and when
05:06 - I press Enter
05:06 - it's going to give me false because 30
05:10 - is not greater than or equal to X so
05:16 - let's assign a value which is 30 into
05:19 - our variable X and now let's check
05:23 - whether X and now let's check whether X
05:28 - is less than or equal to Y or not and
05:34 - when I press ENTER it's going to give me
05:36 - true because we know that X which is 30
05:42 - is not less than Y but it's equal to Y
05:47 - and this condition is true now you can
05:50 - also compare two strings using these
05:53 - operators so let's say I have a string
05:55 - called hello and I want to check whether
05:59 - the hello value is equal to some other
06:03 - value for example hello in double quotes
06:06 - or not and it will return me true that
06:09 - means whether you write hello in single
06:12 - quote or hello in double quote both
06:15 - these values are same in Python now also
06:18 - we have seen in the last video where we
06:21 - have seen how to use strings that
06:23 - whenever for example I write a string I
06:26 - can use this dot operator in order to
06:30 - call some functions related to strings
06:33 - so some of these functions returns a
06:36 - boolean value so for example we can
06:39 - check whether they
06:40 - hello all letters are in uppercase or
06:42 - not and once I press ENTER it says false
06:45 - or I can check whether in this hello all
06:49 - the letters are in lowercase or not this
06:53 - will give me true or I can test whether
06:56 - in this Hello string all letters are
07:00 - alphabets or not this is going to give
07:03 - me true because all letters are
07:06 - alphabets now if I check whether in the
07:09 - string whether there is alpha numeric
07:12 - value or not I can use this method which
07:15 - says is all numb and this will check
07:19 - whether in my string there is an
07:20 - alphanumeric value or not now the next
07:23 - question you may ask is for example I
07:25 - want to evaluate two conditions at the
07:29 - same time let's say I want to evaluate
07:31 - whether 10 is greater than 9 and I want
07:38 - to evaluate whether 20 is less than 15
07:43 - or not so how can I evaluate these two
07:47 - conditions at the same time so for those
07:50 - type of comparison we use that logical
07:53 - operators and there are three logical
07:55 - operators which we can use in Python an
07:59 - end operator an or operator and are not
08:04 - operator so this and operator you can
08:08 - use to evaluate two conditions and it
08:12 - will return true only if both conditions
08:15 - are true okay
08:17 - so let's say you have two conditions X
08:20 - condition and y condition then if you
08:24 - use this and operator then in order to
08:28 - get true out of these two conditions
08:30 - both conditions have to be true
08:33 - in the case of or it will return true if
08:36 - one of these conditions is true so
08:40 - whether X is true or Y is true it
08:43 - doesn't matter but if only one condition
08:46 - is true this will give us true value and
08:50 - the not operator will return the
08:52 - opposite of what
08:54 - we have so if some condition returns us
08:57 - true then when we use not operator then
09:01 - not operator will make this false so
09:04 - let's try all these three operators in
09:07 - Python so I said I can use an end
09:11 - operator to check whether this value is
09:14 - true as well as this value is true or
09:17 - not so when I press ENTER it returns us
09:21 - false because even though the first
09:23 - condition is true which is 10 is greater
09:26 - than 9 but the second condition is not
09:29 - true right so in case of and both
09:32 - condition should be true
09:34 - in order to get the true result once
09:38 - again when I use the same conditions and
09:40 - instead of end I use the or operator it
09:44 - will return me true because one of these
09:47 - conditions is true which is 10 is
09:49 - greater than 9 even though the other
09:52 - condition is false
09:53 - now let's say we make both conditions
09:55 - true and we use our and when we press
09:59 - ENTER it's going to still returns us
10:01 - true so the minimum requirement of or is
10:05 - there should be at least one condition
10:08 - which evaluates to true now let's see
10:10 - how we can use the not operator so I can
10:13 - write not and then I can check where the
10:17 - 10 is greater than 9 or not and when I
10:22 - press ENTER it returns us false because
10:26 - we know that 10 is greater than 9 and
10:29 - not makes it false so it returns us
10:32 - false once again if we check whether 10
10:36 - is less than 9 or not it's going to
10:39 - return those true because 10 is not less
10:42 - than 9 and this condition will return
10:46 - false and not will make it opposite
10:50 - which is true so in this way you can use
10:53 - boolean values comparison operators and
10:56 - logical operators in Python I hope you
11:00 - have enjoyed this video I will see you
11:02 - in the next video

Cleaned transcript:

hey guys welcome to the next video on python turtle for beginners in this video we will talk about the boolean values comparison operators and the logical operators in Python so first of all what is a boolean value so in Python boolean values are two constant objects which are true and false now for this demonstration I will be using a Python interpreter and in PyCharm you can open the python interpreter by going down at the bottom and you will be able to see this option which says python console so just click on this python console option which is going to open the python console and you can move this bar up and down in order to expand your console right so let me just clear this console so we will start from the top so in order to clear this console you can right click and then just say clear all and it's going to clear the console and let me resize this console up to the top and let me just minimize this section also so as I said boolean in Python are two constants objects which are true and false so how you write true and false in Python you write true with a capital T and press Enter this is a true value and false you write with a capital false this is a false value now if you write true with small T this is not recognized by Python also when you write false with small F this is also not recognized by Python now generally we use boolean values in order to find out the result of some condition now let's say you have two numbers and you want to find out which number is greater out of these two numbers you can use a comparison an operator to compare these two numbers and the result will be shown as a boolean value now the next question arises what is a comparison operator so in Python these are some of the comparison operators you can use so you can use this double equals to check the equality between two values you have this not equal operator with this exclamation mark and equals which you can use to check the non equality between two values there is a greater than operator and there is a less than operator and also there is a greater than equals operator and the less than equals operator now examples of each of these operators I have given here so how to use these operators as I said if you have two values let's say two integers X and Y to compare these two integers whether they are equal or not you write on the left hand side post variable and on the left hand side second variable and in between you use the comparison operator it can be equal to operator or non equality operator or greater than or less than or greater than equals or less than equals operator so let's see how we can use these operators in real Python environment so let's say I want to check where the 10 is greater than 9 or not and when I press ENTER it's going to give me true because 10 is greater than 9 now once again let's check if then is less than 9 or not and it will give me a false value which is also a boolean result also we can check equality between two values so we can just write 100 is equal to 100 or not and it will give us true once again we can check if 100 is equal to 99 that will give us false in a same way you can also check for the non Equality for non equality you use this exclamation mark equals and then press ENTER it will say true because 100 is not equal to 99 the same operation you can also perform with some variable so let's say I have a variable called X whose value is 20 and I have a variable called Y and I assign 30 to it and let's say I want to check whether the value in the X is greater than or equal to the value which is there in Y then I can write this kind of a statement and when I press Enter it's going to give me false because 30 is not greater than or equal to X so let's assign a value which is 30 into our variable X and now let's check whether X and now let's check whether X is less than or equal to Y or not and when I press ENTER it's going to give me true because we know that X which is 30 is not less than Y but it's equal to Y and this condition is true now you can also compare two strings using these operators so let's say I have a string called hello and I want to check whether the hello value is equal to some other value for example hello in double quotes or not and it will return me true that means whether you write hello in single quote or hello in double quote both these values are same in Python now also we have seen in the last video where we have seen how to use strings that whenever for example I write a string I can use this dot operator in order to call some functions related to strings so some of these functions returns a boolean value so for example we can check whether they hello all letters are in uppercase or not and once I press ENTER it says false or I can check whether in this hello all the letters are in lowercase or not this will give me true or I can test whether in this Hello string all letters are alphabets or not this is going to give me true because all letters are alphabets now if I check whether in the string whether there is alpha numeric value or not I can use this method which says is all numb and this will check whether in my string there is an alphanumeric value or not now the next question you may ask is for example I want to evaluate two conditions at the same time let's say I want to evaluate whether 10 is greater than 9 and I want to evaluate whether 20 is less than 15 or not so how can I evaluate these two conditions at the same time so for those type of comparison we use that logical operators and there are three logical operators which we can use in Python an end operator an or operator and are not operator so this and operator you can use to evaluate two conditions and it will return true only if both conditions are true okay so let's say you have two conditions X condition and y condition then if you use this and operator then in order to get true out of these two conditions both conditions have to be true in the case of or it will return true if one of these conditions is true so whether X is true or Y is true it doesn't matter but if only one condition is true this will give us true value and the not operator will return the opposite of what we have so if some condition returns us true then when we use not operator then not operator will make this false so let's try all these three operators in Python so I said I can use an end operator to check whether this value is true as well as this value is true or not so when I press ENTER it returns us false because even though the first condition is true which is 10 is greater than 9 but the second condition is not true right so in case of and both condition should be true in order to get the true result once again when I use the same conditions and instead of end I use the or operator it will return me true because one of these conditions is true which is 10 is greater than 9 even though the other condition is false now let's say we make both conditions true and we use our and when we press ENTER it's going to still returns us true so the minimum requirement of or is there should be at least one condition which evaluates to true now let's see how we can use the not operator so I can write not and then I can check where the 10 is greater than 9 or not and when I press ENTER it returns us false because we know that 10 is greater than 9 and not makes it false so it returns us false once again if we check whether 10 is less than 9 or not it's going to return those true because 10 is not less than 9 and this condition will return false and not will make it opposite which is true so in this way you can use boolean values comparison operators and logical operators in Python I hope you have enjoyed this video I will see you in the next video
