With timestamps:

00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel and welcome to this
00:03 - video this is part 8 of our C for
00:07 - beginners tutorial series and in this
00:10 - video guys we're gonna talk about how to
00:12 - use increment and decrement operators in
00:15 - C program and later on if you still have
00:19 - time we're going to discuss or we're
00:21 - going to start discussing relational
00:24 - operators and how we can use insight or
00:27 - how we can use it inside our C program
00:29 - okay so basically guys increment and
00:32 - decrement operators are useful operators
00:37 - and it is generally used to minimize the
00:40 - calculation so let me show you an
00:44 - example so in order to increment a value
00:48 - inside AC program we do it like this
00:51 - plus plus and then the name of the
00:55 - variable let me do it here so you can
00:59 - see it clearly
01:00 - plus plus and then the variable okay
01:04 - plus plus and then the variable so it
01:06 - means that x equals x plus 1 okay
01:14 - remember plus plus X means X equals x
01:21 - plus 1 and of course in the same manner
01:24 - when we say minus minus X it means that
01:30 - x equals X minus 1 okay so this is how
01:37 - you increment and decrement a value
01:40 - inside a C program but there is also a
01:44 - way it is called the postfix it is
01:50 - postfix because we place the operator or
01:54 - the plus symbol after the variable X
01:57 - plus plus but it it also means that x
02:04 - equals
02:06 - X plus one and of course when you say X
02:10 - minus minus still it means x equals X
02:15 - minus 1 ok so you get idea this is how
02:18 - you increment and decrement inside a C
02:24 - program ok now there's a difference or a
02:28 - slight difference between having plus
02:31 - plus X instead of X plus plus or minus
02:36 - minus X instead of mine X minus minus ok
02:41 - so I'm going to show you that in a
02:43 - simple program so basically what we're
02:46 - going to do here is we will have it two
02:49 - variable so two variable which is a
02:54 - which is equal to five and then B which
02:59 - is equal to five also so I'm going to
03:02 - show you the effect of postfix and
03:06 - prefix okay so again this one is the
03:12 - prefix okay and then this is post fix
03:19 - okay so let's comment this out so I'm
03:25 - going to show you the effect of postfix
03:28 - and prefix in this particular example so
03:31 - in a equals 5 and B equals 5 also and
03:36 - then in here we set we set the value of
03:44 - a in B equal to 5 okay so basically what
03:52 - we can do right now is print and
03:59 - decrement decrement each time okay and
04:07 - then we can use the variable a for our
04:14 - postfix use a for postfix
04:19 - and use B or variable B for prefix okay
04:26 - so we can do this by using the print F
04:32 - method and then backslash N and then % D
04:41 - ok and then % D because we were having
04:45 - to display or we're going to display
04:47 - both the value of a and B okay so we're
04:55 - going to use the postfix here a - - and
04:59 - then this one is for - minus B so again
05:05 - this is postfix and this is prefix and
05:08 - then they are set or the value of these
05:12 - two variables or set a cost of 5 and B
05:17 - equals to 5 and then we can end this
05:20 - with a semicolon and of course we can do
05:24 - the same you can do the same you can do
05:28 - another one and 1 2 3 4 5 6 there are
05:39 - six lines so we only need 5 and I'm
05:43 - going to show you and demonstrate what
05:47 - is the effect of postfix and prefix so
05:51 - for you to understand here we have taken
05:56 - the value of a and then of course the
05:59 - taken the value of B and then we apply
06:02 - for fix and B fix so if we try to run
06:05 - this build and run as you can see the
06:11 - value is 5 4 3 2 1 and the value of B is
06:21 - 4 3 2 1 0 so it means that if we use the
06:29 - prefix
06:31 - okay which is the case here - - B so it
06:36 - automatically decrease the value of our
06:42 - variable by one whereas here it displays
06:47 - the value of a still five and then later
06:51 - on four and then the third line three
06:55 - the fourth line - and the fifth line is
06:59 - one okay and then of course in the
07:03 - prefix it decreased the value by one and
07:08 - then four three two one and zero okay so
07:13 - that's how you do it the increment and
07:18 - decrement in AC program and this is
07:21 - quite useful if you know if you are
07:24 - working with four loops which we will
07:27 - discuss later on in this particular
07:29 - series okay now let's move on to the
07:32 - next operator which is the relational
07:35 - operators if we have increment and
07:39 - decrement we also have D relational
07:42 - operators relational operators so
07:46 - basically there are like one two three
07:50 - four five six six relational operators
07:56 - and the first one is equal equal okay so
08:03 - basically we're just checking if
08:04 - something is equal to or a variable is
08:09 - equal to some variable okay it's equal
08:13 - to and then we have the exclamation
08:17 - point and then equal so it means is not
08:23 - equal so basically by this we're just
08:29 - checking a certain value it's not equal
08:32 - to another value and then of course we
08:36 - do have
08:37 - the crater done ok greater than and then
08:43 - we have less than and then of course we
08:48 - have the greater than or equal to so
08:53 - greater than greater than or equal to
08:58 - and less than or equal to okay so
09:08 - basically we're just checking the
09:13 - relationship or like the relation
09:18 - between two values every is equal every
09:21 - is not equal every is greater than less
09:24 - than or this two comparison or
09:28 - relational relational operator greater
09:31 - than or equal to or less than or equal
09:34 - to a certain value okay and then of
09:37 - course we can use this especially in if
09:42 - statement in and we're going to discuss
09:46 - that later on in this particular series
09:50 - so basically if you want to check if
09:53 - something is equal or not equal or
09:57 - greater than then we can use the
09:59 - relation on operators sorry we have to
10:02 - remember this this is one of the most
10:04 - important concept in programming so the
10:08 - relational operators okay so I think
10:11 - that's all there is to it guys for this
10:13 - tutorial and in the next video we're
10:16 - going to discuss the other operators say
10:19 - for example the logical operators the
10:21 - bitwise operators and of course the
10:25 - assignment operators and many more so if
10:30 - you want to learn more about C
10:31 - programming language make sure to watch
10:33 - the next video so see you in the next
10:35 - video guys

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel and welcome to this video this is part 8 of our C for beginners tutorial series and in this video guys we're gonna talk about how to use increment and decrement operators in C program and later on if you still have time we're going to discuss or we're going to start discussing relational operators and how we can use insight or how we can use it inside our C program okay so basically guys increment and decrement operators are useful operators and it is generally used to minimize the calculation so let me show you an example so in order to increment a value inside AC program we do it like this plus plus and then the name of the variable let me do it here so you can see it clearly plus plus and then the variable okay plus plus and then the variable so it means that x equals x plus 1 okay remember plus plus X means X equals x plus 1 and of course in the same manner when we say minus minus X it means that x equals X minus 1 okay so this is how you increment and decrement a value inside a C program but there is also a way it is called the postfix it is postfix because we place the operator or the plus symbol after the variable X plus plus but it it also means that x equals X plus one and of course when you say X minus minus still it means x equals X minus 1 ok so you get idea this is how you increment and decrement inside a C program ok now there's a difference or a slight difference between having plus plus X instead of X plus plus or minus minus X instead of mine X minus minus ok so I'm going to show you that in a simple program so basically what we're going to do here is we will have it two variable so two variable which is a which is equal to five and then B which is equal to five also so I'm going to show you the effect of postfix and prefix okay so again this one is the prefix okay and then this is post fix okay so let's comment this out so I'm going to show you the effect of postfix and prefix in this particular example so in a equals 5 and B equals 5 also and then in here we set we set the value of a in B equal to 5 okay so basically what we can do right now is print and decrement decrement each time okay and then we can use the variable a for our postfix use a for postfix and use B or variable B for prefix okay so we can do this by using the print F method and then backslash N and then % D ok and then % D because we were having to display or we're going to display both the value of a and B okay so we're going to use the postfix here a and then this one is for minus B so again this is postfix and this is prefix and then they are set or the value of these two variables or set a cost of 5 and B equals to 5 and then we can end this with a semicolon and of course we can do the same you can do the same you can do another one and 1 2 3 4 5 6 there are six lines so we only need 5 and I'm going to show you and demonstrate what is the effect of postfix and prefix so for you to understand here we have taken the value of a and then of course the taken the value of B and then we apply for fix and B fix so if we try to run this build and run as you can see the value is 5 4 3 2 1 and the value of B is 4 3 2 1 0 so it means that if we use the prefix okay which is the case here B so it automatically decrease the value of our variable by one whereas here it displays the value of a still five and then later on four and then the third line three the fourth line and the fifth line is one okay and then of course in the prefix it decreased the value by one and then four three two one and zero okay so that's how you do it the increment and decrement in AC program and this is quite useful if you know if you are working with four loops which we will discuss later on in this particular series okay now let's move on to the next operator which is the relational operators if we have increment and decrement we also have D relational operators relational operators so basically there are like one two three four five six six relational operators and the first one is equal equal okay so basically we're just checking if something is equal to or a variable is equal to some variable okay it's equal to and then we have the exclamation point and then equal so it means is not equal so basically by this we're just checking a certain value it's not equal to another value and then of course we do have the crater done ok greater than and then we have less than and then of course we have the greater than or equal to so greater than greater than or equal to and less than or equal to okay so basically we're just checking the relationship or like the relation between two values every is equal every is not equal every is greater than less than or this two comparison or relational relational operator greater than or equal to or less than or equal to a certain value okay and then of course we can use this especially in if statement in and we're going to discuss that later on in this particular series so basically if you want to check if something is equal or not equal or greater than then we can use the relation on operators sorry we have to remember this this is one of the most important concept in programming so the relational operators okay so I think that's all there is to it guys for this tutorial and in the next video we're going to discuss the other operators say for example the logical operators the bitwise operators and of course the assignment operators and many more so if you want to learn more about C programming language make sure to watch the next video so see you in the next video guys
