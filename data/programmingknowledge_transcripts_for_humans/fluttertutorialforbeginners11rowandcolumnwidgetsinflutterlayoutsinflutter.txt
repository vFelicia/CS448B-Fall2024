With timestamps:

00:00 - welcome to programming knowledge so in
00:03 - this video we are going to discuss about
00:05 - two very important widgets okay which
00:07 - are not the UI elements but are very
00:10 - essential while designing the look of
00:12 - the screen okay and the first one is
00:15 - column and the basic use of column is
00:17 - that we can give more than one widgets
00:20 - to column and they all appear in a
00:23 - column that is one after another okay so
00:25 - to use a column first I will remove this
00:27 - Center that I have over here and instead
00:30 - of that I will write column okay and it
00:33 - takes a children and which is you can
00:36 - see over here of type with jets okay so
00:39 - inside this we can give a list of
00:41 - widgets that we want to display on the
00:43 - screen okay as the body so the first one
00:47 - is a text okay so this is a text now
00:57 - along with text I also wanted to add a
01:00 - button so first I will give a comma and
01:03 - the next widget will be a button so to
01:06 - add a button in flutter we write flat
01:08 - button okay and it takes a parameter
01:11 - child as in what will be or a written or
01:15 - displayed on that button okay so for now
01:18 - I will just give a text and the text
01:21 - says press or just simple press okay and
01:26 - now you can see it has a yellow line
01:28 - below where it is written flat button
01:30 - and if you hover around it you can see
01:33 - the parameter on pressed is required
01:36 - that means this flag button requires the
01:39 - on pressed parameters and on pressed
01:42 - basically decides the functionality what
01:45 - will happen when this flat button is
01:47 - pressed okay and it takes a function it
01:50 - takes a function okay so you can define
01:53 - a function over here and then call it
01:55 - from here or what I will do is I will
01:57 - create anonymous function like this and
01:59 - so a since I don't want to do a lot of
02:03 - functionality I just print it in the
02:05 - console that the button is pressed so
02:07 - for that I will write print and then
02:11 - inside that pressed
02:14 - okay now when I will first format it and
02:19 - then I'll save it so I would be able to
02:21 - see two things on my screen the first is
02:24 - our text with rish of Kumar and after
02:27 - that I'll have a flat button which is
02:29 - calling press okay so just wait for a
02:32 - moment for the Singh to finish so once
02:36 - finished you can see I have a text
02:39 - called Rishi of Kumar and after that
02:41 - press so the background color of the
02:44 - button and the screen both are the same
02:47 - so we are not able to differentiate so I
02:50 - can add another property that this flat
02:53 - button provides and that is color okay
02:56 - so for color I told you there is a enum
02:58 - that is provided by flutter called
03:01 - colors and then I will just simply write
03:03 - read again format it and save it so over
03:09 - here you can see I have our text called
03:13 - riche of Kumar and below that I have a
03:14 - button press which has red background
03:17 - and if I press on it you can see I am
03:22 - getting over here presses presses okay
03:25 - so the text over here was presses in
03:27 - instead of pressed so I am getting the
03:29 - same in my console okay now I can also
03:32 - change that text color over here okay so
03:35 - for that I will just write text color
03:38 - and the color can be again colors dot
03:43 - white okay I will again save this so
03:48 - once done you can see my text is in
03:52 - white okay so I can keep on adding as
03:55 - many UI elements I want in this column
03:58 - okay so for instance I add another text
04:03 - okay and let's say this programming
04:11 - knowledge okay now if I again save this
04:16 - so below this flat button I'll get
04:19 - another text that says programming
04:22 - knowledge and the order which we in
04:24 - which we write the elements over here
04:26 - that will be the same order that we see
04:29 - on the screen okay that means for us to
04:31 - this text then this flat button and
04:33 - after that we'll have this text
04:35 - programming knowledge okay so now this
04:40 - is how we can add more than one elements
04:43 - in a column okay now suppose I don't
04:47 - want this column to be over here but
04:49 - instead I wanted to be inside the center
04:52 - okay so then we have a parameter that
04:55 - this column takes and that is called
04:58 - main axis alignment okay and for the
05:01 - column the main axis is the vertical
05:03 - axis and the it takes agent it also has
05:07 - an enum that is main axis alignment okay
05:10 - and then if you enter dot you can see
05:12 - all the options and as my task is to
05:15 - display on printer I'll just hit center
05:17 - and then if I save this I will be able
05:19 - to see it in the center so now you can
05:24 - see it is in the center now if you want
05:27 - you can also try different types of main
05:30 - axis alignment that is in this enum so I
05:33 - will again hit the dot and let's try end
05:35 - okay so now if I save this let's see
05:38 - what happens so you can see everything
05:43 - is at that Tech at the end that is the
05:47 - bottom okay and then similarly you can
05:49 - also try something called start that
05:52 - will go at the start okay then we have
05:57 - space around that means it will take all
05:59 - the space so you can see the entire
06:03 - height has been covered by three widgets
06:06 - and basically two texts and of button
06:10 - okay so this is called space around and
06:12 - then we also have space between so you
06:17 - can see the spaces are only between the
06:20 - elements okay that means
06:23 - below this programming knowledge we
06:25 - don't have any space and above this
06:27 - ratio of Kumar we don't have any space
06:29 - but the space is only between the
06:31 - elements okay so this is how we can live
06:35 - with the alignment of the columns for
06:38 - now I will make it Center okay and then
06:43 - comma so now that text will be in cent
06:46 - okay so now you can see the text is
06:48 - again in center but you can see it is
06:50 - only the vertical Center and not the
06:53 - horizontal Center okay so there are two
06:56 - ways to bring it in the exact center
06:59 - okay so as I told you the column has
07:02 - main axis alignment has vertical axis
07:05 - and the cross axis alignment is the
07:08 - horizontal axis so along with main axis
07:11 - alignment you also have a cross axis
07:14 - alignment and over there you can write
07:17 - cross axis alignment which is also an
07:19 - enum dot Center so then again it will be
07:22 - in the exact center and other way to do
07:27 - is to wrap this entire column by a
07:29 - center widget okay so you can do it
07:31 - manually by creating a center and in the
07:34 - place of child we will pass this whole
07:37 - column or easier method is to go to code
07:41 - preferences and keyboard shortcuts and
07:45 - in the shortcuts look for sent refracted
07:48 - okay so you will get a certain key
07:51 - binding for the refractor okay in my
07:53 - case it is control shift R so if I press
07:56 - control shift our I get the options our
07:59 - app with which a trap with center
08:01 - wrapped with column okay and similar to
08:04 - that so I just wrap with Center okay and
08:07 - you can see it automatically adds a
08:09 - center and the child becomes a column
08:12 - and now if I will save this I would be
08:14 - able to see the entire column in the
08:17 - center okay so here you go the
08:22 - everything is in the center okay so now
08:25 - similar to column do you also have a row
08:28 - okay so far to demonstrate that I will
08:31 - just copy all the children that I have
08:34 - over here
08:38 - and instead of a column okay I'll also
08:45 - need to remove this instead of a column
08:51 - I'll have a row okay so as you can
08:54 - understand by the name row adds one
08:57 - element after another towards the right
09:00 - means starting from left towards the
09:02 - right okay so in in place of children if
09:05 - I again pass all those things I will
09:07 - format it and save it so now I will be
09:10 - able to see all these three things one
09:12 - after another so now you can see we have
09:16 - a text over here and after that we have
09:20 - this button and then the programming
09:22 - knowledge text and if I again click on
09:24 - this press so the console is again
09:27 - logging presses means the functionality
09:29 - is fine and similarly over here also
09:33 - inside this row you have a main axis
09:35 - alignment and you know how to use it and
09:38 - across axis alignment okay and you can
09:41 - also wrap it with a center and it is
09:43 - already wrapped with a center so you can
09:46 - see it is already in the center
09:48 - according to the cross axis alignment
09:50 - because for the row the main axis
09:53 - alignment is the horizontal axis and the
09:55 - cross axis alignment is the vertical
09:58 - axis so as it is already inside Center
10:01 - the cross axis alignment is
10:02 - automatically Center okay and if I add
10:06 - main axis alignment main axis alignment
10:10 - as Center then it will be in the exact
10:13 - center of the screen and once we loaded
10:19 - we can see the row is in the center okay
10:23 - and so this is how we add more than one
10:27 - elements in the screen okay so this was
10:30 - for the tutorial thank you

Cleaned transcript:

welcome to programming knowledge so in this video we are going to discuss about two very important widgets okay which are not the UI elements but are very essential while designing the look of the screen okay and the first one is column and the basic use of column is that we can give more than one widgets to column and they all appear in a column that is one after another okay so to use a column first I will remove this Center that I have over here and instead of that I will write column okay and it takes a children and which is you can see over here of type with jets okay so inside this we can give a list of widgets that we want to display on the screen okay as the body so the first one is a text okay so this is a text now along with text I also wanted to add a button so first I will give a comma and the next widget will be a button so to add a button in flutter we write flat button okay and it takes a parameter child as in what will be or a written or displayed on that button okay so for now I will just give a text and the text says press or just simple press okay and now you can see it has a yellow line below where it is written flat button and if you hover around it you can see the parameter on pressed is required that means this flag button requires the on pressed parameters and on pressed basically decides the functionality what will happen when this flat button is pressed okay and it takes a function it takes a function okay so you can define a function over here and then call it from here or what I will do is I will create anonymous function like this and so a since I don't want to do a lot of functionality I just print it in the console that the button is pressed so for that I will write print and then inside that pressed okay now when I will first format it and then I'll save it so I would be able to see two things on my screen the first is our text with rish of Kumar and after that I'll have a flat button which is calling press okay so just wait for a moment for the Singh to finish so once finished you can see I have a text called Rishi of Kumar and after that press so the background color of the button and the screen both are the same so we are not able to differentiate so I can add another property that this flat button provides and that is color okay so for color I told you there is a enum that is provided by flutter called colors and then I will just simply write read again format it and save it so over here you can see I have our text called riche of Kumar and below that I have a button press which has red background and if I press on it you can see I am getting over here presses presses okay so the text over here was presses in instead of pressed so I am getting the same in my console okay now I can also change that text color over here okay so for that I will just write text color and the color can be again colors dot white okay I will again save this so once done you can see my text is in white okay so I can keep on adding as many UI elements I want in this column okay so for instance I add another text okay and let's say this programming knowledge okay now if I again save this so below this flat button I'll get another text that says programming knowledge and the order which we in which we write the elements over here that will be the same order that we see on the screen okay that means for us to this text then this flat button and after that we'll have this text programming knowledge okay so now this is how we can add more than one elements in a column okay now suppose I don't want this column to be over here but instead I wanted to be inside the center okay so then we have a parameter that this column takes and that is called main axis alignment okay and for the column the main axis is the vertical axis and the it takes agent it also has an enum that is main axis alignment okay and then if you enter dot you can see all the options and as my task is to display on printer I'll just hit center and then if I save this I will be able to see it in the center so now you can see it is in the center now if you want you can also try different types of main axis alignment that is in this enum so I will again hit the dot and let's try end okay so now if I save this let's see what happens so you can see everything is at that Tech at the end that is the bottom okay and then similarly you can also try something called start that will go at the start okay then we have space around that means it will take all the space so you can see the entire height has been covered by three widgets and basically two texts and of button okay so this is called space around and then we also have space between so you can see the spaces are only between the elements okay that means below this programming knowledge we don't have any space and above this ratio of Kumar we don't have any space but the space is only between the elements okay so this is how we can live with the alignment of the columns for now I will make it Center okay and then comma so now that text will be in cent okay so now you can see the text is again in center but you can see it is only the vertical Center and not the horizontal Center okay so there are two ways to bring it in the exact center okay so as I told you the column has main axis alignment has vertical axis and the cross axis alignment is the horizontal axis so along with main axis alignment you also have a cross axis alignment and over there you can write cross axis alignment which is also an enum dot Center so then again it will be in the exact center and other way to do is to wrap this entire column by a center widget okay so you can do it manually by creating a center and in the place of child we will pass this whole column or easier method is to go to code preferences and keyboard shortcuts and in the shortcuts look for sent refracted okay so you will get a certain key binding for the refractor okay in my case it is control shift R so if I press control shift our I get the options our app with which a trap with center wrapped with column okay and similar to that so I just wrap with Center okay and you can see it automatically adds a center and the child becomes a column and now if I will save this I would be able to see the entire column in the center okay so here you go the everything is in the center okay so now similar to column do you also have a row okay so far to demonstrate that I will just copy all the children that I have over here and instead of a column okay I'll also need to remove this instead of a column I'll have a row okay so as you can understand by the name row adds one element after another towards the right means starting from left towards the right okay so in in place of children if I again pass all those things I will format it and save it so now I will be able to see all these three things one after another so now you can see we have a text over here and after that we have this button and then the programming knowledge text and if I again click on this press so the console is again logging presses means the functionality is fine and similarly over here also inside this row you have a main axis alignment and you know how to use it and across axis alignment okay and you can also wrap it with a center and it is already wrapped with a center so you can see it is already in the center according to the cross axis alignment because for the row the main axis alignment is the horizontal axis and the cross axis alignment is the vertical axis so as it is already inside Center the cross axis alignment is automatically Center okay and if I add main axis alignment main axis alignment as Center then it will be in the exact center of the screen and once we loaded we can see the row is in the center okay and so this is how we add more than one elements in the screen okay so this was for the tutorial thank you
