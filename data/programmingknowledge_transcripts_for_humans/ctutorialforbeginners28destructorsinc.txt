With timestamps:

00:00 - hello guys welcome to the yet another
00:03 - video tutorial on C++ for beginners and
00:06 - in the last video which I made for this
00:10 - series was the introduction to
00:13 - Constructor now in this video I'm going
00:16 - to teach you about
00:18 - Destructor so what are Destructor
00:22 - Destructor is uh another special kind of
00:26 - class member function that is executed
00:30 - when an object of that class is
00:34 - destroyed so you can say it's the
00:37 - counter part of the Constructor so we
00:40 - use Constructor to initialize some
00:44 - values and we use Destructor to destroy
00:49 - the object or variable when it goes out
00:53 - of the scope okay so I have an
00:58 - example by now you you already know how
01:00 - to create a simple class so I have
01:03 - created a simple class called books here
01:06 - and I have a Constructor public
01:08 - Constructor
01:09 - here and it's nothing but the name same
01:14 - as your class name so this is uh the
01:18 - Declaration of the
01:19 - Constructor so let's see how we can
01:22 - declare a distructor first and then I
01:26 - will show you how to use it so
01:30 - to define a Destructor you just need to
01:35 - copy the class name once again and just
01:38 - paste it like this once again but the
01:43 - destructor it starts from this um symbol
01:49 - called till this is small squiggly line
01:54 - or U I call it till day so this whenever
02:00 - you start your uh I mean member function
02:04 - which has the same name as class and it
02:06 - start with till they sign it's a
02:09 - Destructor and the basic uh use of this
02:12 - Destructor is to destroy the object
02:16 - whenever it goes out of the scope so
02:20 - let's see a small
02:22 - example I
02:25 - will output something on the screen so I
02:29 - will say
02:33 - we are
02:38 - in
02:42 - Constructor and end
02:47 - line
02:49 - and in the destructor we can say it's a
02:53 - Destructor okay so
02:57 - we are in
03:02 - Destructor okay and in the main function
03:07 - or in main I have defined an object of
03:12 - this class or an instance of this class
03:16 - so if you have watched the last video
03:18 - you already know that whenever I create
03:21 - any object of a class first of all
03:25 - Constructor is called and once it goes
03:29 - out of the scope which means once it
03:32 - goes at this line and at the end of the
03:35 - main
03:36 - function it's it doesn't uh I mean it's
03:40 - not necessary that it's uh it's has to
03:43 - be uh end of the function whenever your
03:46 - object goes out of the
03:48 - scope then
03:51 - this Destructor is called so let's
03:54 - compile this program and let's see what
03:58 - will be the result
04:03 - so it's
04:06 - compiling let's run the
04:08 - program and you see here first of all
04:12 - your is called whenever you create an
04:15 - object of a class and once it reaches
04:19 - the end of uh your scope for example the
04:22 - end of the scope for this object is the
04:25 - end of this function then this
04:27 - Destructor is called and when whenever
04:30 - this Destructor is called all the
04:32 - resources which are I mean contained by
04:36 - this book object are released or all the
04:40 - memory which is hold by this object is
04:43 - released okay so it's uh a Destructor is
04:47 - used to
04:49 - release all the resources which are used
04:53 - by the object
04:56 - okay and in between this construct in
04:59 - the structor you can do your basic I
05:04 - mean basic uh
05:06 - programming for example printing some uh
05:11 - some something or some useful work okay
05:16 - so it will start with the Constructor do
05:19 - its work and once it goes out of the
05:22 - scope then it will call this okay so
05:27 - let's see once again
05:30 - will the program run it you see first of
05:32 - all Constructor is called then it uh
05:36 - execute the code which you write in that
05:39 - same scope and whenever it goes out of
05:42 - the scope it called a Destructor and all
05:46 - the resources are released uh by your
05:49 - object whenever this Destructor is
05:51 - called and one more little important
05:56 - thing that I have also I mean
06:00 - uh told you about this in the last video
06:03 - I think that whenever you don't even
06:07 - declare the Constructor and the structor
06:09 - in the class the class or C++ will
06:13 - create a Constructor in the structor for
06:16 - you by itself so it depends upon you if
06:21 - you want to use Constructor in
06:23 - instructor for your some useful work
06:26 - which you want to perform with them
06:28 - otherwise your uh class
06:32 - automatically uh con has Constructor and
06:35 - Destructor by default so you don't need
06:38 - to Define them explicitly but if you can
06:44 - perform any useful task with Constructor
06:47 - and Destructor for example Constructor
06:49 - you can initialize some values or in the
06:52 - destructor you can want to release some
06:55 - resources from other variables or other
06:58 - classes then you can do it with the help
07:01 - of Destructor so this is what is the use
07:05 - of Destructor I hope you have enjoyed
07:07 - this video please rate comment and
07:08 - subscribe and bye for

Cleaned transcript:

hello guys welcome to the yet another video tutorial on C++ for beginners and in the last video which I made for this series was the introduction to Constructor now in this video I'm going to teach you about Destructor so what are Destructor Destructor is uh another special kind of class member function that is executed when an object of that class is destroyed so you can say it's the counter part of the Constructor so we use Constructor to initialize some values and we use Destructor to destroy the object or variable when it goes out of the scope okay so I have an example by now you you already know how to create a simple class so I have created a simple class called books here and I have a Constructor public Constructor here and it's nothing but the name same as your class name so this is uh the Declaration of the Constructor so let's see how we can declare a distructor first and then I will show you how to use it so to define a Destructor you just need to copy the class name once again and just paste it like this once again but the destructor it starts from this um symbol called till this is small squiggly line or U I call it till day so this whenever you start your uh I mean member function which has the same name as class and it start with till they sign it's a Destructor and the basic uh use of this Destructor is to destroy the object whenever it goes out of the scope so let's see a small example I will output something on the screen so I will say we are in Constructor and end line and in the destructor we can say it's a Destructor okay so we are in Destructor okay and in the main function or in main I have defined an object of this class or an instance of this class so if you have watched the last video you already know that whenever I create any object of a class first of all Constructor is called and once it goes out of the scope which means once it goes at this line and at the end of the main function it's it doesn't uh I mean it's not necessary that it's uh it's has to be uh end of the function whenever your object goes out of the scope then this Destructor is called so let's compile this program and let's see what will be the result so it's compiling let's run the program and you see here first of all your is called whenever you create an object of a class and once it reaches the end of uh your scope for example the end of the scope for this object is the end of this function then this Destructor is called and when whenever this Destructor is called all the resources which are I mean contained by this book object are released or all the memory which is hold by this object is released okay so it's uh a Destructor is used to release all the resources which are used by the object okay and in between this construct in the structor you can do your basic I mean basic uh programming for example printing some uh some something or some useful work okay so it will start with the Constructor do its work and once it goes out of the scope then it will call this okay so let's see once again will the program run it you see first of all Constructor is called then it uh execute the code which you write in that same scope and whenever it goes out of the scope it called a Destructor and all the resources are released uh by your object whenever this Destructor is called and one more little important thing that I have also I mean uh told you about this in the last video I think that whenever you don't even declare the Constructor and the structor in the class the class or C++ will create a Constructor in the structor for you by itself so it depends upon you if you want to use Constructor in instructor for your some useful work which you want to perform with them otherwise your uh class automatically uh con has Constructor and Destructor by default so you don't need to Define them explicitly but if you can perform any useful task with Constructor and Destructor for example Constructor you can initialize some values or in the destructor you can want to release some resources from other variables or other classes then you can do it with the help of Destructor so this is what is the use of Destructor I hope you have enjoyed this video please rate comment and subscribe and bye for
