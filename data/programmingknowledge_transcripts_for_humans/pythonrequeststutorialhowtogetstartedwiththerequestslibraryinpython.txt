With timestamps:

00:00 - so today we are going to work with the
00:02 - pip package known as request
00:04 - so uh following instructions once we
00:06 - followed
00:07 - the first one is the python must be
00:09 - installed on a machine
00:11 - and you do pip install request and you
00:13 - do
00:14 - import request so python must be
00:16 - installed
00:17 - paper install request and you do import
00:19 - requests on your machine
00:20 - and i have a db.json file which emulates
00:24 - itself
00:24 - as a rest api so let's
00:27 - work with this and for that what you
00:30 - need to do you need to start the
00:31 - terminal
00:32 - and i have already a command running so
00:36 - what i'll do i'll refresh this
00:40 - so you need to run uh you need to
00:42 - install a node.js on your local machine
00:46 - and then what you can do you can do npm
00:48 - install json server and do json server
00:51 - you can run this command json server
00:53 - minus
00:54 - minus watch db.json and there's a dash
00:57 - in between
00:58 - so this would emulate itself as a rest
01:00 - api
01:01 - so let me run this so here you can see
01:04 - that i have json object known as
01:06 - meetings which
01:07 - in itself is a key a value pair which is
01:10 - a json array
01:11 - and then just for your simplicity
01:14 - i can open this uh so
01:18 - this is like you can send a get request
01:22 - and you will get the same songs at
01:24 - db.json so basically this emulates
01:26 - itself as a rest api you can click on
01:28 - meeting slash one
01:30 - and okay since meetings uh
01:33 - the id one is not there so it returns an
01:36 - empty json object
01:37 - so which one are present so i'll show
01:39 - you 25 99 150
01:42 - okay so let's move ahead with them
01:46 - so you can do two 599
01:50 - and let me do this check you out this is
01:53 - the 2 is present
01:56 - yes 2 is present 150 is present
01:59 - 100 150 is also present and the another
02:03 - like another two are 5.99
02:06 - they are also sent 5
02:11 - and 99 so these are presents so
02:14 - let's start with how we can interact
02:17 - with them using the pip package
02:19 - so you can move to the current priority
02:21 - and do
02:22 - you can open vs code and then you can do
02:25 - import requests
02:30 - okay and you have an api
02:35 - and api url could this you can remove
02:38 - this 99 and you can
02:40 - select this and you can do this
02:43 - and first is equal to response is equal
02:46 - to request
02:49 - dot get api
02:52 - so now you can do print you can simply
02:55 - print
02:57 - response for status
03:01 - underscore code now i can open the
03:04 - terminal
03:05 - and i can do python index dot py
03:08 - so this would return me the status code
03:11 - and this turns out to be 200
03:13 - so this is working perfectly fine now
03:16 - you can do
03:17 - another you can do you can comment this
03:20 - out
03:21 - and you can paste it here and you can do
03:28 - another could be response dot
03:34 - then again you can run this so this
03:37 - would return me the json response so
03:39 - which is very much similar so just to
03:41 - make sure that two five
03:43 - id with the two five and 150 and
03:47 - like 99 is present so let me
03:50 - do another another you can do response
03:53 - response dot content
03:56 - so i would comment this out
03:59 - and this is the small dot content
04:03 - and this is a formatted text the last
04:06 - one i'll show you
04:08 - a response dot text which is a formatted
04:11 - json response
04:13 - so this is going to be
04:18 - this so this is a very much formatted
04:21 - and let's
04:22 - here the screen now what you can do you
04:25 - can implement all those current
04:27 - operations
04:28 - so first is going to be
04:31 - response is equal to squares dot get and
04:34 - i'll do a data
04:39 - and i'll define a data with id2
04:43 - okay and i'll do params
04:47 - is equal to data so then i'll do
04:52 - this and here you can see
04:56 - i forgot to print the response print
04:59 - response
05:00 - or text now i'll do this yes
05:04 - so you can see the one with the id 2 has
05:07 - been returned so
05:08 - inside my db.json and even in the rest
05:12 - api
05:12 - i'll do meeting slash 2 so it would
05:15 - return me this
05:17 - so this is the true skype you say this
05:19 - json object has been returned which is
05:21 - similar as this
05:22 - so this rest api works as this then
05:25 - the another could be i'll make a post
05:27 - request
05:28 - so the post would be id would be the one
05:32 - okay because i told you that id one was
05:34 - missing so we're adding it
05:36 - id would be the one and the title
05:39 - is going to be uh
05:42 - like planning
05:46 - okay and and the day would be the monday
05:51 - so this would return so i hope this is
05:54 - fine
05:54 - and for this what i'll do i'll make a
05:57 - post request
05:59 - and uh now this time instead of
06:03 - atoms we have a data okay
06:06 - so instead of errors we have a data
06:09 - and we do response for text and
06:12 - let me run this file
06:16 - okay so here you see you can see now it
06:18 - runs that object which has been
06:20 - added so i told you that id one was
06:22 - missing so
06:23 - let's now do this so id one
06:27 - turns out with this and even if you do
06:29 - show all the meetings
06:31 - so this house to be with everything the
06:33 - id2 is there
06:34 - five is there 99 150 and one like it's
06:37 - been added in the end
06:39 - but it is there okay so one is there
06:42 - and even if we do one like this so we
06:44 - also get the same response
06:46 - now since we have made the
06:50 - great operation we have already done uh
06:52 - great by making a post
06:54 - we have done a create read we have
06:56 - already done we have read all
06:58 - and like like another one is
07:01 - like the which one we are left with
07:03 - update and delete
07:05 - so basically what you can do
07:08 - uh you can
07:12 - uh what you can do so how to make a
07:15 - delete operation
07:16 - okay so i'll show you how do you make a
07:18 - delete operation
07:19 - so basically you can define
07:22 - a id is equal to two
07:26 - and you need to define this as delete
07:29 - okay and what i'll show you because
07:32 - how do you make a delete operation i'll
07:34 - show you uh
07:37 - these are all the meetings and i want to
07:39 - delete with the 99 so what i can do
07:43 - you can click on delete and you can do
07:45 - this as
07:46 - 99 so delete 199 would delete this 99
07:50 - let me done delete so it returns me a
07:53 - null json object
07:54 - now when i when i do the get operations
07:58 - for all the meetings so
07:59 - 99 should not be there so i see 99 is
08:03 - missing
08:03 - so in the same way we are going to
08:05 - perform this so what we are going to
08:07 - request or delete
08:08 - according to api plus slash
08:13 - plus str
08:17 - id okay so let me
08:21 - delete with the id2 so it would return
08:24 - me the let's see a null json object was
08:27 - in fact showing me and when we check for
08:30 - id 2 which should on refresh should be
08:32 - deleted
08:33 - so let's check and on refresh it has
08:36 - been deleted
08:37 - even in our db.json file you
08:40 - will find it being deleted so this is
08:43 - how we have
08:43 - implemented and this is like looks
08:47 - pretty good with the thing and
08:50 - this is how you can implement

Cleaned transcript:

so today we are going to work with the pip package known as request so uh following instructions once we followed the first one is the python must be installed on a machine and you do pip install request and you do import request so python must be installed paper install request and you do import requests on your machine and i have a db.json file which emulates itself as a rest api so let's work with this and for that what you need to do you need to start the terminal and i have already a command running so what i'll do i'll refresh this so you need to run uh you need to install a node.js on your local machine and then what you can do you can do npm install json server and do json server you can run this command json server minus minus watch db.json and there's a dash in between so this would emulate itself as a rest api so let me run this so here you can see that i have json object known as meetings which in itself is a key a value pair which is a json array and then just for your simplicity i can open this uh so this is like you can send a get request and you will get the same songs at db.json so basically this emulates itself as a rest api you can click on meeting slash one and okay since meetings uh the id one is not there so it returns an empty json object so which one are present so i'll show you 25 99 150 okay so let's move ahead with them so you can do two 599 and let me do this check you out this is the 2 is present yes 2 is present 150 is present 100 150 is also present and the another like another two are 5.99 they are also sent 5 and 99 so these are presents so let's start with how we can interact with them using the pip package so you can move to the current priority and do you can open vs code and then you can do import requests okay and you have an api and api url could this you can remove this 99 and you can select this and you can do this and first is equal to response is equal to request dot get api so now you can do print you can simply print response for status underscore code now i can open the terminal and i can do python index dot py so this would return me the status code and this turns out to be 200 so this is working perfectly fine now you can do another you can do you can comment this out and you can paste it here and you can do another could be response dot then again you can run this so this would return me the json response so which is very much similar so just to make sure that two five id with the two five and 150 and like 99 is present so let me do another another you can do response response dot content so i would comment this out and this is the small dot content and this is a formatted text the last one i'll show you a response dot text which is a formatted json response so this is going to be this so this is a very much formatted and let's here the screen now what you can do you can implement all those current operations so first is going to be response is equal to squares dot get and i'll do a data and i'll define a data with id2 okay and i'll do params is equal to data so then i'll do this and here you can see i forgot to print the response print response or text now i'll do this yes so you can see the one with the id 2 has been returned so inside my db.json and even in the rest api i'll do meeting slash 2 so it would return me this so this is the true skype you say this json object has been returned which is similar as this so this rest api works as this then the another could be i'll make a post request so the post would be id would be the one okay because i told you that id one was missing so we're adding it id would be the one and the title is going to be uh like planning okay and and the day would be the monday so this would return so i hope this is fine and for this what i'll do i'll make a post request and uh now this time instead of atoms we have a data okay so instead of errors we have a data and we do response for text and let me run this file okay so here you see you can see now it runs that object which has been added so i told you that id one was missing so let's now do this so id one turns out with this and even if you do show all the meetings so this house to be with everything the id2 is there five is there 99 150 and one like it's been added in the end but it is there okay so one is there and even if we do one like this so we also get the same response now since we have made the great operation we have already done uh great by making a post we have done a create read we have already done we have read all and like like another one is like the which one we are left with update and delete so basically what you can do uh you can uh what you can do so how to make a delete operation okay so i'll show you how do you make a delete operation so basically you can define a id is equal to two and you need to define this as delete okay and what i'll show you because how do you make a delete operation i'll show you uh these are all the meetings and i want to delete with the 99 so what i can do you can click on delete and you can do this as 99 so delete 199 would delete this 99 let me done delete so it returns me a null json object now when i when i do the get operations for all the meetings so 99 should not be there so i see 99 is missing so in the same way we are going to perform this so what we are going to request or delete according to api plus slash plus str id okay so let me delete with the id2 so it would return me the let's see a null json object was in fact showing me and when we check for id 2 which should on refresh should be deleted so let's check and on refresh it has been deleted even in our db.json file you will find it being deleted so this is how we have implemented and this is like looks pretty good with the thing and this is how you can implement
