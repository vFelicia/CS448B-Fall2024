With timestamps:

00:00 - hello guys welcome once again in this
00:02 - video I'm going to show you what is
00:04 - Method overloading and how we can
00:08 - overload a method in C so for example I
00:12 - have this uh program here and I already
00:16 - told you how to create a method in cop
00:19 - so I have this method which is adding to
00:24 - integers here but suppose uh tomorrow
00:28 - somebody wants the addition of two
00:31 - Floats or two double values also how you
00:35 - can use the same function to add two
00:38 - double values or for instance you want
00:41 - to add two
00:42 - string because you know that this plus
00:45 - symbol conc concatenates two uh strings
00:49 - right so you can add two strings also
00:52 - and somebody wants that by the same
00:55 - function name you want to add two
00:57 - strings so how you can do that with with
01:00 - the same function
01:01 - name you can use function of method
01:05 - overloading for this so what is Method
01:09 - overloading so I have this function for
01:12 - adding two integer so suppose I want to
01:14 - add to
01:15 - double numbers or double values then I
01:19 - can just copy this uh method and I will
01:22 - just go down and I will paste it
01:25 - here and instead of uh adding two
01:28 - numbers now I will use use two doubles
01:31 - so I will write
01:35 - double and here every place where I have
01:38 - used integer I will just replace it with
01:42 - double and this method and this method
01:46 - you can
01:49 - use uh to add two integers and two
01:52 - double values and this will not give you
01:55 - any error because whenever you use this
01:59 - sum in the main method your
02:04 - initialization will decide whether you
02:06 - are using this sum or this sum method so
02:11 - let's uh take an
02:14 - example so suppose I want to add
02:17 - two integers and two uh double values
02:21 - and I want to print them what I can do
02:24 - is I can just write this kind of code
02:27 - that console read or right line sum of
02:31 - two inss and in the placeholder you can
02:34 - call this method called sum and
02:38 - depending upon the initialization you
02:41 - can give you see here you have two
02:44 - options the double it's returning double
02:47 - and it's taking two double values which
02:50 - is one of two and the second is it's
02:53 - taking two integer and a returning
02:55 - integer for example we are using or we
02:58 - are initializing it with two integers
03:00 - for example 45 and 64 okay so this
03:06 - method now automatically detects by the
03:09 - initialization that you are going to use
03:12 - this method similarly for example I want
03:16 - to add to uh double values what I can do
03:20 - is
03:22 - 45.45
03:23 - 64. 64 for example and these are two
03:27 - double values so for your initial from
03:29 - your initialization C recognizes that
03:33 - this is the method which is adding two
03:36 - double values you when you hover over
03:38 - this you can see here this is showing
03:42 - double values and returning double and
03:45 - when you hover over here it's showing it
03:47 - can take two ins and it will
03:50 - return
03:52 - integer and so whenever you run this
03:56 - program it will work fine first is
03:59 - adding two integers and second is adding
04:02 - two double values right so by using
04:07 - function overloading you can use the
04:11 - same method
04:13 - name sorry I use I'm using function and
04:17 - Method interchangeably because uh these
04:21 - function and Method are same in some
04:23 - languages method are called function and
04:26 - in some languages yeah method are called
04:28 - method so when whenever I say method
04:31 - it's function and when I say function
04:35 - it's a method so don't confuse on that
04:39 - so method overloading allows you to use
04:43 - same same function name but on the basis
04:47 - of initialization your C code will
04:50 - decide that whether you are using uh
04:54 - this integer addition or you are adding
04:58 - two double values okay suppose you want
05:02 - to add two string you can do it in the
05:04 - same manner I will just copy this
05:05 - function paste it here and instead of
05:08 - double I can
05:11 - say string and I will replace this
05:15 - double by string every at every
05:18 - place and this function will add two
05:22 - strings let's see how I will just copy
05:26 - this and paste it here and I will just
05:30 - just give two strings
05:34 - here for
05:37 - example
05:42 - hello
05:44 - YouTube so this from this
05:47 - initialization your code will recognize
05:50 - that this is string initialization so
05:53 - this will go to this function and add
05:55 - two strings once again when you run the
05:57 - program it will run fine first will add
06:01 - two integers second will add two double
06:04 - values and third will add two string
06:07 - values so in this way you can use
06:09 - function overloading in cop to perform a
06:14 - same logic on different kind of values
06:18 - with a same name okay so I hope you have
06:22 - understood the basic concept and I hope
06:24 - you have enjoyed this video please rate
06:26 - comment and subscribe and bye for now

Cleaned transcript:

hello guys welcome once again in this video I'm going to show you what is Method overloading and how we can overload a method in C so for example I have this uh program here and I already told you how to create a method in cop so I have this method which is adding to integers here but suppose uh tomorrow somebody wants the addition of two Floats or two double values also how you can use the same function to add two double values or for instance you want to add two string because you know that this plus symbol conc concatenates two uh strings right so you can add two strings also and somebody wants that by the same function name you want to add two strings so how you can do that with with the same function name you can use function of method overloading for this so what is Method overloading so I have this function for adding two integer so suppose I want to add to double numbers or double values then I can just copy this uh method and I will just go down and I will paste it here and instead of uh adding two numbers now I will use use two doubles so I will write double and here every place where I have used integer I will just replace it with double and this method and this method you can use uh to add two integers and two double values and this will not give you any error because whenever you use this sum in the main method your initialization will decide whether you are using this sum or this sum method so let's uh take an example so suppose I want to add two integers and two uh double values and I want to print them what I can do is I can just write this kind of code that console read or right line sum of two inss and in the placeholder you can call this method called sum and depending upon the initialization you can give you see here you have two options the double it's returning double and it's taking two double values which is one of two and the second is it's taking two integer and a returning integer for example we are using or we are initializing it with two integers for example 45 and 64 okay so this method now automatically detects by the initialization that you are going to use this method similarly for example I want to add to uh double values what I can do is 45.45 64. 64 for example and these are two double values so for your initial from your initialization C recognizes that this is the method which is adding two double values you when you hover over this you can see here this is showing double values and returning double and when you hover over here it's showing it can take two ins and it will return integer and so whenever you run this program it will work fine first is adding two integers and second is adding two double values right so by using function overloading you can use the same method name sorry I use I'm using function and Method interchangeably because uh these function and Method are same in some languages method are called function and in some languages yeah method are called method so when whenever I say method it's function and when I say function it's a method so don't confuse on that so method overloading allows you to use same same function name but on the basis of initialization your C code will decide that whether you are using uh this integer addition or you are adding two double values okay suppose you want to add two string you can do it in the same manner I will just copy this function paste it here and instead of double I can say string and I will replace this double by string every at every place and this function will add two strings let's see how I will just copy this and paste it here and I will just just give two strings here for example hello YouTube so this from this initialization your code will recognize that this is string initialization so this will go to this function and add two strings once again when you run the program it will run fine first will add two integers second will add two double values and third will add two string values so in this way you can use function overloading in cop to perform a same logic on different kind of values with a same name okay so I hope you have understood the basic concept and I hope you have enjoyed this video please rate comment and subscribe and bye for now
