With timestamps:

00:01 - hey guys welcome to the next video on
00:02 - shell scripting tutorial for beginners
00:04 - in this video we will learn how to use
00:06 - readon command in Shell scripting Now
00:09 - read only command can be used with
00:12 - variables and functions and by the name
00:15 - itself we can understand that it can be
00:18 - used to make variables or functions read
00:22 - only so they cannot be
00:25 - overwritten so let's take an example so
00:29 - first of all we will take a variable for
00:31 - example VAR and then we will assign some
00:34 - value to it so for example 31 right and
00:39 - now we can use a readon command on this
00:42 - variable so just write read only and
00:46 - then the name of the variable so read
00:50 - only space VAR for example okay and till
00:54 - now everything is okay but now after
00:58 - this point whenever we want to re
01:01 - reassign some value to the variable same
01:05 - variable V then let's see what happens
01:09 - so we will just uh run our script for
01:13 - example and you can see on line number
01:17 - seven war read only variable so it gives
01:22 - us a warning that war is a readon
01:26 - variable and we cannot change the value
01:28 - of it so let's print the value of V For
01:31 - example so I'm going to just Echo and
01:35 - then uh V is equal to let's give it
01:41 - something like this and then let's print
01:44 - VAR so let's uh print the value of v and
01:48 - the value of V is 31 so even though we
01:52 - have reassigned a value of VAR to 50 but
01:58 - the VAR remains
02:00 - same as this one which is 31 because we
02:03 - have made this war variable read only
02:07 - and we can not reassign any value to VAR
02:10 - because it's a readon variable now and
02:14 - you will also see this warning so you
02:17 - will be able to understand that this is
02:20 - a readon variable in a similar way the
02:23 - functions can also be made read only so
02:27 - let's take an example so I'm going to
02:29 - create
02:30 - a hello function for example and then I
02:34 - will just print hello world using Echo
02:37 - for
02:38 - example hello world okay so everything
02:43 - is okay right now and whenever we call
02:47 - this function hello and let's run the
02:50 - script once again and it prints hello
02:52 - world everything is okay right now if we
02:56 - want to make this function read only
02:59 - then then we use a read only first of
03:02 - all the readon keyword which is uh this
03:06 - one right before the function name but
03:08 - this will not make your function read
03:11 - only for functions you need to use minus
03:14 - F flag okay so you need to use this
03:18 - minus F option in order to make a
03:21 - function read only right and now
03:24 - whenever you want to overwrite your
03:27 - functions for example I will once again
03:30 - create a hello function and I will just
03:33 - Echo this time hello world again right
03:36 - something like this and let's see what
03:38 - happens so I'm going to run the script
03:41 - and you can see this warning at line 19
03:45 - and it says hello read only function
03:50 - right so from here we know that this
03:54 - error is coming from uh the line 19
03:57 - right it will give you the place where
03:59 - it's coming from and it says that the
04:02 - function is read only so we cannot
04:05 - overwrite this function okay so readon
04:09 - command can be used to uh you know
04:13 - create a variable or a function read
04:15 - only that means we cannot uh you know
04:18 - reassign the value of variable in case
04:21 - of variables and we cannot overwrite a
04:25 - function in case of function if the
04:27 - function is readon function so sometimes
04:30 - we need these kind of readon variables
04:33 - and functions in our script and this is
04:36 - how we can achieve them okay now for
04:40 - example we just write the keyword read
04:45 - only here at the last okay so what
04:48 - happens when we write uh read only
04:51 - keyword only and nothing in front of it
04:54 - so let's run the script and let's see
04:55 - what happens and you can see here uh
04:59 - after this warning we will be able to
05:02 - see all the variables which are read
05:07 - only by default right so let me make it
05:10 - a little bit clearer I'm going to just
05:13 - uh you know remove everything and I will
05:15 - just use a keyword read only and let me
05:18 - clear the terminal and run the script
05:20 - once again and it gives us the list of
05:23 - all read only builtin uh variables which
05:28 - are listed here you can see see that
05:30 - that bash opts are read only and we can
05:35 - see bash P ID is read only bash version
05:39 - info is readon EU ID is readon right so
05:44 - all these uh you know variables are
05:47 - built in and they are read only you can
05:51 - also use the option minus p with uh this
05:54 - thing and this will give you almost the
05:58 - same result
06:00 - okay so if you want to see the list of
06:04 - all readon
06:06 - variables uh then you can use read only
06:10 - only like this or with the flag P okay
06:15 - and if you want to see all the readon
06:18 - functions then you just need to use
06:20 - minus F flag okay so once again let me
06:24 - clear the terminal and let me run the
06:25 - script and right now there is no readon
06:29 - function function right and we can
06:31 - create this kind of function so once
06:34 - again I'm going to create the hello
06:37 - world function so and I make this
06:40 - function uh read only something like
06:44 - this right and then I just write read
06:47 - only minus F and let's see what happens
06:51 - so now it gives us this function which
06:54 - is read only okay so minus F is for
06:58 - functions so if you write readon minus F
07:01 - and nothing in front of it it will give
07:03 - you the list of all the function which
07:06 - are read only okay so minus P for
07:10 - variables and minus f for functions so I
07:13 - hope you've enjoyed this video please
07:15 - Rec com And subscribe and bye for now

Cleaned transcript:

hey guys welcome to the next video on shell scripting tutorial for beginners in this video we will learn how to use readon command in Shell scripting Now read only command can be used with variables and functions and by the name itself we can understand that it can be used to make variables or functions read only so they cannot be overwritten so let's take an example so first of all we will take a variable for example VAR and then we will assign some value to it so for example 31 right and now we can use a readon command on this variable so just write read only and then the name of the variable so read only space VAR for example okay and till now everything is okay but now after this point whenever we want to re reassign some value to the variable same variable V then let's see what happens so we will just uh run our script for example and you can see on line number seven war read only variable so it gives us a warning that war is a readon variable and we cannot change the value of it so let's print the value of V For example so I'm going to just Echo and then uh V is equal to let's give it something like this and then let's print VAR so let's uh print the value of v and the value of V is 31 so even though we have reassigned a value of VAR to 50 but the VAR remains same as this one which is 31 because we have made this war variable read only and we can not reassign any value to VAR because it's a readon variable now and you will also see this warning so you will be able to understand that this is a readon variable in a similar way the functions can also be made read only so let's take an example so I'm going to create a hello function for example and then I will just print hello world using Echo for example hello world okay so everything is okay right now and whenever we call this function hello and let's run the script once again and it prints hello world everything is okay right now if we want to make this function read only then then we use a read only first of all the readon keyword which is uh this one right before the function name but this will not make your function read only for functions you need to use minus F flag okay so you need to use this minus F option in order to make a function read only right and now whenever you want to overwrite your functions for example I will once again create a hello function and I will just Echo this time hello world again right something like this and let's see what happens so I'm going to run the script and you can see this warning at line 19 and it says hello read only function right so from here we know that this error is coming from uh the line 19 right it will give you the place where it's coming from and it says that the function is read only so we cannot overwrite this function okay so readon command can be used to uh you know create a variable or a function read only that means we cannot uh you know reassign the value of variable in case of variables and we cannot overwrite a function in case of function if the function is readon function so sometimes we need these kind of readon variables and functions in our script and this is how we can achieve them okay now for example we just write the keyword read only here at the last okay so what happens when we write uh read only keyword only and nothing in front of it so let's run the script and let's see what happens and you can see here uh after this warning we will be able to see all the variables which are read only by default right so let me make it a little bit clearer I'm going to just uh you know remove everything and I will just use a keyword read only and let me clear the terminal and run the script once again and it gives us the list of all read only builtin uh variables which are listed here you can see see that that bash opts are read only and we can see bash P ID is read only bash version info is readon EU ID is readon right so all these uh you know variables are built in and they are read only you can also use the option minus p with uh this thing and this will give you almost the same result okay so if you want to see the list of all readon variables uh then you can use read only only like this or with the flag P okay and if you want to see all the readon functions then you just need to use minus F flag okay so once again let me clear the terminal and let me run the script and right now there is no readon function function right and we can create this kind of function so once again I'm going to create the hello world function so and I make this function uh read only something like this right and then I just write read only minus F and let's see what happens so now it gives us this function which is read only okay so minus F is for functions so if you write readon minus F and nothing in front of it it will give you the list of all the function which are read only okay so minus P for variables and minus f for functions so I hope you've enjoyed this video please Rec com And subscribe and bye for now
