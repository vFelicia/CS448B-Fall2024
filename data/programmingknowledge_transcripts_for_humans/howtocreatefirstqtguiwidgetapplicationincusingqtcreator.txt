With timestamps:

00:00 - hello guys in this video I'm going to
00:02 - show you how you can create your first
00:05 - QT widget application using QT
00:09 - Creator now hopefully you have uh
00:11 - successfully downloaded and installed
00:14 - cute Creator and CT SDK on your Windows
00:18 - operating system and now we are going to
00:21 - create our first QT uh widget
00:24 - application which is going to be a GUI
00:26 - application or graphical user interface
00:29 - application
00:30 - so open your QT Creator and go to files
00:33 - here and then click new file or project
00:38 - and in here you have different type of
00:41 - uh templates to choose with so the first
00:45 - in the left you can see here is
00:48 - application and here you can uh create
00:51 - QT widget application QT console
00:53 - application or a QT canvas 3D
00:56 - application which we are going to see in
00:59 - a moment we are going to create a QT
01:01 - widget application right now but let's
01:03 - see other templates we can create C++
01:07 - library or QT Creator plugins uh using
01:11 - uh QT Creator or you can also uh create
01:15 - some other projects something like QT
01:18 - unit test or QT quick UI or you can even
01:23 - uh choose this option which is mtq qake
01:28 - Project which is also going to make make
01:30 - uh QT application now if you want to
01:35 - make some uh non QT uh related
01:38 - application something like C or C++
01:40 - project you can choose this option which
01:42 - is non QT project and in here you can
01:45 - see by default they have plane C
01:48 - application and plain C++ application QT
01:52 - comes with uh the buil-in minv compiler
01:56 - so it's going to you know use this minv
01:59 - comp
02:00 - to uh compile or build your C or C++
02:03 - applications or you can import some
02:06 - other projects from other repositories
02:10 - or other locations right so let's create
02:15 - a QT widget application so go to
02:17 - application choose qy widget application
02:20 - and then click choose here and then give
02:23 - the name to your uh project for
02:26 - example
02:28 - my first
02:30 - QT right and then click next and leave
02:35 - everything as default here you can see
02:38 - here we are using QT
02:42 - 5.5 and Min GV compiler right and it's
02:46 - going to be a desktop application so
02:49 - just click next and now you can see when
02:54 - you create a QT widget application it's
02:56 - going to create some classes or one
03:00 - class exactly which is going to be a
03:03 - main window class you can change the
03:06 - name of this class but for now I'm going
03:09 - to leave the name as default which is
03:11 - main window and for this class QT
03:15 - Creator is going to create two files for
03:18 - us one is the main window. Ed or header
03:24 - file and the other is source file which
03:26 - is main window. cpv file in addition
03:30 - the QT Creator will also create a UI
03:34 - file for us which is going to be our
03:36 - designer in which we can design our QT
03:40 - application and this is going to be this
03:43 - file which is main window. UI so I'm
03:46 - going to leave everything as default but
03:49 - uh keep in mind you can change the name
03:52 - of uh these classes and the header files
03:56 - so just click
03:57 - next and if you are using any uh kind of
04:01 - Version Control like sub version or some
04:04 - other version control you can choose
04:06 - from here right now I don't have any
04:08 - Version Control so I'm going to leave
04:11 - everything as default and then click
04:13 - finish and it's going to create our
04:16 - project right now this is our project
04:19 - directly directory on the left and it's
04:23 - going to contain some folders and files
04:26 - so we are going to go through each and
04:29 - every file so just click the first
04:33 - topmost uh file which is my first qt. PR
04:38 - file and in here it's like a make file
04:42 - for your project so in here you going to
04:46 - uh add all the you know files which you
04:51 - are going to use in your project or all
04:53 - the libraries which you are going to use
04:56 - in your project so for example we are uh
04:59 - you know using main.cpp and Main window.
05:04 - CPP files as our source file and our
05:07 - header file is main window. so it's a
05:11 - part of this header and we are using one
05:14 - form file which is main window.i so it's
05:17 - the form uh it's the part of the form
05:20 - right our Target is me my first QT which
05:24 - is the name of our
05:26 - application and these are some of the
05:29 - core files which QT is going to use to
05:34 - build up our application right so in
05:37 - here you add your uh you know files and
05:40 - source files and libraries now we go to
05:43 - the header uh folder and in here is
05:47 - going to contain uh this main window.
05:50 - header file and the source folder it's
05:52 - going to contain
05:54 - main CPP and Main window. CPP and in the
05:58 - form file you have your main
06:01 - window.i when you click this main
06:03 - window. UI it's going to open this kind
06:06 - of uh design interface in which you can
06:10 - pick and place these widgets in this
06:13 - form and create your design right once
06:17 - again when you click the addit you will
06:20 - go to the you know code behind of uh
06:24 - this UI uh designer which is a XML file
06:28 - basically and you you can see it's
06:30 - looking like
06:31 - this now the main entry point of any uh
06:35 - C++ program is the main function right
06:40 - so QT is also based on C++ so uh it's
06:45 - also going to you know start from the
06:47 - main function so just go to the main.
06:51 - CPP file and in here you can see this
06:54 - main function here now uh you can uh you
06:59 - know give the arguments for your
07:02 - application using this a c and arv as
07:05 - you know uh you can do it with C++ also
07:09 - and the main uh you know class uh which
07:13 - is going to start the event Loop for you
07:16 - is your qt or Q application class right
07:22 - so it's like a main class which is going
07:25 - to start the event Loop which is going
07:28 - to listen
07:30 - any event of your application so you
07:34 - just uh create an object of this uh Q
07:38 - application uh you know class and it's
07:41 - going to take uh your argument if you
07:44 - want to pass any argument to your
07:47 - application and then it calls this main
07:50 - window uh you know class so you can then
07:54 - create an instance of uh main window and
07:58 - then you can uh call this uh object.
08:02 - show which is going to start your main
08:05 - window which is main window UI and Main
08:08 - window class right and this exact is
08:13 - going to start your main event Loop uh
08:16 - which is uh you know created by your Q
08:20 - application instance so let's go to our
08:23 - main window class right so using this we
08:28 - can uh you know start our main window UI
08:32 - okay so first of all we are going to go
08:34 - to our main window. header and you can
08:37 - see our class has uh right now A
08:42 - Constructor which has one argument which
08:44 - is uh Q widget
08:47 - parent and uh D structor right so we are
08:52 - going to go to our uh CPP file and we
08:57 - have one uh private variable variable
09:00 - which is UI using this UI instance we
09:03 - can call any widget we are going to pick
09:06 - and place in our UI file okay now when
09:11 - we go to our main window. CPP file in
09:14 - here in the Constructor you can uh see
09:17 - first thing in the Constructor it's
09:19 - doing is it's uh initializing your UI
09:24 - with the new object of main window and
09:28 - then in the Constructor it's just
09:31 - calling this uh function called setup UI
09:34 - which is going to uh you know basically
09:38 - set up your user interface and when we
09:41 - close our application it's going to call
09:43 - the destructor and it's going to you
09:46 - know delete your UI object so now let's
09:51 - create a hello world uh you know
09:54 - application and let's see how it works
09:56 - so go to this Main window.i
09:59 - uh file which is going to uh you know
10:02 - open this designer and from here once
10:05 - first of all you can see here different
10:08 - kind of widgets according to the
10:10 - category so just pick and place a push
10:13 - button from here which is uh going to be
10:17 - something like a button when we push it
10:19 - is going to perform some action and
10:22 - let's take a label from here so just uh
10:25 - drag down and in the display widget you
10:28 - can see this label you can just drag and
10:30 - drop here and you can resize it
10:33 - something like this okay now every
10:37 - widget has its own property so when you
10:39 - select this push button and on the left
10:43 - on the right hand side here you can see
10:47 - some properties which you can change
10:49 - right so for example you can see the
10:52 - object name is push button and then you
10:56 - have some more properties some like
11:00 - minimum size or maximum size or font you
11:03 - can even change the font of uh this text
11:06 - from here or you have tool tip or you
11:11 - have other uh you know um properties for
11:15 - example I want to change the text of
11:18 - this button I can change this uh text so
11:21 - right now by default it has push button
11:23 - text so I can change it to for example
11:28 - click me and you can see uh this text is
11:32 - changed on the button right you can
11:35 - change this text also from this button
11:38 - so double click on this button and you
11:40 - can uh change this text from here also
11:43 - for example click me right and same with
11:47 - the label it has its own properties so
11:49 - you can change these properties from
11:52 - here okay so for example I don't want to
11:56 - show this text label on the label so I'm
12:00 - going to go to the property called text
12:03 - and I'm going to delete this text from
12:05 - here so it's blank right
12:08 - now now to perform some action you just
12:11 - need to right click on the button and
12:14 - then go to slot so just select this
12:17 - option which says go to slot and then
12:20 - select the first option which is clicked
12:23 - as the function says it's when you click
12:26 - uh the button it's going to call this
12:29 - function clicked and then it's going to
12:31 - perform the code inside this function so
12:34 - click okay which is going to uh you know
12:37 - create a new function in your main
12:41 - window.
12:42 - CPP and in here this function is called
12:46 - whenever you press a button or click a
12:49 - button so when we click a button we want
12:52 - to uh set some text on our label so how
12:56 - you can uh you know set the text on the
12:58 - label you just call this uh UI object or
13:02 - instance so just call UI and then call
13:06 - the name of the widget so let's go once
13:10 - again to our main window. UI and select
13:14 - your label here and you can see the name
13:17 - of our label here object name is labels
13:21 - so here you can uh you know see all the
13:25 - names and uh you know properties of your
13:29 - uh uh widgets so the name of our label
13:31 - is label you can change the name from
13:35 - here so for example label one or label
13:38 - two but right now I'm going to leave it
13:40 - as default so once again I'm going to go
13:43 - to addit and Main window. CPP and we
13:47 - have called UI and then by Arrow pointer
13:51 - you just call this uh label uh variable
13:55 - name right and then you can call a
13:59 - method called set text so just call a
14:02 - method called set text and whatever
14:06 - argument you pass it takes one argument
14:08 - basically which is a string and whatever
14:11 - string you write here for example
14:14 - hello world it's going to print this
14:18 - thing on the label right now to compile
14:23 - your application you can just go to
14:25 - build here and you can click build all
14:29 - it's going to build your application so
14:31 - just click it and you just need to uh
14:35 - save everything so just click save all
14:38 - and it's going to build your application
14:41 - you can see on the right bottom this
14:45 - progress bar and when this progress bar
14:47 - shows green then uh it means that your
14:51 - uh you know application has been
14:54 - compiled successfully and then you can
14:56 - run your application to run your
14:58 - application you need to click this uh
15:01 - green button here so just click this
15:04 - green button and it's going to run your
15:06 - application so now our uh widget
15:09 - application is running so when you click
15:11 - this button click me it's going to uh
15:14 - print hello world on your
15:17 - label so this is how basically you can
15:20 - create your first CI GUI widget
15:24 - application using Cy Creator I hope
15:27 - you've enjoyed this video please comment
15:29 - and subscribe and bye for now

Cleaned transcript:

hello guys in this video I'm going to show you how you can create your first QT widget application using QT Creator now hopefully you have uh successfully downloaded and installed cute Creator and CT SDK on your Windows operating system and now we are going to create our first QT uh widget application which is going to be a GUI application or graphical user interface application so open your QT Creator and go to files here and then click new file or project and in here you have different type of uh templates to choose with so the first in the left you can see here is application and here you can uh create QT widget application QT console application or a QT canvas 3D application which we are going to see in a moment we are going to create a QT widget application right now but let's see other templates we can create C++ library or QT Creator plugins uh using uh QT Creator or you can also uh create some other projects something like QT unit test or QT quick UI or you can even uh choose this option which is mtq qake Project which is also going to make make uh QT application now if you want to make some uh non QT uh related application something like C or C++ project you can choose this option which is non QT project and in here you can see by default they have plane C application and plain C++ application QT comes with uh the builin minv compiler so it's going to you know use this minv comp to uh compile or build your C or C++ applications or you can import some other projects from other repositories or other locations right so let's create a QT widget application so go to application choose qy widget application and then click choose here and then give the name to your uh project for example my first QT right and then click next and leave everything as default here you can see here we are using QT 5.5 and Min GV compiler right and it's going to be a desktop application so just click next and now you can see when you create a QT widget application it's going to create some classes or one class exactly which is going to be a main window class you can change the name of this class but for now I'm going to leave the name as default which is main window and for this class QT Creator is going to create two files for us one is the main window. Ed or header file and the other is source file which is main window. cpv file in addition the QT Creator will also create a UI file for us which is going to be our designer in which we can design our QT application and this is going to be this file which is main window. UI so I'm going to leave everything as default but uh keep in mind you can change the name of uh these classes and the header files so just click next and if you are using any uh kind of Version Control like sub version or some other version control you can choose from here right now I don't have any Version Control so I'm going to leave everything as default and then click finish and it's going to create our project right now this is our project directly directory on the left and it's going to contain some folders and files so we are going to go through each and every file so just click the first topmost uh file which is my first qt. PR file and in here it's like a make file for your project so in here you going to uh add all the you know files which you are going to use in your project or all the libraries which you are going to use in your project so for example we are uh you know using main.cpp and Main window. CPP files as our source file and our header file is main window. so it's a part of this header and we are using one form file which is main window.i so it's the form uh it's the part of the form right our Target is me my first QT which is the name of our application and these are some of the core files which QT is going to use to build up our application right so in here you add your uh you know files and source files and libraries now we go to the header uh folder and in here is going to contain uh this main window. header file and the source folder it's going to contain main CPP and Main window. CPP and in the form file you have your main window.i when you click this main window. UI it's going to open this kind of uh design interface in which you can pick and place these widgets in this form and create your design right once again when you click the addit you will go to the you know code behind of uh this UI uh designer which is a XML file basically and you you can see it's looking like this now the main entry point of any uh C++ program is the main function right so QT is also based on C++ so uh it's also going to you know start from the main function so just go to the main. CPP file and in here you can see this main function here now uh you can uh you know give the arguments for your application using this a c and arv as you know uh you can do it with C++ also and the main uh you know class uh which is going to start the event Loop for you is your qt or Q application class right so it's like a main class which is going to start the event Loop which is going to listen any event of your application so you just uh create an object of this uh Q application uh you know class and it's going to take uh your argument if you want to pass any argument to your application and then it calls this main window uh you know class so you can then create an instance of uh main window and then you can uh call this uh object. show which is going to start your main window which is main window UI and Main window class right and this exact is going to start your main event Loop uh which is uh you know created by your Q application instance so let's go to our main window class right so using this we can uh you know start our main window UI okay so first of all we are going to go to our main window. header and you can see our class has uh right now A Constructor which has one argument which is uh Q widget parent and uh D structor right so we are going to go to our uh CPP file and we have one uh private variable variable which is UI using this UI instance we can call any widget we are going to pick and place in our UI file okay now when we go to our main window. CPP file in here in the Constructor you can uh see first thing in the Constructor it's doing is it's uh initializing your UI with the new object of main window and then in the Constructor it's just calling this uh function called setup UI which is going to uh you know basically set up your user interface and when we close our application it's going to call the destructor and it's going to you know delete your UI object so now let's create a hello world uh you know application and let's see how it works so go to this Main window.i uh file which is going to uh you know open this designer and from here once first of all you can see here different kind of widgets according to the category so just pick and place a push button from here which is uh going to be something like a button when we push it is going to perform some action and let's take a label from here so just uh drag down and in the display widget you can see this label you can just drag and drop here and you can resize it something like this okay now every widget has its own property so when you select this push button and on the left on the right hand side here you can see some properties which you can change right so for example you can see the object name is push button and then you have some more properties some like minimum size or maximum size or font you can even change the font of uh this text from here or you have tool tip or you have other uh you know um properties for example I want to change the text of this button I can change this uh text so right now by default it has push button text so I can change it to for example click me and you can see uh this text is changed on the button right you can change this text also from this button so double click on this button and you can uh change this text from here also for example click me right and same with the label it has its own properties so you can change these properties from here okay so for example I don't want to show this text label on the label so I'm going to go to the property called text and I'm going to delete this text from here so it's blank right now now to perform some action you just need to right click on the button and then go to slot so just select this option which says go to slot and then select the first option which is clicked as the function says it's when you click uh the button it's going to call this function clicked and then it's going to perform the code inside this function so click okay which is going to uh you know create a new function in your main window. CPP and in here this function is called whenever you press a button or click a button so when we click a button we want to uh set some text on our label so how you can uh you know set the text on the label you just call this uh UI object or instance so just call UI and then call the name of the widget so let's go once again to our main window. UI and select your label here and you can see the name of our label here object name is labels so here you can uh you know see all the names and uh you know properties of your uh uh widgets so the name of our label is label you can change the name from here so for example label one or label two but right now I'm going to leave it as default so once again I'm going to go to addit and Main window. CPP and we have called UI and then by Arrow pointer you just call this uh label uh variable name right and then you can call a method called set text so just call a method called set text and whatever argument you pass it takes one argument basically which is a string and whatever string you write here for example hello world it's going to print this thing on the label right now to compile your application you can just go to build here and you can click build all it's going to build your application so just click it and you just need to uh save everything so just click save all and it's going to build your application you can see on the right bottom this progress bar and when this progress bar shows green then uh it means that your uh you know application has been compiled successfully and then you can run your application to run your application you need to click this uh green button here so just click this green button and it's going to run your application so now our uh widget application is running so when you click this button click me it's going to uh print hello world on your label so this is how basically you can create your first CI GUI widget application using Cy Creator I hope you've enjoyed this video please comment and subscribe and bye for now
