With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - open CV tutorial for beginners using
00:05 - Python in the last video we have seen
00:07 - what our image pyramids and I have told
00:11 - you there are two kinds of image
00:13 - pyramids in open CV one is called the
00:17 - Gaussian pyramid and the other is called
00:20 - the laplacian pyramid and we have seen
00:23 - in the last video how we can create the
00:26 - gaussian pyramid and the laplacian
00:28 - pyramid now in the last video I have
00:32 - also told you some applications of image
00:35 - pyramids and one of the application of
00:38 - image pyramids is the image blending so
00:43 - let me show you one example so here in
00:46 - this code I have two images one is of
00:50 - Apple and other is of orange and I want
00:55 - to blend or merge these two images so
01:00 - let me just run this code first of all
01:02 - so you can see there are two images
01:05 - first is of Apple and other is of orange
01:10 - and I have also printed the shape of
01:14 - these two images so you can see the
01:17 - shape is similar 512x512 and orange
01:23 - image shape is also 512x512
01:26 - so here what I want to do is I want to
01:32 - blend half of the orange to half of the
01:36 - Apple so let's say I want to just blend
01:39 - right hand side of this orange to the
01:43 - left hand half of this Apple so how can
01:48 - I achieve this now you might say that I
01:52 - can just cut these two images into half
01:56 - and then I can stack these two images
01:59 - side-by-side and I will get the half and
02:03 - half of the two images and that's how I
02:07 - can just get the result so let's first
02:10 - of all try this technique first of all
02:13 - we are going to
02:13 - just create the half-and-half of the
02:17 - apple and orange images and we are going
02:20 - to just stack these images side-by-side
02:22 - so let's say I'm going to create the
02:26 - variable called Apple underscore orange
02:30 - and then here there is a method in numpy
02:35 - so I'm going to just say numpy dot H
02:38 - stack so there is this method called H
02:42 - stack and here what I can do is in the
02:45 - form of tuple I can provide the half of
02:49 - my Apple image so Apple is the image
02:53 - variable name and then what I'm going to
02:56 - do is the half of this image because
02:59 - this image is 512 by 512 so I'm going to
03:04 - just give this kind of expression :
03:07 - comma and then colon 256 which is the
03:11 - half of the Apple image on the left hand
03:15 - side right and then I'm going to just do
03:20 - the same with the orange image so I'm
03:22 - going to just take orange and then colon
03:26 - comma 256 : so one thing to observe here
03:32 - is I have taken : before
03:35 - 256 in the Apple image and I have taken
03:40 - : after 256 in the orange image and then
03:46 - I'm going to just show this apple orange
03:49 - image and let's see what result we get
03:53 - when we run our code so these two are
03:58 - the apple and orange image and this is
04:01 - the result of adding the two halves of
04:05 - the orange and the Apple image but still
04:09 - you can see this line which is clearly
04:11 - visible and from this line you can say
04:13 - half of this is orange and half of this
04:17 - is an apple so in image blending what we
04:22 - need to do is we need to blend this line
04:26 - also so
04:28 - the orange and the apple image should be
04:30 - merged or blended in a perfect way
04:34 - so for blending this half Apple and half
04:37 - orange image what we can do is we can
04:40 - use the image pyramid techniques to
04:44 - blend these two images now in order to
04:47 - blend two images using image pyramids
04:50 - technique we need to follow five steps
04:54 - the first step is to load two images in
04:58 - our case these images are of Apple and
05:01 - orange which we are already doing so
05:04 - first step is to load these two images
05:07 - the second step is to find out the
05:10 - Gaussian pyramid of our Apple and orange
05:14 - image the third step will be from these
05:18 - Gaussian pyramids find out the laplacian
05:21 - pyramids okay so we will find out the
05:25 - Gaussian pyramid in the second step and
05:27 - then in the third step we are going to
05:30 - find out the laplacian pyramids now in
05:33 - the fourth step we are going to join the
05:36 - left half of the Apple and the right
05:39 - half of the orange in each levels of
05:43 - laplacian pyramid and finally in the
05:47 - fifth step what we are going to do is we
05:50 - are going to just join these image
05:53 - pyramids and reconstruct the original
05:56 - image so let's follow these steps one by
06:00 - one and let's see what result we get so
06:04 - as I said first step is already done
06:06 - which is just loading these two images
06:09 - and the second step would be to find out
06:13 - the Gaussian pyramid so let me just just
06:17 - write this step generate Gaussian
06:20 - pyramid for Apple first of all and then
06:23 - we are going to find out the Gaussian
06:25 - pyramid of the orange so first of all
06:28 - what I'm going to do is I'm going to
06:30 - just copy the Apple image so I'm going
06:34 - to just say Apple underscore copy is
06:37 - equal to apple.com
06:41 - there is a method called copy which you
06:43 - can use to copy the this image so from
06:47 - this copy what we are going to do is we
06:49 - are going to generate the Gaussian
06:51 - pyramid so I'm going to once again name
06:54 - my variable as GP let's say underscore
06:59 - Apple and then we are going to just pass
07:03 - our image which we have copied in the
07:06 - form of list so I'm going to just say
07:08 - Apple copy here so these steps we have
07:12 - already seen in the last video how to
07:14 - create the Gaussian pyramid and the
07:17 - laplacian pyramid of an image so I'm not
07:21 - going to explain this in detail if you
07:24 - want the detailed explanation you can
07:27 - see the last video next what I'm going
07:30 - to do is I'm going to create a for loop
07:33 - and I'm going to just say for I in our
07:37 - range so I'm going to use the range
07:39 - function and we are going to use the six
07:44 - levels in this example so I'm going to
07:47 - provide the range up to six and then
07:50 - what we are going to do is we are going
07:52 - to just say Apple copy or you might have
07:55 - named this variable as Apple layer also
07:59 - because we are just creating multiple
08:02 - layer of the Apple image for the
08:06 - Gaussian pyramid right and then we are
08:09 - going to use the CV 2 dot pared-down
08:12 - method to create the Gaussian pyramid ok
08:18 - this we have already seen in the last
08:20 - video and now as an argument we are
08:23 - going to pass our Apple copy variable
08:26 - here and in the next step what we are
08:28 - going to do is we are going to just
08:30 - append to our GP underscore Apple
08:33 - variable which is our Gaussian pyramid
08:35 - for the Apple image and then we are
08:39 - going to just append this Apple copy
08:41 - after we have applied pared-down method
08:44 - on the same image so this is just giving
08:48 - us multiple layer of the Apple image
08:54 - right the
08:55 - method we are going to apply for the
08:58 - orange also so I'm going to just copy
09:00 - this code and then we I'm going to just
09:03 - paste this code once again and this time
09:06 - this will be for orange and I'm going to
09:11 - just say this is the orange copy and we
09:15 - are going to copy from the orange image
09:18 - and then we are going to just generate
09:22 - the Gaussian pyramid for the orange
09:25 - image and this will be passed here and
09:29 - also here and also here and also here
09:34 - and this Gaussian pyramid orange will be
09:38 - passed here okay so we have generated
09:41 - the Gaussian pyramid for the apple and
09:43 - the orange now we are going to generate
09:47 - the laplacian pyramid for apple and
09:50 - oranges so this also we have seen in the
09:53 - last video so I'm going to just comment
09:56 - generate laplacian pyramid for apple
09:59 - first of all and to find out the
10:02 - laplacian pyramid for the apple what we
10:06 - are going to do is we are going to once
10:08 - again take our Apple copy and then using
10:14 - our Gaussian pyramid so let's take cos
10:17 - in pyramid for the Apple and we are
10:20 - going to use the fifth element of this
10:25 - list so what we have learnt in the last
10:27 - video how we can find out the laplacian
10:30 - pyramid a level in the laplacian pyramid
10:33 - is formed by the difference between the
10:36 - level in the gaussian pyramid and
10:39 - extended version of its upper level in
10:42 - the gaussian pyramid so this difference
10:45 - we are going to find out in this step so
10:47 - I'm going to just say this is L P for
10:51 - the Apple which stands for laplacian
10:54 - pyramid for the Apple is equal to in the
10:57 - list we are going to just pass the Apple
11:00 - copy and then we are going to use the
11:04 - for loop so for I in the
11:08 - so we are going to take the range and in
11:11 - the last video I have shown you how to
11:13 - take the range for the Laplace in
11:16 - pyramid so we want to go from five until
11:19 - zero in the steps of minus one and then
11:24 - in the next step we are going to create
11:26 - the Gaussian extended variables Gaussian
11:30 - extended is equal to C v2 dot pair up
11:35 - this time we are going to use the pair
11:38 - up method and then we are going to pass
11:40 - our GP Apple which is Gaussian pyramid
11:44 - for Apple and then the index here will
11:47 - be I in the next step we are going to
11:49 - create the laplacian variables is equal
11:53 - to c v2 dot subtract so there is a
11:56 - method in c v2 which is called subtract
11:59 - and then we are going to take our
12:01 - Gaussian pyramid for the Apple so GP
12:04 - Apple and the index here will be I minus
12:08 - 1 and the second argument for this
12:11 - subtract method will be our Gaussian
12:15 - extended variable so we are going to
12:17 - just pass this Gaussian extended
12:19 - variable and in the next step we are
12:22 - going to just append to our laplacian
12:24 - pyramid for the Apple so LP underscore
12:28 - Apple dot append and we are going to
12:31 - just append this laplacian variable to
12:35 - the laplacian pyramid for the apple same
12:41 - we will do for the orange image also so
12:45 - we are going to generate the laplacian
12:48 - pyramid for the orange orange here and
12:52 - this will be the copy of the orange copy
12:58 - here and here also and then this will be
13:03 - the GP orange right this also will be GP
13:09 - Orange this also will be GP Orange and
13:13 - here instead of LP apple we are going to
13:17 - just say L
13:18 - the orange and then we are going to just
13:21 - pass this variable here also so now we
13:24 - have finished three steps one is to load
13:27 - both the images second is to find out or
13:31 - generate the Gaussian pyramid and the
13:33 - third step is to generate the laplacian
13:35 - pyramid for both the images now the
13:39 - fourth step is to just join the half of
13:43 - for these two images so what I'm going
13:47 - to do is now I'm going to just create
13:50 - one more variable which will be Apple
13:53 - underscore orange underscore let's say
13:57 - pyramid is equal to and also we are
14:00 - going to create a variable called N and
14:03 - we are going to see later how to use
14:07 - this variable and then we are going to
14:10 - use the for loop and then we are going
14:14 - to create two variables one for the
14:18 - first image so I'm going to just say
14:21 - apple and then lap comma orange lap okay
14:29 - so these two are variables I'm creating
14:32 - just same as this I in this for loop in
14:37 - zip so there is a method a zip which we
14:41 - can use to zip the laplacian pyramid one
14:45 - which is for the Apple and for the
14:49 - orange also so I'm going to just say LP
14:52 - for Apple comma LP for the orange and
14:57 - inside this for loop first of all we are
15:00 - going to just increment the value of n
15:03 - by one each time so n plus equals one
15:09 - and in this next step we are going to
15:11 - find out the shape of the apple image so
15:14 - the apple image shape gives us three
15:17 - values first is columns so I'm going to
15:20 - just say CEO LS for columns then rows
15:24 - and then the third value is the number
15:27 - of channels and then we are going to
15:30 - just say
15:31 - laughs dot shape in the next step we are
15:36 - going to just create a variable called
15:37 - laplacian and we are going to just join
15:40 - the two halves of these two images which
15:44 - we are getting inside the variable apple
15:49 - lap and Orange lap so we are basically
15:52 - doing this step after applying the
15:56 - Gaussian pyramid and the laplacian
15:59 - pyramid on both the images so NP dot h
16:03 - stake method we are going to apply in
16:06 - this step so I'm going to just write and
16:09 - P dot H stack and then as an argument
16:13 - what we are going to do is we in the
16:15 - form of tupple first of all we are going
16:17 - to take our Apple lamp variable which is
16:21 - this one and in the square bracket we
16:24 - are going to just write : comma zero
16:28 - comma int so we are going to just type
16:33 - cast the number of columns in the apple
16:37 - shape so this we got from the shape of
16:41 - the Apple index and then divided by two
16:47 - so we are going to just dividing the
16:50 - columns into half and same we will do
16:54 - for the orange lap so we are going to
16:56 - just say orange lap in the square
16:59 - bracket colon comma int and then once
17:04 - again in the parenthesis we are going to
17:08 - just say calls for the number of columns
17:11 - divided by two and then : as we have
17:14 - done in this step also and at last we
17:18 - are going to just append this laplacian
17:20 - variable to this list which we have
17:24 - created so Apple underscore orange
17:27 - underscore pyramid dot append and then
17:30 - we are going to pass the laplacian
17:32 - variable here now the last and the final
17:35 - step is to reconstruct our image so
17:37 - let's reconstruct our image so now what
17:41 - we are going to do is we are going to
17:43 - once again create a variable
17:45 - called apple orange underscore
17:49 - reconstruct is equal to this will be the
17:52 - first index of our apple orange pyramid
17:55 - so I'm going to just say apple orange
17:57 - underscore pyramid and this will be the
18:00 - 0th index and once again we are going to
18:02 - use the for loop so for I in the range
18:07 - so we are going to go from 1 until 6 and
18:12 - the default step is of 1 so we don't
18:17 - need to give the 3rd argument and inside
18:19 - the for loop we are going to just take
18:21 - this variable once again and then we are
18:25 - going to apply the pair up method on
18:28 - this so CB 2 dot pair up and as an
18:33 - argument we are going to pass the same
18:35 - variable so we are going to just apply
18:39 - the pair up on this apple orange
18:42 - reconstruct from the 0th index of the
18:46 - pyramid up to the 6th level and the last
18:50 - step will be to add all the layers so
18:54 - apple orange reconstructed once again or
18:58 - risk constructor is equal to CB 2 dot
19:02 - add so this is also one method which is
19:06 - called add and here we are adding apple
19:09 - orange pyramid and the reconstructed app
19:14 - Lorenz image ok so this is this variable
19:20 - which we got by just adding the left and
19:24 - right halves of each level and then we
19:27 - are just reconstructing this image using
19:30 - the pair up method and thus just adding
19:33 - the pyramid level so there should be I
19:37 - think the index I right we cannot just
19:41 - add the list to the image directly ok so
19:45 - this will be at each layer we are just
19:48 - reconstructing and adding it to the
19:51 - image which we got by just the addition
19:55 - of this half of the image
19:57 - now in the end let's try to just load
20:01 - this reconstructed apple orange image in
20:05 - the I am show window and let's hope it
20:09 - works I haven't checked it yet so I'm
20:13 - not sure it will work or not and you can
20:15 - see it's working in the first go so
20:18 - that's a good thing so you can see the
20:21 - difference so this result we got by just
20:26 - stacking this apple and orange image
20:30 - side-by-side but this line is clearly
20:34 - visible but when we applied the Gaussian
20:38 - pyramid and the laplacian pyramid
20:41 - technique for blending the images then
20:44 - you can see this line is perfectly
20:47 - blended and this line is not any more
20:51 - visible so this is the perfect blending
20:55 - of the orange and the apple image so
20:59 - this is how you can use the laplacian
21:02 - and gaussian pyramids to reconstruct and
21:05 - blend two images together and the result
21:09 - is in front of you so you can see how it
21:13 - can blend two images so perfectly so
21:16 - this is how you can blend images using
21:18 - image pyramid technique I hope you have
21:20 - enjoyed this video and I'm going to see
21:23 - you in the next video

Cleaned transcript:

hey guys welcome to the next video on open CV tutorial for beginners using Python in the last video we have seen what our image pyramids and I have told you there are two kinds of image pyramids in open CV one is called the Gaussian pyramid and the other is called the laplacian pyramid and we have seen in the last video how we can create the gaussian pyramid and the laplacian pyramid now in the last video I have also told you some applications of image pyramids and one of the application of image pyramids is the image blending so let me show you one example so here in this code I have two images one is of Apple and other is of orange and I want to blend or merge these two images so let me just run this code first of all so you can see there are two images first is of Apple and other is of orange and I have also printed the shape of these two images so you can see the shape is similar 512x512 and orange image shape is also 512x512 so here what I want to do is I want to blend half of the orange to half of the Apple so let's say I want to just blend right hand side of this orange to the left hand half of this Apple so how can I achieve this now you might say that I can just cut these two images into half and then I can stack these two images sidebyside and I will get the half and half of the two images and that's how I can just get the result so let's first of all try this technique first of all we are going to just create the halfandhalf of the apple and orange images and we are going to just stack these images sidebyside so let's say I'm going to create the variable called Apple underscore orange and then here there is a method in numpy so I'm going to just say numpy dot H stack so there is this method called H stack and here what I can do is in the form of tuple I can provide the half of my Apple image so Apple is the image variable name and then what I'm going to do is the half of this image because this image is 512 by 512 so I'm going to just give this kind of expression comma and then colon 256 which is the half of the Apple image on the left hand side right and then I'm going to just do the same with the orange image so I'm going to just take orange and then colon comma 256 so one thing to observe here is I have taken before 256 in the Apple image and I have taken after 256 in the orange image and then I'm going to just show this apple orange image and let's see what result we get when we run our code so these two are the apple and orange image and this is the result of adding the two halves of the orange and the Apple image but still you can see this line which is clearly visible and from this line you can say half of this is orange and half of this is an apple so in image blending what we need to do is we need to blend this line also so the orange and the apple image should be merged or blended in a perfect way so for blending this half Apple and half orange image what we can do is we can use the image pyramid techniques to blend these two images now in order to blend two images using image pyramids technique we need to follow five steps the first step is to load two images in our case these images are of Apple and orange which we are already doing so first step is to load these two images the second step is to find out the Gaussian pyramid of our Apple and orange image the third step will be from these Gaussian pyramids find out the laplacian pyramids okay so we will find out the Gaussian pyramid in the second step and then in the third step we are going to find out the laplacian pyramids now in the fourth step we are going to join the left half of the Apple and the right half of the orange in each levels of laplacian pyramid and finally in the fifth step what we are going to do is we are going to just join these image pyramids and reconstruct the original image so let's follow these steps one by one and let's see what result we get so as I said first step is already done which is just loading these two images and the second step would be to find out the Gaussian pyramid so let me just just write this step generate Gaussian pyramid for Apple first of all and then we are going to find out the Gaussian pyramid of the orange so first of all what I'm going to do is I'm going to just copy the Apple image so I'm going to just say Apple underscore copy is equal to apple.com there is a method called copy which you can use to copy the this image so from this copy what we are going to do is we are going to generate the Gaussian pyramid so I'm going to once again name my variable as GP let's say underscore Apple and then we are going to just pass our image which we have copied in the form of list so I'm going to just say Apple copy here so these steps we have already seen in the last video how to create the Gaussian pyramid and the laplacian pyramid of an image so I'm not going to explain this in detail if you want the detailed explanation you can see the last video next what I'm going to do is I'm going to create a for loop and I'm going to just say for I in our range so I'm going to use the range function and we are going to use the six levels in this example so I'm going to provide the range up to six and then what we are going to do is we are going to just say Apple copy or you might have named this variable as Apple layer also because we are just creating multiple layer of the Apple image for the Gaussian pyramid right and then we are going to use the CV 2 dot pareddown method to create the Gaussian pyramid ok this we have already seen in the last video and now as an argument we are going to pass our Apple copy variable here and in the next step what we are going to do is we are going to just append to our GP underscore Apple variable which is our Gaussian pyramid for the Apple image and then we are going to just append this Apple copy after we have applied pareddown method on the same image so this is just giving us multiple layer of the Apple image right the method we are going to apply for the orange also so I'm going to just copy this code and then we I'm going to just paste this code once again and this time this will be for orange and I'm going to just say this is the orange copy and we are going to copy from the orange image and then we are going to just generate the Gaussian pyramid for the orange image and this will be passed here and also here and also here and also here and this Gaussian pyramid orange will be passed here okay so we have generated the Gaussian pyramid for the apple and the orange now we are going to generate the laplacian pyramid for apple and oranges so this also we have seen in the last video so I'm going to just comment generate laplacian pyramid for apple first of all and to find out the laplacian pyramid for the apple what we are going to do is we are going to once again take our Apple copy and then using our Gaussian pyramid so let's take cos in pyramid for the Apple and we are going to use the fifth element of this list so what we have learnt in the last video how we can find out the laplacian pyramid a level in the laplacian pyramid is formed by the difference between the level in the gaussian pyramid and extended version of its upper level in the gaussian pyramid so this difference we are going to find out in this step so I'm going to just say this is L P for the Apple which stands for laplacian pyramid for the Apple is equal to in the list we are going to just pass the Apple copy and then we are going to use the for loop so for I in the so we are going to take the range and in the last video I have shown you how to take the range for the Laplace in pyramid so we want to go from five until zero in the steps of minus one and then in the next step we are going to create the Gaussian extended variables Gaussian extended is equal to C v2 dot pair up this time we are going to use the pair up method and then we are going to pass our GP Apple which is Gaussian pyramid for Apple and then the index here will be I in the next step we are going to create the laplacian variables is equal to c v2 dot subtract so there is a method in c v2 which is called subtract and then we are going to take our Gaussian pyramid for the Apple so GP Apple and the index here will be I minus 1 and the second argument for this subtract method will be our Gaussian extended variable so we are going to just pass this Gaussian extended variable and in the next step we are going to just append to our laplacian pyramid for the Apple so LP underscore Apple dot append and we are going to just append this laplacian variable to the laplacian pyramid for the apple same we will do for the orange image also so we are going to generate the laplacian pyramid for the orange orange here and this will be the copy of the orange copy here and here also and then this will be the GP orange right this also will be GP Orange this also will be GP Orange and here instead of LP apple we are going to just say L the orange and then we are going to just pass this variable here also so now we have finished three steps one is to load both the images second is to find out or generate the Gaussian pyramid and the third step is to generate the laplacian pyramid for both the images now the fourth step is to just join the half of for these two images so what I'm going to do is now I'm going to just create one more variable which will be Apple underscore orange underscore let's say pyramid is equal to and also we are going to create a variable called N and we are going to see later how to use this variable and then we are going to use the for loop and then we are going to create two variables one for the first image so I'm going to just say apple and then lap comma orange lap okay so these two are variables I'm creating just same as this I in this for loop in zip so there is a method a zip which we can use to zip the laplacian pyramid one which is for the Apple and for the orange also so I'm going to just say LP for Apple comma LP for the orange and inside this for loop first of all we are going to just increment the value of n by one each time so n plus equals one and in this next step we are going to find out the shape of the apple image so the apple image shape gives us three values first is columns so I'm going to just say CEO LS for columns then rows and then the third value is the number of channels and then we are going to just say laughs dot shape in the next step we are going to just create a variable called laplacian and we are going to just join the two halves of these two images which we are getting inside the variable apple lap and Orange lap so we are basically doing this step after applying the Gaussian pyramid and the laplacian pyramid on both the images so NP dot h stake method we are going to apply in this step so I'm going to just write and P dot H stack and then as an argument what we are going to do is we in the form of tupple first of all we are going to take our Apple lamp variable which is this one and in the square bracket we are going to just write comma zero comma int so we are going to just type cast the number of columns in the apple shape so this we got from the shape of the Apple index and then divided by two so we are going to just dividing the columns into half and same we will do for the orange lap so we are going to just say orange lap in the square bracket colon comma int and then once again in the parenthesis we are going to just say calls for the number of columns divided by two and then as we have done in this step also and at last we are going to just append this laplacian variable to this list which we have created so Apple underscore orange underscore pyramid dot append and then we are going to pass the laplacian variable here now the last and the final step is to reconstruct our image so let's reconstruct our image so now what we are going to do is we are going to once again create a variable called apple orange underscore reconstruct is equal to this will be the first index of our apple orange pyramid so I'm going to just say apple orange underscore pyramid and this will be the 0th index and once again we are going to use the for loop so for I in the range so we are going to go from 1 until 6 and the default step is of 1 so we don't need to give the 3rd argument and inside the for loop we are going to just take this variable once again and then we are going to apply the pair up method on this so CB 2 dot pair up and as an argument we are going to pass the same variable so we are going to just apply the pair up on this apple orange reconstruct from the 0th index of the pyramid up to the 6th level and the last step will be to add all the layers so apple orange reconstructed once again or risk constructor is equal to CB 2 dot add so this is also one method which is called add and here we are adding apple orange pyramid and the reconstructed app Lorenz image ok so this is this variable which we got by just adding the left and right halves of each level and then we are just reconstructing this image using the pair up method and thus just adding the pyramid level so there should be I think the index I right we cannot just add the list to the image directly ok so this will be at each layer we are just reconstructing and adding it to the image which we got by just the addition of this half of the image now in the end let's try to just load this reconstructed apple orange image in the I am show window and let's hope it works I haven't checked it yet so I'm not sure it will work or not and you can see it's working in the first go so that's a good thing so you can see the difference so this result we got by just stacking this apple and orange image sidebyside but this line is clearly visible but when we applied the Gaussian pyramid and the laplacian pyramid technique for blending the images then you can see this line is perfectly blended and this line is not any more visible so this is the perfect blending of the orange and the apple image so this is how you can use the laplacian and gaussian pyramids to reconstruct and blend two images together and the result is in front of you so you can see how it can blend two images so perfectly so this is how you can blend images using image pyramid technique I hope you have enjoyed this video and I'm going to see you in the next video
