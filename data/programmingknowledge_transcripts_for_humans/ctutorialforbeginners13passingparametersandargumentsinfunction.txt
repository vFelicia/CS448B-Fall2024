With timestamps:

00:01 - hello guys welcome once again in the
00:02 - last video I have shown you how to use
00:04 - functions in
00:06 - C++ now in this video I'm going to show
00:09 - you how you can pass parameters in
00:12 - function so that uh in the main program
00:16 - whatever variables you have you can pass
00:18 - it to the function so let's see U how we
00:22 - can use it for example I need a function
00:26 - to add two
00:28 - values what whatever the user gives so
00:33 - for I will declare a function here as I
00:36 - have shown you in the last video I will
00:39 - give the return type which is void and
00:43 - then I will give the name of the
00:44 - function so I want the addition of the
00:48 - numbers so I will name my function as
00:50 - sum and
00:53 - then these two parenthesis and then give
00:57 - these curly braces and now the way you
01:00 - pass parameters in the function is in
01:04 - these two par in between this
01:06 - parenthesis so for passing the parameter
01:09 - you need to declare or you need to give
01:12 - the data type of the variable you want
01:15 - to pass so you for example I need to
01:18 - pass or I want to pass some integer for
01:23 - the numbers so I will give the data type
01:27 - and then I will give the name of the the
01:30 - function so I will say or name of the
01:33 - variable this is
01:35 - first number so this is the uh first
01:39 - variable and the second variable once
01:42 - again I will
01:43 - declare the data type and
01:49 - then second number okay so in this way
01:53 - you can pass two
01:56 - parameters inside this sum function the
02:01 - first first variable is first number and
02:03 - second variable is second number and the
02:06 - data type of both the variables are int
02:10 - in our case this can be anything
02:13 - character or float or double or anything
02:16 - else okay now since this is a function
02:20 - to make the sum of uh the two numbers
02:25 - what you need to do is you need to print
02:29 - the sum right so you can
02:32 - give C
02:38 - out and then print the message that the
02:43 - sum of
02:46 - the given number
02:50 - numbers
02:53 - is and then what comes
02:58 - is the two numbers itself so you can
03:01 - just copy this variable here because we
03:04 - are adding these two numbers so we can
03:07 - write in the parenthesis first
03:10 - number
03:12 - plus just copy the second number and
03:16 - close the parenthesis and then this
03:19 - insertion operator and then end
03:24 - line okay so what this function will do
03:27 - it will print the sum of the given
03:29 - numbers are whatever you give in the
03:32 - main and then it will add these two
03:34 - number
03:35 - whatever parameter you pass in the
03:38 - function first number and second number
03:39 - and it will add this two parameter and
03:42 - print it now in order to use this
03:46 - function
03:47 - inside your main function just you need
03:51 - to call the name of the
03:55 - function okay and then once again the
03:58 - parenthesis no need to
04:00 - write the return type and then the
04:03 - semicolon and inside these parentheses I
04:06 - need to give two numbers because this
04:08 - function can take two parameters one and
04:12 - two which we have already declared this
04:14 - can take two parameter for
04:17 - example
04:18 - 476 and the second parameter is
04:23 - 587 okay and just watch here I separated
04:28 - these two par
04:30 - by a comma okay so what this function
04:33 - will do is when it comes to main it sees
04:37 - that okay I have this function and I
04:41 - have these two numbers so it will pass
04:42 - these two numbers here and then these
04:45 - two number will be passed here and then
04:48 - the program will make the sum of these
04:50 - and print this message so let's compile
04:53 - our program and run it and you can see
04:56 - here the sum of the given numbers is is
05:01 - 106 3 which is the sum of these two
05:03 - numbers now in order to make this
05:06 - program little bit more interesting what
05:09 - you can do
05:10 - is you can declare two variables in a
05:17 - and b so both variable type is integer
05:23 - and you can write C
05:28 - out
05:31 - please
05:33 - enter
05:35 - [Music]
05:39 - two
05:41 - numbers and
05:44 - then hand line and then you can input
05:48 - these two numbers so c
05:50 - n insertion operator a for first number
05:55 - and C
05:56 - N insertion operator B for or second
06:00 - number okay and what you can do is you
06:03 - can pass a as a first parameter and B as
06:07 - a second parameter here is B okay so
06:12 - what this will do is now when you run
06:15 - the program it will ask for the first
06:18 - number and second number and whatever
06:20 - number you pass or whatever number user
06:23 - will give in the program it will just
06:25 - pass these two number here and then it
06:27 - will be executed that's build the
06:29 - program and run it now it's saying
06:32 - please enter two numbers so I will enter
06:35 - two number first number is
06:38 - 7474 and the second number is
06:41 - 8348 for example and when I press enter
06:45 - you see there that this uh the sum of
06:50 - the given number is 1582 which is the
06:54 - 822 which is the sum of these two
06:56 - numbers so this is how you can really
07:00 - utilize this function user will enter
07:03 - the values and it will be passed to the
07:06 - to the function and it will be passed
07:11 - here and it will go here both two
07:13 - numbers and it will be added and this
07:15 - message will be shown and in the last
07:18 - video also I've shown you that you can
07:22 - use this function at multiple locations
07:25 - so uh for example you need to add add
07:29 - some more numbers you can just copy this
07:32 - code once again and paste it below and
07:35 - you can change these variable X and Y
07:39 - for example and in here also you can
07:41 - change it X and Y and here also X and Y
07:48 - okay so it will be executed in the same
07:51 - manner as above so your function will be
07:56 - executed two times right let's
08:00 - um build our program and then let's see
08:04 - what happens
08:06 - now run the program enter two numbers
08:10 - some numbers I will give for the first
08:11 - time and once again it it asks for
08:14 - giving me two numbers once again I will
08:17 - give two numbers and it will execute the
08:20 - same functions function once again so
08:23 - whenever you need to add two numbers you
08:27 - can use this function again and again
08:30 - and you can pass any two variables
08:33 - inside this function which has to be int
08:38 - or which has to be of data type int so
08:41 - that's the beauty of function whatever
08:44 - you need whatever code you need to
08:46 - execute again and again you make it a
08:49 - function and use it again and again that
08:51 - will um save your time and that will
08:54 - save your space in the code I hope you
08:57 - have understood the concept concept and
09:00 - I hope you have enjoyed this video
09:02 - please rate comment and subscribe and
09:03 - bye for now

Cleaned transcript:

hello guys welcome once again in the last video I have shown you how to use functions in C++ now in this video I'm going to show you how you can pass parameters in function so that uh in the main program whatever variables you have you can pass it to the function so let's see U how we can use it for example I need a function to add two values what whatever the user gives so for I will declare a function here as I have shown you in the last video I will give the return type which is void and then I will give the name of the function so I want the addition of the numbers so I will name my function as sum and then these two parenthesis and then give these curly braces and now the way you pass parameters in the function is in these two par in between this parenthesis so for passing the parameter you need to declare or you need to give the data type of the variable you want to pass so you for example I need to pass or I want to pass some integer for the numbers so I will give the data type and then I will give the name of the the function so I will say or name of the variable this is first number so this is the uh first variable and the second variable once again I will declare the data type and then second number okay so in this way you can pass two parameters inside this sum function the first first variable is first number and second variable is second number and the data type of both the variables are int in our case this can be anything character or float or double or anything else okay now since this is a function to make the sum of uh the two numbers what you need to do is you need to print the sum right so you can give C out and then print the message that the sum of the given number numbers is and then what comes is the two numbers itself so you can just copy this variable here because we are adding these two numbers so we can write in the parenthesis first number plus just copy the second number and close the parenthesis and then this insertion operator and then end line okay so what this function will do it will print the sum of the given numbers are whatever you give in the main and then it will add these two number whatever parameter you pass in the function first number and second number and it will add this two parameter and print it now in order to use this function inside your main function just you need to call the name of the function okay and then once again the parenthesis no need to write the return type and then the semicolon and inside these parentheses I need to give two numbers because this function can take two parameters one and two which we have already declared this can take two parameter for example 476 and the second parameter is 587 okay and just watch here I separated these two par by a comma okay so what this function will do is when it comes to main it sees that okay I have this function and I have these two numbers so it will pass these two numbers here and then these two number will be passed here and then the program will make the sum of these and print this message so let's compile our program and run it and you can see here the sum of the given numbers is is 106 3 which is the sum of these two numbers now in order to make this program little bit more interesting what you can do is you can declare two variables in a and b so both variable type is integer and you can write C out please enter two numbers and then hand line and then you can input these two numbers so c n insertion operator a for first number and C N insertion operator B for or second number okay and what you can do is you can pass a as a first parameter and B as a second parameter here is B okay so what this will do is now when you run the program it will ask for the first number and second number and whatever number you pass or whatever number user will give in the program it will just pass these two number here and then it will be executed that's build the program and run it now it's saying please enter two numbers so I will enter two number first number is 7474 and the second number is 8348 for example and when I press enter you see there that this uh the sum of the given number is 1582 which is the 822 which is the sum of these two numbers so this is how you can really utilize this function user will enter the values and it will be passed to the to the function and it will be passed here and it will go here both two numbers and it will be added and this message will be shown and in the last video also I've shown you that you can use this function at multiple locations so uh for example you need to add add some more numbers you can just copy this code once again and paste it below and you can change these variable X and Y for example and in here also you can change it X and Y and here also X and Y okay so it will be executed in the same manner as above so your function will be executed two times right let's um build our program and then let's see what happens now run the program enter two numbers some numbers I will give for the first time and once again it it asks for giving me two numbers once again I will give two numbers and it will execute the same functions function once again so whenever you need to add two numbers you can use this function again and again and you can pass any two variables inside this function which has to be int or which has to be of data type int so that's the beauty of function whatever you need whatever code you need to execute again and again you make it a function and use it again and again that will um save your time and that will save your space in the code I hope you have understood the concept concept and I hope you have enjoyed this video please rate comment and subscribe and bye for now
