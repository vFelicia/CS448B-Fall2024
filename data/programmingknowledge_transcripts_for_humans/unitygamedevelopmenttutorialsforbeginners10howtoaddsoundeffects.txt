With timestamps:

00:00 - hello guys so in the previous video
00:02 - we have created this main menu in our
00:06 - game
00:07 - now in this video we are going to create
00:09 - some sound effects for our game like
00:12 - jump and hurt
00:14 - so for this we are going to use a
00:16 - software called bfxr
00:18 - which is used to make 8-bit sounds
00:22 - now to download this software
00:25 - uh open up your browser and search for
00:28 - bfxr download and
00:31 - click on this first link
00:34 - and from here we can download it
00:37 - either for windows or mac
00:40 - so click on windows
00:43 - and it will automatically download these
00:45 - files
00:46 - you can install it as you install any
00:49 - other software it is pretty
00:51 - straightforward
00:53 - i have already downloaded and installed
00:55 - it
00:56 - so
00:57 - you can install it and after installing
01:00 - double click on it to open it up
01:06 - now you will see this kind of interface
01:09 - when you open
01:10 - this program
01:12 - there are various buttons
01:14 - there are some pre-built sounds
01:17 - uh
01:18 - that we get out of the box
01:21 - which is
01:22 - pickup coin laser
01:24 - explosion power of etc
01:27 - we can also create a randomized sound
01:30 - by
01:31 - clicking on this randomize button
01:35 - and
01:36 - we can also
01:38 - we can also modify these properties for
01:42 - each sound currently
01:44 - uh
01:45 - we are on this jump sound
01:48 - so we for the you can uh
01:51 - explore this software more
01:53 - but for our game we just need two sounds
01:56 - which is
01:57 - which are jump and
01:59 - hurt
02:00 - so we will use this
02:02 - pre-built
02:04 - sounds
02:05 - now to create a new sound we just have
02:07 - to click on this
02:09 - button
02:11 - of the
02:12 - jump
02:14 - or
02:15 - hot
02:16 - or
02:17 - whichever you want to create
02:19 - currently the jump
02:21 - sound is already created
02:24 - but i will create it anyways
02:26 - so click on this jump button to create
02:29 - jump sound
02:31 - and you can click on this play to play
02:33 - the sound
02:35 - and you can preview it
02:37 - and you can also change the
02:40 - properties of this sound
02:43 - now i will delete delete this jump
02:47 - to and i will use this first one
02:52 - and i will also create uh
02:55 - now first of all we will export this
02:58 - created sound effect
03:01 - now to export any sound effect we have
03:03 - to click on this export wav
03:08 - now
03:09 - we will export it on our desktop so
03:12 - click on save
03:14 - you can see that
03:17 - our sound
03:18 - is exported
03:21 - now
03:23 - we will also create a heart sound for
03:26 - our game so let's click on this hit or
03:28 - heart
03:30 - you can preview this and modify it as
03:32 - always you can also
03:34 - choose different synths
03:36 - from here like triangle tangent or sine
03:42 - but i will use this default one so i
03:45 - will
03:47 - cancel this jump
03:49 - and export
03:50 - the hot sound
03:53 - so click on export wave
03:56 - and
03:57 - we will save it on the desktop
04:00 - now we can close this program you can
04:03 - of course
04:04 - explore this mode if you want
04:07 - but
04:08 - it is the two these two sounds are
04:11 - enough for our game
04:12 - you can also create
04:14 - some other sounds if you want
04:16 - so after creating these sounds
04:20 - go back to the unity editor and here in
04:22 - the assets folder we will create a new
04:26 - folder for keeping our
04:29 - sounds
04:30 - so let's name it as
04:32 - sounds
04:35 - and in here
04:38 - let's drag and drop these two sounds
04:41 - select these two
04:43 - and
04:44 - drag
04:46 - them into the
04:47 - unity editor and in the sounds folder
04:51 - it will import it
04:54 - now you can preview it from here also by
04:57 - clicking on this play button
05:00 - now
05:01 - we have to
05:03 - go into this
05:06 - sample scene you can rename this scene
05:09 - but i have not renamed it
05:11 - you can rename it to level one or
05:13 - something like that
05:15 - but for now it is okay so we will
05:19 - uh
05:20 - we are here in our main emcee
05:23 - so we will drag and drop these two
05:26 - sounds
05:27 - into our scene
05:31 - so sit and drag and drop these two and
05:34 - it will create
05:37 - uh two game objects and they will
05:40 - contain this
05:42 - audio source component
05:43 - and as the audio clip it will be our
05:47 - sound itself
05:49 - now these two are created on
05:52 - the position zero zero zero which is
05:54 - totally fine you can put it anywhere you
05:56 - want
05:58 - and uh
05:59 - these components are these companies
06:02 - component which is audio source is
06:03 - responsible
06:05 - for
06:06 - this
06:07 - playing this sound
06:09 - now our main camera
06:11 - already
06:12 - has a audio listener
06:15 - so
06:16 - which is used to
06:18 - uh
06:19 - listen the sound in our scene
06:22 - produced by the audio source
06:25 - now
06:27 - once we have created these two sounds
06:30 - two game objects
06:32 - then we will go to our player movement
06:35 - script
06:36 - and we will reference it
06:39 - so
06:40 - let's make a public variable
06:42 - so public
06:45 - audio source
06:47 - [Music]
06:50 - and you will name it as jump
06:54 - sound
06:55 - [Music]
06:58 - now let's
06:59 - save it
07:02 - and
07:08 - after that click on
07:10 - the player
07:17 - it is compiling
07:20 - so click on the player
07:22 - and
07:23 - you can see that the player movement
07:25 - script
07:27 - has this
07:28 - jump sound field
07:30 - so drag and drop the
07:34 - jump
07:35 - game object
07:37 - into
07:38 - this slot
07:40 - so now we will
07:42 - play this jump sound whenever our player
07:46 - jumps
07:47 - and
07:49 - we have to
07:50 - uh
07:51 - do few settings here
07:54 - we will shift to select these two sound
07:56 - so select these two
07:59 - and
07:59 - untick this play on awake
08:02 - so they will not play whenever our scene
08:05 - starts
08:07 - but they will play whenever we call them
08:10 - from our script so make sure that
08:13 - this play on awake is
08:16 - not selected
08:18 - for both of them
08:20 - now
08:21 - we will also give a tag to
08:24 - our obstacle
08:26 - so let's create a tag
08:29 - as
08:30 - o p s d
08:33 - you can
08:34 - create
08:35 - a tag with
08:37 - whichever name you want
08:39 - but i will
08:41 - create this stack with
08:43 - obst name
08:46 - now
08:47 - we will assign it to the obstacle
08:50 - breaker
08:53 - now
08:54 - we want to
08:55 - play this sound whenever our player
08:58 - jumps so
09:00 - in the player movement script
09:02 - we will play whenever we tap on the
09:04 - screen
09:06 - so
09:08 - let's
09:10 - save them sound.play
09:17 - now
09:20 - it will play the jump sound whenever our
09:22 - player jumps or we
09:24 - tap on the screen
09:27 - so
09:28 - now we want to play this
09:30 - jump uh uh hurt sound whenever our
09:32 - player collides with the
09:34 - obstacle so let's first of all reference
09:38 - this
09:41 - right sound so
09:43 - probably audio source
09:45 - with sound
09:53 - now we want to play
09:55 - if
09:56 - the
09:58 - collided
09:59 - object is
10:03 - uh obstacle so
10:05 - copy this if statement and paste it here
10:08 - and we will
10:10 - say equalizer dot compare that to
10:12 - obs
10:13 - [Music]
10:14 - then we want to play this sound
10:18 - sound
10:20 - dot play
10:25 - but it will not play the sound currently
10:27 - because we are making
10:29 - time dot time scale equal to 0
10:34 - in
10:35 - the obstacle script
10:38 - here
10:39 - so
10:40 - we will not make it 0
10:44 - so comment it
10:49 - now
10:51 - we can
10:53 - go back to the game manager script
10:55 - and here we can say that
10:58 - if the
11:01 - [Music]
11:02 - game is not over so not
11:05 - [Music]
11:06 - easily more
11:08 - so if the game is not over
11:11 - then we want to increase the score
11:19 - and
11:22 - now we will also make the
11:27 - obstacle
11:29 - speed
11:31 - to zero
11:33 - so to do this we will say
11:36 - if
11:38 - game manager because it is a static
11:40 - variable so we can access it from here
11:43 - also
11:45 - game manager dot is game over
11:47 - so
11:49 - if the game is not over
11:51 - then and then we want to
11:54 - increase the position of the obstacle
12:00 - so we will increment it
12:03 - whenever the game is not over
12:08 - now after that
12:13 - it will work
12:14 - so
12:16 - let's save this and go back to unity
12:19 - now we can
12:20 - click on this player
12:22 - and drag and drop this
12:27 - hit sound to this it's it's sound field
12:32 - now click on play
12:37 - and
12:40 - now it will play the sound
12:42 - whenever
12:43 - it collides with the obstacle
12:48 - now
12:50 - we can say we can see that the
12:54 - spawner is spawning the obstacles
13:03 - so we will also
13:06 - uh check here if the game is over or not
13:09 - so let's check
13:12 - if
13:14 - game manager
13:17 - dot
13:24 - in front of it
13:26 - so we want to spawn the obstacle
13:29 - if the game is not
13:33 - paste over here
13:36 - save this script and
13:44 - now
13:45 - we can see that
13:47 - it will not spawn the obstacle if the
13:49 - game is over
13:53 - okay
13:57 - our sounds are working perfectly
14:00 - so this was it for this video in the
14:02 - next video
14:04 - we
14:06 - we will include the high score system
14:09 - so
14:10 - we will do that we will do it by
14:13 - player friends so thank you for watching
14:15 - this video

Cleaned transcript:

hello guys so in the previous video we have created this main menu in our game now in this video we are going to create some sound effects for our game like jump and hurt so for this we are going to use a software called bfxr which is used to make 8bit sounds now to download this software uh open up your browser and search for bfxr download and click on this first link and from here we can download it either for windows or mac so click on windows and it will automatically download these files you can install it as you install any other software it is pretty straightforward i have already downloaded and installed it so you can install it and after installing double click on it to open it up now you will see this kind of interface when you open this program there are various buttons there are some prebuilt sounds uh that we get out of the box which is pickup coin laser explosion power of etc we can also create a randomized sound by clicking on this randomize button and we can also we can also modify these properties for each sound currently uh we are on this jump sound so we for the you can uh explore this software more but for our game we just need two sounds which is which are jump and hurt so we will use this prebuilt sounds now to create a new sound we just have to click on this button of the jump or hot or whichever you want to create currently the jump sound is already created but i will create it anyways so click on this jump button to create jump sound and you can click on this play to play the sound and you can preview it and you can also change the properties of this sound now i will delete delete this jump to and i will use this first one and i will also create uh now first of all we will export this created sound effect now to export any sound effect we have to click on this export wav now we will export it on our desktop so click on save you can see that our sound is exported now we will also create a heart sound for our game so let's click on this hit or heart you can preview this and modify it as always you can also choose different synths from here like triangle tangent or sine but i will use this default one so i will cancel this jump and export the hot sound so click on export wave and we will save it on the desktop now we can close this program you can of course explore this mode if you want but it is the two these two sounds are enough for our game you can also create some other sounds if you want so after creating these sounds go back to the unity editor and here in the assets folder we will create a new folder for keeping our sounds so let's name it as sounds and in here let's drag and drop these two sounds select these two and drag them into the unity editor and in the sounds folder it will import it now you can preview it from here also by clicking on this play button now we have to go into this sample scene you can rename this scene but i have not renamed it you can rename it to level one or something like that but for now it is okay so we will uh we are here in our main emcee so we will drag and drop these two sounds into our scene so sit and drag and drop these two and it will create uh two game objects and they will contain this audio source component and as the audio clip it will be our sound itself now these two are created on the position zero zero zero which is totally fine you can put it anywhere you want and uh these components are these companies component which is audio source is responsible for this playing this sound now our main camera already has a audio listener so which is used to uh listen the sound in our scene produced by the audio source now once we have created these two sounds two game objects then we will go to our player movement script and we will reference it so let's make a public variable so public audio source and you will name it as jump sound now let's save it and after that click on the player it is compiling so click on the player and you can see that the player movement script has this jump sound field so drag and drop the jump game object into this slot so now we will play this jump sound whenever our player jumps and we have to uh do few settings here we will shift to select these two sound so select these two and untick this play on awake so they will not play whenever our scene starts but they will play whenever we call them from our script so make sure that this play on awake is not selected for both of them now we will also give a tag to our obstacle so let's create a tag as o p s d you can create a tag with whichever name you want but i will create this stack with obst name now we will assign it to the obstacle breaker now we want to play this sound whenever our player jumps so in the player movement script we will play whenever we tap on the screen so let's save them sound.play now it will play the jump sound whenever our player jumps or we tap on the screen so now we want to play this jump uh uh hurt sound whenever our player collides with the obstacle so let's first of all reference this right sound so probably audio source with sound now we want to play if the collided object is uh obstacle so copy this if statement and paste it here and we will say equalizer dot compare that to obs then we want to play this sound sound dot play but it will not play the sound currently because we are making time dot time scale equal to 0 in the obstacle script here so we will not make it 0 so comment it now we can go back to the game manager script and here we can say that if the game is not over so not easily more so if the game is not over then we want to increase the score and now we will also make the obstacle speed to zero so to do this we will say if game manager because it is a static variable so we can access it from here also game manager dot is game over so if the game is not over then and then we want to increase the position of the obstacle so we will increment it whenever the game is not over now after that it will work so let's save this and go back to unity now we can click on this player and drag and drop this hit sound to this it's it's sound field now click on play and now it will play the sound whenever it collides with the obstacle now we can say we can see that the spawner is spawning the obstacles so we will also uh check here if the game is over or not so let's check if game manager dot in front of it so we want to spawn the obstacle if the game is not paste over here save this script and now we can see that it will not spawn the obstacle if the game is over okay our sounds are working perfectly so this was it for this video in the next video we we will include the high score system so we will do that we will do it by player friends so thank you for watching this video
