With timestamps:

00:00 - so up until the previous video we have
00:03 - made our splash screen getting the list
00:06 - of sellers
00:08 - and then routing to the splash seller
00:10 - screen so you can see over here
00:13 - now today we are gonna continue making
00:16 - this
00:16 - screen look like this screen okay so
00:19 - let's get started so these all are
00:22 - basically our seller items so i'm gonna
00:24 - make changes in that
00:26 - okay so i'll give it let's say a height
00:28 - of 200
00:31 - okay so now the height is appropriate
00:33 - but we are getting a render flex error
00:36 - and the error is because i am not using
00:38 - a list but i am using a column with a
00:41 - map function so in the seller screen
00:44 - you can see that the list of sellers is
00:46 - a column and
00:47 - not a list okay so to fix this what i'm
00:51 - gonna do is i'm gonna
00:53 - surround this container the topmost
00:56 - column
00:56 - okay with a another widget and the
00:59 - widget is single
01:02 - child scroll view
01:05 - okay so now once i add this then let's
01:08 - save this and now we shouldn't get this
01:11 - error
01:11 - okay so now you can see the error is
01:13 - gone and it is scrollable as well
01:16 - okay so now after this let's add border
01:19 - radius to it
01:20 - so let's see what is the border radius
01:23 - that we apply over here
01:25 - and it is 10 as you can see so let's
01:28 - apply the same
01:29 - okay so for that we will create our
01:31 - decoration
01:33 - and then the decoration will be a box
01:36 - decoration widget
01:40 - okay now since we have box decoration
01:44 - the colors can't be outside so we'll
01:46 - move it inside
01:48 - the decoration and then finally apply
01:50 - the border radius so for that we have
01:52 - another parameter called
01:54 - border radius and then it will take a
01:56 - border radius
01:58 - dot circular widget okay and the radius
02:02 - is gonna be 10 as
02:03 - in 10 pixels okay let's format it
02:07 - save it and now we get
02:10 - the border as we get rounded borders
02:13 - and the radius is 10 pixel okay so now
02:16 - the next thing is
02:17 - the colors okay so you can see all these
02:20 - items have
02:21 - different colors so i'm gonna create a
02:24 - list of
02:25 - this colors and then send it to this
02:27 - item
02:28 - okay so now the list of colors is gonna
02:30 - be constant so as per the standard
02:33 - practice it should be inside our init
02:36 - state and for
02:37 - that we need to convert it from a
02:38 - stateless to a stateful with chat
02:42 - okay and then over here i'm gonna call
02:44 - init state
02:49 - okay now over here i'm gonna create a
02:51 - list
02:53 - color seller
02:57 - items background
03:01 - color okay let's initialize it
03:05 - now i'll add values to it inside init
03:08 - state
03:09 - okay so over here i'm gonna write
03:11 - sellers
03:14 - seller items uh seller items background
03:18 - color dot add and then over here another
03:21 - color so now as i have already discussed
03:24 - for color we always start with zero x f
03:27 - now this f f can change that is actually
03:30 - the alpha value you can look for
03:32 - different types of alpha value on the
03:34 - internet
03:35 - okay so the first color we can find it
03:37 - over here
03:38 - so i'm simply gonna copy it paste it
03:41 - over here
03:42 - and there are gonna be three more like
03:44 - this okay
03:46 - so now this second item i'm gonna copy
03:48 - the color
03:49 - paste it on the second row
03:52 - okay so yes this is correct
03:56 - now let's copy this
04:01 - paste it over here and the last one
04:06 - okay so i'll copy it
04:09 - and paste it okay so this is done now
04:13 - this is giving
04:14 - us a warning and the warning will be
04:17 - gone if we add a const over here
04:20 - okay so let's add a const
04:26 - so you can see as soon as i add the cons
04:28 - to the
04:30 - error is gone const is a keyword which
04:33 - means
04:33 - constant okay now let's send this color
04:37 - to these items so
04:38 - for sending first we need to receive it
04:40 - over here
04:42 - okay so for that i'm gonna create
04:45 - another widget
04:46 - color and i'm gonna call it background
04:50 - color now i'm gonna take it in my
04:52 - constructor
04:54 - so first we need to give required
04:56 - because it is final
04:58 - this and not background color
05:01 - okay
05:06 - now let's format it okay and over here
05:09 - instead of
05:10 - color i'm gonna make it background color
05:18 - so we have background color okay
05:22 - now we need to give a background color
05:24 - in our seller screen
05:26 - okay so let's do that
05:30 - over here we will have another named
05:33 - parameter that is background color
05:35 - and then over here i'm gonna give let's
05:37 - give one color for
05:39 - starting and then we will figure out a
05:41 - way to give
05:42 - the color according to a pattern
05:46 - okay so i'm gonna say seller
05:49 - items background color and then zero
05:52 - okay means as in the
05:53 - first item
05:58 - now give it a minute to understand okay
06:18 - hmm
06:27 - okay so there is a small error over
06:29 - there i need to give another
06:31 - closing parenthesis so now the error is
06:34 - gone
06:34 - okay now let's do a full restart okay so
06:38 - that both gets saved at the stay same
06:40 - time
06:41 - okay so let's see
06:46 - now the splash screen is here it is
06:48 - loading the sellers and
06:50 - yes we get the first color applied to
06:52 - all the four
06:54 - now we need to apply uh one two three
06:57 - four in accordance
06:58 - with the list okay so let's create
07:01 - another method
07:02 - that will return the index okay
07:05 - so for that i'm gonna make another
07:07 - method int
07:09 - get color index
07:13 - and this will take the
07:16 - index means the index of seller item
07:19 - okay so like 0 1 2 3 it will work fine
07:23 - but what if
07:24 - it is more than that okay so what i'm
07:27 - gonna do is i'm gonna simply
07:30 - uh return
07:33 - index mod four
07:39 - okay so now with this what will happen
07:41 - that the remainders can be
07:43 - 0 till 3 that are 4 items and we have 4
07:46 - items over here
07:47 - and now that i think of it we don't need
07:50 - to create
07:50 - a separate function for here for just
07:53 - this
07:54 - small piece of code i'm gonna directly
07:56 - apply it over there
07:59 - okay so over here instead of
08:04 - this what i'm gonna do is index
08:07 - modulus for now index we will get from
08:11 - here so what i'm going to do is sellers
08:14 - dot index of e
08:17 - okay so now we get the index and then we
08:20 - apply
08:21 - modulus 4 and then whatever is the
08:23 - remaining we send it as our
08:25 - background color okay so i hope you
08:27 - understood this calculation part
08:29 - now let's save this and see okay so you
08:32 - can see this is working fine four
08:34 - different colors are applied to all the
08:36 - four now
08:37 - after this if there were more items
08:40 - also the pattern would be same okay so i
08:43 - hope you understood
08:45 - now since now that the background is
08:47 - done
08:48 - let's add content okay before content
08:50 - you can see the
08:51 - margin towards the right or left or very
08:54 - less
08:54 - as in in the ui it is little bit more
08:58 - and among each other as well okay so
09:00 - let's fix that first
09:02 - okay so instead of margin all i am gonna
09:05 - make it
09:06 - symmetric and then gonna make it
09:11 - vertical so vertical it is
09:14 - gonna be 15 okay because if it is 15
09:18 - then over here it is going to be 30
09:20 - 15 from this item 15 from this item
09:24 - so you need to do the calculations
09:26 - accordingly
09:27 - and then horizontal let's make it 20.
09:32 - let's see how it looks
09:37 - okay so there is little bit more
09:43 - let's make it 30
09:47 - okay this is fine no
09:50 - but okay i'll i'll let it be 20 only
09:54 - if there is more space left i'll bring
09:57 - it back to 30 okay so you need to do
09:59 - this little tweaks on your own because
10:02 - it is not that as you design the screen
10:06 - and all those things are always gonna be
10:08 - same for an actual device
10:10 - okay what i mean is that this is the
10:13 - screen size that we have taken for our
10:15 - design but
10:17 - the screen size in actual development is
10:19 - a little bit less
10:20 - so we need to means do little bit
10:23 - tweakings here and there accordingly
10:25 - okay i hope you get ma get the just what
10:28 - i'm trying to say

Cleaned transcript:

so up until the previous video we have made our splash screen getting the list of sellers and then routing to the splash seller screen so you can see over here now today we are gonna continue making this screen look like this screen okay so let's get started so these all are basically our seller items so i'm gonna make changes in that okay so i'll give it let's say a height of 200 okay so now the height is appropriate but we are getting a render flex error and the error is because i am not using a list but i am using a column with a map function so in the seller screen you can see that the list of sellers is a column and not a list okay so to fix this what i'm gonna do is i'm gonna surround this container the topmost column okay with a another widget and the widget is single child scroll view okay so now once i add this then let's save this and now we shouldn't get this error okay so now you can see the error is gone and it is scrollable as well okay so now after this let's add border radius to it so let's see what is the border radius that we apply over here and it is 10 as you can see so let's apply the same okay so for that we will create our decoration and then the decoration will be a box decoration widget okay now since we have box decoration the colors can't be outside so we'll move it inside the decoration and then finally apply the border radius so for that we have another parameter called border radius and then it will take a border radius dot circular widget okay and the radius is gonna be 10 as in 10 pixels okay let's format it save it and now we get the border as we get rounded borders and the radius is 10 pixel okay so now the next thing is the colors okay so you can see all these items have different colors so i'm gonna create a list of this colors and then send it to this item okay so now the list of colors is gonna be constant so as per the standard practice it should be inside our init state and for that we need to convert it from a stateless to a stateful with chat okay and then over here i'm gonna call init state okay now over here i'm gonna create a list color seller items background color okay let's initialize it now i'll add values to it inside init state okay so over here i'm gonna write sellers seller items uh seller items background color dot add and then over here another color so now as i have already discussed for color we always start with zero x f now this f f can change that is actually the alpha value you can look for different types of alpha value on the internet okay so the first color we can find it over here so i'm simply gonna copy it paste it over here and there are gonna be three more like this okay so now this second item i'm gonna copy the color paste it on the second row okay so yes this is correct now let's copy this paste it over here and the last one okay so i'll copy it and paste it okay so this is done now this is giving us a warning and the warning will be gone if we add a const over here okay so let's add a const so you can see as soon as i add the cons to the error is gone const is a keyword which means constant okay now let's send this color to these items so for sending first we need to receive it over here okay so for that i'm gonna create another widget color and i'm gonna call it background color now i'm gonna take it in my constructor so first we need to give required because it is final this and not background color okay now let's format it okay and over here instead of color i'm gonna make it background color so we have background color okay now we need to give a background color in our seller screen okay so let's do that over here we will have another named parameter that is background color and then over here i'm gonna give let's give one color for starting and then we will figure out a way to give the color according to a pattern okay so i'm gonna say seller items background color and then zero okay means as in the first item now give it a minute to understand okay hmm okay so there is a small error over there i need to give another closing parenthesis so now the error is gone okay now let's do a full restart okay so that both gets saved at the stay same time okay so let's see now the splash screen is here it is loading the sellers and yes we get the first color applied to all the four now we need to apply uh one two three four in accordance with the list okay so let's create another method that will return the index okay so for that i'm gonna make another method int get color index and this will take the index means the index of seller item okay so like 0 1 2 3 it will work fine but what if it is more than that okay so what i'm gonna do is i'm gonna simply uh return index mod four okay so now with this what will happen that the remainders can be 0 till 3 that are 4 items and we have 4 items over here and now that i think of it we don't need to create a separate function for here for just this small piece of code i'm gonna directly apply it over there okay so over here instead of this what i'm gonna do is index modulus for now index we will get from here so what i'm going to do is sellers dot index of e okay so now we get the index and then we apply modulus 4 and then whatever is the remaining we send it as our background color okay so i hope you understood this calculation part now let's save this and see okay so you can see this is working fine four different colors are applied to all the four now after this if there were more items also the pattern would be same okay so i hope you understood now since now that the background is done let's add content okay before content you can see the margin towards the right or left or very less as in in the ui it is little bit more and among each other as well okay so let's fix that first okay so instead of margin all i am gonna make it symmetric and then gonna make it vertical so vertical it is gonna be 15 okay because if it is 15 then over here it is going to be 30 15 from this item 15 from this item so you need to do the calculations accordingly and then horizontal let's make it 20. let's see how it looks okay so there is little bit more let's make it 30 okay this is fine no but okay i'll i'll let it be 20 only if there is more space left i'll bring it back to 30 okay so you need to do this little tweaks on your own because it is not that as you design the screen and all those things are always gonna be same for an actual device okay what i mean is that this is the screen size that we have taken for our design but the screen size in actual development is a little bit less so we need to means do little bit tweakings here and there accordingly okay i hope you get ma get the just what i'm trying to say
