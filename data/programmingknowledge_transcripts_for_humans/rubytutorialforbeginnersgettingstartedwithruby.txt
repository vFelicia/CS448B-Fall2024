With timestamps:

00:00 - so today we are going to start with a
00:02 - new tutorial uh on ruby
00:04 - so basically ruby is a programming
00:07 - language
00:08 - so like ruby has been used a lot
00:11 - in the programming world and it is one
00:12 - of the most important languages
00:14 - so we are going to start with like some
00:17 - basics of ruby
00:18 - and then we are going to move on uh like
00:21 - a framework on ruby that is rails
00:23 - so basically that is properly known as
00:25 - ruby on rails so
00:27 - initially we'll start with the
00:28 - installation part and then we are going
00:30 - to proceed and enhance ourselves to the
00:33 - ruby on serials framework so basically
00:35 - the
00:36 - to be honest like ruby is a programming
00:38 - programming language
00:40 - and ruby on rails is a framework based
00:42 - on
00:43 - ruby language which is used on web
00:46 - development like basically to use as a
00:48 - backend framework
00:49 - so you can create your own packet
00:51 - framework and then you can extend it to
00:53 - like front end as well
00:54 - using erbs so today first you'll start
00:57 - we're going to start
00:58 - with the basics of ruby and then we are
01:00 - going to continue with it
01:01 - so to install ruby on your machine you
01:03 - can move to this website
01:05 - this website is known as ruby installer
01:07 - for windows so basically you can
01:09 - download click on the download button
01:11 - here
01:12 - and then you will have all the versions
01:14 - so
01:15 - so make sure you install one with the
01:17 - dev kit so it will
01:19 - uh help you so you can install ruby with
01:21 - the dev kit
01:22 - and you can click on like this is like
01:24 - uh you can click on any
01:26 - and depending on your requirement like
01:29 - the 32-bit and 64-bit you can install it
01:31 - so
01:32 - uh like i had downloaded the one which
01:35 - is at the top
01:36 - so you can also download and when you
01:39 - download
01:40 - you will get an installer which will uh
01:41 - like take some time to install
01:43 - and then uh like it's a very like that's
01:46 - very
01:47 - easy process to install it will keep on
01:49 - installing and
01:50 - when you will install this installer
01:54 - then you can move ahead with the stock
01:56 - so this is
01:57 - another like uh website you can refer
01:59 - this so this is like a ruby.org
02:02 - so you can also refer to this website
02:05 - okay
02:06 - uh then you can like these are the two
02:08 - documentations you can refer
02:10 - and this is how we like uh yeah so
02:14 - let's uh move on to the tutorial so
02:16 - after like moving to the installation
02:18 - and documentation you can start
02:20 - running some blue programs on your
02:22 - machine so we will initially
02:24 - start with them so i'll show you how you
02:26 - can create one and
02:27 - run one so let's move to the programming
02:29 - part
02:30 - so this is my vs code editor so like i
02:33 - have created a folder
02:34 - with the name ruby so ruby basically
02:38 - what you can do first uh you have a
02:39 - command line here so
02:41 - what you can do so you can
02:44 - create a file new file and you can type
02:48 - hello dot rb so basically ruby files are
02:52 - run with this uh extension and then
02:56 - you can uh uh yeah so basically now i'm
02:59 - inside this
03:01 - folder which has a header.rb file
03:05 - to make sure you have installed ruby on
03:06 - your machine you can type
03:08 - ruby minus v okay so ruby minus v would
03:12 - give me the like
03:13 - the version which i have installed and
03:14 - it's perfectly fine
03:16 - okay now now first we are going to
03:18 - create a hello world ruby program
03:20 - okay so what we're going to do
03:23 - we are going to like first clear this so
03:26 - now we are going to do
03:28 - put s hello world
03:31 - okay so this would like put as hello
03:34 - world would create the ruby program now
03:35 - to run the ruby program what you need to
03:37 - do
03:37 - ruby hello dot rb
03:41 - so this would like to run the program on
03:43 - your machine so this
03:44 - gives the output hello world so we will
03:47 - start with some q basics
03:49 - like one is like creating the variables
03:52 - so this is like
03:52 - a is equal to one okay uh b is equal to
03:56 - two and we are going to do
03:59 - uh what okay i'll show you one thing and
04:02 - we are going to put this in a variable
04:04 - a a plus b c c 0 a plus b
04:07 - and we are going to put s c so
04:11 - uh first i'll run here this and i'll
04:12 - show you how this works so it works
04:14 - perfectly fine
04:15 - uh but if you want to do some like
04:17 - string formatting so what you can do
04:19 - you can put like this and you can do
04:23 - the sum of
04:27 - a okay the sum of a plus b
04:32 - is equal to c okay okay first i'll run
04:35 - this program and i'll show you
04:37 - what i'll do i'll run this again i'll
04:40 - clear this and i'll run this
04:42 - so here you see the sum of a plus b is
04:44 - equal to c this doesn't satisfy our
04:46 - condition
04:46 - so again if you apply string formatting
04:48 - for what for that what you can do you
04:50 - can put a hash symbol
04:52 - and put them inside a curly braces so
04:55 - this would get the value of that
04:57 - particular variable
04:58 - okay now it will format inside the
05:00 - string now you can run this
05:03 - now the sum of 1 plus 2 is equal to 3 so
05:06 - this is how we achieve it
05:07 - so it was a good example there is
05:09 - another statement in ruby i'll show you
05:12 - which says print print
05:15 - hello world okay
05:18 - uh and i'll clear this again and i'll
05:20 - run this program
05:22 - yeah so it says hello world okay
05:24 - different between what is the difference
05:25 - between the print and protest statement
05:27 - okay
05:28 - i'll do another statement first okay
05:32 - okay uh first i'll do put s
05:35 - first line put
05:38 - s uh i'll do second line
05:43 - okay uh now i'll make sure that i clear
05:46 - this
05:47 - screen yeah now i'll do
05:52 - first line second line so this is the
05:53 - output perfectly fine
05:55 - okay uh now i'll do another one
05:59 - sorry now i'll do print
06:05 - first line
06:08 - and i'll do another one print second
06:11 - line
06:12 - so the print second line would like what
06:15 - i'll do i clear this
06:18 - now run so it's it here you can see it
06:20 - doesn't give a line break okay
06:22 - to achieve that you can put a slash in
06:24 - here
06:26 - okay now i'll run this
06:31 - now we can see we got the same statement
06:33 - as like put a statement so basically i
06:35 - just wanted to tell you
06:36 - that put s statements always gives a
06:39 - line break so whatever you type it would
06:41 - automatically give
06:42 - give the slash n or a line break to the
06:44 - next line
06:45 - but print statement doesn't give that so
06:47 - this is the only difference between the
06:48 - put statement and printer statement
06:50 - okay so we can do one some uh like more
06:53 - things
06:54 - uh in ruby like the first uh like the
06:56 - before we move to some
06:57 - conditions like first we make a let's
06:59 - make a simple function
07:00 - so let's make a function define add okay
07:04 - and it will take two variables a comma b
07:07 - okay
07:08 - now since this is ruby uh you don't need
07:11 - like
07:12 - uh you might be thinking that this looks
07:14 - like python in a python we have a colon
07:15 - symbol here
07:16 - okay uh but here it is not needed okay
07:20 - so like you can remove this so it's
07:22 - essential and we need to end the
07:24 - function with this
07:26 - okay so the body of function will lie in
07:29 - between okay
07:30 - so it says either you can do return
07:33 - a plus b like simple or you can do
07:36 - protest a plus b
07:37 - so let's do this like for the simplicity
07:40 - let's uh
07:41 - what we can do we can store this in a
07:45 - variable
07:45 - c a plus b and now
07:49 - what we can do we can put s c
07:52 - okay and then we can like call the
07:55 - function
07:55 - add with 2 comma 3
07:58 - 2 comma 7 and it should work fine
08:05 - so here we got the 519 uh we could also
08:08 - do that
08:09 - like uh so this is we could also return
08:11 - the statement
08:13 - a a plus b
08:16 - and we could get the return value here
08:20 - like a result the result is equal to add
08:24 - a comma b
08:25 - result a comma
08:28 - and what we can do we can do
08:33 - put s result here and
08:36 - call the same statement here so it
08:39 - should work fine also
08:40 - and this is how the return statement
08:42 - also works in ruby
08:44 - so this is good so we like learned how
08:47 - to create functions
08:48 - like in ruby and like we made a good
08:50 - together so far
08:52 - uh we can also create a swap function in
08:56 - ruby is in one line
08:57 - like i'll show you a is equal to 5
09:00 - b is equal to 10 okay
09:03 - now i'll do put s a comma b
09:06 - will this work okay we'll check this
09:10 - so it works perfectly fine put s a comma
09:12 - b okay
09:13 - uh i'll use print okay this would give
09:16 - you better clarity
09:19 - now here you can see print s yeah like
09:22 - print a comma b so okay i'll give space
09:33 - okay so this is fine
09:38 - so right now we have two variables a
09:40 - comma b with the value 5 and 10
09:42 - now what we're going to do we are going
09:44 - to repeat this statement
09:45 - but before repeat we are going to do a
09:47 - comma b is equal to b comma a
09:50 - okay so this is like we are going to
09:53 - clear this and run it again so
09:55 - okay uh yeah so i need to give a
09:58 - slashing statement here
10:04 - so here you can see 5 comma 10 is being
10:06 - replaced to 10 comma 5
10:07 - so basically in ruby this is also a
10:09 - valid statement x comma y
10:11 - comma z is equal to 1 comma 2 comma
10:15 - 3 okay and when i do print
10:19 - print x okay print
10:22 - y uh okay i'll do this
10:26 - okay now i can remove this code since
10:29 - this is
10:31 - print x okay print y
10:35 - and print set so
10:38 - this is a valid statement in ruby now
10:40 - i'll run this
10:43 - so here you can see this is also valid
10:45 - so this is good
10:46 - so we can assign values using comma
10:48 - using comma and separating them
10:50 - so thank you everyone for watching this
10:51 - tutorial i'll catch you in the next
10:52 - video thank you

Cleaned transcript:

so today we are going to start with a new tutorial uh on ruby so basically ruby is a programming language so like ruby has been used a lot in the programming world and it is one of the most important languages so we are going to start with like some basics of ruby and then we are going to move on uh like a framework on ruby that is rails so basically that is properly known as ruby on rails so initially we'll start with the installation part and then we are going to proceed and enhance ourselves to the ruby on serials framework so basically the to be honest like ruby is a programming programming language and ruby on rails is a framework based on ruby language which is used on web development like basically to use as a backend framework so you can create your own packet framework and then you can extend it to like front end as well using erbs so today first you'll start we're going to start with the basics of ruby and then we are going to continue with it so to install ruby on your machine you can move to this website this website is known as ruby installer for windows so basically you can download click on the download button here and then you will have all the versions so so make sure you install one with the dev kit so it will uh help you so you can install ruby with the dev kit and you can click on like this is like uh you can click on any and depending on your requirement like the 32bit and 64bit you can install it so uh like i had downloaded the one which is at the top so you can also download and when you download you will get an installer which will uh like take some time to install and then uh like it's a very like that's very easy process to install it will keep on installing and when you will install this installer then you can move ahead with the stock so this is another like uh website you can refer this so this is like a ruby.org so you can also refer to this website okay uh then you can like these are the two documentations you can refer and this is how we like uh yeah so let's uh move on to the tutorial so after like moving to the installation and documentation you can start running some blue programs on your machine so we will initially start with them so i'll show you how you can create one and run one so let's move to the programming part so this is my vs code editor so like i have created a folder with the name ruby so ruby basically what you can do first uh you have a command line here so what you can do so you can create a file new file and you can type hello dot rb so basically ruby files are run with this uh extension and then you can uh uh yeah so basically now i'm inside this folder which has a header.rb file to make sure you have installed ruby on your machine you can type ruby minus v okay so ruby minus v would give me the like the version which i have installed and it's perfectly fine okay now now first we are going to create a hello world ruby program okay so what we're going to do we are going to like first clear this so now we are going to do put s hello world okay so this would like put as hello world would create the ruby program now to run the ruby program what you need to do ruby hello dot rb so this would like to run the program on your machine so this gives the output hello world so we will start with some q basics like one is like creating the variables so this is like a is equal to one okay uh b is equal to two and we are going to do uh what okay i'll show you one thing and we are going to put this in a variable a a plus b c c 0 a plus b and we are going to put s c so uh first i'll run here this and i'll show you how this works so it works perfectly fine uh but if you want to do some like string formatting so what you can do you can put like this and you can do the sum of a okay the sum of a plus b is equal to c okay okay first i'll run this program and i'll show you what i'll do i'll run this again i'll clear this and i'll run this so here you see the sum of a plus b is equal to c this doesn't satisfy our condition so again if you apply string formatting for what for that what you can do you can put a hash symbol and put them inside a curly braces so this would get the value of that particular variable okay now it will format inside the string now you can run this now the sum of 1 plus 2 is equal to 3 so this is how we achieve it so it was a good example there is another statement in ruby i'll show you which says print print hello world okay uh and i'll clear this again and i'll run this program yeah so it says hello world okay different between what is the difference between the print and protest statement okay i'll do another statement first okay okay uh first i'll do put s first line put s uh i'll do second line okay uh now i'll make sure that i clear this screen yeah now i'll do first line second line so this is the output perfectly fine okay uh now i'll do another one sorry now i'll do print first line and i'll do another one print second line so the print second line would like what i'll do i clear this now run so it's it here you can see it doesn't give a line break okay to achieve that you can put a slash in here okay now i'll run this now we can see we got the same statement as like put a statement so basically i just wanted to tell you that put s statements always gives a line break so whatever you type it would automatically give give the slash n or a line break to the next line but print statement doesn't give that so this is the only difference between the put statement and printer statement okay so we can do one some uh like more things uh in ruby like the first uh like the before we move to some conditions like first we make a let's make a simple function so let's make a function define add okay and it will take two variables a comma b okay now since this is ruby uh you don't need like uh you might be thinking that this looks like python in a python we have a colon symbol here okay uh but here it is not needed okay so like you can remove this so it's essential and we need to end the function with this okay so the body of function will lie in between okay so it says either you can do return a plus b like simple or you can do protest a plus b so let's do this like for the simplicity let's uh what we can do we can store this in a variable c a plus b and now what we can do we can put s c okay and then we can like call the function add with 2 comma 3 2 comma 7 and it should work fine so here we got the 519 uh we could also do that like uh so this is we could also return the statement a a plus b and we could get the return value here like a result the result is equal to add a comma b result a comma and what we can do we can do put s result here and call the same statement here so it should work fine also and this is how the return statement also works in ruby so this is good so we like learned how to create functions like in ruby and like we made a good together so far uh we can also create a swap function in ruby is in one line like i'll show you a is equal to 5 b is equal to 10 okay now i'll do put s a comma b will this work okay we'll check this so it works perfectly fine put s a comma b okay uh i'll use print okay this would give you better clarity now here you can see print s yeah like print a comma b so okay i'll give space okay so this is fine so right now we have two variables a comma b with the value 5 and 10 now what we're going to do we are going to repeat this statement but before repeat we are going to do a comma b is equal to b comma a okay so this is like we are going to clear this and run it again so okay uh yeah so i need to give a slashing statement here so here you can see 5 comma 10 is being replaced to 10 comma 5 so basically in ruby this is also a valid statement x comma y comma z is equal to 1 comma 2 comma 3 okay and when i do print print x okay print y uh okay i'll do this okay now i can remove this code since this is print x okay print y and print set so this is a valid statement in ruby now i'll run this so here you can see this is also valid so this is good so we can assign values using comma using comma and separating them so thank you everyone for watching this tutorial i'll catch you in the next video thank you
