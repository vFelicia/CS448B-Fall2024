With timestamps:

00:00 - hey everyone we have seen several
00:02 - applications of the pi game module by
00:04 - now
00:06 - in this video we try to make designs on
00:08 - screen using the keys
00:10 - the arrow keys from now on we would make
00:13 - programs that are simple and quick but
00:16 - will help us get a better idea of the pi
00:18 - game module
00:20 - the more you practice the more you see
00:22 - the applications of the pi k module the
00:24 - more you will get comfortable with it
00:28 - so let's get started
00:30 - i'll import the pi key module i'll write
00:33 - import by game and then i'll initialize
00:36 - it
00:38 - then i'll set up the screen
00:40 - i'll write pi game dot display dot set
00:43 - mode and i'll select the screen size to
00:46 - be 500 comma 500 it fits perfectly in my
00:49 - window
00:50 - and then i'll also set up a caption the
00:52 - caption would be designed since i'm
00:54 - drawing
00:56 - a design
00:58 - using the arrow keys i'll do set caption
01:01 - and write designs
01:05 - then i'll write the while loop
01:08 - don't worry i'll get to the main code
01:11 - later
01:13 - i really like to set up the basic
01:15 - structure first then get to the main
01:17 - code so while true i'll do the for loop
01:20 - then
01:21 - for events
01:24 - in
01:24 - dot pygame.event
01:26 - dot get
01:28 - i access the queue like this
01:30 - the events queue then i'll set up the
01:32 - condition if event type events dot tie
01:36 - equals spy game quit
01:39 - then i'll call the pie game quit
01:41 - function
01:43 - and also fit
01:46 - so this was the basic structure the main
01:48 - three basic steps that we write in any
01:51 - pi game program now i'll get to the
01:53 - basic code the main code
01:56 - so if i'm saying i want to use the arrow
01:59 - keys to draw a design while i move an
02:01 - object so it should be it should make
02:03 - sense to you that i'll be using the code
02:06 - i'll i'll be writing something similar
02:07 - to the moving object code okay so if i'm
02:10 - saying i want to move an object that
02:12 - would leave a trail and
02:15 - that would draw the designs
02:17 - so i need to describe my figures so i'll
02:19 - set up the initial position
02:22 - so let me take x by two variables and
02:24 - set up the initial position to be 100
02:26 - comma 100
02:28 - you can take any position you can take
02:29 - 50 comma 50 or 10 comma 10 then i'll set
02:32 - up the
02:34 - width and height it's i'll describe the
02:37 - size it's uh t
02:39 - uh the width and height can be a height
02:42 - can be 10 comma 10
02:44 - then i'll set up the speed by which the
02:47 - figure should displace each time we
02:49 - press an arrow key
02:51 - so let it be 10
02:53 - i'll also give in a delay i'll write pi
02:56 - game dot
02:58 - time
02:59 - dot delay of 10 milliseconds in the
03:02 - while true loop so that
03:04 - we can observe our object moving
03:06 - properly and it does not rush
03:09 - i hope you can recall this code as we
03:12 - are writing it
03:13 - and you're on the same page as i am
03:16 - then we'll
03:18 - describe a variable key which would be a
03:20 - list it would be a sequence of booleans
03:23 - that would keep the state of all the
03:25 - keys on the keyboard so how do i do that
03:27 - i'd write pygame dot
03:29 - key
03:30 - dot get pressed and this would be a
03:33 - sequence of all the states
03:36 - of the keys on the keyboard
03:39 - and this is how i'd know which key was
03:41 - pressed and accordingly i'll use it for
03:44 - the further setup so if now i'll set up
03:48 - my conditions if i press the
03:51 - up arrow key i'll write key pi game
03:55 - dot k
03:57 - underscore up
03:59 - so that would give me
04:01 - the state of the up button
04:03 - and i'll also write since i am going up
04:06 - i'll write y
04:08 - should always be
04:10 - greater than 0
04:12 - okay
04:13 - and i'll
04:15 - increment i'll decrement y
04:18 - by the speed value
04:20 - since i'm going up okay
04:22 - similarly for
04:24 - down button i'll write pi gain
04:28 - dot k underscore down
04:33 - and y should be less than
04:36 - the screen size that is 500 minus the
04:38 - height cool
04:40 - i'll increment by now since i'm going
04:43 - down i'll increment y by speed units
04:46 - now i'll do the same thing for
04:49 - the right and left key pi game dot
04:52 - okay underscore left
04:58 - and x now i'll talk about x because i'm
05:02 - pressing left key
05:05 - x should be
05:07 - greater than 0 always and i'll
05:11 - decrement x by speed units
05:15 - i'll do the same thing for
05:17 - the right key
05:19 - i'll write by game
05:21 - dot
05:22 - k underscore right
05:27 - and x should be
05:29 - less than 500 my screen size minus the
05:32 - width
05:33 - okay
05:34 - then i'll increment
05:36 - x by speed units since i'm going right
05:39 - okay i hope you remember how we accessed
05:42 - that key list we use the constants
05:45 - the key constants okay
05:47 - and yeah cool i hope you remember this i
05:50 - hope you can recall all this then i'll
05:52 - draw my figure i'll do pygame.draw
05:58 - dot right i'll take a simple rectangle
06:01 - screen is the surface i'm going to draw
06:03 - on
06:03 - then the color would be white it looks
06:05 - good on black background
06:07 - and then the rect values would be the
06:10 - initial
06:11 - coordinates
06:13 - and its size width
06:16 - and height
06:19 - fine
06:20 - then i'll update this complete thing
06:33 - fine we are done with the code now you
06:35 - might notice i haven't used the screen
06:37 - fill
06:38 - thing
06:40 - why haven't i used it because i don't
06:42 - want any single color on my screen
06:44 - always as my object moves it should
06:48 - leave a trail now okay if i it is the
06:51 - only difference between the moving
06:53 - object code and the design code okay
06:56 - so i hope you get this i don't want any
06:58 - single color on my screen that's why i'm
07:00 - not using screen fill color a screen
07:03 - fill function cool
07:05 - let's run this and see if it works as we
07:08 - want it to
07:09 - so yeah if i now run this
07:12 - i can see
07:12 - [Music]
07:14 - the object and if i press the right
07:16 - button it goes right i press down it
07:19 - goes down i press left it goes left
07:22 - and it's working very fine
07:25 - it gives us various patterns as i'm
07:28 - pressing the arrow keys it goes it moves
07:30 - accordingly
07:32 - and this is very useful when we are
07:34 - making amaze kind of
07:36 - video game
07:37 - it helps you track your object
07:39 - i hope you got whatever we did in the
07:41 - program you were i hope you were able to
07:44 - recall the things
07:46 - thank you

Cleaned transcript:

hey everyone we have seen several applications of the pi game module by now in this video we try to make designs on screen using the keys the arrow keys from now on we would make programs that are simple and quick but will help us get a better idea of the pi game module the more you practice the more you see the applications of the pi k module the more you will get comfortable with it so let's get started i'll import the pi key module i'll write import by game and then i'll initialize it then i'll set up the screen i'll write pi game dot display dot set mode and i'll select the screen size to be 500 comma 500 it fits perfectly in my window and then i'll also set up a caption the caption would be designed since i'm drawing a design using the arrow keys i'll do set caption and write designs then i'll write the while loop don't worry i'll get to the main code later i really like to set up the basic structure first then get to the main code so while true i'll do the for loop then for events in dot pygame.event dot get i access the queue like this the events queue then i'll set up the condition if event type events dot tie equals spy game quit then i'll call the pie game quit function and also fit so this was the basic structure the main three basic steps that we write in any pi game program now i'll get to the basic code the main code so if i'm saying i want to use the arrow keys to draw a design while i move an object so it should be it should make sense to you that i'll be using the code i'll i'll be writing something similar to the moving object code okay so if i'm saying i want to move an object that would leave a trail and that would draw the designs so i need to describe my figures so i'll set up the initial position so let me take x by two variables and set up the initial position to be 100 comma 100 you can take any position you can take 50 comma 50 or 10 comma 10 then i'll set up the width and height it's i'll describe the size it's uh t uh the width and height can be a height can be 10 comma 10 then i'll set up the speed by which the figure should displace each time we press an arrow key so let it be 10 i'll also give in a delay i'll write pi game dot time dot delay of 10 milliseconds in the while true loop so that we can observe our object moving properly and it does not rush i hope you can recall this code as we are writing it and you're on the same page as i am then we'll describe a variable key which would be a list it would be a sequence of booleans that would keep the state of all the keys on the keyboard so how do i do that i'd write pygame dot key dot get pressed and this would be a sequence of all the states of the keys on the keyboard and this is how i'd know which key was pressed and accordingly i'll use it for the further setup so if now i'll set up my conditions if i press the up arrow key i'll write key pi game dot k underscore up so that would give me the state of the up button and i'll also write since i am going up i'll write y should always be greater than 0 okay and i'll increment i'll decrement y by the speed value since i'm going up okay similarly for down button i'll write pi gain dot k underscore down and y should be less than the screen size that is 500 minus the height cool i'll increment by now since i'm going down i'll increment y by speed units now i'll do the same thing for the right and left key pi game dot okay underscore left and x now i'll talk about x because i'm pressing left key x should be greater than 0 always and i'll decrement x by speed units i'll do the same thing for the right key i'll write by game dot k underscore right and x should be less than 500 my screen size minus the width okay then i'll increment x by speed units since i'm going right okay i hope you remember how we accessed that key list we use the constants the key constants okay and yeah cool i hope you remember this i hope you can recall all this then i'll draw my figure i'll do pygame.draw dot right i'll take a simple rectangle screen is the surface i'm going to draw on then the color would be white it looks good on black background and then the rect values would be the initial coordinates and its size width and height fine then i'll update this complete thing fine we are done with the code now you might notice i haven't used the screen fill thing why haven't i used it because i don't want any single color on my screen always as my object moves it should leave a trail now okay if i it is the only difference between the moving object code and the design code okay so i hope you get this i don't want any single color on my screen that's why i'm not using screen fill color a screen fill function cool let's run this and see if it works as we want it to so yeah if i now run this i can see the object and if i press the right button it goes right i press down it goes down i press left it goes left and it's working very fine it gives us various patterns as i'm pressing the arrow keys it goes it moves accordingly and this is very useful when we are making amaze kind of video game it helps you track your object i hope you got whatever we did in the program you were i hope you were able to recall the things thank you
