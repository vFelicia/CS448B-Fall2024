With timestamps:

00:00 - welcome to programming knowledge so in
00:03 - the previous video we started discussing
00:06 - about stateless widgets material app and
00:08 - the text widget and we passed this text
00:12 - widget as a parameter to this home
00:15 - argument and then when we were running
00:18 - the application we were getting the text
00:21 - in red and it has two yellow lines below
00:23 - it okay and this generally happens when
00:26 - there is some error in the code so the
00:29 - error over here was basically that we
00:31 - were making the text as our home widget
00:34 - which is not correct because the home
00:37 - takes the route widget and as we have
00:39 - discussed in previous videos that the
00:41 - route which it needs to be a scaffold
00:44 - with chat okay so instead of passing a
00:47 - text over here
00:49 - I'll pass a scaffold okay and now if I
00:55 - save this you can see that the text is
01:02 - gone and no error is present in the
01:05 - console okay so now let's add some
01:08 - widgets on our screen and the first
01:11 - thing that you will see in maximum
01:14 - mobile applications is an app bar so to
01:18 - add an app bar we write a PP mark the
01:23 - small a app bar and it takes an app bar
01:28 - widget over here there is capital ok now
01:32 - this app about widget also takes a few
01:35 - parameters and as we want to give an
01:41 - empower or title we will call that title
01:44 - parameter and as we want our text as our
01:48 - title we will again use a text with
01:51 - checked over here and as we have
01:52 - discussed in the previous video that
01:54 - text takes a string over here which is
01:56 - compulsory to give okay and that is also
01:59 - verified when you hover over it you can
02:02 - see that the documentation says that it
02:04 - takes a string data which is compulsory
02:07 - and then all the other values are inside
02:10 - curly braces that means they are
02:12 - parameters and they are not necessary to
02:13 - give okay so now let's give this
02:17 - programming knowledge okay and now if I
02:25 - save this I'll be able to see an app bar
02:27 - with the text programming knowledge on
02:29 - it okay and here you go you see you have
02:34 - a text programming knowledge and this
02:36 - blue Shack section is your app' okay
02:39 - and now if you are wondering where did
02:42 - this blue color came from as we have not
02:44 - discussed or not specified any color
02:48 - over here so let me tell you that blue
02:51 - is the default color in every flutter
02:53 - application okay but if you want you can
02:55 - also give a custom defined color okay so
02:59 - to give a color you need to come out of
03:01 - the text with Jack okay but be inside
03:04 - the app bar widget and then call the
03:06 - property background color okay and then
03:12 - the background color takes a parameter
03:15 - called colors okay so now colors is an
03:19 - enum okay that has a collection of
03:22 - colors which is prefabricated with
03:25 - flutter and if you don't know what is an
03:28 - enum then that is not a problem as we
03:31 - will discuss about tanam in great detail
03:34 - in our upcoming videos okay so for now
03:36 - let's just say and that colors is a
03:39 - keyword and if we hit the dot then you
03:41 - can see all the colors that this colors
03:46 - in am hash or that means the colors
03:49 - which are fabricated by flutter okay so
03:52 - let's say I choose red okay so now my
03:56 - background color is red and now if I
03:58 - again save this and go back to my
04:02 - application you can see the app bar
04:04 - color has changed to red okay then the
04:10 - next thing over here is okay before
04:14 - moving to the next thing you can see
04:15 - that all the code we are writing the
04:18 - maximum code is written in a single line
04:20 - okay and it is not very much formatted
04:23 - okay so to format
04:25 - you can give spaces manually here and
04:29 - there give enters press enters here and
04:31 - there but there is also a shortcut we
04:34 - can use a keyboard binding that vs code
04:36 - provides us okay - so to know what is
04:39 - the keyboard binding we need to go to
04:41 - code preferences keyboard shortcuts and
04:46 - then over here if you look for format
04:48 - then you will find a command called
04:51 - format a document and then the key
04:53 - binding over here
04:54 - is your shortcut key so for me it is
04:57 - control control command and F okay so
05:02 - I'll apply that in my main dot if I
05:06 - write control command F so you can see
05:10 - everything got formatted on its own okay
05:13 - so now the application looks more
05:17 - structured okay so now after the app bar
05:21 - we can also add a body okay so now this
05:28 - body is the space that is left after the
05:33 - app bar okay so the entire screen space
05:36 - excluding the app bar is our body okay
05:40 - so for now as we have seen in the
05:42 - prefabricated app we have our text and
05:44 - center okay and so to display anything
05:47 - in center we have a widget called Center
05:50 - so we will call that with it and then
05:52 - this widget also takes some parameters
05:55 - and over here you can see it takes a
05:57 - child parameter so I will call this
06:00 - child parameter and what all values it
06:02 - takes you can say it takes a widget and
06:04 - that is the child with Jett
06:06 - okay so for now let's just pass our text
06:09 - and now you all know that the text takes
06:13 - a compulsory parameter that is a string
06:16 - that gets printed and let's give my name
06:19 - okay you can give your name so now our
06:23 - body has a center and it has a text
06:26 - called rish of Kumar now again I format
06:29 - it and then save it okay so once saved
06:34 - you can see I have our text called rish
06:37 - of Kumar in the center
06:38 - okay so over here you can see this is
06:42 - called up with dead tree that means I
06:44 - have a scaffold as my root we'll check
06:46 - it has two branches up bar and Center
06:48 - the first branch a bar has another
06:51 - branch text okay and it has one more
06:55 - branch as colors okay then the second
06:58 - branch that is body it has a child
07:00 - branch called text okay so this is how
07:03 - branches are increased and we design our
07:06 - app we design our application okay and
07:11 - now you can explore about more
07:13 - parameters more functionalities about
07:16 - app bar body and if you want to do so
07:18 - all you need to do is after the comma
07:20 - hit control space okay and then all the
07:24 - values that it takes will be available
07:26 - to you like the center takes height
07:28 - factor key and width factor and in the
07:32 - app bar if we hit control space you can
07:35 - see it takes and actions actions I can
07:38 - team automatically imply leading bottom
07:43 - okay so these are some functions that
07:46 - you can if you will hover around then
07:47 - you will able be able to know what it is
07:49 - about so suppose if you choose bottom
07:51 - and if we over around bottom so then you
07:55 - can see this will jet appears across the
07:57 - bottom of the app bar okay so for now
08:00 - let's try adding in I can and see where
08:02 - it appears okay so to add and I can be
08:05 - again called the icon widget okay and
08:09 - then this icon which it also takes a and
08:11 - compulsory parameter and that is an icon
08:14 - data okay so I can data is not something
08:18 - that we need to worry about that is
08:20 - present in icons enum okay so this is
08:25 - also and enum and we will study about
08:27 - teen um for now in a mossad icons is
08:30 - just a keyword and if you hit enter you
08:31 - will be able to see a lot of icons that
08:35 - it has and for now let's just say add
08:37 - okay which is the plus sign as you can
08:40 - see over here okay and now it is still
08:43 - giving an error and if you peek on the
08:46 - problem it says the argument type icon
08:49 - can't be assigned to a parameter type
08:51 - / preferred size widget okay so this
08:58 - means that we cannot give an icon to the
09:00 - bottom okay but that is not the problem
09:02 - over here I just wanted you to know how
09:04 - to explore all the other things that it
09:08 - has okay and so you can do that now okay
09:10 - and then we will add the floating action
09:13 - button and some functionality to this
09:16 - application in the next tutorial thank
09:19 - you

Cleaned transcript:

welcome to programming knowledge so in the previous video we started discussing about stateless widgets material app and the text widget and we passed this text widget as a parameter to this home argument and then when we were running the application we were getting the text in red and it has two yellow lines below it okay and this generally happens when there is some error in the code so the error over here was basically that we were making the text as our home widget which is not correct because the home takes the route widget and as we have discussed in previous videos that the route which it needs to be a scaffold with chat okay so instead of passing a text over here I'll pass a scaffold okay and now if I save this you can see that the text is gone and no error is present in the console okay so now let's add some widgets on our screen and the first thing that you will see in maximum mobile applications is an app bar so to add an app bar we write a PP mark the small a app bar and it takes an app bar widget over here there is capital ok now this app about widget also takes a few parameters and as we want to give an empower or title we will call that title parameter and as we want our text as our title we will again use a text with checked over here and as we have discussed in the previous video that text takes a string over here which is compulsory to give okay and that is also verified when you hover over it you can see that the documentation says that it takes a string data which is compulsory and then all the other values are inside curly braces that means they are parameters and they are not necessary to give okay so now let's give this programming knowledge okay and now if I save this I'll be able to see an app bar with the text programming knowledge on it okay and here you go you see you have a text programming knowledge and this blue Shack section is your app' okay and now if you are wondering where did this blue color came from as we have not discussed or not specified any color over here so let me tell you that blue is the default color in every flutter application okay but if you want you can also give a custom defined color okay so to give a color you need to come out of the text with Jack okay but be inside the app bar widget and then call the property background color okay and then the background color takes a parameter called colors okay so now colors is an enum okay that has a collection of colors which is prefabricated with flutter and if you don't know what is an enum then that is not a problem as we will discuss about tanam in great detail in our upcoming videos okay so for now let's just say and that colors is a keyword and if we hit the dot then you can see all the colors that this colors in am hash or that means the colors which are fabricated by flutter okay so let's say I choose red okay so now my background color is red and now if I again save this and go back to my application you can see the app bar color has changed to red okay then the next thing over here is okay before moving to the next thing you can see that all the code we are writing the maximum code is written in a single line okay and it is not very much formatted okay so to format you can give spaces manually here and there give enters press enters here and there but there is also a shortcut we can use a keyboard binding that vs code provides us okay so to know what is the keyboard binding we need to go to code preferences keyboard shortcuts and then over here if you look for format then you will find a command called format a document and then the key binding over here is your shortcut key so for me it is control control command and F okay so I'll apply that in my main dot if I write control command F so you can see everything got formatted on its own okay so now the application looks more structured okay so now after the app bar we can also add a body okay so now this body is the space that is left after the app bar okay so the entire screen space excluding the app bar is our body okay so for now as we have seen in the prefabricated app we have our text and center okay and so to display anything in center we have a widget called Center so we will call that with it and then this widget also takes some parameters and over here you can see it takes a child parameter so I will call this child parameter and what all values it takes you can say it takes a widget and that is the child with Jett okay so for now let's just pass our text and now you all know that the text takes a compulsory parameter that is a string that gets printed and let's give my name okay you can give your name so now our body has a center and it has a text called rish of Kumar now again I format it and then save it okay so once saved you can see I have our text called rish of Kumar in the center okay so over here you can see this is called up with dead tree that means I have a scaffold as my root we'll check it has two branches up bar and Center the first branch a bar has another branch text okay and it has one more branch as colors okay then the second branch that is body it has a child branch called text okay so this is how branches are increased and we design our app we design our application okay and now you can explore about more parameters more functionalities about app bar body and if you want to do so all you need to do is after the comma hit control space okay and then all the values that it takes will be available to you like the center takes height factor key and width factor and in the app bar if we hit control space you can see it takes and actions actions I can team automatically imply leading bottom okay so these are some functions that you can if you will hover around then you will able be able to know what it is about so suppose if you choose bottom and if we over around bottom so then you can see this will jet appears across the bottom of the app bar okay so for now let's try adding in I can and see where it appears okay so to add and I can be again called the icon widget okay and then this icon which it also takes a and compulsory parameter and that is an icon data okay so I can data is not something that we need to worry about that is present in icons enum okay so this is also and enum and we will study about teen um for now in a mossad icons is just a keyword and if you hit enter you will be able to see a lot of icons that it has and for now let's just say add okay which is the plus sign as you can see over here okay and now it is still giving an error and if you peek on the problem it says the argument type icon can't be assigned to a parameter type / preferred size widget okay so this means that we cannot give an icon to the bottom okay but that is not the problem over here I just wanted you to know how to explore all the other things that it has okay and so you can do that now okay and then we will add the floating action button and some functionality to this application in the next tutorial thank you
