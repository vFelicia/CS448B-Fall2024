With timestamps:

00:00 - so let's start our application
00:03 - and let's see where we have ended in the
00:05 - last tutorial
00:07 - so let's create this rail server and
00:10 - let's create this and let's start our
00:12 - server so we were able to create the
00:13 - login page
00:15 - okay so one thing uh sorry
00:18 - a server is already running okay
00:22 - let me check yeah it's running so
00:24 - perfectly fine let's
00:25 - yeah so the server is running the app is
00:28 - running so
00:29 - we have created a login page okay
00:32 - and but we need to check
00:36 - we need to check if this login page
00:38 - already exists or not
00:39 - so for that what we are going to do we
00:41 - are going to do rails console
00:44 - and we need to check
00:48 - like we can do since the email is unique
00:52 - so we will type user
00:57 - is going to user dot find underscore by
01:02 - email equal to email
01:06 - okay so and we say
01:09 - if user if user so if there is if
01:13 - if there is a user let's do a end
01:15 - statement
01:16 - if user and
01:20 - this would use it is like this would
01:23 - mean that if user does
01:25 - exist okay so then we need to match
01:28 - password okay
01:29 - if user dot exist we need to patch
01:32 - password
01:33 - so if you use it and
01:37 - what we can do this way also user
01:41 - so first i'll show you what you need
01:43 - this is you this is your user
01:45 - dot first and we need to do if user dot
01:50 - password
01:53 - underscore digest is equal to password
01:57 - so then we can enter a json
02:01 - this just for simplicity i'm running a
02:03 - json which says
02:04 - response and let
02:08 - response is equal to
02:15 - log then it's good
02:19 - so this is just time let's remove this
02:24 - since if else
02:28 - would be something this which says
02:34 - response
02:36 - logged in is equal to false
02:40 - and we could do the statement here only
02:43 - because
02:43 - we we want this json response to be sent
02:47 - after the fl statement
02:49 - so first we will try with user
02:51 - attributemail.com
02:52 - okay and this is how we do it uh
02:55 - because i don't remember the passwords
02:57 - which i created so many passwords so
02:59 - let's create a user first so let's
03:01 - create a dummy threadmail.com
03:06 - and we would say one two three four five
03:09 - six and let's register so it says your
03:12 - account is created directly
03:13 - here to login and say dummy
03:16 - ratemail.com
03:20 - the user is created so now it should
03:22 - return
03:23 - for logged in zero to true so it says
03:25 - logins would just put a wrong password
03:28 - one two three four five
03:32 - okay what is false let's put an
03:34 - incorrect email
03:35 - and see whether this works or not so we
03:38 - are going in right direction
03:40 - one two three four five six the password
03:42 - is right but the email is wrong so it
03:44 - says logins for the logic is right
03:47 - so it says it says
03:50 - uh instead of response now we are going
03:53 - to
03:54 - basically we are going to
03:58 - render a message so basically
04:02 - it says address
04:07 - success logged in is equal to
04:10 - false and
04:14 - this is false and we simply render new
04:17 - because we were coming from the new page
04:19 - of the views i'll show you how
04:22 - we move to app views
04:25 - sessions and this was our login page
04:26 - okay and here we say
04:29 - and then we say
04:32 - at the rate if
04:36 - there is logged
04:39 - in equal
04:50 - so we redirect the user to the same page
04:52 - okay
04:53 - and we say we say if at the rate login
04:56 - is going to false then we say
04:59 - either email or password
05:03 - doesn't match
05:06 - i hope this is right so let's create
05:10 - this and this yeah
05:11 - perfectly fine so let's move to our
05:13 - session controller
05:15 - so we say add the logged in to render
05:17 - new yes
05:19 - okay okay this is like this
05:23 - is and then it locked in is equal to
05:24 - true
05:28 - okay i created i put this into a long
05:30 - logic block
05:31 - this is fine android object would fall
05:33 - and
05:36 - and
05:38 - let's do this as true okay
05:42 - so now let's dummy and threadmill.com
05:45 - one two three four five
05:47 - and it's login how called and also not
05:51 - neither reader does not
05:52 - so there's an error in this line i'll
05:54 - see
05:55 - so it says render json response
06:01 - else render new
06:04 - or render json response
06:10 - it's fine
06:15 - so email or password doesn't match so
06:17 - either email so either email or password
06:19 - doesn't match so we tell them to log in
06:21 - and if we put the correct email id and
06:24 - password so let's see it says login
06:27 - so uh if this is true
06:30 - so let's maintain a session for it
06:32 - because this is true
06:34 - but let's maintain two session for it
06:36 - okay one thing i wanted to
06:38 - make this we did not add the error
06:40 - handling for users also
06:42 - uh if
06:45 - what i wanted to do like
06:50 - see if
06:53 - this email is already taken then what
06:55 - happens so we did not
06:57 - create this functionality on the user
06:59 - side okay so what we will do
07:02 - if user is equal to user dot
07:06 - find underscore by
07:09 - email
07:14 - is equal to email if
07:18 - user is there then let's end this
07:22 - else let's do the same thing what we did
07:25 - for the login part
07:26 - else if user is already there then let's
07:30 - create this with the success
07:33 - okay and this is fine
07:38 - it's if the user does i i mean this is
07:41 - also create part okay so don't confuse
07:43 - yourself
07:44 - we are the login part is like done we
07:47 - have
07:47 - the login password and we are
07:49 - maintaining and the password is wrong we
07:51 - are maintaining
07:51 - but if the user if this email is already
07:53 - taken by republican
07:55 - then you need to take advantage success
08:02 - is equal to false okay okay let's
08:06 - name this as a register because this
08:08 - makes more sense
08:09 - and this also make more sense
08:13 - okay and we are going to render
08:18 - so basically we are doing the same thing
08:20 - so let's avoid this and
08:21 - we should render new
08:24 - this is fine and let's move to
08:29 - new dot html rb so if if register
08:34 - this okay register is
08:37 - equal to
08:40 - and this and else we move to
08:48 - else
08:53 - okay one thing i'll show you okay let's
08:55 - do this what else
08:58 - is this block and we say
09:01 - email already taken
09:05 - okay so this is fine
09:12 - so let's move to this our app sign up
09:16 - now you see see uh i'll show you one
09:19 - thing
09:21 - let's do user dot all and see
09:25 - okay if this is enabled
09:29 - okay this is not enabled so we have
09:33 - see we are taking user android mail.com
09:36 - see this or maybe we have a dummy
09:38 - address we've already taken
09:40 - okay fine one two three four five six
09:43 - let's
09:44 - check with this so yeah it says email
09:46 - already taken so what happens
09:48 - when we move to this page
09:52 - uh without checking in and it says email
09:54 - already taken this is wrong
09:55 - because we need to avoid this and for
09:57 - that what we will do
10:00 - and at the red register
10:06 - uh if the register is equal to
10:10 - and for this box
10:18 - okay else let's say
10:25 - register is not equal to nil
10:29 - because if it's nil we don't uh show
10:32 - this message okay
10:34 - so now it's perfectly fine because by
10:37 - default it has a nail value
10:38 - so if it's true your account is created
10:41 - if it's not equal to say nil email will
10:44 - be taken
10:45 - if it's nil then don't show anything or
10:48 - okay so this is fine now let's move this
10:51 - and check
10:52 - this with sign up
10:56 - yeah you are already taken let's create
10:58 - a new id
10:59 - user 22 and one two three four by six
11:04 - so created your account is created click
11:06 - here to log in okay
11:07 - perfectly fine so we are moving in right
11:10 - direction
11:11 - so this was the case when we had to add
11:12 - error handling on the page
11:14 - for both sign up and sign in so thank
11:17 - you again for watching
11:18 - bye

Cleaned transcript:

so let's start our application and let's see where we have ended in the last tutorial so let's create this rail server and let's create this and let's start our server so we were able to create the login page okay so one thing uh sorry a server is already running okay let me check yeah it's running so perfectly fine let's yeah so the server is running the app is running so we have created a login page okay and but we need to check we need to check if this login page already exists or not so for that what we are going to do we are going to do rails console and we need to check like we can do since the email is unique so we will type user is going to user dot find underscore by email equal to email okay so and we say if user if user so if there is if if there is a user let's do a end statement if user and this would use it is like this would mean that if user does exist okay so then we need to match password okay if user dot exist we need to patch password so if you use it and what we can do this way also user so first i'll show you what you need this is you this is your user dot first and we need to do if user dot password underscore digest is equal to password so then we can enter a json this just for simplicity i'm running a json which says response and let response is equal to log then it's good so this is just time let's remove this since if else would be something this which says response logged in is equal to false and we could do the statement here only because we we want this json response to be sent after the fl statement so first we will try with user attributemail.com okay and this is how we do it uh because i don't remember the passwords which i created so many passwords so let's create a user first so let's create a dummy threadmail.com and we would say one two three four five six and let's register so it says your account is created directly here to login and say dummy ratemail.com the user is created so now it should return for logged in zero to true so it says logins would just put a wrong password one two three four five okay what is false let's put an incorrect email and see whether this works or not so we are going in right direction one two three four five six the password is right but the email is wrong so it says logins for the logic is right so it says it says uh instead of response now we are going to basically we are going to render a message so basically it says address success logged in is equal to false and this is false and we simply render new because we were coming from the new page of the views i'll show you how we move to app views sessions and this was our login page okay and here we say and then we say at the rate if there is logged in equal so we redirect the user to the same page okay and we say we say if at the rate login is going to false then we say either email or password doesn't match i hope this is right so let's create this and this yeah perfectly fine so let's move to our session controller so we say add the logged in to render new yes okay okay this is like this is and then it locked in is equal to true okay i created i put this into a long logic block this is fine android object would fall and and let's do this as true okay so now let's dummy and threadmill.com one two three four five and it's login how called and also not neither reader does not so there's an error in this line i'll see so it says render json response else render new or render json response it's fine so email or password doesn't match so either email so either email or password doesn't match so we tell them to log in and if we put the correct email id and password so let's see it says login so uh if this is true so let's maintain a session for it because this is true but let's maintain two session for it okay one thing i wanted to make this we did not add the error handling for users also uh if what i wanted to do like see if this email is already taken then what happens so we did not create this functionality on the user side okay so what we will do if user is equal to user dot find underscore by email is equal to email if user is there then let's end this else let's do the same thing what we did for the login part else if user is already there then let's create this with the success okay and this is fine it's if the user does i i mean this is also create part okay so don't confuse yourself we are the login part is like done we have the login password and we are maintaining and the password is wrong we are maintaining but if the user if this email is already taken by republican then you need to take advantage success is equal to false okay okay let's name this as a register because this makes more sense and this also make more sense okay and we are going to render so basically we are doing the same thing so let's avoid this and we should render new this is fine and let's move to new dot html rb so if if register this okay register is equal to and this and else we move to else okay one thing i'll show you okay let's do this what else is this block and we say email already taken okay so this is fine so let's move to this our app sign up now you see see uh i'll show you one thing let's do user dot all and see okay if this is enabled okay this is not enabled so we have see we are taking user android mail.com see this or maybe we have a dummy address we've already taken okay fine one two three four five six let's check with this so yeah it says email already taken so what happens when we move to this page uh without checking in and it says email already taken this is wrong because we need to avoid this and for that what we will do and at the red register uh if the register is equal to and for this box okay else let's say register is not equal to nil because if it's nil we don't uh show this message okay so now it's perfectly fine because by default it has a nail value so if it's true your account is created if it's not equal to say nil email will be taken if it's nil then don't show anything or okay so this is fine now let's move this and check this with sign up yeah you are already taken let's create a new id user 22 and one two three four by six so created your account is created click here to log in okay perfectly fine so we are moving in right direction so this was the case when we had to add error handling on the page for both sign up and sign in so thank you again for watching bye
