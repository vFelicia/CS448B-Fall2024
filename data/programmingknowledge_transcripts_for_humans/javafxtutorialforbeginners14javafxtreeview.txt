With timestamps:

00:00 - hello guys welcome to the next video on
00:02 - JavaFX tutorial for beginners in this
00:04 - video we will see how to use tree view
00:07 - in Java FX so let's get started so I
00:11 - have created a project called tree view
00:13 - in which I have this main dot java main
00:18 - controller dot java and mean dot app XML
00:21 - so I think till now you already know
00:24 - what these are and how they can be
00:27 - created okay now what I'm going to do
00:30 - first is I'm going to go to my main
00:32 - controller dot Java file and first of
00:35 - all I will implement initialize Abel
00:38 - here and then I have to implement one
00:43 - method which is initialized right so I
00:46 - will do this
00:48 - so in this initialize I'm going to write
00:52 - the code for the treeview
00:53 - okay but first of all I have to you know
00:57 - add a treeview in my main dot F XML file
01:01 - so I'm going to select my main dot F XML
01:05 - file and I'm going to open it with scene
01:07 - builder now once your scene builder is
01:10 - open go to controls and search for a
01:13 - tree view and in my case it's second
01:16 - last option in controls so drag and drop
01:19 - this tree view into your anchor pane
01:23 - okay and if you want you can resize it
01:26 - okay and what I'm going to do next is
01:30 - I'm going to give our ID to this tree
01:33 - view for example tree view itself and
01:36 - just save your code okay and now go to
01:41 - your Eclipse IDE and in here first of
01:44 - all in the main controller I am going to
01:45 - define this tree view so first of all at
01:49 - the rate FX ml and then tree view and
01:55 - tree view is a less so you need to
01:58 - provide the data type for the list which
02:00 - is string and then just provide the same
02:03 - name which you have defined in your F
02:06 - XML file and import the tree view from
02:09 - JavaFX scene control library
02:12 - okay now next what we are going to do is
02:15 - we are going to go to in the initialize
02:18 - method here and inside this initialize
02:22 - method I'm going to create some tree
02:25 - items
02:26 - okay so tree item which is also a list
02:30 - and I'm going to name it as root okay is
02:35 - equal to new tree item and it takes the
02:41 - name of the item so for example this is
02:44 - our root right now any tree view has a
02:49 - root and nodes so for example I will
02:52 - give you an example this is a tree view
02:56 - so this BC in our case is a root and
03:00 - these are all the nodes right and inside
03:04 - this desktop these are all the sub nodes
03:07 - right so tree has a node and sub node
03:12 - right so in the same way we are creating
03:15 - a root first and then we can create some
03:19 - nodes okay so using this tree item
03:22 - itself you are going to create some node
03:25 - and we will name it as node a and we
03:31 - will name the second as node B and the
03:36 - third as node C okay and same you can
03:40 - give here right so give the name here
03:43 - node a node B and node C now after
03:50 - creating root and node you need to add
03:52 - the nodes to the root right so you have
03:56 - two options one is just take the root
03:59 - object and then call get children and
04:03 - then you can just call add function
04:07 - right and then you can add one note at a
04:11 - time something like this so you can do
04:14 - the same three times and then pass your
04:18 - node like this using add function and
04:21 - now one last thing you need to here is
04:24 - you need to add this root
04:26 - to our tree view right so just take our
04:29 - tree view object and then call a method
04:31 - called asset route okay and then you
04:36 - pass your root object in here as an
04:39 - argument okay so this is your code and
04:41 - now one last thing which remains here is
04:43 - we need to add the controller class to
04:46 - this main dot F XML file so go to
04:50 - controller here and add this main dot F
04:53 - XML here and save the code go to your
04:57 - Eclipse IDE refreshed your project and
05:00 - save everything and run your project and
05:04 - now you can see we have a route and
05:06 - inside the route we have some nodes node
05:09 - a node B and node C okay and if you feel
05:14 - that this is little bit long code then
05:17 - you can do something like this
05:20 - so root dot get children and then you
05:25 - can call a method called add all okay
05:29 - and then you can add these nodes one by
05:33 - one as an argument node a node B and
05:36 - node C and you can remove this code and
05:41 - just add a semicolon here and it's also
05:44 - going to give you the same result here
05:47 - so same result right now for example I
05:52 - want to add some sub nodes to a node a
05:55 - so what can I do I'm going to just copy
05:59 - this code and just below this I'm going
06:04 - to add sub node so node a one node B 1
06:11 - and node C 1 for example and this here
06:14 - also node a 1 and node B 1 and node C 1
06:20 - ok and same thing I can do here but
06:24 - these nodes I'm going to add to node a
06:28 - right so there will be the sub nodes for
06:31 - the node a ok and pass these node a node
06:35 - B and note C as an argument so node a1
06:39 - node B 1 and node C 1 ok and save your
06:44 - code and run it and now you have your
06:49 - root and then you have three nodes and
06:52 - under node a you also have three more
06:56 - nodes which are node a one node B 1 and
07:00 - node C 1 ok so in this way you can
07:03 - create root nodes and sub nodes inside a
07:07 - tree view now let's see how we can add
07:10 - icons or images to these roots and nodes
07:14 - of the tree view so what I'm going to do
07:18 - first is I'm going to go to my source
07:20 - package and I'm going to create a new
07:23 - package here and I'm going to name it as
07:25 - IMG and inside this IMG a package or IMG
07:30 - folder I'm going to copy an image so I
07:34 - have this folder icon image so I can
07:37 - drag and drop into this icon package
07:41 - here and just say copy and it will be
07:43 - copied to your image folder ok and now
07:47 - what I'm going to do here is I'm going
07:50 - to create an image object so just write
07:54 - image icon is equal to new image and
08:02 - just close it and just import this Java
08:05 - effects scene image library from here ok
08:09 - and now you need to give some argument
08:13 - to this image constructor so in the
08:15 - constructor what you can pass here is
08:17 - get class first and then get resource so
08:23 - get resource as stream and in the
08:27 - argument of get resource as stream you
08:30 - can give the path of your image so my
08:33 - image is in IMG folder so just write /
08:38 - IMG / your image name so my image name
08:42 - is icon dot PNG right and now I can copy
08:47 - this image icon object and I can go to
08:50 - this tree item
08:53 - instructor here and after the name of
08:55 - the item I can give the new image view
09:01 - so just write new image view and inside
09:07 - the image view constructor you just pass
09:10 - this icon okay and save your code and
09:14 - run it and now I can see this folder
09:19 - image is set to my root okay and same
09:24 - you can do for all the nodes so what you
09:27 - can do here you can just copy this line
09:30 - of code and paste it to every tree item
09:36 - constructor okay and save your code and
09:39 - run it once again and now you can see
09:43 - this icon is added to every node of our
09:48 - tree view okay so in this way you can
09:51 - use tree view in JavaFX
09:53 - in the next video most probably I am
09:55 - going to show you how you can add some
09:58 - action event to the tree view so stay
10:01 - tuned and please recommend subscribe and
10:03 - bye for now

Cleaned transcript:

hello guys welcome to the next video on JavaFX tutorial for beginners in this video we will see how to use tree view in Java FX so let's get started so I have created a project called tree view in which I have this main dot java main controller dot java and mean dot app XML so I think till now you already know what these are and how they can be created okay now what I'm going to do first is I'm going to go to my main controller dot Java file and first of all I will implement initialize Abel here and then I have to implement one method which is initialized right so I will do this so in this initialize I'm going to write the code for the treeview okay but first of all I have to you know add a treeview in my main dot F XML file so I'm going to select my main dot F XML file and I'm going to open it with scene builder now once your scene builder is open go to controls and search for a tree view and in my case it's second last option in controls so drag and drop this tree view into your anchor pane okay and if you want you can resize it okay and what I'm going to do next is I'm going to give our ID to this tree view for example tree view itself and just save your code okay and now go to your Eclipse IDE and in here first of all in the main controller I am going to define this tree view so first of all at the rate FX ml and then tree view and tree view is a less so you need to provide the data type for the list which is string and then just provide the same name which you have defined in your F XML file and import the tree view from JavaFX scene control library okay now next what we are going to do is we are going to go to in the initialize method here and inside this initialize method I'm going to create some tree items okay so tree item which is also a list and I'm going to name it as root okay is equal to new tree item and it takes the name of the item so for example this is our root right now any tree view has a root and nodes so for example I will give you an example this is a tree view so this BC in our case is a root and these are all the nodes right and inside this desktop these are all the sub nodes right so tree has a node and sub node right so in the same way we are creating a root first and then we can create some nodes okay so using this tree item itself you are going to create some node and we will name it as node a and we will name the second as node B and the third as node C okay and same you can give here right so give the name here node a node B and node C now after creating root and node you need to add the nodes to the root right so you have two options one is just take the root object and then call get children and then you can just call add function right and then you can add one note at a time something like this so you can do the same three times and then pass your node like this using add function and now one last thing you need to here is you need to add this root to our tree view right so just take our tree view object and then call a method called asset route okay and then you pass your root object in here as an argument okay so this is your code and now one last thing which remains here is we need to add the controller class to this main dot F XML file so go to controller here and add this main dot F XML here and save the code go to your Eclipse IDE refreshed your project and save everything and run your project and now you can see we have a route and inside the route we have some nodes node a node B and node C okay and if you feel that this is little bit long code then you can do something like this so root dot get children and then you can call a method called add all okay and then you can add these nodes one by one as an argument node a node B and node C and you can remove this code and just add a semicolon here and it's also going to give you the same result here so same result right now for example I want to add some sub nodes to a node a so what can I do I'm going to just copy this code and just below this I'm going to add sub node so node a one node B 1 and node C 1 for example and this here also node a 1 and node B 1 and node C 1 ok and same thing I can do here but these nodes I'm going to add to node a right so there will be the sub nodes for the node a ok and pass these node a node B and note C as an argument so node a1 node B 1 and node C 1 ok and save your code and run it and now you have your root and then you have three nodes and under node a you also have three more nodes which are node a one node B 1 and node C 1 ok so in this way you can create root nodes and sub nodes inside a tree view now let's see how we can add icons or images to these roots and nodes of the tree view so what I'm going to do first is I'm going to go to my source package and I'm going to create a new package here and I'm going to name it as IMG and inside this IMG a package or IMG folder I'm going to copy an image so I have this folder icon image so I can drag and drop into this icon package here and just say copy and it will be copied to your image folder ok and now what I'm going to do here is I'm going to create an image object so just write image icon is equal to new image and just close it and just import this Java effects scene image library from here ok and now you need to give some argument to this image constructor so in the constructor what you can pass here is get class first and then get resource so get resource as stream and in the argument of get resource as stream you can give the path of your image so my image is in IMG folder so just write / IMG / your image name so my image name is icon dot PNG right and now I can copy this image icon object and I can go to this tree item instructor here and after the name of the item I can give the new image view so just write new image view and inside the image view constructor you just pass this icon okay and save your code and run it and now I can see this folder image is set to my root okay and same you can do for all the nodes so what you can do here you can just copy this line of code and paste it to every tree item constructor okay and save your code and run it once again and now you can see this icon is added to every node of our tree view okay so in this way you can use tree view in JavaFX in the next video most probably I am going to show you how you can add some action event to the tree view so stay tuned and please recommend subscribe and bye for now
