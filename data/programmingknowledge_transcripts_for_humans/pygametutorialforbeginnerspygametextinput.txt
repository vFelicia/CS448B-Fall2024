With timestamps:

00:00 - hey everyone so today we're gonna do
00:03 - something new
00:04 - we're gonna display the text that the
00:06 - user inputs so basically whatever we
00:08 - type in we're gonna see that on the pygm
00:10 - window
00:11 - we won't use any new module it's just
00:13 - the utilization of the available modules
00:15 - whatever we have learned till now
00:17 - as per the program's requirements so
00:20 - let's get started
00:22 - so i'll import pi game first
00:25 - i'll write import pi game then pi game
00:28 - dot init to initialize it
00:30 - then i'll have my screen
00:33 - i'll write pi game dot display dot set
00:36 - mode
00:37 - and that would be 500 comma 500
00:40 - then i'll also set up a caption my
00:42 - caption would be user input so i'll
00:44 - write pi game dot display dot set
00:46 - caption user input
00:48 - okay
00:49 - then i'll do the while true loop the
00:52 - game loop i told you last time that i
00:55 - like to
00:57 - make the basic structure first then
01:00 - do the rest of the code then write the
01:02 - rest of the code
01:04 - then i'll have my events loop i'll write
01:07 - for events in pygame.event.get
01:11 - if events type is equal to pi game dot
01:14 - quit
01:15 - i'll check the condition then i'll quit
01:17 - i'll call the quit function of pi game
01:20 - yeah then i'll update this entire thing
01:24 - i'll write pygame.display.update
01:28 - so yeah that's the basic code that's the
01:31 - basic three steps of any pygame program
01:35 - now since i'm saying i want a user
01:37 - inputs i should of course have an empty
01:39 - string to which i'll concatenate
01:41 - whatever the user inputs
01:43 - so let's let me take this user
01:45 - underscore ip as the variable as the
01:47 - empty string
01:49 - then
01:50 - i'll have my font because of course we
01:53 - need to take a font we are working with
01:55 - text and pi game
01:57 - so please
01:58 - remember how we display text on screen
02:00 - it would be similar to that so i'll
02:02 - write font equal spy game dot font
02:05 - dot sis font and you can take any font
02:08 - you like you can take georgia ariel
02:11 - calibri
02:13 - uh i have taken friend script right now
02:15 - and the font size would be 40.
02:18 - cool
02:19 - then
02:20 - since i want a rectangular box in which
02:24 - i'll input the text
02:26 - i will initialize this text box since i
02:29 - want to
02:30 - manipulate this
02:32 - later in the code i'll do the spy game
02:35 - dot i'll use this rect module i'll write
02:38 - pi game dot correct and
02:41 - i'll given the arguments the initial
02:42 - position that would be 75 comma 75
02:46 - and the size of the box let it be 100
02:48 - comma 40 so the width is 100 and height
02:52 - is 40
02:53 - right
02:54 - okay let's not keep this 40 let's make
02:56 - it 50 because i want a margin of 10
03:00 - of 5 each at above and below the text
03:05 - so that
03:07 - things don't overlap and don't seem to
03:08 - be clumsy cool
03:11 - then i'll have this active boolean that
03:14 - will tell me if i can start writing if i
03:17 - can start typing in the text box and
03:19 - what will indicate me this
03:21 - is this color variable so initially this
03:24 - would be purple
03:26 - but when active is true i'll switch this
03:29 - color to red so that it i can know that
03:32 - i can now start typing
03:34 - whenever i take my cursor to inside the
03:37 - text box i'll see i'll make this active
03:40 - to be true so how i do this i'll do this
03:42 - in the while true loop
03:44 - and in the for loop i'll check if my
03:46 - events type is mouse button now
03:49 - then if i'll i'll check if i have
03:52 - clicked my mouse inside that text box
03:55 - okay so i'll write if text box dot
03:57 - collide point
03:59 - and event start position
04:01 - is
04:02 - uh is is true
04:04 - so i'll make active equals true
04:06 - cool
04:09 - otherwise i'll make active equals false
04:11 - maybe you have clicked outside the
04:14 - screen
04:15 - or outside the box so
04:17 - then active should remain false
04:19 - otherwise it should be
04:20 - made sure if my cursor is within the
04:24 - text box
04:25 - fine and now if i've started typing so
04:28 - i'll write if events dot type equal spy
04:31 - game dot key down
04:33 - and if active is true maybe it can be
04:35 - the case that you have clicked inside
04:37 - the box and then clicked outside and
04:40 - then started typing so that would not
04:42 - work
04:43 - then you should not get any text
04:45 - displayed
04:47 - so i'll check if active is true
04:51 - and then i'll have these two other
04:52 - conditions if i press backspace so i'll
04:55 - write if events dot key equals
04:57 - pycam.cave underscore backspace
05:00 - i'll slice the string okay i hope you
05:03 - know about list
05:05 - list and string slicing in
05:07 - python
05:08 - so what i'll do is
05:10 - i'll
05:11 - make user the string this user
05:14 - underscore ipstring
05:16 - as a sliced string
05:19 - i'll slice the last character out of the
05:21 - string and how do we do that
05:23 - we mention the stop index to be -1
05:27 - so the last character is removed now
05:31 - else
05:32 - if we do not press backspace we write a
05:35 - we give any keyboard input we
05:38 - concatenate that unicode okay so
05:42 - i don't need to make several cases for
05:44 - this
05:45 - that if i press this key i should append
05:47 - this or concatenate this to the string i
05:50 - would just write event start unicode so
05:53 - it is very convenient
05:55 - then i'll fill my screen
05:57 - with the color you can take any color
05:59 - i'll write screen dot fill
06:02 - i'll take pink
06:04 - and now it's time i
06:06 - set up the color and get my indications
06:09 - that i can start writing or not so i'll
06:11 - say if active is true
06:13 - i'll
06:15 - take the color i'll assign the color
06:17 - variable the color red and
06:21 - if it is not if active is false
06:24 - i'll write else color is equals to pie
06:27 - pie game dot color purple cool
06:32 - then i'll draw my rectangle so i need to
06:34 - see a box i need to visualize the box so
06:37 - i'll write pygame.draw.rect
06:40 - and
06:41 - i want the screen
06:43 - to be the surface on which i draw
06:45 - and then i'll have this color variable
06:48 - the color of the box
06:50 - then
06:51 - the
06:52 - parameters of this rectangular box are
06:54 - given by text box
06:56 - cool and you of course need to mention
06:59 - the split otherwise you'll see the
07:00 - entire box to be of the purple or red
07:03 - color according to the situation i don't
07:05 - want that i just want the border to be
07:08 - of some color
07:09 - fine
07:10 - then i'll have this surface
07:13 - on which i render my text so you can see
07:16 - i have not rendered it here above but
07:19 - i'll render it in the while loop because
07:21 - every time the user gives an input i
07:23 - want that text on
07:26 - the screen so i've rendered it here
07:29 - and not above outside the while through
07:30 - loop
07:32 - so i'll write surface
07:33 - surf is equals to
07:35 - font.render
07:37 - and what is my message what do i want to
07:40 - output on the screen it's the user
07:41 - underscore ip variable that string i
07:44 - want anti-aliasing to be true and the
07:46 - color of my text i'll take it to be
07:49 - orange you can take any color
07:51 - fine
07:52 - now let me get this surface surf
07:55 - variable onto the text box so i'll do
07:58 - screen dot lit
08:00 - and
08:01 - what i want to get on which surface i
08:04 - want to get surf this text
08:06 - on my text box and i'll have a margin of
08:10 - 5 units so that things don't overlap
08:14 - so i'll write text box dot x so i've
08:18 - accessed the
08:20 - initial
08:21 - x position
08:22 - [Music]
08:24 - x coordinate and added 5 to it and then
08:27 - i'll write text box dot y
08:30 - so i'll
08:31 - increase the y coordinate by 5
08:35 - to have a margin of 5 units
08:37 - and then yeah then i'll also do this
08:41 - thing let me write the code first then
08:42 - you might understand i'll write text box
08:45 - dot w so i've accessed the width
08:48 - and i'll take the maximum of 100 my
08:50 - default
08:52 - width
08:52 - and the surf
08:54 - variables with so surf is my surface the
08:57 - text surface and
08:59 - i'll use the get width method to get my
09:01 - current
09:03 - width of the text
09:04 - and add 10 to it again to have a margin
09:07 - and so that things don't overlap
09:09 - so what i have done is maybe
09:13 - whatever the default size of my text box
09:15 - is you outgrow that maybe whatever the
09:18 - text you have input that's longer than
09:21 - your default box size
09:24 - so if my text is smaller than the width
09:27 - the default width fine no problem
09:30 - and if it is greater than the default
09:33 - bit it will take the width of the text
09:36 - cool and then i'll update this
09:39 - i've already written this
09:41 - and
09:42 - then i'll set up the frame rate since
09:44 - i've taken
09:45 - the
09:47 - clock object already i'll write dot tick
09:50 - and 50. fine
09:53 - so if i run this now i see a purple
09:56 - outline box and if i click i take my
09:58 - cursor inside the box
10:01 - i see the border to change its color and
10:03 - become red and i can start typing now i
10:06 - can type in anything
10:09 - and
10:11 - you can see after a certain length when
10:13 - the
10:14 - width of my text increases the
10:17 - width of the text box also increases so
10:20 - that's what it does this
10:22 - max function on the 38 line
10:24 - it lets you decide when to
10:27 - increase the box size
10:29 - a rectangular box size
10:31 - so everything is working as we wanted to
10:34 - we can type in easily
10:37 - and yeah
10:38 - that's pretty much it about this program
10:41 - i hope you understood whatever the code
10:43 - was whatever we wrote

Cleaned transcript:

hey everyone so today we're gonna do something new we're gonna display the text that the user inputs so basically whatever we type in we're gonna see that on the pygm window we won't use any new module it's just the utilization of the available modules whatever we have learned till now as per the program's requirements so let's get started so i'll import pi game first i'll write import pi game then pi game dot init to initialize it then i'll have my screen i'll write pi game dot display dot set mode and that would be 500 comma 500 then i'll also set up a caption my caption would be user input so i'll write pi game dot display dot set caption user input okay then i'll do the while true loop the game loop i told you last time that i like to make the basic structure first then do the rest of the code then write the rest of the code then i'll have my events loop i'll write for events in pygame.event.get if events type is equal to pi game dot quit i'll check the condition then i'll quit i'll call the quit function of pi game yeah then i'll update this entire thing i'll write pygame.display.update so yeah that's the basic code that's the basic three steps of any pygame program now since i'm saying i want a user inputs i should of course have an empty string to which i'll concatenate whatever the user inputs so let's let me take this user underscore ip as the variable as the empty string then i'll have my font because of course we need to take a font we are working with text and pi game so please remember how we display text on screen it would be similar to that so i'll write font equal spy game dot font dot sis font and you can take any font you like you can take georgia ariel calibri uh i have taken friend script right now and the font size would be 40. cool then since i want a rectangular box in which i'll input the text i will initialize this text box since i want to manipulate this later in the code i'll do the spy game dot i'll use this rect module i'll write pi game dot correct and i'll given the arguments the initial position that would be 75 comma 75 and the size of the box let it be 100 comma 40 so the width is 100 and height is 40 right okay let's not keep this 40 let's make it 50 because i want a margin of 10 of 5 each at above and below the text so that things don't overlap and don't seem to be clumsy cool then i'll have this active boolean that will tell me if i can start writing if i can start typing in the text box and what will indicate me this is this color variable so initially this would be purple but when active is true i'll switch this color to red so that it i can know that i can now start typing whenever i take my cursor to inside the text box i'll see i'll make this active to be true so how i do this i'll do this in the while true loop and in the for loop i'll check if my events type is mouse button now then if i'll i'll check if i have clicked my mouse inside that text box okay so i'll write if text box dot collide point and event start position is uh is is true so i'll make active equals true cool otherwise i'll make active equals false maybe you have clicked outside the screen or outside the box so then active should remain false otherwise it should be made sure if my cursor is within the text box fine and now if i've started typing so i'll write if events dot type equal spy game dot key down and if active is true maybe it can be the case that you have clicked inside the box and then clicked outside and then started typing so that would not work then you should not get any text displayed so i'll check if active is true and then i'll have these two other conditions if i press backspace so i'll write if events dot key equals pycam.cave underscore backspace i'll slice the string okay i hope you know about list list and string slicing in python so what i'll do is i'll make user the string this user underscore ipstring as a sliced string i'll slice the last character out of the string and how do we do that we mention the stop index to be 1 so the last character is removed now else if we do not press backspace we write a we give any keyboard input we concatenate that unicode okay so i don't need to make several cases for this that if i press this key i should append this or concatenate this to the string i would just write event start unicode so it is very convenient then i'll fill my screen with the color you can take any color i'll write screen dot fill i'll take pink and now it's time i set up the color and get my indications that i can start writing or not so i'll say if active is true i'll take the color i'll assign the color variable the color red and if it is not if active is false i'll write else color is equals to pie pie game dot color purple cool then i'll draw my rectangle so i need to see a box i need to visualize the box so i'll write pygame.draw.rect and i want the screen to be the surface on which i draw and then i'll have this color variable the color of the box then the parameters of this rectangular box are given by text box cool and you of course need to mention the split otherwise you'll see the entire box to be of the purple or red color according to the situation i don't want that i just want the border to be of some color fine then i'll have this surface on which i render my text so you can see i have not rendered it here above but i'll render it in the while loop because every time the user gives an input i want that text on the screen so i've rendered it here and not above outside the while through loop so i'll write surface surf is equals to font.render and what is my message what do i want to output on the screen it's the user underscore ip variable that string i want antialiasing to be true and the color of my text i'll take it to be orange you can take any color fine now let me get this surface surf variable onto the text box so i'll do screen dot lit and what i want to get on which surface i want to get surf this text on my text box and i'll have a margin of 5 units so that things don't overlap so i'll write text box dot x so i've accessed the initial x position x coordinate and added 5 to it and then i'll write text box dot y so i'll increase the y coordinate by 5 to have a margin of 5 units and then yeah then i'll also do this thing let me write the code first then you might understand i'll write text box dot w so i've accessed the width and i'll take the maximum of 100 my default width and the surf variables with so surf is my surface the text surface and i'll use the get width method to get my current width of the text and add 10 to it again to have a margin and so that things don't overlap so what i have done is maybe whatever the default size of my text box is you outgrow that maybe whatever the text you have input that's longer than your default box size so if my text is smaller than the width the default width fine no problem and if it is greater than the default bit it will take the width of the text cool and then i'll update this i've already written this and then i'll set up the frame rate since i've taken the clock object already i'll write dot tick and 50. fine so if i run this now i see a purple outline box and if i click i take my cursor inside the box i see the border to change its color and become red and i can start typing now i can type in anything and you can see after a certain length when the width of my text increases the width of the text box also increases so that's what it does this max function on the 38 line it lets you decide when to increase the box size a rectangular box size so everything is working as we wanted to we can type in easily and yeah that's pretty much it about this program i hope you understood whatever the code was whatever we wrote
