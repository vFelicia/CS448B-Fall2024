With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - Python to troll for beginners in the
00:04 - last video we have seen how to use
00:06 - exception handling in Python and we have
00:08 - seen how to use this try accept
00:11 - statement in order to catch the
00:14 - exceptions now in this video also we
00:17 - will talk more about exception handling
00:19 - in Python and we will talk about else
00:23 - and finally statement with this
00:26 - try/except statement so I will be using
00:29 - the same code which I have used in the
00:31 - last video so I will highly recommend
00:34 - you to watch the last video if you
00:35 - haven't seen that now to start with at
00:38 - the end of this try except statement we
00:42 - can also use the else statement so you
00:45 - can just write else and for now I will
00:49 - just print here for example underscore
00:52 - underscore else underscore underscore
00:54 - and also we can use a keyword called
00:59 - finally with our try except statement
01:03 - and here also I am going to just print
01:06 - underscore underscore finally underscore
01:10 - underscore so what does this else and
01:13 - finally statement do let's see by
01:16 - running our program so I'm going to run
01:18 - the program and now I'm going to give
01:21 - some valid input so that our program
01:24 - will not throw any error so I'm going to
01:27 - just divide 10 by 5 and then press ENTER
01:30 - and you will see what is printed here so
01:33 - first of all else is printed then
01:35 - finally is printed and then the result
01:38 - is printed using this print statement
01:40 - and then at the end this and string is
01:44 - printed so in this scenario there was no
01:47 - exception thrown by the code that's why
01:50 - none of these exception statements are
01:54 - printed so you can use L statement
01:56 - whenever your code does not throw any
02:00 - exception so whenever your code doesn't
02:03 - throw any exception else statement will
02:06 - be executed but when this finally
02:09 - statement is executed so let me give you
02:13 - one more
02:13 - are you and then we will discuss about
02:16 - the finally statement and this time I'm
02:19 - going to intentionally write zero here
02:22 - which is going to throw the exception
02:24 - and I'm going to press Enter and you can
02:27 - see zero division error is thrown which
02:30 - is caught here and this statement is
02:33 - printed first and then this finally
02:36 - keyword is printed using this statement
02:39 - and at the end these two lines of code
02:41 - are executed so once again let's talk
02:44 - about the else statement you can see
02:47 - whenever your code throws an exception
02:51 - then this else statement will not be
02:54 - executed the else statement will only be
02:57 - executed whenever your code doesn't
03:00 - throw any exception but what's with
03:03 - finally statement so we have seen in the
03:06 - case of exception this finally is
03:09 - printed and in the case of no exception
03:11 - also this finally is printed so this
03:14 - finally statement is guaranteed to be
03:17 - executed whether exception occurs or it
03:21 - does not occurs so the only code which
03:24 - is guaranteed to be executed in all
03:27 - these lines is the finally statement
03:30 - finally statement is always executed
03:33 - whether your code throws any error or it
03:37 - doesn't throw any error now in which
03:40 - cases you might want to use this finally
03:44 - statement so sometimes whenever you use
03:47 - files you need to close these files
03:51 - after opening them whether the exception
03:55 - occurs or not it is mandatory to close
03:58 - your files and in those cases you can
04:01 - use this finally statement the next
04:04 - example is for example you are using any
04:07 - database and you are opening that
04:10 - database right and for some reason your
04:14 - connection is lost with your database
04:17 - then the exception is thrown and in the
04:21 - finally statement you can reconnect to
04:23 - your database using the reconnect code
04:27 - of the database so in finally statement
04:30 - you would want to execute that code
04:33 - which you think that have to be executed
04:36 - whether error happens or does not
04:39 - happens so in all those scenarios you
04:42 - can use the finally statement now the
04:45 - next question arises is whether we can
04:48 - use this else and the finally statement
04:51 - without the accept statement the answer
04:54 - is you can already see here no so you
04:58 - cannot use this else statement without
05:01 - the accept statement so you have to use
05:04 - accept in order to use this else
05:07 - statement but when I remove the accept
05:11 - and else statements you can see there is
05:15 - no error now so you can use the try and
05:18 - finally without the use of accept or the
05:22 - else statement because the code under
05:25 - finally will always be executed whether
05:28 - your code throws any error or not so
05:31 - it's independent of this accept
05:35 - statement or the else statement so this
05:38 - is how you can use else
05:40 - and finally statements with the try and
05:44 - accept key words I hope you have learned
05:47 - something new this time I will see you
05:49 - in the next video

Cleaned transcript:

hey guys welcome to the next video on Python to troll for beginners in the last video we have seen how to use exception handling in Python and we have seen how to use this try accept statement in order to catch the exceptions now in this video also we will talk more about exception handling in Python and we will talk about else and finally statement with this try/except statement so I will be using the same code which I have used in the last video so I will highly recommend you to watch the last video if you haven't seen that now to start with at the end of this try except statement we can also use the else statement so you can just write else and for now I will just print here for example underscore underscore else underscore underscore and also we can use a keyword called finally with our try except statement and here also I am going to just print underscore underscore finally underscore underscore so what does this else and finally statement do let's see by running our program so I'm going to run the program and now I'm going to give some valid input so that our program will not throw any error so I'm going to just divide 10 by 5 and then press ENTER and you will see what is printed here so first of all else is printed then finally is printed and then the result is printed using this print statement and then at the end this and string is printed so in this scenario there was no exception thrown by the code that's why none of these exception statements are printed so you can use L statement whenever your code does not throw any exception so whenever your code doesn't throw any exception else statement will be executed but when this finally statement is executed so let me give you one more are you and then we will discuss about the finally statement and this time I'm going to intentionally write zero here which is going to throw the exception and I'm going to press Enter and you can see zero division error is thrown which is caught here and this statement is printed first and then this finally keyword is printed using this statement and at the end these two lines of code are executed so once again let's talk about the else statement you can see whenever your code throws an exception then this else statement will not be executed the else statement will only be executed whenever your code doesn't throw any exception but what's with finally statement so we have seen in the case of exception this finally is printed and in the case of no exception also this finally is printed so this finally statement is guaranteed to be executed whether exception occurs or it does not occurs so the only code which is guaranteed to be executed in all these lines is the finally statement finally statement is always executed whether your code throws any error or it doesn't throw any error now in which cases you might want to use this finally statement so sometimes whenever you use files you need to close these files after opening them whether the exception occurs or not it is mandatory to close your files and in those cases you can use this finally statement the next example is for example you are using any database and you are opening that database right and for some reason your connection is lost with your database then the exception is thrown and in the finally statement you can reconnect to your database using the reconnect code of the database so in finally statement you would want to execute that code which you think that have to be executed whether error happens or does not happens so in all those scenarios you can use the finally statement now the next question arises is whether we can use this else and the finally statement without the accept statement the answer is you can already see here no so you cannot use this else statement without the accept statement so you have to use accept in order to use this else statement but when I remove the accept and else statements you can see there is no error now so you can use the try and finally without the use of accept or the else statement because the code under finally will always be executed whether your code throws any error or not so it's independent of this accept statement or the else statement so this is how you can use else and finally statements with the try and accept key words I hope you have learned something new this time I will see you in the next video
