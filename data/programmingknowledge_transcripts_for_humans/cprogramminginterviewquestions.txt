With timestamps:

00:00 - today we are going to take a look at the
00:03 - interview questions that are related to
00:05 - the C programming language these are the
00:09 - common questions that our our interviews
00:13 - require the programming language as a
00:16 - skill so let's diverge into it first
00:20 - question is who is the founder of free
00:24 - language so it fern forest
00:26 - Dennis Ritchie free language was founded
00:31 - by Dennis Ritchie in AT&T bill
00:35 - laboratory next question what is the use
00:40 - of header files in C programming okay so
00:44 - the answer is header files are also
00:47 - known as library files they contain two
00:51 - things first is the definition and
00:54 - second is the prototypes of the
00:56 - functions that are being used in a
00:59 - program each header file contains a set
01:03 - of functions they are included using the
01:07 - preprocessor directives in the C
01:09 - programming language that is hash
01:12 - include for example stdio.h is a header
01:17 - file that can give definition and
01:21 - prototype of the functions like printf
01:24 - and scanf so if you are familiar with
01:27 - coding in C language then you might know
01:31 - that while coding if you want to print
01:34 - anything then you just simply use the
01:37 - printf function and pass some of the
01:39 - arguments like string also for master
01:42 - formatting output for printing the
01:45 - values of the variables but you have no
01:50 - idea that what is this printf function
01:53 - how many arguments does it takes what is
01:57 - the definition of this printf function
01:59 - you simply use it and get the output on
02:02 - the screen so this definition and usage
02:05 - of the printf function is defined in the
02:09 - header file sed IO dot H
02:12 - that is why the very first statement in
02:14 - a C program is hash include stdio.h for
02:19 - the standard input and output in the
02:22 - same way hash include math dot H is a
02:26 - header file that contains the definition
02:28 - of the function that perform
02:31 - mathematical operations such as power
02:34 - sine or tan X occur next question is
02:40 - what is the use of printf and scanf
02:42 - functions in C the answer is printf
02:47 - function is used to print the message or
02:50 - the values on the output screen so
02:53 - basically if you just want to print
02:55 - anything on the output screen you have
02:58 - to use the printf function whether it is
03:01 - a message to the user or any value of
03:05 - the variable on the screen gamma
03:08 - function is used to take input from the
03:11 - user for example here we have declared a
03:15 - variable it because of integer type then
03:19 - using the printf function in double
03:23 - quotes we have written interval U of A
03:26 - now this message will be printed as it
03:30 - is on the output screen it will prompt
03:34 - the user at ok this program wants you to
03:37 - enter the value for a variable called a
03:41 - then next is the scanf statement which
03:45 - will be used to take the input from the
03:49 - user that is whatever the user enters as
03:53 - the value of a will be stored in the
03:56 - memory location that is being preserved
03:59 - by the variable a using this scanf
04:02 - statement then again is a printf
04:05 - statement that is used to print the
04:08 - value of a so here we have seen both the
04:12 - usages of printf function first is to
04:15 - print the message and the second is to
04:17 - print the value of a variable on the
04:20 - output screen
04:22 - hear more details of format ting output
04:26 - that is used to tell the compiler that
04:31 - in place of here the value of e will be
04:34 - inserted now here we can see that the
04:40 - user will get a message enter the value
04:42 - of 8 suppose the user enters 10 as the
04:45 - value then it equals to 10 will be
04:49 - printed next question is which symbol is
04:55 - used as a statement terminator in C so
04:58 - semicolon is that symbol that is used as
05:01 - a statement terminator in sleep that
05:04 - means if one statement is written and
05:06 - after its ending we have to use a
05:09 - semicolon otherwise there will be an
05:11 - arrow as that statement will never be
05:14 - terminated without the use of semicolons
05:18 - next question what are keyboard in free
05:22 - so the answer is keywords already have a
05:26 - predefined meaning to the cecum these
05:31 - words which have a predefined meaning to
05:33 - the C compiler on a keyboard and they
05:38 - should not be used as variables
05:40 - identifiers or constants in C so these
05:45 - are these words that already have some
05:48 - meaning with the C compiler so they
05:50 - cannot be redefined for the C compiler
05:54 - for example we have keywords like for so
05:57 - far as the loop so we cannot just
06:00 - declare a variable like int for that
06:03 - will confuse the final then we have file
06:07 - new struct class if int and so on there
06:12 - are around 32 keywords in C next
06:16 - question how many looping statements are
06:19 - there in C there are three types of
06:22 - loops in c for loop while loop and
06:24 - do-while loop or loop is used when the
06:27 - exact number of iterations as now
06:30 - suppose we have to print the name
06:34 - of five students then what will we do we
06:38 - will execute the statement that print
06:42 - the name of student five signs so here
06:46 - we exactly know that we want to execute
06:49 - the statement five times in this case we
06:51 - will use the for loop makes this divine
06:54 - loop is used while the given condition
06:59 - is true so this loop iterates by the
07:03 - given condition the condition evaluates
07:06 - to true as soon as the condition
07:09 - evaluates to pull this move stops its
07:12 - execution the third is the Dubai loop it
07:16 - first execute the statements and then
07:18 - checks the condition so this I be three
07:24 - types of loops in see next we have what
07:27 - is increasing soil and a great control
07:29 - loop in speed increase control you check
07:33 - the condition when the control enters
07:35 - the loop but example by loop so in by
07:40 - loop first of all we write the while
07:43 - keyboard and then in parentheses we give
07:45 - the conduction not a string of an entry
07:48 - condition that is the entry point for
07:50 - the loop if the control evaluates the
07:53 - condition and the condition evaluates to
07:55 - true then only the control endorse a
07:57 - body of the while loop but if the
08:00 - condition is value each to be false
08:02 - then that new body is not executed so
08:06 - why is an increase control loop next we
08:10 - have exit control loop exit control loop
08:12 - checks the condition when the control
08:14 - exits the loop body example do-while
08:17 - loop as we have already discussed in the
08:19 - previous question
08:20 - Dubai loop Dubai loop is used to first
08:28 - execute some block of statements and
08:31 - then it checks that whether the
08:33 - condition is true or not
08:35 - so the statements are executed and happy
08:38 - time of the exit of the loop body by the
08:41 - control then at that point of time it is
08:45 - check that whether the condition was
08:47 - - of course next question what is the
08:51 - difference between a while and do value
08:54 - in C so first we discuss about my loop
08:57 - it is an incident for loop we already
09:00 - know that statements are not executed if
09:03 - the condition is false
09:04 - that we also know that if the control
09:06 - evaluates the condition to be false and
09:08 - it skips the body of the value no
09:11 - semicolon is present at the end of the
09:13 - while so we write the by keyword and
09:15 - then within values we rank condition and
09:18 - then or the bases are optional
09:22 - like if there is a single statement in
09:24 - the loop bodies and the braces are not
09:26 - required they are optional but if there
09:29 - are multiple signals are required now we
09:33 - have to do by loop it is an exit control
09:36 - loop status conditional things change
09:38 - when the Kings know for the two by loop
09:43 - it is an it with control loop the
09:45 - statements are executed once even if the
09:48 - condition that has given to us is for
09:52 - statements a semicolon at the end of the
09:55 - wire or we write truth then within
09:58 - reasons we write this statement that
10:00 - need to be executed then file key both
10:02 - the different pattern pieces we write
10:05 - the condition and after that we put us
10:06 - in equally braces are always required
10:09 - whether it is a single statement body of
10:11 - the loop or a magical statement body of
10:13 - the loop then the next question is what
10:17 - is the difference between the local
10:19 - variable and global variable in C so
10:22 - first we discuss loop will begin this
10:24 - the local variables are declared inside
10:26 - a function or a block their scope is
10:29 - limited to the function in which the
10:31 - variable is declared variable created
10:34 - wing control in doors the function block
10:36 - and destroyed on the equip values when
10:40 - we expose my statements inside the
10:42 - function properly stowed in our global
10:47 - variable global variables are declared
10:49 - outside of a function or a block both is
10:52 - within the whole program that is or in
10:55 - the program in which the global
10:57 - variables are create
10:59 - so they timely access anywhere within
11:03 - that program life of a variable exists
11:06 - until the program is executing the value
11:10 - can be accessed by any statement of the
11:13 - program and the compiler besides the
11:16 - storage location of the global variables
11:23 - next statement is take the usage of
11:27 - increment and decrement of radio in C so
11:31 - both the increment and decrement
11:33 - operators are the unary operators that
11:36 - else they operate on single value or
11:39 - operand they only need one operand to
11:42 - operate they used to either increase or
11:46 - decrease the value by one so if you are
11:50 - using increment operator it will
11:51 - increase the value by one and if you are
11:54 - using a decrement operator it will
11:55 - decrease the value by one it can be used
11:58 - either in the prefix form or the postfix
12:01 - form here we have taken an example
12:04 - firstly I declared a variable a of
12:07 - integer type on assign 10 as its value
12:09 - value of a becomes 10 now in another
12:14 - variable B which is again of integer
12:17 - type we have spoke necessity there plus
12:20 - this is an increment operator and is in
12:22 - the prefix form means it is written
12:26 - before the value on which it acts so the
12:31 - value on which this increment operator
12:34 - adds respect and since it is written
12:38 - before so it is a prefix increment
12:43 - operator now the value of B will
12:46 - evaluate to be plus plus and till this
12:49 - is the value of a so it will be 11 here
12:53 - the value of a will also gets updated
12:55 - and it becomes 11 in the next statement
13:00 - if C is another very good and B plus
13:04 - your B is the value and plus plus is the
13:08 - increment operator since it is used
13:11 - after the value so it is the postfix
13:14 - increment of freedom now the value C
13:18 - will be evaluated to be 11 which is the
13:20 - value of B plus plus data firstly 11
13:29 - will be students

Cleaned transcript:

today we are going to take a look at the interview questions that are related to the C programming language these are the common questions that our our interviews require the programming language as a skill so let's diverge into it first question is who is the founder of free language so it fern forest Dennis Ritchie free language was founded by Dennis Ritchie in AT&T bill laboratory next question what is the use of header files in C programming okay so the answer is header files are also known as library files they contain two things first is the definition and second is the prototypes of the functions that are being used in a program each header file contains a set of functions they are included using the preprocessor directives in the C programming language that is hash include for example stdio.h is a header file that can give definition and prototype of the functions like printf and scanf so if you are familiar with coding in C language then you might know that while coding if you want to print anything then you just simply use the printf function and pass some of the arguments like string also for master formatting output for printing the values of the variables but you have no idea that what is this printf function how many arguments does it takes what is the definition of this printf function you simply use it and get the output on the screen so this definition and usage of the printf function is defined in the header file sed IO dot H that is why the very first statement in a C program is hash include stdio.h for the standard input and output in the same way hash include math dot H is a header file that contains the definition of the function that perform mathematical operations such as power sine or tan X occur next question is what is the use of printf and scanf functions in C the answer is printf function is used to print the message or the values on the output screen so basically if you just want to print anything on the output screen you have to use the printf function whether it is a message to the user or any value of the variable on the screen gamma function is used to take input from the user for example here we have declared a variable it because of integer type then using the printf function in double quotes we have written interval U of A now this message will be printed as it is on the output screen it will prompt the user at ok this program wants you to enter the value for a variable called a then next is the scanf statement which will be used to take the input from the user that is whatever the user enters as the value of a will be stored in the memory location that is being preserved by the variable a using this scanf statement then again is a printf statement that is used to print the value of a so here we have seen both the usages of printf function first is to print the message and the second is to print the value of a variable on the output screen hear more details of format ting output that is used to tell the compiler that in place of here the value of e will be inserted now here we can see that the user will get a message enter the value of 8 suppose the user enters 10 as the value then it equals to 10 will be printed next question is which symbol is used as a statement terminator in C so semicolon is that symbol that is used as a statement terminator in sleep that means if one statement is written and after its ending we have to use a semicolon otherwise there will be an arrow as that statement will never be terminated without the use of semicolons next question what are keyboard in free so the answer is keywords already have a predefined meaning to the cecum these words which have a predefined meaning to the C compiler on a keyboard and they should not be used as variables identifiers or constants in C so these are these words that already have some meaning with the C compiler so they cannot be redefined for the C compiler for example we have keywords like for so far as the loop so we cannot just declare a variable like int for that will confuse the final then we have file new struct class if int and so on there are around 32 keywords in C next question how many looping statements are there in C there are three types of loops in c for loop while loop and dowhile loop or loop is used when the exact number of iterations as now suppose we have to print the name of five students then what will we do we will execute the statement that print the name of student five signs so here we exactly know that we want to execute the statement five times in this case we will use the for loop makes this divine loop is used while the given condition is true so this loop iterates by the given condition the condition evaluates to true as soon as the condition evaluates to pull this move stops its execution the third is the Dubai loop it first execute the statements and then checks the condition so this I be three types of loops in see next we have what is increasing soil and a great control loop in speed increase control you check the condition when the control enters the loop but example by loop so in by loop first of all we write the while keyboard and then in parentheses we give the conduction not a string of an entry condition that is the entry point for the loop if the control evaluates the condition and the condition evaluates to true then only the control endorse a body of the while loop but if the condition is value each to be false then that new body is not executed so why is an increase control loop next we have exit control loop exit control loop checks the condition when the control exits the loop body example dowhile loop as we have already discussed in the previous question Dubai loop Dubai loop is used to first execute some block of statements and then it checks that whether the condition is true or not so the statements are executed and happy time of the exit of the loop body by the control then at that point of time it is check that whether the condition was of course next question what is the difference between a while and do value in C so first we discuss about my loop it is an incident for loop we already know that statements are not executed if the condition is false that we also know that if the control evaluates the condition to be false and it skips the body of the value no semicolon is present at the end of the while so we write the by keyword and then within values we rank condition and then or the bases are optional like if there is a single statement in the loop bodies and the braces are not required they are optional but if there are multiple signals are required now we have to do by loop it is an exit control loop status conditional things change when the Kings know for the two by loop it is an it with control loop the statements are executed once even if the condition that has given to us is for statements a semicolon at the end of the wire or we write truth then within reasons we write this statement that need to be executed then file key both the different pattern pieces we write the condition and after that we put us in equally braces are always required whether it is a single statement body of the loop or a magical statement body of the loop then the next question is what is the difference between the local variable and global variable in C so first we discuss loop will begin this the local variables are declared inside a function or a block their scope is limited to the function in which the variable is declared variable created wing control in doors the function block and destroyed on the equip values when we expose my statements inside the function properly stowed in our global variable global variables are declared outside of a function or a block both is within the whole program that is or in the program in which the global variables are create so they timely access anywhere within that program life of a variable exists until the program is executing the value can be accessed by any statement of the program and the compiler besides the storage location of the global variables next statement is take the usage of increment and decrement of radio in C so both the increment and decrement operators are the unary operators that else they operate on single value or operand they only need one operand to operate they used to either increase or decrease the value by one so if you are using increment operator it will increase the value by one and if you are using a decrement operator it will decrease the value by one it can be used either in the prefix form or the postfix form here we have taken an example firstly I declared a variable a of integer type on assign 10 as its value value of a becomes 10 now in another variable B which is again of integer type we have spoke necessity there plus this is an increment operator and is in the prefix form means it is written before the value on which it acts so the value on which this increment operator adds respect and since it is written before so it is a prefix increment operator now the value of B will evaluate to be plus plus and till this is the value of a so it will be 11 here the value of a will also gets updated and it becomes 11 in the next statement if C is another very good and B plus your B is the value and plus plus is the increment operator since it is used after the value so it is the postfix increment of freedom now the value C will be evaluated to be 11 which is the value of B plus plus data firstly 11 will be students
