With timestamps:

00:00 - hello guys welcome to the next video on
00:02 - Java fix tutorial for beginners in this
00:04 - video we will see how to use pie charts
00:07 - in Java FX so let's get started
00:10 - I have created the sample project which
00:12 - is called pie chart and in my
00:14 - application package I have this main dot
00:16 - Java class in which I am calling this
00:19 - main dot F XML file which I have created
00:22 - here which is right now blank and I also
00:26 - have this main controller dot Java class
00:29 - okay
00:30 - so let's add some code first and then we
00:34 - are going to add our pie chart to the
00:37 - effects ml file so go to your main
00:39 - controller dot Java class and in here
00:43 - first of all we are going to add this
00:45 - pie chart variable so just right at the
00:48 - rate FX ml then pie chart and then give
00:55 - the name to your pie chart for example
00:57 - pie chart and then what we are going to
01:02 - do is we are going to create a method
01:05 - which is going to be a public void
01:09 - method so it's going to be void and the
01:13 - name of the method I'm going to name it
01:15 - as BT and 1 for example ok or BTN right
01:21 - and as an argument I am going to give
01:23 - the action event class variable and just
01:28 - declare this event and inside this
01:32 - method what we are going to do is we are
01:35 - going to create an observable list ok so
01:40 - just create an observable list and this
01:47 - list takes this template argument so the
01:51 - template out argument here will be pie
01:54 - chart data ok so just write data is
01:58 - going to give you this error so just
02:01 - click this bulb here and you can see it
02:05 - has this Java effects scene chart dot
02:08 - pie chart so just add this import here
02:12 - and it's going to
02:13 - disappear your error and then give the
02:17 - name to your observable list then
02:19 - effects collection dot observable are a
02:25 - list and then as in constructor argument
02:30 - what you can do is you can add the spice
02:34 - chart you know data so how you can add
02:38 - pie chart data you can just write new
02:41 - pie chart dot data and this takes two
02:47 - argument first is the section of the pie
02:51 - chart so for example the name of the
02:54 - section right so for example we want to
02:57 - make the pie chart for a popular
02:59 - programming languages right so for
03:02 - example first language is Java and the
03:06 - value of it is 50 for example and then
03:09 - we will give the comma and same we will
03:13 - copy maybe 4 times more and the second
03:17 - language will be c++ third language will
03:21 - be pi
03:22 - Thun fourth will be C sharp and fifth
03:28 - will be C for example okay and I will
03:31 - give some values to these languages 20
03:36 - 30 40 and for example this has 15 okay
03:43 - and remove this comma from here so now
03:46 - we have this observable list so we just
03:50 - need to take our pie chart and then we
03:54 - will just say set data and then set this
04:00 - list variable here okay so this is our
04:05 - code and now let's add it our F XML file
04:09 - to perform this code so right click on
04:12 - your main dot F XML file and open it in
04:15 - scene builder and in here first of all I
04:18 - will go to the layout and select the
04:21 - anchor pin and I'm going to change the
04:23 - width and height of this anchor pin to
04:27 - 500 by 500 and then I will go to the
04:31 - chart category here and I'm going to
04:34 - drag and drop this chart control here
04:37 - okay and what I'm going to do next is
04:41 - I'm going to take a button from controls
04:46 - and drag and drop here okay and the text
04:49 - of this button I'm going to change it as
04:52 - load chart and the ID of this pie chart
04:58 - will be the same as we have given in the
05:02 - main controller okay
05:03 - select your pie chart and go to code and
05:07 - give the FX ID here and save your code
05:11 - and then we will connect our controller
05:14 - with the main dot affectional file so go
05:17 - to controller and then go to application
05:19 - dot main controller and then what we are
05:22 - going to do is we are going to select
05:24 - our button and then we will go to on
05:27 - action method here and select our method
05:31 - which we have created which is this one
05:33 - right save the code and refresh your
05:38 - project
05:38 - and then run your project so right click
05:41 - run as java application and now our app
05:47 - is running so when I click this load
05:49 - chart button it's going to load this pie
05:53 - chart something like this okay and you
05:56 - can see it's showing these names Python
06:01 - C++ C sharp C and Java and the section
06:05 - according to their values right so the
06:08 - most significant value here is for Java
06:12 - which is 50 so it's taking the most of
06:14 - the pie chart and the least is I think
06:17 - c-sharp which is taking the least
06:19 - section of the pie okay now there are
06:23 - some properties of pie chart which you
06:25 - can change to you know change the look
06:28 - and feel of the pie chart so I'm going
06:31 - to close my app and I'm going to open my
06:34 - main dot F XML file in scene builder and
06:37 - I'm going to select my pie chart and the
06:40 - go to the properties here so the first
06:43 - property you can see here is the title
06:45 - so you can just give any title to your
06:48 - pie chart for example pie chart and
06:51 - going it's going to show it here
06:54 - okay now this title you can show on the
06:58 - top or the bottom or left or right using
07:01 - this property called a title side okay
07:05 - so when you select bottom it's going to
07:09 - show the title at the bottom or if you
07:12 - choose a left it's going to show the
07:14 - title on the left or the right right so
07:18 - I'm going to choose this top now here is
07:22 - the property called animated if you
07:24 - check this then your pie chart will be
07:28 - animated when it's created or otherwise
07:32 - if you uncheck this then this animation
07:34 - will no longer be visible okay now
07:39 - legend what is a legend first of all so
07:43 - when you run your app once again and
07:46 - this is the lag legend so here you can
07:51 - see this color and the name of your
07:54 - language color and the name of your
07:57 - language so this is your legend and you
08:00 - can also change the property of the
08:03 - legend first of all if you want to you
08:06 - know show the legend then keep this
08:09 - checkbox checked otherwise just uncheck
08:12 - this and then save your code and refresh
08:17 - your project and run it once again and
08:22 - click your button and now you can see
08:26 - there is no legend
08:27 - okay so using this selection checkbox
08:31 - you can choose if you want to show the
08:34 - legend or not now legend can be at the
08:38 - bottom or at the top or on the left or
08:42 - on the right okay so for example we want
08:45 - to show the legend on the left just save
08:48 - your code and refresh your project and
08:52 - run it
08:54 - and when I click this load chart it's
08:56 - going to show the legend on the left
08:58 - hand side see here right and there are
09:02 - some more properties here you can see
09:04 - the label visible and what is label here
09:09 - so when you run your app and when you
09:13 - see this label for your sections for
09:18 - example here it's printer C++ or Python
09:21 - or C sharp these are the labels right
09:24 - and you can choose if you want to show
09:28 - the labels or not and there is a
09:31 - property called label line length so
09:34 - what is this label line length is this
09:37 - line length which you know joins your
09:41 - section to the label this is the line
09:44 - you can see right so for example we can
09:47 - set this length to 1 here and then save
09:52 - your code and refresh your project and
09:58 - right now you can see this label line is
10:01 - little bit bigger right which is of
10:04 - magnitude 20 now when I rerun my code
10:08 - and load the chart you can see the label
10:14 - line is now very short because it's
10:18 - magnitude is 1 okay so that's the label
10:22 - line so I will make it 20 once again now
10:27 - there is a property called clockwise
10:30 - here right so once again when I run the
10:34 - project and load my chart you will see
10:38 - here it animates clockwise you see right
10:43 - so it animates in the clockwise
10:46 - direction
10:47 - now when you uncheck this option and
10:49 - then save your code and refresh your
10:53 - project and run it once again and load
10:57 - chart now you can see it an image
11:01 - through the anti-clockwise right so this
11:05 - is for
11:07 - at animation so you can make a check or
11:10 - unchecked it's on you okay so this is
11:13 - how you can use pie charts in Java FX I
11:17 - hope you've enjoyed this video please
11:18 - rate comment subscribe and

Cleaned transcript:

hello guys welcome to the next video on Java fix tutorial for beginners in this video we will see how to use pie charts in Java FX so let's get started I have created the sample project which is called pie chart and in my application package I have this main dot Java class in which I am calling this main dot F XML file which I have created here which is right now blank and I also have this main controller dot Java class okay so let's add some code first and then we are going to add our pie chart to the effects ml file so go to your main controller dot Java class and in here first of all we are going to add this pie chart variable so just right at the rate FX ml then pie chart and then give the name to your pie chart for example pie chart and then what we are going to do is we are going to create a method which is going to be a public void method so it's going to be void and the name of the method I'm going to name it as BT and 1 for example ok or BTN right and as an argument I am going to give the action event class variable and just declare this event and inside this method what we are going to do is we are going to create an observable list ok so just create an observable list and this list takes this template argument so the template out argument here will be pie chart data ok so just write data is going to give you this error so just click this bulb here and you can see it has this Java effects scene chart dot pie chart so just add this import here and it's going to disappear your error and then give the name to your observable list then effects collection dot observable are a list and then as in constructor argument what you can do is you can add the spice chart you know data so how you can add pie chart data you can just write new pie chart dot data and this takes two argument first is the section of the pie chart so for example the name of the section right so for example we want to make the pie chart for a popular programming languages right so for example first language is Java and the value of it is 50 for example and then we will give the comma and same we will copy maybe 4 times more and the second language will be c++ third language will be pi Thun fourth will be C sharp and fifth will be C for example okay and I will give some values to these languages 20 30 40 and for example this has 15 okay and remove this comma from here so now we have this observable list so we just need to take our pie chart and then we will just say set data and then set this list variable here okay so this is our code and now let's add it our F XML file to perform this code so right click on your main dot F XML file and open it in scene builder and in here first of all I will go to the layout and select the anchor pin and I'm going to change the width and height of this anchor pin to 500 by 500 and then I will go to the chart category here and I'm going to drag and drop this chart control here okay and what I'm going to do next is I'm going to take a button from controls and drag and drop here okay and the text of this button I'm going to change it as load chart and the ID of this pie chart will be the same as we have given in the main controller okay select your pie chart and go to code and give the FX ID here and save your code and then we will connect our controller with the main dot affectional file so go to controller and then go to application dot main controller and then what we are going to do is we are going to select our button and then we will go to on action method here and select our method which we have created which is this one right save the code and refresh your project and then run your project so right click run as java application and now our app is running so when I click this load chart button it's going to load this pie chart something like this okay and you can see it's showing these names Python C++ C sharp C and Java and the section according to their values right so the most significant value here is for Java which is 50 so it's taking the most of the pie chart and the least is I think csharp which is taking the least section of the pie okay now there are some properties of pie chart which you can change to you know change the look and feel of the pie chart so I'm going to close my app and I'm going to open my main dot F XML file in scene builder and I'm going to select my pie chart and the go to the properties here so the first property you can see here is the title so you can just give any title to your pie chart for example pie chart and going it's going to show it here okay now this title you can show on the top or the bottom or left or right using this property called a title side okay so when you select bottom it's going to show the title at the bottom or if you choose a left it's going to show the title on the left or the right right so I'm going to choose this top now here is the property called animated if you check this then your pie chart will be animated when it's created or otherwise if you uncheck this then this animation will no longer be visible okay now legend what is a legend first of all so when you run your app once again and this is the lag legend so here you can see this color and the name of your language color and the name of your language so this is your legend and you can also change the property of the legend first of all if you want to you know show the legend then keep this checkbox checked otherwise just uncheck this and then save your code and refresh your project and run it once again and click your button and now you can see there is no legend okay so using this selection checkbox you can choose if you want to show the legend or not now legend can be at the bottom or at the top or on the left or on the right okay so for example we want to show the legend on the left just save your code and refresh your project and run it and when I click this load chart it's going to show the legend on the left hand side see here right and there are some more properties here you can see the label visible and what is label here so when you run your app and when you see this label for your sections for example here it's printer C++ or Python or C sharp these are the labels right and you can choose if you want to show the labels or not and there is a property called label line length so what is this label line length is this line length which you know joins your section to the label this is the line you can see right so for example we can set this length to 1 here and then save your code and refresh your project and right now you can see this label line is little bit bigger right which is of magnitude 20 now when I rerun my code and load the chart you can see the label line is now very short because it's magnitude is 1 okay so that's the label line so I will make it 20 once again now there is a property called clockwise here right so once again when I run the project and load my chart you will see here it animates clockwise you see right so it animates in the clockwise direction now when you uncheck this option and then save your code and refresh your project and run it once again and load chart now you can see it an image through the anticlockwise right so this is for at animation so you can make a check or unchecked it's on you okay so this is how you can use pie charts in Java FX I hope you've enjoyed this video please rate comment subscribe and
