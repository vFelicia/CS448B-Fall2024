With timestamps:

00:00 - hello everyone welcome to programming
00:01 - knowledge so this is the third tutorial
00:03 - of Django series so I again welcome you
00:06 - all to programming knowledge so like in
00:08 - the two previous two two two tutorial I
00:10 - showed you how you can sell Django on
00:11 - your local machine as well as how you
00:13 - can utilize the Django project as well
00:15 - as the Django app so if you have any
00:16 - doubt regarding that you can please
00:18 - refer to those two videos and in the
00:20 - second you the second video I showed you
00:22 - how you can initialize virtual
00:24 - environment in your project what was the
00:25 - importance of virtual environment as
00:27 - well and how you can create a
00:29 - requirement so tht file as well so that
00:31 - was very important so so like I would
00:35 - like to show you one thing that from now
00:37 - we are going to work on vs code and this
00:39 - is my protect structure and I would like
00:42 - to show you a graphical view of my
00:43 - project as well so this is my project
00:45 - with the name my first project I have an
00:48 - app named my first app and I have
00:50 - created my env and here you can see I
00:53 - have activated my virtual environment
00:55 - variable and I have created a
00:57 - requirement short tht file as well so if
01:01 - you have any doubts regarding this one
01:03 - if this thing seems new to you so you
01:05 - can do to refer to my previous two
01:07 - videos so what I'm going to show you so
01:10 - this is going to be very interesting
01:11 - tutorial from now we are going to be
01:14 - learning on a this is going to be very
01:16 - hands-on tutorial so and it's going to
01:18 - be very interesting also so what I'm
01:20 - going to show is the you is at first you
01:22 - would define a URL scheme and then we
01:24 - will generate a response to it so what
01:26 - we need to do is I would like to have a
01:30 - brief overview of my structure as well
01:32 - so this is I'm inside my first project
01:34 - folder so there are various files with
01:36 - the extension dot py files to one of the
01:38 - bonus file here is you are taught py
01:40 - files so like in this tutorial we are
01:42 - going to be working with this file so so
01:45 - before and the second file is setting to
01:47 - our py file so first thing you need to
01:50 - do this move to your settings your py
01:52 - file and inside the installed apps you
01:58 - have to mention the half you have
02:00 - created with the name like this is the
02:04 - app which I made so you have to mention
02:06 - your app name inside settings or py file
02:09 - my first
02:11 - ah okay and now what I am Telling You
02:15 - the second thing you need to do is yeah
02:18 - like there is a you are else lot people
02:20 - filed in this in this directory so what
02:24 - you need to do is create one another URL
02:27 - does P by file so like this as there are
02:30 - two right this is my first project so
02:32 - there is already New York's for py file
02:34 - inside the project directory because I
02:36 - told you that inside a single Django
02:38 - project there can be multiple hats so
02:40 - you need to create a URL store to your
02:41 - file for this app as well so what you
02:43 - need to do click here new file you are
02:47 - el URLs dot P Y so I have created this
02:54 - file and now what I am going to tell you
02:57 - that there is no to yours wrote py file
02:59 - one is inside my diet keep my first app
03:01 - and one is inside my directing my first
03:04 - project so I would also have a graphical
03:06 - view to it so I will inside my first
03:08 - project folder and this is you already
03:10 - your 4 py file inside it and now there
03:14 - is a URL to add 5 py file in this folder
03:16 - as well ok so so you can see that now
03:21 - there are two URLs or py file one is
03:23 - inside this folder and one is inside
03:27 - this folder so what I need to mention my
03:30 - Django project that you need to include
03:32 - you as you taught py file which is
03:34 - inside my folder called my first app so
03:37 - first you need to to include this you
03:38 - would type here include and second path
03:47 - include and you have to mention here my
03:51 - first app the dot URL so this is the
03:58 - that I mentioned that under the root
04:00 - directory you have to include my first
04:02 - app dot URLs so this will be divine now
04:05 - I would define the URL here so yeah from
04:12 - there you can use the first line you
04:14 - need to pack this from Django or URLs
04:16 - import path so I would move to here from
04:20 - Django dot URL
04:25 - import path and then you need to define
04:30 - the list of URL patterns okay so this
04:38 - looks pretty same as this also because
04:40 - here you I can see they have included
04:42 - this from Django dot URLs import path as
04:44 - well and URL patterns as a list so this
04:47 - looks pretty fine here now I would
04:51 - define the first path to be this but
04:55 - before I want to tell you then the URL
04:58 - will only work when there is a function
05:00 - call defined to that particular URL so
05:03 - for that what you need to do is for you
05:07 - what I'm going to tell you you need to
05:08 - add this line because this URL provides
05:12 - present here so you would type from dot
05:16 - from current directory import Muse so
05:23 - what is the importance of these two
05:25 - lines is that the you have to create
05:28 - your views here so what they mean by is
05:31 - that for this particular URL you have to
05:34 - mention a function call so I would do
05:38 - one thing that I would mention this path
05:43 - and called views taught my function call
05:52 - okay and I would name this as index so
05:57 - name index is used to refer the path
06:00 - name so I would tell you the importance
06:03 - of an index so if I would tell you the
06:06 - importance of name how why we mention
06:07 - names on what when they are used when
06:09 - you and how can we use them in oblique
06:11 - temper how can we use them in the
06:13 - templates okay so in what I am telling
06:18 - you that this pad path to call views
06:23 - toward my function code this could be
06:25 - any function name with the name and I
06:27 - have given this name that this / URL URL
06:31 - has a specific name for index okay so
06:34 - now you would move to use dot PDF file
06:36 - and define a function
06:38 - my function call and this takes at
06:47 - request as a parameter so this is good
06:50 - you have to define this because you are
06:52 - making a request to this function call
06:53 - and now to generate a response what you
06:58 - need to type is you need to type you
07:00 - need to import two there are two types
07:01 - of responses one is HTTP response and
07:04 - other is JSON response so what you need
07:06 - to type is from Django dot HTTP import
07:13 - catch the tp3 spawns
07:18 - as well as JSON response so I think now
07:27 - it should work pretty fine and I would
07:29 - generate a response return HTTP response
07:34 - of hello sorry
07:38 - hello world so now I would the so I
07:44 - would first have a quick recap of this
07:46 - that I have first included euros or py
07:50 - file the first thing I did is include a
07:52 - map my app inside this think I have
07:55 - included to my first I brought us inside
07:57 - the my user profile of my first project
07:59 - then I mentioned this part and I made a
08:04 - function call to this path using the
08:07 - views file because in the views of I
08:08 - used what Peter value mentioned you
08:10 - mentioned your function call so I meant
08:12 - my function call and I named this
08:15 - particular URL as index and inside my
08:19 - first function code I generated a HTTP
08:22 - response so I think this should this
08:25 - should work fine now I would say Python
08:28 - manage dot py run server so this should
08:37 - go fine okay the server has started so I
08:42 - would okay yeah this looks pretty good
08:44 - so you can see you can see because I
08:50 - didn't mention since
08:51 - I didn't mention any any word here so it
08:54 - mentioned as their as a root directory
08:55 - so when I passed on this URL it when I
09:00 - caught my URL this particular URL the
09:04 - root directory so it called my function
09:06 - call inside my views dot py file and I
09:09 - when I went to the views toward py file
09:11 - so it had a request as a parameter and
09:14 - it generated HTTP response of this hello
09:16 - world so so this was the first thing
09:19 - know what you can do what you can do you
09:21 - can pass parameters as well so what you
09:23 - need to do I wanna show you how one
09:26 - thing for sure another thing what you
09:29 - can do is you can copy this line and you
09:38 - can name this as about and you can call
09:44 - this my function about and you can give
09:49 - this as about okay and now I'm making a
09:53 - path code about and boot on my function
09:56 - about so it says my first AB dot views
09:59 - has no attribute my function about so I
10:01 - need to define that so I would define
10:04 - this as well okay for quick for quick
10:08 - overview I would copy this and I will
10:11 - generate about response okay and I would
10:21 - now call this function my function about
10:24 - it so what I did here is I made its the
10:28 - request to slash about from my root
10:31 - directory and it called my function
10:32 - about and I've given I give this URL
10:35 - particular am about and it went to huge
10:38 - or py file and called this particular
10:40 - function and I would go back to my
10:44 - server so right now on the root this it
10:47 - is generating hello world but as soon as
10:49 - I as I made it requests to the about
10:52 - page so it says about response so this
10:55 - is pretty good so now you can understand
10:57 - the theory so you can also do one thing
11:03 - now what you can do is copy this line as
11:07 - well and name this as ID my function or
11:15 - you can add end or you can say in this
11:22 - simply a little blue dot add no I am
11:26 - telling this route what I can mention to
11:30 - showed you like you can also pass
11:32 - parameters as well so to pass integer I
11:37 - would type like this so I would move
11:39 - back to this and type end like you have
11:47 - to mention the end then a colon then age
11:50 - so this is going to be int a then in to
11:59 - be okay and now I have to define the
12:05 - views dot add so I will go to Def and
12:10 - not the force parameter which is going
12:12 - to be request the second parameter
12:14 - basically to the integer which I am
12:16 - taking which was suppose I'm here ain't
12:18 - aiming as X or you can for simplicity
12:21 - for use a then B so what you need to do
12:26 - is return HTTP response of a plus B so I
12:39 - think it should work now you know what I
12:43 - am telling you to add 20 days first one
12:47 - is going to be one and second one is
12:49 - going to be two so it should work yeah
12:51 - now I hacked it has given me two
12:54 - integers of one and two and it returned
12:57 - initiative it responds to the output
12:59 - three the one thing I wanted to show you
13:01 - will this work if I change this a comma
13:04 - B to X comma Y X plus y so this is all a
13:11 - part of learning process so I should
13:14 - make sure the server is running yes the
13:15 - survey
13:17 - the first age thing is I will move to
13:20 - this yeah it's working now I would move
13:23 - to this about yes working now I would
13:26 - move to that part
13:28 - add 4 comma 5 so this doesn't work ok so
13:36 - why this didn't work because I had
13:41 - mentioned here in the US retrieve a file
13:45 - that I'm going to get a as a parameter
13:48 - then B as a parameter so what I need to
13:52 - mention here that inside my views are
13:55 - pure file
13:56 - I had to strictly mention this as a
13:58 - comma B so so make sure you be careful
14:03 - about this now now I will restart the
14:06 - server and then refresh this fade now
14:10 - this was because I wanted to make sure
14:13 - below this that inside a I mentioned
14:16 - here as a and ensured mentioning a
14:17 - script we need so input parameters to my
14:20 - request part would be a comma B as well
14:23 - so then I generated actually build upon
14:25 - so a plus B okay so this was look good
14:28 - now the first second thing you need to
14:30 - do any you can do you create a found URL
14:33 - so I would click quickly create this
14:35 - path intro the first matter is going to
14:43 - string name and the second one is going
14:48 - to end int with an age and I would call
14:53 - views taught intro with the name
14:57 - particular name to this URL as intro so
15:02 - this looks good so this would throw
15:04 - because I am not defined in true in my
15:06 - views of your file so I wouldn't move it
15:08 - back to my so this time I'm going to
15:10 - show your JSON respond define into as a
15:14 - function taking first parameter as a
15:16 - request the second has name so let me
15:20 - check what have defined first so I have
15:21 - defined name as four than age a second
15:23 - the name is going to be first and age is
15:25 - going to the second now
15:29 - I would define return a JSON response so
15:34 - to generate it as JSON a spoon I need to
15:36 - define a dictionary so the Sherri's
15:39 - efficiently key value pairs so could be
15:42 - my dictionary is going to be variable so
15:49 - with this name is going to be named here
15:53 - and eh sorry age is going to be it age
16:01 - here and I would return a JSON response
16:07 - oh here so I wanted to show you
16:09 - difference between the JSON response so
16:13 - search form is an error because I think
16:16 - it's sense because I defined used or
16:20 - intro now it should work particularly
16:21 - fine now it has started so what I am
16:26 - showing you I will move to intro name as
16:33 - Jack and a judge 25 so it will this work
16:38 - so yeah you here you can see that now it
16:41 - returned me and JSON response and I'm
16:43 - showing you particular here like here it
16:45 - shows that this is an injection responds
16:47 - with the name and EH and for the you can
16:50 - show the show the raw data as well so
16:53 - this is an this shows you how JSON
16:55 - object looks like and and in the JSON
16:58 - format you have just for you can hear
17:00 - that name is Jack and the age is 25 and
17:03 - this is a JSON object so like in this
17:06 - way you can you create a mood more URLs
17:09 - so basically we here I covered the HTTP
17:11 - response as well as the JSON response so
17:14 - so like so to generate any a free
17:18 - generator will request so why are you
17:21 - are L so we generate a response to pit
17:23 - as well so like this is a so thank you
17:26 - guys thank you so much so I am going to
17:30 - be back with another video very short
17:32 - and very soon thank you so much thank
17:34 - you so much

Cleaned transcript:

hello everyone welcome to programming knowledge so this is the third tutorial of Django series so I again welcome you all to programming knowledge so like in the two previous two two two tutorial I showed you how you can sell Django on your local machine as well as how you can utilize the Django project as well as the Django app so if you have any doubt regarding that you can please refer to those two videos and in the second you the second video I showed you how you can initialize virtual environment in your project what was the importance of virtual environment as well and how you can create a requirement so tht file as well so that was very important so so like I would like to show you one thing that from now we are going to work on vs code and this is my protect structure and I would like to show you a graphical view of my project as well so this is my project with the name my first project I have an app named my first app and I have created my env and here you can see I have activated my virtual environment variable and I have created a requirement short tht file as well so if you have any doubts regarding this one if this thing seems new to you so you can do to refer to my previous two videos so what I'm going to show you so this is going to be very interesting tutorial from now we are going to be learning on a this is going to be very handson tutorial so and it's going to be very interesting also so what I'm going to show is the you is at first you would define a URL scheme and then we will generate a response to it so what we need to do is I would like to have a brief overview of my structure as well so this is I'm inside my first project folder so there are various files with the extension dot py files to one of the bonus file here is you are taught py files so like in this tutorial we are going to be working with this file so so before and the second file is setting to our py file so first thing you need to do this move to your settings your py file and inside the installed apps you have to mention the half you have created with the name like this is the app which I made so you have to mention your app name inside settings or py file my first ah okay and now what I am Telling You the second thing you need to do is yeah like there is a you are else lot people filed in this in this directory so what you need to do is create one another URL does P by file so like this as there are two right this is my first project so there is already New York's for py file inside the project directory because I told you that inside a single Django project there can be multiple hats so you need to create a URL store to your file for this app as well so what you need to do click here new file you are el URLs dot P Y so I have created this file and now what I am going to tell you that there is no to yours wrote py file one is inside my diet keep my first app and one is inside my directing my first project so I would also have a graphical view to it so I will inside my first project folder and this is you already your 4 py file inside it and now there is a URL to add 5 py file in this folder as well ok so so you can see that now there are two URLs or py file one is inside this folder and one is inside this folder so what I need to mention my Django project that you need to include you as you taught py file which is inside my folder called my first app so first you need to to include this you would type here include and second path include and you have to mention here my first app the dot URL so this is the that I mentioned that under the root directory you have to include my first app dot URLs so this will be divine now I would define the URL here so yeah from there you can use the first line you need to pack this from Django or URLs import path so I would move to here from Django dot URL import path and then you need to define the list of URL patterns okay so this looks pretty same as this also because here you I can see they have included this from Django dot URLs import path as well and URL patterns as a list so this looks pretty fine here now I would define the first path to be this but before I want to tell you then the URL will only work when there is a function call defined to that particular URL so for that what you need to do is for you what I'm going to tell you you need to add this line because this URL provides present here so you would type from dot from current directory import Muse so what is the importance of these two lines is that the you have to create your views here so what they mean by is that for this particular URL you have to mention a function call so I would do one thing that I would mention this path and called views taught my function call okay and I would name this as index so name index is used to refer the path name so I would tell you the importance of an index so if I would tell you the importance of name how why we mention names on what when they are used when you and how can we use them in oblique temper how can we use them in the templates okay so in what I am telling you that this pad path to call views toward my function code this could be any function name with the name and I have given this name that this / URL URL has a specific name for index okay so now you would move to use dot PDF file and define a function my function call and this takes at request as a parameter so this is good you have to define this because you are making a request to this function call and now to generate a response what you need to type is you need to type you need to import two there are two types of responses one is HTTP response and other is JSON response so what you need to type is from Django dot HTTP import catch the tp3 spawns as well as JSON response so I think now it should work pretty fine and I would generate a response return HTTP response of hello sorry hello world so now I would the so I would first have a quick recap of this that I have first included euros or py file the first thing I did is include a map my app inside this think I have included to my first I brought us inside the my user profile of my first project then I mentioned this part and I made a function call to this path using the views file because in the views of I used what Peter value mentioned you mentioned your function call so I meant my function call and I named this particular URL as index and inside my first function code I generated a HTTP response so I think this should this should work fine now I would say Python manage dot py run server so this should go fine okay the server has started so I would okay yeah this looks pretty good so you can see you can see because I didn't mention since I didn't mention any any word here so it mentioned as their as a root directory so when I passed on this URL it when I caught my URL this particular URL the root directory so it called my function call inside my views dot py file and I when I went to the views toward py file so it had a request as a parameter and it generated HTTP response of this hello world so so this was the first thing know what you can do what you can do you can pass parameters as well so what you need to do I wanna show you how one thing for sure another thing what you can do is you can copy this line and you can name this as about and you can call this my function about and you can give this as about okay and now I'm making a path code about and boot on my function about so it says my first AB dot views has no attribute my function about so I need to define that so I would define this as well okay for quick for quick overview I would copy this and I will generate about response okay and I would now call this function my function about it so what I did here is I made its the request to slash about from my root directory and it called my function about and I've given I give this URL particular am about and it went to huge or py file and called this particular function and I would go back to my server so right now on the root this it is generating hello world but as soon as I as I made it requests to the about page so it says about response so this is pretty good so now you can understand the theory so you can also do one thing now what you can do is copy this line as well and name this as ID my function or you can add end or you can say in this simply a little blue dot add no I am telling this route what I can mention to showed you like you can also pass parameters as well so to pass integer I would type like this so I would move back to this and type end like you have to mention the end then a colon then age so this is going to be int a then in to be okay and now I have to define the views dot add so I will go to Def and not the force parameter which is going to be request the second parameter basically to the integer which I am taking which was suppose I'm here ain't aiming as X or you can for simplicity for use a then B so what you need to do is return HTTP response of a plus B so I think it should work now you know what I am telling you to add 20 days first one is going to be one and second one is going to be two so it should work yeah now I hacked it has given me two integers of one and two and it returned initiative it responds to the output three the one thing I wanted to show you will this work if I change this a comma B to X comma Y X plus y so this is all a part of learning process so I should make sure the server is running yes the survey the first age thing is I will move to this yeah it's working now I would move to this about yes working now I would move to that part add 4 comma 5 so this doesn't work ok so why this didn't work because I had mentioned here in the US retrieve a file that I'm going to get a as a parameter then B as a parameter so what I need to mention here that inside my views are pure file I had to strictly mention this as a comma B so so make sure you be careful about this now now I will restart the server and then refresh this fade now this was because I wanted to make sure below this that inside a I mentioned here as a and ensured mentioning a script we need so input parameters to my request part would be a comma B as well so then I generated actually build upon so a plus B okay so this was look good now the first second thing you need to do any you can do you create a found URL so I would click quickly create this path intro the first matter is going to string name and the second one is going to end int with an age and I would call views taught intro with the name particular name to this URL as intro so this looks good so this would throw because I am not defined in true in my views of your file so I wouldn't move it back to my so this time I'm going to show your JSON respond define into as a function taking first parameter as a request the second has name so let me check what have defined first so I have defined name as four than age a second the name is going to be first and age is going to the second now I would define return a JSON response so to generate it as JSON a spoon I need to define a dictionary so the Sherri's efficiently key value pairs so could be my dictionary is going to be variable so with this name is going to be named here and eh sorry age is going to be it age here and I would return a JSON response oh here so I wanted to show you difference between the JSON response so search form is an error because I think it's sense because I defined used or intro now it should work particularly fine now it has started so what I am showing you I will move to intro name as Jack and a judge 25 so it will this work so yeah you here you can see that now it returned me and JSON response and I'm showing you particular here like here it shows that this is an injection responds with the name and EH and for the you can show the show the raw data as well so this is an this shows you how JSON object looks like and and in the JSON format you have just for you can hear that name is Jack and the age is 25 and this is a JSON object so like in this way you can you create a mood more URLs so basically we here I covered the HTTP response as well as the JSON response so so like so to generate any a free generator will request so why are you are L so we generate a response to pit as well so like this is a so thank you guys thank you so much so I am going to be back with another video very short and very soon thank you so much thank you so much
