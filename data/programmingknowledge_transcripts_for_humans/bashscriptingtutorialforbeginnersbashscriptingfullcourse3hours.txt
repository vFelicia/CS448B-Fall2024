With timestamps:

00:00 - hello guys and welcome back to the
00:01 - channel this is aush and from now we are
00:04 - going to start our the denux sh
00:05 - scripting tutorial okay so we will start
00:09 - with the basics to the advance and we
00:11 - will cover many uh Concepts like we will
00:15 - cover like programming uh Concepts like
00:17 - if fails fall
00:19 - loops and also we will create some uh
00:22 - scripts like automated scripts and we
00:25 - will do some minor projects also so now
00:28 - from uh this video like uh in today's
00:31 - video we will cover some basic concepts
00:33 - like what is a shell what is a bash and
00:36 - also we'll see how you can create your
00:38 - first script that will be a very
00:40 - interesting thing okay but before
00:43 - starting uh let me tell you like we use
00:45 - sell scripting uh mostly for the purpose
00:48 - of the automation okay if you want to
00:50 - automate some kind of your some kind of
00:52 - task then you can use the cell scripting
00:55 - as an automation uh like not as an
00:57 - automation you can sayell like uh uh
01:00 - shell you can use the sell script as a
01:02 - tool to automate your work okay so now
01:06 - first of all now let's come to the point
01:09 - and we will learn about the what is a
01:10 - shell okay so shell is nothing but you
01:14 - can say it's uh just like interface
01:17 - which provides you to write some codes
01:20 - and R write some commands so right now
01:23 - this uh terminal is using the bash shell
01:25 - okay so but also according to the some
01:28 - other articles some book
01:30 - shell is just like an interpreter like
01:33 - uh it basically
01:36 - runs
01:38 - uh like executes the command line by
01:40 - line okay so that is the work of The
01:43 - Interpreter like it executes the code
01:46 - line by line and if some error occurs
01:49 - then it will just throw it on the screen
01:51 - so shell is just also like interpretor
01:54 - it
01:55 - basically interprets the sh files orsh
01:59 - programs you can say or you can say the
02:01 - scripts so now you will say what is a
02:04 - script so script is nothing but the like
02:07 - your program file just like in Python
02:09 - you create P file so similarly in in
02:12 - cell scripting and or in Bach scripting
02:14 - we create the dosh file okay so why we
02:19 - say like sh acts like interpreter
02:21 - because it interprets the dosh files
02:24 - orsh programs you can say so I hope you
02:28 - got a fair idea about what is a shell
02:30 - okay so now let's start with
02:33 - the basic concept like what are the
02:36 - different types of sell this Linux
02:37 - operating system okay so there are many
02:41 - cells like bash shell and also uh like
02:45 - Kor cell Born Again cell okay so you can
02:49 - get the list of the cells uh in this
02:51 - particular directly uh not directly it's
02:54 - a directory okay so here you can see the
02:56 - multiple CES is being used or present in
02:59 - my this operating system so for this
03:02 - whole series we will uh like stick with
03:05 - the only the second one this one bashes
03:07 - bash that means Born Again shell okay
03:10 - but uh this uh s the first one shell was
03:13 - the first shell uh which was created by
03:16 - the Linux and the next there is born
03:18 - against shell came into the
03:20 - role so uh we will use the born against
03:23 - shell for out this entire series and uh
03:27 - now what we have to do uh we have to
03:30 - just create one single script of hello
03:32 - world and uh also let me tell you what
03:36 - is this bin so the cell your your cell
03:39 - will be present in this bin directory
03:42 - okay so now but before creating your
03:46 - first script let me tell you
03:48 - the uh what script is being used by this
03:51 - session or by this terminal so you need
03:54 - to just enter this Eco and the shell
03:56 - dollar shell and here you can see B
03:58 - shell is being used okay now what we
04:01 - have to do we have to just create the
04:03 - first script that is the hello world
04:05 - script how we will do it we will just uh
04:08 - I'll move on to the
04:10 - desktop and I'll create the
04:15 - cat hello
04:17 - world.sh why Dosh
04:20 - because like we are getting the cell
04:22 - script script so bat script that's why
04:25 - we are using the
04:27 - extension so here you can see the file
04:30 - has been created hello. s now I will use
04:32 - this hash slash bin bash it's just like
04:38 - this line basically tells like uh tells
04:40 - how script or our the shell to which
04:43 - shell to use like tell The Interpreter
04:46 - which shell to use so here I'm just
04:47 - defining like I want to use the be bash
04:49 - again shell that is this one being bash
04:53 - not sh okay so now I can do eco eco is
04:57 - just like the print command okay
05:02 - Eco hello
05:05 - world I'm
05:08 - learning bash
05:15 - scripting this one now hit contr D and
05:18 - to run the script you need to add some
05:22 - permissions so you cannot directly run
05:24 - the script if you will check the
05:25 - permission for
05:27 - hello.sh so here you can see this is
05:29 - only read write permission you cannot
05:30 - execute that script so to give the
05:34 - particular permission to this particular
05:35 - file you will need to just uh give add
05:37 - the permission using ch1 you will if you
05:40 - will use plus X and the hello name of
05:43 - the file so permission will get added
05:45 - and here you will see the execution
05:48 - permission has been added and the color
05:51 - also has been changed from white to the
05:52 - green okay now to execute what you do
05:55 - you have to just do dot slash and the
05:57 - name of the script and
06:00 - we are done so you can see our script
06:02 - has been executed
06:04 - successfully okay so I hope you like
06:07 - this guys like how you can create the
06:10 - shell scripting and also I hope you got
06:12 - to learn about what is a shell what is
06:14 - Bash and if not then please go and uh
06:18 - you should explore yourself also to some
06:21 - kind of knowledge okay so that's all for
06:23 - today guys we will meet you in the next
06:25 - video thank you thank you for watching
06:27 - and I will come up and meet you in the
06:28 - next video with my amazing Concepts
06:30 - thank
06:32 - you hello guys now in this particular
06:34 - video we will be installing the visual
06:36 - studio code because we will use this ID
06:39 - to write our cell scripts okay so uh let
06:43 - me tell you how you can install it in a
06:45 - easy way so here is the one to software
06:48 - uh from here you can install multiple
06:50 - softwares now you have to just search
06:52 - for the visual studio
06:54 - code and uh it will take some time to
06:57 - load let's wait
07:03 - um so but before that let me tell you
07:05 - about what is visual studio course so
07:06 - it's a basically one the ID which we use
07:09 - to write our uh codes you can write code
07:12 - in any language which you want from C++
07:15 - to Java python everything
07:17 - okay so here you can see the review is
07:19 - also good now you have to just click on
07:21 - this
07:22 - install so it will take some time for
07:26 - installation uh let's wait
07:30 - it okay it is it is installed now what
07:35 - now we have to do we have to just click
07:36 - on this show
07:38 - applications and here's just search for
07:41 - the vs
07:43 - code or Visual Studio it maybe yeah here
07:46 - you can see the visual studio code you
07:49 - just click on
07:51 - it and it will open up like
07:57 - this and this is something
08:01 - uh okay so here you can
08:04 - see you need to open some folder uh let
08:09 - me click on open
08:13 - folder and uh on the desktop I want to
08:17 - create one folder like uh plus I will
08:20 - create the
08:21 - shell
08:24 - scripting
08:25 - tutorial okay just click on create and
08:29 - you're done you have to just click on
08:33 - open uh don't say I don't want this is
08:36 - some kind of
08:38 - file okay let's
08:42 - wait I think the system is lagging
08:45 - because of the low Ram actually I'm
08:47 - running it in the ubu machine sorry in
08:50 - Virtual box that's why it's happening
08:52 - like
08:53 - this now here I will create just one
08:56 - simple script that is
08:58 - 01
09:00 - uh test.sh I will
09:03 - create sorry sorry I have
09:07 - entered comma
09:11 - there again I create
09:14 - 01
09:18 - test.sh okay so here you need to add the
09:21 - shebang this symbol is called
09:24 - shebang bin
09:27 - bash equal
09:30 - you have to just write here hello
09:33 - world and you are good to go you have to
09:36 - just open up the terminal here new
09:44 - terminal and you will need to just add
09:46 - the permission for this particular file
09:48 - that is 01
09:52 - test.sh and you need to just execute
09:57 - it uh
10:01 - slash 01
10:05 - test. okay uh let me just do LS why it's
10:08 - not executing okay/
10:12 - 01
10:15 - test.sh why showing uh biosis file or
10:21 - directory okay I think
10:24 - I minus like
10:28 - this
10:32 - okay so here you can see Hello World
10:35 - okay so in this way uh we can write our
10:37 - scripts in this ID and we can easily run
10:40 - it okay so that's all for today's video
10:43 - guys I hope you successfully installed
10:45 - and in our further videos we will start
10:47 - with the basic concepts of the cell
10:49 - scripting so that's all for today's
10:50 - video and I will meet you in the next
10:51 - one thank you thank you for
10:54 - watching now in this video we will be
10:56 - learning about what are the variables
10:58 - Okay so so first of all let me tell you
11:00 - about the what are the topics which we
11:02 - will be covering in this particular
11:03 - video so let me just open up the
11:06 - terminal and I will write all those
11:08 - topics which we will be covering this
11:09 - particular video so first of all we will
11:12 - cover variables what are the
11:15 - variables then user defined variables
11:18 - and next envirment
11:20 - variables okay so these are the topics
11:23 - which we'll be covering in this
11:24 - particular video so first of all let me
11:26 - start with the variables okay what are
11:28 - the variables
11:29 - okay but before that let me first open
11:31 - up my vs code actually I have already
11:33 - done it here you can see now you have to
11:36 - just uh create one file that is 02
11:40 - variables Dosh okay so we will use Dosh
11:44 - extension for creation of file and I
11:46 - hope you have already installed this vs
11:48 - code actually in our previous video we
11:50 - have covered this part of installation
11:53 - so now what we have to do uh you have to
11:56 - just
11:57 - uh enter this sh she bang and then you
12:02 - have to just uh you're are good to go
12:05 - you can write any command here also like
12:07 - you uh variables you can write here
12:12 - variables okay just save it and here is
12:16 - the Run button if you run it maybe it
12:18 - will run yeah it's working fine okay so
12:22 - now what we can do uh let me tell you
12:25 - about first variables what are the
12:27 - variables okay so variables is nothing
12:30 - but uh just like a
12:32 - container okay container which will hold
12:37 - some values okay so variable is nothing
12:41 - but just like a container which will
12:42 - hold some kind of value it may be
12:44 - integer it may be a string it can be
12:46 - your uh any kind of a value like could
12:49 - your decimal value or character value
12:52 - okay so these are the variables okay so
12:54 - what happens actually uh like internally
12:57 - what are what things happen okay if you
12:59 - are coming from the C++ background so
13:02 - you might be aware of those things like
13:04 - let me tell you all this uh I will open
13:06 - up the
13:09 - paint so that will be easy to understand
13:12 - for
13:14 - you okay so I'll just create a block
13:18 - here okay so what happens if you create
13:22 - a variable suppose you create a variable
13:24 - a equal to 10 okay so at that time what
13:27 - will happen
13:29 - block will be created in a memory and
13:33 - some address will be given to that okay
13:35 - now you will tell ask me what are the
13:38 - address so address is nothing but uh
13:40 - which you used to access those variables
13:43 - okay if you are aware of C++ or python
13:46 - then you might be aware of it but right
13:48 - now just keep in mind that variables are
13:51 - stored at one particular address so it
13:54 - can be any address I will just uh enter
13:57 - like it uh it
13:59 - uh it what we can say address is in the
14:02 - form of hexa decimal so you can write
14:05 - anything like hexa decimal is like a to
14:08 - f 1 to 9 anything you can like this
14:13 - okay so you can think like this is the
14:16 - address and this will be the value you
14:19 - can suppose like it will be 10 and the
14:22 - name of the variable will be
14:24 - a okay so this is the case happens
14:29 - internally if you create a variable in
14:32 - any operating system okay so now we will
14:36 - start with the basic one like we will
14:38 - create some variables and we will also
14:40 - learn about some kind of rules which we
14:42 - follows while creating the variables in
14:47 - our shell okay or B scripting you can
14:50 - say so here what we will do uh I will
14:54 - just uh create some variables like I
14:56 - will create name equal to to
15:00 - I okay you can like write like
15:05 - this and then what you will need to do
15:08 - you can also give like age equal to 20
15:12 - you can
15:13 - say and now we are good to go right now
15:17 - we will just print those variables so
15:20 - how you can print using dollar and the
15:22 - name of the variable you can easily
15:24 - print the variables
15:26 - okay so just save the variables and I
15:30 - will run up run this variable okay so
15:33 - here you can see the variable the first
15:35 - line and the second my name is printed
15:40 - okay so but before moving forward let me
15:42 - tell you about the some of the rules
15:44 - which we follow while creating the
15:46 - variables okay so there are some
15:47 - interesting thing if you do like this
15:50 - add a space so at that time your shell
15:52 - things like it's kind of a command so
15:54 - there should be no any spaces in your
15:57 - variable name inell scripting especially
16:00 - or pass scripting so if you will do so
16:03 - it will
16:04 - say command not form here you can see so
16:08 - you don't have to give any kind of a
16:11 - space in your variable name okay I hope
16:15 - it's clear to you guys uh let me just
16:18 - create some another variable like
16:20 - pointer I will create some kind of 9.9 I
16:23 - will give it it time okay it's fine so
16:26 - here I will add
16:31 - Eco my pointer
16:35 - is like this maybe uh string
16:39 - concatenation will happen there
16:42 - pointer let me just save and I will
16:45 - again run this
16:48 - script so here you can see my pointer is
16:51 - this plus okay if I will not give it it
16:55 - doesn't uh effect I think
17:01 - okay so here you can see my pointer is
17:04 - 9.89 so in this way you can uh enter the
17:08 - variables and enter the values assign
17:11 - the value to the variables so these are
17:13 - basically the user defined variables
17:17 - okay Eco you have to just here to user
17:24 - defined variables Okay so
17:29 - this is the okay so what if I want to uh
17:35 - print all those in a same line like Eco
17:40 - name and Eco a also I want okay let's do
17:44 - it I will remove this line save
17:49 - it okay here you can see the I 20 okay
17:55 - so these are the user defined variables
17:57 - okay I hope it is clear to you what are
17:59 - the variables now moving forward uh we
18:01 - will learn about the Su of U what we can
18:05 - say involment variables okay so I will
18:08 - just do a quick Google search for you
18:11 - guys and I will search for the user uh
18:14 - not user envirment variables okay so
18:21 - envirment will write at much biggest
18:24 - smelling environment variables and shell
18:27 - scripting and thep yeah here we got
18:34 - it okay so here you can see there are
18:38 - many blocks for on gigs for gigs or
18:41 - digital
18:43 - lotion okay so uh let me open this one
18:46 - geks for geks so it's a
18:49 - good website to learn more things okay
18:54 - so here you can
18:56 - see it's loading just wait for some
19:02 - time okay so here you can see what are
19:04 - the environment vales so
19:06 - environment system defined variables you
19:09 - can see it is given by the shell to use
19:11 - for you guys okay so here you can see
19:15 - the scope of an environment variable and
19:17 - all those things I will tell you about
19:20 - the scope and all those in the next
19:22 - video okay right now just uh learn about
19:25 - the environment variables okay so here
19:29 - you can see the name is one of the
19:30 - environment variables both go in the
19:34 - same way
19:37 - okay let me just uh
19:41 - this so here you can
19:47 - see okay name equal to
19:52 - Value okay I will use some different
19:54 - website let me use distal ocean not this
19:58 - this one this one looks
20:01 - good or I will just do list here because
20:05 - I want the list of the environment
20:07 - variables and cell script we use so here
20:11 - you can see
20:12 - the uh not Windows I want
20:20 - Linux okay here you can see the eath
20:23 - display the path inment
20:26 - variables okay
20:31 - so uh let me just use some variables
20:34 - here like uh I remember some variables
20:37 - like EOS
20:39 - shell if you will use shell and in
20:42 - variables keep in mind like it is
20:44 - written always in the capital letter and
20:48 - here I will just add some text like uh
20:51 - first
20:53 - environment
20:55 - variable okay and and just
21:00 - uh save it and run it and here you will
21:04 - see the bin bash it gives you the name
21:07 - like cell which cell you are using right
21:10 - now okay if you will do date also it
21:13 - will give you the information about date
21:16 - okay so just save it and run it from
21:20 - here and here you can see the okay it's
21:24 - not displaying with the date why I don't
21:27 - know
21:30 - okay d a t it
21:45 - should okay just run
21:49 - this okay I think dat is not one
21:51 - involment variable let me just quick uh
21:54 - search for it date environment variable
21:59 - L okay so here you can see the uh
22:05 - current involment
22:09 - variables so there are many articles so
22:12 - you can read here like when you
22:17 - do we can do like this
22:21 - also uh let me just copy and I will
22:23 - paste it here now and I will use here
22:27 - now
22:30 - okay just save it and click uh on run
22:36 - and here you can see the current date
22:37 - and time all those
22:39 - things
22:41 - okay so in this way you can use uh
22:44 - variables you can assign values and I
22:46 - hope you got to learn about this user
22:49 - defined variables as well as involment
22:51 - variables and uh in the next video also
22:54 - I will tell you some more envirment
22:55 - variables okay so I hope you like this
22:58 - particular video guys and thank you
22:59 - thank you for watching and if you have
23:00 - any queries then you can ask in the
23:03 - comment section and for these all the
23:04 - source code I will be posting on my
23:07 - GitHub repository I will give the link
23:09 - in the description okay so thank you
23:12 - thank you for watching I'll meet you in
23:13 - the next one thank you and
23:16 - bye-bye now in this video we'll be
23:18 - learning about how we can get the input
23:20 - from the user okay so basically we will
23:23 - see uh with the many examples like
23:26 - suppose I will ask the user to enter his
23:28 - name so at that time you just should be
23:30 - able to enter his name and all those
23:32 - things okay so basically we will use the
23:35 - uh read command or you can yeah read
23:38 - command you can say or the what you can
23:41 - say like uh read keyword used to take
23:46 - input from the user in the Shell
23:49 - scripting okay so actually I have
23:51 - already open up the terminal here uh vs
23:54 - code sorry and I will just create a new
23:56 - file here uh
23:59 - 03 uh read
24:01 - input
24:03 - Dosh okay so I will just use this
24:08 - hashbang pin bash okay I'll just give it
24:13 - the name of uh this tutorial that is
24:16 - lead
24:18 - input lead input from user okay so first
24:23 - of all we will see the basic scenario
24:25 - like suppose I enter here uh e
24:28 - into your name please okay so here I
24:35 - will read the name and here you you will
24:37 - see the this will be the name of the
24:40 - variable okay in which you want to store
24:44 - this value okay and next here I will
24:47 - print the variable like uh your name
24:54 - is uh dollar name okay
24:58 - controls to
25:00 - save
25:02 - and I want to run from
25:05 - here but here from here I will need to
25:07 - give permission but so it's better to
25:10 - run from here okay so here it is asking
25:12 - for me to enter my name so I will
25:15 - enter
25:17 - aush okay why it's not
25:20 - working oh my
25:25 - God let me just control C
25:29 - uh let me use the terminal terminal is
25:31 - far better than this okay so we need to
25:34 - just give the
25:35 - permission to that file that is
25:38 - 03 we are done sl03
25:44 - Dosh okay sorry
25:47 - sl03 Dosh and enter your name please
25:51 - iush so you can see the your name is
25:54 - aush
25:55 - okay so in this way we can can uh take
25:58 - the input from the user and also there
26:00 - are many use cases of this read command
26:03 - okay so we will uh learn it one by one
26:06 - okay so uh let's start with the first
26:09 - one like uh we can use many options like
26:12 - read hyphen P okay so next moving
26:15 - forward I will just uh here I will do a
26:20 - read hyphen p is used for the prompt so
26:23 - here I will prompt
26:26 - enter your
26:28 - uh
26:30 - age
26:32 - okay so here you can just give the name
26:35 - of the variable which you want to
26:37 - provide you can just give it as is okay
26:41 - and next I will just use this Eco
26:44 - command or
26:46 - Eco keyword to print the value your name
26:50 - uh sorry your age is what dollar
26:54 - is okay contr s to save clear the screen
26:58 - again run the script your name my name
27:00 - is aush guys your is I will enter 20
27:06 - here you can see your age is 20 so what
27:09 - is the difference between this and above
27:11 - and this one read so what is happening
27:15 - here we are using one extra line for
27:18 - eing that particular line but using
27:20 - hyphen P option you can write your
27:23 - variable as well whatever you want to
27:25 - prompt to the user you can write those
27:28 - all things in a one single line so now
27:31 - let me just comment out these things and
27:34 - I will again run the command so that
27:36 - will be easy for you to
27:39 - understand so here it is asking me for
27:42 - inter so here you can see I have just
27:44 - used this single line and it is asking
27:47 - me to enter the uh whatever the is and
27:51 - all those things so don't be confused it
27:53 - was by mistake 204 I'm not that much old
27:57 - okay
27:58 - so uh in this way you can uh use this
28:01 - hyphen P option also there is many
28:04 - amazing option like uh if I will
28:06 - uncomment this and I will just comment
28:09 - out these things and if in case you
28:12 - don't provide the variable name so at
28:15 - that time you can use this
28:20 - reply okay you can use this
28:23 - one
28:25 - to like you can use this one like this
28:28 - okay if you don't provide the uh name of
28:30 - the variable then it will store it into
28:33 - this de so I will just again run up this
28:36 - particular script and I will write the
28:38 - name as iush and here you can see iush
28:41 - your name is iush without any use of
28:44 - variable okay but that is not a very
28:46 - good practice to use but yeah it is
28:49 - always uh like advis to use the
28:53 - variables okay so I will give it the
28:55 - name here as name and the same as as it
28:58 - is the dollar name
29:01 - okay dollar name okay we are done you
29:05 - are good to go now there is also some
29:07 - amazing things you should know about
29:09 - like suppose I'm asking the user to
29:12 - enter some kind of confidential
29:13 - information I will just comment out
29:15 - these things uh read hyphen p and the
29:22 - username
29:24 - okay suppose you're asking for the
29:27 - username I will just create a variable
29:32 - username and you can also ask for
29:36 - password read hyphen
29:39 - SP and here you will ask for the
29:42 - password so obviously you don't want to
29:44 - reveal your password okay with everyone
29:47 - so hyphen has provides that
29:49 - functionality you will see right now so
29:52 - I will just equo those two variables so
29:56 - here I will write like this is your not
29:59 - your just use
30:01 - username and the dollar
30:04 - user
30:06 - name username okay yeah we're good to go
30:09 - now and just use the
30:12 - password okay dollar password okay
30:17 - controls to save let me just clear the
30:20 - screen again this one username my
30:22 - username is uh this one you can follow
30:25 - me on
30:26 - Instagram I know I'm promoting and for
30:29 - password you can use
30:32 - uh it's easy to
30:37 - crack okay so here you can see the
30:39 - username is this one and password is
30:42 - this one but uh you I hope uh you just
30:48 - uh uh what we can
30:51 - say notice like uh the when I was typing
30:54 - the uh password it was not visible
30:58 - okay I will use one more Eco for the
31:00 - blank space okay again I will run this
31:02 - script so that could be easy to
31:05 - understand so I will use username iush
31:07 - and the password is something and see
31:09 - I'm typing but nothing is displaying on
31:11 - the screen and here you can see now
31:14 - username is I and password is this
31:16 - whatever I WR don't know what I have
31:17 - written
31:18 - okay so this is the
31:23 - thing okay so I hope you got to learn
31:26 - about like how you can take input from
31:28 - the user okay so now thank you for
31:30 - watching and if you have any query you
31:31 - can ask in the comment section and
31:33 - surely I will post
31:35 - these uh CES inside your uh inside my
31:39 - repository not yours okay but you can
31:41 - access that repository so that's all for
31:43 - today's guide and I hope you uh you I
31:47 - liked it and we'll meet you in the next
31:49 - video thank you thank you for
31:50 - watching now in this video we'll be
31:52 - learning about the command substitution
31:54 - okay so as a name suggest command
31:57 - substitution which basically means we
31:59 - can use a variable name as a command
32:02 - okay you will store the commands in a
32:03 - variable it's not that interesting okay
32:07 - so we'll be learning these things in
32:08 - this particular video so let's start
32:10 - what what first thing you have to do you
32:12 - have to just open up your ter not
32:14 - terminal you have to just open up the uh
32:17 - vs code okay so I actually I have
32:18 - already open up here the vs code as you
32:20 - can see so now what you have to do you
32:22 - have to just create one file uh I will
32:26 - name it as Z for command
32:31 - substitute
32:33 - substitution Dosh okay I hope his
32:35 - spelling is uh correct yeah it's correct
32:39 - by the way it doesn't matter at
32:42 - all okay so now what we can do you have
32:46 - just paste this okay as Bank
32:49 - okay so here let me just enter this like
32:53 - Eco this
32:55 - is no not like this you have to just
32:58 - enter this command
33:01 - substitution
33:03 - tutorial okay
33:06 - tutorial okay so now uh let me tell you
33:10 - about the First Command which we can use
33:12 - as uh variable okay so I will create one
33:15 - variable Uh
33:18 - current
33:19 - directory okay so how you can get the
33:23 - current directory in uh Linux okay uh if
33:25 - you have watched our l series then you
33:28 - know the command that is a PWD present
33:31 - working directly which gives you the uh
33:34 - current directory location okay so we
33:36 - will use a PWD but before using those
33:38 - things uh right now I will tell you the
33:41 - ways how you can uh uh what you can say
33:45 - uh how we can declare uh that uh command
33:49 - to a particular variable okay so you can
33:51 - use the back tcks okay just the button
33:54 - uh left of one okay and here you can
33:58 - enter the whatever command which you
33:59 - want and right now I want PWD and you
34:02 - can just print this one like your
34:07 - present
34:08 - working your present working directory
34:13 - is like this bro okay
34:17 - is we will use this one not hash I need
34:21 - dollar current not
34:24 - container okay yeah we are good to go
34:27 - right now I will just add some
34:30 - permission plus X to that particular
34:33 - file that is
34:34 - 04 now we are obviously good to go
34:39 - oh I think
34:42 - something yeah so here you can see we
34:45 - have done some silly mistake like we
34:47 - don't have to give the space here if
34:50 - we'll give a space
34:53 - then it will give you the error command
34:55 - not found
34:59 - okay again I think
35:02 - uh command substitution tutorial 04 Line
35:07 - 6 home I6 no such file or
35:13 - directory wait a minute you will need to
35:16 - do like this guys okay so let me just
35:20 - clear the
35:22 - screen yeah we to here you can see that
35:25 - your present working directory this one
35:27 - I use desktop scripting tutorial okay so
35:30 - in this way you can use this particular
35:33 - thing like uh okay so now the next
35:37 - method is how you can do it so the next
35:39 - method is like this I will just copy it
35:42 - and comment it uh this line com this
35:44 - line and I will use this like this you
35:47 - have you have to use the dollar and
35:52 - the
35:54 - PWD Okay so so now we can do like
35:59 - this clear the
36:02 - screen right the command and here you
36:05 - are good to go guys here you can see the
36:08 - uh isn't working directly okay now
36:11 - moving forward uh suppose you want to
36:13 - create one file uh so new file I will
36:16 - create the name a new file and I will
36:19 - use the back
36:23 - tap uh I will use this command cat and I
36:27 - need
36:28 - hello.txt suppose in this case I want
36:33 - hello.txt so I will use this one like
36:36 - here and I will use Eco dollar new
36:40 - file contrl c not c contr s to save
36:45 - clear the screen so here you can see
36:48 - hello.txt has been created and I will
36:50 - write
36:52 - hello.txt has been created from
36:57 - has been created
37:00 - from command substitution
37:04 - toal okay
37:08 - tutorial control D to save okay so here
37:11 - you can see the same text okay so in
37:15 - this way you can use the command
37:16 - substitution technique like using back
37:19 - take or using dollar whatever the way
37:20 - you like okay but the most preferred is
37:23 - this one dollar and the parenthesis okay
37:26 - so that's all for today's videos guys
37:28 - and if you have any query you can ask in
37:29 - the comment section and these course
37:31 - will be posted on the GitHub repository
37:33 - and you will get the link in the
37:34 - description so thank you thank you for
37:35 - watching and I'll meet you in the next
37:37 - one thank you and
37:40 - bye-bye hello guys now in this
37:42 - particular video we will be learning
37:43 - about the how we can pass the parameters
37:46 - while running our script okay so let's
37:48 - start with this video okay so I have
37:50 - already opened up my vs code and you can
37:53 - also open it using the terminal or from
37:55 - here from applications so also so right
37:57 - now we'll create a new file that is
38:00 - a uh arguments. sh okay I will write the
38:04 - hashbang or cbang you can say whatever
38:08 - you
38:08 - want uh sorry bin bash okay now here uh
38:15 - what we will do uh I will run this
38:17 - script and I will pass some arguments
38:18 - and parameters and we will use those
38:21 - parameters and do some manipulation in
38:24 - those things Okay so before the starting
38:27 - the video let me tell you first thing
38:29 - like suppose I run the script this one
38:31 - command substitution or maybe see
38:34 - which script I have run oh yeah suppose
38:37 - this command substitution is one of the
38:38 - script so here I will pass some
38:40 - parameters like I will pass my name my
38:45 - number okay and my some uh something
38:49 - like
38:50 - U country India so in this uh in these
38:55 - way we can pass the parameters okay and
38:59 - how we will access these parameters so
39:01 - you can access these parameters using
39:05 - like this like uh using Eco dollar one
39:10 - okay dollar one for the first parameter
39:13 - Eco dollar two for the second parameter
39:16 - Eco dollar3 for the third parameter so
39:20 - here you can access till doll9 and
39:22 - dollar 0 is reserved and it gives you
39:26 - the name of your script okay so this is
39:30 - the uh in this way you can uh uh work
39:33 - with the parameters and now what we have
39:36 - to do uh we will just
39:41 - uh save this file and what we will do we
39:44 - will just run this particular script I
39:46 - will just give the permissions to this
39:48 - CH mode plus X and 05 Fus Dosh and I
39:54 - will create this screen and I will just
39:56 - run those script
39:58 - 05 okay done and now what I will do I
40:01 - will just pass some parameters like
40:02 - right now I want to pass my name aush
40:05 - okay I will pass my country India I will
40:08 - pass my
40:09 - number uh okay and then I will pass
40:14 - something uh like
40:17 - uh shell tutorial I can write like
40:22 - this okay so when I will hit enter then
40:25 - you will see what happens so here you
40:27 - can see first line giving me the name of
40:31 - the script second line the uh SEC first
40:33 - parameter then third is the second
40:36 - parameter then my number and we are not
40:39 - getting the sell tutorial why because we
40:41 - have not used dollar
40:43 - 4 okay so we will use here Eco dollar4
40:47 - and again I will run the same
40:49 - script okay now here you can see all the
40:54 - uh what we can arguments we have got in
40:58 - these form okay so you have to also
41:00 - remember one thing here like if I going
41:03 - to just pass the one parameter in this
41:06 - case the other will be ignored okay so
41:11 - you can see others have been ignored
41:12 - that is nothing okay and if you want to
41:16 - give like uh like
41:18 - this suppose I want to my I want my full
41:22 - name like aush Kumar so if I will do
41:25 - this so now it will act like this will
41:27 - be act as a first parameter this will be
41:29 - act as second parameter so to act like
41:32 - to use this as a one parameter you can
41:35 - use
41:36 - this okay so now you will get this okay
41:40 - output okay so I hope you got it how you
41:42 - can work with the parameters and now
41:45 - moving forward uh if you want to get the
41:47 - uh list of all the parameter you pass so
41:51 - there are the some special characters or
41:54 - yeah you can say characters so how we
41:56 - will use to print all the arguments we
41:58 - will use dollar at the rate and now it
42:01 - will print all the arguments which you
42:03 - will pass so what I will do I will run
42:05 - these script this one and here you can
42:07 - see I have got the all the arguments
42:09 - which we have passed like I India number
42:11 - and c tutorial okay and also there is
42:14 - one more like
42:16 - uh Eco dollar hash to get the how many
42:20 - number of parameters we have passed not
42:23 - this one dollar hash okay
42:26 - so again just clear the screen and I
42:30 - will run this script and here we can see
42:32 - we have passed the four parameters yeah
42:33 - that's true okay now what we can do we
42:36 - can also store the value of these uh
42:39 - parameters which we pass in a variable
42:40 - suppose I want to store like name equal
42:43 - to dollar one and I will just remove
42:46 - this not I will remove I will just keep
42:48 - it
42:49 - up okay and then I will try to access my
42:53 - name so here I can give my name is
42:57 - is like this we can do also dollar name
43:02 - okay save these and now I just clear the
43:05 - screen and I will run this and here you
43:07 - can see my image I so you can store the
43:11 - whatever the arents you passed in a
43:12 - variable also so in this way you can
43:15 - pass the parameter pass the value okay
43:17 - so I hope you liked it guys and I hope
43:19 - you understood it if you have any query
43:21 - you can ask in the comment section and
43:22 - also here you can see uh I have updated
43:25 - this repository and I will give the link
43:28 - of this particular repository you can
43:29 - access this like from here like
43:31 - github.com
43:32 - 9ub and this one C scripting tutorial
43:35 - okay from here you can get the whatever
43:38 - we are writing the course like you will
43:40 - get each and every Source there okay so
43:42 - that's all for today's guide I hope you
43:44 - liked it and I will meet you in the next
43:46 - video so thank you thank you guys for
43:48 - watching
43:49 - bye-bye hello guys now in this
43:51 - particular video we will be creating our
43:53 - the first task that is the basically in
43:56 - which we will whatever we have covered
43:58 - till now we will use those things so
44:00 - basically let me tell you the scenario
44:02 - what we will be doing in this particular
44:03 - video so basically we will first read
44:05 - the input from the user okay that will
44:09 - be the IP or domain name and next what
44:13 - we will do we will be uh using the Ping
44:16 - command to Ping that particular server
44:19 - okay so things are very easy if you want
44:22 - to go ahead with your like with yourself
44:24 - then you can go for it you so it will
44:26 - give you the more confidence about it
44:28 - okay so now I will use this scenario and
44:31 - I will create one script so actually
44:33 - already have open up my visual studio
44:35 - code and you have to just create
44:39 - one script and I will use the
44:44 - hashbang
44:46 - sorry okay so now what we have to do we
44:49 - have to take input from the user so
44:51 - already we have covered how we can take
44:52 - input so you can use the read here and
44:55 - you will prompt for the user like which
44:59 - server you want to Ping okay it can be
45:04 - any server it all depends upon you and I
45:07 - will create one variable here server
45:09 - address and next moving forward what I
45:12 - will use the Ping command so basically
45:14 - in ping command we have some options
45:15 - like hyphen C so whatever uh if you use
45:19 - normal ping command so like if I will
45:21 - use
45:22 - google.com so here you can see it will
45:25 - go in the finite but we want only for
45:28 - the three or four okay so what we can do
45:32 - we can give the count for three and the
45:34 - deadline
45:36 - for 5 Second after 5 second if nothing
45:41 - like Ping command doesn't get any
45:42 - response and it will exit so next what
45:45 - we will do you we have to just give this
45:47 - name
45:49 - server address no we are good to go what
45:52 - we have to do you have to just add the
45:54 - permission to this file TR
45:57 - using CH mode command and then I will
46:00 - run this not 01 I have to write
46:04 - 06 okay so I want to Ping Google server
46:08 - that is
46:11 - 88.8 okay so here you can see I'm
46:14 - getting the response okay and now what I
46:16 - will do I will enter some random
46:19 - IP like 8.65 52.4 so it will wait for
46:24 - the five 5 Second and automatically it
46:26 - will exit so here you can
46:30 - see okay so yeah here we can see five
46:33 - pack and transmitter but zero receiv 100
46:35 - 100% package loss okay so in this way
46:38 - you can create different scripts so that
46:40 - will be helpful for you so that's all
46:41 - for today's video I hope you like this
46:43 - our first T so that's all guys and I
46:46 - hope you liked it and we will meet in
46:47 - the next video thank you for
46:49 - watching hello guys now in this video we
46:51 - will be talking about our task two okay
46:53 - so let me discuss with you what we'll be
46:55 - doing in our this task so basically we
46:58 - will be connecting our remote machine
47:00 - with the SS using bash script okay we
47:03 - will create a script with the help of
47:04 - this we will connect to that particular
47:06 - machine so we uh first of all let me
47:08 - tell you how you can create your virtual
47:10 - machine so actually I have there is a a
47:13 - link for you I will add this link in our
47:15 - uh description then there is a tutorial
47:17 - to create a virtual machine you can
47:18 - easily do it okay and I have actually
47:21 - already created the uh machine so here
47:24 - is my public IP address I will copy this
47:26 - IP address and now I will create the
47:28 - script okay so let me open the vs code
47:32 - and I will just uh create the file
47:35 - 07 plus2 Dosh okay but before that I
47:39 - will tell you like uh if you want to do
47:42 - it on yourself you can easily do it okay
47:46 - so if you do it yourself and that will
47:47 - be very good for you so because you will
47:49 - get a more confidence as well you will
47:51 - learn more quickly so let me I will just
47:54 - give you the uh basic idea what we will
47:56 - be doing so I will take the username and
47:58 - the password okay uh not username and
48:01 - the IP and then I will use the SS
48:03 - command to connect with that machine so
48:05 - this is the overall idea and if you want
48:07 - to take input from the parameter then
48:09 - also you
48:10 - can do it okay so first of all let's
48:15 - take uh the input I will prompt the user
48:18 - to enter the username first username and
48:22 - then here I will create the username
48:24 - variable then read hyph P enter the IP
48:30 - so I create the IP
48:32 - variable I use SSH command SSH dollar
48:36 - username we need to do dollar username
48:39 - at theate
48:41 - Dollar
48:43 - IP okay so this is the uh command which
48:47 - we we will use okay otherwise we can do
48:50 - with the passing parameters also we will
48:52 - do it that
48:54 - also so so now I will need to give the
48:57 - permission to this file
48:59 - 07 now we will execute this file
49:03 - 07 and I will enter the username as iush
49:06 - and my IP is uh not this
49:10 - one here okay and my IP is
49:15 - this and it will ask me to enter the
49:18 - password so I will enter the
49:22 - password okay soy you can see aush I the
49:27 - name of the V is also I that's why it's
49:28 - showing like this I will do LS here so
49:30 - nothing is there who am I so name of the
49:34 - user is I here also so in this way you
49:37 - can connect with the uh remote machine
49:39 - using our bash script okay so you can do
49:43 - exit to exit come out of the machine and
49:46 - now we will see how we can uh connect
49:49 - with the uh using like parameters okay
49:53 - so what I will do I will just comment
49:55 - out the all and I will create a variable
49:59 - username and it will be equal to the
50:02 - dollar one okay the first parameter then
50:05 - the IP will be equal to the dollar2 okay
50:09 - we will save this script and I will just
50:13 - pass the parameters like I for username
50:16 - and IP for this okay
50:19 - 247 hit
50:21 - enter and it will ask me to enter the
50:24 - password
50:28 - now we are good to go done again let's
50:31 - check who am I a okay so in this way you
50:35 - can connect with the remote machine
50:37 - easily you can use envirment variables
50:39 - not envirment varable you can pass
50:41 - parameters you can uh use variables okay
50:45 - whatever thing you want to do so I hope
50:47 - you liked it so this is a way to learn
50:49 - new things by while doing some new uh
50:52 - things like create I will like in future
50:56 - uh I will come up with the more task
50:58 - okay so that's all for today's guide and
51:01 - I hope you have used all the concept
51:02 - which you have learned till now so
51:04 - that's all and I'll meet you in the next
51:06 - video thank you for
51:08 - watching hello guys now in this
51:10 - particular video we'll be learning about
51:12 - the operators okay so let me first
51:14 - discuss with you what we'll be covering
51:15 - in this particular video so we will go
51:17 - first with arithmatic operators then we
51:22 - will go with the
51:23 - relational and
51:26 - Boolean and so on okay so I hope uh you
51:31 - guys have completed our previous video
51:33 - so now let's just create the new script
51:37 - that is 08
51:39 - operators.
51:41 - sh okay just add the hashbang or
51:46 - pin shebang you can say okay now I will
51:50 - create uh one
51:53 - variable N1 ENT
51:56 - N1 and I'll create the variable name as
51:58 - N1 read hyph P enter
52:03 - N2 give the varable name as ENT then uh
52:07 - I will
52:09 - EO I will do addition is or just
52:14 - addition so to for incel how we do it we
52:18 - cannot write like this N1 + N2 there is
52:21 - a proper Syntax for it you need to write
52:24 - like this
52:26 - N1 + N2 okay or you can inside also you
52:30 - can give dollar but there is no need
52:33 - okay so now in this way you can write
52:36 - the expression inside these two
52:38 - parenthesis and the dollar sign outside
52:40 - of that expression
52:42 - okay so uh let me just run this script
52:46 - once I will give first the certain
52:48 - permission to this file and then I will
52:51 - execute it
52:53 - d08 and N1 is 4 four that is eight yeah
52:57 - we are good to go now now I will just
53:01 - copy all these things
53:04 - like addition so here you can go with
53:08 - the
53:10 - subtraction what I'm doing wait
53:14 - substraction then here you can go
53:17 - for
53:21 - multiplication and here
53:24 - division
53:27 - okay and next uh we can go with modulus
53:34 - also
53:36 - so let's go with
53:40 - modulus
53:42 - modulus okay m o d l u s okay modulus
53:48 - now let's give the operator like here it
53:51 - will be
53:54 - percent uh uh let me just write like
53:57 - this so that it will be easy to read for
54:01 - you for division you have to give this
54:04 - for slash for multiplication you know
54:06 - this star and for the subtraction there
54:09 - is the minus
54:11 - okay so let's run this script and we
54:14 - will get the output for each and every
54:17 - number so I will give the 10 and five so
54:20 - you can see the addition is 15
54:21 - subtraction is five multiplication is uh
54:24 - 15 division is two and modulus is zero
54:27 - why because modulus gives you the
54:29 - remainder okay if you do uh 3x2 then in
54:32 - that case you will get the remainder as
54:34 - one so you can see the modulus is one
54:39 - okay now next uh you can do increment
54:43 - operator and decrement operator also you
54:45 - can use so how you can do it uh using
54:48 - Plus+ and minus minus okay so I will do
54:54 - eco
54:57 - increment so here we will use
55:02 - dollar and what you have to increment N1
55:06 - Plus+ or what you can do Plus+ N1 it
55:10 - will first increase and then print the
55:12 - value okay so let's just run the
55:16 - script clear enter the N15 5 so you can
55:20 - see increment is six okay in case if you
55:24 - do N1 + plus so here we will not see the
55:27 - increment because it first prints the
55:28 - value then
55:30 - increments okay so in this case we will
55:32 - get the value as five here okay so but
55:37 - now what we will do if we will equal the
55:41 - N1 then we will get the six okay so let
55:45 - me just clear this screen enter 5 five
55:48 - okay now here you can see you have got
55:50 - the six so I hope you got the concept of
55:51 - increment and decrement if Plus+ is
55:54 - after the variable name then it will
55:55 - first print then it will increment if
55:57 - Plus+ is first then it will increment
55:59 - then print okay so similar case with
56:03 - decrement
56:06 - Eco
56:08 - decrement what is the
56:10 - dollar and you have to do minus minus
56:15 - N2 use yeah N2 we can use and here also
56:18 - I I do
56:22 - uh leave it as it is
56:25 - so clear the
56:27 - screen enter N15
56:30 - n26 and now decrement value with six uh
56:34 - first it was seven then now it is six
56:38 - okay so I hope you got it how the things
56:41 - are working okay so now let's check with
56:44 - some relational operators like equal to
56:47 - equal to greater than equal to less than
56:49 - equal to greater than less than all
56:51 - those things okay now you have to just
56:53 - Eco here I'm writing just
56:56 - a automatic operators
57:01 - okay just copy it and you have to go
57:05 - there and just write here
57:07 - Rel
57:10 - re relational operators okay I just
57:15 - uh comment out these things
57:19 - okay so now what we have to do so now we
57:22 - will use this relational operator with
57:25 - the if Els so till now we have not
57:27 - covered the if Els but still we can use
57:29 - it okay so how will you do it uh we will
57:32 - use if and then the big bracket this is
57:36 - the whatever the condition we will write
57:38 - in this so dollar N1 and we use GT for
57:42 - greater than and dollar N2 okay and then
57:46 - so don't worry I will uh teach you about
57:49 - TS in our next video okay so you have to
57:51 - just Eco N1 greater than N2 like like
57:55 - this and then you have to close the if
57:57 - block okay so GT means greater than and
58:00 - there are also many like GT for greater
58:02 - than and G for greater than equal to and
58:07 - LT for less than l e for greater than
58:10 - equal less than equal to n e for not
58:14 - equal to okay like this you can uh use
58:18 - okay so we will use first GT and then we
58:21 - will use other options in next okay
58:25 - so now you can uh run the
58:29 - script
58:32 - 08 and I will write 5 and 4 so here you
58:38 - can see yeah N1 is greater than N2 now I
58:41 - will change the uh g to g e and I will
58:45 - write here greater than equal to
58:48 - so now let me just clear the screen and
58:51 - run the script again so five and five so
58:54 - yeah N1 greater than equal to it this
58:56 - line is executing and you can do now
58:59 - LT if N1 less than equal to so N1 L here
59:05 - I will do and I will again run this
59:08 - script so 545 so yeah N1 less than N2 it
59:13 - is executing again less than equal
59:16 - to so we can use like
59:21 - this 4 4 yeah it is executing we can use
59:26 - hyphen EQ to check
59:28 - equality hyphen EQ we can do like
59:32 - this 5 five yeah here we have not
59:36 - changed but still you can you can think
59:39 - like okay so now what we do five and
59:42 - five can see N1 equal to N2 so in this
59:46 - way we can use the relation operators
59:49 - now let me tell you about the and
59:51 - operator so and operator is nothing but
59:53 - if both the condition becomes true then
59:56 - that then the whatever inside that
59:59 - condition will be executed okay so if N1
60:03 - equal to N2 and I use hyphen a option to
60:07 - check and and operator and I will check
60:10 - if dollar N1 is greater than 1 okay if
60:16 - this is the case then this line will be
60:19 - execute
60:22 - okay so N1 I will write five 5 and N1
60:25 - greater than one yes so okay I'm getting
60:29 - some error here okay you can write like
60:34 - this
60:36 - clear 5 five yeah now here you you got
60:40 - the like output as N1 equal to N2 now
60:44 - what I will do I write 0 0 and let's
60:47 - check what happens whether we will get
60:49 - any output or not so here we are not
60:51 - getting any output but now we can use
60:54 - Hyer po option for or
60:56 - operator okay so let me just clear this
60:59 - screen and use like this
61:02 - hyphen uh 0 0 so in this case you the
61:06 - like this condition is equal like this
61:10 - condition satisfies N1 equal to N2
61:12 - that's why this particular line has been
61:14 - executed okay so in this way and and
61:19 - operator and or operator works so that's
61:21 - all for today's vide guys I hope you
61:23 - liked it and yeah if you any query then
61:25 - you can ask us in the comment section
61:27 - and I will surely update this code in
61:30 - our get repository I will add the link
61:32 - in our description so that's all for
61:34 - today I will meet you in the next video
61:35 - thank you thank you for
61:37 - watching hello guys now in this
61:39 - particular video learning about the ifs
61:41 - conditions okay so let's start with the
61:44 - video and I hope you are aware of ifs
61:46 - but if not then let me tell you first
61:48 - what about what is this so basically if
61:50 - if if else what happens if there will be
61:54 - one condition if that condition satisfy
61:56 - it it is true then the whatever the
61:59 - statement you write inside that if block
62:01 - that will execute okay so without
62:03 - wasting time first of all let me uh tell
62:05 - you about the like how will we write
62:08 - this script so that will be easy to
62:10 - understand for you so 09 I will write
62:13 - here if else Dosh okay we are good to go
62:18 - now okay b bash okay so here just
62:23 - support this in a equal to 10 okay if I
62:28 - will write if and the condition is
62:30 - written inside this big bracket okay and
62:35 - here you have to do if
62:38 - a equal to
62:41 - 10 okay so then you have to write like
62:45 - this
62:46 - then then what what do you want if this
62:50 - condition satisfy you have to write like
62:52 - this you can do anything here I'm doing
62:55 - just printing like a is equal to 10 okay
63:02 - and you can do like in
63:05 - else you can write like this EO a is not
63:12 - equal equal to 10 okay and then to close
63:16 - the if log you can write like this fi so
63:20 - I will run this script but before that
63:22 - we will need to add the permission 0 99
63:25 - it is yeah clear the screen/
63:30 - 09 9 okay
63:33 - 09 yeah a is equal to 10 what if I do 11
63:38 - here and run this script so in this case
63:41 - this condition will not satisfy okay so
63:44 - how we can do it 09 a is not equal to 10
63:49 - so I hope you got it how this thing work
63:51 - like if conditions so we will take the
63:54 - scenario of voting system like there
63:58 - will be person age we will take the
64:00 - input from the user I will just uh
64:03 - comment out these things okay
64:07 - read and I will do here
64:11 - uh age
64:14 - okay or I will prompt for the user
64:18 - enter your
64:21 - age here I will do age okay and we will
64:24 - apply the conditions on this if
64:28 - age where is the dollar if age is
64:33 - greater than equal to 18 in this case we
64:38 - will write
64:40 - EO you are
64:46 - eligible to cost
64:49 - V okay in else condition what we can
64:53 - write
64:57 - Eco you
64:58 - are
65:01 - not
65:03 - eligible to cast
65:06 - vote okay and we have to just close this
65:09 - if block control s to save clear the
65:14 - screen enter your a 23 you are aible to
65:18 - cast V again 12 you are not eligible to
65:21 - cast V okay if
65:25 - or I can just do here greater than okay
65:29 - and I use one more thing that is L if
65:33 - it's also like the if but if this
65:36 - condition fails it will check for this
65:38 - particular condition here I will write
65:43 - if uh
65:46 - age equal
65:49 - to just equal to I will use equal to 18
65:54 - so in this
65:56 - case I
65:58 - want
66:02 - Eco
66:04 - please apply for water ID card okay and
66:10 - here we will not use
66:12 - 10 so now what we can do clear the
66:15 - screen run the script I will write my
66:18 - age equal to
66:20 - 18 so so so what happened and uh okay
66:26 - okay I think we will write
66:32 - then okay yeah please apply for water ID
66:36 - card okay so this is the L if condition
66:38 - that's why we will need to write the
66:39 - then okay so right now what's happening
66:44 - whatever the the age we are entering so
66:47 - here it is first checking this condition
66:48 - if this condition fails it will come
66:51 - upon this condition so now this
66:53 - condition execute that's
66:56 - why it is giving the output as this line
66:59 - okay what if the output doesn't match
67:02 - with any condition in this case what
67:05 - will happen the else condition will
67:06 - execute you not eligible to passw simple
67:10 - okay so in this way you can use if if
67:13 - else conditions in your projects okay so
67:17 - that's all for today's videos guys I
67:18 - hope you liked it you will get the
67:20 - source code of this particular video in
67:22 - our G of repository you can get it from
67:24 - there also okay so that's all for
67:27 - today's guys I will meet you in the next
67:28 - video and thank you for
67:31 - watching hello guys now in this video
67:33 - we'll be learning about the case
67:35 - statement okay so if you are aware of
67:37 - the switch switch statements in
67:39 - different language and you you it will
67:41 - be very easy for you guys but not let me
67:44 - tell you about how it will work so why
67:46 - this basically came in Ro first of all
67:48 - we will discuss about this so in many
67:50 - programs you get to know about that
67:52 - there are multiple ifs conditions then
67:54 - that will be very confusing but in case
67:57 - of uh switch case or you can use you can
68:00 - tell the cases it is very easy to
68:03 - understand those things
68:04 - and use it so what I will do I will just
68:07 - create a new file that is a case
68:10 - Dosh okay so I will take the example of
68:13 - the grading system okay so if the grid
68:16 - is a then uh that will be very good like
68:22 - we will print something out inter grd I
68:23 - will write like this and I will create a
68:27 - variable create and how will we use it
68:29 - we will use it
68:30 - case dollar grade okay and then what
68:35 - we'll do we will use the in keyword and
68:38 - here we will uh add the certain
68:40 - conditions like if the grid is a then
68:43 - what to do so here I will do like a then
68:47 - what we have to do not this one uh wait
68:50 - a minute yeah I have use only this
68:52 - bracket closing bracket so in this case
68:55 - I will
68:57 - Eco it's uh
69:00 - your uh
69:03 - your
69:05 - marks
69:07 - is between 90 to 100 okay I can use like
69:12 - this then if the grade is B no and but
69:16 - before that what we have to do you have
69:17 - to just add this semicolon like this is
69:20 - the syntax of using the switch case in
69:22 - this so for B you will write like
69:30 - Eco uh your
69:32 - marks is in
69:36 - between 81 to
69:39 - 90 like this okay and so on like let me
69:45 - call uh use the
69:49 - semicolon and then we will use here C
69:52 - grade
69:54 - and then I will
69:56 - Eco your marks is in
70:01 - between 71 to 80 okay and then we have
70:08 - to just
70:10 - uh use the Astic we can use for
70:17 - default and here we will use the
70:19 - semicolon first and here I will eco
70:25 - your
70:28 - marks is your marks are
70:31 - below 70 like this and then we have to
70:35 - use the EA keyword and we are good to go
70:40 - now we will just give the permission to
70:42 - this
70:43 - script uh 10 okay done now I will run
70:46 - this script 10 you enter my grid I will
70:49 - enter c your Max is with this okay I
70:52 - will enter B your max is between this I
70:55 - will enter e so your max is below 70
70:59 - okay so in this way this thing works
71:01 - okay so I hope you like this videos guys
71:03 - and if you have any confusion about this
71:05 - you can ask us in the comment section
71:07 - okay and I will surely add this course
71:10 - in our repository you can access this
71:12 - course from there okay so that's all for
71:14 - today's guys I will meet you in the next
71:15 - video so thank you for
71:18 - watching hello guys now in this
71:19 - particular video we'll be learning about
71:21 - the array in cell scrip Okay so you can
71:23 - see already I have created this file
71:25 - that is alwaysss and added this she
71:27 - Banger so before starting the video let
71:29 - me first describe you what is a AR so I
71:31 - will just write it like this so array
71:34 - you you can say like that is array is
71:36 - nothing but uh data
71:40 - structure which is used for
71:44 - storing
71:45 - multiple values in a single variable you
71:50 - can
71:50 - say okay so this is the add simple
71:54 - suppose uh let me tell you the one use
71:56 - case like suppose uh you have to uh
71:59 - store multiple names okay suppose you
72:01 - have to store 10 names so how will you
72:03 - create it like if you don't know about
72:05 - you will just do like this name one
72:06 - equal to aush name two equal to some
72:09 - another name like anit name three equal
72:12 - to Let's create some write some name
72:15 - like uh
72:17 - aushi name for equal to ainash like this
72:21 - okay so this is not a good practice of
72:24 - storing uh names in different different
72:26 - variables so that's why uh AR came in
72:28 - rooll for storing multiple VAR in a
72:30 - single variable okay so uh I will first
72:33 - tell you about uh like array
72:35 - initialization what is the method of AR
72:37 - initialization like how you can create
72:39 - AR in cell scripting so it's a very
72:41 - simple so you have to just
72:44 - U give a AR name suppose uh name list I
72:48 - will give name list equal to this single
72:52 - parenthesis and here you have to store
72:54 - multiple names like aush like here I
72:56 - will write anit aushi and ainash okay so
73:02 - here you can see uh all the names has
73:04 - been stored in a single variable that is
73:06 - the name list okay so now you will think
73:10 - about how you will access these arrays
73:13 - okay that's a point like how you will
73:15 - access it so let me tell you first about
73:17 - array indexing
73:20 - okay it is used to
73:25 - access the
73:29 - elements present in an array okay so
73:33 - array indexing is basically used to
73:35 - access the elements in an array so it
73:38 - starts from zero suppose uh this is the
73:40 - array
73:41 - so the first element will have indexing
73:45 - index zero second one will have one this
73:50 - one will have two and this one will have
73:52 - three
73:53 - okay so here is four elements so like
73:57 - there is uh like index starts from zero
73:59 - and ends with n minus one that is three
74:02 - that is 4 - 1 that is equal to 3 so so
74:06 - to accessing the elements of an array we
74:08 - will use the you will use these index
74:11 - okay like if I will uh enter the index
74:14 - zero so at index Z I use is present at
74:17 - index one this anit is present index 2
74:20 - is aushi index 3 is ainash okay so now
74:23 - let tell you first about how you can
74:24 - access the arrays okay
74:26 - so I will just use the Eco so it will we
74:30 - will simply print the uh whatever the
74:33 - index present okay so how you can do it
74:35 - Eco dollar and this par uh cly bases and
74:40 - you have to provide the ARR name that is
74:42 - name
74:43 - list and the big bracket and the index
74:46 - which you want so I want zero index okay
74:49 - so I will just
74:51 - uh wait a minute I will just comment out
74:54 - these things
74:55 - yes and I will run this script
74:59 - okay so 11 Dosh so let's run 11
75:08 - Dosh what happened
75:12 - LS okay I will need to give the
75:14 - particular permission
75:17 - here do/ 111 yeah so here you can see so
75:22 - this one is printing like add is nothing
75:23 - but a data structure so I will also
75:26 - comment out these thing and I will it
75:27 - will just print up the first index
75:31 - okay wait a minute I write like this
75:36 - Eco first
75:44 - index let me run this so here you can
75:47 - see the first index is this similarly I
75:49 - will print all the other three indexes
75:53 - so I will just copy these things and
75:56 - here I will just write the
75:59 - second and here we will write the
76:02 - third and here fourth and you have to
76:06 - just change the number here like index
76:08 - number that 0 one that is two and that
76:11 - is three just control save clear SL1
76:17 - Dosh and yeah so here you can see the
76:20 - first index second index third index
76:22 - fourth index so so here the main thing
76:24 - is that like you can access or you can
76:26 - store multiple values in a single
76:28 - variable you can see here so but uh in
76:30 - this case you you will you had to create
76:33 - multiple variables to store those values
76:35 - so that's not a good practice so instead
76:38 - of this you can use an array so uh one
76:41 - more thing is like if you want to print
76:43 - the multiple arrays not multiple arrays
76:45 - all the elements of an array so how you
76:47 - will do there is also the special syntax
76:49 - for this uh like we we use asri okay for
76:53 - printing so you can use like this Eco
76:57 - all arrays all array
77:01 - elements so I will just write like this
77:05 - name
77:07 - list and this one and here you can see
77:09 - the
77:10 - asri you have to just clear this screen
77:14 - and this one all array elements is here
77:17 - aankit aushi and one more uh syntax is
77:21 - there like uh you can use add theate
77:23 - also for accessing all the
77:26 - elements so you can see okay so that's
77:30 - it guys for today's video I hope you
77:31 - liked it and yeah one more thing I will
77:33 - upload this code in my GitHub directory
77:37 - or your repository you can see here you
77:39 - will see okay you can get this from cell
77:42 - scripting tutorial I will add it here
77:45 - okay so that's this for today guys and I
77:47 - will meet you in the next video and in
77:49 - the next video we'll be learning about
77:50 - the fall loops and all those things okay
77:52 - so that's all for to video guys thank
77:54 - you hello guys now in this particular
77:57 - video we'll be working on the loops okay
77:59 - so basically today we will start with
78:00 - the for Loop and actually there are
78:02 - different types of loop Loops but before
78:04 - that let me first create the file that
78:06 - is the for loop.
78:08 - sh so for Loop Dosh okay so now we are
78:12 - done let me just add this shebang okay
78:15 - so let me just first discuss about you
78:17 - the what is the loop suppose if you want
78:18 - to do some task that is the there that
78:22 - like exist there is some kind of
78:23 - repetion of thing suppose uh like if you
78:26 - have watched the mem like uh uh
78:28 - boyfriend sent her girlfriend like I
78:29 - love you 100 times 100 times so what is
78:32 - this thing this is basically a loop okay
78:35 - so Loop is nothing but you can say like
78:37 - in kind of definition like uh what you
78:39 - can say iterations okay like doing one
78:44 - thing again and again and again okay so
78:47 - suppose let me first tell me with an
78:48 - example suppose
78:51 - uh in some cases like suppose if you got
78:55 - some punishment and you have to write
78:57 - sorry for a teacher and your teacher
78:59 - says like you have to write the sorry uh
79:02 - 100 times and all those things or five
79:04 - times so uh similarly what you will do
79:07 - you will oh
79:09 - sorry you will do like this like Eco
79:12 - sorry if you don't know the loop and all
79:15 - those thing you will write just like
79:16 - this sorry sorry sorry and like you will
79:20 - just simply copy and paste things okay
79:23 - so this is what is this this is the
79:25 - repetition of the same thing so this
79:28 - repetition is uh managed by or removed
79:31 - by the loops okay so basically there are
79:34 - the three types of loop that is the fall
79:38 - Loop while loop until Loop okay I will
79:43 - discussing all these uh two Loops in our
79:45 - further videos but now in this video
79:47 - will be working only on the for Loop
79:48 - okay so let's start with the first thing
79:51 - but before that uh I I will create one
79:53 - array okay and I'll be working on that
79:56 - first
79:58 - okay so let me create an array and in
80:01 - this I will use the loop
80:04 - okay so I will just create with uh
80:08 - some languages name like
80:11 - [Music]
80:12 - python
80:16 - C++
80:18 - Java and c and yeah like comma is not
80:25 - required okay so but before that let me
80:28 - just print the uh these arrays so every
80:31 - I can like check everything is working
80:34 - fine or not okay my array and I will
80:37 - just provide asri here and I will just
80:39 - uh give the certain permission for this
80:42 - file that is the 12 CH mode plus X2
80:47 - okay do
80:49 - SL2 okay so here you can see the our
80:53 - this ad is working fine
80:55 - okay and uh so now what I will do I have
80:58 - to just uh print this array using the
81:02 - fall Loop okay how you can do it but
81:04 - before that let me tell you first about
81:06 - the syntaxes and all those things of
81:08 - fall Loop so the basic Syntax for fall
81:10 - Loop is like this for parenthesis here
81:13 - the initialization will be there
81:15 - initialization here will be the
81:18 - condition if you know how the C
81:20 - programming or Java programming then
81:22 - that or CPP so it's very easy for you to
81:25 - understand this okay but if you don't
81:27 - know then also you can get it right now
81:29 - okay and here will be the increment or
81:33 - decrement okay and the two CRA is like
81:36 - this
81:37 - okay so what is the this is the uh
81:39 - Syntax for follow
81:44 - Loop okay so uh let me tell you how the
81:48 - thing works okay so suppose uh I want to
81:51 - print uh sorry
81:53 - uh like this number of times five times
81:55 - so I will uh start with the zero or one
81:59 - it's all upon you and I will provide the
82:02 - condition like uh that I will create one
82:05 - variable at I equal to Z and I will
82:06 - provide the condition that is i l than
82:09 - five and i++ okay so uh let me just open
82:14 - up my paint so I can like you you should
82:17 - visualize that thing
82:20 - okay so
82:25 - where is text
82:27 - yeah so here simply I write one for Loop
82:30 - that is I equal to0 I should less than
82:35 - six or five if we starting
82:39 - for this
82:40 - one from zero okay so this is the fall
82:45 - Loop okay and I will just Eco here the
82:48 - sorry
82:50 - statement okay so here now what you have
82:53 - to think is like how the things are
82:55 - working
82:56 - okay so let me just uh do like this okay
83:02 - so how things are working basically so
83:04 - so when your Loop will run so how it
83:07 - runs so it will CH it will first assign
83:09 - I value Z if I equal to Z okay it will
83:14 - check the uh condition so I here I will
83:18 - just Define the titles for
83:21 - them uh here I will do
83:24 - initialization here will be the
83:26 - condition
83:27 - and here will be the increment okay so
83:32 - why increment because here I using the I
83:35 - ++ it it simply means it will incre
83:37 - increment the value of I by 1 okay so
83:41 - now here what I will do so you can see
83:43 - the one like right now there is I equal
83:45 - to Z okay so it will now first check the
83:49 - condition whether I is less than five
83:51 - this one so yeah 0 is less than five so
83:55 - if condition is true it will print the
83:58 - sorry so here in this case 0 less than 5
84:02 - condition is true okay and it will what
84:05 - it will do it will print okay so here I
84:09 - will do like print what it is printing
84:12 - so it is printing sorry and then again
84:15 - it will increment the value of I to I ++
84:19 - that is now the value of I will become 1
84:23 - okay so here again I will give like here
84:26 - this I equal to 1 so again it will check
84:28 - whether 1 less than 5 yeah 1 less than 5
84:31 - true it will print sorry okay and again
84:35 - it will increment the value to two Okay
84:39 - now again Loop will run for two like I
84:41 - will be two and it will check whether uh
84:44 - 2 less than five yeah 2 less than five
84:46 - condition is true and it will print
84:49 - sorry again and the I will become
84:53 - increased by one from here like I will
84:55 - be
84:57 - three okay so similarly again I will be
85:02 - three here and it will check like three
85:05 - less than five yeah condition is true so
85:09 - what it will do like uh it will print
85:12 - sorry okay and again the value of I will
85:15 - get increased by 1 that is 4 and again
85:19 - uh now it will do I will be four and it
85:22 - will check let me just increase this
85:26 - size here I equal to 4 okay and it will
85:30 - do whether four less than five yeah it's
85:33 - less than five condition is true and it
85:36 - will print sorry
85:37 - first and then it will increment the
85:42 - value of I to five okay and now I will
85:45 - become five and it will check whether
85:48 - five less than five so here condition is
85:52 - false and uh what will happen Loop will
85:56 - end okay and it will print sorry five
86:00 - times okay if you're starting your loop
86:04 - from from uh zero
86:09 - okay so this is the simple uh working of
86:12 - the for Loop like how things are working
86:14 - so now let me just tell you about with
86:16 - the experiment part how you can get it
86:18 - okay so let me just open up this one and
86:22 - I will just uh comment of these things
86:26 - okay and for Loop and I will initialize
86:30 - the value of I from 0o to I less than 5
86:34 - because I have to print five times I
86:37 - ++ Eco
86:39 - sorry
86:41 - okay just controls to save again let me
86:45 - run the script which number it is 12
86:48 - okay it's not this one sorry
86:53 - bar yeah so here you can see five time
86:55 - sorry has been printed okay but what if
86:59 - you want uh like if you do less than
87:02 - equal to 5 so in this case suppose uh
87:06 - less than equal to 5 so it will print
87:08 - you uh it will print six
87:11 - times so here you can see six times has
87:13 - been printed why why this happened
87:15 - because at this point now if there is
87:19 - less than equal to so here the condition
87:22 - satisfied like yeah four five is less
87:24 - than equal to five so condition is
87:27 - satisfi satisfying and it will be true
87:30 - and sorry will get printed and then
87:33 - sorry will be printed and then I will be
87:35 - equal to six and now if you will check
87:38 - it will check the condition that is 6
87:40 - less than five so that condition is
87:42 - false so in this case our Loop will get
87:45 - in and you will come out of the loop
87:49 - okay so in this way uh for Loop works I
87:52 - hope you got it and uh let me just tell
87:55 - you one more thing like how things work
87:57 - and like there is also uh some different
87:59 - syntax of for Loop okay so the different
88:03 - synex is this like this uh for uh for
88:08 - suppose uh you have to provide some list
88:10 - like uh uh like you can do like this for
88:13 - I in and you will provide a list like 1
88:16 - 2 3 4 5 6 7 8 9 10 you you can do like
88:22 - this also okay or you can provide some
88:25 - any other uh variables also like uh you
88:28 - can provide a string names also and all
88:30 - those things and here you will just do
88:33 - do okay and uh in this what you will do
88:38 - I will just print like this
88:41 - Eco
88:43 - iteration colon and here I will just
88:46 - write the
88:47 - I okay and then you will write
88:51 - here done do done okay contr s to save I
88:56 - will just comment out this this Loop and
88:59 - again I will just run this script okay
89:02 - so here you can see the iteration I is
89:06 - printed not the value okay so at that
89:10 - point I will just provide the dollar
89:16 - okay yeah so here you can see iteration
89:19 - one let me just uh clear this screen and
89:21 - again run this script so here you can
89:23 - see 1 2 3 4 5 6 7 8 9 10 okay so in this
89:27 - also you can run Loop suppose uh if you
89:30 - want to do some operation of if one
89:32 - comes or like suppose I provide here
89:35 - some different list like the name list
89:38 - suppose
89:39 - I II okay so here
89:44 - uh suppose if you want to uh do like
89:49 - this uh
89:50 - if and the condition which you will give
89:53 - like dollar I equal equal
89:57 - to
89:59 - iush so in that in this case what you
90:02 - should do like
90:05 - uh
90:08 - then
90:10 - Eco uh what should we Eco like
90:14 - um you can Eco like yeah
90:17 - uh like this I is a good boy
90:24 - okay and you have to just uh uh write uh
90:28 - what you can say close the if condition
90:31 - I will save it and I will just run
90:35 - this so here it is showing some kind of
90:38 - error like uh unexpected token then at
90:41 - line
90:43 - number 29 uh wait a minute I have wether
90:47 - uh let me write like this first and I
90:51 - will do it in the colon not
90:58 - colon okay why it's swing error I'm not
91:01 - [Music]
91:09 - getting uh let me just uh uh
91:14 - if if Toler I equal equal to I then
91:19 - Eco Fe
91:22 - yeah it's
91:26 - correct uh wait a
91:31 - minute okay so uh basically I got it so
91:34 - here you have to just provide one space
91:36 - so I was doing just some silly mistakes
91:39 - so let me again run this script uh clear
91:42 - dot SL SL yeah so here you can see uh
91:45 - sorry which script add in I have to run
91:48 - 12
91:50 - sorry 12 okay okay so here you can see a
91:52 - is a good boy so if dollar I equal equal
91:54 - to I then it is printing like yeah iush
91:57 - is a good boy okay so I can do write WR
92:00 - uh write like this like dollar I okay so
92:03 - it will also
92:05 - run so I is a good buy okay in this case
92:08 - you can see so basically you can uh what
92:12 - you you I was saying uh you can just uh
92:15 - initialize or write your for Loop in the
92:18 - syntax also okay so uh if you are
92:21 - familiar with the C programming or CPP
92:23 - then that is very easy for you and if
92:25 - you are for uh same like familiar with
92:28 - python then this one is also fine for
92:30 - you okay so uh now let me tell you first
92:34 - about uh how you can print the array
92:36 - elements okay so in our previous class
92:38 - we have learned about array so here you
92:40 - can see I have created array here let me
92:41 - just create it uh
92:44 - below I will comment out this and
92:48 - uh I will
92:50 - just create array and I will just add
92:54 - some other language also like uh cotl I
92:57 - will add and some other Frameworks like
93:02 - react
93:03 - [Applause]
93:05 - JavaScript shell
93:07 - scripting okay so this is my array okay
93:12 - so now I have to print this array okay
93:14 - using for Loop so how will you will
93:16 - print an are using F so basically we
93:18 - will need to define the uh condition
93:21 - like added should be less than the size
93:23 - minus one so here what is the size of
93:25 - the added that is 1 2 3 4 5 6 7 8 so 0
93:31 - to 7 we have to do so in this case you
93:33 - will use the normal Loop that we use in
93:36 - for in other programming language that I
93:37 - equal to0 I should be less than 7 and I
93:42 - ++ and we will just equo the
93:46 - indexes okay so how you will do it my
93:50 - add a name and and I will provide the
93:52 - index as
93:54 - I and we are good to go now let me just
93:57 - run the script yeah here you can see all
94:00 - the AR elements has been printed in this
94:03 - in the same order okay so uh that's it
94:06 - for today guys I hope you liked it like
94:09 - how the fall Loop works and you like
94:11 - this representation also like everything
94:14 - should be clear for you if you have any
94:16 - problem then please ask to me okay so
94:19 - that's all for this guys and I will add
94:21 - this code in our GitHub deposit you can
94:23 - access from there and provide the link
94:24 - in the description so thank you guys for
94:26 - watching this video and I'll meet you in
94:28 - the next video thank
94:30 - you hello guys now in this particular
94:32 - video I'll be talking about the W Loop
94:34 - okay so basically uh I have covered
94:36 - already the fall Loop and in which we
94:38 - have discussed about the basics of
94:40 - looping and how loops work okay so now
94:42 - let's start with the Y Loop let me
94:44 - create this file first Loop Dosh and I
94:47 - will just add this shebang or hashbang
94:50 - you can say here okay
94:53 - so here we go so now uh file Loop is
94:56 - also uh just like the follow Loop but it
94:59 - is uh it
95:02 - works it works until the condition is
95:08 - true okay if condition gets F we can
95:11 - come out from the loop and if condition
95:12 - is true it will execute that particular
95:14 - thing okay so let me just give you the
95:18 - syntax part like what is the syntax of
95:20 - while so while space and this double
95:22 - space and here you have to write the
95:26 - condition okay and then you will write
95:29 - like this uh do and whatever the code
95:33 - you want to perform here and then you
95:35 - have to do like here uh you have to
95:37 - write here done okay so this is the
95:40 - basic syntax of the while loop okay so
95:44 - now we will see the visualization part
95:46 - so let me uh open up my paint
95:50 - first
95:52 - okay but uh before that uh let me just
95:55 - copy
95:57 - the this one code where it is
96:02 - here okay now I have copied let me just
96:06 - uh paste it
96:08 - here
96:11 - okay I will need to just create this one
96:13 - like
96:14 - this to add the text and all those
96:17 - things so here we go and let me just
96:20 - remove this part
96:22 - okay and also uh we forgot about uh this
96:26 - one like we need to give
96:29 - the semicolon all those things okay so
96:33 - let's start with the implementation one
96:34 - suppose uh same case if you want to
96:37 - print something like uh my name if I
96:39 - want to print my name five times how the
96:41 - thing will work okay so basically so
96:44 - here we will need to give the condition
96:46 - like we can give the I like uh I should
96:49 - be less than equal to four or less than
96:52 - five you can give the condition and
96:54 - above you can declare the I variable
96:57 - okay and here you will write the code
96:59 - like
97:01 - Eco and my name iOS okay so how the
97:04 - thing will let me tell you here we will
97:06 - give the value of
97:08 - I and then we will check the condition
97:11 - and then increment okay so initially the
97:14 - value of I is zero and condition will be
97:16 - get checked like 0 is less than equal to
97:18 - 4 yes it is less than equal to 4 so now
97:21 - now what it will do it will print so
97:23 - here I write the print so here what it
97:25 - will print it will print simple iush
97:28 - okay and the value will get incremented
97:31 - by one so now value of I will be one and
97:35 - it will again check the condition
97:36 - whether 1 less than equal to four yes it
97:37 - is true so again print the name iush and
97:41 - again increase the variable
97:43 - to like two it will so now I will be two
97:47 - and again I will check the variable name
97:49 - like 2 less than equal to 4
97:51 - okay and print and again it will
97:54 - increase the uh value of I by 1 so I
97:57 - will be three and again it will check
97:59 - whether three less than equal to 4 yes
98:00 - it is true and again it will print and
98:03 - again value of I will get increased by
98:05 - one that is four now I will be four and
98:07 - it will check yes four less than equal
98:08 - to 4 yes it is not L than but yeah it is
98:11 - equal to four so in this case also I
98:14 - will get printed and value of I will be
98:16 - five now it will check I equal to 5
98:18 - whether 5 less than equal to 4 no it's
98:20 - not so
98:21 - this is the false condition and we can
98:23 - come out from the loop okay so same
98:26 - thing we have to do in while loop also
98:28 - so how we can do it let's me just go
98:31 - into the terminal and I will just
98:33 - comment out this part
98:35 - okay so here what I will do I will
98:38 - Define the variable I equal to Z and I
98:40 - will give the condition like
98:43 - while and condition will be I should be
98:46 - less than equal to 4 and do what do
98:50 - nothing just Eco uh sorry Eco my name
98:56 - that is the aush okay and here you can
98:59 - do done and also to increment you can
99:03 - increment like this let i++ okay here we
99:06 - for forgot to increment uh this one so
99:11 - here uh we will increase the value of I
99:16 - okay so the same thing we have to do and
99:20 - uh now let's check whether this works or
99:23 - not so I will just give the appropriate
99:26 - permission uh sorry toore while
99:30 - loop
99:32 - Clear /2 while loop so here you can see
99:37 - no such file or directory why it's
99:39 - showing like
99:43 - this
99:44 - [Applause]
99:46 - uh okay let me just copy this code and I
99:51 - will delete this file actually 12 12 is
99:55 - two times so I will create like
99:58 - 13 y loop.
100:01 - sh and paste it contrl
100:05 - s give the appropriate permission 13
100:10 - clear do /13 and here we go and again
100:15 - what is showing line
100:17 - number oh sorry here we have to give the
100:20 - uh
100:21 - this one hyphen
100:23 - EQ less than equal to l e okay now it
100:28 - should run okay so here you can see five
100:31 - times aush has been printed okay so in
100:34 - this uh in this form you can create the
100:37 - while loop okay so again uh if you want
100:40 - to use the while loop with an array we
100:41 - can use it also like uh to print the
100:44 - array so I will just create the array uh
100:48 - array equal to I will write 1 2 3 4 5 so
100:55 - size of array is five and uh less than
100:59 - equal to 5 okay or less than equal to 4
101:02 - it doesn't matter here and I will just
101:07 - eco eco the
101:10 - array array
101:13 - indexes
101:14 - okay and let me just again run the
101:18 - script and here you can see we have
101:19 - successfully accessed all the elements
101:21 - of an array so in this case you in this
101:24 - way you can use the Y Loop so I hope you
101:26 - got it and I will add this particular
101:28 - file in our GitHub repository so that's
101:31 - all for today's guide and I will meet
101:32 - you in the next video thank you thank
101:33 - you for
101:35 - watching now in this video I'll be
101:38 - talking about the unti loop okay so
101:40 - already we have covered the for Loop
101:42 - here you can see and the while loop okay
101:44 - so now let's start with the UN Loop okay
101:46 - so before starting let me first tell you
101:48 - about this what uh what is this how this
101:50 - Loop actually works so until Loop is
101:54 - basically it
101:57 - works
101:59 - sorry it works until
102:04 - the condition is
102:07 - false condition is false okay so it's
102:11 - quite interesting like it works when
102:13 - until the condition is false whenever
102:14 - your condition becomes true it you you
102:16 - will come out of the loop just like the
102:18 - reverse of the while loop Okay so it's
102:21 - just like you if you will say like 2 is
102:23 - greater than five so yeah it then in
102:27 - that condition the loop will run if you
102:29 - will say like 6 is greater than five now
102:31 - in that condition this Loop will not
102:33 - work like you will come out of the loop
102:36 - okay so I will uh do a visualization for
102:40 - you and I will open up my pain
102:43 - to show you but before that let me just
102:45 - write the syntax here uh sorry what
102:48 - happened
102:49 - here
102:51 - uh wait a minute guys I will open the
102:54 - pain in different window yeah and I will
102:58 - open up my terminal okay so now let me
103:00 - just create the Syntax for you so the
103:02 - syntax is very easy just like the while
103:04 - loop so you have to just give the until
103:07 - and the whatever the condition you will
103:08 - provide here condition and the do and
103:12 - then here you will write the code and
103:15 - done okay this is the basic syntax and
103:18 - the increment decrement whatever you
103:20 - want do here you can do like this okay
103:22 - i++ or whatever okay so here you can see
103:26 - uh I will just copy up this syntax and I
103:28 - will open up my paint so that will be
103:31 - easy for you to understand so I will
103:33 - take the same example of printing the
103:35 - name and all those things because that
103:38 - will be easy for you to understand okay
103:40 - so here uh I want to print my the same
103:42 - thing like my theme so I will provide
103:44 - the variable I equal to Z and I should
103:46 - be less than equal to three I will
103:49 - choose right now so it will print I
103:51 - think four
103:53 - times and then I will uh increase the
103:58 - increment let
103:59 - i++ and here I will write the
104:02 - code uh the code will be like iush I
104:06 - will just write like this and here what
104:09 - you have to do you have to give the
104:10 - wrong information like false condition
104:13 - you have to provide so here I will do
104:16 - like I greater than equal to 3 so here
104:20 - if is false then it will execute the
104:23 - this code okay so value of I so I am I'm
104:27 - writing like this V ofi and then the
104:32 - condition
104:34 - check okay and uh then
104:39 - increment okay or you I can write like
104:42 - this print also okay so currently value
104:45 - of I is I equal to 0 so 0 greater than
104:49 - equal to 3
104:51 - yes condition is false okay so if false
104:54 - then it will execute so it is right now
104:57 - 0 greater than equal
104:59 - to three that is what false okay so in
105:03 - this case what it will do it will print
105:05 - iush and the value of I will get
105:07 - increased by one so I will be one right
105:10 - now so here again it will check 1 is
105:13 - greater than equal to 3 condition is
105:15 - false so again it will what it will do
105:16 - it will print okay so it will print now
105:19 - condition will increase by 1 that is now
105:21 - I will become two so I equal to 2 so
105:24 - here again 2 is greater than equal to 3
105:27 - so again this condition is false so a
105:29 - will get
105:30 - printed okay so now I increment by one
105:33 - that is I will become three so now for I
105:35 - equal to 3 so 3 greater than equal to 3
105:39 - yes condition is uh like
105:41 - uh false it will be false okay and I
105:45 - will get printed and increment by W now
105:49 - I equal to 4 so 4 is greater than equal
105:52 - to 3 yeah condition is now true so now
105:55 - you will come out of the loop okay so in
105:59 - this way until basically just the
106:01 - opposite of Y Loop like if condition is
106:04 - false the loop will execute otherwise
106:07 - not so let me just uh uh do with this
106:11 - uh uh what you can see what you can say
106:13 - like uh run this loop I will provide the
106:17 - I equal to Z and I will use until Loop
106:21 - until condition will be dollar of I is
106:26 - only greater than if I use or greater
106:28 - than equal to three so in this case
106:32 - do
106:36 - Eco aush okay and just do it done
106:41 - here and uh you have to just increment
106:45 - the value of I also okay now we are good
106:48 - to go I will just give the appropriate
106:50 - permission to this
106:52 - file 14 okay do /4 and uh we got some
106:58 - kind of error here line number 21 syntax
107:05 - error
107:07 - okay okay here I
107:10 - do semicolon let me just check
107:14 - now unexpected End of
107:18 - Line let me just check the syntax like I
107:21 - equal to Z until dollar of I is greater
107:24 - than equal to 3 do Eco iush and then let
107:31 - i++ and I have done
107:34 - here I have done here right two and
107:41 - done okay uh
107:43 - so here you can see we have not comment
107:46 - out this so let me just comment it and
107:48 - again I will run this script let me just
107:50 - clear this screen and
107:53 - sl14 yeah so here you can see uh the
107:56 - loop has been
107:57 - executed that is greater than equal to
108:00 - if I will do so it will run five time
108:03 - four times I
108:04 - think let me clear the
108:07 - screen okay the three times I is greater
108:09 - than equal to three okay it will run
108:11 - only three times okay I'm sorry for for
108:14 - here like uh here here like condition
108:18 - will get true yeah condition will get
108:20 - true here because it is equal to three
108:22 - so in this case it will come out of the
108:24 - loop and there will be no further check
108:26 - okay so it will print
108:28 - only three times
108:30 - okay so uh now what I will do I will let
108:33 - me just try uh what you can say we can
108:36 - print the table okay so you can print
108:40 - the table of any number like if you want
108:42 - to print the table of five
108:46 - okay so you can do like this uh you can
108:51 - write the expression here like whatever
108:54 - the expression you write like
108:56 - dollar uh let me just write for you I
108:59 - will just uh
109:02 - dollar parenthesis and you have to
109:04 - provide the number that is the uh any
109:07 - number five into and you will do like
109:11 - this dollar I and here just do zero and
109:15 - here you provide 10 okay and I hope
109:20 - should run so here you can see uh no we
109:24 - will start with the one okay so let's
109:28 - check so here you can see and here we
109:31 - need to do
109:35 - 11 okay so here in this way you can
109:37 - print the table of any number also you
109:40 - can do your customized changes like uh
109:42 - you can take input from the user and
109:44 - then passing that value here and then
109:47 - give the result on the terminal okay so
109:49 - I hope you you liked it guys and you got
109:51 - to know about the unop and I will post
109:54 - all the source codes of this particular
109:56 - video in our GitHub repository you can
109:58 - access from there and I will provide the
110:00 - link also in our description okay so
110:03 - that's all for today's and I will meet
110:04 - you in the next video so thank you for
110:06 - watching
110:09 - bye-bye now in this particular video
110:11 - I'll be talking about a break and
110:13 - continue okay so we will learn about
110:15 - these two keywords in our shell
110:17 - scripting so let me first create the
110:19 - file with the name like
110:21 - break and
110:23 - continue
110:25 - Dosh okay we are good to go let me add
110:29 - the She Bang because without this we
110:31 - cannot run our script okay so now uh let
110:35 - me just tell you the execution like what
110:37 - and what is this so let me first talk
110:39 - about the break okay so break is
110:42 - basically it breaks
110:46 - the sorry it oh what I'm doing here yeah
110:50 - man it breaks it breaks
110:53 - the
110:56 - execution of a loop okay so basically it
111:00 - breaks execution of a loop and continue
111:03 - is nothing but it
111:06 - skips the execution on some certain
111:10 - condition
111:12 - okay so we will do and do the Practical
111:16 - part of this so so break will basically
111:18 - it will break the execution and it will
111:21 - not do the further operation but in
111:24 - continue it will execute like it will
111:26 - skip that particular part okay so uh let
111:29 - me just start with the fall Loop because
111:31 - we'll be using the fall Loop for the
111:33 - implementation break and continue and
111:35 - also you can use while loop also it's
111:37 - all upon you so I will simply first uh
111:40 - demonstrate you how the things works
111:43 - okay so for this we will need to uh
111:46 - create one Loop so I'll be created for
111:50 - so here I will do I equal to Zer I
111:53 - should
111:54 - be uh what you can
111:56 - say I should be less than equal to uh
112:02 - 10 I ++ and I will simply write now I
112:05 - will just Eco the value of I ecoo I okay
112:11 - so now let me just add the certain
112:13 - permission for
112:15 - this 15 okay dot SL 15
112:22 - sorry yeah so 1 to 10 the numbers are
112:25 - getting printed okay from 0 to 10 sorry
112:28 - so suppose in some condition you want
112:32 - like
112:33 - if uh if I is equal to uh five then
112:38 - after that your Loop should not execute
112:41 - okay so at this type of certain
112:43 - conditions uh you will execute from the
112:46 - loop okay so how you can do it you have
112:49 - to just provide the if
112:53 - condition uh like this
112:56 - if uh
112:59 - sorry if dollar I is equal to some
113:04 - number that is five so in this case what
113:07 - you have to do then you have to just
113:11 - break the loop and uh what you can do
113:17 - else you have to just eal this value of
113:23 - I
113:25 - okay so you have to just save it okay
113:29 - and I will run the loop here
113:32 - again so uh I think I'm getting some
113:37 - kind of syntax error at line number
113:41 - uh 13 if then equal to 5 yeah we have
113:46 - not closed the if condition okay
113:53 - clear the screen
113:56 - again okay sorry in else condition we
113:59 - are not writing anything right now so
114:03 - now I will write fi here and now you
114:06 - will get to know about how the things
114:09 - are working so here you can see the loop
114:11 - is getting uh started from zero and it
114:13 - executing till 4 but when if your value
114:16 - of I is equal to 5 then in this case
114:19 - what is is happening your Loop is not
114:22 - executing further okay so similarly uh
114:26 - in case of continue we will see and I
114:29 - hope you got it like how the break
114:31 - condition works okay suppose if you want
114:33 - to give some uh other number like if you
114:35 - want to give two okay so at at that time
114:38 - uh your Loop also will get
114:42 - uh break okay so two save and I will
114:48 - just run the script again so here you
114:50 - can see Zero and one is only printed
114:53 - okay so now we will talk about the uh
114:56 - continue so I will just simp simply copy
114:59 - this Loop and I will just here paste it
115:03 - and I'll write like this here comment
115:07 - out for you guys because you will need
115:09 - this
115:10 - code continue and here I will use only
115:13 - the
115:14 - continue okay so here what it will do it
115:17 - will skip that particular part okay if
115:19 - if I will run this loop again so here
115:21 - you can see it has escaped to okay let
115:23 - me first clear this screen so that uh
115:26 - and I will just comment out this part
115:29 - because you should not get confused okay
115:32 - so here you can see it has printed now
115:34 - you will see two is not getting printed
115:37 - okay why because it is execute continue
115:40 - statement basically skips that
115:42 - particular part
115:44 - okay so that's all about the break and
115:46 - continue uh if you want like more
115:49 - example uh let me just uh create uh like
115:52 - what we will do we will just take the
115:53 - input for the user from the user in the
115:56 - for Loop and based on the user input we
115:59 - will break this statement okay so I'll
116:03 - just comment out this all
116:05 - also and I will paste it here and here I
116:08 - what I will do I will do
116:12 - read U input okay and I will Eco
116:18 - here
116:20 - enter your
116:22 - AE or here I can give the variable name
116:25 - age also it okay so here I will do if
116:31 - age is equal to or less than we can say
116:36 - if a is less than
116:39 - 18 so then what we have to do
116:45 - Eco you are not
116:48 - allowed
116:50 - in party like this okay and else what we
116:54 - can do else uh Eco you are allowed in
117:01 - party okay and uh here after printing
117:06 - this we can just come out of the loop
117:08 - and you can use a break statement okay
117:11 - so clear and again run the loop and here
117:15 - it is showing inter your AG my age is
117:17 - supposed 23 so you are allowed in party
117:20 - okay so again it is asking 34 okay so
117:24 - now if I enter 12 so here you can see
117:26 - you are not allowed in part and you came
117:28 - out of the loop so that is the use case
117:30 - of the breaker statement to come out of
117:32 - the
117:33 - execution okay so uh that's all for
117:36 - today's guys and I hope you liked it and
117:37 - if you have any queries you can ask us
117:39 - in the comment section and you will get
117:40 - the whole source code in our get
117:42 - repository so that's all for today's and
117:44 - I will meet you in the next video thank
117:46 - you thank you for
117:48 - watching hello hello guys now in this
117:50 - particular video we'll be automating the
117:52 - creation of files and directory using
117:54 - the F Loop okay so already we have
117:56 - create uh learned about the F how the
117:58 - things work okay so let me first create
118:01 - the file using the 16 and automating
118:05 - file or di creation and Sh okay I will
118:10 - add the hashbang or shebang whatever you
118:13 - want to call
118:15 - okay and let me tell you the use case
118:18 - first so use case will be like this you
118:20 - will be creating the one fall Loop okay
118:23 - and using that you have to create files
118:28 - okay or
118:31 - directories okay so this is the use case
118:33 - simple use case if you want to perform
118:35 - on your own then that's a very good
118:37 - thing for you like you will learn to
118:38 - know how the things work and if not I'm
118:40 - with you and I'll be writing the code
118:42 - along with you guys okay so what do you
118:45 - have to do you have to first of all take
118:47 - the input from the user okay like
118:49 - directory name or first I will create
118:52 - the uh loop for the directory
118:56 - creation so I'll write the comment as
118:59 - like this and what you have to do you
119:00 - have to take the input from the user
119:03 - okay so we have to do read di name I
119:08 - will uh write the directory name di name
119:12 - and I will use the loop for i = 0 to I
119:17 - less than equal to 5 so suppose I have
119:19 - to create six director so I will use
119:22 - five directories so I will use I less
119:24 - than equal to 4 and I ++ okay and here
119:28 - what you have to do you have to create
119:30 - the directory so how you can create it
119:33 - using uh mkdr command and you will
119:36 - provide simply the directory
119:38 - name okay and if you want to uh add some
119:42 - 0 1 2 3 after this so you can do like
119:44 - this also like dollar I okay so we will
119:49 - do do that thing later but uh um now
119:52 - let's do this one okay so here I'm just
119:56 - Eco like enter the
120:00 - directory name which you
120:04 - want okay control s to save again we
120:08 - will need to give the particular
120:10 - permission to this file that is the
120:13 - 16 sorry not 116 clear the screen do/ 16
120:18 - in ENT the directory name I need
120:21 - uh uh let's write the
120:24 - Linux Ford and here you can
120:29 - see file exist why it's showing like
120:33 - this file
120:35 - exist okay Linux TI okay yeah it already
120:38 - exists so we will need to add this one
120:42 - uh
120:43 - dollar I to create multiple directories
120:47 - okay so I will just uh
120:50 - uh delete this okay because you cannot
120:52 - have the same name like you cannot have
120:55 - the two directories with same name okay
120:58 - Enter the directory name Linux
121:02 - D okay Linux Di and here we go so all
121:06 - the direct has been created 0 1 2 3 4
121:11 - okay so in this way you can create
121:13 - multiple directories we you want like uh
121:16 - suppose in some cases we need some
121:18 - directory like test so you can create
121:21 - this also like you can write like this
121:23 - test and again the D will get created
121:26 - like test 0 1 2 3 4 all these things
121:30 - okay so uh that's a very easy uh use
121:34 - case so again now let's create uh some
121:36 - files but before that I will need to
121:38 - delete all those things because I don't
121:40 - want uh much uh uh files in my this
121:43 - directory so I will delete this
121:48 - so
121:51 - let me choose all those things and I'll
121:53 - delete at a
121:55 - time okay
121:57 - okay
121:59 - okay move to
122:02 - trash okay it's yeah it's this OS is
122:06 - running in Virtual box that's why it's
122:08 - slow little bit
122:10 - slow okay bro so uh what we can do so we
122:15 - will now create the file creation script
122:19 - okay so
122:21 - Eco enter
122:23 - your file name okay so here again I will
122:28 - use the same Loop and read the read file
122:34 - name and all those things so here I will
122:36 - to read file name or a student name
122:39 - suppose uh there is some student list
122:42 - and you want to store their data in that
122:43 - particular list so how you can do it so
122:46 - you will need to use touch and uh here I
122:49 - will start with the one okay so let's
122:54 - clear the screen and just I will comment
122:58 - out these part because I don't want to
122:59 - create directory right
123:01 - now okay I'll simply run this scrip
123:04 - enter your file name so I will use a
123:07 - student like this and all the file will
123:10 - get created like 1 2 3 4 okay so I have
123:16 - not used here uh
123:19 - uh a student name variable so I will
123:24 - need to delete all these things again
123:26 - sorry for
123:28 - that okay delete
123:31 - it and again I will need to run this
123:34 - script here so let me clear the
123:37 - screen run the script enter the like
123:40 - this student so here you will see like
123:42 - all the St 1 2 3 4 has been created so
123:46 - in this way you can create 100 of files
123:49 - using the for Loop and that's a very
123:51 - good use case like suppose in some cases
123:53 - you need multiple directories so you
123:56 - will not do manual task okay whatever
123:58 - the amount you need amount number of
124:00 - directory you will just provide it here
124:02 - okay the number of directory you need
124:04 - and that's all for today and I hope you
124:07 - liked this use case again in our next
124:10 - video we will see some use cases or we
124:12 - will move with some different topics so
124:14 - that's all for today's guys and I'll
124:15 - will meet you in the next video so thank
124:18 - you for watching and I'll meet you next
124:19 - one thank
124:21 - you hello guys now in this particular
124:23 - video we'll be uh automating the user
124:25 - creation okay so how we can do it let's
124:29 - uh start with the video and I will
124:30 - create the file that is 7 user creation
124:34 - Dosh
124:36 - okay just add the
124:40 - hashbang okay so let me first tell you
124:42 - the use case okay what will the use case
124:44 - so here the use case will be the F Loop
124:46 - first we want multiple users and then
124:50 - username
124:52 - input then
124:54 - password and also choice whether user
124:57 - want to add user or
124:59 - not okay so I will comment out this and
125:01 - I will just create the fall Loop first
125:04 - the loop will be I equal to 0 and I will
125:08 - just run this Loop till less than equal
125:10 - to 2 and I
125:13 - ++ okay so here first I will take the
125:16 - input from the user so I will first uh
125:19 - use enter your choice okay if choice is
125:23 - one then uh we will add user otherwise
125:27 - no read
125:29 - Choice okay so we will read choice and
125:34 - we will apply the if condition here
125:38 - if so one space here if dollar
125:42 - Choice hyphen EQ it means equal to one
125:48 - then what we have to do then we have to
125:51 - take the username input read username so
125:55 - here I will do just uh
126:00 - Eco enter the
126:02 - [Music]
126:04 - username okay and next I will take the
126:08 - input
126:10 - Eco enter the password
126:14 - read password okay so uh now till now we
126:19 - have uh like we will take the input from
126:22 - the user okay so the command that we
126:25 - used to add the user that is the user ad
126:28 - then we will use sudo user ad and I will
126:31 - provide hphm hyph /bin
126:35 - bash okay and the
126:38 - username so username is this one and
126:41 - this we have a store a
126:43 - username and then we will pass the
126:45 - password because password takes the two
126:47 - parameters okay okay so I will pass like
126:50 - this okay
126:51 - so
126:54 - dollar
126:56 - username dollar
126:59 - password and the pipe is pipe works
127:02 - because it passes the uh whatever the uh
127:07 - data is here it passes this side okay it
127:09 - will pass the data to this command that
127:11 - is sudo CH and the CH password it is so
127:17 - we will write CH password password okay
127:20 - so this command will add the password in
127:22 - the uh system okay or for that user you
127:26 - can say so now the else part will be
127:30 - else just break out of the loop and uh
127:33 - close the if condition okay I will just
127:38 - uh clear and I will just uh add the
127:45 - permission do/ 17 enter your Choice my
127:48 - choice is one enter username I will
127:51 - enter like Hello
127:54 - World password Linux
127:57 - machine okay so here you can see uh
128:01 - authentication we're getting some kind
128:03 - of error like user hello
128:08 - world
128:10 - okay password not change enter your
128:12 - choice let me just enter some other
128:15 - number to break out of the loop okay let
128:17 - me check with the code
128:22 - in so read choice we are getting the
128:24 - choice enter the username that is the
128:26 - read username then read password then
128:29 - sudo user add hyph name hyph as bin bash
128:32 - and we have passed the username here
128:34 - okay then Eco username and here you can
128:39 - see the password okay we have okay there
128:43 - was a m mistake so again let me just run
128:46 - the command uh so
128:49 - but before that let me just delete that
128:50 - user Del user hello world I think it
128:54 - was okay
128:56 - done so again just run this script and
128:59 - enter your choice my choice is one and
129:02 - uh username anit I will write and uh
129:05 - password I will
129:07 - write hello
129:09 - world okay so now it is asking me to
129:13 - again enter my choice whether I want to
129:15 - add a user or not so I will I don't want
129:17 - so I will write zero so we are out of
129:20 - the loop now I will log in into the
129:23 - anit and enter the password hello
129:27 - world so here you can see who am I if I
129:30 - will do so it is anit okay so in this
129:34 - way uh we can
129:37 - U uh like automate the user creation if
129:40 - you want to add multiple users suppose
129:41 - if you want to add only one user at a
129:43 - time then you can use this commands Okay
129:46 - these much of a script and you don't
129:49 - need any if condition and all those
129:50 - things okay so in this way you can
129:53 - automate the user creation I hope you
129:54 - liked it and if you have any quy then
129:56 - please you can ask us in the comment
129:58 - section so that's all for today's video
129:59 - and I'll meet you in the next one so
130:01 - thank you thank you for
130:03 - watching hello guys now in this
130:05 - particular video we will be learning
130:07 - about the test command Okay so before
130:09 - starting let me first create the file
130:11 - that is
130:12 - 18 test command you can write Dosh okay
130:17 - so let just add
130:20 - the hashbang okay bin bash yeah so
130:24 - before starting this particular tutorial
130:26 - let me first tell you about the basic
130:28 - like description about the test command
130:29 - so basically test command is
130:31 - basically uh use to test the particular
130:38 - expression test the
130:40 - particular expression or particular
130:44 - condition okay so if condition is true
130:50 - then it will return
130:54 - zero
130:57 - otherwise return one okay so if
131:00 - condition is true it will return zero
131:02 - where uh or otherwise it will return one
131:06 - okay so it's basically uh like one of
131:08 - the another method of writing this
131:10 - expression like whatever we write in
131:12 - this if condition whatever the
131:15 - expression we write here whether of five
131:17 - is equal
131:19 - equal to 5 okay so it just we can just
131:23 - replace these part using the test
131:25 - command Okay so but also there are many
131:29 - uh like many functionalities or many
131:32 - options are being used with the test
131:34 - command like if we want to check whether
131:36 - two strings are equal whether there is
131:38 - some file uh exist or not whether the
131:41 - file is empty or not whether the file or
131:44 - directory like if we want to check uh
131:47 - whether some particular directory it is
131:49 - directory or not or some mathematical
131:53 - operation like equal to greater greater
131:55 - greater than all those things okay so we
131:58 - can do all those operations so let's
132:01 - start so first we will start with the
132:04 - string comparison like whether two
132:06 - strings are equal or not or not equal to
132:09 - whether a string is empty or not all
132:11 - those things we will do so how we can do
132:13 - it let me just uh create the two
132:16 - variables that is a and and
132:19 - B so I'll write my name aush and b equal
132:22 - to
132:23 - iush in
132:27 - this okay double course and now I will
132:30 - write the if condition and I will use
132:32 - the test command if test so it is
132:34 - basically like uh uh what we can say
132:38 - advis to use the double quote for the
132:41 - variable while using the test command
132:43 - okay if dollar 1 equal to Dollar B
132:49 - then what we have to do then we will
132:51 - just equo a
132:54 - is equal to P okay and I will just uh
133:00 - write the lse all part also lse equal a
133:04 - is uh not equal to B okay just close the
133:11 - if condition and clear the
133:14 - screen and CH mode plus X8
133:19 - 18 do/ 18 okay so here you can see a is
133:23 - equal to B now what I do if I just
133:26 - change the uh B
133:29 - okay so here you can see a is not equal
133:33 - to be equal not equal it's
133:36 - equal
133:38 - okay let me just clear this screen again
133:40 - and run the script yeah so here you can
133:42 - see a is not equal to B okay also uh
133:46 - test command uh offers me many more
133:48 - functionalities like string size if you
133:51 - want to get okay so how we can do it
133:54 - using hyphen and option
133:57 - okay
133:59 - like not basically string size it
134:01 - basically checks whether string is uh uh
134:04 - what we can
134:05 - say empty or not okay so how we will do
134:09 - it using
134:11 - test hyphen n
134:14 - dollar dollar a we will use so basically
134:18 - if there is some string then it will uh
134:24 - Eco string
134:30 - is not
134:32 - empty
134:34 - okay em PTY y okay so hyph option is
134:40 - checks whether there is a string or not
134:42 - if a string is not empty then it will
134:46 - result true it will return it return
134:50 - true if it is not empty otherwise it
134:53 - will return false that it means the
134:56 - string is empty simple so how you can do
134:59 - it the string is
135:03 - empty so we are checking a for a so for
135:06 - a there is a string so it will it should
135:07 - return a string is not
135:09 - empty so string is not empty is
135:12 - returning if I will just pass hyphen B
135:14 - uh dollar B here so it will it should
135:16 - return a string is empty
135:19 - okay so it is returning my string is not
135:21 - empty what is returning yeah uh let me
135:24 - just again run the
135:25 - script okay it is it is also returning a
135:28 - string is not
135:30 - empty so for this we we use hyphen Zed
135:33 - option sorry for that we will use
135:35 - hyphone Z option here so clear the
135:38 - screen okay so again it is is showing me
135:41 - same thing okay but
135:45 - uh okay okay sorry uh I'm sorry here we
135:48 - have to use
135:50 - this double
135:53 - quotes Okay but it's still it is showing
135:56 - string is not empty but why it is
136:00 - empty there is something wrong we have
136:03 - done
136:04 - [Music]
136:07 - here yeah yeah sorry sorry what we have
136:10 - to do here a string this is empty string
136:15 - so this condition is getting true and it
136:17 - is just displaying with this Eco message
136:20 - so that's a wrong if I do something else
136:24 - here condition will get false and then
136:28 - it will display me this okay so so so
136:30 - there is nothing much so we have to just
136:33 - replace this
136:35 - Eco with a
136:39 - one string is empty or here we can just
136:42 - do string is not empty okay so now it
136:46 - should return string is not empty so
136:50 - here you can see string is not empty if
136:52 - I will just remove this part it will
136:53 - display me a string is
136:56 - empty okay so it was just if it is true
136:59 - then it will execute obviously
137:01 - okay so in this way you can do string
137:04 - comparisons
137:06 - also so now moving forward uh in
137:08 - numerical part what you can do if we
137:11 - want comparison like equal to greater
137:14 - than all those things so how we can do
137:15 - it let's just do it okay so I will just
137:19 - copy this much
137:21 - part and again I will paste it here and
137:24 - I will provide here some numbers like a
137:26 - = to 10 and b equal to 20 and here if
137:30 - test hyph we will not provide hyphen
137:33 - here we will use uh the same thing which
137:37 - we use for numerical like hyphen EQ so
137:40 - here I will use dollar
137:43 - a okay if dollar a equal to
137:50 - dollar B okay I'll remove this
137:53 - one so here if a equal to B so it here
137:57 - we will print a
138:00 - is equal to B if it is true
138:04 - otherwise here we will just print not
138:07 - equal okay just again clear the screen
138:10 - and run the command so string is empty
138:12 - and not equal okay so if I will do 10
138:15 - here also so in this
138:19 - case a is equal to b or you can check
138:24 - other options like L than LT for less
138:27 - than here I will just
138:30 - uh add one more zero that is 100 and
138:33 - clear the screen run the
138:36 - script okay so here we will just change
138:40 - the equest statement like a is greater
138:44 - than b sorry less than
138:49 - less than b okay so clear the screen
138:53 - again run the script so a is less than B
138:56 - that means it means
139:02 - uh it means this statement is true and
139:06 - this one is executing and if I write
139:09 - here so here we will see not less than
139:12 - b so not less than b so in this case you
139:15 - can use uh multiple things using test
139:18 - command like you can play with the
139:20 - numerical part string also okay so
139:24 - instead of this double bracket whatever
139:26 - we use in this one like double bracket
139:28 - and spaces so we it is easy to use this
139:30 - one okay so now moving forward we will
139:33 - uh use some like file comparisons also
139:37 - so how we can do it okay so I will
139:40 - provide the file name not file
139:42 - name I will use these much of file or
139:44 - hello.txt to play with it so then there
139:47 - are multiple options which we can see
139:50 - like uh hyph s option which is used for
139:53 - checking the uh like uh what we can say
139:57 - checking the if file is empty or not
140:01 - okay so let's start with this
140:06 - so here I will just add the command that
140:09 - is the file
140:11 - comparisons okay so here what we can do
140:16 - if test hyph s and I will provide the
140:19 - file name my file name is
140:22 - hello.txt then if file is empty hyph s
140:25 - is used to check if file is empty or not
140:27 - we will just Eco file is
140:35 - empty otherwise else Eco file is not
140:40 - empty it means if condition is true then
140:43 - it will
140:44 - execute line number 32 and if not it
140:47 - will will execute line number
140:49 - 34 okay so I will just uh uh comment out
140:53 - all other leave it uh let's
140:55 - check so let me first check the
140:57 - hello.txt so in hello.txt there is
141:01 - nothing so it should return file is
141:04 - empty
141:07 - so we have got some kind of error so the
141:11 - error is we have not closed the if
141:14 - condition clear the screen so file is
141:18 - not empty it it's showing why because
141:22 - uh I don't know if file is empty or not
141:26 - so the file is empty it should display
141:28 - let me just create one more file
141:31 - test1.txt so it is absolutely empty file
141:36 - so again here I will
141:39 - provide test 1.txt
141:43 - clear the
141:45 - screen so again it displaying me file is
141:49 - not empty why
141:51 - so okay
141:54 - [Music]
141:57 - um okay if file is not empty it will
142:04 - display this line okay if file is empty
142:08 - then it will display this
142:11 - line okay okay okay so we have done some
142:14 - mistakes here like we we have to just
142:17 - replace this line here so I don't know
142:20 - why this thing is happening so sorry for
142:23 - that so just uh clear the screen and
142:27 - yeah file is empty now so now what we
142:30 - will do we will just write some text
142:31 - here and now it should display some like
142:34 - file is not empty
142:36 - here so clear the screen and again so
142:40 - here you can see now it's swing file is
142:41 - not empty
142:45 - okay so uh also there are many flags we
142:48 - can use hyund D and all those things
142:51 - okay so there are many flags which we
142:52 - can use to check hyund D is used for
142:55 - check I think whether the uh whatever
142:58 - you are passing that is it is directory
143:01 - or not
143:03 - okay so I will create one directory that
143:06 - is uh uh let's create one directory that
143:10 - is
143:10 - dr1 okay so here I will just pass
143:16 - dr1 if it is directory it is it will I I
143:20 - will display if condition is get
143:23 - true it's a directory
143:27 - or it is not a directory I will display
143:31 - here it is not our
143:35 - directory just uh run the
143:39 - script okay so it is a directory and I
143:42 - will provide some different name here
143:43 - like suppose I provide hello what was
143:46 - the file name that is test one.txt and
143:50 - now it should
143:52 - display it is not a directly so yeah
143:55 - it's correct okay so uh I hope you liked
143:58 - it guys we can use test command while
144:00 - providing the conditions in if with if
144:03 - conditions so okay so that's all for
144:05 - today's I know there were some mistakes
144:07 - today so sorry for that and I will meet
144:10 - you in the next video okay so thank you
144:12 - for
144:14 - watching hello guys now in this
144:16 - particular video we will talk about
144:18 - functions okay so what is function and
144:20 - how everything works we will discuss all
144:22 - the things in this particular video okay
144:25 - so actually already I have created this
144:27 - uh function. SS file for you if you not
144:29 - then you can also create uh this one
144:31 - okay so let me first discuss about the
144:33 - function what is function the basic idea
144:35 - about it like if you are aware of any
144:37 - other programming language like ccpp
144:39 - Java python s then you might be aware of
144:41 - the function but if not then let me tell
144:43 - you uh about this okay how everything
144:45 - works okay so what is a function so the
144:49 - basic definition which everyone says is
144:51 - like function is a block of
144:54 - code which can be used again and again
145:00 - okay so as the name suggest as the
145:02 - definition so this is the same thing as
145:04 - like it okay so whatever the code if you
145:08 - write some kind of code and you want to
145:10 - use it again and again and again then
145:11 - you can write that particular code
145:12 - inside a function okay suppose you don't
145:14 - want to do some particular task uh
145:17 - repetitively okay then you can use a
145:19 - function okay suppose you have to uh
145:22 - like
145:23 - uh uh what you can say you have to sum
145:26 - two numbers okay then uh you can create
145:29 - a function and then you will just call
145:31 - that function to add those numbers okay
145:33 - so basically the whatever the main
145:35 - benefit we get from the function is the
145:36 - code reuse ability okay it means we can
145:39 - reuse that particular uh code again and
145:41 - again this is the basic idea about the
145:43 - functions okay so now let me tell you
145:46 - about the basic basic uh syntax what is
145:49 - the basic syntax of the function in the
145:51 - C scripting so how we can do it so
145:53 - basically the basic syntax is the
145:55 - function name whatever the function name
145:56 - you want to provide okay the double
145:59 - parenthesis and simply this CRA and
146:02 - inside that cly you have to just write
146:04 - the code okay whatever the code or
146:06 - whatever the operation we want to
146:08 - perform
146:10 - okay so this is the basic syntax which
146:12 - we will be uh using inside this whole
146:15 - tutorial so now let me just create one
146:18 - function with the name greetings okay
146:21 - and I will just Eco something like uh
146:25 - good
146:27 - morning uh good morning iush like this
146:31 - okay and to call the function you have
146:33 - to nothing uh you have to just uh write
146:37 - the name of the function gretings okay
146:40 - and now let me just uh move into the
146:44 - this particular directory
146:48 - okay and now what I will do I will just
146:50 - provide the certain permission to the
146:52 - file CH mode plus x 19 function.sh okay
146:57 - clear the
146:59 - screen do /9 okay so here you can see
147:02 - good morning iuse has
147:05 - been printed okay so here what happens
147:08 - uh suppose we want to again again uh
147:11 - call that function so we can just uh
147:14 - call it again here what happened let me
147:16 - just just copy it
147:18 - again
147:20 - greetings paste it here okay so again it
147:24 - will print good morning as two times
147:27 - okay why it happens because here you can
147:28 - see the name of the function and and we
147:30 - are just Eco this thing good morning I
147:33 - and then we are calling the function
147:35 - okay so with function calling whenever
147:39 - you call any function then it calls this
147:41 - function and whatever the code inside it
147:43 - it
147:45 - gets executed
147:47 - okay so this is the basic functionality
147:49 - of the functions okay
147:52 - sorry now moving forward
147:55 - uh we need to talk about like uh
147:57 - parameterized function and the returning
147:59 - value okay so what is the parameterized
148:02 - function let we first discuss about you
148:03 - so basically in function what happen you
148:05 - pass some parameters okay and uh with on
148:09 - that parameters we do some kind of
148:11 - computation and all those things so I
148:13 - will just create the sum function okay I
148:16 - will just remove this thing and I will
148:18 - create Now parameterized
148:23 - function
148:26 - okay
148:30 - so so the name of the function will be
148:32 - sum aush okay and I will just
148:36 - Eco the sum of uh dollar one and dollar
148:42 - two
148:44 - is not like this uh before parameterized
148:48 - function let me just discuss with the
148:49 - simple function how we will do it like
148:51 - suppose if a equal to 12 and Bal to
148:56 - 13 then C = to Dollar a + dollar
149:02 - B and you have to just Eco the value of
149:06 - C
149:08 - Eco the sum of dollar a and dollar B is
149:14 - the we have to just equal dollar C here
149:18 - okay just save the code and we will just
149:20 - call the sum function and then we will
149:22 - get the result as
149:26 - 25 okay so we have got some kind of
149:28 - error in line
149:30 - number sorry we don't have to provide
149:32 - this parenthesis
149:37 - here okay so okay we are getting
149:41 - uh error not error uh the same string
149:45 - because uh
149:51 - we have not uh added the expression in a
149:56 - right way okay so here you can see for
149:59 - computation like we know like we need to
150:01 - do like this okay then and only we can
150:04 - compute anything okay so here you can
150:06 - see the sum of 12 and 13 is 25 so
150:09 - suppose if you want to uh change number
150:11 - okay so 13 and 14 so we can get result
150:17 - as 27 I think yes 27 so here the thing
150:20 - is we need to change that thing in our
150:22 - this uh inside function but uh what do
150:26 - we want to pass that pass the value
150:28 - while calling the function and in that
150:30 - case we need the parameters okay so how
150:32 - we can do it so in sales scripting we
150:34 - basically pass the parameters as this
150:36 - one like from here we will pass suppose
150:38 - 12 and 13 and then it will act as the
150:41 - dollar one and dollar two okay so in
150:44 - this way we can get so now for this I
150:47 - will just uh like
150:50 - uh provide a equal to Dollar 1 and b
150:53 - equal to
150:54 - doll2 okay and all things will remain
150:58 - same and I will just pass the parameter
151:00 - here 12 and 13 not 12 and 13 let me
151:02 - provide just okay 12
151:04 - 12 and let me clear the screen and again
151:07 - this so here you can see the sum of 12
151:09 - and 12 is 24 now we don't need to change
151:12 - anything in our function we can do
151:14 - changes here okay so now the code now
151:18 - the answer will be different like 167
151:20 - okay so this is basically the
151:22 - parameterized function okay so we can
151:25 - pass parameters inside the function and
151:28 - then with those par and and the
151:30 - computation will happen on those
151:32 - particular parameters okay so this is
151:34 - the basic functionality of the
151:36 - parameterized function let me just
151:37 - create some another function like
151:39 - suppose uh you want to uh get uh get
151:43 - name of a student get a student name I
151:45 - will create a function get a student
151:48 - name
151:50 - okay and uh I will just
151:54 - Eco like this name of student is and
151:59 - here I will just Deco dollar one okay so
152:02 - here whenever you will uh call that
152:04 - particular function and provide the name
152:07 - so let me provide the name as iush and
152:10 - uh clear the screen
152:12 - so here you can see name of student is
152:15 - aush okay so in this way you can pass
152:17 - the parameters okay so now uh let me
152:20 - discuss about you the return type of the
152:23 - function of in cell scripting how this
152:25 - uh works so basically in uh what we can
152:29 - say in cell scripting the return the
152:32 - like method of returning any value some
152:34 - little bit of difference so let me
152:36 - discuss it with you how it basically
152:38 - happens
152:39 - okay so basically what happens whenever
152:42 - you call the function and if you return
152:44 - something then you need to store that
152:47 - return value in a special uh like uh
152:51 - with a special uh symbol we can say like
152:53 - that okay so here if we want to Eco uh
152:57 - and not e if you don't want to Eco you
152:59 - want to just return the value so you
153:01 - have to just
153:04 - write return dollar C okay and after
153:09 - calling the function you have to store
153:11 - the value return equal to you have to
153:15 - write uh uh what I think dollar question
153:19 - mark So it basically stores the value
153:21 - whatever the return okay so if here the
153:25 - return value is there like what
153:27 - basically happens it will store the
153:28 - value uh
153:30 - before like here this sum function okay
153:34 - so if there is uh if it is returning
153:36 - some value then it will store inside
153:38 - this variable return okay but if there
153:41 - is again some kind of any function and
153:44 - and here it is returning something like
153:46 - suppose uh here I create some
153:52 - function okay and here I write
153:56 - the function name as sub okay and here
154:01 - uh the return type will be all the same
154:04 - thing but here in this case now what
154:06 - will happen it will uh store the value
154:08 - of this return value okay so this
154:12 - happens so let me bu before uh going
154:15 - into complex thing let me first discuss
154:17 - with the basic part how how we can get a
154:20 - return value so now you have to just Eco
154:24 - uh the return
154:28 - Eco return value
154:32 - is dollar
154:34 - rdt
154:35 - okay so let me just clear the screen and
154:39 - uh I will just comment out this
154:43 - part
154:45 - okay
154:47 - and let me run the script so here you
154:48 - can see the return value is 67 okay so
154:52 - in this way you can store the return
154:54 - value but now what happens if you if we
154:56 - just
154:58 - uh like uh we do SUB here sub we
155:05 - do okay so in this case let me uh check
155:09 - what
155:13 - happens okay so in this case also we are
155:15 - getting the return value is 67 okay but
155:18 - we have not called the sub function so
155:20 - let me first call the sub
155:22 - function so sub I will provide uh 13 and
155:28 - 14 okay uh not 13 14 133 and 12 and here
155:32 - I will write dollar a minus B so value
155:36 - should be one
155:39 - okay so here you can see return value is
155:42 - one so and now what I will do I will
155:44 - just call the sum function here
155:46 - here before return so now let me check
155:50 - what will be the return value return
155:52 - value will be now 167 okay so now you I
155:55 - hope you got the idea about how the
155:57 - value is stored inside this red uh
156:02 - variable okay so whatever the function
156:04 - is calling before this so that value is
156:07 - getting stored inside this variable okay
156:11 - and whatever uh like if like some
156:14 - function is calling before this one so
156:16 - that value will not be stored inside
156:18 - this okay so this is the thing about
156:21 - return type of a value in a shell
156:23 - scripting okay so that's all for today's
156:26 - guys and I hope you liked in I will
156:28 - update this source code in our GitHub
156:29 - depository you can access that from uh
156:32 - access this code from there okay and uh
156:35 - in our next video we will cover
156:37 - something more important and that is
156:39 - about nested function so we will discuss
156:41 - all those thing about in the next video
156:43 - so that's all for today and if you have
156:44 - any query you can ask us in the comment
156:46 - section thank you thank you for
156:50 - watching now in this video we'll be
156:52 - talking about the nested function okay
156:54 - so actually I have already created the
156:56 - file with the name 20 nested function
156:58 - let me just paste the thing hash uh like
157:01 - shebang okay and now let me just discuss
157:04 - about like basic idea what is the nested
157:06 - function so it basically means as a name
157:08 - suggest you can uh guess like we will
157:10 - just
157:11 - calling function inside a function
157:17 - inside a function not calling also we
157:19 - can say like we can write also function
157:21 - inside a function okay so let me just
157:24 - discuss about the same thing suppose I
157:27 - create one function demo and here I just
157:30 - Eco something like this is a demo
157:33 - function this is a demo function and
157:37 - again I create one more function that is
157:39 - the demo 2 and here I'm writing ecoo
157:42 - this is
157:44 - uh sorry this is a demo to function okay
157:50 - and now what will happen I will simply
157:52 - call this function demo here okay and uh
157:55 - demo to below okay so I will just give
157:59 - the permission for this
158:02 - file okay clear the screen /20 okay now
158:06 - now we are good to go here you can see
158:08 - the both the function has been called
158:11 - okay so it this is the basic thing okay
158:13 - but now what I will do I will just uh uh
158:16 - call this function inside inside this
158:19 - function oh sorry demo two demo two okay
158:24 - so now what will happen it will
158:26 - basically call the function okay so here
158:29 - what happens the demo function has been
158:31 - called so here it saw like uh we have to
158:34 - Eco so it EO this part and again it
158:37 - check demo two function is also called
158:38 - so it gets the print the content of this
158:41 - demo to function so in this way uh our
158:45 - this nested fun function works but what
158:47 - if you want to call the
158:50 - uh but what if you want to call the uh
158:55 - like uh not call if you want to write
158:58 - the function inside a function so now
159:00 - here what I can do I can just call this
159:02 - this function here also demo
159:05 - to and clear the screen and again we
159:07 - will get the same result okay this is
159:09 - the demo to function okay so now what I
159:13 - will
159:14 - do
159:17 - uh we will take the one use case of
159:19 - summation and addition uh sorry
159:21 - summation and subtraction okay and we
159:24 - will work on those thing okay so I hope
159:26 - you got the idea about how everything
159:28 - works so let me just comment out these
159:30 - things and I will create the
159:32 - parameterized function that is first I
159:33 - will create the sum and here I will uh
159:38 - Eco the sum of and I will pass the
159:41 - dollar one and dollar
159:42 - two is and and here I will just uh do
159:47 - the computation part that is the dollar
159:50 - uh dollar 1 + dollar2 okay and let me
159:55 - first check uh whether the thing is
159:57 - working or not sum 2 and four and uh do/
160:02 - 20 and okay yeah it is working the sum
160:04 - of 24 is six okay so now I will what I
160:07 - will do I will just uh create this sub
160:10 - function also here and I will just
160:14 - eco
160:16 - the sum of uh not sum the sub the
160:22 - difference of dollar one and dollar two
160:28 - is and here we will do the computation
160:30 - part that is the dollar one minus
160:35 - dollar2 okay and then we will just uh
160:38 - call the function inside the sum
160:40 - function that is sub 4 and
160:43 - two okay so let me just clear this
160:47 - screen again and hit enter so here you
160:49 - can see the sum of four and 2 is two
160:53 - yeah uh sorry I have done something yeah
160:57 - let me just uh give it proper space I
161:01 - clear this screen and yeah we are good
161:03 - to go now here you can see the sum of 2
161:05 - and 46 we have passed 2 and 4 here and
161:07 - we are getting result from here 2 and 46
161:10 - and substraction of 4 - 2 that is equal
161:13 - to 2 so we are getting the exact result
161:14 - let me change the value and I will write
161:16 - 80
161:17 - here uh 80 and here I will do like 40
161:26 - okay so here you can see we are getting
161:29 - the same result like expected result we
161:31 - are getting okay so in this way we can
161:34 - do the uh nested function and all those
161:36 - things okay so I hope you liked it and I
161:39 - hope you got the idea about how the
161:41 - nested function works okay so that's all
161:44 - for today's video guys and I hope you
161:46 - liked it and if you have any quer you
161:48 - can ask us in the comment section and
161:49 - you will get the all the source code in
161:51 - our GitHub depository and you will get
161:53 - the link in the description so thank you
161:55 - for watching and I'll meet you in the
161:56 - next video thank you
161:59 - bye-bye now in this video we will be
162:01 - talking about some basic and the
162:03 - important concept that is the local
162:05 - variable and the global variable okay so
162:07 - actually we have already covered the
162:08 - functions so that is very important to
162:10 - know about the concept of local variable
162:12 - and the global
162:13 - variable so let me create the file with
162:16 - the name lare and the
162:18 - gware dosh okay and I'll just add the
162:21 - shebang here bin bash okay now we're
162:25 - good to go so I will start with a basic
162:27 - definition of the local variables so if
162:30 - you like um I will just write local
162:33 - variable so we can Define the local
162:35 - variable as
162:37 - the uh variable which is uh which is
162:42 - sorry uh which which is declared inside
162:48 - a function is called as local variable
162:53 - okay sorry for
162:54 - mistakes okay my typing is not good so
162:58 - much that's why it is happening so so
163:01 - what is the local variable so local
163:02 - variable we can Define it as like the
163:04 - variable which is declared inside a
163:07 - function that is the local variable okay
163:09 - so so suppose if I am creating one uh
163:12 - variable that is the function one
163:16 - okay name of the function is function
163:17 - one and I'm defining a variable that is
163:20 - a equal to 20 sorry 10 so in this case
163:24 - what is this so a is nothing but the
163:27 - local variable okay so if I will do e a
163:31 - here uh Eco dollar a and I will just
163:35 - call this function function
163:38 - one and let me just add certain
163:41 - permission to this file that is the
163:44 - 21 clear do
163:50 - /21 okay so now I will just run the
163:53 - script 21
163:55 - uncore okay so it's not
163:59 - uh okay let me just again yeah clear the
164:03 - screen sl21 now okay so here you can see
164:06 - we are getting the value as a value of a
164:09 - as a 10 okay so this is the local
164:11 - variable like we have declared this
164:13 - variable inside a function so so that we
164:16 - can access this inside this function
164:18 - only not outside of this function so if
164:20 - you want to print uh like uh uh without
164:25 - function calling okay I will just print
164:28 - here Eco dollar
164:30 - a so let me let's uh see what happens so
164:35 - it will I don't think it will print
164:36 - anything clear the screen again so here
164:38 - you can see we are not getting any kind
164:40 - of result here okay so this is happening
164:43 - because we can't access the uh Lo local
164:45 - variable outside of the function so that
164:47 - is the thing we can uh get to know with
164:50 - this thing okay so I will just comment
164:53 - out this and I will just again uh call
164:56 - this function and now I will discuss
164:57 - about with the what is the global
164:59 - variable okay so
165:02 - Global let me just uh write like this
165:05 - Global
165:06 - variable okay so this is the variable
165:09 - which is uh which is declared out
165:15 - outside the function okay Jo be like
165:19 - whatever the variable which is declared
165:21 - outside the function that is called as
165:23 - the global variable okay I hope you got
165:25 - the idea okay so let me just comment out
165:27 - these things and I will create the
165:29 - variable name as the gware okay gware
165:33 - equal to 20 okay or I can just uh Define
165:36 - this string like I am
165:38 - a global
165:41 - variable okay so this variable can be
165:44 - accessed from anywhere of your program
165:46 - like inside the function or outside the
165:48 - function so if I will just call here
165:51 - Eco dollar
165:53 - gar okay so here we can see the result
165:56 - as the um the global variable okay so
165:59 - here we can we are getting the result
166:01 - I'm a global variable but now if you
166:03 - want to uh again Eco the same thing
166:06 - inside the function also so we can also
166:08 - get the result two times like I'm a
166:10 - global
166:12 - variable so here you can see 10 and then
166:15 - I'm a global variable so you you should
166:17 - see the uh like how the function is
166:20 - executing like when when first what is
166:22 - happening we are just printing This
166:24 - Global variable and when we and then we
166:25 - have called the function so after
166:27 - calling the function we are getting the
166:29 - first it is calling this local variable
166:31 - and then it is calling this one G that
166:33 - is the global variable okay so this is
166:35 - the simple concept of the uh local
166:39 - variable and the global variable I have
166:41 - disc why because we have already covered
166:43 - the functions and these thing you should
166:45 - know about it okay so that's all for
166:47 - today's guys and I hope you liked it and
166:49 - if you have any queries you can ask in
166:50 - the comment section and I will post all
166:52 - these things in our get of repository
166:54 - okay so thank you for watching and I'll
166:56 - meet you in the next video thank
166:59 - you hello guys now in this particular
167:01 - video we'll be covering uh like one of
167:04 - the script that is the user deletion
167:05 - script okay so basically in this
167:07 - particular video we will use the
167:09 - whatever the thing which we have learned
167:10 - in now in our some previous videos that
167:11 - is the functions and the global variable
167:14 - local variable okay these all things
167:15 - which we'll be using inside our this
167:17 - particular video and we will create the
167:19 - one script that is the user deletion
167:21 - script okay so let me create that file
167:24 - that is the uh 22 uncore user deletion
167:29 - Dosh okay and uh let me just add
167:34 - the what we can
167:36 - say Ash C uh exclamation bin bash okay
167:40 - we will add this uh shebang and now let
167:43 - me just discuss with the workflow what
167:45 - will be the workflow because if you want
167:47 - to do the same same thing uh separately
167:49 - on your own then you can do it simply
167:51 - because it will give you the more
167:52 - confidence about in this scripting so
167:55 - let me just tell you what we will what
167:56 - will we are going to do in this
167:58 - particular video so we will basically
167:59 - read the uh username whatever the user
168:02 - which we want to delete and we will we
168:04 - just need to provide our the system
168:06 - password for deleting the user and the
168:09 - Del user command Okay so these are all
168:12 - things which you are going to do inside
168:13 - this particular video so let me just uh
168:16 - comment out this
168:18 - thing and uh now I will just
168:23 - uh uh use the local variable and the
168:25 - global variable concept and the function
168:27 - function concept inside this video okay
168:31 - so before uh deleting the user we'll
168:33 - need to some create uh user okay so how
168:36 - you can create the user we will just use
168:38 - Pudo user add and let me just name it
168:42 - the test okay
168:45 - I sh 098 okay user has been added I hope
168:49 - let me just check with the password okay
168:53 - so here you can see test user has been
168:55 - add we have not provided password and
168:56 - all the same because we don't want to
168:58 - create a like a normal user we we have
169:00 - to just delete this user that's why okay
169:03 - so the name of the user is our test okay
169:06 - so first what I will do I will just Eco
169:09 - enter the
169:11 - username okay and I will just read the
169:14 - uh username inside the variable
169:17 - read username okay and uh then what I
169:22 - will do I will just uh
169:26 - Eco enter
169:28 - your
169:30 - password it means it is asking me for
169:34 - the whenever we use sudo then it ask me
169:36 - for entering my password okay so that's
169:39 - why I've have entered enter your
169:40 - password and I will read here read uh
169:44 - system password I can write okay or
169:47 - current user password you can write the
169:49 - variable name okay or the Pudo or the
169:52 - root user password
169:54 - okay and now I will just uh write the
169:59 - function name as the D user okay and
170:02 - inside this D user I will just
170:05 - Eco uh
170:07 - dollar this one system
170:11 - password okay and I'm just passing this
170:13 - password inside the command that is the
170:16 - Pudo using a pipe I will use and I will
170:19 - use Pudo hyph s hyphen capital S is used
170:21 - whenever we take the input of the
170:24 - password from from different sources
170:26 - like we are getting we will uh write the
170:29 - password using this okay and with the
170:32 - help of hyphen capital S we can uh write
170:35 - write the password and then I will just
170:38 - write the command that is the Del user
170:40 - and the username okay dollar username
170:43 - okay and then we will have to just call
170:46 - the script T user okay so here you can
170:51 - see these are the what Global variables
170:54 - okay these are
170:56 - the global variables okay uh like
171:00 - username and the system password and
171:03 - these Global variables are being used
171:05 - inside this function okay so this is the
171:08 - normal function and here we are just
171:10 - what we are doing here we are just
171:11 - calling
171:13 - the
171:15 - calling the D user
171:17 - function okay and now what I will do I
171:20 - will just uh move into this
171:24 - particular clear the screen and I will
171:27 - just need to give some permission to
171:30 - this file create the screen do /22 okay
171:35 - now name of the username is the test and
171:37 - I will need to enter my
171:39 - password okay so removing user test so
171:42 - now done so we have finally remove that
171:45 - particular user if you want to go back
171:47 - and check the/ CTC password
171:50 - file so there will be no test user so
171:54 - you can see there is no test user okay
171:58 - so in this way we can uh delete the user
172:01 - with our script okay so we have just
172:05 - used the global variable concept which
172:07 - we have learned in our previous video
172:08 - and the function concept okay and here
172:12 - we are just passing the name of the
172:15 - uh username which we want to delete and
172:17 - hyph hyph capital S options uh to uh
172:21 - pass the like um password okay so this
172:27 - is the thing uh I hope you got it how
172:29 - everything is working so that's all for
172:31 - to this video and I'll meet you in the
172:32 - next video with some another script okay
172:35 - so thank you guys for watching and I'll
172:36 - meet you in the next video thank
172:38 - you hello guys now in this particular
172:40 - video we'll be creating one of the
172:41 - script that is the file Integrity
172:43 - Checker that is the basically a simple
172:45 - script which we will be using to check
172:47 - the Integrity of the file whether the
172:48 - file has been changed or not okay so
172:51 - basically for this tutorial we will be
172:52 - using one of the tool that is the md5
172:55 - sum okay so let me just show you the
172:57 - demonstration of this particular tool so
172:59 - basically this tool will generate the
173:01 - hash of the particular file so if you'll
173:04 - check the hash of this
173:05 - hello.txt so here you can see the this
173:08 - is the hash okay so but now if we'll
173:10 - change the uh something like uh let me
173:14 - add again 1 D here and again let me
173:17 - check the hash so there will be change
173:19 - in both the hashes so here you can see
173:22 - the difference so basically what we'll
173:24 - be doing so we'll be using this tool and
173:26 - we'll be creating two functions for
173:29 - generating hash and the checking hash
173:31 - and uh we will check if both the hashes
173:34 - will match from the previous hash then
173:37 - there will be no uh changes we will
173:39 - display that as a output and if there is
173:41 - changes then we will display output as
173:43 - like there is change in a file
173:45 - okay so let's start with the uh creation
173:47 - of the script so let me just add the one
173:49 - file that is the file Integrity Checker
173:52 - file
173:55 - Integrity Checker
173:58 - Dosh okay so now what we will do uh I
174:01 - will create a function so let me just
174:05 - uh pin
174:08 - bash shebang has been added and we will
174:11 - give the two option for the user for
174:14 - generating hash and the create checking
174:16 - hash okay so but before this I will just
174:19 - create the function that is
174:21 - the generate hash okay and we'll be
174:24 - covering all the concept which we have
174:26 - covered till now like mostly function
174:28 - will will be covered in this particular
174:29 - video okay so now I will just ask the
174:32 - user to uh enter the file name of which
174:37 - we want to generate hash to here I will
174:39 - ask the user enter the file name
174:42 - please okay
174:46 - and I will just store the uh file name
174:49 - in the read file name v file name
174:52 - variable and then now what we will do we
174:55 - will just generate the hash and store
174:57 - that hash into the file that is md5 sum
175:01 - and we will provide the file name and we
175:04 - will just
175:06 - uh file name. md5 we will store the
175:10 - output in the md5 this output whatever
175:12 - the output we are getting this one we
175:14 - will store in this mt5 okay and uh then
175:19 - we will just
175:21 - Eco hash
175:24 - value
175:25 - stored
175:28 - in dot dollar file name whatever the
175:32 - file name we
175:33 - have file name. md5 file okay so uh this
175:41 - is the generate hash let me just call
175:43 - the function and let me check with
175:45 - whether everything is working fine or
175:47 - not clear the screen do slash uh but
175:51 - before that I will need to provide the
175:53 - certain permission to this file that is
175:54 - CH mode plus X that is
175:58 - 23 clear the screen do /23 enter the
176:01 - file name I'll just write uh hello.txt
176:04 - here and here you can see Hello hash
176:07 - value is stored in this file so let me
176:10 - check okay so here hash value has been
176:12 - stored we can check here okay
176:15 - now uh coming back uh to the script so
176:19 - let me just uh clear here generate hash
176:23 - now what I will do I will just uh what
176:26 - we can
176:28 - say um check hash value we will uh check
176:33 - hash check H check hash
176:38 - value
176:40 - okay and Eco enter the file name now we
176:45 - we are just checking the hash value and
176:47 - we will match the hash value with our
176:49 - previous value okay so Eco enter the
176:52 - file name again we will uh enter the
176:54 - file name and we will just read file
176:57 - name we are creating the variable and
177:01 - storing this in the file name and now we
177:03 - will uh generated hash we will create
177:06 - one variable value generated hash okay
177:11 - don't confuse between generated hash and
177:13 - generated hash okay and here we will
177:15 - store the output of the
177:18 - previously uh whatever the previous uh
177:22 - hash which has been generated in the md5
177:24 - file so we will store the value like
177:27 - this value we will store in this
177:30 - variable generated hash how we can do it
177:33 - we will just read the file name that is
177:36 - dollar file name. md5 we will add okay
177:41 - and then we will again
177:45 - uh again we will just uh store the uh uh
177:50 - like current hash or current output so
177:53 - how we can do it dollar and we will just
177:56 - do md5
177:58 - sum and then we will just provide a file
178:01 - name okay now we are good to go and then
178:05 - we will use the if conditions here like
178:07 - if
178:08 - uh we will just uh do like this if and
178:12 - we will pass the double codes and
178:16 - dollar gen let me just copy this
178:22 - thing if dollar generated hash will be
178:26 - equal equal to we will use here equal
178:29 - equal to again double code dollar
178:33 - output then in this case what we have to
178:36 - do then
178:38 - Eco there
178:42 - is there is no no change in
178:46 - file okay and in the else condition we
178:48 - will surely uh add the equal statement
178:51 - that is there
178:55 - is there is something
178:59 - change something change in a
179:04 - file okay and then we have to just
179:08 - uh block the uh if condition we have to
179:12 - just close the if condition okay
179:14 - okay and now what we have to do uh what
179:18 - we can do uh like uh now we will just
179:22 - Eco the choices
179:26 - Eco one dot what the user want generate
179:33 - hash whether user want to generate hash
179:36 - or whether user want to calculate
179:39 - Ash to
179:42 - check
179:44 - file Integrity we can say file
179:49 - inity okay and then what we will do we
179:52 - will use the switch case and uh whatever
179:55 - the thing which we have already learned
179:57 - so we will use read hyph
179:59 - P okay and we will like write enter your
180:04 - choice enter your
180:08 - choice okay and we will store it in the
180:12 - choice variable that is the choice
180:14 - okay and then we will use the case
180:17 - dollar
180:18 - twiice okay in and if this is the if
180:23 - this is one then what we have to do
180:28 - Eco
180:30 - gen generating hash and then we have to
180:34 - just call that function that is the
180:36 - generate
180:41 - hash okay here we go generate has Ash
180:44 - okay now we have to just remove this
180:46 - part now if two is selected by the user
180:49 - then in this case what you have to do
180:51 - and here you have to just break this one
180:53 - okay two then if we have to just
180:55 - Eco uh we can do checking file
181:01 - Integrity okay and we have to just call
181:03 - this function that is the check hash
181:09 - value okay and we have just close this
181:12 - one and the if any other value that is
181:15 - the default if we get the
181:17 - default then in this case we have to
181:19 - just Eco invalid Choice
181:23 - bu invalid Choice okay and we have to
181:26 - close this
181:29 - case okay now we are good to go I hope
181:32 - everything is uh ready and we will just
181:34 - run the script again or clear the
181:37 - screen okay and I will just remove this
181:40 - file here uh because we'll be using this
181:43 - file
181:46 - okay and I will just uh remove this one
181:49 - also okay now run the script okay what
181:53 - is the choice first enter the file
181:56 - name
181:58 - hello.txt okay hash value has been
182:00 - stored inside this file now we will to
182:02 - again run the script and now we want to
182:04 - check file Integrity enter the file
182:08 - name
182:09 - hello.txt okay so there is no change in
182:12 - file okay but now what I will do I will
182:14 - just again
182:17 - uh do hello.txt and uh I will add this
182:22 - one e okay and again I will uh clear the
182:29 - screen again run the script enter your
182:31 - choice that is the second check file
182:33 - Integrity enter the file name hello.txt
182:37 - and here you can see there is something
182:38 - Chang in a file okay so in this case you
182:41 - can see uh like we have changed file
182:44 - here name like we have added e so it is
182:46 - showing me that there is something
182:47 - change in a file so our this script is
182:51 - running uh actually fine so for your uh
182:55 - like if you want to go on some Advanced
182:57 - label you can uh use try except block
182:59 - all those things okay for if file
183:02 - doesn't exist you can just pop up an
183:04 - error or E the statement like file
183:06 - doesn't exist all those kind of things
183:07 - okay so that's all for to this guys and
183:09 - I hope you liked it and we have used
183:12 - multiple things inside this so this is
183:14 - basically the longest script which we
183:16 - have entered till now so that's all for
183:19 - today guys and I will meet you in the
183:20 - next video thank you thank you for
183:23 - watching now in this video we'll be
183:25 - creating one of the script that is the
183:27 - uh cloning repository okay so basically
183:30 - this script will what it will do it will
183:32 - basically clone the whatever the
183:33 - repository if you want to clone from the
183:35 - GitHub so basically we will be doing in
183:36 - this particular script so let me just
183:38 - create the file that is the
183:42 - 24ore uh clone repo Dosh okay now we're
183:47 - good to go we have to just uh so this is
183:50 - the basically a very simple script which
183:52 - we'll be uh doing right now okay so the
183:56 - way let me just tell you the use case
183:58 - how the thing will go like basically we
184:00 - will read the uh like link from the user
184:04 - okay we will use the git command okay
184:07 - and it will basically automatically uh
184:09 - create one of the folder inside ouros
184:12 - inside our system okay so this is
184:14 - basically the simple use case which
184:15 - we'll be doing inside this particular
184:16 - video so how we can do it we will be use
184:18 - the concept of the local variable not
184:20 - local uh L globally Global variable and
184:24 - we will use the functions also okay so
184:27 - how we can do it uh if you want to do on
184:30 - your own then that is a very good thing
184:32 - so now let me just uh
184:35 - Eco enter the repository link repository
184:40 - link okay so we will ask the user to
184:43 - enter the repository link so we will
184:45 - just read this thing inside the repo
184:47 - link variable okay and I will create the
184:51 - function get
184:52 - repo uh not like this get repo okay and
184:57 - to parenthesis Eco and here I just
185:01 - Eco getting
185:05 - depository please wait like this and we
185:10 - can use the command get
185:12 - clone
185:14 - okay and get clone and reping will
185:19 - provide
185:22 - okay so now what I will do uh we have to
185:26 - just call the script uh call the
185:28 - function sorry get
185:30 - report and provide a certain permission
185:32 - to the script CH mode plus
185:34 - x24 clear the screen /24 okay Enter the
185:38 - deposit link so let me tell you we will
185:40 - be like uh uh what we can see cloning
185:45 - this uh link okay or this repository
185:47 - sriping
185:49 - tutorial so let me just go back here and
185:53 - control shift V now enter so you can see
185:56 - cloning depository please
185:58 - wait so it is done so now here we can
186:02 - see all those file have been like uh
186:06 - cloned here okay 1 to 10 because we have
186:08 - added only uh till 10 so let me just
186:12 - again uh delete this uh link okay delete
186:16 - this directory clear this screen okay so
186:20 - uh this is the very simple script which
186:22 - we show right now so now what we can do
186:25 - we can check uh uh whether the uh user
186:29 - has entered link or not okay so this
186:32 - thing we can do in our next video okay
186:34 - like we will check about the uh like
186:37 - regular expression and all those things
186:39 - okay in our next video so that's all for
186:40 - today's guide and I hope you in the uh
186:43 - in the next video I'll meet you so thank
186:45 - you for
186:47 - watching hello guys welcome back to the
186:49 - channel this is aush and now in this
186:50 - particular video we will learn about uh
186:52 - one more script that we will create
186:54 - another script with the help of the nmap
186:56 - tool which we basically use for the
186:58 - network web mapping and we will look for
187:01 - the what are the open ports in the
187:03 - particular uh system using the IP
187:05 - address or the domain name okay so but
187:07 - before moving forward in this particular
187:09 - video I will
187:11 - uh talk about first about this clone
187:13 - repository s file so we can do one more
187:16 - thing in this particular uh script is
187:18 - like that uh wait a
187:23 - minute we can just uh add one more thing
187:26 - here like uh we can check for the
187:28 - whether user enters the uh correct URL
187:31 - or not okay so we can use the concept of
187:34 - the like subst that is the sub string we
187:36 - will match the sub string of a string
187:39 - okay I hope you got the uh concept this
187:41 - thing like what what we will do we will
187:43 - just match the sub string part of the
187:47 - this repo link okay if if it matches
187:50 - with the github.com then we can easily
187:53 - clone the
187:54 - repository so now what we have to do I
187:56 - will create the uh just another variable
187:58 - with the name domain name
188:00 - okay so let me just create
188:04 - it domain name equal
188:07 - to github.com
188:10 - github.com okay and I will just need to
188:14 - add the some fils conditions here to
188:17 - check whether the user enters the
188:19 - correct link or not okay so here I will
188:22 - just
188:23 - do dollar repo link equal equal to and I
188:28 - will need to use asri because uh we use
188:32 - that for
188:34 - the sub string comparison okay so I can
188:39 - do asri and then inside the double codes
188:44 - I have to just provide the variable name
188:47 - that is the domain
188:49 - name
188:52 - okay so now what we will do we will
188:55 - basically
188:58 - uh like write the fur the script like
189:03 - then Eco if the link are equal then what
189:08 - we will
189:08 - do what is
189:11 - happening
189:15 - okay let me just copy the same thing
189:16 - again
189:22 - here Eco then we will do this else what
189:25 - we can do else we will just uh
189:30 - Eco please
189:33 - enter valid link and we will close the
189:36 - condition part here with fee okay so I
189:40 - hope everything is uh correct so now
189:42 - what we will do I will will just run the
189:43 - script again here
189:46 - so okay I will run this script but
189:49 - before that I will just copy this
189:52 - link okay so just paste it here and
189:57 - the
190:02 - terminal so I will just run the script
190:04 - using 24 okay clone. Enter the
190:07 - repository link I will enter the
190:09 - link okay so here you can see we got
190:12 - some kind of error uh on which line we
190:16 - have got line number
190:19 - 14 okay if repo link equal equal to asri
190:25 - okay we forgot to add space
190:29 - here contrl
190:32 - s clear the
190:34 - screen okay now I will just add first
190:37 - google.com so it should Pro in yeah show
190:39 - please inter valid link now I will what
190:41 - I will do I will just just uh paste the
190:46 - depositor link enter so here you can see
190:48 - it is cloning into sriping tutorial and
190:50 - here you can see uh the directory has
190:53 - been created with the name s script to
190:55 - tutorial so uh our script is running uh
190:58 - fine because uh if you are entering some
191:00 - wrong URL then at that time we are
191:02 - getting the uh this statement is running
191:04 - like please enter valid link so it means
191:07 - uh this thing is getting verified okay
191:10 - so that was the part which was remaining
191:12 - in our previous video so now what I will
191:14 - do uh I will create one more uh script
191:17 - with the
191:18 - name sorry let me just create
191:21 - it 25 uncore uh
191:27 - nmap yeah we can do nmap Dosh so now uh
191:31 - if you don't know about the nmap so let
191:32 - me tell you first about what is this so
191:34 - nmap is basically one tool that we use
191:36 - for the network mapping or you can say
191:39 - like for finding the open ports in a
191:41 - particular uh system system okay so that
191:44 - is a basically a cyber security tool
191:46 - which we use for for Network scanning
191:48 - and all those things we can also get the
191:50 - information about the OS okay so just
191:53 - like other commands uh like for LS we
191:56 - have L option a option so similarly for
191:59 - nmap also we have different options okay
192:01 - which we will learn in this particular
192:03 - video okay so let's start with the
192:06 - scripting part and let me just give you
192:07 - the use case how the thing will go on so
192:10 - the thing is basically what you have you
192:12 - have to read the host name it basically
192:14 - means whether you want to take the
192:16 - domain name or the IP address it all
192:18 - depends upon you what do you want to
192:20 - take as a input from the user so you
192:22 - have to take the host name and then
192:24 - further what you have to do you have to
192:26 - just use the nmap commands
192:30 - Okay to just uh uh what we can say
192:35 - um to just scan that particular host
192:38 - name okay so this is the simple use case
192:41 - which we will be going to use in this
192:42 - this particular video so for that first
192:44 - I will need to enter the uh take the
192:47 - input from the user that is the host
192:49 - name
192:50 - okay so let me first clear the screen
192:53 - and now I will just
192:56 - uh Eco okay wait a minute what what is
192:59 - happening which
193:02 - keys I think some keys
193:05 - are okay wait a
193:07 - [Music]
193:08 - minute some keys are placed
193:11 - automatically
193:14 - wait a minute yeah I think now it's not
193:16 - happening nothing is happening sorry for
193:18 - that so now what I will do Eco enter
193:22 - the host name okay but before that let
193:26 - me show you the how the thing is work
193:28 - okay the actual thing works okay so let
193:31 - me just search for the N map
193:36 - okay so you will get the official
193:38 - website of the nm.org that where it
193:42 - tells like like uh it's a free and
193:44 - opposite utility for network discovery
193:46 - and security auditing
193:48 - okay
193:50 - so this is the basically one of the tool
193:54 - and there is also one
193:56 - uh scan me. nm.org this is the what we
194:01 - can say testing website through which we
194:04 - can test for any uh for this domain name
194:07 - okay like it's legal to test this domain
194:10 - name because they have already
194:11 - authorized peoples to test this
194:14 - particular domain but you cannot uh test
194:16 - any other domain this without their
194:18 - permission okay so if you do I will not
194:20 - be responsible for that I'm clearing
194:22 - this thing in this particular video okay
194:25 - so now let me just
194:28 - uh okay I think my Internet is slow wait
194:31 - a
194:34 - minute okay so now I switch with uh
194:36 - another Network
194:38 - okay so now let's go on this particular
194:41 - website and map.org so here you can see
194:45 - the whole documentation part if you want
194:47 - to read you can read
194:50 - okay so let's go with the reference
194:53 - guide you can go with this or docs
194:56 - also so this is the reference
195:00 - guide in this way we will basically
195:02 - write the command Okay hyph a option is
195:04 - there
195:05 - okay many options are there and before
195:09 - that you should know about the TCP Port
195:11 - UDP Port Okay so so basically uh we have
195:15 - 65,536 ports in our system okay so it
195:19 - basically basically scans which
195:24 - uh which Port are open in your system
195:29 - okay so now let's move with the scanning
195:32 - part okay so let me just uh check
195:35 - whether this website is accessible or
195:36 - not I think it should be yeah so here
195:39 - you can see go ahead and scan me the
195:40 - title of this particular website okay so
195:43 - now what we can do uh we will just
195:45 - create this script and we will use this
195:47 - nmap tool and some other options okay to
195:51 - run our script okay so now let's do so
195:55 - Eco enter the host name read host name
195:58 - okay we will just uh read the host name
196:01 - and now next what we will do we will
196:03 - just take the our password okay the
196:06 - system password because some of the
196:08 - options
196:10 - required uh Pudo permission so for that
196:13 - we need this enter system
196:17 - password okay so here you will learn one
196:19 - more thing hyph hyph FS option provides
196:23 - like if you will enter something it will
196:24 - not be visible okay so that is the uh
196:28 - benefit of using this
196:30 - option so here we can store with system
196:34 - password
196:36 - okay and then what I will do I will just
196:39 - uh uh create one function okay okay or
196:43 - not function before that uh yeah I will
196:46 - need to create one function to work with
196:48 - the uh cases okay I will just create
196:51 - different cases for different options
196:53 - okay so how we can do it so we have to
196:57 - just write the function name so I will
196:59 - write the function name as the inmap
197:01 - function okay like that I can write okay
197:06 - and in this I have to just provide the
197:09 - some options okay so how I can provide
197:12 - like I will need to write Eco dollar
197:15 - okay and uh then I will just need to
197:18 - write like this first option will be or
197:20 - I can uh write like this one dot and
197:24 - normal scan okay and we will use slash
197:28 - and for new line for two Dot and then
197:33 - tcps scan we'll be doing three types of
197:36 - scan in this particular
197:37 - video normal scan TCP and the udps scan
197:41 - okay three is UDP scan so these are the
197:46 - three option which will be available to
197:47 - the user and then what I will do we will
197:52 - uh what we can
197:54 - say we will take the input from the user
197:58 - okay choose
198:00 - option choose option which you want to
198:04 - prefer
198:07 - okay so here we will just write the
198:11 - option okay okay and now what I will
198:13 - need to do I will need to Pro uh uh
198:15 - write different cases so if user enter
198:18 - one what should happen if user ENT two
198:20 - what should happen all these cases I
198:21 - should write so we have already covered
198:23 - it in our uh previous videoos so how you
198:26 - can deal with the cases okay case option
198:30 - in if one is provided then what you have
198:33 - to do I will just Eco uh thing like uh
198:37 - uh if one is
198:39 - provided I should write like this eco
198:43 - uh like this normal
198:47 - scan okay like this we are done and then
198:51 - what you will need to do
198:53 - Eco I will just provide the system
198:56 - password to the Pudo command Okay
199:01 - so right okay so now what we will do we
199:05 - will just pass the sud sudo and we will
199:07 - use the capital S like hyph FS option
199:10 - because we are getting the password from
199:12 - this uh particular uh system password
199:15 - okay that's why we are using this option
199:16 - and now we will simply use the N map and
199:19 - the if you are going with the normal
199:20 - scan so at that time we have to just
199:22 - provide the host name or the domain name
199:25 - okay so we can just do like this host
199:27 - name okay so this is the first case
199:29 - which we will be do dealing with that
199:31 - and secondly what we'll need to do uh
199:33 - this is just like break a statement and
199:35 - for the second second case that will be
199:38 - for the tcps scan
199:41 - okay so you can do like this inter like
199:44 - this TCP scan and
199:48 - uh this much Dash Okay and same thing we
199:53 - have to do just we have to change the uh
199:55 - option okay so you can just uh copy and
199:59 - paste things easily and hyph is capital
200:02 - T that option will be used for the tcps
200:04 - scan and the third thing is the just the
200:06 - udps scan okay so I know yeah you will
200:09 - not be aware of these TCP and udps SC
200:12 - because that is the concept the security
200:13 - part but if you learn you will surely
200:15 - get
200:16 - it UDP scan
200:20 - okay and then again same thing I will
200:23 - just paste the thing here and I will
200:24 - just use the Su that is the one option
200:28 - which we use for the uh what we can say
200:31 - udps scan okay so these are the three
200:34 - option but if user something else then
200:36 - at that time what we will use we will
200:37 - use the As and then we will provide like
200:40 - uh please enter the valid
200:45 - option
200:47 - okay so this is the case and we have to
200:50 - just close this thing so how we can do
200:53 - it
200:54 - esac okay and now simply we have to call
200:57 - that that function where it is that MF
200:59 - function so I will just uh copy the
201:01 - thing
201:03 - here okay call it here okay now we are
201:07 - good to go first we will need to provide
201:09 - the certain permission to that file okay
201:13 - and
201:15 - now so enter the host name so our host
201:18 - name
201:21 - is this one is scan me. nm.org
201:24 - okay so it's all up you can provide the
201:27 - IP address as well as the domain name we
201:29 - we will go with the domain name first
201:31 - and after that we will go with the IP
201:33 - address sorry we will need to provide
201:36 - like
201:37 - this scan me. nm.org
201:42 - okay you will need to enter the system
201:45 - password okay so here we are getting
201:47 - some kind of error at line number
201:53 - 42 okay wait a
201:55 - minute oh sorry I have done some
202:01 - mistake I have to just enter the name of
202:05 - the
202:07 - function okay again same thing scan me
202:11 - do n map.org
202:16 - okay so whatever scan we I just want the
202:19 - uh normal
202:22 - scan so let's
202:24 - check it takes some time so you will
202:28 - need to
202:30 - wait and let's again check the IP of
202:34 - that particular domain
202:36 - name scan me. nm.org
202:42 - okay so I think I'm not connected to the
202:47 - internet okay okay sorry for
202:53 - that okay so now I have solved the issue
202:56 - so let's again run the
202:59 - script enter the host name scan me.
203:03 - nm.org
203:05 - okay system
203:09 - password normal scan I want
203:13 - okay so it's starting okay so here you
203:16 - can see we have got the different ports
203:18 - like 2280 9929 these much Port ports we
203:21 - have got okay so these are the port
203:23 - which are open on that particular domain
203:25 - name okay so also we can run for the
203:27 - second option so again run the
203:36 - same okay second tcps scan
203:40 - okay let's
203:47 - wait these SK take I think much
203:52 - time we will need to just
203:55 - wait so basically in this script we have
203:57 - used uh switch cases and the function
204:00 - concept and the user input all those
204:03 - thing we have used here so that was a
204:05 - quite type of revision for you guys okay
204:08 - if you will create these kind of scripts
204:11 - so let's wait for this uh it's taking a
204:15 - little bit more time let's
204:21 - wait okay so we have got the all the TCP
204:24 - ports which are open on that particular
204:26 - domain name so here you can see
204:28 - 22808 so these are the all ports we have
204:31 - got so these are the open port these are
204:34 - some filtered open filtered so you will
204:36 - uh if you will search about on Google
204:38 - like what the difference between open
204:39 - and filter Port you will surely get to
204:41 - know and these are Services which you
204:42 - can see here okay so that was the
204:45 - basically uh thing about the scripting
204:47 - like how we can use the different tools
204:49 - with the with bass script okay so that
204:52 - was the tutorial for this and I hope you
204:55 - liked it if you have any query you can
204:57 - call uh write down in the comment
204:59 - section and you will get the source code
205:01 - of this particular video in our GitHub
205:03 - depository so that's all for today's
205:05 - video and we will meet you in the next
205:06 - one thank you thank you so much for
205:08 - watching

Cleaned transcript:

hello guys and welcome back to the channel this is aush and from now we are going to start our the denux sh scripting tutorial okay so we will start with the basics to the advance and we will cover many uh Concepts like we will cover like programming uh Concepts like if fails fall loops and also we will create some uh scripts like automated scripts and we will do some minor projects also so now from uh this video like uh in today's video we will cover some basic concepts like what is a shell what is a bash and also we'll see how you can create your first script that will be a very interesting thing okay but before starting uh let me tell you like we use sell scripting uh mostly for the purpose of the automation okay if you want to automate some kind of your some kind of task then you can use the cell scripting as an automation uh like not as an automation you can sayell like uh uh shell you can use the sell script as a tool to automate your work okay so now first of all now let's come to the point and we will learn about the what is a shell okay so shell is nothing but you can say it's uh just like interface which provides you to write some codes and R write some commands so right now this uh terminal is using the bash shell okay so but also according to the some other articles some book shell is just like an interpreter like uh it basically runs uh like executes the command line by line okay so that is the work of The Interpreter like it executes the code line by line and if some error occurs then it will just throw it on the screen so shell is just also like interpretor it basically interprets the sh files orsh programs you can say or you can say the scripts so now you will say what is a script so script is nothing but the like your program file just like in Python you create P file so similarly in in cell scripting and or in Bach scripting we create the dosh file okay so why we say like sh acts like interpreter because it interprets the dosh files orsh programs you can say so I hope you got a fair idea about what is a shell okay so now let's start with the basic concept like what are the different types of sell this Linux operating system okay so there are many cells like bash shell and also uh like Kor cell Born Again cell okay so you can get the list of the cells uh in this particular directly uh not directly it's a directory okay so here you can see the multiple CES is being used or present in my this operating system so for this whole series we will uh like stick with the only the second one this one bashes bash that means Born Again shell okay but uh this uh s the first one shell was the first shell uh which was created by the Linux and the next there is born against shell came into the role so uh we will use the born against shell for out this entire series and uh now what we have to do uh we have to just create one single script of hello world and uh also let me tell you what is this bin so the cell your your cell will be present in this bin directory okay so now but before creating your first script let me tell you the uh what script is being used by this session or by this terminal so you need to just enter this Eco and the shell dollar shell and here you can see B shell is being used okay now what we have to do we have to just create the first script that is the hello world script how we will do it we will just uh I'll move on to the desktop and I'll create the cat hello world.sh why Dosh because like we are getting the cell script script so bat script that's why we are using the extension so here you can see the file has been created hello. s now I will use this hash slash bin bash it's just like this line basically tells like uh tells how script or our the shell to which shell to use like tell The Interpreter which shell to use so here I'm just defining like I want to use the be bash again shell that is this one being bash not sh okay so now I can do eco eco is just like the print command okay Eco hello world I'm learning bash scripting this one now hit contr D and to run the script you need to add some permissions so you cannot directly run the script if you will check the permission for hello.sh so here you can see this is only read write permission you cannot execute that script so to give the particular permission to this particular file you will need to just uh give add the permission using ch1 you will if you will use plus X and the hello name of the file so permission will get added and here you will see the execution permission has been added and the color also has been changed from white to the green okay now to execute what you do you have to just do dot slash and the name of the script and we are done so you can see our script has been executed successfully okay so I hope you like this guys like how you can create the shell scripting and also I hope you got to learn about what is a shell what is Bash and if not then please go and uh you should explore yourself also to some kind of knowledge okay so that's all for today guys we will meet you in the next video thank you thank you for watching and I will come up and meet you in the next video with my amazing Concepts thank you hello guys now in this particular video we will be installing the visual studio code because we will use this ID to write our cell scripts okay so uh let me tell you how you can install it in a easy way so here is the one to software uh from here you can install multiple softwares now you have to just search for the visual studio code and uh it will take some time to load let's wait um so but before that let me tell you about what is visual studio course so it's a basically one the ID which we use to write our uh codes you can write code in any language which you want from C++ to Java python everything okay so here you can see the review is also good now you have to just click on this install so it will take some time for installation uh let's wait it okay it is it is installed now what now we have to do we have to just click on this show applications and here's just search for the vs code or Visual Studio it maybe yeah here you can see the visual studio code you just click on it and it will open up like this and this is something uh okay so here you can see you need to open some folder uh let me click on open folder and uh on the desktop I want to create one folder like uh plus I will create the shell scripting tutorial okay just click on create and you're done you have to just click on open uh don't say I don't want this is some kind of file okay let's wait I think the system is lagging because of the low Ram actually I'm running it in the ubu machine sorry in Virtual box that's why it's happening like this now here I will create just one simple script that is 01 uh test.sh I will create sorry sorry I have entered comma there again I create 01 test.sh okay so here you need to add the shebang this symbol is called shebang bin bash equal you have to just write here hello world and you are good to go you have to just open up the terminal here new terminal and you will need to just add the permission for this particular file that is 01 test.sh and you need to just execute it uh slash 01 test. okay uh let me just do LS why it's not executing okay/ 01 test.sh why showing uh biosis file or directory okay I think I minus like this okay so here you can see Hello World okay so in this way uh we can write our scripts in this ID and we can easily run it okay so that's all for today's video guys I hope you successfully installed and in our further videos we will start with the basic concepts of the cell scripting so that's all for today's video and I will meet you in the next one thank you thank you for watching now in this video we will be learning about what are the variables Okay so so first of all let me tell you about the what are the topics which we will be covering in this particular video so let me just open up the terminal and I will write all those topics which we will be covering this particular video so first of all we will cover variables what are the variables then user defined variables and next envirment variables okay so these are the topics which we'll be covering in this particular video so first of all let me start with the variables okay what are the variables okay but before that let me first open up my vs code actually I have already done it here you can see now you have to just uh create one file that is 02 variables Dosh okay so we will use Dosh extension for creation of file and I hope you have already installed this vs code actually in our previous video we have covered this part of installation so now what we have to do uh you have to just uh enter this sh she bang and then you have to just uh you're are good to go you can write any command here also like you uh variables you can write here variables okay just save it and here is the Run button if you run it maybe it will run yeah it's working fine okay so now what we can do uh let me tell you about first variables what are the variables okay so variables is nothing but uh just like a container okay container which will hold some values okay so variable is nothing but just like a container which will hold some kind of value it may be integer it may be a string it can be your uh any kind of a value like could your decimal value or character value okay so these are the variables okay so what happens actually uh like internally what are what things happen okay if you are coming from the C++ background so you might be aware of those things like let me tell you all this uh I will open up the paint so that will be easy to understand for you okay so I'll just create a block here okay so what happens if you create a variable suppose you create a variable a equal to 10 okay so at that time what will happen block will be created in a memory and some address will be given to that okay now you will tell ask me what are the address so address is nothing but uh which you used to access those variables okay if you are aware of C++ or python then you might be aware of it but right now just keep in mind that variables are stored at one particular address so it can be any address I will just uh enter like it uh it uh it what we can say address is in the form of hexa decimal so you can write anything like hexa decimal is like a to f 1 to 9 anything you can like this okay so you can think like this is the address and this will be the value you can suppose like it will be 10 and the name of the variable will be a okay so this is the case happens internally if you create a variable in any operating system okay so now we will start with the basic one like we will create some variables and we will also learn about some kind of rules which we follows while creating the variables in our shell okay or B scripting you can say so here what we will do uh I will just uh create some variables like I will create name equal to to I okay you can like write like this and then what you will need to do you can also give like age equal to 20 you can say and now we are good to go right now we will just print those variables so how you can print using dollar and the name of the variable you can easily print the variables okay so just save the variables and I will run up run this variable okay so here you can see the variable the first line and the second my name is printed okay so but before moving forward let me tell you about the some of the rules which we follow while creating the variables okay so there are some interesting thing if you do like this add a space so at that time your shell things like it's kind of a command so there should be no any spaces in your variable name inell scripting especially or pass scripting so if you will do so it will say command not form here you can see so you don't have to give any kind of a space in your variable name okay I hope it's clear to you guys uh let me just create some another variable like pointer I will create some kind of 9.9 I will give it it time okay it's fine so here I will add Eco my pointer is like this maybe uh string concatenation will happen there pointer let me just save and I will again run this script so here you can see my pointer is this plus okay if I will not give it it doesn't uh effect I think okay so here you can see my pointer is 9.89 so in this way you can uh enter the variables and enter the values assign the value to the variables so these are basically the user defined variables okay Eco you have to just here to user defined variables Okay so this is the okay so what if I want to uh print all those in a same line like Eco name and Eco a also I want okay let's do it I will remove this line save it okay here you can see the I 20 okay so these are the user defined variables okay I hope it is clear to you what are the variables now moving forward uh we will learn about the Su of U what we can say involment variables okay so I will just do a quick Google search for you guys and I will search for the user uh not user envirment variables okay so envirment will write at much biggest smelling environment variables and shell scripting and thep yeah here we got it okay so here you can see there are many blocks for on gigs for gigs or digital lotion okay so uh let me open this one geks for geks so it's a good website to learn more things okay so here you can see it's loading just wait for some time okay so here you can see what are the environment vales so environment system defined variables you can see it is given by the shell to use for you guys okay so here you can see the scope of an environment variable and all those things I will tell you about the scope and all those in the next video okay right now just uh learn about the environment variables okay so here you can see the name is one of the environment variables both go in the same way okay let me just uh this so here you can see okay name equal to Value okay I will use some different website let me use distal ocean not this this one this one looks good or I will just do list here because I want the list of the environment variables and cell script we use so here you can see the uh not Windows I want Linux okay here you can see the eath display the path inment variables okay so uh let me just use some variables here like uh I remember some variables like EOS shell if you will use shell and in variables keep in mind like it is written always in the capital letter and here I will just add some text like uh first environment variable okay and and just uh save it and run it and here you will see the bin bash it gives you the name like cell which cell you are using right now okay if you will do date also it will give you the information about date okay so just save it and run it from here and here you can see the okay it's not displaying with the date why I don't know okay d a t it should okay just run this okay I think dat is not one involment variable let me just quick uh search for it date environment variable L okay so here you can see the uh current involment variables so there are many articles so you can read here like when you do we can do like this also uh let me just copy and I will paste it here now and I will use here now okay just save it and click uh on run and here you can see the current date and time all those things okay so in this way you can use uh variables you can assign values and I hope you got to learn about this user defined variables as well as involment variables and uh in the next video also I will tell you some more envirment variables okay so I hope you like this particular video guys and thank you thank you for watching and if you have any queries then you can ask in the comment section and for these all the source code I will be posting on my GitHub repository I will give the link in the description okay so thank you thank you for watching I'll meet you in the next one thank you and byebye now in this video we'll be learning about how we can get the input from the user okay so basically we will see uh with the many examples like suppose I will ask the user to enter his name so at that time you just should be able to enter his name and all those things okay so basically we will use the uh read command or you can yeah read command you can say or the what you can say like uh read keyword used to take input from the user in the Shell scripting okay so actually I have already open up the terminal here uh vs code sorry and I will just create a new file here uh 03 uh read input Dosh okay so I will just use this hashbang pin bash okay I'll just give it the name of uh this tutorial that is lead input lead input from user okay so first of all we will see the basic scenario like suppose I enter here uh e into your name please okay so here I will read the name and here you you will see the this will be the name of the variable okay in which you want to store this value okay and next here I will print the variable like uh your name is uh dollar name okay controls to save and I want to run from here but here from here I will need to give permission but so it's better to run from here okay so here it is asking for me to enter my name so I will enter aush okay why it's not working oh my God let me just control C uh let me use the terminal terminal is far better than this okay so we need to just give the permission to that file that is 03 we are done sl03 Dosh okay sorry sl03 Dosh and enter your name please iush so you can see the your name is aush okay so in this way we can can uh take the input from the user and also there are many use cases of this read command okay so we will uh learn it one by one okay so uh let's start with the first one like uh we can use many options like read hyphen P okay so next moving forward I will just uh here I will do a read hyphen p is used for the prompt so here I will prompt enter your uh age okay so here you can just give the name of the variable which you want to provide you can just give it as is okay and next I will just use this Eco command or Eco keyword to print the value your name uh sorry your age is what dollar is okay contr s to save clear the screen again run the script your name my name is aush guys your is I will enter 20 here you can see your age is 20 so what is the difference between this and above and this one read so what is happening here we are using one extra line for eing that particular line but using hyphen P option you can write your variable as well whatever you want to prompt to the user you can write those all things in a one single line so now let me just comment out these things and I will again run the command so that will be easy for you to understand so here it is asking me for inter so here you can see I have just used this single line and it is asking me to enter the uh whatever the is and all those things so don't be confused it was by mistake 204 I'm not that much old okay so uh in this way you can uh use this hyphen P option also there is many amazing option like uh if I will uncomment this and I will just comment out these things and if in case you don't provide the variable name so at that time you can use this reply okay you can use this one to like you can use this one like this okay if you don't provide the uh name of the variable then it will store it into this de so I will just again run up this particular script and I will write the name as iush and here you can see iush your name is iush without any use of variable okay but that is not a very good practice to use but yeah it is always uh like advis to use the variables okay so I will give it the name here as name and the same as as it is the dollar name okay dollar name okay we are done you are good to go now there is also some amazing things you should know about like suppose I'm asking the user to enter some kind of confidential information I will just comment out these things uh read hyphen p and the username okay suppose you're asking for the username I will just create a variable username and you can also ask for password read hyphen SP and here you will ask for the password so obviously you don't want to reveal your password okay with everyone so hyphen has provides that functionality you will see right now so I will just equo those two variables so here I will write like this is your not your just use username and the dollar user name username okay yeah we're good to go now and just use the password okay dollar password okay controls to save let me just clear the screen again this one username my username is uh this one you can follow me on Instagram I know I'm promoting and for password you can use uh it's easy to crack okay so here you can see the username is this one and password is this one but uh you I hope uh you just uh uh what we can say notice like uh the when I was typing the uh password it was not visible okay I will use one more Eco for the blank space okay again I will run this script so that could be easy to understand so I will use username iush and the password is something and see I'm typing but nothing is displaying on the screen and here you can see now username is I and password is this whatever I WR don't know what I have written okay so this is the thing okay so I hope you got to learn about like how you can take input from the user okay so now thank you for watching and if you have any query you can ask in the comment section and surely I will post these uh CES inside your uh inside my repository not yours okay but you can access that repository so that's all for today's guide and I hope you uh you I liked it and we'll meet you in the next video thank you thank you for watching now in this video we'll be learning about the command substitution okay so as a name suggest command substitution which basically means we can use a variable name as a command okay you will store the commands in a variable it's not that interesting okay so we'll be learning these things in this particular video so let's start what what first thing you have to do you have to just open up your ter not terminal you have to just open up the uh vs code okay so I actually I have already open up here the vs code as you can see so now what you have to do you have to just create one file uh I will name it as Z for command substitute substitution Dosh okay I hope his spelling is uh correct yeah it's correct by the way it doesn't matter at all okay so now what we can do you have just paste this okay as Bank okay so here let me just enter this like Eco this is no not like this you have to just enter this command substitution tutorial okay tutorial okay so now uh let me tell you about the First Command which we can use as uh variable okay so I will create one variable Uh current directory okay so how you can get the current directory in uh Linux okay uh if you have watched our l series then you know the command that is a PWD present working directly which gives you the uh current directory location okay so we will use a PWD but before using those things uh right now I will tell you the ways how you can uh uh what you can say uh how we can declare uh that uh command to a particular variable okay so you can use the back tcks okay just the button uh left of one okay and here you can enter the whatever command which you want and right now I want PWD and you can just print this one like your present working your present working directory is like this bro okay is we will use this one not hash I need dollar current not container okay yeah we are good to go right now I will just add some permission plus X to that particular file that is 04 now we are obviously good to go oh I think something yeah so here you can see we have done some silly mistake like we don't have to give the space here if we'll give a space then it will give you the error command not found okay again I think uh command substitution tutorial 04 Line 6 home I6 no such file or directory wait a minute you will need to do like this guys okay so let me just clear the screen yeah we to here you can see that your present working directory this one I use desktop scripting tutorial okay so in this way you can use this particular thing like uh okay so now the next method is how you can do it so the next method is like this I will just copy it and comment it uh this line com this line and I will use this like this you have you have to use the dollar and the PWD Okay so so now we can do like this clear the screen right the command and here you are good to go guys here you can see the uh isn't working directly okay now moving forward uh suppose you want to create one file uh so new file I will create the name a new file and I will use the back tap uh I will use this command cat and I need hello.txt suppose in this case I want hello.txt so I will use this one like here and I will use Eco dollar new file contrl c not c contr s to save clear the screen so here you can see hello.txt has been created and I will write hello.txt has been created from has been created from command substitution toal okay tutorial control D to save okay so here you can see the same text okay so in this way you can use the command substitution technique like using back take or using dollar whatever the way you like okay but the most preferred is this one dollar and the parenthesis okay so that's all for today's videos guys and if you have any query you can ask in the comment section and these course will be posted on the GitHub repository and you will get the link in the description so thank you thank you for watching and I'll meet you in the next one thank you and byebye hello guys now in this particular video we will be learning about the how we can pass the parameters while running our script okay so let's start with this video okay so I have already opened up my vs code and you can also open it using the terminal or from here from applications so also so right now we'll create a new file that is a uh arguments. sh okay I will write the hashbang or cbang you can say whatever you want uh sorry bin bash okay now here uh what we will do uh I will run this script and I will pass some arguments and parameters and we will use those parameters and do some manipulation in those things Okay so before the starting the video let me tell you first thing like suppose I run the script this one command substitution or maybe see which script I have run oh yeah suppose this command substitution is one of the script so here I will pass some parameters like I will pass my name my number okay and my some uh something like U country India so in this uh in these way we can pass the parameters okay and how we will access these parameters so you can access these parameters using like this like uh using Eco dollar one okay dollar one for the first parameter Eco dollar two for the second parameter Eco dollar3 for the third parameter so here you can access till doll9 and dollar 0 is reserved and it gives you the name of your script okay so this is the uh in this way you can uh uh work with the parameters and now what we have to do uh we will just uh save this file and what we will do we will just run this particular script I will just give the permissions to this CH mode plus X and 05 Fus Dosh and I will create this screen and I will just run those script 05 okay done and now what I will do I will just pass some parameters like right now I want to pass my name aush okay I will pass my country India I will pass my number uh okay and then I will pass something uh like uh shell tutorial I can write like this okay so when I will hit enter then you will see what happens so here you can see first line giving me the name of the script second line the uh SEC first parameter then third is the second parameter then my number and we are not getting the sell tutorial why because we have not used dollar 4 okay so we will use here Eco dollar4 and again I will run the same script okay now here you can see all the uh what we can arguments we have got in these form okay so you have to also remember one thing here like if I going to just pass the one parameter in this case the other will be ignored okay so you can see others have been ignored that is nothing okay and if you want to give like uh like this suppose I want to my I want my full name like aush Kumar so if I will do this so now it will act like this will be act as a first parameter this will be act as second parameter so to act like to use this as a one parameter you can use this okay so now you will get this okay output okay so I hope you got it how you can work with the parameters and now moving forward uh if you want to get the uh list of all the parameter you pass so there are the some special characters or yeah you can say characters so how we will use to print all the arguments we will use dollar at the rate and now it will print all the arguments which you will pass so what I will do I will run these script this one and here you can see I have got the all the arguments which we have passed like I India number and c tutorial okay and also there is one more like uh Eco dollar hash to get the how many number of parameters we have passed not this one dollar hash okay so again just clear the screen and I will run this script and here we can see we have passed the four parameters yeah that's true okay now what we can do we can also store the value of these uh parameters which we pass in a variable suppose I want to store like name equal to dollar one and I will just remove this not I will remove I will just keep it up okay and then I will try to access my name so here I can give my name is is like this we can do also dollar name okay save these and now I just clear the screen and I will run this and here you can see my image I so you can store the whatever the arents you passed in a variable also so in this way you can pass the parameter pass the value okay so I hope you liked it guys and I hope you understood it if you have any query you can ask in the comment section and also here you can see uh I have updated this repository and I will give the link of this particular repository you can access this like from here like github.com 9ub and this one C scripting tutorial okay from here you can get the whatever we are writing the course like you will get each and every Source there okay so that's all for today's guide I hope you liked it and I will meet you in the next video so thank you thank you guys for watching byebye hello guys now in this particular video we will be creating our the first task that is the basically in which we will whatever we have covered till now we will use those things so basically let me tell you the scenario what we will be doing in this particular video so basically we will first read the input from the user okay that will be the IP or domain name and next what we will do we will be uh using the Ping command to Ping that particular server okay so things are very easy if you want to go ahead with your like with yourself then you can go for it you so it will give you the more confidence about it okay so now I will use this scenario and I will create one script so actually already have open up my visual studio code and you have to just create one script and I will use the hashbang sorry okay so now what we have to do we have to take input from the user so already we have covered how we can take input so you can use the read here and you will prompt for the user like which server you want to Ping okay it can be any server it all depends upon you and I will create one variable here server address and next moving forward what I will use the Ping command so basically in ping command we have some options like hyphen C so whatever uh if you use normal ping command so like if I will use google.com so here you can see it will go in the finite but we want only for the three or four okay so what we can do we can give the count for three and the deadline for 5 Second after 5 second if nothing like Ping command doesn't get any response and it will exit so next what we will do you we have to just give this name server address no we are good to go what we have to do you have to just add the permission to this file TR using CH mode command and then I will run this not 01 I have to write 06 okay so I want to Ping Google server that is 88.8 okay so here you can see I'm getting the response okay and now what I will do I will enter some random IP like 8.65 52.4 so it will wait for the five 5 Second and automatically it will exit so here you can see okay so yeah here we can see five pack and transmitter but zero receiv 100 100% package loss okay so in this way you can create different scripts so that will be helpful for you so that's all for today's video I hope you like this our first T so that's all guys and I hope you liked it and we will meet in the next video thank you for watching hello guys now in this video we will be talking about our task two okay so let me discuss with you what we'll be doing in our this task so basically we will be connecting our remote machine with the SS using bash script okay we will create a script with the help of this we will connect to that particular machine so we uh first of all let me tell you how you can create your virtual machine so actually I have there is a a link for you I will add this link in our uh description then there is a tutorial to create a virtual machine you can easily do it okay and I have actually already created the uh machine so here is my public IP address I will copy this IP address and now I will create the script okay so let me open the vs code and I will just uh create the file 07 plus2 Dosh okay but before that I will tell you like uh if you want to do it on yourself you can easily do it okay so if you do it yourself and that will be very good for you so because you will get a more confidence as well you will learn more quickly so let me I will just give you the uh basic idea what we will be doing so I will take the username and the password okay uh not username and the IP and then I will use the SS command to connect with that machine so this is the overall idea and if you want to take input from the parameter then also you can do it okay so first of all let's take uh the input I will prompt the user to enter the username first username and then here I will create the username variable then read hyph P enter the IP so I create the IP variable I use SSH command SSH dollar username we need to do dollar username at theate Dollar IP okay so this is the uh command which we we will use okay otherwise we can do with the passing parameters also we will do it that also so so now I will need to give the permission to this file 07 now we will execute this file 07 and I will enter the username as iush and my IP is uh not this one here okay and my IP is this and it will ask me to enter the password so I will enter the password okay soy you can see aush I the name of the V is also I that's why it's showing like this I will do LS here so nothing is there who am I so name of the user is I here also so in this way you can connect with the uh remote machine using our bash script okay so you can do exit to exit come out of the machine and now we will see how we can uh connect with the uh using like parameters okay so what I will do I will just comment out the all and I will create a variable username and it will be equal to the dollar one okay the first parameter then the IP will be equal to the dollar2 okay we will save this script and I will just pass the parameters like I for username and IP for this okay 247 hit enter and it will ask me to enter the password now we are good to go done again let's check who am I a okay so in this way you can connect with the remote machine easily you can use envirment variables not envirment varable you can pass parameters you can uh use variables okay whatever thing you want to do so I hope you liked it so this is a way to learn new things by while doing some new uh things like create I will like in future uh I will come up with the more task okay so that's all for today's guide and I hope you have used all the concept which you have learned till now so that's all and I'll meet you in the next video thank you for watching hello guys now in this particular video we'll be learning about the operators okay so let me first discuss with you what we'll be covering in this particular video so we will go first with arithmatic operators then we will go with the relational and Boolean and so on okay so I hope uh you guys have completed our previous video so now let's just create the new script that is 08 operators. sh okay just add the hashbang or pin shebang you can say okay now I will create uh one variable N1 ENT N1 and I'll create the variable name as N1 read hyph P enter N2 give the varable name as ENT then uh I will EO I will do addition is or just addition so to for incel how we do it we cannot write like this N1 + N2 there is a proper Syntax for it you need to write like this N1 + N2 okay or you can inside also you can give dollar but there is no need okay so now in this way you can write the expression inside these two parenthesis and the dollar sign outside of that expression okay so uh let me just run this script once I will give first the certain permission to this file and then I will execute it d08 and N1 is 4 four that is eight yeah we are good to go now now I will just copy all these things like addition so here you can go with the subtraction what I'm doing wait substraction then here you can go for multiplication and here division okay and next uh we can go with modulus also so let's go with modulus modulus okay m o d l u s okay modulus now let's give the operator like here it will be percent uh uh let me just write like this so that it will be easy to read for you for division you have to give this for slash for multiplication you know this star and for the subtraction there is the minus okay so let's run this script and we will get the output for each and every number so I will give the 10 and five so you can see the addition is 15 subtraction is five multiplication is uh 15 division is two and modulus is zero why because modulus gives you the remainder okay if you do uh 3x2 then in that case you will get the remainder as one so you can see the modulus is one okay now next uh you can do increment operator and decrement operator also you can use so how you can do it uh using Plus+ and minus minus okay so I will do eco increment so here we will use dollar and what you have to increment N1 Plus+ or what you can do Plus+ N1 it will first increase and then print the value okay so let's just run the script clear enter the N15 5 so you can see increment is six okay in case if you do N1 + plus so here we will not see the increment because it first prints the value then increments okay so in this case we will get the value as five here okay so but now what we will do if we will equal the N1 then we will get the six okay so let me just clear this screen enter 5 five okay now here you can see you have got the six so I hope you got the concept of increment and decrement if Plus+ is after the variable name then it will first print then it will increment if Plus+ is first then it will increment then print okay so similar case with decrement Eco decrement what is the dollar and you have to do minus minus N2 use yeah N2 we can use and here also I I do uh leave it as it is so clear the screen enter N15 n26 and now decrement value with six uh first it was seven then now it is six okay so I hope you got it how the things are working okay so now let's check with some relational operators like equal to equal to greater than equal to less than equal to greater than less than all those things okay now you have to just Eco here I'm writing just a automatic operators okay just copy it and you have to go there and just write here Rel re relational operators okay I just uh comment out these things okay so now what we have to do so now we will use this relational operator with the if Els so till now we have not covered the if Els but still we can use it okay so how will you do it uh we will use if and then the big bracket this is the whatever the condition we will write in this so dollar N1 and we use GT for greater than and dollar N2 okay and then so don't worry I will uh teach you about TS in our next video okay so you have to just Eco N1 greater than N2 like like this and then you have to close the if block okay so GT means greater than and there are also many like GT for greater than and G for greater than equal to and LT for less than l e for greater than equal less than equal to n e for not equal to okay like this you can uh use okay so we will use first GT and then we will use other options in next okay so now you can uh run the script 08 and I will write 5 and 4 so here you can see yeah N1 is greater than N2 now I will change the uh g to g e and I will write here greater than equal to so now let me just clear the screen and run the script again so five and five so yeah N1 greater than equal to it this line is executing and you can do now LT if N1 less than equal to so N1 L here I will do and I will again run this script so 545 so yeah N1 less than N2 it is executing again less than equal to so we can use like this 4 4 yeah it is executing we can use hyphen EQ to check equality hyphen EQ we can do like this 5 five yeah here we have not changed but still you can you can think like okay so now what we do five and five can see N1 equal to N2 so in this way we can use the relation operators now let me tell you about the and operator so and operator is nothing but if both the condition becomes true then that then the whatever inside that condition will be executed okay so if N1 equal to N2 and I use hyphen a option to check and and operator and I will check if dollar N1 is greater than 1 okay if this is the case then this line will be execute okay so N1 I will write five 5 and N1 greater than one yes so okay I'm getting some error here okay you can write like this clear 5 five yeah now here you you got the like output as N1 equal to N2 now what I will do I write 0 0 and let's check what happens whether we will get any output or not so here we are not getting any output but now we can use Hyer po option for or operator okay so let me just clear this screen and use like this hyphen uh 0 0 so in this case you the like this condition is equal like this condition satisfies N1 equal to N2 that's why this particular line has been executed okay so in this way and and operator and or operator works so that's all for today's vide guys I hope you liked it and yeah if you any query then you can ask us in the comment section and I will surely update this code in our get repository I will add the link in our description so that's all for today I will meet you in the next video thank you thank you for watching hello guys now in this particular video learning about the ifs conditions okay so let's start with the video and I hope you are aware of ifs but if not then let me tell you first what about what is this so basically if if if else what happens if there will be one condition if that condition satisfy it it is true then the whatever the statement you write inside that if block that will execute okay so without wasting time first of all let me uh tell you about the like how will we write this script so that will be easy to understand for you so 09 I will write here if else Dosh okay we are good to go now okay b bash okay so here just support this in a equal to 10 okay if I will write if and the condition is written inside this big bracket okay and here you have to do if a equal to 10 okay so then you have to write like this then then what what do you want if this condition satisfy you have to write like this you can do anything here I'm doing just printing like a is equal to 10 okay and you can do like in else you can write like this EO a is not equal equal to 10 okay and then to close the if log you can write like this fi so I will run this script but before that we will need to add the permission 0 99 it is yeah clear the screen/ 09 9 okay 09 yeah a is equal to 10 what if I do 11 here and run this script so in this case this condition will not satisfy okay so how we can do it 09 a is not equal to 10 so I hope you got it how this thing work like if conditions so we will take the scenario of voting system like there will be person age we will take the input from the user I will just uh comment out these things okay read and I will do here uh age okay or I will prompt for the user enter your age here I will do age okay and we will apply the conditions on this if age where is the dollar if age is greater than equal to 18 in this case we will write EO you are eligible to cost V okay in else condition what we can write Eco you are not eligible to cast vote okay and we have to just close this if block control s to save clear the screen enter your a 23 you are aible to cast V again 12 you are not eligible to cast V okay if or I can just do here greater than okay and I use one more thing that is L if it's also like the if but if this condition fails it will check for this particular condition here I will write if uh age equal to just equal to I will use equal to 18 so in this case I want Eco please apply for water ID card okay and here we will not use 10 so now what we can do clear the screen run the script I will write my age equal to 18 so so so what happened and uh okay okay I think we will write then okay yeah please apply for water ID card okay so this is the L if condition that's why we will need to write the then okay so right now what's happening whatever the the age we are entering so here it is first checking this condition if this condition fails it will come upon this condition so now this condition execute that's why it is giving the output as this line okay what if the output doesn't match with any condition in this case what will happen the else condition will execute you not eligible to passw simple okay so in this way you can use if if else conditions in your projects okay so that's all for today's videos guys I hope you liked it you will get the source code of this particular video in our G of repository you can get it from there also okay so that's all for today's guys I will meet you in the next video and thank you for watching hello guys now in this video we'll be learning about the case statement okay so if you are aware of the switch switch statements in different language and you you it will be very easy for you guys but not let me tell you about how it will work so why this basically came in Ro first of all we will discuss about this so in many programs you get to know about that there are multiple ifs conditions then that will be very confusing but in case of uh switch case or you can use you can tell the cases it is very easy to understand those things and use it so what I will do I will just create a new file that is a case Dosh okay so I will take the example of the grading system okay so if the grid is a then uh that will be very good like we will print something out inter grd I will write like this and I will create a variable create and how will we use it we will use it case dollar grade okay and then what we'll do we will use the in keyword and here we will uh add the certain conditions like if the grid is a then what to do so here I will do like a then what we have to do not this one uh wait a minute yeah I have use only this bracket closing bracket so in this case I will Eco it's uh your uh your marks is between 90 to 100 okay I can use like this then if the grade is B no and but before that what we have to do you have to just add this semicolon like this is the syntax of using the switch case in this so for B you will write like Eco uh your marks is in between 81 to 90 like this okay and so on like let me call uh use the semicolon and then we will use here C grade and then I will Eco your marks is in between 71 to 80 okay and then we have to just uh use the Astic we can use for default and here we will use the semicolon first and here I will eco your marks is your marks are below 70 like this and then we have to use the EA keyword and we are good to go now we will just give the permission to this script uh 10 okay done now I will run this script 10 you enter my grid I will enter c your Max is with this okay I will enter B your max is between this I will enter e so your max is below 70 okay so in this way this thing works okay so I hope you like this videos guys and if you have any confusion about this you can ask us in the comment section okay and I will surely add this course in our repository you can access this course from there okay so that's all for today's guys I will meet you in the next video so thank you for watching hello guys now in this particular video we'll be learning about the array in cell scrip Okay so you can see already I have created this file that is alwaysss and added this she Banger so before starting the video let me first describe you what is a AR so I will just write it like this so array you you can say like that is array is nothing but uh data structure which is used for storing multiple values in a single variable you can say okay so this is the add simple suppose uh let me tell you the one use case like suppose uh you have to uh store multiple names okay suppose you have to store 10 names so how will you create it like if you don't know about you will just do like this name one equal to aush name two equal to some another name like anit name three equal to Let's create some write some name like uh aushi name for equal to ainash like this okay so this is not a good practice of storing uh names in different different variables so that's why uh AR came in rooll for storing multiple VAR in a single variable okay so uh I will first tell you about uh like array initialization what is the method of AR initialization like how you can create AR in cell scripting so it's a very simple so you have to just U give a AR name suppose uh name list I will give name list equal to this single parenthesis and here you have to store multiple names like aush like here I will write anit aushi and ainash okay so here you can see uh all the names has been stored in a single variable that is the name list okay so now you will think about how you will access these arrays okay that's a point like how you will access it so let me tell you first about array indexing okay it is used to access the elements present in an array okay so array indexing is basically used to access the elements in an array so it starts from zero suppose uh this is the array so the first element will have indexing index zero second one will have one this one will have two and this one will have three okay so here is four elements so like there is uh like index starts from zero and ends with n minus one that is three that is 4 1 that is equal to 3 so so to accessing the elements of an array we will use the you will use these index okay like if I will uh enter the index zero so at index Z I use is present at index one this anit is present index 2 is aushi index 3 is ainash okay so now let tell you first about how you can access the arrays okay so I will just use the Eco so it will we will simply print the uh whatever the index present okay so how you can do it Eco dollar and this par uh cly bases and you have to provide the ARR name that is name list and the big bracket and the index which you want so I want zero index okay so I will just uh wait a minute I will just comment out these things yes and I will run this script okay so 11 Dosh so let's run 11 Dosh what happened LS okay I will need to give the particular permission here do/ 111 yeah so here you can see so this one is printing like add is nothing but a data structure so I will also comment out these thing and I will it will just print up the first index okay wait a minute I write like this Eco first index let me run this so here you can see the first index is this similarly I will print all the other three indexes so I will just copy these things and here I will just write the second and here we will write the third and here fourth and you have to just change the number here like index number that 0 one that is two and that is three just control save clear SL1 Dosh and yeah so here you can see the first index second index third index fourth index so so here the main thing is that like you can access or you can store multiple values in a single variable you can see here so but uh in this case you you will you had to create multiple variables to store those values so that's not a good practice so instead of this you can use an array so uh one more thing is like if you want to print the multiple arrays not multiple arrays all the elements of an array so how you will do there is also the special syntax for this uh like we we use asri okay for printing so you can use like this Eco all arrays all array elements so I will just write like this name list and this one and here you can see the asri you have to just clear this screen and this one all array elements is here aankit aushi and one more uh syntax is there like uh you can use add theate also for accessing all the elements so you can see okay so that's it guys for today's video I hope you liked it and yeah one more thing I will upload this code in my GitHub directory or your repository you can see here you will see okay you can get this from cell scripting tutorial I will add it here okay so that's this for today guys and I will meet you in the next video and in the next video we'll be learning about the fall loops and all those things okay so that's all for to video guys thank you hello guys now in this particular video we'll be working on the loops okay so basically today we will start with the for Loop and actually there are different types of loop Loops but before that let me first create the file that is the for loop. sh so for Loop Dosh okay so now we are done let me just add this shebang okay so let me just first discuss about you the what is the loop suppose if you want to do some task that is the there that like exist there is some kind of repetion of thing suppose uh like if you have watched the mem like uh uh boyfriend sent her girlfriend like I love you 100 times 100 times so what is this thing this is basically a loop okay so Loop is nothing but you can say like in kind of definition like uh what you can say iterations okay like doing one thing again and again and again okay so suppose let me first tell me with an example suppose uh in some cases like suppose if you got some punishment and you have to write sorry for a teacher and your teacher says like you have to write the sorry uh 100 times and all those things or five times so uh similarly what you will do you will oh sorry you will do like this like Eco sorry if you don't know the loop and all those thing you will write just like this sorry sorry sorry and like you will just simply copy and paste things okay so this is what is this this is the repetition of the same thing so this repetition is uh managed by or removed by the loops okay so basically there are the three types of loop that is the fall Loop while loop until Loop okay I will discussing all these uh two Loops in our further videos but now in this video will be working only on the for Loop okay so let's start with the first thing but before that uh I I will create one array okay and I'll be working on that first okay so let me create an array and in this I will use the loop okay so I will just create with uh some languages name like python C++ Java and c and yeah like comma is not required okay so but before that let me just print the uh these arrays so every I can like check everything is working fine or not okay my array and I will just provide asri here and I will just uh give the certain permission for this file that is the 12 CH mode plus X2 okay do SL2 okay so here you can see the our this ad is working fine okay and uh so now what I will do I have to just uh print this array using the fall Loop okay how you can do it but before that let me tell you first about the syntaxes and all those things of fall Loop so the basic Syntax for fall Loop is like this for parenthesis here the initialization will be there initialization here will be the condition if you know how the C programming or Java programming then that or CPP so it's very easy for you to understand this okay but if you don't know then also you can get it right now okay and here will be the increment or decrement okay and the two CRA is like this okay so what is the this is the uh Syntax for follow Loop okay so uh let me tell you how the thing works okay so suppose uh I want to print uh sorry uh like this number of times five times so I will uh start with the zero or one it's all upon you and I will provide the condition like uh that I will create one variable at I equal to Z and I will provide the condition that is i l than five and i++ okay so uh let me just open up my paint so I can like you you should visualize that thing okay so where is text yeah so here simply I write one for Loop that is I equal to0 I should less than six or five if we starting for this one from zero okay so this is the fall Loop okay and I will just Eco here the sorry statement okay so here now what you have to think is like how the things are working okay so let me just uh do like this okay so how things are working basically so so when your Loop will run so how it runs so it will CH it will first assign I value Z if I equal to Z okay it will check the uh condition so I here I will just Define the titles for them uh here I will do initialization here will be the condition and here will be the increment okay so why increment because here I using the I ++ it it simply means it will incre increment the value of I by 1 okay so now here what I will do so you can see the one like right now there is I equal to Z okay so it will now first check the condition whether I is less than five this one so yeah 0 is less than five so if condition is true it will print the sorry so here in this case 0 less than 5 condition is true okay and it will what it will do it will print okay so here I will do like print what it is printing so it is printing sorry and then again it will increment the value of I to I ++ that is now the value of I will become 1 okay so here again I will give like here this I equal to 1 so again it will check whether 1 less than 5 yeah 1 less than 5 true it will print sorry okay and again it will increment the value to two Okay now again Loop will run for two like I will be two and it will check whether uh 2 less than five yeah 2 less than five condition is true and it will print sorry again and the I will become increased by one from here like I will be three okay so similarly again I will be three here and it will check like three less than five yeah condition is true so what it will do like uh it will print sorry okay and again the value of I will get increased by 1 that is 4 and again uh now it will do I will be four and it will check let me just increase this size here I equal to 4 okay and it will do whether four less than five yeah it's less than five condition is true and it will print sorry first and then it will increment the value of I to five okay and now I will become five and it will check whether five less than five so here condition is false and uh what will happen Loop will end okay and it will print sorry five times okay if you're starting your loop from from uh zero okay so this is the simple uh working of the for Loop like how things are working so now let me just tell you about with the experiment part how you can get it okay so let me just open up this one and I will just uh comment of these things okay and for Loop and I will initialize the value of I from 0o to I less than 5 because I have to print five times I ++ Eco sorry okay just controls to save again let me run the script which number it is 12 okay it's not this one sorry bar yeah so here you can see five time sorry has been printed okay but what if you want uh like if you do less than equal to 5 so in this case suppose uh less than equal to 5 so it will print you uh it will print six times so here you can see six times has been printed why why this happened because at this point now if there is less than equal to so here the condition satisfied like yeah four five is less than equal to five so condition is satisfi satisfying and it will be true and sorry will get printed and then sorry will be printed and then I will be equal to six and now if you will check it will check the condition that is 6 less than five so that condition is false so in this case our Loop will get in and you will come out of the loop okay so in this way uh for Loop works I hope you got it and uh let me just tell you one more thing like how things work and like there is also uh some different syntax of for Loop okay so the different synex is this like this uh for uh for suppose uh you have to provide some list like uh uh like you can do like this for I in and you will provide a list like 1 2 3 4 5 6 7 8 9 10 you you can do like this also okay or you can provide some any other uh variables also like uh you can provide a string names also and all those things and here you will just do do okay and uh in this what you will do I will just print like this Eco iteration colon and here I will just write the I okay and then you will write here done do done okay contr s to save I will just comment out this this Loop and again I will just run this script okay so here you can see the iteration I is printed not the value okay so at that point I will just provide the dollar okay yeah so here you can see iteration one let me just uh clear this screen and again run this script so here you can see 1 2 3 4 5 6 7 8 9 10 okay so in this also you can run Loop suppose uh if you want to do some operation of if one comes or like suppose I provide here some different list like the name list suppose I II okay so here uh suppose if you want to uh do like this uh if and the condition which you will give like dollar I equal equal to iush so in that in this case what you should do like uh then Eco uh what should we Eco like um you can Eco like yeah uh like this I is a good boy okay and you have to just uh uh write uh what you can say close the if condition I will save it and I will just run this so here it is showing some kind of error like uh unexpected token then at line number 29 uh wait a minute I have wether uh let me write like this first and I will do it in the colon not colon okay why it's swing error I'm not getting uh let me just uh uh if if Toler I equal equal to I then Eco Fe yeah it's correct uh wait a minute okay so uh basically I got it so here you have to just provide one space so I was doing just some silly mistakes so let me again run this script uh clear dot SL SL yeah so here you can see uh sorry which script add in I have to run 12 sorry 12 okay okay so here you can see a is a good boy so if dollar I equal equal to I then it is printing like yeah iush is a good boy okay so I can do write WR uh write like this like dollar I okay so it will also run so I is a good buy okay in this case you can see so basically you can uh what you you I was saying uh you can just uh initialize or write your for Loop in the syntax also okay so uh if you are familiar with the C programming or CPP then that is very easy for you and if you are for uh same like familiar with python then this one is also fine for you okay so uh now let me tell you first about uh how you can print the array elements okay so in our previous class we have learned about array so here you can see I have created array here let me just create it uh below I will comment out this and uh I will just create array and I will just add some other language also like uh cotl I will add and some other Frameworks like react JavaScript shell scripting okay so this is my array okay so now I have to print this array okay using for Loop so how will you will print an are using F so basically we will need to define the uh condition like added should be less than the size minus one so here what is the size of the added that is 1 2 3 4 5 6 7 8 so 0 to 7 we have to do so in this case you will use the normal Loop that we use in for in other programming language that I equal to0 I should be less than 7 and I ++ and we will just equo the indexes okay so how you will do it my add a name and and I will provide the index as I and we are good to go now let me just run the script yeah here you can see all the AR elements has been printed in this in the same order okay so uh that's it for today guys I hope you liked it like how the fall Loop works and you like this representation also like everything should be clear for you if you have any problem then please ask to me okay so that's all for this guys and I will add this code in our GitHub deposit you can access from there and provide the link in the description so thank you guys for watching this video and I'll meet you in the next video thank you hello guys now in this particular video I'll be talking about the W Loop okay so basically uh I have covered already the fall Loop and in which we have discussed about the basics of looping and how loops work okay so now let's start with the Y Loop let me create this file first Loop Dosh and I will just add this shebang or hashbang you can say here okay so here we go so now uh file Loop is also uh just like the follow Loop but it is uh it works it works until the condition is true okay if condition gets F we can come out from the loop and if condition is true it will execute that particular thing okay so let me just give you the syntax part like what is the syntax of while so while space and this double space and here you have to write the condition okay and then you will write like this uh do and whatever the code you want to perform here and then you have to do like here uh you have to write here done okay so this is the basic syntax of the while loop okay so now we will see the visualization part so let me uh open up my paint first okay but uh before that uh let me just copy the this one code where it is here okay now I have copied let me just uh paste it here okay I will need to just create this one like this to add the text and all those things so here we go and let me just remove this part okay and also uh we forgot about uh this one like we need to give the semicolon all those things okay so let's start with the implementation one suppose uh same case if you want to print something like uh my name if I want to print my name five times how the thing will work okay so basically so here we will need to give the condition like we can give the I like uh I should be less than equal to four or less than five you can give the condition and above you can declare the I variable okay and here you will write the code like Eco and my name iOS okay so how the thing will let me tell you here we will give the value of I and then we will check the condition and then increment okay so initially the value of I is zero and condition will be get checked like 0 is less than equal to 4 yes it is less than equal to 4 so now now what it will do it will print so here I write the print so here what it will print it will print simple iush okay and the value will get incremented by one so now value of I will be one and it will again check the condition whether 1 less than equal to four yes it is true so again print the name iush and again increase the variable to like two it will so now I will be two and again I will check the variable name like 2 less than equal to 4 okay and print and again it will increase the uh value of I by 1 so I will be three and again it will check whether three less than equal to 4 yes it is true and again it will print and again value of I will get increased by one that is four now I will be four and it will check yes four less than equal to 4 yes it is not L than but yeah it is equal to four so in this case also I will get printed and value of I will be five now it will check I equal to 5 whether 5 less than equal to 4 no it's not so this is the false condition and we can come out from the loop okay so same thing we have to do in while loop also so how we can do it let's me just go into the terminal and I will just comment out this part okay so here what I will do I will Define the variable I equal to Z and I will give the condition like while and condition will be I should be less than equal to 4 and do what do nothing just Eco uh sorry Eco my name that is the aush okay and here you can do done and also to increment you can increment like this let i++ okay here we for forgot to increment uh this one so here uh we will increase the value of I okay so the same thing we have to do and uh now let's check whether this works or not so I will just give the appropriate permission uh sorry toore while loop Clear /2 while loop so here you can see no such file or directory why it's showing like this uh okay let me just copy this code and I will delete this file actually 12 12 is two times so I will create like 13 y loop. sh and paste it contrl s give the appropriate permission 13 clear do /13 and here we go and again what is showing line number oh sorry here we have to give the uh this one hyphen EQ less than equal to l e okay now it should run okay so here you can see five times aush has been printed okay so in this uh in this form you can create the while loop okay so again uh if you want to use the while loop with an array we can use it also like uh to print the array so I will just create the array uh array equal to I will write 1 2 3 4 5 so size of array is five and uh less than equal to 5 okay or less than equal to 4 it doesn't matter here and I will just eco eco the array array indexes okay and let me just again run the script and here you can see we have successfully accessed all the elements of an array so in this case you in this way you can use the Y Loop so I hope you got it and I will add this particular file in our GitHub repository so that's all for today's guide and I will meet you in the next video thank you thank you for watching now in this video I'll be talking about the unti loop okay so already we have covered the for Loop here you can see and the while loop okay so now let's start with the UN Loop okay so before starting let me first tell you about this what uh what is this how this Loop actually works so until Loop is basically it works sorry it works until the condition is false condition is false okay so it's quite interesting like it works when until the condition is false whenever your condition becomes true it you you will come out of the loop just like the reverse of the while loop Okay so it's just like you if you will say like 2 is greater than five so yeah it then in that condition the loop will run if you will say like 6 is greater than five now in that condition this Loop will not work like you will come out of the loop okay so I will uh do a visualization for you and I will open up my pain to show you but before that let me just write the syntax here uh sorry what happened here uh wait a minute guys I will open the pain in different window yeah and I will open up my terminal okay so now let me just create the Syntax for you so the syntax is very easy just like the while loop so you have to just give the until and the whatever the condition you will provide here condition and the do and then here you will write the code and done okay this is the basic syntax and the increment decrement whatever you want do here you can do like this okay i++ or whatever okay so here you can see uh I will just copy up this syntax and I will open up my paint so that will be easy for you to understand so I will take the same example of printing the name and all those things because that will be easy for you to understand okay so here uh I want to print my the same thing like my theme so I will provide the variable I equal to Z and I should be less than equal to three I will choose right now so it will print I think four times and then I will uh increase the increment let i++ and here I will write the code uh the code will be like iush I will just write like this and here what you have to do you have to give the wrong information like false condition you have to provide so here I will do like I greater than equal to 3 so here if is false then it will execute the this code okay so value of I so I am I'm writing like this V ofi and then the condition check okay and uh then increment okay or you I can write like this print also okay so currently value of I is I equal to 0 so 0 greater than equal to 3 yes condition is false okay so if false then it will execute so it is right now 0 greater than equal to three that is what false okay so in this case what it will do it will print iush and the value of I will get increased by one so I will be one right now so here again it will check 1 is greater than equal to 3 condition is false so again it will what it will do it will print okay so it will print now condition will increase by 1 that is now I will become two so I equal to 2 so here again 2 is greater than equal to 3 so again this condition is false so a will get printed okay so now I increment by one that is I will become three so now for I equal to 3 so 3 greater than equal to 3 yes condition is uh like uh false it will be false okay and I will get printed and increment by W now I equal to 4 so 4 is greater than equal to 3 yeah condition is now true so now you will come out of the loop okay so in this way until basically just the opposite of Y Loop like if condition is false the loop will execute otherwise not so let me just uh uh do with this uh uh what you can see what you can say like uh run this loop I will provide the I equal to Z and I will use until Loop until condition will be dollar of I is only greater than if I use or greater than equal to three so in this case do Eco aush okay and just do it done here and uh you have to just increment the value of I also okay now we are good to go I will just give the appropriate permission to this file 14 okay do /4 and uh we got some kind of error here line number 21 syntax error okay okay here I do semicolon let me just check now unexpected End of Line let me just check the syntax like I equal to Z until dollar of I is greater than equal to 3 do Eco iush and then let i++ and I have done here I have done here right two and done okay uh so here you can see we have not comment out this so let me just comment it and again I will run this script let me just clear this screen and sl14 yeah so here you can see uh the loop has been executed that is greater than equal to if I will do so it will run five time four times I think let me clear the screen okay the three times I is greater than equal to three okay it will run only three times okay I'm sorry for for here like uh here here like condition will get true yeah condition will get true here because it is equal to three so in this case it will come out of the loop and there will be no further check okay so it will print only three times okay so uh now what I will do I will let me just try uh what you can say we can print the table okay so you can print the table of any number like if you want to print the table of five okay so you can do like this uh you can write the expression here like whatever the expression you write like dollar uh let me just write for you I will just uh dollar parenthesis and you have to provide the number that is the uh any number five into and you will do like this dollar I and here just do zero and here you provide 10 okay and I hope should run so here you can see uh no we will start with the one okay so let's check so here you can see and here we need to do 11 okay so here in this way you can print the table of any number also you can do your customized changes like uh you can take input from the user and then passing that value here and then give the result on the terminal okay so I hope you you liked it guys and you got to know about the unop and I will post all the source codes of this particular video in our GitHub repository you can access from there and I will provide the link also in our description okay so that's all for today's and I will meet you in the next video so thank you for watching byebye now in this particular video I'll be talking about a break and continue okay so we will learn about these two keywords in our shell scripting so let me first create the file with the name like break and continue Dosh okay we are good to go let me add the She Bang because without this we cannot run our script okay so now uh let me just tell you the execution like what and what is this so let me first talk about the break okay so break is basically it breaks the sorry it oh what I'm doing here yeah man it breaks it breaks the execution of a loop okay so basically it breaks execution of a loop and continue is nothing but it skips the execution on some certain condition okay so we will do and do the Practical part of this so so break will basically it will break the execution and it will not do the further operation but in continue it will execute like it will skip that particular part okay so uh let me just start with the fall Loop because we'll be using the fall Loop for the implementation break and continue and also you can use while loop also it's all upon you so I will simply first uh demonstrate you how the things works okay so for this we will need to uh create one Loop so I'll be created for so here I will do I equal to Zer I should be uh what you can say I should be less than equal to uh 10 I ++ and I will simply write now I will just Eco the value of I ecoo I okay so now let me just add the certain permission for this 15 okay dot SL 15 sorry yeah so 1 to 10 the numbers are getting printed okay from 0 to 10 sorry so suppose in some condition you want like if uh if I is equal to uh five then after that your Loop should not execute okay so at this type of certain conditions uh you will execute from the loop okay so how you can do it you have to just provide the if condition uh like this if uh sorry if dollar I is equal to some number that is five so in this case what you have to do then you have to just break the loop and uh what you can do else you have to just eal this value of I okay so you have to just save it okay and I will run the loop here again so uh I think I'm getting some kind of syntax error at line number uh 13 if then equal to 5 yeah we have not closed the if condition okay clear the screen again okay sorry in else condition we are not writing anything right now so now I will write fi here and now you will get to know about how the things are working so here you can see the loop is getting uh started from zero and it executing till 4 but when if your value of I is equal to 5 then in this case what is is happening your Loop is not executing further okay so similarly uh in case of continue we will see and I hope you got it like how the break condition works okay suppose if you want to give some uh other number like if you want to give two okay so at at that time uh your Loop also will get uh break okay so two save and I will just run the script again so here you can see Zero and one is only printed okay so now we will talk about the uh continue so I will just simp simply copy this Loop and I will just here paste it and I'll write like this here comment out for you guys because you will need this code continue and here I will use only the continue okay so here what it will do it will skip that particular part okay if if I will run this loop again so here you can see it has escaped to okay let me first clear this screen so that uh and I will just comment out this part because you should not get confused okay so here you can see it has printed now you will see two is not getting printed okay why because it is execute continue statement basically skips that particular part okay so that's all about the break and continue uh if you want like more example uh let me just uh create uh like what we will do we will just take the input for the user from the user in the for Loop and based on the user input we will break this statement okay so I'll just comment out this all also and I will paste it here and here I what I will do I will do read U input okay and I will Eco here enter your AE or here I can give the variable name age also it okay so here I will do if age is equal to or less than we can say if a is less than 18 so then what we have to do Eco you are not allowed in party like this okay and else what we can do else uh Eco you are allowed in party okay and uh here after printing this we can just come out of the loop and you can use a break statement okay so clear and again run the loop and here it is showing inter your AG my age is supposed 23 so you are allowed in party okay so again it is asking 34 okay so now if I enter 12 so here you can see you are not allowed in part and you came out of the loop so that is the use case of the breaker statement to come out of the execution okay so uh that's all for today's guys and I hope you liked it and if you have any queries you can ask us in the comment section and you will get the whole source code in our get repository so that's all for today's and I will meet you in the next video thank you thank you for watching hello hello guys now in this particular video we'll be automating the creation of files and directory using the F Loop okay so already we have create uh learned about the F how the things work okay so let me first create the file using the 16 and automating file or di creation and Sh okay I will add the hashbang or shebang whatever you want to call okay and let me tell you the use case first so use case will be like this you will be creating the one fall Loop okay and using that you have to create files okay or directories okay so this is the use case simple use case if you want to perform on your own then that's a very good thing for you like you will learn to know how the things work and if not I'm with you and I'll be writing the code along with you guys okay so what do you have to do you have to first of all take the input from the user okay like directory name or first I will create the uh loop for the directory creation so I'll write the comment as like this and what you have to do you have to take the input from the user okay so we have to do read di name I will uh write the directory name di name and I will use the loop for i = 0 to I less than equal to 5 so suppose I have to create six director so I will use five directories so I will use I less than equal to 4 and I ++ okay and here what you have to do you have to create the directory so how you can create it using uh mkdr command and you will provide simply the directory name okay and if you want to uh add some 0 1 2 3 after this so you can do like this also like dollar I okay so we will do do that thing later but uh um now let's do this one okay so here I'm just Eco like enter the directory name which you want okay control s to save again we will need to give the particular permission to this file that is the 16 sorry not 116 clear the screen do/ 16 in ENT the directory name I need uh uh let's write the Linux Ford and here you can see file exist why it's showing like this file exist okay Linux TI okay yeah it already exists so we will need to add this one uh dollar I to create multiple directories okay so I will just uh uh delete this okay because you cannot have the same name like you cannot have the two directories with same name okay Enter the directory name Linux D okay Linux Di and here we go so all the direct has been created 0 1 2 3 4 okay so in this way you can create multiple directories we you want like uh suppose in some cases we need some directory like test so you can create this also like you can write like this test and again the D will get created like test 0 1 2 3 4 all these things okay so uh that's a very easy uh use case so again now let's create uh some files but before that I will need to delete all those things because I don't want uh much uh uh files in my this directory so I will delete this so let me choose all those things and I'll delete at a time okay okay okay move to trash okay it's yeah it's this OS is running in Virtual box that's why it's slow little bit slow okay bro so uh what we can do so we will now create the file creation script okay so Eco enter your file name okay so here again I will use the same Loop and read the read file name and all those things so here I will to read file name or a student name suppose uh there is some student list and you want to store their data in that particular list so how you can do it so you will need to use touch and uh here I will start with the one okay so let's clear the screen and just I will comment out these part because I don't want to create directory right now okay I'll simply run this scrip enter your file name so I will use a student like this and all the file will get created like 1 2 3 4 okay so I have not used here uh uh a student name variable so I will need to delete all these things again sorry for that okay delete it and again I will need to run this script here so let me clear the screen run the script enter the like this student so here you will see like all the St 1 2 3 4 has been created so in this way you can create 100 of files using the for Loop and that's a very good use case like suppose in some cases you need multiple directories so you will not do manual task okay whatever the amount you need amount number of directory you will just provide it here okay the number of directory you need and that's all for today and I hope you liked this use case again in our next video we will see some use cases or we will move with some different topics so that's all for today's guys and I'll will meet you in the next video so thank you for watching and I'll meet you next one thank you hello guys now in this particular video we'll be uh automating the user creation okay so how we can do it let's uh start with the video and I will create the file that is 7 user creation Dosh okay just add the hashbang okay so let me first tell you the use case okay what will the use case so here the use case will be the F Loop first we want multiple users and then username input then password and also choice whether user want to add user or not okay so I will comment out this and I will just create the fall Loop first the loop will be I equal to 0 and I will just run this Loop till less than equal to 2 and I ++ okay so here first I will take the input from the user so I will first uh use enter your choice okay if choice is one then uh we will add user otherwise no read Choice okay so we will read choice and we will apply the if condition here if so one space here if dollar Choice hyphen EQ it means equal to one then what we have to do then we have to take the username input read username so here I will do just uh Eco enter the username okay and next I will take the input Eco enter the password read password okay so uh now till now we have uh like we will take the input from the user okay so the command that we used to add the user that is the user ad then we will use sudo user ad and I will provide hphm hyph /bin bash okay and the username so username is this one and this we have a store a username and then we will pass the password because password takes the two parameters okay okay so I will pass like this okay so dollar username dollar password and the pipe is pipe works because it passes the uh whatever the uh data is here it passes this side okay it will pass the data to this command that is sudo CH and the CH password it is so we will write CH password password okay so this command will add the password in the uh system okay or for that user you can say so now the else part will be else just break out of the loop and uh close the if condition okay I will just uh clear and I will just uh add the permission do/ 17 enter your Choice my choice is one enter username I will enter like Hello World password Linux machine okay so here you can see uh authentication we're getting some kind of error like user hello world okay password not change enter your choice let me just enter some other number to break out of the loop okay let me check with the code in so read choice we are getting the choice enter the username that is the read username then read password then sudo user add hyph name hyph as bin bash and we have passed the username here okay then Eco username and here you can see the password okay we have okay there was a m mistake so again let me just run the command uh so but before that let me just delete that user Del user hello world I think it was okay done so again just run this script and enter your choice my choice is one and uh username anit I will write and uh password I will write hello world okay so now it is asking me to again enter my choice whether I want to add a user or not so I will I don't want so I will write zero so we are out of the loop now I will log in into the anit and enter the password hello world so here you can see who am I if I will do so it is anit okay so in this way uh we can U uh like automate the user creation if you want to add multiple users suppose if you want to add only one user at a time then you can use this commands Okay these much of a script and you don't need any if condition and all those things okay so in this way you can automate the user creation I hope you liked it and if you have any quy then please you can ask us in the comment section so that's all for today's video and I'll meet you in the next one so thank you thank you for watching hello guys now in this particular video we will be learning about the test command Okay so before starting let me first create the file that is 18 test command you can write Dosh okay so let just add the hashbang okay bin bash yeah so before starting this particular tutorial let me first tell you about the basic like description about the test command so basically test command is basically uh use to test the particular expression test the particular expression or particular condition okay so if condition is true then it will return zero otherwise return one okay so if condition is true it will return zero where uh or otherwise it will return one okay so it's basically uh like one of the another method of writing this expression like whatever we write in this if condition whatever the expression we write here whether of five is equal equal to 5 okay so it just we can just replace these part using the test command Okay so but also there are many uh like many functionalities or many options are being used with the test command like if we want to check whether two strings are equal whether there is some file uh exist or not whether the file is empty or not whether the file or directory like if we want to check uh whether some particular directory it is directory or not or some mathematical operation like equal to greater greater greater than all those things okay so we can do all those operations so let's start so first we will start with the string comparison like whether two strings are equal or not or not equal to whether a string is empty or not all those things we will do so how we can do it let me just uh create the two variables that is a and and B so I'll write my name aush and b equal to iush in this okay double course and now I will write the if condition and I will use the test command if test so it is basically like uh uh what we can say advis to use the double quote for the variable while using the test command okay if dollar 1 equal to Dollar B then what we have to do then we will just equo a is equal to P okay and I will just uh write the lse all part also lse equal a is uh not equal to B okay just close the if condition and clear the screen and CH mode plus X8 18 do/ 18 okay so here you can see a is equal to B now what I do if I just change the uh B okay so here you can see a is not equal to be equal not equal it's equal okay let me just clear this screen again and run the script yeah so here you can see a is not equal to B okay also uh test command uh offers me many more functionalities like string size if you want to get okay so how we can do it using hyphen and option okay like not basically string size it basically checks whether string is uh uh what we can say empty or not okay so how we will do it using test hyphen n dollar dollar a we will use so basically if there is some string then it will uh Eco string is not empty okay em PTY y okay so hyph option is checks whether there is a string or not if a string is not empty then it will result true it will return it return true if it is not empty otherwise it will return false that it means the string is empty simple so how you can do it the string is empty so we are checking a for a so for a there is a string so it will it should return a string is not empty so string is not empty is returning if I will just pass hyphen B uh dollar B here so it will it should return a string is empty okay so it is returning my string is not empty what is returning yeah uh let me just again run the script okay it is it is also returning a string is not empty so for this we we use hyphen Zed option sorry for that we will use hyphone Z option here so clear the screen okay so again it is is showing me same thing okay but uh okay okay sorry uh I'm sorry here we have to use this double quotes Okay but it's still it is showing string is not empty but why it is empty there is something wrong we have done here yeah yeah sorry sorry what we have to do here a string this is empty string so this condition is getting true and it is just displaying with this Eco message so that's a wrong if I do something else here condition will get false and then it will display me this okay so so so there is nothing much so we have to just replace this Eco with a one string is empty or here we can just do string is not empty okay so now it should return string is not empty so here you can see string is not empty if I will just remove this part it will display me a string is empty okay so it was just if it is true then it will execute obviously okay so in this way you can do string comparisons also so now moving forward uh in numerical part what you can do if we want comparison like equal to greater than all those things so how we can do it let's just do it okay so I will just copy this much part and again I will paste it here and I will provide here some numbers like a = to 10 and b equal to 20 and here if test hyph we will not provide hyphen here we will use uh the same thing which we use for numerical like hyphen EQ so here I will use dollar a okay if dollar a equal to dollar B okay I'll remove this one so here if a equal to B so it here we will print a is equal to B if it is true otherwise here we will just print not equal okay just again clear the screen and run the command so string is empty and not equal okay so if I will do 10 here also so in this case a is equal to b or you can check other options like L than LT for less than here I will just uh add one more zero that is 100 and clear the screen run the script okay so here we will just change the equest statement like a is greater than b sorry less than less than b okay so clear the screen again run the script so a is less than B that means it means uh it means this statement is true and this one is executing and if I write here so here we will see not less than b so not less than b so in this case you can use uh multiple things using test command like you can play with the numerical part string also okay so instead of this double bracket whatever we use in this one like double bracket and spaces so we it is easy to use this one okay so now moving forward we will uh use some like file comparisons also so how we can do it okay so I will provide the file name not file name I will use these much of file or hello.txt to play with it so then there are multiple options which we can see like uh hyph s option which is used for checking the uh like uh what we can say checking the if file is empty or not okay so let's start with this so here I will just add the command that is the file comparisons okay so here what we can do if test hyph s and I will provide the file name my file name is hello.txt then if file is empty hyph s is used to check if file is empty or not we will just Eco file is empty otherwise else Eco file is not empty it means if condition is true then it will execute line number 32 and if not it will will execute line number 34 okay so I will just uh uh comment out all other leave it uh let's check so let me first check the hello.txt so in hello.txt there is nothing so it should return file is empty so we have got some kind of error so the error is we have not closed the if condition clear the screen so file is not empty it it's showing why because uh I don't know if file is empty or not so the file is empty it should display let me just create one more file test1.txt so it is absolutely empty file so again here I will provide test 1.txt clear the screen so again it displaying me file is not empty why so okay um okay if file is not empty it will display this line okay if file is empty then it will display this line okay okay okay so we have done some mistakes here like we we have to just replace this line here so I don't know why this thing is happening so sorry for that so just uh clear the screen and yeah file is empty now so now what we will do we will just write some text here and now it should display some like file is not empty here so clear the screen and again so here you can see now it's swing file is not empty okay so uh also there are many flags we can use hyund D and all those things okay so there are many flags which we can use to check hyund D is used for check I think whether the uh whatever you are passing that is it is directory or not okay so I will create one directory that is uh uh let's create one directory that is dr1 okay so here I will just pass dr1 if it is directory it is it will I I will display if condition is get true it's a directory or it is not a directory I will display here it is not our directory just uh run the script okay so it is a directory and I will provide some different name here like suppose I provide hello what was the file name that is test one.txt and now it should display it is not a directly so yeah it's correct okay so uh I hope you liked it guys we can use test command while providing the conditions in if with if conditions so okay so that's all for today's I know there were some mistakes today so sorry for that and I will meet you in the next video okay so thank you for watching hello guys now in this particular video we will talk about functions okay so what is function and how everything works we will discuss all the things in this particular video okay so actually already I have created this uh function. SS file for you if you not then you can also create uh this one okay so let me first discuss about the function what is function the basic idea about it like if you are aware of any other programming language like ccpp Java python s then you might be aware of the function but if not then let me tell you uh about this okay how everything works okay so what is a function so the basic definition which everyone says is like function is a block of code which can be used again and again okay so as the name suggest as the definition so this is the same thing as like it okay so whatever the code if you write some kind of code and you want to use it again and again and again then you can write that particular code inside a function okay suppose you don't want to do some particular task uh repetitively okay then you can use a function okay suppose you have to uh like uh uh what you can say you have to sum two numbers okay then uh you can create a function and then you will just call that function to add those numbers okay so basically the whatever the main benefit we get from the function is the code reuse ability okay it means we can reuse that particular uh code again and again this is the basic idea about the functions okay so now let me tell you about the basic basic uh syntax what is the basic syntax of the function in the C scripting so how we can do it so basically the basic syntax is the function name whatever the function name you want to provide okay the double parenthesis and simply this CRA and inside that cly you have to just write the code okay whatever the code or whatever the operation we want to perform okay so this is the basic syntax which we will be uh using inside this whole tutorial so now let me just create one function with the name greetings okay and I will just Eco something like uh good morning uh good morning iush like this okay and to call the function you have to nothing uh you have to just uh write the name of the function gretings okay and now let me just uh move into the this particular directory okay and now what I will do I will just provide the certain permission to the file CH mode plus x 19 function.sh okay clear the screen do /9 okay so here you can see good morning iuse has been printed okay so here what happens uh suppose we want to again again uh call that function so we can just uh call it again here what happened let me just just copy it again greetings paste it here okay so again it will print good morning as two times okay why it happens because here you can see the name of the function and and we are just Eco this thing good morning I and then we are calling the function okay so with function calling whenever you call any function then it calls this function and whatever the code inside it it gets executed okay so this is the basic functionality of the functions okay sorry now moving forward uh we need to talk about like uh parameterized function and the returning value okay so what is the parameterized function let we first discuss about you so basically in function what happen you pass some parameters okay and uh with on that parameters we do some kind of computation and all those things so I will just create the sum function okay I will just remove this thing and I will create Now parameterized function okay so so the name of the function will be sum aush okay and I will just Eco the sum of uh dollar one and dollar two is not like this uh before parameterized function let me just discuss with the simple function how we will do it like suppose if a equal to 12 and Bal to 13 then C = to Dollar a + dollar B and you have to just Eco the value of C Eco the sum of dollar a and dollar B is the we have to just equal dollar C here okay just save the code and we will just call the sum function and then we will get the result as 25 okay so we have got some kind of error in line number sorry we don't have to provide this parenthesis here okay so okay we are getting uh error not error uh the same string because uh we have not uh added the expression in a right way okay so here you can see for computation like we know like we need to do like this okay then and only we can compute anything okay so here you can see the sum of 12 and 13 is 25 so suppose if you want to uh change number okay so 13 and 14 so we can get result as 27 I think yes 27 so here the thing is we need to change that thing in our this uh inside function but uh what do we want to pass that pass the value while calling the function and in that case we need the parameters okay so how we can do it so in sales scripting we basically pass the parameters as this one like from here we will pass suppose 12 and 13 and then it will act as the dollar one and dollar two okay so in this way we can get so now for this I will just uh like uh provide a equal to Dollar 1 and b equal to doll2 okay and all things will remain same and I will just pass the parameter here 12 and 13 not 12 and 13 let me provide just okay 12 12 and let me clear the screen and again this so here you can see the sum of 12 and 12 is 24 now we don't need to change anything in our function we can do changes here okay so now the code now the answer will be different like 167 okay so this is basically the parameterized function okay so we can pass parameters inside the function and then with those par and and the computation will happen on those particular parameters okay so this is the basic functionality of the parameterized function let me just create some another function like suppose uh you want to uh get uh get name of a student get a student name I will create a function get a student name okay and uh I will just Eco like this name of student is and here I will just Deco dollar one okay so here whenever you will uh call that particular function and provide the name so let me provide the name as iush and uh clear the screen so here you can see name of student is aush okay so in this way you can pass the parameters okay so now uh let me discuss about you the return type of the function of in cell scripting how this uh works so basically in uh what we can say in cell scripting the return the like method of returning any value some little bit of difference so let me discuss it with you how it basically happens okay so basically what happens whenever you call the function and if you return something then you need to store that return value in a special uh like uh with a special uh symbol we can say like that okay so here if we want to Eco uh and not e if you don't want to Eco you want to just return the value so you have to just write return dollar C okay and after calling the function you have to store the value return equal to you have to write uh uh what I think dollar question mark So it basically stores the value whatever the return okay so if here the return value is there like what basically happens it will store the value uh before like here this sum function okay so if there is uh if it is returning some value then it will store inside this variable return okay but if there is again some kind of any function and and here it is returning something like suppose uh here I create some function okay and here I write the function name as sub okay and here uh the return type will be all the same thing but here in this case now what will happen it will uh store the value of this return value okay so this happens so let me bu before uh going into complex thing let me first discuss with the basic part how how we can get a return value so now you have to just Eco uh the return Eco return value is dollar rdt okay so let me just clear the screen and uh I will just comment out this part okay and let me run the script so here you can see the return value is 67 okay so in this way you can store the return value but now what happens if you if we just uh like uh we do SUB here sub we do okay so in this case let me uh check what happens okay so in this case also we are getting the return value is 67 okay but we have not called the sub function so let me first call the sub function so sub I will provide uh 13 and 14 okay uh not 13 14 133 and 12 and here I will write dollar a minus B so value should be one okay so here you can see return value is one so and now what I will do I will just call the sum function here here before return so now let me check what will be the return value return value will be now 167 okay so now you I hope you got the idea about how the value is stored inside this red uh variable okay so whatever the function is calling before this so that value is getting stored inside this variable okay and whatever uh like if like some function is calling before this one so that value will not be stored inside this okay so this is the thing about return type of a value in a shell scripting okay so that's all for today's guys and I hope you liked in I will update this source code in our GitHub depository you can access that from uh access this code from there okay and uh in our next video we will cover something more important and that is about nested function so we will discuss all those thing about in the next video so that's all for today and if you have any query you can ask us in the comment section thank you thank you for watching now in this video we'll be talking about the nested function okay so actually I have already created the file with the name 20 nested function let me just paste the thing hash uh like shebang okay and now let me just discuss about like basic idea what is the nested function so it basically means as a name suggest you can uh guess like we will just calling function inside a function inside a function not calling also we can say like we can write also function inside a function okay so let me just discuss about the same thing suppose I create one function demo and here I just Eco something like this is a demo function this is a demo function and again I create one more function that is the demo 2 and here I'm writing ecoo this is uh sorry this is a demo to function okay and now what will happen I will simply call this function demo here okay and uh demo to below okay so I will just give the permission for this file okay clear the screen /20 okay now now we are good to go here you can see the both the function has been called okay so it this is the basic thing okay but now what I will do I will just uh uh call this function inside inside this function oh sorry demo two demo two okay so now what will happen it will basically call the function okay so here what happens the demo function has been called so here it saw like uh we have to Eco so it EO this part and again it check demo two function is also called so it gets the print the content of this demo to function so in this way uh our this nested fun function works but what if you want to call the uh but what if you want to call the uh like uh not call if you want to write the function inside a function so now here what I can do I can just call this this function here also demo to and clear the screen and again we will get the same result okay this is the demo to function okay so now what I will do uh we will take the one use case of summation and addition uh sorry summation and subtraction okay and we will work on those thing okay so I hope you got the idea about how everything works so let me just comment out these things and I will create the parameterized function that is first I will create the sum and here I will uh Eco the sum of and I will pass the dollar one and dollar two is and and here I will just uh do the computation part that is the dollar uh dollar 1 + dollar2 okay and let me first check uh whether the thing is working or not sum 2 and four and uh do/ 20 and okay yeah it is working the sum of 24 is six okay so now I will what I will do I will just uh create this sub function also here and I will just eco the sum of uh not sum the sub the difference of dollar one and dollar two is and here we will do the computation part that is the dollar one minus dollar2 okay and then we will just uh call the function inside the sum function that is sub 4 and two okay so let me just clear this screen again and hit enter so here you can see the sum of four and 2 is two yeah uh sorry I have done something yeah let me just uh give it proper space I clear this screen and yeah we are good to go now here you can see the sum of 2 and 46 we have passed 2 and 4 here and we are getting result from here 2 and 46 and substraction of 4 2 that is equal to 2 so we are getting the exact result let me change the value and I will write 80 here uh 80 and here I will do like 40 okay so here you can see we are getting the same result like expected result we are getting okay so in this way we can do the uh nested function and all those things okay so I hope you liked it and I hope you got the idea about how the nested function works okay so that's all for today's video guys and I hope you liked it and if you have any quer you can ask us in the comment section and you will get the all the source code in our GitHub depository and you will get the link in the description so thank you for watching and I'll meet you in the next video thank you byebye now in this video we will be talking about some basic and the important concept that is the local variable and the global variable okay so actually we have already covered the functions so that is very important to know about the concept of local variable and the global variable so let me create the file with the name lare and the gware dosh okay and I'll just add the shebang here bin bash okay now we're good to go so I will start with a basic definition of the local variables so if you like um I will just write local variable so we can Define the local variable as the uh variable which is uh which is sorry uh which which is declared inside a function is called as local variable okay sorry for mistakes okay my typing is not good so much that's why it is happening so so what is the local variable so local variable we can Define it as like the variable which is declared inside a function that is the local variable okay so so suppose if I am creating one uh variable that is the function one okay name of the function is function one and I'm defining a variable that is a equal to 20 sorry 10 so in this case what is this so a is nothing but the local variable okay so if I will do e a here uh Eco dollar a and I will just call this function function one and let me just add certain permission to this file that is the 21 clear do /21 okay so now I will just run the script 21 uncore okay so it's not uh okay let me just again yeah clear the screen sl21 now okay so here you can see we are getting the value as a value of a as a 10 okay so this is the local variable like we have declared this variable inside a function so so that we can access this inside this function only not outside of this function so if you want to print uh like uh uh without function calling okay I will just print here Eco dollar a so let me let's uh see what happens so it will I don't think it will print anything clear the screen again so here you can see we are not getting any kind of result here okay so this is happening because we can't access the uh Lo local variable outside of the function so that is the thing we can uh get to know with this thing okay so I will just comment out this and I will just again uh call this function and now I will discuss about with the what is the global variable okay so Global let me just uh write like this Global variable okay so this is the variable which is uh which is declared out outside the function okay Jo be like whatever the variable which is declared outside the function that is called as the global variable okay I hope you got the idea okay so let me just comment out these things and I will create the variable name as the gware okay gware equal to 20 okay or I can just uh Define this string like I am a global variable okay so this variable can be accessed from anywhere of your program like inside the function or outside the function so if I will just call here Eco dollar gar okay so here we can see the result as the um the global variable okay so here we can we are getting the result I'm a global variable but now if you want to uh again Eco the same thing inside the function also so we can also get the result two times like I'm a global variable so here you can see 10 and then I'm a global variable so you you should see the uh like how the function is executing like when when first what is happening we are just printing This Global variable and when we and then we have called the function so after calling the function we are getting the first it is calling this local variable and then it is calling this one G that is the global variable okay so this is the simple concept of the uh local variable and the global variable I have disc why because we have already covered the functions and these thing you should know about it okay so that's all for today's guys and I hope you liked it and if you have any queries you can ask in the comment section and I will post all these things in our get of repository okay so thank you for watching and I'll meet you in the next video thank you hello guys now in this particular video we'll be covering uh like one of the script that is the user deletion script okay so basically in this particular video we will use the whatever the thing which we have learned in now in our some previous videos that is the functions and the global variable local variable okay these all things which we'll be using inside our this particular video and we will create the one script that is the user deletion script okay so let me create that file that is the uh 22 uncore user deletion Dosh okay and uh let me just add the what we can say Ash C uh exclamation bin bash okay we will add this uh shebang and now let me just discuss with the workflow what will be the workflow because if you want to do the same same thing uh separately on your own then you can do it simply because it will give you the more confidence about in this scripting so let me just tell you what we will what will we are going to do in this particular video so we will basically read the uh username whatever the user which we want to delete and we will we just need to provide our the system password for deleting the user and the Del user command Okay so these are all things which you are going to do inside this particular video so let me just uh comment out this thing and uh now I will just uh uh use the local variable and the global variable concept and the function function concept inside this video okay so before uh deleting the user we'll need to some create uh user okay so how you can create the user we will just use Pudo user add and let me just name it the test okay I sh 098 okay user has been added I hope let me just check with the password okay so here you can see test user has been add we have not provided password and all the same because we don't want to create a like a normal user we we have to just delete this user that's why okay so the name of the user is our test okay so first what I will do I will just Eco enter the username okay and I will just read the uh username inside the variable read username okay and uh then what I will do I will just uh Eco enter your password it means it is asking me for the whenever we use sudo then it ask me for entering my password okay so that's why I've have entered enter your password and I will read here read uh system password I can write okay or current user password you can write the variable name okay or the Pudo or the root user password okay and now I will just uh write the function name as the D user okay and inside this D user I will just Eco uh dollar this one system password okay and I'm just passing this password inside the command that is the Pudo using a pipe I will use and I will use Pudo hyph s hyphen capital S is used whenever we take the input of the password from from different sources like we are getting we will uh write the password using this okay and with the help of hyphen capital S we can uh write write the password and then I will just write the command that is the Del user and the username okay dollar username okay and then we will have to just call the script T user okay so here you can see these are the what Global variables okay these are the global variables okay uh like username and the system password and these Global variables are being used inside this function okay so this is the normal function and here we are just what we are doing here we are just calling the calling the D user function okay and now what I will do I will just uh move into this particular clear the screen and I will just need to give some permission to this file create the screen do /22 okay now name of the username is the test and I will need to enter my password okay so removing user test so now done so we have finally remove that particular user if you want to go back and check the/ CTC password file so there will be no test user so you can see there is no test user okay so in this way we can uh delete the user with our script okay so we have just used the global variable concept which we have learned in our previous video and the function concept okay and here we are just passing the name of the uh username which we want to delete and hyph hyph capital S options uh to uh pass the like um password okay so this is the thing uh I hope you got it how everything is working so that's all for to this video and I'll meet you in the next video with some another script okay so thank you guys for watching and I'll meet you in the next video thank you hello guys now in this particular video we'll be creating one of the script that is the file Integrity Checker that is the basically a simple script which we will be using to check the Integrity of the file whether the file has been changed or not okay so basically for this tutorial we will be using one of the tool that is the md5 sum okay so let me just show you the demonstration of this particular tool so basically this tool will generate the hash of the particular file so if you'll check the hash of this hello.txt so here you can see the this is the hash okay so but now if we'll change the uh something like uh let me add again 1 D here and again let me check the hash so there will be change in both the hashes so here you can see the difference so basically what we'll be doing so we'll be using this tool and we'll be creating two functions for generating hash and the checking hash and uh we will check if both the hashes will match from the previous hash then there will be no uh changes we will display that as a output and if there is changes then we will display output as like there is change in a file okay so let's start with the uh creation of the script so let me just add the one file that is the file Integrity Checker file Integrity Checker Dosh okay so now what we will do uh I will create a function so let me just uh pin bash shebang has been added and we will give the two option for the user for generating hash and the create checking hash okay so but before this I will just create the function that is the generate hash okay and we'll be covering all the concept which we have covered till now like mostly function will will be covered in this particular video okay so now I will just ask the user to uh enter the file name of which we want to generate hash to here I will ask the user enter the file name please okay and I will just store the uh file name in the read file name v file name variable and then now what we will do we will just generate the hash and store that hash into the file that is md5 sum and we will provide the file name and we will just uh file name. md5 we will store the output in the md5 this output whatever the output we are getting this one we will store in this mt5 okay and uh then we will just Eco hash value stored in dot dollar file name whatever the file name we have file name. md5 file okay so uh this is the generate hash let me just call the function and let me check with whether everything is working fine or not clear the screen do slash uh but before that I will need to provide the certain permission to this file that is CH mode plus X that is 23 clear the screen do /23 enter the file name I'll just write uh hello.txt here and here you can see Hello hash value is stored in this file so let me check okay so here hash value has been stored we can check here okay now uh coming back uh to the script so let me just uh clear here generate hash now what I will do I will just uh what we can say um check hash value we will uh check hash check H check hash value okay and Eco enter the file name now we we are just checking the hash value and we will match the hash value with our previous value okay so Eco enter the file name again we will uh enter the file name and we will just read file name we are creating the variable and storing this in the file name and now we will uh generated hash we will create one variable value generated hash okay don't confuse between generated hash and generated hash okay and here we will store the output of the previously uh whatever the previous uh hash which has been generated in the md5 file so we will store the value like this value we will store in this variable generated hash how we can do it we will just read the file name that is dollar file name. md5 we will add okay and then we will again uh again we will just uh store the uh uh like current hash or current output so how we can do it dollar and we will just do md5 sum and then we will just provide a file name okay now we are good to go and then we will use the if conditions here like if uh we will just uh do like this if and we will pass the double codes and dollar gen let me just copy this thing if dollar generated hash will be equal equal to we will use here equal equal to again double code dollar output then in this case what we have to do then Eco there is there is no no change in file okay and in the else condition we will surely uh add the equal statement that is there is there is something change something change in a file okay and then we have to just uh block the uh if condition we have to just close the if condition okay okay and now what we have to do uh what we can do uh like uh now we will just Eco the choices Eco one dot what the user want generate hash whether user want to generate hash or whether user want to calculate Ash to check file Integrity we can say file inity okay and then what we will do we will use the switch case and uh whatever the thing which we have already learned so we will use read hyph P okay and we will like write enter your choice enter your choice okay and we will store it in the choice variable that is the choice okay and then we will use the case dollar twiice okay in and if this is the if this is one then what we have to do Eco gen generating hash and then we have to just call that function that is the generate hash okay here we go generate has Ash okay now we have to just remove this part now if two is selected by the user then in this case what you have to do and here you have to just break this one okay two then if we have to just Eco uh we can do checking file Integrity okay and we have to just call this function that is the check hash value okay and we have just close this one and the if any other value that is the default if we get the default then in this case we have to just Eco invalid Choice bu invalid Choice okay and we have to close this case okay now we are good to go I hope everything is uh ready and we will just run the script again or clear the screen okay and I will just remove this file here uh because we'll be using this file okay and I will just uh remove this one also okay now run the script okay what is the choice first enter the file name hello.txt okay hash value has been stored inside this file now we will to again run the script and now we want to check file Integrity enter the file name hello.txt okay so there is no change in file okay but now what I will do I will just again uh do hello.txt and uh I will add this one e okay and again I will uh clear the screen again run the script enter your choice that is the second check file Integrity enter the file name hello.txt and here you can see there is something Chang in a file okay so in this case you can see uh like we have changed file here name like we have added e so it is showing me that there is something change in a file so our this script is running uh actually fine so for your uh like if you want to go on some Advanced label you can uh use try except block all those things okay for if file doesn't exist you can just pop up an error or E the statement like file doesn't exist all those kind of things okay so that's all for to this guys and I hope you liked it and we have used multiple things inside this so this is basically the longest script which we have entered till now so that's all for today guys and I will meet you in the next video thank you thank you for watching now in this video we'll be creating one of the script that is the uh cloning repository okay so basically this script will what it will do it will basically clone the whatever the repository if you want to clone from the GitHub so basically we will be doing in this particular script so let me just create the file that is the 24ore uh clone repo Dosh okay now we're good to go we have to just uh so this is the basically a very simple script which we'll be uh doing right now okay so the way let me just tell you the use case how the thing will go like basically we will read the uh like link from the user okay we will use the git command okay and it will basically automatically uh create one of the folder inside ouros inside our system okay so this is basically the simple use case which we'll be doing inside this particular video so how we can do it we will be use the concept of the local variable not local uh L globally Global variable and we will use the functions also okay so how we can do it uh if you want to do on your own then that is a very good thing so now let me just uh Eco enter the repository link repository link okay so we will ask the user to enter the repository link so we will just read this thing inside the repo link variable okay and I will create the function get repo uh not like this get repo okay and to parenthesis Eco and here I just Eco getting depository please wait like this and we can use the command get clone okay and get clone and reping will provide okay so now what I will do uh we have to just call the script uh call the function sorry get report and provide a certain permission to the script CH mode plus x24 clear the screen /24 okay Enter the deposit link so let me tell you we will be like uh uh what we can see cloning this uh link okay or this repository sriping tutorial so let me just go back here and control shift V now enter so you can see cloning depository please wait so it is done so now here we can see all those file have been like uh cloned here okay 1 to 10 because we have added only uh till 10 so let me just again uh delete this uh link okay delete this directory clear this screen okay so uh this is the very simple script which we show right now so now what we can do we can check uh uh whether the uh user has entered link or not okay so this thing we can do in our next video okay like we will check about the uh like regular expression and all those things okay in our next video so that's all for today's guide and I hope you in the uh in the next video I'll meet you so thank you for watching hello guys welcome back to the channel this is aush and now in this particular video we will learn about uh one more script that we will create another script with the help of the nmap tool which we basically use for the network web mapping and we will look for the what are the open ports in the particular uh system using the IP address or the domain name okay so but before moving forward in this particular video I will uh talk about first about this clone repository s file so we can do one more thing in this particular uh script is like that uh wait a minute we can just uh add one more thing here like uh we can check for the whether user enters the uh correct URL or not okay so we can use the concept of the like subst that is the sub string we will match the sub string of a string okay I hope you got the uh concept this thing like what what we will do we will just match the sub string part of the this repo link okay if if it matches with the github.com then we can easily clone the repository so now what we have to do I will create the uh just another variable with the name domain name okay so let me just create it domain name equal to github.com github.com okay and I will just need to add the some fils conditions here to check whether the user enters the correct link or not okay so here I will just do dollar repo link equal equal to and I will need to use asri because uh we use that for the sub string comparison okay so I can do asri and then inside the double codes I have to just provide the variable name that is the domain name okay so now what we will do we will basically uh like write the fur the script like then Eco if the link are equal then what we will do what is happening okay let me just copy the same thing again here Eco then we will do this else what we can do else we will just uh Eco please enter valid link and we will close the condition part here with fee okay so I hope everything is uh correct so now what we will do I will will just run the script again here so okay I will run this script but before that I will just copy this link okay so just paste it here and the terminal so I will just run the script using 24 okay clone. Enter the repository link I will enter the link okay so here you can see we got some kind of error uh on which line we have got line number 14 okay if repo link equal equal to asri okay we forgot to add space here contrl s clear the screen okay now I will just add first google.com so it should Pro in yeah show please inter valid link now I will what I will do I will just just uh paste the depositor link enter so here you can see it is cloning into sriping tutorial and here you can see uh the directory has been created with the name s script to tutorial so uh our script is running uh fine because uh if you are entering some wrong URL then at that time we are getting the uh this statement is running like please enter valid link so it means uh this thing is getting verified okay so that was the part which was remaining in our previous video so now what I will do uh I will create one more uh script with the name sorry let me just create it 25 uncore uh nmap yeah we can do nmap Dosh so now uh if you don't know about the nmap so let me tell you first about what is this so nmap is basically one tool that we use for the network mapping or you can say like for finding the open ports in a particular uh system system okay so that is a basically a cyber security tool which we use for for Network scanning and all those things we can also get the information about the OS okay so just like other commands uh like for LS we have L option a option so similarly for nmap also we have different options okay which we will learn in this particular video okay so let's start with the scripting part and let me just give you the use case how the thing will go on so the thing is basically what you have you have to read the host name it basically means whether you want to take the domain name or the IP address it all depends upon you what do you want to take as a input from the user so you have to take the host name and then further what you have to do you have to just use the nmap commands Okay to just uh uh what we can say um to just scan that particular host name okay so this is the simple use case which we will be going to use in this this particular video so for that first I will need to enter the uh take the input from the user that is the host name okay so let me first clear the screen and now I will just uh Eco okay wait a minute what what is happening which keys I think some keys are okay wait a minute some keys are placed automatically wait a minute yeah I think now it's not happening nothing is happening sorry for that so now what I will do Eco enter the host name okay but before that let me show you the how the thing is work okay the actual thing works okay so let me just search for the N map okay so you will get the official website of the nm.org that where it tells like like uh it's a free and opposite utility for network discovery and security auditing okay so this is the basically one of the tool and there is also one uh scan me. nm.org this is the what we can say testing website through which we can test for any uh for this domain name okay like it's legal to test this domain name because they have already authorized peoples to test this particular domain but you cannot uh test any other domain this without their permission okay so if you do I will not be responsible for that I'm clearing this thing in this particular video okay so now let me just uh okay I think my Internet is slow wait a minute okay so now I switch with uh another Network okay so now let's go on this particular website and map.org so here you can see the whole documentation part if you want to read you can read okay so let's go with the reference guide you can go with this or docs also so this is the reference guide in this way we will basically write the command Okay hyph a option is there okay many options are there and before that you should know about the TCP Port UDP Port Okay so so basically uh we have 65,536 ports in our system okay so it basically basically scans which uh which Port are open in your system okay so now let's move with the scanning part okay so let me just uh check whether this website is accessible or not I think it should be yeah so here you can see go ahead and scan me the title of this particular website okay so now what we can do uh we will just create this script and we will use this nmap tool and some other options okay to run our script okay so now let's do so Eco enter the host name read host name okay we will just uh read the host name and now next what we will do we will just take the our password okay the system password because some of the options required uh Pudo permission so for that we need this enter system password okay so here you will learn one more thing hyph hyph FS option provides like if you will enter something it will not be visible okay so that is the uh benefit of using this option so here we can store with system password okay and then what I will do I will just uh uh create one function okay okay or not function before that uh yeah I will need to create one function to work with the uh cases okay I will just create different cases for different options okay so how we can do it so we have to just write the function name so I will write the function name as the inmap function okay like that I can write okay and in this I have to just provide the some options okay so how I can provide like I will need to write Eco dollar okay and uh then I will just need to write like this first option will be or I can uh write like this one dot and normal scan okay and we will use slash and for new line for two Dot and then tcps scan we'll be doing three types of scan in this particular video normal scan TCP and the udps scan okay three is UDP scan so these are the three option which will be available to the user and then what I will do we will uh what we can say we will take the input from the user okay choose option choose option which you want to prefer okay so here we will just write the option okay okay and now what I will need to do I will need to Pro uh uh write different cases so if user enter one what should happen if user ENT two what should happen all these cases I should write so we have already covered it in our uh previous videoos so how you can deal with the cases okay case option in if one is provided then what you have to do I will just Eco uh thing like uh uh if one is provided I should write like this eco uh like this normal scan okay like this we are done and then what you will need to do Eco I will just provide the system password to the Pudo command Okay so right okay so now what we will do we will just pass the sud sudo and we will use the capital S like hyph FS option because we are getting the password from this uh particular uh system password okay that's why we are using this option and now we will simply use the N map and the if you are going with the normal scan so at that time we have to just provide the host name or the domain name okay so we can just do like this host name okay so this is the first case which we will be do dealing with that and secondly what we'll need to do uh this is just like break a statement and for the second second case that will be for the tcps scan okay so you can do like this inter like this TCP scan and uh this much Dash Okay and same thing we have to do just we have to change the uh option okay so you can just uh copy and paste things easily and hyph is capital T that option will be used for the tcps scan and the third thing is the just the udps scan okay so I know yeah you will not be aware of these TCP and udps SC because that is the concept the security part but if you learn you will surely get it UDP scan okay and then again same thing I will just paste the thing here and I will just use the Su that is the one option which we use for the uh what we can say udps scan okay so these are the three option but if user something else then at that time what we will use we will use the As and then we will provide like uh please enter the valid option okay so this is the case and we have to just close this thing so how we can do it esac okay and now simply we have to call that that function where it is that MF function so I will just uh copy the thing here okay call it here okay now we are good to go first we will need to provide the certain permission to that file okay and now so enter the host name so our host name is this one is scan me. nm.org okay so it's all up you can provide the IP address as well as the domain name we we will go with the domain name first and after that we will go with the IP address sorry we will need to provide like this scan me. nm.org okay you will need to enter the system password okay so here we are getting some kind of error at line number 42 okay wait a minute oh sorry I have done some mistake I have to just enter the name of the function okay again same thing scan me do n map.org okay so whatever scan we I just want the uh normal scan so let's check it takes some time so you will need to wait and let's again check the IP of that particular domain name scan me. nm.org okay so I think I'm not connected to the internet okay okay sorry for that okay so now I have solved the issue so let's again run the script enter the host name scan me. nm.org okay system password normal scan I want okay so it's starting okay so here you can see we have got the different ports like 2280 9929 these much Port ports we have got okay so these are the port which are open on that particular domain name okay so also we can run for the second option so again run the same okay second tcps scan okay let's wait these SK take I think much time we will need to just wait so basically in this script we have used uh switch cases and the function concept and the user input all those thing we have used here so that was a quite type of revision for you guys okay if you will create these kind of scripts so let's wait for this uh it's taking a little bit more time let's wait okay so we have got the all the TCP ports which are open on that particular domain name so here you can see 22808 so these are the all ports we have got so these are the open port these are some filtered open filtered so you will uh if you will search about on Google like what the difference between open and filter Port you will surely get to know and these are Services which you can see here okay so that was the basically uh thing about the scripting like how we can use the different tools with the with bass script okay so that was the tutorial for this and I hope you liked it if you have any query you can call uh write down in the comment section and you will get the source code of this particular video in our GitHub depository so that's all for today's video and we will meet you in the next one thank you thank you so much for watching
