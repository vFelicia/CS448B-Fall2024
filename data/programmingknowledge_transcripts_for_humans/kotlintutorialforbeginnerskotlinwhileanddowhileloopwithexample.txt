With timestamps:

00:00 - this video
00:01 - we are going to discuss about the while
00:03 - and the do while loop in kotlin okay so
00:05 - in the previous video we discussed about
00:07 - the for loop and cotton and the basic
00:09 - idea of loop so loop is used in
00:11 - programming to repeat a specific block
00:13 - of code until certain condition is met
00:16 - okay
00:17 - so loops are what makes computer
00:19 - interesting machine imagine you need to
00:21 - print a sentence 50 times on your screen
00:24 - you can do it by using a
00:27 - print statement 50 times or you can use
00:31 - loops
00:32 - so
00:34 - we will start with the while loop
00:36 - and
00:37 - firstly we will discuss the syntax of
00:40 - the while loop okay so for while loop we
00:43 - will first write the
00:46 - keyword while and
00:48 - inside and open a parenthesis and inside
00:51 - the parenthesis
00:53 - we will write the text expression or i
00:55 - can say
00:56 - the condition okay so when the condition
01:00 - is true
01:02 - it enters the
01:04 - the code block
01:05 - and
01:06 - there is a code sequence
01:09 - and
01:10 - after this there is a we close the
01:14 - parenthesis okay so uh the curly braces
01:17 - okay so um
01:20 - whenever the text expression is true
01:23 - it enters into the code sequence and the
01:25 - particular code sequence is repeated
01:27 - okay so test expression inside the
01:30 - parenthesis is a boolean expression if
01:32 - the test expression is evaluated to true
01:35 - statement inside the while loop are
01:37 - executed then the test expression is
01:40 - evaluated again this process goes on
01:43 - until the test expression is evaluated
01:45 - to false
01:46 - if the test expression is evaluated to
01:48 - false while loop is terminated okay
01:52 - so
01:53 - now we will
01:55 - take an example of while loop in which
01:57 - we will print
02:02 - line five times
02:04 - or ten times okay
02:06 - so
02:07 - uh i'll in the main function i'll just
02:10 - introduce a variable
02:12 - so unlike a for loop
02:15 - we have to initialize and increment the
02:18 - variable in while okay then i'll use the
02:21 - while keyboard and
02:23 - while i is
02:25 - less than or equal to 10 okay
02:28 - i have to
02:30 - print
02:32 - i
02:33 - and at the end of the loop i have to
02:35 - increase i also
02:37 - okay i have to increment the value of i
02:40 - if i have not incremented the value of i
02:44 - the
02:45 - the y loop couldn't have ended
02:48 - okay
02:49 - so when i run the program the output is
03:03 - okay so when i run the program the
03:04 - output is
03:05 - okay
03:06 - instead of i is 5 i have to make i is 1
03:13 - and when i run the program the output is
03:17 - one two three four five six seven eight
03:19 - and ten okay
03:21 - so uh notice that plus plus i statement
03:24 - yeah or i plus plus statement inside the
03:27 - while loop
03:28 - okay so we have incremented i
03:31 - at the end of i loop after 10 iteration
03:33 - i will be incremented to 11 okay so if i
03:37 - uh
03:38 - print the value of i here
03:42 - so i would be equal to 11 at this
03:44 - particular case okay
03:47 - so it goes back to the test rate stress
03:50 - test statement and the condition i is
03:52 - less than equals to 10 is
03:54 - false okay
03:56 - so therefore the loop
03:58 - terminates so if the body of loop has
04:01 - only one statement
04:04 - it is not necessary to use a curly brace
04:06 - as we did in the
04:08 - if and the
04:10 - when
04:10 - statements
04:13 - so um
04:14 - now we will move forward to the do while
04:17 - loop
04:19 - so
04:21 - the syntax for the
04:23 - do by loop is
04:26 - there is a
04:30 - so we will firstly write the
04:33 - do
04:35 - okay i'll just remove this we will
04:37 - firstly write the do keyword and then
04:40 - uh and then write a code sequence
04:45 - and
04:47 - after this we will end this
04:48 - and
04:50 - after this code sequence i'll write
04:52 - while
04:53 - while keyword and then here i will write
04:56 - the
04:57 - test expression
05:00 - okay
05:03 - so
05:04 - we will first
05:06 - discuss the that how do while loop work
05:09 - so the code inside the body of do
05:12 - construct
05:13 - is executed once without checking the
05:15 - test expression then the test expression
05:18 - is checked if the test expression is so
05:20 - the code is
05:22 - executed once and then the text
05:24 - expression is checked okay so if the
05:26 - test expression is evaluated to true
05:28 - code inside the body
05:30 - of the loops are executed once again
05:33 - okay and the test expression is
05:35 - evaluated again the process goes on and
05:37 - on until the test test expression is
05:40 - evaluated to false okay so when the test
05:43 - expression is evaluated to false do
05:45 - while loop terminates so what is the
05:48 - main difference between while and the
05:49 - dual loop is in do while loop the
05:53 - code sequence is executed at least one
05:55 - time
05:57 - and
05:58 - even if the test expression is false
06:02 - okay
06:03 - as not in the while loop because in
06:05 - while loop it will first check the
06:08 - condition and if the test expression is
06:10 - false it will just go on to the it will
06:13 - just terminate the loop okay it will not
06:15 - go on in the body of the loop
06:18 - so
06:19 - now we will uh
06:20 - go ahead and
06:22 - try the same with the do while loop and
06:25 - print the
06:28 - natural numbers from one to ten so
06:31 - i'll
06:32 - write do and then in the code sequence
06:34 - i'll write
06:35 - print statement
06:36 - and
06:37 - before writing the print statement i
06:39 - have also i have to also initialize a
06:42 - variable that is i
06:44 - and then inside the print statement i
06:46 - have to print the variable and
06:49 - increment the
06:51 - variable because if i had not
06:53 - incremented the variable the loop will
06:55 - go on and on and on and
06:58 - will not stop
06:59 - okay so then i'll use the while keyword
07:02 - and inside the while keyword i'll write
07:03 - i is less than equals to 10
07:06 - okay and then when i run this
07:09 - program
07:11 - i can find that the output is
07:16 - one to ten okay
07:18 - so now what if i had not incremented
07:21 - this
07:23 - and i had just used the print statement
07:24 - as i mentioned the loop will go on and
07:28 - on and on and it will not stop on its
07:29 - own so now what to do if the loops goes
07:32 - on and on so in the command prompt you
07:34 - will just
07:36 - do control plus c
07:38 - okay or you can do is
07:40 - terminate the loop from here the stop
07:44 - okay
07:45 - so
07:46 - take care
07:47 - in mind that um the loop will not
07:50 - continue to infinite
07:52 - and
07:53 - mention the increment statement here
07:56 - so till now we have covered about about
07:59 - the loops and basic
08:00 - example not i i will not say example we
08:03 - have just learned the syntax from here
08:06 - okay so you might have a pretty good
08:08 - understanding of loops
08:10 - okay thank you

Cleaned transcript:

this video we are going to discuss about the while and the do while loop in kotlin okay so in the previous video we discussed about the for loop and cotton and the basic idea of loop so loop is used in programming to repeat a specific block of code until certain condition is met okay so loops are what makes computer interesting machine imagine you need to print a sentence 50 times on your screen you can do it by using a print statement 50 times or you can use loops so we will start with the while loop and firstly we will discuss the syntax of the while loop okay so for while loop we will first write the keyword while and inside and open a parenthesis and inside the parenthesis we will write the text expression or i can say the condition okay so when the condition is true it enters the the code block and there is a code sequence and after this there is a we close the parenthesis okay so uh the curly braces okay so um whenever the text expression is true it enters into the code sequence and the particular code sequence is repeated okay so test expression inside the parenthesis is a boolean expression if the test expression is evaluated to true statement inside the while loop are executed then the test expression is evaluated again this process goes on until the test expression is evaluated to false if the test expression is evaluated to false while loop is terminated okay so now we will take an example of while loop in which we will print line five times or ten times okay so uh i'll in the main function i'll just introduce a variable so unlike a for loop we have to initialize and increment the variable in while okay then i'll use the while keyboard and while i is less than or equal to 10 okay i have to print i and at the end of the loop i have to increase i also okay i have to increment the value of i if i have not incremented the value of i the the y loop couldn't have ended okay so when i run the program the output is okay so when i run the program the output is okay instead of i is 5 i have to make i is 1 and when i run the program the output is one two three four five six seven eight and ten okay so uh notice that plus plus i statement yeah or i plus plus statement inside the while loop okay so we have incremented i at the end of i loop after 10 iteration i will be incremented to 11 okay so if i uh print the value of i here so i would be equal to 11 at this particular case okay so it goes back to the test rate stress test statement and the condition i is less than equals to 10 is false okay so therefore the loop terminates so if the body of loop has only one statement it is not necessary to use a curly brace as we did in the if and the when statements so um now we will move forward to the do while loop so the syntax for the do by loop is there is a so we will firstly write the do okay i'll just remove this we will firstly write the do keyword and then uh and then write a code sequence and after this we will end this and after this code sequence i'll write while while keyword and then here i will write the test expression okay so we will first discuss the that how do while loop work so the code inside the body of do construct is executed once without checking the test expression then the test expression is checked if the test expression is so the code is executed once and then the text expression is checked okay so if the test expression is evaluated to true code inside the body of the loops are executed once again okay and the test expression is evaluated again the process goes on and on until the test test expression is evaluated to false okay so when the test expression is evaluated to false do while loop terminates so what is the main difference between while and the dual loop is in do while loop the code sequence is executed at least one time and even if the test expression is false okay as not in the while loop because in while loop it will first check the condition and if the test expression is false it will just go on to the it will just terminate the loop okay it will not go on in the body of the loop so now we will uh go ahead and try the same with the do while loop and print the natural numbers from one to ten so i'll write do and then in the code sequence i'll write print statement and before writing the print statement i have also i have to also initialize a variable that is i and then inside the print statement i have to print the variable and increment the variable because if i had not incremented the variable the loop will go on and on and on and will not stop okay so then i'll use the while keyword and inside the while keyword i'll write i is less than equals to 10 okay and then when i run this program i can find that the output is one to ten okay so now what if i had not incremented this and i had just used the print statement as i mentioned the loop will go on and on and on and it will not stop on its own so now what to do if the loops goes on and on so in the command prompt you will just do control plus c okay or you can do is terminate the loop from here the stop okay so take care in mind that um the loop will not continue to infinite and mention the increment statement here so till now we have covered about about the loops and basic example not i i will not say example we have just learned the syntax from here okay so you might have a pretty good understanding of loops okay thank you
