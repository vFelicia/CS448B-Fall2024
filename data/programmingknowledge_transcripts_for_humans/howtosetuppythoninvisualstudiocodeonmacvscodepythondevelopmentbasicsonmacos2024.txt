With timestamps:

00:00 - hey guys in this video I'm going to show
00:01 - you how you can set up your python
00:04 - development environment in your Visual
00:06 - Studio code editor on Mac operating
00:09 - system so the prerequisite of setting up
00:11 - the python environment on Visual Studio
00:14 - code is obviously you should have the
00:16 - python installed on your Mac operating
00:19 - system so if you don't have the python
00:21 - installed you should install it if you
00:24 - don't know how to install python on Mac
00:26 - I have already created a video about it
00:29 - and the second requirement is you should
00:32 - have Visual Studio code installed so I'm
00:34 - assuming you have already installed the
00:37 - visual studio code editor if you haven't
00:39 - and if you don't know how to set up
00:41 - visual studio code on Mac I have also
00:44 - created the video about it now once you
00:47 - have Python and visual studio code
00:49 - installed let's start with the setting
00:52 - up of python on Visual Studio code so we
00:55 - are going to start with the terminal so
00:59 - I'm going to open the spotlight and here
01:02 - I'm going to search for the
01:04 - terminal and then let's say I want to
01:07 - create a python project in some
01:10 - directory on my Mac operating system so
01:14 - I
01:15 - have all these directories and I want to
01:18 - create the python project in my
01:21 - documents folder so I'm going to CD into
01:24 - my documents folder and here I'm going
01:27 - to create one more directory and and I'm
01:30 - going to name it a sample so to create a
01:32 - directory you can uh give this command
01:34 - which is mkdir and the name of the
01:37 - directory which is sample right and when
01:40 - I press enter it's going to create this
01:43 - sample directory you can see this
01:45 - directory is created now I'm going to CD
01:48 - into uh this sample directory so let me
01:51 - CD into the sample directory and here I
01:54 - can type code space Dot and then press
01:58 - enter which is going to to open the
02:00 - sample directory in Visual Studio code
02:03 - now this is the command line way of
02:06 - opening the sample directory in your
02:09 - Visual Studio code if you don't want to
02:11 - do this the other way is simple you just
02:15 - open your Visual Studio code and then
02:17 - click on open here and then just
02:20 - navigate to the folder where your python
02:24 - project is there or where you want to
02:27 - create your python projects just select
02:29 - any fold folder where you want to save
02:31 - your python files and then click on open
02:34 - and it's also going to open the folder
02:37 - in which you want to create your python
02:39 - project now here to create a python
02:43 - script I can click on uh this uh plus
02:46 - button which says new file or I can
02:49 - click on file and then click on new file
02:52 - option so let's click on the new file
02:54 - option and then I'm going to name my
02:56 - file as let's say test. py file and and
02:59 - then press enter as soon as I create a
03:02 - test.py file Visual Studio code is going
03:06 - to recognize that I want to create a
03:08 - python script and it gives me this kind
03:12 - of popup which says do you want to
03:14 - install recommended python extension
03:16 - from Microsoft for the Python language
03:19 - so visual studio code provides different
03:23 - kind of extensions for different kind of
03:26 - programming languages you can directly
03:28 - click on the install button which is
03:30 - going to install the extension or what
03:34 - you can do is you can uh click on the
03:36 - extensions section here and then search
03:38 - for python here when you search for
03:41 - python you will see the most popular
03:44 - extension here is for python which is
03:47 - from Microsoft itself and it has been
03:49 - downloaded around 106 million times so
03:54 - it's the most popular and the official
03:58 - extension for python on Visual Studio
04:00 - code we are going to click on uh this
04:03 - install button here which is going to
04:05 - install this extension on Visual Studio
04:08 - code so just wait for a few seconds and
04:10 - in sometime this uh python extension
04:13 - will be installed once the python
04:15 - extension is installed you will see the
04:18 - disable button or the uninstall button
04:21 - so if you want to uh disable the python
04:25 - extension just click on disable if you
04:27 - want to uninstall this extension totally
04:30 - you can press on the uninstall
04:32 - button let me close this window and then
04:35 - close this welcome window also and you
04:38 - can see you also have other popular
04:42 - python extensions like python indent
04:45 - python extension pack from the other
04:49 - developers and you can see all these
04:51 - python extension so if you want you can
04:54 - install these extensions later so let me
04:58 - close this and then go to the Explorer
05:00 - section here now in this uh python file
05:03 - let me just copy and paste a very simple
05:06 - python script so what uh this script
05:09 - does is we have defined two variables
05:11 - num one and num two and we have assigned
05:13 - the value of five and 10 to both both of
05:16 - them and then we are just adding these
05:19 - two uh variables and assigning it to the
05:22 - third variable which is called sum
05:23 - result and we are printing the value of
05:26 - uh the num one num two and the sum
05:29 - result result here so this is a very
05:31 - simple python script once you uh write
05:35 - your python script in the python file to
05:38 - run your python script you have few
05:40 - options one is the obvious one which is
05:43 - this one where you will see this uh run
05:45 - button for your python file when you
05:47 - click on this drop down menu you have
05:49 - other options like uh run python file in
05:53 - dedicated terminal and debug python file
05:56 - so you can run your python file you can
05:58 - run your python uh file in a dedicated
06:02 - terminal or you can just debug your
06:05 - python script using this option similar
06:08 - kind of option you will find here when
06:10 - you click on run here you can uh start
06:13 - the debugging of your python script you
06:15 - can run your python script without
06:17 - debugging and all the other options are
06:19 - available here if you right click on
06:21 - your python script you can also see
06:23 - other options to run your python script
06:26 - for example when you hover over the Run
06:29 - python button you have the option to uh
06:31 - run the python in the terminal and run
06:34 - the python in the uh python terminal
06:38 - also you will see the python interpreter
06:40 - at the bottom so here at the bottom of
06:44 - your Visual Studio code editor you can
06:46 - see if you have installed python then
06:49 - you will see which kind of interpreter
06:52 - you can use for your python script so so
06:54 - I have installed this Python
06:56 - 3.2.1 and visual studio recog recognizes
07:00 - this python path and it shows me this
07:04 - python path here at the bottom now if
07:07 - you have installed multiple versions of
07:10 - python for example you have U Anaconda
07:14 - version of python or you have different
07:16 - versions of python you can choose
07:18 - between those versions using this
07:22 - selection so you can see I have 3.9.5
07:25 - version and I have 3.2.1 version so I
07:29 - can use either one of them and whenever
07:33 - I choose a different version I will be
07:35 - able to see the version right so you can
07:38 - switch those python versions using the
07:41 - switch here also when you press command
07:44 - shift p on your Visual Studio code it's
07:47 - going to open this kind of pallet and
07:49 - here when you type python you will be
07:52 - able to see different kind of uh
07:54 - commands so you can see create terminal
07:58 - create environment configure tests
08:01 - launch tensor board so all these options
08:04 - are available for running your Python
08:07 - scripts right so these are some of the
08:10 - options you can use later now if you
08:12 - want to open a new terminal you can
08:14 - click on this terminal option and then
08:16 - click on new terminal and it's going to
08:19 - open a new terminal here on Mac OS if
08:22 - you using the newest version of Mac the
08:25 - default terminal is zsh but if you want
08:28 - to open separate terminal let's say bash
08:32 - or uh the JavaScript debug terminal you
08:35 - will be able to see different type of
08:37 - terminal which are supported by your Mac
08:39 - operating system here so let's say I
08:41 - want to open the bash terminal I can
08:43 - click on bash here if I want to open uh
08:47 - zsh terminal I can click on zsh here and
08:51 - all the terminals I can switch between
08:53 - those terminals using this uh menu here
08:57 - right now let's run our code so I'm
09:00 - going to just click on this run button
09:03 - which is going to run our script and
09:05 - it's going to print the value of uh the
09:08 - numbers you can see the output is
09:09 - printed here which is the sum of five
09:12 - and 10 is 15 which is printed using this
09:15 - print line now if you want to debug your
09:19 - code you can set the breakpoint at
09:21 - different uh lines so I'm going to set
09:24 - the breakpoint at line number two line
09:26 - number five line number eight and let's
09:28 - say line number number
09:30 - 11 so if I want to debug my code I can
09:34 - either click
09:35 - on this Arrow here and then I can click
09:39 - on this option which says debug python
09:41 - file or I can press on uh the Run button
09:45 - and then I'm I can just click on uh the
09:49 - start debugging button so I'm going to
09:51 - click on start debugging and then I can
09:54 - choose the debugger in my case so you
09:58 - can see I have I have different kind of
10:00 - debuggers here python file module remote
10:03 - attach all these kind of options I'm
10:06 - going to choose the first one which is
10:08 - python files because I want to debug the
10:10 - python file once I click on the debug
10:15 - option you will be able to see that my
10:18 - interface for visual studio code changes
10:21 - and my um highlighted area here is now
10:24 - this debug section right here on the top
10:28 - you will see different buttons for
10:31 - continue step over step into step out
10:36 - and I can restart the debugging and I
10:38 - can stop the debugging using this red
10:41 - button now when I start the debugging my
10:44 - program execution stops at the first
10:47 - break point also I can see the list of
10:49 - all the breakpoints here so you can see
10:52 - on line number two line number five 8
10:55 - and 11 I have the breakpoint I can
10:58 - toggle all these breakpoint by clicking
11:00 - on the toggle active breakpoints which
11:02 - is going to toggle all the breakpoints
11:05 - once again when I click on toggle it's
11:07 - going to enable the break points I can
11:09 - also disable those break points from
11:12 - here or directly in the file itself now
11:17 - when I click on step
11:19 - over my program execution stops at the
11:23 - second breakpoint and you can see the
11:26 - assignment is done for number one one so
11:29 - I can see num one is assigned the value
11:31 - of five but still we are on the line
11:34 - number five so the execution on this
11:36 - line haven't uh happened so I don't see
11:40 - the num two is equal to 10 so when I
11:42 - step over once again you will see num
11:44 - two is assigned the value of 10 I can
11:48 - also see the global uh variables right
11:51 - now so you can see all the Go Global
11:54 - variables here I can also see the
11:56 - special variables which are some
11:58 - internal
11:59 - uh variables in Python script if I press
12:03 - on continue then my program execution
12:06 - will stop at the next uh break point
12:10 - here now I can see the sum result is
12:13 - equal to 15 so you will be able to see
12:16 - all the uh breakpoint value and the uh
12:19 - variable values in the variables section
12:23 - also if you want to stop the debugging
12:25 - just click on this stop debugging or if
12:28 - you want to start just click on the
12:30 - restart so let me click on the restart
12:32 - and the debugging will start from the
12:36 - starting point of the breakpoint right I
12:38 - can close the debugging like this
12:42 - also now if you want to create a launch.
12:46 - Json file for your debugging so right
12:49 - now my debugging is done by the visual
12:53 - studio code but let's say if you want to
12:55 - share this debugging environment with
12:59 - some other developer and if you are
13:01 - using the Version Control then you can
13:04 - commit this launch. Json file and then
13:07 - other developer can pull the git uh
13:10 - repository and then use the same
13:12 - configuration so if I click on create a
13:15 - launch. Json file it's going to create a
13:17 - launch. Json file select python file
13:20 - here and once I click on launch. Json
13:23 - file you can see there is a folder which
13:26 - is vs code which is created for me and
13:31 - then I have the launch. Json file where
13:34 - the configuration related to my
13:36 - debugging is there and it can be used
13:39 - later by the other developers once I
13:42 - push my changes to a git repository now
13:46 - let's say you want to create a script
13:48 - which have some kind of external python
13:51 - package dependency let's see how we can
13:54 - uh run that also so let me just create
13:57 - one more script here so let me click on
14:00 - uh new file and then I'm going to uh
14:03 - just type test 2. py file okay and here
14:09 - I'm going to just uh write a very simple
14:12 - code which uses an external package
14:16 - which is called bcrypt okay so this is
14:19 - an external package and when you hover
14:22 - over bcrypt it says import bcrypt could
14:25 - not be resolved because we need to
14:28 - install the bcrypt package using pip
14:32 - then only this script will run properly
14:36 - right so let me open a new uh terminal
14:40 - here so when I type Python 3 space the
14:44 - name of the file which is test 2. py and
14:48 - then run this uh script it's going to
14:50 - complain that this import is not
14:54 - available so how we can solve this
14:56 - problem so let me clear the
15:00 - terminal and then first of all let's
15:02 - create a virtual en for our project to
15:05 - create the virtual en just write Python
15:07 - 3 space hyphen M VMV and then the name
15:12 - of your environment Let's uh name it uh
15:15 - and itself and then I'm going to press
15:17 - enter now once my virtual environment is
15:20 - created I can also see this directory
15:22 - here with the name en andv and then I
15:25 - have this bin directory and I have this
15:27 - activate file here so to activate my
15:31 - virtual environment I can give this
15:33 - command on Mac OS which is source and
15:37 - then the name of your EnV directory
15:40 - which is EnV in my case then I have this
15:44 - bin so/ bin SL activate so basically I
15:47 - need to call this script to activate my
15:50 - virtual end so write Source space uh
15:54 - this command and most probably you will
15:56 - also require the Pudo Command right so
15:59 - just write Pudo space Source space n
16:03 - slash bin slash activate and then press
16:07 - enter it says uh pseudo Source command
16:11 - not found let's try the source command
16:14 - without pseudo and then press enter and
16:18 - you can see the environment is activated
16:21 - so pseudo is not required I was
16:24 - expecting that it might fail due to the
16:27 - permissions but uh pseudo is not
16:29 - required so just run this command
16:31 - without pseudo and and once your virtual
16:34 - en is activated you will see this en in
16:37 - front of your command line okay this
16:39 - means that your virtual environment is
16:42 - activated all this creation and
16:44 - activation of virtual environment we
16:46 - have uh done so that we can install the
16:51 - bcrypt uh package for this environment
16:54 - and I don't want it to install bcrypt
16:57 - globally right so to install the bcrypt
17:02 - package just just write pip command on
17:05 - your Mac OS most probably if you have
17:07 - installed Python 3 then the command name
17:10 - for pip will be pip 3 so just try pip or
17:13 - pip 3 here whatever works for you then
17:17 - install and then the name of the package
17:20 - which
17:21 - is bcrypt in my case okay when I press
17:25 - enter it's going to install this bcrypt
17:28 - pip package and and once this package is
17:30 - installed you can see this squiggly line
17:32 - on top of uh this bcrypt package is gone
17:36 - and you can see the installation is also
17:38 - successful now I can just run my uh
17:41 - script let me clear the terminal and
17:44 - then I can run the script by using
17:46 - Python 3 and the name of the file which
17:48 - is test 2. py and then press enter and
17:51 - it's going to run my script which have
17:54 - the external pip package so I have
17:56 - already installed the package and and it
17:58 - shows me the output here so this is how
18:01 - you can create the virtual environment
18:03 - also on your Mac operating system using
18:07 - visual studio code also once I'm done
18:10 - with the virtual environment I can also
18:14 - disable it by giving this command which
18:16 - is deactivate and then press enter and
18:18 - I'm out of my virtual environment right
18:23 - so I think that's it for this video this
18:25 - is how you can set up the python
18:27 - development environment
18:29 - with your Visual Studio code editor on
18:30 - your Mac operating system I hope you've
18:33 - enjoyed this video and I will see you in
18:34 - the next video

Cleaned transcript:

hey guys in this video I'm going to show you how you can set up your python development environment in your Visual Studio code editor on Mac operating system so the prerequisite of setting up the python environment on Visual Studio code is obviously you should have the python installed on your Mac operating system so if you don't have the python installed you should install it if you don't know how to install python on Mac I have already created a video about it and the second requirement is you should have Visual Studio code installed so I'm assuming you have already installed the visual studio code editor if you haven't and if you don't know how to set up visual studio code on Mac I have also created the video about it now once you have Python and visual studio code installed let's start with the setting up of python on Visual Studio code so we are going to start with the terminal so I'm going to open the spotlight and here I'm going to search for the terminal and then let's say I want to create a python project in some directory on my Mac operating system so I have all these directories and I want to create the python project in my documents folder so I'm going to CD into my documents folder and here I'm going to create one more directory and and I'm going to name it a sample so to create a directory you can uh give this command which is mkdir and the name of the directory which is sample right and when I press enter it's going to create this sample directory you can see this directory is created now I'm going to CD into uh this sample directory so let me CD into the sample directory and here I can type code space Dot and then press enter which is going to to open the sample directory in Visual Studio code now this is the command line way of opening the sample directory in your Visual Studio code if you don't want to do this the other way is simple you just open your Visual Studio code and then click on open here and then just navigate to the folder where your python project is there or where you want to create your python projects just select any fold folder where you want to save your python files and then click on open and it's also going to open the folder in which you want to create your python project now here to create a python script I can click on uh this uh plus button which says new file or I can click on file and then click on new file option so let's click on the new file option and then I'm going to name my file as let's say test. py file and and then press enter as soon as I create a test.py file Visual Studio code is going to recognize that I want to create a python script and it gives me this kind of popup which says do you want to install recommended python extension from Microsoft for the Python language so visual studio code provides different kind of extensions for different kind of programming languages you can directly click on the install button which is going to install the extension or what you can do is you can uh click on the extensions section here and then search for python here when you search for python you will see the most popular extension here is for python which is from Microsoft itself and it has been downloaded around 106 million times so it's the most popular and the official extension for python on Visual Studio code we are going to click on uh this install button here which is going to install this extension on Visual Studio code so just wait for a few seconds and in sometime this uh python extension will be installed once the python extension is installed you will see the disable button or the uninstall button so if you want to uh disable the python extension just click on disable if you want to uninstall this extension totally you can press on the uninstall button let me close this window and then close this welcome window also and you can see you also have other popular python extensions like python indent python extension pack from the other developers and you can see all these python extension so if you want you can install these extensions later so let me close this and then go to the Explorer section here now in this uh python file let me just copy and paste a very simple python script so what uh this script does is we have defined two variables num one and num two and we have assigned the value of five and 10 to both both of them and then we are just adding these two uh variables and assigning it to the third variable which is called sum result and we are printing the value of uh the num one num two and the sum result result here so this is a very simple python script once you uh write your python script in the python file to run your python script you have few options one is the obvious one which is this one where you will see this uh run button for your python file when you click on this drop down menu you have other options like uh run python file in dedicated terminal and debug python file so you can run your python file you can run your python uh file in a dedicated terminal or you can just debug your python script using this option similar kind of option you will find here when you click on run here you can uh start the debugging of your python script you can run your python script without debugging and all the other options are available here if you right click on your python script you can also see other options to run your python script for example when you hover over the Run python button you have the option to uh run the python in the terminal and run the python in the uh python terminal also you will see the python interpreter at the bottom so here at the bottom of your Visual Studio code editor you can see if you have installed python then you will see which kind of interpreter you can use for your python script so so I have installed this Python 3.2.1 and visual studio recog recognizes this python path and it shows me this python path here at the bottom now if you have installed multiple versions of python for example you have U Anaconda version of python or you have different versions of python you can choose between those versions using this selection so you can see I have 3.9.5 version and I have 3.2.1 version so I can use either one of them and whenever I choose a different version I will be able to see the version right so you can switch those python versions using the switch here also when you press command shift p on your Visual Studio code it's going to open this kind of pallet and here when you type python you will be able to see different kind of uh commands so you can see create terminal create environment configure tests launch tensor board so all these options are available for running your Python scripts right so these are some of the options you can use later now if you want to open a new terminal you can click on this terminal option and then click on new terminal and it's going to open a new terminal here on Mac OS if you using the newest version of Mac the default terminal is zsh but if you want to open separate terminal let's say bash or uh the JavaScript debug terminal you will be able to see different type of terminal which are supported by your Mac operating system here so let's say I want to open the bash terminal I can click on bash here if I want to open uh zsh terminal I can click on zsh here and all the terminals I can switch between those terminals using this uh menu here right now let's run our code so I'm going to just click on this run button which is going to run our script and it's going to print the value of uh the numbers you can see the output is printed here which is the sum of five and 10 is 15 which is printed using this print line now if you want to debug your code you can set the breakpoint at different uh lines so I'm going to set the breakpoint at line number two line number five line number eight and let's say line number number 11 so if I want to debug my code I can either click on this Arrow here and then I can click on this option which says debug python file or I can press on uh the Run button and then I'm I can just click on uh the start debugging button so I'm going to click on start debugging and then I can choose the debugger in my case so you can see I have I have different kind of debuggers here python file module remote attach all these kind of options I'm going to choose the first one which is python files because I want to debug the python file once I click on the debug option you will be able to see that my interface for visual studio code changes and my um highlighted area here is now this debug section right here on the top you will see different buttons for continue step over step into step out and I can restart the debugging and I can stop the debugging using this red button now when I start the debugging my program execution stops at the first break point also I can see the list of all the breakpoints here so you can see on line number two line number five 8 and 11 I have the breakpoint I can toggle all these breakpoint by clicking on the toggle active breakpoints which is going to toggle all the breakpoints once again when I click on toggle it's going to enable the break points I can also disable those break points from here or directly in the file itself now when I click on step over my program execution stops at the second breakpoint and you can see the assignment is done for number one one so I can see num one is assigned the value of five but still we are on the line number five so the execution on this line haven't uh happened so I don't see the num two is equal to 10 so when I step over once again you will see num two is assigned the value of 10 I can also see the global uh variables right now so you can see all the Go Global variables here I can also see the special variables which are some internal uh variables in Python script if I press on continue then my program execution will stop at the next uh break point here now I can see the sum result is equal to 15 so you will be able to see all the uh breakpoint value and the uh variable values in the variables section also if you want to stop the debugging just click on this stop debugging or if you want to start just click on the restart so let me click on the restart and the debugging will start from the starting point of the breakpoint right I can close the debugging like this also now if you want to create a launch. Json file for your debugging so right now my debugging is done by the visual studio code but let's say if you want to share this debugging environment with some other developer and if you are using the Version Control then you can commit this launch. Json file and then other developer can pull the git uh repository and then use the same configuration so if I click on create a launch. Json file it's going to create a launch. Json file select python file here and once I click on launch. Json file you can see there is a folder which is vs code which is created for me and then I have the launch. Json file where the configuration related to my debugging is there and it can be used later by the other developers once I push my changes to a git repository now let's say you want to create a script which have some kind of external python package dependency let's see how we can uh run that also so let me just create one more script here so let me click on uh new file and then I'm going to uh just type test 2. py file okay and here I'm going to just uh write a very simple code which uses an external package which is called bcrypt okay so this is an external package and when you hover over bcrypt it says import bcrypt could not be resolved because we need to install the bcrypt package using pip then only this script will run properly right so let me open a new uh terminal here so when I type Python 3 space the name of the file which is test 2. py and then run this uh script it's going to complain that this import is not available so how we can solve this problem so let me clear the terminal and then first of all let's create a virtual en for our project to create the virtual en just write Python 3 space hyphen M VMV and then the name of your environment Let's uh name it uh and itself and then I'm going to press enter now once my virtual environment is created I can also see this directory here with the name en andv and then I have this bin directory and I have this activate file here so to activate my virtual environment I can give this command on Mac OS which is source and then the name of your EnV directory which is EnV in my case then I have this bin so/ bin SL activate so basically I need to call this script to activate my virtual end so write Source space uh this command and most probably you will also require the Pudo Command right so just write Pudo space Source space n slash bin slash activate and then press enter it says uh pseudo Source command not found let's try the source command without pseudo and then press enter and you can see the environment is activated so pseudo is not required I was expecting that it might fail due to the permissions but uh pseudo is not required so just run this command without pseudo and and once your virtual en is activated you will see this en in front of your command line okay this means that your virtual environment is activated all this creation and activation of virtual environment we have uh done so that we can install the bcrypt uh package for this environment and I don't want it to install bcrypt globally right so to install the bcrypt package just just write pip command on your Mac OS most probably if you have installed Python 3 then the command name for pip will be pip 3 so just try pip or pip 3 here whatever works for you then install and then the name of the package which is bcrypt in my case okay when I press enter it's going to install this bcrypt pip package and and once this package is installed you can see this squiggly line on top of uh this bcrypt package is gone and you can see the installation is also successful now I can just run my uh script let me clear the terminal and then I can run the script by using Python 3 and the name of the file which is test 2. py and then press enter and it's going to run my script which have the external pip package so I have already installed the package and and it shows me the output here so this is how you can create the virtual environment also on your Mac operating system using visual studio code also once I'm done with the virtual environment I can also disable it by giving this command which is deactivate and then press enter and I'm out of my virtual environment right so I think that's it for this video this is how you can set up the python development environment with your Visual Studio code editor on your Mac operating system I hope you've enjoyed this video and I will see you in the next video
