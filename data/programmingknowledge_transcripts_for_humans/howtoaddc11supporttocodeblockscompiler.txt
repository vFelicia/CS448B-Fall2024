With timestamps:

00:00 - hello guys welcome once again till now
00:02 - we have been learning some of the very
00:05 - basic and core functionality in
00:08 - C++ but with time C++ has also evolved
00:14 - as a
00:15 - language and uh in 2011 C++ has or ISO
00:22 - which uh is responsible for uh
00:26 - regulating C++ standards has rais
00:30 - released a newest uh version of
00:33 - C++ which we call C++
00:37 - 11 and in this C++ 11 some of the very
00:42 - uh newest features and very good
00:46 - features were introduced
00:49 - by uh the C++ 11 and I'm going to show
00:53 - you how you can enable C++ 11 in code
00:58 - blocks
01:01 - because first of all if you want to
01:03 - learn more about C++ 11 or other things
01:08 - you can just uh go to Wikipedia and
01:11 - search for C++ and you can see here in
01:14 - the
01:16 - standardization uh in 2011 there was uh
01:20 - stable release by ISO in 2011 there is a
01:25 - C++ uh 14 version also but it's a
01:30 - working draft so it's it's still not
01:34 - officially released so right now we are
01:39 - using uh 2011 or C++ 11 as the standard
01:46 - so in code blogs by default C++ 11
01:51 - features are not uh enabled for example
01:55 - in uh C++ 11 there was a feature
01:59 - introduced used called Auto and this
02:03 - Auto is just like this there is a
02:06 - keyword called Auto which works like
02:09 - default data type so for example uh I
02:15 - can just uh declare a variable with a
02:19 - data type Auto and with the
02:21 - initialization of this variable uh the
02:25 - data type of the a or data type of
02:29 - variable a a will be recognized for
02:31 - example I initialize this a by 42
02:37 - then the data type for a will be
02:42 - replaced automatically as int or I can
02:47 - just declare a second variable called B
02:52 - and Dot for example two and this data
02:57 - type will be automatically uh taken as a
03:02 - float value so this Auto means automatic
03:06 - data type and it depends upon the
03:09 - initialization of the variable uh how
03:12 - you initialize this variable then uh
03:16 - it's replaced Auto uh can recognize that
03:20 - uh you initialize this B by float value
03:23 - or integer value or a string value and
03:26 - it you know initialize or replace this
03:29 - Auto buy this appropriate data
03:33 - type but when you go on to compile this
03:37 - program in code blog specifically I'm
03:42 - uh uh saying this when you compile this
03:46 - it will throw an error and this error is
03:50 - uh the file required requires compiler
03:54 - and Library support for ISO C++ 2 11
04:00 - standards right which is not by default
04:05 - enabled in uh your code
04:08 - blogs so in order to enable your C++ 11
04:13 - in code blogs what you need to do is you
04:17 - just need to go to this settings uh
04:20 - ribbon here settings Ribbon or whatever
04:23 - you can say settings tab here just go to
04:26 - settings and then go to compile here and
04:31 - in the
04:32 - compiler go to compiler setting which is
04:35 - this one and make sure this selected
04:38 - compiler is gnu GCC compiler and go to
04:43 - compiler settings here and in here go to
04:47 - compiler
04:49 - flags and in this compiler Flags in all
04:53 - category you will be able to find when
04:56 - you scroll down a little you will be
04:59 - able to find C++
05:01 - 11 standard here so this is the standard
05:06 - uh we are looking for have
05:09 - g++ follow the C++ 11 ISO C++ language
05:15 - standard which is this one just check
05:19 - this uh check box here which is once
05:22 - again have g++ follow the C++ 11 ISO
05:26 - standard ISO C++ language standard
05:30 - just check this checkbox and click
05:33 - okay and then when you recompile this
05:38 - program I will recompile this program
05:41 - and now this error is gone right so in
05:47 - order to compile these new feature which
05:51 - are introduced in uh C++ 11 you need to
05:56 - enable the C++ 11 in your clue code
05:59 - blocks and uh which I have shown you
06:02 - recently I will be uh you know showing
06:06 - you how to use other features of C++ 11
06:10 - in the later video but I just wanted to
06:14 - uh show you in this video how you can
06:17 - enable C++ 11
06:20 - in in code blogs so I hope you have
06:23 - enjoyed this video please rate comment
06:25 - and subscribe and bye for now hello guys
06:29 - once again till now we have been
06:31 - learning some of the very basic and core
06:34 - functionality in
06:37 - C++ but with time C++ has also evolved
06:42 - as a
06:43 - language and uh in 2011 C++ has or ISO
06:50 - which uh is responsible for uh
06:54 - regulating C++ standards has released a
06:59 - new newest uh version of
07:02 - C++ which we call C++
07:05 - 11 and in this C++ 11 some of the very
07:10 - uh newest features and very good
07:14 - features were introduced
07:17 - by uh the C++ 11 and I'm going to show
07:21 - you how you can enable C++ 11 in code
07:27 - blocks because
07:30 - first of all if you want to learn more
07:32 - about C++ 11 or other things you can
07:36 - just go to Wikipedia and search for C++
07:40 - and you can see here in the
07:44 - standardization uh in 2011 there was a
07:48 - stable release by ISO in 2011 there is a
07:53 - C++ uh 14 version also but it's a
07:58 - working draft so it's it's still not
08:02 - officially released so right now we are
08:07 - using uh 2011 or C++ 11 as the standard
08:14 - so in code blogs by default C++ 11
08:19 - features are not uh enabled for example
08:23 - in uh C++ 11 there was a feature
08:27 - introduced called Auto
08:30 - and this Auto is just like this there is
08:34 - a keyword called Auto which works like
08:37 - default data type so for example uh I
08:43 - can just uh declare a variable with a
08:47 - data type Auto and with the
08:49 - initialization of this variable uh the
08:53 - data type of the a or data type of
08:57 - variable a will be recog nice for
08:59 - example I initialize this a by 42
09:05 - then the data type for a will be
09:10 - replaced automatically as int or I can
09:15 - just declare a second variable called B
09:20 - and Dot for example two and this data
09:25 - type will be automatically uh taken as
09:29 - uh float value so this Auto means
09:33 - automatic data type and it depends upon
09:36 - the initialization of the variable uh
09:40 - how you initialize this variable then uh
09:44 - it's replaced Auto uh can recognize that
09:48 - uh you initialize this B by a float
09:51 - value or integer value or a string value
09:54 - and it you know initialize or replace
09:57 - this Auto by this appropriate data
10:01 - type but when you go on to compile this
10:05 - program in code blog specifically I'm
10:10 - uh uh saying this when you compile this
10:14 - it will throw an error and this error is
10:18 - uh the file required requires compiler
10:22 - and Library support for ISO C++
10:27 - 2011 standard s right which is not by
10:32 - default enabled in uh your code
10:36 - blogs so in order to enable your C++ 11
10:41 - in code blogs what you need to do is you
10:45 - just need to go to this settings uh
10:48 - ribbon here settings Ribbon or whatever
10:51 - you can say settings tab here just go to
10:55 - settings and then go to compiler here
10:59 - and in the
11:00 - compiler go to compiler setting which is
11:03 - this one and make sure this selected
11:06 - compiler is gnu GCC compiler and go to
11:11 - compiler settings here and in here go to
11:16 - compiler
11:17 - flags and in this compiler Flags in all
11:21 - category you will be able to find when
11:24 - you scroll down a little you will be
11:27 - able to find C++
11:29 - 11 standard here so this is the standard
11:34 - uh we are looking for have g++ follow
11:39 - the C++ 11 ISO C++ language standard
11:44 - which is this one just check this uh
11:48 - check box here which is once again have
11:51 - g++ follow the C++ 11 ISO standard or
11:55 - ISO C++ language standard just check
11:59 - this checkbox and click
12:01 - okay and then when you recompile this
12:06 - program I will recompile this program
12:09 - and now this error is gone right so in
12:15 - order to compile these new feature which
12:19 - are introduced in uh C++ 11 you need to
12:24 - enable the C++ 11 in your code blocks
12:28 - and and uh which I have shown you
12:31 - recently I will be uh you know showing
12:34 - you how to use other features of C++ 11
12:38 - in the later video but I just wanted to
12:42 - uh show you in this video how you can
12:45 - enable C++ 11
12:48 - in in code blogs so I hope you have
12:51 - enjoyed this video please rate comment
12:53 - and subscribe and bye for now

Cleaned transcript:

hello guys welcome once again till now we have been learning some of the very basic and core functionality in C++ but with time C++ has also evolved as a language and uh in 2011 C++ has or ISO which uh is responsible for uh regulating C++ standards has rais released a newest uh version of C++ which we call C++ 11 and in this C++ 11 some of the very uh newest features and very good features were introduced by uh the C++ 11 and I'm going to show you how you can enable C++ 11 in code blocks because first of all if you want to learn more about C++ 11 or other things you can just uh go to Wikipedia and search for C++ and you can see here in the standardization uh in 2011 there was uh stable release by ISO in 2011 there is a C++ uh 14 version also but it's a working draft so it's it's still not officially released so right now we are using uh 2011 or C++ 11 as the standard so in code blogs by default C++ 11 features are not uh enabled for example in uh C++ 11 there was a feature introduced used called Auto and this Auto is just like this there is a keyword called Auto which works like default data type so for example uh I can just uh declare a variable with a data type Auto and with the initialization of this variable uh the data type of the a or data type of variable a a will be recognized for example I initialize this a by 42 then the data type for a will be replaced automatically as int or I can just declare a second variable called B and Dot for example two and this data type will be automatically uh taken as a float value so this Auto means automatic data type and it depends upon the initialization of the variable uh how you initialize this variable then uh it's replaced Auto uh can recognize that uh you initialize this B by float value or integer value or a string value and it you know initialize or replace this Auto buy this appropriate data type but when you go on to compile this program in code blog specifically I'm uh uh saying this when you compile this it will throw an error and this error is uh the file required requires compiler and Library support for ISO C++ 2 11 standards right which is not by default enabled in uh your code blogs so in order to enable your C++ 11 in code blogs what you need to do is you just need to go to this settings uh ribbon here settings Ribbon or whatever you can say settings tab here just go to settings and then go to compile here and in the compiler go to compiler setting which is this one and make sure this selected compiler is gnu GCC compiler and go to compiler settings here and in here go to compiler flags and in this compiler Flags in all category you will be able to find when you scroll down a little you will be able to find C++ 11 standard here so this is the standard uh we are looking for have g++ follow the C++ 11 ISO C++ language standard which is this one just check this uh check box here which is once again have g++ follow the C++ 11 ISO standard ISO C++ language standard just check this checkbox and click okay and then when you recompile this program I will recompile this program and now this error is gone right so in order to compile these new feature which are introduced in uh C++ 11 you need to enable the C++ 11 in your clue code blocks and uh which I have shown you recently I will be uh you know showing you how to use other features of C++ 11 in the later video but I just wanted to uh show you in this video how you can enable C++ 11 in in code blogs so I hope you have enjoyed this video please rate comment and subscribe and bye for now hello guys once again till now we have been learning some of the very basic and core functionality in C++ but with time C++ has also evolved as a language and uh in 2011 C++ has or ISO which uh is responsible for uh regulating C++ standards has released a new newest uh version of C++ which we call C++ 11 and in this C++ 11 some of the very uh newest features and very good features were introduced by uh the C++ 11 and I'm going to show you how you can enable C++ 11 in code blocks because first of all if you want to learn more about C++ 11 or other things you can just go to Wikipedia and search for C++ and you can see here in the standardization uh in 2011 there was a stable release by ISO in 2011 there is a C++ uh 14 version also but it's a working draft so it's it's still not officially released so right now we are using uh 2011 or C++ 11 as the standard so in code blogs by default C++ 11 features are not uh enabled for example in uh C++ 11 there was a feature introduced called Auto and this Auto is just like this there is a keyword called Auto which works like default data type so for example uh I can just uh declare a variable with a data type Auto and with the initialization of this variable uh the data type of the a or data type of variable a will be recog nice for example I initialize this a by 42 then the data type for a will be replaced automatically as int or I can just declare a second variable called B and Dot for example two and this data type will be automatically uh taken as uh float value so this Auto means automatic data type and it depends upon the initialization of the variable uh how you initialize this variable then uh it's replaced Auto uh can recognize that uh you initialize this B by a float value or integer value or a string value and it you know initialize or replace this Auto by this appropriate data type but when you go on to compile this program in code blog specifically I'm uh uh saying this when you compile this it will throw an error and this error is uh the file required requires compiler and Library support for ISO C++ 2011 standard s right which is not by default enabled in uh your code blogs so in order to enable your C++ 11 in code blogs what you need to do is you just need to go to this settings uh ribbon here settings Ribbon or whatever you can say settings tab here just go to settings and then go to compiler here and in the compiler go to compiler setting which is this one and make sure this selected compiler is gnu GCC compiler and go to compiler settings here and in here go to compiler flags and in this compiler Flags in all category you will be able to find when you scroll down a little you will be able to find C++ 11 standard here so this is the standard uh we are looking for have g++ follow the C++ 11 ISO C++ language standard which is this one just check this uh check box here which is once again have g++ follow the C++ 11 ISO standard or ISO C++ language standard just check this checkbox and click okay and then when you recompile this program I will recompile this program and now this error is gone right so in order to compile these new feature which are introduced in uh C++ 11 you need to enable the C++ 11 in your code blocks and and uh which I have shown you recently I will be uh you know showing you how to use other features of C++ 11 in the later video but I just wanted to uh show you in this video how you can enable C++ 11 in in code blogs so I hope you have enjoyed this video please rate comment and subscribe and bye for now
