With timestamps:

00:00 - hey what's up guys welcome back to our
00:02 - youtube channel
00:03 - and welcome to this video this is john
00:07 - again from programming knowledge and
00:10 - it's been a while since we have uploaded
00:12 - videos related to
00:14 - c programming but now we're back with
00:17 - another video
00:18 - and in this video we're going to be
00:19 - learning enumeration
00:21 - or enum in c so enumeration or enum
00:25 - is a user defined or user defined data
00:28 - type
00:28 - that we can use insider c program so it
00:31 - works like
00:32 - almost the same with strap so as you can
00:34 - probably
00:35 - remember from our previous tutorials we
00:37 - already
00:38 - discussed and used struct
00:41 - inside our c program so as i've said in
00:44 - this video we're going to be learning
00:45 - enumeration so that's
00:47 - that's where our focus should be
00:49 - enumeration
00:50 - so enumeration is mainly used to
00:53 - assign names to integral constants and
00:57 - these names make program is
01:00 - easy to read and maintain so i'm gonna
01:03 - be showing you a graphic
01:05 - right here on how we can declare
01:08 - instantiate and operate with enumeration
01:12 - insider c program so basically guys this
01:15 - is
01:16 - how we can um
01:19 - declare the enumeration right here
01:23 - so declaration we have this keyword
01:26 - enum and then the name of our enum
01:30 - variable so in this case
01:31 - days of wick okay and then we have
01:35 - different
01:35 - states we have seven different states
01:37 - here that starts from the value
01:40 - zero the second will be one and the last
01:43 - one will be
01:44 - six so um
01:47 - all of this states these are called
01:49 - enumerators
01:51 - so this is just the list of constants
01:53 - separated by
01:55 - commas so this will help us to make
01:58 - our program easy to read and maintain
02:00 - because all of these enumerators
02:02 - are already already listed here
02:05 - so we know what values to get what
02:09 - values to
02:10 - assign to a certain variable if we want
02:13 - to use this
02:14 - um inside our c program now after that
02:17 - declaration
02:18 - we do have this instantiation so in
02:22 - in sensation part we have also the name
02:24 - or the keyword enum
02:26 - right here and then of course the enum
02:30 - variable that we have declared
02:33 - on top so for example this one days of
02:36 - week
02:36 - as you can see here and then of course
02:38 - we need to assign
02:40 - an object of enum days of week so
02:42 - basically guys
02:44 - this day is just an object
02:47 - of our days of week
02:50 - in um as you can see okay and then
02:53 - right after that instantiation we can
02:55 - now use that in
02:57 - enumeration or enum um here in operation
03:01 - so for example you want to
03:02 - like assign a value to our object
03:07 - so they equals and then the value of
03:10 - our enum that we want to use
03:14 - so for example this one in this case we
03:16 - specify
03:18 - that it should be wednesday
03:21 - right here okay so
03:25 - we could assign the value just like that
03:29 - now we can use this insider c program as
03:33 - i've said because
03:34 - we're dealing with enumeration or
03:36 - e-nominc
03:37 - so we can
03:40 - use our ide to create
03:44 - our simple program implementing the
03:47 - enumeration or enum in
03:50 - c so for example we wanna um
03:54 - like implement the days
03:57 - of a week so as i've said
04:00 - in our declaration we can use the
04:04 - enum keyword right here
04:07 - by the way guys you can declare enum
04:10 - locally you can declare
04:16 - enum locally
04:19 - or inside a function
04:24 - right here or you can do it here
04:28 - before our main function
04:32 - globally declare
04:36 - our enum okay
04:39 - so for example we want to do this
04:42 - globally so our keyword enum right here
04:46 - and then the name of our
04:50 - for example in this declaration we have
04:53 - the enum keyword and then the name of
04:55 - our variable so days of week
04:58 - so for example in our case we're just
05:00 - going to use the
05:02 - weak variable name
05:05 - and then inside here we can declare
05:07 - inside the curly braces
05:09 - so make sure you use curly braces and
05:11 - then
05:12 - semicolon at the end of this particular
05:15 - line to
05:16 - to signify signify that it is the end
05:20 - of this particular line so
05:23 - inside here we can declare for example
05:26 - for monday tuesday
05:30 - wednesday thursday
05:37 - uh friday
05:40 - saturday
05:46 - and sunday so that's how we can declare
05:50 - our enum variable
05:54 - again you have to use the enum keyword
05:56 - and then the name of our enum which is
05:58 - in
05:58 - our case here weak and then
06:01 - open and close curly braces and you can
06:04 - declare the enumerators here
06:07 - and of course you have to specify the
06:09 - semicolon at the end of this particular
06:11 - line
06:11 - now in using this particular enum we can
06:15 - do it here inside our main function so
06:18 - we can
06:19 - again i use the enum keyword and then
06:22 - our name of our enum which is weak
06:26 - as you can see here so take note of that
06:29 - that we use the enum keyword and then
06:32 - the name of our enum and
06:34 - we can assign an object to this so for
06:36 - example they
06:38 - okay so that's how you can
06:42 - specify our enum object
06:46 - so enum keyword the name of our enum
06:49 - and then an object of our enum which is
06:52 - day so for example you want to assign
06:56 - a value to this so day
06:59 - equals for example wednesday
07:03 - so you can just use
07:07 - wed and
07:12 - just three letters if you want but
07:15 - anyway you can use
07:16 - also the full um names of your constants
07:20 - but in our case we're just going to use
07:22 - the
07:23 - three letters to have like a uniform
07:27 - constant names okay so here we can use
07:30 - so for example wednesday and then of
07:33 - course
07:33 - you can print this you can specify
07:38 - the percent d
07:41 - here and of course the object of our
07:44 - enum
07:45 - okay so let's try to run this and see
07:48 - how our uh what the output of our
07:52 - program
07:53 - so so as you can see here
07:56 - we're getting 2 the value of
07:59 - our object is 2
08:03 - because as you can see
08:06 - our enumerators or the state of our
08:09 - numerator starts
08:10 - from zero so zero
08:13 - one and two so that's why we're getting
08:16 - the value of
08:18 - our object here as two but if
08:21 - we want to change this for example
08:24 - sun for sunday then run on
08:28 - build our program so the output will be
08:32 - six so by default guys um
08:35 - the value of our enumerators will be
08:38 - if we did not assign a value to our
08:42 - enumerators the default value of this
08:45 - will be
08:46 - zero this one will be one
08:50 - this will be two as you can see
08:54 - if we try to hover over our um
08:57 - mouse here in our constant so we're
08:59 - getting two
09:00 - um this is obviously
09:04 - three but we're not getting the um
09:08 - like the hover over display
09:12 - four this is five
09:15 - and this is six so that's how our state
09:19 - is being initialized by the compiler
09:23 - so it is getting like the uh getting
09:26 - default values
09:27 - zero until to the last
09:31 - um state minus one of our
09:34 - in enumerators okay so
09:38 - if we try to
09:41 - initialize our
09:45 - states for example we want to make this
09:50 - one we could do that so monday will be
09:53 - one
09:54 - tuesday is two wednesday is
09:58 - three um
10:01 - thursday is four friday will be
10:04 - five saturday will be six
10:08 - and sunday will be seven
10:11 - so remember earlier
10:15 - we are getting two coming from wednesday
10:19 - because that's the default state of our
10:22 - constant
10:22 - wednesday but if we try to assign the
10:26 - value to our enum
10:27 - object here into wednesday let's try to
10:31 - see the output okay
10:35 - so instead of 2 now we're getting the
10:39 - value 3 because
10:43 - we initialize already our
10:46 - variable and it's not assigning a
10:48 - default
10:50 - value to our states
10:54 - now here's an interesting facts about
10:57 - initialization of enum
10:59 - so if there are like two enum names
11:03 - um we can declare
11:06 - same value for example we want to
11:09 - declare
11:10 - value for monday tuesday we can like
11:14 - make this value one and one
11:18 - so it doesn't matter for this particular
11:20 - example
11:21 - because uh this is um
11:25 - allowed in c programming so we can have
11:28 - two
11:29 - enum names with the same
11:32 - value okay so for example
11:36 - we can
11:39 - comment this one out and we can try to
11:42 - display the value of
11:44 - our constant so percent
11:49 - percent d instead of day
11:53 - we can use monday
11:57 - and tuesday there you go
12:02 - so bill and runner program and we're
12:05 - getting this
12:07 - error right here okay
12:11 - we're getting that output because we
12:14 - have
12:14 - specified our printf statement like this
12:17 - but
12:18 - if we wanna have uh we want to display
12:21 - the correct value then we're going to
12:23 - use this percent the percent d
12:26 - and then comma in between and then we're
12:28 - just gonna
12:30 - specify the two variable monday tuesday
12:34 - and click and build and run our program
12:36 - and as you can see
12:38 - here we're getting values one
12:41 - and one so that's one of the interesting
12:45 - fact
12:46 - about declaring our inum variable we can
12:49 - use the same state or the same value
12:52 - for our constant so it doesn't matter in
12:55 - c that's because
12:56 - uh it is allowable in c okay and
12:59 - guys if you have clarifications if you
13:01 - have questions regarding enum
13:03 - you can ask questions down below and
13:06 - i am very thankful for your time thank
13:09 - you for watching
13:10 - and see you in the next video

Cleaned transcript:

hey what's up guys welcome back to our youtube channel and welcome to this video this is john again from programming knowledge and it's been a while since we have uploaded videos related to c programming but now we're back with another video and in this video we're going to be learning enumeration or enum in c so enumeration or enum is a user defined or user defined data type that we can use insider c program so it works like almost the same with strap so as you can probably remember from our previous tutorials we already discussed and used struct inside our c program so as i've said in this video we're going to be learning enumeration so that's that's where our focus should be enumeration so enumeration is mainly used to assign names to integral constants and these names make program is easy to read and maintain so i'm gonna be showing you a graphic right here on how we can declare instantiate and operate with enumeration insider c program so basically guys this is how we can um declare the enumeration right here so declaration we have this keyword enum and then the name of our enum variable so in this case days of wick okay and then we have different states we have seven different states here that starts from the value zero the second will be one and the last one will be six so um all of this states these are called enumerators so this is just the list of constants separated by commas so this will help us to make our program easy to read and maintain because all of these enumerators are already already listed here so we know what values to get what values to assign to a certain variable if we want to use this um inside our c program now after that declaration we do have this instantiation so in in sensation part we have also the name or the keyword enum right here and then of course the enum variable that we have declared on top so for example this one days of week as you can see here and then of course we need to assign an object of enum days of week so basically guys this day is just an object of our days of week in um as you can see okay and then right after that instantiation we can now use that in enumeration or enum um here in operation so for example you want to like assign a value to our object so they equals and then the value of our enum that we want to use so for example this one in this case we specify that it should be wednesday right here okay so we could assign the value just like that now we can use this insider c program as i've said because we're dealing with enumeration or enominc so we can use our ide to create our simple program implementing the enumeration or enum in c so for example we wanna um like implement the days of a week so as i've said in our declaration we can use the enum keyword right here by the way guys you can declare enum locally you can declare enum locally or inside a function right here or you can do it here before our main function globally declare our enum okay so for example we want to do this globally so our keyword enum right here and then the name of our for example in this declaration we have the enum keyword and then the name of our variable so days of week so for example in our case we're just going to use the weak variable name and then inside here we can declare inside the curly braces so make sure you use curly braces and then semicolon at the end of this particular line to to signify signify that it is the end of this particular line so inside here we can declare for example for monday tuesday wednesday thursday uh friday saturday and sunday so that's how we can declare our enum variable again you have to use the enum keyword and then the name of our enum which is in our case here weak and then open and close curly braces and you can declare the enumerators here and of course you have to specify the semicolon at the end of this particular line now in using this particular enum we can do it here inside our main function so we can again i use the enum keyword and then our name of our enum which is weak as you can see here so take note of that that we use the enum keyword and then the name of our enum and we can assign an object to this so for example they okay so that's how you can specify our enum object so enum keyword the name of our enum and then an object of our enum which is day so for example you want to assign a value to this so day equals for example wednesday so you can just use wed and just three letters if you want but anyway you can use also the full um names of your constants but in our case we're just going to use the three letters to have like a uniform constant names okay so here we can use so for example wednesday and then of course you can print this you can specify the percent d here and of course the object of our enum okay so let's try to run this and see how our uh what the output of our program so so as you can see here we're getting 2 the value of our object is 2 because as you can see our enumerators or the state of our numerator starts from zero so zero one and two so that's why we're getting the value of our object here as two but if we want to change this for example sun for sunday then run on build our program so the output will be six so by default guys um the value of our enumerators will be if we did not assign a value to our enumerators the default value of this will be zero this one will be one this will be two as you can see if we try to hover over our um mouse here in our constant so we're getting two um this is obviously three but we're not getting the um like the hover over display four this is five and this is six so that's how our state is being initialized by the compiler so it is getting like the uh getting default values zero until to the last um state minus one of our in enumerators okay so if we try to initialize our states for example we want to make this one we could do that so monday will be one tuesday is two wednesday is three um thursday is four friday will be five saturday will be six and sunday will be seven so remember earlier we are getting two coming from wednesday because that's the default state of our constant wednesday but if we try to assign the value to our enum object here into wednesday let's try to see the output okay so instead of 2 now we're getting the value 3 because we initialize already our variable and it's not assigning a default value to our states now here's an interesting facts about initialization of enum so if there are like two enum names um we can declare same value for example we want to declare value for monday tuesday we can like make this value one and one so it doesn't matter for this particular example because uh this is um allowed in c programming so we can have two enum names with the same value okay so for example we can comment this one out and we can try to display the value of our constant so percent percent d instead of day we can use monday and tuesday there you go so bill and runner program and we're getting this error right here okay we're getting that output because we have specified our printf statement like this but if we wanna have uh we want to display the correct value then we're going to use this percent the percent d and then comma in between and then we're just gonna specify the two variable monday tuesday and click and build and run our program and as you can see here we're getting values one and one so that's one of the interesting fact about declaring our inum variable we can use the same state or the same value for our constant so it doesn't matter in c that's because uh it is allowable in c okay and guys if you have clarifications if you have questions regarding enum you can ask questions down below and i am very thankful for your time thank you for watching and see you in the next video
