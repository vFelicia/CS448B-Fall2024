With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - Python tutorial for beginners in this
00:04 - video I'm going to show you how you can
00:06 - use break and continue key words with
00:09 - your Python loops so to start with I
00:12 - have here two loops one is a for loop
00:14 - and other is a while loop now this for
00:17 - loop takes a list and then print every
00:21 - element out of this list using this
00:23 - print function in a similar way while
00:27 - loop evaluates the value of I if it's
00:31 - less than five then it's going to print
00:33 - the value of I and then increment the
00:36 - value of I by one now this is all normal
00:39 - and we have already seen this kind of
00:42 - code now you can use a break keyword
00:44 - with your loops in order to terminate
00:47 - the execution of loop immediately so
00:51 - let's see how we can use break keyword
00:53 - first and then we will see how to use
00:56 - continue keyword so here I'm going to
00:59 - give a condition inside my for loop and
01:01 - I'm going to just evaluate whether X is
01:05 - equal to 3 or not and if X is equal to 3
01:10 - I'm going to use this break keyword in a
01:13 - same way I'm going to use the safe
01:15 - condition inside my while loop also but
01:19 - instead this time I'm going to evaluate
01:20 - I is equal to 3 and F I is equal to 3
01:23 - then I'm going to use this break inside
01:26 - this if condition so let's run the code
01:29 - and let's see what happens and you can
01:31 - see in the for loop it has only printed
01:34 - 0 1 2 even though this for loop is
01:37 - supposed to print from 0 to 5
01:40 - it has printed until 2 from 0 because as
01:45 - soon as this x value becomes 3 and we
01:49 - call break here the loop is terminated
01:52 - immediately and our program will come
01:55 - out of the loop immediately as soon as
01:58 - this break keyword is called
02:00 - in the case of this while loop also as
02:02 - soon as this I value becomes 3 we are
02:06 - calling the break keyword and as soon as
02:08 - this break keyword is called or loop is
02:11 - broken and
02:13 - execution of code will come out of this
02:17 - loop so until two everything was okay
02:20 - but as soon as the value becomes three
02:22 - this break is called and then we come
02:25 - out of the loop
02:27 - let me just print a line here in order
02:31 - to separate these two loops so we know
02:35 - that from where one is starting right so
02:39 - I'm going to once again run the code and
02:40 - you can see for loop prints from zero to
02:43 - two and also while loop prints from zero
02:46 - to two if you change the value here for
02:49 - example here you want to evaluate X is
02:51 - equal to two or not and here you want to
02:54 - evaluate if X is equal to four or not
02:57 - and then you break out of the loop and
03:00 - once again when I run the code you can
03:02 - see the for loop runs only two iteration
03:06 - four zero and one and as soon as the
03:09 - value of X becomes two we call the break
03:12 - keyword and we come out of this loop and
03:15 - in the case of while loop as soon as
03:18 - this value of I becomes four we come out
03:21 - of the loop so the value from zero to
03:24 - three is printed now let's see how we
03:27 - can use a continue keyword instead of
03:29 - this break keyword so instead of this
03:32 - break keyword I will use a keyword
03:35 - called continue here and also in the
03:37 - while loop also I'm going to use this
03:40 - keyword called continue and I'm going to
03:42 - run the program and let's see what
03:44 - happens so now when you see here so you
03:48 - can see here for loop starts from
03:50 - printing zero one and as soon as the
03:53 - value of x becomes two this condition is
03:56 - met and this continue is called and as
04:00 - soon as this continue keyword is called
04:03 - everything whatever code comes after
04:06 - this continue keyword will be skipped
04:09 - and your program execution goes once
04:11 - again to a for loop for the next value
04:15 - so you can see in case where X is equal
04:19 - to two and continuing is called this
04:22 - statement is not executed because as
04:26 - soon
04:27 - as we execute continue in our loop then
04:31 - that iteration is skipped and all the
04:34 - code after the continue will not be
04:37 - executed okay so we go to the next
04:41 - iteration so that's why two is not
04:44 - printed because this was kept in case of
04:47 - two and then directly three is printed
04:50 - and then four and five is printed in
04:52 - case of while loop also as soon as the
04:56 - value of I becomes four you can see four
05:00 - is not printed here you can also change
05:03 - this value to two and then I'm going to
05:05 - run the program once again and you can
05:07 - see while loop prints zero one and why
05:11 - it prints zero and one so because as
05:14 - soon as the value of I becomes two this
05:17 - continue keyword is called and after
05:20 - that this iteration is skipped and also
05:23 - because this iteration is skipped these
05:26 - two lines of code are not executed and
05:29 - because this line of code is not
05:32 - executed that's why the value of I is
05:35 - not incremented and the value of I
05:38 - always remains two and that's why this
05:41 - becomes infinite loop right so instead
05:45 - of increment the value of I at the last
05:47 - line we can increment the value of I
05:49 - just after this condition check whether
05:54 - I is less than five or not and then we
05:57 - run the code now you can see it prints 1
06:00 - 3 4 & 5 so now what's happening here is
06:06 - initially the value of I is equal to
06:08 - zero and this condition is evaluated and
06:11 - then we first increment the value by 1
06:16 - and that's why it starts with the
06:19 - printing of 1 by using this print
06:21 - function and as soon as I is equal to 2
06:24 - this continue is called and that's why
06:27 - here too is not printed because as soon
06:30 - as the value of I becomes 2 this
06:32 - continue is called and every code or
06:35 - every statement after the continue will
06:38 - be skipped for that
06:40 - iteration that's why two is not printed
06:43 - here so in this way you can use break
06:46 - and continue keywords with loop I hope
06:49 - you have enjoyed this video and I will
06:50 - see you in the next video

Cleaned transcript:

hey guys welcome to the next video on Python tutorial for beginners in this video I'm going to show you how you can use break and continue key words with your Python loops so to start with I have here two loops one is a for loop and other is a while loop now this for loop takes a list and then print every element out of this list using this print function in a similar way while loop evaluates the value of I if it's less than five then it's going to print the value of I and then increment the value of I by one now this is all normal and we have already seen this kind of code now you can use a break keyword with your loops in order to terminate the execution of loop immediately so let's see how we can use break keyword first and then we will see how to use continue keyword so here I'm going to give a condition inside my for loop and I'm going to just evaluate whether X is equal to 3 or not and if X is equal to 3 I'm going to use this break keyword in a same way I'm going to use the safe condition inside my while loop also but instead this time I'm going to evaluate I is equal to 3 and F I is equal to 3 then I'm going to use this break inside this if condition so let's run the code and let's see what happens and you can see in the for loop it has only printed 0 1 2 even though this for loop is supposed to print from 0 to 5 it has printed until 2 from 0 because as soon as this x value becomes 3 and we call break here the loop is terminated immediately and our program will come out of the loop immediately as soon as this break keyword is called in the case of this while loop also as soon as this I value becomes 3 we are calling the break keyword and as soon as this break keyword is called or loop is broken and execution of code will come out of this loop so until two everything was okay but as soon as the value becomes three this break is called and then we come out of the loop let me just print a line here in order to separate these two loops so we know that from where one is starting right so I'm going to once again run the code and you can see for loop prints from zero to two and also while loop prints from zero to two if you change the value here for example here you want to evaluate X is equal to two or not and here you want to evaluate if X is equal to four or not and then you break out of the loop and once again when I run the code you can see the for loop runs only two iteration four zero and one and as soon as the value of X becomes two we call the break keyword and we come out of this loop and in the case of while loop as soon as this value of I becomes four we come out of the loop so the value from zero to three is printed now let's see how we can use a continue keyword instead of this break keyword so instead of this break keyword I will use a keyword called continue here and also in the while loop also I'm going to use this keyword called continue and I'm going to run the program and let's see what happens so now when you see here so you can see here for loop starts from printing zero one and as soon as the value of x becomes two this condition is met and this continue is called and as soon as this continue keyword is called everything whatever code comes after this continue keyword will be skipped and your program execution goes once again to a for loop for the next value so you can see in case where X is equal to two and continuing is called this statement is not executed because as soon as we execute continue in our loop then that iteration is skipped and all the code after the continue will not be executed okay so we go to the next iteration so that's why two is not printed because this was kept in case of two and then directly three is printed and then four and five is printed in case of while loop also as soon as the value of I becomes four you can see four is not printed here you can also change this value to two and then I'm going to run the program once again and you can see while loop prints zero one and why it prints zero and one so because as soon as the value of I becomes two this continue keyword is called and after that this iteration is skipped and also because this iteration is skipped these two lines of code are not executed and because this line of code is not executed that's why the value of I is not incremented and the value of I always remains two and that's why this becomes infinite loop right so instead of increment the value of I at the last line we can increment the value of I just after this condition check whether I is less than five or not and then we run the code now you can see it prints 1 3 4 & 5 so now what's happening here is initially the value of I is equal to zero and this condition is evaluated and then we first increment the value by 1 and that's why it starts with the printing of 1 by using this print function and as soon as I is equal to 2 this continue is called and that's why here too is not printed because as soon as the value of I becomes 2 this continue is called and every code or every statement after the continue will be skipped for that iteration that's why two is not printed here so in this way you can use break and continue keywords with loop I hope you have enjoyed this video and I will see you in the next video
