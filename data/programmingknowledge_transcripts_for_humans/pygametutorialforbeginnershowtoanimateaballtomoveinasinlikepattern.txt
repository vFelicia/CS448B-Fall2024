With timestamps:

00:00 - hey everyone as i told you in the last
00:02 - video we would animate the circle along
00:04 - the graph of a function
00:06 - that's what we are going to do in this
00:08 - video
00:09 - we will try that our circle moves in a
00:11 - sine pattern the function i've picked is
00:13 - sine if you don't know how a sine wave
00:15 - looks like this is what a sine wave
00:17 - looks like
00:19 - you can see that along the x-axis you
00:22 - have the angles and along the y it is
00:24 - the sine value of these angles
00:26 - and it looks like a sinister wave
00:29 - so you need to given these angles in the
00:31 - sine function and you can easily find
00:33 - the y coordinate for the sine function
00:35 - we will use the math module
00:38 - and we'll give in these x and y
00:40 - coordinates as the argument while we
00:41 - draw the circle so that will put our
00:43 - circle at the required position and the
00:45 - output motion would look like a sign
00:47 - pattern
00:48 - fine
00:50 - let's write the program now i'll import
00:53 - pi game i'll write import by game
00:57 - then i'll initialize it i'll write pi
00:59 - game
01:01 - dot init
01:05 - then i'll set up the screen
01:08 - red pie game dot display
01:13 - down set mode
01:17 - and i'll given the screen size to be
01:18 - thousand comma 500 i've taken such a
01:21 - large width so that i can see a number
01:24 - of waves
01:26 - and i can easily observe that sign
01:28 - pattern
01:29 - formed by the ball
01:32 - then i'll start my while true loop i'll
01:35 - get to the game loop i'll write while
01:37 - true
01:39 - for events in pygame dot
01:42 - event dot get
01:47 - if events dot type equals pi game dot
01:50 - quit so i'll check in the condition
01:53 - i'll call
01:54 - the quit function
01:56 - fine
01:58 - buy game dot quit
02:01 - and i'll quit
02:03 - and then i'll
02:04 - update this
02:06 - i'll write pygame dot
02:08 - display dot update
02:11 - cool so this was the basic code
02:14 - let's get to the main code now
02:17 - since i said i'd be using the math
02:19 - module i'll write import math i'll
02:21 - import math
02:23 - i'll import the math module
02:25 - now i should think that from where we
02:28 - will given the inputs from where we
02:30 - should find the x coordinate
02:32 - y coordinate we can easily find the y
02:34 - coordinate because that's just the sine
02:36 - function of the x value
02:39 - so where we will get the x value from
02:42 - we'll get it from the time okay
02:45 - but you might say that
02:47 - if we get the running time of the
02:49 - program then it will exceed continuously
02:52 - and we won't
02:53 - see our ball once it has passed our
02:56 - screen for that i'll
02:58 - use the modulo operator i'll
03:02 - find the times modulo by thousand this
03:06 - is how i write it so the get ticks
03:09 - method gets me the amount of time
03:13 - for which the program has been running
03:15 - right after initializing pi game
03:17 - otherwise this won't work if you haven't
03:18 - initialized by game this won't work
03:22 - okay and i'll also divide it by a number
03:25 - i'll divide it by three so that i can
03:28 - get a slower speed
03:30 - the ball doesn't run away
03:32 - and i can notice that
03:34 - the ball moves in a sine pattern fine
03:38 - then let me put this x equal to t
03:40 - okay
03:41 - and for y i will put it into the sine
03:44 - function so i'll write math dot sine
03:49 - t by 50
03:51 - in 200 plus 200 okay so i've divided it
03:55 - by 50 for the wavelength
03:57 - so i want to keep shorter wavelength so
04:00 - that i can see many waves and i can
04:03 - easily observe the sine pattern
04:07 - now if you increase this you can
04:09 - increase this to 150 then the wavelength
04:11 - would be increased and you'll see less
04:14 - number of waves
04:16 - this hundred is for
04:18 - defining the amplitude if you increase
04:21 - this the amplitude would increase
04:23 - and if you decrease this the amplitude
04:25 - will decrease 100 defines the amplitude
04:28 - so 100 is the amplitude of my wave and
04:30 - i've added it with 200
04:33 - so that i can see my wave in the middle
04:35 - of the screen
04:36 - and not at some corner otherwise the
04:39 - sine wave will
04:41 - overlap with the boundaries okay
04:43 - then i'll fill my screen with some color
04:47 - and i'll draw my circle
04:50 - let this green fill color be
04:52 - pink
04:53 - and
04:56 - i'll use the draw module to
04:58 - make the circle
05:02 - so screen is the surface i'm going to
05:03 - draw on i've given a color
05:06 - then x and y are my coordinates
05:09 - and then be the radius of the circle
05:12 - then i'll update i have already written
05:14 - this so let's run this and see if we
05:17 - observe our circle in a sine pattern
05:25 - so yeah i can see my
05:27 - ball or circle moving in a sign pattern
05:30 - it's very similar to the graph i showed
05:32 - you before now if you can't observe it
05:35 - what you can do is you can wrap this
05:37 - line screen dot fill just to observe for
05:39 - once the sign pattern of the ball
05:43 - you can rub in this line screen dot fill
05:46 - i hope you remember we did the same
05:47 - thing while we wanted to draw patterns
05:50 - using our object using the arrow keys we
05:53 - wanted to see the trail of our object
05:55 - drawn
05:56 - here to the trail that is the sign
05:58 - pattern
05:59 - to see that you can rub in this line
06:02 - now if i run this
06:04 - you can actually see the sine graph
06:06 - and so yeah our ball moves in a sine
06:09 - pattern
06:11 - now you can use other functions also
06:14 - like cosine or
06:15 - tangent
06:17 - from the math module
06:19 - so this is it for this video thank you

Cleaned transcript:

hey everyone as i told you in the last video we would animate the circle along the graph of a function that's what we are going to do in this video we will try that our circle moves in a sine pattern the function i've picked is sine if you don't know how a sine wave looks like this is what a sine wave looks like you can see that along the xaxis you have the angles and along the y it is the sine value of these angles and it looks like a sinister wave so you need to given these angles in the sine function and you can easily find the y coordinate for the sine function we will use the math module and we'll give in these x and y coordinates as the argument while we draw the circle so that will put our circle at the required position and the output motion would look like a sign pattern fine let's write the program now i'll import pi game i'll write import by game then i'll initialize it i'll write pi game dot init then i'll set up the screen red pie game dot display down set mode and i'll given the screen size to be thousand comma 500 i've taken such a large width so that i can see a number of waves and i can easily observe that sign pattern formed by the ball then i'll start my while true loop i'll get to the game loop i'll write while true for events in pygame dot event dot get if events dot type equals pi game dot quit so i'll check in the condition i'll call the quit function fine buy game dot quit and i'll quit and then i'll update this i'll write pygame dot display dot update cool so this was the basic code let's get to the main code now since i said i'd be using the math module i'll write import math i'll import math i'll import the math module now i should think that from where we will given the inputs from where we should find the x coordinate y coordinate we can easily find the y coordinate because that's just the sine function of the x value so where we will get the x value from we'll get it from the time okay but you might say that if we get the running time of the program then it will exceed continuously and we won't see our ball once it has passed our screen for that i'll use the modulo operator i'll find the times modulo by thousand this is how i write it so the get ticks method gets me the amount of time for which the program has been running right after initializing pi game otherwise this won't work if you haven't initialized by game this won't work okay and i'll also divide it by a number i'll divide it by three so that i can get a slower speed the ball doesn't run away and i can notice that the ball moves in a sine pattern fine then let me put this x equal to t okay and for y i will put it into the sine function so i'll write math dot sine t by 50 in 200 plus 200 okay so i've divided it by 50 for the wavelength so i want to keep shorter wavelength so that i can see many waves and i can easily observe the sine pattern now if you increase this you can increase this to 150 then the wavelength would be increased and you'll see less number of waves this hundred is for defining the amplitude if you increase this the amplitude would increase and if you decrease this the amplitude will decrease 100 defines the amplitude so 100 is the amplitude of my wave and i've added it with 200 so that i can see my wave in the middle of the screen and not at some corner otherwise the sine wave will overlap with the boundaries okay then i'll fill my screen with some color and i'll draw my circle let this green fill color be pink and i'll use the draw module to make the circle so screen is the surface i'm going to draw on i've given a color then x and y are my coordinates and then be the radius of the circle then i'll update i have already written this so let's run this and see if we observe our circle in a sine pattern so yeah i can see my ball or circle moving in a sign pattern it's very similar to the graph i showed you before now if you can't observe it what you can do is you can wrap this line screen dot fill just to observe for once the sign pattern of the ball you can rub in this line screen dot fill i hope you remember we did the same thing while we wanted to draw patterns using our object using the arrow keys we wanted to see the trail of our object drawn here to the trail that is the sign pattern to see that you can rub in this line now if i run this you can actually see the sine graph and so yeah our ball moves in a sine pattern now you can use other functions also like cosine or tangent from the math module so this is it for this video thank you
