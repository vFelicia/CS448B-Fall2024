With timestamps:

00:00 - hey guys in this video I'm going to show
00:02 - you how you can set up the Java
00:03 - development environment with your Visual
00:06 - Studio code editor on your Mac operating
00:09 - system so let's get started and let's
00:11 - see how we can do it so you will need
00:14 - two things in order to set up the Java
00:16 - development environment with your Visual
00:19 - Studio code the first one is the obvious
00:22 - one you need to have Java jdk installed
00:25 - on your Mac operating system so let's
00:28 - see how we can install Java jdk so for
00:31 - that open your favorite browser and
00:33 - search for download Oracle Java on Mac
00:38 - and the first link which will appear
00:40 - here will be from oracle.com
00:43 - SL jaava Technologies for/ download I'm
00:47 - going to click on this link maybe I will
00:50 - also put this link in the description of
00:52 - this video so you can directly come to
00:54 - this website now at the time of making
00:56 - this video you can see Java 21 and Java
01:00 - 17 are available now what we are going
01:04 - to do is we are going to download the
01:06 - version Java
01:09 - 21 now when you scroll down a little you
01:12 - will see three sections for Linux Mac OS
01:15 - and windows we are going to click on the
01:18 - Mac version and then you will see uh
01:22 - different variants which you can
01:24 - download we are interested in
01:26 - downloading the DMG installer but here
01:30 - there are two variants of DMG installer
01:33 - also so if you are using M1 or M2 Mach
01:39 - then you need to select this one which
01:42 - is arm 64 DMG installer if you are using
01:48 - Intel backed Mac operating system then
01:51 - you need to choose the last uh one which
01:55 - is x64 DMG installer I am having having
02:00 - the M2 Chip on my Mac operating system
02:03 - so I'm going to choose the second option
02:05 - which is arm 64 DMG installer so I'm
02:08 - going to click on this link which is for
02:11 - the download of this DMG file you can
02:14 - see the download of this G DMG file has
02:17 - been started so it's not going to take
02:21 - much time to download just wait for the
02:23 - download to complete and once the
02:25 - download is complete you can see this
02:28 - DMG file is download Lo it so I can
02:30 - directly click on this DMG file here and
02:34 - let me minimize the browser and you will
02:36 - see this kind of window here in order to
02:39 - install Java jdk using this window you
02:43 - just need to click on this PKG file so
02:46 - I'm going to click on this PKG file
02:48 - which is going to start the installation
02:51 - process let me minimize this window also
02:54 - so this is the installer window we are
02:56 - going to just click on continue on the
02:57 - first window here and then it says this
03:00 - will take around 336 megabyte of space
03:03 - on your computer I'm okay with it so I'm
03:06 - going to click on install here and then
03:08 - I need to give my macbook's password so
03:11 - I'm going to provide the password here
03:14 - and then click on install software which
03:16 - is going to start the installation of
03:19 - Java jdk on my Mac operating system and
03:23 - in few seconds this window will appear
03:26 - which says install succeed so now I can
03:29 - close this window so basic installation
03:33 - of java has been done when I press on
03:36 - close it says do you want to move jdk
03:39 - installer to bin yes because the Java
03:42 - installation is finished we can move
03:44 - this uh DMG file to the bin so I'm going
03:47 - to just click on that and that file will
03:50 - be moved to the bin now Java jdk is
03:54 - installed on my Mac operating system now
03:57 - the next step in this process is to set
04:01 - the Java home so for that what we need
04:04 - to do we need to first of all find out
04:08 - where Java is installed on our Mac
04:10 - operating system so for that we are
04:13 - going to open the terminal so just click
04:15 - on this Spotlight icon and then search
04:18 - for terminal and then open the terminal
04:22 - from here so generally once you install
04:24 - Java jdk its location is for slash USR
04:28 - slash
04:31 - libexec for slash Java home so Java
04:35 - uncore home and then you need to give
04:38 - hyphen and then capital V and it's going
04:41 - to give you the version of java which
04:44 - you have installed so this is the
04:47 - version which we have installed which is
04:49 - Java 20
04:51 - 1.0.1 once we know the version of uh
04:55 - Java so now in The Next Step what we
04:58 - need to do is we need need to set or
05:01 - export the path of java home in our bash
05:06 - RC file or zshrc file now if you are
05:10 - using the newer version of Mac operating
05:13 - system most probably by default your Mac
05:16 - terminal is using zsh so we are going to
05:20 - set the Java home in the zshrc file now
05:25 - this zshrc file is located in your home
05:30 - folder so when you do PWD and when you
05:35 - open the terminal for the first time
05:37 - this is the home folder of your Mech
05:40 - operating system or for your particular
05:43 - user right and this dot zshrc is located
05:48 - in this directory so how to uh know that
05:53 - you can do LS space hyphen Al and then
05:58 - press enter and you will be able to see
06:01 - this kind of file which says do zshrc
06:05 - now if this file is not present you
06:09 - don't need to worry about it we will
06:11 - create a new zshrc file so if this file
06:16 - is present we will add our location to
06:19 - it if it's not present we will first
06:21 - create this file and then we are going
06:24 - to add our export now you can use any
06:27 - Editor to uh edit or create this file if
06:31 - this zshrc file is not there you can uh
06:35 - use this touch command and then write
06:38 - Dot
06:40 - zshrc and then press enter and it's
06:43 - going to create your dot zshrc file in
06:47 - my case it's already present so I'm not
06:49 - going to give this command the next
06:51 - command is using a text editor you need
06:54 - to open this file you can use Nano to
06:56 - open the dot zsh file or if you are the
07:00 - fan of text editor then you can use open
07:04 - also so just write open and then write
07:07 - do
07:09 - zshrc which is the name of this file and
07:13 - then press enter which is going to open
07:16 - this zsh file using the text editor let
07:20 - me make this uh text little bit bigger
07:23 - so you can see
07:24 - here so I already have one export here
07:28 - in your case
07:29 - if you have created this file for the
07:31 - first time you will not see any export
07:33 - here it will be blank what you need to
07:36 - do here is you need to copy and paste
07:39 - these two lines here I'm going to paste
07:43 - these two lines in the description of
07:44 - this video also so you can directly copy
07:48 - them and paste it into your terminal so
07:50 - the first command is export Java uncore
07:53 - home is equal to dollar and then this is
07:56 - the path which we have uh seen in in the
07:59 - terminal so we have used this path right
08:04 - user SL lib exact SL Java home space
08:08 - hyphen version and we got this version
08:12 - in my case right
08:14 - 21.0 one so here we have given the same
08:18 - path hyphen version and instead of this
08:22 - version you need to give the version
08:25 - which you see after giving this command
08:29 - so in my case the version is 21.0 point1
08:34 - so I'm going to
08:35 - replace this version with
08:39 - 2.0.1 so let me just write
08:43 - 2.0.1 here and then in the next line you
08:47 - need to uh give this command which is
08:49 - export space path is equal to Dollar
08:53 - Java home/ bin colon dollar path right
08:58 - so these two lines you need to copy and
09:00 - paste and don't forget to change the
09:03 - version with the version which you have
09:06 - once you are done you can save this file
09:10 - so I'm going to just uh click on the
09:12 - file option and then click on Save which
09:16 - is going to save this shrc file and then
09:20 - I'm going to close this once this is
09:22 - closed you can verify that your changes
09:26 - are saved by just giving the same
09:29 - command once again is op space do zshrc
09:33 - and I can see that my changes are
09:37 - already there so I know that my changes
09:41 - are saved right once your changes are
09:44 - saved the next command you need to write
09:48 - here is this one so let me clear the
09:51 - terminal because uh it's full so after
09:55 - uh saving your export you just need to
09:58 - give this command command which is
10:00 - source and then give the name of your
10:03 - file which is
10:05 - zshrc and then press enter if you don't
10:10 - give this command then do zshrc will not
10:13 - load in the current terminal so if you
10:16 - don't give this command just close your
10:18 - terminal and then reopen the terminal
10:21 - once again okay so you can also do this
10:25 - so I'm going to just close this terminal
10:27 - and then uh quit from this terminal and
10:30 - then once again open the
10:33 - terminal and once the terminal is open I
10:37 - can check the Java home is set or Not by
10:41 - giving Echo command so I'm going to just
10:44 - give echo dollar Java uncore home and
10:48 - then press enter and it's going to give
10:50 - you the location of java home in my case
10:54 - it's uh Library SL Java SL Java virtual
10:59 - machine SL jdk 21. jdk contents slome
11:05 - okay so if you have followed all the
11:07 - step which I have shown you you will see
11:09 - this kind of
11:10 - output now once uh Java home is set and
11:16 - Java is installed we can also check the
11:18 - version of java so you can give this
11:20 - command which is Java space
11:24 - hyphen version and then press enter and
11:27 - it's going to give you the version of
11:28 - java which is 21.0 point1 in my case now
11:33 - once you have Java jtk installed I'm
11:36 - hoping that you already have installed
11:39 - Visual Studio code editor on your Mac
11:41 - operating system so once you have Java
11:44 - and visual studio code let's open the
11:46 - visual studio code editor and let's
11:49 - develop some Java code so what I'm going
11:51 - to do is I'm going to open the terminal
11:53 - first of all so let me open the terminal
11:57 - and using this terminal first of of all
11:59 - I want to create a directory where my
12:02 - Java programs will be saved and then we
12:05 - will open the same directory using the
12:08 - command line and then we are going to
12:10 - open the visual studio code so let's say
12:12 - I want to create this uh folder in my
12:16 - documents directory so I'm going to CD
12:18 - into the documents directory and here
12:19 - I'm going to create a directory to
12:22 - create a directory you can give this
12:23 - command
12:24 - mkd and then the name of the directory
12:27 - I'm going to name my directory as sample
12:30 - and then I'm going to CD into the sample
12:33 - directory here in the sample directory I
12:36 - want to open the visual studio code so I
12:39 - can type this command which is code
12:41 - space Dot and then press
12:44 - enter and it's going to open the sample
12:47 - directory in your Visual Studio code Now
12:50 - to create a new file you can uh press
12:54 - this button which is for creating the
12:56 - new file or you can click on file and
12:58 - then then click on new file so let's
13:01 - create a new file and I'm going to name
13:03 - this file as hello. Java and then press
13:08 - enter and as soon as I create this file
13:12 - Visual Studio code recognizes that I
13:15 - have created the Java file so it's going
13:18 - to suggest me to install the extension
13:21 - pack for Java so you can directly click
13:26 - on this uh install button or if you want
13:29 - to install the extension pack using the
13:31 - extensions section you can click on this
13:34 - section which says extension and then
13:37 - search for Java here and it's going to
13:40 - search for the extension pack for Java
13:42 - so the first uh result you will see here
13:45 - will be for extension pack for Java and
13:49 - it's from
13:51 - microsoft.com and it has been downloaded
13:54 - around 23 million times so it's an
13:57 - official package which you can install
14:00 - which will help you to develop Java on
14:03 - your Visual Studio code so I'm going to
14:04 - click on install here this package
14:07 - installs several different packages for
14:09 - example it's going to install the
14:12 - debugger for Java test runner for Java
14:15 - project management for Java Maven for
14:18 - Java so these are all the packages which
14:20 - are going to be installed when you click
14:23 - on the install extension pack for Java
14:26 - now here I'm going to just close these
14:30 - uh notification windows and then I will
14:33 - go to the Explorer once again I can
14:35 - close this uh also and then welcome
14:38 - window also I can close and once I have
14:42 - installed the extension pack for Java
14:44 - let's create some uh Java class and then
14:47 - we are going to run it so in your Java
14:51 - file when you type class and then when
14:55 - you click on the first option here so at
14:59 - every point when you type something
15:01 - Visual Studio code is going to show you
15:03 - the intelligence right so when I type
15:06 - class and then press on the first option
15:08 - it's going to create a hello class for
15:10 - me automatically right now inside this
15:14 - hello class I want to create the main
15:17 - method so if I type main here once again
15:21 - Visual Studio code is going to recognize
15:23 - that I want to create a main method so
15:25 - I'm going to just uh click on the first
15:28 - option here and it's going to create the
15:30 - main method for me now let's say I want
15:33 - to print hello world I can just type
15:37 - system.out do print line and then inside
15:42 - the parenthesis I can just type hello
15:47 - space World here okay so once I type
15:51 - hello world here let's save our program
15:54 - to save your code just press command s
15:56 - on your Mac operating system or you can
15:58 - just uh go here and then click on Save
16:01 - once your program is saved let's see how
16:03 - we can run it so the obvious option you
16:06 - will see here to run your program is
16:08 - this option which is for running your
16:11 - Java program you will also see uh these
16:14 - kind of uh highlighted run and debug
16:18 - options on top of your main method you
16:21 - can click one of them and it's going to
16:23 - run your program also or you can click
16:27 - on run section here at the top and you
16:30 - can start the debugging of your program
16:32 - or you can run your program without the
16:35 - debugging we are going to choose this
16:37 - option which is for run button so I'm
16:39 - going to click on this run button which
16:40 - is going to compile my program first and
16:43 - it's going to run this program and I can
16:45 - see the hello world is printed
16:48 - here so this is how you can run your
16:51 - program now if you want to debug your
16:53 - program you can uh just click on this
16:57 - run section and then click on start
16:59 - debugging but before debugging we need
17:02 - to set some break points so that our
17:05 - program execution stops at those break
17:09 - points so let's uh set the break point
17:11 - at line number six and then I'm going to
17:13 - press on run and then start debugging
17:17 - and my debugger will start and then you
17:19 - can see my program execution stops at
17:21 - the break point you will also see some
17:24 - buttons at the top so these are the few
17:27 - buttons you can use use to move into
17:30 - your uh code using continue button step
17:34 - over button step into button and then
17:37 - you can restart your debugging and you
17:39 - can stop your debugging now to explain
17:43 - the debugging in more details let me
17:46 - just uh add some more variables here so
17:48 - I'm going to write int a is equal to
17:52 - let's say five and then I'm going to
17:55 - once again declare our second variable
17:58 - which is B is equal to 10 for example
18:02 - right and then I want to print the sum
18:05 - of these two uh variables so I'm going
18:08 - to once again declare a variable called
18:10 - sum and then I'm going to just add these
18:13 - two numbers so A + B now in the next
18:17 - line I'm going to print the value of sum
18:20 - in the next line right so now uh the
18:25 - program is really simple you know what
18:27 - it's doing it's just adding two numbers
18:29 - and printing it right now in order to
18:32 - start the debugging let's set the break
18:34 - point at the line number six 7 8 and 10
18:39 - okay now let's start the debugging so
18:42 - I'm going to uh just click on this debug
18:45 - option which is going to start the
18:47 - debugging and then you can see the
18:49 - program execution stops at my first
18:52 - breakpoint which is at line number six
18:56 - now I want to step over to to the next
18:59 - breakpoint so I can click on the step
19:00 - over button when I click on the step
19:03 - over button you can see this variable a
19:06 - is assigned the value of five and our
19:09 - program execution stops at B at line
19:12 - number seven so so assignment of 10 to B
19:16 - variable is not yet finished so when we
19:18 - step over once again you can see B is
19:22 - assigned the value of 10 so this is how
19:25 - your program execution stops at
19:27 - different points now I can also click on
19:30 - the continue button which is going to
19:32 - stop at the next break point so when I
19:35 - click on continue you can see the
19:36 - program execution stops at the next
19:39 - break point and now the value of sum is
19:41 - displayed here you can also see the
19:45 - intelligence values here so a is equal
19:47 - to 5 b is equal to 10 sum is equal to 15
19:51 - a is equal to 5 b is equal to 10 so at
19:54 - every point you will also see this
19:56 - highlighted uh indication of each and
19:59 - every variables here once again I will
20:03 - just click on continue which is going to
20:07 - finish my uh execution
20:09 - right so when you debug your program you
20:12 - will be able to see the value of
20:14 - variables under the debug section this
20:17 - is the debug section now if you want to
20:20 - create a launch. Json file for your
20:24 - programs you can go to the debug section
20:27 - and then click on create a launch. Json
20:30 - file so when you click on the launch.
20:32 - Json file it's going to create this
20:35 - launch. Json file in your vs code folder
20:40 - so it's going to create a new folder
20:41 - called vscode and then under vs code you
20:45 - will see the launch. Json file where
20:48 - your launch configuration will be
20:51 - present this kind of launch
20:53 - configuration is useful when you are
20:55 - using some kind of Version Control with
20:57 - your code code so that when you commit
21:00 - and post your code to let's say GitHub
21:04 - the other developer can uh clone or pull
21:07 - that code and he will be able to have
21:10 - the same kind of configuration so once
21:12 - again when I go to the debug section now
21:16 - from here also I can click on this start
21:19 - debugging uh button and my debugging
21:23 - will start here again uh I can restart
21:26 - the debugging using this option and I
21:28 - can also stop the debugging I also have
21:31 - the hot code replace option so when I
21:33 - click on hot code replace it says cannot
21:37 - find any changes class for hot code
21:39 - replace so when you have some kind of
21:42 - changes it's going to help you now let
21:45 - me uh stop this debugging here you can
21:49 - also find the problems so let's say I
21:52 - just forgot this uh semicolon at line
21:56 - number 10 so let me save this program
21:58 - and then I'm going to run my program and
22:01 - it's going to show me the problem right
22:03 - so you can see under problem section it
22:06 - says that at line number 10 column 72 I
22:10 - have forgotten the semicolon so when you
22:16 - have some kind of syntax error in your
22:18 - code Visual Studio code is also going to
22:20 - show those problems and with the help of
22:23 - those hints you can solve your build
22:25 - errors also when you set the break point
22:27 - for debugging you will be able to see
22:30 - the list of all those break points here
22:33 - under the breakpoints uh section you can
22:36 - disable those break points from here so
22:39 - just uncheck these check boxes if you
22:41 - want to remove the break points you can
22:43 - just click on the cross icon here you
22:47 - can also toggle the active breakpoints
22:50 - so all the break points will be
22:52 - deactivated at once or you can uh just
22:56 - uh close these break points one by one
22:59 - you can also check these check boxes
23:01 - which are going to show you the uncaught
23:04 - exception and caught exceptions while
23:07 - you are debugging your code so this is
23:09 - also useful for that purpose so I think
23:12 - that's it for this video this is how you
23:14 - can set up the Java development
23:17 - environment with your Visual Studio code
23:20 - on your Mac operating system I hope
23:22 - you've enjoyed this video and I will see
23:24 - you in the next
23:25 - video

Cleaned transcript:

hey guys in this video I'm going to show you how you can set up the Java development environment with your Visual Studio code editor on your Mac operating system so let's get started and let's see how we can do it so you will need two things in order to set up the Java development environment with your Visual Studio code the first one is the obvious one you need to have Java jdk installed on your Mac operating system so let's see how we can install Java jdk so for that open your favorite browser and search for download Oracle Java on Mac and the first link which will appear here will be from oracle.com SL jaava Technologies for/ download I'm going to click on this link maybe I will also put this link in the description of this video so you can directly come to this website now at the time of making this video you can see Java 21 and Java 17 are available now what we are going to do is we are going to download the version Java 21 now when you scroll down a little you will see three sections for Linux Mac OS and windows we are going to click on the Mac version and then you will see uh different variants which you can download we are interested in downloading the DMG installer but here there are two variants of DMG installer also so if you are using M1 or M2 Mach then you need to select this one which is arm 64 DMG installer if you are using Intel backed Mac operating system then you need to choose the last uh one which is x64 DMG installer I am having having the M2 Chip on my Mac operating system so I'm going to choose the second option which is arm 64 DMG installer so I'm going to click on this link which is for the download of this DMG file you can see the download of this G DMG file has been started so it's not going to take much time to download just wait for the download to complete and once the download is complete you can see this DMG file is download Lo it so I can directly click on this DMG file here and let me minimize the browser and you will see this kind of window here in order to install Java jdk using this window you just need to click on this PKG file so I'm going to click on this PKG file which is going to start the installation process let me minimize this window also so this is the installer window we are going to just click on continue on the first window here and then it says this will take around 336 megabyte of space on your computer I'm okay with it so I'm going to click on install here and then I need to give my macbook's password so I'm going to provide the password here and then click on install software which is going to start the installation of Java jdk on my Mac operating system and in few seconds this window will appear which says install succeed so now I can close this window so basic installation of java has been done when I press on close it says do you want to move jdk installer to bin yes because the Java installation is finished we can move this uh DMG file to the bin so I'm going to just click on that and that file will be moved to the bin now Java jdk is installed on my Mac operating system now the next step in this process is to set the Java home so for that what we need to do we need to first of all find out where Java is installed on our Mac operating system so for that we are going to open the terminal so just click on this Spotlight icon and then search for terminal and then open the terminal from here so generally once you install Java jdk its location is for slash USR slash libexec for slash Java home so Java uncore home and then you need to give hyphen and then capital V and it's going to give you the version of java which you have installed so this is the version which we have installed which is Java 20 1.0.1 once we know the version of uh Java so now in The Next Step what we need to do is we need need to set or export the path of java home in our bash RC file or zshrc file now if you are using the newer version of Mac operating system most probably by default your Mac terminal is using zsh so we are going to set the Java home in the zshrc file now this zshrc file is located in your home folder so when you do PWD and when you open the terminal for the first time this is the home folder of your Mech operating system or for your particular user right and this dot zshrc is located in this directory so how to uh know that you can do LS space hyphen Al and then press enter and you will be able to see this kind of file which says do zshrc now if this file is not present you don't need to worry about it we will create a new zshrc file so if this file is present we will add our location to it if it's not present we will first create this file and then we are going to add our export now you can use any Editor to uh edit or create this file if this zshrc file is not there you can uh use this touch command and then write Dot zshrc and then press enter and it's going to create your dot zshrc file in my case it's already present so I'm not going to give this command the next command is using a text editor you need to open this file you can use Nano to open the dot zsh file or if you are the fan of text editor then you can use open also so just write open and then write do zshrc which is the name of this file and then press enter which is going to open this zsh file using the text editor let me make this uh text little bit bigger so you can see here so I already have one export here in your case if you have created this file for the first time you will not see any export here it will be blank what you need to do here is you need to copy and paste these two lines here I'm going to paste these two lines in the description of this video also so you can directly copy them and paste it into your terminal so the first command is export Java uncore home is equal to dollar and then this is the path which we have uh seen in in the terminal so we have used this path right user SL lib exact SL Java home space hyphen version and we got this version in my case right 21.0 one so here we have given the same path hyphen version and instead of this version you need to give the version which you see after giving this command so in my case the version is 21.0 point1 so I'm going to replace this version with 2.0.1 so let me just write 2.0.1 here and then in the next line you need to uh give this command which is export space path is equal to Dollar Java home/ bin colon dollar path right so these two lines you need to copy and paste and don't forget to change the version with the version which you have once you are done you can save this file so I'm going to just uh click on the file option and then click on Save which is going to save this shrc file and then I'm going to close this once this is closed you can verify that your changes are saved by just giving the same command once again is op space do zshrc and I can see that my changes are already there so I know that my changes are saved right once your changes are saved the next command you need to write here is this one so let me clear the terminal because uh it's full so after uh saving your export you just need to give this command command which is source and then give the name of your file which is zshrc and then press enter if you don't give this command then do zshrc will not load in the current terminal so if you don't give this command just close your terminal and then reopen the terminal once again okay so you can also do this so I'm going to just close this terminal and then uh quit from this terminal and then once again open the terminal and once the terminal is open I can check the Java home is set or Not by giving Echo command so I'm going to just give echo dollar Java uncore home and then press enter and it's going to give you the location of java home in my case it's uh Library SL Java SL Java virtual machine SL jdk 21. jdk contents slome okay so if you have followed all the step which I have shown you you will see this kind of output now once uh Java home is set and Java is installed we can also check the version of java so you can give this command which is Java space hyphen version and then press enter and it's going to give you the version of java which is 21.0 point1 in my case now once you have Java jtk installed I'm hoping that you already have installed Visual Studio code editor on your Mac operating system so once you have Java and visual studio code let's open the visual studio code editor and let's develop some Java code so what I'm going to do is I'm going to open the terminal first of all so let me open the terminal and using this terminal first of of all I want to create a directory where my Java programs will be saved and then we will open the same directory using the command line and then we are going to open the visual studio code so let's say I want to create this uh folder in my documents directory so I'm going to CD into the documents directory and here I'm going to create a directory to create a directory you can give this command mkd and then the name of the directory I'm going to name my directory as sample and then I'm going to CD into the sample directory here in the sample directory I want to open the visual studio code so I can type this command which is code space Dot and then press enter and it's going to open the sample directory in your Visual Studio code Now to create a new file you can uh press this button which is for creating the new file or you can click on file and then then click on new file so let's create a new file and I'm going to name this file as hello. Java and then press enter and as soon as I create this file Visual Studio code recognizes that I have created the Java file so it's going to suggest me to install the extension pack for Java so you can directly click on this uh install button or if you want to install the extension pack using the extensions section you can click on this section which says extension and then search for Java here and it's going to search for the extension pack for Java so the first uh result you will see here will be for extension pack for Java and it's from microsoft.com and it has been downloaded around 23 million times so it's an official package which you can install which will help you to develop Java on your Visual Studio code so I'm going to click on install here this package installs several different packages for example it's going to install the debugger for Java test runner for Java project management for Java Maven for Java so these are all the packages which are going to be installed when you click on the install extension pack for Java now here I'm going to just close these uh notification windows and then I will go to the Explorer once again I can close this uh also and then welcome window also I can close and once I have installed the extension pack for Java let's create some uh Java class and then we are going to run it so in your Java file when you type class and then when you click on the first option here so at every point when you type something Visual Studio code is going to show you the intelligence right so when I type class and then press on the first option it's going to create a hello class for me automatically right now inside this hello class I want to create the main method so if I type main here once again Visual Studio code is going to recognize that I want to create a main method so I'm going to just uh click on the first option here and it's going to create the main method for me now let's say I want to print hello world I can just type system.out do print line and then inside the parenthesis I can just type hello space World here okay so once I type hello world here let's save our program to save your code just press command s on your Mac operating system or you can just uh go here and then click on Save once your program is saved let's see how we can run it so the obvious option you will see here to run your program is this option which is for running your Java program you will also see uh these kind of uh highlighted run and debug options on top of your main method you can click one of them and it's going to run your program also or you can click on run section here at the top and you can start the debugging of your program or you can run your program without the debugging we are going to choose this option which is for run button so I'm going to click on this run button which is going to compile my program first and it's going to run this program and I can see the hello world is printed here so this is how you can run your program now if you want to debug your program you can uh just click on this run section and then click on start debugging but before debugging we need to set some break points so that our program execution stops at those break points so let's uh set the break point at line number six and then I'm going to press on run and then start debugging and my debugger will start and then you can see my program execution stops at the break point you will also see some buttons at the top so these are the few buttons you can use use to move into your uh code using continue button step over button step into button and then you can restart your debugging and you can stop your debugging now to explain the debugging in more details let me just uh add some more variables here so I'm going to write int a is equal to let's say five and then I'm going to once again declare our second variable which is B is equal to 10 for example right and then I want to print the sum of these two uh variables so I'm going to once again declare a variable called sum and then I'm going to just add these two numbers so A + B now in the next line I'm going to print the value of sum in the next line right so now uh the program is really simple you know what it's doing it's just adding two numbers and printing it right now in order to start the debugging let's set the break point at the line number six 7 8 and 10 okay now let's start the debugging so I'm going to uh just click on this debug option which is going to start the debugging and then you can see the program execution stops at my first breakpoint which is at line number six now I want to step over to to the next breakpoint so I can click on the step over button when I click on the step over button you can see this variable a is assigned the value of five and our program execution stops at B at line number seven so so assignment of 10 to B variable is not yet finished so when we step over once again you can see B is assigned the value of 10 so this is how your program execution stops at different points now I can also click on the continue button which is going to stop at the next break point so when I click on continue you can see the program execution stops at the next break point and now the value of sum is displayed here you can also see the intelligence values here so a is equal to 5 b is equal to 10 sum is equal to 15 a is equal to 5 b is equal to 10 so at every point you will also see this highlighted uh indication of each and every variables here once again I will just click on continue which is going to finish my uh execution right so when you debug your program you will be able to see the value of variables under the debug section this is the debug section now if you want to create a launch. Json file for your programs you can go to the debug section and then click on create a launch. Json file so when you click on the launch. Json file it's going to create this launch. Json file in your vs code folder so it's going to create a new folder called vscode and then under vs code you will see the launch. Json file where your launch configuration will be present this kind of launch configuration is useful when you are using some kind of Version Control with your code code so that when you commit and post your code to let's say GitHub the other developer can uh clone or pull that code and he will be able to have the same kind of configuration so once again when I go to the debug section now from here also I can click on this start debugging uh button and my debugging will start here again uh I can restart the debugging using this option and I can also stop the debugging I also have the hot code replace option so when I click on hot code replace it says cannot find any changes class for hot code replace so when you have some kind of changes it's going to help you now let me uh stop this debugging here you can also find the problems so let's say I just forgot this uh semicolon at line number 10 so let me save this program and then I'm going to run my program and it's going to show me the problem right so you can see under problem section it says that at line number 10 column 72 I have forgotten the semicolon so when you have some kind of syntax error in your code Visual Studio code is also going to show those problems and with the help of those hints you can solve your build errors also when you set the break point for debugging you will be able to see the list of all those break points here under the breakpoints uh section you can disable those break points from here so just uncheck these check boxes if you want to remove the break points you can just click on the cross icon here you can also toggle the active breakpoints so all the break points will be deactivated at once or you can uh just uh close these break points one by one you can also check these check boxes which are going to show you the uncaught exception and caught exceptions while you are debugging your code so this is also useful for that purpose so I think that's it for this video this is how you can set up the Java development environment with your Visual Studio code on your Mac operating system I hope you've enjoyed this video and I will see you in the next video
