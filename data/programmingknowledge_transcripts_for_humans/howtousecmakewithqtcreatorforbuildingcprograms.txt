With timestamps:

00:00 - hello guys welcome once again in this
00:03 - video I will show you how to install
00:06 - cmake on your Ubuntu operating system I
00:09 - will also show you how to um make use of
00:14 - cake and how to build your first C++
00:19 - program with cmake and QT Creator IDE so
00:25 - first of all let's see why cmake is
00:28 - important
00:30 - so when you go on uh the
00:33 - c.org
00:35 - uh the on the first page it's written
00:38 - that cake is uh the crossplatform open
00:43 - source build system so cross plateform
00:47 - is important for us because the program
00:52 - which you build from cake can be U used
00:58 - on different op operating system like
01:01 - Windows or Ubuntu or Mac or you can uh
01:07 - say and you can see the list of uh
01:12 - Distribution on which your uh program
01:16 - can be used so that's the important
01:20 - thing so whatever program for example
01:22 - C++ program you have built on Linux that
01:26 - can be used or reused on your Windows
01:32 - operating system it will generate the
01:34 - visual C++ uh project the same project
01:39 - in visual C++ in Windows so that's very
01:44 - interesting for us so first of all let's
01:47 - see how we can install cmake on our obti
01:52 - operating
01:53 - system so just
01:56 - open this
01:58 - terminal on uh your open to operating
02:01 - system and on the terminal you uh need
02:06 - to paste or you need to write
02:10 - this command so write pseudo apt minus
02:14 - get install cic it's very simple and
02:18 - give your
02:20 - password and it'll install in your
02:28 - system
02:34 - and I will say
02:58 - yes
03:05 - so now my cmake is installed in my
03:09 - system so once this cmake is installed
03:13 - in your system you you will be able to
03:16 - see in your file system so if you go to
03:21 - your file system and go to user bin in
03:24 - Ubuntu you will be able to see this
03:27 - cmake executable okay and now I will
03:32 - launch QT Creator so if you don't know
03:36 - how to install QT Creator on Ubuntu I
03:38 - also have the T tutorial on that so just
03:43 - you
03:44 - can search my channel and you can just
03:48 - install QT
03:50 - Creator
03:52 - so I will open this QT Creator
03:57 - first so my QT creator Creator is open
04:01 - now and I'm I will make
04:04 - a new project and build it with cmake so
04:10 - I will go to file new
04:13 - project and go to non QT project here
04:17 - non QT project and you can see
04:20 - automatically here there is a option
04:23 - plane C++ cmake build and plane C
04:28 - project C C build so I'm going to make a
04:32 - plain C++ cmake build because I'm going
04:36 - to use cmake so I will select this and I
04:38 - will choose and I will
04:41 - give the project
04:43 - name see
04:47 - make
04:49 - test and you can
04:51 - choose the default location for
04:56 - the project or you can
05:00 - just make a new
05:03 - workspace so I will make a new workspace
05:06 - for me
05:08 - [Music]
05:10 - QT
05:14 - workspace
05:15 - here
05:19 - and I will choose this workspace here
05:23 - for
05:24 - example and I will say
05:27 - next and
05:30 - I will say
05:31 - finish and now by default when you are
05:35 - making your project using cmake it makes
05:40 - a folder called your project name- build
05:44 - folder in which all your build or
05:48 - executable file will be there so your
05:51 - source code is in your project folder
05:54 - and in your build folder there will be
05:56 - executable files Okay so click next you
06:00 - don't need to do anything it will
06:03 - generate the build folder automatically
06:06 - so click next and here is the important
06:11 - step so whenever you are making uh this
06:17 - project for the first time you need to
06:19 - give the argument like this so like
06:23 - write minus DC make underscore build
06:28 - uncore
06:30 - type is equal to debug or release
06:33 - whatever you want okay and when you
06:37 - click this run
06:42 - Cake it will compile your
06:47 - project and if you don't see any
06:51 - red uh red wants here that means your
06:55 - cmake
06:57 - is working or is ready to work or
07:01 - otherwise in some cases you need to give
07:04 - the path of your cmake directory which I
07:08 - have shown you in the user bin folder
07:12 - right so go to the file system
07:15 - user and Bin and here you will be able
07:20 - to find the cmake if it asks for the
07:23 - path for cake then you need to give the
07:26 - path for the cake so it's very simple so
07:31 - our project is successfully made and we
07:34 - will say
07:37 - finish so when your first cmake program
07:41 - is built you will be able to see this
07:44 - cmake list. text which will be
07:47 - automatically generated and when you see
07:49 - here there are
07:51 - some arguments and some um
07:56 - cmake code here which is generated by
08:00 - default so this I will maybe explain in
08:04 - next videos this is a Hello World
08:06 - program so it says generated
08:09 - automatically I will just right click
08:12 - and say build and it will build my
08:17 - program without any error so this build
08:21 - is done by the cmake
08:26 - build that's important it's not using
08:29 - any other QT make qake build options
08:34 - it's using the cmake option and when I
08:38 - run the program it's
08:41 - running so in this way you can configure
08:44 - and install cake and write your first
08:46 - program first C++ program in your QT
08:51 - creator with cmake so I hope you have
08:54 - learned something new this time please
08:55 - wait comment and subscribe and bye for
08:58 - now

Cleaned transcript:

hello guys welcome once again in this video I will show you how to install cmake on your Ubuntu operating system I will also show you how to um make use of cake and how to build your first C++ program with cmake and QT Creator IDE so first of all let's see why cmake is important so when you go on uh the c.org uh the on the first page it's written that cake is uh the crossplatform open source build system so cross plateform is important for us because the program which you build from cake can be U used on different op operating system like Windows or Ubuntu or Mac or you can uh say and you can see the list of uh Distribution on which your uh program can be used so that's the important thing so whatever program for example C++ program you have built on Linux that can be used or reused on your Windows operating system it will generate the visual C++ uh project the same project in visual C++ in Windows so that's very interesting for us so first of all let's see how we can install cmake on our obti operating system so just open this terminal on uh your open to operating system and on the terminal you uh need to paste or you need to write this command so write pseudo apt minus get install cic it's very simple and give your password and it'll install in your system and I will say yes so now my cmake is installed in my system so once this cmake is installed in your system you you will be able to see in your file system so if you go to your file system and go to user bin in Ubuntu you will be able to see this cmake executable okay and now I will launch QT Creator so if you don't know how to install QT Creator on Ubuntu I also have the T tutorial on that so just you can search my channel and you can just install QT Creator so I will open this QT Creator first so my QT creator Creator is open now and I'm I will make a new project and build it with cmake so I will go to file new project and go to non QT project here non QT project and you can see automatically here there is a option plane C++ cmake build and plane C project C C build so I'm going to make a plain C++ cmake build because I'm going to use cmake so I will select this and I will choose and I will give the project name see make test and you can choose the default location for the project or you can just make a new workspace so I will make a new workspace for me QT workspace here and I will choose this workspace here for example and I will say next and I will say finish and now by default when you are making your project using cmake it makes a folder called your project name build folder in which all your build or executable file will be there so your source code is in your project folder and in your build folder there will be executable files Okay so click next you don't need to do anything it will generate the build folder automatically so click next and here is the important step so whenever you are making uh this project for the first time you need to give the argument like this so like write minus DC make underscore build uncore type is equal to debug or release whatever you want okay and when you click this run Cake it will compile your project and if you don't see any red uh red wants here that means your cmake is working or is ready to work or otherwise in some cases you need to give the path of your cmake directory which I have shown you in the user bin folder right so go to the file system user and Bin and here you will be able to find the cmake if it asks for the path for cake then you need to give the path for the cake so it's very simple so our project is successfully made and we will say finish so when your first cmake program is built you will be able to see this cmake list. text which will be automatically generated and when you see here there are some arguments and some um cmake code here which is generated by default so this I will maybe explain in next videos this is a Hello World program so it says generated automatically I will just right click and say build and it will build my program without any error so this build is done by the cmake build that's important it's not using any other QT make qake build options it's using the cmake option and when I run the program it's running so in this way you can configure and install cake and write your first program first C++ program in your QT creator with cmake so I hope you have learned something new this time please wait comment and subscribe and bye for now
