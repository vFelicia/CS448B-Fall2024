With timestamps:

00:00 - hey everyone we have already discussed
00:03 - the event handlers but we are left with
00:06 - the Tinker events let's discuss a few of
00:09 - them in brief
00:11 - so first up we have the button event
00:13 - when a mouse button is pressed with the
00:17 - mouse pointer over the widget
00:19 - we make use of this event then we have
00:23 - three parts of Wows the middle the right
00:27 - and left so accordingly we have button
00:30 - one button two and button three okay
00:32 - then we have motion we would be working
00:34 - with this motion event as an example we
00:37 - would see an example related to this
00:39 - event
00:40 - so we have B1 motion B2 motion and B3
00:42 - motion for the current position of X Y
00:45 - members and then we can have button
00:48 - release we can have double button we
00:51 - also have enter so enter is for telling
00:55 - that the mouse pointer has entered the
00:57 - widget we also have leave as a
00:59 - complementary to enter
01:02 - so the sleeve event would be used when
01:04 - the mouse pointer leaves the widget okay
01:07 - and then we have focus in on Focus out
01:10 - so focusing is to focus on a visit and
01:13 - focus out is to move to other widget
01:16 - move the focus to other widget okay then
01:20 - we have return we have key we have shift
01:23 - up and we have configure so these were
01:26 - the tincter events while understanding
01:29 - these event handlers
01:31 - we use the event key and this time we
01:35 - would use the motion event so let's
01:38 - write a program for it so let me tell
01:41 - you what I'd be doing so I would write a
01:44 - program for getting the current position
01:46 - of mouse on a widget only on a widget
01:49 - okay so let's do that so I'll write
01:54 - from thinker
01:58 - import Star
02:01 - then I'll have my window I'll write one
02:03 - equals TK
02:09 - the title I'll write win dot title
02:13 - brackets and let the title be event
02:16 - handling
02:21 - let the widget be canvas okay so I'll
02:24 - have C equals canvas
02:29 - and where do I want the canvas I want it
02:32 - on the window
02:33 - so I'll write twin comma background
02:35 - color equals pink
02:40 - and width Let It Be 500
02:44 - and height Let It Be 400.
02:48 - okay and uh now I'll use the bind
02:51 - function we discuss the bind function
02:53 - last time
02:54 - so why is to call the specified function
02:57 - whenever the specified event takes place
03:00 - now I would specify two
03:04 - arguments one would be the event and one
03:08 - would be the function so I need to make
03:09 - that function 2 but before that I'll
03:12 - write C dot bind
03:14 - and
03:16 - now let's define the function
03:19 - I'll also name the function as motion so
03:22 - I'll write def motion
03:27 - and
03:28 - I'll given the argument event we did
03:31 - this last time too
03:32 - because I want to check the event if the
03:35 - event has occurred and the related
03:38 - things to the event okay so I just want
03:42 - to check the current position of the
03:44 - cursor on the widget so I want to print
03:47 - that so I'll write print
03:51 - brackets f
03:53 - current position
03:55 - of cursor is in curly braces event dot X
04:02 - comma event dot y
04:05 - and I'll put this in a bracket
04:11 - so that would get me the current
04:14 - position of the cursor
04:16 - and about this F format this is a very
04:19 - basic way of getting values of variables
04:22 - within a string in Python so I hope you
04:24 - know about that and then I'll just
04:27 - simply write return
04:29 - in the function okay
04:32 - so I can get back to the main part and
04:35 - I'll give in the arguments
04:38 - I'll write
04:41 - within single inverted commas I'll write
04:44 - motion
04:47 - and I've also given the function to view
04:50 - motion okay that I just defined
04:53 - fine
04:55 - now I'll part this I'll write C dot pack
04:59 - and I'll run the main Loop
05:04 - okay
05:06 - so let's run this and let's see if we
05:09 - get the Mouse coordinates
05:14 - so I have the spring screen and whenever
05:18 - I move the cursor over it
05:21 - I get the positions of the cursor
05:25 - constantly and whenever it stops the
05:29 - output has stopped
05:31 - but if I increase this screen
05:38 - and you can see that
05:40 - outside this widget there is no such
05:44 - output scene but on this widget I can
05:48 - get the current position of the cursor
05:50 - cool
05:52 - so that's it about the event handling
05:55 - so we have covered a lot of tincter
05:58 - and the more you practice the more you
06:02 - get the concept clearer
06:03 - so in the next video we would be seeing
06:06 - some application of denter would help
06:08 - you implement all that you have learned
06:11 - thank you

Cleaned transcript:

hey everyone we have already discussed the event handlers but we are left with the Tinker events let's discuss a few of them in brief so first up we have the button event when a mouse button is pressed with the mouse pointer over the widget we make use of this event then we have three parts of Wows the middle the right and left so accordingly we have button one button two and button three okay then we have motion we would be working with this motion event as an example we would see an example related to this event so we have B1 motion B2 motion and B3 motion for the current position of X Y members and then we can have button release we can have double button we also have enter so enter is for telling that the mouse pointer has entered the widget we also have leave as a complementary to enter so the sleeve event would be used when the mouse pointer leaves the widget okay and then we have focus in on Focus out so focusing is to focus on a visit and focus out is to move to other widget move the focus to other widget okay then we have return we have key we have shift up and we have configure so these were the tincter events while understanding these event handlers we use the event key and this time we would use the motion event so let's write a program for it so let me tell you what I'd be doing so I would write a program for getting the current position of mouse on a widget only on a widget okay so let's do that so I'll write from thinker import Star then I'll have my window I'll write one equals TK the title I'll write win dot title brackets and let the title be event handling let the widget be canvas okay so I'll have C equals canvas and where do I want the canvas I want it on the window so I'll write twin comma background color equals pink and width Let It Be 500 and height Let It Be 400. okay and uh now I'll use the bind function we discuss the bind function last time so why is to call the specified function whenever the specified event takes place now I would specify two arguments one would be the event and one would be the function so I need to make that function 2 but before that I'll write C dot bind and now let's define the function I'll also name the function as motion so I'll write def motion and I'll given the argument event we did this last time too because I want to check the event if the event has occurred and the related things to the event okay so I just want to check the current position of the cursor on the widget so I want to print that so I'll write print brackets f current position of cursor is in curly braces event dot X comma event dot y and I'll put this in a bracket so that would get me the current position of the cursor and about this F format this is a very basic way of getting values of variables within a string in Python so I hope you know about that and then I'll just simply write return in the function okay so I can get back to the main part and I'll give in the arguments I'll write within single inverted commas I'll write motion and I've also given the function to view motion okay that I just defined fine now I'll part this I'll write C dot pack and I'll run the main Loop okay so let's run this and let's see if we get the Mouse coordinates so I have the spring screen and whenever I move the cursor over it I get the positions of the cursor constantly and whenever it stops the output has stopped but if I increase this screen and you can see that outside this widget there is no such output scene but on this widget I can get the current position of the cursor cool so that's it about the event handling so we have covered a lot of tincter and the more you practice the more you get the concept clearer so in the next video we would be seeing some application of denter would help you implement all that you have learned thank you
