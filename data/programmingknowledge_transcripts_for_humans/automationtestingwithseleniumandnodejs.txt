With timestamps:

00:00 - hi everyone and welcome to the first
00:02 - video of the series on automation
00:04 - testing using selenium in this video we
00:08 - are going to look into how you can use
00:09 - javascript nodejs
00:11 - and selenium to automate your web
00:14 - testing we are going to run these tests
00:16 - on both local browsers such as Firefox
00:18 - and Chrome and we are going to run them
00:21 - on lamb it is selenium Brady for those
00:24 - of you who have heard about lamby test
00:26 - first and it's a massive on clouds
00:29 - selenium automation grid then as
00:31 - thousands of browsers and browser
00:32 - environments connected as nodes and hubs
00:35 - and which you can use to perform your
00:38 - automation their scripts on multiple
00:40 - browsers that you won't have access to
00:42 - so not only you get to increase your
00:45 - disk coverage you can also cut down on
00:48 - your test execution time by running your
00:51 - tests on parallel on lamb it is grid so
00:55 - with that said in this video we are
00:58 - going to look into how to install and
01:01 - download nodejs then we are going to
01:03 - start with downloading selenium using
01:05 - NPM as node package manager and we are
01:09 - also going to download and install other
01:11 - dependencies such as chrome driver and
01:13 - Firefox gecko driver that we are going
01:15 - to use to run your test then we are
01:17 - going to write the first piece of code
01:20 - that you can that will automate a simple
01:22 - logic and then we are going to run that
01:25 - on the slab with the selenium grid as
01:26 - well but before we start I want to clear
01:31 - out a few points in this video I'm not
01:33 - going to go into detail about selenium
01:36 - or about JavaScript and node.js I'm
01:39 - going to understand that you guys are
01:45 - familiar with concepts a douse to
01:47 - conscious such as modules Dom so we will
01:50 - set cetera if you want to understand
01:53 - more about node.js or JavaScript there's
01:57 - another video in the same child name
02:00 - node yes tutorial for beginners you can
02:04 - check it out and start from there all
02:09 - right but that said the first step
02:12 - is to download and install node so you
02:15 - can download the latest node from
02:18 - node.js arc they have multiple different
02:23 - downloaders based on the operating
02:25 - system so I'm using Windows I'm going to
02:28 - download the 64-bit so in my system I
02:33 - already have node installed but if you
02:37 - want to check if you have not installed
02:39 - or not all you have to do is open on
02:41 - command prompt type in a command node
02:44 - space - we and it will return the
02:47 - version of node.js that is installed on
02:50 - the system so I have the latest version
02:52 - as you can see here so the next step is
02:57 - to download and install selenium we are
03:01 - going to install it in D Drive
03:03 - automation that I already have a folder
03:05 - in this folder I have already created a
03:07 - few tests before so as you can see there
03:10 - is nothing related the selenium here or
03:12 - no deal so we are going to use node
03:14 - package manager of NPM space and these
03:23 - selenium webdriver NPM will fix the
03:30 - dependencies required to use selenium
03:32 - webdriver from Internet and going and
03:36 - it's going to populate it in my folder
03:38 - so it has added all the node modules
03:42 - that I may need to run selenium along
03:44 - with obviously selenium webdriver module
03:47 - it also created a package flock JSON
03:50 - file it is it gets created whenever you
03:53 - make a change in node package using NPM
03:59 - so now when when we have node and
04:04 - selenium with us we are also going to
04:07 - need web drivers that can help us so run
04:13 - the test so the first step is we are
04:15 - going to download Chrome web browser you
04:17 - can download from chromium.org chrome
04:21 - driver or chromium dot ODS download I am
04:23 - going to include
04:25 - links all these links for node and
04:28 - chromium as well in the description
04:29 - below you can check it out let's click
04:33 - on download I'm using Windows so windows
04:38 - it's going to create it zip file
04:44 - extracting the folder determining test
04:47 - extract here I don't need the zip file
04:50 - when I delete it
04:51 - alright so we have the Chrome web
04:53 - drivers now we also need Firefox web
04:57 - browser or gecko driver has called so
05:00 - it's a github repository you know I need
05:05 - a windows I use Windows 64 so download
05:10 - it show in folder
05:16 - extracted as well all right so I have
05:21 - all the requirements that I'm going to
05:24 - need to run the test
05:26 - I have selenium modules I have chrome
05:29 - driver I have get your driver and I was
05:31 - you know to install as well so let's
05:33 - look at the first program so this is a
05:36 - very simple code that is going to invoke
05:39 - a browser using selenium it would invoke
05:44 - Chrome browser we are going to open up a
05:48 - website Lambeth acecomm and then we are
05:51 - going to find a link that has the text
05:53 - as automation and then we are going to
05:56 - click that link and open up the page so
05:58 - once that page opens up we are going to
06:00 - use the we are going to fetch the title
06:04 - of that page and displayed on the
06:06 - console so let me give a little bit in
06:10 - detail here so we start off by invoking
06:13 - selenium webdriver modules so this is
06:15 - the line that creates a red rubber
06:18 - object and invokes the selenium
06:20 - webdriver module then we are going to
06:22 - use the same to create a new driver
06:25 - module as well driver object as well and
06:27 - this is going to the Builder it's going
06:30 - to build for browser Chrome so if I
06:33 - change it from Chrome to Firefox it's
06:36 - going to use gecko driver and run the
06:38 - same test on Firefox let's these are the
06:46 - elements of the driver object get it was
06:51 - going to fit the website using this
06:53 - function and there is all
06:55 - now when that website is open up we are
06:57 - going to use another function that is
06:58 - going to find the element and we that
07:01 - element is fine using League disks so
07:03 - there are multiple ways that so you can
07:08 - use to find an element you can find an
07:10 - element by ID you can find an element by
07:12 - XPath CSS selectors there are n number
07:16 - of ways that you can find an element
07:18 - based on your requirement you can know
07:21 - more about which how these elements work
07:23 - at node GS at selenium module
07:29 - documentation I'm going to include the
07:32 - link for this as well right these are
07:38 - all here web element for example there's
07:44 - a find element promise you can learn
07:47 - more about it their locator Phi function
07:51 - okay you can learn more about here so
07:55 - this is a simple test that going to open
07:58 - up my Chrome browser open up lamda test
08:01 - find a link that has text as automation
08:04 - open up that link and then face the
08:07 - title of the page that opens up that's
08:11 - it let's end the program I have saved it
08:15 - now here's how you can use the command
08:19 - given to prove it's no space the name of
08:22 - the javascript file is for this - don't
08:26 - GS
08:30 - a la ed open said land appear calm let's
08:35 - give them unto me she does open up this
08:37 - website and it quits and it has returned
08:43 - said and in great for this is them this
08:49 - is the title of the beach so I also want
08:54 - to highlight the driver a quick
08:56 - statement here this statements tells the
08:59 - browser that the functions has been
09:01 - performed and now you have to you have
09:03 - to quit and close the browser that's it
09:08 - so now we are going to run the same test
09:10 - on Firefox so as I said before the
09:13 - simple step is to change the Chrome to
09:18 - Firefox in we are using the web browser
09:22 - module and the web driver is going to
09:24 - build a new Firefox browser and it's
09:27 - going to run the same test come on again
09:31 - would be same node node and this code
09:35 - test to touch a s and voila
09:40 - instead of Chrome it's open up Firefox
09:44 - open up automation and it has put in the
09:53 - title of the page easy right
09:59 - well simple so it's all about the right
10:04 - process that you want to use what you
10:06 - want to test what functions that you
10:09 - want to invoke what elements that you
10:13 - want to find and what elements that you
10:15 - want to run that that you want to
10:17 - perform functions on so that way you can
10:19 - automate each and every step of your
10:23 - website testing process by process code
10:25 - by code you can run that same code on
10:28 - Firefox Chrome Safari Internet Explorer
10:32 - edge any browser that you may want to so
10:37 - as I said earlier that we are also going
10:40 - to run the same test on lambda the
10:42 - selenium great
10:43 - so lattices selenium grid is an online
10:47 - repository of browsers and browser
10:49 - machines that you can use to run your
10:51 - tests on browsers and operating systems
10:53 - that you don't have access to for
10:55 - example as I'm using a Windows machine I
10:59 - don't have access to a Mac machine
11:01 - animal Safari browser so if I want to
11:03 - run that test on I don't have access to
11:06 - it here similarly for example my chrome
11:10 - here is the latest version 72 so if
11:15 - first of all suppose my user of my
11:18 - client has a problem in for example
11:22 - chrome 62 I would have to first
11:24 - downgrade it or I would have to first
11:27 - uninstall the chrome reinstall the
11:28 - chrome so it's a lot of cross and hassle
11:30 - so instead I can use lambda2 selenium
11:34 - grid itself and run a test on that
11:37 - version that I want on so I do not need
11:40 - to download any chrome anywhere and I
11:42 - just need to run the test runs number
11:44 - two staining wait I also have a written
11:47 - code for this here so the difference
11:49 - between running on your local system I'm
11:53 - running on lambdas grid is the instead
11:56 - of building up a new travel we are going
12:00 - to build up we're going to put in this
12:02 - test on a greater guard so we are going
12:06 - to invoke and remote webdriver and run
12:09 - the test on that remote webdriver right
12:13 - so again the link this code is available
12:17 - on our github repository whose link I
12:19 - will include in the description below as
12:20 - well wait so I'm going to start with a
12:26 - simple concept called giving me tea
12:31 - generator so how will the selenium know
12:35 - which browser they after use which
12:37 - operating system that they have to use
12:39 - to run this test on when there are
12:41 - thousands of different parameters
12:42 - available so this tools help me to
12:47 - create a capability generator that we
12:49 - are going to pass on to selenium remote
12:50 - webdriver
12:51 - that is going to use this capability
12:53 - generator and run that code on the
12:57 - desire
12:57 - or burn resistant and browser version so
13:00 - for example I'm going to use Chrome I
13:02 - want to do it on this just on Chrome 62
13:05 - and face of that it has created my list
13:09 - of capability so I can copy paste this
13:11 - listen capabilities on my code itself so
13:16 - instead of I've already written here I'm
13:18 - going to use Chrome 62 so there are
13:21 - other parameters that we can use to
13:24 - filter down or manage our tests as well
13:28 - for example we can give a test name we
13:30 - can give a bill name there are many
13:32 - other features as well that you can use
13:35 - here for example you can make network
13:39 - logs as true this will show the console
13:42 - logs as well if you are going to if you
13:44 - want test locally hosted pages you can
13:46 - use the lambda functionality as well and
13:49 - that you can configure it you can also
13:52 - select the selenium version and you can
13:55 - take the screenshots at different
13:57 - parameters if you want you can record
13:59 - the video or you can toggle the
14:01 - recording of the video so they have many
14:03 - different functions here so one of the
14:08 - key things here is to find out is to run
14:11 - the test on a grid URL so that creative
14:14 - order is a mixture of your username API
14:18 - authentication key and the grid URL name
14:21 - so all these are we have defined here as
14:23 - variables so my username is mother this
14:30 - the access key is here that I've copied
14:32 - from here and I'm going to paste axis
14:36 - Keeney right the URL is already here you
14:43 - can find it on the support page as well
14:46 - so this is a little different code here
14:48 - I'm going to open up Google NCR it's
14:53 - going to find element by the name cube
14:58 - and it's going to enter lambda test in
15:01 - the in that element so if you don't know
15:05 - about Google so in google.com once you
15:10 - open up
15:11 - the search browser search tab is named
15:16 - as queue it's a standard and every time
15:19 - a Google sub the name would be same
15:21 - everything else may change but the name
15:23 - would be the same it's a you can say
15:27 - then millions given by Google for
15:30 - testers like us again it has a quite
15:35 - broad driver statement it has and I'm
15:39 - going to open up google.com search Lamba
15:42 - test and that search far whence the
15:45 - search page opens up I'm going to fetch
15:47 - the title as well alright I'm going to
15:51 - save it
15:54 - I'm going to run this so I'm going to
15:56 - change the name have to change this demo
16:00 - video put between the name else no
16:03 - cheers build from free save it and I'm
16:10 - going to run it so the name is so again
16:14 - the command would be node and big star G
16:18 - s
16:21 - instead of writing this Arkham this code
16:26 - on the local system it's going to run
16:28 - this code on lambda this selenium grid
16:31 - here let me refresh here so this is the
16:41 - new R and this is all Bill is running as
16:45 - you can see it's a demo video you can
16:51 - watch it live here as well open up the
17:00 - chrome 62 opens up google.com types in
17:06 - the command lambda test opens up a
17:10 - search result and then returns the title
17:14 - of the page that is lambda test through
17:16 - good search so if I go over here at
17:19 - Google search lambda text it will give
17:24 - back the search result the title of the
17:26 - page as lambda test Google search as it
17:30 - by the code here so with a simple piece
17:34 - of code you can make sure that your
17:36 - website works perfectly across all
17:39 - browsers and operating systems so I
17:42 - didn't have I'm using Windows 7 and I
17:45 - ran that test on Windows 10 krob 62 I
17:49 - don't have access to this bronze will of
17:51 - me and I was able to connect
17:52 - successfully on a meter scale so
17:55 - similarly you can run this on Firefox as
17:58 - well the old version of 5
18:04 - the same piece of code will work there
18:06 - have included the github repository link
18:09 - for this piece of curve in the
18:11 - description below as well do check it
18:14 - out and if you have any issues leave the
18:18 - comments below so that's it from my side
18:21 - right now I'm going to work on more
18:23 - videos around selenium in Noches so be
18:27 - sure to subscribe to the channel and we
18:30 - will see again

Cleaned transcript:

hi everyone and welcome to the first video of the series on automation testing using selenium in this video we are going to look into how you can use javascript nodejs and selenium to automate your web testing we are going to run these tests on both local browsers such as Firefox and Chrome and we are going to run them on lamb it is selenium Brady for those of you who have heard about lamby test first and it's a massive on clouds selenium automation grid then as thousands of browsers and browser environments connected as nodes and hubs and which you can use to perform your automation their scripts on multiple browsers that you won't have access to so not only you get to increase your disk coverage you can also cut down on your test execution time by running your tests on parallel on lamb it is grid so with that said in this video we are going to look into how to install and download nodejs then we are going to start with downloading selenium using NPM as node package manager and we are also going to download and install other dependencies such as chrome driver and Firefox gecko driver that we are going to use to run your test then we are going to write the first piece of code that you can that will automate a simple logic and then we are going to run that on the slab with the selenium grid as well but before we start I want to clear out a few points in this video I'm not going to go into detail about selenium or about JavaScript and node.js I'm going to understand that you guys are familiar with concepts a douse to conscious such as modules Dom so we will set cetera if you want to understand more about node.js or JavaScript there's another video in the same child name node yes tutorial for beginners you can check it out and start from there all right but that said the first step is to download and install node so you can download the latest node from node.js arc they have multiple different downloaders based on the operating system so I'm using Windows I'm going to download the 64bit so in my system I already have node installed but if you want to check if you have not installed or not all you have to do is open on command prompt type in a command node space we and it will return the version of node.js that is installed on the system so I have the latest version as you can see here so the next step is to download and install selenium we are going to install it in D Drive automation that I already have a folder in this folder I have already created a few tests before so as you can see there is nothing related the selenium here or no deal so we are going to use node package manager of NPM space and these selenium webdriver NPM will fix the dependencies required to use selenium webdriver from Internet and going and it's going to populate it in my folder so it has added all the node modules that I may need to run selenium along with obviously selenium webdriver module it also created a package flock JSON file it is it gets created whenever you make a change in node package using NPM so now when when we have node and selenium with us we are also going to need web drivers that can help us so run the test so the first step is we are going to download Chrome web browser you can download from chromium.org chrome driver or chromium dot ODS download I am going to include links all these links for node and chromium as well in the description below you can check it out let's click on download I'm using Windows so windows it's going to create it zip file extracting the folder determining test extract here I don't need the zip file when I delete it alright so we have the Chrome web drivers now we also need Firefox web browser or gecko driver has called so it's a github repository you know I need a windows I use Windows 64 so download it show in folder extracted as well all right so I have all the requirements that I'm going to need to run the test I have selenium modules I have chrome driver I have get your driver and I was you know to install as well so let's look at the first program so this is a very simple code that is going to invoke a browser using selenium it would invoke Chrome browser we are going to open up a website Lambeth acecomm and then we are going to find a link that has the text as automation and then we are going to click that link and open up the page so once that page opens up we are going to use the we are going to fetch the title of that page and displayed on the console so let me give a little bit in detail here so we start off by invoking selenium webdriver modules so this is the line that creates a red rubber object and invokes the selenium webdriver module then we are going to use the same to create a new driver module as well driver object as well and this is going to the Builder it's going to build for browser Chrome so if I change it from Chrome to Firefox it's going to use gecko driver and run the same test on Firefox let's these are the elements of the driver object get it was going to fit the website using this function and there is all now when that website is open up we are going to use another function that is going to find the element and we that element is fine using League disks so there are multiple ways that so you can use to find an element you can find an element by ID you can find an element by XPath CSS selectors there are n number of ways that you can find an element based on your requirement you can know more about which how these elements work at node GS at selenium module documentation I'm going to include the link for this as well right these are all here web element for example there's a find element promise you can learn more about it their locator Phi function okay you can learn more about here so this is a simple test that going to open up my Chrome browser open up lamda test find a link that has text as automation open up that link and then face the title of the page that opens up that's it let's end the program I have saved it now here's how you can use the command given to prove it's no space the name of the javascript file is for this don't GS a la ed open said land appear calm let's give them unto me she does open up this website and it quits and it has returned said and in great for this is them this is the title of the beach so I also want to highlight the driver a quick statement here this statements tells the browser that the functions has been performed and now you have to you have to quit and close the browser that's it so now we are going to run the same test on Firefox so as I said before the simple step is to change the Chrome to Firefox in we are using the web browser module and the web driver is going to build a new Firefox browser and it's going to run the same test come on again would be same node node and this code test to touch a s and voila instead of Chrome it's open up Firefox open up automation and it has put in the title of the page easy right well simple so it's all about the right process that you want to use what you want to test what functions that you want to invoke what elements that you want to find and what elements that you want to run that that you want to perform functions on so that way you can automate each and every step of your website testing process by process code by code you can run that same code on Firefox Chrome Safari Internet Explorer edge any browser that you may want to so as I said earlier that we are also going to run the same test on lambda the selenium great so lattices selenium grid is an online repository of browsers and browser machines that you can use to run your tests on browsers and operating systems that you don't have access to for example as I'm using a Windows machine I don't have access to a Mac machine animal Safari browser so if I want to run that test on I don't have access to it here similarly for example my chrome here is the latest version 72 so if first of all suppose my user of my client has a problem in for example chrome 62 I would have to first downgrade it or I would have to first uninstall the chrome reinstall the chrome so it's a lot of cross and hassle so instead I can use lambda2 selenium grid itself and run a test on that version that I want on so I do not need to download any chrome anywhere and I just need to run the test runs number two staining wait I also have a written code for this here so the difference between running on your local system I'm running on lambdas grid is the instead of building up a new travel we are going to build up we're going to put in this test on a greater guard so we are going to invoke and remote webdriver and run the test on that remote webdriver right so again the link this code is available on our github repository whose link I will include in the description below as well wait so I'm going to start with a simple concept called giving me tea generator so how will the selenium know which browser they after use which operating system that they have to use to run this test on when there are thousands of different parameters available so this tools help me to create a capability generator that we are going to pass on to selenium remote webdriver that is going to use this capability generator and run that code on the desire or burn resistant and browser version so for example I'm going to use Chrome I want to do it on this just on Chrome 62 and face of that it has created my list of capability so I can copy paste this listen capabilities on my code itself so instead of I've already written here I'm going to use Chrome 62 so there are other parameters that we can use to filter down or manage our tests as well for example we can give a test name we can give a bill name there are many other features as well that you can use here for example you can make network logs as true this will show the console logs as well if you are going to if you want test locally hosted pages you can use the lambda functionality as well and that you can configure it you can also select the selenium version and you can take the screenshots at different parameters if you want you can record the video or you can toggle the recording of the video so they have many different functions here so one of the key things here is to find out is to run the test on a grid URL so that creative order is a mixture of your username API authentication key and the grid URL name so all these are we have defined here as variables so my username is mother this the access key is here that I've copied from here and I'm going to paste axis Keeney right the URL is already here you can find it on the support page as well so this is a little different code here I'm going to open up Google NCR it's going to find element by the name cube and it's going to enter lambda test in the in that element so if you don't know about Google so in google.com once you open up the search browser search tab is named as queue it's a standard and every time a Google sub the name would be same everything else may change but the name would be the same it's a you can say then millions given by Google for testers like us again it has a quite broad driver statement it has and I'm going to open up google.com search Lamba test and that search far whence the search page opens up I'm going to fetch the title as well alright I'm going to save it I'm going to run this so I'm going to change the name have to change this demo video put between the name else no cheers build from free save it and I'm going to run it so the name is so again the command would be node and big star G s instead of writing this Arkham this code on the local system it's going to run this code on lambda this selenium grid here let me refresh here so this is the new R and this is all Bill is running as you can see it's a demo video you can watch it live here as well open up the chrome 62 opens up google.com types in the command lambda test opens up a search result and then returns the title of the page that is lambda test through good search so if I go over here at Google search lambda text it will give back the search result the title of the page as lambda test Google search as it by the code here so with a simple piece of code you can make sure that your website works perfectly across all browsers and operating systems so I didn't have I'm using Windows 7 and I ran that test on Windows 10 krob 62 I don't have access to this bronze will of me and I was able to connect successfully on a meter scale so similarly you can run this on Firefox as well the old version of 5 the same piece of code will work there have included the github repository link for this piece of curve in the description below as well do check it out and if you have any issues leave the comments below so that's it from my side right now I'm going to work on more videos around selenium in Noches so be sure to subscribe to the channel and we will see again
