With timestamps:

00:00 - hello guys in this video I'm going to
00:02 - show you how to use if statement in C in
00:06 - addition I will also show you what is a
00:09 - comparison operator and what is a
00:12 - logical operator so let's get started
00:16 - what I have in my code here is I have
00:20 - declared two integers integer one and
00:23 - integer two and I'm telling or I'm
00:26 - asking the user to enter these two
00:29 - numbers as we have done in the last code
00:32 - so we are saying console. right enter
00:34 - the first number and this line will
00:37 - expect the user to enter the number in
00:40 - the same way we are telling the user to
00:43 - enter the second number and on the basis
00:46 - of those two numbers we want to show
00:49 - some message if the number one is
00:53 - greater than number two or number two is
00:56 - greater than number one so what can we
00:59 - can do is we can use if statement for
01:03 - that and what is a if statement if
01:07 - statement is nothing but a conditional
01:09 - statement which Tech checks the
01:12 - condition so let's see how we can uh use
01:16 - if statement in C to declare if
01:19 - statement you just need if here and then
01:22 - you need
01:25 - this here these brackets here and inside
01:29 - these brackets comes
01:31 - the condition
01:35 - but here also you need to give these
01:39 - two curly braces in order to give uh
01:43 - complete the condition so this will hold
01:46 - the condition and this will uh in these
01:49 - brackets you will write the if the
01:52 - condition is true whatever you want to
01:54 - do or whatever code you want to perform
01:57 - if the condition is true will come here
02:02 - so these conditions can be logical or
02:06 - these conditions can be comparison so
02:10 - right now we want to use comparison
02:13 - operators to compare number one and
02:16 - number two so let's see what options we
02:19 - have to compare the two values so we
02:23 - have something called comparison
02:25 - operator and basically we have these
02:30 - six basic comparison operator Which is
02:33 - less than greater than less than and
02:38 - equal to greater than and equal to and
02:42 - equal to and not equal to these are the
02:45 - sixth comparison operator we
02:48 - have and notice that this equal to
02:52 - whenever you use with this less than or
02:54 - greater than sign this equal to comes
02:57 - always after this uh this less than or
03:01 - greater than it doesn't come before this
03:04 - uh greater than or less than okay so
03:06 - let's uh use this greater than and less
03:09 - than comparison
03:11 - operator so
03:13 - if num
03:16 - one is less than
03:20 - num
03:22 - two we want to show the message and what
03:25 - message we want to show we want to show
03:28 - the message that
03:33 - num one is less than
03:40 - num two okay so if number one is less
03:46 - than number two we are going to show
03:48 - this message number one is less than
03:50 - number two and if the number one is
03:54 - greater than number two we can just copy
03:57 - this and paste it here and we can say if
04:00 - number one one is greater than number
04:03 - two then we can
04:06 - say greater than number two and now when
04:10 - we run the
04:12 - program and the program ask us to enter
04:15 - two values I will enter two values 35
04:19 - and 46 for
04:22 - example and it says number one is less
04:26 - than number two which is true right
04:29 - number one is 35 and number two is 46
04:31 - number one is less than two so what this
04:34 - code is doing it's checking the
04:37 - condition if the number one is less than
04:39 - number two then it prints this value but
04:43 - in the second case number one we have
04:45 - provided the condition number one is
04:47 - greater than two true two and this
04:51 - condition was not satisfied that's why
04:55 - this line was not printed so if and only
04:58 - if the condition is satisfied which is
05:00 - there in the bracket then only the code
05:04 - inside these curly braces will be
05:06 - executed otherwise this code will not be
05:10 - executed
05:12 - now we have seen that we have enter two
05:15 - numbers number one and number two and if
05:19 - this condition is true obviously this
05:22 - condition will not be true but your C
05:25 - program will is going to execute this
05:28 - also and check
05:30 - whether this is true or not and this is
05:33 - slightly in inefficient because if this
05:36 - condition is uh true why this code is
05:41 - executed if this condition is even not
05:44 - true so what we can do here is we can
05:48 - use a statement
05:51 - like else statement with
05:55 - if so when you
05:58 - write else statement with if then what
06:03 - will what it will do is first of all
06:06 - let's see this SSE statement
06:09 - okay so what this code is going to do
06:14 - here else by the way doesn't take any
06:17 - condition because it's the consequence
06:21 - if this is not true then what should
06:24 - happen this else will come here so if
06:28 - this is not true this is true if number
06:32 - one is less than number two then this
06:35 - condition will not be executed otherwise
06:38 - if number one is less than number
06:41 - number I'm sorry if number one is
06:45 - greater than number two then this
06:48 - condition will be executed otherwise
06:51 - this condition will not be executed if
06:54 - there is no need to perform this
06:56 - condition so let's see what happens
07:00 - let's run the program and this time we
07:03 - will provide number one will be number
07:07 - will be greater than number two 36 for
07:10 - example and now it says number one is
07:13 - greater than number two which is the
07:17 - else statement condition which is this
07:20 - condition
07:21 - right so in this way you
07:26 - can perform this if else
07:30 - statement there is one more condition
07:33 - called else if which you can use it like
07:37 - this so you can
07:42 - use else
07:46 - if
07:48 - number
07:50 - one equal
07:53 - to number
07:56 - two then we want to perform
07:59 - some or when we want to print some
08:03 - message for example okay so what we can
08:06 - do is we can here print number
08:12 - one
08:14 - is equal to number two
08:19 - okay
08:21 - so this is if else condition else if
08:25 - condition so what is the sequence of
08:29 - program will be first your program will
08:33 - check if this is true or
08:35 - not if this condition is not true then
08:39 - it will go to this condition and checks
08:42 - whether this condition is true or not
08:44 - else it will throw this message right so
08:50 - let's try and run the
08:52 - program and this time we will give two
08:55 - equal values 3 434
08:59 - and this says number one is equal to
09:02 - number two so this sequence will be
09:05 - followed first this condition will be
09:08 - checked and if this condition is not
09:11 - true then only will the the program will
09:14 - go to this code and if this condition is
09:18 - not true then only this code is executed
09:22 - so that's the use of
09:24 - else if the condition is not true then
09:27 - it will not be executed
09:30 - okay now there is one more uh thing you
09:35 - can do in if condition which are called
09:38 - logical
09:39 - operations and there are mainly two kind
09:42 - two kinds of logical operator one is or
09:47 - operator and one is and operator so or
09:51 - or operator will be used by writing
09:55 - these two pipe symbols and and operator
09:59 - will be used by writing these two and
10:02 - the
10:03 - symbol okay and let's see how we can use
10:06 - it use them so right now we have given
10:11 - this condition if number one is less
10:13 - than number two then we want to print
10:16 - the value but for example we want to
10:21 - check
10:25 - whether number one is less than number
10:28 - two
10:30 - and and
10:33 - what number
10:37 - one is equal to 20 right and we
10:43 - will write the message and
10:47 - num
10:48 - one is 20 okay so we want to check
10:54 - whether number one is less than number
10:56 - two and we also want to check
10:59 - whether number one is equal to 20 then
11:02 - only we want to print this message so
11:06 - let's try and run the
11:08 - program first of all let's give number
11:12 - one is equal to 20 number two is equal
11:14 - to 13 and it says number one is greater
11:20 - than number
11:21 - two which is true right this condition
11:25 - is uh met here now in order
11:30 - to uh satisfy this condition let's try
11:33 - and run the program once again we will
11:35 - give
11:36 - 20
11:38 - and we will give
11:42 - 36 and press enter and now it says
11:45 - number one is less than number two which
11:48 - is true and number one is 20 right
11:52 - so when we use and symbol your program
11:57 - or this condition is to be has to be
12:00 - true and this condition also has to be
12:03 - true so both conditions has to be true
12:06 - when we use this and
12:09 - symbol and if you
12:11 - want if we write this pipe
12:15 - here double pipe
12:18 - then your program will check either this
12:21 - is true or this is true either one of
12:24 - the condition is true then it will print
12:26 - this then it will print this message
12:29 - okay so here you can write R and run the
12:35 - program and once again we will
12:38 - write
12:41 - 34
12:42 - 45
12:44 - okay and it shows the message number one
12:48 - is less than number two or one is number
12:53 - one is 20 so note that this condition is
12:57 - not satisfied here but only this
13:00 - condition is satisfied then also it's
13:02 - showing this message that
13:05 - means this symbol means either this is
13:08 - true or this is true okay if any one
13:11 - condition is true then this will be your
13:14 - program or your condition will be
13:17 - executed now there is two ways of using
13:22 - or and end with these two pipes and with
13:27 - a single pipe also you can use this if
13:29 - conditions but when you use this single
13:33 - pipe what will happen
13:34 - is your program will come here and check
13:38 - this condition and if this condition
13:42 - is even true it will go to this
13:45 - condition to check if this condition is
13:47 - true or
13:48 - not and if if this condition is not true
13:52 - then also it will go to this condition
13:54 - to check whether it's not true true or
13:57 - not so it's it will do its whole cycle
14:04 - it will check this condition this
14:05 - condition or and whatever condition you
14:08 - will give and what these two pipe when
14:12 - you give these two pipe this what what
14:15 - what this will do is your program will
14:18 - come here it will check this condition
14:21 - and if it's true it does it will not
14:23 - care about this this condition and it
14:26 - will directly come here and it will
14:28 - directly print this
14:29 - message so using these two Pi symbol is
14:33 - more efficient because I if one
14:37 - condition is true your message will will
14:39 - be printed and this will not be executed
14:43 - so it will save your time if it will
14:48 - save your time if your program is time
14:51 - critical program right so same thing you
14:55 - can do it with these and symbols also
14:59 - you can use one symbol and the concept
15:02 - will be same
15:04 - okay so in this way you can use if else
15:08 - conditions and logical operators and
15:11 - comparison operators in C I hope you
15:14 - have enjoyed this video please wait
15:16 - comment and subscribe and bye for now

Cleaned transcript:

hello guys in this video I'm going to show you how to use if statement in C in addition I will also show you what is a comparison operator and what is a logical operator so let's get started what I have in my code here is I have declared two integers integer one and integer two and I'm telling or I'm asking the user to enter these two numbers as we have done in the last code so we are saying console. right enter the first number and this line will expect the user to enter the number in the same way we are telling the user to enter the second number and on the basis of those two numbers we want to show some message if the number one is greater than number two or number two is greater than number one so what can we can do is we can use if statement for that and what is a if statement if statement is nothing but a conditional statement which Tech checks the condition so let's see how we can uh use if statement in C to declare if statement you just need if here and then you need this here these brackets here and inside these brackets comes the condition but here also you need to give these two curly braces in order to give uh complete the condition so this will hold the condition and this will uh in these brackets you will write the if the condition is true whatever you want to do or whatever code you want to perform if the condition is true will come here so these conditions can be logical or these conditions can be comparison so right now we want to use comparison operators to compare number one and number two so let's see what options we have to compare the two values so we have something called comparison operator and basically we have these six basic comparison operator Which is less than greater than less than and equal to greater than and equal to and equal to and not equal to these are the sixth comparison operator we have and notice that this equal to whenever you use with this less than or greater than sign this equal to comes always after this uh this less than or greater than it doesn't come before this uh greater than or less than okay so let's uh use this greater than and less than comparison operator so if num one is less than num two we want to show the message and what message we want to show we want to show the message that num one is less than num two okay so if number one is less than number two we are going to show this message number one is less than number two and if the number one is greater than number two we can just copy this and paste it here and we can say if number one one is greater than number two then we can say greater than number two and now when we run the program and the program ask us to enter two values I will enter two values 35 and 46 for example and it says number one is less than number two which is true right number one is 35 and number two is 46 number one is less than two so what this code is doing it's checking the condition if the number one is less than number two then it prints this value but in the second case number one we have provided the condition number one is greater than two true two and this condition was not satisfied that's why this line was not printed so if and only if the condition is satisfied which is there in the bracket then only the code inside these curly braces will be executed otherwise this code will not be executed now we have seen that we have enter two numbers number one and number two and if this condition is true obviously this condition will not be true but your C program will is going to execute this also and check whether this is true or not and this is slightly in inefficient because if this condition is uh true why this code is executed if this condition is even not true so what we can do here is we can use a statement like else statement with if so when you write else statement with if then what will what it will do is first of all let's see this SSE statement okay so what this code is going to do here else by the way doesn't take any condition because it's the consequence if this is not true then what should happen this else will come here so if this is not true this is true if number one is less than number two then this condition will not be executed otherwise if number one is less than number number I'm sorry if number one is greater than number two then this condition will be executed otherwise this condition will not be executed if there is no need to perform this condition so let's see what happens let's run the program and this time we will provide number one will be number will be greater than number two 36 for example and now it says number one is greater than number two which is the else statement condition which is this condition right so in this way you can perform this if else statement there is one more condition called else if which you can use it like this so you can use else if number one equal to number two then we want to perform some or when we want to print some message for example okay so what we can do is we can here print number one is equal to number two okay so this is if else condition else if condition so what is the sequence of program will be first your program will check if this is true or not if this condition is not true then it will go to this condition and checks whether this condition is true or not else it will throw this message right so let's try and run the program and this time we will give two equal values 3 434 and this says number one is equal to number two so this sequence will be followed first this condition will be checked and if this condition is not true then only will the the program will go to this code and if this condition is not true then only this code is executed so that's the use of else if the condition is not true then it will not be executed okay now there is one more uh thing you can do in if condition which are called logical operations and there are mainly two kind two kinds of logical operator one is or operator and one is and operator so or or operator will be used by writing these two pipe symbols and and operator will be used by writing these two and the symbol okay and let's see how we can use it use them so right now we have given this condition if number one is less than number two then we want to print the value but for example we want to check whether number one is less than number two and and what number one is equal to 20 right and we will write the message and num one is 20 okay so we want to check whether number one is less than number two and we also want to check whether number one is equal to 20 then only we want to print this message so let's try and run the program first of all let's give number one is equal to 20 number two is equal to 13 and it says number one is greater than number two which is true right this condition is uh met here now in order to uh satisfy this condition let's try and run the program once again we will give 20 and we will give 36 and press enter and now it says number one is less than number two which is true and number one is 20 right so when we use and symbol your program or this condition is to be has to be true and this condition also has to be true so both conditions has to be true when we use this and symbol and if you want if we write this pipe here double pipe then your program will check either this is true or this is true either one of the condition is true then it will print this then it will print this message okay so here you can write R and run the program and once again we will write 34 45 okay and it shows the message number one is less than number two or one is number one is 20 so note that this condition is not satisfied here but only this condition is satisfied then also it's showing this message that means this symbol means either this is true or this is true okay if any one condition is true then this will be your program or your condition will be executed now there is two ways of using or and end with these two pipes and with a single pipe also you can use this if conditions but when you use this single pipe what will happen is your program will come here and check this condition and if this condition is even true it will go to this condition to check if this condition is true or not and if if this condition is not true then also it will go to this condition to check whether it's not true true or not so it's it will do its whole cycle it will check this condition this condition or and whatever condition you will give and what these two pipe when you give these two pipe this what what what this will do is your program will come here it will check this condition and if it's true it does it will not care about this this condition and it will directly come here and it will directly print this message so using these two Pi symbol is more efficient because I if one condition is true your message will will be printed and this will not be executed so it will save your time if it will save your time if your program is time critical program right so same thing you can do it with these and symbols also you can use one symbol and the concept will be same okay so in this way you can use if else conditions and logical operators and comparison operators in C I hope you have enjoyed this video please wait comment and subscribe and bye for now
