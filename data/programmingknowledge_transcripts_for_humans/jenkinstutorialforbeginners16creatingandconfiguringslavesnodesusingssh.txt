With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - jenkins tutorial for beginners in this
00:04 - video we will discuss about how we can
00:06 - create the slave nodes in jenkins and we
00:11 - will also see what is a master and slave
00:14 - node so let's get started so first of
00:19 - all what is a master node the master
00:22 - node is wherever your Jenkins is running
00:26 - it's your master node now this single
00:30 - Jenkins server which is a master node is
00:33 - not enough to meet certain requirements
00:35 - for example sometimes you might need
00:38 - several different environments to test
00:41 - your bills this cannot be done on your
00:44 - master slave for example and for that
00:47 - you may want to create a slave node one
00:51 - other scenario can be if you want to
00:53 - build a larger or heavier project on
00:57 - your Jenkins job then your Jenkins
01:00 - server cannot simply handle the entire
01:03 - load of that job so in that scenario you
01:06 - can also just create a dedicated slave
01:09 - node to run that heavy build on that
01:14 - node so let's see how we can create a
01:17 - slave node on our Jenkins so just go to
01:21 - the home page of Jenkins and we will go
01:23 - to the manage Jenkins section and once
01:26 - this manage Jenkins section is open you
01:29 - just need to search for the section
01:31 - which is called manage nodes so I'm
01:34 - going to just click on this option which
01:36 - says manage node and you can see there
01:39 - is a master node which is the Jenkins on
01:42 - which you are working on this is already
01:45 - there and we need to create for example
01:49 - a slave node now for this example I will
01:53 - be using SSH methods so for example I
01:57 - have extra machine here which is also an
02:00 - Ubuntu machine and let me know inside
02:03 - this machine and I'm going to use this
02:06 - machine as a slave node and I will
02:08 - connect to this slave node using my
02:11 - master node on SS
02:14 - so make sure that you have already
02:16 - installed open sss server on your slave
02:20 - node so your master can connect to it on
02:24 - ssh now we are going to create a new
02:27 - node so i'm going to just click on new
02:29 - node here and you can give any name to
02:33 - your node so for example i'm going to
02:34 - just write ubuntu underscore 16 4
02:39 - because my open 2 version is 16 0.4 on
02:44 - the slave and underscore agent for
02:46 - example okay so this will be the name of
02:49 - your node ubuntu 16.4 underscore agent
02:53 - and this will be a permanent agent so
02:56 - i'm going to just click on this option
02:59 - and then click ok we're just going to
03:01 - create this node and here in the
03:05 - configuration section of this node you
03:07 - just need to provide some information so
03:11 - at the top you have the name of your
03:13 - node and next you can give some
03:16 - description about this node what it's
03:18 - going to do for example for example it's
03:21 - going to build some Java job or maven
03:23 - builds or any other bills which it's
03:26 - going to execute the third option is
03:29 - number of executors so number of
03:32 - executors means number of parallel job
03:35 - which the slave can handle so for now we
03:40 - have a one job we can just enter two
03:43 - here which means it will be able to
03:45 - handle two jobs at the same time now the
03:49 - next option here is a remote root
03:51 - directory so the remote root directory
03:54 - is the directory where you want to save
03:56 - all the Jenkins related file on your
04:00 - slave node so I'm going to open my slave
04:02 - node and I'm inside my home folder here
04:07 - on the slave and let's create a
04:09 - directory which we are going to use in
04:11 - our master configuration so I'm going to
04:14 - just write mkdir Jenkins on the slave
04:18 - node right so mkdir Jenkins and then I'm
04:22 - going to just go to the Jenkins file
04:25 - using CD Jenkins
04:27 - and then I'm going to just write PWD and
04:30 - this is the location where I want to
04:31 - save all the files related to chenkin
04:35 - z-- okay so this is on my slave this
04:38 - directory I'm going to just copy this
04:39 - part and I'm going to just paste this
04:42 - path as a remote root directory so all
04:45 - the Jenkins related files or build
04:48 - information will be generated inside
04:52 - this directory on the slave node now
04:55 - next option here is a label so let's
04:58 - click on this question mark and let's
05:00 - see what a label is so label are used to
05:03 - group multiple agent into one logical
05:07 - group so this is a simple definition of
05:10 - a label so for example I'm going to
05:13 - create multiple open two slaves so I can
05:16 - give a label here open to okay so
05:19 - whenever I will use this label open to
05:23 - one of the open two node will be used to
05:27 - execute the Jenkins jobs and here you
05:31 - can see for example if you have multiple
05:33 - windows agent and you have a job that
05:36 - must run on Windows you can give this
05:39 - label on your chenkin job configuration
05:43 - and then one of the slave node which
05:47 - have the label windows will handle that
05:51 - job so labels are used to group multiple
05:55 - agent into one logical group for Windows
05:59 - for example you can give Windows labels
06:02 - all of your Ubuntu nodes you can give
06:04 - open to label or any other logical label
06:08 - which you can use to group those kind of
06:11 - nodes so in my case I'm going to give
06:13 - this label Ubuntu here and I'm going to
06:15 - just minimize this explanation and the
06:19 - next section here is the usage for now
06:22 - I'm going to use use this node as much
06:25 - as possible there are other option also
06:27 - for example this option which says only
06:30 - build job with label expression matching
06:33 - this node so if you use this one then if
06:37 - your Jenkins configuration will have
06:40 - Ubuntu
06:40 - label then only this node will be used
06:45 - to execute that job so I'm going to just
06:48 - use use this node as much as possible
06:51 - now the next option here is launch
06:54 - method and there are a few options here
06:56 - one is launch agent wire execution of
07:00 - command on the master we are going to
07:03 - use the next option which is launch
07:06 - slave agent wire SSH okay so I'm going
07:10 - to just use the second option which says
07:12 - launch slave agent via SSH so just
07:15 - select this option and then this is the
07:18 - host name so hostname we will just go to
07:21 - our slave machine and here we can just
07:25 - give if config command and then press
07:28 - enter and here you will be able to see
07:31 - the hostname which is the IP address of
07:33 - the slave machine and I'm going to just
07:37 - give this host IP address here now in
07:42 - order to verify if SSH is working from
07:45 - your slave to your master you can open
07:48 - the command line on the master and then
07:51 - you can just write SSH and then the
07:54 - username to which you want to connect so
07:56 - I want to connect for example this user
07:59 - which is a code bind here so I'm going
08:01 - to just write code bind at the rate the
08:06 - IP address which you have copied from
08:07 - the slave which is 192.168.1.2 see this
08:14 - kind of message I'm going to just say
08:16 - yes and then press Enter which is going
08:19 - to ask for your slaves password so this
08:22 - is the login password which you use to
08:25 - login to your slave machine which is
08:28 - this machine okay so this machine's
08:30 - password you need to give here I'm going
08:33 - to give my slave machines password and
08:35 - now I am logged in to my slave machine
08:39 - using SSH okay if this is working then
08:43 - this connection will also work so just
08:46 - use the hosts IP address here and in the
08:49 - credentials right now we don't have any
08:51 - credentials here so we will add some
08:53 - credentials
08:54 - just click on add option here and then
08:57 - click on Jenkins and when you will just
08:59 - click here in front of kind there are
09:02 - few options here one is username with
09:04 - password other is darker option and next
09:08 - is SSH username with private key so you
09:12 - can use any one of these method and for
09:16 - now we are going to just use the first
09:17 - method which is username and password so
09:20 - we will provide the username and the
09:21 - password
09:23 - so username is code binder this is the
09:26 - username of my slave machine and then
09:30 - I'm going to give the password of my
09:32 - slave machine which I use to login to
09:35 - the slave and then I'm going to just
09:38 - click Add here and then I'm going to go
09:40 - to the credentials you can see by
09:42 - default none is selected here you just
09:44 - need to select the new credentials which
09:48 - you have recently created so I have
09:51 - created these credential so I'm going to
09:52 - just choose the credentials which I have
09:55 - created now the next option here is host
09:58 - key validation strategy so this is
10:01 - important you just need to just select
10:04 - this option which says manually trusted
10:07 - key verification strategy ok so just
10:09 - click on this option which says manually
10:12 - trusted key verification strategy in the
10:15 - option host key verification strategy
10:18 - and this step is important otherwise you
10:21 - will face the problem and the next
10:23 - option here is required manual
10:26 - verification of initial connection just
10:28 - leave this unchecked this is also
10:31 - important you just need to leave this as
10:34 - unchecked now the next option here is
10:38 - the availability if you want to see the
10:41 - advanced option you can just click on
10:43 - this option also for your launch method
10:46 - for example the port on which SSH is
10:49 - connected this can be different if you
10:51 - want and then the jvm options and Java
10:54 - path and other options here if you want
10:57 - to set them you can set it from here now
11:00 - in the availability section you will be
11:02 - able to see three options I'm going to
11:04 - leave it as default which is keep this
11:06 - agent online
11:07 - much as possible now the next section
11:10 - here is the node properties and here you
11:13 - can set the environment variables if you
11:15 - want on your slave node for example Java
11:19 - home or maven home or any environment
11:23 - variable which you want you can set it
11:24 - from here on your slave and the next
11:27 - option here is the tool location and
11:30 - this tool location for example if you
11:32 - want to set the default gate location of
11:35 - your slave here you can set it from here
11:38 - but I will leave both of them as default
11:41 - okay which is unchecked and then I'm
11:44 - going to just click on the Save button
11:46 - and you will be able to see this option
11:50 - and it says the agent is offline some
11:55 - message will be displayed here and when
11:57 - you click on the nodes option here you
12:00 - will see this new node is created but
12:02 - it's offline and you will be able to see
12:05 - this big cross symbol in red which means
12:07 - your agent is still offline so to make
12:11 - it online you just need to click on this
12:13 - slave agent which you have created and
12:15 - then click on the launch agent button
12:19 - I'm going to just click on the launch
12:21 - agent button which is going to connect
12:24 - to my machine and you can see the
12:27 - authentication is successful here and I
12:29 - will scroll down a little and it's doing
12:33 - some work and it says agent successfully
12:37 - connected and online so at the end if
12:39 - you see this message which says agent
12:41 - successfully connected and online that
12:43 - means this agent is working fine and
12:47 - it's online so once again I'm going to
12:49 - click on this nodes option and now you
12:52 - will be able to see this Red Cross is
12:55 - gone and this agent is now online now
12:59 - one important thing to note here is you
13:02 - need to have Java 8 or more installed on
13:06 - your slave machine so make sure that
13:09 - Java version 8 or more is installed on
13:12 - your slave otherwise it will fail
13:15 - complaining about Java version or
13:18 - something if you have the
13:19 - older version of Java once you're a
13:21 - slave agent is online we are going to
13:24 - see how we can create a Jenkins job and
13:26 - use this slave agent so what I'm going
13:30 - to do is I'm going to create a new
13:32 - Jenkins job and I'm going to just say
13:34 - test slave 1 for example and this will
13:39 - be a freestyle project and I'm going to
13:41 - just say ok and this Jenkins job is
13:44 - created for now I'm going to just leave
13:46 - everything as default I'm not going to
13:49 - give any description here but when you
13:52 - scroll down you just need to choose this
13:55 - option which says restrict where this
13:57 - project can be run so this is important
14:00 - you just need to choose this option in
14:02 - order to select the name of your slave
14:05 - agent ok so your slave agent name is
14:10 - Ubuntu one 6-4 agent in my case this is
14:14 - the slave agent name and I can also see
14:17 - the label name okay so you can either
14:20 - give the label name of your slave agent
14:24 - or you can get the actual name of your
14:26 - slave agent I'm going to choose the
14:28 - second option here which is the slave
14:30 - agent name ok and then I will scroll
14:34 - down and for now I will just execute a
14:37 - simple shell command here on the slave
14:41 - agent and I'm going to just say echo and
14:43 - then I will just say this message is
14:50 - executed on slave node so I will just
14:55 - execute this message in my Jenkins build
14:58 - and I'm going to save this and for now
15:01 - what I'm going to do is I'm going to go
15:03 - to my slave and I'm going to just go to
15:06 - the Jenkins location which is this
15:09 - location which I have set where all the
15:11 - files related to Jenkins are saved and
15:14 - you can see slave dot jar is already
15:17 - saved here when we have tried to connect
15:20 - to this slave right and there is a JDK
15:24 - directory also so now when I just build
15:28 - this job so now my job is building and
15:31 - I'm going to school
15:33 - and see the console.log here and you can
15:36 - see everything is successful and this
15:38 - build was successful and now once again
15:41 - I'm going to go to my slave and do LS
15:44 - once again and you can see workspace
15:46 - directory is created when I have
15:48 - executed this build here and inside the
15:51 - workspace there will be my job name
15:55 - which is test slave 1 you can see the
15:58 - name of my Jenkins job is Tesla 1 and on
16:02 - my slave node inside the Jenkins
16:04 - directory which I have given inside the
16:06 - workspace this job name is also created
16:10 - there so that means everything is
16:12 - working fine and this job is executed on
16:15 - the slave machine and not on my master
16:19 - machine which is where my Jenkins is
16:22 - actually running right so everything is
16:25 - executed on the slave machine now so
16:28 - this is how you can create a slave node
16:30 - using Jenkins and you can connect to the
16:33 - slave node in Jenkins in the next video
16:36 - I'm going to show you some more options
16:37 - related to the slave nodes and master
16:41 - nodes so stay tuned and please recommend
16:43 - subscribe and bye for now

Cleaned transcript:

hey guys welcome to the next video on jenkins tutorial for beginners in this video we will discuss about how we can create the slave nodes in jenkins and we will also see what is a master and slave node so let's get started so first of all what is a master node the master node is wherever your Jenkins is running it's your master node now this single Jenkins server which is a master node is not enough to meet certain requirements for example sometimes you might need several different environments to test your bills this cannot be done on your master slave for example and for that you may want to create a slave node one other scenario can be if you want to build a larger or heavier project on your Jenkins job then your Jenkins server cannot simply handle the entire load of that job so in that scenario you can also just create a dedicated slave node to run that heavy build on that node so let's see how we can create a slave node on our Jenkins so just go to the home page of Jenkins and we will go to the manage Jenkins section and once this manage Jenkins section is open you just need to search for the section which is called manage nodes so I'm going to just click on this option which says manage node and you can see there is a master node which is the Jenkins on which you are working on this is already there and we need to create for example a slave node now for this example I will be using SSH methods so for example I have extra machine here which is also an Ubuntu machine and let me know inside this machine and I'm going to use this machine as a slave node and I will connect to this slave node using my master node on SS so make sure that you have already installed open sss server on your slave node so your master can connect to it on ssh now we are going to create a new node so i'm going to just click on new node here and you can give any name to your node so for example i'm going to just write ubuntu underscore 16 4 because my open 2 version is 16 0.4 on the slave and underscore agent for example okay so this will be the name of your node ubuntu 16.4 underscore agent and this will be a permanent agent so i'm going to just click on this option and then click ok we're just going to create this node and here in the configuration section of this node you just need to provide some information so at the top you have the name of your node and next you can give some description about this node what it's going to do for example for example it's going to build some Java job or maven builds or any other bills which it's going to execute the third option is number of executors so number of executors means number of parallel job which the slave can handle so for now we have a one job we can just enter two here which means it will be able to handle two jobs at the same time now the next option here is a remote root directory so the remote root directory is the directory where you want to save all the Jenkins related file on your slave node so I'm going to open my slave node and I'm inside my home folder here on the slave and let's create a directory which we are going to use in our master configuration so I'm going to just write mkdir Jenkins on the slave node right so mkdir Jenkins and then I'm going to just go to the Jenkins file using CD Jenkins and then I'm going to just write PWD and this is the location where I want to save all the files related to chenkin z okay so this is on my slave this directory I'm going to just copy this part and I'm going to just paste this path as a remote root directory so all the Jenkins related files or build information will be generated inside this directory on the slave node now next option here is a label so let's click on this question mark and let's see what a label is so label are used to group multiple agent into one logical group so this is a simple definition of a label so for example I'm going to create multiple open two slaves so I can give a label here open to okay so whenever I will use this label open to one of the open two node will be used to execute the Jenkins jobs and here you can see for example if you have multiple windows agent and you have a job that must run on Windows you can give this label on your chenkin job configuration and then one of the slave node which have the label windows will handle that job so labels are used to group multiple agent into one logical group for Windows for example you can give Windows labels all of your Ubuntu nodes you can give open to label or any other logical label which you can use to group those kind of nodes so in my case I'm going to give this label Ubuntu here and I'm going to just minimize this explanation and the next section here is the usage for now I'm going to use use this node as much as possible there are other option also for example this option which says only build job with label expression matching this node so if you use this one then if your Jenkins configuration will have Ubuntu label then only this node will be used to execute that job so I'm going to just use use this node as much as possible now the next option here is launch method and there are a few options here one is launch agent wire execution of command on the master we are going to use the next option which is launch slave agent wire SSH okay so I'm going to just use the second option which says launch slave agent via SSH so just select this option and then this is the host name so hostname we will just go to our slave machine and here we can just give if config command and then press enter and here you will be able to see the hostname which is the IP address of the slave machine and I'm going to just give this host IP address here now in order to verify if SSH is working from your slave to your master you can open the command line on the master and then you can just write SSH and then the username to which you want to connect so I want to connect for example this user which is a code bind here so I'm going to just write code bind at the rate the IP address which you have copied from the slave which is 192.168.1.2 see this kind of message I'm going to just say yes and then press Enter which is going to ask for your slaves password so this is the login password which you use to login to your slave machine which is this machine okay so this machine's password you need to give here I'm going to give my slave machines password and now I am logged in to my slave machine using SSH okay if this is working then this connection will also work so just use the hosts IP address here and in the credentials right now we don't have any credentials here so we will add some credentials just click on add option here and then click on Jenkins and when you will just click here in front of kind there are few options here one is username with password other is darker option and next is SSH username with private key so you can use any one of these method and for now we are going to just use the first method which is username and password so we will provide the username and the password so username is code binder this is the username of my slave machine and then I'm going to give the password of my slave machine which I use to login to the slave and then I'm going to just click Add here and then I'm going to go to the credentials you can see by default none is selected here you just need to select the new credentials which you have recently created so I have created these credential so I'm going to just choose the credentials which I have created now the next option here is host key validation strategy so this is important you just need to just select this option which says manually trusted key verification strategy ok so just click on this option which says manually trusted key verification strategy in the option host key verification strategy and this step is important otherwise you will face the problem and the next option here is required manual verification of initial connection just leave this unchecked this is also important you just need to leave this as unchecked now the next option here is the availability if you want to see the advanced option you can just click on this option also for your launch method for example the port on which SSH is connected this can be different if you want and then the jvm options and Java path and other options here if you want to set them you can set it from here now in the availability section you will be able to see three options I'm going to leave it as default which is keep this agent online much as possible now the next section here is the node properties and here you can set the environment variables if you want on your slave node for example Java home or maven home or any environment variable which you want you can set it from here on your slave and the next option here is the tool location and this tool location for example if you want to set the default gate location of your slave here you can set it from here but I will leave both of them as default okay which is unchecked and then I'm going to just click on the Save button and you will be able to see this option and it says the agent is offline some message will be displayed here and when you click on the nodes option here you will see this new node is created but it's offline and you will be able to see this big cross symbol in red which means your agent is still offline so to make it online you just need to click on this slave agent which you have created and then click on the launch agent button I'm going to just click on the launch agent button which is going to connect to my machine and you can see the authentication is successful here and I will scroll down a little and it's doing some work and it says agent successfully connected and online so at the end if you see this message which says agent successfully connected and online that means this agent is working fine and it's online so once again I'm going to click on this nodes option and now you will be able to see this Red Cross is gone and this agent is now online now one important thing to note here is you need to have Java 8 or more installed on your slave machine so make sure that Java version 8 or more is installed on your slave otherwise it will fail complaining about Java version or something if you have the older version of Java once you're a slave agent is online we are going to see how we can create a Jenkins job and use this slave agent so what I'm going to do is I'm going to create a new Jenkins job and I'm going to just say test slave 1 for example and this will be a freestyle project and I'm going to just say ok and this Jenkins job is created for now I'm going to just leave everything as default I'm not going to give any description here but when you scroll down you just need to choose this option which says restrict where this project can be run so this is important you just need to choose this option in order to select the name of your slave agent ok so your slave agent name is Ubuntu one 64 agent in my case this is the slave agent name and I can also see the label name okay so you can either give the label name of your slave agent or you can get the actual name of your slave agent I'm going to choose the second option here which is the slave agent name ok and then I will scroll down and for now I will just execute a simple shell command here on the slave agent and I'm going to just say echo and then I will just say this message is executed on slave node so I will just execute this message in my Jenkins build and I'm going to save this and for now what I'm going to do is I'm going to go to my slave and I'm going to just go to the Jenkins location which is this location which I have set where all the files related to Jenkins are saved and you can see slave dot jar is already saved here when we have tried to connect to this slave right and there is a JDK directory also so now when I just build this job so now my job is building and I'm going to school and see the console.log here and you can see everything is successful and this build was successful and now once again I'm going to go to my slave and do LS once again and you can see workspace directory is created when I have executed this build here and inside the workspace there will be my job name which is test slave 1 you can see the name of my Jenkins job is Tesla 1 and on my slave node inside the Jenkins directory which I have given inside the workspace this job name is also created there so that means everything is working fine and this job is executed on the slave machine and not on my master machine which is where my Jenkins is actually running right so everything is executed on the slave machine now so this is how you can create a slave node using Jenkins and you can connect to the slave node in Jenkins in the next video I'm going to show you some more options related to the slave nodes and master nodes so stay tuned and please recommend subscribe and bye for now
