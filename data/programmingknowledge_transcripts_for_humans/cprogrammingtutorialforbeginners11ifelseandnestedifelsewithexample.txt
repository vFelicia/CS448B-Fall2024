With timestamps:

00:00 - hey what's going on guys welcome back to
00:02 - our YouTube channel and welcome to this
00:04 - video this is John from programming
00:07 - knowledge and in this video guys we're
00:08 - gonna talk about if-else statements and
00:11 - of course we're going to discuss also
00:15 - the nested if-else statements in C
00:18 - programming language now from the
00:21 - previous video we have created a simple
00:23 - application so we have assumed to create
00:26 - an application for a bar or
00:30 - establishment and then that particular
00:33 - program will ask for the age of the
00:36 - customer that is trying to enter the
00:38 - premises of the bar and of course we
00:42 - asked for the age right and we checked
00:45 - for the age if it is greater than 18
00:47 - then we display the age is greater than
00:50 - 18 and if the age is equal to 18 and we
00:55 - also displayed the age is equal to 18
00:58 - but in case that the age is less than 18
01:02 - then we print that Mynor is not allowed
01:06 - so basically guess this is a good
01:09 - program but we can you know upgrade this
01:12 - this is not when it comes to code
01:16 - readability and code between ability
01:21 - this is not a good practice when it
01:24 - comes to you know checking a variable or
01:27 - a certain value of a variable so now
01:30 - let's just remove this lines okay and of
01:36 - course we have this first condition if
01:38 - and then we check for the age of the
01:44 - customer which is you know 18 so if the
01:47 - age is greater than 18 we display the
01:51 - age is greater than 18 so I as I've said
01:53 - we can take this further by adding else
01:58 - statement right here so basically the
02:01 - if-else statements in C is also used to
02:06 - control the program flow based on some
02:09 - condition and the only difference is
02:12 - it used execute some statement code
02:16 - block if the expression is evaluated to
02:20 - true so it will try to execute this
02:24 - particular statement if this particular
02:27 - condition is true otherwise it will try
02:29 - to execute the statement of this
02:33 - particular and code block okay so in
02:39 - here we can try to display printf the
02:44 - age is less than or equal to 18 okay so
02:56 - as you can see if we try to evaluate
03:01 - this so if H is greater than 18 so for
03:05 - example you have like 19 or you inputted
03:09 - 19 then of course automatically it will
03:12 - execute the statement that the age is
03:15 - greater than 18 right now basically if
03:18 - we try to input 18 so eating is not
03:22 - greater than 18 so it will try to
03:27 - execute the code block or the code or
03:31 - the statements inside this else code
03:33 - block because the condition right here
03:37 - returns false okay because 18 is not
03:44 - greater than 18 and there you go it
03:48 - returns false okay now we can also add
03:52 - another condition right here so for
03:55 - example we want to check if the age is
04:00 - equal to 18 okay we can check if the age
04:04 - is greater than 18 and of course we can
04:06 - also check if the user or the age is
04:09 - equal to 15 and then otherwise its it is
04:13 - less than 18 and we can add another else
04:19 - statement right here but fertilises you
04:21 - know add the another condition
04:25 - condition evaluation test expression if
04:30 - the user or the age is equal to 18 okay
04:36 - so basically this particular statement
04:39 - if this particular condition right here
04:43 - is false then it will try to evaluate
04:46 - one more time with this particular
04:48 - condition is the age equal to 18 so if
04:53 - that particular is is equal to 18 then
04:55 - we can display the age is equal to 18
05:02 - there but in case if the age is less
05:06 - than 18
05:07 - we can also add the else statement right
05:14 - here and we can display that the age is
05:20 - less than 18 8 so as you can see we have
05:25 - you know implemented a practical
05:27 - implementation of if statement and we
05:30 - can add you know the first if condition
05:35 - and then we can add another condition
05:37 - else if and then we can test this
05:41 - condition right here
05:42 - otherwise if this two conditions are
05:46 - returning false then we can you know
05:48 - execute the statements in this
05:52 - particular else block okay so we can try
05:55 - this we can run our program build and
06:00 - run so let's try it first the
06:07 - possibilities so for example the
06:09 - customer or the enter the age of
06:11 - customer for example 25 so the age is
06:15 - greater than 18 so let's try to run this
06:19 - once again and you can try to input 18
06:26 - so the age is equal to 18 pay so this
06:32 - particular condition right here returns
06:34 - through now we can also try to
06:39 - input value which is you know less than
06:42 - eighteen so for example sixteen and then
06:44 - of course the age is less than eighteen
06:47 - okay so as you can see in this
06:50 - particular example there will be only
06:52 - one block of code that will be executed
06:57 - so for example this one if this will
07:00 - return true the age is greater than
07:02 - eighteen then it will execute this
07:05 - statement right here or inside this if
07:07 - block then it will ignore the other like
07:11 - the else F and the else now if it will
07:14 - return false then it will try to
07:17 - evaluate the expression inside here and
07:21 - if it is true or it will return true
07:23 - then it will execute the statement and
07:26 - ignore the else if all of this
07:31 - statements or conditions here will
07:35 - return false then the else statement
07:38 - will be executed okay and it will you
07:43 - know try to print the age is less than
07:45 - eighteen now there are cases that we
07:49 - need to check also for example inside
07:53 - this if statement we want to check if
07:58 - the age is less than 25 okay less than
08:03 - 25 although we have like the age is
08:07 - greater than 18 we want to check also if
08:09 - the age is less than 25 so we can add
08:13 - also if statement right here so this is
08:18 - like what we call nested if-else
08:23 - statements okay
08:28 - nested if-else statement so we can also
08:31 - check here if age is less than 25 okay
08:37 - and then we can display here printf and
08:43 - then the age is
08:50 - greater than eating but less than 25
09:01 - rate less than 25 and of course we can
09:06 - also add L statement here or else if
09:09 - like for example else if the age is
09:15 - greater than 25 then we can say here
09:22 - printf the age is greater than 18 and
09:31 - greater than 25 so there are cases that
09:35 - you want to check this you know if you
09:41 - want to like in the future you want to
09:44 - implement an application and you will
09:47 - try to check the values and somewhere in
09:52 - your code you need to check like the
09:55 - value age here and also you can also
09:58 - check if the value is less than 25 or
10:02 - greater than 25 so it is very useful
10:06 - when it comes to programming this
10:08 - particular nested if-else statement so
10:11 - let's try to run this and before that
10:12 - I'm just going to add a backslash n
10:16 - right here so that we will have a new
10:20 - line after this particular code
10:25 - execution so let's try to build and run
10:28 - our app first and try to input a value
10:35 - that is over 18 so for example 23 so the
10:41 - age is greater than 18 and there is
10:44 - another statement that has been executed
10:46 - right here the age is greater than 18
10:49 - but less than 25 we can also you know
10:53 - run this once again and input 26 so the
10:59 - age is greater than 18 and there's also
11:02 - a statement here
11:03 - age is greater than 18 and greater than
11:09 - 25 okay and that's how you use the
11:13 - if-else statement or yeah if-else
11:17 - statements in C and of course if you
11:20 - have like many conditions that you want
11:22 - to check so you can also add another
11:25 - conditions right here okay and then
11:30 - another condition and otherwise if
11:37 - there's if these conditions are not met
11:39 - then you can display or execute the
11:44 - statement inside this else code block
11:47 - okay now the nested if-else statement
11:52 - requires only one if okay so you can't
11:56 - use like two ifs here because it will
12:01 - try to separate the chain of if else if
12:06 - you use another if so what you can do is
12:09 - one if and then else if else if and also
12:15 - one else statement so it doesn't matter
12:19 - how many else if statement that you can
12:21 - add okay for as long as it is like has
12:26 - one if and has one else statement okay
12:32 - so I think that's all there is to it
12:33 - guys for this tutorial and I hope you
12:37 - learned something from this tutorial and
12:38 - if you want to learn more about C
12:40 - programming you can try to follow our C
12:43 - programming tutorial for beginners so
12:47 - thank you for watching guys and see you
12:48 - in the next video

Cleaned transcript:

hey what's going on guys welcome back to our YouTube channel and welcome to this video this is John from programming knowledge and in this video guys we're gonna talk about ifelse statements and of course we're going to discuss also the nested ifelse statements in C programming language now from the previous video we have created a simple application so we have assumed to create an application for a bar or establishment and then that particular program will ask for the age of the customer that is trying to enter the premises of the bar and of course we asked for the age right and we checked for the age if it is greater than 18 then we display the age is greater than 18 and if the age is equal to 18 and we also displayed the age is equal to 18 but in case that the age is less than 18 then we print that Mynor is not allowed so basically guess this is a good program but we can you know upgrade this this is not when it comes to code readability and code between ability this is not a good practice when it comes to you know checking a variable or a certain value of a variable so now let's just remove this lines okay and of course we have this first condition if and then we check for the age of the customer which is you know 18 so if the age is greater than 18 we display the age is greater than 18 so I as I've said we can take this further by adding else statement right here so basically the ifelse statements in C is also used to control the program flow based on some condition and the only difference is it used execute some statement code block if the expression is evaluated to true so it will try to execute this particular statement if this particular condition is true otherwise it will try to execute the statement of this particular and code block okay so in here we can try to display printf the age is less than or equal to 18 okay so as you can see if we try to evaluate this so if H is greater than 18 so for example you have like 19 or you inputted 19 then of course automatically it will execute the statement that the age is greater than 18 right now basically if we try to input 18 so eating is not greater than 18 so it will try to execute the code block or the code or the statements inside this else code block because the condition right here returns false okay because 18 is not greater than 18 and there you go it returns false okay now we can also add another condition right here so for example we want to check if the age is equal to 18 okay we can check if the age is greater than 18 and of course we can also check if the user or the age is equal to 15 and then otherwise its it is less than 18 and we can add another else statement right here but fertilises you know add the another condition condition evaluation test expression if the user or the age is equal to 18 okay so basically this particular statement if this particular condition right here is false then it will try to evaluate one more time with this particular condition is the age equal to 18 so if that particular is is equal to 18 then we can display the age is equal to 18 there but in case if the age is less than 18 we can also add the else statement right here and we can display that the age is less than 18 8 so as you can see we have you know implemented a practical implementation of if statement and we can add you know the first if condition and then we can add another condition else if and then we can test this condition right here otherwise if this two conditions are returning false then we can you know execute the statements in this particular else block okay so we can try this we can run our program build and run so let's try it first the possibilities so for example the customer or the enter the age of customer for example 25 so the age is greater than 18 so let's try to run this once again and you can try to input 18 so the age is equal to 18 pay so this particular condition right here returns through now we can also try to input value which is you know less than eighteen so for example sixteen and then of course the age is less than eighteen okay so as you can see in this particular example there will be only one block of code that will be executed so for example this one if this will return true the age is greater than eighteen then it will execute this statement right here or inside this if block then it will ignore the other like the else F and the else now if it will return false then it will try to evaluate the expression inside here and if it is true or it will return true then it will execute the statement and ignore the else if all of this statements or conditions here will return false then the else statement will be executed okay and it will you know try to print the age is less than eighteen now there are cases that we need to check also for example inside this if statement we want to check if the age is less than 25 okay less than 25 although we have like the age is greater than 18 we want to check also if the age is less than 25 so we can add also if statement right here so this is like what we call nested ifelse statements okay nested ifelse statement so we can also check here if age is less than 25 okay and then we can display here printf and then the age is greater than eating but less than 25 rate less than 25 and of course we can also add L statement here or else if like for example else if the age is greater than 25 then we can say here printf the age is greater than 18 and greater than 25 so there are cases that you want to check this you know if you want to like in the future you want to implement an application and you will try to check the values and somewhere in your code you need to check like the value age here and also you can also check if the value is less than 25 or greater than 25 so it is very useful when it comes to programming this particular nested ifelse statement so let's try to run this and before that I'm just going to add a backslash n right here so that we will have a new line after this particular code execution so let's try to build and run our app first and try to input a value that is over 18 so for example 23 so the age is greater than 18 and there is another statement that has been executed right here the age is greater than 18 but less than 25 we can also you know run this once again and input 26 so the age is greater than 18 and there's also a statement here age is greater than 18 and greater than 25 okay and that's how you use the ifelse statement or yeah ifelse statements in C and of course if you have like many conditions that you want to check so you can also add another conditions right here okay and then another condition and otherwise if there's if these conditions are not met then you can display or execute the statement inside this else code block okay now the nested ifelse statement requires only one if okay so you can't use like two ifs here because it will try to separate the chain of if else if you use another if so what you can do is one if and then else if else if and also one else statement so it doesn't matter how many else if statement that you can add okay for as long as it is like has one if and has one else statement okay so I think that's all there is to it guys for this tutorial and I hope you learned something from this tutorial and if you want to learn more about C programming you can try to follow our C programming tutorial for beginners so thank you for watching guys and see you in the next video
