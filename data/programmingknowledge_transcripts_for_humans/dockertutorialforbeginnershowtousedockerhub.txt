With timestamps:

00:01 - hey guys welcome back so in this video
00:03 - we are going to talk about
00:04 - docker hub so what is docker hub
00:07 - so docker hub is a service provided by
00:10 - docker for finding and sharing your
00:12 - container images with your teams
00:15 - or with the general public
00:18 - so as you can see i'm on this website
00:21 - which is hub.docker.com
00:24 - and here i can sign in at the time of
00:27 - downloading the docker on your
00:30 - operating system you might have created
00:33 - a docker id for you
00:35 - and the password for you so you can log
00:38 - in with that
00:39 - docker id and password so once you are
00:41 - signed in
00:42 - with your docker id and password you
00:45 - will be able to see this kind of
00:47 - web page here you have this explore
00:50 - option
00:50 - where you can explore all the
00:54 - other repositories you have this
00:57 - repository option
00:59 - and under this repository option you
01:01 - will be able
01:02 - to see and manage your repositories
01:05 - which you have created and which you
01:08 - have
01:08 - pushed into your docker registry here
01:12 - you also have the option for
01:14 - organization
01:15 - which we are not going to cover in this
01:17 - video and
01:18 - also you have all these general uh
01:22 - account related uh stuff here right
01:25 - now let's talk about the pricing a
01:28 - little bit
01:29 - so you can see uh for public repository
01:32 - docker hub is
01:33 - absolutely free and that's what we are
01:36 - going to
01:36 - uh be using but if you are working
01:40 - in an organization or you want to create
01:43 - some private
01:45 - repositories for your docker images then
01:49 - you can
01:50 - choose one of these options which are
01:52 - provided here
01:53 - also it's not necessary that you need to
01:56 - use
01:56 - docker hub as a docker registry
02:00 - you can create a docker registry you
02:03 - have
02:04 - this documentation which you can use to
02:07 - create a docker registry
02:09 - i know uh google cloud provide a docker
02:12 - registry
02:13 - or a github nowadays also provide
02:16 - these kind of docker registries so you
02:18 - can create your own registry if you want
02:20 - you don't need docker hub for just
02:24 - managing your images right so right now
02:26 - you can see i don't have any image
02:29 - on my docker hub account so to start
02:32 - with i have this very simple
02:34 - uh docker file which i want to convert
02:37 - to the docker image and then i want to
02:40 - push that
02:41 - image to my docker hub registry
02:45 - so let me list all the docker images on
02:47 - my operating system right now i don't
02:49 - have any
02:50 - image so let's build one image
02:53 - so i'm going to just write sudo docker
02:58 - build dot hyphen t and the name of the
03:01 - image
03:02 - i'm going to just name my image as hello
03:04 - and then press
03:05 - enter which is going to just create
03:08 - this image i have this hello world image
03:13 - which is created five seconds ago
03:15 - right so now let me just also
03:18 - quickly uh run this image to see
03:21 - everything is working so i'm going to
03:23 - once again write sudo docker
03:26 - run hyphen hyphen rm
03:30 - hyphen it and the name of the image
03:34 - which is hello and then press enter
03:37 - and it prints the content of
03:40 - my main dot cpp that's what it's doing
03:43 - so
03:44 - that's a very basic minimal image the
03:47 - size is very small that's why
03:49 - i have done this and once you have all
03:53 - these images let me just
03:54 - clear the terminal and then let me just
03:57 - move this terminal a little bit
03:59 - up and let's just list all the images
04:02 - once again
04:04 - so now i have this image hello and i
04:06 - want to push this image
04:08 - to my docker hub registry so in order to
04:11 - push this image first of all you need to
04:13 - log in with your docker id
04:17 - into your docker terminal most probably
04:20 - you are already logged in but if you are
04:22 - not you can just
04:24 - give this command which is
04:27 - docker login
04:30 - and if you want to log out then you can
04:32 - just write log
04:34 - out here right so let's give this
04:37 - command which is
04:38 - a pseudo docker login and then give your
04:41 - username here
04:42 - i'm going to provide my username and
04:44 - then you need to provide
04:45 - your password so let me quickly provide
04:49 - my password and then press
04:50 - enter which is going to log me in
04:53 - the docker so you can see
04:56 - login succeeded and now i can just push
05:00 - my images
05:01 - to my docker hub registry so first thing
05:04 - we generally do in order to push the
05:07 - image to the registry is we just tag it
05:10 - so
05:10 - we can give this command which is docker
05:14 - and then tag and then the name of your
05:18 - image
05:18 - my image name is hello you can also take
05:21 - the image id
05:22 - and then give the space and then give
05:25 - some tag
05:26 - to your image so right now
05:30 - because i want to push my uh
05:33 - docker image to this docker hub account
05:36 - and which has the username codebind i
05:39 - will just
05:40 - first of all write code bind here and
05:43 - then forward slash
05:45 - and then you can give the name of your
05:47 - image i will
05:48 - just leave it as hello and then you can
05:51 - give
05:51 - the tag of your image so i'm going to
05:53 - just give the tag
05:56 - 1.0.0 so this tag
05:59 - is useful whenever you want to
06:02 - just let's say keep working on your
06:04 - image and
06:06 - you want to update the image and
06:09 - want to just version your image
06:12 - into multiple versions so you have the
06:15 - track of all these versions right
06:18 - so i'm going to just tag my image i'm
06:20 - going to press enter
06:22 - and then i will once again list all the
06:24 - images
06:25 - and now you can see i have this uh
06:28 - image with the this name and i have the
06:31 - tag 1.0.0
06:33 - right now once you do that you are ready
06:36 - to push your image to the docker
06:38 - registry the command is very simple sudo
06:42 - docker push and the name of your
06:46 - docker file which is codebind forward
06:49 - slash
06:50 - hello in my case you also need to give
06:53 - the
06:53 - tag here 1.0.0
06:57 - and then you can just press enter which
07:00 - is going to push your image to
07:02 - your docker hub registry so just wait
07:06 - for
07:06 - some seconds
07:10 - and you can see it's pushed so i'm going
07:13 - to go to
07:14 - my docker hub web page
07:18 - and then refresh this web page
07:21 - and now i can see this image which
07:25 - is available here and also you will be
07:28 - able to see
07:28 - that this image is a public image
07:31 - so it's not private so anybody
07:35 - on docker can see your image right
07:38 - also when you click on this image
07:41 - you will be able to see more information
07:44 - about the image
07:45 - so here you can give the little
07:47 - description for your image
07:49 - and also you can even write the readme
07:52 - for
07:52 - your image uh what it's doing and what's
07:55 - the purpose of this
07:56 - image right so here is the general
07:59 - information about the image
08:01 - you can also see this tags uh section
08:05 - where you will be able to see the
08:08 - tags related to your image i only have
08:11 - one tag here
08:12 - and the size of this image is around
08:16 - 746 kilobyte right
08:19 - and also you can see how you can pull
08:21 - this image so you can just
08:23 - pull this image using docker pull
08:25 - codebind forward slash
08:27 - hello and then you need to use this tag
08:30 - you can just copy this and then pull
08:33 - this image also
08:34 - also you have the build section this is
08:37 - for the automation so if you are using
08:39 - github or
08:40 - bitbucket automation system then you can
08:44 - directly push your image from the github
08:47 - or bitbucket
08:48 - into your docker registry you also have
08:50 - the collaborator tab
08:52 - and then web hooks also and then you
08:55 - have the settings
08:56 - related to your docker image
09:00 - right so you can make it private if you
09:02 - want
09:04 - and also you can delete your image from
09:07 - this section right so let's say i just
09:09 - want to pull this image i will just copy
09:12 - this text
09:13 - and then i will just write sudo
09:16 - and then paste this test text which i
09:19 - have copied which is
09:20 - docker pull and the name of my image
09:23 - with the tag
09:25 - and it's going to pull this image if
09:27 - it's
09:28 - already not there on your operating
09:31 - system so this was the simple
09:33 - demonstration
09:34 - using which you can create your images
09:37 - and then push your images to the docker
09:39 - hub and then manage your images
09:42 - using the docker hub so i hope you've
09:44 - enjoyed this video and i will see you
09:46 - in the next video

Cleaned transcript:

hey guys welcome back so in this video we are going to talk about docker hub so what is docker hub so docker hub is a service provided by docker for finding and sharing your container images with your teams or with the general public so as you can see i'm on this website which is hub.docker.com and here i can sign in at the time of downloading the docker on your operating system you might have created a docker id for you and the password for you so you can log in with that docker id and password so once you are signed in with your docker id and password you will be able to see this kind of web page here you have this explore option where you can explore all the other repositories you have this repository option and under this repository option you will be able to see and manage your repositories which you have created and which you have pushed into your docker registry here you also have the option for organization which we are not going to cover in this video and also you have all these general uh account related uh stuff here right now let's talk about the pricing a little bit so you can see uh for public repository docker hub is absolutely free and that's what we are going to uh be using but if you are working in an organization or you want to create some private repositories for your docker images then you can choose one of these options which are provided here also it's not necessary that you need to use docker hub as a docker registry you can create a docker registry you have this documentation which you can use to create a docker registry i know uh google cloud provide a docker registry or a github nowadays also provide these kind of docker registries so you can create your own registry if you want you don't need docker hub for just managing your images right so right now you can see i don't have any image on my docker hub account so to start with i have this very simple uh docker file which i want to convert to the docker image and then i want to push that image to my docker hub registry so let me list all the docker images on my operating system right now i don't have any image so let's build one image so i'm going to just write sudo docker build dot hyphen t and the name of the image i'm going to just name my image as hello and then press enter which is going to just create this image i have this hello world image which is created five seconds ago right so now let me just also quickly uh run this image to see everything is working so i'm going to once again write sudo docker run hyphen hyphen rm hyphen it and the name of the image which is hello and then press enter and it prints the content of my main dot cpp that's what it's doing so that's a very basic minimal image the size is very small that's why i have done this and once you have all these images let me just clear the terminal and then let me just move this terminal a little bit up and let's just list all the images once again so now i have this image hello and i want to push this image to my docker hub registry so in order to push this image first of all you need to log in with your docker id into your docker terminal most probably you are already logged in but if you are not you can just give this command which is docker login and if you want to log out then you can just write log out here right so let's give this command which is a pseudo docker login and then give your username here i'm going to provide my username and then you need to provide your password so let me quickly provide my password and then press enter which is going to log me in the docker so you can see login succeeded and now i can just push my images to my docker hub registry so first thing we generally do in order to push the image to the registry is we just tag it so we can give this command which is docker and then tag and then the name of your image my image name is hello you can also take the image id and then give the space and then give some tag to your image so right now because i want to push my uh docker image to this docker hub account and which has the username codebind i will just first of all write code bind here and then forward slash and then you can give the name of your image i will just leave it as hello and then you can give the tag of your image so i'm going to just give the tag 1.0.0 so this tag is useful whenever you want to just let's say keep working on your image and you want to update the image and want to just version your image into multiple versions so you have the track of all these versions right so i'm going to just tag my image i'm going to press enter and then i will once again list all the images and now you can see i have this uh image with the this name and i have the tag 1.0.0 right now once you do that you are ready to push your image to the docker registry the command is very simple sudo docker push and the name of your docker file which is codebind forward slash hello in my case you also need to give the tag here 1.0.0 and then you can just press enter which is going to push your image to your docker hub registry so just wait for some seconds and you can see it's pushed so i'm going to go to my docker hub web page and then refresh this web page and now i can see this image which is available here and also you will be able to see that this image is a public image so it's not private so anybody on docker can see your image right also when you click on this image you will be able to see more information about the image so here you can give the little description for your image and also you can even write the readme for your image uh what it's doing and what's the purpose of this image right so here is the general information about the image you can also see this tags uh section where you will be able to see the tags related to your image i only have one tag here and the size of this image is around 746 kilobyte right and also you can see how you can pull this image so you can just pull this image using docker pull codebind forward slash hello and then you need to use this tag you can just copy this and then pull this image also also you have the build section this is for the automation so if you are using github or bitbucket automation system then you can directly push your image from the github or bitbucket into your docker registry you also have the collaborator tab and then web hooks also and then you have the settings related to your docker image right so you can make it private if you want and also you can delete your image from this section right so let's say i just want to pull this image i will just copy this text and then i will just write sudo and then paste this test text which i have copied which is docker pull and the name of my image with the tag and it's going to pull this image if it's already not there on your operating system so this was the simple demonstration using which you can create your images and then push your images to the docker hub and then manage your images using the docker hub so i hope you've enjoyed this video and i will see you in the next video
