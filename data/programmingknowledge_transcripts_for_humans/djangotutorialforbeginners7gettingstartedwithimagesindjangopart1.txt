With timestamps:

00:00 - welcome to programming knowledge so this
00:02 - is the seven tutorial of our django
00:03 - series so like in the previous tutorial
00:06 - I showed you how you can work with the
00:07 - front-end part of your application how
00:10 - you can use Django template engine so
00:12 - this tutorial is going to is going to be
00:15 - very interesting we are going to work
00:17 - with images on this tutorial so I will
00:20 - tell you how you can work with images
00:22 - within Django so this is going to be
00:24 - interesting tutorial so let's get
00:26 - started with this
00:26 - so before I proceed so this is the
00:29 - github link of a repository you can cool
00:32 - clone or download this repository you
00:34 - can have a look at the full source code
00:35 - and run this project on your machine I
00:38 - have defined below the instructions how
00:40 - to run the project on your local machine
00:41 - and that's going to be very simple one
00:43 - so let's get started with the tutorial
00:45 - so first thing I need to do you need to
00:49 - move to your settings short py file so I
00:51 - remove the settings or py file right
00:54 - inside my settings or py file what you
00:57 - need to do you need to define a static
00:59 - URL which is going to be static and you
01:02 - need to define static files directory is
01:04 - equal to OS third path don't join base
01:07 - directory with the static folder so what
01:11 - here I'm actually mentioning that I've
01:13 - made a static folder and here it is an
01:16 - inside my static folder I have two
01:18 - images Django dot PNG ants Python dot
01:20 - PNG so I would be using these two images
01:23 - and what I'm going to show you what you
01:26 - need to do so this is a static folder
01:29 - which I am reffering which I also showed
01:31 - you in two Bs code I'm showing here for
01:33 - a better experience for you for view for
01:36 - of it and inside my static folder I have
01:39 - two images one is sanguine and other is
01:41 - Python so I am referring to this
01:43 - particular static folder and to refer
01:46 - this particular static folder you need
01:47 - to move your move into your setting
01:49 - shortly by file and you need to define
01:51 - this heading so this piece of code
01:54 - okay so first I'll create a route so
01:57 - I'll move to my you you are s dot py
01:59 - file and I am going to define path my
02:07 - image page okay
02:12 - and I'm going to define a views dot my
02:17 - my image page and I'll give this a name
02:22 - is equal to my image page so this is
02:30 - going to be interesting
02:30 - okay now my image page I've defined my
02:35 - image page here okay and I'll define a
02:38 - function inside my views my image fin
02:40 - and I have given a name here it is on my
02:42 - image grade also so what I'm going to do
02:45 - I'm going to define a view okay I'll
02:50 - define a view define my image page which
02:56 - takes requests has a parameter good and
03:01 - it will return and render an HTML page
03:03 - requests and that's name is going to
03:07 - make image page dot HTML so this is
03:11 - predefined okay the server has been
03:14 - reloaded okay so this looks we define
03:16 - till now and inside my templates folder
03:19 - I'll create a new template I'll click it
03:22 - new file image page dot HTML okay this
03:30 - is fine now okay now to create an image
03:33 - file or HTML what I'm going to do I'm
03:36 - going to take any of the pages here okay
03:40 - and I'll copy this quickly okay now what
03:45 - do you need to do I'll define this as
03:49 - okay sorry for this I'll define this as
03:54 - you can define any name image page okay
04:00 - so and what you need to do I'll open
04:04 - this text file so this is the syntax how
04:08 - you can load an static image so what you
04:12 - need to define you need to divine person
04:14 - load static inside your be a template so
04:17 - below this line I will define percent
04:19 - load starting percent load
04:25 - static and I'll refer to this image okay
04:31 - I remove this okay from here what I'm
04:37 - going to tell you that this is a
04:39 - bootstrap and here what do you need to
04:41 - do you will learn about images so here
04:45 - I'll type images so this is the
04:50 - responsive class of bootstrap we are
04:52 - going to use which will help us to make
04:54 - our image responsive so this is going to
04:57 - very interesting so what you can do you
05:01 - can define div class is equal to
05:06 - container container fluid okay and what
05:12 - do you what I'm going to do next I'll
05:16 - define a true we will be learning
05:18 - bootstrap in the upcoming lectures as
05:20 - well so this short idea how you can
05:24 - create a responsive page so this is
05:26 - going to interesting diff class is equal
05:28 - to row and inside a row I have a
05:30 - container then a row inside my container
05:32 - then inside middle I have a column div
05:35 - class is equal to call MD six okay now
05:43 - I'm going to quickly copy this so how
05:49 - you can use this class so so this class
05:53 - image fluid response to reduce the
05:55 - deficit the responses CSS which has been
05:59 - already in written inside the bootstrap
06:01 - to make an image response same on
06:03 - multiple devices and to define the image
06:06 - source I'll use a curly brace that %
06:10 - then again a person side and inside my %
06:14 - eye space we have space static and I'll
06:18 - define the image name using single
06:19 - quotes so let me define Chango dot PNG
06:26 - so this this looks pretty fine here
06:28 - Django dot PNG and you can define you
06:31 - can give any name here okay so I'll just
06:36 - close the server then restart my server
06:39 - because the server has started - I have
06:42 - no issue here so I'll go to my local
06:44 - host yeah it's running and I'll give my
06:48 - image page okay so this is showing an
06:54 - error which says the current path let me
06:58 - check my URL oh I didn't save this ok
07:03 - yes now now it's working yeah here you
07:09 - can see so you can see the image has
07:11 - been successfully loaded so this looks
07:13 - pretty good you can also use in your
07:17 - HTML page what you can do you can also
07:21 - use python dot PNG so this also works so
07:29 - this looks pretty fine and now what I'm
07:32 - going to show you
07:33 - Chango dot PNG so I'll move to Django
07:36 - dot PNG and so if I'll give you a brief
07:39 - intro so now you'll right click on this
07:42 - and click inspect and when you click on
07:45 - inspect so this is a container fluid
07:50 - then this is a row inside this is a
07:52 - column of width medium six that on the
07:55 - multiple on the medium devices it will
07:58 - have a width of six the bootstrap has a
08:00 - total width of 12 so we will going to
08:02 - learn that and this image source is this
08:05 - particular image so we can play with the
08:07 - inspector tools what we can do we can
08:10 - use background is equal to tread
08:13 - let me sorry for this okay like this is
08:17 - our row so I'll type background is equal
08:23 - to red now you can see a row which was
08:26 - also equivalent to the container fluid
08:27 - as a background red and what we can do
08:30 - this is a column will align this image
08:32 - in the center and type margin:0 auto
08:37 - okay so now you can see the image has
08:40 - been allied into the center so let me
08:43 - check okay there might be some not
08:46 - exactly but might be some issue but
08:48 - we'll yeah rectifying this in the
08:50 - upcoming lecture how we can resolve this
08:53 - so though now the point is when I move
08:55 - to a different devices since I had used
08:58 - image druid as a class I move to galaxy
09:00 - s file you can see the number collapses
09:03 - itself and the image is being responsive
09:05 - I can move to iPhone X image being
09:07 - responsive so this this is going to be
09:10 - very helpful in the responsive device
09:12 - designed the iPhone 5 and I close this
09:15 - and the best part is when i refresh this
09:18 - page it's all gone so because that was
09:21 - temporary to make this permanent you
09:24 - need to define CSS in your HTML page and
09:27 - I'll define as margin:0 auto okay
09:33 - so when I go to space refresh now this
09:36 - is permanent so this this is pretty cool
09:39 - so in the next tutorial I'm going to
09:42 - work with the images so that would that
09:45 - would really help you so guys thank you
09:47 - guys thank you so much so you can go to
09:50 - our repository have a look at the source
09:52 - code and next tutorial we are also going
09:55 - to work with the images then we will
09:57 - also try in the next tutorial how we can
09:59 - work first I will let you know about the
10:01 - bootstrap how we can work with the
10:03 - bootstrap and using images then we are
10:06 - going to use the if-else logic how we
10:08 - can render multiple images on a single
10:11 - page using an if-else logic so that is
10:13 - going to be very interesting guys I will
10:14 - catch up in the next picture thank you
10:16 - guys thank you so much

Cleaned transcript:

welcome to programming knowledge so this is the seven tutorial of our django series so like in the previous tutorial I showed you how you can work with the frontend part of your application how you can use Django template engine so this tutorial is going to is going to be very interesting we are going to work with images on this tutorial so I will tell you how you can work with images within Django so this is going to be interesting tutorial so let's get started with this so before I proceed so this is the github link of a repository you can cool clone or download this repository you can have a look at the full source code and run this project on your machine I have defined below the instructions how to run the project on your local machine and that's going to be very simple one so let's get started with the tutorial so first thing I need to do you need to move to your settings short py file so I remove the settings or py file right inside my settings or py file what you need to do you need to define a static URL which is going to be static and you need to define static files directory is equal to OS third path don't join base directory with the static folder so what here I'm actually mentioning that I've made a static folder and here it is an inside my static folder I have two images Django dot PNG ants Python dot PNG so I would be using these two images and what I'm going to show you what you need to do so this is a static folder which I am reffering which I also showed you in two Bs code I'm showing here for a better experience for you for view for of it and inside my static folder I have two images one is sanguine and other is Python so I am referring to this particular static folder and to refer this particular static folder you need to move your move into your setting shortly by file and you need to define this heading so this piece of code okay so first I'll create a route so I'll move to my you you are s dot py file and I am going to define path my image page okay and I'm going to define a views dot my my image page and I'll give this a name is equal to my image page so this is going to be interesting okay now my image page I've defined my image page here okay and I'll define a function inside my views my image fin and I have given a name here it is on my image grade also so what I'm going to do I'm going to define a view okay I'll define a view define my image page which takes requests has a parameter good and it will return and render an HTML page requests and that's name is going to make image page dot HTML so this is predefined okay the server has been reloaded okay so this looks we define till now and inside my templates folder I'll create a new template I'll click it new file image page dot HTML okay this is fine now okay now to create an image file or HTML what I'm going to do I'm going to take any of the pages here okay and I'll copy this quickly okay now what do you need to do I'll define this as okay sorry for this I'll define this as you can define any name image page okay so and what you need to do I'll open this text file so this is the syntax how you can load an static image so what you need to define you need to divine person load static inside your be a template so below this line I will define percent load starting percent load static and I'll refer to this image okay I remove this okay from here what I'm going to tell you that this is a bootstrap and here what do you need to do you will learn about images so here I'll type images so this is the responsive class of bootstrap we are going to use which will help us to make our image responsive so this is going to very interesting so what you can do you can define div class is equal to container container fluid okay and what do you what I'm going to do next I'll define a true we will be learning bootstrap in the upcoming lectures as well so this short idea how you can create a responsive page so this is going to interesting diff class is equal to row and inside a row I have a container then a row inside my container then inside middle I have a column div class is equal to call MD six okay now I'm going to quickly copy this so how you can use this class so so this class image fluid response to reduce the deficit the responses CSS which has been already in written inside the bootstrap to make an image response same on multiple devices and to define the image source I'll use a curly brace that % then again a person side and inside my % eye space we have space static and I'll define the image name using single quotes so let me define Chango dot PNG so this this looks pretty fine here Django dot PNG and you can define you can give any name here okay so I'll just close the server then restart my server because the server has started I have no issue here so I'll go to my local host yeah it's running and I'll give my image page okay so this is showing an error which says the current path let me check my URL oh I didn't save this ok yes now now it's working yeah here you can see so you can see the image has been successfully loaded so this looks pretty good you can also use in your HTML page what you can do you can also use python dot PNG so this also works so this looks pretty fine and now what I'm going to show you Chango dot PNG so I'll move to Django dot PNG and so if I'll give you a brief intro so now you'll right click on this and click inspect and when you click on inspect so this is a container fluid then this is a row inside this is a column of width medium six that on the multiple on the medium devices it will have a width of six the bootstrap has a total width of 12 so we will going to learn that and this image source is this particular image so we can play with the inspector tools what we can do we can use background is equal to tread let me sorry for this okay like this is our row so I'll type background is equal to red now you can see a row which was also equivalent to the container fluid as a background red and what we can do this is a column will align this image in the center and type margin0 auto okay so now you can see the image has been allied into the center so let me check okay there might be some not exactly but might be some issue but we'll yeah rectifying this in the upcoming lecture how we can resolve this so though now the point is when I move to a different devices since I had used image druid as a class I move to galaxy s file you can see the number collapses itself and the image is being responsive I can move to iPhone X image being responsive so this this is going to be very helpful in the responsive device designed the iPhone 5 and I close this and the best part is when i refresh this page it's all gone so because that was temporary to make this permanent you need to define CSS in your HTML page and I'll define as margin0 auto okay so when I go to space refresh now this is permanent so this this is pretty cool so in the next tutorial I'm going to work with the images so that would that would really help you so guys thank you guys thank you so much so you can go to our repository have a look at the source code and next tutorial we are also going to work with the images then we will also try in the next tutorial how we can work first I will let you know about the bootstrap how we can work with the bootstrap and using images then we are going to use the ifelse logic how we can render multiple images on a single page using an ifelse logic so that is going to be very interesting guys I will catch up in the next picture thank you guys thank you so much
