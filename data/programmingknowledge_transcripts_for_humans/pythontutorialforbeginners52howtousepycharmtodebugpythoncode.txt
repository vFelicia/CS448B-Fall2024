With timestamps:

00:00 - hey guys welcome to the next video on
00:02 - Python tutorial for beginners in the
00:04 - last video we have seen how to debug our
00:06 - Python script using Python debugger or
00:09 - PDB now in this video I'm going to show
00:12 - you how you can debug your python script
00:14 - using PyCharm ide so to start with I
00:18 - have this Python script which takes two
00:20 - user input both numbers and I have
00:23 - created this add a function which just
00:26 - add these two numbers and return the sum
00:29 - and using this print function I'm just
00:31 - printing the sum of these two numbers
00:33 - now let's run this code normally without
00:36 - any debugging and I'm going to just give
00:40 - two numbers here 44 and 55 and it's
00:43 - going to give me this kind of output
00:46 - which is wrong because the sum of 44 and
00:48 - 55 is not obviously 4 4 5 5 now some of
00:53 - you might already know the problem with
00:55 - this code but let's debug it with the
00:58 - help of the Python debugger so in order
01:01 - to start the debugging in pycharm IDE
01:03 - you just need to click this icon which
01:06 - looks like a bug and when you hover over
01:09 - it it will say debug so I'm going to
01:12 - click on this debug button which is
01:14 - going to start the debugging of my
01:16 - program so you can see here this
01:18 - debugging window is opened and this
01:20 - debugging window have two sections one
01:23 - is console section and other is debugger
01:26 - section so right now we are in the
01:29 - console section where we can provide the
01:31 - user inputs and see the output of our
01:35 - Python script just like the normal
01:37 - output now there is also a debugger
01:40 - window where you will be able to analyze
01:42 - the variables and all the frames of your
01:46 - program so I'm going to go to the
01:48 - console window and here I'm going to
01:50 - provide the first number and the second
01:53 - number and I'm going to press ENTER and
01:55 - it prints the sum of these two numbers
01:58 - which is not correct but our Python
02:00 - script is finished executing now in
02:03 - order to debug this Python script we
02:05 - need to set the break point at which the
02:09 - execution of the program will stop and
02:11 - we will go step by step
02:13 - after this point so I'm going to set the
02:16 - breakpoint at this line which is line
02:17 - number 13 at which my main function is
02:21 - called and then click on this line where
02:23 - you want to set the set point and you
02:25 - will be able to see this red circle logo
02:28 - which means that we have said the
02:30 - breakpoint at at this point so let's
02:32 - start the debugging once again and you
02:34 - will see because we have set the
02:37 - breakpoint here the program execution is
02:40 - stopped at the line number 13 and how
02:43 - you know that the execution is stopped
02:45 - at line number 13 you will be able to
02:48 - see under frames this line which is
02:51 - highlighted and you can see the line
02:54 - number is 13 so at this point the
02:57 - program execution is on the line number
03:00 - 13 also you will be able to see these
03:02 - kind of icon on top of this window so
03:07 - the first icon here is the step-over
03:09 - icon which you can click to step over
03:12 - your code the second icon is step into
03:15 - icon using which you can step inside
03:19 - your function or a class on which you
03:23 - are currently on the third icon is step
03:26 - into my code so generally if you use
03:28 - this option which is step into and your
03:31 - program contains some inbuilt or
03:34 - built-in functions then it's going to go
03:36 - into those built in function and this
03:39 - other option with say step into my code
03:41 - is going to only step inside your code
03:45 - and not into the built-in functions or
03:47 - the classes there are a few more I can
03:50 - share one is for step into and other a
03:53 - step out which we are going to see later
03:56 - also under this variables section you
03:59 - will be able to see the values of your
04:01 - variables so first of all I'm going to
04:03 - click this button which says step over
04:06 - you can also press f8 to step over so
04:09 - I'm going to click this button and
04:10 - because my program asks the user to
04:13 - provide some input I will go to the
04:16 - console and provide those input so I'm
04:19 - going to just give 33 as the first
04:21 - number and 55 as the second number and
04:24 - then once again I am going to press
04:26 - ENTER which is going to
04:27 - print the output and we come out of the
04:30 - debugging so now you know that this
04:33 - breakpoint is not helping us so we are
04:35 - going to remove this breakpoint and we
04:38 - are going to set our breakpoint here on
04:40 - the line number nine so here we will be
04:44 - able to see the values inside the
04:46 - variable x and y so that we know what's
04:50 - the problem inside our code so let me
04:53 - start the debugging once again and once
04:56 - again I'm going to give these two inputs
04:59 - 33 and 44 let's say and then you can see
05:03 - our program execution is stopped at this
05:05 - breakpoint and you will be able to see
05:08 - the values of your X variable and the Y
05:12 - variable now immediately you will see
05:14 - that this x value is the string and also
05:18 - this Y value is the string and whenever
05:21 - we use this plus operator with two
05:23 - strings it's going to give us the
05:26 - concatenation of those two strings also
05:29 - in the variables you will be able to see
05:32 - the list of variables and the type of
05:35 - those variables and the values inside
05:38 - those variables so you can see X has
05:41 - string type and the value is 33 and Y
05:45 - has also the typed string and the value
05:48 - is 44 now I told you that you can use
05:52 - this button to step into your code so
05:54 - I'm going to click on this button which
05:57 - says step into my code which is going to
06:00 - step inside this function so our program
06:03 - execution was on this line this was the
06:06 - breakpoint we have set and when I
06:09 - clicked the step into my code it has
06:11 - stepped into the function add if I would
06:16 - have pressed the step-over button then
06:18 - my program execution will go to the next
06:21 - line and not inside this add function so
06:25 - because I have pressed this button which
06:27 - say step into my code that's why it goes
06:29 - inside the function so here also you
06:32 - will be able to see the values of your X
06:36 - variable and Y variable and also you
06:38 - will be able to see the value of the sum
06:41 - when you just click the step-over button
06:43 - and here you will be able to see the
06:46 - value of sum which is three three four
06:48 - four which is the concatenation of these
06:51 - two numbers so immediately you will know
06:53 - that you are not adding these two
06:55 - numbers you are just concatenating two
06:58 - strings which gives you this kind of
07:01 - result so once you have pointed out the
07:03 - problem in your code we are going to
07:05 - stop our debugging so there is this red
07:08 - button here which is a square button I'm
07:10 - going to click on this which is going to
07:12 - stop that debugging now in order to fix
07:15 - this code I can just type cast this
07:17 - input which is a string into the integer
07:20 - and with the second variable also I am
07:23 - going to do the same and now let's start
07:26 - the debugging once again and once again
07:28 - I am going to give the two numbers 33
07:31 - and 44 and press Enter and the program
07:36 - execution will stop at the breakpoint
07:38 - and now you will be able to see the
07:40 - values here
07:41 - which is 33 and 44 and under variables
07:45 - you will be able to see the type of
07:46 - these two numbers which is now in so
07:50 - both are int values I'm going to step
07:52 - over now so last time we have stepped
07:55 - into the function which is the add
07:57 - function this time I'm going to just
07:59 - press the step over button which is
08:01 - going to not go inside the add function
08:04 - but just tap over to the next line and
08:07 - you will be able to see the value of Z
08:10 - here which is 77 which is the correct
08:13 - sum of these two numbers so this is how
08:16 - you can use pycharm to debug your Python
08:19 - script I hope you have enjoyed this
08:21 - video and I will see you in the next
08:23 - video
08:31 - you

Cleaned transcript:

hey guys welcome to the next video on Python tutorial for beginners in the last video we have seen how to debug our Python script using Python debugger or PDB now in this video I'm going to show you how you can debug your python script using PyCharm ide so to start with I have this Python script which takes two user input both numbers and I have created this add a function which just add these two numbers and return the sum and using this print function I'm just printing the sum of these two numbers now let's run this code normally without any debugging and I'm going to just give two numbers here 44 and 55 and it's going to give me this kind of output which is wrong because the sum of 44 and 55 is not obviously 4 4 5 5 now some of you might already know the problem with this code but let's debug it with the help of the Python debugger so in order to start the debugging in pycharm IDE you just need to click this icon which looks like a bug and when you hover over it it will say debug so I'm going to click on this debug button which is going to start the debugging of my program so you can see here this debugging window is opened and this debugging window have two sections one is console section and other is debugger section so right now we are in the console section where we can provide the user inputs and see the output of our Python script just like the normal output now there is also a debugger window where you will be able to analyze the variables and all the frames of your program so I'm going to go to the console window and here I'm going to provide the first number and the second number and I'm going to press ENTER and it prints the sum of these two numbers which is not correct but our Python script is finished executing now in order to debug this Python script we need to set the break point at which the execution of the program will stop and we will go step by step after this point so I'm going to set the breakpoint at this line which is line number 13 at which my main function is called and then click on this line where you want to set the set point and you will be able to see this red circle logo which means that we have said the breakpoint at at this point so let's start the debugging once again and you will see because we have set the breakpoint here the program execution is stopped at the line number 13 and how you know that the execution is stopped at line number 13 you will be able to see under frames this line which is highlighted and you can see the line number is 13 so at this point the program execution is on the line number 13 also you will be able to see these kind of icon on top of this window so the first icon here is the stepover icon which you can click to step over your code the second icon is step into icon using which you can step inside your function or a class on which you are currently on the third icon is step into my code so generally if you use this option which is step into and your program contains some inbuilt or builtin functions then it's going to go into those built in function and this other option with say step into my code is going to only step inside your code and not into the builtin functions or the classes there are a few more I can share one is for step into and other a step out which we are going to see later also under this variables section you will be able to see the values of your variables so first of all I'm going to click this button which says step over you can also press f8 to step over so I'm going to click this button and because my program asks the user to provide some input I will go to the console and provide those input so I'm going to just give 33 as the first number and 55 as the second number and then once again I am going to press ENTER which is going to print the output and we come out of the debugging so now you know that this breakpoint is not helping us so we are going to remove this breakpoint and we are going to set our breakpoint here on the line number nine so here we will be able to see the values inside the variable x and y so that we know what's the problem inside our code so let me start the debugging once again and once again I'm going to give these two inputs 33 and 44 let's say and then you can see our program execution is stopped at this breakpoint and you will be able to see the values of your X variable and the Y variable now immediately you will see that this x value is the string and also this Y value is the string and whenever we use this plus operator with two strings it's going to give us the concatenation of those two strings also in the variables you will be able to see the list of variables and the type of those variables and the values inside those variables so you can see X has string type and the value is 33 and Y has also the typed string and the value is 44 now I told you that you can use this button to step into your code so I'm going to click on this button which says step into my code which is going to step inside this function so our program execution was on this line this was the breakpoint we have set and when I clicked the step into my code it has stepped into the function add if I would have pressed the stepover button then my program execution will go to the next line and not inside this add function so because I have pressed this button which say step into my code that's why it goes inside the function so here also you will be able to see the values of your X variable and Y variable and also you will be able to see the value of the sum when you just click the stepover button and here you will be able to see the value of sum which is three three four four which is the concatenation of these two numbers so immediately you will know that you are not adding these two numbers you are just concatenating two strings which gives you this kind of result so once you have pointed out the problem in your code we are going to stop our debugging so there is this red button here which is a square button I'm going to click on this which is going to stop that debugging now in order to fix this code I can just type cast this input which is a string into the integer and with the second variable also I am going to do the same and now let's start the debugging once again and once again I am going to give the two numbers 33 and 44 and press Enter and the program execution will stop at the breakpoint and now you will be able to see the values here which is 33 and 44 and under variables you will be able to see the type of these two numbers which is now in so both are int values I'm going to step over now so last time we have stepped into the function which is the add function this time I'm going to just press the step over button which is going to not go inside the add function but just tap over to the next line and you will be able to see the value of Z here which is 77 which is the correct sum of these two numbers so this is how you can use pycharm to debug your Python script I hope you have enjoyed this video and I will see you in the next video you
