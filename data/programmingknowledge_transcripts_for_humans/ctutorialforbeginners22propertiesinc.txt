With timestamps:

00:01 - hello guys in the last video I have
00:02 - shown you how to use seter and geta
00:05 - method to protect your member variable
00:09 - from accessing by the other classes or
00:14 - the main class and Ive also shown you
00:17 - why we need to use Setter and getter and
00:21 - why it's a good practice to use Setter
00:24 - and getter in objectoriented programming
00:28 - now C shop has its own way of setting
00:32 - and getting these values and that is
00:36 - through properties through properties
00:39 - you can also do the same thing and even
00:43 - better uh by setting and getting the
00:46 - values and not exposing your uh member
00:50 - variables of the class so in the last
00:53 - video I have given you an example of
00:55 - book class which has the member variable
00:59 - book book ID book name and book number
01:03 - of
01:04 - pages and I have shown you how you can
01:07 - protect these
01:09 - variable uh by using set method and get
01:13 - method so if you haven't seen that video
01:16 - please see that video so that you can
01:19 - understand uh the setter and getter
01:21 - method and I'm using the same uh quote
01:24 - from the last time so we have the book
01:28 - class and these three member variable
01:31 - and I I have shown you how you can set
01:34 - and get values right now let's
01:37 - see how we can do achieve the same thing
01:40 - to protect your variable by properties
01:44 - so first of all I have shown you how you
01:48 - can set or you can create set and get a
01:51 - method for this ID of the book and we
01:55 - have just used the set ID and get ID now
01:59 - let's let see how we can do it by
02:02 - properties the same
02:05 - thing so what we need to do here is
02:09 - instead of the setter and getter method
02:12 - we use public and the return type which
02:16 - is in our case integer because ID is an
02:19 - integer so we will write int public int
02:22 - and give the name
02:24 - of your property so for ID I will give
02:28 - for example this property called ID and
02:32 - this will not take any argument here and
02:36 - for setting the values I use the keyword
02:41 - set and then in these curly braces I
02:45 - just enclose my earlier set Setter
02:50 - method like
02:51 - this and in the similar way what I will
02:55 - do is I
02:57 - will just use the keyword get
03:00 - and I will use these curly braces and in
03:05 - this I will return my ID which is this
03:11 - variable so how we have declared this
03:16 - uh property ID here we have used keyword
03:21 - to set the value and how we are setting
03:25 - the values in the same way we have done
03:28 - in the setter method
03:30 - but instead of this ID because this set
03:34 - is not taking any argument right and for
03:39 - example I want to set ID so instead of
03:43 - set ID method what I can say is ID B1
03:49 - which is the object of book class and we
03:54 - can
03:56 - say b1. ID is equal to 10 for example so
04:00 - I set the ID is equal to 10 now where
04:05 - this 10 goes in this uh property so it's
04:12 - we use the keyword
04:15 - value to assign that Pro property or
04:19 - assign that value to your set method
04:24 - because it's not taking any argument
04:26 - right so we use keyword so whenever for
04:30 - example you assign B1 which is an our
04:34 - object dot our property name which is ID
04:38 - is equal to 10 this 10 will be stored in
04:42 - this value and then it will see if this
04:46 - value is less than zero and if it's uh
04:49 - less than zero it will show uh the
04:52 - exception or throw the exception
04:54 - otherwise it will assign this value to
04:56 - your ID right and when you call
05:02 - this ID so for example I want to access
05:05 - the ID I can simply use my b1. ID and
05:11 - replace it here right and let me comment
05:15 - this second console. right line so now
05:20 - to access your ID you just need to use
05:24 - b1. ID okay instead of get method so
05:29 - this this is how you define property in
05:32 - C you use set method to set the value
05:38 - and
05:40 - just remember that you need to use this
05:43 - value to uh store whatever is assigned
05:47 - to
05:48 - your variable or whatever you is uh
05:52 - assigned to your ID and then to get the
05:57 - value you just return it it here like
06:00 - this and to access this value you just
06:04 - need to give the same thing b1. ID right
06:09 - we can do it do the same for our book
06:13 - name class we have declared set book
06:16 - name and get book name right so I will
06:19 - just delete
06:22 - this argument because we uh our property
06:26 - will not take any argument but it will
06:30 - return a string so I will declare public
06:32 - string and let name this property book
06:37 - name right and for setting once again we
06:41 - use the keyword set and in these curly
06:46 - braces we enclose our
06:50 - code for setting the value right and for
06:54 - getting the value we use the keyword get
06:58 - once again
07:00 - get and in these two curly braces we
07:04 - return whatever we want to return so
07:08 - string or we will just return this
07:11 - okay and we can take uh delete this get
07:16 - and set method and this will do just
07:19 - fine this will work just fine for
07:22 - example for uh setting the book name I
07:26 - can say B1 Dot and it will give me this
07:30 - property now which is called book name
07:34 - right and I can assign any value to the
07:37 - book name like this as we assign it to
07:41 - some variable so I will give the name
07:45 - the
07:47 - C shop
07:49 - book okay and I can access it once again
07:54 - very simply just copy this and you can
07:58 - exit it
07:59 - access this property like this so when I
08:03 - run the
08:07 - program it
08:09 - shows some error let's see what's okay
08:13 - because I haven't use the keyword value
08:17 - here and it doesn't know what this is so
08:21 - I need to pass in the value keyword this
08:25 - will this just remember always it
08:28 - doesn't take any argument set method
08:30 - doesn't take any argument instead of
08:32 - argument you just need to pass the
08:34 - keyword value here and value here right
08:38 - now when I run the program it shows the
08:41 - result book ID is 10 which we have
08:44 - assigned and book name is
08:48 - c book
08:51 - okay so I can say book name is
08:55 - C now if you have remembered in the last
08:59 - last video we also have this variable
09:01 - called number of pages and it was we we
09:06 - have already assigned a value to number
09:09 - of pages as 250
09:12 - so it's not possible to set the value
09:16 - for number of pages so how we can Define
09:19 - the property for
09:21 - this instead of this uh get number of
09:25 - pages what we can do is we can just
09:30 - only use get property
09:35 - and we can avoid using set property for
09:39 - that and now it will just give you the
09:42 - value of number of pages but you can not
09:45 - set the value of number of pages so just
09:50 - I will just copy this and I will say
09:54 - book
09:55 - pages is and I can call this Prof
09:59 - property number of pages here okay and
10:02 - when I run the program it will run fine
10:05 - book pages
10:07 - IS250 okay
10:10 - now if you don't have any conditions and
10:15 - you just uh need simple set and get
10:18 - method for example you don't need if if
10:23 - your ID is less than zero or you need
10:26 - don't need to check that if your your
10:29 - book name is null and you just need to
10:32 - set and get value without any spe
10:35 - special conditions like uh I have
10:38 - Illustrated in last video for example I
10:41 - will give you an
10:43 - example so I have uh a private
10:46 - member
10:48 - private
10:50 - int this will be int and we
10:55 - have for
10:58 - example
10:59 - author so this let's take it as a string
11:03 - and
11:06 - author so we have author uh private
11:10 - member so for getting and getting and
11:13 - setting uh this private member what we
11:17 - can do so we can
11:21 - define public which I have shown you in
11:23 - the last video right public
11:27 - void
11:32 - void and then your set author property
11:38 - so I will just use this and I will
11:41 - say set
11:44 - author and what I can do I can pass a
11:48 - string
11:49 - variable for setting and I can
11:54 - just use
11:57 - public
12:03 - string and get author same get
12:08 - author for getting the value
12:12 - right so this I have shown you in the
12:16 - last video what this you can do here
12:21 - right and in here I will use the
12:27 - author string author and this author
12:33 - will
12:34 - be assigned to this
12:43 - author so
12:47 - this dot
12:49 - author is equal to your author you pass
12:55 - right and you can return this in get
13:04 - method
13:08 - or
13:10 - return
13:11 - this dot
13:15 - author
13:16 - so if you don't have any
13:20 - condition uh to check and you will have
13:24 - or when you program a class you will
13:27 - have many field in which you don't even
13:30 - need any condition you don't even need
13:32 - to check any condition and you will just
13:35 - set and get value like this so it's more
13:40 - easier to handle these things or these
13:43 - codes by using properties so what we can
13:47 - do instead of using this getter and
13:49 - Setter simple getter and Setter without
13:51 - any conditions I will say
13:56 - public and the return type which is
14:00 - string and I will say this property is
14:03 - called
14:05 - author and then I will enclose it in
14:08 - this curly BRAC and I can
14:12 - say
14:15 - get and
14:18 - set
14:20 - okay and this property will work same as
14:24 - these two getter and Setter function so
14:27 - your code is
14:29 - reduced very much here right this
14:33 - property get and set just using these
14:36 - two get and set your C code will know
14:40 - that the set will have to set the
14:44 - property or set the variable some
14:46 - variable and this get is used to access
14:51 - uh the value of the variable right so I
14:54 - can just remove this getter and Setter
14:57 - and instead of that I can use this
14:59 - property and even you can make this code
15:04 - really small like
15:08 - this and this will become a on line code
15:12 - for you right instead of uh writing
15:16 - getter and Setter method you can just
15:17 - use get and set if you don't have any
15:20 - condition right and let's try to assign
15:23 - some value to the author property and uh
15:26 - access it so I will
15:29 - use
15:31 - p1. author you can see author property
15:34 - is visible
15:37 - and let's say author name is for
15:44 - example
15:48 - programming knowledge okay and I can
15:52 - accesses simply by b1. author
15:59 - okay so book
16:01 - author author is e1. author and when I
16:05 - run the program it will work fine okay
16:10 - so this property makes uh it simple to
16:14 - get and set
16:16 - values uh of the member variable so I
16:21 - hope you have understood the concept of
16:23 - properties and I hope you have enjoyed
16:25 - this video please rate comment and
16:26 - subscribe and bye for now

Cleaned transcript:

hello guys in the last video I have shown you how to use seter and geta method to protect your member variable from accessing by the other classes or the main class and Ive also shown you why we need to use Setter and getter and why it's a good practice to use Setter and getter in objectoriented programming now C shop has its own way of setting and getting these values and that is through properties through properties you can also do the same thing and even better uh by setting and getting the values and not exposing your uh member variables of the class so in the last video I have given you an example of book class which has the member variable book book ID book name and book number of pages and I have shown you how you can protect these variable uh by using set method and get method so if you haven't seen that video please see that video so that you can understand uh the setter and getter method and I'm using the same uh quote from the last time so we have the book class and these three member variable and I I have shown you how you can set and get values right now let's see how we can do achieve the same thing to protect your variable by properties so first of all I have shown you how you can set or you can create set and get a method for this ID of the book and we have just used the set ID and get ID now let's let see how we can do it by properties the same thing so what we need to do here is instead of the setter and getter method we use public and the return type which is in our case integer because ID is an integer so we will write int public int and give the name of your property so for ID I will give for example this property called ID and this will not take any argument here and for setting the values I use the keyword set and then in these curly braces I just enclose my earlier set Setter method like this and in the similar way what I will do is I will just use the keyword get and I will use these curly braces and in this I will return my ID which is this variable so how we have declared this uh property ID here we have used keyword to set the value and how we are setting the values in the same way we have done in the setter method but instead of this ID because this set is not taking any argument right and for example I want to set ID so instead of set ID method what I can say is ID B1 which is the object of book class and we can say b1. ID is equal to 10 for example so I set the ID is equal to 10 now where this 10 goes in this uh property so it's we use the keyword value to assign that Pro property or assign that value to your set method because it's not taking any argument right so we use keyword so whenever for example you assign B1 which is an our object dot our property name which is ID is equal to 10 this 10 will be stored in this value and then it will see if this value is less than zero and if it's uh less than zero it will show uh the exception or throw the exception otherwise it will assign this value to your ID right and when you call this ID so for example I want to access the ID I can simply use my b1. ID and replace it here right and let me comment this second console. right line so now to access your ID you just need to use b1. ID okay instead of get method so this this is how you define property in C you use set method to set the value and just remember that you need to use this value to uh store whatever is assigned to your variable or whatever you is uh assigned to your ID and then to get the value you just return it it here like this and to access this value you just need to give the same thing b1. ID right we can do it do the same for our book name class we have declared set book name and get book name right so I will just delete this argument because we uh our property will not take any argument but it will return a string so I will declare public string and let name this property book name right and for setting once again we use the keyword set and in these curly braces we enclose our code for setting the value right and for getting the value we use the keyword get once again get and in these two curly braces we return whatever we want to return so string or we will just return this okay and we can take uh delete this get and set method and this will do just fine this will work just fine for example for uh setting the book name I can say B1 Dot and it will give me this property now which is called book name right and I can assign any value to the book name like this as we assign it to some variable so I will give the name the C shop book okay and I can access it once again very simply just copy this and you can exit it access this property like this so when I run the program it shows some error let's see what's okay because I haven't use the keyword value here and it doesn't know what this is so I need to pass in the value keyword this will this just remember always it doesn't take any argument set method doesn't take any argument instead of argument you just need to pass the keyword value here and value here right now when I run the program it shows the result book ID is 10 which we have assigned and book name is c book okay so I can say book name is C now if you have remembered in the last last video we also have this variable called number of pages and it was we we have already assigned a value to number of pages as 250 so it's not possible to set the value for number of pages so how we can Define the property for this instead of this uh get number of pages what we can do is we can just only use get property and we can avoid using set property for that and now it will just give you the value of number of pages but you can not set the value of number of pages so just I will just copy this and I will say book pages is and I can call this Prof property number of pages here okay and when I run the program it will run fine book pages IS250 okay now if you don't have any conditions and you just uh need simple set and get method for example you don't need if if your ID is less than zero or you need don't need to check that if your your book name is null and you just need to set and get value without any spe special conditions like uh I have Illustrated in last video for example I will give you an example so I have uh a private member private int this will be int and we have for example author so this let's take it as a string and author so we have author uh private member so for getting and getting and setting uh this private member what we can do so we can define public which I have shown you in the last video right public void void and then your set author property so I will just use this and I will say set author and what I can do I can pass a string variable for setting and I can just use public string and get author same get author for getting the value right so this I have shown you in the last video what this you can do here right and in here I will use the author string author and this author will be assigned to this author so this dot author is equal to your author you pass right and you can return this in get method or return this dot author so if you don't have any condition uh to check and you will have or when you program a class you will have many field in which you don't even need any condition you don't even need to check any condition and you will just set and get value like this so it's more easier to handle these things or these codes by using properties so what we can do instead of using this getter and Setter simple getter and Setter without any conditions I will say public and the return type which is string and I will say this property is called author and then I will enclose it in this curly BRAC and I can say get and set okay and this property will work same as these two getter and Setter function so your code is reduced very much here right this property get and set just using these two get and set your C code will know that the set will have to set the property or set the variable some variable and this get is used to access uh the value of the variable right so I can just remove this getter and Setter and instead of that I can use this property and even you can make this code really small like this and this will become a on line code for you right instead of uh writing getter and Setter method you can just use get and set if you don't have any condition right and let's try to assign some value to the author property and uh access it so I will use p1. author you can see author property is visible and let's say author name is for example programming knowledge okay and I can accesses simply by b1. author okay so book author author is e1. author and when I run the program it will work fine okay so this property makes uh it simple to get and set values uh of the member variable so I hope you have understood the concept of properties and I hope you have enjoyed this video please rate comment and subscribe and bye for now
