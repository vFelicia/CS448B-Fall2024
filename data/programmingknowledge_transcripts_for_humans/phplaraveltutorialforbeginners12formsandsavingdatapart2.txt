With timestamps:

00:00 - hey what's going on guys welcome back to
00:01 - our YouTube channel and welcome to this
00:03 - particular video so this is actually the
00:06 - part 12 of our laravel tutorial for
00:09 - beginner series and in the previous
00:12 - video we have laid out the basic
00:14 - structure of our form to enable us to
00:16 - submit data using our form into our
00:20 - database so in this video we're going to
00:22 - continue working on with this form and
00:24 - let's try to add some template for our
00:30 - messages inside our create page so let's
00:35 - go to our views and let's create another
00:40 - directory here so this should be in a NC
00:46 - and then this we will create a new file
00:51 - here called messages that laid that PHP
00:55 - and then we're going to include this
00:57 - file into our app that laid that PHP so
01:01 - we're just going to configure first this
01:03 - messages that laid that page wait for
01:05 - now and first let's just check if the
01:14 - count for errors is greater than zero so
01:21 - let's just close first the if statement
01:25 - and we're going to define a for each
01:29 - here and let's just close the for each
01:35 - below and inside this for each as we're
01:39 - going to iterate the errors and this is
01:43 - an object so all and then as error and
01:50 - of course we're going to define a very
01:55 - basic alert to our user by using the
01:59 - bootstrap alert elements so this should
02:02 - have a class alert and of course because
02:07 - this is an error so it should be danger
02:11 - right
02:13 - and of course the error itself display
02:19 - and also we're going to check for
02:26 - messages for session coming from our
02:32 - page so session and then if it has a
02:38 - success value so we're just going to end
02:44 - the end if here so just bear with me
02:47 - guys because I'm just going I'm just
02:50 - laying out the messages or the feedback
02:54 - to our user if they have something or if
02:59 - there's if there were errors during the
03:01 - process of submitting the information so
03:04 - div and then of course it should have
03:07 - the alert also alert success and the
03:14 - value of our session and success and
03:25 - then we're just going to do the same for
03:27 - our error coming from the session so
03:32 - this should be error also and instead of
03:36 - success it should be danger and also
03:41 - here is the error okay
03:46 - so we need to include this inside our
03:49 - layout up that laid out by HP so I think
03:54 - somewhere before the main container okay
04:03 - or after the container element so we're
04:08 - just going to include the messages here
04:10 - so add and then include and of course
04:14 - the directory and the template messages
04:20 - so save this one and try to let's try to
04:22 - preview it in our page so
04:26 - refresh and then submit so there you go
04:30 - we can see the title field is required
04:33 - and also the body field is required and
04:35 - try to populate the title and then only
04:39 - the body field is required because we
04:41 - don't have the because we did not
04:44 - populate the body of our post so now
04:48 - let's go back to our post controller and
04:50 - continue working with our store function
04:55 - so you remember that we use tinker
04:59 - before to populate our database so we
05:03 - can actually use that also in here so
05:08 - post and then equal and the new post and
05:14 - we can use that instance for now so post
05:18 - and then set the title for our post
05:20 - which has the request or the value
05:24 - coming from a request and technically it
05:27 - is the value coming from the forum so we
05:31 - we should specify the input which has
05:33 - the title and then of course we can
05:36 - actually get the value of our body the
05:42 - same thing as the titles or requests and
05:46 - then the input and of course the body
05:52 - and save this supposed and then save
05:59 - then we can read the req to another page
06:06 - or to the post page so returned in the
06:09 - redirect to the post page and it should
06:18 - have additional information so with and
06:21 - then of course success so remember we
06:26 - have defined this in our messages that
06:30 - laid that PHP file and this is how you
06:33 - set the value of the message so post
06:37 - created
06:39 - and then something like that and try to
06:41 - save this and let's go back to our
06:43 - browser and try to preview it so refresh
06:47 - and then let's try third post because
06:53 - technically this is the third post so
06:57 - post three and then this is the body D
07:04 - post number three and then submit so it
07:12 - is now redirected to the post page and
07:16 - it has a feedback post created so the
07:21 - alert message that we have created in
07:23 - our messages that made that PHP so now
07:26 - we have three records in our database
07:30 - post one post two and post E and then if
07:34 - you try to click any of this post we can
07:36 - redirect to another page with all the
07:40 - information included or displayed in
07:44 - this post and now I wanted to add a link
07:48 - to create a post because for now we
07:51 - don't have any link here that says we
07:53 - can create a post so let's go back to
07:56 - our app that laid that PHP file and then
07:59 - we can see here all the links from our
08:02 - navigation the home services blog and
08:05 - about and this is the right side of our
08:08 - navigation so I think we can just copy
08:11 - this now item here and then paste it on
08:17 - this left side of our navigation so this
08:20 - is create post or we can just say add
08:24 - post post and then it should be direct
08:30 - in to post create so let's try this so
08:36 - save and then let's go back to our
08:39 - browser and refresh so as you can see we
08:43 - now have the add post link here and it
08:47 - should redirect us to deform once we
08:49 - click it so we
08:53 - a working link to add post now and I
08:57 - think it's high time for me to add a sin
09:01 - tax highlighter for now for the blade
09:05 - templating because as you can see we
09:09 - have all the syntax here or all the
09:12 - scripts for our blade templates here but
09:15 - we don't have a syntax highlighter for
09:17 - that all we see is a white tax and then
09:21 - I think it's not readable for us so
09:24 - let's go to file and then settings and
09:28 - then packages and then let's try to
09:32 - install or try to go here in in install
09:37 - and search the package language and
09:43 - played so language blade so it is a
09:50 - syntax highlighter for the blade
09:52 - templating engine used in laravel so
09:55 - we're just going to install this so it
09:58 - should enable us to read the syntax of
10:04 - our blade or syntax of the blade much
10:07 - easily so let's try this and then let's
10:12 - just wait for a few seconds to allow the
10:15 - installation to complete and I think
10:17 - it's it is now complete let's go back to
10:19 - our file and as you can see we do have
10:23 - now the syntax highlighter or syntax
10:26 - highlighting for rate templates and it
10:29 - it will be only activated on files that
10:32 - has blade that PHP file extensions so I
10:37 - think that's all there is to it for this
10:38 - tutorial and I hope you have learned
10:40 - something from this video and in the
10:43 - next video we're going to discuss how to
10:44 - edit and update our records by using our
10:49 - laravel project so thank you and see you
10:52 - in the next video

Cleaned transcript:

hey what's going on guys welcome back to our YouTube channel and welcome to this particular video so this is actually the part 12 of our laravel tutorial for beginner series and in the previous video we have laid out the basic structure of our form to enable us to submit data using our form into our database so in this video we're going to continue working on with this form and let's try to add some template for our messages inside our create page so let's go to our views and let's create another directory here so this should be in a NC and then this we will create a new file here called messages that laid that PHP and then we're going to include this file into our app that laid that PHP so we're just going to configure first this messages that laid that page wait for now and first let's just check if the count for errors is greater than zero so let's just close first the if statement and we're going to define a for each here and let's just close the for each below and inside this for each as we're going to iterate the errors and this is an object so all and then as error and of course we're going to define a very basic alert to our user by using the bootstrap alert elements so this should have a class alert and of course because this is an error so it should be danger right and of course the error itself display and also we're going to check for messages for session coming from our page so session and then if it has a success value so we're just going to end the end if here so just bear with me guys because I'm just going I'm just laying out the messages or the feedback to our user if they have something or if there's if there were errors during the process of submitting the information so div and then of course it should have the alert also alert success and the value of our session and success and then we're just going to do the same for our error coming from the session so this should be error also and instead of success it should be danger and also here is the error okay so we need to include this inside our layout up that laid out by HP so I think somewhere before the main container okay or after the container element so we're just going to include the messages here so add and then include and of course the directory and the template messages so save this one and try to let's try to preview it in our page so refresh and then submit so there you go we can see the title field is required and also the body field is required and try to populate the title and then only the body field is required because we don't have the because we did not populate the body of our post so now let's go back to our post controller and continue working with our store function so you remember that we use tinker before to populate our database so we can actually use that also in here so post and then equal and the new post and we can use that instance for now so post and then set the title for our post which has the request or the value coming from a request and technically it is the value coming from the forum so we we should specify the input which has the title and then of course we can actually get the value of our body the same thing as the titles or requests and then the input and of course the body and save this supposed and then save then we can read the req to another page or to the post page so returned in the redirect to the post page and it should have additional information so with and then of course success so remember we have defined this in our messages that laid that PHP file and this is how you set the value of the message so post created and then something like that and try to save this and let's go back to our browser and try to preview it so refresh and then let's try third post because technically this is the third post so post three and then this is the body D post number three and then submit so it is now redirected to the post page and it has a feedback post created so the alert message that we have created in our messages that made that PHP so now we have three records in our database post one post two and post E and then if you try to click any of this post we can redirect to another page with all the information included or displayed in this post and now I wanted to add a link to create a post because for now we don't have any link here that says we can create a post so let's go back to our app that laid that PHP file and then we can see here all the links from our navigation the home services blog and about and this is the right side of our navigation so I think we can just copy this now item here and then paste it on this left side of our navigation so this is create post or we can just say add post post and then it should be direct in to post create so let's try this so save and then let's go back to our browser and refresh so as you can see we now have the add post link here and it should redirect us to deform once we click it so we a working link to add post now and I think it's high time for me to add a sin tax highlighter for now for the blade templating because as you can see we have all the syntax here or all the scripts for our blade templates here but we don't have a syntax highlighter for that all we see is a white tax and then I think it's not readable for us so let's go to file and then settings and then packages and then let's try to install or try to go here in in install and search the package language and played so language blade so it is a syntax highlighter for the blade templating engine used in laravel so we're just going to install this so it should enable us to read the syntax of our blade or syntax of the blade much easily so let's try this and then let's just wait for a few seconds to allow the installation to complete and I think it's it is now complete let's go back to our file and as you can see we do have now the syntax highlighter or syntax highlighting for rate templates and it it will be only activated on files that has blade that PHP file extensions so I think that's all there is to it for this tutorial and I hope you have learned something from this video and in the next video we're going to discuss how to edit and update our records by using our laravel project so thank you and see you in the next video
