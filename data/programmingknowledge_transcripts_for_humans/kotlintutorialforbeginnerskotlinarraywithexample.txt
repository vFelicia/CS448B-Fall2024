With timestamps:

00:00 - in the previous videos we have
00:02 - learned about functions in gotham
00:05 - so before proceeding further i would
00:07 - like you to solve
00:09 - the problem this this problem which says
00:11 - that write a function which compares two
00:13 - numbers and return the maximum of two so
00:16 - uh
00:16 - one way of doing this is
00:18 - using if else statement
00:21 - and the control statements
00:23 - so we don't know that for now so what we
00:27 - will do is we will use a
00:29 - function max
00:30 - in
00:31 - kotlin.math.max library
00:34 - so how to access this library and this
00:37 - function
00:38 - so for accessing this library and this
00:40 - function what we will do is we will
00:42 - import the library
00:45 - so i'll use the keyword import
00:47 - and then
00:49 - write the name of the library
00:51 - kotlin.math.max
00:56 - now
00:57 - the library is successfully imported so
01:00 - what this max function does is it
01:03 - takes input of two integers and returns
01:07 - the
01:08 - maximum of the two
01:10 - okay so i'll just go ahead and create a
01:12 - main function
01:15 - and then outside the main function i'll
01:17 - just create
01:18 - a function and name it as maximum
01:23 - now what would be the input of this
01:25 - maximum function the input must be two
01:28 - integers
01:29 - uh so i'll name the integer one as a and
01:33 - the integer two as b
01:35 - so i have provided two input to this
01:39 - maximum function
01:40 - now
01:42 - what would be the return type of this
01:44 - function
01:45 - so the max function provides the maximum
01:48 - integer out of two integer so the return
01:50 - type would also be an integer now i'll
01:54 - just use the math max function which is
01:56 - max of a comma b
01:59 - okay so inside the main function i'll go
02:02 - ahead and
02:03 - print the
02:06 - maximum
02:08 - and
02:08 - maximum of 13 and 25
02:12 - okay so when i run this
02:15 - program
02:16 - what i will find is it prints the
02:18 - maximum of 13 and 25 which is 25
02:22 - okay
02:23 - so
02:24 - kotlin has many such libraries which
02:27 - would
02:28 - be used further
02:30 - and it would make our task very easy
02:34 - instead of using long
02:37 - codes i just used a library and its
02:40 - function and it become it became very
02:43 - easy
02:45 - okay
02:46 - so the
02:48 - code is compiling
02:50 - and it is starting
02:53 - okay
02:53 - so i have run my previous code
02:57 - just a second i'll run test.kt
03:01 - and yeah it prints 25 which is the
03:04 - maximum of 13 and 25
03:07 - okay moving further
03:09 - just i'll comment it out
03:11 - okay moving further in this video we are
03:13 - going to particularly particularly focus
03:15 - on arrays
03:17 - so uh
03:19 - arrays in kotlin
03:21 - are
03:22 - mutable but have fixed sizes
03:25 - so
03:26 - suppose i declared an array of
03:29 - let's say four elements
03:31 - so
03:32 - it it is going to be of four elements at
03:35 - every time
03:37 - we cannot
03:38 - add or
03:40 - delete an element from it
03:42 - although we can
03:44 - change the element
03:47 - change any element from an array
03:49 - so uh
03:51 - data structure that contains a group of
03:53 - elements mostly of same data type
03:56 - are arrays okay so it is not a
03:58 - foundation that the the data the
04:02 - elements must have same data type but
04:04 - yeah mostly the elements have the same
04:06 - data type
04:08 - commonly used to organize data so why
04:10 - are arrays used basically
04:12 - when i have
04:14 - 20 integers suppose let's say
04:16 - so i have to store 20 integers in one
04:19 - variable so what i'll do is i'll create
04:21 - an array so in that way the data is more
04:24 - organized
04:26 - now
04:27 - the string is in is a collection of
04:29 - characters
04:31 - or we can say that it is an array of
04:33 - characters
04:35 - okay so it is different characters
04:38 - and they are combined together
04:41 - so it it can be also called as an
04:43 - array of characters so what is the
04:45 - syntax of
04:47 - creating an array so just like we create
04:50 - any variable
04:51 - we use the var or val keyword and then
04:54 - we will give the name of array and
04:56 - naming
04:58 - array is same as naming a function or a
05:00 - variable
05:01 - okay then we will write the func keyword
05:04 - array off and we will specify the type
05:07 - if any
05:08 - and then we will write the elements
05:10 - okay so now let's just go ahead
05:13 - and
05:14 - create an error
05:17 - so
05:18 - i'll write by where
05:20 - array1
05:22 - and
05:24 - i'll write the keyword array off
05:27 - now
05:30 - suppose i have to
05:32 - create an array of characters
05:34 - so i'll
05:36 - provide the
05:38 - type care and now i'll provide the
05:40 - elements
05:41 - so i'll provide a
05:45 - b
05:48 - c
05:50 - d e
05:53 - okay
05:54 - so we have now successfully created an
05:56 - array which contains five elements and
05:59 - all the five are
06:01 - the letters a b c d
06:03 - and e
06:05 - okay so uh what if i have to create an
06:08 - array which contains
06:09 - uh integer uh character uh and a string
06:12 - and
06:13 - uh
06:15 - and a boolean
06:16 - so
06:17 - i'll just go ahead and create an
06:19 - array
06:22 - of all type
06:24 - of all type
06:28 - so i have named it and i'll just
06:31 - use the
06:33 - function array of
06:34 - and
06:35 - i'll just
06:37 - so it contains an integer
06:39 - and
06:40 - double
06:42 - and boolean
06:44 - character
06:46 - and
06:50 - a string
06:54 - so
06:55 - the variable array of all type is an
06:58 - array which contains an integer and
07:01 - and
07:02 - a float point number a boolean character
07:06 - and a string
07:07 - okay
07:09 - so
07:11 - now we have now we can successfully
07:12 - create any array moving forward in
07:15 - kotlin once you declare any array you
07:17 - can only change the content of the array
07:20 - and not the size as i mentioned earlier
07:22 - so the size of this is fixed until and
07:24 - unless i change the size from here
07:27 - okay the size is fixed i can change the
07:30 - elements of an array however but i
07:33 - cannot change the size of the array
07:36 - okay so now let's just copy this code
07:40 - and
07:43 - just understand that
07:46 - okay
07:47 - so the code says that
07:51 - there is a variable array 1 that is an
07:54 - array of a b c d and e okay
07:58 - and there is an array 2
08:00 - which is a value
08:02 - and that is an array of e f g h and i
08:05 - ok so when i do array 1 is equals to
08:08 - array 2
08:09 - so array 1 is a variable and that can be
08:14 - reassigned
08:15 - so
08:16 - that that that is reassigned a value of
08:19 - array two so that can be done but this
08:22 - this line shows an error why this line
08:24 - shows another because
08:26 - array 2 is in value so we cannot
08:29 - reassign a value
08:31 - okay so that's why it shows an error
08:35 - moving forward
08:37 - uh
08:38 - so yeah there is a
08:40 - value array 2
08:42 - and which contains
08:44 - the elements e f g h and i
08:47 - so however we cannot reassign the
08:50 - array 2 we can change the elements of
08:53 - array2 this is a major point to note
08:57 - okay
08:58 - so we have already understood array with
09:00 - different data types
09:02 - okay so arrays are mutable but have
09:05 - fixed sizes as i already said
09:09 - and
09:10 - so
09:12 - what if i have to
09:13 - print any element of an array
09:16 - so suppose i have to
09:18 - print
09:20 - the third element of
09:22 - array one
09:24 - so what i mean by third element is the
09:27 - the first element
09:29 - the a is the zeroth element
09:32 - okay as as we done the indexing in the
09:35 - string
09:36 - similarly the indexing is done in the
09:38 - arrays
09:41 - so when i have to print the
09:44 - third element of array1 what i'll do is
09:47 - i'll just write
09:49 - 1
09:50 - and open a square bracket and write 3
09:53 - here
09:54 - and when i run this code
09:56 - we can see that
10:00 - the
10:01 - third element
10:02 - of array1 is printed
10:07 - okay
10:10 - there is a problem okay
10:15 - so
10:17 - when i run this program
10:22 - we can see that third element of
10:26 - array one so what what happened here is
10:29 - i reassigned the array one as array2
10:32 - so the third element of array2 is
10:33 - printed here e is the 0th f is the first
10:36 - g is the second and h is the third
10:39 - so i will just delete this code
10:42 - and again run this code
10:45 - so i'll find the third
10:49 - element of array1 that is d
10:51 - okay
10:53 - so now what if i have to reassign the
10:57 - the third element of array two
11:00 - so we will try it on array two because
11:02 - error two is a value
11:05 - so i will just
11:07 - type array
11:08 - two
11:10 - so i'll just reassign the zeroth element
11:12 - of array two as a string
11:15 - 3
11:18 - assigned
11:20 - now it shows an error
11:23 - so what error does it show that
11:25 - there is a type mismatch
11:27 - so it was an uh
11:30 - it was in character and now we are
11:32 - reassigning it as a string
11:36 - so that is not possible in kotlin so
11:38 - what i'll do is i'll just reassign it
11:40 - with the character and now i'll
11:45 - print
11:47 - the
11:48 - first element
11:50 - of array the zeroth element of array two
11:55 - so now when i run this program
11:59 - i can see that
12:01 - r is printed
12:03 - so
12:03 - even in a value
12:06 - even in a value
12:08 - of an array the the
12:11 - the element of an array can be
12:14 - reassigned even if it is a value not a
12:16 - variable
12:17 - okay so that's all for this video stay
12:19 - tuned for

Cleaned transcript:

in the previous videos we have learned about functions in gotham so before proceeding further i would like you to solve the problem this this problem which says that write a function which compares two numbers and return the maximum of two so uh one way of doing this is using if else statement and the control statements so we don't know that for now so what we will do is we will use a function max in kotlin.math.max library so how to access this library and this function so for accessing this library and this function what we will do is we will import the library so i'll use the keyword import and then write the name of the library kotlin.math.max now the library is successfully imported so what this max function does is it takes input of two integers and returns the maximum of the two okay so i'll just go ahead and create a main function and then outside the main function i'll just create a function and name it as maximum now what would be the input of this maximum function the input must be two integers uh so i'll name the integer one as a and the integer two as b so i have provided two input to this maximum function now what would be the return type of this function so the max function provides the maximum integer out of two integer so the return type would also be an integer now i'll just use the math max function which is max of a comma b okay so inside the main function i'll go ahead and print the maximum and maximum of 13 and 25 okay so when i run this program what i will find is it prints the maximum of 13 and 25 which is 25 okay so kotlin has many such libraries which would be used further and it would make our task very easy instead of using long codes i just used a library and its function and it become it became very easy okay so the code is compiling and it is starting okay so i have run my previous code just a second i'll run test.kt and yeah it prints 25 which is the maximum of 13 and 25 okay moving further just i'll comment it out okay moving further in this video we are going to particularly particularly focus on arrays so uh arrays in kotlin are mutable but have fixed sizes so suppose i declared an array of let's say four elements so it it is going to be of four elements at every time we cannot add or delete an element from it although we can change the element change any element from an array so uh data structure that contains a group of elements mostly of same data type are arrays okay so it is not a foundation that the the data the elements must have same data type but yeah mostly the elements have the same data type commonly used to organize data so why are arrays used basically when i have 20 integers suppose let's say so i have to store 20 integers in one variable so what i'll do is i'll create an array so in that way the data is more organized now the string is in is a collection of characters or we can say that it is an array of characters okay so it is different characters and they are combined together so it it can be also called as an array of characters so what is the syntax of creating an array so just like we create any variable we use the var or val keyword and then we will give the name of array and naming array is same as naming a function or a variable okay then we will write the func keyword array off and we will specify the type if any and then we will write the elements okay so now let's just go ahead and create an error so i'll write by where array1 and i'll write the keyword array off now suppose i have to create an array of characters so i'll provide the type care and now i'll provide the elements so i'll provide a b c d e okay so we have now successfully created an array which contains five elements and all the five are the letters a b c d and e okay so uh what if i have to create an array which contains uh integer uh character uh and a string and uh and a boolean so i'll just go ahead and create an array of all type of all type so i have named it and i'll just use the function array of and i'll just so it contains an integer and double and boolean character and a string so the variable array of all type is an array which contains an integer and and a float point number a boolean character and a string okay so now we have now we can successfully create any array moving forward in kotlin once you declare any array you can only change the content of the array and not the size as i mentioned earlier so the size of this is fixed until and unless i change the size from here okay the size is fixed i can change the elements of an array however but i cannot change the size of the array okay so now let's just copy this code and just understand that okay so the code says that there is a variable array 1 that is an array of a b c d and e okay and there is an array 2 which is a value and that is an array of e f g h and i ok so when i do array 1 is equals to array 2 so array 1 is a variable and that can be reassigned so that that that is reassigned a value of array two so that can be done but this this line shows an error why this line shows another because array 2 is in value so we cannot reassign a value okay so that's why it shows an error moving forward uh so yeah there is a value array 2 and which contains the elements e f g h and i so however we cannot reassign the array 2 we can change the elements of array2 this is a major point to note okay so we have already understood array with different data types okay so arrays are mutable but have fixed sizes as i already said and so what if i have to print any element of an array so suppose i have to print the third element of array one so what i mean by third element is the the first element the a is the zeroth element okay as as we done the indexing in the string similarly the indexing is done in the arrays so when i have to print the third element of array1 what i'll do is i'll just write 1 and open a square bracket and write 3 here and when i run this code we can see that the third element of array1 is printed okay there is a problem okay so when i run this program we can see that third element of array one so what what happened here is i reassigned the array one as array2 so the third element of array2 is printed here e is the 0th f is the first g is the second and h is the third so i will just delete this code and again run this code so i'll find the third element of array1 that is d okay so now what if i have to reassign the the third element of array two so we will try it on array two because error two is a value so i will just type array two so i'll just reassign the zeroth element of array two as a string 3 assigned now it shows an error so what error does it show that there is a type mismatch so it was an uh it was in character and now we are reassigning it as a string so that is not possible in kotlin so what i'll do is i'll just reassign it with the character and now i'll print the first element of array the zeroth element of array two so now when i run this program i can see that r is printed so even in a value even in a value of an array the the the element of an array can be reassigned even if it is a value not a variable okay so that's all for this video stay tuned for
