With timestamps:

00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel and welcome to this
00:03 - video this is the part 9 of our laravel
00:07 - for beginners tutorial series in the
00:09 - previous video we have worked with the
00:12 - controller or post controllers we have
00:15 - added their outs so you've tried to open
00:17 - the web dot PHP in our routes folder so
00:21 - as you can see we have defined here
00:23 - route and then the resource and then the
00:26 - name is post and our controller which is
00:30 - post controller and then we also added
00:33 - or generated the post controller class
00:37 - so ii see here we have here all the
00:40 - functions that we need in order for us
00:43 - to work with our code or create read
00:47 - update and delete functionality of our
00:51 - project and in this video we're going to
00:53 - continue working with our post
00:54 - controller and try to fetch data coming
00:57 - from our database and display it on our
00:59 - browser by the way guys if you try to
01:02 - open our post model so as you can see we
01:06 - haven't done much here and if you want
01:09 - to change the table name you can change
01:12 - it here and also you can change the
01:14 - primary key so it's a for example you
01:17 - want to change the table name here so
01:20 - for table name and then protected and of
01:27 - course the variable table equals the new
01:32 - name or the name of your table that you
01:36 - want in your database and of course you
01:40 - can also change the primary key because
01:41 - by default we have we are using the ID
01:45 - auto increment ID so you can also change
01:49 - that in here so protected say for
01:51 - example protected and then the primary
01:53 - key primary key it was ID there you go
02:01 - or you can change it into public so
02:06 - public primary key and then say for
02:09 - example you if you want to name it as
02:12 - item underscore
02:14 - so for example you want to name it as
02:17 - item underscore ID as the primary key so
02:20 - you can do that also by by default we're
02:23 - using the ID right and also if you want
02:26 - to change or if you don't want to
02:29 - include the timestamps that we have or
02:33 - that has been added automatically for us
02:36 - so time stamps remember that created at
02:40 - and updated at fields so we can set it
02:47 - to false to not include that in our
02:50 - database so you can do that here but I'm
02:55 - going to show you now how to display the
02:59 - data coming from our database into our
03:01 - page or post page because let's open our
03:05 - project in our breath so this is the
03:09 - home page right and if you try to go to
03:11 - the post section and the page is
03:18 - currently now blank but we can change it
03:21 - because currently it is loading the
03:25 - index function coming from our post
03:29 - controller which is now returning or it
03:32 - doesn't return anything for now so we
03:34 - will change this and we will return in
03:37 - the view for our index so we're just
03:39 - going to edit this so instead of
03:42 - returning empty it should return a view
03:46 - so it should be a file under post
03:50 - directory and then the name should be
03:53 - indexed at blade that PHP so there you
03:56 - go so we need to create that in our view
03:59 - so resources and then views and then we
04:04 - need to create a new folder here so it
04:08 - should be post and there should be a
04:13 - file here that says index that blade
04:20 - that PHP so there you go and in here
04:25 - let's just stay
04:26 - the layout coming from our layouts
04:29 - folder so layouts and app and of course
04:34 - we need to add the suction content for
04:38 - our content to be here especially the
04:43 - post so and section need to add end of
04:50 - the section here and of course we are
04:52 - going to place an h1 to have our post
04:57 - there and now let's try to preview our
05:00 - post page so as you can see we have the
05:06 - navigation bar and the h1 post and now
05:10 - let's try to get all the posts coming
05:13 - from our database so in our post
05:16 - controller instead of returning just the
05:19 - post index so we can return the actual
05:26 - post so we can use the post model
05:31 - because we're using the eloquent so it
05:34 - is basically just a object relational
05:37 - mapper and in here we can just say post
05:40 - double colon and then all so it will
05:43 - return all the records or all the posts
05:47 - coming from our database so I just
05:52 - comment this one out and also this and
05:57 - also this one so save and then review
06:01 - our code so refresh this page and we
06:06 - have some sort of error here so class
06:08 - HTTP controllers post not found so
06:12 - that's because we then click or use the
06:18 - app post here so we're just going to add
06:21 - that so use app backslash and then post
06:25 - and then semicolon and then save that
06:29 - and let's go back to our browser and
06:31 - refresh so there you go you can see that
06:35 - all the posts coming from our post table
06:37 - in our database has been loaded
06:39 - and it is an array so let's go back to
06:42 - our post page and try to iterate this
06:46 - array to actually display the title so
06:51 - instead of returning the just the post
06:54 - so we're just going to return the actual
06:58 - variable post so this will be returned
07:01 - view with and of course the name is post
07:07 - and our actual variable is post so it
07:11 - should be S or with s because this
07:14 - variable should contain all the posts
07:17 - coming from our database so save this
07:19 - and in our index that laid that PHP
07:22 - we're going to iterate all the posts
07:26 - coming from our database so let's just
07:28 - do that and in here we'll be adding a
07:33 - condition so at if and then count so
07:38 - first we're going to check if the post
07:40 - array has an element so pose is greater
07:45 - than 1 and then we're just going to have
07:50 - an else here and of course the end of
07:55 - our if statement if there's an element
07:58 - inside the post array so we're going to
08:01 - iterate that by using the for each and
08:04 - then post and individual posts there and
08:12 - we're just going to use the bootstrap
08:17 - element for a division so and if for now
08:21 - or end of our for each and of course
08:27 - this one is coming from our bootstrap
08:31 - implementation so class well and it
08:35 - should contain the h3 it will hold the
08:40 - title of our posts so post and then the
08:45 - title of course and let's try to preview
08:49 - this in our browser so save this one
08:52 - and refresh so there you go we have the
08:57 - post one in post too so we can add also
09:02 - decorated add variable or created add
09:06 - attribute in this so we can see that
09:09 - when it is created and also we can make
09:13 - this title as link so we can actually
09:16 - click on this and then redirect it to
09:19 - another page specifying the ID and then
09:22 - we can see all the details of that
09:24 - particular post so let's go back to our
09:27 - code and and in here let's add an
09:31 - element so small so this will hold the
09:35 - date that the post has been created so
09:39 - small and then it should be written on
09:46 - the double braces the post variable and
09:52 - of course decorated add attribute so
09:57 - save this and preview our page in a
10:00 - browser and refresh so as you can see we
10:05 - have the post one post over and of
10:08 - course the day that when it is created
10:11 - and let's make this post one or post two
10:15 - as a link so let's go back to our code
10:18 - editor and instead of just returning the
10:20 - h3 here we're going to add a link
10:24 - element so H or h3 and inside that is
10:27 - the link element so href and then double
10:32 - code so we should close this one here so
10:36 - a for our link and then of course it
10:41 - should be redirecting into the post page
10:45 - specifying the post ID so and then ID
10:52 - let's try that save this and let's go
10:56 - back to our browser and refresh so as
11:01 - you can see the post 1 and post o title
11:04 - has been converted into link
11:06 - and then we can actually click on this
11:09 - and we can see that is blank for now
11:13 - because we haven't configured yet this
11:17 - particular page so in the next video
11:19 - we're going to discuss and continue
11:21 - working on with this how to view your
11:24 - information coming from the database so
11:27 - I hope you learned something from this
11:28 - video and see you in the next video of
11:30 - Thanks

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel and welcome to this video this is the part 9 of our laravel for beginners tutorial series in the previous video we have worked with the controller or post controllers we have added their outs so you've tried to open the web dot PHP in our routes folder so as you can see we have defined here route and then the resource and then the name is post and our controller which is post controller and then we also added or generated the post controller class so ii see here we have here all the functions that we need in order for us to work with our code or create read update and delete functionality of our project and in this video we're going to continue working with our post controller and try to fetch data coming from our database and display it on our browser by the way guys if you try to open our post model so as you can see we haven't done much here and if you want to change the table name you can change it here and also you can change the primary key so it's a for example you want to change the table name here so for table name and then protected and of course the variable table equals the new name or the name of your table that you want in your database and of course you can also change the primary key because by default we have we are using the ID auto increment ID so you can also change that in here so protected say for example protected and then the primary key primary key it was ID there you go or you can change it into public so public primary key and then say for example you if you want to name it as item underscore so for example you want to name it as item underscore ID as the primary key so you can do that also by by default we're using the ID right and also if you want to change or if you don't want to include the timestamps that we have or that has been added automatically for us so time stamps remember that created at and updated at fields so we can set it to false to not include that in our database so you can do that here but I'm going to show you now how to display the data coming from our database into our page or post page because let's open our project in our breath so this is the home page right and if you try to go to the post section and the page is currently now blank but we can change it because currently it is loading the index function coming from our post controller which is now returning or it doesn't return anything for now so we will change this and we will return in the view for our index so we're just going to edit this so instead of returning empty it should return a view so it should be a file under post directory and then the name should be indexed at blade that PHP so there you go so we need to create that in our view so resources and then views and then we need to create a new folder here so it should be post and there should be a file here that says index that blade that PHP so there you go and in here let's just stay the layout coming from our layouts folder so layouts and app and of course we need to add the suction content for our content to be here especially the post so and section need to add end of the section here and of course we are going to place an h1 to have our post there and now let's try to preview our post page so as you can see we have the navigation bar and the h1 post and now let's try to get all the posts coming from our database so in our post controller instead of returning just the post index so we can return the actual post so we can use the post model because we're using the eloquent so it is basically just a object relational mapper and in here we can just say post double colon and then all so it will return all the records or all the posts coming from our database so I just comment this one out and also this and also this one so save and then review our code so refresh this page and we have some sort of error here so class HTTP controllers post not found so that's because we then click or use the app post here so we're just going to add that so use app backslash and then post and then semicolon and then save that and let's go back to our browser and refresh so there you go you can see that all the posts coming from our post table in our database has been loaded and it is an array so let's go back to our post page and try to iterate this array to actually display the title so instead of returning the just the post so we're just going to return the actual variable post so this will be returned view with and of course the name is post and our actual variable is post so it should be S or with s because this variable should contain all the posts coming from our database so save this and in our index that laid that PHP we're going to iterate all the posts coming from our database so let's just do that and in here we'll be adding a condition so at if and then count so first we're going to check if the post array has an element so pose is greater than 1 and then we're just going to have an else here and of course the end of our if statement if there's an element inside the post array so we're going to iterate that by using the for each and then post and individual posts there and we're just going to use the bootstrap element for a division so and if for now or end of our for each and of course this one is coming from our bootstrap implementation so class well and it should contain the h3 it will hold the title of our posts so post and then the title of course and let's try to preview this in our browser so save this one and refresh so there you go we have the post one in post too so we can add also decorated add variable or created add attribute in this so we can see that when it is created and also we can make this title as link so we can actually click on this and then redirect it to another page specifying the ID and then we can see all the details of that particular post so let's go back to our code and and in here let's add an element so small so this will hold the date that the post has been created so small and then it should be written on the double braces the post variable and of course decorated add attribute so save this and preview our page in a browser and refresh so as you can see we have the post one post over and of course the day that when it is created and let's make this post one or post two as a link so let's go back to our code editor and instead of just returning the h3 here we're going to add a link element so H or h3 and inside that is the link element so href and then double code so we should close this one here so a for our link and then of course it should be redirecting into the post page specifying the post ID so and then ID let's try that save this and let's go back to our browser and refresh so as you can see the post 1 and post o title has been converted into link and then we can actually click on this and we can see that is blank for now because we haven't configured yet this particular page so in the next video we're going to discuss and continue working on with this how to view your information coming from the database so I hope you learned something from this video and see you in the next video of Thanks
