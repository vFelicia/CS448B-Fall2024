With timestamps:

00:00 - hey what's up guys welcome back to our
00:02 - YouTube channel and welcome to this
00:04 - video so this is the part 14 of our
00:07 - laravel for beginners tutorial and in
00:10 - this video we're going to discuss about
00:11 - user authentication but as a sort of
00:14 - review in the previous tutorials we have
00:16 - worked with our create read update
00:19 - delete functionality for our project so
00:24 - as I've said in this video we're going
00:26 - to discuss user authentication so as you
00:28 - can see we have here the land in
00:31 - register functions and if tried to go to
00:34 - our database we can see we have already
00:37 - created or populated our users table
00:41 - with the attributes ID name email email
00:47 - verified password token and the created
00:52 - and updated fields or attributes so
00:56 - let's go back to our code editor and try
00:58 - to add more features to our project and
01:03 - add the user authentication and perhaps
01:07 - the user access control to our project
01:10 - so let's go back to our code editor and
01:12 - let's try to see the views in the views
01:17 - we have already this file right so as
01:23 - you can see we have different options
01:25 - and different menus the home services
01:28 - blog the about and of course we have
01:33 - added the login and register links so
01:36 - that we will be able to log in and of
01:39 - course we will be able to register it to
01:42 - our project and for now let's just copy
01:45 - this because we're going to overwrite
01:50 - this file so let's do that by creating a
01:55 - new file as a sort of back up and let's
01:59 - start to open up our command line so
02:03 - that we'll be able to create the
02:05 - authentication or user authentication
02:07 - for our project so in here let's just
02:12 - type in PHP artisan and then make Colin
02:21 - and then the keyword oath and then let's
02:25 - just try to wait for a few seconds to
02:29 - enable the so as you can see we have
02:35 - here a problem come and make both is not
02:38 - defined so I think we have Oh
02:41 - so instead of using the artisan make
02:44 - oath so I think we need to run the
02:47 - command PHP artisan instead and then you
02:50 - I and then oath so this will enable the
02:54 - authentication or user authentication
02:56 - for our project and we have here a
02:58 - prompt that says the oath plug-in that
03:03 - laid that page review already exist do
03:06 - you want to replace it so for now let's
03:09 - just say yes because you want them to be
03:13 - replaced with a new version of the login
03:17 - dot PHP the way that page B email that
03:22 - PHP and I'm just gonna answer yes to
03:27 - this prompt verify so this will again
03:34 - override our old files so authentication
03:39 - scaffolding generated successfully so if
03:42 - we try to run our project right now
03:45 - let's say refresh ok so as you can see
03:53 - we have already alright or every than
03:59 - our our old files and as you can see we
04:01 - don't have any additional options here
04:05 - for our blog services and adding the
04:09 - post so we need to add that in our app
04:13 - that laid that PHP files so as you can
04:15 - see we have the backup for our app that
04:19 - blade that page we file and we have here
04:21 - the new one okay
04:24 - so all we have to do is just you can
04:27 - just copy the for example the link from
04:32 - here so starting from here to the the
04:39 - first navigation item for our home and
04:41 - then paste it here there you go and of
04:49 - course we need to add also the
04:51 - navigation for adding a post so you L
04:59 - left side of our navigation okay so we
05:07 - have here the option to add post and of
05:13 - course guys we can make the navigation
05:20 - bar instead of light you can say inverse
05:25 - just gonna remove this so navigation bar
05:30 - inverse and then save this one and let's
05:33 - go back to our browser and then refresh
05:37 - so as you can see we have added all the
05:42 - options to add post we also have the
05:45 - home services blog about and of course
05:50 - the login and register pages and as you
05:54 - can see we need to fix this display
05:58 - right here because I think it's not
06:00 - indented so let's go back to our code
06:03 - editor and try to modify that so index
06:11 - for our content so we don't have here
06:15 - the div container so we need to add that
06:18 - in our up that way that PHP file okay so
06:22 - we have here the content yielding of
06:25 - content but we need to add the container
06:28 - class or it could inner div with a class
06:31 - on container
06:35 - okay so this should solve the problem of
06:40 - the intention or the margin left for our
06:46 - project refresh so as you can see now
06:50 - the content is indented and if we try to
06:55 - go to register we can already we can
06:57 - already register here by using our names
06:59 - of our example Tom saw and an email
07:06 - let's just say Tom at gmail.com and then
07:10 - password okay and then register and as
07:25 - you can see we have redirected and so
07:28 - our home and prompted that we are now
07:32 - back in so you can see we have enabled
07:38 - the user authentication and the laravel
07:42 - takes care of all the intricacies of
07:45 - using the user authentication within our
07:48 - project okay now so we can close this
07:52 - and let's try to edit our home that
07:57 - played that PHP so instead of just
07:59 - showing your now login let's just say we
08:03 - can add a post here so that will be post
08:09 - and then click yeah great and a host and
08:18 - then we're just going to add a class for
08:21 - our button or link BT and BT and primary
08:25 - and let's just say here your love posts
08:33 - let me say this try to preview and then
08:38 - refresh so we have here the updated
08:43 - dashboard or home page then we can just
08:45 - create a post but if you try to do
08:49 - up in our database post suppose because
08:56 - we want to add the ID of the user that
08:59 - has posted the certain post so we need
09:03 - to make immigration for that at the
09:05 - attribute ID of our user so now let's
09:10 - add the migration for adding our user ID
09:13 - into our database table so in here you
09:19 - need to run the command aah we make HP
09:24 - artisan then make and then migration and
09:29 - then the name of our migration is add
09:32 - user ID to post ok so PHP artisan make
09:41 - Colin in the migration add user ID to
09:46 - post and it says it created the
09:51 - migration so if we try to go back to our
09:55 - file and then under database in the
10:01 - migrations we now have the migration add
10:05 - user ID to post ok so if you try to run
10:10 - our migration right now that nothing
10:13 - will happen because we don't have any
10:15 - logic inside the app and the down
10:19 - function so in order for us to add the
10:23 - ID so the user table in our database we
10:26 - need to have some logic here and also
10:29 - run the migration so inside here we need
10:32 - to say table and then integer because
10:38 - the value of the user ID is of integer
10:42 - type so user and then underscore ID and
10:49 - semicolon and of course whenever we want
10:54 - to roll back the changes that we made in
10:56 - our migrations we can just say table and
11:00 - drop column and then specifying the
11:06 - column user ID so okay so after that one
11:13 - save this and then let's just say PHP
11:16 - artisan migrate so migrating user ID
11:23 - post and it says migrated so let's track
11:26 - our page we my admin so inside here in
11:29 - our database we can see we have already
11:31 - the user underscore ID and for now let's
11:34 - just say it belongs to user 1 this
11:39 - particular post and also this one it
11:42 - belongs to the user 1 so it just it
11:46 - belongs to someone okay so now let's try
11:49 - to edit the controller for our post
11:54 - because whenever we need whenever we add
11:56 - a certain post we want the user ID or
11:59 - grab the user ID and add that along with
12:02 - the other information of the post so
12:05 - let's just go to http and then
12:09 - controllers and then post controllers
12:12 - okay so oh so inside our store function
12:19 - we just need to have the user ID or pass
12:23 - in the is ready so here post and then
12:29 - user ID equals and this time we're not
12:34 - gonna use the request because the user
12:37 - ID doesn't come from the user our I mean
12:42 - doesn't come from request it comes from
12:44 - the user both so it should say both and
12:48 - then user and then we're just going to
12:51 - have or you grab the ID hey and then
12:55 - save so here refresh
13:00 - at post then certain title of a pose new
13:08 - body of a pose and then submit
13:14 - so we have now the certain title of a
13:17 - post and we try to check the third post
13:21 - we can see that the user ID has been
13:24 - populated by value of 1 which means that
13:28 - this particular post belongs to the user
13:32 - with the ID 1 so I think that's all
13:36 - there is to it for this tutorial in the
13:38 - next video we're going to discuss about
13:40 - access control for our post so see you
13:44 - in the next video thanks

Cleaned transcript:

hey what's up guys welcome back to our YouTube channel and welcome to this video so this is the part 14 of our laravel for beginners tutorial and in this video we're going to discuss about user authentication but as a sort of review in the previous tutorials we have worked with our create read update delete functionality for our project so as I've said in this video we're going to discuss user authentication so as you can see we have here the land in register functions and if tried to go to our database we can see we have already created or populated our users table with the attributes ID name email email verified password token and the created and updated fields or attributes so let's go back to our code editor and try to add more features to our project and add the user authentication and perhaps the user access control to our project so let's go back to our code editor and let's try to see the views in the views we have already this file right so as you can see we have different options and different menus the home services blog the about and of course we have added the login and register links so that we will be able to log in and of course we will be able to register it to our project and for now let's just copy this because we're going to overwrite this file so let's do that by creating a new file as a sort of back up and let's start to open up our command line so that we'll be able to create the authentication or user authentication for our project so in here let's just type in PHP artisan and then make Colin and then the keyword oath and then let's just try to wait for a few seconds to enable the so as you can see we have here a problem come and make both is not defined so I think we have Oh so instead of using the artisan make oath so I think we need to run the command PHP artisan instead and then you I and then oath so this will enable the authentication or user authentication for our project and we have here a prompt that says the oath plugin that laid that page review already exist do you want to replace it so for now let's just say yes because you want them to be replaced with a new version of the login dot PHP the way that page B email that PHP and I'm just gonna answer yes to this prompt verify so this will again override our old files so authentication scaffolding generated successfully so if we try to run our project right now let's say refresh ok so as you can see we have already alright or every than our our old files and as you can see we don't have any additional options here for our blog services and adding the post so we need to add that in our app that laid that PHP files so as you can see we have the backup for our app that blade that page we file and we have here the new one okay so all we have to do is just you can just copy the for example the link from here so starting from here to the the first navigation item for our home and then paste it here there you go and of course we need to add also the navigation for adding a post so you L left side of our navigation okay so we have here the option to add post and of course guys we can make the navigation bar instead of light you can say inverse just gonna remove this so navigation bar inverse and then save this one and let's go back to our browser and then refresh so as you can see we have added all the options to add post we also have the home services blog about and of course the login and register pages and as you can see we need to fix this display right here because I think it's not indented so let's go back to our code editor and try to modify that so index for our content so we don't have here the div container so we need to add that in our up that way that PHP file okay so we have here the content yielding of content but we need to add the container class or it could inner div with a class on container okay so this should solve the problem of the intention or the margin left for our project refresh so as you can see now the content is indented and if we try to go to register we can already we can already register here by using our names of our example Tom saw and an email let's just say Tom at gmail.com and then password okay and then register and as you can see we have redirected and so our home and prompted that we are now back in so you can see we have enabled the user authentication and the laravel takes care of all the intricacies of using the user authentication within our project okay now so we can close this and let's try to edit our home that played that PHP so instead of just showing your now login let's just say we can add a post here so that will be post and then click yeah great and a host and then we're just going to add a class for our button or link BT and BT and primary and let's just say here your love posts let me say this try to preview and then refresh so we have here the updated dashboard or home page then we can just create a post but if you try to do up in our database post suppose because we want to add the ID of the user that has posted the certain post so we need to make immigration for that at the attribute ID of our user so now let's add the migration for adding our user ID into our database table so in here you need to run the command aah we make HP artisan then make and then migration and then the name of our migration is add user ID to post ok so PHP artisan make Colin in the migration add user ID to post and it says it created the migration so if we try to go back to our file and then under database in the migrations we now have the migration add user ID to post ok so if you try to run our migration right now that nothing will happen because we don't have any logic inside the app and the down function so in order for us to add the ID so the user table in our database we need to have some logic here and also run the migration so inside here we need to say table and then integer because the value of the user ID is of integer type so user and then underscore ID and semicolon and of course whenever we want to roll back the changes that we made in our migrations we can just say table and drop column and then specifying the column user ID so okay so after that one save this and then let's just say PHP artisan migrate so migrating user ID post and it says migrated so let's track our page we my admin so inside here in our database we can see we have already the user underscore ID and for now let's just say it belongs to user 1 this particular post and also this one it belongs to the user 1 so it just it belongs to someone okay so now let's try to edit the controller for our post because whenever we need whenever we add a certain post we want the user ID or grab the user ID and add that along with the other information of the post so let's just go to http and then controllers and then post controllers okay so oh so inside our store function we just need to have the user ID or pass in the is ready so here post and then user ID equals and this time we're not gonna use the request because the user ID doesn't come from the user our I mean doesn't come from request it comes from the user both so it should say both and then user and then we're just going to have or you grab the ID hey and then save so here refresh at post then certain title of a pose new body of a pose and then submit so we have now the certain title of a post and we try to check the third post we can see that the user ID has been populated by value of 1 which means that this particular post belongs to the user with the ID 1 so I think that's all there is to it for this tutorial in the next video we're going to discuss about access control for our post so see you in the next video thanks
