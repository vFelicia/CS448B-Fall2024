With timestamps:

00:00 - hey everyone we have covered two video
00:03 - games in pie game the snake game and
00:05 - tic-tac-toe tic-tac-toe included a lot
00:08 - of functions and was a little complex so
00:10 - this time we are gonna do something
00:12 - simple and easy
00:14 - so see this video more like a practice
00:16 - session than a tutorial because it's
00:18 - just the new idea that would be we'd be
00:21 - implementing the modules and code are
00:23 - similar unknown okay
00:26 - making a program in
00:28 - pi game is all about working with
00:30 - various modules together and going about
00:32 - those three basic steps i hope you
00:34 - understand that by now
00:36 - in this video we would be making a color
00:38 - breeze we would see a shade of color
00:41 - gradually changing to the other and that
00:44 - color 2 would be randomly picked
00:47 - it is going to be a simple program
00:49 - because after two video games i wanted
00:51 - to give a pause
00:53 - so that things don't get too much to
00:55 - handle okay
00:58 - so a color breeze basically means
01:00 - rendering different colors on screen
01:03 - so we initialize by game get the screen
01:05 - declare the clock object we've got c1 c2
01:09 - and c3 we which we would be
01:13 - randomly picking from the range 0 to 255
01:17 - you can use the random range function or
01:19 - random int there is just a little
01:21 - difference random end
01:24 - includes both the endpoints whereas
01:25 - random range just excludes the end point
01:29 - it does not include the end point
01:32 - but right now it would be better if you
01:34 - use run in so that 255 number is also
01:37 - included because there are components of
01:41 - rgb that uses 255 there are colors in
01:44 - rgb that uses the 255 number
01:47 - so basically c1 c2 and c3 are the red
01:50 - green and blue components that would set
01:53 - up the screen color
01:55 - then is our while loop and then the
01:57 - events loop in it
01:59 - now these conditions are to change the
02:01 - color that is get different colors and
02:03 - we would only change value of any one
02:05 - component that is c1 c2 or c3 because we
02:08 - want something like a breeze and not
02:10 - colors just popping out of nowhere the
02:12 - screen's color should change like a
02:14 - shade change very smooth okay
02:17 - so for that if the value of c1 is within
02:20 - 255 i hope you know about rgb colors a
02:23 - component can't uh can't have a value
02:25 - above 255
02:27 - so if the value is within 0 to 255 we
02:29 - add 1 to the existing value
02:32 - else if it's greater than 255 you
02:34 - decrease its value by 255 to make it
02:37 - within the given range
02:39 - and if it goes negative or zero you can
02:42 - increase value by three
02:45 - and then you given these three
02:46 - components as fill functions arguments
02:54 - now if i run this the screen gets
02:56 - various colors great and the color
02:58 - transition is smooth as i wanted but
03:00 - after some time this starts what if i
03:03 - want to see this again or maybe restart
03:05 - the function but i don't want to run
03:07 - this again i want to use the mouse and
03:09 - reset this whole thing this would not
03:11 - set up the pi game window over and over
03:14 - and would let you start from a new color
03:16 - let you see a new color breeze just by a
03:18 - mouse click we used the mouse module
03:21 - last time
03:22 - so let me define a function reset what
03:25 - reset would do is it would simply reset
03:27 - the c1 c2 c3 variables so let me declare
03:30 - c1 c2 and c3 to be global variables and
03:33 - reset them just like this okay
03:36 - and if i want this function to be called
03:38 - on a mouse click
03:40 - i would check for an event called mouse
03:42 - button down and call this function so
03:44 - whenever i click on mouse the program
03:46 - restarts let me print mouse clicked here
03:49 - whenever i click on mouse you would see
03:51 - this message printed
03:54 - now if i run this i see the color breeze
03:57 - and if i now click on the mouse i get
03:59 - this message printed mouse clicked and
04:02 - the color breeze
04:04 - it's a new color all together i can see
04:06 - a new color
04:07 - on the screen whenever i click on the
04:09 - mouse so the reset function is working
04:11 - quite fine
04:12 - you can try to work with some more
04:14 - functionalities just like we introduce
04:17 - reset you can add in some more
04:18 - functionalities like you can try doing
04:21 - this with a text if the text color can
04:24 - be changed like a breeze or you can add
04:27 - uh its music
04:29 - and rewind the music as in we as soon as
04:32 - we reset the
04:34 - color breeze so please try to work
04:37 - with some more functionalities think of
04:39 - some more functionalities so that you
04:41 - are comfortable with working with all
04:43 - these biking modules
04:46 - i hope you understood what we did here
04:48 - thank you

Cleaned transcript:

hey everyone we have covered two video games in pie game the snake game and tictactoe tictactoe included a lot of functions and was a little complex so this time we are gonna do something simple and easy so see this video more like a practice session than a tutorial because it's just the new idea that would be we'd be implementing the modules and code are similar unknown okay making a program in pi game is all about working with various modules together and going about those three basic steps i hope you understand that by now in this video we would be making a color breeze we would see a shade of color gradually changing to the other and that color 2 would be randomly picked it is going to be a simple program because after two video games i wanted to give a pause so that things don't get too much to handle okay so a color breeze basically means rendering different colors on screen so we initialize by game get the screen declare the clock object we've got c1 c2 and c3 we which we would be randomly picking from the range 0 to 255 you can use the random range function or random int there is just a little difference random end includes both the endpoints whereas random range just excludes the end point it does not include the end point but right now it would be better if you use run in so that 255 number is also included because there are components of rgb that uses 255 there are colors in rgb that uses the 255 number so basically c1 c2 and c3 are the red green and blue components that would set up the screen color then is our while loop and then the events loop in it now these conditions are to change the color that is get different colors and we would only change value of any one component that is c1 c2 or c3 because we want something like a breeze and not colors just popping out of nowhere the screen's color should change like a shade change very smooth okay so for that if the value of c1 is within 255 i hope you know about rgb colors a component can't uh can't have a value above 255 so if the value is within 0 to 255 we add 1 to the existing value else if it's greater than 255 you decrease its value by 255 to make it within the given range and if it goes negative or zero you can increase value by three and then you given these three components as fill functions arguments now if i run this the screen gets various colors great and the color transition is smooth as i wanted but after some time this starts what if i want to see this again or maybe restart the function but i don't want to run this again i want to use the mouse and reset this whole thing this would not set up the pi game window over and over and would let you start from a new color let you see a new color breeze just by a mouse click we used the mouse module last time so let me define a function reset what reset would do is it would simply reset the c1 c2 c3 variables so let me declare c1 c2 and c3 to be global variables and reset them just like this okay and if i want this function to be called on a mouse click i would check for an event called mouse button down and call this function so whenever i click on mouse the program restarts let me print mouse clicked here whenever i click on mouse you would see this message printed now if i run this i see the color breeze and if i now click on the mouse i get this message printed mouse clicked and the color breeze it's a new color all together i can see a new color on the screen whenever i click on the mouse so the reset function is working quite fine you can try to work with some more functionalities just like we introduce reset you can add in some more functionalities like you can try doing this with a text if the text color can be changed like a breeze or you can add uh its music and rewind the music as in we as soon as we reset the color breeze so please try to work with some more functionalities think of some more functionalities so that you are comfortable with working with all these biking modules i hope you understood what we did here thank you
