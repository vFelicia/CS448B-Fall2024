With timestamps:

00:00 - hello guys welcome to the next video
00:02 - tutorial on Java programming for
00:04 - beginners in the last video we have seen
00:06 - what is a class and how we can declare a
00:10 - class and how we can declare a instance
00:14 - of a class and use them now in this
00:16 - video we will see how to use a class
00:21 - Constructor and what is a class
00:24 - Constructor so first of all we will
00:26 - start our tutorial by making a new class
00:30 - so I will go to my package and I will
00:33 - right click and go to new and I will
00:35 - create a class and I will name my class
00:38 - as
00:39 - cube by this Cube class I'm going to you
00:45 - know get or I'm going to calculate the
00:47 - volume of a cube using different length
00:52 - breadth and height so I'm going to
00:54 - declare three variables int length int
00:57 - breadth and int height
01:00 - so that I can calculate the volume using
01:04 - all these three variables and then I
01:08 - will
01:10 - declare a method which will return int
01:15 - and I will name it as
01:17 - get
01:20 - Cube
01:23 - volume and this will
01:26 - take nothing as parameter and and what
01:30 - this method will do is I'm going to
01:33 - just
01:35 - return the length the product of
01:39 - length into
01:44 - breadth multiplied by height okay so
01:49 - this is the volume of the cube right
01:51 - length into breadth into height okay and
01:55 - this was
01:58 - get Cube
02:02 - volume right
02:06 - so I have declared this class now I'm
02:09 - going to initialize an instance of the
02:11 - class so I will create a
02:14 - [Music]
02:15 - cube and I will name my Cube instance as
02:19 - cube 1 is equal to
02:23 - New
02:25 - Cube
02:26 - right and this cube with the round
02:32 - bracket is called The Constructor of
02:35 - your Cube
02:37 - class and the most basic property of
02:41 - Constructor is even if you don't Define
02:45 - a Constructor Java will create a default
02:48 - Constructor for you whenever you create
02:52 - a class so we
02:54 - haven't created this Constructor method
02:58 - explicitly anyway we here in our class
03:01 - but this is default Constructor which is
03:05 - provided by Java for us and we can also
03:10 - Define a Constructor for
03:13 - us and uh the Constructor name is always
03:18 - same as exactly the same as the class
03:21 - name so for defining a Constructor you
03:25 - can
03:26 - just write Cube
03:30 - and it for default Constructor I'm not
03:34 - going to pass any values right now but
03:37 - it can take values okay or parameters so
03:41 - here you can provide parameters as you
03:44 - can do it with the method but the most
03:48 - important property of Constructor is it
03:51 - has the same name as class and it never
03:55 - returns any value so Constructor never
03:58 - returns any value so you cannot return
03:59 - return like this in Constructor
04:04 - okay now what I'm going to do is this
04:09 - Constructor let me uh print something so
04:14 - sis o and I'm going to print V are
04:23 - in Constructor okay and in our main
04:27 - class in our main method we have just
04:29 - different find the instance of this Cube
04:32 - class and nothing else and when we run
04:34 - the
04:35 - program it prints VR in Constructor that
04:39 - means whenever you create an instance of
04:42 - a class the first method which is called
04:47 - or which is initialized is the
04:49 - Constructor of the class okay so you can
04:53 - define a Constructor and if you want to
04:55 - initialize something you can do it with
04:57 - the constructors because it's the first
04:59 - first method which will be executed
05:03 - right so Constructors are generally used
05:07 - to
05:07 - initialize
05:09 - values uh in a class so what I'm going
05:13 - to do is I'm going to initialize some
05:16 - value
05:17 - like
05:21 - length is equal to
05:25 - 10 variable
05:28 - bread
05:32 - is equal to for example
05:34 - 20 and variable
05:37 - height is equal
05:39 - to 30 for example okay so this is the
05:45 - default Constructor we have defined and
05:49 - in here we have defined the value of
05:51 - length breadth and height so that if
05:55 - user even don't initialize these length
05:58 - breadth and height
06:00 - we are going to uh initialize or Java
06:03 - will initialize this value for us using
06:06 - this default Constructor so now what we
06:10 - can do is we have initialized the
06:12 - instance of the Constructor and using
06:14 - this
06:15 - Constructor we can print or we can
06:19 - call get CU volume method okay so not
06:24 - here but here Cube which is the instance
06:27 - of this Cube class
06:30 - dot get Cube volume and this will return
06:34 - us the product
06:37 - of 10 into 20 into 100 which we have
06:42 - initialized these values as right now
06:46 - you can
06:48 - provide multiple Constructors or
06:52 - Constructor overloading to the class so
06:56 - you can provide this Constructor which
06:59 - we can consider as default Constructor
07:02 - and in here we are going to provide
07:06 - three parameter in L comma
07:10 - int B
07:14 - comma int H okay and this parameter we
07:20 - will pass to our length breadth and
07:25 - height okay so this is called
07:28 - Constructor overloading so we can Define
07:31 - two Constructor at the same time both
07:34 - with uh different pair of
07:37 - arguments and this we will call it as
07:40 - default Constructor and whenever you
07:42 - want to provide some values by yourself
07:45 - you can use this Constructor right so
07:48 - what we are going to do is we are going
07:52 - to Define second instance of cube class
07:57 - Cube Cube two which is second instance
08:02 - is equal to New
08:05 - Cube
08:08 - right and now we can uh just call the
08:12 - same method Gap Cube volume but
08:17 - using Cube two
08:20 - instance and here we will Define length
08:24 - breadth and height for example 20 comma
08:28 - 20 comma 20
08:29 - okay so Java is intelligent enough to
08:34 - understand that this Constructor is this
08:37 - one and whenever you don't provide any
08:40 - argument whenever you hover over your um
08:44 - Constructor and just control click it it
08:48 - will go to the default Constructor here
08:51 - right so now when we run the program one
08:55 - will give us the product of these values
08:59 - 10 into 20 into 30 which is
09:02 - 6,000 and
09:04 - other will give us the value of or
09:08 - product of these value 20 into 20 into
09:11 - 20 which is
09:13 - 8,000 so we can Define multiple
09:16 - Constructor with different argument as
09:20 - we require with our class okay so this
09:26 - is all about Constructor I think
09:30 - and once again I'm going to review what
09:32 - are Constructor Constructor are the
09:34 - member method in a class which have the
09:38 - same name as your class exactly the same
09:42 - Constructor never returns any value
09:46 - Constructor can take parameter or they
09:49 - cannot I mean you can it's totally on
09:52 - you if you want to provide any parameter
09:54 - to a Constructor or not you can Define
09:58 - multiple Constructors and use them with
10:00 - the class so I have defined Constructor
10:04 - with no parameters so I can Define it
10:06 - like this and I have defined a
10:08 - Constructor with three parameter length
10:11 - breadth and height so I can Define it by
10:14 - like this
10:15 - okay so in this way you can declare and
10:19 - use Constructor in Java I hope you have
10:21 - enjoyed this video please wrate comment
10:23 - subscribe and bye

Cleaned transcript:

hello guys welcome to the next video tutorial on Java programming for beginners in the last video we have seen what is a class and how we can declare a class and how we can declare a instance of a class and use them now in this video we will see how to use a class Constructor and what is a class Constructor so first of all we will start our tutorial by making a new class so I will go to my package and I will right click and go to new and I will create a class and I will name my class as cube by this Cube class I'm going to you know get or I'm going to calculate the volume of a cube using different length breadth and height so I'm going to declare three variables int length int breadth and int height so that I can calculate the volume using all these three variables and then I will declare a method which will return int and I will name it as get Cube volume and this will take nothing as parameter and and what this method will do is I'm going to just return the length the product of length into breadth multiplied by height okay so this is the volume of the cube right length into breadth into height okay and this was get Cube volume right so I have declared this class now I'm going to initialize an instance of the class so I will create a cube and I will name my Cube instance as cube 1 is equal to New Cube right and this cube with the round bracket is called The Constructor of your Cube class and the most basic property of Constructor is even if you don't Define a Constructor Java will create a default Constructor for you whenever you create a class so we haven't created this Constructor method explicitly anyway we here in our class but this is default Constructor which is provided by Java for us and we can also Define a Constructor for us and uh the Constructor name is always same as exactly the same as the class name so for defining a Constructor you can just write Cube and it for default Constructor I'm not going to pass any values right now but it can take values okay or parameters so here you can provide parameters as you can do it with the method but the most important property of Constructor is it has the same name as class and it never returns any value so Constructor never returns any value so you cannot return return like this in Constructor okay now what I'm going to do is this Constructor let me uh print something so sis o and I'm going to print V are in Constructor okay and in our main class in our main method we have just different find the instance of this Cube class and nothing else and when we run the program it prints VR in Constructor that means whenever you create an instance of a class the first method which is called or which is initialized is the Constructor of the class okay so you can define a Constructor and if you want to initialize something you can do it with the constructors because it's the first first method which will be executed right so Constructors are generally used to initialize values uh in a class so what I'm going to do is I'm going to initialize some value like length is equal to 10 variable bread is equal to for example 20 and variable height is equal to 30 for example okay so this is the default Constructor we have defined and in here we have defined the value of length breadth and height so that if user even don't initialize these length breadth and height we are going to uh initialize or Java will initialize this value for us using this default Constructor so now what we can do is we have initialized the instance of the Constructor and using this Constructor we can print or we can call get CU volume method okay so not here but here Cube which is the instance of this Cube class dot get Cube volume and this will return us the product of 10 into 20 into 100 which we have initialized these values as right now you can provide multiple Constructors or Constructor overloading to the class so you can provide this Constructor which we can consider as default Constructor and in here we are going to provide three parameter in L comma int B comma int H okay and this parameter we will pass to our length breadth and height okay so this is called Constructor overloading so we can Define two Constructor at the same time both with uh different pair of arguments and this we will call it as default Constructor and whenever you want to provide some values by yourself you can use this Constructor right so what we are going to do is we are going to Define second instance of cube class Cube Cube two which is second instance is equal to New Cube right and now we can uh just call the same method Gap Cube volume but using Cube two instance and here we will Define length breadth and height for example 20 comma 20 comma 20 okay so Java is intelligent enough to understand that this Constructor is this one and whenever you don't provide any argument whenever you hover over your um Constructor and just control click it it will go to the default Constructor here right so now when we run the program one will give us the product of these values 10 into 20 into 30 which is 6,000 and other will give us the value of or product of these value 20 into 20 into 20 which is 8,000 so we can Define multiple Constructor with different argument as we require with our class okay so this is all about Constructor I think and once again I'm going to review what are Constructor Constructor are the member method in a class which have the same name as your class exactly the same Constructor never returns any value Constructor can take parameter or they cannot I mean you can it's totally on you if you want to provide any parameter to a Constructor or not you can Define multiple Constructors and use them with the class so I have defined Constructor with no parameters so I can Define it like this and I have defined a Constructor with three parameter length breadth and height so I can Define it by like this okay so in this way you can declare and use Constructor in Java I hope you have enjoyed this video please wrate comment subscribe and bye
