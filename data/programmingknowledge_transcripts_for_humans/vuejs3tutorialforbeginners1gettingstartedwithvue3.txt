With timestamps:

00:01 - hello everyone welcome to new view js 3
00:03 - tutorial
00:04 - in today's tutorial we are going to get
00:05 - start with the view js3
00:07 - so vue.js 3 is an upgradation version to
00:10 - view js2
00:11 - so it is a little bit different but if
00:14 - you have followed my previous tutorial
00:16 - on view
00:16 - gs2 then it would be very easy for you
00:19 - to migrate yourself into vue.js3
00:21 - so let's carry on with view js3 so let's
00:24 - start with the starting template today
00:26 - we will uh
00:27 - surely cover all the basic things which
00:30 - are different from vue.js
00:31 - too and how it made a difference to us
00:34 - and we would
00:35 - all adapt us to those changes so let's
00:38 - get started with the tutorial
00:40 - so today is the title is starting with
00:42 - view gs3
00:43 - and the description is like in this
00:44 - tutorial we will add view js3 inside an
00:47 - html page
00:48 - that means installation and render the
00:50 - component on front end
00:52 - we will make a counter app to understand
00:54 - the same plus we will
00:55 - understand all the basic differences and
00:58 - we will
00:59 - be able to differentiate ourselves with
01:01 - all those things using view jsp
01:03 - so first this is a vs code editor it has
01:06 - an index1.html file
01:08 - and it i'll rename this file as
01:11 - index1.js
01:13 - so it has two files one is index1.html
01:16 - and index1.js
01:18 - now what we can do we can add a
01:20 - bootstrap
01:21 - the starter template to our html page
01:24 - for an easy start so it would be a quick
01:27 - start for us
01:28 - so you can simply move to this link
01:31 - bootstrap 5
01:32 - then start inside the starter template
01:34 - you can
01:35 - directly click on copy and click on
01:38 - paste
01:38 - here okay so
01:42 - then we will be able to run this page
01:44 - and
01:45 - uh like we what we can do we can
01:49 - like this we can reveal in file explorer
01:53 - and when we move to file explorer we can
01:55 - copy this path
01:57 - and we can move to our browser and we
02:00 - can
02:01 - paste it here and inside that we have a
02:04 - folder tutorial one or you can click on
02:06 - index1.htm
02:08 - and this will open the page and let's
02:11 - okay bye i'm really sorry i had copied
02:13 - this in sentence index1.js so let me
02:16 - remove this
02:18 - now i'll save this yeah so index
02:22 - one dot html and i'll refresh this page
02:24 - so here you can see the
02:26 - template has started now i will remove
02:29 - the title to
02:30 - learn view three
02:34 - three and index one so this would be the
02:37 - title
02:38 - and i can move this comments
02:41 - and what we'll do then simply
02:45 - i'll move this heading and now this
02:47 - looks perfectly fine
02:49 - what i'll do i'll add view js3 to this
02:52 - script has been added
02:54 - so i can copy this script and add it
02:56 - here and then
02:57 - i refresh the page and i click on
03:00 - inspect
03:01 - so this would give me inspect and
03:03 - console here you can see you are running
03:05 - a development
03:06 - build of view so make sure to run
03:08 - production this would ensure that view
03:10 - has been installed perfectly fine
03:11 - now what we can do we can create a
03:15 - simple
03:15 - app and first we would also
03:18 - add the index1.jscript also script
03:22 - is equal to source
03:25 - is equal to index1.js
03:29 - and then i can close the stack sorry
03:34 - sorry for the mistake yeah now i can
03:36 - close this tag and inside this i can
03:39 - do console.log
03:43 - script started
03:48 - so this would be perfectly fine when i
03:50 - refresh this page
03:52 - so here you can see the console.log
03:54 - statement has started script started
03:56 - so perfectly fine now what we can do
04:01 - now we can add a view gs3 component
04:05 - so for that what we need to define
04:09 - we need to find a component and then we
04:12 - would render that component
04:14 - on the front end so let's
04:17 - start how we can define so uh
04:20 - it would have two things one is the data
04:22 - and another is the methods
04:24 - so this is uh like this is very much
04:27 - same
04:28 - and how we did in the or like how we
04:31 - used to do that
04:32 - in the view too also but this time we
04:35 - are going to mount the component
04:37 - okay so okay i'll just show you how you
04:39 - do that
04:40 - so what you can do you can make constant
04:44 - okay before that what you can do you
04:46 - create a div here
04:48 - inside a body
04:51 - div id is equal to my app
04:55 - okay now you let this div be as it is
04:59 - okay now what you can do you can do
05:02 - constant
05:03 - my app component
05:06 - component is equal to
05:09 - this is a json object okay now what you
05:12 - can do
05:12 - you can do a constant
05:17 - my app is equal to view
05:22 - dot create
05:25 - view dot create
05:28 - app okay and inside this
05:32 - you can put my app component dot
05:35 - mount so this time we are going to mount
05:38 - and we would give the id of my app
05:41 - so let's move to the page and then
05:44 - refresh it
05:45 - and you have successfully mounted this
05:48 - component
05:49 - so when i click here
05:52 - my app so here you can see a component
05:56 - has been seen
05:57 - okay so this is an empty component we
06:00 - have not ensured anything inside that
06:02 - but just an empty component so i was
06:05 - showing you how we
06:06 - like in view two we should define the
06:08 - element
06:09 - inside the el tag that element we are
06:11 - referring so we need to define the id or
06:13 - a class but
06:14 - here now we mount the component using
06:17 - this syntax that is u dot create
06:18 - app my app dot component and mount the
06:20 - component and we store inside inside the
06:23 - variable my app
06:24 - and by default my app component
06:29 - this is my app component and the id my
06:32 - app
06:32 - is as the same name is as my app so
06:35 - that we so the view component so that it
06:38 - doesn't create any confusion to you
06:41 - now the second difference here we come
06:43 - is the data
06:44 - this time a data is a constructor so
06:47 - so that we render the data as on on
06:51 - on construction that is on
06:52 - initialization so it is like a
06:55 - pre data construction for us and then we
06:57 - return an object
06:58 - for the data and this this time we
07:01 - return account is equal to zero
07:03 - and inside this what we do
07:07 - we make a button okay or we simply print
07:10 - the value of count
07:12 - so this would be an easy task for us and
07:14 - let's refresh the page and see so here
07:16 - we can see the count is zero and we have
07:18 - a zero also
07:19 - so perfectly fine okay and now what we
07:22 - can do
07:25 - we can make this count inside a button
07:31 - you called me
07:34 - you called this button
07:38 - count times
07:42 - so you call this button zero times when
07:46 - we click on it nothing happens
07:47 - okay and
07:50 - we create another button okay before we
07:53 - do that
07:53 - let's call some method so methods we
07:56 - call again
07:57 - methods so methods is a json object
08:02 - good and we call a method increment
08:05 - and this time what we call this
08:09 - dot count plus equal to 1 perfectly fine
08:13 - okay now on
08:16 - this click click functionality this
08:19 - should be
08:20 - at the rate click is equal to
08:25 - increment
08:29 - increment okay now we refresh
08:33 - the page okay now we refresh the page
08:37 - and what we observe
08:39 - that when we click you click this button
08:41 - one times four times five times eight
08:43 - times and nine times ten times eleven
08:45 - times
08:45 - now for the same what we can do we can
08:49 - create a reset button
08:53 - at the right click is equal to reset
08:58 - and you can type
09:01 - reset for the same we need to define a
09:05 - reset method
09:08 - and this time it says this dot
09:11 - count is equal to zero so perfectly fine
09:15 - and when we refresh the page you call me
09:18 - one time two times three times
09:20 - and when i click on reset it turns out
09:22 - to be zero again back to zero
09:23 - then i click on it and reset then it
09:25 - turns reset
09:27 - now what i can do here i'll show you one
09:29 - thing i'll click on this
09:31 - like i've clicked this on 15 times now i
09:34 - refer to my app
09:36 - dollar data please look at the console
09:40 - on the right side
09:42 - data dot count it turns out to give out
09:45 - to be the value of 15
09:47 - and when i call my app dot
09:50 - increment okay
09:54 - so okay sorry for the mistake my app dot
09:57 - increment
09:58 - so it says function increment okay now
10:02 - what you can do uh
10:06 - you can call my app
10:12 - this is a function reset okay so here
10:15 - you can
10:16 - tell you can also look at the functions
10:18 - and the count
10:20 - from here so this is a very good way
10:23 - a nice way to call the functions and
10:26 - this is how we uh called we can have a
10:29 - look at them
10:30 - okay so this is for all this much
10:34 - tutorial
10:35 - so thank you guys for watching the
10:36 - tutorial so it was the main motive was
10:38 - to show that you can access the data
10:40 - account
10:41 - and the function from here so this is
10:43 - how i wanted to show you
10:45 - thank you guys for watching this
10:46 - tutorial so i'll catch you up in the
10:48 - next tutorial thank you everyone

Cleaned transcript:

hello everyone welcome to new view js 3 tutorial in today's tutorial we are going to get start with the view js3 so vue.js 3 is an upgradation version to view js2 so it is a little bit different but if you have followed my previous tutorial on view gs2 then it would be very easy for you to migrate yourself into vue.js3 so let's carry on with view js3 so let's start with the starting template today we will uh surely cover all the basic things which are different from vue.js too and how it made a difference to us and we would all adapt us to those changes so let's get started with the tutorial so today is the title is starting with view gs3 and the description is like in this tutorial we will add view js3 inside an html page that means installation and render the component on front end we will make a counter app to understand the same plus we will understand all the basic differences and we will be able to differentiate ourselves with all those things using view jsp so first this is a vs code editor it has an index1.html file and it i'll rename this file as index1.js so it has two files one is index1.html and index1.js now what we can do we can add a bootstrap the starter template to our html page for an easy start so it would be a quick start for us so you can simply move to this link bootstrap 5 then start inside the starter template you can directly click on copy and click on paste here okay so then we will be able to run this page and uh like we what we can do we can like this we can reveal in file explorer and when we move to file explorer we can copy this path and we can move to our browser and we can paste it here and inside that we have a folder tutorial one or you can click on index1.htm and this will open the page and let's okay bye i'm really sorry i had copied this in sentence index1.js so let me remove this now i'll save this yeah so index one dot html and i'll refresh this page so here you can see the template has started now i will remove the title to learn view three three and index one so this would be the title and i can move this comments and what we'll do then simply i'll move this heading and now this looks perfectly fine what i'll do i'll add view js3 to this script has been added so i can copy this script and add it here and then i refresh the page and i click on inspect so this would give me inspect and console here you can see you are running a development build of view so make sure to run production this would ensure that view has been installed perfectly fine now what we can do we can create a simple app and first we would also add the index1.jscript also script is equal to source is equal to index1.js and then i can close the stack sorry sorry for the mistake yeah now i can close this tag and inside this i can do console.log script started so this would be perfectly fine when i refresh this page so here you can see the console.log statement has started script started so perfectly fine now what we can do now we can add a view gs3 component so for that what we need to define we need to find a component and then we would render that component on the front end so let's start how we can define so uh it would have two things one is the data and another is the methods so this is uh like this is very much same and how we did in the or like how we used to do that in the view too also but this time we are going to mount the component okay so okay i'll just show you how you do that so what you can do you can make constant okay before that what you can do you create a div here inside a body div id is equal to my app okay now you let this div be as it is okay now what you can do you can do constant my app component component is equal to this is a json object okay now what you can do you can do a constant my app is equal to view dot create view dot create app okay and inside this you can put my app component dot mount so this time we are going to mount and we would give the id of my app so let's move to the page and then refresh it and you have successfully mounted this component so when i click here my app so here you can see a component has been seen okay so this is an empty component we have not ensured anything inside that but just an empty component so i was showing you how we like in view two we should define the element inside the el tag that element we are referring so we need to define the id or a class but here now we mount the component using this syntax that is u dot create app my app dot component and mount the component and we store inside inside the variable my app and by default my app component this is my app component and the id my app is as the same name is as my app so that we so the view component so that it doesn't create any confusion to you now the second difference here we come is the data this time a data is a constructor so so that we render the data as on on on construction that is on initialization so it is like a pre data construction for us and then we return an object for the data and this this time we return account is equal to zero and inside this what we do we make a button okay or we simply print the value of count so this would be an easy task for us and let's refresh the page and see so here we can see the count is zero and we have a zero also so perfectly fine okay and now what we can do we can make this count inside a button you called me you called this button count times so you call this button zero times when we click on it nothing happens okay and we create another button okay before we do that let's call some method so methods we call again methods so methods is a json object good and we call a method increment and this time what we call this dot count plus equal to 1 perfectly fine okay now on this click click functionality this should be at the rate click is equal to increment increment okay now we refresh the page okay now we refresh the page and what we observe that when we click you click this button one times four times five times eight times and nine times ten times eleven times now for the same what we can do we can create a reset button at the right click is equal to reset and you can type reset for the same we need to define a reset method and this time it says this dot count is equal to zero so perfectly fine and when we refresh the page you call me one time two times three times and when i click on reset it turns out to be zero again back to zero then i click on it and reset then it turns reset now what i can do here i'll show you one thing i'll click on this like i've clicked this on 15 times now i refer to my app dollar data please look at the console on the right side data dot count it turns out to give out to be the value of 15 and when i call my app dot increment okay so okay sorry for the mistake my app dot increment so it says function increment okay now what you can do uh you can call my app this is a function reset okay so here you can tell you can also look at the functions and the count from here so this is a very good way a nice way to call the functions and this is how we uh called we can have a look at them okay so this is for all this much tutorial so thank you guys for watching the tutorial so it was the main motive was to show that you can access the data account and the function from here so this is how i wanted to show you thank you guys for watching this tutorial so i'll catch you up in the next tutorial thank you everyone
