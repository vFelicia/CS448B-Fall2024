hello Arduino people welcome back to the Arduino basics tutorial series in this lesson lesson number nine we're gonna be tackling a color sensor specifically when you're looking at this color sensor here they say is the TCS 3200 color sensor comes with four bright white LEDs on it and then the little sensor is in the middle the wiring for this one's a little bit more complicated in some of the others because we have to use the sensor off of the breadboard just because the way the pinout works and the way we try to connect it to the breadboard gets really messy so it actually works better for us to just connect it loose off the breadboard and then we'll use it accordingly let's start with the wiring and then we'll explain from there the first part of the wiring diagram is one we're already familiar with which is wiring up an RGB LED to our Arduino board with a 220 ohm resistor on the ground wire so you'll see pin 9 10 and 11 are running for the blue green and red pins of the RGB LED the long leg of the RGB LED is running through a 220 ohm resistor with a ground wire to connect the ground channel on my breadboard so that is wiring that we're all ready for so step one would be getting that rig to wire up your color sensor you're gonna want a femaletomale wire to run off of each of the pins of the color sensor well go through the pin out and how towhat connect this to the breadboard or to the Arduino let's start with the pins that are going to connect directly to the Arduino you can see pins 4 7 & 8 are all going to be connecting to our pin up pin number 4 is actually gonna go to the out pin and these are labeled exactly as they're written on this diagram so you'll see them on your thing as out so the out pin on our color sensor is gonna run to pin 4 on our Arduino s2 is gonna run down to pin number 7 and the s3 is gonna run to pin number 8 those are the only three pins that are gonna connect directly to our Arduino board the rest of the pins on the color sensor are actually going to connect to our breadboard mainly to voltage around so VDD is going to come connect to the voltage row on the other side of it zero is going to connect to ground s1 is going to connect to volt and then round is going to connect to ground and this oh we pin we are leaving unconnected so this pin is not going to get connected so all in all there should be seven wires coming out of your color sensor three of them are going directly into our Dino pins four seven and eight the other four are going into voltage or ground wires according to this pin now you're just gonna have your sensor loose it's not gonna be directly plugged into your breadboard so you'll have to sit it down somewhere where the wires allow beside your breadboard or beside your Arduino okay that's it for the wiring take a minute make sure you've got it all set up properly according to the pin out and then we'll move along and look at the code so here we are inside of a new sketch for lesson number nine we're gonna be working with a color sensor this is going to be the most code that we've written so far because there's a lot going on with reading values analyzing those values and then using those values to display a color on an RGB LED so stay with me and be sure to pause the video so you have time to properly type up the code on your own to start we're gonna declare a whole bunch of variables that we're gonna need to use throughout our program so let's go through all the variables we've got red pin green pin and blue pin pin nine ten and eleven for our RGB LED s27 s38 and el pin 4 these are the ones that are connected directly to our color sensor we then have three integers we'll use later for calculating the red green and blue color strengths that we're gonna read in from the color sensor and then finally an unsigned integer for pulse width remember integers are positive and negative unsigned integers are not going to be positive or negative they're gonna be unsigned which just means that you get a wider range of values and we're gonna use pulse width as well to do with the input from the sensor jumping into our setup function we'll start by setting up our serial monitor now that our serial monitor is set up let's go ahead and set up our pins as either inputs or outputs so our RGB pins are all going to be outputs just like they were in previous programs for our color sensor pins we plugged in three wires from the color sensor two of them are going to be outputs at seven and eight and one of them is going to be an input that is full pin mode for s2 is output pin mode s3 is output and pin mode for out pin is input so this is going to allow us to have the pins connected to the color sensor read properly as put or input values so there's all the tabbing in a setup function now we're ready to jump down into the loop so the way the color sensor works is that we send values of high or low two pins s2 and s3 and depending on what we send dictates whether it's sending us the red green or blue values that it is sensing using the sensor if we send a low to both s2 and s3 then we are telling our color sensor that we want to read red color from the sensor so we do a digital right to send a low signal over pins s2 and s3 this is telling the color sensor please give me the red value that you're reading with your sensor we then use the pulse width variable to store the pulse that we read in through that pin number four okay using a low signal so this is saying check that input pin of four for the signal store it in pulse width now it's going to give us a range from zero to 2560 give or take a little bit so we're gonna need to do some math to manipulate that range in our favor okay so to do some of that math let's have a look at what's involved we're gonna use that our color strength variable that we set up at the beginning because remember we're dealing with red right now we start by doing this divisor pulse width divided by ten and then we subtract one so we're taking this number from 2560 into that range of zero to 255 which is the range that we need for color values okay now we can actually increase that value 10 okay in order to increase the sensitivity of the reading from the sensor so this number you may need to play with a little bit depending on the sensor that you're dealing with and we'll explain that a little later when we look at the output then I do a 255 minus the color strength okay and this allows me to now have a color between 0 and 255 so a small pulse width is going to be a strong color map okay and a large pulse width it's gonna be a poor color match and that's what we want okay so this is gonna help us narrow this down into an actual color value from a pulse width so we're now going to repeat this code twice once for green and once for blue but we're going to send slightly different pulses to the s2 and s3 pings so for green we need to send a high to both s 2 and s three so we do that and then we do all the same values now you'll see that my division here is by fourteen and not by ten this was due to the sensitivity I was having with my color sensor when we go to look at the output later you'll see you might need to adjust that slightly in order to make sure that you're getting the readings that you want from your color sensor I should mention at this point that there are more advanced ways to finetune the actual values of your color sensor feel free to do some digging online and you can get into that more in depth but because of the sake that this is an introductory tutorial series we thought it was best not to go into those technical details well now do this one final time for blue with blue we're gonna send a low to s two and a height s three you'll see my divisor in this case is 11 again all dependent on sensitivity I'll show you later how we can play with those values if we need to so at this point we have a red green and a blue reading from the color sensor and all we're doing in this lesson is we're trying to decide which color is most prominent of the three and we're going to use that color to display a color on the RGB LED but before we get into the led let's remember that the serial monitor can also be very helpful in debugging and understanding our code so let's do a little bit of a print out to the serial monitor so that we can analyze things as we're testing so what you'll see I printed out is the our color strength value a space the green color strength of space the blue color strength and then a space with a newline character and then I wait a quarter of a second okay and this is just going to allow me to constantly see the values that the color sensor is reading so that if I wanted to troubleshoot if I'm having issues with sensitivity I can see what's coming up on my color sensor in our final step we need to decide which color is the most prominent so which color is the largest value and then based on that we need to set the color on our RGB LED so we're going to do this with a series of if statements to check which value is actually the biggest so the first one I put in if red color strength is greater than B color strength and red is greater than green and that means the red is the biggest of the three colors therefore we're going to set red to 255 and set green to zero this just sets them up to write to the LED later on in the code we're now going to do a similar statement for blue and for green so we have an elseif for green is bigger than blue and green is bigger than red then set the green value and zero out the other two if blue is bigger than green and blue is bigger than red then set blue and zero out red and green so our red green and blue values now should either be all red all green or all blue so now we can write that value to the LED now in this case I'm using all 255 so it wouldn't matter if I use digital or analog rights but just for the sake that I might not want to go full brightness I think it's best for me to use analog rights so here you can see analog right the red pin the red color value green pin the green color strength and blue pin the blue colour strength and this will write those values out to our RGB LED now that we've decided which ones bigger from the color sensor we can set the values on the actual LED so coming into this serial monitor just to show you a little bit more my RGB is currently turned on to red and if you look my red value is clearly the highest that's showing up in my serial monitor over here if I put the blue in front you'll see that the blue value on the end is now coming in as the highest reading so what I recommend when you're setting those denominators for devising have a nice clear red green and blue object that you want to stick in front of your color sensor and then make sure that the values are working out so that the value that you want is two coming in higher and if that means you have to adjust the denominator a little bit that's okay so here's my green you can see that now my greens coming in around 160 my right and my blue are both coming in around 100 so Green is clearly the dominant color so it turns my green LED on so that's how you can set up the denominator is a little bit and it just might take a little bit of practice to finetune it like I said you can get more technical with how you find doing these color sensors but this seemed like a good introduction for somebody who wasn't quite ready for all the technical details involved in trying to set up your sensor to be properly calibrated great job with the main lesson in Lesson number nine this was a tricky one right from the start so just getting to the point where you got the bass lesson working is a huge success awesome if you want an extension on this let's go with something a little bit more straightforward how about you add yellow as a colour that it can recognize and write to the RGB LED now you may need to do a little bit of googling about how to read in that yellow value or how you might want to set that up that's okay if you want to do that just make sure you understand code that you find and don't just copy and paste it in blindly good luck all right so this lesson was pretty tricky and the extension added a whole other level but if you really want a challenge for this you can do a bit of research online and the next step to this would be instead of just looking for the dominant color to actually get the hue of a color and write that to the RGB LED so for example if you had a more pinkish color coming in from the color sensor so looking at all three color values so looking at all three color values the red the green and the blue together and seeing what colors they make up this might take a little bit more work in calibrating your sensor properly but it is possible to use analog rights to your RGB LED reading in the inputs properly from the sensor to actually have it match as close as possible the actual hue of the color that it's reading in front of it you'll want to use lots of color cards of different colors to put in front of the sensor to help you calibrate this to get it working successfully best of luck as you work on the challenge and I'll see you back here in Lesson number 10 thank you so much for watching feel free to like the video and subscribe to our channel to stay up to date as we continue the tutorial series