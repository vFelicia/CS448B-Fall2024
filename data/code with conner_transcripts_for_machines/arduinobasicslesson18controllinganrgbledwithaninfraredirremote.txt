hello Internet students welcome back to arid we know basics tutorial series my name is Adam this is lesson number eighteen we're gonna be controlling an RGB LED using an infrared remote alright let's jump right into the wiring diagram I'm gonna show you two wiring diagrams as to whether or no you have an IR sensor that's on a breakout board or one that's not so we'll start with one that's not on a breakout board I'm gonna start with the RGB LED cuz this is something we've done before so when RGB remember has one long leg which is the anode which is gonna go to Graham pending on the orientation of your LED this might read from left to right or am I read from right to left so my anode here is going to grab to the left of the anode all by itself is my red which is going through a 220 ohm resistor into pin number 11 to the right of the anode is migraine so 220 ohm resister green into pink 10 and then finally my blue which is 220 ohm resister independent or not so I'm using 11 10 9 for RGB on my for my IR sensor okay so this is a non breakout board IR sensor it's three pins reading from left to right is the pin the control pin that's going into pin 7 on my Arduino the ground and then the 5 volt and I'm using the 5 volt and ground rose on my breadboard if you have ones on breakout board it reads from left to right like this ground 5 volt and then your control or your sensor pen which is going into pin number 7 on our Arduino so that's the only difference between the 2 wirings so take a few minutes get this all set up and wired then meet me back in the code interface and we'll so ready some code for this IR mantra here we are in our coding interface we're gonna start off by bringing in a library so we're gonna use the IR remote dot H library which is going to allow us access to a lot of functions that are going to be required to make this IR sensor remote relationship work still above the setup function we're gonna bring in some pins and some variables that we're going to need for the IR so we have a constant int called IR pin which is pin 7 I have an IR receiver object called I are receive and he uses the IR pin and then I have a decode results results variable this is important because it allows the IR remote module to decode the results that we're getting from the IR into something that we can actually understand next we'll set up our pins for our LED so my red is 11 my green is 10 and my blue is 9 we'll set up a couple more constants and variables to use throughout our code I have one to store the current red value the current green value and the current blue value and I've initialized them all to 0 to start out I'm gonna bring in two more variables that I'll explain as we get into our code a little bit deeper the first one is a boolean as to whether or not the LED is currently on and it is set to false the next is actually an array of three strings RG and B called current color and then an integer for color tracker which is set to zero we're gonna be using these to toggle or to cycle through the colors on the RGB LED okay an array is actually a list of three different strings and we can access individual strings in this array using only one variable name using box brackets and then using an integer value for index 0 for our one for green or two for B current color box zero is our current color box one is G and current color box 2 is B and we'll use that notation to help us decide which Curt color should be displayed on the RGB and to help us cycle through the colors later in our code so now we're into our setup function we're going to set up our serial for debugging we're also going to enable our ir receiver serial monitor setup to enable the ir we call the ir object ir receive dot enable ir in and i are received uplink 13 is true these are going to set it up and have it ready to listen on the right channels for ir signals next we'll set up all the pins for the RGB LED 2 outputs so I set my red green and blue LED pins to outputs so the goal in this lesson is we're going to use the ok button on our remote to toggle the LED on and then off and then we're going to use the left and right arrows to cycle through the 3 primary colors red green and blue so if we press the right arrow it'll go to green and blue then back to red if we press the left arrow it'll go backwards if the LED is already on the color will just change on the fly if the LEDs off while I'm pressing the arrows it'll still be changing the color in the background so that the next time I turn the LED on I'll see whatever the new color is that's the functionality we're going for in order to do that we're gonna have to do a few things we're gonna have to figure out the hex codes for the buttons on our remote which is one thing that we'll do we're gonna have to create some functions to kind of set the color values on the LED and a function to toggle the LED on or off and then we'll use those within our loop function so what we haven't written it yet we're gonna put a collier to the set LED function and then we're gonna go and we're gonna write that function in the set LED function we're gonna use our color tracker variable and our array of color values to figure out which color we're currently on assign that to our color values and potentially write it to our LED so we want to do an if statement to check which color we're currently on if current color which is my array in box color tracker is equal to R that means the current color is red okay then we want to assign the proper values to those three variables we said at the beginning so our red value our green value in our blue value in this case we want a red value to be 255 and our green and blue to be zero so we've now set the variables but if our LED was currently turned on we need to actually write those values out to the LED so that the color changes right away okay so we would do that with another if statement so remember we have that boolean for whether or not the LED is currently turned on so let's use that and it's really just a simple saying if LED on because remember this is a boolean value so it's always going to be true or false so if it's true then it allows the if statement to execute if it's false it doesn't and now we're gonna do our three analog rights to the RGB LED so I'm gonna analog right the red value to the red pin the green value to the green pin and the blue value to the blue pin if the LED was on it will do this right now if the LED wasn't on it still assigns the variables so that the next time we turn the LED on the right color will show up but it doesn't bother writing because we don't want to turn the LED on right now unless they push the okay button so this is gonna allow the colors to cycle for us well it's part of the code that's gonna allow the colors to cycle we're gonna essentially repeat this whole block of code but as an else if for green and an else if for blue so we can copy that whole block come down add the word else and then paste it okay and we'll change the R to a G red will now be zero green will now be 255 and the rest will remain the same now we don't need to do the else if this time because blue is the only color left because we only put three colors into our array RG and B so if it's not our and it's not G it has to be B so I can just grab the code from inside and put it in here red value zero Queen value zero blue value 255 so this set LED method here's what it does it's going to assign our variables red green and blue values with the appropriate color values for the current position in our array so if our array happens to be at zero it's going to assign them to the red if our array happens to be at 1 it's going to assign them for green if our array happens to be 2 it's gonna assign them for blue okay so the next math that we need to write is one to toggle the LED on or off when the ok button is pushed so we're going to call this one toggle LED okay so it's going to depend really on whether or not the boolean LED on it's true or false so if LED on which means the LED is currently on and then else which means the LED is currently off okay so we're gonna break it in two spots what do we want to do if the LEDs already on we want to turn the LED off if the LEDs already off what we want to turn it on so if the LED is already on we're gonna print to the serial LED turned off we're gonna write zeros to all three of the LED pins and we're gonna set the boolean to false because now the LED has been turned off and I put in a small delay and then if the LED was already off then we want to turn the LED on we want to set the red pin to the currently stored red value green pin to green value blue pin to blue value and set the LED on variable to true because now the LED is currently turned on so we have our methods set up that will allow us to toggle the LED on or off and we have a method that's set up to set the color value of the LED depending on where we're currently at with our color index or our color tracker variable we're ready now to head into the loop function first figure out how the IR remote works and then use that IR remote to trigger these methods so jumping into our loop function we're gonna start by making sure that we're reading things from the IR remote properly and we're just going to print out values from the buttons that we get so we can understand what our buttons are actually doing so we're gonna do an if statement the if statement checks the IR receiver module decodes the results and it's going to return true if it's decoding the results properly that brings us into our if statement we're then going to do two commands we're gonna do a serial dot print line results dog value as a hexadecimal number and then we're gonna resume reading IR data so all this is gonna do is print to the serial what the current value is reading from our IR module so it's not gonna use our set LED method it's not going to use our toggle LED method but that's okay we need to first learn how our IR works so let's push this out to the Arduino if I pull up my serial monitor I shouldn't be seeing anything now if I'm in a room that has a lot of IR interference I can be seeing all kinds of crazy numbers coming up here so you might need to create a kind of a shield over the IR sensor in order to shield some of that IR interference so I'm gonna press the ok button on my remote and I see the value now if I hold it down it's going to show the value once which is FF 3 8c 7 and then it's going to just show full laughs hex fights okay so I press that again you can see now I'll press my left and my right laughing right okay and I can map these and I should just store this in a text document somewhere so I know from my remote what the okay value is from my erm oh what the left what the right with the up but the down values are and that way I have them so that I can now jump into my code and actually get things working properly okay so coming back into my code I'm gonna actually just comment out the line where I'm printing the codes out I might want it later but we'll set it aside for now we're gonna write a new kind of statement we're gonna write something called a switch statement which is kind of like a whole bunch of if and else statements okay so it just simplifies the structure a little bit and I just thought it'd be worth it to show you how they work so a switch statement has to have a value to switch on in this case it's the results top value which is a hex code and then we get to put a bunch of cases so if the value is a certain thing if the value is something else and so on so they're called cases so I'm gonna set up a couple of cases here for okay left and right now the way a case works you put a case and then you put the value now I need to put the 0x in front of the hex code to make sure that it compares it properly to the value coming out of the IR decoder so for okay this was my hex code so what do I want to do when they press ok well I want to toggle the LED whether it be on or off so I'm gonna call my toggle LED method okay I also want to print a debug statement to the serial monitor and then you have to put a break so the way switch statement works you set the switch statement value you check one case against a specific value if that it's true it runs this code but it needs a break statement to avoid all the other cases okay because you don't have the same ifelse structure so toggle the LED print this out and then break to begin it again okay so if left is pressed now this gets a little bit complex so I'm going to try to explain it as I go I need to increment my color tracker beer so remember it's I want it to be zero one two and then I want it to go back to zero one to 0 1 2 0 1 2 well to do this I'm going to use what's called modular arithmetic modular arithmetic just means when you divide by something instead of looking at how many times it divides evenly you look at what's left over you look at the remainder okay so for example 5 divided by 2 is 2 point 5 or 2 and 1/2 so if you do 5 mod 2 you get that remainder of 1 numerator of the fraction and the mixed number okay that's what you get left with so we can use mod operations to do this because if I'm not 0 and I go up when I go to 1 and then 2 and then I want to go back to 0 again so if I'm modding by 3 the only possible remainders are 0 1 & 2 because it's either divided evenly by 3 which would be a remainder of 0 or it's one above or it's 2 above but it can't be 3 above because then it's back to a remainder of 0 because now it's divisible by 3 again so that's what we're going to use to do this left and right incrementation of the color tracker value so I'm going to do color tracker color tracker equals bracket color tracker plus 2 mod 3 now let's just think about this for a second so if I'm at red which is 0 and I press the left button I want to end up at 3 okay so I need to add 2 which brings me all the way up to position 2 and I'm mod 3 because if I was also at 1 and I want to go back to 0 I would add to and then mod 3 from a 3 and I want to go back to 2 I add 2 and I mod 3 we're just iterating through the modular arithmetic here so this one is going to go to the left so if I was at 2 it's going to go 1 then 0 then 2 then 1 then 0 to 1 0 if I'm going to the right we're just going to add one and then mod 3 ok because adding 1 and then modding 3 is going to take us 1 to the wreck remember there's only 3 possible numbers here okay that's why adding 2 works subtracting 1 doesn't work the way that you think because of the way the negative values work if you use the absolute values and you did the subtraction it might work out properly but it works better by adding 2 which is kind of your Mac zero one two when you want to go left and then adding one and you want to go to the right so we increment colorchecker now we're gonna set the LED color okay so now that we've set the color tracker variable we're gonna assign the color to the LED so that's gonna store it in our variables now if our LED was already on our cell LED method is also going to change the color on the fly if the LED was off it just assigns the values so the next time we turn it on it'll have the proper color I'll print a debug statement and then I'll brake now I do need to make sure I kept that IR received I'll resume outside of my switch statement so this should work okay and the modular arithmetic might be a little confusing I will post a link in the description to a video by somebody else explaining modular arithmetic in a little more detail just in case you struggle with that concept let's push this to the arduino and let's see what happens so I've pushed the code out to the Arduino and first I'll just show you the button presses and then I'll show you the LED itself if I press ok it says LED turned on okay pressed my LED is currently on if I press ok again the LED turns off LED on the off Le'Veon let's press the right arrow changes color now it doesn't like green because of my chroma key that I got go on and then blue red if I keep pressing the right we'll see it cycles through if I press left it cycles through in the opposite order and if I turn it off and then cycle the color so it was green but now it's red I can cycle it to blue and then turn it back on right so we can do the full cycle turn on and off in the remote so there we go I mean that's the base lesson that's the lot going on here there's a lot to make sense of in the code in terms of structure in terms of the methods and how they're working and what they're doing in terms of getting the IR codes properly from the remote all that kind of stuff so take some time with this make sure you're positive video a lot to get all the code down and then play with the code a little bit and see what you can get to make happen now that we're done the base lesson to the extension great job in the bass lesson for the extension on this one again just code modification so that you understand what the current code does and you can modify it so all I want you to do for this is the left and right buttons that are changing the color I only want them to work if the LED is on if the LEDs off don't change the color values because it just gets confusing as to what color it's going to be when it turns back on so only allow the left and right button presses to do anything if the LED is already on so that's your extension meet me back here and we'll look at your challenge all right great job in the extension and the challenge we're gonna add any up and down arrows which are gonna adjust the brightness of our LED so we can cycle through our colors if I press the up arrow you'll see it registers that the up arrow is pressed now let's press the down arrow and we see our LED dim and again and I have it set to 4 brightness settings and then it's off I can come back up I can cycle through my colors all dimmed and I can turn it back off this challenge is gonna involve you setting up a flow variable for a brightness or an integer variable for brightness and then using that in complement with the up and down button pushes to adjust the color value dynamically good luck with a challenge and thanks for sticking with us through 18 lessons I hope that you're starting to understand a little bit more about what's involved in writing software as well as what's involved with the physical engineering side of all the things that we use every day if you enjoy the videos be sure to like the videos and subscribe to the channel to stay up to date as we continue to produce more content otherwise I'll see you back here in Lesson number 19 my name is Adam and thanks so much for watching have a great day