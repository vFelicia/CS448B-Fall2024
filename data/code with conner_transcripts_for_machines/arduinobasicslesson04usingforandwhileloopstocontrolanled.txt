hallo future loopers looper looper loopers of the world welcome back to the arduino basics tutorial serie in this video we're going to be exploring loops both for loops and while loops and how we can use them to impact our LEDs to start us off we'll look at our wiring diagram that we left lesson 3 with here we have a single led wired up to pin number 8 through a 220 ohm resistor I'm gonna bring in a second led to this circuit so from pin 12 on my Arduino I'm gonna come up to my breadboard row here make this wire yellow then I'm gonna bring over a 220 ohm resistor to bridge the gap on my breadboard and finally a yellow LED with the long leg connected to the resistor and then a wire headed to my ground channel so here we'll see the completed circuit that we're gonna use for lesson 4 where we're gonna start playing around with four loops now let's head over to the code so here we are in the code all I've done so far let's click on new sketch so first I'm gonna rename this sketch this is lesson number four all right now let's get started with our code what are we going to be doing in lesson 4 we're gonna be controlling two LEDs using loops first things first we're gonna set up some variables for the pins that we've plugged our LEDs into there we go we have variable setup for green pin and yellow pin we show that this variable is linked to eight cuz that's where I plugged in my green LED and yellow pin is linked to pin 12 which is where I set up my yellow LED on my wiring diagram now we're gonna jump into our setup function for the code that's only gonna run one time in here we need to set up our LEDs as output pins you'll notice that when I do this I use green pin and yellow pin as opposed to the numbers eight and twelve and this is so that if I ever needed to change my wiring for whatever reason I would only have to change it once at the top of my file as to which pin it's plugged into and the rest of my code would remain flexible next because we're going to be using the serial monitor to help us understand what's happening we're going to set up our serial so our serial is set up and ready to be used in our function now it's time to jump down to the loop function as you know the way Arduino is work the set up function will run one time and the code inside the brackets the loop function will run repeatedly repeatedly repeatedly over and over and over again until the Arduino no longer has power what we're gonna do is within the loop function we're actually gonna create our own loops that will run as many times as we need them to so we're gonna talk about two different kinds of loops the first kind of loop we're gonna talk about is called a for loop so I'm gonna type in the code and then we're gonna go through it let's look a little bit what we have creating a for loop that will loop four times now I chose four times for this particular lesson obviously that's something that we can change as well for the yellow LED that's where we're gonna start it's this line of code here that's important this is the initialization statement for the for loop let's go through it one step at a time for with regular parentheses wrapping around the whole rest of a statement that indicates to Arduino that this is going to be a for loop we start off with an initial value so we have to have some type of a tracking variable that helps us understand how to loop so I start by creating an integer value which is a non decimal number I call it I and I start it at zero all right so this says we create an integer called I that starts at zero and we have a semicolon this indicates we're ready to move on to the next condition the next condition is called the end condition this is the thing that's going to make the for loop stop looping and it says continue to loop as long as I is less than four as long as I is less than four the code inside of my loop will continue to run then we say do you want something to happen after each loop so after each execution of the for loop I want I to iterate by one we do this with I plus plus and this means the value of I will increased by one after each time the four loop executes before we do anything else let's just watch what happened well I'm just gonna put in a serial dot print line I statement and this way when I run it I can just see what's happening inside of my loop see if you can guess what you think is gonna happen even though I know it's not the code I'm going to use I still need my Arduino plugged into the computer at this point once my Arduino is plugged in all CD Arduino show up at the top I can push this code out to the Arduino now I know that this isn't the code that we want to light our LEDs but it's gonna help us do some debugging and understanding what's happening inside of our loop now that the codes pushed out let's go to the serial monitor and have a look it's a bit chaotic but what we see is that it's the number zero one two three repeating over and over and over again so why is it repeating so many times if we only wanted it to repeat four times well that's because this loop might only run four times printing the number zero one two three but remember this loop is inside of my loop function which is going to repeat forever so once this finishes running four times my loop function ends starts over and this whole four loop starts anew so hopefully that helps you understand a little bit what's happening in there let's add something a little more interesting and let's get our LEDs involved here so let's put in a digital write a delay a digital write in the delay just like we would typically do to blink an LED so there we go and that's code we should be familiar with it's gonna blink the LED on and off for one second so what should happen in this loop is four times our yellow LED should blink on and then off let's have a look and see if it actually works what we'll see if we did it right is actually a yellow LED that's gonna keep blinking on and off for one second intervals it's not gonna stop after four because it's inside that loop function so it's gonna keep blinking on and off repeatedly we'll have to add in a little bit more code so we can see that separation a couple of quick notes about the for loop we can change these parameters as to when the loop is going to stop executing we can change the iterator how fast is the value going up is it going up with a multiplier with an addition is it going down with a subtraction all of these are up for modification we can also use variables in place these numbers to give us even greater control over how something loops so this is just a very brief introduction to the structure of a for loop in order to look at the next type of loop we need to first create a variable and the next type of loop is called a while loop and it's very similar to a for loop except that we have to manually control the variables and the iterations it's only gonna manage the condition for us so I'll show you what I mean what I've done here is I've created a variable called J which I've set to 0 and you'll notice I've done this myself this is not included in the while loop statement then I start my while loop all I put inside the parentheses is a condition of success J is less than 3 as long as that is true the code inside the while loop will run so let's do our green LED and let's do another blink code inside my while loop now I have my digital write for my green pin my delay my green pin my delay this looks beautiful I wonder what happened if we push this code out right now let's try it and see what I'm thinking is we're gonna get the yellow LED blinking four times from our for loop and then our green LED is gonna start to blink now my green LED just started blinking but uhoh it's not stopping after two blinks in fact it's not stopping at all let's see if we can figure out why that is if we trace our code we enter our loop function our for loop function begins this code runs four times when it's done running I reach this point in my code I now create a variable set it equal to zero and I check while that variable is less than three which it is run this code until such a time that J is not less than three let's see here's the problem nowhere in this code does J get changed in value which means J is never going to be bigger than 3 so J is never going to cause my while loop to stop this is where I said we are in charge of manually controlling the variable and the iterator if I add in the line J plus plus with a semicolon after it runs my blink of my LED it's going to increase J's value by 1 and that will let it run then it will end then the loop function will end and the whole thing will start or let's try that so there's our yellow LED blinking 4 times 3 and four and now our green lady should leave three times one two three and if we're right it goes back to yellow hey it's working what happened is our green pin is now blinking three times for J equals zero J equals 1 and J equals 2 so we are now using loop structures to help control the way that our lights are blinking I'm gonna add a few comments into the code now and then after I'm done that pause the video and take a second just to make sure that you understand what our code is doing so you'll see that we've got some comments in there now feel free to look them over if you feel that you're still a little confused as to how the loop structures actually work great job on the main lesson now let's have a quick look at the extension so in the extension it's gonna ask the user how many times they want the yellow and how many times I want the green to blink before it actually does the blinks so if I enter 4 for yellow and then I enter 3 for green then it should actually blink the yellow four times blink the green three times and then ask the user again so that they can put in their values for the next set of blinks great job with the extension now we're on to the challenge for lesson 4 challenge we're going to get rid of user input and our LEDs are going to start by blinking once each then twice then three times each and this pattern is going to continue indefinitely until the Arduino doesn't have power anymore we're going to do this without any user input so you need to make use of variables in your for and your while loops to help allow these lights to continue to grow in their number of blinks good luck on the challenge and I look forward to seeing you back here for the Arduino basics tutorials and lesson number five don't forget to like this video and subscribe to the channel to stay up to date as we continue to roll out this tutorial series thanks for watching and happy looping looping looping