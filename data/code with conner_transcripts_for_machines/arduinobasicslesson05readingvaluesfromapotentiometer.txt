hello potential coder welcome back to the Arduino basics tutorial series today we're doing lesson number five we're gonna be learning how to take input from a potentiometer really quickly what is a potentiometer Sanchi ometer which often looks like this but can I come in other forms as well essentially consists of a knob one pin for voltage one pin for ground and one pin often referred to as the wiper which is the pin that connects to the potentiometer inside is essentially a variable resistor we've already talked briefly about resistors and how we can use them to resist voltage coming through a circuit this the same thing the only difference is we can adjust it on the fly by turning the knob think about a dimmer switch that you might have in a house by turning it we adjust the voltage in the circuit which allows us to control various things such as the brightness of an LED or to actually read a numerical value as to how much is flowing through in this lesson what we're gonna do is first learn how to wire the potentiometer and then learn how to use a serial monitor just to read the input that we get from it we're gonna start with a blank wiring diagram with our Arduino wired up to the breadboard ground and voltage Channel first thing we're gonna do is bring in our three pin potentiometer we're gonna wire it up to our breadboard the middle pin is the pin that's going to connect to our Arduino for that pin we're gonna connect it to a zero on our Arduino board this is one of the special analog inputs that our Arduino board already has preset up so there we have our middle pin wired into a 0 on our Arduino board next we're gonna take the lefthand terminal of the potentiometer and we're gonna wire to the ground row on our breadboard and the righthand terminal and wire it to the voltage now you could reverse the polarity of these by putting the ground on the right and the voltage on the left all that would mean is it would reverse the way in which you turn the potentiometer in order to increase or decrease the voltage so that's it for a wiring diagram pretty simple this time around let's hop over to the code and have a look at what we need to do there so here we are in our code interface all I've done is create a new sketch so we're going to start by renaming it for lesson number 5 we're going to be reading in the value of a potential let's go ahead and look at what we're gonna need in our coat there's actually not that much that we need let's declare a couple of variables to start things off so you'll see that I created an integer called peepin so I'm gonna use from a potentiometer pin of a zero with a capital A then I have another int for p value which gave me the potentiometer value and I have a bother to initialize that to a number yet in our set up function we're gonna have just a couple of things to set things up so in our setup function we're gonna set the pin mode for our potentiometer pin and set it as an input pin so this points to a zero which sets that as an input pin here we're gonna begin our serial monitor as we do in most times because we use it for debugging purposes and I put a print line statement in where I just say the below are the input of potentiometer value it's really not needed as our serial one is in a scroll so fast but really just get you in good habit inside of our loop function we're gonna start by reading in the value from the potentiometer we're gonna do this using a new function called analog read analog read is something we can use on an input pin to read in a signal that's coming in as an analog wave from not pin so a digital is just a 0 or a 1 and off or an on an analog allows a whole spectrum of values in between you'll notice that when we take the analog read we're actually storing it using our p value variable which we had declared at the beginning of the file as an integer next we need to print this out to the screen so we're gonna put a couple of serial print statements to accomplish that task what I've done is to serial print statements the first one is just a print which means it's not going to jump to a new line after it prints p value colon space then I'm going to do a serial print line with the actual p value this will fill in with the actual value of the potentiometer and print it after this and then it'll jump to the new lot so each line should have p value colon space the actual value and then it should jump to the next line after that and that's actually all the code that we're gonna need in here I'm gonna add in a few comments just for clarity and then we'll try running the code so there we have it let's push this code out to our Arduino and see what happens it's open of our serial monitor so we can see you'll notice mine is giving a reading of 0 as I turn my potentiometer we're gonna see that value start to increase I'm turning mine clockwise the way that I have it wired and you'll see that I can go all the way up to a value of 1023 so there are 1,024 possible values coming in from the potentiometer 0 all the way up to 1023 great job with lesson number 5 for the extension we're just going to learn how to do a little bit of math inside of arduino so you'll see that I have my potentiometer on and my output is a little different it's printing the p value but it's also printing this converted value and what i want you to do is using math i want you to allow the potentiometer to also print the serial a range from zero for where it splits up those 1,024 values into only 5 0 1 2 3 & 4 and this gives us a little bit more control over this dimmer ending on we want it to control good luck great job with the extension and now we're gonna have a look at the channel this we're gonna bring back some skills used in previous lessons like wiring up an LED what I want you to do is use this potentiometer as a way of controlling the brightness of your LED you can see at a full brightness and you can dim the LED as you go down good luck on the challenge and thanks for watching lesson number 5 of the Arduino basics tutorial series I look forward to seeing you back in lesson number 6 and don't forget to like this video and subscribe to the channel to stay up to date as we continue the Arduino basics tutorials