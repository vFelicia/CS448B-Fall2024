all right welcome back my name is Adam and we're here to change the world one line of code at a time in today's lesson we're gonna be using an RGB LED and controlling the red value using a potentiometer have a look so here you can see as you turn the dial on the potentiometer the red LED lights up to full brightness and as you turn down the dial on the potentiometer it goes down all the way until it's off alright so now it's time to wire up our circuit so we always start by taking our 5 volt and bring it on to the plus row of our board do that and then we'll take our ground and we'll bring it on to the negative throw of the board can we do this so that on our breadboard we know we can access ground and the voltage right from the board so the next we're gonna do is remember bringing RGB LED now your RGB LED has 4 pins on it the left pin is red then there's a long pin which is the cathode then green and then blue now you may have your spun the other way around so you may see the long pin to the right just flip it over so it goes red long pin and green blue and then we're gonna wire that up so let's start with red according to our code we have red wire it up to pin number 9 so I'm gonna take pin 9 now I'm not gonna plug it directly in to my LED because I need a resistor in between the two so I'm gonna put my red over here and then I'm gonna put a resistor in between my wire from the board and my LED and what that does is that allows me to have resistance in between the voltage coming out of the board and the voltage going into the LED which is important to quickly switch these over to red so that we can tell what's what and then we'll do this for great and we'll do this for blue so our green is coming out of pin 10 so I'm just going to pull it over here leave that green my blue is coming out of pin 11 so we'll bring that over there now we're going to put resistors in between each of these as well so I'm going to bring a green resistor over here and we're on a wire green resistor oh okay and then we're gonna bring our blue resistor in and we're gonna wire our blue resistor up so that now we have coming from our Arduino pin 11 is blue it's gonna go through a resistor and then into the blue pin of the LED green is coming from 10 through a resistor into the green pin and read through a resistor into the red cone so what do we do with that missing pin well we don't connect it to the potentiometer because although that's happening inside of our code all we need to do is provide a ground for our LED so we're actually just gonna wire anywhere in this row up to the ground row of our brand board and that provides us with grounding out of the LED so that's actually all we need to do for the RGB LED the only code left to do is the potentiometer so now we need to do is bring the potentiometer so any standard potentiometer comes with three pins the middle pin is actually where the output from the potentiometer is going to get sent so we're going to wire that up to a zero so if you can do that with a yellow wire so don't get confused so that's gonna send whatever voltage the potentiometer is letting through send that voltage signal into the computer so then we just need to have a ground and a voltage so that it knows where to get power and it knows what to send for the resistance so I'm gonna wire the left leg of this over to the voltage and I'll make that red and then I'm going to bring the right leg of the potentiometer into the ground it actually doesn't matter which one you do to grant on which one you do to voltage because the way a potentiometer works is it just takes the full voltage the whole 5 volts and then it acts like a resistor that's controlled by a dial and then sends through the voltage reading that's left over to the Arduino in Port a zero all right and that actually completes your circuit so now you can jump ahead to the code and see if you can get things up and running alright let's get started with our program we're going to want to make sure that you start off a new sketch in your online sketchbook you can give it a name if you want for lesson seven and then let's get started so the first thing we need to do here's your code here it is we need to declare the physical outputs so that is the values that we're going to send from the computer to the board which will go to the RGB LED so off to someone for red one for green and one for blue okay so let's have a look so the red pin here I've got it as an integer that's a value that's non decimal and number value red pin set equal to nine so that means that on my board I've got my red pin plugged into the nine port out of my Arduino green is ten and blue is 11 okay so that's going to set up my physical outputs to send values to the board all right next up we need to set up our physical input so right now we're going to be using one potentiometer to control our red value so let's have a look we're going to set up an integer I called it our pot pin standing for the red potentiometer pin and I've set it equal to a zero all right so for this next section we're going to set up the constants and variables that we're going to use in our program now the codes a little bit longer here so you might want to pause the video it's not going to type along remember you don't need to type in the comments they're just there for clarity so first we've got something called the read value and the read value is going to be the value that we take in from the potentiometer and that gives us a range from zero to 1,024 and that's going to be that value we get as we turn the potentiometer dial then we're going to have a green and a blue value which I'm going to set to zero for right now now in the extension you're going to want to play around with these a little bit but for now we're going to set them to 0 and then I have this red value now notice I didn't give this a value and the reason for that is we're actually going to get that value calculated based on what we get from the potentiometer later on in the code all right so now we need to set up the actual values in Arduino so we do this using the setup function which you've seen before so take a minute pause the video take down the code and then let's go through it together so first things first I set up my serial now I'm not actually using my serial in this program but it's good to have it there because a lot of times we need to use debug statements or little print lines to just double check that things are working right so then I'm going to set up the output pins for each of the colors so this is telling the Arduino software that the pins that we've already pre assigned numbers to are actually output pins so we do one for the red pin so pinmode red pin output we do one for the green pin mode green pin output and we do one for the blue pinmode blue pen and output then we do that for our input from the potentiometer so that's pin mode our potpan which is our red potentiometer pin and we're setting it to input notice that output and input are in all caps that's a syntax that we use with the Arduino software alright so now that we have the setup done we're going to get into have a look at the actual loop so what's going to happen in our code each time that it works so what's the first thing we need our code to do well we need our code to be looking for the value coming from the potentiometer so we're gonna do that here so take a second have a look at what I've got so we're gonna take in the voltage from the potentiometer which is a range from zero to 1024 and we're going to store that in that read value variable that we saved earlier in in the program we'll do this using this analog read function analog read function needs you to tell it where to listen so we want it to listen on the our potentiometer pin the our pin variable that we set up earlier in the code all right so that's going to get our code listening for the value from the potentiometer well what's next next we have to do a little bit of math we have to take a value that goes from zero to 1024 and convert it to be from zero to 255 well why 255 colors the standard RGB color spectrum goes from 0 to 255 so let's have a look at this code if we want to take a number we want to take a number between 0 and 1024 we basically want to divide it down so that it's between 0 and 1 and then multiply it back up to the range that we want so to do that we take a value from 0 to 1024 we're going to divide it by 10 23 and then multiply it by 254 and this makes sure that our value doesn't go above and stays in the correct range that we want it to be so in or do we know we see that we've done red value which is the value we want to write out to our LED U is equal to 255 divided by 10 23 multiplied by our read value value in from the potentiometer now I know what you're thinking what's with the weird dots this is the thing when you divide 255 by 10 23 you get a decimal number between 0 & 1 the problem is the computer thinks that when we're dividing two integers which remember have no decimals that it wants to give an answer that's also an integer which means it's going to give us zero every time so what we need to do is we need to tell the computer hey we don't actually want this to be an integer we want the decimals we do that by making sure at least one of the values of the division has a little dot at the end of it and that's what you can see there in the code have this new value called read value which is a range from 0 to 255 which is ready to be written to our led so let's do that here is our code to push it out to the led it's called an analogue right and it's gonna write a value from 0 to 255 out to that LED so I done analog right on my red pen because it's the red value I want to push and what am i pushing well I'm pushing the right value which is now a number from 0 to 255 well what about green and blue well not super important but it should be noted that let's keep them at zero for now so that we only see red when we turn our dial on our LED so we should still write our values note to those so it's going to be pretty much the same code where we're going to do analog right for green and an analog right for blue all right so now we've got the code in there that's going to let us make sure that we have a zero value in for green and a zero value in for blue so the only thing that should be happening is our code is as we turn our potentiometer our code is going to recognize that value 0 to 1024 using the read value then it's going to take that value and convert it to red value which is between 0 and 255 and then it's going to push the red which is between 0 to 255 the green and the blue which are both 0 out to our board which means as we turn the dial on our potentiometer our LED should basically go from being off it should be 0 0 0 up to a full red brightness of 255 0 and 0 good luck getting it working and when you're right for the extension come on back wait you're done already all right all right don't get carried away let's do an extension today how about you wire up to more potentiometers on your breadboard one for the green and one for the blue so that instead of green and blue always being zero which is kind of boring you can now turn three dials or through potentiometers and control the full range of colors that your RGB LED is capable of doing good luck