for this lesson we're going to talk about strings in java as well some string methods looping printing all that fun stuff indexing and then we'll kind of be able to use those in the work that we do moving forward it's important to note that strings are not a primitive data type in java they're an object type so when we create a string there's a couple of different ways we can do it so let's look at a couple options so we can do something like a literal string which is our string wrap quotation marks so characters in quotation marks strung together to make a string and we can do it using the capital s string as the type word is the variable name and then equals quotes and just do a literal string you can also do string word two equals new string using object notation you won't really use that um but it's good to know that we can so we can print these out and we'll see that the strings print out so what we need to understand about strings is that strings are broken into indices starting from zero moving the way up and every single character that is strung together gets an index all the way from zero up to the end so there's a couple of important values one of them is length a length which is a method so it has double brackets so if we call word.length these are strings and we're going to print the length of each of these strings so when we look 19 and 60. so let's start counting starting with the acid superman so zero one sorry one for acid we're counting we start at one so one two three four five six seven eight nine ten eleven twelve thirty four to fifty sixteen seven eighteen nineteen so there's nineteen characters the spaces came as characters that's important okay so let's see here starting to count one two three four five so if i'm counting from one the fifth letter is r so i could also do what's called box notation to print an individual index so i could do box 5 which is just going to print the character found at oh no sorry so i can do something called a char app method char at where i put an index in and it will print only the character there so we counted and the fifth character was an r we run that and we get an m well it doesn't really make sense oh that's the one after hm let's start from zero zero one two three four five oh it's because we're starting at zero so remember the indices start at zero so when we're trying to pick a character we have to make sure that we use that notation okay you can also use a substring method where you can put a starting and an ending value so you could do like four comma five which would print the fourth character but not the fifth character but it prints it as a string so there's my r as opposed to as a character which is a primitive data type you can do longer ones like you could do from zero to five and print that right you could also just do five and then it'll print from five to the end of the word right so there's lots of different ways to use the substring method it's important that we recognize those ways when you do a double parameter it will include the first but exclude the second so this would be two three and four so zero one this would be p e and r okay so it's important that we recognize the fifth would not be included in that so we can also use the length method combined with substrings or combine with charades so let's say we wanted to print the last character in this we could do something like um the length of the word remember don't use the length as an index because it won't be there so minus two or minus one and then we could print that substring right there's the last character of the string and that's dynamic too so if i go back up to my thing and i add a couple exclamation points on the end and i run that you'll see that it has dynamically adjusted to the last character okay so lots of different ways we can do that we can also loop through our words so we could do something like four into i four into i equals zero i less than word dot length i plus plus system dot o dot print line um word dot char at i for example so print individual characters damn and i'll just shorten these to just superman and batman just to make shorter work okay so if i run that you'll see superman each character printed on an individual line because i'm accessing them one at a time using a loop remember this will not include length as an index so you're safe on getting hit with an out of bounds error which obviously you don't want to do you could have also done this with substring using i comma i plus 1 and that's fine again because this is exclusive so even at the end when that is going to be equal to length it won't include that value so you're not going to hit it out of bounds error and that'll print the exact same thing just record it as a string so we can do these loops so you can do while loops or all kinds of loops but this is the most common way we're going to loop through a word is using the length of the word and then grabbing substrings from within that word so you kind of get the sense how you can work with them now you can also concatenate strings together right so you can do something like string word three equals word one plus is in love with space plus word two and then system.out.printline word three right so it's going to take whatever the characters in word one are it's going to take this literal string concatenate it onto the end and then it's going to take this and it's going to concatenate it onto the end again print that oh oops where did i mess it up uh no semicolon that'll do it nope that wasn't it because it's not called word one it's called word there we go and we run that and there it is all concatenated together as one string so the java quick reference guide that you get with all your tests in the exam has a whole bunch of examples of the string methods that you're going to use but the the number one challenge that people have when it comes to strings is the indexing you need to be able to interpret the indexing in a string so knowing what character blocks are where and how you're going to loop through looking for certain things and that's really where the challenge is going to come we start talking about problem solving around strings so hopefully that helped talk to you later have a good day you