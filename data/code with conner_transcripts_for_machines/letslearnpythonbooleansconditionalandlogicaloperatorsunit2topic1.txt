hello humans welcome back we are in unit two and now we're going to jump into a little bit more uh deep learning in terms of this code this whole programming thing when we talk about coding it's so easy to forget everything that goes on in these programs you open an app on your phone and you just use it and you think nothing about the fact that it responds to your touch on the screen and how that code works or the fact that it's able to network and interact with other devices and how that code works and it's so easy to forget how many layers there are in this software development kind of world that we live in and it's not like one person creates an app and they've written every single layer of code they've written this one top layer that uses code that's in the next layer which uses code that's in the next layer it's this whole crazy structure where everything's depending on layers beneath it but we're going to start to dive in a little deeper we're going to talk today about booleans about boolean statements boolean variables conditional operators and logical operators i'm going to kind of keep it low level for the beginning part with our basic talk about conditional and logical i'm going to end it with a little bit of a high level piece for you to go look at if you want to dive a little deeper or if you're interested in a more academic pathway this is unit number two today this is booleans and conditionals and this is really important before we start looking at actually structuring our code so the decision making can happen we need to first understand the idea of booleans trues and falses and how we can take other expressions and bring them down to true or false so we're going to talk about two kinds of operators we're going to talk about conditional operators which are things like less than greater than greater than or equal to whatever and then we're going to talk about logical operators which are things like and or and not there are more in these categories again this is an introduction to python i want to get you going and not make you overwhelmed initially you can go in and you can dive way deeper with logical and conditional operation you can spend your whole life in the world of logical uh math and discreet mathematics if that's the world you want to live in um that's not the world i want to live in so i'm going to scratch the service with some of these deeper topics and then you can go off and investigate more on your own so we're going to start with this program so for conditional operators i'm going to bring in two integer values from the user so i have x equals int input and then i just put this little literal thing in quotes so x colon space so then the user is going to see x colon space they're going to type their number and hit enter and then it's going to say y colon space they're going to type their number hit enter and then our code is going to store those in variables called x and y then what i'm going to do is i'm going to do this so i'm going to do a print statement where i say x is less than y and then a colon and then i'm going to as a string print the result of this conditional operator is x less than y now this is what's called a boolean statement this statement can only evaluate one of two ways it can evaluate to true or it can evaluate to false there is no other option either x is less than y or x is not less than y those are the only two options it's a binary operation so i've repeated this for greater than greater than or equal to less than or equal to and equal to i just realized my order's a little off it's a little bit annoying so i'm going to rearrange the order there we go so less than less than or equal to greater than greater than or equal to and then equal to now look at the equal to conditional operator it is two equal signs now this is important because we use one equal sign when we are assigning a value to a variable we use two equal signs when we are comparing true or false statement whether something is equal to something else very important we have the distinction so i'm going to run this code and we'll input a couple of numbers and we'll just kind of see how it works so when i run it you can see it prompts me for a value for x so i'm going to say x is 5 and prompts me a value for y i'm going to say 10. so we'll see x is less than y is true 5 is less than 10. x is less than or equal to y also true x is greater than y false x is greater than or equal to y false again 10 is bigger than 5. so these are not going to be true are they equal no they are not now we could kind of pump this up a little bit if we really wanted to i'm not going to do it all the way but we could instead do something like string x plus the quotes plus string y plus quotes and the colon space and just kind of have it actually print the numbers in the statements so if i run that again five and ten you only see on the first one but now it actually fills it in with the numbers which is kind of nice and it looks a little prettier you know what let's take a quick second and let's just update that code all the way through all right we should be all updated now so let's run it and let's just test it 5 and 10. so now we see the statements 5 is less than 10 true 5 is less than or equal to 10 true 5 is greater than 10 false 5 is greater than or equal to 10 false 5 is equal to 10 false all right so you're starting to see how that works in terms of conditional operators and checking whether something will be true or will be false now obviously you can enter different numbers there so i could put 6 and 6. you can see the less thans and the greater thans are false but anything that had the equal to in it is true so i'll just leave that code up there for one sec pause it if you need to if you want to go have a look at how i did that so that's conditional operators and those are always going to evaluate to true or false now you can put those directly into a print statement like we did here you could also store them as a variable so i could have a boolean variable called z that is equal to you know x equal equals y and that variable is going to be equal to either true or false so it will in itself be a boolean variable so you can either store it as a boolean variable which again binary only holds true or false or you can print it directly into a print statement or what we'll see in the next video we can bring them into a conditional statement like an if statement that's conditional operators now we're going to look at a logical operator i'm just going to comment that out because i don't need it right now and i'm going to scroll down logical operators i'm going to create a couple of variables i have one called a which is equal to true one called b which is equal to false and you'll notice capital t capital f okay now when we talk about logical operators we're talking about three primary operations and or and not and these go back to electrical engineering they go back to voltage passing through or not passing through these gates and an and gate will only allow voltage to pass through if it's true in both instances an or will let it pass through if either one of them is active and a knot is just going to be an inverter that's going to invert the signal and this this is really if you want to get into what's going on at the bottom layer of your computer and hardware and cpus and all that and or gates logic gates are at the core of all that right this is how math is is done on the very first computers is this idea of decision making ands ors and knots inverting a zero to a one or taking a one and a one and seeing if it's going to be a one or a zero and all this so it gets pretty deep pretty fast we're going to keep it pretty simple we're just going to overlay the three main ones which are and or and not and then i will touch briefly on an academic piece called de morgan's law so we're going to start by just printing out a little bit so we can understand what's going on so i am just going to print the value of a and b and then i'm going to print the value of a and b not a and not b so we can investigate a little bit what's going on so let's start with one where they're both true so it's going to print the value of a the value of b the value of a and b the value of a or b value of not a and the value of not b save that we're going to run this so a is true b is true a and b is true because both a and b are true therefore the statement a and b also evaluates to true a or b either a is true or b is true that's true not a is the invert of a so true becomes false and not b is the inverse of b so true becomes false cool let's change our values let's make one of them false okay i made b false save and run so now b is false so are both a and b true no they are not false is one of them true yes it is the inverse of a the inverse of b get the hang of it let's look at the code so here is the actual code to do an and operator it's the variable so the boolean and the next boolean and you can have anything that evaluates a true or false on the sides of that ant you could have the conditionals we just had in the last question x is less than y and x is greater than zero those can both be there because they both evaluate true or false what's going to happen in coding languages is your conditional operators have a higher order of operations than your logical operators so it's going to evaluate the conditionals down to true or false then it's going to and or or not those values as kind of the last ish statements in that order of operations obviously for getting brackets okay so there's our and there's our or and there's our not not a not b in a lot of programming languages this is an exclamation point so not a not b in python we're going to write out not lowercase just like and and or lowercase you'll notice my notepad plus plus recognizes these makes them yellow keywords really nice there okay so this is that essential structure of and or and not and this is really important we try to make decisions so you know you're talking about whether or not you can divide something so you have two numbers you want to know whether you can divide them well you can't divide them if the denominator is zero so you might have to check if the denominator is greater than zero and then maybe and the value is greater than 0.5 then you pass the test so you might want to do stuff like that where you need these logical operators these ands or ors or maybe it's a user input thing and it's if they press this button or they press this button and we want to do something that's the same action so you've played a game where you could use the up down left right arrows but you can also use wasd well the w key and the up arrow are going to provide the exact same effect so in the code it's probably if the up arrow or the w key is pressed and that's going to create the same operation so this is that idea of logical operators logical operators and or not require booleans so trues and falses on either side of the operator if it's a not there's only one operand there's only the one there's not one on each side and then those can come from all kinds of crazy statements you can see crazy long boolean statements where people put together and string this stuff into a hot mess but the the core idea is that what is on either side of an and what is on either side of an or has to be an expression that evaluates a true or to false all right if all you want is to scratch the surface stop the video here we're going to talk a little briefly just um smidge about de morgan's law it's going to bend your mind a little bit and you can go do some googling look it up i'm not going to go crazy with it but i want to show it to you because it's cool but there's no challenge for this video we're going to jump into the bigger stuff next lesson we got to do if statements before i can put a challenge out there for you all right de morgan's law i'm going to throw this print statement out yeah okay it's a mess it's fine we're going to keep our true and false values here and uh i'll actually keep my little statement here where i print a and b don't worry about the code let's just run it all right so de morgan's law works two ways think expanding brackets grade 8 9 7 math whatever not a and b in brackets is equal to not a or not b think about like dividing each side of a math equation that's an inequality by a negative value you have to flip the inequality symbol similar mindset here the and becomes an or when we nod it so not a and b becomes not a or not b and then the second part of demorgan's law is not a or b is equal to not a and not b now what i will tell you is this when you try to put context to this you're going to hurt your head when you try to think about like if i need to pass the exam and have all my assignments completed in order to get my credit and you start trying to categorize those using a's and b's you're going to melt your brain a little bit so you can see it work here so i have a true and a false so not a and b well a and b is going to be false because they're not both true nodding it is going to be true not a or not b not a is going to be false not b is going to be true or them one of them is true so it's true it works if we look down here a or b is going to be true because one of them is true nodding it's going to be false not a is going to be false and not b is going to be true when you're doing an and operation if either one of them is false you're automatically false so that works as well now you can go out and do some looking at de morgan's law you want to get a little bit heavier with it again it can be hard on the head it's a cool topic uh if you're kind of math minded and you like that stuff if you're not don't worry about it we're not really going to touch on it again we're going to jump into if and l statements in the next video so that's it for unit two topic number one which is booleans conditional and logical operators this is so important when we start to make decision making in our code which we're going to start next time with if and l statements there's no challenge so just make sure you followed along with the video and it kind of made sense if you want to code along code along it's never going to hurt to code and mess with things and try to get them to work and break them and fix them and break them and fix them beat your head against the wall a little bit and then come back good all perfect learning opportunities all right next video we'll jump into vanello statements thanks for watching like share subscribe do all that annoying stuff that everybody on youtube tells you to do it keeps me going it's awesome comment below if you have questions and i'll try to hit you back as quickly as i can and we'll see you in the next video see ya bye humans