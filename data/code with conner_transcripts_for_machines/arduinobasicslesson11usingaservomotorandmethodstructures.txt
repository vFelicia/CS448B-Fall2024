hello everyone welcome back to the Arduino basics tutorial series this is lesson number 11 what we're gonna learn to work with a servo motor is the first step on your path to eventually create your own Terminator what's a servo motor servo motor is a small motor usually it's blue sometimes it's black you can attach these little plastic pieces onto the top to allow you to attach different things to the motor the motor allows you to have a range of motion of 180 degrees so you can move 180 and 180 back the other way and so kind of like running along the edge of a protractor so that's the range of motion we get of a servo motor it's not the same as a motor that you use to power the wheels on a car and then move in one direction but can move all the way around this allows us to go in both directions but only within that range okay so we're gonna learn how to use a servo motor in this lesson we're also going to focus a little bit on class structure and code in this lesson and learn about something called methods and ways that we can create our own blocks of code so first things first we need to do the wiring for this very very simple wiring you need to dig out your servo motor servo motors come with three wire attachments okay you'll need to use some jumper wires to connect to the Arduino there'll be a brown or a black wire that represents the ground so we're gonna connect out to one of the ground pins on our Arduino and I'll just take a second and make the wiring look pretty they also have a red pin which is going to connect to our power or a 5 volt pin on our Arduino so we'll go ahead and connect that pin to the 5 volt and then we'll clean it up a bit and the final pin is the pin that's actually going to be the signal pin that's gonna connect to our Arduino for this lesson we're gonna connect it to pin number 3 which you'll notice is a PWM pin okay which is important that we have that so let's set that pin to orange and let's clean it up so there we have our wiring diagram our servo motor is connected to the ground to the voltage and a pin number 3 that's all the why we're going to do the rest of this lesson we're gonna spend looking at our code so let's head over there now here we are in the code we got a blank file ready to go just naming it lesson 11 where we're gonna learn to use our server motor and work a little bit with method structure so for our code we're gonna start above our setup function the three things that we're going to include above our setup function are a library we're going to include the servo h library you can do this a number of ways like in the early lessons we can go to the libraries tab and grab it through there if you're in the actual Arduino IDE you can do it up through the menus where you can go to include libraries and look for a servo dot H once we've included the library to work with the servo we need to declare the pin on which our servo is plugged in we plugged our servo into pin number three so my integer servo pin is set equal to three we then need to create a servo object which is going to allow us to send commands to the motor we do this using a capital S servo and a name that we chose which was servo one you could give this a different name if you chose I chose to call it servo one so now that we have that we're ready to jump into our setup function and make sure our code knows how to communicate with our Arduino so in order to do that we need to send an attach command to the servo motor that we just created so we do servo 1 dot attach and then in the brackets we need to tell it what pin we've plugged it into so this line of code allows our Duino software to communicate with the servo motor via that servo pin we're also going to initialize our serial monitor as we may want to use it for user input and debugging panels out a few comments in for clarity that's all the code that we need in our setup function now we're ready to jump into our loop function where we're actually going to do some stuff with our code we're gonna do a few things we're gonna print out some messages to the screen and ask the user for some input we're gonna use that to manipulate our servo motor and then we're gonna kind of up it a little bit and we're gonna play around with a little bit more structure to our code so to start it off we're gonna prompt the user for a number from 0 to 180 then we're going to use that value to move or point the servo motor at that specific angle so here's the code to get the user input value from the user so this code is going to prompt the user using serial and ask for a position from 0 to 180 so we have a print line statement enter a value from 0 to 180 to move the servo to that position then we have the while serial dog available loop so waiting for the response and then we're storing what they give us in an integer called user Val and we're gonna use the serial purse int because we want that value to be read as an integer so now we have a number that the user has given us we now need to send the servomotor to that particular angle so we can do a servo 1 dot right which is going to tell the servo to point to a specific angle what angle well the user Val so the number that the user gave us is where we want to point the servo motor and then we'll put a delay of some sort in before it prompts the user again okay so this should ask the user for a value from 0 to 180 point the servo motor at that value and then wait one second push this code out and we'll have a quick look at how it works so we'll hop over to the serial monitor here set this to no line ending so enter a value from 0 to 180 to move the servo to that position so I'm just gonna hold my servo up here so you can see it so I'll start with 0 and we'll see if it moves well there we go and then they'll try 90 Eric O's and then we'll jump all the way over 280 and there it goes again so by sending that command I get to move it to the position that I want ok so that would be our first step with learning to work with the servo motor is being able to get it off in the user and point the servo motor at that specific value so that's what we've done so far now we're gonna take it a step further and we're gonna actually start doing methods so methods are a block of code in which we can store code that we might want to use over and over again so give you the example we've already been using two methods this whole time the set up method and the loop method so we're gonna write our phone method I'm gonna call this method control so I'm outside of all of my code hit enter and I'm gonna do void control okay brackets and I'm gonna take an integer called X I open my squigglies so this i've created a method the methods names control and in order for us to use the code in this method we need to give it a number if we give it a number the code inside this method can run well what I'm actually gonna do is I'm gonna take the code that we already have this code here the serial servo dot right so let's take this servo 1 dot write code I'm gonna get rid of it from the loop and I'm gonna move it into here what I'm gonna do is instead of writing the user value I'm going to write X so what happens here okay so in my loop function I'm gonna write control user Val so let's trace this code when it gets to this line it's already gotten the number from the user it says call the control method finds that and give it the number that you just got from the user so what this does is it jumps down to line 28 of my code and sets the value of x to whatever the value was here then it enters the method now inside the method it can write that value to the server so this code is going to function exactly the same as the code that we just ran but now i've taken this and i've put it into its own block now i'm gonna write another method we're gonna write a sweep method void sweep and this one's not gonna take any parameters so it's just gonna be void sweep with the closed brackets okay now in this method we want to kind of treat our server like a windshield wiper so we're gonna start at at zero sweep it all the way to 180 and then sweep it all the way back to zero we're gonna have to do that using for loops so let's go through this quickly for parentheses integer i equals 0 this says create an integer called i set it equal to a starting value of 0 semicolon as long as I is less than 180 we'll iterate by by 1 which means we'll add 1 to I each time so for loop has 3 parts your variable and it's starting value your condition of success so as long as I is less than 180 it will execute the code in the loop and then your iterator what happens after each execution by goes up by one okay so inside of this I want to do a servo 1 dot right ah now that's going to set I to zero or the servo to 0 then the servo to 1 then the servo to 2 and so on now it'll happen superfast if I don't have a delay in there so we'll put a delay of 5 milliseconds just so that it isn't so stuttering I'm trying to do it super fast so that's going to sweep us from 0 to 180 now we want to sweep dock in the other direction so let's do that for int I equals 180 so we're going to start at the top this time I is greater than 0 by minus minus so starting at 180 as long as we're bigger than 0 continue to take one off serve a 1 dot right by the way thought this code is going to sweep me from 0 to 180 and this code is gonna sweep me back we want to use this method at some point so right now we're asking the user to enter a position from 0 to 180 and then we're just calling control so we're just doing that right let's give them a second option let's say that instead of that they could give us say negative 1 and we'll do a sweep for them or enter negative 1 to sweep ok enter a value from 0 to 180 to move the serve of that position or negative 1 to sweep we'll collect their value right here before we do this we need to add in let's call the conditional and we've done this an if statement so if the value they gave us was negative 1 then we're gonna call sweet otherwise else if now this will get a little technical I'll try to explain it after I type it out so what I said here was otherwise if user Val is greater than or equal to 0 and it's less than or equal to 180 so it's in the right range okay and as with two of the ampersand symbols is found above the seven key on your keyboard okay great the user values greater than equal to zero and it is less than or equal to 180 that's when we're gonna call the control so this now gives the user two choices they can choose to do the sweep or they can choose to just enter a value and it'll move the motor to that position okay so now we've created our own methods we're calling our own methods and we're using a bit of structure around how our code works we're starting to get things to look a little bit more like actual programs where we now have to think about code structure we have to think about how do we break this into logical chunks and that's a big part of programming let's run this and have a look at how it executes so we upload this to our thing and we open up the serial monitor and I'll bring my servo up here so you can see it okay so it asks me to enter my value so I'm gonna start with that negative one and we're gonna see the sweep so there it goes sweeps from one side to the other let's run that one more time so you can see it like a windshield wiper and then if I did want to enter a value say 45 it jumps to position 45 I can't revision 80 and it'll jump to position 80 now if I enter something out of the range so 400 it should just do nothing wait one second and prompt me again nothing happens and it prompts me again okay so go to session 102 and then let's do a sweep again so I should jump back to zero and then sweep it goes cool so we now have a working servo motor we have code that has some actual structure to it we learn how to write some methods we've looked at some loops we've looked at some if statements things are starting to kind of come together you know we're halfway through now so over the next nine lessons as we get to less than 20 this kind of stuffs gonna become more common where we're looking at larger files we're looking at chunking up code using if statements using loops within our code if you made it this far good for you you either have a teacher standing over your shoulder making sure you get there or you a bit more motivation than most people so that's great let's talk about what we could do for an extension for this so a couple options one would be look at your sweep method and let's see if we can change the speed of that suite that would be a first kind of intro extension for you to do another one would be instead of sweeping maybe you can come up with another pattern that you could do with your servo motor and put that in your sweep method or write another method that does a different pattern kind of bounce around the motor can run a few times okay and just kind of get familiar with how you manipulate things or how you create methods within this code because the code structure here is really important not just the writing to the servo now if you're looking for a challenge I'm just gonna show you some functionality of some code and then we can kind of see if you can reproduce that my prompt is the same as it was in the lesson from 0 to 180 or an to negative 1 to sweet now when I enter negative 1 to sweep it's gonna add in two prompts it's gonna ask me for the delay so think about windshield wipers right there's something called the intermittent windshield wiper which basically puts a delay in between each sweep so this is my option to give that delay in seconds so twosecond delay let's say and then the second prompt is how many times do I want it to sweep okay now with windshield wipers you actually have a switch so you can turn on and off for us we're gonna hardcode so let's say I want five sweeps can I put that in and we're gonna see I'm sweeping and then I'm waiting one two and I'm sweeping and it's gonna do this five times so we're adding some functionality and we're gonna have a play with our method headers our suite method is now going to have to take a variable it's gonna have to take a delay variable and it's gonna have a loop of some kind to loop it number of sweeps time so there's a definitely more conceptual coding stuff going on in order to make this work so this is a great little challenge for you at this point in the course if it's too much talk to your teacher if you have a classroom teacher and maybe they can help guide you in the right direction thanks for watching lesson 11 in the Arduino basics tutorial series my name is Adam I'm excited to come back here in lesson 12 as we work towards finishing up this course so don't forget to like and subscribe to the channel if you like what we're doing and you're in what might come next have a great day