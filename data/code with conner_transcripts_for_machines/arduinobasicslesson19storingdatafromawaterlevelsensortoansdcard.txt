hello Internet students welcome back to the Arduino basics tutorial series this is lesson number 19 in this lesson we're going to be wiring up a water sensor and then writing the data from that water sensor to an SD card compared to the last two lessons this one will be relatively short because we've already started to learn all of the structure that we need it's just a matter of bringing in a new input which in this case is a water sensor let's have a look at the wiring let's start by reviewing the wiring for our SD card reader and writer module from top to bottom we're going to ground then we're going to 5 volts then we're going to pin 12 pin 11 pin 13 and then finally pin 10 so coming down we're going from our miso or Mis oh is pin 12 our mo si is pin 11 our s CK is going to 13 and then our signal pin our CS is going to 10 so that's going to wire up our SD you'll see I used a breadboard here just to make use of the voltage and ground rows here is my water level sensor so it's got clearly labeled pins and ass a plus and a minus the minus is going to go to ground the plus is going to go to voltage and the S or the signal we're gonna bring to one of the analog inputs on our Arduino in my code I use a zero for this this is what our wiring diagram is going to look like for our water level sensor that's gonna write down it to an SD card meet me over in the coding environment once you have this done and we'll get started with writing the code here we are in our coding interface for lesson number 19 I have a new file we're gonna start by setting up our libraries and our global variables that we need throughout our class so the only library we need is our SD library we don't need one for the water level sensor as it just uses an analog read on a standard analog pin variables we need our file object which is called my file we have a string file name which i've called water dot CSV so we're gonna store our data as a a separated value file so make it easier to import it into spreadsheets if we want to graph the data I have an int for the water value which I've currently set to zero and an int for the water pin which I've said to a zero jumping into our setup function we're going to set up our serial monitor for debugging and we're gonna wait for the serial monitor to be launched so we're gonna do a serial dot begin 9600 and little while not the serial so it'll wait while the serial port connects before it moves on with the rest of the code so if you remember lesson 17 when we worked the SD card we wrote a couple of methods we wrote one to initialize the card we're gonna just bring that entire method in to this program so I'm gonna go here in between my setup and loop function and I'm gonna add in the methods that we decided to add in soul there's my initialized card method from lesson number 17 not gonna bother changing it this is gonna allow us to initialize the SD card for writing and reading so I will call initialize card from the setup we're gonna say a little more code from lesson 17 we're gonna put the if statement in that's going to check it the file name already exists if it does it's going to remove that file and print a debug statement letting us know if st not exists file name this will return true if the file name already exists on the card st don't remove file name so get rid of it and then print a debug statement saying that the file had already existed it's been removed and overwritten and last thing of the setup function is we have to write headers to our file so we're gonna steal the write header method from lesson 217 as well and we're going to call it from the end of our setup function now when I bring a write header in we will have to modify it a little bit so let's do that now so here I am underneath the initialize card method make some room and I will paste my write header method so this opened up our file with the right file name as a write it checked it the file opens properly and then it printed debug statements to say that it was writing the file name and then it printed to the actual file to comma separated values so in the previous lesson it just said time and value so I've changed that to read time comma water level and that those will be the headers that we'll use for this lesson and then I close the file the else statement is if it didn't open the file properly it prints that act so looking at our setup function at the moment it sets up serial and waits for it it initializes the SD card it makes sure the file name doesn't already exist if it does removes it then it writes the header value to our file so that will write time and water level comma separated values to the top of our file now we're entering our loop function and so we're going to set it up so that we read the value from the water level sensor print a debug statement to serial and then also write that data to the SD card so first things first my water Val variable is gonna be equal to an analog read on the water pin that's gonna read in the value from the water level sensor I'm then going to print that as a debug statement and I have a fivesecond delay after that in between here is where I'm going to need to write the data to my card so remember from lesson 17 we have the right data method well we're gonna call that here and then we're going to copy and paste it over from lesson 17 and just make a couple of tweaks I'm gonna go above my loop function and I'll paste that right data function right data now we still want to store the time values milliseconds and a coma but then we want it to print the water Val as opposed to that value variable that we had been using in the previous lesson we want it to print the water Val that it had just read from the analog pin zero and then we close the file that's all we have to do there to write this data to the font so if I look at my loop it's gonna read the sensor debug statement write the data to the file and then delay five seconds so this is all we need in our code let's run through it really quickly just to make sure we understood it we're gonna set up our serial we're gonna initialize our card we're gonna check the filename and if it exists we overwrite it and remove the old file name we're gonna write the header values which should be the time and the water level then we're going to come into the loop function where it's going to read the sensor print it to the debug or to the serial write it to the card wait five seconds and then repeat and it will continue to do this indefinitely all right let's push it out to our board and let's see how it works all right so we got the serial monitor open we see that it initially Sicard successfully that the file had already existed because I've been doing this before the video started so it's been overwritten it says writing to water dot CSV and you can see it's writing a water value on 0 every 5 seconds now at the moment I don't have my sensor sitting in water so I'm gonna pick up my sensor here and I'm gonna dip it into some water so now we're seeing 522 or go a little bit deeper 536 537 and we're starting to see that water data going up now one thing I find with these water sensors is they take quite a while for the water to draw off of them so you will see lower levels so you see I brought it up out of the water a little bit I'm into the 300s now if I remove it from the water entirely a little tink on the side of the water bottle what you'll see is it's not gonna drop right to zero right away here we are at 75 so when you're coding for this you need to take that into account if you were using this as some type of system to kind of be monitoring water levels and maybe having like a trigger mechanism so if you had electronics that were sensitive you didn't want them to get wet just be aware that once they once the sensor gets wet at all it does take quite a bit of time for it to completely dry off and go back down to a water level of zero so you are gonna have to have a bit of a buffer there at the bottom so before we call it done let me turn off my Arduino plug my SD card into my computer and have a look at the actual CSV file so I went into my SD card and I opened up the water dot CSV file and they brought me in here with all this data and you can see my time and my water level time in milliseconds starting at zero there's where I submerged it there's where I lifted it up a bit and then there's where I removed it from the water completely and you can see this on a graph which is nice when we bring in a CSV file we can easily make graphs from them you can see not in the water here and also not in the water here and you can see the difference because the sensors wet here oh so this is the great thing about being able to do this that's it for the bass lesson we're getting into kind of the real use of Arduino is now which is working a sensor boxes is a really common use for Arduino gathering sensor data store it or send it off remotely we'll see you in the extension in just a minute great job on the bass lesson in the extension all I want you to do is add a buzzer to your circuit and I want you to wire that buzzer so that it goes off at a certain threshold so if the water level hits 200 300 400 whatever you're going for I want the buzzer to sandwhich to act as a bit of an alarm you can choose how you want it to go whether you want it to go for 5 seconds until the delays over and then turn back off or as long as the water level is above a certain value it will continue to keep the buzzer on until the water level comes back down so whichever way you think would work best for this lesson but that's what I want you to do for the extension for this activity all right so last two lessons have been really big so challenge on this one we're going to keep pretty small you've already got it working with a buzzer writing device the SD card let's add in a visual element so we like the sound to alert us from the buzzer that the water level has reached a certain threshold let's bring in an LED as well so let's bring in a nice bright red LED and have that LED turn on if the water threshold is past a certain point and then it can turn back off if the water threshold goes back down I wouldn't recommend putting it at zero because like I said if it's water that's gonna come up and go back down like maybe in a sub pump you want to allow the sensor time to dry off after the water level goes back down so you might want to have the alarm closer to a hundred or maybe a little higher so that you know for sure that the water level is remaining there then it hasn't receded okay so let's add in an LED to the circuit then we've got ourselves a great little sensor box maybe get it set up in your basement with a battery and you can track that water data if you needed to check it out thanks so much for sticking with us for 19 videos I look forward to seeing you back for lesson number 20 which will be our final lesson of the main series and then we'll be doing some extension videos after that if you like what we're doing like the video subscribe to our channel to stay tuned as we continue to create more content have a great day