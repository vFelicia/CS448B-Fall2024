With timestamps:

00:00 - as you might have seen on the news
00:01 - recently it's been ridiculously hot
00:04 - in vancouver it's pretty much unbearable
00:06 - so
00:07 - i wanted to get an ac but i couldn't
00:09 - find it in
00:10 - any stores so i decided to write a
00:13 - simple python script
00:14 - to check if any ese's are available like
00:17 - every five minutes
00:18 - so that it can let me know when
00:20 - something is available
00:22 - so in this video i'm going to show you
00:23 - how i made this whole thing just in case
00:25 - you want some inspiration for a new
00:27 - project or you want to follow along with
00:29 - something like this to practice your
00:31 - coding skills
00:32 - so let's get started now the first thing
00:34 - i want to mention
00:35 - is that i'm going to have links to two
00:37 - sets of code
00:38 - in the description the first one is
00:41 - this complete code that i'm actually
00:44 - running
00:45 - right now to look for acs for me
00:48 - and the second one is the starter code
00:50 - which i'm going to
00:51 - use in this video this has you know a
00:53 - bunch of boilerplate code to get started
00:56 - with this whole project and i'm going to
00:58 - use this one
00:59 - uh in this video just to show you the
01:01 - whole process the first thing i want to
01:02 - do is
01:03 - i want to show you the exact task i want
01:06 - this script to do
01:07 - so i was looking at this particular ac
01:09 - in best buy
01:11 - and i wanted to see if it's sold out in
01:15 - nearby stores near vancouver
01:17 - so that you know whenever it's not sold
01:20 - out
01:20 - i can make an order and i can pick it up
01:23 - in a store
01:24 - and i decided to use slack for the
01:27 - notification part
01:28 - just because you know i'm kind of used
01:30 - to using slack but
01:32 - feel free to use whatever you feel
01:34 - comfortable with whether it's email
01:36 - or telegram or discord or whatever if
01:39 - you decided to
01:40 - follow this with me and for the library
01:42 - initially i was trying to use
01:44 - beautiful soup for this but it didn't
01:47 - work for this particular page
01:48 - and i think the reason is you know
01:50 - beautiful soup works well with
01:52 - plain html pages like wikipedia
01:55 - but it doesn't work well with more
01:58 - dynamic pages
01:59 - for example if they're written in react
02:01 - so then i ended up trying selenium which
02:04 - is more advanced i guess
02:05 - and it worked perfectly so that's what
02:08 - i'm gonna use in this video
02:09 - okay so let's now just dive into our
02:12 - starter code
02:13 - if you open it you'll see that i have
02:16 - some code to
02:17 - set up selenium at the beginning and
02:19 - then i have some code for
02:20 - slack which we're going to use later
02:24 - for the selenium code let me first show
02:27 - you what it does
02:28 - you know by running the code depending
02:30 - on the environment you're using
02:32 - you might need to install selenium with
02:34 - you know pip install selling
02:36 - or something like that but anyway once
02:39 - you set up everything and once you run
02:40 - it
02:41 - you should see something like this so
02:43 - you can see that
02:44 - we have a browser here chromium to be
02:47 - exact
02:48 - that opened up the page that i was just
02:50 - looking at
02:52 - and the way i did it is i have some you
02:54 - know set up code for selenium here
02:56 - and then i said driver dot get or driver
03:00 - open this page and then the url okay and
03:03 - the next step after that
03:04 - is i want to be able to have selenium
03:07 - and this script
03:08 - find the exact text that i wanted to
03:11 - check
03:11 - and that's this text right here and to
03:15 - do that i'm going to use a css
03:16 - selector so let me show you how you know
03:19 - you might go about
03:21 - finding the exact selector for that so
03:24 - first
03:25 - inspect elements you see that this is
03:28 - in a span this span right here with this
03:31 - class
03:32 - actually i tried using this particular
03:34 - class to find
03:35 - this span but it didn't work because it
03:38 - turned out
03:39 - this class is not unique so then the
03:41 - next thing i did
03:42 - is i looked at the html around this span
03:46 - and i looked at in particular this spans
03:49 - parent's parent so that would be this
03:52 - div with this class right here and it
03:55 - turned out this class
03:57 - is actually unique for this div so
04:00 - all i need to do is first find this
04:04 - parent's parent div and then say
04:07 - okay i want to find this divs
04:11 - child divs span
04:15 - so let me show you how i would go about
04:18 - doing that
04:19 - first find
04:23 - that particular div with this
04:27 - so find something with that particular
04:31 - class and then say i want to find
04:34 - the child of that i think we're supposed
04:37 - to find
04:39 - div first and then that span
04:42 - so right there this is the css selector
04:45 - that we need to use
04:46 - and now that we have this css selector
04:49 - we can just
04:50 - copy and paste this into our selenium
04:53 - python code
04:54 - so what i'm going to do here is i'm
04:57 - going to say
04:58 - driver dot i think it's
05:01 - find element by css selector
05:05 - right there and then just
05:09 - do that and i'm going to call this
05:13 - result let's just say e here
05:16 - and i'm going to run this again this
05:19 - whole thing
05:21 - once this is complete i should be able
05:23 - to
05:24 - jump into you know this line of code
05:28 - right here in the console just by typing
05:31 - e here you know if you're using a
05:33 - different environment
05:34 - you might want to use a debugger here
05:37 - anyway it looks like
05:38 - we were able to find an element
05:42 - i'm not sure if it's the right element
05:43 - yet but at least some element
05:45 - and i should be able to say e dot text
05:48 - here
05:49 - and this is exactly the text that we
05:52 - wanted
05:53 - and the next step after that is i want
05:55 - to be able to say something like
05:57 - if the current text that we're examining
06:01 - is still
06:04 - this text then
06:07 - do nothing uh to be precise i'm gonna
06:10 - send a message on slack
06:12 - without pinging me and then i'll say
06:15 - else um ping me on slack
06:20 - so i'm gonna show you how to do this in
06:22 - a second
06:23 - but first let me comment out everything
06:26 - i wrote so far for
06:28 - selenium to show you how i
06:31 - set up slack and using a slack bot from
06:35 - python is actually pretty simple the
06:37 - only thing you need to do before running
06:39 - this code
06:39 - is you need to make sure that you have
06:42 - your environment variable set up
06:44 - correctly
06:44 - i'm calling mine slack token and inside
06:47 - this variable
06:48 - i put the slack api key for
06:51 - using our slack bot and once you set up
06:54 - in whatever environment you're using you
06:57 - should be able to
06:58 - just to import slack import os and then
07:02 - set up
07:02 - the client and once you have the client
07:05 - you should be able to
07:07 - send a message to slack through that bot
07:10 - with this function i'm going to send it
07:12 - to
07:14 - this channel bought test2
07:17 - with this text hello and before
07:20 - running it you'll actually need to
07:23 - install
07:24 - a slack client manually with pip
07:28 - install slack client or pip3
07:31 - install slack client and once you've
07:34 - done that
07:35 - you should be able to just run this code
07:38 - and that should work so let's see
07:41 - let's just go to slack and
07:45 - this is uh what i'm getting hello and
07:48 - here i'm you know this particular bot is
07:51 - called weekly wins
07:52 - just because i'm kind of hijacking
07:55 - somebody else's
07:56 - bot that was being used for a different
07:58 - purpose but
07:59 - it works anyway now that we have these
08:02 - two components
08:03 - selenium and slack we just need to
08:05 - combine them together
08:06 - and we're going to have our but so let's
08:09 - do that right here
08:11 - just by first uncommenting the stuff
08:14 - that we wrote for
08:16 - selenium and then i'm gonna
08:20 - move things around a little bit and here
08:23 - what i want to do
08:24 - is i'm gonna write
08:28 - a while loop with while true and then
08:31 - i'll say check the website and after
08:34 - that
08:35 - sleep for 5 minutes or 300 seconds
08:39 - and just keep repeating that and to
08:42 - do that sleep i'll need to import
08:45 - time and then say time
08:48 - dot sleep the first thing i'm actually
08:52 - going to do in this while loop
08:53 - is i'm going to make sure
08:57 - the browser is refreshed so that we can
08:59 - get
09:00 - the new information and then i'm going
09:02 - to say
09:03 - this thing to find the right
09:06 - element and then i'm gonna use
09:10 - this code right here actually what i'm
09:12 - gonna do is i'm gonna put this
09:15 - in a new variable called let's say text
09:18 - if text is this one
09:21 - then send that on slack
09:24 - just that text without pinging me and
09:27 - else
09:28 - i'm gonna send whatever that text is
09:31 - in the slack but i also want to be able
09:34 - to ping myself
09:35 - and to do that i'll just need to do
09:39 - text plus space and
09:42 - this code right here my slack id is
09:46 - this one so let me just copy that
09:49 - over there and this should work
09:52 - let's see it looks like it's refreshing
09:55 - the page right now
09:57 - and it should have been able to check
09:59 - the right element
10:01 - so let's go over to slack and it looks
10:04 - like
10:05 - i got the right text and available for
10:07 - store pickup
10:08 - sadly and after this i made sure this
10:11 - line for
10:12 - picking myself works and in a minute i'm
10:14 - gonna explain how to make this code
10:16 - work more consistently so it will pretty
10:18 - much never crash
10:19 - but before that i wanted to mention a
10:21 - few things first of all
10:23 - if you want to make sure that this code
10:24 - never stops and if you choose to use
10:26 - replica for it you might need to use
10:28 - what's called always on
10:30 - i'm going to put some info in the
10:31 - description about how to use it
10:33 - second i know i haven't been making that
10:35 - many videos recently on this channel
10:37 - but i have been making and editing some
10:39 - videos on replace channel
10:41 - and i thought you might like some of the
10:42 - videos there for example this one about
10:44 - why you might want to switch from
10:46 - webpack to vt and this one about coding
10:49 - bootcamps
10:50 - anyway back to the video if you look at
10:52 - my final code
10:53 - i think you'll notice a few differences
10:56 - between this final code
10:57 - from the one we were just looking at
11:00 - first of all i changed the organization
11:02 - of the code a little bit
11:03 - so some stuff is in separate files and
11:05 - some stuff
11:06 - is in functions and functionally the
11:08 - biggest difference
11:10 - is this statement right here try and
11:13 - accept i need to use this just because
11:16 - sometimes
11:17 - when selenium tries to find this element
11:21 - rarely actually it's not able to find it
11:23 - for whatever reason
11:25 - so i want to be able to find that case
11:27 - and to do that
11:28 - i'm catching that error here and then
11:32 - throwing it
11:33 - here as e and once i catch it
11:37 - i convert it to a string and then i send
11:40 - it over to slack
11:41 - that rare case looks kind of like this
11:44 - and with that it looks like this spot is
11:48 - actually
11:48 - able to run pretty much indefinitely
11:51 - it's pretty sad to look at it you know
11:53 - it's
11:53 - it's always unable unavailable for still
11:55 - pick up but at least
11:57 - it's working and i can't wait for this
12:00 - spot to
12:00 - ping me alright so that's pretty much it
12:04 - for
12:04 - this video i hope you learned something
12:07 - from it
12:08 - and i hope you are staying safe wherever
12:10 - you are and if you have any questions
12:12 - about this or anything else
12:13 - let me know in the comment section below
12:15 - okay bye guys

Cleaned transcript:

as you might have seen on the news recently it's been ridiculously hot in vancouver it's pretty much unbearable so i wanted to get an ac but i couldn't find it in any stores so i decided to write a simple python script to check if any ese's are available like every five minutes so that it can let me know when something is available so in this video i'm going to show you how i made this whole thing just in case you want some inspiration for a new project or you want to follow along with something like this to practice your coding skills so let's get started now the first thing i want to mention is that i'm going to have links to two sets of code in the description the first one is this complete code that i'm actually running right now to look for acs for me and the second one is the starter code which i'm going to use in this video this has you know a bunch of boilerplate code to get started with this whole project and i'm going to use this one uh in this video just to show you the whole process the first thing i want to do is i want to show you the exact task i want this script to do so i was looking at this particular ac in best buy and i wanted to see if it's sold out in nearby stores near vancouver so that you know whenever it's not sold out i can make an order and i can pick it up in a store and i decided to use slack for the notification part just because you know i'm kind of used to using slack but feel free to use whatever you feel comfortable with whether it's email or telegram or discord or whatever if you decided to follow this with me and for the library initially i was trying to use beautiful soup for this but it didn't work for this particular page and i think the reason is you know beautiful soup works well with plain html pages like wikipedia but it doesn't work well with more dynamic pages for example if they're written in react so then i ended up trying selenium which is more advanced i guess and it worked perfectly so that's what i'm gonna use in this video okay so let's now just dive into our starter code if you open it you'll see that i have some code to set up selenium at the beginning and then i have some code for slack which we're going to use later for the selenium code let me first show you what it does you know by running the code depending on the environment you're using you might need to install selenium with you know pip install selling or something like that but anyway once you set up everything and once you run it you should see something like this so you can see that we have a browser here chromium to be exact that opened up the page that i was just looking at and the way i did it is i have some you know set up code for selenium here and then i said driver dot get or driver open this page and then the url okay and the next step after that is i want to be able to have selenium and this script find the exact text that i wanted to check and that's this text right here and to do that i'm going to use a css selector so let me show you how you know you might go about finding the exact selector for that so first inspect elements you see that this is in a span this span right here with this class actually i tried using this particular class to find this span but it didn't work because it turned out this class is not unique so then the next thing i did is i looked at the html around this span and i looked at in particular this spans parent's parent so that would be this div with this class right here and it turned out this class is actually unique for this div so all i need to do is first find this parent's parent div and then say okay i want to find this divs child divs span so let me show you how i would go about doing that first find that particular div with this so find something with that particular class and then say i want to find the child of that i think we're supposed to find div first and then that span so right there this is the css selector that we need to use and now that we have this css selector we can just copy and paste this into our selenium python code so what i'm going to do here is i'm going to say driver dot i think it's find element by css selector right there and then just do that and i'm going to call this result let's just say e here and i'm going to run this again this whole thing once this is complete i should be able to jump into you know this line of code right here in the console just by typing e here you know if you're using a different environment you might want to use a debugger here anyway it looks like we were able to find an element i'm not sure if it's the right element yet but at least some element and i should be able to say e dot text here and this is exactly the text that we wanted and the next step after that is i want to be able to say something like if the current text that we're examining is still this text then do nothing uh to be precise i'm gonna send a message on slack without pinging me and then i'll say else um ping me on slack so i'm gonna show you how to do this in a second but first let me comment out everything i wrote so far for selenium to show you how i set up slack and using a slack bot from python is actually pretty simple the only thing you need to do before running this code is you need to make sure that you have your environment variable set up correctly i'm calling mine slack token and inside this variable i put the slack api key for using our slack bot and once you set up in whatever environment you're using you should be able to just to import slack import os and then set up the client and once you have the client you should be able to send a message to slack through that bot with this function i'm going to send it to this channel bought test2 with this text hello and before running it you'll actually need to install a slack client manually with pip install slack client or pip3 install slack client and once you've done that you should be able to just run this code and that should work so let's see let's just go to slack and this is uh what i'm getting hello and here i'm you know this particular bot is called weekly wins just because i'm kind of hijacking somebody else's bot that was being used for a different purpose but it works anyway now that we have these two components selenium and slack we just need to combine them together and we're going to have our but so let's do that right here just by first uncommenting the stuff that we wrote for selenium and then i'm gonna move things around a little bit and here what i want to do is i'm gonna write a while loop with while true and then i'll say check the website and after that sleep for 5 minutes or 300 seconds and just keep repeating that and to do that sleep i'll need to import time and then say time dot sleep the first thing i'm actually going to do in this while loop is i'm going to make sure the browser is refreshed so that we can get the new information and then i'm going to say this thing to find the right element and then i'm gonna use this code right here actually what i'm gonna do is i'm gonna put this in a new variable called let's say text if text is this one then send that on slack just that text without pinging me and else i'm gonna send whatever that text is in the slack but i also want to be able to ping myself and to do that i'll just need to do text plus space and this code right here my slack id is this one so let me just copy that over there and this should work let's see it looks like it's refreshing the page right now and it should have been able to check the right element so let's go over to slack and it looks like i got the right text and available for store pickup sadly and after this i made sure this line for picking myself works and in a minute i'm gonna explain how to make this code work more consistently so it will pretty much never crash but before that i wanted to mention a few things first of all if you want to make sure that this code never stops and if you choose to use replica for it you might need to use what's called always on i'm going to put some info in the description about how to use it second i know i haven't been making that many videos recently on this channel but i have been making and editing some videos on replace channel and i thought you might like some of the videos there for example this one about why you might want to switch from webpack to vt and this one about coding bootcamps anyway back to the video if you look at my final code i think you'll notice a few differences between this final code from the one we were just looking at first of all i changed the organization of the code a little bit so some stuff is in separate files and some stuff is in functions and functionally the biggest difference is this statement right here try and accept i need to use this just because sometimes when selenium tries to find this element rarely actually it's not able to find it for whatever reason so i want to be able to find that case and to do that i'm catching that error here and then throwing it here as e and once i catch it i convert it to a string and then i send it over to slack that rare case looks kind of like this and with that it looks like this spot is actually able to run pretty much indefinitely it's pretty sad to look at it you know it's it's always unable unavailable for still pick up but at least it's working and i can't wait for this spot to ping me alright so that's pretty much it for this video i hope you learned something from it and i hope you are staying safe wherever you are and if you have any questions about this or anything else let me know in the comment section below okay bye guys
