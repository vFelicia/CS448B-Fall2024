With timestamps:

00:00 - hey CS dojo its YK here welcome to video
00:03 - number two of my Python tutorial for
00:05 - absolute beginners in this video first
00:07 - of all I'm gonna answer a question I
00:09 - received on my last video and then I'm
00:12 - gonna give you some additional commands
00:14 - you can use interpreter notebook for
00:16 - example for adding and deleting cells
00:18 - and remember that you don't necessarily
00:20 - have to use to put a notebook to follow
00:22 - this course you can use for example part
00:25 - charm which is a popular IDE for python
00:27 - after that I'm gonna cover if-else
00:30 - statements how to use them and what they
00:32 - are and by the end of this video you'll
00:35 - be able to create a simple BMI
00:37 - calculator which can tell if a person is
00:39 - overweight or not given the person's
00:42 - height and weight I'm gonna put an
00:44 - outline of this video below so you don't
00:46 - have to watch the whole thing if you
00:47 - don't want to and you can go to CS dojo
00:50 - io / Python - to download the sample
00:53 - files I create in this video alright
00:56 - first of all let me answer a question I
00:58 - received on my last video
00:59 - domani Ostrom sorry for the
01:02 - pronunciation says currently I'm
01:04 - learning web double mint what do you
01:06 - think about it should I keep going or
01:07 - start another language like Python so I
01:10 - wanted to answer this particular
01:12 - question because I thought some other
01:14 - people might have the same question
01:15 - maybe you started learning C++ or Java
01:18 - already and you're wondering should I
01:21 - keep going with it or should I take this
01:22 - course for Python instead I would say
01:25 - keep going with whatever you're doing as
01:27 - long as you enjoy and then if you want
01:29 - you can take this course at the same
01:31 - time because some of the concepts I'll
01:33 - teach are going to be the same
01:34 - regardless of which language you're
01:36 - using so for example the method for
01:39 - swapping two variables I talked about in
01:41 - the last video you can use that in C++
01:44 - or Java or in any other language you're
01:47 - learning okay with that out of the way
01:49 - let's now talk about Geppetto notebook
01:51 - first of all launch Jupiter notebook
01:53 - through anaconda navigator or with any
01:56 - other method you'd like to use and then
01:59 - navigate to desktop and let's create a
02:03 - new folder here I'm gonna call this
02:05 - python tutorial to navigate to that
02:10 - folder within desktop and click new
02:13 - at the top right corner click Python 3
02:15 - and let's call this file if-else
02:19 - statements click rename and then I'm
02:23 - just gonna maximize my browser window so
02:25 - the only command we learned in the last
02:28 - video was this button right here for
02:31 - running or executing yourself once I
02:33 - click it it executes or runs all the
02:36 - commands within the given cell this
02:39 - green box right here so if we have hello
02:43 - one here and then hello to here and the
02:47 - print function will execute both of
02:50 - these lines and you might have noticed
02:52 - that after running this cell it
02:54 - automatically adds a new cell below it
02:57 - and what if we wanted to delete the cell
02:59 - for that you can use this button that
03:02 - looks like scissors and for adding cells
03:05 - you can use this button right next to it
03:07 - that looks like a plus button and you
03:09 - can add as many cells as you want and
03:12 - one interesting thing here is that you
03:14 - can execute these cells in any order you
03:17 - like so let's say you have print a in
03:20 - this cell and a equals 1 in this cell
03:24 - you might say well if we try to execute
03:27 - this cell it will give us an error let
03:30 - me actually try it again because a is
03:32 - not defined yet so it'll give us an
03:34 - error saying name error name a is not
03:36 - defined but before executing this cell
03:39 - print a if we execute this cell right
03:42 - below it to define a to be 1 it won't
03:46 - give us an error anymore ok let me now
03:49 - delete a bunch of cells here with this
03:52 - scissors button and let's add one cell
03:56 - below the first cell and let's say we
03:58 - have B equals to here and let's run it
04:02 - with the Run button right here and of
04:04 - course this way B is defined to be 2 now
04:07 - what happens if we delete the cell with
04:10 - this one right here and if we try to
04:13 - print be right here with print
04:15 - parentheses B what happens is actually
04:19 - we can still print it because even
04:21 - though the cell containing this
04:23 - statement B equals 2 is deleted the
04:25 - state of this Jubran notebook
04:27 - is actually still preserved so when I
04:29 - say the state of this Jupiter notebook
04:31 - what I mean is pretty much all the
04:33 - variables that are stored in this
04:35 - Jupiter notebook and the state of this
04:38 - Jupiter notebook is not stored on this
04:40 - browser window because like I say in the
04:43 - last video this browser window is just a
04:45 - user interface for the Jupiter notebook
04:47 - the state of distributor notebook is
04:49 - stored in something called the kernel of
04:52 - this Jupiter notebook that's basically
04:54 - represented by this command-line
04:56 - interface this might look slightly
04:58 - different if you're using Windows and
05:00 - the kernel is what execute your code
05:02 - once you click the Run button and it
05:04 - also stores all the variables that
05:06 - you've defined so to clear out the state
05:08 - of this Jupiter notebook or to clear out
05:10 - all the variables you have defined you
05:13 - need to click colonel at the top and
05:15 - then click restart actually I like to
05:18 - use the command below restart and clear
05:20 - output because it restarts the kernel
05:22 - and clears out everything that's been
05:25 - printed so this kernel has been
05:28 - restarted now and if we try to print B
05:32 - now it will give us an error because
05:34 - name a is not defined yet also remember
05:38 - that there is one kernel for each
05:40 - notebook file so if we had another
05:43 - notebook file and if we restart the
05:46 - kernel for this notebook file that won't
05:49 - affect the other notebook at all because
05:51 - that notebook will have a separate
05:53 - kernel okay so just to recap we've
05:56 - learned how to use for commands in
05:58 - Tibetan notebook the first is running a
06:00 - cell and then deleting cells adding
06:04 - cells as well as restarting the kernel
06:07 - and clearing the output okay let's now
06:10 - delete all the cells we have here and
06:14 - restart the kernel and clear the output
06:17 - and let's dive into our main topic today
06:20 - if-else statements let me give you a
06:23 - quick example here a is equal to 1 and B
06:27 - is equal to 2 and what if we wanted to
06:31 - show a message that something like a is
06:34 - less than B by printing this string only
06:39 - if
06:41 - is actually less than B we can do this
06:44 - with if a less than B Colin so that's if
06:50 - space a space less than space B Colin
06:54 - enter into a new line and print a is
07:00 - less than B and you need to indent this
07:04 - new line by four spaces so that's one
07:07 - two three four you could actually use a
07:09 - different number of spaces for example
07:11 - three spaces or five spaces but using
07:15 - four spaces is a convention in Python so
07:18 - let's stick with four spaces in this
07:20 - video so these two lines if a less than
07:23 - B print a is less than B this whole
07:26 - thing is called an if clause and after
07:29 - this if clause you could have more code
07:32 - for example print not sure if a is less
07:36 - than B and so this if condition only
07:40 - applies to this line in this example and
07:43 - Python knows that because of the colon
07:46 - sign here as well as the four spaces
07:49 - that we have before this print mine so
07:51 - let's try running the cell because a is
07:54 - currently us than B we should be able to
07:57 - print a is less than B and we do and
08:00 - let's see what happens if a is three in
08:03 - that case a is not less than B so this
08:06 - cell should only print this line right
08:09 - here not sure if a is less than B and
08:11 - that's indeed the case and it's actually
08:14 - possible to have multiple lines within
08:16 - the if clause so instead of just having
08:18 - print a is less than B we're gonna write
08:21 - print double quotes a is definitely less
08:26 - than B and in this statement Python
08:31 - knows that these two lines are part of
08:33 - the if clause because both of these
08:35 - lines have four spaces in front of them
08:38 - so let's see if that works by changing a
08:41 - to one again and since a is less than B
08:44 - we should be able to print these two
08:46 - lines again so we see that a is less
08:49 - than B and a is definitely less than B
08:51 - so in a different language you might see
08:53 - an if clause with parentheses
08:55 - and with curly brackets but in Python
08:57 - we're using a column as well as four
09:00 - spaces in front of each line you need to
09:03 - be really careful about the number of
09:04 - spaces in front of each line because if
09:06 - we had for example four spaces in front
09:09 - of the first line and five spaces in
09:12 - front of the second line it will give us
09:14 - an error so the error says indentation
09:17 - error unexpected indent let's fix that
09:20 - by deleting one space here and now we
09:24 - have four spaces in front of each line
09:26 - so it's gonna work again okay let's take
09:28 - a look at a few more examples here the
09:31 - first one is this C is equal to three
09:34 - and D is equal to four if we write C
09:39 - less than D :
09:41 - four spaces print double quotes C is
09:46 - less than D and let's add something
09:50 - outside this if block by writing print
09:53 - outside the if block and once we write
09:58 - this will print this line C is less than
10:01 - D only when C is less than D what if we
10:05 - wanted to add a new line here that says
10:09 - C is not less than D and what if we
10:14 - wanted to print it only if C is not less
10:17 - than D we can do that by writing else :
10:21 - right after the if clause and note that
10:24 - there's no spaces before this else line
10:26 - and insert four spaces before this line
10:29 - to show that this line is part of the
10:32 - else Clause we could also have multiple
10:35 - lines within the else clause and write
10:37 - print double quotes
10:39 - I don't think C is less than D so this
10:45 - whole block says if C is less than D
10:48 - then print C is less than D and if
10:52 - that's not the case or else print these
10:55 - two lines instead so currently C is
10:58 - definitely less than D so we should see
11:01 - this line printed C is less than D and
11:04 - this line outside the if block and we
11:07 - see that C is less than D
11:09 - outside the if block and once we change
11:12 - the value of C to five so that C is not
11:15 - less than D we should be able to see
11:18 - these two lines instead and we do see
11:22 - it's not less on T and I don't think C
11:23 - is less than D take a look at another
11:26 - example here E is equal to 7 and F is
11:30 - equal to 8 so we're gonna write pretty
11:33 - much the same thing after that so if E
11:36 - is less than F then print is less than F
11:40 - and else : print is not less than F so
11:48 - here what if we wanted to deal with
11:50 - three cases instead of only two cases
11:53 - for example what if we wanted to deal
11:55 - with the case where is less than F and
11:58 - is equal to F and is greater than F
12:02 - separately so those three cases we can
12:05 - do that with all F which stands for else
12:08 - if so write L if e double e cosine F
12:16 - newline print parenthesis double quotes
12:19 - is equal to F and let's change what's in
12:24 - the else Clause to e is greater than F
12:30 - so this block now says if E is less than
12:34 - F then print is less than F and if
12:37 - that's not the case check the next
12:40 - condition e is equal to F and not here
12:44 - that we're using the double e cosine
12:45 - instead of a single a cosine so the
12:48 - difference is that when we use the
12:49 - single a cosine for example right here
12:52 - we're assigning what's on the right-hand
12:55 - side to the left-hand side so in Python
12:57 - and in many other languages the single a
13:00 - cosine is an assignment operator now if
13:03 - you want to check if e is equal to F
13:07 - similar to the way we can check if a is
13:10 - less than F we need to use the double e
13:13 - cosine so if you're not sure about which
13:15 - one to use just remember that in this
13:17 - line
13:18 - we're not assigning F to e we're
13:21 - evaluating is
13:22 - that if E is equal to F so this whole
13:25 - block says if E is less than F print
13:28 - this line and if that's not the case
13:30 - check the next condition if E is equal
13:34 - to F then print this line right here
13:37 - print E is equal to F and if none of
13:40 - these conditions are true so it's not
13:43 - true that E is less than F and E is
13:46 - equal to F then else print is greater
13:50 - than F because that's the only
13:52 - possibility that's left here now let's
13:55 - just make sure this whole block works
13:56 - currently E is less than F so we see is
14:01 - less than F and what if is equal to F so
14:06 - E and F are both equal to 8 then we see
14:10 - is equal to F right here and what if E
14:13 - is greater than F so is 10 and F is 8 we
14:18 - see a is greater than F right here
14:20 - and actually after the if Clause we
14:23 - could have multiple L if clauses so
14:27 - after the first L if we can write well
14:30 - if let's say e greater than F plus 10 so
14:37 - this just means e is greater than EF
14:41 - by more than 10 so right now he is not
14:46 - greater than F by more than 10 we should
14:49 - still see he is greater than 10 once we
14:51 - run this cell and we do and once we
14:54 - change e to for example 20 we'll see he
14:58 - is greater than F by more than 10 so
15:01 - there's actually another way to deal
15:02 - with 3 or more separate cases without
15:05 - using the LF clauses so to show you
15:09 - let's define new variables here H and G
15:13 - 7 and 8 so we're gonna write if G is
15:17 - less than H :
15:19 - print G is less than H and so far it's
15:23 - the same but after this we're gonna
15:25 - write else instead of LF and within this
15:30 - else clause we can create a new if
15:32 - clause and say if G is equal to
15:36 - the EE cosine print G is equal to H and
15:41 - after that else colon print G is greater
15:47 - than H so let's see how this block works
15:51 - first we are checking if G is less than
15:54 - H and if that's the case we print G is
15:57 - less than H and if that's not the case
16:02 - we'll go to the else clause and there
16:05 - are four lines in the else clause and if
16:08 - you look at this line the if clause
16:10 - there are four spaces in front of it and
16:13 - if you look at this print line that says
16:15 - G is equal to H that's within the if
16:18 - clause within the else clause so there
16:21 - are four spaces here and then there are
16:23 - four additional spaces here before the
16:25 - print line so there are eight spaces
16:27 - total here and similarly for else there
16:30 - are four spaces here because this else
16:32 - Clause is within this else clause and
16:34 - then there are eight spaces before the
16:37 - print line here because there are
16:39 - already four spaces before the else
16:41 - clause and then there are four spaces
16:43 - after that to show that this print line
16:46 - is within this else clause okay let's
16:50 - make sure this works right now G is less
16:53 - than H so we should see G is less than H
16:57 - we do and if we have G being equal to H
17:01 - we should see G is equal to H and we see
17:04 - that and if G is greater than H we
17:08 - should see this line being printed and
17:11 - we do okay let's now create a simple BMI
17:14 - calculator BMI is basically a number
17:17 - that can tell if a person is overweight
17:20 - or not depending on their height and
17:22 - weight so let's say hypothetically
17:24 - speaking we have a person named YK and
17:28 - his height in meters again
17:31 - hypothetically speaking is 2 meters and
17:34 - his weight in kilograms is 90 now if you
17:40 - only know someone's height in feet and
17:43 - inches and weight in pounds just use an
17:45 - online calculator to convert it so you
17:48 - can just search for
17:49 - feet and inches to meters and you should
17:54 - be able to find a good online calculator
17:56 - for that okay now the formula for
17:59 - finding the BMI is the person's weight
18:03 - in kilograms divided by this person's
18:07 - height in meters squared and to express
18:11 - height in meters squared you could
18:13 - either write height m times height M or
18:17 - you can write height m double star two
18:21 - and this double star just means to the
18:24 - power off and let's print this person's
18:27 - BMI here with print double quotes
18:29 - BMI and then BMI so this person would be
18:35 - not overweight if this person's BMI is
18:38 - less than 25 so in that case if BMI less
18:42 - than 25 let's print this person's name
18:46 - is not overweight and else if BMI is
18:52 - greater than or equal to 25 we're going
18:56 - to print this person is overweight let's
19:00 - see if YK is overweight here okay he's
19:04 - not but what if he had 110 kilograms of
19:08 - weight then his BMI would be twenty
19:11 - seven point five and YK would be
19:14 - overweight okay if you'd like to support
19:16 - me so I can keep making videos like this
19:18 - full-time just go to CS dojo io / PT to
19:22 - find my patreon page and if you want to
19:25 - make sure that you don't miss my future
19:27 - videos like this one just go to CS dojo
19:30 - dot io / news to sign up to my
19:32 - newsletter and if you want to download
19:34 - some sample files from this video go to
19:37 - CS dojo da yo / Python - I'm YK from CS
19:41 - dojo and I will see you in the next
19:43 - video

Cleaned transcript:

hey CS dojo its YK here welcome to video number two of my Python tutorial for absolute beginners in this video first of all I'm gonna answer a question I received on my last video and then I'm gonna give you some additional commands you can use interpreter notebook for example for adding and deleting cells and remember that you don't necessarily have to use to put a notebook to follow this course you can use for example part charm which is a popular IDE for python after that I'm gonna cover ifelse statements how to use them and what they are and by the end of this video you'll be able to create a simple BMI calculator which can tell if a person is overweight or not given the person's height and weight I'm gonna put an outline of this video below so you don't have to watch the whole thing if you don't want to and you can go to CS dojo io / Python to download the sample files I create in this video alright first of all let me answer a question I received on my last video domani Ostrom sorry for the pronunciation says currently I'm learning web double mint what do you think about it should I keep going or start another language like Python so I wanted to answer this particular question because I thought some other people might have the same question maybe you started learning C++ or Java already and you're wondering should I keep going with it or should I take this course for Python instead I would say keep going with whatever you're doing as long as you enjoy and then if you want you can take this course at the same time because some of the concepts I'll teach are going to be the same regardless of which language you're using so for example the method for swapping two variables I talked about in the last video you can use that in C++ or Java or in any other language you're learning okay with that out of the way let's now talk about Geppetto notebook first of all launch Jupiter notebook through anaconda navigator or with any other method you'd like to use and then navigate to desktop and let's create a new folder here I'm gonna call this python tutorial to navigate to that folder within desktop and click new at the top right corner click Python 3 and let's call this file ifelse statements click rename and then I'm just gonna maximize my browser window so the only command we learned in the last video was this button right here for running or executing yourself once I click it it executes or runs all the commands within the given cell this green box right here so if we have hello one here and then hello to here and the print function will execute both of these lines and you might have noticed that after running this cell it automatically adds a new cell below it and what if we wanted to delete the cell for that you can use this button that looks like scissors and for adding cells you can use this button right next to it that looks like a plus button and you can add as many cells as you want and one interesting thing here is that you can execute these cells in any order you like so let's say you have print a in this cell and a equals 1 in this cell you might say well if we try to execute this cell it will give us an error let me actually try it again because a is not defined yet so it'll give us an error saying name error name a is not defined but before executing this cell print a if we execute this cell right below it to define a to be 1 it won't give us an error anymore ok let me now delete a bunch of cells here with this scissors button and let's add one cell below the first cell and let's say we have B equals to here and let's run it with the Run button right here and of course this way B is defined to be 2 now what happens if we delete the cell with this one right here and if we try to print be right here with print parentheses B what happens is actually we can still print it because even though the cell containing this statement B equals 2 is deleted the state of this Jubran notebook is actually still preserved so when I say the state of this Jupiter notebook what I mean is pretty much all the variables that are stored in this Jupiter notebook and the state of this Jupiter notebook is not stored on this browser window because like I say in the last video this browser window is just a user interface for the Jupiter notebook the state of distributor notebook is stored in something called the kernel of this Jupiter notebook that's basically represented by this commandline interface this might look slightly different if you're using Windows and the kernel is what execute your code once you click the Run button and it also stores all the variables that you've defined so to clear out the state of this Jupiter notebook or to clear out all the variables you have defined you need to click colonel at the top and then click restart actually I like to use the command below restart and clear output because it restarts the kernel and clears out everything that's been printed so this kernel has been restarted now and if we try to print B now it will give us an error because name a is not defined yet also remember that there is one kernel for each notebook file so if we had another notebook file and if we restart the kernel for this notebook file that won't affect the other notebook at all because that notebook will have a separate kernel okay so just to recap we've learned how to use for commands in Tibetan notebook the first is running a cell and then deleting cells adding cells as well as restarting the kernel and clearing the output okay let's now delete all the cells we have here and restart the kernel and clear the output and let's dive into our main topic today ifelse statements let me give you a quick example here a is equal to 1 and B is equal to 2 and what if we wanted to show a message that something like a is less than B by printing this string only if is actually less than B we can do this with if a less than B Colin so that's if space a space less than space B Colin enter into a new line and print a is less than B and you need to indent this new line by four spaces so that's one two three four you could actually use a different number of spaces for example three spaces or five spaces but using four spaces is a convention in Python so let's stick with four spaces in this video so these two lines if a less than B print a is less than B this whole thing is called an if clause and after this if clause you could have more code for example print not sure if a is less than B and so this if condition only applies to this line in this example and Python knows that because of the colon sign here as well as the four spaces that we have before this print mine so let's try running the cell because a is currently us than B we should be able to print a is less than B and we do and let's see what happens if a is three in that case a is not less than B so this cell should only print this line right here not sure if a is less than B and that's indeed the case and it's actually possible to have multiple lines within the if clause so instead of just having print a is less than B we're gonna write print double quotes a is definitely less than B and in this statement Python knows that these two lines are part of the if clause because both of these lines have four spaces in front of them so let's see if that works by changing a to one again and since a is less than B we should be able to print these two lines again so we see that a is less than B and a is definitely less than B so in a different language you might see an if clause with parentheses and with curly brackets but in Python we're using a column as well as four spaces in front of each line you need to be really careful about the number of spaces in front of each line because if we had for example four spaces in front of the first line and five spaces in front of the second line it will give us an error so the error says indentation error unexpected indent let's fix that by deleting one space here and now we have four spaces in front of each line so it's gonna work again okay let's take a look at a few more examples here the first one is this C is equal to three and D is equal to four if we write C less than D four spaces print double quotes C is less than D and let's add something outside this if block by writing print outside the if block and once we write this will print this line C is less than D only when C is less than D what if we wanted to add a new line here that says C is not less than D and what if we wanted to print it only if C is not less than D we can do that by writing else right after the if clause and note that there's no spaces before this else line and insert four spaces before this line to show that this line is part of the else Clause we could also have multiple lines within the else clause and write print double quotes I don't think C is less than D so this whole block says if C is less than D then print C is less than D and if that's not the case or else print these two lines instead so currently C is definitely less than D so we should see this line printed C is less than D and this line outside the if block and we see that C is less than D outside the if block and once we change the value of C to five so that C is not less than D we should be able to see these two lines instead and we do see it's not less on T and I don't think C is less than D take a look at another example here E is equal to 7 and F is equal to 8 so we're gonna write pretty much the same thing after that so if E is less than F then print is less than F and else print is not less than F so here what if we wanted to deal with three cases instead of only two cases for example what if we wanted to deal with the case where is less than F and is equal to F and is greater than F separately so those three cases we can do that with all F which stands for else if so write L if e double e cosine F newline print parenthesis double quotes is equal to F and let's change what's in the else Clause to e is greater than F so this block now says if E is less than F then print is less than F and if that's not the case check the next condition e is equal to F and not here that we're using the double e cosine instead of a single a cosine so the difference is that when we use the single a cosine for example right here we're assigning what's on the righthand side to the lefthand side so in Python and in many other languages the single a cosine is an assignment operator now if you want to check if e is equal to F similar to the way we can check if a is less than F we need to use the double e cosine so if you're not sure about which one to use just remember that in this line we're not assigning F to e we're evaluating is that if E is equal to F so this whole block says if E is less than F print this line and if that's not the case check the next condition if E is equal to F then print this line right here print E is equal to F and if none of these conditions are true so it's not true that E is less than F and E is equal to F then else print is greater than F because that's the only possibility that's left here now let's just make sure this whole block works currently E is less than F so we see is less than F and what if is equal to F so E and F are both equal to 8 then we see is equal to F right here and what if E is greater than F so is 10 and F is 8 we see a is greater than F right here and actually after the if Clause we could have multiple L if clauses so after the first L if we can write well if let's say e greater than F plus 10 so this just means e is greater than EF by more than 10 so right now he is not greater than F by more than 10 we should still see he is greater than 10 once we run this cell and we do and once we change e to for example 20 we'll see he is greater than F by more than 10 so there's actually another way to deal with 3 or more separate cases without using the LF clauses so to show you let's define new variables here H and G 7 and 8 so we're gonna write if G is less than H print G is less than H and so far it's the same but after this we're gonna write else instead of LF and within this else clause we can create a new if clause and say if G is equal to the EE cosine print G is equal to H and after that else colon print G is greater than H so let's see how this block works first we are checking if G is less than H and if that's the case we print G is less than H and if that's not the case we'll go to the else clause and there are four lines in the else clause and if you look at this line the if clause there are four spaces in front of it and if you look at this print line that says G is equal to H that's within the if clause within the else clause so there are four spaces here and then there are four additional spaces here before the print line so there are eight spaces total here and similarly for else there are four spaces here because this else Clause is within this else clause and then there are eight spaces before the print line here because there are already four spaces before the else clause and then there are four spaces after that to show that this print line is within this else clause okay let's make sure this works right now G is less than H so we should see G is less than H we do and if we have G being equal to H we should see G is equal to H and we see that and if G is greater than H we should see this line being printed and we do okay let's now create a simple BMI calculator BMI is basically a number that can tell if a person is overweight or not depending on their height and weight so let's say hypothetically speaking we have a person named YK and his height in meters again hypothetically speaking is 2 meters and his weight in kilograms is 90 now if you only know someone's height in feet and inches and weight in pounds just use an online calculator to convert it so you can just search for feet and inches to meters and you should be able to find a good online calculator for that okay now the formula for finding the BMI is the person's weight in kilograms divided by this person's height in meters squared and to express height in meters squared you could either write height m times height M or you can write height m double star two and this double star just means to the power off and let's print this person's BMI here with print double quotes BMI and then BMI so this person would be not overweight if this person's BMI is less than 25 so in that case if BMI less than 25 let's print this person's name is not overweight and else if BMI is greater than or equal to 25 we're going to print this person is overweight let's see if YK is overweight here okay he's not but what if he had 110 kilograms of weight then his BMI would be twenty seven point five and YK would be overweight okay if you'd like to support me so I can keep making videos like this fulltime just go to CS dojo io / PT to find my patreon page and if you want to make sure that you don't miss my future videos like this one just go to CS dojo dot io / news to sign up to my newsletter and if you want to download some sample files from this video go to CS dojo da yo / Python I'm YK from CS dojo and I will see you in the next video
