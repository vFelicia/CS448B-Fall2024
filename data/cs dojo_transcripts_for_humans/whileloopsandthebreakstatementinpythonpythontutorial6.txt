With timestamps:

00:00 - so in the last video we saw how to use
00:02 - for loops but for loops are not the only
00:05 - way to use loops in Python the other
00:08 - common way of using them is called while
00:11 - loops so let's see what it looks like
00:13 - first of all let's recap one of the
00:15 - things we did in the last video we had
00:18 - total being equal to 0 and then we had
00:21 - for I in range 1 comma 5 :
00:25 - 4 spaces total plus equals I and then
00:28 - print total what this block did was he
00:32 - added up all the numbers through all the
00:34 - integers through 1 through 5 not
00:37 - including 5 to total and then we printed
00:41 - that number and that number is 10
00:44 - because 1 plus 2 Plus 3 plus 4 is 10 so
00:47 - can we do the same thing with a while
00:49 - loop the answer is yes let's see what
00:51 - that looks like
00:52 - let's first initialize a new variable
00:54 - called total 2 to be 0 and then we're
00:58 - gonna write wow J is less than 5 do the
01:02 - following and actually the while loop
01:04 - doesn't initialize the index for us day
01:08 - for us so we'll need to initialize it
01:10 - explicitly ourselves so we're gonna
01:13 - write J equals 1 before we go into the
01:16 - while loop and then while J is less than
01:18 - 5 do the following which is 4 spaces of
01:22 - course total 2 plus equals J and J to
01:26 - the total 2 variable and then J plus
01:29 - equals 1 so add 1 to J and then after
01:33 - the while loop we're going to print
01:35 - total 2 so what this block says is when
01:40 - we get to the while loop check if J is
01:43 - less than 5 and since it's true I mean 1
01:46 - is of course less than 5 do the
01:49 - following total 2 plus equals J ad J to
01:53 - total and they add 1 to J so J will
01:56 - become 2 and at that point we'll go back
01:59 - to the beginning of the loop again and
02:01 - we're gonna check if J is less than 5
02:03 - still and of course 2 is less than 5 so
02:07 - we'll go through that again
02:08 - and once J is for we'll say add 1
02:13 - today and day will become 5 and when we
02:17 - go back here we'll stop the loop right
02:20 - here and it will break out of it because
02:22 - J is no longer less than 5 and then
02:25 - we'll print total 2 so this block pretty
02:28 - much does exactly the same thing as what
02:31 - the previous block does so let's see if
02:33 - it works and it does we print it 10
02:36 - which is the sum of 1 2 3 & 4 so why
02:40 - would we want to use while loops instead
02:42 - of 4 loops
02:43 - well it depends on the situation but one
02:45 - situation where it's useful is when you
02:49 - don't know how many loops you need
02:50 - beforehand so I'm gonna give you an
02:53 - example of that let's say you're given
02:55 - this lists given on the score list which
02:58 - is 5 4 4 3 1 minus 2 minus 3 and minus 5
03:03 - and let's say you don't necessarily know
03:06 - the contents of this list beforehand but
03:10 - you know that this list is sorted in a
03:13 - descending order so that means the
03:15 - largest number comes first in this list
03:18 - and when you go right you know that the
03:22 - numbers always go down or stay the same
03:24 - so 4 is less than 5 and 4 is less than
03:28 - or equal to 4 and so on and let's say
03:31 - you want to find the sum of only the
03:33 - positive numbers in this list how can we
03:36 - do that well what we want to do is we
03:38 - want to run some kind of loops so that
03:41 - we can iterate over elements but only
03:44 - the positive months so that way we don't
03:47 - know how many loops we need to find the
03:50 - sum of only the positive numbers in a
03:53 - situation like this for loops can be
03:55 - really useful so let's see what that
03:57 - looks like by first defining total 3 to
04:01 - 0 and then the index I to 0 as well and
04:06 - then we're gonna write a while loop here
04:08 - with while
04:10 - given underscore list square brackets I
04:13 - is greater than 0 total 3 plus equals
04:19 - given lists square brackets I and then I
04:24 - plus equals 1
04:26 - so what we are saying here is first
04:29 - check the current element in given lists
04:32 - so since I will start at zero the first
04:36 - current element of given lists will be
04:39 - the first element which is five
04:41 - while this element is greater than zero
04:44 - do the following first add the current
04:47 - element giving list square brackets I to
04:50 - total I mean total of three and then
04:52 - increment I by one so that means just go
04:56 - to the next item if we're examining this
04:59 - current item here I would be zero so we
05:03 - are saying let's go to the next item
05:04 - which is index one so when I is equal to
05:09 - one given less square brackets one would
05:12 - be the second item right here for and
05:14 - that's greater than zero so we're gonna
05:17 - add that to total three and then we're
05:19 - going to go to the next item and we're
05:22 - gonna keep doing that until we are right
05:24 - here whose index is zero one two three
05:27 - four five and at that point given list
05:32 - square brackets five would be negative
05:35 - two which is not greater than zero so
05:38 - we'll break out of the while loop after
05:40 - that we can print total three and see if
05:44 - we get the correct answer and the
05:46 - correct answer is the sum of all of
05:48 - these numbers five plus four plus four
05:50 - plus three plus one which is nine
05:53 - thirteen sixteen seventeen so let's see
05:56 - if we can get that we did so this little
06:00 - method works but only if the given list
06:03 - contains at least one non positive
06:06 - number so what would happen if this
06:09 - given list only had positive numbers for
06:12 - example 5 4 4 3 & 1 let's see what
06:15 - happens by running the cell oops it
06:18 - actually gave us an error called index
06:21 - error and it says index or list index
06:24 - out of range and it actually makes sense
06:26 - because when I is equal to 0 1 2 3 4 we
06:32 - go through this list because given less
06:34 - square brackets 4 which is 1 is greater
06:36 - than 0 and then we go to this point I
06:38 - plus equals 1
06:40 - and I will be 5 and they will check here
06:45 - is given list scrub scrub a gets five
06:49 - great er than zero but when we ask
06:52 - Python what's at index five of given
06:57 - lists it's gonna give us an error
06:59 - because nothing exists at index five so
07:03 - we'll need to fix it by adding an
07:04 - additional condition to the while loop
07:06 - by saying while I is less than five and
07:12 - given less square brackets is greater
07:15 - than zero and actually instead of saying
07:18 - five explicitly we could also say Len of
07:22 - given lists which means the length of
07:24 - given list and note here that length is
07:27 - another predefined function in Python
07:30 - and then once we run this cell this
07:33 - should work now oops I didn't spell it
07:36 - correctly given lists so I'm gonna write
07:38 - given list again and then let's run this
07:41 - cell and it works now okay now let's
07:45 - create a new list given list two which
07:49 - has both positive numbers and negative
07:52 - numbers and you might ask given this
07:56 - list can we add up all the positive
07:58 - numbers using a full loop instead of a
08:01 - while loop the answer is yes we can
08:04 - let's see how that works so we're going
08:07 - to define total four to be zero
08:09 - and then we're gonna write for element
08:11 - and given lists to colon total four plus
08:16 - equals element and then print element so
08:21 - currently of course what this block does
08:23 - is this is going to add up all the
08:26 - elements in given lists to to total four
08:30 - so that will include both positive
08:32 - numbers and negative numbers what if we
08:36 - wanted to break out of the loop as soon
08:38 - as we see a negative number we can do
08:41 - that with the break statement so we're
08:44 - gonna write here if the current element
08:48 - is less than or equal to zero column
08:51 - then break out of this
08:54 - Loup so how this works is this is gonna
08:57 - add up the elements up to right here one
09:01 - and one is not less than or equal to
09:04 - zero so we're not gonna break and we're
09:06 - gonna add it one to total four and after
09:09 - that element will become minus two and
09:12 - at that point element is of course less
09:16 - than or equal to zero so we'll break out
09:18 - of the for loop so that way we won't
09:20 - check any elements after that and we're
09:23 - not gonna add any of the negative
09:26 - numbers to total 4 so with this method
09:29 - element should we should print total 4
09:33 - instead and once we print total 4 we
09:35 - should see 17 which is the sum of all
09:38 - the positive numbers of course and we
09:41 - see exactly that and actually this break
09:43 - statement works in while loops exactly
09:47 - the same way so let's see how that works
09:49 - by solving the same problem with the
09:52 - same list given list - we're gonna first
09:55 - define total 5 to 0 and then we're going
09:59 - to write a while loop saying well
10:02 - something and this something will be a
10:04 - statement that's always true so it could
10:08 - be something like while 1 is less than 2
10:12 - it's kind of silly but this statement is
10:14 - always true right because 1 is always
10:17 - less than 2 and then once we meet a
10:20 - certain condition we'll break out of the
10:22 - while loop with the break statement and
10:24 - actually instead of writing this silly
10:26 - statement 1 less than 2 you can just
10:29 - write true because true is always true
10:32 - and note that true here has the T
10:36 - capitalized so we're gonna write while
10:39 - true and then before this while loop
10:42 - we're going to define I to be 0 this is
10:45 - going to be the index that we're going
10:47 - to use and in this while loop we're
10:49 - gonna write total 5 plus equals given
10:52 - list square brackets I so that says add
10:56 - the current element and this should be
10:59 - given list to add the current element in
11:02 - given list to to total 5 and then
11:05 - increment I
11:07 - by i + equals 1 and if the next item if
11:14 - given less square brackets i is less
11:17 - than or equal to 0 then break out of
11:22 - this loop and here I'm just assuming
11:25 - that this given list has at least one
11:28 - non positive number so what's gonna
11:31 - happen with this block is I will be 0 1
11:35 - 2 3 4 and as soon as is 4
11:40 - we're gonna add given less square
11:42 - brackets 4 which is 1 2 total 5 and then
11:46 - I will be 5 after this line and because
11:50 - given less square brackets 5 is minus 2
11:52 - that's of course less than or equal to 0
11:55 - we're gonna break out of this while loop
11:57 - and after that we're gonna print total 5
12:01 - and that should give us 17 if we didn't
12:06 - make any mistake actually I made a
12:09 - mistake here giving list this should be
12:11 - given list 2 because we're just looking
12:13 - at giving lists 2 and this should fix
12:17 - everything and it did we get 17 and
12:20 - here's a little problem to practice what
12:22 - you learn in this video let's say you're
12:25 - given this lists given list 3 and you
12:28 - don't necessarily know the contents of
12:30 - this list beforehand but you know that
12:33 - the elements in this list are sorted in
12:36 - the descending order so of course that
12:39 - means when you go write the numbers
12:42 - always go down or stay the same can you
12:45 - find the sum of all the negative numbers
12:48 - instead of all the positive numbers I
12:51 - would use a while loop here but there is
12:54 - a way to do it with a for loop as well
12:56 - okay and as usual if you want to
12:59 - download the file I created through this
13:01 - video just go to CH dojo dot io / Python
13:05 - 6 and make sure to follow CH dojo on
13:09 - Facebook if you haven't yet because this
13:12 - is where I announce my live streams and
13:14 - stuff ok I will see you guys in the next
13:17 - video

Cleaned transcript:

so in the last video we saw how to use for loops but for loops are not the only way to use loops in Python the other common way of using them is called while loops so let's see what it looks like first of all let's recap one of the things we did in the last video we had total being equal to 0 and then we had for I in range 1 comma 5 4 spaces total plus equals I and then print total what this block did was he added up all the numbers through all the integers through 1 through 5 not including 5 to total and then we printed that number and that number is 10 because 1 plus 2 Plus 3 plus 4 is 10 so can we do the same thing with a while loop the answer is yes let's see what that looks like let's first initialize a new variable called total 2 to be 0 and then we're gonna write wow J is less than 5 do the following and actually the while loop doesn't initialize the index for us day for us so we'll need to initialize it explicitly ourselves so we're gonna write J equals 1 before we go into the while loop and then while J is less than 5 do the following which is 4 spaces of course total 2 plus equals J and J to the total 2 variable and then J plus equals 1 so add 1 to J and then after the while loop we're going to print total 2 so what this block says is when we get to the while loop check if J is less than 5 and since it's true I mean 1 is of course less than 5 do the following total 2 plus equals J ad J to total and they add 1 to J so J will become 2 and at that point we'll go back to the beginning of the loop again and we're gonna check if J is less than 5 still and of course 2 is less than 5 so we'll go through that again and once J is for we'll say add 1 today and day will become 5 and when we go back here we'll stop the loop right here and it will break out of it because J is no longer less than 5 and then we'll print total 2 so this block pretty much does exactly the same thing as what the previous block does so let's see if it works and it does we print it 10 which is the sum of 1 2 3 & 4 so why would we want to use while loops instead of 4 loops well it depends on the situation but one situation where it's useful is when you don't know how many loops you need beforehand so I'm gonna give you an example of that let's say you're given this lists given on the score list which is 5 4 4 3 1 minus 2 minus 3 and minus 5 and let's say you don't necessarily know the contents of this list beforehand but you know that this list is sorted in a descending order so that means the largest number comes first in this list and when you go right you know that the numbers always go down or stay the same so 4 is less than 5 and 4 is less than or equal to 4 and so on and let's say you want to find the sum of only the positive numbers in this list how can we do that well what we want to do is we want to run some kind of loops so that we can iterate over elements but only the positive months so that way we don't know how many loops we need to find the sum of only the positive numbers in a situation like this for loops can be really useful so let's see what that looks like by first defining total 3 to 0 and then the index I to 0 as well and then we're gonna write a while loop here with while given underscore list square brackets I is greater than 0 total 3 plus equals given lists square brackets I and then I plus equals 1 so what we are saying here is first check the current element in given lists so since I will start at zero the first current element of given lists will be the first element which is five while this element is greater than zero do the following first add the current element giving list square brackets I to total I mean total of three and then increment I by one so that means just go to the next item if we're examining this current item here I would be zero so we are saying let's go to the next item which is index one so when I is equal to one given less square brackets one would be the second item right here for and that's greater than zero so we're gonna add that to total three and then we're going to go to the next item and we're gonna keep doing that until we are right here whose index is zero one two three four five and at that point given list square brackets five would be negative two which is not greater than zero so we'll break out of the while loop after that we can print total three and see if we get the correct answer and the correct answer is the sum of all of these numbers five plus four plus four plus three plus one which is nine thirteen sixteen seventeen so let's see if we can get that we did so this little method works but only if the given list contains at least one non positive number so what would happen if this given list only had positive numbers for example 5 4 4 3 & 1 let's see what happens by running the cell oops it actually gave us an error called index error and it says index or list index out of range and it actually makes sense because when I is equal to 0 1 2 3 4 we go through this list because given less square brackets 4 which is 1 is greater than 0 and then we go to this point I plus equals 1 and I will be 5 and they will check here is given list scrub scrub a gets five great er than zero but when we ask Python what's at index five of given lists it's gonna give us an error because nothing exists at index five so we'll need to fix it by adding an additional condition to the while loop by saying while I is less than five and given less square brackets is greater than zero and actually instead of saying five explicitly we could also say Len of given lists which means the length of given list and note here that length is another predefined function in Python and then once we run this cell this should work now oops I didn't spell it correctly given lists so I'm gonna write given list again and then let's run this cell and it works now okay now let's create a new list given list two which has both positive numbers and negative numbers and you might ask given this list can we add up all the positive numbers using a full loop instead of a while loop the answer is yes we can let's see how that works so we're going to define total four to be zero and then we're gonna write for element and given lists to colon total four plus equals element and then print element so currently of course what this block does is this is going to add up all the elements in given lists to to total four so that will include both positive numbers and negative numbers what if we wanted to break out of the loop as soon as we see a negative number we can do that with the break statement so we're gonna write here if the current element is less than or equal to zero column then break out of this Loup so how this works is this is gonna add up the elements up to right here one and one is not less than or equal to zero so we're not gonna break and we're gonna add it one to total four and after that element will become minus two and at that point element is of course less than or equal to zero so we'll break out of the for loop so that way we won't check any elements after that and we're not gonna add any of the negative numbers to total 4 so with this method element should we should print total 4 instead and once we print total 4 we should see 17 which is the sum of all the positive numbers of course and we see exactly that and actually this break statement works in while loops exactly the same way so let's see how that works by solving the same problem with the same list given list we're gonna first define total 5 to 0 and then we're going to write a while loop saying well something and this something will be a statement that's always true so it could be something like while 1 is less than 2 it's kind of silly but this statement is always true right because 1 is always less than 2 and then once we meet a certain condition we'll break out of the while loop with the break statement and actually instead of writing this silly statement 1 less than 2 you can just write true because true is always true and note that true here has the T capitalized so we're gonna write while true and then before this while loop we're going to define I to be 0 this is going to be the index that we're going to use and in this while loop we're gonna write total 5 plus equals given list square brackets I so that says add the current element and this should be given list to add the current element in given list to to total 5 and then increment I by i + equals 1 and if the next item if given less square brackets i is less than or equal to 0 then break out of this loop and here I'm just assuming that this given list has at least one non positive number so what's gonna happen with this block is I will be 0 1 2 3 4 and as soon as is 4 we're gonna add given less square brackets 4 which is 1 2 total 5 and then I will be 5 after this line and because given less square brackets 5 is minus 2 that's of course less than or equal to 0 we're gonna break out of this while loop and after that we're gonna print total 5 and that should give us 17 if we didn't make any mistake actually I made a mistake here giving list this should be given list 2 because we're just looking at giving lists 2 and this should fix everything and it did we get 17 and here's a little problem to practice what you learn in this video let's say you're given this lists given list 3 and you don't necessarily know the contents of this list beforehand but you know that the elements in this list are sorted in the descending order so of course that means when you go write the numbers always go down or stay the same can you find the sum of all the negative numbers instead of all the positive numbers I would use a while loop here but there is a way to do it with a for loop as well okay and as usual if you want to download the file I created through this video just go to CH dojo dot io / Python 6 and make sure to follow CH dojo on Facebook if you haven't yet because this is where I announce my live streams and stuff ok I will see you guys in the next video
