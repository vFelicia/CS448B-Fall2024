00:01 - [Music]
00:07 - hello welcome to lesson six of how to
00:09 - make iPhone apps with no programming
00:11 - experience in this lesson I'm going to
00:13 - show you how to use Auto layout it's
00:15 - really important because it's the system
00:18 - that describes how we're going to lay
00:19 - out the elements in our user interface
00:22 - how they're positioned and how they're
00:23 - sized and the way that you're going to
00:25 - be learning about Auto layout is by
00:27 - building the user interface of this app
00:29 - we have here and this is a simple card
00:32 - game called War let me run this project
00:34 - and show you guys how it
00:37 - works now if you don't know the rules of
00:39 - this card game it's very simple there's
00:42 - two sides we randomize the cards that
00:45 - are dealt to the player and the computer
00:48 - and whoever has the higher card gets a
00:50 - point now Ace is the highest and two is
00:53 - the lowest so every time I click the
00:56 - deal button it randomly assigns a card
00:58 - to the player and one to the C CPU and
01:01 - whoever has the larger card gets a point
01:03 - which is kept track of down
01:08 - here by the end of this module you'll
01:11 - have built this app
01:12 - yourself now before we jump into a brand
01:15 - new xcode project to build this
01:17 - beautiful interface let me tell you a
01:20 - little bit about Auto layout and how
01:22 - that system works in the old days we
01:25 - used to specify the positions of these
01:27 - elements on The View using an XY
01:29 - y-coordinate system furthermore we would
01:32 - specify the height and the width of the
01:35 - element well as Apple created different
01:38 - screen sizes uh and created the iPad as
01:42 - well and then we had a universal app
01:44 - that could be run on both iPad and
01:46 - iPhone the need arose for a different
01:49 - way to describe positioning and sizing
01:51 - because using that coordinate system and
01:54 - those hard-coded Heights and widths it
01:56 - wouldn't be able to adapt to the big
01:59 - Bigg ger screen size it wouldn't be able
02:01 - to take advantage of all of that extra
02:03 - area so now what we have is the auto
02:06 - layout system which is basically you
02:08 - specify a bunch of rules which are
02:11 - called constraints and then the system
02:14 - adapts the layout within your set of
02:16 - rules to accommodate whatever screen
02:18 - size so for example you can set things
02:21 - like which elements should have the
02:23 - priority to grow to take up any extra
02:25 - space or which elements should have the
02:28 - priority to shrink if there is too
02:30 - little screen real estate you can
02:33 - specify rules that relate elements to
02:35 - other elements such as this button
02:38 - should be 20 points below that image or
02:42 - this label should be 20 points from the
02:44 - left of the screen or 20 points left of
02:47 - another element so instead of specifying
02:50 - all of these hardcoded values you're
02:52 - specifying these constraints that
02:54 - describe the layout and the sizing
02:57 - relative to the other elements on on the
03:00 - screen if the user is on an iPad or an
03:03 - iPhone 6 Plus that has a lot of screen
03:05 - space your elements are going to try to
03:09 - accommodate and fill that screen real
03:11 - estate based on the rules that you have
03:13 - specified and likewise if you have a
03:15 - smaller screen let's say an iPhone 4S
03:18 - you can specify some rules to hide
03:20 - certain elements that might not be
03:22 - needed on a smaller screen size or you
03:24 - can have rules that arrange elements in
03:26 - a different orientation so Auto layout
03:29 - is very powerful but at the same time uh
03:31 - it's a source of frustration for
03:33 - beginners because when you're specifying
03:35 - the rules there are times where you can
03:37 - specify two conflicting rules and your
03:40 - layout won't behave or it won't look
03:42 - like what you intended it to until you
03:44 - figure out which two rules are
03:46 - conflicting because the system cannot
03:48 - satisfy both of the rules that you've
03:51 - specified now another thing I mentioned
03:54 - is that you can specify very specific
03:57 - rules for different configurations so I
04:00 - mentioned that for a smaller screen size
04:02 - you might want to hide some elements the
04:04 - problem that Apple recognized is that
04:06 - there are so many different
04:08 - configurations that are possible you
04:10 - know you've got the iPhone 4S as the
04:13 - smallest device all the way up to iPad
04:15 - Pro and furthermore you have landscape
04:18 - and portrait orientations and for the
04:20 - iPad Pro you have split views and stuff
04:23 - like that so it becomes very difficult
04:26 - and very tedious to specify rules for
04:29 - all of those different configurations so
04:31 - what Apple has done is that they've
04:33 - taken all of those different
04:35 - configurations and boiled it down to a
04:37 - couple of size classes now you can think
04:40 - of them as categories of screen sizes
04:43 - now these size classes are defined in
04:46 - terms of height and width the height can
04:49 - be compact or it can be regular or it
04:51 - can be any as in you don't care about
04:54 - what the height is and for width same
04:56 - thing you can have compact width you can
04:58 - have regular width or you can have any
05:00 - width so that gives you a handful of
05:03 - screen sizes or size classes that you
05:06 - can adapt your layout for so that's a
05:09 - highlevel overview of Auto layout and
05:11 - size classes now we're going to jump
05:14 - into xcode and we're going to build out
05:16 - this user interface for our war app the
05:18 - more you're going to work with uh
05:20 - constraints Auto layout and size classes
05:23 - the more you're going to get used to it
05:25 - and unfortunately that's just going to
05:27 - take practice in this War app we're not
05:29 - going to go too crazy with size classes
05:32 - we're going to stick with the portrait
05:34 - that's the uh vertical orientation we're
05:37 - going to stick with that portrait
05:38 - orientation but we're going to use Auto
05:40 - layout constraints to make sure that our
05:43 - layout fits on uh the I the biggest
05:46 - iPhone down to the smallest iPhone
05:48 - screen
05:50 - size so I'm going to pop open xcode here
05:53 - and once again don't worry that I'm
05:55 - using the beta version of xcode 8 by the
05:58 - time these videos are released you
06:00 - should be able to download xcode 8 in
06:02 - the Mac App Store and the reason why I'm
06:05 - using the beta and recording on the beta
06:07 - right now is just so I want to be ahead
06:09 - of the game and show you guys how to use
06:11 - the latest
06:12 - tools I'm going to go up to file new and
06:18 - project and just make sure that you're
06:20 - selecting iOS up here and we're going to
06:24 - start with a single View
06:25 - application click next and I'm going to
06:29 - name the this the war card game I'm just
06:32 - going to call it War actually don't
06:34 - worry if you don't have anything under
06:35 - team that's perfectly fine and for
06:38 - organization name you can just put your
06:40 - own name and for organization identifier
06:43 - just put com do your name or your
06:45 - company name and make sure you're
06:48 - selecting Swift okay don't select
06:50 - Objective C or else you're going to be
06:52 - doing something completely different
06:54 - from what I'm doing uh devices we're
06:56 - going to start with iPhone and I'm
06:58 - leaving all of this stuff underneath
07:01 - unchecked click next I'm just going to
07:04 - save it on my desktop I'm not going to
07:06 - create a git repository I have that
07:09 - unchecked create and just like that I
07:12 - have my brand new single View
07:15 - application now the first thing we're
07:17 - going to do is jump into the image asset
07:20 - catalog here this is my asset library or
07:24 - catalog for this app and I actually have
07:27 - a bunch of images that I'm going to drag
07:29 - and drop into my asset library now you
07:33 - can download the same images I'm using
07:35 - either by clicking the link on the
07:37 - screen right now or the link will be in
07:40 - the description as well so you can use
07:42 - that okay so when you grab those images
07:45 - you should have all of these I'm just
07:48 - going to press command a to select all
07:50 - of them and I'm going to drag them into
07:52 - the asset Library like this now you
07:56 - might notice that each image like like
07:59 - for example this one says card 2 I have
08:02 - three images that are card 2 one at 2X
08:05 - and one at 3x and that's because there
08:07 - are different screen resolutions so by
08:10 - providing your image Assets in this
08:12 - format where the image name is the same
08:15 - and you just add the at 2X or at 3x
08:18 - suffix to the image name the system will
08:21 - automatically use the appropriate image
08:24 - size for the screen resolution that the
08:26 - user's devic is okay so going back to
08:29 - the asset Library you can see that it
08:31 - has automatically grouped all of those
08:33 - 1X 2x 3 X's together and here are the
08:37 - image asset names which I'll be using
08:40 - inside the app so if I wanted to grab
08:43 - this image I would be taking note of
08:46 - this asset name card 8 same thing with
08:49 - Jack or deal button okay you get the
08:53 - idea so what we're going to do first is
08:56 - ADD our background to the view let's
09:00 - jump into our main. storyboard and in
09:04 - here you can see this left hand side
09:07 - it's going to be very important it's
09:08 - called the document outline and if you
09:11 - don't have this it's basically a toggle
09:13 - button down here that you can click to
09:16 - pull it out now expanding all of these
09:19 - nodes gives you your view here and
09:22 - anything we add into this view is going
09:25 - to be what the user sees and it's going
09:27 - to be shown here in this tree view so
09:30 - this is a good way to navigate all of
09:32 - the elements in your view now down here
09:35 - in the lower right hand corner I've
09:37 - actually got image view already uh
09:40 - filtered for but let me just get rid of
09:42 - that this is probably what you're going
09:43 - to see in the lower right hand corner if
09:46 - you don't make sure you're looking at
09:47 - this tab which is called the object
09:50 - library and you see these guys right
09:51 - here in this text box down here just
09:55 - type in image View and you're going to
09:57 - get this image view element that we can
09:59 - add to our view this is how we're going
10:01 - to display an image now just click and
10:04 - drag it over and put it into your view
10:07 - now you can see in the document outline
10:09 - that this image view is contained within
10:12 - your view here now if you select the
10:15 - image view just click on it on the right
10:17 - hand side you're going to see the
10:19 - attributes inspector there's a bunch of
10:21 - tabs up here you want to make sure
10:23 - you're looking at this one called the
10:25 - attribute inspector and one of the
10:27 - properties that you can set is called
10:29 - image if you click on that drop down
10:32 - you're going to be able to select the
10:33 - background image that we added you can
10:36 - see here that it's not quite the right
10:38 - size and not in the position that we
10:40 - would want it we wanted to take up the
10:42 - entire view so now is the perfect time
10:46 - to introduce some Auto layout
10:48 - constraints so click on that background
10:51 - image view now go down here in the lower
10:54 - right hand corner you're going to see a
10:55 - couple of buttons here now we want to
10:57 - skip over stack we're going to learn
11:00 - about that in the next lesson and we
11:04 - want to skip over a line as well we want
11:06 - to go into this one called pin if you
11:08 - click on that this will allow you to
11:11 - specify the margins uh for the image
11:14 - View and because we wanted to take up
11:16 - the entire uh the entire view we're
11:20 - going to make all of these zero but
11:22 - first of all you have to enable these
11:24 - margins so click on that little red I
11:28 - bar there I'm going to do it for all
11:30 - four of them and furthermore I'm going
11:32 - to uncheck constraint to margins because
11:35 - by default uh the iPhone view here has
11:38 - some margins on the left hand and the
11:41 - right hand side here because I want it
11:43 - to go edge to edge I'm going to uncheck
11:45 - that and then furthermore if you pull
11:47 - down these numbers here you want to make
11:49 - sure that uh you select view instead of
11:52 - the top layout guide which is another
11:54 - margin on the top and on the bottom as
11:58 - well uh I'm going to select view instead
12:00 - of bottom layout guide and do that for
12:03 - the left and the right well they only
12:06 - have view there so that's fine and then
12:08 - change all of those numbers to
12:13 - zero okay I'm pressing tab to tab
12:15 - through all of those text boxes and just
12:17 - pressing zero now the button down here
12:19 - says add for constraints and that means
12:23 - I'm going to be adding four rules one
12:25 - rule for each of these margins so as
12:27 - soon as I click that uh the first thing
12:29 - you'll notice is that the background
12:32 - didn't change and there are all of these
12:34 - orange uh lines here that's just saying
12:37 - that this element isn't looking like
12:40 - what the rules describe and we're going
12:42 - to fix that in a quick second but I want
12:45 - to point your attention to the document
12:47 - outline here because there are our
12:50 - constraints because if we ever want to
12:52 - delete them or edit them let's say you
12:54 - made a mistake all you need to do is
12:56 - highlight all of these four that you
12:58 - just added and hit delete on your
12:59 - keyboard or if you specified an
13:02 - incorrect uh number you can select one
13:05 - of them on the right hand side under
13:07 - constant uh you can see here we put zero
13:10 - but if you made a mistake maybe you put
13:11 - a different number you can change that
13:13 - into zero here okay so let's fix the
13:17 - fact that uh this background isn't
13:20 - looking as the rules describe it so I'm
13:24 - going to click on the background I'm
13:26 - going to go right back down to those
13:27 - buttons in the bottom right hand corner
13:29 - the rightmost one is saying resolve Auto
13:32 - layout issues so click it and I'm going
13:36 - to be able to either update frames for
13:38 - the selected view which is my background
13:41 - or update the frames for all of the
13:43 - views in the view controller so since we
13:45 - only have one view right now it doesn't
13:47 - really make a difference I'm just going
13:48 - to select update all views and now you
13:51 - can see that it's changed that image
13:54 - view element to accommodate the four
13:56 - constraints that we added now remember
13:59 - how we talked about size classes a
14:01 - little earlier well if you go down here
14:04 - right now we're viewing as the iPhone 6s
14:06 - plus so you can see here it says WC HR
14:11 - in Brackets and that stands for the
14:13 - compact width and regular height that's
14:16 - what uh we're viewing it as if you click
14:19 - that you can actually change the size
14:21 - class by selecting a different device so
14:24 - let me select the iPhone
14:26 - 6s and you can see that that I can also
14:30 - change the orientation right now uh the
14:33 - iPhone 6s is also compact width and
14:36 - regular height because those two are
14:39 - very similar in their screen sizes and
14:42 - so they're in the same size
14:46 - class okay now let's select the iPhone
14:49 - SE same thing compact width regular
14:53 - height same thing with this
14:56 - iPhone however if I turn it into the
14:59 - landscape orientation you can see now
15:01 - that the size class is compact width and
15:03 - compact
15:04 - height so these buttons down here they
15:07 - allow you to view your interface in all
15:10 - of these different size classes which is
15:13 - very helpful because you can see how
15:15 - your app would look like in these
15:17 - different devices and orientations now
15:20 - if you wanted to add a constraint or a
15:23 - rule that is specific to that size class
15:26 - you would do that by clicking this
15:27 - button vary for constraint
15:29 - but we're not going to do that in this
15:31 - lesson I'll show you how to do that in
15:33 - future lessons and right now clicking
15:35 - through these all you're doing is
15:38 - displaying your app user interface in
15:41 - these different devices and
15:43 - orientations so not so bad right you
15:46 - might think that now we're going to add
15:48 - our logo up here and we're going to
15:50 - specify constraint for the top margin
15:53 - and then we're going to put our two uh
15:55 - image views for maybe the two cards and
15:57 - we're going to specify the the height
15:59 - and the width and uh the distance that
16:02 - it is from the logo on the top and so on
16:05 - and so forth and use Auto layout
16:06 - constraints to build our uh user
16:09 - interface that way well there's actually
16:12 - an easier way that's going to allow us
16:14 - to build our layout without having to
16:16 - specify all of those Auto layout
16:18 - constraints and it's using a container
16:20 - called the UI stack view or just stack
16:23 - view for short in the next lesson I'm
16:26 - going to show you how to use the stack
16:28 - View to build out the user interface for
16:30 - our war card
16:32 - game thanks for watching and I'll see
16:34 - you in the next lesson bye for
16:38 - [Music]
16:45 - now