00:04 - Hello and welcome in this lesson,
00:06 - you're going to learn a variety
of essential user interface elements
00:10 - and containers and then at the end
of the lesson, I have some challenges
00:13 - for you to try and build
your own user interfaces.
00:17 - Now, I highly recommend that you do those
challenges to get additional practice
00:22 - and again, to make the most of your
learning pause throughout the lesson
00:26 - and try to replicate what I've
done on your own Xcode project.
00:30 - Now, just in case you're new around here.
00:31 - Hi, my name is Chris
and welcome to CodeWithChris.
00:34 - The place to be if you want
to learn how to make an app.
00:36 - Now, before we dive in,
00:38 - I got to admit I think designing
UI is fun, at least for me.
00:42 - How do you feel about it?
00:43 - Do you like doing the design or would
you rather leave that for the designers?
00:47 - Let me know by leaving
a quick comment below.
00:49 - And on your way down there,
00:50 - if you wouldn't mind, please give
this video a quick thumbs up.
00:52 - It really, really helps.
00:54 - And I thank you.
All right.
00:55 - Enough talking.
Let's get to the fun part.
01:00 - All right, so you've learned
about the text element.
01:03 - Now I want to show you the image element,
so we're going to go ahead and erase this.
01:08 - And why don't we use the library
to look for the image element?
01:15 - So let's go ahead
and drag and drop the image there.
01:20 - Now, the problem is that we
don't have any image to display.
01:24 - But before I tell you how to specify that,
01:26 - just noticed that it's sort of in the same
format as the text element.
01:31 - Right.
01:32 - There is the image keyword here and then
there is a set of round brackets
01:37 - and in the middle we're
going to put our image name.
01:40 - Now, this image name maps to whatever
01:44 - graphic asset we've put
into our asset library.
01:47 - So we open up our file navigator
and we go into our asset library.
01:52 - You can see that it's all empty.
01:54 - We don't have anything here.
01:55 - So let's go ahead and put an image in here
if you go into the lesson resources.
02:01 - You're going to see a zip file called
Local Assets and let's go ahead and unzip
02:06 - them, and then inside you're
going to find a local image.
02:11 - You're going to find three files,
02:13 - actually, and they're named the same way,
except with an at two X and then at three
02:19 - X, and that is literally just
two times as big as the first one.
02:24 - And this one is three times
as big as the first one in.
02:27 - The reason why they come in different
02:29 - sizes is because there exist iOS devices
with different screen resolutions.
02:35 - So by adding all three sizes,
the platform will pick the right size
02:40 - to use for the screen resolution
that it's being displayed on.
02:44 - So all you have to do is grab all three
02:47 - and then drag it into the
asset library like this.
02:50 - It's going to be smart enough to know
02:52 - that those three are in the same group
and it's going to give it a name.
02:57 - You can always rename this so you can
02:59 - click it and you can name
it anything you want.
03:03 - But this name right here is what
you are going to be referencing
03:08 - in the image element.
03:09 - So go ahead.
03:11 - And put in quotation marks,
03:14 - that image has that name
and you should see it appear here.
03:18 - Oh, actually automatic
preview updating post.
03:22 - Go ahead and hit resume.
03:25 - All right, in there,
we see our image now by default,
03:29 - it displays the image at the size
of the graphic asset that you imported.
03:34 - However, if you wanted to resize it,
03:37 - scale it up or down,
you can add a modifier called sizable.
03:42 - When you hit that,
03:43 - it will be able to stretch
when it stretches,
03:47 - if you want it to maintain the aspect
ratio, because you can see here it's all
03:52 - stretched out and it doesn't
look like the original image.
03:55 - You can add another modifier called
03:59 - aspect ratio.
04:03 - And don't forget, even though I am typing
out these modifiers through Xcode here,
04:08 - you can always add them through this menu,
you can find it right there.
04:13 - And then the aspect ratio modifier allows
you to select different ways in which
04:20 - this should scale.
So if I say fit, it's going to scale it up
04:25 - to fit within the bounds,
but with maintaining aspect ratio.
04:31 - And while we're adding these modifiers,
this would be a good point to mention that
04:36 - a good practice is to hit enter on your
modifiers here so that they become aligned
04:44 - because some elements might have a list
of modifiers, and by putting them all
04:49 - on a new line, they automatically indent
under the user interface element that they
04:55 - pertain to and it becomes
very easy to read.
04:58 - All right.
04:59 - Now you know about text
elements and UIImage elements.
05:02 - How do we go about combining the two?
05:05 - How do we go about having more than one
05:07 - element for our user interface? This is
where container elements come into play.
05:12 - So let's go ahead into our library
and let's search for Vladek.
05:20 - This is the one that I'm
referring to, vertical stack.
05:23 - And you can go ahead and click
and drag it in here.
05:28 - Now you're going to get some errors
because this counts as an element to now
05:34 - and it seems that Xcode hasn't caught up,
but this wouldn't be a valid UI
05:40 - essentially.
We have two elements here.
05:43 - What we want to do instead is we want
05:45 - to take our image and I'm going to cut
that Xcode and I'm going to paste it in.
05:51 - Between this opening bracket and closing
bracket of the vertical stack
05:58 - inside the vertical stack,
you can put up to 10 elements and it's
06:03 - going to stack them vertically
on top of each other.
06:06 - So here I'm going to also put
a text element.
06:12 - Like that, and you can see that now I'm
able to have two elements and they are
06:18 - automatically stacked
on top of each other.
06:22 - In addition to the vertical stack,
06:24 - there is also a horizontal one,
and instead of V stack,
06:28 - that is each stack and if you change
that to an inch thick,
06:32 - you'll see that it's now stacked
horizontally beside each other.
06:37 - And there's also one called Xcode Steck,
06:40 - I'm in Canada or Xcode, if you prefer,
and this places things on top of each
06:46 - other with the elements at the top
being the farthest in the back.
06:51 - So you can see that our text element
hello sits on top of the image.
06:57 - Now, a cool thing is that you can nest
these different container elements.
07:02 - So I can have let's say I want
my image logo to be the background.
07:08 - And on top, I want to have
two text elements
07:13 - side by side so then I can
use in each stack in here.
07:18 - And rather than typing it out or dragging
it from the library, I'm going to show you
07:23 - another way in which to embed
your elements into these stacks.
07:28 - If you hold down command and click on the
element, you've seen this menu before.
07:33 - You can embed in each stack and it's just
going to create that each stack for you.
07:38 - And that's probably
the easiest way to do it.
07:42 - So in this stack,
I'm going to add hello world.
07:48 - You can see here that now my image is
behind this stack with two text elements.
07:58 - Now it seems pretty intuitive
using these stacks.
08:00 - Right.
08:01 - But how do you arrange
the elements inside the stacks?
08:04 - Well, there are some options.
08:06 - So if I click on this, that stack here.
08:11 - Actually, let's take a look at the stock,
08:14 - so I'm going to go ahead and click that
this one actually has a lineman,
08:18 - so does that stack doesn't because it just
puts everything on top of each other.
08:21 - But for the stack and the V stack,
08:24 - there's an alignment so you can choose
to align everything by their middle's,
08:29 - align everything by the baselines
or align everything by the top.
08:33 - And you can also add spacing.
08:36 - So you can see here I'm
adding a spacing of three.
08:38 - You can see how it changes the code
and it actually adds a spacing there.
08:43 - And that's too little for you to notice.
08:45 - But let me add 20.
08:47 - You can see that there is a gap now.
All right.
08:51 - So you've learned that you can align
the elements inside a stack and you can
08:55 - also add spacing between
elements in a stack.
08:58 - But I want to show you another way
09:00 - of arranging elements inside of a stack
in order to do that.
09:05 - I'm going to change this,
that I can do a V stack.
09:08 - So we're going to get something like that
now, let's say I wanted this logo to be
09:13 - at the top and I wanted my two
text labels here to be at the bottom.
09:19 - One way I could do it is actually
by adding spacing in my V stack, right?
09:25 - So let's say I add one hundred.
09:27 - You can see that there pushed the part,
I can add more 300,
09:32 - but this is a fixed value and as you know,
there are a ton of different screen sizes
09:37 - and resolutions, so this isn't
a good way of approaching it.
09:40 - Let me get rid of this spacing value.
09:44 - Instead, what we can use is an element
called a spacer, so let me show you how
09:50 - that works in between the image element
and the stack containing the two text
09:55 - elements, I am going to
insert a spacer element.
10:00 - And the name of this element is Facer,
followed by two rounded brackets.
10:05 - What this spacer element does is
take up all the available space.
10:10 - It just expands and pushes
everything away.
10:12 - So you can see I've got the image here.
10:15 - I've got the spacer taking up as much
10:17 - space as I can and then my H
that containing the two elements there.
10:22 - The cool thing about the spacer element,
10:24 - however, is that it plays nice with other
spacer elements in the same stack.
10:29 - So if I go up here above the logo
and I add another spacer element,
10:35 - what ends up happening is that the two
10:38 - spacer elements both take up
an equal amount of space.
10:41 - You can see above and below the war logo.
10:45 - There's is an equal amount of space
10:47 - if I add a third spacer element
beneath my stack.
10:52 - What do you think is going to happen?
10:55 - Well, all three space four elements are
going to share the available white space.
11:00 - So the first space, four elements here.
11:02 - Second one here and the
third one is there.
11:05 - And it's all
having an equal amount of space.
11:08 - This is a great way to space
things out equally.
11:11 - Now, in fact, I could do the same thing
11:13 - with my H stack instead
of specifying spacing here.
11:17 - And notice this time I'm just going
11:19 - to delete that spacing 20 there instead
of changing it in the inspector,
11:26 - I can add a spacer there.
11:28 - I'm going to copy that.
11:30 - You can see here it takes up all
11:32 - the available space pushing
my two labels to the side.
11:35 - But if I add one here on the right side,
it's going to push it to the middle.
11:40 - And then if I add one in the middle,
11:42 - then it's going to
make it all equidistant.
11:49 - Awesome, you learn how to use the image
and space elements in addition to the text
11:53 - element, and you also learn about
the stack stack and Z stack.
11:57 - Now it's time for you to practice
using these elements in containers.
12:00 - I have prepared some challenges
for you to try to access them.
12:03 - Just visit CodeWithChris dot com and sign
12:06 - in or create your own account and then
enroll in the 14 day beginner challenge
12:10 - and you'll see the challenges
the next time we sit down together.
12:12 - We're going to be building
the UI for the war card game.
12:15 - If you don't want to miss that lesson,
make sure you subscribe to the channel
12:18 - by hitting that subscribe button
below and turn on notifications.
12:21 - All right.
I'll see you in the next lesson.
12:23 - And good luck with those challenges.