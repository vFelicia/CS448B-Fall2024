00:01 - [Music]
00:05 - close Chris here back for another lesson
00:08 - on connecting an iOS app to a MySQL
00:10 - database in the previous lesson we had
00:12 - setup sub database through our web host
00:15 - here and we had created a database user
00:19 - and assigned it to the database so we
00:22 - also added some data to that database
00:26 - now we are going to create the PHP web
00:30 - service and we're going to put it on the
00:33 - web host so that we can access it and
00:35 - it's going to query that database for
00:38 - the data and return it as JSON so here's
00:40 - an example of what it's going to look
00:42 - like this is the domain that I signed up
00:45 - for iOS quiz comm slash and then I had a
00:49 - name that service dot PHP so you can see
00:52 - here when I hit this URL as you can hit
00:55 - the URL right now in your browser you're
00:57 - going to get back our data so if you're
01:00 - not familiar with JSON these are
01:02 - basically key value pairs so you see the
01:06 - Schooley bracket here might be hard to
01:08 - see but that would be you know one row
01:11 - of data and this would be translated
01:14 - into when we parse it into our Swift it
01:17 - would be a dictionary with a name key
01:21 - and the value of the apple an address
01:23 - key and the value of that would be this
01:25 - address a latitude key and then you know
01:28 - so on and so forth and then you have a
01:30 - comma here and this would be represented
01:34 - as another dictionary and then the outer
01:39 - two brackets these square brackets that
01:41 - represents an array so when we actually
01:44 - parse this JSON into our Swift code
01:49 - we're going to have an array of two
01:52 - dictionaries and inside those two
01:53 - dictionaries it's going to be these key
01:56 - value pairs so let's take a look at the
01:59 - PHP code that is running behind the
02:02 - scenes to produce this we go back to my
02:06 - blog article here now I'm going to walk
02:09 - through this PHP code here it's been a
02:11 - while since
02:13 - wrote this so there might be better ways
02:15 - of doing things now and I would welcome
02:18 - any feedback if you are very familiar
02:21 - with PHP so this code is just going to
02:25 - go into a standard text editor and
02:28 - you're just going to save it as a file
02:31 - with the extension dot PHP and when you
02:33 - upload it onto our web post it's going
02:36 - to run that file as PHP now here is the
02:38 - opening tag for the PHP code and here's
02:42 - the closing tag so anything in between
02:44 - these two tags
02:45 - that's our PHP code and these green
02:49 - lines are comments just like when we
02:51 - write Swift code and variables in PHP
02:55 - have this dollar sign in front of it so
02:57 - we have this con variable here and what
03:02 - we're doing is using this MySQL I
03:05 - connect function to open a connection to
03:09 - the database and we're assigning it to
03:10 - this variable here because later on
03:13 - we're going to need to close it so we do
03:15 - need a reference to that connection here
03:18 - in this if statement we are just
03:20 - checking if there was an error in
03:22 - opening the connection and if there was
03:24 - this echo command is kind of like the
03:26 - print statement and Swift where it would
03:28 - just output that onto the screen now
03:31 - before we move on I just like to talk a
03:34 - little bit about the statement here
03:35 - because in this MySQL I connect function
03:39 - we are going to have to specify several
03:41 - parameters localhost is the address of
03:44 - the database and because our PHP web
03:48 - service and databases are going to be on
03:51 - the same server localhost just refers to
03:54 - the server that is on now username is
03:58 - going to be the database username
04:00 - password is going to be that database
04:03 - user's password and DD name you're going
04:07 - to replace that with the actual name of
04:09 - the database that you want it to access
04:12 - now although we do have to put in the
04:16 - actual credentials here in the form of
04:19 - text it's not that anybody can actually
04:21 - just
04:23 - take a look at the code behind it like
04:25 - if you went view source on this guy you
04:28 - wouldn't be able to see the source code
04:30 - like you could with HTML and it's not
04:32 - like you can download this file and open
04:34 - it up and you know take a look at the
04:37 - credentials so it's not unsafe like that
04:40 - but there are other best practices that
04:43 - we can do to make it safer for instance
04:46 - one easy thing is that right here I
04:48 - don't have an SSL certificate for this
04:52 - web service so you know it would be more
04:55 - secure if we access this through HTTPS
04:59 - so that's one thing but the other thing
05:01 - also is that if you were building kind
05:03 - of a full-fledged API with lots of
05:06 - different web service calls to the
05:08 - database to you know create rows and
05:11 - insert data update data delete data
05:13 - whatever you probably wouldn't want to
05:15 - have these hard-coded credentials in
05:20 - every single web service file so I did a
05:24 - little bit of research and this article
05:26 - actually has a lot of good points for
05:30 - best practices in using that MySQL
05:33 - iConnect statement here one of the
05:36 - things I can just point out is that we
05:38 - can actually make that connection in
05:42 - another file in another PHP file and
05:46 - then from our web service here instead
05:49 - of you know directly hard coding the
05:52 - code here we just make a link or make a
05:56 - reference to that other connection file
05:59 - so let me show you what this person did
06:02 - here so you can have this config any
06:05 - file which actually contains the
06:08 - credentials and database information and
06:11 - then from your web service you can just
06:13 - have this parse in e file which reads in
06:17 - that information in so what that's going
06:19 - to prevent is even if someone did end up
06:22 - being able to see your PHP code of your
06:25 - web service they're only going to see
06:27 - things like this where you reference the
06:30 - username and password from the config
06:32 - file rather than seeing the actual
06:35 - values
06:36 - so unfortunately my PHP skills are still
06:40 - pretty much at a beginner level and so
06:41 - I'm going to link I'm going to put this
06:44 - link in the description my video so you
06:46 - can read into it and you can apply these
06:48 - best practices if you are actually
06:51 - creating this for a real app rather than
06:54 - just a demo for what I've done here is
06:58 - pretty much what I call demo code
07:01 - another thing that this article
07:03 - mentioned is that you want to escape the
07:07 - SQL query what I mean by that is here we
07:11 - actually just have one hard-coded query
07:13 - select everything from the locations
07:17 - table but sometimes you're going to rely
07:20 - on the iOS app passing in some data to
07:23 - your web service and you're going to
07:25 - take that data and make your database
07:28 - call write for example your iOS app may
07:30 - be looking for all the articles
07:33 - associated with the particular user and
07:35 - so it would pass you that user ID and
07:39 - then you would take that user ID and
07:40 - then you would modify this SQL statement
07:43 - and say select you know all the
07:46 - particles of this user ID however
07:49 - there's something called a SQL injection
07:52 - attack where malicious users could
07:55 - instead of passing you a user ID pass
07:59 - you another sequel statement so if you
08:02 - just take that thinking that it's a user
08:05 - ID and then you you know you build it
08:07 - into your sequel selection statement
08:10 - here you may end up returning more
08:13 - information or returning different
08:15 - information than you intended to so the
08:17 - attacker could potentially access data
08:21 - that they're not supposed to so one way
08:23 - to combat against that is to before you
08:28 - take any data and just shove it into
08:32 - your SQL statement you need to escape it
08:35 - effectively treating that input as text
08:39 - and not actual a sequel statement and if
08:42 - your web developer you're probably
08:44 - familiar with that because any sort of
08:46 - text box
08:47 - which you can enter in data on a website
08:49 - that could be subject to sequel
08:53 - injection attacks so it's it's pretty
08:55 - common to safeguard against this stuff I
08:57 - have another article which I'll also
08:59 - link to in the description that was very
09:01 - interesting because it talks about
09:03 - different types of attacks that people
09:05 - could use to sort of expose or trick
09:08 - your web service rather into recording
09:13 - data that it's not supposed to or
09:15 - running code that it's not supposed to
09:17 - there's something called the
09:18 - man-in-the-middle attack replay attack
09:21 - and stuff like that and this article
09:23 - talked about different ways for you to
09:26 - build a secure web service so there's a
09:28 - lot to consider if you're going to be
09:30 - building web services that connect to
09:32 - your MySQL database or any sort of
09:34 - database for that matter so now I hope
09:36 - you can kind of understand why I would
09:39 - recommend a platform like firebase or
09:41 - parse server or something like that for
09:44 - beginners who want to work with back-end
09:47 - because if you're just new to iOS and
09:50 - you're new to programming in general
09:52 - you're just picking up Swift programming
09:53 - it's picking up Xcode the last thing you
09:56 - want to do is have to learn about
09:57 - another language and then how to build
10:01 - secure web service and stuff like that
10:03 - I'm using firebase and parse server it's
10:05 - very easy to get set up and running and
10:08 - inside the iOS app you're building if
10:11 - you're using the MVC design pattern
10:13 - correctly it's going to be very easy for
10:15 - you to just swap in another data layer
10:18 - should you decide not to use firebase or
10:21 - parse server in the future you can you
10:23 - can change that without having to modify
10:25 - a lot of stuff in your app but anyways
10:28 - coming back to this in this tutorial in
10:31 - this video series I'm showing you guys
10:33 - how to connect your iOS app to read data
10:36 - from my desk you'll a database right so
10:38 - that's what we're going to do here let's
10:40 - go through the rest of this code here
10:42 - this is another variable called SQL and
10:45 - we're assigning it this string this
10:47 - string is actually going to be the
10:49 - sequel query that we run against the
10:51 - database and like I mentioned before it
10:54 - just selects all the rows from this
10:56 - locations table
10:58 - and then what we're doing here is we're
11:01 - running the query we're passing in the
11:03 - connection that we opened earlier we're
11:06 - passing in the SQL statement which is
11:08 - right here and we're signing results to
11:12 - this variable called result and this if
11:14 - statement is just going to check if
11:17 - there were any results now if it turns
11:20 - out that there are results stored in
11:22 - here you know we ran the statement and
11:24 - we got some rows of data back then we're
11:26 - going to come in here I created two
11:29 - arrays one being result array and one
11:32 - being temporary and then I loop through
11:35 - the result rows and for each row I'm
11:39 - using a while loop for each row I'm
11:41 - assigning that row into a temporary and
11:44 - then I'm pushing that into a result rate
11:46 - and basically building up all the rows
11:50 - of data into result array I'm not sure
11:53 - why I assigned row in to temp array and
11:56 - then doing it this way rather than just
11:58 - putting this row in here can't remember
12:03 - if there was a reason why I wrote it
12:04 - this way but essentially this while loop
12:06 - just goes through the results for each
12:09 - row of data that I got back it's putting
12:12 - it into result array and then finally
12:15 - JSON encode is going to take the data in
12:18 - that result array and it's going to turn
12:20 - it into JSON and this echo statement
12:22 - again is like a print statement so it's
12:25 - going to print that JSON code out to the
12:27 - screen like you see here and then
12:31 - finally we close that database
12:33 - connection so if we simply just take
12:39 - this code we're going to copy it and I'm
12:43 - just going to paste it into a text file
12:45 - and obviously you're going to change
12:47 - user name password and DB name to the
12:51 - proper things let me show you where you
12:53 - would see that in the cPanel
12:56 - you would click MySQL database
13:04 - and then your database name would be
13:06 - this guy so that's what you would put in
13:09 - DB name and this would be your database
13:14 - users name so you would put that in the
13:18 - username and password you would just put
13:20 - whatever password you assigned that guy
13:21 - and then you would save this file and by
13:25 - default my text editor is trying to save
13:27 - it as an HTML file you'll save it on my
13:30 - desktop but you're going to use a dot
13:34 - PHP extension so you'll make sure that
13:39 - it actually is a PHP extension if you
13:42 - look at my desktop here you can see the
13:44 - file don't see it's a kind of PHP file
13:52 - and it's not you know like service dot
13:54 - PHP dot HTML or dot txt or something
13:56 - like that that it actually is a PHP file
13:58 - and then you're going to go ahead and
14:00 - you're going to upload that file to your
14:03 - server now you might have FTP access if
14:07 - you've set that up you can go ahead and
14:10 - login to your FTP for your web server
14:13 - and you can just upload that service dot
14:15 - PHP file however from the control panel
14:18 - there's also another way there's like an
14:21 - on-screen interface for you to do it I
14:23 - didn't really bother connecting to FTP
14:27 - because I just needed to upload this one
14:29 - file so I just used file manager in here
14:31 - and I went into the web root and then
14:38 - through this interface here you have the
14:41 - ability to upload files through this
14:44 - button here upload and I just put a here
14:47 - service KTP as you can see so this is
14:50 - the web root which is just off of your
14:54 - domain like that so that would be your
14:56 - domain slash service dot PHP and that's
15:01 - my service dot PHP file going to the
15:03 - database grabbing those two rows and
15:05 - coding it into JSON and outputting it
15:08 - onto the screen now if you have some
15:11 - errors in your PHP file you will see and
15:14 - you try to hit your
15:16 - hc' file you're going to see the error
15:19 - message here instead and you might even
15:21 - see some of the PHP code so that's why
15:23 - it's best if you you know don't actually
15:26 - put your credentials in this PHP file
15:29 - just in case that somehow that code can
15:32 - get revealed instead you know you would
15:36 - put it in a separate config file and you
15:39 - would not put that config file in the
15:42 - web root of your server either you'd
15:44 - probably put it in some folder that can
15:47 - only be accessed by the PHP file and not
15:49 - through the browser like this anyways in
15:52 - this demo I wasn't concerned about the
15:56 - best practices or making this web
15:57 - service secure now that we have our PHP
16:02 - web service reading from the database we
16:05 - can now work on the client app now in
16:07 - the next lesson we're going to start
16:08 - that Xcode project that is going to hit
16:12 - this URL and parse this JSON so we can
16:15 - use that data to display it on the map
16:17 - thanks for watching and I'll see you in
16:19 - the next lesson bye for now
16:23 - [Music]