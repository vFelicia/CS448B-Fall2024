00:02 - hey coders what's up it's Chris here
00:05 - welcome to part two of query constraints
00:07 - so in the previous lesson we looked at
00:09 - how to perform more specific queries by
00:13 - adding constraints and you learned that
00:14 - there are a whole bunch of different
00:16 - constraints you can add such as equal to
00:18 - not equal to contained and not contained
00:20 - in and so on today we're going to look
00:23 - at some other filters that can help you
00:26 - refine your query some more so let's
00:28 - look at select keys first of all just to
00:31 - refresh your memory in our parse class
00:35 - for contact we have a couple of fields
00:38 - we have email first name and last name
00:40 - so what if I were only interested in the
00:42 - email for this query and I didn't care
00:44 - about the first name or last name well
00:46 - we can actually save some bandwidth and
00:48 - data for the user if we don't retrieve
00:51 - this data we can just say retrieve the
00:54 - email data that's all we want and select
00:57 - Kies allows you to do that so we would
00:59 - type query dot select keys and here we
01:02 - pass in an array of the keys that we
01:05 - want to return so we would do that and
01:07 - then this would be in addition to any
01:10 - other constraints that we have so let's
01:12 - say we were using this query right here
01:14 - let me just grab that put that there
01:16 - here we are grabbing all of the contacts
01:19 - that have age greater than 30 and I only
01:23 - want their emails so this is going to do
01:25 - that and then after that remember you
01:27 - have to go find objects in background or
01:31 - find objects in background with block to
01:33 - actually execute the query okay so
01:35 - that's select keys another thing that
01:37 - you can do is called limit so let me
01:41 - actually just comment this out I don't
01:43 - want to delete it so if you download
01:44 - this project you have it for reference
01:46 - so let me just copy this line let's say
01:49 - we're performing another query and we
01:51 - want to limit the results to a certain
01:53 - number we can do limit and we can set it
01:56 - to some number so it says here the
01:58 - default is 100 with a maximum a thousand
02:01 - results being returned at a time so say
02:04 - I want to limit it ten results that's
02:06 - how you would do it now you saw the
02:07 - maximum results for a query is a
02:10 - thousand being returned so what if you
02:12 - expect that your
02:13 - where you might return more than a
02:15 - thousand well you're going to have to
02:17 - use skip so let me show you how this
02:19 - works just comment this out so this
02:25 - query limit you know if I expected this
02:29 - query to return more than a thousand and
02:30 - I set my limit to a thousand it's gonna
02:33 - return the first 1000 results if I want
02:36 - to get anything beyond that I'm going to
02:38 - have to do something like this query dot
02:41 - skip and this is going to skip the first
02:45 - X number of results so I would say you
02:48 - know skip the first 1000 because I got
02:50 - it before and give me the next whatever
02:53 - remainder there is so that's how skip
02:55 - works and then we have some sorting done
03:01 - this is actually not sort by its order
03:04 - by and what we would do is just query
03:07 - dot order by and you can order by
03:10 - ascending or descending on a certain key
03:14 - we can say you know give me first name
03:17 - like that in alphabetical order okay and
03:22 - this get first object method will
03:24 - basically just return the first result
03:27 - in your data set let's say if you're
03:29 - just interested in a single result you
03:31 - would go like instead of find objects in
03:34 - background you would say get first
03:38 - object get first object in background
03:40 - probably with block and so it this block
03:45 - of code is going to return a single PF
03:47 - object or it could be nil you can see
03:49 - here that there's a question mark so it
03:51 - could return nil so this would be your
03:53 - object and this would be your error and
03:57 - in here code to run when first object is
04:03 - returned so this is how the get first
04:06 - object method works let me comment that
04:09 - out
04:13 - and finally count objects what if you're
04:17 - only interested in the number of results
04:19 - in this case you know we're looking for
04:21 - the people who have age greater than 30
04:25 - but we don't care about the actual
04:27 - people we only care about the number of
04:29 - people where the age is greater than 30
04:31 - so we would say carry dot count objects
04:36 - in background or count objects in
04:38 - background with block and you would do
04:39 - this instead of find objects because
04:42 - this will just return you the count so
04:44 - let me expand that block see you get an
04:47 - int there I'm just going to call that
04:48 - number and this is an error parameter
04:51 - and in here we're going to say code to
04:54 - run when the count is returned and so
04:58 - that's how you would use that and next I
05:01 - want to show you guys how to do compound
05:03 - queries so so far we've looked at all of
05:07 - these query constraints we're adding
05:09 - more constraints is going to be an end
05:11 - Clause so like I said for this query
05:14 - right here for example we are creating
05:16 - query on the contact class and we're
05:18 - saying return all of the contacts where
05:21 - the first name has the prefix t√≠o and
05:24 - the first name has the suffix why what
05:28 - if we wanted to do an or what if we
05:30 - wanted to say return all the contacts
05:32 - where it either has a prefix of tio or
05:35 - has a suffix of Y so in that case this
05:38 - one fit the bill right because if we add
05:40 - these two constraints it becomes an end
05:42 - so the technique to do an or query or
05:45 - otherwise known as a compound query is
05:47 - what they call it you have to create two
05:50 - queries one looking for results which
05:53 - has the prefix of tio and another query
05:55 - looking for results which have the
05:57 - suffix Y and then we can use those two
05:59 - queries to create a compound query so
06:01 - let me show you how that works you just
06:03 - create another section down here
06:05 - so compound queries I'm just gonna write
06:10 - or here so you remember that okay so let
06:14 - query equals let's actually make it more
06:18 - descriptive prefix query equals that
06:22 - class name is call
06:25 - and so we're gonna add our claws now
06:27 - prefix query where key has prefix so key
06:33 - I want first name and the prefix is what
06:37 - we had before like that and I'm gonna
06:40 - create another query I'm gonna call this
06:42 - the suffix query and this is also
06:45 - performed on the contact class and this
06:49 - one let's add the clause has suffix
06:54 - first name ends with Y okay so now I
06:59 - have two separate queries now I'm gonna
07:01 - create a compound crater house both of
07:04 - them I'm gonna call this the or query
07:07 - actually let's use capital Q here just
07:11 - for some consistency and what we would
07:14 - do here is write PF query it's a class
07:17 - method so it's C or yeah there it is or
07:22 - query with sub queries so when here you
07:25 - pass in an array of PF query so that's
07:28 - what we're gonna do here and we're gonna
07:31 - combine the prefix query with the suffix
07:33 - query and here this is our compound
07:37 - query so all we need to do is run it by
07:41 - saying find objects and background like
07:43 - that just like we've done if we were
07:46 - doing a single query so it returns array
07:49 - of PF objects objects
07:55 - error code to run when the compound
08:01 - query returns so in this case it's gonna
08:05 - search through the contacts tour for all
08:09 - queries which has first name equal to or
08:12 - starts with TL or first name ends with Y
08:16 - and actually Xcode is complaining here
08:18 - because I change this to capital Q I
08:20 - need to do the same here and here so
08:23 - that's queries in a nutshell I hope that
08:25 - it gives you some ideas about how to
08:28 - query your own parse back end and
08:30 - there's still a ton of things to talk
08:32 - about regarding the parse platform and
08:34 - how to access your data so stay tuned
08:36 - and I'll see you guys tomorrow thanks
08:38 - for watching please subscribe and like
08:40 - the video and please share the video if
08:41 - you think that it would help someone
08:43 - else thanks so much I'll see you guys
08:44 - tomorrow bye