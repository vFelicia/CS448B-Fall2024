00:00 - hey code crew so the main screen of our
00:02 - YouTube app works now in this video
00:04 - you'll create a second view controller
00:05 - where the user can choose a video
00:07 - navigate to that new view controller and
00:10 - actually watch the video and read the
00:12 - description alright let's get to it just
00:15 - a quick note if you're jumping into the
00:16 - series at this point you kind of need to
00:18 - watch these lessons in a progression for
00:20 - it to make sense first make sure you've
00:22 - watched the 29 lesson beginner series to
00:24 - get the basic skills then make sure
00:27 - you're watching this YouTube app one day
00:28 - build lessons in order links to both of
00:31 - these playlists will be in the
00:32 - description alright so we're gonna start
00:35 - by adding a second view controller to
00:37 - this storyboard now I'm gonna just zoom
00:40 - out a little bit so you can see and
00:43 - create some space here so we're gonna
00:45 - open up the object library and we're
00:48 - gonna search for a view controller and
00:53 - we're just gonna click and drag and add
00:55 - this guy right here now we can customize
01:01 - this through interface builder but we
01:04 - aren't able to write any code or logic
01:07 - for it until we create an actual view
01:10 - controller class our custom view
01:12 - controller and then tell the interface
01:15 - builder that what we see here is
01:17 - actually an instance of that so let's go
01:20 - over to view controllers here and let's
01:24 - add a new file this is going to be a
01:27 - cocoa touch class because we'll be sub
01:30 - classing UI view controller now I'm
01:33 - going to call this the detail view
01:35 - controller and the language is Swift so
01:37 - let's go ahead and save it there
01:42 - alright now we're gonna go back to the
01:44 - storyboard and we're gonna click on the
01:47 - second view controller that we added and
01:49 - then in the identity inspector we're
01:52 - going to change the custom class to
01:54 - detail view controller so actually let's
02:01 - make sure we select that and then here
02:05 - let's choose detail view controller and
02:08 - there we go
02:09 - and then we are going to add a segue so
02:14 - a segue is sort of like it's a
02:17 - transition so the way we're going to do
02:20 - that is we're going to click on this
02:22 - first one we want to do it so that when
02:25 - a row in the table view is tapped it
02:28 - transitions over to this
02:30 - detailviewcontroller where the user is
02:32 - going to see the video so we are going
02:35 - to click on the table view here and
02:39 - we're gonna hold down control and just
02:42 - click and drag actually we can't do it
02:45 - from there we have to do it from the
02:48 - video cell so click and drag hold down
02:51 - control you have that blue line and when
02:54 - you let go it's going to detect that you
02:56 - want to add a segue from that video cell
02:59 - we're gonna choose show there are
03:01 - different types of transitions you can
03:04 - do show is probably the most appropriate
03:07 - and you'll see that the
03:10 - detailviewcontroller sort of changes its
03:12 - frame to show you that what's gonna
03:14 - happen is it's gonna slide up from the
03:17 - bottom so that's great and the other
03:20 - thing is that when you hold down control
03:23 - and click on the video cell you'll see
03:25 - that under selection
03:28 - it's a triggered segue to the
03:30 - detailviewcontroller and show is the
03:33 - type of transition and you can always
03:35 - click on the segue here and go into
03:38 - attributes inspector and you can you can
03:41 - change what type of transition it is and
03:43 - take note that you can also add an
03:45 - identifier for this segue so that you
03:48 - can programmatically trigger that
03:50 - transition to happen right now because
03:52 - we've sort of configured this through an
03:54 - interface builder it's automatically
03:56 - going to happen upon selection of any
03:59 - video cell all right so let's quickly
04:01 - test this out if I run the project right
04:03 - now we'll be able to see that transition
04:08 - so if I select this you see the detailed
04:11 - view controllers slide up and we get
04:14 - this behavior by for free you know this
04:17 - dragging down to dismiss it and get that
04:19 - for free
04:20 - the thing is when we transition to this
04:23 - detailviewcontroller we need to pass it
04:25 - some information such as which video was
04:27 - selected that way we know what title to
04:29 - put here you know what's the date
04:31 - what's the thumbnail what's the text
04:33 - description so that's what we need to do
04:35 - so let's go back into the detail view
04:38 - controller now and I'm going to put
04:41 - everything inside a vertical stack view
04:43 - we're gonna have the title labeled date
04:45 - label we're going to have not as
04:48 - uiimageview for the thumbnail we are
04:50 - actually going to have a web view and
04:53 - that's going to show at a pible embedded
04:57 - YouTube video and when they tap on that
04:59 - it's actually gonna launch the player in
05:01 - play and then below that we're gonna put
05:02 - a text view which is a scrollable pane
05:06 - showing potentially a long piece of text
05:10 - so okay let's start by adding a stack
05:13 - view vertical one and I'm gonna just
05:16 - drag it into our detail view controller
05:18 - and then I'm going to add some
05:20 - constraints now I'm gonna put left I'm
05:24 - gonna put 0 from the left
05:26 - I'll show you gonna put 20 from the left
05:28 - actually I can put zero because
05:31 - constraint margins is on so it should
05:33 - add some margins if not then we'll just
05:36 - edit it to be 20 on the left and 20 on
05:38 - the right okay 0 from the bottom and for
05:41 - the top I actually want to create some
05:43 - space so I'm going to put 50 and the
05:45 - reason I want to create that space is so
05:47 - that the user can it's sort of like a
05:49 - handle they can grab the top in and drag
05:52 - it down and it looks like it went all
05:54 - the way to the edge there so I am going
05:56 - to modify the leading and the trailing
05:59 - so that there's 20 from the left and 20
06:01 - from the right so let's change that to
06:04 - 20 and let's change that to 20 so now we
06:08 - have some breathing room on the left and
06:10 - right okay now let's add some labels
06:13 - because it's often hard to see where
06:15 - you're adding these elements because
06:17 - everything is white we can drag it into
06:20 - the document outline inside the stack
06:22 - view so there's my title label and this
06:26 - is going to be my date label and I'm
06:28 - also going to add a web view now
06:31 - be careful you don't add this one this
06:33 - is the one we want
06:34 - WebKit to view so we're gonna go ahead
06:37 - and add that in there and then we're
06:40 - going to add a text view as well just
06:44 - like that now we're going to configure
06:46 - things kind of like how we configured
06:48 - them in the video cell first of all
06:52 - let's look at the label for the title we
06:55 - are going to change number of lines to
06:58 - zero so that can span multiple lines
07:00 - we're going to change the font to bold
07:02 - and we're also going to add some spacing
07:06 - between the elements so let's click on
07:07 - stack view and say that the spacing is
07:10 - 10 and next we're going to add an aspect
07:14 - ratio constraint to this web view so
07:17 - having that selected let's add an aspect
07:20 - ratio constraint let's click into it and
07:25 - modify it and the and use the same ratio
07:32 - as before and finally we have the text
07:35 - view and just in case there's you know a
07:40 - lot a lot of extra space or not enough
07:43 - space we should specify the content
07:45 - hugging priority and the content
07:46 - compression resistance priorities so if
07:49 - there is more than enough space we would
07:53 - probably want the the text view to take
07:57 - up the majority of it so I'm going to go
08:00 - into the size inspector here for the
08:02 - text view and I'm gonna say that content
08:04 - hugging priority is the lowest on the
08:08 - vertical so I'm just gonna say 247 and
08:13 - in the case that there's too little
08:15 - space
08:16 - what would get compressed first probably
08:20 - the text view as well because that's
08:22 - actually scrollable so for the
08:25 - compression resistance priority I'm also
08:26 - going to say that this text view has the
08:28 - least resistance and so that's going to
08:31 - get squished first if there's not enough
08:32 - space all right so let's save this and
08:36 - what we're going to do now is connect
08:39 - these elements over to our detailed view
08:41 - controller so that hold
08:45 - down control and click a
08:46 - detailviewcontroller sorry got this
08:48 - option hold down option and click that
08:50 - to open up the detail view controller on
08:53 - the right side and let's start
08:56 - connecting these IB outlets
08:58 - so this first label is our title label
09:00 - hold down control drag it over it's a
09:05 - title label this one's the date label
09:11 - this one is our web view and this one is
09:19 - our text view
09:23 - alright let's save it and then let's go
09:27 - let's close this right pane and go into
09:29 - the detail view controller now you'll
09:32 - see that it's an undeclared type here so
09:34 - what you can do first is import WebKit
09:38 - because this element is actually in
09:40 - another framework or module and that
09:43 - might be okay for you press command B to
09:46 - build it and make sure that it built
09:48 - successfully if in the future you're
09:51 - using building another project and you
09:54 - import WebKit and I can't find this
09:56 - framework then what you want to do is
09:59 - come into your project properties here
10:01 - under frameworks libraries you can click
10:05 - plus and then you can actually just
10:07 - manually add the WebKit framework all
10:12 - right so we've got all these elements
10:14 - here there's one more property we want
10:16 - to add and basically is sort of similar
10:19 - to the video cell we want to have a
10:21 - property representing the video to
10:23 - display that the detailviewcontroller is
10:25 - supposed to display and again this could
10:28 - be nil so we're gonna have it as an
10:30 - optional video and then we are going to
10:33 - override another view controller life
10:37 - cycle method because viewdidload is when
10:40 - all the elements have been loaded
10:42 - but sometimes displaying web content at
10:44 - this point in time causes some issues so
10:48 - instead we want to go a little farther
10:51 - down the life cycle of the view
10:53 - controller to when the view is going to
10:56 - appear and there
10:57 - another method that you can handle
11:00 - called view will appear this one here
11:04 - and this is it happens after viewdidload
11:07 - and it's a when the elements are about
11:09 - to be shown the view is about to be
11:11 - shown to the user so in here we're gonna
11:13 - check if there's a video so if a video
11:20 - let's say card video is not nil else
11:25 - return there's nothing to do I'm just
11:28 - going to delete this boilerplate code
11:30 - here okay otherwise we are going to
11:34 - create the embed URL we're going to load
11:40 - it into the web view or have the webview
11:44 - load it set the title set the date set
11:51 - the description and furthermore we
11:55 - probably want to before we do that is
11:59 - here clear the fields so we want to you
12:03 - know clear that description and clear
12:04 - the day clear the text so that none of
12:06 - it is remaining from the previous video
12:10 - you were looking at so here I'm just
12:12 - going to say title label dot text
12:16 - they label dot text it's nothing and
12:20 - text view dot text is also nothing okay
12:24 - so what does this embed URL look like
12:27 - well I've loaded it in a browser and we
12:30 - can take a look so this is lesson 4 as
12:34 - you can see it's basically like an
12:36 - embedded video and the URL goes like
12:39 - this youtube.com slash embed slash video
12:43 - ID so this is the URL that we are going
12:46 - to construct now for every single video
12:49 - this part in the front is the same so
12:53 - we're gonna put that in our constants
12:54 - file however the video ID is going to be
12:58 - different for any video that we want to
13:00 - display so first let me just take the
13:03 - part that is going to be the same for
13:05 - every video and put it into our
13:06 - constants file so
13:12 - down here I'm going to do static of our
13:16 - YouTube embed URL and put that there and
13:22 - because this file won't get checked into
13:25 - github and we have constants
13:28 - template.dot swift which will be checked
13:30 - in I'm going to also make sure that we
13:33 - add that constant here as well okay so
13:39 - this YouTube embed URL combined with a
13:43 - particular video ID is the full embed
13:47 - URL that we need so let's go to detail
13:49 - view controller and create that URL so
13:52 - let embed URL equals constants dot
13:58 - YouTube embed URL plus video video ID
14:06 - and then next we are going to use a
14:10 - special method of the webview called
14:14 - load and we're going to be able to pass
14:17 - in a URL request to basically navigate
14:20 - to that YouTube embed URL now let's
14:24 - create that request up here let request
14:27 - equals URL request and you can create
14:32 - one by passing in a URL object so we're
14:37 - working our way backwards here now we
14:39 - have to create the URL object let URL
14:43 - equals URL object and we're going to
14:47 - pass in our embed URL string so we
14:51 - should probably make that more clear by
14:54 - renaming the constant to embed URL
14:56 - string so here we're creating the URL
14:59 - object from it we're gonna pass that
15:02 - object into here the request I'm going
15:04 - to force and wrap it and then finally
15:06 - we're going to take that request object
15:08 - and pass it into the web view for
15:10 - loading and then here we're going to set
15:14 - the title so title label dot text is
15:17 - equal to video
15:20 - titled and I can force and wrap it here
15:23 - because I've checked that it's not nil
15:25 - using this guard statement up there as
15:29 - for the date we I want to do the same
15:32 - thing as in our video cell as before
15:36 - using this date formatter at this point
15:38 - you might want to create a date helper
15:43 - utility or you know maybe maybe a date
15:46 - manager or something like that and have
15:48 - some methods to just take in a date and
15:50 - spit back out the right format because
15:52 - it turns out we're doing this a few
15:53 - times but I'm not going to go through
15:55 - that because we are doing it twice here
15:58 - and and I'm verbally telling you that
16:01 - you should if you're gonna do it more
16:04 - than twice you might want to consider
16:06 - creating your own helper class to to do
16:10 - this so you're not having to repeat this
16:12 - code over and over so I'm going to just
16:14 - copy these two lines the date format our
16:16 - object and and the string here and this
16:19 - date format string should probably be in
16:22 - our constants file as well so that if we
16:24 - want to change the format that how the
16:28 - dates are displayed we can do it from a
16:30 - single place in the constants file
16:32 - because now I'm ending up you know
16:35 - repeating it here as well but at this
16:38 - point I kind of want to just finish this
16:41 - off so I'm just going to do that
16:44 - I thought text is equal to DF dot string
16:51 - from date and we're gonna pass in video
16:53 - dot publish the date and then the
16:57 - description is simply going to be
16:59 - textview dot text is equal to video dot
17:05 - description I believe that's the
17:06 - property all right okay now our
17:11 - detailviewcontroller
17:13 - should work but the problem is that we
17:16 - haven't yet passed the video that was
17:18 - selected from the table view over to the
17:20 - detail view controller we still have to
17:22 - do that all right we have to set this
17:24 - property so that when the view is about
17:27 - to appear it's not going to get caught
17:30 - here and it's going to be able to
17:33 - continue
17:34 - so let's go back to the view controller
17:36 - and figure out how we can do that
17:40 - actually let's go over to the storyboard
17:42 - so I can explain what what happens
17:44 - during a segue when it's about to occur
17:47 - so when the user taps on a row of the
17:51 - table view it's gonna cause this segue
17:54 - to occur and when the segue is gonna
17:57 - happen there is a method that gets
17:59 - called that you can override and put
18:02 - some code in there so that's what we're
18:04 - going to do that's how we're going to
18:05 - then pass that video object over to the
18:09 - detail view controller so inside our
18:11 - view controller under here there's a
18:18 - method called prepare for segue are you
18:21 - here and this method automatically gets
18:24 - called as a segue happens to the view
18:28 - controller so when the user is
18:30 - transitioning to the detailed view
18:31 - controller so at here we're going to get
18:34 - a reference to the video that was tapped
18:38 - on get a reference to the detail view
18:43 - controller and set the video property of
18:47 - the detailed view controller and before
18:52 - that just confirm that a video was
18:57 - selected so to do that we're gonna say
19:00 - you know guard a table view dot selected
19:06 - sorry index path for selected row it's a
19:10 - index path identifying the row of the
19:13 - selected row so we're just going to make
19:16 - sure that this is not nil so guard that
19:18 - this is not nil else
19:24 - else return and then we're going to get
19:28 - a reference to the video that was tapped
19:29 - on let video let's selected video let's
19:33 - say is equal to videos and the index is
19:38 - going to be this index path here and
19:40 - because we've checked that it's not nil
19:42 - we can put it in here force unwrap it
19:46 - and grab the row so that is that gives
19:51 - us the selected video next we have to
19:53 - get our reference to the detail view
19:54 - controller and we can get that through
19:56 - the segue property or parameter up there
20:00 - so segue destination you can see returns
20:04 - the view controller that the segue is
20:07 - going to but it doesn't know what type
20:09 - of view controller it is so we're gonna
20:12 - have to cast this as a detailed view
20:15 - controller we have to tell tell the
20:18 - system that that's what it is so let
20:20 - detail VC equals the destination view
20:24 - controller has a detail view controller
20:26 - and then we're going to set that
20:28 - property detail VC that video is equal
20:31 - to selected video and that is how we are
20:36 - going to pass the selected veil over to
20:39 - the detail view controller for display
20:40 - all right so let's rebuild this project
20:43 - and run it and see it in action all
20:47 - right so clicking this crashes the app
20:51 - ok so let's take a look at what's
20:54 - happening could not instantiate this non
20:56 - class ok so it turns out that even
21:00 - though it's not throwing an error in
21:05 - here we have to add this framework so
21:10 - let's go ahead and add it
21:14 - and let's try to build the project and
21:19 - run it again all right there we go
21:25 - you can see there's the video right
21:27 - there this is a scrollable thumbnail
21:29 - sorry description we've got the date
21:33 - we've got that when you hit play it
21:39 - plays in here and you can even expand it
21:43 - and whatnot now we might want to change
21:47 - I think in my screenshots I had
21:50 - everything as sort of like a dark dark
21:53 - background so we can do that we can
21:56 - change that and the other thing is that
21:58 - when I dismiss the detailviewcontroller
21:59 - you can see that it's still selected
22:02 - here so this highlight when you click it
22:04 - you know I kind of want to get rid of
22:06 - that so I'll show you how to do that so
22:08 - let's go into the storyboard here and
22:11 - for the for the cell the video cell if
22:16 - you go into that attributes inspector
22:17 - under selection you can change it to
22:20 - none like that don't change the table
22:23 - view selection you know if you change it
22:26 - to no selection then you people won't be
22:28 - able to tap on a row so you want to be
22:31 - changing the video cell like the
22:33 - prototype cell change the selection
22:36 - style to none so that's takes care of
22:39 - that now if you want to make everything
22:41 - dark and gray like I did click on the
22:44 - root view let's change the background I
22:46 - think I picked I picked something like
22:50 - view flip side background color so so
22:54 - that was the great that I chose and then
22:57 - for the table view if you scroll all the
22:59 - way down to the table view background by
23:02 - default it's white you can change it to
23:04 - clear color and then for the video cell
23:08 - itself the background I also changed it
23:11 - to a clear color and as a result we have
23:15 - to change the text labels to white so
23:18 - for the title label you can change the
23:20 - color to white and then for the date
23:24 - label I think I chose a light gray so
23:27 - I'm just going to go
23:28 - with the light gray color and then same
23:30 - thing for the detailviewcontroller here
23:35 - the view change it to that flipside
23:40 - background color and then for these text
23:43 - labels in the detail view controller I'm
23:46 - going to select the title label and
23:50 - change that to white and the date label
23:53 - you can actually see your most recently
23:55 - used colors here so I'm going to select
23:56 - that light gray right there for this
23:59 - text view the color is going to be white
24:03 - but the background color is going to be
24:05 - clear so you scroll down you can see the
24:07 - background here it's going to be clear
24:10 - alright and you can also change the font
24:13 - size of the text view so we can go with
24:20 - a little bigger font like that so let's
24:24 - save it and run it take a look at how it
24:27 - looks right now alright cool now it's
24:32 - looking more like the preview that we
24:35 - did alright so now before we end off
24:39 - let's go ahead and check everything in
24:46 - and by now this should be pretty
24:49 - self-explanatory and you know when we
24:54 - build more of these one day builds we
24:55 - can get into the habit of doing this
24:57 - added detail view controller segue to
25:08 - detail and web view in detail view
25:18 - controller now one word of caution if
25:21 - you're working on a big team you
25:22 - definitely want to be a little more
25:23 - descriptive that I'm doing now I'm I'm
25:26 - sort of glossing over a lot of details
25:28 - yeah okay so
25:32 - we're gonna do that and we're done look
25:40 - at how far you've come I've mentioned
25:43 - this before but I think it's worth
25:45 - repeating
25:45 - just ignore for a moment the fact that
25:47 - this is a YouTube app the structure of
25:50 - the app the data flow the techniques and
25:53 - patterns that you've learned in this app
25:54 - they are all what I would consider
25:56 - essential to know and now you know them
25:59 - and now they're in your arsenal now we
26:01 - can definitely take this YouTube app
26:03 - further and we can definitely integrate
26:05 - in a deeper way with the YouTube API in
26:07 - the next video I'll give you a preview
26:09 - of the features that you can add to this
26:11 - app inside our CWC plus program but
26:13 - before that let me know how you would
26:15 - take this app further
26:16 - just leave me a quick comment below if
26:18 - you want my Xcode project you'll find it
26:20 - in the description below just remember
26:21 - you have to add your own YouTube API key
26:23 - into the constants file alright thanks
26:26 - for watching and I'll see you in the
26:27 - next lesson