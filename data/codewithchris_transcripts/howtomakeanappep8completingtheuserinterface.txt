00:06 - hello welcome to lesson 8 of how to make
00:09 - iphone apps with no programming
00:10 - experience in this lesson we're going to
00:13 - use what we learned about stack views
00:15 - and we're going to build our or card
00:18 - game user interface now what I have here
00:20 - is the Xcode project that we started in
00:23 - lesson 6 and all that we really did was
00:26 - add all the image assets into our asset
00:29 - library and in the main dot storyboard
00:32 - we added an image view the background
00:36 - here and we set it to be the background
00:39 - image and plus we added four constraints
00:42 - to anchor it to the four edges of the
00:45 - screen now in the previous lesson I
00:48 - showed you guys how to put a couple of
00:51 - elements into a stack view by
00:53 - highlighting them and then clicking this
00:55 - stack button here but we can also do it
00:58 - a different way so let me show you that
01:00 - in the object library down here I'm
01:03 - going to filter for stack view and
01:05 - you're going to get two results
01:08 - horizontal stack view and vertical stack
01:10 - view they're both actually the same
01:11 - thing just pre-configured differently
01:14 - for horizontal alignment or vertical
01:16 - alignment so if you remember what we
01:20 - talked about in the previous lesson
01:22 - about how we're going to arrange our
01:23 - elements onto our war card game UI all
01:28 - of the elements are in a vertical stack
01:31 - view so I'm going to choose vertical
01:33 - stack view and I'm just going to drag it
01:35 - into my view here and furthermore I'm
01:37 - going to make sure it's highlighted you
01:40 - can either click on the stack view it's
01:41 - invisible so it might be a little hard
01:44 - but in the document outline you can
01:45 - always click on stack view here and then
01:48 - I'm going to anchor it to all four sides
01:50 - of the view so I'm going to click pin
01:54 - and I'm going to highlight all of these
01:56 - four edges and I'm just going to change
01:59 - all of these to zero and constrain to
02:02 - margins is fine because there's going to
02:04 - be a top layout guide and a bottom
02:05 - layout guide that it's going to anchor
02:06 - to and down here it's going to say add
02:09 - four constraints
02:11 - so there it is it's anchored to the four
02:15 - edges and right now these orange lines
02:18 - mean that the rules means that what I'm
02:24 - seeing right now actually isn't what the
02:26 - auto layout constraints are specifying
02:29 - so in order to fix that I can make sure
02:32 - my stack view is highlighted then go
02:35 - down to here and update frames for all
02:39 - views and then you can see my stack view
02:42 - resizes itself to conform to the auto
02:45 - layout constraints I added so so far
02:49 - I've added eight auto layout constraints
02:52 - for is to anchor the background image to
02:54 - the four edges and the other four are
02:56 - anchoring the stack view to the four
03:02 - edges as well and then next I'm going to
03:04 - start adding things into this vertical
03:07 - stack view so let's go ahead and filter
03:09 - for image view this is going to be the
03:12 - logo I'm just going to pop it in right
03:14 - there and automatically the image view
03:16 - is going to resize to take up all of the
03:18 - space because if I highlight my stack
03:21 - view and go over to my right pane right
03:25 - here the alignment is fill and this
03:28 - alignment option specifies how my
03:31 - elements are aligned horizontally since
03:35 - this is a vertical stacking stack view
03:37 - all of the elements in this stack view
03:39 - are going to be stacked on top of
03:40 - another from top to bottom but the
03:43 - alignment will specify should they be a
03:45 - left aligned or centerline or aligned to
03:48 - the right and Phil actually stretches
03:50 - them so that they take up the whole
03:53 - space horizontally we're going to want
03:56 - to Center things and maybe later I'll
03:59 - show you what Phil looks like but you'll
04:01 - see that it looks quite wrong so we're
04:04 - going to want to Center all of the
04:06 - elements in our vertical stack view okay
04:09 - so this image view down here let's
04:11 - highlight that and this is going to be
04:12 - our logo so make sure this is
04:14 - highlighted and then go over to the
04:17 - right hand side
04:18 - change that to logo and you can see now
04:23 - that it's stretched this
04:25 - the odd shape now we're going to want to
04:27 - specify a height and width for this guy
04:30 - so let's go over to the asset library
04:33 - let's look at the logo here and I'm
04:37 - going to click the 1 X 1 and if you
04:39 - scroll down on the right hand side
04:41 - there's a couple of tabs so make sure
04:42 - you're looking at this one it is 122 by
04:46 - 67 now what we could do is set the width
04:50 - and the height for this logo as to auto
04:54 - layout constraints but we don't want to
04:56 - do that because by doing that that logo
04:59 - is going to be that height and width no
05:01 - matter what screen size the users
05:02 - devices so instead of specifying the
05:05 - height and width for a logo we want to
05:07 - specify an aspect ratio and we're going
05:09 - to let the auto layout system decide
05:11 - what the height and the width should be
05:13 - for the logo as long as it follows that
05:15 - aspect ratio ok so I'm going to
05:18 - highlight the logo here I'm going to go
05:20 - down to this pin menu and I'm going to
05:23 - select aspect ratio I'm going to add
05:25 - that one constraint now if you look at
05:28 - the logo it expands and it shows you the
05:31 - constraints that you added for that logo
05:33 - image and here we can see the aspect
05:35 - ratio is 61 to 358 now that's wrong
05:40 - because all it did was it took the
05:42 - current height and width and threw that
05:44 - into an aspect ratio we're going to want
05:46 - to change that so highlight that
05:48 - constraint and then go over to this tab
05:52 - right here in the aspect in the
05:54 - attribute inspector sorry and in the
05:57 - multiplier we want to change it to 122
06:01 - by 67 and that's a colon in between the
06:06 - first number is the width and the second
06:08 - number is the height because if you look
06:10 - at the constraint it's relating its
06:12 - saying that width equals the height so
06:14 - that's why this first number is the
06:16 - width and the second number is height
06:18 - that's the ratio okay I'm going to press
06:21 - Enter and immediately all of these red
06:24 - lines appear because it's telling us
06:26 - that this logo that we're seeing here
06:29 - isn't conforming to the rule that we
06:31 - just added
06:32 - now let's update all frames again so
06:35 - let's highlight logo and let's go
06:39 - Update frames let me try that again
06:41 - highlight the logo and update frames
06:44 - okay so I can't update frames and the
06:46 - reason for that is because it's already
06:50 - updated now you may be the asking hey
06:52 - Chris that's not right because we
06:54 - specified an aspect ratio of 122 by 67
06:57 - but that clearly isn't the case in fact
07:00 - look at the height it's greater than the
07:02 - width so why is that well the reason is
07:05 - because this stack view we anchored it
07:09 - to the top and the bottom and then we
07:11 - put in one logo so it's trying to
07:14 - stretch that logo to accommodate all of
07:16 - the space from the top to the bottom
07:18 - because this logo is the only element
07:21 - inside that stack view so we actually
07:23 - have conflicting auto layout constraints
07:25 - it can't satisfy both the stack view
07:30 - being it being the only element it's
07:32 - trying to stretch the whole thing at the
07:33 - same time as having this aspect ratio
07:36 - constraint right here can't satisfy both
07:38 - things now the next thing you might ask
07:41 - me is that Chris why is this logo why is
07:44 - it trying to stretch that logo to fill
07:46 - up the whole stack view well let's
07:48 - highlight the stack view and jump over
07:50 - to the right-hand side and take a look
07:52 - so for alignment its centered that means
07:55 - all of the elements inside this stack
07:58 - view they're going to be centered
08:01 - horizontally distribution is set to fill
08:04 - now this is the key here distribution
08:06 - means that for all of the elements
08:08 - stacked on top of each other in this
08:11 - vertical stack view how are they to be
08:14 - distributed and fill means that it's
08:17 - going to fill up the whole space now
08:19 - there are a couple other options here
08:20 - now we can fill equally fill
08:22 - proportionally equal spacing and equal
08:25 - centering now I'm going to show you what
08:27 - those mean in a future lesson but for
08:29 - now I just want to bring to your
08:31 - attention
08:31 - why is trying to stretch this logo for
08:34 - the entire stack view because it's set
08:36 - to fill for distribution now this
08:39 - problem is going to solve itself
08:40 - once we add a couple more elements into
08:42 - our stack view so let's leave it like
08:44 - this for now I'm just going to collapse
08:46 - that in our document outline right there
08:50 - and what I'm going to do
08:52 - is the next element below the logo is
08:55 - the stack view containing the two cards
08:57 - remember so let's filter for stack view
09:00 - and now I'm going to add a horizontal
09:02 - stack view right underneath the logo so
09:06 - make sure in your document outline here
09:08 - that you can see the stack view
09:10 - underneath the logo now you can see the
09:13 - local automatically fixed itself why is
09:16 - that because we added a second element
09:18 - into our stack view and we didn't really
09:20 - specify any rules for the stack view
09:22 - it's now stretching that stack view to
09:25 - fill up the rest of the space and then
09:27 - for the logo it is following that
09:30 - constraint we added here for the aspect
09:32 - ratio to be 122 by 67 and you can see
09:35 - here 122 by 67 and the second element
09:39 - that stack view because we haven't
09:41 - specified any rules for it it's just
09:43 - assuming that it can stretch it could
09:46 - take up the whole space vertically like
09:47 - that what do we want to add into this
09:50 - horizontal stack view well we want to
09:52 - add two cards and we have image views to
09:55 - represent the cards so I'm going to
09:57 - search for image view here and I'm going
10:01 - to click and I'm going to drag this into
10:03 - our horizontal stack view you can see
10:06 - here now that we have an image view here
10:08 - and I'm going to change this image into
10:11 - back this is the card back image here
10:14 - again it's going to stretch it all the
10:16 - way from the top to the bottom to fill
10:19 - up the rest of the space in that stack
10:21 - view we're going to want to add an
10:23 - aspect ratio constraint for this card
10:25 - back as well so let's go into the assets
10:28 - and let me check on the back click on
10:32 - the 1x and these cards are 120 by 170
10:36 - that's the aspect ratio that we want to
10:38 - maintain let me show you a quick way to
10:41 - add an aspect ratio if you hold down
10:44 - control and you click on your card and
10:47 - then just drag down a little bit this
10:50 - blue line follows your mouse and then
10:52 - you can let go of your mouse on the card
10:54 - and you can choose aspect ratio and what
10:58 - it does is it adds a constraint to that
11:01 - element for the aspect ratio there now
11:04 - if you don't want to do that way you can
11:05 - do it the way we
11:06 - last time which is highlighting the card
11:08 - here and then going down to the pin menu
11:12 - and selecting aspect ratio and adding it
11:14 - through this menu so this is just a
11:17 - shortcut when I showed you now let's go
11:19 - ahead and change the aspect ratio the
11:22 - width is equal to the height according
11:25 - to the ratio 120 by 170 now changes that
11:31 - card to take up the entire height but it
11:36 - also changes a couple of other things
11:38 - now let's not worry about that for now
11:41 - because we still have a couple elements
11:43 - to add into the mix and it's only
11:46 - showing this way temporarily I'm going
11:48 - to add another uiimageview there and you
11:51 - can see it is horizontally stacked but
11:53 - it is so thin you can't really see it
11:56 - now let's change this image to back
12:00 - again now they're both back and this one
12:03 - I need also need to add and constraint
12:07 - to specify the aspect ratio that's so
12:10 - thin it's hard for me to highlight and
12:13 - do what I need to do so I'm actually
12:14 - going to do it here I'm going to select
12:18 - back I'm going to hold ctrl I'm going to
12:23 - click this back and drag a blue line
12:26 - here into itself let go and again select
12:29 - aspect ratio and that's another way you
12:32 - can add an aspect ratio so this guy is
12:35 - width equals height the multiplier is
12:39 - 120 : 170 like that and now I see red
12:44 - lines all over the place because it
12:45 - can't satisfy both constraints now
12:48 - before we go and try and fix that what
12:50 - we're going to do is we're going to add
12:51 - a button to our stack view so we have
12:54 - the logo we have the horizontal stack
12:57 - view that contains the two cards side by
12:59 - side right now they're not looking like
13:01 - the way they're supposed to be because
13:02 - it's trying to stretch out both all of
13:05 - these elements to take up the entire
13:07 - height of the stack view and it's just
13:09 - not able to satisfy all of these aspect
13:12 - ratio constraints and what we need to do
13:15 - a search for button because the element
13:17 - underneath the two cards is going to be
13:19 - a button
13:20 - and this time I'm going to actually drag
13:21 - it right here into the stack view from
13:25 - the document outline you want to be
13:27 - careful look at what I just did which is
13:30 - wrong I tried to drag the button into
13:32 - this stack view but I accidentally put
13:36 - it into this stack view with the two
13:38 - cards so I'm just going to move it out
13:41 - I'm going to drag it move it out like
13:43 - that now you can see that I have the
13:46 - logo I have the horizontal stack view
13:48 - with the two cards and I have the button
13:50 - and now everything looks good
13:52 - because what it's doing is the local is
13:55 - conforming to the aspect ratio
13:57 - constraint the two cards are able to
14:00 - conform to that constraint 120 by 170
14:03 - and furthermore the two of them are
14:05 - side-by-side and then this button the
14:07 - third element in our vertical stack view
14:09 - is taking up the rest of the space so
14:12 - that's fine let's fix something real
14:14 - quick here in our card container stack
14:16 - view I'm going to highlight that and go
14:18 - over on the right-hand side here under
14:21 - the space singer I'm just going to put
14:22 - 40 so it spreads out the two cards like
14:25 - that now for the button I'm going to
14:28 - highlight it here in the attribute
14:30 - inspector I'm going to go down to image
14:32 - and I'm going to change that to deal
14:36 - button and the button text is right
14:39 - beside that so I want to get rid of this
14:40 - button text here by deleting that now we
14:45 - just have to deal button and it's taking
14:47 - up the rest of the space finally we have
14:50 - the horizontal stack view that contains
14:53 - the score labels so I'm going to search
14:55 - for stack view again and this time we're
14:59 - going to add an horizontal stack view to
15:01 - the bottom like that and then what I'm
15:04 - going to do is I'm going to add two
15:06 - vertical stack views into this one okay
15:09 - so drag a vertical one in there and
15:13 - another vertical one I'm going to do it
15:16 - here actually just make sure you have
15:19 - this stack view this is the horizontal
15:22 - stack view let's label it it's a good
15:24 - practice to if it's starting to get
15:27 - really complicated start labeling your
15:30 - stack views and your elements so you
15:31 - know what
15:32 - choose which so this stack view is a
15:37 - score label let's just color the score
15:41 - label stack views stack view and this
15:46 - left-hand one is going to be let's call
15:48 - it left score labels right score labels
15:57 - and for their cards so let's call this
16:00 - one left card and let's call this one
16:06 - right card and this one let's call it
16:09 - card stack view all right so now
16:13 - everything's labeled properly and we can
16:15 - see now each of these stack views this
16:22 - is a little inconsistent actually let's
16:24 - label this left score label stack view
16:29 - let's call this one right score label
16:34 - stack for you and I'm going to add a
16:38 - couple labels into them so let's search
16:40 - for label I'm going to drag it directly
16:42 - into the stack view see make sure you're
16:46 - dragging it make sure you're dragging it
16:49 - into the stack view like that I want it
16:54 - to be inside this left score label stack
16:56 - view just going to drag another one
16:58 - there inside alright so
17:05 - there we have a total of four labels you
17:09 - can see the four down here like that
17:11 - okay so let's configure the labels so
17:14 - for this label I want it to say player I
17:18 - want the color to be white and let's
17:21 - change the font size to be a little
17:25 - bigger here let's change it to let's say
17:28 - 20 for this one on the right I'm going
17:33 - to change that to CPU I'm going to
17:37 - change the color to white I'm going to
17:40 - change the size to 20 now for the player
17:45 - score label like the one for the actual
17:48 - score I'm going to just put zero to
17:53 - start I'm going to change that to be
17:55 - white and this one I want to be a bigger
17:57 - font size I'm going to put let's say 40
18:02 - okay so for the CPU one I'm going to do
18:06 - the same start off at zero change it to
18:09 - white and set the font size to 40 like
18:15 - that now it looks a little weird because
18:18 - we haven't finished configuring it for
18:21 - this left score label stack view the one
18:23 - that contains the player and the zero I
18:25 - want to align it like that Center it and
18:30 - do the same for the right score label
18:32 - I'm going to Center it and then for the
18:35 - score label stack view I'm going to add
18:36 - some space in between it I'm going to
18:39 - say that it is let's say 100 okay in
18:44 - between the two and it's not it's not
18:48 - really aligned properly here so the
18:51 - stack view let me see if I can change it
18:54 - so that this button is not taking up so
18:57 - much space here I am going to highlight
19:01 - the score label stack view and change
19:03 - the alignment from fill to top so it's
19:06 - going to try to top align the two stack
19:09 - views here and now you can see the
19:11 - buttons all squished up there but that's
19:14 - fine because I do want this stack view
19:16 - with the labels to take up the
19:18 - meaning space so I'm going to highlight
19:20 - the the main stack via the one that is
19:23 - vertically stacking everything and we're
19:25 - going to add some spacing in between all
19:27 - of the elements let's say 30 okay so we
19:31 - have a UI that looks pretty much like
19:33 - what we want now I do see a red little
19:37 - indicator here which indicates an auto
19:39 - layout constraint error so let me click
19:42 - that red note and see what it says so
19:46 - it's telling me that the Left score
19:48 - label stack view need constraints for X
19:50 - position or width and same thing for the
19:54 - right score label stack view it doesn't
19:56 - know how to position them horizontally
20:00 - because it doesn't have the x position
20:02 - or the width now we can easily fix that
20:06 - if we highlight the stack view
20:07 - containing both of them and instead of
20:10 - distribution instead of saying that fill
20:13 - because fill will just put the elements
20:15 - into the stack view and each of them
20:17 - will take up as much space as it needs
20:18 - it doesn't have enough information to do
20:21 - that because it doesn't have a width for
20:24 - these guys right here so instead I'm
20:26 - going to tell it to fill equally so it's
20:29 - going to give equal space to each of the
20:31 - elements inside of it so when I say fill
20:34 - equally it's just going to divide what
20:36 - space it has inside that's tacular and
20:38 - give half of it to this element and half
20:41 - of it to this element and you can see
20:43 - here that the red note is gone let's
20:47 - take a look at this interface on
20:49 - different devices so right here I'm
20:50 - looking at the 6s plus that's the iPhone
20:55 - 6
20:55 - that's the iPhone S II and this is the
20:59 - iPhone 4s so for all of them I can still
21:02 - see all of the elements which is good
21:04 - one thing that I know is not working is
21:08 - the landscape orientation so you can see
21:10 - here that we're kind of running out of
21:12 - space it doesn't have the deal button or
21:16 - the score labels in order to fix this
21:19 - we're going to have to add specific
21:21 - rules for this specific orientation in
21:24 - other words these rules would only take
21:26 - effect under this orientation so you can
21:30 - see the same problem occurs
21:32 - across all the devices this one is even
21:35 - missing the deal button on the success
21:36 - however for this app I'm going to leave
21:39 - it only in the portrait orientation
21:41 - because we're going to learn step by
21:43 - step and this is your first semi
21:45 - complicated UI in the future apps we're
21:48 - going to take a look at both
21:49 - orientations and you're going to be
21:52 - ready for it
21:53 - so in order to confine this app to just
21:55 - this portrait orientation we can
21:58 - actually go into the Xcode project
21:59 - properties here and under the general
22:02 - tab here under the device orientation
22:06 - we're going to uncheck the landscape
22:09 - ones okay so in our main storyboard
22:13 - let's go back here if I try to run this
22:15 - now I have iPhone se let's run the
22:19 - project you're going to see that even if
22:24 - we flip it to landscape orientation it's
22:27 - still going to maintain a portrait
22:30 - orientation so here we go we have our
22:35 - interface here which looks good nothing
22:38 - happens when we click the button and if
22:40 - you hold down command and press left or
22:42 - you press right you're going to be
22:43 - rotating it to landscape just like I'm
22:46 - doing here and you can see that the
22:48 - interface doesn't change because we've
22:50 - locked it to be portrait only now if you
22:53 - can't hold down command and left or
22:55 - right for any reason you can also go
22:57 - down to hardware and you can use these
22:59 - commands here rotate left or rotate
23:01 - right okay so congratulations you've
23:05 - built the war card game UI in the
23:07 - following lessons you're going to start
23:09 - learning about Swift code and how we're
23:12 - going to hook up these elements to make
23:14 - the app function thanks for watching and
23:17 - I hope to see you guys in the next
23:19 - lesson talk to you guys later bye
23:22 - you