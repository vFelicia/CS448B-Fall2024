00:00 - Okay, so let's face it,
00:01 - accessibility is one of the lesser known
or more overlooked topics when we're first
00:06 - learning about UI design,
and for that reason,
00:08 - we'll discuss everything you need
to know about it in this video.
00:12 - Hey, everyone, JZ here and welcome back
to Learning Design Design,
00:15 - the series where I share
my learnings on designing app UIs.
00:18 - Like many of you,
I'm also trying to become a better
00:20 - designer every day through
practice and study.
00:22 - So if you have an interest in design
and want to learn more about this field,
00:27 - then I hope I can inspire you
to join me in this journey.
00:30 - With that.
00:30 - Out of the way, let's
start Learning design.
00:34 - So for this video, we'll touch on several
things related to accessibility,
00:38 - but in general, we'll discuss what is
accessibility and why it's important
00:43 - and the steps you can take to make
sure that your UI will be accessible.
00:47 - So things like contrast size,
visual hierarchy, responsive design,
00:52 - and visual indicators and all
those sort of things.
00:55 - So we've put some chapters and time stamps
in the description below for your
00:58 - convenience and just
a little bit Disclaimer.
01:01 - This will only touch on accessibility
inside the Sigma workspace.
01:05 - So we'll be using some of the apps I've
designed over the past few months here
01:08 - at Google's Chris as our main
reference material for this video.
01:12 - So first things first, what is
accessibility in the world of UI design?
01:17 - Accessibility refers to making or
01:19 - designing a product that's usable
and comfortable for anyone to use.
01:24 - That means that the app can be used even
by people with physical challenges,
01:29 - people that don't have the latest and
greatest smartphone, among other things.
01:33 - So accessibility is important
because at its core,
01:37 - you're kind of like designing
an equal user experience for all.
01:41 - But apart from that, an accessible UI will
01:44 - mean that it's well thought out and looks
good and will be used by many people now,
01:50 - equal user experience for all
can be a very challenging feat.
01:53 - So what most apps and even beginners like
01:56 - us or independent app builders like us can
do is to make it equal for a target
02:02 - audience or a specific group of people,
or even as many people as we want, right?
02:08 - Because otherwise you'll have to shell out
resources that may not be available to us.
02:13 - Okay, so we get it right.
02:15 - Accessible UI is important.
02:16 - So how do we achieve it?
02:18 - Well, when designing a UI in Figma,
02:20 - there are several things
that you need to consider.
02:22 - So things like visual hierarchy,
02:24 - responsive design, text size,
and contrast and visual indicators.
02:28 - So these are just, I think,
the most important things that you can
02:32 - implement in Figma when
you're designing the UI.
02:34 - But there are still a lot of things
02:37 - that you can discover whenever you're
touching on accessibility features.
02:41 - But since we're beginners,
02:42 - these are the fundamental aspects
of designing an accessible UI.
02:48 - First is visual hierarchy.
02:51 - So when it comes to visual hierarchy,
the main rule of thumb is that the headers
02:55 - should be around twice the size
of the paragraph text.
02:58 - That way, we'll be able to make sure
03:00 - that information on the app screens
will be easily readable at a glance.
03:06 - So this would benefit those who have
03:08 - a compromised eyesight or permission,
or even those who are relatively new
03:13 - in your app, since they would immediately
identify the most important items,
03:18 - which would allow them
to navigate your app easily.
03:21 - So let me use the chat app as an example.
03:23 - So as you can see here,
03:25 - we have implemented some visual hire some
simple visual hierarchy in this app.
03:30 - So as you can see.
03:30 - The chat is big, the paragraph is small,
and some non essential or secondary
03:37 - elements are, of course,
less highlighted compared to this item.
03:41 - For example, Chris's name is, of course,
03:43 - in bold because it's more important than
the preview and all those sort of things.
03:47 - So apart from being the text hierarchy,
03:50 - there's also some visual hierarchy
in terms of the buttons.
03:53 - So if you watch our previous videos,
03:57 - I intended for the new chat button to be
04:00 - more emphasized than these chats
and contacts, but mainly because I want
04:05 - the user to proceed on making a new chat
or starting a new chat with their friends.
04:12 - So the new chat button is in the center,
and the size of this button is quite
04:16 - bigger compared to these
two buttons on the side.
04:19 - So as you can see this button,
the size of this button is an
04:23 - 89 X 82 in width and height, and this
one is by six, eight and 74 X 74.
04:30 - So as you can see.
I implemented some visual hierarchy
04:34 - because this one is more important because
this is the main functionality of the app,
04:37 - and I want them to proceed on making
a new chat with their friends.
04:41 - Same goes for this, another
secondary UIButton at the top.
04:45 - So even if they are at the top alongside
Chris heading, I still made sure that they
04:49 - will be less emphasized
by using a different color.
04:52 - So the color is Gray.
04:54 - This means that it's less emphasized
04:56 - compared to the rest
of the UI in displays.
04:59 - So this is like the most
usual approach when creating a visual
05:03 - hierarchy for your app,
using colors to your advantage,
05:07 - using text size to your advantage just
to make sure that there's Chris structure
05:11 - and hierarchy for your visuals
and for your overall UI design.
05:16 - So next is responsive design.
05:18 - If you have a development background,
05:20 - responsive design is probably one
of the most familiar requirements when you
05:24 - build an app because not everyone
will have the same phone.
05:27 - Right?
So it's really important that this early
05:29 - on in the design process,
you're already able to plan out on how
05:33 - to make your UI scale for smaller, older
or bigger, basically different devices.
05:39 - If it were you, you'd probably hate it if
the app that you want to try isn't
05:44 - available to you just because
you have a small or old phone.
05:47 - So when you design and build one,
just remember about responsive design.
05:51 - Okay, so the good thing about implementing
05:54 - responsive design and code is that we have
an existing Xcode tutorial here on YouTube
05:59 - on how to make sure that your UI
will scale across different devices.
06:03 - So the link to that video is up there.
06:05 - If you want to learn more now in terms
06:07 - of design, when I'm designing a UI
and Figma, a few things I do to make sure
06:11 - that the app will scale properly is
to use a first, a proper grid system.
06:16 - Second is to use auto layout, and third
is to design in a smaller canvas.
06:21 - So I design in a smaller canvas because
06:24 - personally, it's easier
to scale up and scale down.
06:26 - And another reasoning is that if
06:28 - the ContentView of the app sits well
on a smaller screen,
06:32 - then it's likely that there won't be any
problems when it's viewed on a bigger
06:36 - screen because it will just expand
and all those sort of things.
06:39 - So here's an example again,
let me use the chat app as an example
06:43 - because this one is the most
recent one that I designed.
06:46 - So when I designed the code with Chris app
back early on this year,
06:50 - maybe in summer or maybe around August,
I did not implement some of the features
06:56 - that I mentioned, so I did not
implement all the layout here.
06:59 - I did not implement a more rigid structure
or grid system, but I still have the grid
07:06 - system here just not as efficient
or effective as the one in here.
07:10 - So as you can see when I Resize this,
it doesn't scale properly.
07:15 - Or as you can see.
The illustration is funky,
07:18 - but I think that's a Figma problem,
not the UI problem.
07:21 - So anyway, moving on to my
sample in the chat app.
07:24 - So as you can see.
07:25 - This one is in the size of an iphone ten,
which is not really that small.
07:30 - They are still smaller device.
07:31 - So I use the iphone ten as usual.
07:34 - Iphone ten size because it's like
07:36 - the common ground between Promax
iphones and the iphone mini.
07:40 - So for example, if you scale this up, this
UI will just expand to maybe like 1440.
07:48 - Let me check what's the size
of the iphone version pro Max 428 by 926.
07:53 - So let's say this one will scale to 428.
07:57 - Then as you can see,
it just goes like that.
08:00 - So the content is still intact.
08:02 - It just expands, stretches,
and it's still usable by our standards.
08:06 - So as you can see 428 and just like that,
08:11 - so it's still usable,
it still looks great.
08:13 - It still looks clean.
08:14 - And let's see if we can scale this
down to the smaller, not Android.
08:18 - Let's just stick to the iphones, but 320.
08:21 - The iphone Se is the smallest one.
08:24 - So 320.
08:25 - Let's just scale this down 320 as you can
08:29 - see once we reach that 358 pixels
with the UI just scales down properly.
08:36 - It doesn't mess up with the UI because
this is also the beauty of the auto layout
08:41 - feature that I implemented
when designing this UI.
08:44 - So when you have responsiveness in mind,
08:47 - you'll be able to implement this
during your design process as well.
09:01 - So as you can see.
The text is still intact.
09:04 - The UI is still usable, still pretty cool.
So as you can see.
09:07 - The home button and the status bar did not
scale properly, but it's okay because
09:13 - these are just system elements that we
don't need to tweak or anything like that.
09:19 - So the system elements will just respond
09:20 - accordingly based
on the device of the user.
09:24 - So that was an example, right?
09:26 - So I mentioned the auto
layout that I did here.
09:29 - As you can see.
There is an auto layout.
09:30 - This is an indicator that we
have an auto layout right here.
09:34 - And I also mentioned designing
09:35 - and a smaller canvas
because it's easier for me.
09:38 - It's easier to scale up and scale down.
09:40 - And I also mentioned the use
of a proper grid system.
09:43 - So as you can see.
I used a grid system here,
09:45 - but it's not as efficient or it's not
as effective as the one I use in here.
09:51 - Using a grid system is really important
09:53 - because this is the structure or
foundation of a responsive UI.
09:58 - So I discussed about all the important
10:00 - things that you need to know about grids
and guides in Sigma in our previous video.
10:05 - So give that a watch if you want to learn
10:07 - more about setting up our responsive
grid so that's it for responsive design.
10:12 - Next is text size and contrast.
10:14 - So one thing we should always do when
designing a UI is to ask ourselves if
10:18 - there is enough contrast between
the text and its background color.
10:22 - So good contrast helps those who have low
10:24 - vision since they'll be able
to read information a lot easier.
10:28 - Contrast is something that you can eyeball
whenever you're designing a UI,
10:33 - but if you want to make sure that you have
a good contrast between your text and your
10:37 - background is to use a plug
in in Figma called 811 Y or Ally.
10:43 - So to access that,
10:44 - just go to your community page and Figma
community and search for 811 wide.
10:51 - So this is a plug in plug in.
10:53 - So actually, there's a lot
of contrast checkers here.
10:56 - So as you can see.
10:56 - There'S tar there's contrast, there's
811 Y and all those sort of things.
11:00 - As you can see.
11:00 - Accessibility is a very serious
topic when it comes to designing UI.
11:04 - That's why we have a lot of plugins here
11:07 - whenever you search for a eleven Y,
but this is the one that I use.
11:10 - So a eleven Y color contrast checker.
11:13 - So I haven't been able to
11:16 - check on the other plugins here,
but a eleven Y is a basic color contrast
11:22 - checker that you can use to make sure
that your text and background color will
11:27 - be compliant to the Web ContentView
accessibility guidelines.
11:31 - So text is readable for users
by adhering to WCAG.
11:37 - So let's put this example,
make sure to install this.
11:40 - And as an example, let's select this
frame and let's open the plugin.
11:48 - And just like that, click on check.
And as you can see.
11:52 - It has a poor contrast ratio.
As you can see.
11:56 - It doesn't comply to the Double A
standards and Triple A standards.
12:00 - So as designers, the least that we can do
12:02 - is to make sure that our content or our UI
will be compliant to level two standards.
12:09 - So the two Ace double Ace
will be level two standards.
12:12 - So just like this until you reach that
check Mark on the level two standard.
12:17 - So don't worry if it's not level three
12:20 - compliance, because even some of the UI,
some of these aren't compliant aren't
12:25 - level three compliant,
but we should always try.
12:27 - At least the bare minimum will
be on the level two standard.
12:31 - So as you can see.
12:32 - Just let it to the right
and done, click on done.
12:36 - And now we have a more
contrasting chat bubble.
12:41 - Same goes for this one.
Let's check.
12:45 - As you can see for this bubble,
12:47 - all text meet level three
color contrast requirements.
12:50 - So this is the good thing about this
plugin because it easily tells you if your
12:55 - element or your UI does not
provide enough contrast for users.
12:59 - Sometimes we think that there's already
good enough contrast in our design.
13:03 - But then you check the color contrast
checker, and it turns out
13:06 - that the contrast aren't even
at least level two compliant.
13:10 - So that's a lesson that we just learned is
13:12 - to always use color contrast checkers
to achieve at least level two compliance.
13:16 - As you have witnessed a while
ago with this chat bubble.
13:20 - Now, one last practice that I can share
13:22 - when achieving an accessible UI
is the use of visual indicators.
13:27 - So the visual indicators are basically
13:29 - little graphic details
that elevate the user experience.
13:32 - Here is an example in our chat app,
13:35 - as you can see when we built the chat app,
if you watch our chat mini course,
13:41 - I mentioned the implementation of this
small visual indicators that basically
13:49 - communicates that the user
is indeed in the chat page.
13:55 - So if the user is in the contacts page,
then this visual indicator will be
14:00 - in the contacts page,
something like that, just like that.
14:03 - So also another example is if this chat
14:07 - has not been read yet,
then this text will be in pure black or
14:12 - in a darker color,
because that's basically a visual
14:15 - indicator that the text
hasn't been read yet.
14:18 - And if it's already Bowen read,
14:20 - then the text will just be converted
to something like Gray because it no
14:25 - longer needs to be read or it no longer
needs to be emphasized for the user.
14:31 - So that's just a quick
example of visual indicators.
14:35 - So here's also another visual indicator I
implemented in the app bar of our CWC app.
14:43 - So as you can see the visual
indicators right here.
14:45 - Again, the learn page.
14:47 - So if they are in the home page,
this visual indicator will be transferred
14:51 - here and the color of this home page
will be in blue instead of Gray.
14:56 - Just like that because this is
the learn page of the CWC app.
15:00 - The Learn icon is highlighted in blue,
15:03 - and the indicator is also there
above that Learn button.
15:08 - So those are just little examples or
15:10 - simple examples of visual indicators
for achieving an accessible UI.
15:15 - So I consider visual indicators as very
15:18 - important when achieving an accessible UI
because it helps everyone understand what
15:23 - the button does or what
the current state of the app is.
15:27 - So sometimes colors like this 1 may not be
15:30 - enough to serve as a visual cue, so if we
remove this, the color may not be enough.
15:35 - So designing a visual indicator guarantees
that the user receives all the necessary
15:41 - information that they
need when using your app.
15:44 - So yeah, that's everything I wanted to
share when it comes to UI accessibility.
15:49 - Now, they may not be a comprehensive list
because there are some more advanced
15:53 - practices that you should know
as you progress in this field.
15:57 - But as a beginner, I think these are just
a few of the fundamental approaches
16:02 - that you need to take note of when
designing a UI or building an app.
16:07 - And by the way,
if you're interested in the chat app
16:10 - that I used to demonstrate in this video,
then be sure to check out the Chat app
16:15 - mini course that's currently
live at our CWC plus program.
16:20 - So in there, we teach you how to design
and code a chat app from scratch,
16:24 - so that's design and code lessons
links in the description.
16:27 - If you want to check it out and with those
things said, I hope be learned something
16:32 - like and subscribe if you did and leave
a comment, if you have any questions,
16:36 - suggestions or comments,
feedback and all those things.
16:39 - And again, thank you for learning design
16:41 - with me and I'll see
you in the next video.
16:43 - Bye.