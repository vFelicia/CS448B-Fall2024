00:00 - hello and welcome to lesson 3 of my
00:02 - Swift tutorial for beginners video
00:03 - series now that you know all about
00:06 - variables constants and data types it's
00:08 - time to start having some fun in this
00:10 - lesson we're going to talk about a
00:11 - staple construct that exists in all
00:14 - programming languages in some form or
00:16 - another and yes I'm talking about the if
00:18 - statement let me show you what they're
00:20 - all about so the reason I'm so excited
00:27 - to show you how to use if statements is
00:29 - because starting from now you're going
00:31 - to be able to write code that can make
00:33 - its own decisions you're gonna be able
00:35 - to write some app logic so why don't we
00:38 - start here with a constant and we're
00:41 - just gonna use a letter A we'll say a
00:43 - equals 10 and I'm going to print a
00:46 - string down here let me just open up the
00:50 - console so you can see something and I
00:52 - want to say and say a is less than 10 or
01:01 - how about is less than yeah other a is
01:05 - less than 10 now this is going to print
01:07 - regardless right because well first of
01:10 - all I have to run my playground so there
01:12 - we go a is less than 10 well this
01:15 - actually isn't true right because a is
01:18 - 10 so it's not actually less than 10 and
01:21 - in this case I don't want this to show
01:24 - up well the problem is that that line of
01:29 - code is there right so it's going to be
01:30 - run and it's gonna show up what we can
01:33 - use here is an if statement so we can
01:36 - add and condition and we can say that we
01:40 - only want to run this print statement
01:42 - based on some sort of condition that we
01:45 - can test so let's see how we can do this
01:47 - with an if statement so it all starts
01:49 - with the if keyword followed by a space
01:51 - and then your condition which are going
01:54 - to test I'll show you how to write that
01:56 - condition in just a second but for now
01:59 - let's continue with the rest of the if
02:00 - statement then you're gonna have a space
02:02 - and then you're going to have a set of
02:04 - braces or some people call it curly
02:07 - brackets inside those braces you're
02:10 - going to have the code that is only
02:13 - going to be run if the condition equates
02:16 - to true if that condition turns out to
02:20 - be false then the code inside of your
02:22 - braces will not be running so now let's
02:25 - jump back to the playground and see this
02:26 - in action so I'm going to use the if
02:28 - keyword here followed by a space and the
02:31 - condition that we want to test is is a
02:35 - less than 10 right so we're going to do
02:37 - a and this is the less than operator
02:41 - it's going to check is the left side
02:45 - less than the right side so on the left
02:48 - side we've got 8 on the right side we're
02:50 - going to put 10 right followed by a
02:51 - space and then we're gonna open up an
02:54 - opening brace and I'm going to go under
02:58 - the print statement and close that brace
02:59 - and press tab here so we've got our line
03:05 - of code inside of an opening and closing
03:08 - brace and this is our condition here so
03:11 - that actually doesn't matter if you want
03:13 - to put your brace down here or up here
03:15 - to make sure there's a space in between
03:18 - your opening brace and your condition
03:20 - now let's try to run our code and press
03:23 - this blue button here this time and you
03:26 - can see that now the console is empty so
03:29 - what happened here was that it checked
03:31 - the condition a is less than 10 and
03:33 - because a is 10 it's clearly not less
03:36 - than 10 the condition equated to false
03:39 - and so it didn't run the code inside
03:42 - here now why don't we make that
03:45 - condition true now all I need to do is
03:49 - say is a less than or equal to 10 in
03:53 - that case this condition would be true
03:55 - all right let's press run and then you
03:59 - can see it printed down here all right
04:01 - so that's really cool because now you
04:02 - can write code that can be run based on
04:05 - a condition however oftentimes we've got
04:09 - multiple choices that can be made like
04:11 - for example do you want a Big Mac or do
04:13 - you want chicken McNuggets so we're
04:16 - gonna do this using another feature of
04:19 - the if statement called an else if
04:20 - Clause let me show you how that works so
04:23 - right underneath the closing brace of
04:26 - your if statement you can put the
04:28 - keyword else space if and then you would
04:31 - have another condition then followed by
04:34 - another set of braces now what's going
04:37 - to happen here is that it's going to
04:39 - check your first condition in your if
04:41 - branch if that happens to be false it's
04:44 - going to skip right down and it's going
04:46 - to check the condition in your else if
04:48 - branch if that also happens to be false
04:51 - then it's just going to skip again and
04:54 - it's not going to do anything however if
04:56 - one of those conditions were true then
04:58 - it would run that branch of code and
05:00 - keep in mind it's only ever going to run
05:02 - one branch of code so imagine yourself
05:05 - standing in the middle of crossroads
05:08 - there's two paths one on your left and
05:10 - one on your right there's only one path
05:13 - you can go down right so that's kind of
05:15 - like how the if statement works except
05:18 - that it evaluates the conditions from
05:20 - top to the bottom so the first condition
05:23 - that is true it's going to run that
05:25 - block of code and then it's just going
05:26 - to ignore everything under that if
05:28 - statement so let's jump back into the
05:30 - playground and let me show you how this
05:32 - works so we can say something like let's
05:35 - make a 20 now alright so if we've run
05:41 - this code right here that's not going to
05:43 - run because it's false now we're going
05:45 - to use else space if space and let's say
05:50 - is a greater then 15 and then I'm going
05:56 - to print a is greater than 15 right so
06:02 - if you run this if statement what would
06:04 - you expect to happen it would evaluate
06:07 - this right and since that's false that's
06:10 - going to skip down and it's going to
06:12 - check this which happens to be true and
06:15 - it's gonna print that so let's give that
06:17 - a run we've got a is greater than 15
06:20 - printed down here now let me show you
06:22 - something else what if a was 5 and then
06:28 - we changed this condition like that so
06:32 - this condition test is a less than or
06:34 - equal to 10 and this one is is a less
06:37 - than 15 they're both true right
06:39 - I guess I'm gonna have to change this to
06:42 - or us it doesn't make sense so that both
06:45 - of these conditions are true what would
06:47 - you expect to happen when I run my
06:49 - playground right here well it evaluated
06:54 - this condition which happened to be true
06:55 - so it jumped into here this fork of the
06:59 - road right and it executed that branch
07:01 - of code and it ignores everything else
07:04 - it doesn't check the second condition at
07:06 - all so that's really something to keep
07:09 - in mind so another cool feature of the
07:11 - if statement is that you can stack these
07:13 - elsif clauses if you've got more things
07:16 - to check more conditions to check you
07:19 - can just add them to the bottom like
07:21 - that so if a is greater than you know 30
07:24 - I'm just making stuff up at this point
07:26 - but you can keep going and keep going
07:29 - the only thing is that you don't want to
07:31 - make it too too long there is actually
07:33 - another kind of decision tree sort of
07:37 - structure that you can use it which I'll
07:39 - tell you in the next lesson but in this
07:41 - one just keep in mind that you can check
07:45 - multiple conditions but you don't want
07:47 - to abuse it now I want to tell you about
07:50 - this last feature of the if statement
07:51 - which is the else clause so the else
07:55 - Clause is kind of like a catch-all
07:57 - bucket if none of the conditions at the
08:01 - top evaluate to true it's going to keep
08:04 - checking from the top down right if none
08:06 - of the conditions above the else branch
08:08 - is true then it's just gonna end up
08:11 - executing the code inside of the else
08:14 - branch so the way you include this else
08:17 - branch in your if statement is you use
08:20 - the else keyword and then you just open
08:22 - a set of braces there's no need to
08:24 - specify a condition because remember the
08:27 - point of the else branch is to execute
08:29 - some code just in case nothing above it
08:32 - got executed so let's jump back to the
08:35 - playground and take a look so we've got
08:37 - a is less than 10 a is less than 15 and
08:40 - a is greater than 30 well there's a gap
08:43 - right in between 15 and 30 so if I said
08:46 - something like you know a is equal to 25
08:48 - and I ran the code right here nothing
08:52 - would execute
08:53 - because none of this is true let's just
08:56 - print something here print a is greater
08:59 - than 30 all right
09:03 - so nothing gets executed right here but
09:07 - if I add an else branch right open up a
09:11 - set of curly brackets or braces here it
09:18 - is something else so why don't we give
09:23 - that a run and you can see that indeed
09:26 - it falls into this catch-all branch of
09:30 - code so now I've shown you all the
09:32 - basics of the if statement however it
09:34 - can get a lot more complex because your
09:36 - conditions inside your if and else if
09:39 - branches can get really complex let's
09:42 - say we introduce another variable here
09:45 - let B equals 10 you can start to change
09:49 - these conditions together so for example
09:52 - if I wanted to check that a was less
09:54 - than 10 and also that B is greater than
09:56 - 5 and I want both of these conditions to
09:58 - be true in order for that branch to be
10:01 - executed I can use the double ampersand
10:04 - symbol which represents that I want both
10:07 - of those conditions to be true in order
10:10 - for that branch to be executed so let's
10:13 - do B is then I say greater than 5 or
10:15 - less than 5 I think less than 5 and this
10:20 - actually would not be true right because
10:23 - a is 25 and B is 10 so it's gonna skip
10:26 - here so why don't we modify this a
10:28 - little bit why don't we say a is less
10:31 - than 10 and B is greater than 5 so while
10:35 - this part is true let me just run this
10:39 - and I'll show you what the output is
10:41 - right it still falls into here why well
10:45 - although this is true this is not true
10:49 - and when you use this double ampersand
10:51 - sign right here you're basically saying
10:54 - that you need both of those conditions
10:56 - to be true in order for the whole
10:59 - condition to be evaluated as true
11:01 - however if you don't care and you only
11:04 - want one of those
11:05 - dishes to be true you know either-or
11:07 - then you can use the or operator which
11:11 - is actually a set of double pipes I
11:14 - don't know if they're called pipes but
11:16 - this key is on on my keyboard at least
11:18 - is above the return key and you have to
11:22 - hold shift to get them so double pipes
11:24 - will give you the or operator and let me
11:27 - run this code to show you what that
11:30 - looks like so we come into here and
11:33 - execute this now this this statement is
11:36 - a little bit misleading now so I'm just
11:40 - gonna call that branch one branch to
11:47 - branch three and let's say I'm say
11:54 - catch-all all right so I can run that
11:56 - and show you that this gets printed
11:59 - because we're using the or operator
12:03 - either if either a is less than 10 or B
12:08 - is greater than 5 then we're good we're
12:10 - gonna execute that branch and that's
12:11 - exactly what we get here branch 1 now
12:15 - I'm going to blow your mind further
12:17 - because we can further chain these
12:19 - things so what you can do is you can
12:22 - wrap this condition right in a pair of
12:26 - parenthesis like this and then you can
12:29 - say and let's say we've got a third one
12:36 - and let's say we want either B is
12:42 - greater than 5 or a is less than 10 and
12:46 - you know C is equal to 1 right and if we
12:52 - run that it would come into here because
12:56 - this part evaluates the true and this
13:01 - also evaluates to true now we can even
13:05 - go further and we can start wrapping
13:07 - that in a pair of parenthesis and you
13:09 - can test as many things as you want and
13:10 - you can build this massive condition but
13:12 - just keep in mind that the more things
13:14 - you put in there
13:15 - the more complicated it's gonna get and
13:17 - the harder it is for anyone to
13:20 - understand I want to draw your attention
13:22 - to one thing though and that is this
13:25 - equality operator here when we're
13:28 - testing equality we don't use the single
13:31 - equals operator here because remember
13:33 - that's for assignment when you do that
13:36 - you're trying to assign one into the
13:40 - constant C when you want to test for
13:43 - equality you use double equal sign and
13:46 - you when you want to test for inequality
13:48 - you can use exclamation mark equals and
13:52 - that is testing that C is not equal to
13:55 - one so if I run this code right here I
13:58 - would get catch-all reason is because
14:01 - although this evaluates to true this
14:06 - does not evaluate to true and because
14:10 - we're using the end operator there we
14:14 - need both sides of that to be true now
14:18 - if I change this to an or and I ran it
14:21 - we would get French one because even
14:24 - though this isn't true this is true so
14:27 - it's kind of a little bit of logic there
14:30 - which is fun to do and it takes a little
14:33 - bit of practice to wrap your head around
14:34 - now what I wouldn't do highly highly
14:37 - recommend that you do not do this is
14:39 - don't memorize these key words don't go
14:42 - and try to memorize all I need the if
14:44 - keyword I need a condition here all the
14:46 - operators I can use don't do that
14:49 - because I'm gonna introduce more
14:51 - keywords to you and more syntax to you
14:54 - and it's not going to be fun for you to
14:56 - try to memorize it and it's not
14:58 - practical I've talked all about being
15:01 - practical and what I want you to do
15:04 - instead is spend 30 minutes take a look
15:07 - at the worksheet for this lesson try out
15:10 - the if statement on yourself on a
15:11 - playground and in 30 minutes of learning
15:14 - you're going to learn a lot more and
15:17 - it's gonna sink into your head a lot
15:19 - more you're going to remember it a lot
15:20 - more than it would if you had try to
15:24 - memorize this so how to recommend that
15:26 - do instead of trying to memorize
15:29 - remember I have a swift cheat sheet and
15:31 - worksheets for you to practice what
15:33 - you've learned in today's lesson I
15:34 - highly recommend you go through that
15:36 - because I don't want you to make the
15:38 - same mistake that I did when I first
15:40 - started now let's do a quick recap you
15:42 - learned that you can use the if
15:43 - statement in order to execute code based
15:46 - on a condition you also learn that you
15:48 - can use the else if Clause to specify
15:51 - alternative branches of code to run
15:53 - based on other conditions and finally
15:55 - you have the else Clause to run some
15:58 - code if all of the conditions above it
16:00 - are not met now one key thing to
16:02 - remember is that the conditions will be
16:05 - checked from top down and the first
16:07 - condition that is true that's the branch
16:09 - of code that is going to be executed and
16:11 - the rest of your if statement is going
16:13 - to be ignored now if you haven't already
16:15 - make sure you hit that subscribe button
16:17 - below to support the channel alright
16:18 - great job on this lesson just click over
16:20 - to the next one and we'll talk there