00:00 - hello welcome to learn Swift for
00:03 - beginners lesson 16 today you're going
00:05 - to learn about how to manage a
00:07 - collection of data in what's called an
00:09 - array if you're working with many pieces
00:12 - of data it would be hard to manage them
00:15 - with simply constants and variables so
00:17 - let's take a look at how a race can make
00:19 - our life easier alright let's get
00:21 - started now arrays are one of three
00:28 - collection types that are available in
00:30 - the Swift programming language for us to
00:32 - use and manage our data in this language
00:35 - guide you can see a diagram of this
00:38 - array on the far left side we're going
00:41 - to come back to this diagram in a second
00:43 - but first a definition so you can think
00:46 - of an array as a collection of data that
00:50 - is ordered by indexes now if that
00:53 - doesn't tell you too much let's jump
00:55 - right into a swift playground and I'll
00:58 - show you exactly how beneficial they are
01:01 - and also had to clear them and how to
01:03 - use them so first I'm going to delete
01:05 - this default variable here and we're
01:08 - going to create a couple of variables
01:10 - ourselves so let's say VAR a equals dog
01:14 - VAR b equals can't or C equals bird and
01:22 - now let's say I wanted to concatenate or
01:27 - add the word my in front of each of
01:29 - those values there so that I would have
01:32 - my dog my cat and my bird so I would
01:35 - have to do something like this I would
01:36 - have to go a equals my space plus a and
01:43 - this would result in a being my dog
01:47 - because we're adding the word mine with
01:49 - a space to a and a is dog and then we're
01:53 - reassigning that result into a again
01:56 - thereby overriding what was there before
01:59 - so now a is actually my dog I would have
02:02 - to repeat this for cat and I'd have to
02:04 - repeat this with Birk I can't even use
02:06 - what we learn in the previous lessons in
02:08 - regards to loops to make my life easier
02:12 - I'd have to write this
02:13 - three times for each of the variables so
02:15 - here's the perfect chance to use an
02:18 - array to organize this collection of
02:19 - data so in order to create an array with
02:23 - the data already in it
02:24 - we're going to open up two angle
02:26 - brackets or square brackets if you'd
02:28 - prefer and inside these two square
02:31 - brackets we put each piece of data
02:34 - separated by a comma so we have dog we
02:38 - have cat and we have bird so just like
02:43 - that we have an array with three pieces
02:45 - of data and if you remember what I said
02:48 - in the definition that arrays are a
02:51 - collection of data organized by indexes
02:54 - what do I mean by that well you can see
02:57 - that there are three pieces of data here
02:59 - so there's three distinct spots you can
03:02 - think of it the leftmost spot here the
03:05 - beginning is index 0 or spot 0 if you'd
03:08 - prefer to think of it like that the next
03:10 - one is index 1 and the last one is index
03:14 - 2 so arrays start at 0 and because there
03:18 - are 3 items here the indexes go from 0 1
03:22 - to 2 and now if I quickly bring up that
03:25 - language guide again you can see in this
03:27 - diagram that in this array there are 5
03:30 - items and so the index is 4 6 eggs is 0
03:34 - index for milk is 1 and so on until it
03:36 - which is 4 even though there are 5 items
03:38 - because it's zero-based ok so let's go
03:43 - back down here so this is great that we
03:46 - haven't know right here but we need some
03:47 - way to reference that array so actually
03:50 - what we do is we can create a variable
03:53 - let's call it D and we assigned this
03:56 - array or this collection of data into
03:59 - the variable D so now if I wanted to
04:01 - access dog for example I would write D
04:05 - and then I would write square brackets
04:07 - like that and in between the square
04:09 - brackets I would put an integer
04:11 - representing the index of the item that
04:14 - I want so let's say I want dog I would
04:16 - put 0 so you can see here I would get
04:19 - dog right and so we can print that out
04:22 - and that would print dog down here
04:26 - if I change the index to one then I
04:29 - would get cat instead now let's do an
04:32 - example where we have something like
04:36 - this just to duplicate that I would say
04:39 - let's say a equals my plus D 0 that I
04:49 - can do B equals my that's my cat and
04:57 - finally I would get my bird but then I
05:04 - mentioned that there was a better way to
05:05 - do it if we leverage what we learned in
05:07 - the previous lesson on loops well we can
05:10 - let's take a look at using for loops and
05:13 - simplifying our work here so remember
05:16 - for loops will loop a piece of code for
05:18 - a specified number of times and you can
05:20 - see here that I'm working with index 0
05:23 - and x1 index 2 so this becomes really
05:27 - easy I can say for remember the next the
05:31 - next piece of the for loop is a counter
05:34 - so no it's my variable to hold the
05:38 - current index and then you write in and
05:41 - then you write your range so I can write
05:43 - 0 0 sorry I mean 0 2 and this is going
05:48 - to loop from 0 to 2 so I think you can
05:51 - kind of see where I'm getting at what
05:54 - I'm going to do is print my plus D and
06:01 - inside here where I put the index
06:04 - usually I'm going to put counter and you
06:11 - can see here took the playground a
06:13 - little second but that's exactly what I
06:16 - expected to do here so in the first
06:19 - iteration of this for loop counter is 0
06:22 - right that's the starting range so 0
06:24 - gets past the knee here and I would get
06:27 - this printed out this is dog D at index
06:30 - 0 right is dog in the next iteration of
06:34 - the loop counter is 1 and so I'm
06:36 - actually accessing index 1 of my array
06:40 - so that's why I get cat and then finally
06:43 - it loops again and counters - and I
06:46 - would access this bird index here I want
06:49 - to show you another way to use your for
06:52 - loop with an array and that's simply to
06:55 - say for item in D so what this is going
07:02 - to do is it's going to loop through all
07:05 - of the items in the array D and in each
07:09 - iteration of the loop it's going to take
07:11 - that item or that piece of data and it's
07:16 - going to assign it to item so I can
07:19 - simply go like this so you can see that
07:28 - it gets printed out again right in the
07:33 - first iteration item is dog in the
07:35 - second iteration it's cat and the third
07:37 - it's bird so this is pretty simple way
07:41 - to write it and you can see that it
07:43 - saves a lot of work from doing it kind
07:45 - of one by one like this and one by one
07:48 - like this arrays in conjunction with
07:52 - loops really powerful stuff now with a
07:55 - race there's other cool things you can
07:57 - do let me just make some space here
08:00 - maybe I should delete this stuff you can
08:06 - actually declare an empty array so it's
08:09 - an array that would contain no data at
08:11 - first and the way you do that is just
08:14 - like storing things into a variable or a
08:17 - constant arrays can only store data of a
08:20 - certain data type that you specify so
08:23 - since it's an empty array how you would
08:26 - do it is you open up two square brackets
08:28 - you put the data type inside the two
08:31 - square brackets and that data type
08:33 - represents the type of the data that the
08:36 - array is going to store so I'm just
08:39 - going to put string here and then you
08:43 - end off with two round brackets like
08:45 - that and just like that now e refers to
08:49 - an array that is empty right now doesn't
08:52 - contain any data we
08:53 - the intention of storing string type
08:56 - data in this array now if you're going
09:00 - to create an empty array like this you
09:02 - better be able to add data to that array
09:05 - right so what makes arrays really useful
09:08 - is that you can add and remove data from
09:11 - that collection so I can add or remove
09:14 - from this collection right here I can
09:16 - add or remove from this collection here
09:19 - let me just show you how to do that
09:20 - there are a couple of different ways I
09:23 - can do something like this D plus equals
09:27 - to angle brackets like that again and
09:30 - let's say I wanted to add malleus and
09:34 - now my D array would contain four items
09:38 - as you can see here dog cat bird and
09:40 - mouse in fact I can even add two pieces
09:43 - of data at once comma and then here I
09:47 - can put a lull for example so it would
09:49 - add mouse and owl to that array so now
09:52 - my array has five items from zero to
09:56 - four right starts at zero one two three
09:59 - four make sure that you don't forget
10:03 - that plus sign right here because if you
10:05 - do that then essentially you're creating
10:08 - a brand new array with these two items
10:10 - and you're assigning it to D and you've
10:12 - just lost this data here so plus equal
10:15 - is for adding items now seeing this plus
10:21 - equals you might be tempted to use minus
10:24 - equals to remove items like this but
10:30 - that actually doesn't work unfortunately
10:32 - you can't remove items from the array
10:34 - like that what you have to do is the
10:37 - array actually has functions that you
10:39 - can call on it to remove items so you
10:41 - would say D and then you would press dot
10:44 - on your keyboard or the period key and
10:47 - out pops a list of functions that you
10:50 - can call on this array and using the
10:53 - append function is going to do exactly
10:54 - like this plus equal is it's going to
10:57 - add items into that array but let's look
11:00 - at the remove function so you have
11:03 - remove all which is going to remove all
11:05 - the items in our array
11:07 - but you can use this one here remove at
11:10 - and you can specify the index of the
11:13 - item you want to remove so if I put zero
11:15 - like that that's going to remove dog
11:18 - from my array so now it's only going to
11:21 - contain cat bird mouse and owl now what
11:25 - if I don't want to completely remove dog
11:28 - but I just wanted to change that element
11:31 - right there at index zero so let me get
11:34 - rid of this removed line you saw that
11:36 - you can access items in the array by
11:39 - doing that right putting in the index
11:41 - here well you can actually change the
11:43 - item you can change what is assigned at
11:46 - that index by typing d square brackets
11:50 - put in the index you want to change and
11:52 - using the equal sign to assign something
11:56 - new into that spot so here let's say
12:00 - turtle and that is going to now change
12:04 - your array if I print d 0 i'm going to
12:13 - get turtle instead of dog because i just
12:15 - changed it up here the last thing i want
12:18 - to point out is that arrays also you can
12:23 - check how many items are in there if you
12:26 - look at the count that's going to return
12:29 - the number of items in your rate that is
12:32 - sometimes useful when you want to use a
12:34 - for loop with a range and you don't know
12:36 - how many items are in the array you can
12:38 - use this array dot count and get this
12:41 - number here but just keep in mind that
12:44 - although D has five items right here the
12:48 - index of the last item is actually only
12:51 - four because the first item is zero it
12:54 - goes from zero one two three four right
12:56 - even though there are five items so just
12:58 - keep that in mind if you're going to use
13:00 - this array dot count in conjunction with
13:03 - a for loop or something like that okay
13:06 - so that's where we're going to end with
13:08 - arrays as you can see when you type
13:10 - array dot there are a lot of different
13:13 - functions with arrays that you can do
13:17 - what I've covered here in this lesson is
13:19 - enough for you to use a rate and
13:21 - leverage some of the main benefits of a
13:24 - race as we go on and we're building apps
13:27 - together you're going to be learning new
13:29 - ways to use a race but for now these are
13:31 - the main things you need to know about a
13:33 - race in order to start using them if you
13:36 - like this video please give this video a
13:38 - thumbs up please subscribe for more and
13:40 - I'll see you in the next lesson bye for
13:42 - now
13:44 - [Music]