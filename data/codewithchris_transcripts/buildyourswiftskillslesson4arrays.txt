00:00 - hello in this video you're gonna learn
00:01 - about something called an array and
00:03 - before I explain what it is I'm gonna
00:05 - pose a problem to you so that you can
00:07 - understand why we need it let's say that
00:10 - you have a class called deck which
00:12 - represents a deck of playing cards
00:13 - inside this class you want to put the
00:16 - data representing the cards let's say
00:18 - each card is represented by a string
00:20 - like this and in case you didn't know
00:22 - there are 52 cards in a deck of playing
00:24 - cards so if you were to keep track of
00:26 - those 52 strings
00:27 - you might start declaring variables like
00:29 - this well that's gonna get out of hand
00:31 - pretty quickly here's an even bigger
00:34 - problem what if you had to keep track of
00:36 - thousands of people in an employee
00:38 - database you can't just create a
00:40 - variable or constant to keep track of
00:42 - each employee Swift has some collection
00:45 - types that can be used to handle
00:46 - collections of data an array is one of
00:49 - these collection types let's see how we
00:51 - can use an array with our playing cards
00:53 - example rather than declaring a separate
00:56 - variable for each piece of data you can
00:58 - simply declare a single variable to keep
01:00 - track of a single array and the write
01:03 - has slots where you can store data each
01:05 - slot is almost like a mini variable that
01:08 - keeps track of a piece of data each slot
01:10 - is also given an index number starting
01:13 - from 0 to retrieve the data you simply
01:16 - ask the array to return the data at a
01:19 - specific index to keep track of data you
01:22 - can ask the array to use a specific
01:24 - index to keep track of that piece of
01:26 - data just like a variable if an array
01:29 - index is already pointing to a piece of
01:31 - data and you assign another piece of
01:33 - data to that index it's going to track
01:35 - your new piece of data
01:36 - let's stop tracking the old one all
01:39 - right now that you know the basic gist
01:40 - of what and the right is let's go into
01:42 - the playground and see how the Swift
01:44 - syntax looks alright so here we have a
01:47 - fresh playground
01:48 - and I'm going to declare a new array so
01:51 - you can see what the Swift syntax looks
01:53 - like so I'm going to declare a single
01:56 - variable let's just call this my array
01:59 - and I am going to assign to it and right
02:02 - you start by using two angle brackets
02:05 - like that in between those two angle
02:08 - brackets or square brackets you put the
02:10 - slots of your array each slot is
02:13 - separate
02:13 - by a comma so just by doing that I have
02:16 - two slots this first one would be slot
02:19 - zero and this one on the right side of
02:21 - that comma would be slot one so let's
02:24 - put our playing card data in here and
02:27 - instead of saying something like ace of
02:30 - clubs I'm just going to ignore the suit
02:31 - for this example and let's just put a
02:34 - string let's just call it ace right and
02:37 - in index number one I am going to put
02:40 - king so in my array right here I have
02:45 - two slots or two indices and this would
02:49 - be index zero
02:50 - and this would be index one and remember
02:53 - the comma separates the different slots
02:56 - and the two angle brackets indicate the
02:59 - start in the end of the array I can take
03:03 - this further I can do another comma and
03:05 - I can say Queen I can do another comma
03:07 - and I can say jack so now my array has
03:10 - one two three four items so four indices
03:14 - zero one two and three
03:16 - now in order to retrieve my data let's
03:19 - say I wanted to print out Queen the way
03:22 - I would retrieve Queen would be to type
03:26 - my array right because this variable
03:28 - keeps track of there right and I need to
03:30 - ask it for the piece of data in index
03:34 - zero one two and the way we do that is
03:37 - use the angle brackets again and then
03:40 - just simply put in two right there and
03:42 - let me just print that out so we can see
03:45 - it in the console so we get Queen if I
03:49 - put in array index 0 we would get ace
03:53 - now what would happen if I put in index
03:56 - 0 1 2 3 4
03:59 - there is no item at index 4 in fact
04:02 - there's no slot there so what would
04:04 - happen well it would get a crash and
04:06 - this error message is going to be very
04:08 - common because arrays are very prevalent
04:10 - in different classes and a lot of code
04:14 - and so if you're ever trying to access
04:16 - an item that is outside of the range of
04:20 - that array you're going to get index out
04:22 - of range and that's kind of what it
04:24 - means I just want to demonstrate that
04:26 - all right so let's change this back to
04:28 - zero for now now let's say I wanted to
04:32 - tell index 0 which right now is pointing
04:36 - to this string ace if I wanted to tell
04:40 - that index to track another piece of
04:42 - data well I could say my array and then
04:46 - square bracket 0 and I could assign
04:49 - another piece of data to it let's just
04:51 - say 10 okay and then now let's try
04:56 - printing my array 0 and you can see that
05:01 - the second time I print it the data at
05:05 - index 0 is actually 10 I've changed it
05:07 - using this statement now the cool thing
05:09 - about this is that you can also add
05:12 - items to the array so the array is a
05:15 - class itself it's got different
05:17 - functions and properties if you use dot
05:19 - notation you can use the append function
05:22 - and there are two different ones all
05:25 - right this one will append a complete a
05:28 - sequence which is for example another
05:30 - array or something like that if you want
05:33 - to append a single element then you can
05:35 - use this one so I'm going to pend 9 like
05:40 - that and now the array will actually
05:43 - have 5 items so now when I try to print
05:46 - out my array 4 I am going to get 9
05:53 - because remember even though there are
05:55 - five items arrays start at 0 so that's
05:58 - why the fifth item is actually at index
06:01 - 4 alright and also I can always use dot
06:06 - notation and access the count property
06:08 - which is going to return the number of
06:10 - elements in my array so I can print out
06:13 - that property and we would get 5 as
06:18 - expected now I mentioned before that
06:20 - each slot of your array is kind of like
06:23 - a mini variable in that each slot keeps
06:25 - track of a separate piece of data
06:27 - another way that arrays are similar to
06:29 - variables is that an array has a data
06:32 - type so just to jog your memory if I
06:36 - declare a variable like this a and I
06:38 - assign to it
06:39 - 10
06:40 - I cannot assign a string to that
06:44 - variable anymore because once I've
06:46 - assigned ten to it it's treating this
06:48 - variable as an int datatype variable so
06:53 - I can't assign a string type of data to
06:57 - that variable so in the same vein this
07:01 - array stores string objects right here
07:06 - right string datatype i cannot suddenly
07:10 - try to append an integer to that that
07:15 - just won't work so how did my array know
07:18 - that it is supposed to store strings
07:20 - because I didn't specify that anywhere
07:23 - well just like with a variable it can
07:25 - infer the type from the data that you
07:28 - assigned to it so here I've declared
07:31 - this array and I have put in these
07:33 - string values well it's going to assume
07:35 - that it is a string data type a right
07:37 - now one question you may have is what if
07:40 - you want to declare an array but you
07:43 - don't want to put elements in it
07:45 - initially like I have here well you can
07:49 - actually declare an array that is empty
07:51 - at first so let me show you how to do
07:53 - that I'm going to call this second array
07:56 - and let's say that this array also
07:59 - stores strings so you start with two
08:03 - square brackets or angle brackets and in
08:06 - between there we would normally put the
08:09 - elements of our array but instead if we
08:12 - want to do an empty array we are going
08:16 - to declare the datatype that that array
08:18 - should store and then we follow that by
08:22 - using these two rounded brackets now
08:25 - this looks very similar to creating a
08:27 - new object of a class right well that's
08:30 - exactly what you're doing here you are
08:32 - creating a new array object that stores
08:35 - strings so I cannot append say an
08:42 - integer to that and that's just going to
08:44 - cause an error because I've declared up
08:46 - here that this array stores strings so I
08:50 - have to append
08:53 - something like that now once you get
08:55 - used to using this append function to
08:58 - add elements into your array you can
09:00 - actually use a shorthand as well so let
09:02 - me show you that and that is the plus
09:05 - equals operator like that and normally
09:08 - you would use this to increment of an
09:10 - integer variable but in this case you
09:13 - can also use it to add new elements into
09:16 - your array so you cannot do something
09:18 - like this let's say I want to add
09:20 - another string to my array you can't do
09:25 - that you actually have to apply it to
09:28 - another array now this array could
09:31 - simply just store that single element
09:34 - and that would be fine or you could
09:38 - append two elements at a time right so
09:43 - now I've appended tests I've appended my
09:46 - string and another string so if I print
09:48 - out second array dot count it should
09:52 - have three items all right like that so
09:56 - oftentimes you're going to see this sort
09:59 - of notation as well and maybe sometimes
10:02 - it would even just be appending one item
10:05 - you still have to put these angle
10:07 - brackets around it because you have to
10:08 - use that operator and append an array
10:11 - essentially you're taking all the items
10:14 - in this array and appending it to this
10:17 - array right here on the left hand side
10:18 - now before we leave this playground let
10:21 - me just organize this code and add some
10:24 - comments so that you can download this
10:26 - playground and you can take a look at it
10:28 - as well so here we have declaring a race
10:32 - I'm just gonna call this one array one
10:35 - and then I will also have array two and
10:39 - this guy will be an empty string array
10:43 - and this would be accessing elements
10:53 - this will be adding elements so you
11:02 - could either use a pen or if there are
11:06 - already indexes that are existing you
11:09 - can assign one to a different one
11:12 - oh I change the name so all of these are
11:15 - errors now right one I'm cutting the
11:34 - number of items here all right and
11:40 - here's another example of adding
11:43 - elements this guy would be a rate two
11:51 - and
11:59 - you can actually also remove elements so
12:01 - I realized that didn't show you that so
12:09 - you can say array one let's say dot
12:14 - remove so you can actually just remove
12:17 - everything or you can remove the item at
12:20 - a particular index and that will
12:22 - actually shorten the array so if I say
12:25 - array one remove at zero
12:28 - you know I'm removing the first element
12:31 - then print array one dot count is going
12:36 - to be appended a bunch of stuff to it so
12:40 - I have zero one two three and then four
12:45 - I have five elements and then if I
12:49 - remove one then I'm left with four
12:51 - that's correct
12:53 - yeah alright in this lesson you learned
12:55 - about a race and how they can be used to
12:57 - store a collection of values you learned
12:59 - how to declare a race either with data
13:01 - or as empty you learned about how to
13:04 - assign data into an array how to access
13:07 - that data at a specific array index and
13:09 - also how to update the data at a
13:11 - specific index as well finally you
13:14 - learned how to remove data from an array
13:16 - I highly recommend that you download the
13:17 - worksheet below to get some extra
13:19 - practice with working with arrays also
13:22 - if you want to read the documentation
13:24 - for a race from Apple's official
13:26 - language guide I'll link to that below
13:28 - as well if you like this video please
13:30 - subscribe to my channel by hitting the
13:32 - subscribe button below and if you don't
13:33 - want to miss a single video make sure
13:35 - you tap on that Bell icon as well thanks
13:38 - for watching and I'll see you guys in
13:39 - the next lesson