00:01 - [Music]
00:05 - hello welcome to lesson four of the
00:07 - Firebase tutorial video series in this
00:09 - lesson we're going to be constructing
00:11 - the user interface for our messaging app
00:14 - so that we can uh list out all of the
00:17 - messages and also compose a new message
00:19 - to send to the Firebase database we're
00:22 - not really going to be doing anything
00:24 - with Firebase in this lesson since we're
00:27 - just constructing the user interface so
00:29 - feel free to skip this video If you're
00:30 - not following along and building this on
00:33 - your own machine but if you are
00:35 - following Along on your own machine and
00:37 - you want to build this out for yourself
00:39 - then you definitely want to check this
00:41 - video out so I'm going to start by
00:44 - taking our view controller and I'm going
00:47 - to embed it in a navigation controller
00:51 - so I'm just going to select the view
00:52 - controller embed in navigation
00:54 - controller and just to remind you guys
00:57 - I'm going to go a little bit fast here
00:59 - um like I said this video series um is
01:02 - not really geared towards beginners so
01:05 - uh you're going to have to know what
01:06 - navigation controllers are and table
01:08 - views and stuff like that if you haven't
01:10 - ever worked with that stuff before you
01:12 - might want to check out some of my uh
01:14 - beginner series material first uh also
01:17 - students of my beginner course will know
01:19 - how to do all of this stuff already so
01:22 - um you can check that out as well Okay
01:25 - so we've got a navigation controller
01:27 - it's naturally got a navbar there I'm
01:30 - going to place a table view in
01:33 - here and I'm just going
01:37 - to pin it I'm not going to constrain to
01:40 - margins but I'm going to make sure this
01:42 - is top layout
01:43 - guide and these are do view for that
01:50 - one it's all going to be zeros I'm going
01:53 - to add these four constraints and then
01:55 - hit this update frames button so this
01:57 - button they moved recently which caused
01:59 - a lot of confusion for people and there
02:02 - we have our table view going up to the
02:04 - nav bar we're going to want to add
02:06 - another view controller
02:10 - here just going to drag that out right
02:13 - there and this is going to be our
02:16 - compose view controller so right now uh
02:19 - there's no class for it so I'm going to
02:21 - create a new class new file Coco touch
02:25 - class this is going to be our compos
02:28 - view controller uh subclassing UI view
02:31 - controller language is Swift let's save
02:34 - it in the project folder like that drag
02:38 - this up there and then back in the
02:40 - storyboard I'm going to click
02:43 - on let me see if I can set the view
02:45 - correctly so we can see all of our view
02:48 - controllers more or less okay the second
02:50 - one that I added here I'm going to
02:52 - change its custom class to an instance
02:56 - of the compose view controller like that
03:00 - uh and then what we're going to
03:02 - do let's look for
03:05 - navigation uh let's look for button I
03:08 - want to add a bar button item here to
03:12 - the first view controllers uh nav bar
03:16 - and this
03:18 - item let's change it
03:21 - to uh compose actually instead of using
03:24 - the title you can use a system icon
03:27 - there there are some basic ones here and
03:31 - some of them may suit your needs so
03:32 - compose is definitely one that would
03:35 - suit our needs because clicking this
03:37 - button I'm going to hold down control
03:40 - drag into this view controller I want to
03:44 - go to that view controller when that
03:46 - compost button is tapped on and I want
03:48 - to present it modally like that and
03:51 - that's going to cause it to slide up now
03:54 - back here in this compos view controller
03:57 - uh let's add a nav bar
04:01 - navigation bar because it won't have one
04:03 - when it presents it modally just going
04:05 - to add a navigation bar like
04:08 - that like that and I'm going
04:12 - to restrict this guy to the top layout
04:15 - guide left and right it should be zeros
04:19 - so zero top left and right to add these
04:22 - three constraints click on update frames
04:25 - so there it goes and then I'm going to
04:27 - search for button again
04:30 - we're going to put a button right there
04:32 - on the right hand side this button is
04:34 - going to be save the post so I'm going
04:37 - to choose the icon like that for ADD and
04:40 - I'm going to add another
04:43 - button the left hand side here for
04:45 - cancel and I'm going to change the icon
04:48 - to trash to represent
04:50 - that okay so what we're missing is the
04:54 - text view in order to add the
04:58 - text I'm going to add a text view here
05:00 - to the composed view controller and
05:03 - let's pin it to all four edges get rid
05:08 - of constraint margins this should be
05:11 - relative to the navigation
05:13 - bar Zer all
05:16 - around this one I'm going to do to the
05:19 - view zero and then add four constraints
05:24 - click this button down here to update
05:25 - frames so there it goes I'm going to
05:28 - delete all of this
05:31 - text and for this
05:34 - title uh here you can change this to
05:40 - compose so now let's set up some of
05:43 - these elements that we've added to the
05:45 - storyboard um as IB Outlet properties so
05:48 - that we can access them through Swift
05:52 - Code let's click on assistant editor
05:55 - right here and that's going to show us
05:56 - the corresponding uh view controller for
05:59 - the view that we're looking at uh and
06:02 - right here we're looking at the compos
06:03 - view controller so that let's add the
06:05 - outlets for that first uh if we look at
06:08 - our composed view controller let me just
06:10 - try to slide it over like
06:12 - that get rid of that
06:17 - guy okay so here we have a couple of
06:20 - elements that we'd want to expose first
06:22 - thing is the text view hold down control
06:26 - um slide it over here as a as an outlet
06:29 - property just going to call it the text
06:31 - view like that so there's our text view
06:35 - second thing is we'd want to hook up IB
06:37 - actions to these buttons so that the
06:40 - user can tap on them and have it do
06:42 - something so I'm going to drag this plus
06:44 - button down
06:45 - here and change the connection type to
06:48 - action because we want to provide a
06:51 - function when it's tapped and not expose
06:53 - it as an IB Outlet so I'm just going to
06:56 - call it add post that and then here we
06:59 - can put in some code to execute and for
07:02 - the trash icon going to do something
07:04 - similar down here change the connection
07:07 - to action and I'm going to say cancel
07:13 - post okay
07:15 - and over here for our original view
07:21 - controller um the right hand side should
07:23 - change as soon as you tap on that in
07:25 - your storyboard if it doesn't just go up
07:27 - here make sure you look under automat
07:29 - itic select view controller if yours is
07:32 - on manual okay so here we don't need to
07:36 - expose um this button and create an
07:39 - ibaction for it because we've actually
07:42 - already linked up this segue for the
07:44 - button so when you tap on that it
07:47 - automatically shows this view controller
07:50 - modally because we've uh we've done it
07:53 - through the storyboard and created this
07:55 - segue right there what we need to do
07:58 - though is expose this table
08:00 - view so I'm going to hold down control
08:03 - click it and drag it over here and
08:06 - expose that as a table view IB Outlet
08:10 - property connect so there's the table
08:13 - view okay so let's set up some code here
08:17 - just to make sure that our table view
08:19 - works I'm not going to have time in this
08:21 - lesson to go through how a table view
08:23 - works and why we're doing what we're
08:25 - doing because it would take a lesson in
08:28 - itself so that's something that I'm
08:31 - expecting you to know going into this
08:33 - series here if you're not sure then um
08:36 - just Google table view tutorial in
08:38 - Google or check out my beginner course
08:40 - what I'm going to do here is um say that
08:43 - the view controller conforms to the
08:45 - table view delegate and the UI table
08:50 - view data
08:53 - source and then the viewed load you have
08:55 - to
08:57 - remember that you want to set the
09:01 - Delegate for the table view to self for
09:04 - the view controller here and the table
09:07 - view data source equals self as well now
09:11 - because the view controller conforms to
09:14 - these two protocols now we have to
09:16 - implement some of the table view methods
09:20 - so table
09:22 - view number of rows that's one we
09:25 - need and that's going to return the
09:28 - number of rows in our
09:29 - data we also need table
09:34 - view uh cell4 that's what I'm looking
09:39 - for cell for row at index path and this
09:43 - is going to return the table cell to
09:45 - display for any particular row so we
09:48 - need something to store the data for the
09:50 - table view so I'm going to create it up
09:52 - here as a property I'm going to call it
09:54 - the post data and right now for the time
09:58 - being it's going to be just some strings
10:02 - so I'm going to just say message
10:05 - one message two just so we can make sure
10:09 - that the table populates and is working
10:12 - properly so for number of rows we're
10:14 - going to return the post data. count
10:18 - this is an array of three
10:21 - strings and as for the table cell well
10:25 - back in the storyboard let's go back to
10:27 - the standard editor View back in the
10:29 - storyboard for this table
10:32 - view let's open up one prototype cell
10:37 - like that and we're going to have one
10:40 - prototype cell now now for this
10:42 - prototype cell uh let's give it a reuse
10:45 - identifier let's call it the post
10:48 - cell so that back in the view controller
10:52 - here we can say table view
10:56 - dot DQ reusable cell you can see here it
11:00 - returns an optional UI table view cell
11:03 - with identifier we just gave it a
11:06 - identifier of post
11:09 - cell so what I'm referring to is this
11:11 - prototype cell here post cell it's going
11:15 - to try to get a reusable instance of a
11:18 - post cell if there are no post cells
11:21 - that are available it's just going to
11:23 - create a new one so let cell equals that
11:27 - then I'm going to set the cell do textt
11:30 - label it's got uh label by default and
11:35 - it set it's text property to post
11:39 - data index path. row now index path is
11:44 - this parameter here and it tells us
11:46 - which Row the table view is asking for
11:49 - so I'm basically taking uh the data for
11:53 - the row that the table view is asking
11:56 - for and then lastly I'm just going to
11:58 - return return that cell so if I run it
12:01 - now let me see I got to return that
12:03 - because the cell may be an optional
12:07 - type let me run this app now we should
12:11 - see the table view populate with some
12:14 - data and furthermore we're going to be
12:17 - able to pop up that compose view
12:20 - controller uh but we can't quite dismiss
12:23 - it yet and I'll show you how to dismiss
12:26 - it okay
12:31 - all right so we've got our messages here
12:33 - but uh the table view isn't quite up to
12:37 - uh up to the section where I want it to
12:38 - be so we can move that up a little later
12:41 - I want to tap on compose here and it's
12:44 - going to pop up our new view
12:47 - controller so clicking these nothing
12:49 - happens right now because we didn't add
12:51 - any code but let's stop the app go back
12:55 - to the storyboard so in order to fix the
12:59 - table view being like that the problem
13:01 - is that the table view knows that this
13:03 - navigation view controller has this bar
13:05 - up here so it's actually leaving space
13:07 - to accommodate for that um you know how
13:10 - we position the table view to be uh
13:13 - flush with the top layout guide what
13:15 - we're going to want to do is instead
13:17 - position it to be flush against the top
13:19 - so that way that empty space that it has
13:21 - to accommodate for the navigation bar um
13:25 - it's going to go underneath so let's
13:27 - delete this top con straint here that we
13:30 - made for the table view let me
13:34 - delete delete that click on the table
13:37 - view we're going to add a new constraint
13:41 - to be relative to the view this time and
13:44 - make it zero add the
13:47 - constraint and update frames so now it's
13:50 - going to be flush with the top but that
13:52 - empty space is going to be covered by
13:54 - the
13:55 - Navar okay so now let's go back to to uh
13:59 - the compose let's Implement these two
14:02 - buttons here let's go to compose view
14:05 - controller and add post we're going to
14:07 - put a to-do
14:08 - here post the data to
14:12 - Firebase and then we're going to dismiss
14:15 - the popover and in order to do that
14:19 - we're going to get access to uh the view
14:22 - controller by
14:25 - using uh presenting view controller this
14:27 - has a reference to the view controller
14:30 - that presented this guy and we're going
14:33 - to call dismiss on it and this method
14:38 - dismisses uh the view controller that it
14:41 - presented so if if that makes sense
14:44 - presenting view controller refers to
14:46 - view controller oops shouldn't have
14:48 - double clicked it and calling dismiss on
14:51 - it is going to dismiss any pop overview
14:55 - controller that it
14:57 - presented true for animation and
15:01 - completion is nil and we're going to
15:03 - want it to do the same thing if the user
15:05 - cancels the
15:07 - post so let's run the app now and we're
15:10 - going to be able to take a look at the
15:12 - fixed table view as well as the add post
15:16 - and cancel post buttons so there you can
15:18 - see the table View and if we hit compose
15:21 - we're going to be able to either click
15:23 - this button or this button they do the
15:25 - same thing right now and that's going to
15:28 - dismiss it
15:29 - so that does it for the user interface
15:31 - for our messaging app and again if you
15:34 - got lost uh do check out the beginner
15:37 - stuff first and I'll also provide the uh
15:40 - download for this project in the
15:42 - description of the YouTube video however
15:45 - in that sample code I'm going to remove
15:47 - my Google Service info.plist uh so
15:50 - because it contains all of the config
15:52 - data for my app for my Firebase app uh
15:56 - you're just going to have to slide in
15:57 - your own uh Google service info pist
16:00 - okay so thanks for watching and in the
16:03 - next lesson we're going to explore how
16:06 - data is stored in the Firebase database
16:09 - okay so thanks for watching and I'll see
16:11 - you in the next lesson bye for
16:15 - [Music]
16:22 - now