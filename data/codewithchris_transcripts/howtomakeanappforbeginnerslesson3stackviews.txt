00:00 - hi welcome to lesson three of ten in the
00:02 - previous lesson you learned about Auto
00:03 - layout and Auto layout constraints in
00:05 - this video you're going to learn about
00:07 - staff views and how they're going to
00:09 - help you position elements while
00:10 - drastically cutting down on the number
00:12 - of auto layout constraints that you need
00:14 - to set by the end of this video you're
00:16 - going to have built this user interface
00:18 - if you went through the lesson two
00:19 - worksheet you might have noticed that
00:21 - this is what you built however you're
00:23 - gonna see that by using stack views
00:24 - you're going to be able to build this
00:26 - layout much easier and much faster let's
00:29 - start a brand new Xcode project make
00:32 - sure you're looking at io s and choose
00:34 - single view app let's click Next I'm
00:37 - going to call this app 3 and all of
00:41 - these details should be the same
00:43 - language should be Swift let's click
00:45 - Next and I'm just gonna save it on my
00:47 - desktop here right here where the
00:51 - project configuration screen is because
00:53 - we've got this node highlighted scroll
00:56 - down to deployment info and under device
00:59 - orientation we're gonna uncheck portrait
01:02 - and just have landscape left and
01:04 - landscape right because this UI is going
01:07 - to be a landscape view let's go into the
01:10 - storyboard and we're gonna click view as
01:14 - and let's just change it to landscape
01:16 - orientations more so that we can
01:18 - visualize what we are actually building
01:21 - here the next thing I want to do is
01:24 - let's click on the asset library right
01:26 - here and we're going to import the
01:29 - images for our Xcode project now I've
01:31 - provided a link in the description below
01:33 - to download these assets the zip file is
01:36 - called lesson 3 assets
01:38 - so I want you to go ahead and click that
01:40 - link download it I've got it already
01:43 - downloaded on my desktop here and I'm
01:46 - just going to double click it to unzip
01:48 - it it's going to open up a folder inside
01:51 - you're gonna find three images what I
01:54 - want you to do is just highlight all
01:57 - three you can press command a to
01:59 - highlight everything and then you can
02:01 - drag it either in here or in here and so
02:06 - on the right hand side I'm gonna have
02:08 - burger burrito and salmon these are
02:10 - properly named already so you don't need
02:13 - to change
02:13 - any of the assets names and then let's
02:15 - go into main that story board and what
02:19 - we're going to start with today is a
02:22 - stack view so let's go down here in the
02:26 - lower right hand corner looking at the
02:28 - object library type in stack view into
02:31 - the filter box and there are two types
02:33 - horizontal stack view and vertical stack
02:35 - view so these icons might confuse you a
02:38 - little bit but a horizontal stack view
02:40 - basically stacks things in a horizontal
02:44 - fashion so the first item you add will
02:46 - be on the left second item will be to
02:49 - the right of that third item will be to
02:51 - the right of that one and so on and so
02:53 - forth for a vertical stack view when you
02:55 - add an item that's going to be at the
02:58 - top
02:58 - second item you add is going to be put
03:00 - below it and then you know so on and so
03:03 - forth so a vertical stack view stacks
03:06 - things vertically while a horizontal
03:09 - stack view aligns all of your elements
03:11 - horizontally beside each other so we're
03:14 - gonna choose a vertical stack for you
03:16 - we're just gonna put it right there and
03:18 - then let's change that filter text to a
03:22 - label just gonna drag a label into the
03:26 - stack view you'll notice that right here
03:29 - in this document outline you have a
03:31 - label inside of the stack view see I can
03:34 - collapse the stack view and the label is
03:37 - inside of it alright so the stack view
03:39 - actually contains the label you're gonna
03:42 - see a bunch of red lines here because we
03:44 - haven't actually positioned the stack
03:46 - view and we need to add a second element
03:49 - just to illustrate how the staff view
03:51 - works so let's type in image view in
03:54 - here rather than dragging it on to the
03:58 - view here you can actually just drag it
04:01 - directly into the stack view in the
04:03 - document outline so you can see here
04:05 - I've got the image view inside the stack
04:07 - for you now if I close the stack view
04:10 - the image view and the label disappear
04:12 - there inside of it and you can see here
04:14 - in the storyboard that our UI image view
04:17 - and label are stacked on top of each
04:20 - other right inside the stack view I want
04:24 - the label to actually be on top of the
04:26 - stack view so
04:27 - in this document outline I'm just going
04:29 - to click and drag and rearrange these
04:31 - two elements so that the label is above
04:34 - the image view you see here now here's
04:37 - the cool thing with the stack view
04:39 - element right here let me just highlight
04:41 - it and go over on the right hand side I
04:43 - can change the orientation whenever I
04:45 - want so even though I added a vertical
04:48 - stack view onto my view I can change it
04:52 - to a horizontal stack view so let me
04:54 - just do that and you can see if I do
04:56 - that it's just going to position them
04:57 - side-by-side like that and there is also
05:01 - a spacing property that I can set if I
05:04 - just put 20 there it's going to space it
05:07 - out so that it has a 20 point gap
05:10 - between each of the elements and I can
05:12 - keep adding elements into my stack view
05:14 - and it's going to place it side-by-side
05:15 - no need to add any sort of auto layout
05:18 - constraints okay so let me flip it back
05:21 - to vertical here now let's talk about
05:24 - some of the other things that we can set
05:26 - for a stack view if I click on this
05:28 - alignment drop-down you're going to see
05:30 - that by default it's set to fill I can
05:33 - set it to leading center or trailing and
05:35 - if I set it to center it's basically
05:38 - going to center all of the elements down
05:40 - the middle and if I click on leading
05:43 - it's going to left align all the
05:45 - elements inside of it trailing is right
05:48 - aligned and fill basically tries to
05:50 - stretch it out so that it fills up the
05:52 - entire stack view and this is the
05:54 - setting by default so if I choose Center
05:57 - you may see that label become a Center
06:00 - aligned so let's choose that you can see
06:02 - that is Center aligned now the image
06:04 - view is still like this because there
06:06 - really isn't any sort of inherent width
06:10 - to it once we do set an image depending
06:13 - on that size of the image you might see
06:15 - it centered if it's very big you might
06:17 - see it fill up the entire width all
06:19 - right so what I want to do next is we're
06:21 - going to want to create another two of
06:23 - these things so let's add another image
06:26 - view there and I'm actually going to
06:28 - make this one a little skinnier so that
06:30 - I can fit another one there and I can
06:34 - just resize that a little bit so that we
06:36 - can just fit it into the view then we're
06:39 - gonna choose a label
06:41 - drag it put it approximately above each
06:44 - of those image views and you see how
06:47 - this guy is inside of a stack feel right
06:50 - in the document outline and we did this
06:52 - by adding a stack view first onto our
06:56 - view and then we added the elements
06:57 - inside of the stack view this time
06:59 - because we have our elements already on
07:01 - the screen I'm going to show you how to
07:03 - put existing elements into a stack view
07:06 - there's actually a button to do that so
07:09 - I'm gonna highlight this UI image view
07:12 - I'm gonna hold down command and I'm
07:14 - gonna click this label so that they're
07:15 - both highlighted if I wanted to place
07:18 - these two elements into their own stack
07:20 - view I first have to select them like I
07:23 - have and then I go down here and click
07:25 - this button embed in stack view and when
07:29 - I click that it automatically takes
07:31 - those two elements and puts them inside
07:33 - of a stack view now it's going to choose
07:35 - a vertical or a horizontal stack view
07:37 - depending on how they're already
07:39 - positioned but it really doesn't matter
07:41 - because you can always just change the
07:43 - axis from the stack view property so by
07:47 - default Xcode chose to put it in a
07:49 - vertical stack view which is what I
07:51 - wanted let's do the same thing with
07:53 - these two click on the UI image view
07:55 - hold down command on your keyboard and
07:57 - then click this so that you can
07:58 - multi-select both of them and then let's
08:01 - go and click this button to put that in
08:03 - a vertical stack view so now at this
08:05 - point if you look over on the left hand
08:07 - side we have three stack views and if
08:11 - you pop open each of them you're going
08:13 - to see the label in the image view in
08:15 - each of them now you'll notice that the
08:18 - spacing for the stack view we have a gap
08:20 - right because we specified that spacing
08:22 - but we haven't done so for these two so
08:25 - I'm gonna go ahead and do that highlight
08:27 - the stack view here go to spacing and
08:29 - hit 20 and then go to this stack view
08:32 - order spacing and hit 20 and then what
08:35 - we're going to do now let's close all of
08:37 - these stack views we're gonna highlight
08:40 - all three of them you can either hold
08:42 - shift on your keyboard and click this
08:44 - one so you highlight all of them or you
08:46 - can hold command and just individually
08:48 - select all three but you should have all
08:50 - three highlighted in blue like this and
08:52 - then we're going to click on the stack
08:54 - view
08:54 - you again so when you do that it's gonna
08:58 - put all three of them into a horizontal
09:00 - stack view this time so you should end
09:03 - up with something like this you have a
09:05 - horizontal stack view and inside of that
09:07 - you have three vertical stack views and
09:10 - then inside of each vertical stack view
09:12 - you have a label and an image view like
09:14 - that
09:14 - so now let's click on the horizontal
09:17 - stack view and for spacing I'm going to
09:19 - put 20 and that's going to add a
09:21 - 20-point gap in between each of those
09:24 - vertical stack views now the only thing
09:27 - we need to position is actually this
09:29 - outer stack view because it doesn't know
09:31 - you know where to put this guy all right
09:34 - so we have to position that so go ahead
09:38 - and highlight this horizontal stack view
09:40 - and then go down to the lower right
09:42 - click on add new constraints and we're
09:45 - going to uncheck constraint two margins
09:47 - we are just going to 0 tab
09:50 - 0 tab 0 add 4 constraints like that and
09:54 - I don't mind if they're relatively the
09:56 - safe area that's fine actually instead
09:59 - of zeros we're gonna do 20 just to be
10:02 - consistent with the 20 gaps in between
10:05 - each of the elements so it's gonna be 20
10:08 - away from the top 20 from the left 20
10:10 - from the right and 20 from the bottom
10:11 - let's add 4 constraints and then you're
10:14 - going to see this horizontal stack view
10:16 - being pulled in all of these directions
10:19 - right here now you can see that inside
10:22 - they're still kind of not positioned
10:24 - correctly and we can actually change how
10:28 - they are distributed within the stack
10:30 - view so let's go ahead click that
10:33 - horizontal stack view we go over to the
10:36 - right hand side into the inspector pane
10:38 - I want to show you this alignment menu
10:41 - again so if I click this you're gonna
10:43 - see top center and bottom well before
10:46 - when I showed you this it said leading
10:48 - center and trailing right for left align
10:52 - Center align or right aligned right but
10:55 - how come this time it says top center
10:57 - and bottom well the reason is because
10:58 - last time we were looking at a vertical
11:01 - stack view and when you talk about
11:03 - alignment for a vertical stack view you
11:06 - are either aligning things to the left
11:08 - or the right when you're talking about a
11:10 - horizontal stack view which is what we
11:13 - have highlighted right now alignment
11:15 - refers to top center or bottom aligned
11:18 - so right now it's set to fill which is
11:21 - basically going to stretch the elements
11:24 - inside of it from the top all the way to
11:26 - the bottom it's gonna try to kind of
11:27 - fill up the entire space that's fine
11:29 - we're gonna leave it like that what I
11:31 - want to point out is distribution so
11:34 - this is how the space is divided up
11:36 - horizontally and if this were a vertical
11:40 - stack view distribution would refer to
11:42 - how the space is divvied up vertically
11:45 - all right so looking at this horizontal
11:47 - stack view we can either choose fill
11:49 - which is the default and it basically
11:51 - just gives each element the space that
11:53 - it needs so that's why we kind of get
11:55 - this disproportionate spacing is because
11:58 - this is the size that we had that stack
12:01 - view originally and these two elements
12:03 - this is the size that we had originally
12:06 - so it's just going to keep that size
12:07 - however if we choose something like fill
12:10 - equally that is going to divide up the
12:12 - space between all of the elements inside
12:14 - equally so let's go ahead and choose
12:17 - that and you can see now that it
12:18 - actually gives each stack view this an
12:22 - equal amount of space it doesn't look
12:24 - like it because these image views are
12:26 - different sizes but if you click the
12:29 - actual stack view like this you can see
12:32 - that all of them actually have an equal
12:35 - amount of space a horizontally okay so
12:37 - now the next thing we should do is
12:39 - probably give these image views some
12:42 - widths because we basically want this
12:45 - image view to be as wide as the stack
12:48 - view that contains it so we need to do
12:51 - that and in order to do that we're
12:53 - basically going to highlight the image
12:55 - view and then hold down command and
12:58 - highlight the stack view which contains
13:00 - it so that both of them are highlighted
13:02 - we're going to go down here to add name
13:04 - constraints and whoops didn't mean to
13:07 - click that one this one's add new
13:08 - constraints and we're gonna say equal
13:11 - widths when you do that it adds a
13:13 - constraint you can see down here that
13:15 - says that the image via width should be
13:18 - the same width as the stack view
13:20 - so let's do it for this other stack view
13:23 - and image view now highlight this image
13:25 - view hold down command select the stack
13:28 - view that contains it go down here
13:30 - equal its add constraint so you're gonna
13:33 - see that stretch out do the same thing
13:35 - for this last one highlight the image
13:37 - view hold down command on your keyboard
13:38 - and click that stack view go down here
13:42 - we're going to choose equal widths now
13:45 - there's actually a shortcut way to do
13:48 - this
13:48 - and now this is completely optional I'm
13:51 - gonna show you how to do that I'm gonna
13:53 - go first delete this constraint which I
13:54 - just added and the way you do this is if
13:58 - you highlight the image view then you
14:00 - hold down ctrl on your keyboard and then
14:02 - you click this image view and kind of
14:04 - drag it towards that stack view and then
14:08 - let go it's gonna pop up this little
14:10 - menu and you can simply select equal
14:12 - widths from there so that has the same
14:14 - effect now that's sort of an advanced
14:17 - shortcut way to do it once you get more
14:19 - used to things but remember if your UI
14:22 - doesn't look like this
14:23 - what I have right now then chances are
14:26 - you've added incorrectly a constraint
14:28 - and it's very easy to fix just go ahead
14:31 - you don't open up these little blue
14:33 - constraint menus delete the constraints
14:36 - and then re-add them or you can click on
14:38 - a constraint and then you can edit the
14:40 - properties of that constraint on the
14:42 - right-hand side but at this point you
14:44 - should have something that looks like
14:45 - this so what we're going to do now is
14:48 - click on this root view here and we are
14:51 - going to change that background to a
14:53 - black color and then we're going to
14:56 - highlight the labels so what you can do
14:59 - is you can expand each of these stack
15:01 - views so that you see all three labels
15:03 - so click that and hold down command to
15:05 - click the second one while still holding
15:08 - down command click on the third one so
15:09 - you have all three of them highlighted
15:11 - and then go over here in the attributes
15:15 - inspector you can change the text color
15:18 - to white for all three in one shot and
15:21 - we're gonna also change the font from
15:25 - regular to bold and I'm going to change
15:29 - the text individually actually so for
15:31 - this label
15:33 - this is going to be our burrito this one
15:37 - is going to be our burger and this one
15:42 - is going to be our salmon all right and
15:46 - now we can actually also set the images
15:49 - so let's go ahead and click this
15:51 - uiimageview
15:52 - click image and we're gonna choose
15:54 - burrito now what has happened here it
15:58 - suddenly just blew our label out of the
16:01 - view although it's actually still there
16:04 - if you take a look right here in the
16:07 - document outline and this burrito kind
16:09 - of just it's also distorted and we're
16:13 - going to highlight this burrito image
16:15 - view and then we're gonna go to content
16:18 - mode instead of scale to fill will say
16:19 - aspect fill now that seems to have made
16:23 - things even worse can see the image
16:25 - spilling out of the image view now and
16:27 - that's actually completely normal
16:28 - because the image is actually bigger
16:30 - than the image view and if we don't want
16:32 - the image to spill out what we can do is
16:35 - enable this clip to bounce property so
16:39 - if we click that it's going to clip the
16:41 - edges so that anything spilling out of
16:44 - the image view is kind of cropped or you
16:47 - know clipped all right so now we still
16:50 - have to address the reason for this
16:53 - image kind of pushing that label out of
16:56 - the view this brings us to a very
16:58 - important question in this case that we
17:01 - have right here this stack view only
17:04 - goes from here like about here down here
17:07 - there's only a finite amount of space so
17:10 - what happens when there's not enough
17:12 - space to display both elements like we
17:15 - have in this case right here because the
17:18 - image wants to take up all the space and
17:20 - that really doesn't leave enough space
17:22 - for the label so let me show you how we
17:24 - address that let's click on the label
17:27 - this burrito label here you can see it's
17:29 - actually a line it's like squish there's
17:32 - no height to it and let's go over here
17:34 - to the size inspector if you scroll all
17:36 - the way down you're gonna see a couple
17:39 - of things here you're gonna see content
17:40 - hugging priority and content compression
17:42 - resistance priority I'm going to explain
17:45 - what content hugging priority
17:47 - is in a second but I want to point out
17:49 - what this one is when there's not enough
17:52 - space to display all of the elements
17:54 - this is what the auto layout system uses
17:57 - to determine which elements should be
17:59 - squished the element with the lower
18:02 - contact compression resistance priority
18:05 - will be the one that gets squished so in
18:08 - this case I think by default they're
18:10 - both 750 so let's take a look at this
18:12 - right now I have the label highlighted
18:15 - and the vertical content compression
18:19 - resistance priority is 750 now let's
18:21 - take a look at the image if I click on
18:23 - the image and go down here at 750 as
18:25 - well so that's why if you look at here
18:27 - in the document outline if you look at
18:29 - this little red error icon and click it
18:31 - it's telling us that there's some sort
18:34 - of content ambiguity and it's telling us
18:37 - that we need to set the vertical
18:39 - compression resistance priority for
18:41 - these elements because right now they're
18:43 - both tied at 750 and X code cannot
18:46 - determine which element to squish and
18:48 - which one not to so let's go back to it
18:51 - and we need to give one of these a
18:54 - higher priority than the other so for
18:56 - the label let's give it a higher
18:58 - priority so let's break the tie and give
19:01 - this guy 751 because this guy has a
19:05 - higher priority against compression it's
19:11 - not going to get squished Xcode will
19:13 - rather resize this element that has a
19:16 - lower resistance priority than to squish
19:19 - the label because this one this label
19:21 - rain has 751 content compression
19:24 - resistance priority whereas the spirito
19:27 - uiimageview has 750 now if I change this
19:30 - burrial image view to have a vertical
19:32 - compression resistance priority to 752
19:36 - then you're gonna see it actually takes
19:39 - out the label because now the label has
19:41 - a lower priority so it's going to get
19:43 - squished
19:43 - alright so we don't want that let's
19:45 - lower the vertical priority of the of
19:49 - the uiimageview so the same problem is
19:52 - going to happen with these two but I
19:53 - want to talk about content hugging
19:55 - priority so content hugging priority is
19:58 - actually the opposite
19:59 - problem what happens when we have too
20:02 - much space you can see here in this
20:04 - stack view the label is actually
20:07 - stretched out like this so content
20:10 - hugging priority dictates when there is
20:13 - too much space
20:14 - which element is going to get stretched
20:16 - to fill up that extra space because in a
20:19 - stack view when the distribution is set
20:21 - to fill it's gonna try and fill up that
20:23 - entire stack for you so you can see
20:24 - right now because the uiimageview
20:26 - doesn't really have a size it's trying
20:29 - to stretch out the label to fill up the
20:31 - remaining amount of space now content
20:34 - hugging priority like I said determines
20:37 - when there is too much space which
20:39 - element gets stretched out the element
20:41 - with the higher content hugging party
20:44 - will not get stretched it's actually the
20:47 - element which has the lowest content
20:50 - hugging party that is going to get
20:51 - squished I know sometimes it's kind of
20:53 - hard to wrap your head around this
20:55 - because it feels like you're speaking in
20:57 - opposites but the way I think about
20:59 - content hugging priority is I imagine
21:01 - hugging that element so the tighter you
21:04 - hug it as in the higher priority it has
21:07 - the less likely it's gonna get stretched
21:09 - out so if I give this burger label a
21:11 - really high vertical content hugging
21:15 - party that means it's gonna hug it
21:16 - really tight and it's not gonna stretch
21:19 - it out it's gonna stretch out the other
21:20 - element like you see what happened here
21:23 - the other one is actually easier to
21:25 - understand compression resistance it's
21:27 - exactly how it sounds right if you have
21:29 - a high compression resistance then
21:32 - you're not going to get compressed
21:33 - alright so now let's set the image view
21:36 - for this guy we're going to change back
21:39 - to this tab attributes inspector we're
21:41 - going to change the image to the burger
21:43 - and we are going to change this to a
21:47 - SPECT fill and we have the same sort of
21:51 - problem so let's clip the bounds and
21:52 - because this image is really large
21:54 - there's not enough space to show both
21:57 - the label and the image so we're gonna
22:00 - have to set which element has a higher
22:02 - compression resistance so obviously we
22:05 - want the label to be shown let's
22:07 - highlight the burger label and let's
22:09 - give it a high compression resistance
22:13 - on the vertical axis higher than this
22:15 - image view at least okay so we're gonna
22:17 - do the same thing here by now
22:19 - you should understand what's happening
22:21 - let's choose salmon let's choose aspect
22:25 - Phil let's clip the bounds and then
22:28 - let's click on the salmon label let's go
22:31 - to size inspector and then we're going
22:33 - to up the vertical compression
22:36 - resistance priority so that it's higher
22:38 - than this image view alright so now
22:42 - let's view as and take a look at this
22:45 - layout in a couple of different screen
22:48 - sizes so let's go let's go up if we got
22:53 - the iPhone 10 here let's click the zoom
22:56 - buttons that looks good just click on
23:00 - the iPhone 8 plus zoom out zoom back in
23:03 - looks good click on iPhone se and iPhone
23:09 - for us and we can even change the
23:11 - orientation I mean it's gonna try its
23:13 - best to follow our auto layout
23:17 - constraint rules and the stack view
23:19 - configurations and we're gonna get
23:21 - something like this everything's still
23:23 - visible it's gonna zoom out some beckon
23:27 - you know obviously it's not ideal to
23:30 - have a portrait orientation for this
23:32 - sort of layout however you know in our
23:34 - project properties we configured it so
23:37 - that it should be landscape only so
23:38 - that's going to prevent it from going
23:39 - into portrait anyways alright so let's
23:42 - test it out in our simulator let's
23:43 - choose iPhone 8 let's click run and it's
23:49 - not going to change it to landscape by
23:51 - default so we're going to press command
23:53 - + right arrow and you can see it like
23:57 - this so today you learned about stack
24:00 - views and how they can be used to
24:02 - position elements you also learned about
24:04 - content hugging priority and content
24:06 - compression resistance priority if you'd
24:09 - like this video please subscribe to my
24:10 - channel by clicking the subscribe button
24:12 - below and if you don't want to miss a
24:14 - single video make sure you click that
24:16 - Bell icon as well thanks for watching
24:18 - and I'll see you in the next lesson