00:01 - hey coders what's up it's Chris here and
00:04 - today we're going to talk about PF query
00:07 - constraints now there's a lot to cover
00:09 - and it might even take two videos so
00:11 - let's get started first I wanted to jump
00:14 - back to our parse instance and just to
00:16 - review what we have here
00:18 - so we have a contact class and we have
00:20 - two rows of data we added an email
00:22 - column first name and last name next
00:25 - let's take a look at the parse
00:27 - documentation this is what we're going
00:29 - through here and if you forgot how to
00:31 - get to this page just go to parse comm
00:33 - slash Docs and then select the i/os
00:36 - guides and finally let's go back to our
00:39 - Xcode project where we have a basic
00:42 - query here so the code here is a basic
00:45 - PF query that is targeting the contact
00:48 - class and then we're calling find
00:50 - objects in background with block and
00:52 - this is the block of code that is going
00:55 - to execute after it performs this find
00:57 - objects query and this block of code
00:59 - basically checks if there's an error or
01:01 - not and if not it's going to go through
01:04 - all of the return to objects and print
01:06 - out the first name value of each of
01:08 - those objects
01:09 - now this find objects query is going to
01:12 - return all of the rows in our contact
01:15 - class store so right now we have two
01:17 - rows but let's say we wanted to find
01:19 - something specific in that class well
01:22 - here is where we can introduce different
01:24 - constraints and I'll show you guys how
01:26 - there are a whole bunch of different
01:27 - ones and I'll demonstrate so all I'm
01:31 - going to do is create a new query so I'm
01:34 - going to say let query equals PF query
01:37 - and we're gonna pass in the contact
01:41 - class name just like we did up here but
01:43 - instead of performing the find objects
01:45 - and background right away we're going to
01:47 - say query dot where key and I'm looking
01:52 - for this one equal to any object so
01:55 - let's say that the key first name is
01:58 - equal to Tommy and then next after
02:03 - adding this constraint then I would
02:05 - perform the find objects in background
02:07 - type of thing but I'm not going to do
02:09 - that I'm just going to show you these
02:10 - two lines that you need to know so this
02:12 - is going to look
02:13 - through the contact class right here and
02:16 - it's going to look under first name this
02:19 - key equal to Tommy and it's gonna fetch
02:21 - that and return that so Xcode is
02:23 - complaining about something here
02:25 - definition conflicts with previous value
02:27 - okay that's fine because we're just
02:29 - doing some demonstrations here let me
02:32 - just comment this out for a second and
02:33 - let's look at this next one we're not
02:36 - equal to so where this one is you're
02:39 - trying to look for all of the objects
02:41 - that have a key equal to a certain value
02:43 - this one allows you to search for all
02:46 - objects where the key does not equal to
02:49 - some specified value so let me just copy
02:52 - this line here it's always going to be
02:54 - the same and we're going to write query
02:56 - dot where key is if you scroll down not
03:01 - equal to so we can say return all of the
03:05 - objects where first-name is not equal to
03:08 - Tommy so this would return our other row
03:11 - of data which is John Smith now if I
03:14 - wanted to add multiple conditions I can
03:16 - I can continue to do this where key and
03:20 - then keep adding to that query until I
03:22 - go query dot find objects in the
03:25 - background with block so this is going
03:28 - to perform an end Clause the object is
03:30 - going to have to satisfy both conditions
03:32 - as many conditions as you want to add
03:35 - for it to get returned okay so that is
03:38 - the not equal to comment that out let's
03:43 - look at contained in and not contained
03:45 - in constraint so let's say you have an
03:47 - array of names that equal something like
03:51 - Alice Bob and Mike and you want to
03:57 - return all of the contacts that don't
04:01 - have this first name so you would say
04:02 - something like this so let query equals
04:05 - new query right with the class name
04:08 - contact and then you would put query dot
04:11 - where key and you would say not
04:15 - contained in so we want the first name
04:20 - to not be in the names so you're passing
04:23 - this array into it and you're saying
04:25 - return all of the odd
04:27 - Jex where the first name is not
04:29 - contained in this array alternatively if
04:32 - you wanted to search for all contacts
04:34 - where their first names are either Alice
04:36 - Bob or Mike you would say something like
04:38 - queried where key is contained in this
04:44 - one here where a first name contained in
04:48 - names so that is going to return all of
04:50 - the contacts which have a first name of
04:53 - either Alice Bob or Mike okay simple
04:55 - enough let's look at another one where
05:00 - exists and does not exist so what does
05:04 - exist and not exists mean well if we
05:06 - look at our parse contact class we have
05:09 - an email field first name field and last
05:11 - name field
05:12 - all of them are set to some piece of
05:14 - data now it's possible that when we
05:16 - added a new row we didn't specify a
05:19 - value for email maybe it wasn't provided
05:21 - so this constraint lets you pull all of
05:26 - the contacts which have an email set so
05:29 - you would do something like let me paste
05:31 - that query there so if I wanted to
05:33 - search for all contacts where the email
05:35 - must be set I would say where key right
05:42 - here where key exists and you would pass
05:45 - in well email so that would return all
05:48 - of the contacts which actually have an
05:51 - email that is set alternatively if we
05:54 - wanted to find all the contacts where
05:56 - some value isn't set we would do where
06:00 - key does not exist email and this would
06:03 - return all of the contacts which do not
06:06 - have an email specified okay so that can
06:09 - come in handy and don't forget that you
06:11 - can combine all of these constraints to
06:13 - really narrow down exactly what you're
06:15 - looking for okay this next one is kind
06:17 - of cool and it works for Strings
06:19 - so if we wanted to search for all
06:22 - contacts where the name begins with a
06:25 - tea or maybe Tom or some sort of prefix
06:28 - we would use this constraint we would
06:30 - say query dot where key
06:34 - has prefix so it's gonna search for
06:38 - let's say first name has the prefix of T
06:42 - or maybe T or whatever string you want
06:44 - and this according to our data set is
06:47 - going to return Tommy John doesn't
06:49 - qualify as teo so it's not going to get
06:52 - returned and there's also another one as
06:54 - you saw where key has suffix which is
06:58 - going to return all of the contacts
07:00 - which ends with a particular suffix that
07:03 - you specify so let's say we're first
07:06 - name has the suffix Y ends with Y if we
07:11 - have both of these constraints specified
07:13 - then it's going to look for only
07:15 - contacts which start with tio and end
07:18 - with Y like that okay now let's take a
07:21 - look at one more here so less than and
07:24 - greater than constraint let's say one of
07:26 - your fields is a high score or age or
07:30 - something like that
07:30 - and you want to perform a query that
07:33 - compares numbers or constraints numbers
07:36 - so you would say where key is greater
07:40 - then you also have greater than or equal
07:42 - to and you also have less than or less
07:45 - than or equal to so you have those four
07:47 - so you can say we're age and I'm just
07:50 - making up this field because we don't
07:52 - actually have this field in our contact
07:53 - class but we can say where the age is
07:56 - greater than thirty so that's going to
07:58 - return all of the contacts in our data
08:00 - store where the age is greater than
08:02 - thirty so I'm going to stop here for
08:04 - today and in the next video in part two
08:07 - we'll go through the rest of them but
08:09 - let's review what you have learned in
08:11 - this lesson
08:11 - so we went through a whole bunch of
08:14 - different types of constraints that you
08:15 - could do and you can mix and match any
08:17 - of them in your query and you can add as
08:19 - many constraints as you want to a single
08:21 - query but keep in mind that the data
08:23 - returned has to satisfy every single one
08:25 - of those constraints in order for it to
08:27 - be returned in your result set so these
08:29 - are added as an end so when you read
08:32 - them out it would say where first-name
08:34 - is not contained in names and where the
08:38 - first-name is also contained in names
08:39 - you can see how this query would return
08:41 - nothing because any object in the result
08:44 - set has to be in names but also
08:47 - in names so that would never happen this
08:50 - is probably a more realistic one right
08:52 - here we're performing a query where
08:55 - first name has the prefix tio and first
08:57 - name has the suffix y so there could be
09:00 - some contacts that has that prefix and
09:02 - suffix like in our case Tommy does so
09:05 - that would get returned and finally
09:06 - don't forget that all we're doing here
09:08 - is adding constraints to the query we're
09:11 - not actually performing the query
09:13 - not until you not until you run a method
09:16 - like find objects in background with
09:18 - block and that's gonna actually run the
09:20 - query and then return the result set
09:22 - here in your block of code so in the
09:24 - next lesson we're going to learn more
09:26 - about query constraints and some filters
09:28 - like sorting and limiting the number of
09:31 - items and we're also going to learn how
09:32 - to use or constraints so if you wanted
09:35 - to return data that satisfies constraint
09:37 - a or constrain B rather than what we've
09:40 - gone through today it's all and it has
09:42 - to satisfy constraint a and constraint B
09:44 - all right so thanks for watching and
09:46 - please give the video a thumbs up if you
09:48 - liked it please subscribe if you haven't
09:50 - already and please share this video with
09:52 - your co-workers and family and friends
09:54 - thanks a lot and I'll see you guys
09:55 - tomorrow bye