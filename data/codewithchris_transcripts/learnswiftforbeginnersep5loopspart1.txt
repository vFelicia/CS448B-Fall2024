00:00 - hello welcome to learn twist for
00:02 - beginners lesson 5 in today's lesson
00:04 - we're going to talk about loops when
00:06 - you're writing your app there is going
00:08 - to be many times you're going to find
00:10 - yourself needing to repeat pieces of
00:12 - code for instance let's say you're
00:15 - showing five things in your app and you
00:18 - need to turn each of them red so a loop
00:20 - is going to allow you to just write that
00:23 - single line of code to turn something
00:25 - red and you can repeat it five times for
00:28 - each of those five objects and that's
00:31 - going to save you from having to write
00:33 - out that code five times so that's a
00:36 - very simplified example let's me you're
00:39 - going to use them a lot so let's take a
00:41 - look at how to use them so there are
00:47 - three types of loops we're going to
00:49 - cover today we're going to start with
00:50 - the for in loop as you can see in the
00:54 - Swift programming guide here so let's go
00:57 - ahead and start a new playground in our
01:00 - Xcode and I'm just going to call this
01:04 - the loop playground and save it on my
01:08 - desktop now a four in loop allows you to
01:14 - repeat a piece of code a certain
01:17 - specified number of times if you have a
01:20 - list of data otherwise known as an array
01:22 - which you're going to learn about in an
01:24 - upcoming lesson you can also use a for
01:27 - in loop to go through each of those
01:29 - pieces of data in that array and execute
01:33 - some sort of code on it so this is
01:35 - perfect for the example we mentioned in
01:37 - the intro about having five objects or
01:40 - five items on the screen and you need to
01:42 - turn each of them red for example so
01:45 - let's start with learning how to use a
01:47 - four end loop to repeat a piece of code
01:50 - for a specified number of times and when
01:52 - you guys learn about arrays I'll show
01:55 - you how to use a for loop to go through
01:57 - each piece of data in that array so as
02:00 - you can see true to its name the key
02:03 - words to use here are four and in so you
02:07 - start with the keyword four and next you
02:10 - have a variable name now you don't have
02:13 - to
02:13 - this variable using the VAR keyword like
02:16 - you've learned in the previous lessons
02:18 - you can simply have a name for this
02:21 - variable because you're only going to
02:23 - refer to this variable within the for in
02:26 - loop this variable that you specify here
02:29 - is going to keep track of which
02:31 - iteration of the loop is currently
02:33 - running next up you have the keyword in
02:35 - and then you have the lower range
02:39 - followed by dot dot dot and then the
02:42 - upper range and that last part there
02:44 - after the in keyword is the range which
02:48 - your for loop is going to run in and
02:51 - it's inclusive of those numbers so for
02:54 - example if you have one dot dot dot five
02:57 - it's actually going to run five times
02:59 - and then after that you open a set of
03:02 - curly brackets and inside the set of
03:05 - curly brackets that's where you're going
03:06 - to put the code that you want to repeat
03:09 - for that number of times so let's jump
03:11 - back to the playground and let's do a
03:14 - quick demo on for in loop so I have the
03:18 - four keyword here and for my variable I
03:21 - can specify something like index and
03:25 - then I would put in and let's use that
03:28 - same example one two five and then I
03:31 - open up a set of curly brackets and then
03:34 - here I'm simply going to print hello and
03:39 - we're going to see this in the console
03:40 - down here it is printed at five times
03:44 - now part of the reason why you specify a
03:48 - variable name here called index is
03:50 - because you want to use that that number
03:54 - or this variable inside your for loop
03:57 - here so for example I can do something
04:02 - like this or I can say print index and
04:06 - you're going to see that index changes
04:09 - from one two three four five depending
04:13 - on which iteration of the loop it is it
04:16 - keeps track of basically where we're at
04:19 - in this range right here as we're
04:22 - looping through it but again what we've
04:25 - specified here is a count
04:27 - is only available inside the scope here
04:30 - in between these curly brackets I can't
04:33 - specify you know printing index out here
04:38 - it's not going to recognize it
04:40 - okay so we can't do that and furthermore
04:45 - if you don't need to use index inside
04:48 - your for loop you can very simply place
04:51 - an underscore there so this is perfect
04:54 - for the example that we had initially
04:58 - where we're just printing hello five
05:00 - times we don't really need a counter of
05:03 - any sort where we don't need to refer to
05:05 - index we don't care which iteration is
05:08 - currently at one thing I want to mention
05:11 - which is confusing often for beginners
05:14 - is this idea of scope here for example
05:19 - if I wanted to sum up the numbers from
05:21 - one to five and I wanted to print out
05:23 - the result after the for loop let's say
05:26 - I declare a variable up here and I call
05:28 - it sum right equate it to zero and then
05:32 - I say something like sum plus equals and
05:37 - actually let's add this index variable
05:41 - back here and I go like this now you
05:44 - haven't seen this plus equals sign yet
05:48 - but this operator basically equates to
05:51 - something like this it takes some and it
05:57 - adds the index so this is equivalent to
06:00 - writing this is just kind of like a
06:04 - short form okay so first of all if I
06:08 - declare this variable called sum is
06:11 - inside my for loop inside these curly
06:13 - brackets
06:14 - well this variable is only available
06:16 - within that scope within these two curly
06:20 - brackets I can't go out here outside of
06:23 - the for loop after it's run five times
06:25 - and print out the result of some see you
06:30 - can see that it can't find this variable
06:33 - even though I've declared it in here
06:36 - okay so why don't we move this print
06:39 - statement
06:40 - to the for-loop what would you expect to
06:43 - happen in this case well we get one two
06:46 - three four five again and why is it that
06:50 - this sum isn't increasing why isn't it
06:53 - continually adding index to it and you
06:57 - know why aren't I getting the sum of the
07:00 - numbers from one to five by the last
07:02 - iteration of the loop well what's
07:04 - happening is that in the first iteration
07:07 - of the loop we're declaring some equals
07:11 - to zero and then we're adding index to
07:15 - sum which is one and then we're printing
07:18 - some so that's why we get one down here
07:19 - in the second iteration of the loop what
07:22 - we're doing is we're declaring some
07:24 - again we're setting it to zero and we
07:27 - are adding this time the index is 2 and
07:30 - we're adding two to zero right and then
07:32 - it's going to print two so that's why
07:35 - you can see the output two right there
07:38 - well right now you might point out to me
07:40 - hey Chris I thought you said that you
07:42 - can't read it clear the same variable
07:44 - you know in the first iteration of the
07:46 - loop we're declaring var sum right and
07:50 - then in the second iteration of the loop
07:51 - weari declaring var sum that's that's
07:54 - illegal that's not allowed in fact you
07:56 - might say that you know if I declare var
07:59 - string again up here it's going to throw
08:02 - an error all right we can't read Eclair
08:04 - the same variable because we've declared
08:07 - this guy up here we can't read Eclair
08:09 - using the bar again and I would say
08:12 - that's true except that in each
08:15 - iteration of the loop
08:17 - it's almost as if it doesn't remember
08:20 - what happened in the previous iteration
08:22 - there's no memory or recollection of the
08:25 - previous iteration
08:26 - so each iteration is kind of like a
08:28 - clean slate and it's going to execute
08:30 - this code right here so just to say that
08:34 - again you're right if you're saying that
08:37 - I can't read Eclair some right because
08:41 - if I try to do that right here Xcode
08:44 - would throw an error however inside of a
08:48 - loop in this scope right here
08:51 - each iteration of the loop is like a
08:53 - clean slate okay now if I wanted to
08:57 - actually find out the sum of the numbers
09:01 - from one to five what I would actually
09:03 - do is I would move this declaration up
09:06 - here outside of the loop and then what I
09:10 - would do this way I could move this
09:15 - print statement outside of the loop and
09:17 - what this foreign loop will do is simply
09:20 - loop from one to five each time adding
09:24 - index to the sum and now I'm actually
09:27 - keeping track of the sum so you can see
09:29 - that after five iterations of the loop
09:32 - adding the numbers from one to five into
09:35 - sum which started out as zero the result
09:40 - is 15 down here and that's from this
09:43 - print statement okay so I'm going to
09:46 - stop the lesson there while the syntax
09:49 - for the foreign loop is actually pretty
09:51 - simple and in the concept of repeating a
09:54 - piece of code for a certain number of
09:56 - time is pretty simple I want to give you
09:58 - some breathing room to digest what we
10:01 - talked about in regards to the variable
10:03 - scope so I would recommend that you try
10:07 - declaring and creating this loop on your
10:10 - own computer try declaring the variables
10:12 - inside the loop and outside the loop and
10:14 - see where you can access them and use
10:16 - them and where you cannot and it's
10:18 - really going to help and aid you in your
10:20 - learning if you like this lesson please
10:23 - give the video thumbs up and subscribe
10:25 - to channel it's going to help the
10:26 - channel gain some more exposure and
10:28 - visibility and it's really going to help
10:31 - me out so thanks a lot for watching and
10:33 - I'll see you in the next lesson bye for
10:35 - now
10:37 - you
10:40 - [Music]