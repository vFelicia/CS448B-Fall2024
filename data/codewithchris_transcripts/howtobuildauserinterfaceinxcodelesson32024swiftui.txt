00:00 - in this lesson you're going to learn multiple ways 
of how to build a screen of your app now I know  
00:04 - you're itching to build user interfaces like these 
these were done by our designer JC in a piece of  
00:09 - software called figma as you improve your skills 
you'll be able to translate designs like these  
00:14 - into your own app inside xcode by the end of the 
lesson you'll have built this using only these  
00:20 - few basic elements a few layout containers a few 
views and a few modifiers considering that we're  
00:26 - only three lessons in this is amazing progress 
okay buckle up let's get started oh and just  
00:33 - a quick note in the last lesson you learned how 
to use xcode so if you need a refresher check it  
00:38 - out right over there also if you're enjoying the 
series so far don't forget to give this video a  
00:43 - thumbs up and subscribe so you don't miss the next 
lesson let's quickly review how these building  
00:47 - blocks come together to form the user interface 
or UI for short so views are the elements that  
00:54 - the user sees on the screen modifiers are applied 
to the Views to change its Behavior or look and  
01:01 - feel finally layout containers organize and 
arrange views in various ways now fun fact  
01:07 - layout containers are also considered as a view 
just think of them as container views alright  
01:13 - let's start by creating our xcode project so 
go ahead and start a new project under iOS  
01:18 - let's choose app I'm going to name mine L3 demo 2 
actually because I've built this once before team  
01:25 - you can leave as none organizational identifier 
should be the same as before and then make sure  
01:31 - it says Swift UI and Swift core data and tests 
are unchecked then let's go ahead and click on  
01:37 - next and I'm going to save it on my desktop you 
can leave create get repository unchecked as well  
01:44 - okay so here is our brand new project let's expand 
the window a little bit so we have some space  
01:52 - and the first thing we are going to do is 
just add the image asset for that card into  
01:58 - our asset library now again just like last time 
you can put whatever asset you want I'm going  
02:04 - to reuse the Niagara Falls image asset 
that I used back in the lesson one demo  
02:10 - so go ahead and do that okay now in order to build 
this card I first need some idea of what I'm going  
02:18 - to be building now whether that's just in my 
imagination or maybe a rough sketch on a piece  
02:24 - of paper or perhaps it's a design by a designer 
in this case I had this in my head and I wanted  
02:29 - to lay out the biggest elements first and that 
would be the image and the two pieces of text in  
02:35 - addition to that I also have in mind the basic 
layout container that I'm going to use First in  
02:41 - this case that would be the vertical stack which 
arranges the views on top of each other so let's  
02:45 - go into our content view first which is sort 
of the default view that gets created for you  
02:50 - and I'm going to remove the v-stock along with 
its padding modifier so we should be left with  
02:59 - body opening bracket ending bracket and then this 
content view here opening bracket ending bracket  
03:06 - what we're going to type in so at this point 
actually the way we've been doing it is by using  
03:12 - the library if you feel confident you can just 
type out the code if you don't feel that confident  
03:17 - yet you can go ahead click this plus icon open 
up the library make sure you're on this views tab  
03:24 - and just type in image drag and drop it that's 
perfectly fine this is a perfectly safe way to  
03:31 - build up to the point where you're comfortable 
just writing the code and then sooner or later  
03:36 - you won't even be using this Library for the 
image name we are going to follow what we have  
03:42 - in the asset Library whatever your asset is named 
right there so remember to use the quotation marks  
03:51 - and we should see an image perfect now 
obviously it's too big I want it to fit  
03:57 - on the screen so we are going to add the 
resizable modifier so what you do is press  
04:04 - dot in the autocomplete menu will pop up and 
I'm just going to choose resizable again you  
04:11 - can do that from the library but make sure you 
go to the second tab right which is the list of  
04:17 - modifiers you're going to search for resizable 
you're going to just drag it and drop it there  
04:22 - another one we're going to add is aspect ratio 
because this looks kind of squished right and  
04:28 - this is all review right now from lesson one we've 
done this together before it's going to be exactly  
04:33 - the same way so there's aspect ratio I'm going to 
hit dot to open up autocomplete again and choose  
04:38 - I'm going to type in fit or just choose it from 
menu again if you don't see it from the menu you  
04:45 - can just type dot fit and it'll still you'll still 
get the same result as what what I'm seeing here  
04:51 - and hit enter I'm going to do dot again this time 
I'm going to add Corner radius and this is going  
04:57 - to round the corners nicely I'm going to put 15 as 
the amount of rounding that I want and remember in  
05:03 - the inspector view here you can choose this tab to 
configure the modifiers and the view itself so you  
05:11 - can see here this is the image this Niagara Falls 
I can you know change the aspect ratio change the  
05:17 - color I can change add some padding here's 
the corner radius I can increase or decrease  
05:21 - it because my cursor is right now it's on image 
if it's on body you know I won't see that there  
05:28 - okay so that does it for the image now I said 
that we would use the vertical stack to arrange  
05:34 - it right so let's go ahead and do that again I'm 
just going to type it out but feel free to use the  
05:40 - image library and the vertical stack whatever 
is inside of this pair of brackets right here  
05:47 - those are the views that get arranged on top 
of each other so we're going to have to move  
05:52 - this image I'm going to press command X to cut 
it and put my cursor inside the brackets press  
05:59 - Comm command V to paste it in there and then 
I'm going to add the text elements so let's go  
06:05 - ahead and type in text quotation marks Niagara 
Falls next let's add the description so I'm  
06:14 - going to put another text element here 
and then you can type whatever you want
06:24 - all right that's speaking pretty highly of 
the false now what we're going to do is I  
06:31 - want everything to be left aligned and also to 
add some spacing between these elements so if I  
06:35 - put my cursor on the v stack we can come over 
here and into the inspector panel and we can  
06:41 - actually configure those things so let's see 
how that changes the code so that next time we  
06:47 - can just type in the code straight away without 
having to use the user interface so I'm going  
06:51 - to click this alignment and and that adds this 
alignment parameter here and changes it to Leading  
06:58 - let's change the spacing 
I'm going to put 20 in there  
07:03 - and you see that adds another parameter spacing 
equals 20. and then in the preview you can see  
07:08 - those things have taken effect here now let's make 
the title a little bigger here Niagara Falls so  
07:15 - I'm going to put my cursor on the text and we're 
going to change the font to perhaps title font and  
07:23 - let's make it bold let's change the weight to bold 
next I want to create the ratings to the right  
07:29 - of the Niagara Falls Title now when I see things 
side by side I think horizontal stack this is the  
07:36 - same as a vertical stack but instead of arranging 
things on top of each other the horizontal stack  
07:41 - arranges things side by side so let's go check 
it out so back inside xcode here since this is  
07:47 - the first time we're using it let's go ahead and 
bring it out from the library so we can see the  
07:52 - code let's go into the views tab right here and 
type horizontal stack that's the one right here  
07:58 - and let's drag it let's drag it right before 
the Niagara Falls text as you can see it looks  
08:06 - exactly like the v-stack except it's an H stack 
so we're going to move this Niagara Falls Title  
08:12 - into the brackets in between there command X to 
cut it command V to paste it now visually nothing  
08:21 - changes because I don't have anything aside from 
that text inside the H stack but one thing I want  
08:27 - you to notice right now is that we have an H 
stack inside of a v-stack so this is how you  
08:34 - can begin to build a layout from the combination 
of layout containers to arrange the views as you  
08:41 - want them you can Nest these layout containers now 
let's go ahead and add an image beside the Niagara  
08:47 - Falls let me use the image element just like how 
we displayed the waterfalls and we can search and  
08:54 - find an image of four stars or 4.5 Stars whatever 
we want to display then we can add that to the our  
09:00 - asset Library just like we've done here and then 
we can put the image name here to display it but  
09:06 - I want to show you a different and arguably better 
way to do this using something called SF symbols  
09:13 - let's remove this image view for now and let 
me bring up this browser window now SF symbols  
09:21 - they are a set of 4400 symbols or icons on the iOS 
system that you can use for free because they're  
09:30 - already installed on iOS all you have to do is 
you know the appropriate name for these icons  
09:36 - and you can display them you don't need to search 
for any images or anything the best thing is that  
09:42 - they behave like text so that you can change the 
foreground color of them you can change the size  
09:48 - of them and things like that very very easily 
let's go back into xcode and see how we can use  
09:55 - an SF symbol to display the Stars so just like 
displaying an image we use the image view but  
10:03 - instead of specifying the uh the asset Library 
name like we have up here we're going to specify  
10:09 - the system name of the SF symbol so we type in 
system name that should come up and notice that  
10:16 - it's lowercase s uppercase n with a colon and 
then we're going to put a name the name of the  
10:21 - SF symbol and this has got to be in quotations as 
well so I'm going to put star and you can see it  
10:27 - instantly shows up I did not have to add this star 
image into our asset library or anything like that  
10:32 - another really cool thing is that often these 
symbols come with an outline version as well as  
10:39 - a filled version and typically the filled version 
you just have the add dot fill to the end of the  
10:44 - name and that's what you get now you might be 
wondering how would I know this system name well  
10:50 - that's where this comes in handy so SF symbols is 
a free download for an app that looks like this  
10:58 - and it allows you to either browse through the 
symbols or search for it so if I search for Star  
11:03 - I can see these are all of the system some names 
that I can use like their star star.fill which is  
11:10 - what we just used and there's even this one it's 
a half star now if you don't want to download this  
11:17 - official app by Apple I'm sure I think in the past 
there were other websites which listed out all the  
11:25 - SF symbols you can search SF symbol browser or 
something like that in Google but seeing as how  
11:30 - this is the official Apple app and I'm sure this 
will get updated first before those third-party  
11:37 - websites do I would recommend that you use this 
so what I'm going to do now is I'm going to give  
11:43 - Niagara Falls 4.5 Stars so I'm going to put four 
of these in one of these so I'm going to actually  
11:48 - copy this name and that's going to copy this part 
down here let's go back to xcode and I am going to  
11:57 - image system name and paste Loops I need 
quotations right and now I have one and a  
12:04 - half so all I'm going to do is copy this paste it 
a couple of times so that we have there 4.5 Stars
12:18 - now this doesn't look quite right as well right 
I want to push the stars all the way to the right  
12:24 - and they're also a little big and they're not the 
color that I want so how do we address this well  
12:29 - first of all Let Me Explain how these elements 
are arranged inside an H stack so let's go into  
12:35 - selection mode for now so that I can select these 
elements and and show you this outline you'll  
12:41 - notice that inside this H stack this age stock 
only goes up to here what's happening is that this  
12:49 - H stack is only as wide as it needs to be to fit 
all of the elements inside of it furthermore these  
12:56 - elements inside of it you can see the outline 
is right up against the text element same thing  
13:02 - with the images right that blue outline that's the 
surrounding frame that's how much space it takes  
13:08 - up it is only as big as that view needs to be now 
this is typical of views they only have a frame  
13:18 - as big as it needs to be but there are some views 
that actually take up as much space as it can so  
13:27 - that is actually what we want to put one of these 
elements is called a spacer now this space review  
13:33 - will basically take up as much space as it can so 
let me demonstrate this again since it's the first  
13:39 - time we've used this let's open up the library 
under views let's search for spacer there we go  
13:45 - a flexible space that expands along the major axis 
of its containing stack layout or both axes if  
13:51 - it's not contained in the stack essentially it's 
just saying that it's going to take up as much  
13:55 - space as possible look at what happens here by 
putting a spacer in between the text and the Stars  
14:01 - right here first of all it pushes the H stack 
right as wide as it can be because remember the  
14:07 - H stack expands to as much space as the elements 
inside of it requires the text still requires just  
14:15 - that bare minimum the Stars again requires the 
bare minimum but the spacer on the other hand  
14:20 - is taking up all this empty space right here you 
don't see the outline but it's right there in the  
14:26 - middle so the spacer is a great way to space 
elements apart as its name suggests now one  
14:31 - handy tip before we move on if you have multiple 
spacers in the same container it divides up all  
14:38 - of the available space by the number of spacers 
you have so if I put a spacer before the text  
14:45 - and after the image is here you can see that this 
space and this space and this space are all equal  
14:53 - so the spacers take up all the available space 
and divvies them up between each other evenly  
15:00 - right but I'm gonna remove those two just gonna 
leave the spacer element in the middle it's going  
15:06 - to take everything up here we're going to add 
some padding to the left and right later anyways
15:12 - okay so let's finish up this ratings by adding 
some text right below the stars in our initial  
15:20 - design we had you know in Brackets a couple of 
reviews like or the number of reviews there so  
15:25 - how would we do that so I could put a 
piece of text right here that said text
15:34 - um let's put some brackets reviews like that but 
you can see here it does that not the effect that  
15:42 - we wanted why not Nest another layout container so 
what we're going to do here so this is an H stack  
15:49 - right um I'm going to put these five stars in a 
v-stack so that we can put the text right under it
16:02 - so let's create a v-stack right here 
and we are going to put the images  
16:10 - in there as you can see it lays it out on top 
of each other as expected and I'm going to put  
16:18 - the review text down there as well now this is 
sort of what I want but I need to lay these out  
16:25 - horizontally right so I'm going to Nest an H 
stack in there and so that actually gives me  
16:36 - what I want now the stars and the reviews text is 
a little large for my liking so and plus it's not  
16:43 - the right color too so I am going to add some 
modifiers to it so what we're going to do is  
16:50 - I'm going to type this out I encourage 
you to do so as well if you don't remember  
16:55 - um following along and typing it out is a great 
way to remember so to change the color we use  
17:00 - foreground color and I'm going to hit dot so we 
can bring up autocomplete I'm going to choose  
17:07 - orange press enter that's there it is it's orange 
I am going to go to the end and hit dot again and  
17:15 - this time I'm going to change the font and red 
dot again I'm going to choose caption to make  
17:21 - it smaller so that's about the size that 
I would want it now I would have to apply  
17:27 - let me just make some more space so it's easier 
to see yeah perfect now I could apply these two  
17:35 - things to each star like that all right and that 
would essentially get me what I want but there is  
17:43 - a better way to do this and that is to put these 
two modifiers instead on the H stack right here  
17:52 - okay Watch What Happens I'm 
going to take off these modifiers
17:59 - you can see that each of them have the orange 
color and the caption size the reason for this is  
18:06 - because modifiers on a container view get applied 
to all the views inside of it that's awesome right  
18:13 - so I actually want the same thing to happen 
to this so instead of applying it on the hstac  
18:18 - why don't we put it on the v-stack so that it 
includes this text element so command X command V  
18:27 - now you can see um the orange color in the 
caption gets applied to the whole thing
18:36 - and now for the final piece of content on the 
card itself and those are the icons on the lower  
18:41 - right corner so for this it is pretty simple 
because we have this description text already  
18:49 - in a v-stack so under here we're going to add 
the icons we're going to use SF symbols we're  
18:55 - going to use system name and let's bring up 
our trusty app here this is going to be let's  
19:02 - use binoculars and we're going to choose the 
the filled one let's copy name and paste it in  
19:08 - there whoops we need quotations like that those 
binoculars right there uh let's add another one
19:17 - this one is going to be uh I'm going 
to use a fork fork and knife copy that
19:28 - we're gonna put that we're gonna put the fork and  
19:31 - knife first now I'm going to 
put these two into an H stack
19:38 - like that and I am going to space them so that 
it is on the right hand side so all I'm going  
19:46 - to do is add a spacer element before the two 
images which pushes it all the way to the right  
19:52 - and finally we are going to change the color 
and the size we're going to add a foreground  
19:56 - of gray and the font of caption foreground color 
Gray font now you can see how typing it together  
20:08 - with autocomplete is way faster than opening up 
the library each time to choose the modifiers  
20:13 - and again if you're still more comfortable 
with doing it this way that's completely fine  
20:19 - um I love this new version of xcode and Swift 
UI where you can have multiple ways of doing  
20:25 - things you can configure things through the 
inspector because it makes it The Learning  
20:29 - Experience much better and easier as you progress 
you'll probably be not even touching the library  
20:35 - or an inspector panel you just be typing and 
you'll be moving really really fast so don't  
20:39 - worry if you're not there yet you will get there 
if you continue to progress along this journey  
20:45 - okay so next up we have the background for this 
card now let's go ahead um this is the vertical  
20:52 - stack right you can see when I select this this 
blue outline highlights the boundaries or the  
21:00 - frame of this v-stack so like the H stack the 
v-stack only takes up as as much space as it  
21:08 - needs to so you can see that it's right up against 
the edge right there so if we go down this is the  
21:15 - ending bracket for the v stack right here if 
you're not sure what you can do is collapse  
21:20 - the code in between the opening bracket and the 
closing bracket just so it's easier to read so  
21:26 - how you can do that is you press your click your 
cursor here inside the v-stack and you can go into  
21:34 - um right here code folding and you can fold and 
unfold just take note of those shortcut keys  
21:42 - inside xcode so you don't need to come into this 
menu all the time but I'm going to choose fold  
21:47 - and Watch What Happens see it folds all of that 
stuff into these two brackets so that you know  
21:54 - it's easier to work with and then it's just it's 
a visual thing that's all it is and if you want to  
22:01 - open it back up you can double click it to open it 
back up and again once you get familiar with xcode  
22:07 - you don't even need to bring out that menu you 
can use your keyboard and just do that and you can  
22:13 - move really fast so the reason I wanted to do that 
is because I want to add a modifier to the v-stack  
22:19 - and in particular the one I want to add is let's 
go under modifiers and choose background this  
22:26 - one right here layers the given view behind this 
view so essentially it allows me to specify a view  
22:36 - as a background to the v-stack so let's see how 
we can use this to our advantage so this is the  
22:43 - background for the v-stack and I wonder why 
it changes it to Blue I haven't even specified  
22:47 - any view but that was what I was gonna do so I 
was going to put a rectangle to be specific so  
22:56 - rectangle is a view you can find it 
actually inside The View Library here  
23:03 - it's a simple shape that you can specify a 
foreground color Corner radius and things  
23:11 - like that so I'm going to drag and put that in 
between the brackets of the modifier by default  
23:18 - I guess it's black so this is where things start 
to get interesting I am going to add modifiers  
23:24 - to the rectangle to change its look and feel and 
that essentially is the background for the v-stack  
23:32 - so let's go ahead and add a foreground 
color to my rectangle so I can say you  
23:39 - know dot blue for example and that would be 
blue you can say green that would be green  
23:46 - right so let's leave it as green for now we're 
going to change it later because if I change it  
23:52 - to White right now we won't be able to see it 
now the thing is we probably want some spacing  
23:58 - right you can see this is right up against 
the edge so what we're going to do is add  
24:05 - some padding I'm just going to use the padding 
modifier like we've done before and great we have  
24:10 - some padding between the edges of the screen and 
the card but what about padding inside of the card  
24:17 - right you can see the green background we'd want 
some padding there so what I'm going to do is add  
24:24 - the another padding modifier right here the fourth 
background modifier and you can see that that's  
24:31 - this padding right here whereas this padding 
is this now I know that might be a little bit  
24:37 - confusing but the way to think about this is that 
you have your v-stack this is your original View  
24:45 - and then these modifiers get applied in 
sequence that means in order so if you  
24:51 - look at the code that we have right now first we 
have padding so that adds actually let me just  
24:59 - remove this code for now I'm going 
to press command X so that you can  
25:05 - see what we have so without this padding 
modifier you can see that the blue frame
25:14 - right is right there if I add the padding element
25:21 - essentially adds padding to all four sides  
25:25 - and now I put the background modifier on 
there let me just remove that last padding bit
25:33 - right the background gets 
applied to the padding as well  
25:39 - and then when I put another padding modifier it 
gets applied to the outside of the background
25:49 - like that what happens if let's say 
I move this padding modifier here
25:57 - right then we get padding and then another set 
of padding so that's why it's so thick and then  
26:03 - the background gets applied if I take these two 
padding elements and I put it after the background  
26:09 - then we get something like this where 
there's no padding right the background  
26:12 - gets applied to the v-stack and then 
you have a set of outer padding and  
26:16 - another set of outer padding so the 
order matters sequence matters here  
26:21 - okay so now that you've understand that let's 
change this foreground color to white and  
26:27 - we're going to add another modifier to the 
rectangle and let's create some space here
26:36 - dot Shadow now I'm just going to specify 15 
for the radius and you can see that you have  
26:43 - a nice shadow effect that's how easy it is 
to apply that now the last thing to do is to  
26:47 - apply a corner radius to our card now I don't 
want to apply it after the shadow I actually  
26:52 - want to apply it before the shadow because 
I want the shadow to apply to the rounded  
26:57 - card and not round the corners of the Shadow 
because remember order matters right so if I  
27:04 - do corner radius 15 you can see that let's 
choose this you can see that um I have the  
27:12 - rounded corners and then the shadow gets applied 
but let's see say we do it the other way around  
27:19 - right and I put a corner radius on the shadow 
you can see it it completely breaks things  
27:25 - so I want to round the card first and then apply 
the shadow to the rounded card essentially is  
27:34 - the rectangle we're using it as a background for 
that v-stack okay so finally the last step is to  
27:40 - put that mint green background on everything and 
just like in lesson one we've done this before  
27:45 - so we are going to use a depth stack right 
and we're going to put a base color at the  
27:51 - bottom and then this V this whole v-stack 
card this whole thing on top of that color  
27:57 - so let's do that if you remember what is a 
depth stack right it is a set stack like that  
28:08 - I'm going to put a color I'm going to choose mint 
system mint okay and again this is the safe area  
28:18 - right so we have to apply another modifier to it 
so it ignores safe area so it goes all the way and  
28:25 - then what we're going to do is we're going to put 
the v-stack on top of it so this whole thing right  
28:30 - here and keep in mind this is still collapsed 
which also makes it easy to select command X  
28:36 - command V to paste it inside the 
set stack so there you have it  
28:42 - so how was that as you build more user 
interfaces inside xcode you're just going  
28:47 - to get faster and better remember that you 
can get the associated xcode project with  
28:52 - this lesson as well as any challenges and 
quizzes by creating a free code with Chris  
28:56 - account and taking this course on our learning 
platform we also have a free community where  
29:01 - you can get help if you are stuck on something 
just visit codecrew.codewithchris.com in the  
29:06 - next lesson we are going to build an app 
that is not just the user interface but  
29:10 - also includes applogic and user interaction so 
it's going to be a good one I'll see you there