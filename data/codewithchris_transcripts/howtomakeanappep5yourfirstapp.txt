00:07 - hello welcome to lesson 5 of how to make
00:10 - iphone apps with no programming
00:11 - experience in this lesson you're going
00:14 - to build your first iPhone app we're
00:17 - going to create a brand new Xcode
00:19 - project just like in the Xcode tour
00:22 - lesson and I'm going to spend a little
00:24 - more time going through the different
00:26 - files of your project with you this time
00:28 - so let's go ahead and create a brand new
00:30 - Xcode project if you don't have this
00:32 - welcome screen again you can go to file
00:34 - new project and we're going to choose
00:39 - single View application make sure you're
00:42 - looking under iOS I'm going to call this
00:46 - hello world its traditional in
00:50 - programming to name your first simple
00:54 - app hello world and just to output this
00:58 - phrase hello world so we're going to do
01:00 - that in this lesson now you may not have
01:02 - anything under team don't worry about it
01:04 - and organization name you can put your
01:08 - name or the company name and the
01:10 - identifier is usually comm dot your name
01:13 - or company name and make sure that
01:16 - you're selecting Swift here and make
01:19 - sure that you've selected iPhone
01:21 - otherwise you're not going to see the
01:23 - same things that I'm seeing on my screen
01:24 - and make sure that the rest of the
01:27 - options are unchecked click Next I'm
01:30 - going to save this hello world project
01:32 - on my desktop and under source control
01:35 - create git repository is unchecked now
01:39 - let's click create so it's going to
01:41 - create our basic bare-bones single
01:45 - screen application on the left hand side
01:47 - we have our file Navigator let's go
01:50 - through these files and what they mean
01:52 - so app delegate dot Swift now the app
01:55 - delegate handles a lot of the high level
01:57 - app events that can happen when your app
02:00 - is running on a device things such as
02:02 - the user pressing the home button and
02:05 - your app going into the background and
02:07 - then subsequently the user bringing your
02:09 - app back into the foreground or your
02:11 - application finished launching or
02:13 - or your application is terminated so
02:16 - events like that that happened to your
02:18 - app at a system level app delegate dot
02:21 - Swift gives you a chance to handle or
02:24 - write code against those events so there
02:27 - are a lot of comments here that tells
02:28 - you what sorts of events are happening
02:31 - and where you can write code to run if
02:35 - those events happen so for example here
02:37 - application did enter background if we
02:40 - put some code into this function it's
02:42 - going to run this code whenever the app
02:44 - goes into the background so for instance
02:47 - you may want to save some data before
02:50 - the user dismisses your app into the
02:53 - background and likewise application will
02:55 - enter foreground right before that
02:58 - happens you may want to run some code to
03:00 - prepare the view or something like that
03:01 - or to bring the data back so those are
03:04 - just some examples of things that you
03:06 - can do in response to these system level
03:09 - events ok next up we have the view
03:12 - controller dot Swift as you learned in
03:15 - the previous lesson the view controller
03:17 - is responsible for managing the
03:20 - interaction between the model the data
03:23 - and the view that the user sees in this
03:28 - basic single view application we don't
03:30 - really have a model or data but we do
03:32 - have a view and that's in the main
03:34 - storyboard so what is the storyboard
03:37 - well it actually is a visual diagram or
03:41 - flow of our app where we can see all of
03:44 - the views of our app and how they flow
03:47 - together in this single view application
03:49 - we only have one view right here and
03:51 - this arrow that you see to the left well
03:54 - this arrow denotes the entry point for
03:57 - our app and right now it's pointing to
03:58 - this view which makes sense because we
04:00 - only have one view and this view is
04:03 - controlled or managed by the view
04:05 - controller file here this view
04:07 - controller that Swift now typically in a
04:13 - more complex application in this main
04:15 - dot storyboard file you may see multiple
04:18 - views and you may have multiple view
04:20 - controllers each controlling a view here
04:23 - in this single view application you only
04:25 - see this one view
04:27 - you can also zoom in and out by clicking
04:31 - these arrows here or you can double
04:33 - click even we're going to get back to
04:38 - the interface builder in a second and
04:40 - I'm going to show you some more cool
04:41 - things with it but first let's go
04:43 - through the rest of the files in our
04:44 - project as I told you before this is the
04:47 - asset library this is where we group our
04:50 - graphic assets together so for example
04:53 - here we have a listing for app icon now
04:55 - why do we have so many slots for app
04:57 - icons well we can specify different
05:00 - icons for different sizes for example
05:04 - our app icon can show up as a
05:06 - notification in that case there would be
05:09 - two sizes and different sizes as opposed
05:13 - to if let's say the user was searching
05:15 - on their phone and our app showed up as
05:19 - a search result that would be under here
05:21 - spotlight and then just here would be
05:24 - the app icon on the dashboard of the
05:27 - iPhone itself now we have 2x and 3x
05:31 - sizes because two X's Retina screens and
05:34 - 3x is the iPhone plus screens similarly
05:39 - when we create graphics for app let's
05:41 - say we have a button graphic that is
05:44 - going to be listed on the left here when
05:47 - we tap it it's going to have slots for
05:49 - the 2x version and the 3x version in the
05:51 - future I'm going to show you how to
05:53 - create those different sized graphic
05:55 - assets okay moving on we have launch
05:58 - screen storyboard now this is the launch
06:01 - screen for your application you can
06:03 - customize it visually not much to say
06:05 - about that here info.plist we can
06:09 - configure some values for applications
06:11 - such as the version number and stuff
06:13 - like that we're not going to be needing
06:15 - to use this at least for now
06:17 - so let's move on back to the main dot
06:20 - storyboard now I mentioned before that
06:23 - the first app that we're going to create
06:25 - is going to be a hello world type of
06:28 - application so what we're going to want
06:30 - to do is put a label onto our view we're
06:33 - going to want to Center that label and
06:34 - change the text of that label to hello
06:37 - world let's start by going over to the
06:40 - right
06:40 - side under the library pain make sure
06:42 - you're looking at this tab right here
06:44 - I'm going to search for a label it's
06:47 - going to show me the label element and
06:50 - I'm going to drag that on to the view
06:52 - like that by default it's says label if
06:58 - I tap the label and make sure that it's
07:01 - highlighted on the attribute inspector I
07:04 - can change the text to hello world like
07:08 - that there we go now it's a little bit
07:14 - cut off but that's okay I'm just going
07:16 - to lengthen up like this and what we're
07:18 - going to do here is just run the
07:21 - application so I'm going to go up to the
07:25 - upper left hand corner and click this
07:27 - play button I have iPhone se selected
07:32 - okay so we see the hello world label and
07:35 - I don't know if you can tell but it's
07:37 - actually off-center a little bit now why
07:40 - is that well it is pretty much in the
07:43 - center in my view here on the storyboard
07:45 - but it doesn't seem to be in the center
07:48 - here now the reason for that is because
07:50 - we don't specify position and size just
07:54 - by dragging and resizing things here
07:56 - there's actually a more complex system
07:59 - in play where we need to specify rules
08:02 - that govern how this label is laid out
08:04 - right now all we did is we added a label
08:07 - to the view and we haven't specified any
08:09 - sort of rules regarding how it should be
08:11 - laid out and the system I'm referring to
08:14 - is called Auto layout and the rules
08:16 - which I refer to are called constraints
08:19 - so what I want to show you how to do
08:21 - right now is add two constraints to this
08:24 - label one to vertically Center it and
08:27 - the second constraint to horizontally
08:29 - Center this label what I want you to do
08:31 - is make sure that you have your label
08:33 - selected by tapping on it and then once
08:36 - that is selected go down here to the
08:40 - lower right hand corner where you see
08:41 - these buttons here if you click this one
08:46 - that looks like two horizontal bars and
08:48 - this is the alignment menu we're going
08:51 - to be able to
08:52 - check off horizontally in container and
08:55 - vertically in container and the button
08:58 - now updates to add to constraints if I
09:01 - click this button it's going to add
09:03 - those two constraints to the label now
09:06 - in my view it hasn't updated yet to
09:09 - apply these two rules so what I need to
09:11 - do is make sure that my label is
09:13 - selected once again and go down to this
09:15 - button here resolve auto layout issues
09:19 - and scroll down to update frames either
09:23 - all views in View controller or update
09:27 - frames in selected views and that's
09:30 - going to Center my label and apply those
09:33 - two rules now if you didn't see anything
09:37 - in this menu here make sure that your
09:40 - hello world label is selected first
09:42 - before you go down to this menu to
09:44 - update frames or else it will be blanked
09:46 - out okay another thing I want to point
09:49 - out to you is that this area right here
09:54 - in your interface builder this left-hand
09:55 - side now don't confuse this with the
09:58 - file navigator see this is the file
10:00 - navigator here these are the files of
10:01 - your project but when you're an
10:03 - interface builder there is another pane
10:06 - here that lists all of the elements in
10:09 - your view if you don't see this there's
10:11 - a button down here in the lower left
10:14 - hand corner that says hide document
10:15 - outline okay this thing is called your
10:17 - document outline it's going to show you
10:19 - everything you have in your mu let me
10:22 - click this button to demonstrate see it
10:23 - hides it if it's hidden for you click
10:25 - this button again to show this document
10:27 - outline because you can see the view is
10:30 - here you can see that we have our hello
10:32 - world label here and then under here
10:35 - when we added the two constraints it
10:37 - added it under here so if you ever
10:41 - accidentally added a constraint or you
10:44 - want to change your constraint you can
10:46 - either select the constraint here and go
10:49 - into your attributes inspector and you
10:51 - can edit these properties and values or
10:53 - you can quite simply delete these
10:56 - constraints from the document outline so
10:58 - let me show you how to do that select
11:00 - the constraint delete delete' and now my
11:03 - hello world has no
11:06 - again so I'm going to have to select
11:08 - hello world go back down to this menu
11:10 - and check off those two to add these two
11:15 - constraints now one cool feature of
11:18 - Xcode 8 is that you can preview what
11:21 - your view looks like in different
11:22 - devices and orientations now you
11:25 - couldn't do this before in Xcode 7 so
11:28 - check it out down here it says view as
11:30 - iPhone 6s ok I'm going to click this and
11:34 - it opens up a bunch of devices and
11:36 - orientations for example I can see how
11:39 - this would look on an iPad now I
11:42 - probably have to zoom out a little bit I
11:45 - can see how it looks on the smallest
11:47 - iPhone which is the 4s I'm going to have
11:51 - to zoom in a little bit more and
11:52 - furthermore how would look in landscape
11:56 - orientation so with this you can see how
12:00 - your view is going to look like in all
12:03 - sorts of different devices and
12:04 - orientations and you can adjust your
12:06 - elements or add specific rules to
12:09 - certain screen sizes or orientations to
12:13 - accommodate for those devices and
12:16 - orientations
12:17 - ok now finally let's go and run our
12:20 - application now and make sure that that
12:22 - label is centered ok and now you have it
12:26 - hello world centered in the middle of
12:29 - your view you've built your first very
12:31 - simple iPhone app in the next module
12:33 - we're going to build a more complex app
12:36 - where you're actually going to add more
12:38 - graphics you're going to add Swift code
12:40 - and you're going to build more complex
12:42 - layout so hope you've been able to
12:46 - follow along so far thanks for learning
12:47 - with me and let's continue on to the
12:50 - next lesson
12:52 - you