00:07 - hey guys welcome back and if this is
00:10 - your first time here welcome to code
00:12 - with Chris I'm Chris and today we're
00:16 - going to be talking about variable and
00:18 - method scoping and objective C so let's
00:21 - get to it okay so let's get started
00:25 - once again you can download this
00:27 - particular Xcode project in the
00:29 - description or click an annotation on
00:31 - the screen so first I'm going to start
00:34 - off with creating a class and we've seen
00:38 - how to do this in previous video videos
00:40 - I'm just going to create another class
00:43 - called my class and you put it in the
00:45 - root directory and let's look in the
00:50 - interface file so we're going to talk
00:53 - about the different access levels for
00:56 - variables first so if I wanted to
00:59 - declare some instance variables I'd open
01:02 - up a set of curly braces and for example
01:06 - if I wanted to do an integer go
01:08 - something like that and by default this
01:12 - is protected so what that means is that
01:15 - any subclass of my class can access this
01:19 - instance variable and that's the
01:22 - equivalent of typing something like this
01:26 - you know and then I can list out all of
01:29 - my protected variables so by default
01:34 - already by default already any variable
01:39 - I declare without this is protected if I
01:44 - wanted to clear public variables that
01:47 - any class could access then I would go
01:51 - like this
01:53 - public and then there is also private so
01:57 - if you wanted to declare
02:03 - private variables something like that
02:05 - then it would only be accessible to your
02:09 - implementation of that class now let's
02:13 - talk about methods so we saw before that
02:16 - you declare an instance method something
02:20 - like that but what if you wanted a
02:26 - private method so what you can do is in
02:30 - the implementation file you can declare
02:34 - what's called a class extension and it's
02:38 - basically a private interface where you
02:40 - would put your methods and stuff so if
02:43 - you take a look at view controller in
02:45 - this view controller class was created
02:46 - for us by Xcode by default go into view
02:51 - controller m and you'll notice up here
02:54 - that there's no like a stub for a
02:57 - private interface for view controller
02:59 - and this is in the dot M file so we
03:03 - would kind of do the same thing in my
03:04 - Class C class extension line class and
03:18 - if I declared a method in here
03:27 - this method wouldn't be accessible to
03:29 - other classes and also if you wanted to
03:34 - declare you know private instance
03:37 - variables you could also do it in here
03:39 - by opening up a set of curly braces and
03:47 - and declaring it in there as far as I
03:51 - know I don't think there is a difference
03:54 - if you do it in the header file or in
03:56 - this class extension so now let's test
04:01 - out some of this stuff if we go back to
04:03 - view controller dot M I'm going to
04:07 - import
04:08 - my class and then I'm just going to
04:13 - create a new instance of it I'll locate
04:25 - it and initialize it and then I am going
04:30 - to try to access some of the stuff that
04:33 - we talked about so for example if I try
04:39 - to call a method you'll see that we
04:43 - declared in my class dot M we declared a
04:45 - private method and then in the header
04:48 - file we declared an instance method
04:50 - called my method let's change that to my
04:52 - instance method and then in here you can
04:57 - you can see if I class instance ok let's
05:04 - see what's wrong here ok so we've got an
05:11 - incomplete I think we have to fill this
05:14 - in actually so let's return 0 and we'll
05:26 - go back here so now you'll see that you
05:31 - can access my instance method but
05:35 - however let's assign that
05:39 - now however you cannot access my private
05:42 - method so you can see it doesn't even
05:47 - come up in terms of variables we have
05:55 - what did we declare in terms of
05:57 - variables here we have two public
05:59 - variables my int and my bool and my n2
06:02 - is a private variable and seen here so
06:14 - you can even see from here that my pool
06:16 - and my int are accessible while my n2 is
06:20 - not so there's another way to declare a
06:25 - private method the first way we did it
06:27 - was by declaring a private method in our
06:30 - class extension this private interface
06:33 - here and then we you know the second
06:36 - part to that would be actually
06:38 - implementing that private method in here
06:42 - and saying return one or something like
06:45 - that and I'd be able to this is a void
06:48 - so let's change that to return an
06:50 - integer integer and returns one so in my
06:57 - instance method I could actually call
07:00 - self this instance and access that
07:04 - private method now second way of doing
07:08 - it is I can forgo declaring it up here
07:12 - in the interface at all
07:20 - and just go ahead and implement one and
07:29 - you know I'd be able to use it just the
07:32 - same and then if we go to view
07:35 - controller em I can show you that we
07:42 - wouldn't be able to access either
07:44 - private method click we name that my
07:47 - private method so you can see if we try
07:54 - to do that it would not let us did we
08:03 - call it mine oh we just called it
08:05 - private method and other private method
08:06 - so let's go back yeah so it's the same
08:16 - thing we wouldn't be able to access the
08:18 - private method
08:28 - so as you can see there are many
08:31 - different ways for you to control the
08:33 - scope of your variables and methods but
08:35 - whatever way you choose I would
08:37 - recommend you to be consistent
08:39 - throughout your Xcode project now for
08:41 - your fact of the day did you know that
08:43 - the keyboard on the iPhone the one that
08:46 - slides up when you hit a text box that
08:48 - little keyboard there supports 21
08:50 - languages so I know typing in English
08:54 - because I'm an english-speaking person
08:56 - it's pretty good but I'm interested to
08:59 - know for those of you who use your
09:01 - iPhone in a different language if you
09:04 - find that experience just as good or if
09:06 - it's you know let me know if it's very
09:08 - cumbersome because I imagine with you
09:10 - know some of the Asian languages with
09:12 - you know tons of characters that it
09:15 - might be really hard to type out a full
09:18 - sentence or it might take a lot of
09:19 - different keystrokes so let me know in
09:21 - the comments section below
09:28 - you
09:35 - you