00:01 - [Music]
00:06 - hey guys welcome to lesson 9 of how to
00:08 - make iPhone apps with no programming
00:10 - experience and in this lesson we are
00:13 - going to look at IB Outlet properties
00:16 - and how to expose all of the elements we
00:19 - added to the storyboard to the view
00:21 - controller for
00:23 - manipulation in the last two lessons you
00:25 - learned a lot about Swift classes and
00:28 - you learned about UI kit so let me point
00:31 - out to you how we've been using uiit all
00:34 - along so in building this storyboard we
00:38 - were looking through this objects
00:40 - library in the lower right hand corner
00:42 - here well all of these elements are
00:46 - actually part of UI kit these are all
00:49 - classes in kind of like a visual form so
00:53 - when we drag it onto the storyboard uh
00:56 - just to remind you we added a button
00:58 - here we added two two UI image views we
01:01 - added a big UI image View at the back
01:05 - and the button is a UI button and these
01:07 - image views are UI image views so if you
01:10 - bring up the UI kit reference and you
01:13 - search for
01:14 - it you'll actually find the UI button
01:17 - class here and if you search for the UI
01:22 - image view you'll find it as
01:25 - well you know these two classes are
01:28 - pre-built by Apple for us to use so that
01:31 - we can basically create buttons and
01:33 - display images very easily in our apps
01:36 - without having to code any of that
01:38 - behavior ourselves and when we're
01:41 - setting the attributes let's say I'm
01:43 - going to click this element here and in
01:46 - the inspector view right here you know
01:49 - you can set the background color you can
01:51 - set the alpha you can set the text what
01:54 - the images all of the stuff that you're
01:56 - configuring here you're actually setting
01:58 - properties of of that object when you
02:02 - run the app the information in this
02:04 - storyboard is going to be used to create
02:08 - objects that the storyboard specifies so
02:11 - in this example when we run the app it's
02:14 - going to take a look at the storyboard
02:16 - and this itself is a UI view object
02:20 - first of all uh and we've got a
02:22 - background UI image view object it's
02:25 - going to create two more UI image view
02:27 - objects to display the cards it's going
02:29 - to create a UI button object and I think
02:32 - we actually have another UI view element
02:36 - to contain these two UI image views so
02:39 - let me open up the document outline it's
02:41 - a little more clear here so you can see
02:44 - this is the entire
02:45 - view this is a UI view object if we
02:49 - search for UI
02:55 - view okay
02:58 - well
03:01 - we go from the very top there it is so
03:04 - it's a UI view object okay and then
03:07 - we've got a UI image view object and
03:11 - then this card container view is another
03:14 - UI view object which contains two UI
03:17 - image view objects and finally a UI
03:20 - button actually a a play button
03:23 - container which is a UI view object
03:27 - which contains a button object the UI
03:30 - button
03:31 - object so that's kind of how our user
03:35 - interface is
03:36 - constructed and when the app is run this
03:40 - information is going to get turned into
03:42 - objects of those classes along with all
03:45 - of the configured properties here the
03:48 - objects that are created will have the
03:50 - properties set according to what we've
03:53 - configured here in interface Builder
03:56 - Okay so this is consistent with what we
03:58 - talked about in the classes lesson when
04:01 - I said that ex an xcode project is just
04:04 - a writing a bunch of classes which gets
04:07 - turned into objects which does the
04:10 - interacting with each other it's just
04:12 - that for the view instead of writing
04:14 - code in a class you are visually doing
04:17 - it in a storyboard which gets turned
04:19 - into objects and you know what you can
04:22 - actually just forego the storyboard
04:24 - later when you get more familiar and you
04:26 - get more advanced with things you can
04:28 - foro the storyboard completely and you
04:31 - can use Swift code to create all of
04:34 - these classes sorry create all of these
04:37 - objects and add them to the view instead
04:39 - of describing it with a storyboard okay
04:42 - so now let's take a look at the view
04:44 - controller class viewcontroller.swift
04:47 - and now you will understand what all of
04:51 - this code means because we went over it
04:53 - in the last two lessons so the first
04:55 - line is import UI kit so import is a
04:59 - keyword which allows us to use all of
05:02 - the classes in UI kit so that's why this
05:05 - import statement is here and you can see
05:08 - here that this is a class declaration
05:10 - for a class called view controller and
05:14 - it subclasses UI view controller UI view
05:17 - controller is actually a class from UI
05:21 - kit so we can search for
05:24 - it in here so there you
05:28 - go and this is a class that Apple
05:31 - provides for us to use to manage the UI
05:34 - view so we don't actually have to code
05:37 - up the UI view controller or the UI view
05:39 - those classes are provided for us and in
05:42 - this view controller class we can see
05:44 - that there's are two methods both are
05:48 - overridden from the super class and
05:51 - that's view did
05:52 - load in here it calls the super classes
05:55 - view did load and here we can provide
05:58 - any custom
06:00 - functionality uh and this method is
06:02 - automatically triggered when this view
06:06 - is created and attached to the view
06:09 - controller for
06:11 - management and then there's another
06:13 - overridden method did receive memory
06:16 - warning uh and then it also calls the
06:18 - super classes did receive memory warning
06:21 - we most likely don't have to worry about
06:23 - this too much but we can manually free
06:25 - up memory here if we
06:28 - need and that's basically it this is
06:30 - kind of like your base view controller
06:33 - so we kind of have a divide because our
06:37 - view is specified through this visual
06:41 - interface
06:42 - Builder and the view controller is
06:45 - described with swift code here so how do
06:48 - we merge how do we connect the two so
06:50 - that the view controller can actually
06:53 - manage these objects that will be
06:56 - created by the
06:57 - storyboard so we can do that that using
07:00 - IB Outlet properties we've talked about
07:03 - properties before in a previous lesson
07:05 - IB Outlet properties are nothing more
07:07 - than regular properties except that they
07:10 - refer to elements that you have declared
07:14 - in the storyboard so there's a very easy
07:17 - way to declare an IB Outlet property and
07:21 - connect it to one of these elements that
07:23 - are in the storyboard so all we need to
07:25 - do is go up here to these view buttons
07:30 - right now we're looking at the standard
07:32 - editor you can actually change it to
07:34 - something called the assistant editor
07:36 - and I'm going to click that when you do
07:38 - that it changes the view into two
07:41 - different panes I'm just going to close
07:43 - this document outline so we get a little
07:45 - more space I'm going to close this tab
07:48 - as
07:49 - well just give ourselves a little more
07:52 - space here and what we want to do is on
07:54 - the left side we want to look at our
07:56 - view in the storyboard and on the right
07:59 - right hand side we want to look at the
08:01 - view controller
08:03 - class and all you have to do is let's
08:06 - say if we want to create an IB Outlet
08:09 - property for this first image view all
08:14 - you have to do is hold down control on
08:17 - your keyboard and then click and drag
08:21 - and this blue line will form and you
08:23 - want to drag it right underneath this
08:25 - class declaration where you would
08:27 - normally declare your properties for
08:28 - that class anyways so when you drop it
08:31 - or you let go of the mouse button it'll
08:33 - pop up a little
08:34 - window and you can see that we can
08:38 - specify a name and we can specify a type
08:42 - cuz with property declarations you have
08:45 - to declare what type of data it'll hold
08:47 - right and this type UI image view
08:49 - specifies that that property is going to
08:52 - be referring to a UI image view object
08:56 - so I'm going to give it a name I'm going
08:57 - to call it
09:00 - first card image
09:04 - View and for the storage
09:06 - type you can just leave it as weak uh
09:09 - there's another option for strong but
09:12 - we're not going to go through that now
09:14 - because it will require a more advanced
09:18 - understanding of how the memory
09:19 - management works behind the scenes and
09:21 - we're going to go through that later on
09:24 - however if you want to read about it now
09:27 - I'll provide links in the so that you
09:30 - can do further research into that if you
09:32 - would like but for now you're not going
09:34 - to need to know the difference then you
09:37 - want to click connect so what happens is
09:41 - this keyword IB Outlet is created and
09:45 - then weak is referring to that storage
09:48 - type we talked about and then this
09:52 - VAR is starting the property declaration
09:55 - that you know and that we've done in the
09:56 - previous lesson this is the property
09:58 - name you know followed by colon and then
10:01 - the type of data that it's going to hold
10:03 - and this exclamation mark is something
10:05 - that we haven't gone through yet but we
10:09 - also will not go through that in this
10:11 - video and again I'll provide a link at
10:13 - the bottom if you want to do further
10:15 - research into that but it's probably
10:17 - going to confuse you more than it's
10:19 - going to help right now okay next I'm
10:21 - going to do the same thing with the
10:24 - second image
10:26 - view I'm just going to drag it right
10:28 - below this one I'm going to call this
10:29 - one second card image
10:34 - view uh what else will the view
10:36 - controller need to manage it's going to
10:39 - manage the
10:41 - button so I'm going to click and drag it
10:46 - there I'm going to call this the play
10:50 - round
10:51 - button oops I called it a bron
10:55 - accidentally and now I'm actually going
10:57 - to show you something
10:59 - that a lot of beginners do by accident
11:03 - and it ends up crashing their app so I
11:06 - made a typo so naturally you'll want to
11:09 - delete this right and you'll want to try
11:14 - it
11:16 - again right and this time you're going
11:19 - to call it play round
11:23 - button however what actually is
11:27 - happening behind the scenes is that now
11:29 - your play button is connected to two
11:31 - properties it's connected to this
11:34 - playround button but it's also connected
11:38 - to the typo property that you just
11:41 - deleted and if we don't disconnect it
11:45 - from that deleted property when you run
11:46 - your app it's going to crash because it
11:49 - can't find that property so what you
11:51 - want to do is go back to your
11:54 - storyboard and if you have a a mouse
11:56 - with two buttons you can just rightclick
11:59 - or if you don't have if you have a
12:02 - single Mouse button you can hold down
12:04 - control and single click it and then
12:07 - you'll get this menu as well so if we
12:09 - scroll down to referencing Outlets
12:11 - you'll see that it's connected still to
12:15 - playr Baron which no longer exists so we
12:19 - have to click this x to break the
12:21 - connection and now it's only connected
12:24 - to playround button okay so that's
12:26 - really important because I see that
12:28 - mistake being made a lot and um people
12:32 - don't know why their app is
12:34 - crashing okay the last thing we want to
12:36 - connect is this big background this big
12:39 - UI image view so I'm just going to do
12:43 - what we've been doing here background
12:47 - image
12:50 - view okay and you can see also that here
12:55 - these little gray
12:57 - circles indicate that that these Outlet
13:00 - properties are connected to elements if
13:03 - we broke off the connection you would
13:05 - see a circle with an empty Center it
13:09 - doesn't have the gray uh filled in and
13:11 - that means that this Outlet property is
13:13 - not connected to any element in your
13:17 - storyboard okay and just like that we've
13:19 - created four IB Outlet properties all of
13:23 - which are connected to the elements in
13:25 - our storyboard in our view so now from
13:29 - The View controller we can write Swift
13:31 - Code just like we've done in the
13:33 - previous lessons when we were doing it
13:35 - in the playground how we were accessing
13:39 - uh the properties for our classes and
13:41 - assigning things into it and changing
13:43 - changing things we could do the same
13:45 - thing
13:46 - here so for example in my view did load
13:50 - now I can type self dot you know first
13:53 - card image view like that so now I'm
13:57 - actually referring to to this property
14:00 - but this property is referring to this
14:02 - element in my view this object and I can
14:05 - go Dot and I can access all of its
14:09 - methods and properties and I can
14:11 - configure them and change them through
14:13 - code and if you want to find out what
14:16 - kind of properties or methods they have
14:19 - you can always refer back to the UI kit
14:22 - documentation and just look up UI image
14:26 - view right here
14:29 - if you click
14:30 - that uh you can toggle it to Swift and
14:35 - then on the left upper hand side usually
14:39 - Apple will have some common tasks that
14:42 - you do with this object or this class
14:45 - and when you click it it's going to show
14:47 - you how to use it so that's really
14:49 - helpful to
14:51 - know at first you won't know many of the
14:54 - properties and methods of these uiit
14:56 - classes uiit is just so so huge and
14:59 - there's so many different properties and
15:01 - methods in each class so my advice is
15:04 - that you don't have to go and start
15:05 - memorizing anything as long as you're
15:07 - following the videos and we're going to
15:09 - be working with these UI kit classes
15:11 - you're going to see me use properties
15:13 - and methods of these classes so you're
15:15 - going to know it exists and a lot a lot
15:18 - of the times when I'm using a brand new
15:20 - UI kit class that I've never used before
15:23 - um I will have to refer to the
15:25 - documentation to look at what properties
15:27 - and methods are available with so that's
15:29 - very common as well and that's why the
15:31 - documentation is there so right now I am
15:34 - just going to very simply I'm going to
15:37 - change the title of the button just to
15:39 - demonstrate a simple configuration I'm
15:42 - going to go self. playround button and
15:46 - the UI button class has a method called
15:49 - set
15:51 - title and this is the method that we're
15:54 - going to use to change the text in the
15:56 - button here so so you're going to see
15:59 - that even though in the storyboard we
16:01 - specified the title to be play around
16:03 - after the storyboard gets turned into a
16:06 - view object and all of these guys into
16:07 - their own objects when it gets connected
16:10 - to the UI view controller this view did
16:13 - load function is going to get called and
16:16 - then this line that we're writing now
16:18 - this line of Swift code is going to
16:20 - access that UI button object that is
16:23 - created and it's going to call this
16:25 - method set title and then it's going to
16:28 - change text
16:31 - to play and here the next thing we have
16:35 - to specify for this method is a UI
16:38 - control State the button has a couple of
16:40 - different states we want to set it for
16:42 - the normal state so all we have to do is
16:45 - type UI
16:47 - control
16:49 - state do
16:53 - normal when we were working in the
16:55 - playground we were calling methods that
16:57 - had no input in them so normally those
17:01 - methods just looked
17:03 - like this the method name followed by
17:06 - two brackets but the more complicated
17:10 - methods actually have parameters that
17:12 - you need to provide and this is one of
17:14 - those
17:17 - methods so in this one we pass in to
17:20 - parameters so I'm going to run it now
17:23 - and you're going to see that the button
17:24 - has changed to
17:26 - play just like that so in this lesson I
17:29 - just wanted to demonstrate how we were
17:31 - using the UI kit classes in our excode
17:34 - project and I wanted to show you guys
17:36 - how to connect those elements that we
17:39 - added into the storyboard to the view
17:41 - controller don't worry if you feel
17:43 - overwhelmed with all of the properties
17:45 - and methods that are available to the
17:48 - uiip classes because as we use them
17:51 - throughout our lessons you're going to
17:53 - get to know them pretty
17:54 - well as for methods with multiple
17:58 - parameters as input and returning data
18:01 - to the caller we're actually going to go
18:03 - through that in the following lesson so
18:05 - you're going to be able to better
18:07 - understand a method call that looks like
18:10 - this okay so I hope you're following
18:12 - Along on your own xcode project because
18:15 - that's literally the best thing you can
18:16 - do if you want to really get the hang of
18:19 - things so try it out and let me know if
18:21 - you have any
18:24 - [Music]
18:27 - questions