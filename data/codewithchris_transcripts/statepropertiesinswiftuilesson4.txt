00:00 - hello and welcome in this lesson I'm going to 
teach you all about state properties and how to  
00:04 - use them so that when the values in these state 
properties change your apps user interface will  
00:09 - adapt and change and update automatically all 
right let's dive in hi my name is Chris and if  
00:21 - this is your first time here welcome to code with 
Chris where we teach beginners how to make an app  
00:25 - even if you've never coded before now before we 
dive into state properties I have a quick question  
00:30 - for you how are you liking Swift UI so far let me 
know by leaving a comment below and on your way  
00:35 - down there if you wouldn't mind please give this 
video a quick like it really helps me out thank  
00:40 - you alright with that said let's get started state 
is a very easy concept to understand essentially  
00:46 - it's a piece of data that the user interface 
depends on let's say you're looking at a photo  
00:50 - and this app has the ability to heart a photo that 
you like so you might have a state property that  
00:56 - keeps track of whether this photo is hearted or 
not by the user if the state is set to false then  
01:02 - the user interface will display an empty heart if 
the state is set to true then the UI will display  
01:08 - a filled heart so let's go into Xcode now and 
I'll show you how easy it is to implement this  
01:12 - now here we have the Swift UI project from the 
previous lesson and we're going to build upon  
01:18 - this to demonstrate state properties if you didn't 
build this project from the previous lesson not to  
01:23 - worry you can find this starter project in the 
resources for this lesson however if you did  
01:29 - build this project from lesson 3 then you can go 
ahead feel free to use yours let's describe what  
01:36 - we're gonna do in terms of state properties here 
so I'm gonna put a heart button here between the  
01:42 - image and the text that the user can tap on to 
toggle whether they like this photo or not and  
01:48 - depending on that state we're gonna have that 
heart icon change to a filled heart or an empty  
01:53 - heart to reflect that status and we're also going 
to have a count in in terms of the number of likes  
02:01 - or hearts now let's start by adding the heart icon 
in between this pink building image and the type  
02:09 - so here I've got my V stack and I'm gonna do 
that right here now rather than adding my own  
02:14 - image assets for the heart we can use something 
called SF symbols without getting too much into  
02:20 - it because I want to dive deeper into it in the 
next lesson I'll just say that SF symbols is a  
02:26 - collection of icons and symbols that you can use 
it comes packaged with iOS 13 and you can just use  
02:34 - them they're very helpful so let me you gotta 
take it at face value here and just copy what  
02:39 - I do in the next lesson I'll dive a little deeper 
into how you use them and what they are and what  
02:43 - you can do with them alright so you start with an 
image but we're gonna use the system name or named  
02:51 - system name initializer and we're gonna pass in 
the name of the symbol so I'm just gonna say heart  
02:58 - and you're instantly going to see that heart icon 
there that's just part of the system I didn't have  
03:04 - to add that as an asset now there's a different 
one called heart fill and it's essentially  
03:09 - the same icon but filled in now this is just a 
static image icon right here we want to make this  
03:16 - dependent on some sort of state right so let's go 
ahead and declare our first state property we're  
03:22 - gonna do it right under this content view struck 
here before the body and the magical keyword we  
03:28 - use is at capital S state and that's going 
to indicate any state property use the VAR  
03:35 - keyword just like a normal property and you give 
it a name I'm gonna call this is hearted and I'm  
03:41 - going to set it to false now one thing that you 
want to do is a recommended practice is actually  
03:48 - to make it a private property and the reason for 
this is because state properties are really meant  
03:54 - to describe the state of this particular view 
which is content view if you have a piece of  
04:01 - data or a property which you want multiple views 
to depend on there are other mechanisms to do that  
04:08 - that wouldn't be using a state property so we 
can get into those later on in the series but  
04:16 - for now we're looking at state properties and 
the reason why we make it private is just to  
04:20 - reinforce the fact that it's only accessible 
by content view and that's what happens when  
04:26 - you use this private keyword access modifier so 
that's why we put private there just to reinforce  
04:33 - that all right so what were we doing here okay so 
we've declared our state property is hearted and  
04:39 - we're gonna make it this icon depend on that very 
simply we're just going to use an if statement if  
04:45 - is hearted you know is true then we're gonna 
display this heart let's see what happens here  
04:53 - because it is set to false so this is not going 
to trigger if you hit resume you'll see that it
05:01 - disappears because this is false so it's not gonna 
happen I have this image element here but if I add  
05:12 - an else clause and I show an empty heart instead 
when that is false then we're gonna see an empty  
05:28 - heart right because this state is false right 
so it's going into this branch and showing this  
05:34 - so let me set this to true and resume it and it is 
filled in now that's not too amazing sorry because  
05:47 - I'm manually changing the state here's through 
code it's basically just toggling between these  
05:53 - two branches of the if statement but however let's 
say we change that heart into a button I'm gonna  
06:00 - declare a new button so let's go ahead and do that 
and for the action we are going to toggle the is  
06:09 - hearted property when you call the toggle method 
in case you haven't used this it just toggles it  
06:17 - between true or false so it changes that state now 
for the label here I'm gonna get rid of this and  
06:26 - for the label of the button it's just going to 
be this code right here so the the actual image  
06:34 - of the button is going to depend on the state 
all right so now let me just run this project so  
06:40 - that we can play around with it in the simulator 
another thing you can do is actually use the live  
06:46 - preview but I'm already building it right there 
alright so we've got our UI here it is hearted  
06:56 - if I tap on it it toggles the state property is 
hearted to false and this image of the button  
07:03 - is going to change by itself see I didn't have 
to manually tell the button to change its image  
07:10 - all I had to do was toggle the state hit it again 
it toggles the state and the image of the button  
07:19 - changes automatically now this is one illustration 
of using state as a boolean but state can also be  
07:29 - an integer it can it can be anything so I'm going 
to show you another an example of a state and I'm  
07:39 - gonna call this num hearts I'm gonna make this 
999 and I'll set this back to false okay so the  
07:50 - now we're using state as an integer and so what 
I want to do is show the count beside the heart  
07:56 - and we're gonna do here is we're gonna declare 
a horizontal stack we're gonna put the button  
08:06 - inside of it and then we're also going to have the 
count so I'm gonna have a text which is going to  
08:15 - be the num hearts the problem is that num hearts 
is an integer and in order to display it inside  
08:22 - a text element I'm gonna have to convert it to a 
string so let's go ahead and create a string from  
08:29 - that and I'm gonna hit resume and we should see 
the label right beside it all right let me just  
08:38 - try running this project all right so I've got 
nine nine nine nothing happens obviously because  
08:48 - we haven't added the code yeah but what if I 
add the code to increase or decrease the count  
08:54 - whenever I toggle it so I'm gonna change that 
code right here so when I toggle it I'm gonna  
09:00 - add some additional code and it's starting to look 
pretty messy so actually I'm just gonna reinvent  
09:06 - everything I'm gonna select everything go into 
editor go into structure and hit re indent if  
09:12 - you didn't know about this this is the shortcut 
key or the menu item tap on that it's just going  
09:17 - to make everything nice and tidy for you all 
right now we're going to say you know if self  
09:22 - is hearted then we are going to say num hearts is 
plus equal one it's gonna add one to the number  
09:33 - of hearts else we're gonna minus one and the 
reason for that is because you are unhardened
09:44 - you're removing a vote essentially so let me run 
this project again in the simulator alright so  
10:00 - when I tap on this now it's actually going to 
toggle this to true and it's going to increase  
10:06 - that number of hearts to a thousand and we're 
gonna see that this text increases automatically  
10:14 - in uikit in order to do this I would have had to 
set the text property of this label to a thousand  
10:24 - you know to the updated camp but in Swift UI 
because we're using state properties all I  
10:29 - need to do is update the property and all of the 
pieces of the UI that depend on those property  
10:35 - that are listening to changes for those properties 
they just update themselves automatically that's  
10:41 - how great and easy that is to do now I have a 
challenge for you guys and that is to change  
10:48 - this text down here if the image is hearted then 
I want you to just have this amazing text that  
10:56 - we have here but if it is not hearted then I 
want you to use some basic text or some very  
11:03 - sad pathetic looking text use some small font 
or something like that but if it's hearted then  
11:09 - we're gonna make this bold pink and amazing like 
I think this is pretty pink bold and amazing but  
11:15 - you can make it even more amazing if you'd like 
just to get some extra practice in with using  
11:20 - state properties so in this lesson you'll learn 
all about state properties and how you can have  
11:25 - your user interface update automatically when the 
values change in the next lesson I'll show you  
11:30 - what sf symbols are and some of the cool things 
that you can do with them if you enjoyed this  
11:35 - lesson please hit the subscribe button and turn 
on notifications as well so that you don't miss  
11:39 - the next video when it comes out thanks for 
watching and I'll see you in the next lesson