00:04 - hey guys welcome to lesson 4 of how to
00:07 - make iphone apps with no programming
00:09 - experience in this lesson we're going to
00:12 - talk about the anatomy of an iPhone app
00:14 - we're going to go over the major
00:16 - components that all iPhone apps have in
00:18 - common so before we dive into Xcode and
00:21 - show you how the app project represents
00:23 - those different components we're going
00:25 - to go over the different parts of an
00:27 - iPhone app first the first component is
00:31 - the view and this is what the user sees
00:33 - and interacts with on their phone the
00:37 - second component is the view controller
00:39 - and the view controller manages the view
00:42 - we're going to go into what that means a
00:44 - little later in this lesson the third
00:47 - component is the model and the model
00:49 - manages the data for your app ok so how
00:53 - do these three components work together
00:55 - to form a functioning app well the view
00:59 - controller sits in between the model and
01:02 - the view and manages the communication
01:05 - between the two so for example the view
01:08 - controller may ask the model for some
01:11 - data for example a list of contacts and
01:14 - then the view controller will pass that
01:17 - data to the view to render it to the
01:19 - user
01:20 - now similarly if the user interacts with
01:23 - the view and let's say deletes the
01:25 - contact then the view controller gets
01:27 - that interaction or gets that message
01:30 - and passes it to the model to tell it to
01:34 - remove a contact because the model
01:37 - manages the data so as you can see each
01:40 - component has its own set of
01:42 - responsibilities and a role within the
01:45 - app and they must work together to form
01:47 - a functioning app now this division of
01:50 - labor and the way that the communication
01:52 - happens between each component is a
01:55 - well-known design pattern in programming
01:57 - called Model View controller pattern or
02:00 - MVC for short and a design pattern is
02:03 - simply a best practice pattern or way to
02:06 - solve a common problem iOS development
02:09 - makes use of this design pattern heavily
02:11 - to structure the way that apps are
02:13 - by following this design pattern it's
02:16 - easier to maintain and change the code
02:18 - in the future if necessary because each
02:20 - component has a well-defined and
02:22 - contained set of responsibilities it's
02:25 - easy to swap in and out the components
02:28 - in the future if you need to make an
02:30 - update and it also helps with
02:32 - troubleshooting your code if you have a
02:34 - bug in your code depending on what sort
02:36 - of bug it is if it's a display issue or
02:40 - a data issue you'd know where to look
02:42 - instead of if all of the
02:44 - responsibilities were merged or melded
02:46 - together you would have to look at the
02:49 - overall project instead of just a single
02:52 - component in the next lesson when we
02:55 - build our first app I'll point out to
02:57 - you where these different components
02:59 - exist in the app project