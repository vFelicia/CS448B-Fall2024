00:02 - hey coders what's up it's Chris here and
00:05 - today we're going to look at saving file
00:07 - data to the parse backend and retrieving
00:09 - it so here I've got our xcode project
00:12 - which has the parse libraries integrated
00:14 - into it and we don't have anything in
00:17 - the storyboard and this is the
00:18 - viewcontroller.swift file in the
00:20 - previous lesson we were working on
00:22 - queries here in the viewed load method
00:24 - but I've erased all that code in
00:26 - preparation for showing you how to
00:29 - upload a file and just to give you a
00:31 - quick recap in case you're joining us
00:32 - for the first time in this par series
00:35 - we've created a contact class here in
00:38 - our parse back end and in it we have two
00:40 - lines of data we have an email key first
00:43 - name key and a last name key as well and
00:46 - the scenario that I'm going to show you
00:48 - in this lesson is for example if we want
00:50 - to add a profile picture for one of our
00:53 - contacts now I don't have to create
00:56 - another key say for image or anything
00:58 - like that because if you remember in
01:00 - parse if you set a key which doesn't
01:02 - exist and then you save that object back
01:04 - to the parse back end it's going to
01:06 - detect that that key doesn't exists and
01:08 - it's going to create that column or that
01:10 - key here in our data store so first
01:12 - we're going to want to let's say pull
01:14 - down a contact so let's go back here and
01:18 - we're going to create a query to
01:19 - retrieve a contact so I'm going to say
01:21 - let query equals PF query class name is
01:26 - contact now if you don't know how to do
01:28 - PF queries then I suggest that you look
01:31 - back a couple of videos in this part
01:33 - Series so that you can get caught up
01:35 - what we're going to do here is retrieve
01:38 - just the first Contact I don't really
01:40 - care who it is because I just want to
01:42 - show you how to save an image and
01:44 - Associate it with that contact so I'm
01:46 - going to say query. get first object in
01:50 - background with block and this is just
01:52 - going to retrieve the first uh object
01:54 - from the contact class or contact data
01:57 - store and to open up this block and
01:59 - here's the object it's an optional
02:02 - parameter so I'm going to type object
02:04 - this is error and inside the code first
02:07 - we're going to check if there's an error
02:09 - so if there is no error if error is
02:12 - equals to nil then we're going to go
02:16 - ahead and work with the
02:19 - data and now we got to check if object
02:22 - actually got returned so in case that
02:24 - the contact store is empty then this
02:27 - returned optional is probably will be
02:29 - nil so I'm going to say if let contact
02:32 - equals
02:34 - object
02:36 - then we have a contact object and just
02:41 - to remind you it is a PF object class
02:44 - what we're going to do is now um get the
02:49 - image data set the image data to a key
02:54 - of the PF
02:56 - object save the object back to the parse
03:02 - backend so if this was a real app we
03:06 - would probably work with the camera
03:08 - allow the user to take a photo and then
03:10 - take that image data but since this is a
03:13 - demo I have an image that I'm going to
03:16 - use that I'm just going to put in the
03:17 - image library and we're just going to
03:19 - use this image it's a smiley face that
03:21 - is supposed to represent our contact I'm
03:23 - not even going to bother with the 2x or
03:25 - 3x sizes let's go back to the view
03:27 - controller so let us first create a UI
03:30 - image let image let's do that under here
03:34 - actually under get image data let image
03:37 - equals UI image right and we're going to
03:40 - use the named initializer and let's use
03:44 - the name here make sure there are no
03:46 - typos Smiley face.png
03:49 - actually we don't need the PNG when
03:52 - we're working with uh assets here we
03:54 - just have to specify that asset name so
03:56 - smiley face like that so if I remember
03:59 - remember correctly this initializer
04:01 - actually returns an optional UI image
04:04 - because in case it can't find that asset
04:06 - it's going to return nil let me just
04:08 - double check yeah so the return type is
04:10 - an optional UI image type so we are
04:14 - going to have to uh let's say let's make
04:18 - this a UI image optional type and then
04:21 - we have to check if it actually
04:23 - successfully created an image first so
04:25 - if let smile image equals image
04:31 - then in that case then we're going to
04:35 - get
04:37 - the image data so in order to get the
04:40 - data we're going to use this method
04:43 - called UI
04:45 - image PNG representation Returns the
04:49 - data for the specified image in PNG
04:51 - format so we're going to use that and
04:52 - we're going to pass in a UI image it
04:55 - returns an optional NS data okay so
04:58 - let's do that pass in
05:00 - smile image and this is NS data optional
05:05 - since we know that this smile image is
05:09 - an actual image right we've tested it if
05:11 - it's not nil here it should return some
05:13 - data so I'm not going to worry too much
05:15 - about checking if this is nil or not
05:18 - okay so now let's talk about saving this
05:20 - image data into our parse backend so in
05:22 - parse you learn that objects are PF
05:26 - objects queries are PF queries and we
05:29 - have PF File for saving file data so
05:33 - we're going to create a new PF
05:36 - File so let file equals PF File and
05:40 - we're going to go with this one here
05:43 - where we can specify a name and we can
05:45 - pass in the data so for the name we're
05:47 - going to call it smiley let's just say
05:51 - smiley face and it's important to
05:54 - actually put the extension for the file
05:57 - here as part of the name because parse
05:58 - is going to use use that to determine
06:00 - how to treat the data here we're going
06:02 - to pass in the image data and because
06:05 - it's an optional type we have to add the
06:06 - exclamation mark to unwrap it okay so
06:08 - now we have this PF File we got to
06:11 - attach it as a value to our contact the
06:15 - one that we retrieved earlier let's say
06:20 - contact profile let's give it a new key
06:24 - profile
06:25 - photo equals file and then finally we
06:28 - got to say save that back so let's say
06:31 - save in background like that so let's
06:34 - review what we've done here we've
06:35 - created a query and we're going to get
06:37 - the first object from that store from
06:40 - the contact store and once we check that
06:43 - we do actually have a contact object we
06:46 - are getting an image now I just added an
06:48 - image to the asset Library so I created
06:51 - a UI image based off of that asset um I
06:54 - checked if it was able to create that
06:57 - image and we extracted the the data and
07:00 - we converted that into an NS data type
07:03 - and then we created a PF File from that
07:06 - data and finally we assigned that PF
07:09 - File into the profile photo key of the
07:11 - contact that got returned and then we're
07:13 - going to save that contact back into the
07:16 - parse back end let's use Save and
07:17 - background so that we can see if save
07:20 - and background with block I mean so that
07:23 - we can detect when it's done so
07:27 - result error and in here let's just say
07:31 - print done so it's going to run this
07:33 - print statement after it's successfully
07:35 - saved it I'm going to run the project
07:37 - and I'm going to wait for that message
07:39 - to pop up
07:41 - here okay so done just showed up let's
07:44 - check our back end and parse and see
07:47 - what's going on I'm going to refresh it
07:49 - so let's scroll to the right there you
07:51 - go so it looks like the object that was
07:53 - returned in our code was John Smith and
07:56 - here you can see that the new key has
07:58 - been added profile photo
07:59 - and for John I didn't mean to click that
08:03 - John you can see Smiley face.png was
08:06 - saved so I want to point out that in
08:08 - this example we've learned how to save
08:11 - pngs or images up into our parse backend
08:14 - the thing is saving any sort of file
08:16 - whether it's a sound or a movie or
08:18 - another type of media is done the same
08:20 - way with this PF File class now let me
08:23 - show you how to retrieve that data to
08:26 - retrieve that image I mean so let me
08:28 - comment out this code we got to be
08:30 - careful here with all of the brackets so
08:33 - this here is the chunk of code that we
08:35 - wrote today now let's write how to
08:39 - retrieve the image and let's add a
08:42 - comment up here this was how to save the
08:47 - image and Associate it with a contact so
08:51 - here I'm going to do another query like
08:54 - query equals PF query class name is
08:58 - contact and this time I want to retrieve
09:01 - John specifically because we know that
09:03 - he has an image I'm going to say now if
09:06 - you watch the query constraint videos
09:08 - you'll know how to do this I'm going to
09:10 - say where key uh let's say equal to so
09:15 - I'm going to look for the first name is
09:17 - equal to John now this only works
09:20 - because I know that I only have one John
09:23 - in my contact data store uh but if you
09:26 - had multiple Johns then it probably
09:28 - would return a whole data set so let's
09:29 - do query do get first object in
09:33 - background with block so there's my
09:35 - object this one is error and then here
09:38 - let's check check for errors if
09:44 - error equals nil if let contact equals
09:49 - object so we're checking if the object
09:51 - returned is also nil so in here we
09:55 - have a contact named John and John that
10:00 - gets returned has all of these
10:02 - properties it has first name last name
10:04 - email and these are strings and so this
10:07 - data is automatically available to me if
10:10 - I say something like you know print
10:13 - contact first name for example then I
10:16 - would have John printed out but for
10:19 - profile photo because it's a file it's
10:21 - not automatically retrieved so what I'm
10:23 - going to have to do is I'm going to have
10:26 - to say contact the profile
10:30 - photo I'm going to have to get this uh
10:34 - assign this to a constant named file and
10:37 - it's going to be a type of PF File and
10:40 - I'm going to have to retrieve this by
10:42 - calling a method called get data uh get
10:46 - data in background with
10:48 - block like that and let's open that up
10:52 - and it returns optional data optional
10:55 - error so let's do
10:57 - data error and in the code here let's
11:00 - check if there is an error if error is
11:03 - equals to nil and if let image data
11:08 - equals data then
11:12 - successfully retrieved the data and then
11:16 - if I wanted to show this image in my
11:18 - user interface I can create a new UI
11:20 - image so let's image equals UI
11:25 - image and I would use the one where we
11:27 - can pass in an NSD dat and we would just
11:31 - assign image data into that and then I
11:33 - could assign this UI image into a UI
11:36 - image view to display it on my view so
11:39 - that's how you go about retrieving the
11:41 - file now if it was any other sort of
11:43 - data for example a sound file or
11:45 - something like that if you were going to
11:46 - play the sound AV Audio player has
11:49 - initializer methods where you can pass
11:51 - in a piece of NS data as well and you
11:54 - will be able to initialize your AV Audio
11:56 - player and then play the sound okay so
11:58 - this chunk of code shows you how to
12:01 - retrieve the file so I hope that was
12:03 - pretty straightforward for you guys
12:05 - there is also a lot of good information
12:08 - in the documentation for parse I'm going
12:10 - to remind you under files right here it
12:13 - talks about pfile talks about images and
12:16 - also talks about progress which we
12:17 - didn't really get a chance to cover in
12:19 - here uh but essentially when you save
12:22 - the PF File or you get the data for the
12:25 - PF File there is also one of the methods
12:28 - has a progress block uh parameter where
12:31 - you can specify a chunk of code it's
12:33 - going to give you the percent that it's
12:35 - done so you have a chance to update any
12:38 - progress bars or anything like that with
12:40 - the percent to done parameter so take a
12:43 - look at this documentation go to
12:45 - parse.com
12:46 - slocs and go to the iOS guide and then
12:50 - scroll down to file right here to read
12:52 - all about that stuff and to review what
12:54 - we've talked about in this lesson I hope
12:56 - you guys had fun don't forget to give
12:57 - the video a thumbs up
12:59 - and please share it if you found it
13:01 - useful and you think that anyone else
13:02 - can benefit from this thanks again and
13:04 - I'll see you guys tomorrow
13:07 - [Music]
13:14 - bye