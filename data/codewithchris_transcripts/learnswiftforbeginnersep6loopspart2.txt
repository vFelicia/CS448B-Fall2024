00:00 - hello welcome to learn Swift for
00:03 - beginners lesson 6 in this video I'd
00:06 - like to introduce you to two more types
00:08 - of loops and that is the while loop and
00:10 - the repeat long loop and these two loops
00:13 - lets you execute some code until some
00:15 - condition is met so that's different
00:17 - from the for and loop where it repeated
00:19 - a certain number of times okay let's do
00:22 - it
00:23 - [Music]
00:26 - so this lesson we're going to create a
00:29 - brand new playground and I'm just going
00:32 - to call this the loop - playground okay
00:39 - so let's cover the while loop first take
00:42 - a look at this slide and let's go
00:44 - through how to declare a while loop so
00:47 - the key word here is while followed by
00:50 - that you have some sort of condition and
00:52 - it's very similar to an if statement so
00:54 - the while loop is going to repeat that
00:57 - chunk of code as long as the condition
01:00 - is true
01:01 - but as soon as that condition becomes
01:03 - false it's not going to repeat the code
01:06 - anymore after your condition you have a
01:10 - set of curly brackets and inside of the
01:12 - curly brackets that's where you have the
01:14 - code that you want to repeat so let's do
01:16 - a quick example back in our playground
01:18 - so I'm just going to declare a variable
01:20 - here I'm going to call this sake counter
01:25 - and I am going to set this counter to
01:30 - ten and then I would like to print hello
01:37 - count sees 5 instead so it doesn't print
01:41 - that many times and I would like to
01:43 - print hello as long as the counter is
01:47 - above zero let's say so I would say
01:50 - something like while counter is greater
01:54 - than zero I would I would do this print
01:59 - right here however this is going to keep
02:03 - repeating as you can see because counter
02:06 - is always 5 so inside my while loop I'm
02:08 - going to
02:12 - computer is dying okay you can see it
02:23 - eventually overflows and crashes okay so
02:29 - what I'm doing here is I am decrementing
02:33 - counter by one for each iteration of the
02:36 - loop so as you saw when I didn't have
02:39 - this line of code it just kept printing
02:41 - hello many many times because this
02:44 - condition would always be would always
02:49 - be false
02:49 - there was nothing changing the counter
02:51 - variable from five to zero so I'm just
02:54 - going to warn you about that if you're
02:56 - going to try this on your own computer
02:58 - you know if you have a slower computer
03:02 - and might it might take a lot longer for
03:04 - you to get out of that out of that loop
03:07 - so you can write this statement first
03:08 - and make sure you have a statement that
03:11 - is decrementing your counter so again
03:14 - this minus equals is the equivalent of
03:17 - writing something like this counter
03:20 - equals counter minus one so you're just
03:22 - taking whatever value counter is your
03:24 - minus thing one and you're setting that
03:27 - as a new value for counter as you can
03:30 - see here what it's what you would expect
03:32 - you get hello five times now let me
03:37 - point something out to you right here
03:40 - what if counter was let's say negative
03:44 - five you can see here that nothing gets
03:47 - printed out because this loop is going
03:50 - to see if this condition is false or
03:54 - true before executing the code right so
03:58 - it evaluates the condition and then it
04:00 - decides whether or not it should run
04:03 - this and repeat it now the second type
04:06 - of loop the repeat while loop is very
04:09 - similar to the while loop except that it
04:12 - checks the condition after looping once
04:15 - so check the condition down here let's
04:17 - take a look at the syntax
04:19 - so you start with the keyword repeat and
04:21 - then you have a set of curly brackets
04:24 - and inside the set of curly brackets you
04:27 - place the code you want to loop or
04:29 - repeat and then after the ending curly
04:33 - bracket you have a while keyword and you
04:36 - then you have the condition so the
04:38 - syntax of this repeat while loop is very
04:41 - intuitive actually it's basically saying
04:44 - repeat this piece of code while this
04:47 - condition is true okay so let's go back
04:52 - to the playground and let's do an
04:53 - example here so I am going to use the
04:57 - same example
04:58 - okay let's print hello here and we're
05:01 - going to have the same thing counter
05:03 - equals counter minus 1 and we're going
05:06 - to say repeat this chunk of code while
05:13 - counter is greater than 0 so as you can
05:17 - see it's pretty much the same loop or
05:21 - same condition rather write while
05:24 - counter is greater than 0 and that's the
05:26 - same thing I have up here for this while
05:29 - loop and let's just print something out
05:32 - here so we can differentiate it and you
05:35 - can see the repeat while loop actually
05:36 - prints it out once and then it checks
05:40 - the condition it realizes oh I shouldn't
05:42 - repeat this chunk of code because this
05:45 - is false right whereas this while loop
05:49 - it checks the condition first and it
05:51 - realizes this condition is not true and
05:53 - it won't print at all so that's that's
05:56 - the main difference between the two
05:57 - types of loop both types of loops will
06:01 - repeat a chunk of code until a certain
06:03 - condition is false except that the while
06:07 - loop checks first and the repeat while
06:10 - loop checks the condition after
06:11 - repeating once okay so that does it for
06:15 - this lesson
06:16 - please give the video a thumbs up and
06:18 - subscribe if you haven't already and
06:20 - I'll see you in the next lesson bye for
06:22 - now
06:23 - you
06:27 - [Music]