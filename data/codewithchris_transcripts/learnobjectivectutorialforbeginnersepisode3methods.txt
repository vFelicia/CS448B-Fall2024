00:08 - hey guys today we're gonna be talking
00:11 - about how to declare methods in
00:13 - objective-c and how to call the methods
00:15 - that you declare so you guys might
00:19 - notice that the font size is huge now I
00:21 - hope you guys have no trouble seeing
00:23 - this and I'll make sure that I upload my
00:24 - video in 1080p okay on to method
00:27 - declaration so again I created a brand
00:30 - new project if you want to download this
00:32 - exact one the link is in the description
00:34 - but it's just your basic single view
00:37 - application so you know you've got your
00:40 - view controller app delegate and stuff
00:43 - like that but what I want to call to
00:44 - attention is the view controller class
00:47 - so I might not have mentioned it yet but
00:49 - in objective-c classes are defined by
00:52 - two different files when you create a
00:54 - new class you'll get a dot H file and a
00:56 - dot M file and the dot H file is the
01:00 - interface for your class and this
01:03 - basically you list out methods
01:06 - properties variables things that you
01:08 - want other classes to be able to use and
01:12 - interact with in your M file that is the
01:15 - implementation file and that's the place
01:18 - where you actually write the code for
01:20 - the methods that you've declared in your
01:22 - interface now you can declare a private
01:26 - interface and we'll get to that in the
01:28 - next video about scoping but for this
01:30 - video just know that in the H file
01:33 - that's where you declare all your
01:35 - properties and methods in your and your
01:36 - M file you you implement them so that's
01:39 - important to note because we're going to
01:41 - be talking about method declaration here
01:43 - now let me type out a sample declaration
01:45 - for you guys now let's take a look at
01:54 - the different parts of this declaration
01:56 - this minus sign denotes that this is an
01:58 - instance method so this is a method that
02:01 - you can call on an instance of this
02:02 - class alternatively
02:11 - alternatively you can declare it with a
02:13 - plus sign and that means that it's a
02:15 - class method so you don't necessarily
02:17 - need an instance to call this method now
02:21 - the thing in the bracket is the return
02:23 - type of the method so in this case we're
02:25 - returning nothing but you could very
02:27 - well you know return an integer or some
02:30 - other class anything you'd want in the
02:34 - next part we have is the method name now
02:38 - what would it look like if we wanted to
02:40 - add some parameters to the method
02:57 - alright so that is a method signature
03:02 - with one integer parameter being passed
03:05 - in so the format is : and then the type
03:09 - of the parameter followed by the name of
03:11 - the parameter now what would it look
03:13 - like if we had two parameters I'll show
03:16 - you that now this syntax is a little bit
03:28 - tricky because this you know it follows
03:32 - the same format as this first part just
03:36 - with the second parameter this is the
03:38 - label and this is the type of the second
03:42 - parameter and this is the name of the
03:43 - second parameter and then so on and so
03:46 - forth if you wanted to declare a third
03:48 - parameter you would have label colon
03:50 - return type parameter name okay so let's
03:54 - talk about calling methods now so let's
03:57 - jump into our implementation file I'll
04:01 - just copy that
04:09 - okay so I'm gonna implement our sample
04:11 - method with parameter but I'm gonna use
04:14 - this opportunity to show you guys how
04:16 - you would call another method in the
04:20 - last video we created a class named my
04:23 - class so I'm gonna do the same thing
04:25 - here just so I can declare it and show
04:28 - you guys how to call a method of it so
04:31 - you're gonna go to a new class and then
04:32 - call it my class and it's a subclass of
04:35 - nsobject I'm gonna put it in the root
04:40 - and then in my class I am going to add a
04:46 - method called do something so you notice
04:57 - that standard convention in objective-c
05:00 - method names start with a lowercase and
05:06 - then in my view controller class foanna
05:11 - to use it I began have to import that so
05:15 - this is all stuff we've learned before
05:17 - now let me declare a new instance of my
05:21 - class
05:29 - so remember in the last video we saw you
05:34 - know this allocation and initialization
05:36 - in this sort of syntax now this is
05:40 - calling methods of my class so alec is a
05:44 - class method of my class all of nsobject
05:49 - and same thing with the knit so if I
05:53 - wanted to call our instance method I'd
05:54 - have to do it on an instance of my class
05:59 - but we don't want class we want the
06:02 - instance and
06:06 - I call that method but there's something
06:10 - wrong here
06:11 - let me see oh I see so I wrote the
06:16 - method in the implementation file
06:18 - instead of the header file so let me
06:21 - copy and paste that and let me put it
06:25 - into the header file so there you go
06:28 - and now if we go back to the view
06:31 - controller that's gonna go away what's
06:35 - it saying here ah right so our method
06:39 - that week declared sample method with
06:40 - parameter is supposed to return an
06:42 - integer in this case it's telling me
06:45 - that I'm not returning it so let's go
06:50 - into my class and let's make do
06:52 - something return an integer and then
06:56 - let's implement it in the dot M file of
07:02 - my class and let's just make it return a
07:07 - number like 100 and if we go back here
07:15 - we can just return the result of the do
07:18 - something method which will be a hundred
07:22 - hey guys so that was episode three of
07:24 - learn objective-c that rhymes
07:28 - so anyways next episode we're gonna be
07:31 - talking about variable and method
07:33 - scoping and now for your fun fact of the
07:35 - day did you know that it took over 200
07:37 - patents and 156 suppliers across three
07:41 - different continents to make the iPhone
07:44 - Wow that blows my mind as always please
07:48 - like comment and subscribe if you
07:51 - haven't done so already and stay tuned
07:53 - for the next video see you guys later
08:08 - you