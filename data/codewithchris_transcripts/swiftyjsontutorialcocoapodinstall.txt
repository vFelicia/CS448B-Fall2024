00:02 - hey coders Chris here for those of you
00:04 - guys who celebrated I hope you had a
00:06 - great holiday weekend today I'm going to
00:08 - tell you about this library called
00:10 - swifty JSON so as you witnessed in the
00:14 - building of the YouTube video app and
00:16 - the shopping app a lot of the time when
00:17 - you're doing networking in your app
00:19 - making API requests parsing responses
00:22 - and stuff like that most of the time
00:24 - it's in JSON and using this library
00:26 - makes it a little more convenient and
00:28 - provide some error handling as well so
00:30 - under the usage section here there is a
00:33 - couple of use cases where swifty JSON
00:36 - makes things easier here are some
00:38 - examples when you have a JSON dictionary
00:40 - and you pass in this key expecting a
00:42 - string you're going to have to cast that
00:44 - result using the as keyword as a string
00:47 - and here you can just go dot string
00:50 - value another thing is that often in
00:52 - JSON responses you have a whole bunch of
00:54 - nested data structures so you might have
00:57 - a value that is an array which contains
00:59 - a dictionary which has a value which is
01:01 - another dictionary and so on and so
01:03 - forth
01:04 - so for example if we take a look at our
01:06 - shopping app one of the responses we
01:08 - worked with was something like this when
01:10 - we retrieved all of our products so take
01:13 - a look at this the key is result and the
01:16 - value is an array so each item in the
01:19 - array is a dictionary of values and then
01:22 - if we look at the pricing key its value
01:24 - is another dictionary and then inside
01:27 - that dictionary there's a rounded key
01:29 - which is another dictionary so you can
01:32 - see that it's several layers deep and so
01:34 - subscripting like this you can very
01:36 - easily drill down to the value that you
01:38 - want there are also more benefits that
01:40 - I'm going to scroll over you can take a
01:43 - look at all of them yourselves but I'm
01:45 - going to go through another one which I
01:47 - really like here so error handling if
01:49 - you're not using the library and you try
01:51 - to specify an array index that is out of
01:54 - bounds your app is going to crash
01:56 - similarly if you try to access a key in
01:58 - a dictionary and it doesn't exist you're
02:01 - going to get a crash as well so with
02:02 - Swift e JSON it's not going to crash
02:04 - your app instead it's going to give you
02:06 - a nice error message another cool thing
02:08 - about this library is that it plays very
02:10 - nicely with Alamo fire which we went
02:12 - over a couple days ago so you can use
02:14 - Alamo fire to make the requests to
02:16 - retrieve the data and when it comes back
02:18 - assuming that it's JSON data you can use
02:20 - swift e JSON to work with the result in
02:22 - fact down here if we scroll down there's
02:25 - a section about how we can use swift e
02:28 - JSON with alamos json response handler
02:31 - so what I'm going to do is I'm actually
02:33 - going to use the project which we
02:35 - created when we looked at Alamo fire a
02:37 - couple of days ago and I'm going to just
02:40 - modify the completion handler to use
02:42 - Swift e JSON to work with the result so
02:45 - just to refresh your memory what we're
02:47 - doing here in this project I had a JSON
02:50 - file at this URL so let me show you what
02:52 - that looks like it's just a simple
02:56 - dictionary with two keys one of the
02:58 - values as a string another value is an
03:00 - array with three strings inside so we
03:03 - were using Alamo fire to retrieve this
03:05 - JSON file and then inside the result
03:09 - we're just displaying the first key and
03:11 - the second key as an array okay so let's
03:13 - close this project and let's install the
03:15 - Swift D JSON pod so we're going to
03:18 - scroll up to the top and we're going to
03:21 - go to usage or actually integration and
03:24 - follow this cocoapods
03:26 - installation for swift e JSON because we
03:29 - already have our pod file let me just go
03:32 - to our project here AF sample so we
03:34 - already have a pod file and we have our
03:36 - XC workspace because we installed Alamo
03:39 - fire all right all you need to do is
03:41 - open up your pod file in your text
03:43 - editor so you can see here we already
03:45 - have the Alamo fire and we can just add
03:50 - another line under that so we're going
03:52 - to do that okay now we're going to save
03:56 - it and we're going to open up terminal
03:58 - now if all this is new to you check out
04:01 - the video where we talk about cocoa pods
04:03 - and how to use it and also watch the
04:05 - video where we talked about Alamo Fire
04:06 - so we're going to navigate to that
04:08 - folder our project folder right here I'm
04:11 - on my home folder I'm going to go to
04:13 - desktop /af sample and then here I want
04:18 - to run the command pod install again now
04:21 - there's another command called pod
04:22 - update and what's the difference there's
04:25 - a good post here
04:26 - talks about it so pod install is to be
04:28 - used every time you edit your pod file
04:30 - to add a new pod to it or remove from it
04:32 - okay and pod update you can run pod
04:36 - update with some specific pod name and
04:38 - it's going to get the latest version of
04:39 - that library or if you just run pod
04:42 - update without any name it's just going
04:44 - to grab the latest version of all the
04:46 - libraries listed in your pod file so
04:48 - because we're adding a new pod we're
04:50 - going to type in pod install so wait for
04:52 - it to do its thing okay and now as you
04:57 - can see it's got swiftie JSON and
05:00 - installed it now we can go back into our
05:02 - project folder and open up XC workspace
05:05 - up here we have to import the new
05:08 - library it may not recognize it so
05:13 - you're going to have to press command B
05:15 - to build the project okay so now let's
05:19 - go back to the swiftie JSON and look at
05:23 - the usage and you can see here that in
05:28 - this example they're also using Alamo
05:30 - fire to fire off a request
05:32 - they are calling the JSON response
05:34 - handler and they're using this
05:37 - conditional binding to grab the response
05:39 - dot result out value and then they're
05:42 - passing that value into the swiftie json
05:45 - initializer so I guess I glossed over
05:47 - this part but let me just scroll back up
05:49 - and show you guys what I mean so in
05:51 - order to initialize a new swiftie JSON
05:54 - object you import it which we've done
05:57 - and then you can just call JSON and you
06:00 - can pass in data you can pass in a JSON
06:02 - object you can even pass in a JSON
06:05 - string okay so that's the that's the
06:08 - keyword that's the class name that we're
06:10 - going to have to use so we go back all
06:12 - the way down here we're grabbing the
06:13 - response dot result dot value ok we're
06:16 - testing using conditional binding to see
06:18 - if it's nil or not and if it's not nil
06:20 - we're going to create a new swiftie JSON
06:22 - object like that and then we're going to
06:24 - work with that guy right there so going
06:26 - back into our Xcode project we're
06:28 - already doing a lot of that right we're
06:31 - using Alamo fire to fire off the request
06:33 - we're using the JSON response method and
06:35 - in here we are already using optional
06:39 - finding the check the response that
06:40 - result dog value right here we've chosen
06:44 - our constant name to be JSON that's a
06:46 - little confusing so let's call it value
06:48 - like they did and in here we would say
06:51 - let JSON equals JSON and we'll pass in
06:55 - the value like that so now in here in
06:58 - this JSON constant we can use swiftie
07:00 - JSON to output this stuff so instead of
07:07 - that we can go something like this see
07:09 - instead of first key and then we have to
07:11 - cast it as a string we're going to go as
07:14 - we're going to go string value like that
07:16 - and this one as an array we can actually
07:19 - do a rave alyou so let's try to run it
07:24 - and print those out in the console okay
07:29 - so in the console you can see that it's
07:31 - printed out the value of the first key
07:33 - and it's printed out the items in the
07:35 - array in the second key now let me show
07:37 - you a couple of other things so if I try
07:39 - to get a third key because in my JSON
07:43 - file there is no third key right and we
07:45 - run it it's not going to crash our app
07:47 - but if I did this without using swiftie
07:49 - JSON it would actually crash the whole
07:51 - app so here you can see that it didn't
07:53 - print anything because it didn't find a
07:55 - third key and another thing is that this
07:58 - second key is an array right you can see
08:01 - it's an array with three items I can use
08:03 - that sub scripting and go like that to
08:09 - grab the second item in the array
08:11 - remember that the first item is at 0
08:13 - second item is at 1 and third item is at
08:16 - 3 so there see I can grab the item
08:19 - number 2 that's right there just by
08:21 - writing this so if you're doing a lot of
08:25 - networking in your app and you're
08:27 - working with a lot of JSON I highly
08:28 - recommend that you use Swift e JSON it
08:30 - just it'll make your life easier and it
08:32 - plays really nicely with Alamo fire
08:34 - which is another popular library I hope
08:36 - that was helpful for you guys thank you
08:38 - for watching as always and don't forget
08:40 - to subscribe and like and share the
08:41 - video I'll see you guys tomorrow bye for
08:44 - now
08:44 - you