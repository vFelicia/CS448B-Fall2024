00:00 - hey everyone welcome to episode three of how to
build iphone apps and today we're going
00:05 - to go over at the MVC software design
pattern otherwise known as model view
00:10 - controller
00:13 - and the reason why this is important is
because
00:17 - all the ios apps that you will be
building will be leveraging
00:21 - this software design pattern
00:23 - to lend itself to better
maintainability and more usability and
00:29 - you know all that good stuff so
00:32 - it's very simple once you cross the
concept but MVC stands for model view
00:37 - controller and
00:39 - those
00:40 - represent three distinct jobs
00:44 - and
00:45 - all of the objects in your application
will have one of these jobs
00:50 - they're either model view controller
00:52 - or maybe some other classes but
00:55 - for the most part of these are the main
three actors in our application
00:59 - so let's go over
01:01 - what their roles are
01:03 - within your application so
01:05 - model which talked about that and what
it represents is your data in your
01:10 - application
01:11 - as well as all of the business
01:14 - rules and all of the logic and
manipulation
01:17 - associated
01:19 - with that data
01:22 - and view
01:23 - or views in your application
01:27 - pretty self-explanatory all of the forms
and labels and
01:31 - you know basically that visual
representation to the user
01:36 - and finally controller and the
controller sits inbetween the model and
01:41 - the view
01:42 - and facilitates communication between the
two
01:45 - and the model and the view never directly talk to
each other and so in this way you have
01:50 - three very distinct layers of
abstraction and this lends itself
01:56 - to more
01:57 - reuseability
01:59 - because you can swap out these actors
and
02:03 - you know they have very defined
roles
02:05 - that's the idea at least so let's
talk about the communication flow
02:10 - between these three actors
02:13 - so first of all
02:14 - uh...
02:15 - your model represents the data
02:17 - and whenever that model gets updated or
maybe gets fresh data or changes or something
02:22 - like that
02:24 - it notifies the controller
02:26 - now the controller
02:28 - then in turn
02:29 - updates view which is what the user sees
02:32 - now the reverse is true
02:35 - know the user interacts with
02:38 - your data
02:39 - sorry interacts with your
application the controller captures
02:45 - that user interaction and then
02:48 - in turn
02:50 - it updates the model
02:52 - and so you can see this 
circular communication flow
02:57 - is mainly what happens in your
application
03:02 - however the model never communicates
directly with the view and that's just
03:08 - the rule within
03:10 - this MVC pattern
03:13 - so there it is, it's a very abstract
concept what we've talked about here but
03:17 - it's gonna be more concrete
03:20 - when we start to work
03:22 - within our iphone demo and
03:25 - when i mention things like view or
viewcontroller or model
03:29 - you're going to be able to hold
this diagram in your head and have a
03:33 - visual
03:34 - uh...
03:35 - visual diagram of where those files sit
within these three jobs
03:42 - all right that was a quick one so
03:44 - until episode four
03:45 - i'll talk to guys soon, bye