00:00 - in the last lesson we were able to
00:01 - connect to the YouTube data API and
00:03 - retrieve data from it if you missed it
00:05 - check out the entire playlist right over
00:07 - there in this lesson we're going to set
00:08 - up our xcode project and all of the
00:10 - views and the models all right let's
00:12 - Dive Right
00:13 - In first let's start with a little bit
00:16 - of an overview of how our views will be
00:18 - laid out I also want to explain how our
00:21 - data model is going to look like
00:23 - especially as we're going to interact
00:24 - with the YouTube data API so first off
00:26 - we're going to start with the home View
00:29 - and this is going to to contain a tab
00:31 - view with additional views now I know in
00:33 - this demo we only have one tab but this
00:37 - is set up with the intention that you
00:39 - can add additional tabs okay so the home
00:42 - view will house the tab view itself and
00:46 - then the tab view will contain instances
00:49 - well one instance of the feed View and
00:51 - this is that scrollable list of
00:53 - thumbnails that you see now let's talk
00:55 - about how the feed view is going to get
00:57 - the data we're going to create a
01:00 - separate component let's call that the
01:01 - data service that is going to be
01:03 - responsible for all of the code that
01:05 - interacts with the uh YouTube data API
01:09 - and the reason for this is so that we
01:11 - can keep it all in one place and it'll
01:12 - be easier to maintain and also to
01:15 - troubleshoot and debug so when the feed
01:18 - view loads it's going to ask the data
01:20 - service for the list of videos to
01:23 - display and then the data service itself
01:26 - is going to be sending that Network
01:28 - request to the YouTube data
01:31 - API so in the previous lesson when we
01:34 - looked at what got return it was two
01:37 - things really there was an overall
01:39 - playlist structure and then within that
01:42 - there were individual video objects like
01:46 - dictionaries that contained the video
01:48 - data so we're going to be parsing that
01:50 - Json into a single playlist instance
01:54 - containing multiple video instances each
01:57 - one representing the video data
02:00 - if you don't remember or you're a little
02:01 - bit confused don't worry when we get to
02:03 - that part of sending the network request
02:06 - getting the data back and parsing into
02:08 - Json I'll dive into more detail about
02:11 - how each piece or part of the Json
02:13 - translates to different properties of
02:16 - the video and playlist instance so once
02:19 - the data comes back we are going to see
02:21 - a list of data in the feed view so next
02:24 - we have to fetch the video thumbnail
02:27 - image data because that image data does
02:29 - doesn't get return from the API instead
02:32 - we just get URLs to the video thumbnail
02:36 - so we are going to use a sync image to
02:39 - asynchronously that means in the
02:41 - background download that image data for
02:43 - display and we're going to create a
02:45 - separate video row view as a reusable
02:48 - View and the feed view which has a list
02:51 - component is just going to create as
02:53 - many instances of the video row view as
02:56 - it needs for as many videos as there are
02:59 - and each video r view will have the
03:01 - async image which will download the
03:04 - thumbnail all right and so now we're
03:06 - going to have a feed view that looks
03:07 - pretty good but we have to let the user
03:09 - tap on a video to view the video itself
03:12 - right so that's why we're going to
03:14 - create a video detail view that will
03:16 - slide up as a sheet from the feed view
03:19 - when the user Taps on one of those video
03:21 - row
03:22 - views inside the video detail view we're
03:25 - going to show at the top the uh video
03:28 - player and then below it we're going to
03:29 - show the description for the video and
03:32 - that data we'll have already so at a
03:34 - high level that's how the app is going
03:36 - to look like there is a lot to learn
03:38 - here let's dive in I hope you're
03:40 - enjoying the lesson so far now just in
03:42 - case you want to launch your own app I
03:43 - want to tell you about CW C+ this
03:46 - step-by-step program will help you
03:47 - launch your own app even if you don't
03:49 - have any experience and it takes about 4
03:52 - months if this sounds like something
03:53 - you're interested in I have a special
03:55 - offer for you I'll leave the link in the
03:57 - description below this video and
04:00 - hopefully I'll see you there if not no
04:02 - worries I really appreciate that you're
04:03 - here watching this lesson and learning
04:05 - with us so thank you for that anyways
04:07 - now back to the lesson all right let's
04:09 - create our xcode project so I'm going to
04:11 - choose app under
04:13 - iOS and I'm going to name this YT API
04:17 - app and make sure interfaces Swift UI
04:20 - language is Swift we don't need any
04:22 - storage options we don't need any tests
04:24 - right now and I'm going to just create
04:27 - this on my desktop
04:30 - uh and Source control I did not check
04:32 - on okay I'm going to change this to the
04:36 - simulator so that we can launch it in
04:38 - the simulator and not on my
04:41 - device all right and now we can get
04:43 - started so the first thing I want to do
04:45 - let's bring up the diagram again we have
04:48 - a couple of distinct things I like to
04:50 - separate things into folders here so we
04:52 - have our views which is home view feed
04:54 - view video detail View and video row
04:56 - View and then we have the data service
04:58 - which is a separate helper if you will
05:00 - and then we have these representing our
05:02 - data so this would be our data model or
05:05 - just model okay so let's go ahead and
05:08 - create those folders in our xcode
05:09 - project so I'm just going to oh so one
05:13 - thing that I like to do is to rename
05:16 - this so you know when we name the
05:18 - project YT API app that translates to
05:22 - this bundle identifier YT API app but
05:26 - the entry point they always add app at
05:29 - the end so one easy way you can do is to
05:33 - right click and refactor and you can
05:35 - change it all in the same place so you
05:39 - might you might want to do something
05:41 - like
05:44 - that maybe we'll just call it YouTube
05:46 - API
05:48 - app okay so that renamed it in a bunch
05:51 - of different places you can press
05:53 - command B to just make sure that it
05:55 - still builds so let's create the folder
05:58 - now so I'm going to right click going to
06:00 - say new group and let's call this
06:04 - services and then we are going to create
06:07 - another group called
06:10 - views and then we're going to create
06:12 - another group
06:14 - called
06:16 - Models All right so
06:22 - let's just do that all right so I'm just
06:26 - going to stub out all of the files that
06:29 - we need and stubbing out just means
06:30 - creating them perhaps uh adding some
06:33 - initial code but we're not even going to
06:35 - do that let's just create the files and
06:38 - then we'll focus on um just creating all
06:41 - of the scaffolding so let's call uh this
06:44 - is the data service right so we'll
06:47 - create that
06:48 - there and let's
06:51 - just create that initial struct and then
06:55 - for the views we're going to say new
06:56 - file going to choose Swift UI view so
06:59 - first of all there the home view right
07:00 - but the home view is essentially like
07:03 - we've got a view here so why don't we
07:05 - use this one as the home view so I'm
07:07 - going to drag this into the views folder
07:09 - and I'm just going to rename this again
07:11 - so refactor rename and we're going to
07:14 - call this
07:16 - the home
07:20 - view I didn't rename this
07:23 - one okay and then we also have the feed
07:26 - view remember this one contains the tab
07:28 - view right
07:30 - so we can oops Yeah new file Swift Joy
07:35 - view we're going to do feed
07:38 - View and then we're also going to
07:43 - have video row
07:46 - View and we're also going to have video
07:49 - detail
07:54 - View and then the home
07:56 - view we're going to change this to a tab
07:58 - view right and the tab view is going to
08:02 - contain an instance of the feed view so
08:05 - that's the basic structure of our
08:08 - project right and we've got let's just
08:11 - create the two models now so these are
08:13 - going to be swift file because they're
08:15 - not views so one is
08:18 - video just going to create the
08:23 - struct and then we are going to create
08:25 - another one for the playlist
08:33 - so let's bring up the diagram for a
08:35 - second and double check that we have
08:36 - everything so we have the home view
08:38 - which contains the tab view contains an
08:41 - instance of the feed view the detail
08:43 - view is going to be coming up as a sheet
08:46 - in the feed view we've created the video
08:48 - Ro view which is going to be um inside
08:52 - of a list component or List view sorry
08:54 - in the feed view we have the data
08:56 - service we created and then the video in
08:58 - the playlist models Okay so so we're
08:59 - ready to start implementing some of
09:01 - these things in the next lesson so one
09:04 - thing I would recommend is if you're
09:05 - really trying to learn some of this
09:07 - stuff it's best to follow along and try
09:10 - this out on your own computer or laptop
09:12 - just open X code start the project and
09:15 - follow along best you can you can always
09:17 - download the project if you get stuck
09:19 - I'll leave the link in the description
09:21 - below to download the
09:22 - project all right now that we have our
09:24 - exod project and our views and models
09:26 - roughed in we can start on the data
09:28 - service in next lesson if you're
09:30 - enjoying the build so far can you give
09:32 - this video a thumbs up now I always
09:34 - preach to follow along and that's the
09:37 - best way to learn so if you are
09:39 - following along building this app on
09:41 - your own computer or laptop please
09:43 - comment down below and say I'm doing it
09:45 - all right thanks for watching and I'll
09:47 - see you in the next lesson