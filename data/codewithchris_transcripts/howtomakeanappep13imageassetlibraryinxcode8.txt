00:06 - hey everyone welcome to lesson 13 of how
00:09 - to make iphone apps with no programming
00:10 - experience in this lesson we are going
00:13 - to learn how to work with the images
00:15 - that we added to our asset library if
00:18 - you remember back in lesson 6 we added
00:21 - all of these great images into our asset
00:24 - library and these names that you see
00:27 - here card 2 3 4 and so on Jack King
00:31 - Queen these are the names that we are
00:34 - going to use to refer to these images
00:36 - and as I mentioned before there are
00:38 - three different sizes for each image and
00:41 - Xcode is going to choose the appropriate
00:43 - image to use depending on what sort of
00:45 - screen the user is using on their device
00:50 - so far we have added a couple of the
00:53 - images into our storyboard here and we
00:57 - saw how to do that by simply selecting
01:00 - the element and then going over to the
01:03 - right hand side inspector pane let me
01:06 - just go back into the standard editor so
01:11 - there's a little more space so for
01:12 - example we selected an image view that
01:14 - we added to the storyboard and then we
01:17 - were able to set the image property to
01:20 - the back image asset as you can see here
01:23 - well if you remember we added IB outlets
01:27 - for these two image views I'm going to
01:29 - show you how you can manipulate this
01:32 - image view to show a different image
01:34 - through swift code because we're going
01:36 - to need to do that when the user taps on
01:38 - the deal button we're going to want to
01:40 - programmatically randomize the cards and
01:43 - display the appropriate image in this UI
01:46 - image these two right here
01:49 - okay so let's quickly jump into the view
01:53 - controller and take a look at what sort
01:56 - of IB l-let properties we added before
01:58 - so first we added this one left image
02:01 - view and as the name States this is the
02:04 - image view on the left hand side and
02:07 - then the one above it right image view
02:10 - is the one on the right hand side so we
02:13 - also hooked up this function right here
02:16 - deal tapped to fire whenever the deal
02:19 - button is tapped on by the user so here
02:22 - if we wanted to set the image for let's
02:26 - say the left image view we can refer to
02:29 - that property by name so left image view
02:33 - and so what do we set in order to set a
02:37 - new image well the image view has an
02:40 - image property that we can set and it
02:43 - accepts a type of UI image object as it
02:46 - says here so let's set that equals
02:51 - remember we use the equal sign to assign
02:53 - something into the left-hand side okay
02:57 - so what is a UI image object let's go
03:02 - into the UI kit reference because the UI
03:04 - image is one of those classes that comes
03:07 - with the UI kit framework you search for
03:10 - a UI image you can see here that it's an
03:12 - object that manages image data in your
03:15 - app we're going to have to create a new
03:17 - UI image object and then somehow set it
03:21 - to point to the image in our asset
03:25 - library so clicking into this class
03:27 - let's take a quick read here and here
03:31 - there's a section on creating image
03:33 - objects and you can see here that
03:36 - there's an initializer method where you
03:39 - can pass in a name so okay let's do that
03:46 - and here's also some sample code you can
03:48 - see here that they create a UI image and
03:51 - they can specify the image to initialize
03:55 - that object with we're going to do just
03:58 - that so we're going to create a new
04:02 - image uiimage
04:04 - and while we could just create an object
04:08 - like this and pass it into the image
04:10 - property of the image view this wouldn't
04:13 - really display anything because this UI
04:15 - image object is not really set to an
04:17 - image that's not really initialized to
04:19 - an image there is a different method
04:22 - that we can use or initializer
04:26 - function that one right there named and
04:29 - then we can pass in a string which is
04:32 - going to be the name of the image offset
04:35 - so let's just say we're going to set it
04:38 - to card ten okay so let's just type that
04:45 - in right there and let's do the same
04:47 - thing for the right image view image
04:51 - property equals UI image and we're going
04:56 - to use this one named let's set this one
05:00 - to Jack
05:02 - okay so let's give this a run by
05:04 - pressing command R it's going to build
05:08 - our project and it's going to launch the
05:11 - simulator and display our app there
05:16 - alright so there's our app I'm going to
05:19 - tap on the deal button and actually that
05:26 - generated a crash in our app so this is
05:29 - a good opportunity to to troubleshoot
05:33 - this so if I look at the error message
05:36 - down here it said that unexpectedly
05:40 - found nil while unwrapping an optional
05:42 - value so nil means it's an empty value
05:45 - and this is referring to this line of
05:49 - code right here highlighted right image
05:51 - view dot image I have a idea of what's
05:54 - wrong if you take a look at this line of
05:58 - code up here this iboutlet property you
06:00 - notice how all of the other lines have
06:03 - these grade in circles well this top one
06:06 - right image view has a empty circle and
06:10 - that's exactly the you know the line of
06:13 - code that's failing right here so to me
06:16 - that tells me that for some reason the
06:19 - right image view out I be outlet is not
06:22 - connected to the image view element in
06:25 - our storyboard so let's go ahead and
06:27 - stop our project we can verify that very
06:29 - quickly just going to the storyboard
06:33 - this is the right image view I'm going
06:35 - to right click this or you can even
06:37 - click
06:38 - control left-click yep if you don't have
06:42 - a 2 button Mouse and you can get the
06:44 - same menu to pop up ya notice that there
06:47 - are no connections for this image view
06:49 - right for this guy if I do that you can
06:53 - see left image view it's connected to
06:56 - this view controller if I pull it out a
06:59 - bit see it's connected to view
07:01 - controller so how we're going to fix
07:03 - that well for the right image view let's
07:06 - pop open this menu let's create a new
07:08 - referencing outlet drag this guy either
07:11 - to this yellow dot or circle here or to
07:15 - the view controller here and it's going
07:17 - to pop up all of the iboutlet properties
07:20 - that you can connect that element to now
07:22 - I'm going to connect it to write image
07:24 - view remember that's the one that it's
07:27 - supposed to be connected to okay so
07:30 - there we go now when I right-click on
07:32 - this guy
07:33 - make sure you're selecting the image
07:35 - view if I right click on it I can see
07:37 - that the right image view is connected
07:39 - to the view it's connected to this right
07:42 - image view IV outlet property going back
07:46 - to view controller now you can see that
07:47 - the circle is grayed in okay so if you
07:50 - ever come across a crash and you see an
07:54 - error like this it means that it's
07:57 - trying to use something is trying to use
08:00 - that property but it unexpectedly found
08:03 - that it was empty rightly so because
08:06 - right image view this property wasn't
08:08 - actually connected to the element so
08:11 - when I tried to use this it was empty
08:15 - now let's press command R and run the
08:17 - project and try this again
08:23 - alright here we go so tapping the deal
08:26 - button this time right it goes into our
08:30 - deal tapped method and it executes these
08:32 - two lines of code which changes the
08:35 - images of our two image views and that's
08:38 - an example of how you can manipulate the
08:41 - elements in your storyboard through
08:43 - Swift code in the following lesson we're
08:45 - going to learn how to randomize numbers
08:47 - you know right now when we tap deal it's
08:49 - always going to be 10
08:51 - and Jack because that's what we've said
08:53 - it to here want to randomize that and
08:55 - set the different images depending on
08:58 - the random numbers that we generate
08:59 - alright so thanks for watching I hope it
09:02 - was helpful to see how to debug that
09:05 - error and I'll see you guys in the next
09:08 - lesson bye for now