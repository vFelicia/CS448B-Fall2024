00:00 - hello and welcome to lesson 6 of my
00:02 - Swift tutorial for beginners video
00:03 - series now in the last lesson you
00:05 - learned about the for in loop which lets
00:07 - you execute a block of code for a set
00:09 - number of times well there's another
00:11 - kind of loop too actually
00:13 - that allows you to loop your block of
00:15 - code indefinitely until a condition is
00:17 - met
00:17 - these kinds of loops are awesome when
00:19 - you don't know how many iterations it's
00:21 - going to take to get the job done all
00:22 - right so let's dive in and see how they
00:24 - work so in this demo we're going to go
00:31 - through two types of loops that are
00:32 - really good to use when the number of
00:35 - times that you need to loop for is
00:36 - unknown so the first one is called the
00:38 - while loop and this loop checks the
00:40 - condition to see if it's true and then
00:42 - it's going to run your code and then
00:44 - check the condition again and then run
00:46 - your code and check the condition again
00:47 - let's to quickly take a look at the
00:49 - syntax for this so you start with the
00:52 - wild keyword and then you have a
00:53 - condition and then you have a set of
00:55 - braces and then inside the braces you
00:58 - have the code that you want to loop now
01:00 - notice that the condition is up there at
01:03 - the top before it even execute your code
01:05 - it's going to check the condition first
01:07 - to see if it's true kind of like an if
01:09 - statement if that condition is not true
01:11 - then your code is not going to be run at
01:14 - all let alone loop let's jump into the
01:16 - playground now and let's do a demo of
01:18 - the while loop so I've got this guy
01:21 - right here brand new playground fresh
01:24 - out of the oven so far let's say let's
01:28 - cheese counter is equal to five and then
01:31 - let's say that I want to let's do the
01:33 - same example like we did before we're
01:36 - going to print hello and what we're
01:39 - going to do is say while counter is less
01:45 - than or sorry while counter is greater
01:48 - than zero I'm gonna print hello now
01:51 - before I finish writing the syntax for
01:54 - this while loop you can see here it's
01:57 - telling me you need a set of braces but
02:00 - before I finish writing the syntax for
02:03 - this while loop I just want you to
02:04 - notice one thing so first is going to
02:06 - evaluate this condition and it's true
02:08 - right you can see that counter is equal
02:10 - to
02:11 - five and five is greater than zero so
02:13 - it's true so it's going to print hello
02:15 - and then it's going to loop and check
02:17 - the condition again and it's going to be
02:18 - true again so it's gonna loop and it's
02:20 - gonna keep looping infinitely until we
02:24 - get a crash there's some overflow so let
02:28 - me demonstrate that I would not
02:30 - recommend this if you've got a slower
02:32 - computer and I'm not even sure if mine's
02:34 - very fast so it's it's just gonna keep
02:37 - going maybe now Xcode has something
02:39 - where it's oh I have to run my code
02:41 - let's do that so you can see it just
02:43 - it's going bonkers right so I'm gonna
02:45 - stop that right now
02:47 - it's not stopping okay yeah it's not
02:51 - stopping my computer is kind of going
02:53 - haywire right now so what you want to do
02:55 - actually is inside this while loop you
02:58 - want to write some code to actually make
03:02 - it so that this condition can be false
03:07 - so if we print it now sorry if I can
03:13 - actually get this yeah so you see I
03:17 - wouldn't recommend you to do this but we
03:20 - can still walk through the code so while
03:22 - that's running my playground
03:25 - let me just explain what happened here
03:27 - so I basically created a while loop that
03:32 - ran on indefinitely until I added this
03:35 - code here so this code decrement the
03:38 - counter by one just like you saw the
03:40 - other one which was plus equal one and
03:43 - that would actually add one to the
03:44 - counter this one minus is one from the
03:47 - counter so it starts at five right so
03:49 - the first iteration would be five and
03:52 - then print hello and then it would turn
03:55 - that counter into four because it
03:57 - decorated identify one then loop again
03:59 - and four is greater than zero loops and
04:02 - then this line would set counter to
04:04 - three and then go on and on and on until
04:07 - it hits zero and then 0 is not greater
04:11 - than zero so that is actually allows us
04:15 - to exit the loop
04:20 - I knew that was pretty bad idea so I'm
04:25 - gonna try and stop this there we go
04:27 - so can I run this down I think I broke
04:34 - it
04:35 - so I'm going to actually quit Xcode
04:38 - right now take a look let's see what we
04:41 - can do here nope okay all right guys
04:57 - we're back so all I had to do was quit
04:59 - Xcode and restart Xcode and run my
05:02 - playground again so let's run it here
05:04 - all right so we've got our hello five
05:07 - times which is great now we can talk
05:09 - about our second type of loop which is
05:11 - the repeat while loop so let's let me
05:15 - show you where that is just scroll a
05:18 - little down further here the repeat
05:22 - while loop and let's take a look at the
05:24 - syntax for this so here you have the
05:26 - repeat keyword followed by a set of
05:29 - braces inside the braces you have the
05:31 - code that you want to loop and then
05:33 - what's noteworthy is that behind the
05:35 - closing brace you have the wild keyword
05:38 - and then the condition so notice how the
05:41 - condition is at the end of the loop
05:44 - instead of the while loop where the
05:45 - condition was at the top so essentially
05:48 - what happens here is that your code
05:50 - statements are going to be run at least
05:52 - once and then after it is run it's going
05:55 - to check the condition and if the
05:57 - condition is true then it's going to
05:59 - repeat and loop it so that's different
06:01 - from the while loop which checks the
06:04 - condition first and it might not even
06:05 - run even once if your condition isn't
06:07 - true
06:08 - so let's go back to the playground now
06:10 - and test out the repeat while loop so I
06:13 - am going to declare I would say counter
06:17 - two plus two equal five again and I'm
06:24 - going to use the repeat keyword and
06:27 - print hello and then here I'm going to
06:31 - decrement my counter just like we have
06:34 - up there and I am going to say while
06:40 - counter two is greater than zero
06:43 - so while let me do ya help for a while
06:53 - loop from repeat while loop and let's do
07:04 - that so what happens is that we get five
07:07 - of these printouts from the first while
07:09 - loop and we get five of these printouts
07:11 - from the second while loop all right
07:14 - just like we expected however what if I
07:17 - changed counter to let's say negative
07:23 - five and I change the counter to
07:26 - negative five and I run it well you look
07:33 - at that the while loop doesn't even run
07:36 - once right because it checks the
07:38 - condition first
07:39 - that's not true it's not gonna run your
07:41 - code skip this one it's going to print
07:46 - it out first and then it's going to
07:48 - realize that a negative five is not
07:52 - greater than zero so I'm not going to
07:54 - repeat I'm not going to loop so the one
07:56 - that you use really depends on the
07:58 - situation
07:59 - and what you're trying to accomplish if
08:01 - you're writing some logic that you know
08:03 - you want it to happen once and it only
08:06 - conditionally repeats then you'll want
08:08 - to use the repeat while loop however if
08:10 - you want your code to only be run when
08:14 - certain conditions are met and as long
08:17 - as that condition is still true then you
08:20 - use the while loop
08:21 - all right let's recap you learned about
08:23 - the while loop and the repeat while loop
08:25 - that lets you execute a block of code
08:26 - and loop it indefinitely until a
08:29 - condition is met now the while loop
08:31 - checks the condition first before
08:33 - executing the block of code and then
08:35 - looping and the repeat while loop will
08:37 - execute your block of code first and
08:39 - then
08:39 - check your condition to decide whether
08:41 - or not it should repeat for another
08:43 - iteration you're doing amazing so far
08:45 - but I've got a question are you liking
08:47 - what you're learning so far if so make
08:49 - sure that you're subscribed to my
08:51 - channel by hitting that subscribe button
08:52 - below I really appreciate it and you're
08:54 - really supporting my channel by doing
08:56 - that all right click over to lesson
08:57 - seven I'll see you there