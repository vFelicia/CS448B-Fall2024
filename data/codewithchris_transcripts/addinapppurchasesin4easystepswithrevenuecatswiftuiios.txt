00:00 - hey code crew welcome in this video i'm
00:02 - going to show you how easy it is to take
00:04 - an
00:04 - existing swift ui app and to add in-app
00:07 - purchases to it
00:08 - using revenue cat i've built a
00:10 - meditation demo app
00:12 - and in this four part swift ui series
00:14 - i'm going to show you how to process
00:16 - one-time purchases how to do
00:18 - subscriptions
00:19 - how to show different offers to the user
00:22 - and finally how to analyze your metrics
00:24 - so that you can make informed decisions
00:26 - based off of your data
00:28 - and yes i've done this with ui kit
00:30 - before but many of you have asked how to
00:32 - use revenue cat
00:33 - with a swift ui app and since we're
00:35 - doing a ton of swiss ui content right
00:37 - now
00:38 - this is perfect timing all right so
00:40 - let's take a look at this meditation app
00:42 - you can select the meditation that you
00:44 - want you can listen to a sample and you
00:46 - can purchase the individual meditation
00:49 - and yes as i said in this four part
00:51 - series you will learn how to do
00:52 - subscriptions but the focus of this
00:54 - video
00:55 - is to show you how easy it is to get up
00:58 - and running with processing transactions
01:00 - so that's why in this lesson we're only
01:01 - going to focus on the one-time purchase
01:03 - there are just four simple steps number
01:05 - one we're going to create our app store
01:07 - listing
01:08 - number two we're going to create the
01:10 - in-app purchase
01:11 - and number three we're going to sign up
01:13 - for revenue cat and set it up
01:14 - and number four we're going to process
01:16 - the purchase now
01:18 - even if you didn't use revenue cat you'd
01:20 - still have to do steps one and two
01:22 - and the last two steps are just made
01:24 - simple with revenue cat i'll walk you
01:26 - through it
01:26 - alright if you're pumped to do this
01:28 - let's give this video a thumbs up and
01:30 - let's dive right in
01:32 - first i'll walk you through the demo
01:33 - that i've built now since the focus of
01:35 - this video is
01:36 - on how to integrate in-app purchases i'm
01:38 - not going to show you
01:40 - how i built this but i am open to it so
01:42 - if that's something that you'd like to
01:44 - see just leave me a quick comment below
01:46 - and if enough people leave me comments
01:48 - to say that they want to do it
01:50 - i will record a follow-up video on how i
01:52 - built this demo all right so rather
01:54 - diving into the code and trying to
01:56 - explain how everything fits together i
01:58 - thought a nice neat little diagram
02:00 - would do a better job of that let's
02:02 - start all the way at the left
02:04 - where we see meditation this is our
02:06 - model
02:07 - it models a single meditation this one
02:09 - contains all of the properties that we
02:11 - would need
02:12 - for the meditation such as the title the
02:14 - description
02:16 - the name of the image asset that we
02:17 - should show for this meditation
02:19 - as well as the product id that
02:21 - corresponds to the in-app purchase that
02:24 - we configure in app store connect
02:26 - furthermore i have some test data for
02:28 - this demo
02:29 - so the data isn't coming from a json
02:31 - file or a database or anything like that
02:33 - it's just hard-coded test data
02:35 - so next up we have the featured view and
02:38 - the meditation model
02:39 - so the featured view is basically the
02:41 - home screen where you saw
02:43 - all of those colorful cards representing
02:45 - the meditations
02:46 - it's a scroll view actually so that
02:50 - view is powered by the meditation model
02:52 - which is essentially the view model of
02:54 - our app
02:55 - this meditation model gets the test data
02:58 - which is
02:59 - an array of four meditations and then
03:03 - this meditation model is set as the
03:05 - environment object
03:06 - for the featured view now because the
03:09 - meditation model is
03:10 - set as an environment object that means
03:13 - that
03:13 - any sub-view of the featured view such
03:16 - as
03:17 - the card and the detail view also have
03:19 - access
03:20 - to that meditation model and that's why
03:23 - you see that white square surrounding
03:25 - the featured view
03:26 - as well as all of its sub views the card
03:28 - in the detail view
03:29 - indicating that all of those views have
03:31 - access to the meditation model
03:34 - so now let's talk about the card view
03:36 - each card view represents
03:38 - one of those meditation cards in the
03:40 - scrollable
03:41 - scroll view in the featured view when
03:44 - the user taps on one of those cards
03:46 - it brings up the detailed view and this
03:48 - is where you can see the details for the
03:50 - meditation
03:50 - as well as play a sample audio clip as
03:54 - well as
03:54 - purchase the meditation when the user
03:57 - taps on that buy button
03:58 - in the detailed view it calls a method
04:01 - in the meditation model
04:03 - called make purchase and in that method
04:06 - the meditation model
04:07 - uses the purchase service to actually
04:10 - carry out the transaction
04:11 - if the transaction was successful then
04:14 - we update
04:15 - a dictionary inside of the meditation
04:17 - model that keeps track of
04:19 - which meditations the user has purchased
04:21 - or not
04:22 - once that dictionary is updated all of
04:25 - the views the featured view the cards
04:27 - the detailed view
04:28 - all of them get notified that a purchase
04:30 - has been made and the ui updates
04:33 - accordingly
04:34 - now right now inside of the purchase
04:36 - service the code
04:37 - for processing transactions hasn't been
04:40 - written yet
04:40 - that's what we're going to do together
04:42 - in step 4 processing purchases
04:46 - now while keeping all of this in mind
04:48 - let's jump back to xcode and i'll show
04:49 - you the bits of code
04:51 - that we just talked about
04:54 - let's start with the meditation model
04:56 - just like we did with the diagram
04:58 - so here we've got those properties that
04:59 - i mentioned title description
05:01 - image name which corresponds to the
05:03 - asset name
05:04 - that we have in here and we also have
05:07 - the product id which corresponds to the
05:09 - product id of the in-app purchase
05:11 - that we configure inside app store
05:13 - connect which we'll do together in step
05:15 - two
05:16 - all right now let's go over to the
05:17 - meditation model which powers all of our
05:19 - views
05:20 - so as you can see here when it's
05:22 - initialized it grabs a set of test data
05:26 - and assigns it to the meditations
05:28 - property now this array represents the
05:30 - list of scrollable cards
05:32 - furthermore here's that dictionary i
05:33 - mentioned which keeps track of
05:35 - which meditations the user has purchased
05:38 - again
05:38 - this is a demo so we're just keeping it
05:40 - in a dictionary now let's jump over to
05:42 - the featured view
05:44 - this is that scroll view of the
05:46 - different cards
05:48 - so a card is simply one of these
05:53 - represents a single meditation when a
05:55 - card is tapped on
05:56 - in the featured view you can see that
05:59 - they're actually buttons
06:01 - what happens is that we present a detail
06:04 - view so the detail view
06:08 - looks like this with a button to play an
06:11 - audio sample and a buy button
06:13 - when the user taps on this buy button it
06:17 - calls
06:17 - the meditation dot make purchase method
06:21 - so if we go to that method right here
06:23 - you can see
06:24 - it uses the purchase service
06:27 - purchase method to process the
06:30 - transaction
06:31 - and it passes in a block of code to run
06:34 - if that transaction was successful
06:36 - so this block of code all that does is
06:38 - it updates this dictionary to say that
06:40 - the user has
06:41 - successfully made that purchase now if
06:44 - we go into the purchase service into
06:46 - this
06:46 - method you'll see that the code has not
06:49 - been written
06:50 - here we are actually going to implement
06:54 - purchases using revenue cat
06:58 - so hopefully that gives you a good idea
07:00 - of how this demo is structured
07:02 - and what we have so far all right now
07:04 - that we've walked through the app we're
07:05 - ready to
07:06 - integrate in-app purchases the first
07:08 - thing we want to do is go over to this
07:10 - root project node here
07:12 - go over to signing in capabilities and
07:15 - take note of this bundle identifier
07:17 - because we're going to need that to
07:19 - create our app store listing
07:21 - but on this screen i also want to make
07:23 - sure that you have the in-app purchases
07:25 - capability if you don't have this you
07:27 - don't see this here let me just show you
07:29 - how to add it
07:30 - click this little plus icon up here
07:33 - search for it
07:34 - and just double click it and add it then
07:38 - press command b on your keyboard to
07:40 - build this project to make sure it still
07:41 - builds
07:42 - and then we're going to go over to app
07:44 - store connect now this portal you only
07:46 - get access to if you have a
07:48 - paid apple developer account and if you
07:51 - want to submit apps to the app store and
07:53 - collect payment from users
07:55 - you're going to have to join the apple
07:56 - developer program
07:58 - once you get access to this app store
08:00 - connect portal one of the first
08:02 - things you want to make sure you have is
08:04 - under agreements
08:05 - tax and banking you want to make sure
08:07 - that you've
08:08 - signed your paid apps agreement and that
08:11 - the status is
08:12 - active because if there's some problem
08:14 - with this if this is a yellow icon or
08:16 - red icon
08:17 - you're not going to be able to fetch and
08:19 - retrieve your in-app purchases for your
08:21 - app and you're going to
08:22 - scratch your head wondering why it
08:24 - doesn't really tell you that
08:26 - this is what you need to have active
08:28 - first so make sure that this is
08:30 - green lit and active under your paid
08:33 - apps
08:34 - and you're good to go let's go back to
08:37 - app store connects
08:38 - dashboard and let's add our new project
08:41 - as an app
08:44 - so i'm going to click this blue icon
08:46 - here and i'm going to add a new app
08:49 - it's going to be ios i'm going to call
08:52 - this com
08:53 - mind demo 2. because this is the second
08:56 - time i'm doing this
08:57 - a primary language for me at least is
09:00 - english
09:01 - and here you're going to choose the
09:03 - bundle id
09:05 - for your project do i see it here
09:08 - no wait i do uh
09:15 - com.codewithchris.commind2
09:16 - so that's what i have here now if you
09:19 - don't
09:19 - see yours here on this list
09:22 - that's okay there's just one extra step
09:25 - for you let me just cancel out of this
09:27 - menu
09:28 - and show you again if you don't see your
09:31 - bundle id
09:31 - in this list then you're going to go
09:33 - ahead and click certificates identifiers
09:35 - and profiles
09:36 - and this is another portal that you will
09:38 - have access to with a paid
09:40 - developer account this link
09:43 - is doesn't really work because it says
09:46 - register undefined so you're going to
09:48 - want to hit
09:48 - back by clicking all identifiers
09:51 - and then go ahead and click this blue
09:54 - button to add a new
09:56 - identifier it should be an app id
10:00 - select the type as app and here
10:03 - under bundle id explicitly
10:06 - add this bundle identifier
10:09 - right here and then put a description
10:12 - and scroll down to capabilities
10:14 - and make sure that in-app purchase is
10:16 - enabled and then go ahead click continue
10:19 - and create it and then after that you
10:21 - can go back to app store connect refresh
10:23 - the page
10:24 - try to add your app again and it should
10:26 - be in this drop down here
10:28 - so i'm just gonna go through those steps
10:30 - again
10:31 - call mind demo 2
10:35 - english call mine 2
10:43 - and user access should be full this is
10:46 - just for your own
10:47 - management of your app store connect
10:49 - portal if you have multiple users
10:52 - managing your dashboard i'm going to
10:55 - click create
10:57 - give it a little bit of time and then
10:58 - you will have had your new app store
11:00 - listing
11:01 - created there we go all right now for
11:03 - step two adding our in-app purchase
11:07 - it's actually pretty easy to add an
11:08 - in-app purchase for one app purchases
11:11 - all you have to do is go down to manage
11:14 - in-app purchases down here wait for this
11:17 - slow slow portal to load
11:23 - all right so here we see in-app
11:24 - purchases at zero let's click on this
11:26 - little plus icon to add our first one
11:28 - here you'll read about a couple of
11:30 - different types we are going to add
11:33 - a one-time purchase that is
11:35 - non-consumable meaning that once you
11:36 - purchase it you'll have it forever
11:39 - so perfect for unlocking books unlocking
11:42 - meditations in our case and generally
11:45 - opening up extra features or content
11:47 - that the user will have forever from
11:49 - this point on
11:50 - so let's choose non-consumable and click
11:52 - create
11:54 - and here we have a couple of um
11:56 - different things we can add so for
11:58 - reference name
11:59 - um this reference name is just
12:02 - internally for us it's going to be used
12:04 - in our
12:04 - reporting sales and trends reports and
12:06 - stuff like that
12:07 - so i'm just going to call this calm mind
12:11 - which meditation do i want us to buy i'm
12:14 - not going to do all of them
12:15 - because they're basically all the same
12:17 - i'll choose reflect
12:21 - and the product id should basically
12:23 - match what we have here
12:25 - or the other way around what we have
12:28 - here
12:29 - should match what we put here
12:32 - so whatever we put as the product id for
12:35 - this in-app purchase
12:37 - inside of our data source wherever that
12:39 - might be the database
12:40 - json file or in our case dummy data
12:43 - these product ids should match it
12:44 - because
12:45 - when we try to purchase when we try to
12:47 - make this purchase
12:48 - we have to reference this product id
12:51 - cleared for sale we can check this this
12:53 - means that when it gets approved because
12:55 - these things get reviewed
12:57 - when it gets approved it's automatically
12:58 - going to be available for sale if you
13:00 - don't want that to happen
13:01 - maybe you're saving it for a later date
13:03 - then just uncheck that
13:05 - okay so for pricing i'm just going to
13:07 - make these tier 1
13:08 - which is going to be a dollar 39
13:11 - canadian
13:12 - and localizations if you want to
13:15 - localize for other languages you would
13:16 - add additional
13:18 - languages here for me uh just english so
13:21 - i'm going to put
13:23 - reflect meditation i'm just going to put
13:26 - the same thing for both
13:28 - or you know what yeah i'll put the same
13:30 - thing for both
13:32 - um this is optional for this review
13:35 - information
13:36 - you actually have to put
13:39 - a sample screenshot here so
13:42 - let's click this
13:46 - yeah it's just for their review so
13:47 - essentially you want to put a screenshot
13:49 - of
13:49 - how it looks in your app but since this
13:52 - is just a
13:53 - testing for us we're going to put just a
13:55 - blank image
13:57 - i'm coming to this documentation to show
13:59 - you what sort of dimensions that image
14:01 - should be under here app review
14:04 - screenshot
14:05 - you can see that it should be 640 by
14:08 - 920.
14:09 - so i just went into my graphics software
14:12 - i use figma
14:13 - and i generated a a blank image exactly
14:17 - of that size so that's what i'm going to
14:18 - upload here
14:22 - at review placeholder and as you can see
14:26 - it's
14:28 - not that one i guess i'll have to create
14:31 - a brand new one
14:32 - so no matter let's go to figma this will
14:34 - be good
14:35 - to show you anyways i'm gonna go into my
14:38 - drafts
14:39 - let's click on plus and i will create
14:43 - a new one i'll just grab that
14:46 - and say what was it six
14:49 - forty by nine twenty just double check
14:53 - that
14:53 - six forty by nine twenty that's right
14:55 - and i will just
14:58 - draw a rectangle sure make it great and
15:01 - then i will export this image
15:04 - i'll make it a jpeg and export this as
15:08 - placeholder
15:11 - and then i will go back here
15:14 - i'll choose that file and upload that
15:19 - and that's it so let's hit save and then
15:22 - we can begin
15:23 - testing with this in that purchase
15:26 - and trying to buy it
15:30 - okay so the status if you go back to
15:33 - in-app purchases right here the status
15:35 - needs to be ready to submit
15:37 - it hasn't actually been reviewed yet
15:39 - when we actually launched this app into
15:40 - production
15:41 - we're going to want to submit a
15:43 - description for this in-app purchase and
15:44 - the actual screenshot
15:47 - and then submit it for approval but in
15:50 - this status
15:51 - ready to submit we will be able to
15:53 - retrieve it
15:54 - and try to test with it all right so now
15:57 - we have our app store listing we have
15:59 - created
16:00 - an in-app purchase that we can test
16:02 - buying the next step is to create a
16:04 - revenue cat account
16:05 - and then start processing our
16:07 - transactions
16:09 - all right to create your free revenue
16:10 - cat account just open a new browser
16:13 - window
16:13 - go to code with chris.com rcat
16:17 - and that's going to bring you to
16:21 - revenuecat.com and by going through that
16:23 - url you're letting the team know at
16:25 - revenuecat that you
16:26 - as a code with chris uh audience member
16:30 - want to see more in-app purchase content
16:32 - from them so they're going to sponsor
16:34 - more content in the future for us
16:36 - i don't get compensated for any accounts
16:38 - created or anything like that
16:40 - so if you go ahead and do that thank you
16:42 - so much for helping support the channel
16:45 - all right um you're gonna click try for
16:47 - free and then you're going to create an
16:48 - account but for me i already have
16:50 - account created so it brings me directly
16:52 - into here
16:54 - once you're inside this dashboard what
16:56 - you're going to want to do is click
16:58 - add app i already created a few test
17:00 - ones but i'm going to create a brand new
17:02 - one
17:03 - so the app name is going to be i'll call
17:05 - this com
17:06 - mind2 and the app bundle id
17:10 - goes back to this right here
17:16 - and this is something that you'll have
17:18 - to add this basically
17:19 - lets revenue cat fetch the in-app
17:22 - purchase information
17:24 - from app store connect so we're going to
17:27 - go back to our app store connect
17:30 - under manage in-app purchases for your
17:32 - app
17:34 - there is a link here app specific shared
17:37 - secret so click that
17:38 - and generate a new one and then you're
17:41 - going to want to copy this
17:43 - string right here click done
17:46 - and then you're going to want to add
17:48 - that string right there
17:49 - and then let's go ahead and click add
17:53 - and that that's it we've set up our new
17:56 - app within revenue cat
17:58 - now there are a lot of different
18:00 - features here but we're just going to go
18:01 - through what we need in order to
18:04 - process a in-app purchase so under
18:07 - products
18:08 - we're going to add the in-app purchase
18:10 - that we created
18:11 - inside app store connect click new
18:15 - and then let's give it the identifier
18:18 - that we put for this in-app purchase so
18:22 - that is just
18:23 - reflect so i'm going to copy that and
18:26 - paste that right there
18:28 - and i'm going to say that this is for
18:29 - the app store
18:31 - and click add now there's a lot more
18:33 - power and flexibility if we
18:35 - configure our entitlements and offerings
18:38 - but those things
18:39 - are going to be great when we do in-app
18:42 - subscriptions which i'll show you
18:43 - for now we're just going to stick with
18:45 - adding this one product because i want
18:47 - to show you how easy it is
18:48 - just to get up and running with
18:49 - processing transactions
18:51 - so now we're going to shift our focus
18:53 - over to
18:54 - xcode we're going to add the revenue cat
18:56 - sdk and
18:58 - then let's process a purchase so we're
19:01 - going to first start
19:02 - by visiting the documentation in the
19:04 - upper right hand corner
19:06 - of your account you can see this docs
19:07 - link go ahead and click that
19:09 - it's going to jump you straight to all
19:11 - of the documentation
19:12 - let's click on installation and click on
19:15 - ios
19:16 - now one of the ways you can install the
19:17 - sdk is using cocoapods so that's exactly
19:20 - what we're going to do here
19:21 - let's go ahead and open up terminal
19:25 - and actually before we do that let's
19:27 - close the xcode project
19:29 - and let's navigate to our project folder
19:32 - so i've got it saved on my desktop so
19:35 - i'm going to go there
19:37 - and the project is called com mind
19:43 - whoops so i actually created
19:46 - a copy so i'm at my desktop now so com
19:50 - mind
19:54 - copy all right so now we're going to do
19:57 - pod init and that is going to
20:02 - create a pod file in our folder and we
20:05 - can say
20:06 - open pod file
20:09 - and then here we can follow these
20:10 - instructions
20:12 - and add this pod in our pod file
20:18 - let's go ahead and save that close it
20:21 - and go back here
20:23 - and do a pod install
20:27 - now if you get any sort of errors take
20:29 - note of the error message in there
20:31 - because usually it'll tell you
20:32 - what's out of date or what what command
20:34 - you need to run you might need to do
20:36 - a pod repo update or maybe
20:40 - you need to reinstall and update
20:42 - cocoapods instead
20:43 - so it'll usually tell you what command
20:45 - you need to run
20:46 - if you encounter any errors all right so
20:49 - now that we've done that
20:50 - we have an xc workspace file
20:53 - so let's go ahead and open that so open
20:56 - commind dot xc
21:00 - workspace
21:03 - all right let's press command b and
21:06 - let's just build that make sure
21:08 - everything looks good
21:10 - while that builds let's take a look at
21:14 - the documentation here so under making
21:17 - purchases
21:20 - actually we're not finished configuring
21:22 - the uh
21:23 - installation part yet so if you go back
21:25 - all the way down here
21:27 - there's a part that says you have to
21:28 - import purchases and then you also have
21:30 - to initialize
21:31 - the purchases instance in your app
21:35 - so follow that link you can see here in
21:38 - swift
21:39 - in this did finish launching with
21:41 - options you're going to want to
21:44 - run or have these two lines of code
21:46 - right enable debugging so that it makes
21:49 - your testing easier
21:50 - and then also to configure the instance
21:53 - with your api key so it can connect to
21:56 - your instance of revenue cat now in
21:59 - swift ui
22:00 - we don't have an app delegate right but
22:03 - that's not going to stop us okay so this
22:06 - built successfully let's go
22:07 - to our entry point here so what we can
22:10 - do
22:10 - is we can have an init method in here
22:14 - which gets called automatically when
22:16 - this app is initialized
22:18 - so this is where we want to put those
22:19 - two lines of code
22:23 - so i'm just going to copy that and i'm
22:26 - going to put that here
22:35 - okay and we're going to replace this sdk
22:38 - key
22:39 - with this under api keys we're just
22:42 - going to
22:43 - copy that for our app
22:46 - and we're going to put that right there
22:49 - oh and don't forget at the top
22:51 - you have to import the purchases
22:53 - framework okay let's press command b
22:55 - again
22:56 - and build this make sure everything's
22:57 - running okay
22:59 - and now the last thing we have to do is
23:01 - actually just run the code to process
23:03 - the purchase
23:04 - let's jump on over to helper
23:08 - and i've actually set up a class where
23:10 - we're going to write this code called
23:12 - purchase service
23:14 - all right so before i implement this
23:16 - method i want to remind you about
23:18 - where this is being called so let's go
23:21 - back to our detail view here
23:23 - and you're going to see the buy button
23:27 - as soon as the preview is loaded and
23:29 - it's essentially this buy button
23:31 - that when tapped is triggering this
23:35 - method model.make purchase and it's
23:37 - passing in the meditation to purchase
23:39 - so let's follow this method and see
23:41 - where that leads us
23:42 - this leads us to our view model and
23:45 - this method actually calls our purchase
23:48 - service
23:49 - dot purchase and i created this purchase
23:52 - service because i wanted to keep all of
23:54 - the
23:54 - transaction code in one class
23:58 - and that's why i did that so this is
24:01 - going to call the purchase method and
24:02 - it's going to pass in the product id
24:05 - to purchase which matches
24:09 - you know the product id right here and
24:11 - it also passes in a block of code to run
24:14 - if the purchase is successful and so
24:17 - this block of code
24:18 - is essentially just updating this user
24:21 - purchases property
24:23 - which in turn will
24:26 - because it's being observed by this
24:29 - detail view
24:30 - it's going to know that the purchase was
24:32 - successful and then it's going to
24:34 - remove the buy button and that play
24:36 - sample is going to turn to play
24:38 - so that's essentially what is happening
24:41 - all right let's go back to the purchase
24:43 - service
24:44 - and the purchase method and we are going
24:45 - to perform the purchase
24:47 - so this is actually two different steps
24:49 - because given the product
24:50 - id we're going to have to retrieve the
24:53 - store kit
24:54 - product object and then that is the
24:58 - object that we use to purchase
25:01 - so first get the sk
25:05 - product right and for this we can use
25:08 - the purchases framework
25:09 - from revenue cat let's get the shared
25:12 - instance
25:13 - and we're going to look for that product
25:16 - id so it's got a method here where we
25:19 - can pass in
25:20 - an array of string product ids
25:23 - and it's going to return to us all of
25:25 - the sk products so c
25:27 - fetches the sk products for your in-app
25:29 - purchases given
25:31 - product identifiers all right so let's
25:33 - do that
25:34 - and we're going to pass in just our
25:36 - single product
25:37 - id now i'm going to force unwrap this
25:40 - you'll notice that it's passed in as an
25:42 - optional string
25:43 - but here i have this guard statement to
25:46 - guard that
25:47 - it's not nil so here i can safely force
25:49 - and wrap it
25:50 - and then as for the completion block
25:53 - it's going to pass back an array of sk
25:56 - products for us
25:57 - so i'm going to call this let's just
25:59 - call this products
26:01 - so i'm going to say if products
26:06 - is empty so if it's not empty
26:11 - then i'm going to say let sk product
26:14 - equal products
26:18 - the first one there and now that we've
26:21 - retrieved the
26:22 - sk product we can actually purchase it
26:26 - so here again revenue cap makes it
26:29 - really easy with the purchases framework
26:31 - so
26:32 - purchases dot shared to get the instance
26:35 - and then let's call purchase product so
26:38 - this
26:38 - method lets us pass in the sk product to
26:41 - purchase
26:42 - and then gives us a completion block for
26:45 - the result
26:46 - so first let's pass in our sk product
26:48 - there
26:49 - and let's double click this to open up a
26:51 - new closure
26:52 - it's got several parameters here so the
26:54 - first one is going to be the transaction
26:58 - and each of these parameters contains
27:00 - different
27:02 - bits of data about the transaction
27:06 - purchaser info the next one is
27:09 - error and this next one is a boolean
27:13 - and this one indicates whether or not
27:15 - the user has canceled
27:16 - the purchase so you know when it pops up
27:20 - and it says
27:21 - if you want to purchase it if the user
27:23 - just cancels out of it then this is
27:24 - going to be true
27:25 - so here inside this block i can say
27:29 - if error is nil that means there's no
27:31 - errors
27:32 - and not user cancelled then
27:37 - successful purchase and i'm going to
27:40 - run that block of code that was passed
27:43 - in
27:44 - that should only be run when a purchase
27:47 - is successful
27:49 - so successful purchase
27:55 - so that's basically it now we cannot
27:58 - test this in the simulator
28:00 - if you try this in the simulator it's
28:02 - going to
28:03 - tell you in the debug code in the
28:06 - console area
28:06 - that it wasn't able to fetch the store
28:09 - kit products
28:10 - so let me just quickly do that so that
28:12 - you can see
28:14 - what you have to do actually is plug in
28:16 - an actual device
28:18 - um and then deploy your app there and do
28:21 - it that way
28:22 - so you're gonna tap on this and tap on
28:25 - buy
28:26 - you're gonna see that it's requesting
28:29 - products with
28:30 - this identifier ambition because uh i
28:33 - shouldn't have tried to buy this one
28:35 - because we only have one product in this
28:37 - store called reflect
28:38 - so i actually should have gone to this
28:40 - one
28:41 - and tried to buy this one but either way
28:44 - i'm trying to do this in the simulator
28:46 - is going to give you this
28:47 - sk request failed unknown error it's not
28:50 - going to be able to fetch it so why
28:51 - don't we
28:52 - plug in my iphone now and try this on an
28:54 - actual device
28:56 - alright so i've got my phone plugged in
28:57 - you can see the screen right here
28:59 - and let's try to deploy this onto my
29:02 - phone
29:04 - all right let's do that
29:08 - all right cool so why don't we scroll
29:11 - down to
29:13 - reflection and tap that and i'm going to
29:16 - hit
29:16 - buy
29:19 - now you should see something like that
29:22 - if you've never done this before
29:23 - you're going to see a pop-up asking you
29:26 - to log in as a test user to
29:28 - perform this test purchase here's how
29:30 - you're going to create that test user if
29:32 - you haven't
29:34 - done this before you go into app store
29:36 - connect
29:37 - go down to users and access and then
29:40 - you're going to
29:41 - go down to sandbox testers down here
29:44 - and then you're going to create a new
29:46 - sandbox apple id
29:48 - so it's going to have an email it's
29:51 - going to have a
29:53 - password and after you create that
29:55 - sandbox account you're going to come
29:57 - back here
29:58 - and you're going to enter in that
30:00 - sandbox account
30:02 - and then you'll be able to do a test
30:04 - purchase
30:05 - all right so now i'm going to go ahead
30:07 - and hit purchase on mine
30:10 - and then you're going to be able to sign
30:12 - in with
30:14 - that account that you've created
30:17 - and make that purchase all right it's
30:20 - done
30:21 - so wait for it okay so you get this
30:24 - pop-up that says you're all set
30:26 - and then you can see that our view
30:29 - automatically detected because
30:31 - the view model updated that user
30:34 - purchases property
30:39 - right here updated this property saying
30:42 - that we've purchased this
30:44 - reflection meditation and the detail
30:47 - view
30:48 - automatically re-rendered that this
30:50 - version the purchased version
30:53 - now that you've made your first test
30:55 - purchase you can actually see the data
30:57 - in your revenue cat account
30:58 - go over to overview and then toggle this
31:01 - to view sandbox data so these are all
31:03 - the test purchases you've done across
31:05 - all of the apps in your revenue cad
31:07 - account so all of the data is aggregated
31:10 - if you scroll down you can see that this
31:12 - transaction was the one that we just did
31:14 - so that is pretty cool if you click into
31:17 - this app user id you can even see some
31:19 - additional information if this user made
31:21 - purchases over time you'd see that here
31:23 - look at some of the cool data you can
31:25 - see first scene using the app
31:27 - last opened the app yeah this is just
31:29 - really really cool
31:30 - now to wrap things up i want to do a
31:32 - quick recap of the four steps that we
31:34 - went through to get to this point
31:36 - number one you created an app store
31:38 - listing for your app
31:39 - number two you configured the in-app
31:41 - purchase in app store connect
31:43 - number three you created a revenue cat
31:45 - account
31:46 - added this app and added that in that
31:48 - purchase
31:49 - number four you added the revenue cat
31:52 - sdk
31:52 - into your xcode project with cocoapods
31:55 - you
31:55 - initialized the purchases framework at
31:58 - the beginning of your app
31:59 - and then when the user tapped on the buy
32:01 - button you retrieve the sk product
32:03 - using the purchases framework and then
32:06 - again using the purchases framework you
32:08 - process the transaction
32:09 - for that purchase so there you have it
32:12 - in four easy steps you are able to
32:14 - monetize your app
32:16 - and allow your user to purchase
32:17 - something from you remember revenue cat
32:20 - is free to use
32:21 - up until you're making ten thousand
32:22 - dollars a month through your app
32:24 - and even at that point where you're
32:25 - making so much money it's only a hundred
32:27 - and twenty dollars a month
32:29 - so i would definitely think about using
32:30 - it especially at the beginning of your
32:32 - app when you're not sure if you're
32:34 - even going to make any revenue with it
32:36 - it's going to save you a lot of time and
32:37 - headache
32:38 - just go to codewithchris.com rcat to
32:41 - create your free account
32:42 - and you're going to need it because in
32:44 - the next lesson i'm going to show you
32:45 - how to add
32:46 - in-app subscriptions if you don't want
32:48 - to miss it make sure you subscribe to
32:50 - the channel and turn on bell
32:51 - notifications
32:53 - all right i have a quick question for
32:54 - you is your goal for app development
32:56 - related to generating
32:57 - income let me know by leaving a quick
32:59 - comment below and on your way down there
33:01 - if you want mine please give this video
33:02 - a quick thumbs up it really helps me out
33:04 - and i really really appreciate it
33:06 - alright i'll see you in the next lesson