00:01 - hello welcome to learn Swift for
00:03 - beginners lesson two in this lesson
00:05 - we're going to talk about data types did
00:08 - you know in the previous lesson that you
00:09 - were already working with different data
00:11 - types well let me point it out to
00:16 - you let me open up the playground that
00:19 - we were working with in the previous
00:21 - lesson do you remember how we were
00:24 - trying to reassign data into the
00:25 - variable St Str and I was assigning
00:28 - something like a number into Str Str and
00:31 - I told you that you couldn't do that in
00:33 - fact xcode tells you that you can do
00:35 - that right here so if we take this
00:38 - little console area and we scroll the
00:40 - scroll bar all the way up to the top the
00:43 - error message actually tells you what's
00:45 - going on cannot assign value of type int
00:47 - to type string well what's an INT and
00:50 - what's a string well those are two
00:52 - examples of data types just as the name
00:54 - implies a data type is a classification
00:57 - or a type of data
01:00 - for example a string is a data type that
01:03 - describe pieces of text an INT short for
01:07 - integer is a data type for whole numbers
01:10 - negative or positive however there are
01:12 - many more data types than just these two
01:15 - other types of data that you'll commonly
01:17 - be working with are float for floating
01:20 - Point numbers or decimal numbers and
01:22 - then there's double for decimal numbers
01:25 - where the decimal portion may be very
01:27 - large and then there's Boolean which
01:29 - represents true or false or in other
01:31 - words yes or no these are some of the
01:34 - more common data types that you'll be
01:36 - using and the reason why there are
01:39 - different types of data is because the
01:42 - system stores different types of data
01:44 - differently and so when we go back to
01:46 - the playground and we take a look at
01:48 - this variable that we declared here St
01:50 - Str and it stores a
01:53 - string the system has allocated this
01:56 - variable to store this piece of text or
01:59 - string in other words and when you try
02:01 - to assign an INT into that same variable
02:05 - it doesn't allow you to do that because
02:08 - strings and ins are stored
02:10 - differently now you might be wondering
02:13 - what differentiates a variable that
02:15 - stores a string like this St Str
02:18 - variable versus a variable that stores a
02:21 - number or an INT like this variable
02:24 - a well when you declare a variable you
02:27 - learned in the previous lesson that you
02:29 - use the keyword VAR and then the name of
02:32 - the variable well optionally you can
02:35 - also put beside the variable Name colon
02:38 - followed by the data type and if you
02:41 - declare your variable this way you're
02:43 - basically telling the system that this
02:46 - variable can only store this type of
02:50 - data and if you omit that part and you
02:53 - just simply declare your variable with
02:55 - VAR and then the variable name then what
02:58 - it's going to do is as soon as you
03:01 - assign a piece of data into that
03:03 - variable it's going to take a look at
03:05 - what type of data that is and assumes
03:08 - that that variable stores that data type
03:11 - so now going back into the playground
03:13 - here it's as if we declared this strr
03:18 - variable like
03:19 - this right and these ones are like
03:27 - this now for instance if I declared this
03:31 - Str Str variable like this then this
03:34 - line would be an error because I'm
03:36 - trying to assign a string into a
03:40 - variable that is of type int so it's not
03:43 - going to like
03:45 - that now let's change this back to a
03:48 - string for a second and go back to this
03:50 - line where there's an error now you
03:52 - understand why um this line is in red
03:57 - because we can't assign an in into a
03:59 - string variable well there are ways to
04:01 - convert data from type to
04:05 - type in some cases it makes sense like
04:09 - 29 here this in can be represented as a
04:11 - piece of text simply like that right but
04:15 - conversely this hello playground line
04:19 - right here I can't convert that to an
04:22 - integer because it doesn't make sense
04:25 - that this message could be represented
04:27 - by a number so for for example just as a
04:31 - little preview here if I wanted to
04:32 - convert this number or this integer into
04:35 - a
04:37 - string I would create a new string and
04:40 - pass in the number like that now I'm not
04:42 - going to go into detail about why this
04:44 - works or what this line is because then
04:47 - you're going to have to learn about
04:48 - classes and initializers and stuff like
04:50 - that but for now in this lesson I want
04:53 - you to understand that there are
04:54 - different data types why there are
04:56 - different data types and how that comes
04:59 - into effect when you're declaring your
05:01 - variables and working with your
05:03 - variables and your
05:04 - data now before we end this lesson off
05:07 - let me just show you a couple of
05:08 - examples of the other data types we
05:09 - talked
05:12 - about so float could be something like
05:15 - that a double usually also looks like
05:18 - this and you're not going to have a
05:20 - really large decimal point unless it's
05:22 - like a result of a calculation that
05:24 - you're
05:25 - doing um and let me show you a Boolean
05:29 - with which is represented as bu so you
05:31 - can set this to the keyword true or
05:33 - false which is going to come in handy
05:36 - for the next lesson that we're going to
05:38 - do on if statements oh and there is a
05:41 - mistake here because I'm redeclaring C
05:44 - did you see that um in the previous
05:46 - lesson we talked about how you can't
05:48 - redeclare a variable see we declared
05:50 - varc up here but I forgot that we had
05:54 - tried to declare a constant with the
05:56 - same name down here so this is going to
05:59 - have to be
06:00 - F I'll show you some other types of data
06:04 - conversions here so I can say let's
06:07 - print out um let's change C which is a
06:13 - float into an INT and what's going to
06:16 - happen is that it just drops the decimal
06:18 - portion of that so if you did
06:22 - print let's convert D which is a double
06:25 - into an integer you can see here that it
06:28 - just chops off the 0.9 and you get 133
06:31 - now there is a rounding function which
06:33 - we can try out right
06:35 - now like that and then inside the
06:38 - parentheses you can put D which is our
06:41 - double
06:42 - 13.9 and what you're going to get as
06:45 - soon as it finishes processing is 14
06:48 - like that but notice that the result is
06:50 - also a decimal number see it has a point
06:53 - Zer there so what you can do is wrap the
06:56 - result of that rounding inside
07:00 - a pair of brackets like this inside an
07:03 - INT uh and then you'll get 14 without
07:06 - the
07:07 - decimal okay so that does it for data
07:09 - types if you're enjoying the learn Swift
07:12 - Series so far please subscribe to the
07:14 - channel and please give this video a
07:16 - thumbs up that's going to help give my
07:18 - channel more exposure and so we can gain
07:21 - more subscribers and I can continue
07:24 - producing these tutorials for you guys
07:27 - so thanks again and I'll see you in the
07:29 - next l lesson bye for now
07:33 - [Music]