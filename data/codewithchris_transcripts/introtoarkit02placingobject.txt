00:00 - last lesson we set up our project architecture 
so today is all about the foundational models of  
00:05 - arcade anchors and entities hey Code Crew 
this is Flo with our project architecture  
00:11 - ready from the first lesson today we'll be all 
about how you can place content in the scene  
00:17 - we will start with the theoretical 
foundations and dive into an example  
00:22 - in the end so first of all before you can place 
any content in your scene you need to run a ar  
00:27 - configuration there are a bunch of different ones 
and i've already prepared some example code here  
00:32 - you will want to create this configuration for 
example in your initializer of your ar view now  
00:37 - with our architecture we're not using the air view 
directly because we have created a custom a review  
00:43 - which inherits from AR view so in its initializer 
you would call or you would create a configuration  
00:51 - and then always call ar session or session dot run 
with set configuration now which configuration you  
00:59 - need depends on what you want to do in your 
ar view if you only want to place content at  
01:05 - coordinates relative to your iPhone then all you 
need is the basic ar world tracking configuration  
01:12 - in ios 15 and as far as i know also in ios 16 
this is the default so if you only want to place  
01:19 - objects relative to the iphone you don't actually 
need to create a configuration but you of course  
01:24 - can and it will be it will not be hurting you and 
will just be more explicit so i encourage you to  
01:30 - always create a configuration even if you're 
just placing objects relative to your iphone's  
01:34 - coordinates now there's a very cool configuration 
which is called geotracking this one allows you  
01:42 - to place object with respect to real-life 
coordinates so latitude and longitude coordinates  
01:48 - the only downside is that this configuration 
is only supported in certain regions  
01:53 - as of the date of this recording it's only 
supported in some major cities in the us  
02:00 - this can of course change with time and the reason 
why this is not supported is because it needs the  
02:06 - street view and apple maps this basically does 
sensor fusion if you want to hear the fancy name  
02:11 - so it looks at your gps coordinates and at 
your camera stream and then matches that camera  
02:17 - with what it knows from street view and that 
way it can very precisely position you in a yeah  
02:23 - on the globe basically that's why this is not 
available everywhere so i would personally hold  
02:29 - back with the geo tracking configuration until 
more cities worldwide are also supported otherwise  
02:35 - users from abroad will not be able to use this 
the next configuration is needed if you want to  
02:40 - track faces so for example if you want to place a 
virtual mask on a user's face then you will need a  
02:47 - face tracking configuration and very similarly 
if you want to track the user's body you will  
02:52 - need a ar body tracking configuration just one 
more time to repeat when you want to use one  
02:59 - of these configurations that will tell a arcade 
what you're going to do what it has to track and  
03:04 - you will have to create this configuration just a 
single time and run it on your current ar session  
03:10 - which is just the session property of an ar view 
so very simple now that you've probably created a  
03:16 - configuration it's time to dive into anchors let 
me first explain to you how air kit works under  
03:22 - the hood so there are entities which are basically 
your 3d objects that you want to place in the  
03:27 - scene and then there are anchors anchors tie your 
objects to a certain place in the scene so for  
03:35 - example an anchor could be tied to a coordinate 
in the scene the coordinates in a r kit are always  
03:40 - relative to your iphone's initial position 
when you first opened the app so for example  
03:45 - you could place an anchor three meters in front 
of the iphone or a meter above the iphone even  
03:52 - and then these anchors are sitting there still 
even when the user moves around the anchor is  
03:57 - still at the same position and then you can attach 
entities to those anchors now which configuration  
04:04 - you need highly depends on which type of anchor 
you want to use so there are a bunch of very  
04:10 - simple anchors and also some more advanced ones 
i've prepared a few here so let's dive into them  
04:15 - the first one is just the anchor entity with 
world coordinates so this gets passed in  
04:22 - a matrix with your word coordinates let's have a 
look at the dot zero here what this actually is  
04:28 - so this is a zoomed three which is a r kit term 
for a three by three matrix of a scalar value so  
04:36 - for example a double now i went the easy route 
here and use the zero filled matrix dot zero  
04:42 - so this would just place an entity at zero zero 
zero so basically exactly where the iphone was  
04:48 - when the session started of course you can pass 
in any coordinates here and then your entity  
04:56 - or your anchor will be placed at that specific 
coordinate this is the easiest way to use ar kit  
05:01 - in my opinion next up you can do plane tracking 
this is a bit more fancy so for example imagine  
05:09 - you want to place a figurine on the floor now 
what you want to do is create an anchor entity  
05:15 - on a horizontal plane this tells ar kit to 
track surfaces in this case horizontal surfaces  
05:23 - and place an entity there once it found 
one of course the same works for vertical  
05:30 - surfaces so just create an anchor entity with 
a plane of dot vertical you can also allow to  
05:35 - track any kind of surface next and this will 
need one of the configurations from before  
05:40 - in specific the ar face tracking configuration you 
can of course also place anchors on a user's face  
05:49 - and the same thing for the user's body for 
example another very fancy anchor is for images  
05:57 - so for example if you want to track some markers 
like a visual code or a printed image or an iphone  
06:04 - or whatever it may be you can track images in the 
ar scene using the dot image syntax here for your  
06:10 - anchor entity i have never used this myself so 
i can't give you give you much insight on how  
06:16 - it actually works under the hood but this is 
one of the more fancy ways to create an anchor  
06:23 - and then lastly whichever kind of anchor 
you created doesn't really matter but you  
06:27 - will have to add it to the ar scene our air 
view has a property called scene which is an  
06:33 - ar scene i believe oh it's just a scene actually 
not from ar kit and this one has a function called  
06:40 - add anchor and then you just pass in your anchor 
so for example you would create an anchor at 0 0 0  
06:46 - using the syntax up here and then you can add 
it to the current scene so you can later on add  
06:52 - entities to that anchor okay so now that you have 
created your configuration and your anchor it's  
06:58 - time to place some 3d objects there of course 
there are a bunch of different ways to load  
07:03 - assets into your app i will just go over a few of 
them the most basic example is to load an entity  
07:10 - from a usdz file that's included in your 
project a usdz file is just a file type  
07:16 - that is created by apple actually and that's 
used for 3d models with textures so very basic  
07:23 - there's a library of usdz files online on the 
apple developer website where you can just grab  
07:28 - a few of course that's very limited so you would 
probably want to create your own usdz files but  
07:33 - loading them is super simple just say entity.load 
and pass in the name of your usd file the same  
07:39 - syntax can also be used to load a reality file for 
example from reality creator or reality converter  
07:46 - i'm not exactly sure which of the two is the ipad 
app but you can use that to create reality files  
07:53 - which are actually interactive so you could also 
make them do some animations for example which is  
07:58 - very fancy not covered in this lesson though but 
loading entities that you already have an asset of  
08:05 - in your project super easy just call entity.load 
named and pass in a string of your file name  
08:13 - now there's one thing to note and that's that the 
load function is available so you need to try to  
08:19 - do it so you either have to put it inside of a to 
catch block or just use the try optional operator  
08:24 - here and then another very cool method to create 
entities is to do it by code so you just use the  
08:31 - mesh resource dot generate box function and you 
can pass in a size here as i said it's a cube  
08:38 - so this is the size of the edges in this case 
one meter then you create a entity from your  
08:44 - mesh resource so just a model entity from our 
box and then you're already done basically  
08:51 - of course now you could add colors or textures to 
this entity this is the way that you can generate  
08:57 - entities by code if you only need something very 
simple lastly as always you need to add it to the  
09:02 - scene somehow so you will have to have an anchor 
of some sorts now i just have a dummy anchor  
09:08 - here obviously in reality you will have one of the 
anchors that i showed you in the previous examples  
09:14 - and then you just call anchor dot add child of 
your new entity okay lastly let's have a look  
09:20 - at all of this in action so as i've told you 
about the ar world tracking configuration is  
09:26 - free basically it just runs by default so i have 
not created a specific configuration here what  
09:31 - i have done is created a function called place 
blue block and i've called that function in our  
09:37 - initializer which we are actually using so if you 
remember from the last lesson we have two required  
09:43 - initializers but we're not actually using them 
we're just using this convenience initializer here  
09:48 - and in there i'm calling the place blue block 
function now in this function i'm using code  
09:53 - to generate an entity let's have a look at it 
so i'm creating a meshresource.generatebox with  
09:59 - a edge size of one meter basically exactly 
the same as in the entity example beforehand  
10:06 - then i create a simple material which is a way 
to color that box so i chose the color blue and  
10:13 - i've said is metallic to false if you set this 
to true it will of course be metallic as the  
10:19 - name suggests so so it will reflect light from 
the actual environment which looks really cool  
10:24 - then i will create an entity same as before so 
an model entity passing in our block mesh but  
10:32 - also passing in a list of materials in this case 
we just have our simple material which is a blue  
10:38 - color that's not metallic then i create an anchor 
entity that's anchored at the horizontal plane  
10:44 - so when you open the app arcade will look for any 
horizontal plane that it can detect for example  
10:50 - your desk or your floor and then i will add our 
entities or blue block to that anchor so now it's  
10:56 - attached to that anchor and will always stay at 
this exact position that we've specified with  
11:01 - the anchor and lastly i've added the anchor to 
our scene in the air view since i've called this  
11:07 - method in the initializer it will run once the 
app opens so let's have a look at that right now
11:24 - okay so in this lesson you learned how objects 
can be placed in the ar scene which kinds of  
11:29 - anchors and configurations are available 
and how you can load your different assets