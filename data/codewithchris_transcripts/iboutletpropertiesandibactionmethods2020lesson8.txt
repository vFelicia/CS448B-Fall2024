00:00 - hi and welcome to lesson eight you're
00:01 - almost there only two more lessons after
00:04 - this one and in this video we're going
00:06 - to return back to our work hard game
00:08 - Xcode project and I'll explain to you
00:10 - how those Swift Basics you've learned
00:12 - apply to this project by the end of this
00:15 - lesson you'll know how to write code
00:16 - inside the view controller to access and
00:18 - manage those elements that we've created
00:20 - in the storyboard I'll also show you
00:22 - what to do what your app crashes which
00:24 - is something that actually happens quite
00:26 - often into all of us so if you're ready
00:28 - let's do this so here I have our war
00:36 - card game Xcode project and we're going
00:39 - to jump right into the view controller
00:41 - dot Swift file now that you've gone
00:43 - through this with basics we can talk
00:45 - about some of the code in this file so
00:47 - in this first line import UIKit you know
00:49 - what that means we're basically saying
00:51 - that in this code file we want to use
00:53 - the uikit
00:54 - library that apple provides to make our
00:57 - life easier
00:58 - you go down to this line we have class
01:01 - view controller so right here we're
01:03 - declaring a class called view controller
01:05 - and you can see that it has an opening
01:08 - curly bracket and a closing curly
01:10 - bracket and this inside is a function
01:14 - you can see the F UNC you there it's a
01:17 - function called viewdidload now there
01:19 - are some details that we are going to
01:21 - gloss over right now because it's not
01:24 - relevant for what we need right now I
01:26 - don't want to burden you with that
01:28 - information but pieces of information
01:31 - like this here : uiviewcontroller
01:33 - essentially this is something that's
01:35 - called sub classing which is a way for
01:38 - classes to build off of each other so
01:40 - you're not always declaring classes from
01:44 - scratch this is essentially saying that
01:46 - the view controller is building off of
01:49 - another class called UI view controller
01:51 - and this UI view controller class is
01:53 - actually one from UI kit and for this
01:57 - function here you can see that there's
01:59 - an override keyword so you don't need to
02:02 - know about that for now and also this
02:04 - super keyword which again is something
02:07 - that we don't need to know right now but
02:09 - essentially you know at a high level
02:12 - what you're looking at here
02:13 - is a new controler class with a function
02:17 - inside called viewdidload so isn't that
02:19 - really really cool because everything
02:21 - you learned in the last three Swift
02:23 - lessons it you know directly translates
02:25 - to what you're seeing here but as you
02:27 - learned in the last lesson the
02:29 - viewcontroller class by itself is just a
02:31 - blueprint it doesn't do anything right
02:33 - you need to turn it into an object first
02:35 - so now we're going to jump into the main
02:37 - dot storyboard and take a look at the
02:40 - work that we've done here so all these
02:42 - elements that we've added into the view
02:44 - here and that we've configured what are
02:46 - they are the objects of eight classes
02:48 - well believe it or not what we've been
02:51 - doing here we've been creating objects
02:53 - and you might say that hey Chris from
02:57 - what I've learned objects are created
02:59 - from classes right but what sort of
03:02 - classes are these guys objects of well
03:06 - let's take a look at this object library
03:08 - here you see all of these things these
03:11 - are classes inside the uikit library yes
03:14 - that library that we import all of these
03:18 - useful classes like buttons text fields
03:20 - and sliders and stuff like that when we
03:22 - drag one of these elements on to the
03:25 - view we are actually creating an object
03:28 - of that slider class or that button
03:30 - class or that uiimageview class and pick
03:35 - a load of this when you click on one of
03:37 - those elements or objects now that you
03:40 - know what they actually are and you go
03:43 - here on the right hand side into this
03:45 - inspector you can see all of these
03:46 - things that we can configure well what
03:48 - you're actually doing is you're setting
03:50 - the properties for that object so you
03:54 - see everything maps to exactly what
03:56 - we've been talking about in the last
03:58 - three lessons
03:59 - this whole storyboard is merely a visual
04:01 - way for us to create these objects and
04:04 - set its properties in fact we could just
04:07 - completely omit the storyboard and we
04:09 - can decide to create all of these image
04:12 - objects these button objects through
04:14 - code and then set its properties through
04:17 - code and then put them into the view
04:19 - through code so you completely don't
04:22 - have to touch the storyboard but this is
04:24 - more of an intermediate to advanced
04:27 - technique and I wouldn't recommend that
04:28 - for you right now for beginners I would
04:31 - definitely recommend to start with the
04:32 - storyboard so now that you know that
04:34 - these storyboard elements are actually
04:36 - objects how do we get references to
04:39 - these objects so that we can call their
04:41 - methods and configure their properties
04:43 - through code through the view controller
04:46 - well that's where I BLM properties come
04:49 - in let me show you how we can expose
04:51 - these objects as iboutlet properties so
04:54 - that the view controller can access them
04:56 - now there are several ways to do this
04:57 - but the easiest way is just to go ahead
05:00 - and select view controller here in your
05:03 - document outline and remember that this
05:05 - is the visual representation of the view
05:08 - controller object click this this button
05:13 - here that looks like two Khojaly
05:15 - circles this is actually called the
05:17 - assistant editor and what that's going
05:19 - to do is split your code editor into two
05:21 - different panes a left side and a right
05:23 - side now I want to make sure on your
05:25 - right side you're looking at the view
05:27 - controller furthermore up here in this
05:31 - breadcrumb sort of navigation I want to
05:33 - make sure that your say automatic here
05:36 - if it doesn't go ahead click it and
05:38 - bring it down from manual or whatever it
05:40 - was set to go under automatic and select
05:43 - view controller and then find this spot
05:46 - here right after the opening curly
05:49 - bracket of the class press enter a
05:52 - couple of times to create some space and
05:54 - then on the left hand side we're going
05:58 - to expose this left card this first card
06:02 - as an iboutlet property now you could do
06:07 - it through here the storyboard but what
06:09 - I would actually recommend is to do it
06:10 - through the document outline so go ahead
06:12 - and open up your document outline until
06:15 - you see the card here you know you can
06:18 - select the element it's gonna highlight
06:20 - the different parts make sure you've got
06:22 - that left card highlighted hold down
06:25 - control on your keyboard and then while
06:27 - still holding down control click and
06:30 - drag this blue line should follow your
06:33 - mouse cursor as long as you're holding
06:34 - down the control key now drag it over
06:37 - here you should see this little text
06:38 - that says insert
06:39 - outlet and then you can let go of your
06:41 - mouse button and then control key you're
06:44 - gonna get this little menu here and then
06:47 - you're gonna be able to name this ivl
06:48 - led property so I'm going to call this
06:51 - the left image view like that and if
06:55 - you've done this with the right element
06:58 - the type should say uiimageview if this
07:01 - doesn't say that for you just click
07:03 - cancel and then try it again the
07:06 - connection type should be outlet and you
07:09 - can go ahead and hit connect and what
07:11 - that's going to do is generate this
07:12 - property for you because you see there's
07:15 - the VAR keyword here is the name of the
07:18 - property here is the data type that this
07:22 - property references which is UI image
07:25 - view and this is special because it's
07:29 - got this iboutlet
07:30 - keyword here which just indicates that
07:33 - this property references an object in
07:36 - the storyboard now I'm going to gloss
07:38 - over a couple of things here such as the
07:40 - weak keyword and this exclamation mark
07:43 - here so that's not something that we
07:45 - need to talk about right now but the
07:47 - important thing to note is what you've
07:49 - done here is essentially hooked up that
07:53 - object in the storyboard to this
07:55 - property here inside your view
07:57 - controller so now that you have a
08:00 - reference to that uiimageview object you
08:04 - can call methods on it you can configure
08:06 - its properties inside the view
08:08 - controller here now because oftentimes
08:11 - beginners make mistakes when connecting
08:13 - their first IB outlets I'm gonna go
08:15 - through some troubleshooting steps and
08:17 - also some steps for you to confirm that
08:19 - you've done this properly so go ahead in
08:21 - the document outline for this image that
08:24 - you just connected right-click it and it
08:28 - should pop up this little menu and you
08:29 - can see under referencing outlets it
08:32 - says left image view with this view
08:36 - controller here now if yours doesn't say
08:38 - this then you might have connected the
08:40 - wrong element so what I would do is
08:43 - maybe check the stack view you could
08:45 - have accidentally connected this guy
08:47 - right-click it and you know there should
08:50 - be no referencing outlets there
08:52 - you know same thing with the right card
08:53 - view if you click this there should be
08:55 - no referencing outlets if you've by
08:58 - chance accidentally connected another
09:00 - element here's how to fix it go ahead
09:04 - you know when you see that menu here you
09:07 - have to click this little X to break the
09:09 - connection and then go ahead and delete
09:12 - the property and then you just start all
09:15 - over and this time you make sure you
09:17 - have the right element selected hold
09:19 - down control drag that blue line over
09:23 - here let go and then you can say left
09:26 - image view now let's say when I'm typing
09:30 - this out I accidentally make a typo and
09:32 - I connect it a lot of the times
09:34 - beginners will just correct this typo
09:36 - like this and leave it at that
09:39 - but essentially that will cause a
09:41 - problem down the road when you run your
09:43 - app because what happens take a look at
09:45 - this right click this and you can see
09:49 - that this image object is connected to a
09:53 - property called left image view with two
09:55 - w's but what we've done here is that
09:58 - we've corrected it so it's gonna look
10:01 - for a property with two WS but it
10:03 - doesn't exist so your app is actually
10:04 - gonna crash that's not the way you want
10:06 - to fix your typos when it comes to
10:08 - connecting Ivy outlets you want to go
10:12 - ahead and break that connection
10:13 - and then just delete the property and
10:17 - you just all over now should show you
10:19 - another way to correct this so the most
10:22 - important part is that you break that
10:23 - connection
10:24 - you can potentially just leave that IBL
10:27 - a property that was created and then you
10:31 - can right-click your image that you want
10:33 - to connect to that property under
10:35 - referencing outlets click this little
10:38 - circle drag to the view controller let
10:42 - go and it's going to pop up some
10:43 - properties that you can connect this
10:45 - image object to now it's important you
10:48 - don't connect it to the wrong one choose
10:50 - left image view and you can see that
10:53 - this this image right here an image view
10:57 - is connected to the left image view
11:00 - property of our view controller so
11:01 - that's what you want
11:03 - now let's call it connect the
11:05 - imageview hold down control click and
11:08 - drag that blue line I want to make sure
11:10 - that you don't drag it into that same
11:13 - property because if you do that you'll
11:15 - be connecting two elements onto the same
11:18 - iv8 outlet property and that could cause
11:20 - potential problems so you need to drag
11:24 - it into an empty space where it says
11:25 - insert outlet or outlet kind of
11:27 - collection let go I'm going to call this
11:30 - the right image of view and we're gonna
11:33 - connect it all right so we've got two
11:35 - we're going to connect a few more let's
11:39 - say we're going to connect the score
11:41 - labels because we're going to need to
11:43 - update them through the code so let's
11:46 - connect this left player score one and
11:51 - you can see what I did I created a
11:53 - little more space there hold down
11:54 - control click and drag call this the
11:58 - left a score label you can see the type
12:01 - now is different it's a different class
12:03 - UI label connect that and then here is
12:11 - the right one right score label alright
12:21 - now I want to show you what an app crash
12:24 - looks like so I'm gonna go ahead and
12:26 - just change the name of my IB outlet
12:30 - property with without breaking the
12:32 - connection and fixing it here in the
12:34 - storyboard and as I told you this is
12:37 - going to cause a crash so let's go ahead
12:39 - and run the project and we'll see what
12:43 - happens
12:53 - all right so right here you see this red
12:57 - highlighted line that's gonna be a crash
12:59 - and we basically see the same thing on
13:02 - the left and right side because we have
13:03 - the assistant editor open but the main
13:06 - thing is that you need to look down here
13:08 - in the console area if you don't have
13:10 - this section just go ahead up here this
13:13 - will show or hide it and on this
13:16 - right-hand side sometimes if you don't
13:17 - have this there are two small little
13:19 - buttons here in the lower right hand
13:21 - corner that let you control the left and
13:24 - right sides so make sure you've got this
13:27 - side here where it shows you all of this
13:29 - text and down here you see terminating
13:31 - with uncaught exception and that's just
13:33 - a generic message for an app crash what
13:36 - you want to do instead is scroll all the
13:38 - way up and that's where you're gonna
13:40 - find an error message which makes a
13:43 - little more sense so here you see at the
13:46 - very top terminating app due to uncaught
13:48 - exception the reason this class is not
13:54 - key value coding compliant for the key
13:57 - rights core label now the line I've
14:01 - highlighted here may not make a lot of
14:03 - sense but what happens is that once you
14:07 - know how to solve this error and the
14:09 - next time you see an error message that
14:11 - looks kind of like this you have an idea
14:14 - about what's wrong and how to fix it in
14:17 - this particular case it's telling you
14:19 - that something is looking for a right
14:22 - score label but it can't find it and we
14:25 - know exactly what the problem is right
14:27 - if we go back into the storyboard write
14:31 - this write the score label you can see
14:35 - if you right click that it says this
14:37 - element is connected to an iboutlet
14:39 - property called write score label
14:42 - spelled correctly but if you look inside
14:45 - our view controller we don't have a
14:48 - property like that we only have this one
14:50 - write score laid without the L at the
14:54 - end and so that's why the app is
14:56 - crashing because it's looking to make
14:57 - that connection that we've told it to
15:00 - make but it can't find you know that
15:03 - corresponding on the outlet so
15:06 - next time you experience an app crash
15:08 - and maybe you're looking for help online
15:11 - or maybe you're in our support forum and
15:13 - you're asking for help make sure that
15:15 - you scroll all the way up into this
15:18 - console and look for that error message
15:20 - which gives you a hint as to what's
15:22 - wrong if you if you just look at this
15:25 - it's not really going to tell you any
15:27 - sort of information okay so let's go
15:29 - ahead and fix this by adding that L that
15:33 - was missing and let's take a look at
15:35 - what we've done here so far so
15:38 - essentially let me go back to the single
15:41 - editor view just so you can see a little
15:43 - more clearly essentially what we've done
15:46 - is we've connected the two image view
15:49 - objects from the storyboard and the two
15:51 - labels from the storyboard as well as
15:54 - iboutlet
15:56 - properties here so from this view
15:58 - controller code file we can reference
16:01 - those objects using dot notation we can
16:04 - access the methods of those objects and
16:07 - those properties of those objects as
16:09 - well let me just demonstrate for you so
16:11 - inside the viewdidload method and create
16:15 - some space and let's access the left
16:19 - image view now hold on a minute why can
16:23 - we access the left image view from
16:26 - within the viewdidload method
16:28 - well this left image view is outside of
16:34 - a function but inside the class so it's
16:35 - inside the scope of the class remember
16:38 - this function is also in the scope of
16:42 - the class so that's why from inside this
16:45 - function we're able to access that left
16:48 - image view property now using dot
16:51 - notation let's click dot and here I can
16:54 - see all of these methods and all of
16:57 - these properties of the uiimageview
16:59 - class let me show you one particular
17:02 - property here called image now this
17:06 - image is you can read the description
17:08 - down here in the autocomplete dialogue
17:10 - the image displayed in the image view
17:12 - that means that I can actually set this
17:15 - image property to change the image
17:19 - that image view is showing now I'm not
17:21 - going to actually do it but why I wanted
17:23 - to point this property out is because I
17:27 - want to jump back into the storyboard
17:29 - and show you if I click this left image
17:33 - view go over to the attributes inspector
17:36 - here
17:36 - you see this image attribute it's
17:40 - basically the image property that I just
17:42 - showed you see if I change the card here
17:45 - right that's just a visual quick way to
17:49 - do the same thing as if I were to do it
17:53 - here by using code all right the next
17:57 - order of business is how do we execute
17:59 - some code when this button is tapped on
18:02 - this field button right here well that
18:05 - brings us to I be action functions and
18:07 - it's connected in the same sort of way
18:10 - as IB outlet properties let's go ahead
18:14 - and open up assistant editor and let's
18:18 - create some space here in the view
18:20 - controller side now let me just hide
18:23 - this panel so we can see a little bit
18:24 - more now before here when we were
18:28 - establishing these IB outlet properties
18:30 - we did we did it up here but now that we
18:34 - are connecting a function we're going to
18:37 - do it down here still inside of the view
18:43 - controller class so we have to do it you
18:46 - know before this closing curly bracket
18:48 - but we also don't want to accidentally
18:51 - do it inside of another function so this
18:54 - is you know the opening bracket of the
18:56 - viewdidload function and this is the
18:58 - closing bracket of that viewdidload
19:00 - function we want to do it right here
19:02 - this is where we can declare a new
19:04 - function so we can create some space
19:06 - here like that
19:08 - go ahead hold down control click on this
19:11 - deal button element drag it here and it
19:15 - says insert action outlet or outlet
19:18 - collection go ahead and let go and you
19:21 - can see that action sorry the connection
19:23 - type should be action if it's not just
19:26 - click on that drop-down and choose
19:27 - action and
19:30 - down here I want you to notice that it
19:32 - says touch up inside there are different
19:36 - events that this button can trigger
19:38 - touch up inside is just a bunt app it
19:41 - essentially means that the user has
19:43 - tapped on the button and then let go of
19:45 - the button while still within the
19:47 - boundaries of the button if you open
19:49 - this up you can see there are different
19:51 - events for example touch up outside
19:54 - which is actually tapping on the button
19:56 - and the letting go with the finger
19:59 - outside the boundaries of the button so
20:00 - that doesn't really count as a tap
20:03 - so we're gonna leave it as touch up
20:05 - inside and we're going to call this Matt
20:08 - we're gonna call this method deal tapped
20:10 - and we're gonna hit connect and you're
20:12 - gonna see that this is essentially a
20:14 - function with this special IB action
20:17 - keyword which essentially just says that
20:19 - this function is connected to an event
20:21 - of triggered by an object in the
20:23 - storyboard it's got one parameter called
20:26 - sender which is basically the button
20:30 - it's a reference to the button that
20:32 - triggered this event and here is the
20:35 - opening curly bracket and here's the
20:37 - ending curly bracket and we're going to
20:38 - create some space in the middle and
20:40 - we're gonna add some code to execute
20:43 - when this button is tapped on so I'm
20:46 - gonna print deal tapped like that and
20:52 - now we're going to run our project and
20:55 - we're going to tap on that button and
20:56 - just check the console to make sure that
20:59 - this is connected properly oh one thing
21:01 - before we do that if you've accidentally
21:03 - connected the wrong element to fix it
21:07 - would you'd go through the same exact
21:09 - steps as the iboutlet property so you
21:12 - can go ahead and right-click the deal
21:13 - button kill that connection you can see
21:16 - all these different events you kill that
21:18 - connection under touch up inside delete
21:21 - the IB action and then just try it again
21:25 - just like before if you've accidentally
21:28 - made a typo here don't just don't just
21:31 - change the function name like that
21:32 - because it's going to break things right
21:35 - this is still connected to deal tapped
21:38 - right and if you don't have that
21:40 - corresponding function in your view view
21:43 - controller file you
21:44 - is going to break so just be aware of
21:46 - that all right so let's run the project
21:55 - all right so we're gonna click let's
21:57 - move this over here so here you can see
22:04 - in the console that this triggers
22:09 - alright so in this lesson you learned
22:11 - about how you can use iboutlet
22:13 - properties to allow your view controller
22:15 - to access and manage those elements in
22:17 - your storyboard you also learned about
22:18 - IB action functions and how they can be
22:21 - hooked up to events in this storyboard
22:22 - you learned about common mistakes that
22:25 - people make when they hook up their IB
22:27 - outlets and IB actions and how to
22:29 - correct those mistakes and finally you
22:31 - learned about app crashes and how to
22:33 - find a detailed error message when your
22:35 - app crashes now I highly recommend that
22:38 - you download the recap notes by clicking
22:40 - there or checking the description below
22:41 - just to do a review of what we've
22:43 - learned and if you liked this video
22:45 - please subscribe by hitting that red
22:47 - subscribe button below and click on that
22:48 - Bell icon as well if you don't want to
22:50 - miss the next video and then go ahead
22:52 - and click on the thumbnail over there
22:53 - for the next lesson and I'll see you
22:54 - there determining with uncaught
22:58 - exception it's a generic crash mess a
23:03 - generic crash mat crash