00:07 - hello everyone welcome back to lesson 11
00:09 - of how to make iPhone apps with no
00:11 - programming experience in this lesson
00:13 - we're going to lay down the groundwork
00:15 - and we're going to expose the elements
00:17 - of our user interface so that they can
00:19 - be manipulated with swift code in the
00:23 - previous two lessons you learned about
00:25 - UI kit which is a set of classes that
00:27 - Apple provides to make app building easy
00:29 - iier for us well did you know that all
00:33 - of these elements we've added to our
00:35 - storyboard here they are actually part
00:37 - of UI kit so for instance these image
00:41 - views that we added to display images
00:43 - well the official class name for these
00:46 - guys is UI image view I'm just going to
00:49 - quickly pull up the UI kit reference and
00:53 - I'm going to search for the official
00:55 - name here UI image View and you can see
00:58 - it's part of UI kit and this object is
01:01 - or this class is meant to display images
01:04 - going back to the xcode another example
01:06 - this button that we added the official
01:09 - class name for it is UI button so if I
01:13 - search for that there we go there it is
01:16 - so we've actually been working with uiit
01:19 - already by adding these pre-built
01:22 - elements onto our
01:24 - storyboard so in the previous two
01:26 - lessons you learned that when we're
01:28 - building an app project in xcode what
01:31 - we're doing is we're merely building
01:33 - classes and these classes get turned
01:35 - into objects when we run the app and the
01:38 - objects are actually interacting with
01:41 - each other to uh display your project
01:44 - and to uh provide the functionality for
01:46 - your
01:47 - app when we were working on our user
01:50 - interface it might not have felt like we
01:52 - were working with classes but in fact we
01:54 - were I just showed you that all of these
01:57 - elements they are classes in the UI kit
02:00 - framework so by dragging them onto our
02:03 - UI view here and specifying all of these
02:08 - uh configuration these attributes for
02:10 - these elements xcode is going to take
02:13 - all of this visual information and it's
02:16 - going to create instances of these
02:19 - classes or objects of these classes when
02:21 - the app project runs so for example uh
02:25 - when we run this project xcode would
02:27 - create an image view object here an
02:30 - image view object here and then assign
02:32 - it the image that we've specified in the
02:34 - inspector pane uh same thing with the
02:36 - buttons and labels xcode would create
02:39 - objects for all of those classes that
02:42 - we've specified here and it would assign
02:44 - them to the right places and that's how
02:46 - our view would be created in memory so
02:50 - the next question becomes how do we get
02:52 - access to these objects and memory so
02:54 - that we can modify them so for example
02:57 - how would we change an image once the
03:00 - app is
03:01 - running well if you remember back in the
03:03 - MVC lesson or the model view controller
03:06 - lesson who manages the view the view
03:09 - controller right when we created the
03:11 - project this class was already created
03:14 - for us this view controller and when
03:17 - this view gets created in the storyboard
03:21 - it actually gets assigned to the view
03:24 - property of this view
03:26 - controller so let us examine this view
03:29 - controller class first of all this
03:31 - statement up here import UI kit just
03:34 - specifies that we're going to be using
03:36 - UI kit classes in this view controller
03:39 - class now you can see here that the view
03:41 - controller class actually is a subass of
03:44 - the UI view controller class if we
03:47 - search in our UI kit reference
03:52 - document we might have to look quite a
03:56 - bit so here is the UI view controller
03:59 - class as part of the UI kit framework
04:03 - now the UI view controller class
04:05 - contains a lot of pre-built
04:07 - functionality for displaying The View
04:09 - managing the view so on and so forth so
04:13 - what xcode does for us is creates a
04:15 - brand new class and then it subclasses
04:19 - from that and allows us to um specify
04:24 - custom behavior for our view
04:26 - controller by default we have two
04:29 - methods that are overridden for us so
04:32 - view did load is an overridden method
04:34 - from the UI view controller class and
04:38 - this method gets automatically triggered
04:40 - when the view specified in our
04:43 - storyboard has loaded that means that
04:46 - xcode has turned all of this visual
04:48 - information into objects and has
04:50 - assigned it to the view controller then
04:52 - this method will fire and then inside
04:55 - this method we can add any code that we
04:57 - would like to um manipulate the uh
05:01 - elements in the view if we need to at
05:04 - that point in time another method that
05:06 - is overridden is the did receive memory
05:09 - warning method and this method gets
05:11 - fired when memory is low when our app is
05:14 - running and in here we can specify some
05:17 - code to manually free up some of our
05:20 - objects or assets or data whatever to
05:23 - free up some memory manually most likely
05:26 - we won't have to specify anything in
05:28 - this method because xcode does a pretty
05:31 - good job of managing our memory within
05:34 - our app unless we're doing something
05:35 - really
05:37 - strange all right so I still haven't
05:39 - told you guys how we're going to uh get
05:42 - a handle on those objects from the
05:44 - storyboard from this view controller
05:47 - well we're going to do that through what
05:49 - are called IB Outlet properties you've
05:52 - already learned what properties are IB
05:55 - Outlet is simply a keyword that
05:57 - specifies that that property is refer
05:59 - referencing an object that was created
06:02 - from the storyboard so let me go ahead
06:04 - and show you guys how we're going to use
06:06 - IB outlets and get an handle on those
06:09 - elements from our storyboard up here in
06:13 - the upper right hand corner we can go
06:15 - into What's called the assistant editor
06:17 - this button with looks like two circles
06:19 - that are intersecting with each other so
06:23 - let me click that and what's going to
06:25 - happen sometimes and in my case here uh
06:29 - we're looking at two panes of code it's
06:32 - going to turn your editor into a left
06:34 - side and a right side what we want to do
06:36 - is click the storyboard from our file
06:39 - Navigator and then you're going to see
06:41 - the storyboard on your left and you're
06:42 - going to see the code on the right one
06:45 - word of warning if you see manual up
06:48 - here what you want to do is just click
06:51 - on that and then go down to automatic
06:54 - and then choose view controller and that
06:56 - is going to just uh grab the right file
06:59 - for the view controller sorry for the
07:02 - view that you're looking at in the
07:03 - storyboard now I'm going to make some
07:05 - space because I can't really um get a
07:09 - good view of the storyboard and the code
07:10 - editor which is what we're going to want
07:12 - to do so I'm going to go into the upper
07:15 - right I'm going to hide the Navigator
07:17 - I'm going to hide the inspector or the
07:20 - utilities pane on the right hand side
07:22 - and I'm just going to scroll my view
07:25 - into view and then now I'm going to show
07:27 - you that creating IB properties is
07:30 - actually really easy what you what
07:34 - you're going to want to do is hold down
07:35 - control on your keyboard and then just
07:39 - click on the element that you want to
07:41 - create an IB outlet for and then when
07:44 - you're dragging as you're holding down
07:47 - uh control on your keyboard you're going
07:48 - to see this blue line and you're going
07:50 - to drag it over here on the right hand
07:53 - side and you're going to see a little
07:54 - message pop up insert Outlet or outlet
07:57 - collection and then just let go and
07:59 - you're going to get this little popup
08:01 - menu here so make sure that connection
08:04 - says outlet and for the name uh I was
08:07 - dragging it from the right hand uh image
08:10 - there so I'm just going to call this
08:13 - right image view the type is going to be
08:16 - image View and we're going to leave the
08:17 - storage as weak for now now this is
08:20 - going to if you pop that open it's going
08:22 - to say strong or weak and by default
08:24 - it's going to be weak now in the future
08:26 - we're going to talk about memory
08:28 - management and that that's when it's
08:30 - going to be clear why we're going to
08:32 - have weak but for now leave it as is and
08:34 - we're going to click this button connect
08:37 - what it's going to do is create this
08:39 - line of code for us IB Outlet week VAR
08:43 - Right image View and then you can see
08:46 - the data type followed by this
08:48 - exclamation mark now we haven't talked
08:50 - about optionals yet but what this
08:53 - exclamation mark specifies is that this
08:56 - property will have a value in it because
08:59 - as soon as the view has loaded and this
09:01 - object is created it's going to be
09:03 - assigned into this property right here
09:07 - now if you can't get that control click
09:10 - and drag method to work just for some
09:13 - reason you can also just type it out so
09:16 - let me show you an example of that so
09:19 - just follow that line type out IB
09:22 - Outlet weak VAR and this time I'm going
09:25 - to type left image view you UI image
09:30 - view I'm going to write that at this
09:33 - point what we're going to do is go into
09:36 - our storyboard we're going to right
09:37 - click on this image view it's going to
09:39 - pop up a little menu and underneath new
09:42 - referencing Outlet just click and drag
09:45 - that Circle you can left click it and
09:48 - drag it up to this yellow circle up here
09:50 - or you can drag it up to the view
09:52 - controller line in your document outline
09:55 - if you let go it's going to show you all
09:57 - of the properties or the the IB Outlet
09:59 - properties that you can connect this
10:01 - image view to you don't want to connect
10:04 - it to the right image view because the
10:06 - other elements already connected to that
10:09 - uh make sure you connect it to the left
10:11 - image view now if you accidentally do it
10:14 - I'm going to show you how you can
10:15 - correct it because X code is not going
10:17 - to stop you from doing that if you want
10:20 - uh so again make sure you're uh
10:23 - assigning this new element to the new
10:25 - IBL property that you just did um just
10:29 - as a way to show you guys something uh
10:32 - that's incorrect I'm going to choose
10:34 - Right image property so right now that
10:38 - you can see that connection has happened
10:40 - and right now both of these elements are
10:43 - connected to Right image view now that's
10:46 - going to cause problems for us how we're
10:48 - going to fix that is we're going to
10:50 - rightclick on that image view again and
10:53 - we're just going to uh break that
10:56 - connection it's going to show you which
10:58 - property it's it's connected to so click
11:00 - X to break it and then let's just repeat
11:04 - that and this time I'm going to choose
11:06 - left image
11:08 - view so you can see now it's connected
11:10 - to that property now another thing that
11:13 - uh beginners often stumble on is
11:15 - sometimes when they type out the IB
11:17 - Outlet property they accidentally make a
11:20 - typo and all they do is they get rid of
11:23 - the property like that and when you run
11:26 - your app at this point it's actually
11:27 - going to crash because you've deleted
11:29 - this line of code that specifies the IB
11:32 - outet property but the element in your
11:34 - storyboard actually is still connected
11:36 - to it see if I rightclick that image
11:38 - view it's still connected to left image
11:40 - view um but it no longer exists in our
11:43 - code so that's going to cause a crash uh
11:46 - and what how you're going to fix that is
11:48 - again just right click on the element
11:50 - you're going to click X to break it off
11:53 - okay so I'm going to just hit undo now
11:56 - and so I've got the property back um so
11:59 - far I've connected these two images
12:01 - we're going to connect some more
12:02 - elements okay uh let's connect the um
12:08 - the label here sometimes it gets hard to
12:10 - click because you've got you know a
12:12 - whole bunch of different elements
12:14 - stacked on top of each other you can
12:16 - even do it from here hold down control
12:20 - and then just drag a line from that
12:22 - label this is the score label cuz we're
12:25 - going to want to update that score
12:27 - label I'm going to call this the
12:30 - left score
12:33 - label and then I'm going to do that with
12:35 - this one here as well remember both ways
12:38 - of creating
12:40 - Outlets uh WR score
12:45 - label and just like that you've exposed
12:48 - these four elements to the view
12:50 - controller so whenever you need to
12:53 - manipulate any of these four elements
12:55 - all you need to do is specify them by
12:57 - name like this and and you're going to
12:59 - have full access to manipulate any of
13:02 - the properties for that element and
13:04 - we're going to do that in the next
13:06 - lesson thanks for watching and I'll see
13:08 - you guys in the next lesson bye for
13:19 - now