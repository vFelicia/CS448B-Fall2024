00:00 - So the next thing we want to do is find 
what die image we should show
00:04 - which is the variable that is passed 
in, num.
00:08 - If you look in our project 
navigator, at the image we have,
00:13 - they're all named 
dice 1, 2, 3, 4, 5, 6. 
00:17 - And so what we're going to pass 
into showDie is a number from 1 to 6.
00:24 - And we're going to construct the 
file name first before assigning it to
00:28 - the UIImageView.
00:48 - So what stringWithFormat does is 
it's going to take num
00:53 - and inject it where this %d is.
00:57 - So it's actually going to be 
dice1.png, dice2.png whatever
01:02 - is passed into num and that 
corresponds to our files here.
01:08 - Now that we've constructed our filename, 
let's pass it into our imageview.
01:16 - immediate advice that's fine
01:19 - Our UIImageView has an image property 
and it has an image property. 
01:25 - We're going to create a UIImage 
01:29 - with the imageNamed method 
01:31 - and were going to pass in the filename.
01:39 - So that's all there is to it.
01:42 - If the UIImageView is not declared,
01:45 - its going to create an instance of it
01:47 - with height and width 90 x 90,
01:50 - at 0, 0 x and y coordinates.
01:53 - It's going to add the UIImageView 
to the die view.
01:57 - It's going to construct the 
filename and finally
02:00 - create a UIImage with that filename.
02:04 - Well its going to grab
02:06 - that image with the file name and 
assign it to our image view.
02:12 - Let's go back to our interface.
02:19 - Let's change this side to our 
controller.
02:22 - What we want to do
02:23 - here in our roll button handler is
02:26 - essentially assign this roll number
02:31 - to the method that we just created 
for our die view.
02:34 - But we creeted these two instances 
of die view in our 
02:39 - interface, how do we reference those 
instances from our controller?
02:46 - And how you do that is, 
02:49 - you can create a property
02:51 - in our controller
02:53 - simply by, again holding down CTRL 
like we did with our button 
03:00 - and then dragging this guy over to the 
interface. 
03:04 - And that's going to create a property 
and i'm going to call this, 
03:08 - secondDie.
03:18 - And i'm going to do it with this one as well.
03:21 - Hold down CTRL and drag it over.
03:25 - and this is the first die.
03:31 - Now in our controller, it doesnt recognize a 
class called DieView because it doesnt 
03:36 - know about it. Again, we have to import it.
03:46 - Save it,
03:48 - and now if I go back to the 
implementation file, i can refer to 
03:52 - that. I can go first..
03:58 - what did we call it? 
04:00 - oh, i have to use the self keyword.
04:08 - So now in our rollButtonClicked handler, 
we can refer to the two dieviews which 
04:12 - we created in our interface here. 
04:15 - So because they're properties, 
04:18 - self.firstDie.
04:21 - The method that we created here was 
04:24 - showDie, and we pass in a number.
04:30 - So let's pass in roll.
04:35 - Now let's show the same number 
in our second die.
04:49 - Save that.
04:51 - There's one modification that we should 
do here. I just realized that
04:56 - everytime we click the roll button, 
04:58 - this handler is going to get called and 
it's going to create a new instance of
05:01 - the model. We don't need to 
create a new instance of the model 
05:05 - every single time.
05:07 - So what im going to do
05:09 - is go to the header file
05:12 - and create a property
05:13 - for our model, but however, 
we're going to need
05:22 - the import statement. We're going to 
move it from the implementation file to
05:35 - the header file and it doesn't need 
to be an IBOutlet because
05:38 - it's not connected to anything in 
05:40 - the interface.
05:42 - Thats what the IBOutlet refers to.
05:49 - I'm going to call it model from here.
05:52 - And the reason why i moved the import 
statement for the diceDataController 
05:55 - into the header file
05:57 - is because the implementation file
06:00 - already refers to the header file
06:03 - and so, the header file has those
imports which
06:07 - i can still 
06:09 - refer to the class here.
06:11 - So instead of declaring a new 
instance of the model, 
06:14 - what i'm going to do is... 
06:18 - let me erase this line, 
06:21 - and... in here, in viewDidLoad. 
06:27 - So i explain what all these events 
are in my 
06:31 - blog post in my blog, but 
06:33 - essentially viewDidLoad will happen once 
06:36 - when this controller gets loaded into 
memory. What i'm going to do here is
06:42 - assign our model to be a new instance of
06:50 - diceDataController.
06:57 - And in here, 
07:01 - i can use our property.
07:05 - So lets run our application and see what 
happens. You can click the 
07:09 - Run button
07:10 - up here in the upper left hand corner.
07:15 - There you go.
07:17 - Essentially what's happening here is 
when you click Roll, 
07:19 - is its asking our model 
07:21 - to give us a
07:23 - dice roll number 
07:25 - and then we're passing that number into 
the showDie method, which we wrote, 
07:31 - of these two dieViews
07:33 - which we declared in Interface Builder 
here.
07:37 - Because episode 5 was quite long, i 
split it up into 4 parts so it's 
07:42 - easier to digest.
07:43 - Click the link in the description to 
go to the next part or click this 
07:47 - annotation to proceed.
07:49 - Alright, i'll see you in the next part.