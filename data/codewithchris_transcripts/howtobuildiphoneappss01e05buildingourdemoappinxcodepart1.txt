00:00 - Hey everyone, welcome to episode 5 of how 
to build iPhone apps and in this
00:04 - episode we're going to start building
our demo application
00:08 - What i would suggest before viewing this video,
00:12 - is going on to my website: 
codewithchris.com,
00:15 - Click this link on the side, How To 
Make iPhone Apps With No Programming
00:19 - Experience and read the first
two posts
00:25 - to get an introduction to Objective-C. 
00:29 - So, after this demo series, i'm going to start 
creating videos to teach you how to
00:34 - learn Objective-C
00:36 - but for now, i found it easier 
just to write everything down.
00:41 - So go ahead and read these two posts 
to get an understanding
00:45 - if you get lost while we go through this video.
00:48 - Another post that would be 
helpful would be #4
00:54 - An XCode 4 Tutorial For Beginners.
00:57 - And this post I wrote to describe all 
the different areas of XCode and all
01:02 - of the different features
01:04 - and stuff like that.
01:05 - So as I'm going through XCode in this video, 
if you get lost, i would suggest
01:10 - going on my website and reading 
these three posts
01:13 - and then revisiting this video.
01:16 - OK, so we're going to dive right in here.
01:18 - In the last video, we described
01:20 - how these files on the left hand side here 
pertain to the MVC pattern and we said
01:26 - that the AppDelegate is the entry point 
to the application. By default, XCode creates
01:32 - a controller class for you, 
it creates a view for you,
01:37 - but it doesn't create a model, so we're 
going to start with that.
01:41 - We're going to create our model.
01:44 - Right click in the project navigator 
and click New File.
01:49 - You can select a couple
different things here but we want to
01:52 - create an Objective-C class 
01:54 - and we're going to call it 
01:56 - DiceDataController.
01:59 - Make sure it's a subclass of NSObject.
02:04 - And I'm just going to save it to the root.
Normally for a larger project, I might
02:09 - separate all the files into different 
folders to organize it but we
02:13 - won't have many files and this is a short 
demo, so i'm going to leave everything in the 
02:17 - root.
02:18 - So what it created for me is
02:21 - two files for the DiceDataController 
class
02:25 - and if you guys read the Objective-C primer 
on my site, you'll understand what the
02:30 - .h and .m means but if you haven't yet
02:32 - the .h file is essentially
02:35 - the interface file, so it describes 
how other classes can interact
02:40 - with this class.
02:41 - You declare all of your properties
and methods in here
02:46 - and in the .m file, the implementation 
file, you actually write 
02:50 - the code for your methods.
02:52 - So we're going to start
02:54 - in the .h file
02:58 - and we're going to declare a private 
method. So that minus sign denotes a
03:03 - private method
03:04 - We're going to have it return an integer, 
03:09 - and we're going to call it getDiceRoll.
03:16 - I'm going to copy the method signature
03:19 - and go over to my DiceDataController.m,
03:28 - so my implementation file and i'm going 
to implement that method in here.
03:35 - And if you don't have this dual 
view that i have here,
03:38 - you can go to this little icon in 
the upper right corner called the 
03:45 - Assistant Editor
03:47 - and this view is helpful because when 
you're viewing a class, it's going to show you
03:50 - both the header and implementation file 
so you don't have to jump back and forth.
03:56 - If you were only using a single view, 
you'd have to toggle between the two files.
04:02 - So if you have a big screen or big 
monitor, you can use the Assistent Editor. 
04:07 - So let's go back to getDiceRoll.
04:11 - So what we want to do in here
04:13 - is return a number from 1 to 6. First 
we're going to declare an integer
04:18 - called roll
04:19 - and we're going to initialize 
that with a random number.
04:28 - So this function will give me a 
random integer and i'm going
04:32 - mod that by 6. Essentially
04:34 - that's going to give me
04:36 - 0 to 5 and I'm going to add 1
04:40 - to give me 1 to 6 for our roll.
04:45 - And then I'm going to return that.
04:55 - So its a simple model class that 
we've created, but it
04:59 - does its job.
05:00 - Remember that the model class 
is responsible
05:04 - for handling, organizing, validating 
the data.
05:07 - And so that is exactly what this class
is going to do, it's going to give us
05:10 - the data to power the views.
05:16 - So now lets work on the 
interface.
05:20 - So click ViewController.xib.
05:24 - Switch to single view here.
05:28 - And what we want to start off doing 
is adding our background.
05:34 - So in the lower right hand corner here, 
this is called the library,
05:40 - you can type in, if you know what 
you're looking for,
05:44 - you can type it in here and
05:46 - it just displays all the UI elements
that you can add onto your view.
05:50 - So we want to add the UIImageView 
which
05:55 - displays an image for us. 
05:58 - Just like that.
06:00 - As you can see, you can specify an 
image in there but i dont have any
06:03 - images in my project so
06:05 - let's go ahead and add them.
06:07 - First i'm going to create a group
06:09 - in our project called Resources.
06:14 - And from the file system im going to drag 
all these images that i need into XCode.
06:20 - And its going to give you some options,
06:22 - if you want to copy it into
06:25 - the projects folder, if i need to.
06:28 - So lets look at some of the 
images i've got
06:31 - numbers 1 to 6
06:33 - and i've got the background.
So this is what i wanted to add
06:37 - to the imageview that we created.
06:40 - So image view,
06:42 - select it from here,
06:48 - now we've got our felt image.
06:52 - So let's add a label next.
06:54 - Another class we need called UILabel
06:57 - which let's us put some text on the view. 
07:07 - Right here in the attributes pane, 
i'm going to specify
07:11 - that the font color should be white 
07:14 - and it should say Click to Roll 
and it should be Justified.
07:24 - Next thing we want to do is to add a button.
07:27 - So again, we have a button class called UIButton. 
07:35 - Add that. 
07:41 - Change the text on the button to Roll.
07:52 - OK, so we've got the startings 
of our interface. 
07:58 - Actually we want to create one more label 
08:01 - for the sum of the dice roll.
So i'm going to drag it
08:05 - from the library
change the font color to white again, 
08:12 - empty out the text.
08:20 - You can also label your elements here in 
case you have a lot and it gets confusing, 
08:25 - so i'm going to name this sumLabel.
08:31 - Because episode 5 was quite long, i split 
it up into 4 parts so it's
08:36 - easier to digest
08:38 - Click the link in the description to 
go to the next part or click this
08:41 - annotation to proceed.
08:43 - Alright, i'll see you in the next part.