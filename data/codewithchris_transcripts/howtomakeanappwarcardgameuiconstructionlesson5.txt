00:05 - hello and welcome in this lesson we're going 
to be building the war card game user interface  
00:10 - actually on second thought i'm going to have 
you try it first because i think you can do it  
00:14 - come on you give it an honest try and then 
we'll go through the solution together  
00:19 - but before you attempt this challenge make 
sure you've gone through lessons one to four  
00:23 - especially if you're brand new to xcode swift 
ui and app development those lessons will give  
00:29 - you the necessary skills for you to complete 
this challenge now before we start i do have  
00:33 - one request hit that thumbs up button below for 
some extra good luck all right let's get started
00:42 - all right so we're going gonna start with an xcode 
project launch xcode and let's create a brand new  
00:47 - xcode project we're going to choose app under ios 
and you can name this anything you want but i am  
00:54 - going to call this war challenge because that's 
what it is and it's a challenge that i'm confident  
00:59 - you can do interface is swift ui lifecycle is 
swift ui app and language is swift leave the  
01:06 - rest unchecked and let's save it somewhere 
so i'm going to just save it on my desktop  
01:12 - all right here's our brand new xcode project let's 
go to the asset library first because we're going  
01:17 - to add all of the image assets that we need for 
this app if you go into the course resources  
01:23 - folder under this lesson specifically you're going 
to find a zip file with all of the image assets so  
01:30 - go ahead and unzip that and then let's drag all of 
these assets into the asset library now you should  
01:39 - have the card back the background for the entire 
app and then you should have cards two to fourteen  
01:45 - and no you're not missing card number one the ace 
is card 14 and the reason i numbered them this way  
01:53 - is because we're going to use this number at the 
end of the card names here to represent the value  
02:00 - and we're going to compare this value to see which 
card trumps the other and then we're going gonna  
02:07 - have a deal button image and a logo image now just 
in case i didn't mention it before we have three  
02:13 - different sizes for each image because there are 
different screen resolutions for ios devices so  
02:20 - all of the newer devices have a super retina 
display and so they're using the 3x ones and  
02:26 - i don't think they actually make devices that 
use the one x image asset anymore but this app  
02:34 - was from a long time ago and we've rebuilt it 
many different times so we still have all three  
02:40 - now let me show you the finished user interface 
and this is the end result that you're going to  
02:46 - try to achieve yourself so this is what it looks 
like don't pay too much attention to the spacing  
02:52 - as long as you've got everything generally 
in the right place um i think that's great  
02:58 - another thing to mention is that this is supposed 
to be a button but since we haven't gone through  
03:03 - buttons yet feel free to use an image element 
for that and that will be perfect for when we  
03:10 - do transition to using buttons and i can show 
you how to change that image element to a button  
03:15 - uh one other thing i have to mention 
to you is the concept of the safe  
03:19 - area now the safe area is this region that 
starts about right here under the notch  
03:27 - and it ends right here above this 
little handlebar and in some cases  
03:33 - there are actually margins on the left and right 
side as well and anything within this region is  
03:42 - in the safe area now this area is guaranteed not 
to be obstructed anything outside of the safe area  
03:50 - so anything in this corner or this corner could be 
obstructed as you can see by icons or by the time  
03:56 - and obviously there's this handlebar here 
that could be blocking things as well  
04:01 - if you want a full screen background like 
this green background that we have here  
04:06 - you're going to have to ignore 
the safe area because by default  
04:12 - when you add elements onto the view it 
will try to stay within the safe area  
04:16 - so there is a modifier that i haven't shown you 
yet it's called ignore safe area that you can  
04:21 - apply to an image that will allow it to stretch 
beyond the safe area so that it reaches the edges  
04:28 - and that's probably the only other piece of 
missing information you need other than that  
04:34 - you've learned about stacks you've learned about 
image and text elements everything you could need  
04:40 - to build this user interface so go ahead pause 
this video and give it a try yourself and then  
04:45 - afterwards we will come back together and 
i will walk you through how to build this
04:59 - so welcome back how did you do were 
you able to build this user interface  
05:03 - congratulations if you were able to build 
this or something that resembles this  
05:08 - and if you got stuck or you weren't able to don't 
worry because we're gonna go through it now and  
05:12 - oftentimes i find that if you try it yourself 
and get stuck and then later on find the solution  
05:18 - those are oftentimes the best learning experiences 
all right let's go through this together now now  
05:24 - before we dive in and start building this 
user interface i want to take a moment to  
05:29 - sort of break down what elements that i can see 
here so first of all i can see that we will need  
05:34 - a zed stack because we have an image behind all 
of these elements and so a z stack is going to  
05:42 - allow us to position elements on top of each other 
next we have a v stack where elements are stacked  
05:48 - on top of each other vertically so you can see a 
v stack running through this entire user interface  
05:55 - top to bottom now some of the elements in this v 
stack will actually be contained within an h stack  
06:03 - like these two cards side by side for instance and 
this element down here is going to be an h stack  
06:13 - of two v stacks so this is a v stack containing 
the two text elements this is a v stack containing  
06:19 - the two elements and then you encapsulate them 
in an h stack so that's the breakdown that i see  
06:25 - and now we're going to jump into our 
contentview.swift and we'll build it out  
06:31 - all right so here i'm looking 
at the contentview.com  
06:34 - the first thing i'm going to do is to change 
this simulator to iphone 11 and let's hit resume  
06:41 - and in a few seconds time might be longer we'll 
see a preview here perfect now let's change this  
06:50 - default text element get rid of that let's put 
a z stack there open up a pair of curly brackets  
06:59 - now what's sitting behind all of 
those elements is an image right and  
07:06 - the image that we have is called background notice 
that it doesn't reach all the way to the top now  
07:13 - it does overlap that safe area a bit i said the 
safe area was under the notch right here so you  
07:20 - do see that it overflows but doesn't quite really 
go all the way there so we can add a modifier  
07:27 - called ignores safe area when you do 
that it's just going to cover everything  
07:34 - so okay so what's going to be on top of this 
background well like i said before we're going  
07:39 - to have a vertical stack containing all of those 
elements the first one being the logo and then  
07:45 - we're gonna have it an h stack with two cards and 
then an image element representing the deal button  
07:54 - and then after that we're going to have the score 
vertical stacks in a horizontal stack so let me  
08:01 - let me type this out so it makes a little more 
sense let's start with the logo at the top  
08:06 - we're going to have an image and our image 
asset name is logo so you can see it just  
08:12 - um just appears at the right size there and 
that's because our image asset is that size  
08:18 - okay now let's put an h stack in here  
08:23 - and inside here we're going to put two more image 
elements we're going to put the let's put card two
08:32 - and then card three so we have two cards 
in an h stack and then after that we're  
08:39 - going to put another image element and 
this is going to be the deal button
08:46 - now comes the score labels so it's going to be an  
08:50 - h stack but inside of the h stack 
we actually have two v stacks
08:58 - right each v stack contains two text 
elements so we're going to have player  
09:08 - and we're going to have the actual score and 
then for this one we're going to have cpu  
09:17 - and we're going to have 
the actual score of the cpu  
09:21 - so we basically have all of our elements 
laid out now let's add some spacing to them  
09:29 - so to do that we can use spacers so let's start 
by adding a spacer right above right above the  
09:41 - h stack of the two cards below the logo image 
so i'm going to put a spacer element right there  
09:49 - and what you learned about spacer elements 
right it takes up all of the available space  
09:54 - however if you have multiple spacer elements 
in the same container it's going to evenly  
10:00 - divide that space between the two spacers so i'm 
going to put another spacer right below the cards
10:10 - so now you can see that there are two 
equal amount of spaces i'm going to put  
10:15 - another spacer below the deal button or 
image for now and then i'm going to put  
10:24 - a spacer below the score labels so you got to make 
sure that you don't put it in the wrong place here  
10:32 - we want to put it below this h stack and if 
you click this ending bracket you can see that  
10:38 - xcode briefly lights up the beginning bracket 
so you can verify that that's where you want it
10:48 - all right and the last thing to do is put a spacer 
element above that logo so that's right here
10:56 - now from a vertical point of view it's all spaced 
out nicely for this h stack with the two cards  
11:05 - why don't we put some spacers in there so let's 
start by putting a spacer in between the two cards  
11:12 - and then a spacer before all the 
cards and the spacer after the cards  
11:20 - we're going to do the same thing 
with the text labels down here  
11:25 - in this h stack we're going to put 
a spacer in between the two v stacks  
11:31 - and then we're going to put a spacer 
before it and the spacer after it
11:39 - all right and now the last thing to 
do is just to change the font colors  
11:44 - of these text elements and also to 
change their font weights and font sizes  
11:50 - and maybe add a little bit of space in between 
the the score and the label okay so let's click  
11:58 - on this text element and take a look at what we 
could do so if you look in the inspector panel for  
12:04 - the font you can choose one of these predefined 
font sizes uh for this one let's choose headline  
12:14 - and you can see it it gets a little bolder 
there let's change this to white and we're  
12:21 - going to do the same thing for the cpu 
label we're going to change it to headline  
12:26 - we're going to change the color to white then for 
the actual score we're going to change the font to  
12:33 - let's say sub headline and we're going 
to change the color to white as well
12:40 - and for that score label 
we're going to change it to  
12:44 - sub headline and we're going to change it to 
white as well alright and if we wanted to make it
12:55 - actually not i think in in the original uh user 
interface i had it as large title so i'm going  
13:03 - to change it to that so i'm going to change 
the zero from sub headline to large title  
13:10 - now in order to add some padding in 
between the label and the score here  
13:17 - um what you can do is choose the 
label let's start with the player here  
13:24 - and let's click on just this bottom padding so 
enable that and then you can change that number  
13:31 - to let's say 20. you're going to see that 
increase and that looks like a little bit  
13:38 - too much so maybe we'll stick with 10. we'll 
do the same thing with cpu here we'll click  
13:45 - just the bottom and then we'll add 10. you can see 
the corresponding code here it's adding padding  
13:54 - but it's specifying only for the bottom edge and 
at 10 points and this is a good practice anytime  
14:01 - you modify something visually adding a modifier 
or changing something in the inspector panel here  
14:09 - it's a good practice to take a look at what 
has changed on the code side just so you can  
14:16 - remember over time the more you see it the 
more you remember that hey if i wanted to  
14:22 - change it to a headline style font i would just 
have to add a dot font modifier and pass in a dot  
14:28 - headline option same thing for the foreground 
color for this text element dot foreground  
14:34 - color color dot white you don't need to try 
to memorize it but just pay attention to it  
14:41 - and over time you're just going to remember and 
typing it out will end up being faster than having  
14:47 - to visually click around and configure things 
through the inspector panel or the preview canvas  
14:53 - alright last thing to do make sure 
you save the project and you're done  
14:59 - so in this lesson you built the ui for the war 
card game in order to respond to user interaction  
15:05 - and to also programmatically change the card 
images we're going to have to learn some swift  
15:10 - programming basics so in the next four lessons 
you're going to be introduced to coding basics  
15:15 - with swift now if this is your first time learning 
to code take it slowly and don't try to memorize  
15:20 - any of the keywords instead a better way is 
just to do all the quizzes and challenges at  
15:26 - the end of each lesson and to make sure you 
have access to those visit codewithkris.com  
15:31 - create your code with chris account or log into 
your existing one and then enroll in the 14 day  
15:36 - beginner challenge and there you can access all 
the of the supplementary material after learning  
15:41 - those swift programming basics we're going to 
come back to this war card game ui and bring  
15:46 - it to life with code now finally if you like this 
video please give it a thumbs up and don't forget  
15:52 - to hit subscribe and turn on bell notifications 
because i wouldn't want you to miss those upcoming  
15:57 - swift programming tutorials alright thanks for 
watching and i'll see you in the next lesson