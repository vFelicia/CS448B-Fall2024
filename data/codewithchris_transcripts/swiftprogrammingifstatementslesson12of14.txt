00:05 - hello and welcome in this lesson we're going to 
talk about a swift construct that is going to  
00:09 - allow you to write code that says if this then 
that now this easy to use but powerful syntax  
00:15 - is going to allow you to express logic at a 
whole new level but before we dive into that  
00:20 - just in case you're new around here hi my name 
is chris and welcome to code with chris the place  
00:24 - to be if you want to learn how to make an app fun 
fact i learned coding because of a mandatory class  
00:31 - in school how about you did you learn coding 
because of school or was it something else  
00:35 - let me know by leaving a quick comment below and 
on your way down there if you wouldn't mind please  
00:38 - give this video a quick thumbs up really helps me 
out so thank you for that all right with that said  
00:44 - let's dive right in all right so i've got a 
brand new playground here i want to show you how  
00:50 - if statements work before we apply it to our war 
card game project all i have here are a couple of  
00:56 - constants actually more than a couple i have a 
bunch of constants with different simple values  
01:01 - some integers strings and boolean values and i 
want to use these constants to demonstrate how  
01:08 - if statements work now again the if statement 
is very powerful because it allows you to run  
01:13 - code based on some conditions so i'm going to use 
these constants as my conditions let's first take  
01:20 - a look at a basic if statement declaration 
i'm going to type it out first and then i'll  
01:25 - explain each of the parts so you start with 
the if keyword and then you put some sort of  
01:29 - value or condition that evaluates to a 
boolean result so i'm just going to put e  
01:36 - and i'm going to open up a pair of curly brackets 
and inside here i will just print hello world  
01:45 - all right and that by itself is 
the most simple if statement as  
01:50 - you can see starts with the if keyword and 
then followed by either a boolean value  
01:56 - or some sort of code statement that evaluates to a 
boolean result followed by a set of curly brackets  
02:04 - and inside the curly brackets you put the code you 
want to run if the condition is true in this case  
02:10 - e is false right so it's not going to run that 
code because it doesn't evaluate to true however  
02:17 - if i changed this e and i was testing f 
instead then this code would run because  
02:25 - it evaluates to true now it can get pretty crazy 
because you can chain these things together so one  
02:33 - of the ways you can chain them together is using 
and and that's a double ampersand so let me just  
02:41 - indicate that there and how this works is if 
you'd write f double ampersand let's say g  
02:53 - then now you're testing both conditions and 
because you're using and both conditions have  
02:59 - to be true in order for this code to be run so in 
this case because f and g are both true right true  
03:06 - and true means true okay and another example is 
you can use or so these are double pipes the pipe  
03:18 - key a lot of beginners they're not sure how to 
press it on my mac keyboard this key is right  
03:23 - under the delete key and right above the return 
key and it's the character on the backslash key  
03:30 - so i have to hold down shift and i have to hit 
backslash to get that pipe so double pipes it  
03:36 - might be different on your keyboard this is 
ore okay when you use an or instead of an end  
03:42 - and you're chaining together two conditions like 
that you're saying if either condition one is true  
03:48 - or condition two is true then run this code so 
for instance f and g are both true so that'll  
03:56 - definitely run this code if i do f and e let's 
say e is false remember this code will still run  
04:04 - because at least one of the conditions is true 
now again this can get pretty crazy because i  
04:11 - can keep chaining it i can keep doing ors or i 
can even throw an end in there so let's do that  
04:18 - but this sort of gets confusing now because this 
can be read in a couple of different ways is it  
04:27 - e and g and then or f or is it f or e 
and g do you see what i'm saying so for  
04:38 - if if i put brackets around these this might make 
more sense if i do this that's saying if f is true  
04:46 - or e and g are true then run the code however you 
know i could also put brackets around it like this  
04:57 - if f or e is true and g is true then run the 
code so you can use brackets rounded brackets  
05:06 - to help you differentiate which conditions to 
evaluate first all right so far we've been using  
05:13 - just the boolean values but there's still more 
i want to show you with the syntax for an if  
05:18 - statement before we go on to looking at integers 
and strings so along with the if statement  
05:24 - you can also extend that if statement to test 
another condition because this is just testing  
05:31 - one condition right you can then following the 
closing curly bracket of the first code block  
05:40 - you write else if and then you write 
another condition so let's say else if e  
05:49 - then put that else if g and then do 
that so what's going to happen here  
05:56 - is it's going to test this condition if this 
evaluates to false it's going to then test the  
06:03 - next one it's going to cascade down if this is 
false then it's going to go down to the next one  
06:11 - at any point while it's checking these conditions 
if one of them is true then it's going to go into  
06:17 - that branch it's going to run that block 
of code and it's going to skip the rest  
06:22 - so this allows you to test in this case 
three different branches or pathways  
06:27 - and only choosing one the first one being true but 
keeping in mind that it checks these branches from  
06:34 - these conditions i mean from top to bottom 
so the first one that hits that is true  
06:39 - that's the branch that's going to go on down 
and finally there is also another feature of  
06:45 - if statements there can be a sort of catch-all 
branch if none of those conditions above are  
06:51 - true then you can have an else code block so this 
code block runs at the very end if none of the  
07:00 - conditions were true and it didn't execute any 
of those branches so this is sort of like your  
07:07 - catch-all or fail-safe and again these are all 
optional you can have one else if you can have  
07:15 - no else if you can not have any else's and you can 
just have an else so if this condition isn't true  
07:24 - then it's just gonna come down here right 
so this if statement is really powerful  
07:29 - the syntax is really simple to understand 
but it gives you so much flexibility in  
07:35 - which code statements to run depending on what is 
happening inside of your app okay so i'm going to  
07:43 - undo this so we can see sort of like 
a full-fledged if statement here  
07:48 - and i'm going to show you how maybe integers 
or strings can be evaluated as conditions  
07:56 - now in the example so far 
i've just been referencing  
08:00 - boolean values and that's simple but working 
with other data types like integers and strings  
08:05 - you might have to use those in an actual statement 
in order to evaluate to get a boolean result  
08:13 - right for example instead of g which is 
just a boolean value true let's use a  
08:22 - in order to evaluate a boolean result i 
have to use a comparison operator right so  
08:28 - i can use greater than if a is greater than 
zero right this can evaluate to a true or false  
08:37 - and aside from greater than here are another a 
couple other you can use so greater than less than  
08:43 - you have greater than or equal to and you have 
less than or equal to and then there's equality  
08:49 - with equality you don't use a single equal sign  
08:53 - because that's for assignment as you can see up 
here we are assigning these values into constants  
08:59 - to compare equality you use a double equal sign 
instead so i can say down here does a equal zero  
09:10 - and of course it doesn't so this statement 
here is going to evaluate to false  
09:14 - and because this is an end operator both of these 
conditions have to be true and because this one is  
09:23 - false already then it's not going to come into 
this branch anyways we can change these as well  
09:31 - so you know if b is less than 3 or 4 i mean and 
if c is equal to 10. so those are some examples  
09:41 - of comparison operators that evaluate to true or 
false now for strings you can also do that you can  
09:50 - you can evaluate d for example as a 
string and you can test if it equals hello  
09:56 - so that's one thing you can do with strings 
you can still use greater than or equal to  
10:00 - for example if we had let h equals world and 
we can say if d is greater than h so we can do  
10:12 - that in this case it's going to compare the h 
with the w and because h is not greater than w  
10:22 - because it comes before w then this is going 
to be false one more interesting thing i want  
10:28 - to show you is the use of the exclamation mark so 
this one it basically flips the boolean value so  
10:37 - if g was g is true right if i put 
the exclamation mark in front of it  
10:44 - it's basically going to flip the boolean value so 
g is true i have the exclamation mark it's going  
10:51 - to turn it into false so it's not going to run 
this you could put it in front of this for example  
10:58 - and uh a doesn't the a does not equal zero because 
a is one as you can see up there but having this  
11:06 - in front of it is going to flip that to true 
and then now that i think of it you can test  
11:12 - inequality as well so not equals so i can 
test if a is not equal to 0 which is true  
11:21 - but then because i have this exclamation mark 
in front of it it's going to flip it to false  
11:27 - so lots of flexibility here and this is just 
an example right so it doesn't have to be  
11:33 - this complicated now i want to go back to our war 
card game and use the if statement to determine  
11:39 - which card is larger and then increment 
either the player's score or the cpu score  
11:46 - all right so here i have the war card game project 
and if you take a look at this part here where  
11:51 - we were updating the score we're simply 
incrementing the cpu and player score with  
11:56 - each dealing of the button now that you've learned 
about if statements in the xcode playground i'm  
12:03 - sure it's very trivial for you to implement it so 
that you're comparing player rand versus cpurand  
12:11 - seeing which number is bigger to determine which 
score to update now because we labeled our assets  
12:17 - correctly 2 being the lowest an ace being the 
highest having a value of 14 it's very trivial  
12:26 - to compare you just compare that ending number 
right and essentially that is the random number  
12:32 - so if you think you can do this pause the video 
right now and try it out for yourself you'll  
12:37 - learn a lot i promise even if you give it a shot 
and you don't get it the lesson is going to stick  
12:43 - that much more so go ahead and pause the video 
try it out and then unpause it and watch me do it
12:48 - here
12:56 - all right so welcome back let's implement 
this if statement to see which card is  
13:02 - bigger so i'm going to start with if and 
i'm going to first test if the player's  
13:07 - number is bigger than the cpu's number right i'm 
going to use greater than if that is the case then  
13:15 - i am going to increment the player score otherwise 
i am just going to increment the cpu score  
13:26 - now i don't care about ties and that's why i'm 
not comparing equality between the two random  
13:31 - numbers but you could definitely do that in your 
version if you'd like actually there is a problem  
13:38 - with the way that i'm doing it here the cpu has 
an unfair advantage because in the case of a tie  
13:45 - the cpu does get the score right using this else 
statement so therefore i kind of do have to test  
13:52 - the other case so i'm going to test else 
if cpurand is greater than player rand
13:59 - then cpu score plus one otherwise 
if those two conditions are not true  
14:08 - then it's a tie and i don't want to do anything 
all right now let's try this out so i'm gonna  
14:13 - hit live preview again and we'll just do it 
right here in the canvas i'm going to hit deal  
14:18 - so 14 is definitely bigger than 5 so the player 
gets a score jack is definitely well that's a  
14:26 - that's an 11 it's greater than 3 four is greater 
than three so it looks to be working correctly
14:35 - congratulations the war card game is complete 
you've learned how to build user interfaces how  
14:41 - to code in swift and you've completed your first 
app think back on day one of this 14 day challenge  
14:48 - how did you feel back then were you nervous 
did you think you could do all of this  
14:53 - and now look how far you've come how do you feel 
about app development now now i've tried to make  
14:58 - this as easy as possible to understand and 
i hope you were able to gain some new skills  
15:03 - if there's one thing i could really use your 
help on though it's with user testimonials  
15:08 - you see i haven't been asking people and i 
don't have very many and it would help a lot  
15:13 - for people to hear from actual learners like 
yourself about how this challenge affected you  
15:18 - this would really help me grow my brand and in 
turn help many more people discover that they  
15:24 - too could learn how to code and make apps full 
transparency your testimonial might appear on my  
15:30 - website or on my social media so if that's okay 
with you simply visit codewithchris.com 14 day  
15:37 - and it'll bring you to a page where you can 
record your testimonial right from your browser  
15:41 - don't worry if you don't know what to say i have 
a question for you and you can just simply answer  
15:46 - it it won't take you more than two minutes thank 
you so much whether or not you can help me with  
15:50 - that i really appreciate you learning with 
me and having stuck through this challenge  
15:56 - now i know i'm making this sound like the end but 
really it's just the beginning of your app journey  
16:01 - in the next lesson i'll tell you what are 
the next steps and where to go from here  
16:05 - alright thank you so much for the testimonial 
and i'll see you in the next lesson