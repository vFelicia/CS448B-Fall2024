00:00 - Okay, so once again, i'm going to 
open up the assistent editor view.
00:05 - Its going to show me the controller
00:07 - for this view and if it doesn't 
i can use this jump bar to select
00:14 - the appropriate controller.
00:26 - so in order to make the controller 
to respond to
00:29 - touch events on the button,
00:31 - i have to create a handler in the 
controller.
00:35 - And how we do that is you hold 
down CTRL,
00:39 - and you click the button
00:41 - you want to add the handler 
for and you drag,
00:44 - while holding down CTRL,
00:46 - you drag it to the implementation 
declaration for the controller.
00:56 - Let go, and you can give it a name. 
01:00 - So i'm going to call it rollButtonClicked
01:06 - and the event you want to respond to, 
see you can
01:09 - respond to all sorts of events. 
But touchUpInside
01:12 - is the one where the user taps 
the button
01:16 - and his thumb is still inside so 
that's the one we want, 
01:21 - and click Connect. It creates
01:24 - this method handler for us which
im going to cut and put down here.
01:33 - So what do we want to do now.
01:34 - When the roll button is clicked,
what we want to do is 
01:39 - get a dice number from our data 
controller. So lets create a new
01:44 - instance of our diceDataController.
01:48 - Before we can do that though, 
we have to
01:52 - important the header file for the
diceDataController
01:58 - because if you remember, the header 
file contains
02:01 - information about
02:03 - how we can interact with that class.
02:05 - Now if you look at the header file,
02:07 - it shows that there's one private 
method called getDiceRoll
02:11 - and that's the one we're going to use.
02:14 - So i'm going to go back to 
our rollButtonClicked handler
02:23 - and we just added the import statement for 
the diceDataController so now i can go
02:27 - ahead and create a new instance of it.
02:30 - I'll call it model.
02:39 - Create a new instance of our class and
02:42 - then create a variable to store the 
number that we create.
02:50 - See, there's the instance method 
that we had written.
02:56 - So this is going to call the getDiceRoll 
method of our model
03:01 - which will return a number from 1 to 6.
03:04 - And we're storing it in this integer 
called roll.
03:07 - So now that we have our die roll, 
03:10 - how do we get it back onto the screen?
03:12 - So in order to do that, we're missing
03:15 - another view that we have to create.
03:18 - So we're going to go back to the project
navigator. I'm going to right click, create
03:23 - a new file. And once again, 
create a class.
03:28 - I'm going to call it DieView.
03:32 - But this time its going to be a
subclass of UIView
03:36 - which is something that
03:38 - we can use to display stuff on 
the screen.
03:42 - I'm going to save it in the root.
03:46 - Ok, now you might be wondering,
03:49 - thinking back on our MVC pattern,
03:51 - we have our model that is diceDataController 
we have our controller, 
03:55 - which is the ViewController class right here 
and we have our view, ViewController.xib.
04:00 - So why are we creating another view?
04:02 - Well, views can actually be made up
04:06 - of multiple view together. 
So you can add a view
04:10 - into a view to create composite views 
so that's exactly what we're doing.
04:14 - We're creating a view for our die
04:16 - and we're going to add it to our 
interface here.
04:21 - Ok, lets go back to interface builder here.
04:27 - Down here, we're going to type
04:30 - UIView and drag this over and put that here.
04:38 - But size it the way that we want to.
04:42 - So i'll do 90 and 90 and put it into place.
04:47 - We're going to have another one
04:49 - so i'll drag another one onto here.
05:01 - Now remember when we created our DieView
05:03 - we subclassed UIView
05:06 - and now we're adding UIView elements 
onto our interface builder file. 
05:11 - So now what we want to do is 
specify that this UIView
05:16 - is actually an instance of DieView and 
how we do that is if you go back to the
05:22 - attributes on the right here.
05:26 - In this tab, you can
05:28 - change the class from UIView to DieView.
05:33 - And just like that,
05:35 - this guy is an instance of DieView.
05:38 - I'm going to do the same with 
the second one.
05:45 - And i dont want a white background 
so i'm going to
05:50 - this other tab,
05:52 - and change background from white 
color to clear color.
06:04 - Now going back to the DieView,
06:12 - i'm going to add a method in here,
06:15 - a private method, called showDie.
06:27 - Implement that method now.
06:30 - Actually we're going to have to 
change this because
06:35 - having a method called showDie,
06:39 - this view needs to know which die to 
show. Which die image
06:43 - from 1 to 6. So we're going to add
06:45 - a parameter that's passed in
06:48 - called "num".
06:57 - And its going to display
06:59 - an image representing the number. 
Remember we display images using the 
07:04 - UIImageView class.
07:06 - So we're going to create a property 
of this class.
07:16 - It's going to be UIImageView type
07:20 - and the property itself is going 
to called dieImage.
07:26 - So in showDie method,
07:32 - im going to check if
07:34 - our property, dieImage, 
is nil.
07:38 - I have to do self to reference 
the property. If it's
07:43 - nil, meaning if
07:45 - this variable is not referencing
07:49 - an instance of UIImageView yet, i'm 
going to create an instance of it.
07:55 - I'm going to assign it an instance of 
08:08 - UIImageView, allocate it.
08:13 - I'm going to specify where 
to create it.
08:17 - These are x, y coordinates followed
by the width and the height.
08:27 - There we go. And i'm going to 
place this imageview
08:56 - into this die view.
09:01 - So self refers to the die view itself.
09:07 - I'm going to add a subview and
09:10 - UIImageView IS a subclass of a UIView.
You can see there that 
09:15 - this method addSubview, expects a UIView.
09:18 - Well i can actually assign it our
09:21 - UIImageView. This effectively
09:23 - places the imageview into the dieview.
09:29 - This only happens if
09:31 - the property dieImage is nil, if 
it hasn't already done this before.
09:36 - Because episode 5 was quite long, i 
split it up into 4 parts so it's 
09:41 - easier to digest
09:43 - Click the link in the description to 
go to the next part or click this
09:47 - annotation to proceed.
09:48 - Alright, i'll see you in the next part.