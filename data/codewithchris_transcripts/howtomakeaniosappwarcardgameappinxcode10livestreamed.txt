00:00 - hmm
00:19 - hey guys okay let me hold on you guys
00:25 - see me so I hope you guys can also see
00:28 - my screen I'm starting a little bit
00:30 - early
00:31 - let me just minimize that starting a
00:33 - little bit early just so we can iron out
00:35 - any technical difficulties because last
00:38 - time it was pretty embarrassing I didn't
00:40 - have the software setup so you guys
00:42 - couldn't see my screen alright cool so
00:53 - in today's session I want to go through
00:55 - with you guys just setting up the Xcode
00:58 - work hard game project and Xcode 10 I
01:01 - mean and if you've gone through this
01:04 - again
01:04 - then it's gonna serve a bit as review
01:06 - but if this is new to you I think you're
01:08 - gonna learn a lot the hardest thing that
01:10 - we're probably gonna go through building
01:12 - this sort of app is mmm
01:15 - the content resistance priority and
01:20 - content hugging priorities if so if you
01:23 - kind of understand that already then
01:24 - just sit back and relax and this stuff
01:28 - will be pretty much review but I think
01:30 - we're gonna have time at the end of that
01:32 - to do like a Q&A session let me know if
01:36 - you guys can hear me by typing in the
01:39 - chat
01:46 - he fixed the screenshare yeah mr. yep
01:52 - I'm gonna build the whole thing it's
01:53 - actually not gonna take too long
01:55 - hey guys wow so many people already
01:58 - thanks for joining me and how many of
02:00 - you guys were actually here last week
02:02 - when you guys saw that I couldn't share
02:04 - my screen
02:05 - you guys who were here for that let me
02:07 - know and we're just gonna start we're
02:09 - gonna give another minute for people to
02:11 - join in and we're gonna gonna start
02:14 - sound is good you guys can see my screen
02:17 - we're ready to rock and also um when I
02:24 - tried to show my entire desktop I felt
02:26 - like it was hard to make out the actual
02:30 - file navigator and hard to see the
02:34 - screen so I actually zoomed in a little
02:35 - bit onto Xcode
02:37 - so let me know when I start building the
02:40 - app um how that is like should i zoom in
02:43 - more for next time and I'll take that
02:45 - into consideration so that I can adjust
02:47 - it because I want to make sure that you
02:48 - guys can see what I'm doing otherwise it
02:51 - would be pointless
02:54 - awesome Sergio and Robert I'm glad you
02:57 - guys are back I didn't I didn't lose
03:01 - your faith okay so we're gonna begin now
03:05 - it's one o'clock I want to make sure
03:06 - that I'm cognizant of your guys time so
03:10 - just a couple of words of introduction
03:14 - to begin with so welcome to the code
03:15 - with Chris livestream this is the second
03:17 - time I'm doing this and so if I'm a
03:19 - little bit nervous cut me a little bit
03:21 - of slack I think I'll get more
03:23 - comfortable with doing live streams as
03:25 - we go on and also Adrian is manning the
03:28 - chat so say hello to Adrian and to make
03:31 - his life easier make sure you guys if
03:33 - you have like a question type it all
03:36 - into the one message and send that don't
03:39 - break it up until like five messages and
03:41 - try not to spam the chat as well or else
03:43 - he's gonna have a really hard time yeah
03:47 - and the last thing is that if you guys
03:49 - aren't in the Facebook community yet you
03:52 - can go ahead and join that where they're
03:54 - supporting students were
03:55 - they're discussing different topics and
03:57 - stuff like that if you didn't know about
03:59 - it it's at facebook.com slash groups
04:01 - slash code with chris communty alright
04:06 - so we're gonna begin and if you have any
04:09 - questions I'll be checking the chat
04:10 - periodically and I will try to answer
04:14 - all the questions at the end depending
04:16 - on how much time we have all right so
04:19 - here I am in Xcode 10 we're gonna start
04:21 - a single view application and I'm just
04:26 - gonna title this war
04:29 - card game demo I'm just gonna save it to
04:36 - the desktop now this app does use some
04:40 - graphic assets some of them I created
04:42 - myself some of them that is particularly
04:45 - the playing cards I got off of someone
04:47 - else who released them for free I think
04:51 - they're not for free anymore
04:53 - but I'm still using them right now so if
04:58 - I get in trouble I'll change them but
05:00 - you can download the same assets from
05:03 - code with Chris comm slash lesson 4 and
05:06 - there's just a link to the zip file here
05:09 - under image assets so those are the
05:11 - image assets that I'm going to be using
05:13 - just in case you want to follow along or
05:14 - you want to do it yourself try it
05:17 - yourself so I've got that unzipped on my
05:21 - desktop right here so the first thing
05:25 - I'm going to do is I'm actually just
05:26 - gonna add all of these images into my
05:28 - asset library so we have them so let's
05:30 - jump into the asset library here if
05:33 - you're not sure this is the first time
05:35 - you're seeing this you're new to iOS app
05:38 - development this is where we keep all of
05:40 - our image assets that we're going to use
05:42 - in our app and you might notice that
05:44 - each asset actually has three different
05:46 - sizes because the iPhone has different
05:49 - resolutions depending on what device it
05:51 - is so recently I actually picked up the
05:54 - iPhone 10s max so I'm really happy about
05:58 - that because it was like four years
06:00 - since I've upgraded my phone I was using
06:02 - the iPhone 6 plus and that still uses
06:05 - the 3x graphics but
06:09 - I mean the phone now it's so fast I I
06:13 - didn't know what I was missing because I
06:14 - would like switch apps and then I'd have
06:16 - to wait like five seconds before it's
06:18 - switch but now it's like instant I don't
06:20 - know if you guys picked up the new
06:22 - devices or not but man they're getting
06:24 - way too expensive to buy every year and
06:26 - I certainly I didn't I waited four years
06:28 - before I
06:29 - I upgraded mine anyways that's just a
06:32 - tangent what we have right here we have
06:34 - the background image we have the back of
06:36 - the cards we have cards from - all the
06:40 - way to King and then ace so you'll
06:44 - notice that I number these cards a
06:47 - certain weight I name them CA Rd all in
06:50 - lowercase with the number that's because
06:54 - when we randomize these cards we're
06:55 - basically gonna generate a random number
06:58 - from to see so car two right here all
07:02 - the way to 14 so number from 2 to 14 and
07:06 - then I just append card to it and then
07:08 - we can load up this graphic asset that
07:10 - we have in the asset library we also
07:13 - have some buttons and a logo actually we
07:16 - have one button and one logo I think the
07:20 - interesting part especially if you've
07:22 - never done Iowa's app development before
07:25 - is going to be this part working in the
07:27 - storyboard and seeing all of these
07:29 - elements come together now I know some
07:32 - of you guys that are gonna ask this
07:33 - question and I talked about in the last
07:36 - stream but you can generate all of this
07:39 - UI stuff through code you don't have to
07:41 - use the storyboard but for people who
07:43 - are just starting out I feel like it's
07:46 - it's a lot more intuitive it's a lot
07:48 - less intimidating and to be able to see
07:51 - something just come together and
07:52 - visually like that gives beginners
07:55 - especially a lot of motivation to
07:57 - continue and feel like they can do this
07:59 - and feel like it's something that they
08:00 - can achieve so that's a lot of reason
08:03 - why I stick to using storyboards for all
08:06 - of my tutorials and demos because my
08:09 - target audience is more of on the
08:12 - beginner side I want to get the thing
08:14 - that gives me joy the things that the
08:16 - reason why I started doing this in the
08:18 - first place was introducing like non
08:21 - coders complete
08:22 - the people who didn't program into the
08:25 - world of programming and building apps
08:26 - and seeing like their face light up and
08:28 - seeing just their mind open up feeling
08:32 - like they can do this now and that gave
08:34 - me the most joy so that's that's where
08:36 - that's where I focus my teaching all
08:40 - right so where are we here the first
08:42 - thing we're going to do is add a UI
08:44 - image view into the the view here this
08:51 - is going to be our background image so
08:53 - we're gonna add some constraints if
08:55 - that's new to you these constraints are
08:57 - basically rules that tell the system how
09:01 - to position all of the elements you're
09:02 - laying out so as you're gonna see for
09:04 - this UI image view right we can set its
09:07 - property there's a drop down here we can
09:10 - set it to background but it's just gonna
09:11 - be this little image right so we need to
09:13 - add some rules to tell the system how
09:15 - wide it is how tall it is how to
09:18 - position it and that's done through
09:20 - constraints so all you need to do is
09:23 - click the element and then go down here
09:25 - there's a menu where you can specify new
09:28 - constraints we're gonna specify four
09:31 - constraints and we're basically
09:32 - specifying margins against the four
09:35 - sides at this point right here and there
09:38 - are a couple of options you can do here
09:41 - so constraint two margins will basically
09:44 - there are some set margins for text so
09:47 - let's say you're laying out a label or a
09:50 - textview or something like that there
09:52 - are by default our margins on the left
09:54 - and right sides so the text doesn't go
09:56 - all the way to the left or all the way
09:57 - to the right so if you want things to
10:00 - reach all the way pass the margins to
10:02 - the very edges of the screen you're
10:04 - gonna uncheck constrain to margins and
10:06 - furthermore because like the iPhone 10
10:10 - the new iPhones have a notch at the top
10:12 - and so there is something called a safe
10:16 - area where if you lay things out inside
10:18 - the safe area you can be guaranteed that
10:20 - it's not going to be blocked by the
10:21 - notch or blocked by any sort of elements
10:23 - like that if you want things to ignore
10:27 - that safe area then you have to make
10:29 - sure that you pull down these dropdowns
10:32 - here and by default they're set against
10:35 - the safe area we're going
10:36 - change them to the view to make sure
10:38 - that this background just goes edge to
10:42 - edge on all four sides of the screen
10:45 - that's why we're going to do that and
10:47 - I'm going to reset them to all zeros so
10:50 - we have a background like that and when
10:53 - you change the width and height of the
10:55 - image view what ends up happening also
10:57 - is that it stretches the image to fit
10:59 - and so you can change this property
11:01 - called the content mode so by default it
11:04 - scales the image but sometimes it gets
11:06 - stretched out you can't really tell with
11:08 - a green background but if you have like
11:11 - the card images or the logos you're
11:13 - gonna see that they're gonna be
11:14 - stretched so instead we're going to
11:15 - change it to aspect fill and that's just
11:18 - going to maintain the aspect ratio of
11:20 - the original image so it doesn't just
11:23 - get a little skewed alright so the next
11:27 - thing we're gonna do is we're gonna add
11:28 - a stack view we're gonna use a vertical
11:32 - stack view and a stack view is an
11:35 - element where you can put other elements
11:37 - inside and helps you order it there's
11:38 - like a horizontal stack view and a
11:40 - vertical stack view which just stacks
11:43 - things either horizontally like
11:44 - side-by-side or vertically on top of
11:47 - each other so in our UI here I don't I
11:50 - don't know if you've seen it but
11:52 - basically we have a logo at the top then
11:54 - we have two cards side-by-side then we
11:56 - have a button to deal the cards and then
11:59 - below the button we have to score
12:01 - counters side by side so we're going to
12:04 - use a series of stacked views to create
12:08 - this sort of layout and we're gonna fine
12:10 - tune it using the content hugging and
12:13 - content compression resistance
12:15 - priorities so first thing to do is to
12:19 - add that vertical stack view because
12:20 - this vertical stack view is going to
12:22 - contain all of the elements so I'm going
12:26 - to add that right here as well and
12:27 - because this stack view contains the
12:30 - elements and I don't want any of the
12:31 - elements to be blocked by like the notch
12:33 - or any other hardware element when I
12:36 - specify the constraints for this guy I'm
12:38 - going to leave it as constraint to the
12:41 - safe area and I'm actually going to
12:45 - specify
12:47 - I'm gonna specify all four for now but
12:50 - at the end when we try to make this work
12:52 - for landscape and portrait you're gonna
12:55 - see that maybe we should take away that
12:57 - bottom constraint because that ends up
12:59 - stretching it all the way to the bottom
13:00 - and it ends up spacing all the elements
13:03 - out a little too much and so we might
13:06 - end up removing this bottom constraint
13:08 - but I'm gonna leave it here for now so
13:12 - add 4 you can see it just starts
13:14 - clinging onto all four and just give me
13:17 - a second when I double check that you
13:20 - guys are still seeing what I'm doing
13:22 - it's one of my worst verses like I'm
13:25 - just talking and talking and talking and
13:27 - no one sees me or no one like my mic
13:29 - suddenly cuts out or the screen goes
13:31 - blank so we're all good all right we're
13:38 - gonna add the logo now so the logo is
13:39 - another image right so we're gonna add
13:41 - another uiimageview
13:43 - so let's go ahead and do that just gonna
13:47 - drag it in there and I'm gonna change
13:49 - the property for this image view to the
13:52 - logo now as you can see it's gonna get
13:54 - all stretched out and that's because the
13:56 - stack view tries to fill up all its
14:00 - space with the elements that it contains
14:03 - right now it only contains the logo and
14:06 - so it's trying to stretch it all out we
14:09 - can change a couple of the properties to
14:11 - address this so you can see here on this
14:14 - left-hand side this is called the
14:16 - document outline and it basically lays
14:18 - out shows you all of the elements that
14:21 - you have in your view but it doesn't in
14:25 - a way where you can understand which
14:27 - elements are in front of each other so
14:29 - this guy is the root view of the view
14:32 - controller this is basically what the
14:35 - user is going to see on the screen so
14:37 - anything that is close to the view is
14:39 - actually farther back so you can see we
14:42 - have the background here and then on top
14:45 - of the background is the stack view and
14:47 - then you can see how this logo image is
14:49 - like tucked into the stack view that
14:51 - means that the logo is inside the stack
14:53 - view I know it's a little
14:55 - counterintuitive because you think
14:58 - things in front should be at the
15:00 - but it's not so things that are closer
15:02 - to the user in front of everything else
15:04 - is actually closer to the bottom of this
15:07 - document outline just so you know okay
15:10 - so we're gonna add a couple of other
15:12 - elements in here we're gonna add oops
15:16 - we're gonna add a horizontal stack view
15:19 - this time because we're gonna add the
15:20 - two card images all right so I'm gonna
15:23 - just gonna drag this horizontal stack
15:24 - view in here so now the stack view has
15:29 - two elements inside it has two local and
15:31 - the horizontal stack view and it's
15:34 - trying to stretch it all out to fill up
15:36 - all of that space in the vertical stack
15:37 - view but how does the system know which
15:41 - element it should stretch out and which
15:43 - one you know it should give more space
15:45 - to because before when we just had the
15:47 - wore logo it was easy just stretch that
15:50 - guy out to fill up the space but now we
15:51 - have two elements so which one is it
15:53 - gonna stretch out so you can see here
15:56 - it's selected the horizontal stack view
15:58 - to stretch out we can actually fine-tune
16:01 - that and tell the system which elements
16:04 - should be compressed or stretched out if
16:06 - there's more space or not enough space
16:08 - and that's when those content hugging
16:10 - and content compression resistance
16:12 - priorities come into play which will
16:14 - fine-tune at the end okay so now what
16:17 - we've got here is a horizontal stack
16:19 - view right we're gonna add two image
16:21 - views into this horizontal stack view so
16:24 - that we can display two cards
16:26 - side-by-side so let's go ahead and do
16:28 - that all right so there's one image view
16:34 - and this is a second one if your UI is
16:39 - starting to get kind of messy you can
16:40 - also drag it directly into the document
16:42 - outline like this you just have to make
16:46 - sure that what we have here is the
16:48 - vertical stack view contains the logo
16:52 - which contain sorry can these the logo
16:55 - end the horizontal stack view and inside
16:57 - the horizontal stack we've got two image
17:00 - views like this so we're gonna set some
17:03 - properties on this horizontal image view
17:06 - so for the distribution we're going to
17:08 - fill equally that's gonna give equal
17:11 - space to both image views so
17:13 - can see that instantly makes them equal
17:16 - we're gonna add some spacing in between
17:18 - them let's say 30 and right now I'm just
17:21 - gonna put some card images in here just
17:25 - so we have something to see and
17:26 - something to look at
17:27 - but of course we're gonna be randomizing
17:30 - that at the end all right so what's next
17:34 - we have a uibutton
17:36 - this is the deal button so I'm going to
17:39 - add this element and I'm gonna drag it
17:41 - into the document view you just have to
17:43 - be careful because for example if I do
17:45 - that I've actually put the button inside
17:48 - the horizontal stack view now which I
17:50 - didn't walk sorry didn't want I want
17:53 - this button to be in the same level as
17:59 - the logo and the stack view and as you
18:02 - can see I've actually put the button
18:04 - outside of that vertical stack view so
18:05 - you just have to be very careful there
18:07 - there we go we've got the button inside
18:09 - now so that stack view contains to the
18:12 - logo you know the horizontal stack view
18:14 - and then this button and we're just
18:17 - gonna add that last stack view the
18:21 - horizontal stack view which contains the
18:23 - to score counters before we start
18:29 - adjusting things and trying to make
18:31 - things look good and so I've got that
18:33 - horizontal stack you in there and we've
18:36 - got a couple of labels now for the
18:38 - labels we actually have like a player
18:40 - label and then the score and then on the
18:43 - right-hand side we have like a CPU label
18:46 - and then the score underneath and so
18:49 - what we're gonna have to do is we're
18:53 - gonna have to add two vertical stack
18:55 - views into the horizontal stack view I
18:59 - know it's a little confusing at first
19:01 - but once you start doing it it's it's
19:05 - gonna be a lot easier to understand how
19:08 - to use stack views to build this guy up
19:10 - I'm gonna review what this looks like
19:13 - with you in just a second I'm just gonna
19:17 - add a couple of more stack views in here
19:20 - I'm probably
19:21 - gonna lose you here if you you've never
19:24 - done this before actually it's probably
19:34 - easier if I just add these elements
19:35 - first and then explain to you what's
19:37 - happening all right so let's we've got
19:40 - all of the elements on our screen I know
19:42 - it doesn't look like what it's supposed
19:43 - to but we're gonna fix it in a second
19:45 - but first let me review what this
19:48 - hierarchy looks like so we've got the
19:52 - vertical stack view right against the
19:54 - green background and inside the vertical
19:56 - stack view we have a logo we have a
19:59 - horizontal stack view which contains the
20:01 - two card images we have a button under
20:04 - that and then we have another horizontal
20:07 - stack view underneath that inside that
20:10 - horizontal stack view we have two
20:11 - vertical stack view side-by-side and in
20:14 - each of these vertical stack views we
20:16 - have two labels so this is going to have
20:18 - the effect where the labels are on top
20:20 - of each other so now we're going to
20:22 - customize some of these elements before
20:24 - we position them so let's say for the
20:27 - button for example we can change the
20:30 - image of the button to the deal button
20:34 - image and then we can just erase the
20:36 - text like that so that's going to give
20:38 - us our graphic there and then for these
20:42 - labels we can actually we can
20:44 - multi-select them you just select a few
20:47 - of them like this and then we're gonna
20:51 - change all of them to have a white color
20:54 - and we're gonna maybe give it a slightly
20:58 - bigger font if we wanted to and for
21:01 - these these two in particular up here
21:05 - these let me see if I can select that
21:07 - again we're gonna make these bold
21:13 - let's go to custom let's change it to a
21:17 - bold and let's change the text in them
21:21 - so this one let's just say this is the
21:23 - player label this guy is the CPU label
21:28 - and then we'll have this is zero and
21:32 - then this is zero okay so now let's
21:37 - start positioning some of this stuff
21:38 - because this doesn't look the way we
21:40 - want to at all all right cool
21:50 - so first of all why don't we change this
21:57 - horizontal stack view and change the
22:00 - distribution to fill equally and then
22:07 - we're also going to add some some
22:13 - padding between these labels like this
22:16 - let's say 30 now this is a completely
22:19 - arbitrary right whatever I want to fill
22:22 - them at the alignment we can change this
22:25 - one to trailing right so it's up against
22:28 - that side and you know how it's sticking
22:30 - to the very edge of the screen we can
22:32 - adjust the margins of the vertical stack
22:35 - view in just a second so that we don't
22:38 - have it's sticking right leg up against
22:40 - the edge of the screen for this vertical
22:44 - stack view right here I want to change
22:46 - the spacing to 20 so that there's like a
22:49 - couple of what do you call it a couple
22:52 - of spacing a bit of spacing in between
22:53 - each element for this logo it's
22:57 - completely warped we're gonna change
23:00 - that to aspect fit and these cards are
23:05 - kind of warped - we're gonna go aspect
23:07 - fit an aspect fit this one actually
23:12 - looks bigger than this one to me maybe I
23:17 - think my eyes are playing tricks on me
23:20 - okay so let's address this issue where
23:25 - these are as close to the margin see
23:28 - this vertical stack view we can actually
23:30 - adjust the constraints after we've added
23:32 - them all you need to do is highlight
23:34 - that element go into the size inspector
23:36 - tab here and then you can see all of
23:39 - these different elements if you double
23:43 - click one of these constraints it jumps
23:46 - you directly to that constraint but if
23:48 - you just need to edit the spacing like
23:51 - the constant of the constraint then you
23:53 - can just click on this edit button here
23:55 - so I can go ahead and change that from 0
23:58 - to let's say 20 and that's gonna see
24:01 - push that out a little bit
24:02 - same thing with this leading 1 we're
24:05 - gonna just change that to 20 and so
24:07 - these are not so close to the edge there
24:09 - and now another thing we talked about
24:13 - the content hugging and content
24:17 - compression resistance priority right if
24:19 - we for example bring this guy up and we
24:24 - can change the orientation to see how
24:26 - this UI would look in a landscape sort
24:29 - of view there's still enough space for
24:33 - all of the elements so my point is kind
24:39 - of wasted but I want to tell you what
24:42 - those two things are the content hugging
24:44 - and content priority sort of content
24:46 - compression resistance priorities in
24:47 - case you've never heard of them before
24:49 - so huh actually no a good good thing is
24:53 - it is if I go into kind of like a
24:56 - smaller size class let's say this guy
24:58 - yeah so you can see the logos gone right
25:01 - there right so at different screen sizes
25:04 - we have different sort of screen real
25:08 - estate and how does the system decide
25:12 - which elements to squish the compress
25:15 - and if on the other hand there's a lot
25:18 - of space how does it decide which
25:21 - elements to give more space to to
25:24 - stretch out that all has to do with
25:26 - these two properties right here content
25:30 - hugging priority and content compression
25:32 - resistance priority and the
25:33 - you come in here is you select the
25:35 - element and then you go into the size
25:37 - inspector on the right hand side here
25:39 - and near the bottom you'll see these two
25:40 - attributes there's a horizontal and a
25:45 - vertical for each and this basically
25:47 - says for example the content hugging
25:51 - party if there is too much space right
25:57 - the higher priority the the highest
26:01 - content hugging priority means that it's
26:04 - gonna think of it as hugging the content
26:06 - it's not gonna allow it to expand so the
26:12 - element which has the lowest content
26:14 - hugging party will get will be the one
26:17 - that gets stretched out so you can kind
26:19 - of control it right I think by default
26:21 - they're all like 251 for this one so
26:24 - it's kind of random but if you wanted to
26:27 - control it you would basically go
26:29 - through all of the elements and decide
26:31 - you would assign different priorities
26:33 - let's say on the vertical aspect if I
26:36 - expect there to be more space on certain
26:40 - screen sizes and I want the cards to
26:42 - stretch out then I'm going to give the
26:45 - cards the lowest vertical hugging
26:49 - content priority so that means that the
26:52 - cards will get stretched out versus
26:54 - there anything else so the opposite is
26:57 - content compression resistance party on
26:59 - a screen which has no space or too
27:04 - little space
27:05 - which element gets squished and the
27:09 - element with the lowest resistance
27:11 - priority is the one that gets squished
27:13 - or it might completely disappear so as
27:17 - you can see it shows our logo to get
27:19 - squished here if we wanted to change
27:22 - that
27:22 - all we needed to do would be to
27:24 - highlight our local here and then give
27:27 - it a high resistance priority on the
27:30 - vertical axis right and then it's gonna
27:33 - make sure because this guy right now has
27:35 - the highest compression resistance
27:37 - priority it's not going to squish it
27:39 - it's gonna squish the other elements
27:41 - which has a lower resistance priority so
27:45 - that's how you kind of control that
27:46 - stuff all right so you know how this UI
27:53 - looks it's going to depend on how you
27:55 - adjust those different priorities but
27:59 - what I want to do on these larger
28:01 - screens like this is I don't
28:03 - particularly like that all of these
28:07 - elements stretch all the way to the
28:09 - bottom of the screen and there's so much
28:10 - space and it's because we have our
28:13 - vertical stack view stretched out all
28:16 - the way to the bottom of the screen and
28:17 - so it's gonna have to try to space those
28:20 - elements out for the whole the whole
28:22 - view height wise but however if I go
28:25 - into the size inspector for that route
28:27 - stack view and we double click that
28:30 - bottom constraint and we just go ahead
28:33 - and just completely blow it away that's
28:36 - going to allow that vertical stack view
28:39 - to to just have a natural size depending
28:42 - on what the elements are inside of it
28:44 - and so you can see that this looks a lot
28:46 - more natural all right we're gonna hook
28:52 - up some of the code now so this is the
28:57 - storyboard this is the view we've been
28:59 - using interface builder if that's new to
29:02 - you that's what it's called to build
29:03 - this sort of interface but now we have
29:05 - to expose all of these elements to the
29:10 - code behind or the view controller so
29:12 - that we can write Swift code to
29:15 - dynamically power these elements one way
29:20 - you can do that there's multiple ways
29:21 - but one way you can do that is just
29:23 - click on this button up here called show
29:25 - the assistant editor and it's going to
29:27 - show the view controller for this
29:29 - particular view as long as up here you
29:32 - have it set to automatic now actually
29:34 - this is a source of confusion for a lot
29:38 - of beginners and sometimes it's set to
29:41 - manual or it might have selected
29:43 - something else
29:44 - so then what they see on the right-hand
29:45 - side isn't what they should be seeing if
29:49 - they want to hook up like expose these
29:51 - elements to the code behind what you
29:55 - should do is just click this go to
29:56 - automatic and then select view
29:59 - controller or whatever it suggests as
30:01 - the automatic thing so that when you
30:03 - select one of these elements inside that
30:05 - view it's going to show you the
30:07 - corresponding view controller on the
30:09 - right-hand side ok so all we need to do
30:12 - is expose some of these elements so that
30:16 - we can controller through code we're
30:17 - going to need to expose the the card
30:20 - image view both of them so we can change
30:22 - the images through code we're going to
30:24 - have to handle taps on this button and
30:28 - we're gonna have to change the scores on
30:30 - these two labels right here so first of
30:33 - all we're gonna create some space
30:35 - underneath here inside our view
30:37 - controller class and we're gonna hold
30:40 - down control on our keyboard and just
30:43 - click this card and simply drag it a
30:45 - blue line should be following your mouse
30:47 - and you just let go and the connection
30:49 - type should be outlet and then you can
30:51 - just name it or whatever you want so
30:53 - this could be let's say this is the this
30:56 - is the player card okay and we're gonna
31:01 - do the same thing for this one this guy
31:05 - is going to be the CPU card and then
31:12 - we've got this label here so let's call
31:14 - this player scorer label and then we've
31:18 - got this CPU label as well
31:27 - all right and finally we've got the
31:29 - button so for this button instead of
31:31 - exposing it as an iboutlet property
31:35 - which is you can think of it as just
31:37 - exposing the element to have a reference
31:40 - to that element in the storyboard we're
31:43 - going to hook this guy up with an IB
31:45 - action Handler and so that is actually a
31:48 - function where you can type in code that
31:50 - would happen if the user were to tap
31:52 - that button so in Xcode 10 it's pretty
31:55 - smart because it's going to know that's
31:57 - what you're trying to do so you hold
31:59 - down control again it's the same
32:01 - procedure but this time when you drag it
32:03 - you're going to put it down here
32:05 - underneath this function and the
32:07 - connection type is action instead of
32:09 - outlet I'm gonna name this deal tapped
32:15 - all right so now all we have to do is
32:19 - randomize a number and one way we can do
32:22 - that is use this function called arc for
32:26 - random underscore uniform and we can
32:29 - specify an upper bound now if we
32:32 - specified 14 this would basically
32:34 - randomize numbers from 0 to 13 and I
32:38 - always kind of forget this but if I
32:41 - remember correctly if you specify an
32:42 - upper bound of 14 it's going to give you
32:44 - 0 to 13 and we'll find out soon enough
32:47 - anyways because we have card starting at
32:53 - 2 we need to go from 2 to 14 and instead
32:56 - right so that random function is going
33:01 - to give us starting at 0 so we need to
33:04 - add 2 to that 0 so whatever the number
33:07 - gives us we're just going to add 2 to it
33:09 - so if it randomizes 0 we're gonna
33:11 - essentially treat that as a 2 if it
33:13 - randomizes 1 we're gonna treat that as a
33:15 - 3 the problem is if we specify an upper
33:18 - bound of 14 and we get 13 and we add 2
33:22 - to that we're gonna get 15 and we don't
33:24 - have cards that go up to 15 right we
33:27 - only have 2 to 14 and so instead I'm
33:30 - gonna specify an upper bound of 13 and
33:33 - so the highest number is going to give
33:36 - us is 12 so 12 plus 2 is 4
33:38 - team and that's going to be our upper
33:40 - bound with what we have here in terms of
33:43 - card images too so I'm gonna specify an
33:47 - upper bound of 13 so let's write this
33:49 - gives us numbers from 0 to 12 then we
33:56 - add 2 just so you don't forget all right
33:58 - so we're gonna specify so we're going to
34:01 - randomize a number from 0 to 12 and then
34:03 - add 2 and then we're going to assign
34:04 - this to a variable here so we can keep
34:09 - track of it so we're gonna say let let
34:13 - player number equals that and then we're
34:17 - gonna randomize 1 4 I'm just going to
34:19 - copy and paste we're going to randomize
34:23 - 1 for CPU so CPU number is the same
34:26 - thing right there and then now we're
34:28 - going to change the card image or the
34:31 - the image view for the player card all
34:35 - right those warnings are just saying
34:36 - that we haven't used this constant yet
34:39 - but we're not finished coding it up so
34:41 - we can ignore those for now so the
34:44 - player card which is an image view
34:46 - element actually has an image property
34:48 - which we can set to a UI image view
34:51 - object so we're gonna create a new UI
34:53 - image view object and the UI image sorry
34:58 - I was saying UI image view object no
35:00 - we're gonna set it to a UI image object
35:02 - the UI image class has an initializer
35:06 - which accepts a string specifying the
35:10 - file name or the graphic asset name so
35:13 - for example we would specify card 10 if
35:18 - we wanted to show car 10 and this would
35:20 - essentially take that graphic asset that
35:23 - we have in our graphic asset library and
35:26 - it would create a UI image object and
35:28 - then set it to the player card image
35:31 - view only problem is we want to
35:33 - randomize that right we don't want to
35:35 - show car 10 every single time and so
35:38 - instead of specifying tender we're just
35:41 - going to put our player number all right
35:46 - this is the number which we randomized
35:48 - here
35:51 - the problem is that we can't add a
35:55 - string which is this piece of text with
35:57 - a number so we can just convert this
36:01 - number to a string as well like that and
36:05 - then that's going to allow us to add
36:07 - that random number to the end of the
36:09 - word card and then we're going to
36:12 - essentially change the image in that
36:14 - image view now we're going to do the
36:16 - same thing here in CPU card and so we
36:30 - can test it out now before before we go
36:33 - any further let's do it this way
36:45 - so it's gonna take a while to boot up
36:48 - the simulator and run meanwhile let me
36:56 - check out some of your guys comments oh
36:59 - thank you beasts motor this is going to
37:10 - be recorded so every week I'm gonna try
37:12 - to do a live stream and I'll record it
37:14 - and even if you can't make it at that
37:19 - time you can always catch up on it later
37:26 - alright so we've got this loaded up when
37:30 - I tap on deal it's gonna fire up this
37:32 - function right here okay and it's going
37:34 - to randomize two numbers and display
37:36 - them in the image views as well all
37:39 - right so we can see this happening if
37:42 - you happen to get a blank card that
37:45 - means that it couldn't find that image
37:47 - that we're trying to specify and if that
37:50 - were to happen to you then I would
37:53 - double check the random numbers range
37:55 - that you have set because you've
37:58 - probably specified a number and it
38:02 - attached it to the word card and it
38:04 - couldn't find that graphic asset in your
38:06 - asset library and so that's why it ends
38:08 - up showing a blank so
38:15 - and what we're going to do next is show
38:18 - the update the scores for the player in
38:21 - the CPU so we have the two labels
38:29 - exposed as iboutlet properties so we
38:32 - actually have a reference to those
38:33 - elements from here and we can say update
38:39 - labels and the easiest way that I did it
38:47 - before that I felt like made it easier
38:49 - for beginners to understand was to have
38:52 - a separate property here to keep track
38:54 - of the score so you know you have a
39:01 - player score and a CPU score like this
39:03 - and then they would both be initialized
39:05 - to 0 sorry I don't know what I'm doing
39:12 - brain fart okay so we have our
39:14 - properties player score in CPU score
39:16 - they both initialized to 0 and 0 and if
39:20 - we were to update the labels while first
39:23 - we would update the score update the
39:25 - score and then we update the labels
39:27 - right so in order to determine who wins
39:31 - it's very easy the way that we've set it
39:33 - up basically the higher the random
39:37 - number the better off you are because in
39:42 - here in that our asset library the
39:44 - lowest card is 2 so that's card 2 and
39:46 - the highest card is ace which is card 14
39:48 - and so what we end up doing is just
39:51 - comparing it so we basically say if
39:56 - player number is greater than the CPU
39:59 - number then we update we increment the
40:04 - player score that means they won right
40:06 - so we can append 1 to whatever score it
40:11 - was and that's what this plus equal
40:13 - means it's just incrementing it right
40:15 - there and then we can update the player
40:17 - label at the same time so let me erase
40:20 - this and we can say player score label
40:24 - is now
40:26 - has a text property and that is equal to
40:29 - the string the converted string of
40:34 - player score
40:35 - so we're basically converting that
40:37 - integer that number into a string so
40:40 - that we can set it to the text property
40:42 - of the label else if CPU number is
40:49 - greater than the player number then in
40:53 - this case the CPU 1 so we increment the
40:56 - CPU score instead and because this was a
41:00 - beginner tutorial I didn't handle what
41:05 - happens in a tie I know some some people
41:07 - who who got the hang of this really
41:09 - quickly and wanted to go beyond this
41:10 - they wanted to figure out like well if
41:12 - there's a tie because I think in the
41:13 - real war card game what happens is like
41:15 - you you open up another set of cards
41:18 - right and then whoever ends up winning
41:20 - gets gets like all of the points like
41:24 - wins the whole round so I didn't
41:27 - implement anything like that and I just
41:29 - left a tie scenario alone I didn't do
41:32 - that and another another word is that
41:38 - you know I'm using things like if
41:40 - statements and you know I'm talking
41:42 - about like properties and stuff like
41:44 - that if this is like your first time
41:47 - very first time learning iOS development
41:51 - seeing Swift code this is probably still
41:53 - going to confuse the hell out of you
41:54 - right there's no way I can take an hour
41:56 - to explain everything from the very very
41:58 - beginning and so what I would recommend
42:01 - is you follow our beginner series which
42:04 - is just a ten lessons long and you
42:06 - actually build up this very same app
42:08 - except that I take it like step by step
42:11 - very slow assuming you know nothing and
42:13 - that whole thing is probably like three
42:17 - hours long maybe but yeah so like I'm
42:22 - going through this live version pretty
42:24 - quickly and I know that if this was the
42:27 - first time you're seeing this you have
42:28 - no idea what these keywords are right if
42:30 - else--if and stuff like that but I would
42:33 - recommend that you go back and watch the
42:35 - beginner series instead and maybe
42:37 - Adrienne can provide a link to it but
42:39 - you'll also find
42:40 - if you just visit my channel page it's
42:42 - like the first playlist and then that
42:44 - will teach you stuff from the very very
42:46 - beginning and we'll talk about things
42:48 - like if statements else ifs you'll know
42:51 - what stack views are auto layout
42:53 - constraints and there are exercises you
42:55 - can do as well so I highly recommend
42:57 - that okay so now what we have is the
43:01 - score updating I think so let's give
43:03 - this a run and let's check it out yeah
43:13 - so it seems to be working so I saw a
43:18 - comment in there talking about talking
43:22 - about taking this further and doing like
43:25 - a back end to it I think that would be
43:28 - very interesting like if you actually
43:29 - could connect to a live player and do it
43:32 - if any of you guys want to dig into that
43:35 - feel free highly recommend that you join
43:38 - our Facebook community to do it in there
43:40 - so that we can all talk about it and
43:41 - discuss it but my whole point of doing
43:45 - this war card game in this very very
43:48 - simple form was just to get people's
43:50 - feet wet right I know a lot of you guys
43:52 - who are watching right now you've been
43:53 - following cold with Chris and the
43:55 - channel for a while now this is probably
43:57 - like easy stuff for you but yeah so that
44:02 - that's why I don't tend to take this
44:05 - further than this because this is kind
44:08 - of the most basic app that I can think
44:11 - of that still semi-interesting
44:12 - for beginners to do so that's why I keep
44:16 - it like that but there are other app
44:19 - tutorials on my channel that are
44:20 - completely outdated by now so I'm
44:22 - talking about like there's we have a
44:24 - soundboard app we have a youtube feed
44:28 - app which were which you can like
44:30 - connect to a channel and show videos and
44:31 - we have like a shopping app with moulton
44:34 - so those those tutorials are kind of
44:36 - outdated now unfortunately but I hope
44:40 - that you've noticed in the past weekend
44:41 - this week we're putting a lot more
44:44 - emphasis and producing content because
44:45 - I'm finished with producing the courses
44:48 - that I was so busy doing before so now
44:52 - I'm my focus is back to
44:55 - creating content for this channel for
44:56 - you guys and doing live streams with you
44:59 - guys getting to know you guys and really
45:01 - finding out what you want to learn so
45:03 - long story short I want to hear what
45:06 - sorts of app tutorials you guys want to
45:09 - see on this channel if there's any
45:11 - particular tutorials on the channel you
45:13 - think should be a priority to be
45:14 - refreshed and updated let me know I have
45:17 - a couple of app ideas that I actually
45:19 - want to build out from the ground up
45:22 - with you guys I think that would be
45:23 - really cool to follow along my I think
45:27 - my main difficulty is I mentioned before
45:31 - that I I get the most joy out of seeing
45:35 - people who have no coding and in
45:37 - bringing him them into the coding world
45:38 - and seeing their face light up and that
45:40 - light bulb moment go off in their head
45:42 - and then realizing that this is possible
45:47 - ballast balancing creating content for
45:49 - you know those people versus doing
45:54 - content for people who are beyond that
45:57 - you know people like you guys who some
45:59 - of you guys who have been following code
46:01 - as Chris a little longer and I don't
46:04 - just want to focus on the beginner stuff
46:06 - because you know I have a confession to
46:08 - make
46:08 - if you will is and that's that like I've
46:11 - been doing the beginner stuff for so
46:12 - long that I won't say my brain has
46:18 - rotted but like I'm just so used to
46:21 - teaching that stuff and then I have my
46:23 - personal and family life as well and so
46:27 - I don't have you know that much time to
46:31 - keep my skills sharp in terms of the
46:33 - more advanced and intermediate stuff and
46:35 - so that's why I also want to cover that
46:39 - stuff and learn a long side it's almost
46:41 - like I have to relearn a lot of that
46:43 - stuff because things are constantly
46:44 - changing right so that's why I also want
46:48 - to do more intermediate advanced topics
46:51 - which I will have to do learning myself
46:53 - and that will put myself in your shoes
46:56 - as well so we can learn together and I
46:58 - can continue also to update the inner
47:00 - stuff for all of the beginners who come
47:03 - on the channel yeah
47:07 - let's check out the chat now I think
47:10 - we've got about 15 minutes left so these
47:17 - motor social networking apps personally
47:19 - interests me you know that is that is
47:23 - something that I I never understand like
47:25 - people a lot of people want to do social
47:27 - networking apps but then I don't really
47:29 - understand what that means like do you
47:33 - want to make your own Facebook do you
47:34 - want to make your own Instagram like
47:36 - what does a social networking app mean
47:38 - to you let me know because a lot of
47:41 - people they say they want to do social
47:43 - networking apps and my the thing I would
47:46 - fire back at you is can you be more
47:48 - specific and really iron out like what
47:51 - people are able to do in that social
47:52 - networking app idea of yours someone
48:01 - asks can we download the source code
48:03 - yeah I'll make this available for you
48:06 - guys and the image assets I have a link
48:10 - to the image assets I think it might be
48:12 - on this page actually no I think it was
48:15 - on the old version of this page but like
48:19 - in one of my really old videos I had to
48:23 - link to the image assets but you can
48:26 - download them from here
48:27 - from this code with Chris calm slash
48:30 - lesson 4 and whether or not you can use
48:34 - that in your own project that you
48:36 - published commercially I I don't think
48:39 - so anymore because I think he changed
48:40 - the licensing terms before it was like
48:42 - completely free do whatever you want
48:44 - with it but for my self here I'm just
48:47 - I'm not even publishing these up sorry
48:49 - it's just for demo purposes so I don't
48:52 - think I'm gonna get in trouble for using
48:53 - it like this but if you were gonna
48:55 - publish your app then I would make sure
48:57 - you double check twice
49:09 - what's the difference with the x10
49:12 - version of this app versus others no
49:14 - there's there's really no difference
49:17 - yeah I just did this kind of on the fly
49:19 - and I didn't there wasn't anything
49:22 - different aside from that object library
49:24 - being moved I think a lot of people
49:26 - might be confused with that so that
49:30 - really is the only difference but in
49:32 - terms of like the auto layout stuff and
49:34 - laying out your elements nothing's
49:36 - really changed I did this more of like
49:38 - an exercise for myself and also for the
49:41 - benefit if there were any beginners in
49:43 - the audience today if you guys have any
49:55 - questions for me right now go ahead and
49:57 - type into the chat No
49:59 - see if I can answer them okay so
50:06 - someone's build box I did want to check
50:08 - out build box before if you're not
50:09 - familiar with it it's like I guess a
50:11 - drag-and-drop visual builder for games
50:14 - and I'm sure I'm sure you can add like
50:17 - bits of code to it but it's supposed to
50:19 - be like building games without code so
50:22 - you can go and check that out and
50:24 - someone's saying sorry you're saying
50:25 - it's not that great I haven't tried it
50:27 - myself
50:28 - because when I was interested in is
50:30 - actually really expensive
50:31 - I think they've lowered the price of
50:33 - using the software now and I'm not sure
50:37 - if you published games using build box
50:40 - if if they take a cut of it or anything
50:42 - like that I'm not sure but in the last
50:47 - livestream someone mentioned that I
50:48 - should start covering sprite kit which
50:50 - I'm 100% behind
51:15 - all right guys
51:25 - Sirdar asks hikers how do we add
51:28 - functionalities into our app icon on the
51:30 - iPhones main menu like me a 3d tap on
51:33 - the icon and see some extra like that
51:35 - force tap a 3d touch top - you know
51:39 - honestly I'm not sure but I know it's
51:41 - probably not that hard to do I'd have to
51:45 - check out the SDK and take a look at the
51:48 - iOS documentation for that so you know
51:50 - what we'll write that down as a content
51:52 - suggestion so it could be come up as a
51:55 - future tutorial but in all honestly I
51:58 - don't think it'd be very hard to do
52:00 - things like that usually usually you
52:05 - might even be able to specify an appeal
52:07 - list it might be a P list thing
52:21 - okay so I think Adrienne's doing a
52:23 - pretty good job with the questions
52:25 - actually nothing too much there if you
52:32 - guys have any suggestions for what you
52:34 - want me to cover in like a future live
52:36 - stream or any like tutorial requests
52:39 - please let me know I really want to do
52:41 - stuff that you guys want to see and this
52:44 - week the other tutorial that I'm gonna
52:47 - be publishing on the channel is how to
52:49 - integrate AdMob ads with with firebase
52:53 - so I've been actually using the
52:55 - community posts to ask you guys to do
52:58 - polls to see if you guys want to see
53:00 - that sort of content or not and you guys
53:01 - have been great like I think the last
53:03 - poll I asked the AdMob question I don't
53:06 - know if you saw it you've seen it but
53:08 - they were like 700 replies and 61% of
53:11 - you guys said you wanted to see it like
53:12 - about 20% said it could be useful and
53:15 - another like small percentage is like
53:17 - 14% of you guys said you completely
53:19 - didn't want to see something like that
53:20 - so it's very good feedback right and of
53:23 - course I can't cater to every single
53:24 - person I can't make everyone happy but
53:26 - at least this gives me sort of a
53:28 - barometer of whether or not I should
53:31 - proceed with that content you know
53:32 - because I don't want to waste my time
53:33 - and I don't want to waste your time to
53:35 - be honest yeah AdMob ads would be
53:38 - awesome cool it's actually really easy
53:39 - to do I think you're gonna be surprised
53:42 - once you see the video yeah I see my my
53:51 - own because I have a laptop here and I'm
53:54 - seeing my own live stream just so I can
53:56 - see the chat and I can see my own screen
53:58 - to see what you guys are seeing and I
54:00 - realize I talk with my hands a lot
54:04 - hey Luca
54:09 - hey Robert good suggestion
54:12 - so Robert suggests small talk about
54:13 - being a mobile app developer how to
54:16 - start a career in the field so
54:22 - specifically like working as a mobile
54:24 - app developer right not not being an
54:26 - indeed app developer building your own
54:28 - apps and try to make money off of that
54:29 - right because that part I don't know too
54:33 - much about and there are actually a
54:36 - couple of indie app developers that are
54:38 - on YouTube and they've published apps
54:41 - and stuff and they they do videos about
54:44 - I guess vlogs about their process and
54:47 - all that stuff and so I thought it'd be
54:49 - really interesting to interview them
54:51 - maybe I can reach out to them and grab
54:53 - an interview and see what it's actually
54:54 - like to be to make a living from
54:57 - developing apps and all these obviously
55:00 - for me I don't make a living from
55:02 - building apps and I don't build apps
55:06 - I don't do consulting anymore so I don't
55:08 - work for a company 100% of my income is
55:13 - coming from support of you guys through
55:17 - YouTube and through my course my private
55:21 - courses on my site where where you can
55:25 - get a bit more of my time to help you
55:27 - individually on your iOS journeys but I
55:31 - can talk about like based off of my
55:33 - experience of working in software
55:35 - consulting as a mobile app developer I
55:38 - can tell you things change so fast
55:40 - though like honestly that was five years
55:42 - ago and even the tools that we use I'm
55:48 - meeting up with some of my ex colleagues
55:51 - tomorrow for lunch so I'm gonna bring
55:53 - that up and ask them you know what sorts
55:55 - of tools they used these days and how
55:56 - it's changed since we were working
55:58 - together but you know it was a lot of
56:02 - fun but for me maybe it was just a
56:05 - company it was very very stressful
56:07 - because you know that the businessperson
56:11 - is selling these projects to clients and
56:13 - clients are paying like 50k upwards of
56:15 - 50 K to build like a mobile application
56:18 - and the team is like maybe
56:21 - one or two developers a designer project
56:25 - manager so it's like four people
56:26 - delivering this big project over like a
56:28 - month and there would be consistently
56:34 - kind of like tight timelines and things
56:37 - always go wrong you can't expect
56:39 - anything to go perfectly and so I would
56:42 - end up having to pull like a lot of late
56:44 - nights and that was fine before I had
56:46 - kids and before like when I was younger
56:48 - and I was able to do more of that type
56:50 - of hard work but now I think like I
56:53 - would just be completely wiped if I had
56:55 - no sleep and I pull an all-nighter I
56:57 - don't think I could function the next
56:59 - day and then I just started questioning
57:01 - myself if health-wise that was like the
57:05 - right thing for me and I don't mean to
57:07 - scare you guys are looking for jobs
57:08 - because I know a lot of companies out
57:10 - there aren't like that you know so I'm
57:12 - saying my company was a small company
57:15 - they might not have been selling their
57:17 - projects correctly they might not have
57:19 - been scoping it out making sure there's
57:21 - adequate like time and budget to do
57:23 - things and instead putting that pressure
57:25 - on the employees right so this is like
57:28 - an isolated experience I'm not telling
57:31 - you that this is what it's like to work
57:33 - in iOS out there it's just you know I
57:35 - can only speak to what I've experienced
57:37 - so I know for consulting the benefit is
57:41 - that you get to work on a lot of
57:43 - different app projects because it was
57:46 - cool like every two months every month
57:48 - to two months we would be working on a
57:51 - different app and starting all over from
57:53 - scratch getting requirements from the
57:55 - client like designing it building it and
57:58 - then you know I think you get a lot of
58:00 - good experience that way versus if you
58:03 - worked at like one company let's say mmm
58:06 - a big company like a bank who has a
58:08 - mobile app and you would just be working
58:12 - on that same app for years on end right
58:15 - you'd be maintaining it it'd be like
58:17 - probably a much larger app but you would
58:22 - be working essentially on different
58:23 - features or making new features of the
58:25 - same app and also the timelines probably
58:29 - wouldn't be as strict and probably
58:32 - wouldn't be as hectic
58:34 - so that's in my eyes that's kind of the
58:38 - difference between consulting and
58:39 - working in the industry is what is what
58:43 - that term is yeah Robert I'm sharing
58:52 - some personal stories yeah for sure for
58:53 - sure
58:54 - also my wife Ellen is also working with
58:58 - me now on code with Chris and before she
59:00 - was also working with me in the software
59:02 - consulting company and so she was
59:04 - working as a project manager and so she
59:08 - would you know scope out the timeline
59:10 - and scope out the tasks manage the
59:11 - client expectations and you know do they
59:14 - do the meetings with the client all that
59:16 - stuff so she has perspective from that
59:18 - end of things whereas I was a senior
59:20 - software developer so I would lead the
59:23 - team of developer so it's cool I think I
59:26 - can get hurt if I can convince her to
59:28 - get on the camera I can get her to do
59:30 - some some talks too to share her side
59:34 - her point of view from the project
59:36 - manager side of the software development
59:40 - industry so Robert regarding the recent
59:44 - workflow so I mentioned that I'm going
59:46 - to start I'm gonna start a series on
59:49 - this channel where I'm I'm taking one of
59:51 - my app ideas and I'm just going to start
59:54 - it from do it from start to finish and
59:56 - we're gonna publish it together and so
59:58 - that's what I'm hoping will be helpful
60:01 - for you guys to see that workflow all
60:04 - the way from you know from specifying
60:07 - requirements and all that stuff to
60:08 - design a like to doing the information
60:11 - architecture like the wireframes first
60:13 - and then turning into a design and then
60:14 - development and bringing those design
60:16 - pieces into development and then
60:19 - publishing it together I'm gonna hold
60:20 - like a special celebration or stream you
60:23 - actually hit publish and get it into the
60:25 - App Store
60:30 - iliyan we're ninja thanks thank you for
60:33 - your kind words alright so I think
60:37 - that's that about wraps it up for today
60:39 - my plans are to do another livestream
60:43 - next week and I'm gonna show you guys
60:46 - something else maybe we'll do something
60:47 - a little harder maybe we'll just pick
60:48 - one of the apps that are outdated in our
60:51 - channel and update them together
60:53 - I'll show you code that's for sure I'm
60:55 - not gonna as much like you know I don't
61:01 - know what's more helpful to you guys
61:02 - would it be more helpful if I just did a
61:04 - live stream and just did an hour of Q&A
61:06 - and you guys just you don't throw in the
61:09 - questions and I'll answer them for you
61:11 - or would you rather see me build
61:13 - something teach something see my screen
61:16 - do that let me know I want to make the
61:22 - livestream helpful for you guys so
61:27 - siddharth says he created a note-taking
61:29 - app called dark pad in it and it's
61:32 - published in the app store so guys check
61:33 - him check it out support him leave him a
61:36 - positive review you made six dollars
61:39 - with a banner ad that's awesome because
61:40 - I to be honest I actually I did I did
61:45 - release an app with some banner ads and
61:47 - didn't do that that well but we'll see
61:51 - we'll see we'll build some apps together
61:53 - and we'll publish into this story all
61:55 - right I'll see you guys later okay I'll
61:56 - see you guys next week same time same
61:58 - day next week see you guys later bye for
62:02 - now