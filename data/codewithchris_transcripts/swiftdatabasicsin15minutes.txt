00:00 - in this video you're going to learn how to use 
Swift data in your project so that you can store  
00:04 - and retrieve data in your app now if you didn't 
know Swift data was just announced at ww23 and  
00:09 - it's a way for you to work with data locally on 
the device now underneath the hood it actually  
00:14 - uses core data a framework that's been around 
for a little while however it's always been  
00:19 - challenging to use core data in a modern Swift 
UI app and that's why so many people are excited  
00:24 - because Swift data allows us to use core data to 
work with data locally in a swift ui-friendly way  
00:30 - now in this video you're going to learn how to set 
up your project to use Swift data how to add new  
00:36 - items to your data set how to retrieve those items 
update and delete items from your data set as well  
00:42 - we're going to do that in five steps first we're 
going to create the data model then we're going to  
00:47 - create the model container and then we're going 
to get a reference to the context which allows  
00:52 - us to work with the data and then you're going 
to learn how to add items retrieve them update  
00:56 - and delete them as well okay but before we begin 
couple of things to keep in mind Swift data was  
01:02 - just newly announced and is still in beta it won't 
be available until later this fall secondly Swift  
01:08 - data is an iOS 17 API so you won't be able to 
Target older versions of iOS and this video that  
01:14 - you're watching was recorded on xcode beta so from 
now till when it gets officially released things  
01:20 - may change so keeping all that in mind let's Dive 
Right In so just to reiterate we're using xcode  
01:27 - 15 beta here so depending on when you're watching 
this xcode 15 may have officially released then  
01:33 - the process may be a little different and things 
may look a little different but as of now this is  
01:36 - current so let's go ahead and start an IOS app 
project under the iOS tab let's click on app  
01:43 - and I'm going to call this Swift data demo and 
interfaces Swift UI language is Swift storage  
01:52 - I'm going to choose none and the reason for that 
is because if you choose Swift data it's going to  
01:56 - have a bunch of starter code for you to illustrate 
how swift data works but I really want to be the  
02:01 - one to do that for you and explain each part as 
I add it and it's going to actually be really  
02:06 - really simple it's not like core data where it 
actually has a whole bunch of different parts you  
02:12 - need to add Swift data is really clean so let's go 
ahead and choose none so we can start with a clean  
02:17 - project and I will step you through this process 
okay I'm just going to save it on my desktop let's  
02:24 - make this window a little bit bigger I'm going 
to get rid of the canvas because we don't really  
02:28 - need to look at that okay so step one is to Define 
our data let's create a new Swift class for that  
02:37 - Swift file so if I just in case I move too fast 
right click new file let's go ahead and choose  
02:44 - Swift file and what should we name our data it 
doesn't really matter because I really only want  
02:49 - to show you you know the crud operations how to 
create retrieve update and delete so it really  
02:54 - doesn't matter what we are doing let's just call 
a data item to keep it as generic as possible
03:02 - and for this we are going to import Swift data 
first because there is a specific macro we're  
03:11 - going to add to this class now you might think 
well we should start with a struct and normally  
03:15 - that's sort of the best thing you can do but we're 
gonna actually need to make this a class because  
03:23 - this macro that I want to add at model only 
works with classes now essentially what it  
03:30 - does is it tells Swift data that you want to 
use this class as the data you want to store  
03:34 - and retrieve instances of data item okay so 
since we are going to actually list this out  
03:41 - let's add identifiable we're going to add an 
ID and let's just add a simple name property  
03:48 - that's it and we're going to add an init 
method here where we can pass in the name
03:56 - okay and let's initialize ID to uuid 
string and we are going to set the name  
04:05 - the name property to the name that gets passed 
in let's just put self on this as well just so  
04:11 - it looks better okay and that's it you've 
defined your data schema for the things  
04:17 - that you're going to store in your local store 
just instances of data item just by adding that  
04:24 - now let's go ahead and create the persistent 
container where you're going to store these things  
04:29 - and we're going to do that here in the entry point 
again first let's start by importing Swift data  
04:36 - and then next as a modifier to the window 
group you're going to add this modifier  
04:41 - called Model container actually 
this one right here with the four  
04:46 - and you're going to pass in the type that you want 
to store so that is this one right here data item  
04:54 - so we're going to do that data item and to specify 
it as a type you know you're passing a type in  
05:00 - as a parameter you do the name dot self that's 
saying that this is this is a type that you want  
05:08 - to pass through so you want to create a container 
that stores types of these instances of these  
05:15 - okay so that's the second part there's only one 
last thing to do before we can start creating  
05:20 - items and storing in them in there retrieving 
them updating and deleting simple so far right  
05:25 - so we're going to go into the view and then at the 
top we are going to create an environment variable  
05:33 - and here we're going to specify the path 
to the context for working with the data  
05:40 - so think of this data context as a layer between 
your persistent store and the objects in memory  
05:45 - and it's going to facilitate storing those 
objects into the persistent store and reverse  
05:52 - taking items from the persistent store and 
putting it into memory so that's what this is  
05:57 - so in order to specify the path we go backslash 
Dot and then we're going to put model context and  
06:05 - then let's name this just context now that we have 
a reference to this data context we can perform  
06:12 - all of the add delete update operations through 
this context this context has various methods  
06:19 - for us to do those things all right now let's 
set up some UI so that we can actually do these  
06:25 - operations why don't we first start by adding 
a button to the screen to add new data items to  
06:31 - the database so I'm going to get rid of the image 
and instead of hello world I'm just going to put  
06:39 - tap on this button to add data and we are going 
to put a button below and this one is just going  
06:48 - to say add an item and the code is going to 
do just that now instead of just putting the  
06:56 - code in there I'm just going to separate out 
the operations into their own methods so that  
07:03 - it's a little easier to see so this one will 
be add item so this one will call add item okay  
07:11 - so the way to add an item is first create the 
item and then add the item to the data context  
07:20 - let's see let item equals data item I'm going 
to give it a name let's let's just say test  
07:29 - item and then to add it to the context we have 
a reference to the context up there and then  
07:36 - we're going to say insert we're just going 
to insert that item and that's it so let's  
07:42 - go ahead and run our app and then tap this button 
a couple of times to add items into the database  
07:50 - I'm going to Top This a couple of times there's 
no visual indication that something is happening  
07:55 - because we're not querying our local database 
for these items yet but I've tapped it a few  
08:00 - times there should be a few items in the local 
database okay so how do we retrieve them well  
08:07 - first let's import Swift data so that we can use 
the query and then here you're going to create apt  
08:17 - query and then we're going to create our let's 
make it private we can create our property here  
08:23 - let's call them items and this is going to be an 
array of data item and this is essentially going  
08:30 - to retrieve all of the instances of data item from 
our local data store into an array and here we  
08:38 - can simply display all those items in a list so 
let's go ahead and create a list for each items
08:51 - item in and then let's just display item dot 
name okay so that's a list component in Swift  
09:01 - UI let's see what we can see okay so those are 
all of the test items that I added and if I tap  
09:08 - on the button you'll see is being added to the 
store and this query is pulling them back out  
09:16 - and this list component here it is looping through 
the array of data items and displaying them here  
09:23 - pretty cool right we didn't have to type very 
much simply by adding items this query updates  
09:29 - itself and it invalidates the views and then 
the views refresh and update automatically to  
09:35 - display the new items pretty cool all right 
let's take a look at deleting items that's  
09:40 - probably the next easiest thing to do so let's go 
back into our view code here and I'm going to add  
09:46 - an on delete modifier to this for each and we 
get back in index set let's call that indices  
09:54 - and then we're going to say four index in indexes 
what we're going to do here is call let's see  
10:09 - let's create another method here delete item 
and we are going to pass in the item here  
10:17 - the item for deletion
10:22 - okay so let's before we Implement that let's go up 
here so for each index we are going to call delete  
10:28 - delete item and we're going to pass in items index 
right okay so what happens how do you delete an  
10:40 - item remember everything happens through that 
data context layer so we do context dot delete  
10:49 - and that's it that's all you have to do let's 
go ahead and give that a try let's run it
10:58 - so I'm going to swipe and when I hit this 
delete that that's what's happening right here  
11:03 - it's it's triggering this code on delete which 
is calling this method and then it deletes it  
11:12 - right and then if I run it again you'll see that 
there are how many six right so if I run it again  
11:17 - we should still have six because it's actually 
removing it from the database there you go  
11:22 - okay so now what about updating so updating 
is really simple all you have to do is  
11:28 - let's say you want to update a particular item go 
ahead and change its properties change anything  
11:33 - you want and then call context.save and it's 
going to save the updated data for that item  
11:38 - so how are we going to do this because I don't 
all I want to show you is the code to update the  
11:44 - data but I don't want to build up all the UI to do 
so so I think I'm just going to add a button here  
11:51 - and when you tap on it it's just going to 
change the name to something some hard-coded  
11:55 - value let's just do that just for the sake 
of demonstrating how you would update an  
11:59 - item so I'm going to put an H stack here I'm 
going to put a spacer and then I'm going to  
12:06 - put an image let's use an SF symbol 
so I'm going to pull this app up and
12:16 - um cycle no Circle update recycle um
12:28 - let's just go with the pencil the trusty 
pencil what I'm actually looking for is that  
12:36 - that spinning icon what do 
you call it it's a refresh
12:43 - now I wanna now I really want to find it ah 
there it is okay let's just do it's actually
12:56 - okay if you guys ah there it 
is there it is where to go
13:04 - where to go that one all right this is the 
one I wanted I'm going to copy the name
13:13 - let's see why is the name so long it's so long  
13:17 - and convoluted and we actually 
want to make this one a button
13:24 - so this should be the label okay 
and then the code when that's tapped  
13:31 - we're going to call uh update 
item right and pass in the item  
13:36 - so we haven't written this method yet 
let's go ahead and write this method
13:45 - okay
13:49 - and if you're not aware this underscore makes it 
so that when you call update item you don't have  
13:54 - to specify that parameter label okay so what do we 
do here um where you know you edit the item data  
14:04 - and then save the context so let's update the 
item's name to let's just say updated test item  
14:16 - and then you call context.save that's it 
let's go ahead and run this and try this out  
14:22 - ah oh yeah so this may potentially not succeed 
so you can handle an error and try again or  
14:28 - something like that but I'm just gonna put 
that question mark there and we're not gonna  
14:34 - bother with that error if there is okay so 
now we can delete we can add items all right  
14:40 - we can delete items it if I tap on this it's 
going to change the name and because I called  
14:47 - context.save this should be saved into the 
database so let's stop the project and run it  
14:53 - again and we should still see and there you 
go you see the updated data which got saved  
14:59 - so what do you think about Swift data do you think 
that you'll be able to use it in your next project  
15:03 - let me know in the comments below and if you're 
new here or you're new to iOS development check  
15:08 - out our three hour beginner master class on 
Swift UI where you're going to learn how to  
15:12 - build your first app all right thanks for 
watching and I'll see you in the next video