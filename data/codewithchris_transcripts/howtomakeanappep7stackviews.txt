00:01 - [Music]
00:06 - hello and welcome to lesson 7 of how to
00:08 - make iPhone apps with no programming
00:10 - experience in this lesson I'm going to
00:12 - talk to you about stack views I'm going
00:14 - to tell you about what they are and how
00:16 - they're used and then finally how we are
00:18 - going to use them to create our card
00:21 - game user interface so let's take a
00:23 - simple example like this form on this
00:26 - iPhone app it's got two labels and two
00:29 - text fields and button so in order to
00:32 - lay this out with auto layout
00:33 - constraints you're probably going to
00:35 - have to add a rule to dictate how far
00:38 - down the label is from the top of the
00:39 - screen and then how far down the text
00:42 - field is from that label and then from
00:45 - that text field how far down is the next
00:47 - label and so on and so forth like that
00:49 - describing kind of the vertical
00:51 - positioning of those elements and then
00:53 - next you're going to have another set of
00:55 - rules where you're describing the
00:57 - horizontal position for each of these
00:59 - elements so how far to the right is each
01:02 - label position and how far to the right
01:05 - is each text field position and for the
01:08 - button as well so each of those things
01:10 - is a rule there's an easier way so the
01:13 - stack view is a container view it can
01:16 - contain other elements so instead of
01:18 - putting all of these labels text fields
01:21 - and the button into our view directly
01:24 - we're going to put them into the stack
01:26 - view so that the stack view contains all
01:28 - of these elements and then we're going
01:30 - to place the stack view on The View so
01:33 - why would we want to do that well the
01:35 - stack view allows the elements inside of
01:37 - it to stack on top of each other either
01:40 - vertically or horizontally in this case
01:43 - we're probably going to want all of the
01:45 - elements to stack vertically and then
01:47 - with one configuration you can change
01:50 - the amount of space in between each
01:52 - element as well so rather than having a
01:57 - horizontal and vertical rule for each
02:00 - element uh we're just going to position
02:02 - the stack view how we want it and then
02:05 - we're going to let the stack view handle
02:06 - the positioning of the elements inside
02:08 - of
02:10 - itself we simply have to tell the stack
02:12 - view to stack all of the elements inside
02:15 - of it vertically with a space in between
02:18 - them which we can specify how small or
02:21 - large that space
02:22 - is like I mentioned as well you can also
02:25 - specify that the elements are going to
02:27 - stack horizontally so let's say if you
02:30 - have three buttons that are side by side
02:33 - instead of specifying rules for each of
02:35 - those buttons to position them you can
02:37 - just throw them all into a stack view
02:40 - specify that the elements inside that
02:42 - stack view are stacked horizontally and
02:44 - then indicate an amount of space in
02:47 - between each
02:49 - element the beauty of Stack views is
02:52 - that you can put a stack view inside of
02:55 - another stack view so take this stack
02:58 - view for example that we have containing
03:00 - the three side by-side buttons well I
03:02 - can throw this entire stack view into
03:05 - the first stack view that I specified
03:07 - with the form and I can put this stack
03:10 - view as the last element of the stack in
03:13 - our first stack View and then our user
03:16 - interface is going to look something
03:17 - like
03:19 - this awesome right and you're not just
03:21 - limited to nesting two stack views you
03:24 - can Nest as many stack views together as
03:26 - you'd like in order to build your user
03:28 - interface so once again let me show you
03:30 - what the UI would look like without
03:32 - stack views look at how many Auto layout
03:35 - constraints we would have to manually
03:37 - specify and then now look at it using
03:40 - the two stack
03:42 - views all right now let's quickly jump
03:44 - into xcode and I want to show you
03:46 - exactly how you would specify a stack
03:48 - view in interface
03:50 - Builder so here we are in an xcode
03:53 - project that I created just for the
03:55 - purpose of this demo and what I'm going
03:57 - to do here is I'm just going to drag
03:59 - through three buttons from my object
04:01 - Library onto our view so let me filter
04:05 - our object
04:06 - list just going to add a button here
04:09 - instead of dragging three buttons
04:10 - actually what I can do as a shortcut is
04:13 - highlight that button and then press
04:15 - command D on my keyboard to just
04:18 - duplicate that button and so I can do
04:21 - that like
04:22 - that so now I have three buttons If you
04:25 - don't want to do the command D way you
04:27 - can always just drag three buttons from
04:29 - the object Library down
04:31 - here so in order to put these three into
04:34 - a stack view I can highlight the three
04:37 - either from here in my document outline
04:39 - or I can hold down command and click
04:42 - each of these to highlight all three of
04:44 - them but it's important that we have all
04:45 - three of them highlighted because we
04:48 - want all three of them to be included
04:50 - into our stack View and then we're going
04:52 - to go down here and click this button
04:54 - that says
04:56 - stack okay and if you notice in the
04:58 - document outline line all three of these
05:01 - buttons now are inside of this stack
05:03 - view container view okay and they're
05:07 - still stacked vertically and that's
05:09 - because if you highlight the stack View
05:10 - and you go over to the attribute
05:12 - inspector on your right you can see here
05:15 - that the axis is vertical now I can
05:17 - change it to horizontal like that and
05:20 - now they're uh stacked side by side but
05:23 - without any sort of Gap right so I just
05:25 - need to bump this spacing up so let's
05:29 - say 30 and now you can see that they're
05:32 - all uh there's a space of 30 in between
05:35 - each button so instead of specifying
05:38 - Auto layout constraints for every single
05:40 - button all I had to do was throw them
05:43 - inside a stack view configure it and
05:46 - then now all I have to do is position
05:48 - the stack View using Auto layout
05:49 - constraints so I save a lot of time and
05:53 - it's a lot easier to troubleshoot and
05:56 - debug to if you have layout issues so
05:58 - I'm just going to the easiest thing is
06:01 - just horizontally and vertically Center
06:04 - that stack
06:06 - view so there we go I just had to
06:08 - specify two Auto layout constraints for
06:11 - my stack view as opposed to probably six
06:14 - of them if I didn't use the stack view
06:16 - in order to position each of these
06:18 - buttons now how are we going to use the
06:20 - stack view to build our war card game
06:23 - let's take a
06:25 - look so what I have here is the
06:28 - completed UI for the war card game and
06:33 - I'm showing you this because usually
06:34 - when you build an app before you start
06:36 - you're already going to have an idea of
06:39 - what the user interface is going to look
06:41 - like either as a design composite from
06:44 - your designer or maybe it's just a
06:47 - sketch in your notebook that you created
06:49 - yourself but when you're looking at that
06:52 - user interface when you sit down an
06:54 - xcode to build it you have to figure out
06:57 - how you're going to arrange these
06:58 - elements and when we're thinking in
07:00 - terms of Stack views you're thinking in
07:02 - terms of which elements are side by side
07:05 - and which elements are on top of each
07:07 - other so let me take this war card game
07:10 - design and break it down for you to show
07:13 - you how it's comprised of multiple stack
07:15 - views so if I'm looking at this user
07:17 - interface the first thing I'll notice
07:19 - are these two prominent cards side by
07:22 - side so in my head I would already be
07:24 - thinking that these two cards belong in
07:27 - a horizontal stack View so they're
07:30 - arranged
07:32 - horizontally next I noticed that here in
07:35 - the player label and this number here
07:38 - these two are stacked on top of each
07:40 - other so this is probably going to be a
07:43 - stack view itself and likewise here is
07:46 - another label and then another number
07:49 - label these are stacked on top of each
07:51 - other so this these two elements are
07:53 - going to be in their own vertical stack
07:55 - View and then look at how they're
07:58 - arranged side by side side with a large
08:00 - gap in the middle so I can actually put
08:02 - this stack view together with this stack
08:05 - view inside of a horizontal stack view
08:08 - like that so what we end up having is
08:12 - this horizontal stack view which
08:14 - contains the score labels we have a
08:17 - button on top of that and then on top of
08:20 - that we have another horizontal stack
08:23 - view which contains the two cards and on
08:26 - top of that we have an image
08:29 - so you can see that all of these
08:31 - elements are arranged on top of each
08:33 - other vertically stacked so I can throw
08:36 - all of these things into another stack
08:38 - view so on the left hand side you can
08:40 - see that's exactly what I have here I
08:43 - have the background image first of all
08:46 - that spans uh from edge to edge and
08:48 - that's not inside a stack view uh
08:51 - because that's not really stacked on top
08:53 - of anything it's really behind
08:54 - everything so I put the image as the
08:58 - lowest element or the base element you
09:00 - could say and then I put the stack view
09:03 - in front of that uh but this stack view
09:05 - contains all of the other elements and
09:08 - it's a vertically aligned stack view so
09:11 - what we have in here is the logo first
09:14 - and then we have a stack view which
09:16 - contains the two cards it's a
09:18 - horizontally aligned stack View and then
09:21 - we have the button below that and then
09:24 - we have another stack view which
09:26 - contains two stack views two Mini stack
09:29 - views and each of these mini stack views
09:32 - are vertically aligned containing two
09:35 - labels but this stack view itself is
09:38 - horizontally aligned so that's why this
09:41 - stack view is beside this stack view
09:43 - right here uh and there's a space in
09:45 - between them so hopefully this lesson
09:48 - gave you an idea of how you can
09:49 - construct your user interface using
09:52 - stack views in the next lesson we're
09:54 - actually going to build out this user
09:56 - interface so hope to see you there
09:58 - thanks for watching and I'll see you
10:00 - later
10:00 - [Music]
10:10 - bye