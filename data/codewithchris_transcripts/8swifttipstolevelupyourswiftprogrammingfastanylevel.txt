00:00 - hey code crew I hope you're all doing
00:01 - well today I'm going to show you eight
00:03 - Swift tips that you can use today to
00:05 - improve your Swift programming skills
00:07 - and if you watch the end I'll throw in a
00:09 - bonus tip for a total of nine and this
00:11 - last one is one that I use and love
00:13 - often in my own coding now some of these
00:16 - tips are going to help you be more
00:18 - efficient some of them are going to help
00:20 - you organize your code and yet others
00:22 - will just help you write less Swift code
00:24 - but no matter what all of them are
00:26 - things that you can apply today no
00:27 - matter what level of Swift coder you are
00:29 - so if that sounds good please give this
00:31 - video a thumbs up because every single
00:33 - one helps this video get more exposure
00:35 - so thank you and I appreciate it all
00:38 - right without further ado let's start
00:39 - with number nine number nine optional
00:44 - binding where the name of the constant
00:46 - is the same as the name of the optional
00:48 - in this statement my car is an optional
00:51 - and we're checking my car for value
00:54 - before printing out the actual name
00:55 - instead of doing this did you know that
00:57 - you can instead write it like this
00:59 - so here the constant name is the same as
01:02 - the optional name in that way inside the
01:05 - scope of the if statement you can simply
01:07 - refer to my car for the actual value
01:10 - less variable names floating around
01:12 - means less confusion and code that is
01:15 - easier to understand number eight the
01:20 - nil coalescing operator and here's that
01:23 - my car optional again in this piece of
01:25 - code we have a variable called car name
01:27 - and depending on whether the my car
01:29 - optional has a value or not we want to
01:32 - either assign the actual value or a
01:34 - string called na into car name you can
01:37 - use the nil coalescing operator to
01:39 - shrink this down to something like this
01:41 - that double question mark is the nil
01:43 - coalescing operator and if the optional
01:45 - is nil then they'll take the value on
01:47 - the right-hand side of it instead of the
01:50 - actual value in the optional
01:54 - number seven shorthand if statements
01:57 - similar to how the nil coalescing
01:59 - operator helps you write less code you
02:01 - can shrink down if statements often
02:03 - times to instead of writing something
02:05 - like this where we check if grades is
02:07 - over 50 and then assign the string into
02:10 - message you can write something like
02:11 - this on a single line and this means
02:14 - exactly the same thing the format is
02:16 - condition followed by a single question
02:19 - mark followed by the statements you want
02:21 - depending on whether the condition is
02:23 - true or false the true statement comes
02:25 - first and then a single colon separates
02:28 - them
02:31 - number six decentralizing your
02:33 - hard-coded strings in a constants file
02:35 - okay this one is really easy here's how
02:38 - you do it
02:38 - create a new Swift file inside declare a
02:42 - struct and add your hard-coded strings
02:44 - as static properties if you have a lot
02:47 - you can even nest strux for another
02:49 - layer of organization now whenever you
02:53 - need to refer to the hard-coded string
02:54 - simply reference your static properties
02:57 - of your constants file you know I gotta
03:00 - say coding is really important for app
03:01 - development but that's only one side of
03:03 - it you also have to consider how the app
03:05 - looks and feels and overall it needs to
03:07 - have a great user experience back when I
03:09 - was doing software consulting we had
03:11 - teams of designers and user experience
03:13 - folk just focused on that and since I
03:16 - became a solo developer I've had to pick
03:18 - up some of these UX tips myself one of
03:20 - the best classes I took on this was on
03:22 - Skillshare intro to UX fundamentals of
03:25 - usability by Marika McCloskey now her
03:28 - being the director of research of user
03:30 - testing there were so many interesting
03:32 - insights on how people actually used
03:34 - digital products I learned best
03:36 - practices for designing apps for
03:38 - usability and also how to evaluate the
03:41 - usability of an app I highly recommend
03:43 - it as it happens this video is sponsored
03:46 - by Skillshare an online learning
03:47 - community with thousands of classes
03:49 - ranging from coding entrepreneurship
03:51 - animation design music and so much more
03:54 - in addition to the usability cost that I
03:57 - mentioned before another class I'm
03:58 - taking that I think will improve my apps
04:00 - a lot is animating with ease in
04:02 - aftereffects with Jake Bartlet because
04:04 - I'll be able to use these animations
04:06 - inside my apps the thing I like about
04:08 - Skillshare is that it's really
04:09 - affordable it's less than ten dollars a
04:11 - month with an annual subscription there
04:13 - are no ads and they're constantly adding
04:14 - new premium classes right now Skillshare
04:17 - has a special offer for our code crew
04:19 - here the first 1,000 people to click on
04:21 - the link below in the description will
04:23 - get a two-month free trial of premium
04:25 - membership you can use it to explore all
04:27 - of the classes that they have to offer
04:28 - so definitely check it out and take
04:30 - advantage of it alright with that said
04:32 - let's go on with our countdown number
04:37 - five pragma mark now this tip has to do
04:40 - with organizing your code if you take a
04:42 - look at this example it's hard to tell
04:44 - what these methods do especially with
04:46 - such bad method names
04:48 - however using pragma marks we can at
04:50 - least separate them into sections here's
04:53 - how you do it you use double forward
04:55 - slash like a comment and then you write
04:57 - mark in all capital letters followed by
04:59 - a colon and then space - and space and
05:03 - then this is whatever you want to name
05:05 - that section now you can leave at the -
05:07 - but the dash adds a separator line
05:10 - another benefit to using pregnant marks
05:12 - is that in the jump bar when you pull
05:14 - down to see an outline of the file you
05:17 - can see your pragma marks and the
05:19 - separated lines -
05:23 - number four another way to break up your
05:25 - code file is by using extensions in the
05:28 - Swift documentation it says that
05:30 - extensions add new functionality to an
05:32 - existing class among other things using
05:35 - an extension you can add quite a bit
05:36 - including properties methods conforming
05:39 - to protocols so if it logically makes
05:41 - sense you can create an extension for
05:44 - your class and move part of the code to
05:46 - the extension instead for example often
05:49 - times when I'm working with table views
05:50 - I like to move the code which conforms
05:53 - to the UI tableview datasource and the
05:56 - UI tableview delegate I move that code
05:58 - into an extension for the view
06:00 - controller just to separate it out with
06:02 - the other code on the other hand you can
06:04 - also use pragma marks which you just
06:06 - learned about number three default
06:11 - values for parameters if you have a
06:13 - method where you want to provide an
06:15 - option for a parameter you can use a
06:16 - default value for that parameter for
06:19 - example in this method that makes ribs
06:21 - mmm you can pass in the sauce you want
06:24 - but if you don't pass it in then it's
06:26 - barbecue by default which is fine by me
06:32 - number two computed properties do you
06:35 - sometimes have methods like this for
06:37 - simple conversions or calculations well
06:40 - instead of a method you might be able to
06:42 - get away with using a computed property
06:44 - where the value of that property is
06:46 - calculated on the fly so instead of that
06:48 - method converting liters to milliliters
06:50 - you might have a computed property that
06:52 - looks like this
06:56 - alright number one the final tip and
06:58 - also the bonus tip you can easily
07:00 - improve compile time and app performance
07:02 - by using the access modifiers final and
07:05 - private for your classes and properties
07:08 - where it makes sense if a class you're
07:10 - creating doesn't need to be subclassed
07:12 - then mark it as final if you're not sure
07:14 - you can mark it as final anyways and
07:16 - just take off the keyword if it turns
07:18 - out you need to subclass it for
07:20 - properties if they are only going to be
07:22 - accessed within the code you're right
07:23 - inside that class then mark it as
07:25 - private alright so that was 9 tips in
07:28 - total that you can use today to improve
07:30 - your Swift coding now I want to turn it
07:31 - over to you which tip are you going to
07:34 - use in your next Swift coding session
07:36 - let me know by leaving a quick comment
07:37 - below and if there are some other tips
07:40 - that you think would be helpful to
07:41 - beginners let me know in the comments
07:42 - below as well lastly if you like this
07:45 - video please give it a thumbs up and
07:46 - don't forget to subscribe if you haven't
07:48 - already thanks for watching stay safe
07:50 - and I'll see you in the next lesson