00:00 - Hi, welcome to how to make an app for
beginners. If you've ever thought about
00:03 - building your own app, this is the video
for you. By the end of this video you
00:07 - will have built your very first app.
Watch all 10 videos and you will have
00:11 - built these apps. Building these apps
will teach you how to build your apps
00:14 - user interface, how to add graphics, text
and even buttons to your app. How to
00:20 - respond to user interaction, how to make
sure your layout works on multiple
00:23 - screen sizes and orientations. Finally
I'll show you how to install that app on
00:28 - your device so that you can show all of
your friends and family the app that
00:31 - you've built. I'm Chris Ching, the founder
of Code With Chris, where beginners go to
00:36 - learn how to make an app with no
programming experience. Building an app
00:39 - is simple there are only two things you
need to know: the first thing is Xcode.
00:43 - This is the application you build apps
with. It's free use it to construct your
00:48 - apps user interface as well to write code to respond to user
00:51 - interaction and to express logic. The
code that we write follows a certain
00:56 - structure or syntax and this brings me
to the second thing that you have to
00:59 - learn: the Swift programming language. To give you an example of how these two
01:04 - things work together imagine you had to
write in English essay. In this case
01:08 - Swift would be the English language and
Xcode would be your pen and paper. Now
01:13 - here's the nice thing about learning
Xcode and Swift. These are the same tools
01:17 - you're going to use for everything in
the Apple ecosystem. You're going to be
01:21 - able to build iPad and iPhone apps, iOS
games, Apple watch apps, Apple TV apps and
01:27 - apps for Mac. Now that we know what we
need to learn, let's dive right in. First
01:32 - let's download Xcode. If you're using
windows, check the description below for
01:37 - my guide on how to use Xcode on Windows.
if you're on a Mac, just go to the Mac
01:41 - App Store and download it for free. I'm
going to warn you though: you will
01:45 - probably need the latest Mac OS and a
whole lot of free disk space. Once you've
01:49 - got it installed, launch the app and
click on start a new Xcode project.
01:54 - Across the top of the next screen you'll
see templates for all of the different
01:58 - platforms we mentioned earlier. Make sure
you're on the iOS tab and choose a
02:03 - single view app. Click Next. Here you're
going to be able to specify some
02:08 - properties for your project. For the
product name you can just type a name
02:11 - for your app. I'll just call this AppOne.
You can leave team as is. For
02:15 - organization name you can put your own
name in there and for the organization
02:19 - identifier just put com dot either your
name or your company name and together
02:23 - with the product name that's going to
form an identifier for your app.
02:27 - The important thing is for the language, make
sure you have Swift selected and you can
02:32 - unselect all of these options down here.
Click Next. Choose a place to save your
02:38 - project. You can leave source control
unchecked and then click create. Say
02:44 - hello to your new project! Now this might
look intimidating but it's really not.
02:48 - Let me walk you through it. Psst, at the end of
this video I'll show you where you can
02:52 - download my Xcode cheat sheet. On the
left hand side you have your navigator
02:57 - area. What's shown here is the file
navigator where you can see all the
03:01 - files in your project.
Each tab at the top is a different
03:05 - navigator type but leave it at the file
navigator for now because you'll be
03:09 - using this most often. If you select a
file from your file navigator it will
03:13 - change what's shown here in the editor
area. The interface changes depending on
03:17 - what sort of file you choose. For example,
choosing this project file will let you
03:23 - configure the project properties, while
selecting a code file will let you write
03:27 - Swift code in the editor area.
Furthermore, choosing the storyboard file
03:33 - is going to let you customize the user
interface for your app. On the right-hand
03:38 - side you're going to find the utility
area. This panel is split into two panes:
03:43 - the inspector pane is the top one and
it'll show you information and
03:47 - configurable properties for the file or
user interface element you click. On the
03:53 - bottom pane of the utility area is
called the library pane and this
03:57 - contains lists of reusable code snippets
and user interface elements that we can
04:02 - add to our project. Finally along the top
you have the Xcode toolbar. This gives
04:07 - you the controls to run your project, it
shows you the status of your project and
04:11 - on the right hand side, buttons to hide
or show the various parts of the Xcode
04:16 - interface we just talked about. Let's try
to run our project. Xcode comes with an
04:20 - iOS simulator which lets you run and
test your app without needing a physical
04:25 - iOS device.
Let's choose a simulator from the
04:29 - toolbar and then click the big play
button here. It might take a few minutes
04:34 - for the first time it runs but this is
going to launch the simulator and you'll
04:38 - see your app running.
If the simulator is too big on your
04:43 - screen you can go up here to the window
menu and go under scale and change the
04:48 - scaling of the device to fit your screen.
You can also hit on your keyboard
04:52 - command + 1, command + 2, and command + 3. It's just the white screen now
04:57 - sadly but that's because we haven't
added anything to it. Now how did that
05:01 - Xcode project turn into this app that
you're seeing in the simulator? Let's
05:05 - break it down: this top layer is called
view. It's the user interface that the
05:09 - user sees. You can configure this from
the main storyboard file in your Xcode
05:14 - project. The second layer is the view
controller this code file's
05:18 - responsibility is to manage the view. For
instance when the user taps on the view
05:23 - it will let the view controller know and
then you can write the code that you
05:26 - want to run when this happens. This view
controller is represented by the
05:30 - ViewController.swift file in your Xcode
project. If you click it, the editor area
05:35 - turns into the code editor where you can
write Swift code to manage the view. So
05:40 - back in our Xcode project, hit this stop
icon here to stop running your project.
05:45 - If we want to display something on the
screen we have to add some elements to
05:48 - the view in our storyboard so go ahead
and click on main storyboard here and
05:53 - the editor area will turn into interface
builder and in the library pane that's
05:59 - this guy down here, make sure you're
looking at the object library tab then
06:03 - in the filter box type in "label". That's
going to show us the label element then
06:10 - simply click and drag that element and
drop it into our view. We're not finished
06:15 - yet because we haven't positioned the
label on our screen. Xcode uses a system
06:20 - called Auto Layout to size and position
the elements on the screen. This makes it
06:24 - easier for you to build layouts that
work on multiple screen sizes and
06:27 - orientations. Basically you specify rules
that dictate how your element should be
06:32 - positioned and how they should be sized.
Rules such as this element should be the
06:36 - same height as another element or this element should be 20 points away from the right
06:40 - side. These rules are called Auto layout
constraints. Now you're gonna learn a lot
06:44 - more about Auto layout in the next
lesson but for now let's jump back into
06:48 - Xcode and position our label. Now after
you added your label you might have
06:52 - noticed that it also showed up here. This
area is called the document outline and
06:57 - it lists all the elements you have in
your view. If you don't have this window
07:01 - click this little icon here to show and
hide it. Let's centre our label in the
07:10 - screen by adding some constraints to it. Click on the label from your document
07:14 - outline to select it and then down in
the lower corner we have these little
07:19 - icons. If you hover over them you'll see
their names. Click on the align icon and
07:24 - out pops this menu. Choose the
horizontally in container and vertically
07:31 - in container and then click this button
that says add two constraints and then
07:38 - you'll see the label reposition itself
based on the newly added constraints. Now
07:43 - let's change the text on the label. With
your label selected you should see it's
07:49 - configurable properties in the inspector
pane on the right hand side make sure
07:54 - you're looking at the correct tab and
then scroll to find the text property. It
07:59 - should be the first one and then just
erase that "label" in there and type in
08:06 - "hello world". Now let's run the project in
our simulator again. Click this little
08:13 - run icon here and then you should see
this. Congratulations! You've built your
08:22 - very first app. Today
you got a tour of the Xcode development
08:25 - environment, you learned about the view,
which is what the user sees, and the view
08:29 - controller whose job it is to manage
that view. You learned that you can
08:32 - customize that view in the Main.Storyboard file in your Xcode project.
08:35 - You also learned that the view
controller is represented by the
08:38 - ViewController.swift file in your Xcode
project. All of this is in my Xcode cheat
08:43 - sheet and it's free for you to download.
But first if you like this video please
08:47 - subscribe to my channel by clicking the
subscribe button below and if you don't
08:50 - want to miss a single video, click that
Bell icon as well.
08:53 - Now I want to turn it over to you: With
the skills that you're going to learn,
08:57 - are you going to build an app or are you going to build a game? Let me know by leaving a
09:00 - quick comment below and lastly I promised
you guys my Xcode cheat sheet. Just
09:05 - follow the URL on screen or the URL in
the description below to download it.
09:10 - Thanks for watching! I'll see you guys in
the next lesson.
09:20 - The video broke up so I have to press record again