00:00 - hey code crew in this video you're going
00:02 - to learn three different animation
00:04 - techniques in swift ui
00:06 - now we're going to take the slots app
00:08 - that we built in this series
00:09 - and we're going to breathe some life
00:11 - into it with some subtle and simple
00:13 - animations
00:14 - even so you'll see how the ui becomes so
00:17 - much more responsive
00:18 - dynamic and exciting just using some of
00:21 - the simple techniques that you'll learn
00:22 - in this video
00:23 - but before we dive in i do want to thank
00:25 - mark from big mountain studio for
00:27 - sharing his knowledge
00:28 - you see he's been neck deep in swift ui
00:30 - for a while now
00:31 - and produced several swift ui books
00:33 - including swift ui views
00:35 - animations and how to transition from a
00:37 - ui kit developer
00:39 - to a swift ui developer so if you find
00:41 - that you like this video and you find
00:43 - that you like mark's style of teaching
00:45 - definitely check out his website over at
00:47 - bigmountainstudio.com
00:49 - alright without further ado take it away
00:51 - mark
00:53 - hello code with chris code crew this is
00:55 - mark moykins and i'm happy to bring you
00:57 - this video on switch ui animations
00:59 - chris asked me to do this video for you
01:01 - guys because i have
01:02 - written a book on swifty eye animations
01:04 - and he thought this would be a good fit
01:06 - and i'm excited to show you the three
01:07 - different ways that we can animate and
01:09 - expand this
01:10 - swift ui slots application but before we
01:13 - get into it there's something i want to
01:14 - talk to you about
01:15 - as far as what is needed for animation
01:18 - in order to implement animations in your
01:20 - app there has to be some view that
01:21 - changes
01:22 - and if you look at this page for my book
01:24 - the concept is a view that has a
01:26 - starting state and an ending state
01:28 - and what you're actually animating is
01:30 - that change between the start state
01:32 - and the stop state or the start and the
01:35 - end state
01:36 - so you might ask yourself well what can
01:37 - be animated and switch ui well i kind of
01:39 - have this general rule that
01:40 - anything that has a numeric property
01:44 - can pretty much be animated and i'm
01:46 - talking about things like size position
01:48 - rotation even color underneath a color
01:51 - is just
01:51 - numbers and so anything that has a
01:53 - number or a numeric value for a property
01:56 - can pretty much be animated but that's
01:58 - just my general rule of thumb
02:00 - just to keep it simple so let's take a
02:02 - look at chris's app
02:03 - and see what could possibly be animated
02:07 - okay we're in xcode and i'm currently
02:09 - previewing chris's app right here
02:10 - and you notice that when i spin there
02:13 - are mainly three things that
02:14 - change three views that change remember
02:16 - we need something that changes before we
02:18 - can animate it
02:19 - and so one of them is pretty obvious is
02:22 - that the images change on these tiles
02:24 - another change is the color the color
02:26 - changes from this whitish color
02:28 - to this green color right here and then
02:31 - the third change that we have
02:32 - is the credits so as i spin you notice
02:35 - the credits they go up and they go down
02:37 - so those are some changes that we can
02:39 - animate right there
02:41 - now the simplest and quickest animation
02:43 - that you can implement
02:44 - is to simply put an animation modifier
02:48 - right on the parent view so let me show
02:50 - you what i'm talking about here
02:52 - if we look at this view right here we
02:54 - notice that the root view is a
02:56 - z stack and if i collapse this
02:59 - then what i can do is i can just add a
03:01 - modifier right on the z stack
03:03 - called animation and what kind of
03:06 - animation do i want
03:07 - well to keep it simple we can just say
03:09 - default
03:10 - now your choices for animation mainly
03:12 - deal with the
03:14 - speed of the animation from the start to
03:16 - the finish the default
03:17 - animation starts slow speeds up and then
03:20 - ends slow
03:21 - this is also called easing in and easing
03:24 - out
03:26 - so when we click the max spin button
03:28 - right now you'll notice that green color
03:30 - is being changed here
03:32 - so the green color is using this
03:34 - animation now it fades in
03:36 - and fades out over 0.35 seconds
03:42 - now if you want to customize this
03:44 - animation further you know with that
03:46 - green color fading in and fading out
03:48 - you can do that by changing the default
03:51 - parameter here that we have
03:52 - so let's take a look you notice i talked
03:55 - about easing right
03:56 - easing in and easing out well you can
03:58 - see the three different
03:59 - options are here ease in ease out and
04:01 - ease in out
04:02 - it basically means you know start slow
04:05 - end slow or start slow and
04:06 - end slow with ease in and out you can
04:09 - also give them a duration
04:11 - so maybe we just want the animation to
04:13 - ease out we want to slow down at the end
04:16 - or we can use ease out if we want to and
04:19 - i think the
04:20 - duration might be too slow for you to
04:22 - really notice a difference
04:23 - so what we can do is we can actually
04:25 - increase the duration
04:27 - so let's do that let's add that duration
04:29 - parameter and if you notice
04:30 - let's back up here a little bit when i
04:33 - started typing in the different eases
04:35 - you notice there was a duration here so
04:37 - ease out duration so we can just use
04:39 - that
04:39 - and let's change this to one second
04:42 - again the default is 0.35 seconds so
04:44 - we're going to
04:45 - almost triple this okay good so let's
04:48 - test it now
04:49 - and we want to look for the colors and
04:51 - notice how they take a second now
04:52 - to transition to green
04:56 - see how it takes longer
04:59 - and it takes longer for that color to go
05:01 - away that's because the duration is now
05:03 - one second well we're going to change
05:05 - that back and let's just leave it at
05:07 - ease out
05:08 - and we'll go with the default duration
05:10 - which is about 0.35 seconds
05:13 - okay for the next animation that i want
05:15 - to show you guys it's actually called a
05:17 - transition
05:18 - animation and i'm going to apply this to
05:21 - these
05:22 - images these apples and these stars and
05:24 - cherries that show up
05:26 - now right now these images are just get
05:28 - replaced so
05:29 - this is in a card view like if we expand
05:31 - the z stack here
05:32 - we take a look down here we notice
05:35 - they're using a card view
05:36 - and so a symbol or you know the image is
05:38 - passed in and
05:40 - the background color is also passed in
05:42 - so let's take a look at this card view
05:43 - here i'm going to hold down
05:44 - command and i'm going to jump to
05:46 - definition go to the card view
05:49 - and we see right here so the symbol gets
05:52 - passed in
05:52 - and it just finds the image in the asset
05:54 - catalog and displays it
05:56 - well in order to do a transition i'm
05:59 - going to need to change this code
06:01 - and here's why let me show you something
06:04 - now a transition has to have three parts
06:08 - and that is there has to be a way to add
06:10 - and remove what's being transitioned
06:13 - so basically think of transitions as a
06:15 - way to animate a view
06:17 - into the view hierarchy and animate it
06:20 - out of the view hierarchy and that's
06:22 - using an if statement
06:23 - so it's inserting and removing a view
06:25 - it's not hiding and showing
06:27 - it's inserting and removing and you do
06:29 - that with an if statement like you see
06:30 - here
06:31 - and then we're going to add a transition
06:33 - modifier to that view
06:34 - so it's basically a way to tell it how
06:37 - do you want to
06:38 - insert this view onto your screen and
06:41 - how do you want to remove it
06:42 - from your screen and then the last thing
06:44 - we need is an animation
06:45 - and you notice here like this example is
06:47 - using animation default
06:49 - and we have something like that already
06:50 - right we added that animation modifier
06:52 - to the parent
06:53 - and the parent applies that modifier to
06:56 - all of its children
06:57 - including the card view that we're going
06:59 - to be changing okay so i'm going to have
07:03 - to change this code
07:04 - so instead of changing the image i'm
07:06 - actually going to be inserting it
07:08 - and removing it so we're going to need
07:10 - an if statement for that
07:11 - so here's what i'm going to do i'm going
07:12 - to evaluate the symbol that we get
07:15 - and i'm going to put an if statement
07:18 - around this
07:18 - image right here so what i'm going to do
07:20 - is i'm going to hold down command i'm
07:21 - going to click on image
07:23 - and you see there's this make
07:25 - conditional here so i'm going to click
07:26 - on that
07:28 - so now we have this if statement it
07:30 - added this v stack to it as well
07:33 - so for the true part i'll say if the
07:35 - symbol
07:37 - equals apple that's one of the
07:40 - our images then show it right here
07:44 - else and then another one is cherry
07:48 - if symbol equals cherry
07:53 - then we want to show another image then
07:56 - we'll have
07:57 - one final one because we only have three
07:58 - images and i'm not going to put an if
08:00 - statement there because we know
08:01 - if it's not apple or cherry it's going
08:03 - to be the star image
08:05 - okay now i'm going to move some of these
08:07 - down here first of all let me
08:09 - indent here now the corner
08:12 - in the background we don't need those
08:14 - specifically
08:15 - on the images themselves we can move
08:17 - those to the parent view which is now
08:19 - the v stack
08:20 - so i'm going to hold down command option
08:22 - and use my
08:23 - right bracket key to move that down and
08:26 - now it's on the v stack
08:29 - and then we want to copy these images
08:32 - here
08:34 - we'll put that in there put that in
08:35 - there fix the indenting
08:38 - and we can leave the symbol we don't
08:39 - necessarily have to use this
08:41 - text right here remember the whole
08:43 - purpose of this is to
08:44 - wrap our images with if statements
08:46 - because we want to insert them
08:48 - into the screen and remove them from the
08:49 - screen by inserting another image on top
08:52 - of it
08:53 - so let's just test it right now and make
08:54 - sure the app is still working
08:57 - i'm going to click the back button and
08:59 - it's already running here so let's just
09:01 - click it and as you can see it's still
09:03 - working nothing's really changed
09:06 - now remember there's three parts for
09:08 - every transition you have the if
09:09 - statement
09:10 - you know something that controls the
09:11 - insertion and removal from the screen
09:13 - you have the transition modifier and
09:16 - then you have the animation modifier
09:18 - well we have the if statement we have
09:19 - the animation modifier now we just need
09:21 - the transition
09:22 - modifier so what i'm going to do is on
09:25 - each image i'm going to add a transition
09:27 - modifier
09:28 - like this and as you can see it takes a
09:30 - type of any transition so i can type
09:32 - any transition and then i can choose
09:36 - from there
09:37 - so the example had slide in there so
09:40 - let's see what that looks like
09:41 - i'll use slide right here and i'll apply
09:44 - that to
09:45 - my other images like that let's fix the
09:48 - indenting
09:49 - and now what slide does is it slides in
09:53 - a view
09:54 - from the leading side and it exits the
09:57 - view
09:57 - from the trailing side so it comes in
10:00 - from the left and it exits out the right
10:02 - so let's run the app again and see how
10:04 - that looks
10:07 - okay now you see the images that are
10:09 - coming in from the left and they're
10:10 - exiting out the right
10:12 - with a new image that comes in from the
10:14 - left
10:15 - so it looks pretty cool now from here we
10:18 - can modify and customize it a little bit
10:20 - so let's go back to the card here and
10:23 - if you want to change it instead of
10:24 - changing it in three places we can
10:26 - change it in one place
10:27 - and we can just create a variable to
10:29 - hold our any transition here
10:32 - so let's do that let's create a variable
10:35 - here
10:36 - and it's a constant so i can just use
10:37 - let
10:39 - and by default i can just say it is any
10:44 - transition dot slide like that
10:48 - and then i could just copy this variable
10:50 - and just replace it here
10:52 - now i want to make this change in three
10:53 - places so one of the things that i can
10:55 - do is i can hold down
10:56 - option and shift and then click in the
10:58 - three different places that i want
11:00 - and then from there i can you know
11:03 - delete
11:04 - the code all at once and then i can
11:06 - paste it in all at once
11:07 - so it's just an easy way to switch
11:09 - things around now if you want to test
11:10 - that again we can go back
11:13 - let's resume the app here and as you can
11:16 - see it's still working right
11:18 - okay good so now when you want to test
11:20 - it all you have to do is just change
11:21 - this variable up here so instead of
11:24 - slide maybe you want things to move in
11:26 - from the bottom
11:28 - and then exit out the bottom so
11:31 - what we can use is called move and move
11:34 - it gives you an edge parameter and
11:36 - basically you can define where do you
11:37 - want it to
11:38 - slide in from and slide out from so we
11:41 - can say bottom if we want to
11:42 - we can also say top or you also have the
11:45 - other options like trailing
11:47 - and leading but we just want to go with
11:49 - bottom so let's see how that looks
11:51 - okay we'll go back and it looks like it
11:54 - refreshed there
11:56 - and now everything comes in from the
11:58 - bottom
12:01 - okay so that is using transitions now we
12:04 - talked about three different animation
12:06 - techniques
12:06 - so the third one is using a spring and
12:09 - the idea that i have
12:10 - is when this credit changes when you win
12:13 - money i want it to turn green and i want
12:16 - it to bounce
12:17 - and get a little bit bigger and then
12:18 - when you lose money it goes back to what
12:20 - you see here
12:21 - you know that's default state so we need
12:23 - to create that change we need to
12:25 - add that green color and make it a
12:27 - little bit bigger
12:28 - when they win okay so let's find the
12:31 - code
12:32 - where that win is processed and we're
12:35 - going to go down here oh i won't buy it
12:38 - okay so it's right here process win now
12:41 - this is where it checks and knows
12:43 - if you want or not by the matches that
12:45 - you have
12:46 - so if we go down here this is where you
12:49 - actually have a win if there's
12:50 - more than one match so we need some kind
12:53 - of variable to get set to true
12:56 - so let's create that variable and let's
12:58 - see here this is line 207
13:00 - so we're going to come up here i'm going
13:01 - to create another state variable
13:03 - and i need it to be a state variable
13:05 - because when the screen changes or
13:07 - updates i need that value to persist
13:11 - and i'm just going to call it win and
13:13 - i'm going to default it to
13:15 - false okay so let's go back down here
13:19 - i said line 207 right yeah so here we go
13:23 - so if they win then we're going to set
13:25 - that variable to
13:26 - true all right and
13:30 - you know they can win and if they lose
13:32 - we need to reset that
13:33 - variable so what i'm going to do is just
13:35 - reset the variable right here
13:37 - there we go so it's always false unless
13:39 - they win and it changes to true
13:41 - now we need to react or respond to this
13:45 - value change right here this when this
13:47 - wind changes the true
13:48 - so let's go back up to our view here the
13:51 - credits
13:52 - which is right here and we want to
13:54 - change this background color
13:55 - so i said there's two things i want i
13:56 - want to change the background color to
13:58 - green
13:58 - and i want to make it a little bit
13:59 - bigger so let's take a look here
14:02 - when when i'm going to use what's called
14:04 - a ternary operator here
14:06 - say if statement inline if statement so
14:08 - if one is true
14:11 - then i'm going to change the color let
14:13 - me just copy this existing color here
14:16 - else it's going to be white and i'm
14:18 - going to change this to green
14:22 - like that so if one is true change it to
14:25 - green
14:26 - otherwise make it white and then the
14:29 - other thing i want to do is make it
14:30 - bigger
14:31 - so let's add a scale effect right here
14:35 - and again i'm going to use a ternary
14:37 - operator if when is true
14:39 - i'm going to make it 1.2 times bigger
14:41 - than it already is
14:43 - otherwise it's just going to be one
14:45 - times as big or it's normal size
14:48 - all right let's resume that and let's
14:49 - test it make sure it's still working
14:53 - okay we notice it's white and we're
14:55 - looking for a win
14:56 - there we go we got one win and notice
14:58 - they got bigger
14:59 - and then if they lose it gets smaller
15:04 - now the animation it's using right now
15:06 - is this animation right here the
15:07 - animation ease out
15:09 - and it applies that animation modifier
15:11 - to all the children
15:13 - while in switz ui you can override the
15:16 - parents property by putting on a
15:19 - different property on the child
15:21 - so we're using animation ease out and
15:24 - instead what i want to do is use an
15:25 - animation
15:26 - spring on this child so it's going to
15:29 - override that ease out animation with a
15:31 - spring animation
15:33 - so i'll say animation and i'll say
15:35 - spring
15:36 - now i can just use a spring animation
15:38 - right here
15:40 - like this and you'll notice as i run it
15:44 - it's hard to see the default spring
15:46 - animation it's hard to really see the
15:47 - spring
15:48 - so i want to give it more springiness to
15:50 - it okay
15:52 - so if you notice when i started typing
15:55 - in spring before
15:56 - there are a lot of different options and
15:59 - let's see
16:00 - for auto complete to work sometimes i
16:01 - have to start all over here okay there
16:03 - we go
16:04 - we're going to use this one right here
16:05 - now you notice there are different
16:06 - spring animations here there's
16:08 - interactive springs interpolating
16:09 - springs and if you want to know all the
16:11 - details between
16:12 - those different spring animations and to
16:15 - see examples then
16:16 - you'll have to look in the book i break
16:19 - all these down
16:20 - and then i test every single parameter
16:23 - but we're not going to do this in the
16:24 - video we don't really have that much
16:25 - time
16:26 - so instead i'm just going to use this
16:28 - override right here this
16:29 - spring with the response and the damping
16:32 - fraction
16:33 - the blend duration we're not really
16:34 - going to get into that because from the
16:36 - test that i've used
16:37 - and the conversations i've had with
16:39 - other developers
16:40 - it no matter what you give it doesn't
16:42 - really make a difference so let's use
16:44 - this one and we're going to delete blend
16:46 - duration because that is an optional
16:48 - parameter
16:50 - okay so for response what is response
16:53 - well let's take a look at something here
16:55 - apple defines the response parameter as
16:57 - the stiffness of the spring
16:59 - defined as an approximate duration in
17:02 - seconds
17:03 - a value of 0 requests an infinitely
17:05 - stiff spring
17:07 - so notice that apple said it's an
17:08 - approximate duration
17:10 - so think of it as that approximate
17:11 - duration now by default animations are
17:13 - usually
17:14 - 0.35 seconds long well we can increase
17:17 - the time
17:18 - of this spring animation by changing the
17:20 - response
17:22 - so what i'm going to do is i'm going to
17:24 - double it and i'm going to make it 0.7
17:27 - and damping fraction what is damping
17:30 - fraction
17:31 - damping fraction so the word damping it
17:33 - means to reduce the maximum extent of
17:36 - something vibrating or bouncing back and
17:38 - forth like a spring
17:40 - so when you add a damping fraction
17:42 - you're stopping
17:44 - the springiness of the animation if you
17:47 - give it a zero
17:48 - it's just going to bounce and balance
17:49 - forever but if you add some
17:51 - damping to it like 50 damping like the
17:54 - middle picture
17:55 - it's only going to bounce half as much
17:57 - with the duration that you give it
17:59 - and then if you apply a one which is 100
18:02 - damping
18:02 - then it's not going to bounce at all and
18:05 - you just have a regular animation
18:07 - okay so it's a fraction so it's between
18:10 - zero and one
18:11 - you know zero percent to 100 what i'd
18:13 - like to do is i like to start in the
18:15 - middle and just see how it looks
18:16 - so i usually start with a 0.5
18:20 - and then we can test it there we go and
18:23 - let's see how it looks keep your eye on
18:24 - this credits up here
18:31 - come on we got to get a win there we go
18:34 - so i noticed it bounced a little bit
18:36 - right and it got bigger so
18:37 - 0.5 doesn't look bad we could stick with
18:40 - that and then when it gets smaller it
18:42 - bounces again
18:43 - if you want to make it more springy then
18:47 - you can just uh lower that amount so if
18:49 - we go to like point three let's see how
18:51 - that looks
18:51 - it'll be more springy there we go
18:57 - so it bounces a little bit more now you
18:59 - notice when it bounces
19:00 - look at the color you notice the opacity
19:03 - gets more solid more transparent more
19:05 - solid as it bounces right
19:07 - and that's because it's adding a spring
19:10 - animation
19:11 - to the background color as well now
19:13 - that's something you might not want to
19:14 - do right
19:15 - but how do you prevent one modifier from
19:18 - being animated when there's an animation
19:21 - on the whole view
19:22 - well it's pretty simple all you have to
19:24 - do is just add another animation
19:26 - modifier here
19:28 - and you can say dot none that way
19:32 - everything above this modifier right
19:34 - here
19:35 - will not be animated and anything below
19:37 - it
19:39 - will be animated so the corner radius
19:41 - and the scale effect will be animated
19:44 - but not the color change so let's try
19:47 - that
19:51 - there we go so now that you notice the
19:53 - color
19:54 - isn't animating it's not fading in and
19:56 - out
20:00 - all right great so that's it for this
20:02 - video you learned three different
20:04 - techniques
20:04 - for animating you learn that you can put
20:07 - an animation
20:08 - on the parent and it will animate all
20:10 - the children
20:11 - and all the changes that your children
20:13 - go through you also learned how to apply
20:15 - a transition to a view
20:17 - that gets inserted and removed from your
20:20 - screen
20:21 - and remember views get inserted and
20:23 - removed from the screen by using an if
20:25 - statement
20:25 - and then lastly you learned how to apply
20:27 - a spring animation
20:28 - you learned what the response parameter
20:30 - was where it's an approximate duration
20:32 - and you also learned about the damping
20:34 - fraction which holds down a spring or
20:36 - presses down or dampens a spring and
20:39 - then you also learned how to prevent
20:41 - other modifiers in the same view from
20:43 - being animated
20:45 - by applying an animation none to it and
20:47 - anything above that
20:49 - will not be animated but everything
20:50 - below it will be animated
20:53 - alright i hope you guys enjoyed this
20:54 - video back to chris
20:57 - thanks mark those were some pretty cool
20:59 - animation techniques and i learned a few
21:01 - code editing tricks in xcode as well so
21:03 - thank you so much for that
21:05 - now if you learned something new and you
21:06 - want to continue learning with mark
21:08 - then i highly urge you to visit his
21:10 - youtube channel and his website over at
21:13 - bigmountainstudio.com
21:15 - now i want to turn it over to you are
21:17 - you an existing ui kit developer who is
21:19 - transitioning to swift ui or are you
21:22 - just starting your app journey right now
21:24 - either way let me know by leaving a
21:26 - quick comment below and on your way down
21:27 - there don't forget to hit the thumbs up
21:29 - button
21:30 - and subscribe so you don't miss the next
21:32 - lesson i really appreciate it
21:34 - now i want to thank mark for presenting
21:36 - and i want to thank you for watching and
21:38 - learning with us
21:39 - thank you so much i hope you enjoyed it
21:41 - and i'll see you next time