00:00 - hey guys welcome to the next video on
00:02 - Python tutorial for beginners in this
00:04 - video we will learn how to use if-else
00:07 - statements in Python so first of all
00:10 - what is a if statement so a if statement
00:14 - is used to execute a statement or a
00:18 - block of code if and only if a condition
00:22 - is fulfilled so first of all let's see
00:26 - the syntax of if statement so let's say
00:30 - I declare a variable called X whose
00:34 - value is 100 and then I'm going to check
00:37 - whether the value in X is equal to 100
00:41 - or not so I can use this keyword if and
00:45 - then if you have seen the last video in
00:47 - which I have shown you how to use
00:49 - comparison operators and logical
00:52 - operators then you will know that for
00:54 - equality we use a double equal symbol
00:59 - and then I'm going to just check it
01:02 - against hundred now after the condition
01:05 - you need to give this colon in order to
01:08 - tell Python that this condition is
01:10 - finished and you need to press Enter and
01:13 - you will see that there is an indent
01:17 - given to our code and you can see this
01:20 - cursor is here which is four spaces away
01:24 - from the start or one tab away from the
01:29 - start and here I can just for example
01:32 - print the value of x so i can just say x
01:37 - is equal to and then after the comma x
01:42 - and let me save this code and run this
01:45 - code and you can see on the run window
01:48 - here x is equal to 100 is printed
01:51 - because this condition which we are
01:53 - checking using the if statement is true
01:56 - which means whatever code or statement
01:59 - or block of code you will write under if
02:03 - it will be printed let's say this
02:07 - condition is not fulfilled so I'm going
02:10 - to just say that X is not
02:13 - 200 which is false condition and when I
02:17 - run the code now it doesn't print
02:20 - anything because this condition is not
02:23 - fulfilled and that's why this statement
02:26 - is not executed now let's talk about the
02:30 - indentation little bit so indentation in
02:33 - Python is the way of marking a block of
02:37 - code so you can see I have given 4
02:40 - spaces indentation here so 1 2 3 4 or if
02:46 - you are using PyCharm when you press
02:47 - ENTER after an if condition you will see
02:51 - that automatically this cursor is
02:54 - pointing here which is 4 spaces away
02:56 - from the starting point so this means
02:59 - that whatever you write after these 4
03:02 - spaces or a tab is the part of this if
03:06 - statement now if you are familiar with C
03:10 - or C++ this indent acts like a curly
03:13 - bracket in C or C++ so in Python you
03:17 - don't use the curly bracket to define a
03:20 - block of code you use indentation to
03:24 - define a block of code so I can write
03:27 - this statement like this also so I'm
03:29 - going to just say X is equal to and in
03:33 - the next line I can just give one more
03:35 - print function and I will print X from
03:39 - the next line and you can see here also
03:42 - I have given indentation after this
03:45 - starting point and this means that these
03:47 - two lines are the part of this if
03:50 - statement so let me change the value of
03:53 - x is equal to 99 and when I run the code
03:55 - it will print X is equal to and in the
03:59 - next line it prints 99 using this line
04:03 - of code so you may ask what happens when
04:05 - I will write this print function here
04:10 - and let's say we want to print finish
04:13 - here okay and let me run the code and
04:17 - let's see what happens so it prints
04:19 - finish now let me just change this
04:22 - condition and I'm going to just say
04:24 - hundred here and let's see what happens
04:26 - now
04:27 - so now only Finnish is printed because
04:31 - this line of code is not the part of if
04:35 - condition only statement which you write
04:38 - after four spaces will be the part of
04:41 - the if condition like this line and this
04:44 - line of code but if you don't give any
04:46 - indentation here that means that this
04:49 - line of code is not the part of the if
04:52 - statement now let's take another
04:54 - scenario and this time I want to check
04:57 - whether the value of x is a positive
05:01 - value or a negative value so I will
05:04 - start from here and I will give one more
05:06 - if statement here and I will just check
05:09 - whether X is greater than zero or not
05:13 - and then give this schoolin to indicate
05:16 - python that i have finished this
05:19 - condition and then if it's greater than
05:22 - zero then I'm going to print that X is
05:26 - positive now if X is not positive and if
05:30 - it has a negative value I need to
05:33 - somehow print that X is a negative value
05:37 - and for this you use our else statement
05:41 - so here you can write else and once
05:44 - again you need to give the colon here
05:47 - and then under this else statement once
05:50 - again you provide four spaces or a tab
05:53 - indent and you can once again write
05:56 - print and this time we can write X is
06:00 - negative this means whenever this
06:04 - condition is false and if and only if
06:08 - this condition is false then only the
06:12 - else part will be executed so whatever
06:16 - code or block of code you write under
06:19 - else that will be executed if and only
06:22 - if the condition here is false so seeing
06:26 - the value of x which is 100 which is
06:29 - obviously greater than zero it is going
06:31 - to print that X is a positive value now
06:35 - when I change the value of x is equal to
06:38 - minus hundred here and once I
06:41 - I execute the code first of all it
06:43 - prints that X is minus 100 here because
06:47 - first of all this condition is checked
06:49 - and obviously minus 100 is not equal to
06:52 - 100 so this condition is true so these
06:55 - two lines of code are executed because
06:58 - this condition is true and here because
07:01 - this condition is false that's why this
07:04 - statement is not printed and the
07:07 - execution of code goes to the else
07:10 - condition and then this line of code
07:13 - will be executed which is X is negative
07:17 - and you can see here and this line of
07:20 - code is independent of both these if
07:22 - statements and that's why it will be
07:25 - printed always now as we have seen from
07:28 - our last video that we can provide
07:31 - multiple conditions using a logical
07:35 - operators so we can here also write that
07:39 - if X is not equal to hundred or if the
07:44 - value of x is less than 0 let's write
07:48 - here X is less than 0 then only we will
07:53 - want to print this statement so once
07:57 - again when we run the code in this case
07:59 - both the conditions are true that's why
08:01 - this is printed if we write here that X
08:04 - should be greater than 0 then also this
08:07 - will be executed because one of the
08:12 - condition is true and because in the
08:14 - case of or we only need to satisfy one
08:16 - condition out of multiple conditions in
08:19 - the case of end when I write end here
08:22 - and run the code now you can see this is
08:26 - not executed because one condition is
08:30 - true here and other is false and in the
08:33 - case of end we need to satisfy both the
08:37 - conditions and then only these two
08:39 - statements will be executed or this
08:42 - block of code will be executed so this
08:45 - is how you can use if-else statements in
08:48 - Python I hope you have enjoyed this
08:50 - video I will see you in the next video