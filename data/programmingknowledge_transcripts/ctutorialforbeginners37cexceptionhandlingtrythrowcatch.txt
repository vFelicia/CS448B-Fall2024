00:00 - hello guys in this video I'm going to
00:02 - teach you what is C++ exceptions and how
00:05 - you can use exception handling in
00:08 - C++ so first of all what is an exception
00:12 - an exception is a situation or uh
00:17 - unwanted situation which can arise
00:20 - during the execution of your program and
00:23 - you can use exception handling
00:25 - techniques which is provided by C++ to
00:29 - uh handle those exeptions for example uh
00:33 - I want the age of uh some person and I
00:38 - am allowing the user to enter the age
00:41 - and by mistake he enters instead of any
00:44 - number or integer he enters any
00:47 - character or any string instead of
00:48 - integer as an age and this is
00:51 - unacceptable and you need to uh handle
00:54 - those situation uh in C++ and exception
00:58 - handling uh in C++ provide uh you know
01:02 - handling of those situations so for how
01:06 - you can uh use exception handling in C++
01:10 - let's see the Prototype so you use
01:15 - try and then give these curly braces and
01:18 - then give our catch blocks so first of
01:22 - all I will show you the basic
01:25 - syntax so you just try your code and
01:29 - then catch the
01:34 - exception catch and in
01:40 - here you can catch exceptions so this is
01:43 - the basic prototype of your exemption
01:46 - handling in C++ this try Block in this
01:51 - you try your code okay so as the name
01:54 - suggests you are trying your code and if
01:57 - it throws any exception it is catched by
02:01 - this block called catch and in these
02:04 - curly braces okay now for example you
02:08 - want to show throw some exception
02:11 - intentionally so let's take an example
02:14 - for example I want the user to input any
02:17 - age so I will just write
02:20 - STD uh C
02:23 - out and I want the user to input any
02:26 - Valu so I will
02:28 - say please
02:31 - enter age okay and
02:36 - uh then I will just end this
02:44 - line and then I can check this age if
02:49 - this
02:50 - age if this age is uh greater than so I
02:56 - will just ask the user I will Define a
02:59 - variable able int age is equal to Z I
03:05 - will initialize this age and
03:07 - then I will uh ask the user to enter age
03:11 - so I will say
03:15 - STD c n for taking the input and then I
03:21 - will take the input as an age right and
03:26 - if this age is greater than 100
03:30 - okay so I'm checking the condition if
03:33 - this age is greater than for example 100
03:36 - this is not an human age I will consider
03:39 - this is my condition to check any
03:41 - exception or this age so I will say
03:47 - or or this age
03:51 - is less
03:52 - than
03:54 - zero then also this cannot be an age so
03:59 - I can thr throw an exception so how you
04:01 - throw an exception just use a keyword
04:04 - throw and this is like throw and then
04:09 - you throw a number or integer for
04:12 - example
04:13 - throw uh 99 or
04:17 - 100 right to this is user defined uh
04:22 - integer I must say okay now if this uh
04:28 - program throws you need to catch this uh
04:31 - in this catch block so what you can do
04:35 - you can just Define int as an argument
04:37 - of catch in E and you can just print
04:45 - that some uh exception occurred
04:49 - [Music]
04:52 - some ex
04:55 - exception occurred and you can give the
04:59 - even the number of the exception okay so
05:03 - how you can give the number of the
05:05 - exception you can just
05:07 - say
05:09 - uh error number is equal to and then
05:15 - just give e here because we have defined
05:18 - e as an argument here
05:21 - right now I'm just uh trying to compile
05:25 - and I will just try to run the program
05:28 - and I will see what it gives so I will
05:31 - enter any age for example it's greater
05:34 - than 100 1
05:37 - 09 and it gives an exception some
05:40 - exception occurred an exception number
05:42 - is 100 because we are throwing 100 when
05:45 - the exception condition occurs right in
05:49 - a similar way I can throw any character
05:52 - also so for example I want to throw an a
05:55 - character I can just throw for
05:58 - example
06:00 - uh a as an exception right and in here
06:04 - then I need to define character as an
06:07 - argument and then once again when I run
06:10 - the program first I need to compile this
06:14 - and then I will run
06:16 - this and this time I will enter any
06:20 - minus value minus 9 for example and it
06:23 - gives me an exception some exception
06:25 - occurs error number is a this time
06:28 - because we are throwing
06:30 - character this time
06:32 - right or you can use a standard
06:37 - exception uh class from uh C++ which is
06:41 - used to uh you know uh handle any
06:44 - exception standard exceptions we must
06:46 - say so this you can use by
06:51 - using STD in your catch argument
06:58 - STD except
07:03 - option okay and then you can catch the
07:07 - exception so I will compile my
07:10 - program and this e will give the error
07:14 - because this class expect e dot there is
07:18 - a function member function in exception
07:20 - class
07:22 - called what to show the exception
07:28 - Okay so I compiled it and I run it and
07:31 - this time I will enter 200 as an age and
07:34 - it gives
07:36 - me uh the error that it's it has thrown
07:40 - an exception okay so there is a library
07:44 - called standard exception you can use to
07:48 - uh catch the
07:50 - exceptions but for that I almost forgot
07:54 - you need to include exception library
07:57 - for that so you just need to add this
08:00 - Library called include exceptions and
08:03 - this is for the C++ exception which is
08:07 - uh used to uh handle exceptions
08:12 - right now uh for
08:16 - example you don't know what kind of
08:19 - exception is coming or you don't know uh
08:23 - the you know type of exception which can
08:26 - occur in C++ so you can Define multiple
08:30 - exception handling for
08:31 - example int e here or and you can just
08:37 - use this catch multiple times after your
08:40 - Tri block so this is my tri block this
08:42 - is one kind of exception handling you
08:45 - can do multiple kind of exception
08:47 - handling like this so you can use
08:50 - care e or you can even use undefined
08:56 - exception which uh catches any exception
08:59 - and which is catch with as an argument
09:03 - Three Dots and catch as and these three
09:06 - dot means that it's you know any
09:10 - exception which occurs can be catched by
09:13 - this okay and always remember this catch
09:17 - with three dots always comes at the end
09:20 - of your try catch exception block so you
09:24 - always catch uh the known exception and
09:29 - and then in the in the case when uh the
09:33 - exception is not known you use this so
09:36 - always add this catch with these three
09:39 - blocks at the end of uh your trying
09:42 - catch block okay and I can run the
09:45 - program once
09:47 - again and it's showing an error which is
09:51 - okay because I'm not using standard
09:53 - exception e do what is not required
09:57 - here and I will compile file my
10:00 - program and yeah because there in this
10:03 - there is no exception right we are not
10:06 - passing any any uh argument
10:10 - here and I will run it once again
10:14 - 122 it will catch the exception so just
10:19 - notice that it has uh catch which
10:23 - exception so for example error
10:26 - number exception occur m mes like this
10:30 - or error instead because we are catching
10:34 - character here we can say
10:37 - error care okay or here we can say
10:41 - unknown
10:44 - exception
10:47 - unknown exception right and now when I
10:50 - run the program compile it and run it
10:53 - and for example I give any string
10:57 - value and it handles this Exception
11:01 - by coming out of the block here and for
11:07 - example I run this and I will give any
11:11 - character
11:14 - and why it's not printing
11:17 - anything okay I need to give the age
11:20 - first right yeah thousand and it catches
11:24 - the exception right like this now there
11:27 - are some exception which you don't even
11:29 - know so this is the user defined uh you
11:32 - know throw uh some kind some exception
11:35 - which can occur at run time and you
11:37 - don't even know which kind of exceptions
11:40 - are those so you don't use throw in that
11:42 - case you can just add this try and catch
11:45 - block and if any exception occurs the
11:48 - those are catched by this so it's not
11:51 - necessary that you will need to throw
11:52 - the exception uh the C++ Library will
11:56 - handle your
11:57 - exceptions and catch if any exception
12:01 - occurs uh using these cat block also so
12:04 - in this way you can handle exceptions in
12:07 - C++ I hope you have enjoyed this video
12:09 - please wait comment and subscribe and
12:11 - bye for now