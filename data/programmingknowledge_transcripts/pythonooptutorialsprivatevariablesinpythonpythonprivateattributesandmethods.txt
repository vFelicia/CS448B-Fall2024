00:00 - in the last video we have seen how to
00:02 - use encapsulation in Python and we have
00:05 - also seen how we can declare private
00:08 - member variables in Python to declare a
00:11 - private member variable we use double
00:14 - underscore in front of your variable
00:18 - name and this variable becomes private
00:21 - but the question is what exactly is a
00:24 - private member variable so a private
00:27 - member variable is private to the class
00:30 - that means you can use this private
00:34 - member variable inside that last but as
00:37 - soon as you use it or access it outside
00:41 - the class it will give you an error so
00:45 - you cannot access a private member
00:47 - variable outside a class and the example
00:51 - we have already seen so here you can see
00:53 - I try to access this private member
00:56 - variable outside the class and when I
00:58 - run the code it says that there is no
01:03 - underscore underscore C attribute for
01:06 - this hello object why because whenever
01:11 - you create an instance and if the member
01:14 - variable is private this private member
01:17 - variable is invisible to your object so
01:21 - you cannot access the private member
01:24 - variable outside the class but can be
01:27 - used this private member variable inside
01:30 - the class let's see so I'm going to
01:33 - declare one more method here and I'm
01:36 - going to name it as public underscore
01:39 - method and this doesn't take any
01:43 - argument but what we have learned about
01:46 - the methods in a class that even though
01:49 - you don't pass any argument to the
01:53 - method you have to provide at least one
01:56 - argument which is the self argument and
01:58 - what is self self is the current object
02:01 - so let me just print something here
02:05 - quickly for example public here so can
02:09 - we use this private member variable
02:12 - inside
02:13 - method let's see so I'm going to just
02:16 - write self dot underscore underscore C
02:20 - and then I'm going to run this code and
02:24 - let me comment this line because this
02:26 - was giving us an error and instead we
02:30 - can use this public method so I can use
02:35 - an instance of hello which is hello dot
02:39 - public method and let's run the code now
02:42 - and you can see there is no error that
02:46 - means you can use your private member
02:48 - variables inside the class or any method
02:51 - of the class now the other question is
02:54 - what is a public member variable like a
02:57 - here so a is a public member variable
03:01 - because it doesn't contain any
03:03 - underscore underscore in front of it and
03:06 - that means you can use this public
03:08 - member variable inside the class as well
03:12 - as outside the class so if I want to use
03:15 - this public member variable inside the
03:18 - class also I can just use self dot a and
03:22 - then run the code and it's totally fine
03:26 - it doesn't give us any error let's print
03:28 - the value of for those two member
03:31 - variables and once again run the code
03:34 - and it will print the value of a and C
03:36 - and then this message which we are
03:39 - printing here which is public here now
03:41 - the next question is how we can define a
03:43 - private method in the class so let's see
03:48 - how we can define a private method you
03:50 - already know most probably which is by
03:54 - using double underscore in front of your
03:56 - method name so for example underscore
03:59 - underscore private underscore method and
04:05 - then I'm going to just print something
04:08 - inside this method let's say private so
04:12 - this is a private method and how you can
04:15 - define a private method using these
04:16 - double underscore in front of the name
04:19 - of your private method and the
04:21 - restriction will be the same on the
04:23 - private methods also so let's try to
04:25 - access this private
04:27 - outside the class so I have this hollow
04:29 - instance and when I press dot here you
04:33 - will see there is no suggestion for this
04:36 - private method because pygeum already
04:39 - know that this is a private method so it
04:42 - doesn't show this method in the
04:44 - suggestion when you use this object
04:46 - outside the class but let's try the
04:49 - brute force and let's try to use this
04:52 - method outside the class and when I run
04:55 - this code you will see once again you
04:58 - will get an error which says hello
05:01 - object has no attribute underscore
05:04 - underscore private method so private
05:06 - methods also you cannot use outside the
05:10 - class but inside the class absolutely
05:13 - you can use your private methods so how
05:16 - to use your private methods inside that
05:19 - lass so you can use your private method
05:22 - inside the class using once again a self
05:25 - keyword so you write self dot and then
05:30 - your method name for example private
05:32 - method and that's how you can call your
05:35 - private method inside the class using
05:37 - self so any method you want to call
05:40 - inside a class you do it once again
05:44 - using the self keyword as you do with
05:47 - your member variable and once again when
05:50 - I run the code now it prints private
05:53 - using this statement and this statement
05:56 - is executed when we call this private
05:59 - method from here so I hope this video
06:02 - will clarify some more doubts about the
06:05 - private member variables and private
06:08 - methods in Python and I will see you in
06:11 - the next video