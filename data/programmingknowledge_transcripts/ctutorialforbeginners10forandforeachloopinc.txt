00:00 - hello guys welcome once again in this
00:02 - video I'm going to show you how to use
00:04 - for Loop and for each Loop in
00:07 - C so as I have already uh taught you in
00:11 - the last two videos that a loop is a
00:15 - piece of Code by which you can iterate
00:19 - or perform some statement in a loop
00:24 - again and again so for Loop is also just
00:28 - for the same purpose
00:30 - so let's see how we can use first of all
00:33 - for Loop in
00:35 - C++ let's see the basic uh format of for
00:39 - Loop so for Loop is declared like this
00:44 - you start with a keyword called for and
00:48 - then you initialize these brackets and
00:52 - inside these bracket you pass three
00:55 - arguments first is the initialization
01:00 - value and then it will be separated by
01:04 - the semicolon second argument is the
01:07 - condition which you want to met and the
01:11 - third argument is the increment or
01:15 - decrement whatever you want to do in the
01:19 - loop and inside the curly braces you
01:22 - perform your
01:23 - statement so let's do the same in our
01:27 - code for example I will declare a for
01:30 - Loop
01:32 - for and in these brackets I will
01:38 - just declare my condition so I will say
01:42 - int
01:44 - a is equal
01:46 - to0
01:50 - semicolon a
01:53 - is less than
01:57 - 10
01:58 - semicolon and and
02:03 - A++ okay so this is my
02:07 - initialization I'm initializing an
02:10 - integer variable with zero so this is
02:12 - called
02:13 - initialization and the second argument
02:16 - is the condition so I'm checking whether
02:19 - my value of a is less than 10 and then
02:24 - third argument is the increment so I'm
02:27 - increasing the value of a by one
02:30 - let's add these two
02:34 - semicolons and in here I want to print
02:37 - the value of a if it's less than 10
02:42 - okay so I will just print the value of a
02:45 - I will just write console dot right line
02:49 - and in the bracket I will just say value
02:52 - of a
02:54 - is in this placeholder I will pass the
02:58 - value of a okay so let's try and run
03:01 - this
03:06 - program and what this program did is it
03:10 - just printed the value of a from 0 to 9
03:15 - which are 10 values right and what
03:19 - happened
03:21 - here our code will start from here and
03:24 - it will initialize a with zero and it
03:27 - will check the condition whether a is
03:30 - less than Z less than 10 or not and then
03:33 - it will go here and it will print value
03:37 - of a is equal to zero and once again it
03:40 - will increase the value of a by one now
03:44 - value of a is 1 and Which is less than
03:48 - 10 it will print value of a 1 increase
03:52 - the value of a + 1 which is a is equal 2
03:56 - once again it will check the condition
03:59 - Which is less less than 10 it will print
04:01 - it and it will keep on looping until and
04:06 - unless your condition is met which
04:10 - is a is less than 10 as soon as a become
04:15 - 10 this condition will not be true and
04:18 - it will our program will go out of the
04:20 - loop right so in this way you can use
04:24 - for Loop now how to use for each Loop
04:29 - this is also our Loop which we can use
04:33 - to iterate values so let's see how we
04:36 - can use for each
04:38 - Loop so first of all let's see what is
04:41 - the basic format for for each
04:45 - Loop for each Loop is declared like this
04:49 - it has a initial statement which is a
04:53 - keyword for each and in this bracket you
04:57 - have this collection
05:00 - and you will iterate this collection as
05:04 - a value one by one
05:07 - so this will this value will iterate
05:11 - through this connection collection sorry
05:15 - and then this value can be used inside
05:18 - this Loop to print it or to perform some
05:23 - code or algorithm inside this for Loop
05:27 - so let's see how we can use it in our
05:30 - code I will delete this program for now
05:34 - and now let's see for
05:38 - each for this example I will take the
05:42 - collection or I will take an array of
05:45 - names so I will declare it like this I
05:48 - will declare a
05:49 - string array with a variable name array
05:53 - and I will initialize this string by
05:56 - value five so it can hold five values
05:59 - right right and I will
06:02 - just initialize this array with some
06:06 - names so name zero is this name name one
06:10 - is this and until name four which is a
06:15 - fifth value and I will assign this and
06:18 - for example I want to print all these
06:21 - values using for each Loop how can I do
06:25 - this so what I can do is I will write I
06:29 - will use for each Loop for each and I
06:34 - will give this brackets and in here I
06:39 - can declare my variable which will hold
06:44 - each name so I will declare this as a
06:48 - name itself this can be anything this
06:51 - name can be anything but in is constant
06:56 - you need to use in between your your
07:00 - holder or placeholder and your
07:03 - collection which is array right so this
07:06 - is our collection so this array will
07:10 - contain the collection of values like
07:13 - this okay and this variable will access
07:19 - this collection one by one so I will
07:24 - just declare this curly braces and then
07:28 - what I will do
07:30 - is I will iterate through this array but
07:35 - first of all I need to give a type to
07:39 - this name variable because we have this
07:43 - array as a string we need to initialize
07:46 - this name as a string
07:48 - also string
07:51 - okay so this name will contain one name
07:57 - at a time from this array now we want to
08:00 - print
08:02 - this so I can say console. right line
08:06 - and inside this bracket I can say hello
08:09 - plus whatever name which is this one so
08:13 - what this code will do is it will
08:16 - iterate through this array one by one so
08:19 - first of all let's try and run the
08:21 - program and let's see what it does so
08:25 - what this code does is it will iterate
08:28 - the or it one by one from array so it
08:34 - first it will say hello first name which
08:37 - is
08:38 - Steven and then it will say hello second
08:41 - name which is Clark and like that all
08:45 - the name it'll iterate so what it's
08:47 - doing
08:48 - is it'll go here and it will see what is
08:52 - the first value in the array and it will
08:56 - pass this value in this variable and
08:59 - then it will print this value here hello
09:03 - Steven and once again it will go here
09:06 - and it will go to the second value which
09:09 - is clock it will go to this code and it
09:14 - will print it hello clock and once again
09:17 - it will loop on keep on looping until
09:20 - and unless our last value is
09:22 - printed so what is the basic difference
09:26 - between for Loop and for each Loop
09:30 - Loop in for Loop you need to define the
09:34 - index right
09:37 - so for example we see these two
09:41 - conditions here you need to
09:44 - Define initial value the condition which
09:49 - is the in which will iterate through
09:52 - your index until this condition will met
09:55 - and you need to
09:57 - increment Okay so
09:59 - so let's see in this code
10:03 - here I will once again write that for
10:06 - Loop for you which we have just used and
10:10 - in here we need to know the index
10:14 - right so we need to iterate through 10
10:18 - values for example
10:20 - now for example you want to iterate
10:23 - through this string using this for Loop
10:27 - how can you do it what you can do
10:31 - is you can use this array so just take
10:36 - this variable array and you can just
10:41 - print this array like this in the square
10:45 - brackets you just pass this a which is a
10:50 - integer which is starting from zero and
10:53 - until and un 10 comes it'll keep on
10:56 - increasing so it will go through
11:00 - array zero array 1 array 2 array three
11:02 - array four but as soon as it goes to
11:06 - array five which is not declared or
11:10 - which is not the size of this array
11:13 - which is greater than the size of this
11:14 - array it will give you an exception so
11:18 - now for example I will run the
11:21 - program and as soon as I print this it
11:26 - must give the exception like this
11:29 - you see here it's showing
11:32 - troubleshooting tips make sure that the
11:35 - maximum index of the list is less than
11:38 - the
11:39 - size right
11:44 - so whenever you you are using for Loop
11:48 - you need to think about the index of the
11:53 - collection you are using if you are
11:56 - using this string array which have the
11:59 - index of five you cannot go and loop
12:03 - through the this U array and
12:07 - give 10 as an index right if you use
12:11 - here five it will work fine I'll run the
12:15 - program and you see it's working and we
12:18 - are waiting waiting and no exception
12:21 - occurs right so whenever you use this
12:25 - for Loop you need to know the index
12:28 - correctly
12:29 - and whenever you use this for each Loop
12:33 - you don't need to know the index of this
12:37 - array you can just iterate through the
12:41 - collection or this array one by one
12:43 - until that until and unless the end of
12:46 - the array reaches so for example I will
12:49 - increase this array by
12:51 - one okay and this can
12:56 - be some more name and I will change the
12:59 - index by one right
13:03 - six and this will be
13:06 - five so here you don't need to change
13:10 - anything in this for Loop even if you
13:13 - increase the index or decrease the index
13:17 - but here you need to change this value
13:22 - of loop which is the maximum value your
13:26 - Loop will expect or you your Loop will
13:31 - iterate so like this and I will run the
13:34 - program and it will work fine okay so
13:38 - just whenever you want to iterate
13:41 - through a collection or an array or an
13:46 - hash values you need for each Loop okay
13:51 - and whenever you need to use index and
13:55 - you know the index and you want to
13:57 - iterate on the Bas of your index you use
14:01 - for Loop so I hope you understood this
14:05 - basic concept of for and for each Loop
14:08 - and I hope you have enjoyed this video
14:09 - please wait comment and subscribe and
14:11 - bye for now