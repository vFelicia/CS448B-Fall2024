00:00 - hello guys today I'm going to download
00:02 - install and review cine which is a c and
00:05 - C++ IDE from jet brains and why I am
00:10 - excited about this IDE because the
00:13 - company behind uh this IDE which is jet
00:16 - brains is famous for making idees and
00:20 - I'm quite impressed uh with their other
00:23 - idees for uh for example developing Java
00:26 - and other languages so let's see how we
00:29 - can download and install this C
00:32 - lion so you can download and install
00:34 - this uh C lion IDE by just searching for
00:39 - cine C++ and the first link I think uh
00:43 - you will find here is
00:45 - www.jet brains.com
00:49 - SLC and it's not yet fully released it's
00:54 - uh EAP build which is uh Early Access
00:57 - program I believe and I'm going going to
01:00 - download and install and review this EAP
01:04 - build and there is a quick start guide
01:06 - here also and I'm going to refer to get
01:09 - this guide in order to install this okay
01:14 - so I will just go to try EAP build Early
01:18 - Access program you can see here and I'm
01:21 - going to install it for Linux so just
01:25 - click this and I have already downloaded
01:28 - this safe file it's a zip file and it's
01:30 - a it's not uh very big zip file so you
01:34 - can just uh download this ZIP
01:36 - file and I'm going to just see uh the
01:40 - quick start guide here for Linux and
01:44 - other operating system it's a cross
01:46 - platform IDE so you can use it on
01:48 - Windows Mac or Linux and right now I'm
01:51 - using
01:52 - Linux and for Linux it's available for
01:56 - 64-bit operating system so I believe
01:58 - they don't have 30 2 bit support and the
02:02 - requirement for uh the installation is
02:05 - you must have Oracle jdk because uh this
02:09 - IDE is based on Java because uh this
02:14 - company jet Prince is famous for making
02:16 - Java idees and I think they uh for the
02:20 - first time they are trying CN
02:23 - C++ so requirements are open jdk or
02:27 - Oracle Java minimum
02:30 - 1.7 and you also must have GCC or g++
02:35 - which is uh a compiler for uh building
02:39 - our program or C language is also a
02:41 - compiler okay so I think I have both
02:46 - these thing things Java and GCC install
02:49 - in my system if you don't have just
02:51 - install it and just uh read this line
02:54 - cine includes bundled cmake now what is
02:59 - c cake here cake is a CL crossplatform
03:03 - free and open-source software for
03:06 - managing the build processes for
03:09 - software using cross uh or cross
03:12 - compiler independent
03:15 - methods that means uh it's just like uh
03:18 - your make files but it's more advanced
03:22 - and it's a crossplatform uh uh software
03:26 - so uh it includes this C makes to build
03:30 - your programs okay so which is very nice
03:34 - because I have been using the cmake and
03:37 - it's really uh fast uh with cmake to
03:40 - develop your big
03:43 - projects okay so once you have
03:46 - downloaded your uh ZIP file you just
03:49 - need to extract it somewhere I've
03:52 - already extracted uh this uh folder here
03:55 - which is C lion minus
03:58 - 138 196 which is some number so in this
04:03 - folder I have extracted my uh downloaded
04:06 - file and it contains some folder and the
04:11 - folder I'm interested in is this bin
04:14 - folder because here uh there is a file
04:17 - called cline. sh which I'm going to run
04:21 - so what I'm going to do I'm going to
04:23 - just open my terminal I'm going to just
04:25 - go to the
04:27 - place uh which is inside the cine
04:31 - folder and Bin folder okay and then I'm
04:37 - going to start this cline. sh by
04:42 - just running
04:45 - it cine
04:48 - Dosh it will inst instart my
04:53 - IDE by the meantime I will just minimize
04:56 - all the other things which are not
04:58 - required
05:01 - and for the first time it looks like
05:04 - this and which uh is uh looking very
05:08 - neat to me uh I will create a first
05:11 - program and when I am going to create a
05:15 - first program it's giving me this
05:18 - message that is going to create a folder
05:20 - called cine project and I will give the
05:25 - project name as test for example so it's
05:28 - going to create
05:30 - the uh folder called cine project SL
05:34 - test and I will click okay and now I
05:37 - will it will start this project I think
05:44 - continue and the first look is
05:48 - impressive I I'm impressed I must say
05:52 - because I have work with other C++ Ides
05:56 - like QT and lips and see uh code blocks
06:03 - and this looks to me very nice this IDE
06:07 - so as I have already told you that this
06:11 - uh IDE uh uses cmake to build this file
06:16 - so you will be able to see uh our main.
06:19 - CPP in addition we will be able to see
06:23 - uh the cmake file which is inside your
06:26 - project file okay so every uh project is
06:29 - going to have the cmake list file cmak
06:32 - list.txt which is which will help us to
06:36 - make our program okay it's like a make
06:39 - file but it's more
06:41 - advanced okay so what I'm going to do
06:44 - I'm going to just run this sample
06:46 - program first and let's see how the
06:48 - output looks like and output is printed
06:51 - here hello world which is really
06:54 - good and now what I'm going to do I'm
06:59 - going to create a new file for example
07:03 - here I will right click on my projects
07:05 - new file and for example I want to
07:09 - create a file called
07:12 - uh
07:15 - polygon do
07:18 - CPP or polygon do HPP for
07:23 - example and you can see the file is
07:26 - created but it's not included because
07:29 - whenever you want to build your program
07:31 - with cake you need to include this new
07:34 - file to your cake list so I'm going to
07:38 - include
07:40 - it polygon do
07:44 - HPP and once I uh edit this file I will
07:49 - be able to see these two uh options here
07:51 - reload changes or enable auto reload I
07:55 - will just click reload changes but I
07:58 - prefer this option option uh much
08:01 - because whenever you change it will your
08:03 - cmake will automatically reload your um
08:08 - files so once I did this I will be able
08:11 - to see that this is include I think in
08:15 - my list if the spelling is
08:19 - right and spelling is not right okay now
08:23 - I think it will be included reload it
08:26 - once again and now the color changes
08:29 - that means it's
08:30 - included and one more thing I want to do
08:35 - is I want to split my view so that I can
08:38 - view both my files which is
08:43 - um which is main file and my polygon CPP
08:49 - file so I'm going to search for this
08:52 - split
08:53 - window if I can find
08:58 - here
09:05 - okay so I will go to the
09:08 - windows and yeah edit tabs split
09:13 - vertically now I can see this polygon do
09:16 - HPP
09:18 - and so in both the views I can see the
09:22 - same file right and I will check the
09:25 - intelligence now it's really nice I just
09:29 - typed in in it it gives me intellisense
09:33 - include and for example I want to
09:36 - include iio
09:38 - stream and it's really good it's autoc
09:42 - completing and I'm going to create a
09:45 - class for example I will name it
09:50 - as
09:53 - polygon and once I do this it's autoc
09:58 - completing my class class so which is
10:00 - very nice
10:03 - feature and once again it autoc
10:05 - completed and for example what I'm going
10:09 - to do is I will I'm going to declare two
10:15 - variables
10:24 - and with comma height and what I'm going
10:28 - to do is I'm going to check whether it
10:31 - uh generates my code or Constructor or
10:35 - and other things or not automatically so
10:38 - I will click my class and I will go to
10:41 - code
10:42 - maybe and I will say
10:44 - generate it says Constructor so I'm
10:47 - going to con uh generate the
10:51 - Constructor okay so it's gener it has
10:53 - generated The Constructor let's try to
10:57 - generate getter and Setter so I I will
10:59 - just select one
11:00 - parameter
11:02 - generate get a
11:04 - Setter and I will generate get a Setter
11:08 - for both my width and
11:10 - height and it sets so it's really fast
11:14 - to develop your programs like this right
11:18 - for example I will just uh create
11:23 - a function declaration for example void
11:28 - set
11:31 - uh
11:34 - values and
11:37 - in a comma int B and I want
11:43 - to have the definition for this method
11:48 - or function go to code
11:51 - generate and Implement
11:54 - method and it automatically finds your
11:57 - function which you have Define and it's
12:01 - implemented so you can Implement your
12:03 - method like this okay so just search for
12:08 - the short Keys how it's going to you
12:11 - know uh work these short keys because
12:15 - it's really handy to make your
12:18 - programming fast or your project uh
12:21 - development fast right so overall I'm
12:26 - quite impressed with this IDE and I must
12:30 - say I'm going to you know develop some
12:32 - of my project using this IDE so I hope
12:36 - you have enjoyed this video please RIT
12:38 - comment and subscribe and bye for
12:44 - now