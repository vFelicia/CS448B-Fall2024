00:00 - hello guys welcome to the next video on
00:02 - Linux command line tutorial for
00:03 - beginners in the last two videos we have
00:06 - discussed how we can use symbolic
00:09 - permissions in Linux now in this video
00:12 - we will discuss about octal or numerical
00:17 - permissions with the files in Linux
00:20 - so let's get started first of all how we
00:25 - can you know use or what is octal
00:28 - permission so octal permission is a
00:32 - numerical representation of the file
00:36 - permission for example so let me just
00:39 - change the directory to desktop first of
00:42 - all and then we will create a file using
00:47 - touch for example so I will just say
00:50 - file dot txt and our file will be
00:55 - created right and then when we list the
00:58 - permissions of this file so what I can
01:01 - do i can just do LS - l for the file and
01:06 - then when i do this i can see the
01:10 - permissions and this we have seen in the
01:12 - last video so these three things is for
01:17 - the users are the three are for the
01:20 - groups and other three are for the you
01:24 - know others right and then we have these
01:27 - a tree representation which is read
01:30 - permission write permission and the
01:33 - execute permission so let me simplify
01:36 - the you know normal numerical or octal
01:40 - permissions using this concept so what I
01:45 - am going to do is I will just open a
01:48 - normal text file and let's say this is
01:51 - our users and groups and others like
01:56 - these three you know groups users groups
02:01 - and others right and each have its
02:04 - permissions so each have read write and
02:07 - the third command which is
02:11 - execute right so I'll write read and
02:13 - then it has write and for example
02:17 - execute in the same way group also has
02:19 - read and then the right this will be
02:23 - right and execute and other also have
02:27 - read and write and execute right now
02:31 - octal representation can be done
02:34 - something like this so for example if we
02:37 - are you know using binary notation this
02:41 - is 1 this is 1 and this is 1 right and
02:44 - same is for here so this is 1 this is 1
02:48 - and this is 1 and this is 1 this is 1
02:51 - then this is 1 for example right now if
02:54 - we want to provide the permission for a
02:58 - file for the user for example that this
03:02 - will be you know users have all the
03:05 - three permission read write and execute
03:08 - permission so let's start from here so
03:12 - what we do here so this is equal to 1 in
03:16 - binary for example and then this is
03:19 - equal to 2 because you can you know in
03:23 - binary you can just double the when you
03:26 - go left right and then this is equal to
03:30 - 4 right and in you know when you add
03:37 - these three numbers the addition will be
03:41 - 4 plus 2 plus 1 which is equal to 7 so
03:47 - if you want to allow the user to read
03:50 - write and execute a file then you need
03:54 - to give the number notation 7 and this
03:57 - is calculated like this so you just need
04:01 - to for example start from the right and
04:03 - then write here 1 and then make a double
04:08 - of it 2 and 4 for example and then if
04:12 - you want to you know give the right here
04:15 - do it one otherwise if you want don't
04:19 - want to give the permission then do it 0
04:21 - here so for the group for example I
04:24 - just want to give the group only read
04:28 - and execute permission so I will just do
04:31 - right is equal to zero okay so what will
04:35 - be the you know numerical notation for
04:38 - this we will start from the right hand
04:42 - side so the value is 1 here because we
04:46 - want the execute permission the value
04:48 - will be 0 here because we don't want the
04:51 - right permission right so here will be 0
04:54 - instead of 2 and here the value will be
04:58 - 4 because once again we want the
05:01 - permission here and the addition of
05:03 - these value will be for example 4 plus 1
05:08 - is equal to 5 right so whenever you want
05:13 - to give the only read and execute
05:16 - permission then you just need to give
05:20 - the numerical notation of 5 here right
05:23 - and the same you can do here for example
05:26 - you want to just give the read and write
05:29 - permission to the others then what we
05:32 - can do here we can just give 0 here and
05:37 - then we can give 1 here and give 1 here
05:41 - again right and then this notation will
05:45 - be for example 0 this notation will be
05:50 - here so let's write 0 here for example 0
05:56 - and then 1 and then 1 so let me align
06:01 - everything because these things are not
06:04 - aligned properly so something like this
06:07 - so this will be 2 according to this
06:11 - notation right and this will be 4
06:14 - according to our notation here right and
06:17 - the addition of these value will be 6
06:21 - right and so whenever you want to give
06:26 - the read and write permission the
06:29 - notation will be 6 so there is a table
06:32 - for these notation if you want to
06:35 - calculate it's really easy I have
06:37 - this is how you can calculate the value
06:40 - and when you use these number notations
06:44 - frequently you get used to them and then
06:47 - you don't even need to remember them I
06:49 - mean you don't even need to calculate
06:51 - them you can remember them automatically
06:54 - so I have a table for the values so you
06:59 - can see whenever you don't want to give
07:02 - any permission you just give zero if you
07:05 - want to give execute permission you give
07:08 - one if you want to give write permission
07:10 - you give two and then write and execute
07:13 - is three read is four read and execute
07:18 - is five read and write is six and read
07:22 - write execute is seven right so this is
07:25 - a simple table and this is how we can
07:29 - calculate these value right so you can
07:32 - you know calculate all the values using
07:36 - this approach now for example I want to
07:40 - change the permission of this file using
07:44 - number notation then what I can do is I
07:47 - can just do chmod and then I can for
07:51 - example give 0 here for the user zero
07:55 - means no permission right so for the
07:59 - user we are not providing no permission
08:01 - for the group also for example we will
08:03 - provide no permission and for the others
08:06 - also we will provide no permission for
08:08 - example for this file and press enter
08:11 - and the command is successful and let's
08:14 - give the long listing of this file so
08:18 - now nobody have any permission for this
08:22 - file right now for example we want to
08:26 - allow the user to read write and execute
08:30 - write and for the group we just want to
08:36 - give the permission read and execute
08:39 - which is five right so you can just do
08:44 - something like this so just try chmod
08:46 - and for the user we want to give read
08:50 - write and execute and read write and
08:52 - execute the number notation is seven as
08:54 - you can see here right and for the group
08:57 - we want to give five which is read and
09:01 - execute and for example others also we
09:05 - want to give five which is read and
09:07 - execute and the file name and press
09:09 - enter once again do the long listing and
09:11 - now you can see the user have read write
09:16 - and execute the others and the group
09:19 - have read and execute of permissions
09:22 - okay so this is how you can use octal or
09:27 - numerical permissions in Linux I hope
09:30 - you've enjoyed this video please rate
09:31 - comment subscribe and bye for now