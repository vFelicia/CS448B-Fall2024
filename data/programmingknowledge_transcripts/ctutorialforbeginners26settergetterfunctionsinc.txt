00:00 - hello guys welcome once again in the
00:02 - last video I have shown you how to use
00:04 - classes and objects in C++ and I have
00:07 - also shown you how you can access your
00:09 - member variables in your main function
00:11 - using objects now in this video I'm
00:14 - going to show you a good practice to
00:18 - access your member variables in your
00:20 - main function in the last video I have
00:22 - shown you you can use this public access
00:27 - specifier to access functions or
00:31 - variables in your main function it works
00:34 - correctly but it's not a good practice
00:37 - to access your member variable of a
00:40 - class directly in
00:44 - your main function because you always
00:48 - want to protect your variable and you
00:53 - don't want that other user would be able
00:56 - to change these variable content content
01:00 - so now in this video I'm going to show
01:02 - you the concept of Setter and getter
01:04 - functions to access the variable
01:07 - indirectly uh in your main function so I
01:11 - will delete this and this declaration
01:14 - and I have the basic Declaration of this
01:17 - book class and I have the basic
01:20 - Declaration of book object here
01:23 - now in the last video I've shown you how
01:26 - you can use this public access specifier
01:29 - in this video I'm going to show you this
01:34 - private access specifier and what this
01:37 - private means is your whatever you
01:41 - declare under this private access
01:44 - specifier all those member will be
01:47 - private to a class and you cannot use
01:51 - these member variables on member
01:53 - functions outside your class so I will
01:57 - declare a variable
02:00 - called string variable so I will add one
02:03 - more Library
02:06 - called
02:13 - include string okay and this what this
02:17 - string U class will do is it will help
02:22 - us to declare string variables so there
02:26 - is something
02:28 - called
02:32 - string and I will name my string as name
02:37 - so this will be the book name right and
02:41 - this string is just like character array
02:45 - but it is handled more easily or
02:49 - efficiently right so string is nothing
02:52 - but just
02:55 - writing the book name is you can give
03:01 - the value to the string like this is
03:04 - equal to like this okay so string is
03:08 - nothing but the string of the word right
03:13 - now this is our private member of this
03:18 - book class and how can I access this uh
03:22 - name in my member main function because
03:26 - this is a private and I cannot use this
03:28 - name variable outside my class I have
03:30 - already told you so let me declare the
03:35 - setter and getter function for it to
03:37 - access the name variable indirectly so
03:42 - what I will do is I
03:44 - will declare a declare a function called
03:48 - void
03:50 - set
03:52 - name and in here I will pass this
03:57 - string variable and I will call it for
04:01 - example X
04:03 - right and what I'm going to do here is I
04:09 - will say my name which is my
04:12 - private member of a class is equal to X
04:18 - so what I'm doing is indirectly
04:21 - copying the whatever I
04:25 - will I will give here as a set variable
04:29 - will just copy the content of x to my
04:32 - name right and there is something called
04:35 - get function so I will write
04:38 - get name and this cat name will return
04:43 - the value of name okay so this will
04:47 - return the name so name data type is
04:51 - string so it will return string and it's
04:56 - just returning this name so just
05:02 - write return
05:05 - name okay the this these two are called
05:09 - setting and getting of your member
05:12 - variable set a getter function in easy
05:16 - words and what these two functions does
05:19 - is it enables us to access the content
05:23 - of your private member name using these
05:28 - public function set at and get names now
05:32 - I will show you how you can use the set
05:35 - and get names in your
05:37 - main
05:38 - function so you already have this object
05:41 - called book one which we derived from
05:44 - book class right and we can call the set
05:48 - function so I will say book
05:52 - one dot set
05:56 - name and inside this set name we can set
05:59 - any name to our book so I will say set
06:03 - name to the book
06:09 - C++ tutorials okay and now I want to
06:15 - access so what this does is when I
06:18 - whenever I pass this string to this set
06:21 - function it has this uh string here and
06:26 - it just copies this string to your
06:30 - name variable which is my private
06:32 - variable right now
06:34 - private is assign the value C++ tutorial
06:38 - indirectly right and now in order to get
06:41 - or in order to print this value what I
06:43 - can do is I can use book
06:49 - one. get name and what this get name
06:53 - does is it just return the value of name
06:57 - so we are indirectly accessing the value
06:59 - of name and returning it so let's print
07:03 - this value I will write C
07:06 - out and I will just copy this function
07:11 - here and paste it here because it's
07:13 - returning the string right so it will
07:17 - return the value we have assigned here
07:22 - and I will
07:24 - say and L and when I compile this
07:28 - program
07:32 - it will be
07:35 - compiled and now we are going to run
07:37 - this program and we see that we are able
07:41 - to
07:42 - access this name variable using this
07:45 - book. getet name so this is the good
07:49 - practice to use or to access private
07:53 - member variables of class using get and
07:57 - set functions
08:00 - so just always uh remember this practice
08:03 - whenever you need to declare variable
08:06 - inside
08:07 - class try making them private right as
08:12 - far as possible try always declare the
08:15 - member variable private and try to
08:18 - access these variable using set and get
08:20 - class so you will never mess up uh in
08:26 - C++ I hope you have enjoyed this video
08:28 - please writ comment And subscribe and
08:30 - bye for now