00:01 - Holloway's welcome to programming
00:03 - knowledge this is the first video of geo
00:06 - programming using kata in Python so in
00:10 - this video we'll be learning about a
00:12 - brief introduction to the subject of
00:14 - graphical user interface programming in
00:16 - Python so when it comes to your
00:19 - programming in Python kinder is a
00:20 - default toolkit available or a default
00:23 - library available to build some robust
00:26 - small-scale applications in Python so
00:29 - for example on creating a registration
00:32 - form and attaching it with a database
00:34 - those kind of applications so Hinda is
00:39 - not the latest and the greatest but
00:41 - there are other options too like pi qt5
00:44 - and double x by thorn for creating fewer
00:47 - applications in Python but when it comes
00:49 - to the simplicity and the ease of use or
00:54 - kinto is far more easier to use and
00:58 - create a rapid applications
01:01 - so there are multiple bindings available
01:04 - for kinto for commercial as well as on
01:09 - small small scale applications so this
01:13 - is a overview enter introduction to
01:17 - inter parking programming and I'll just
01:19 - show you a small example or how to
01:22 - create a simple registration form which
01:26 - will be showing the later videos in
01:29 - kinder so this is the basic structure of
01:34 - how to create a basic window using the
01:38 - kinder module so there are multiple ways
01:41 - of importing kinder so as deep as kinder
01:45 - comes in it comes in default like and
01:48 - default library you don't have to go to
01:50 - the process of installing firepit so
01:53 - there are multiple ways of importing
01:55 - into one of them is input inter that's
01:59 - it and the second one is from printer
02:02 - input the widgets you want for example
02:05 - if you want a entry visit or a label or
02:08 - something like button you need to
02:10 - specify that besides import and the last
02:13 - one is in both inter star so when it
02:16 - comes to star it will import every
02:18 - widgets within the window library so
02:22 - from kinder import label so here they
02:25 - are importing label with within the
02:28 - inter window so initially we need to
02:32 - take a variable for example a bruit
02:35 - variable which is inherited in each and
02:38 - every visit we create within the kinder
02:41 - or window out in the application so here
02:45 - we are taking for example a route on a
02:48 - top application and story on TK e
02:52 - capital T and K in brackets so that our
02:58 - route variable will be headed in every
03:02 - which is we create within the kinder
03:04 - window for example if you are creating
03:07 - route variable and storing the kinder
03:10 - object within that variable we need to
03:13 - inherit over here for
03:15 - humble here the label none here we are
03:18 - inheriting none that is the root in our
03:22 - case and we are naming the label as
03:25 - hollow world so here is the example as
03:28 - you can see hollow wall is a table if
03:30 - you don't use any kind of placement
03:33 - argument such as back over here
03:35 - so PAC is one of the in Bill method for
03:39 - placing that widget within the gy window
03:43 - boy there are other methods too such as
03:45 - place and grid so what that does is that
03:49 - that cool if it doesn't take any
03:52 - argument it will take the default
03:55 - argument center and place a widget in
03:57 - the center and when it comes to place
04:00 - and grid place is based on XY
04:04 - coordinates and K is based on column
04:09 - with rows and columns so it will be
04:11 - covered in further videos and this
04:14 - widget main loop so when executing the
04:17 - printer and creating the window you need
04:21 - it is necessary that to typing main loop
04:25 - to execute that window in a proper
04:28 - manner so these are the events and
04:32 - bindings for mouse and key events when
04:36 - it comes to Mouse based events such as
04:39 - on clicking a button or entering
04:41 - something into an entry field you can be
04:44 - used is events with the function which
04:49 - you need to get executed and when it
04:52 - comes to keyboard events these are the
04:54 - events bottom over here return is for
04:57 - enter and key shift up etcetera so this
05:01 - will be covered in the later videos and
05:04 - this is the event handling or when it
05:07 - comes to you and handling a small
05:09 - example such as if you want to if there
05:12 - is a window created with a button which
05:14 - say set quit for example if you quit
05:16 - that if you click on that button quit
05:19 - there is a function called s quit which
05:21 - is used for quitting the or exiting from
05:24 - a kinter window so if you click that
05:26 - button
05:27 - in the kinto window we'll stop executing
05:30 - and that main loop will be ended so this
05:33 - are the binding functionality which you
05:36 - can use in kinder which will be also
05:39 - covered in the further videos so these
05:42 - are the some examples of widgets which
05:44 - you can use within the kinder
05:46 - applications like example canvas check
05:49 - buttons radio buttons frame menu buttons
05:52 - panels cava etc so this is the basic
05:56 - out-group of a widget if you create it
06:00 - in kinder so let me just show you a
06:03 - small form which are three already
06:06 - created so as you can see over here this
06:09 - is small registration forms with
06:11 - multiple which is such as label entry
06:14 - field this is the radio buttons list box
06:21 - and check box and this is the button
06:24 - submit so in further videos we'll be
06:27 - looking at even handling in more depth
06:29 - when it comes to Mouse events such as if
06:32 - you click some I click the button submit
06:35 - how it interacts with the database and
06:38 - etcetera so this is how you can create a
06:41 - jungle widget application in kinter so
06:44 - some of the advantages of winter is that
06:47 - it is accessible portable and available
06:51 - as you can use those applications in
06:54 - almost any operating system available
06:57 - and the approach of creating the
07:01 - application in kinder is more in a
07:03 - layered format for example initially you
07:06 - create a route that is a parent object
07:09 - of winter then creating the widgets and
07:12 - ending it to the main loop etcetera
07:16 - the some of the drawbacks of kinder is
07:19 - that when it comes to handling
07:21 - multi-threaded applications such as when
07:23 - you want to execute something or example
07:27 - if won't execute two events at the same
07:31 - time it shows an error and it doesn't
07:35 - handle those kind of or situations very
07:38 - gracefully and when it comes to building
07:42 - large applications it takes time to
07:45 - execute so it is a bit slow so this is
07:52 - the link for downloading the Python with
07:55 - a little abortion that is sequence 1.2
07:59 - it is a precursor and in the next video
08:02 - we'll be looking at how to set up inter
08:05 - in pycharm and how to generally create a
08:10 - window window further videos so thank
08:13 - you hello guys welcome to programming
08:18 - knowledge
08:19 - so this is a second part of the series
08:22 - with GUI development using kinder in
08:25 - Python so in this video I'll be showing
08:28 - you how to set up the PI Chun ID so
08:31 - there we are multiple ID is present in
08:34 - Python like visual code and ideally but
08:38 - the Python is much more preferable so
08:41 - I'll just show the steps how to download
08:43 - and install pi some ID so open up your
08:46 - browser and typing PyCharm click on to
08:53 - the first link
08:57 - so there are two versions available the
09:01 - professional one and the community one
09:03 - so when it comes to community it is free
09:05 - it is lightweight and it comes with all
09:08 - the basic functionality which a
09:10 - developer requires but when it comes to
09:12 - professional one or you get more
09:14 - features such as database connectivity
09:17 - and more AI completion of the code and
09:22 - etc so it is a paid one but the
09:24 - community one is a free one so go and
09:26 - download click on to community download
09:30 - and of PyCharm as it is free and you can
09:34 - build the basic application using it so
09:37 - click as we have already downloaded the
09:40 - Python installer
09:43 - I'll just show you the installation
09:45 - process of it this is the XC file
09:49 - so click on the next next
09:56 - so then 3/8 provided 64-bit and
10:01 - association with this click on to this
10:05 - safe boxes
10:08 - and go to next install
10:15 - so the installation procedure is
10:18 - completed now click on to run by Chum
10:22 - and finish
10:25 - you
10:29 - northern port anything
10:34 - so this is the first window and you come
10:40 - to the light or based on your preference
10:42 - click on to which way in which one you
10:44 - want
10:46 - we chose plug-in based on so start so
10:53 - based on your preference you can
10:54 - download or unable any of this and but
10:58 - I'll just choose on to the start using
11:01 - PyCharm
11:07 - so this is the part two where the
11:11 - installation procedure is Creon
11:13 - completed and from here now you can
11:16 - proceed on to how are creating your
11:18 - project opening and the pre-existed file
11:21 - within your computer and so on so after
11:27 - doing the installation process we get
11:29 - this window where it shows that create a
11:31 - new project and open an existing project
11:34 - so that will click on to create a new
11:38 - project
11:41 - main the given project as demo so it
11:51 - will create its own virtual environment
11:53 - of the entire project it will take a
11:57 - second or two
12:00 - you
12:04 - you
12:06 - you
12:15 - so the virtual environment is being
12:19 - created for the project demo now
12:22 - right-click on to the demo project file
12:26 - folder sorry go to create file title
12:31 - file name it as demo or anything okay
12:40 - so I've already
12:43 - configure the settings for the Python
12:46 - all
12:48 - I will show you simple program
12:57 - and demo pilot so as you can see the
13:06 - output demo is being sold so the virtual
13:09 - environment and the pi chomps had setup
13:12 - has been created so if if there is any
13:14 - issue in configuring the Python
13:19 - environment you can just go over here
13:22 - and settings
13:26 - No
13:27 - project demo the interpreter this will
13:32 - be automatically detected when the
13:35 - Python is been set up you don't have to
13:39 - worry about anything else it will
13:42 - automatically turn third default ID
13:44 - which is the Python present in your
13:46 - system so click on - ok because it is
13:52 - already set up with only two answer and
13:57 - here will be the file name or you can
13:59 - directly click over here and then demo
14:02 - and here's output so this this video
14:09 - showed us how we can set up by Chum
14:12 - environment and how we can create a
14:14 - project and run basic party program in
14:18 - it so in the next video we'll see about
14:22 - how we can create the basic UI and a
14:25 - button
14:26 - that is a widget in Python and further
14:30 - on will move you do more depth of how we
14:33 - can create a more robust GYN inter
14:38 - so thank you hello guys welcome to
14:42 - programming knowledge in the previous
14:44 - video we learned about how to set up the
14:46 - possum ID and ensure that how we can
14:49 - learn Python programs into it and we did
14:52 - learn a simple print method and it ran
14:56 - successfully so in this video we'll be
14:58 - learning about more into or kinter how
15:01 - to create a basic window to add a
15:04 - resizable option creating labels and
15:08 - creating a basic button into a canter
15:11 - window so let's begin so open up the IDE
15:14 - and typing from kinder import star then
15:23 - we will create a basic variable for the
15:26 - kinder object that is p k and save that
15:33 - TK into the window variable which will
15:36 - be used in every widget which will be
15:38 - which will be created in the kinder
15:43 - window so let's create an so in here
15:46 - we'll provide a geometric option for
15:49 - resizing the window so window dot
15:53 - geometry and oh i 302 300 this is how
16:01 - you provide a a sizeable window option
16:04 - for a hint of inter window let's provide
16:08 - it title to it so these are the basic
16:12 - angle attributes which you can use or
16:15 - import for performing certain tasks so
16:19 - for that we will provide welcome and
16:27 - let's run the window by calling the main
16:30 - loop
16:36 - so this is the code for creating a basic
16:39 - window and get a title so let's run so
16:47 - as you can see this is the size
16:49 - generated into 300 and the title is
16:52 - welcome so let's get into creating
16:53 - widgets that are labels and buttons so
16:57 - label one is a variable name where you
17:03 - can store the label which you want label
17:08 - is a kind of in build method in kinter
17:12 - so you can just provide label as a
17:15 - widget name and the window is the first
17:18 - argument which you pass in the label
17:22 - which you want to create so in whatever
17:26 - widget widgets you create in kinto you
17:29 - need to provide the kinder window widget
17:34 - as a first argument in that particular
17:39 - widget so window and according a text
17:46 - welcome to Pinto and let's provide some
17:57 - fonts font is equal to area comma J for
18:12 - adding some size option that is 16 and
18:17 - bold to compose also italic and
18:26 - yes you can pack it over here no back
18:32 - cetera so this is how you can create a
18:36 - basic label in inter and we can run this
18:42 - so as you can see this how you can
18:44 - create a label into the window and
18:49 - provide certain font styling that is the
18:52 - aerial the font style the size and bold
18:56 - italic whatever you want and you can
18:59 - also provide foreground and background
19:01 - to it so we just pour it over here FG is
19:07 - equal to blue and VG that is the
19:16 - background is equal to back down
19:21 - consider the CLO so this is how you can
19:29 - provide a foreground and a background to
19:32 - the label so let's see wait a minute Qi
19:42 - and Luo sorry it should be notes and
19:57 - let's rerun so as you
20:01 - see this is how you can provide a
20:03 - foreground and a background to the label
20:07 - which you have provided into the window
20:09 - so this is the bluest of foreground and
20:13 - background is of yellow now you can
20:17 - provide something all as a border that
20:20 - is a brief I'll just show you
20:24 - relief is equal to solid so these are
20:37 - the some of the styling options you can
20:39 - provide it provide to a label let's read
20:45 - on this so this how
20:49 - you can provide a solid solid option or
20:55 - a boundary to the label which you have
20:58 - created it looks pretty good and so now
21:03 - coming now we come to the positioning
21:06 - the label so oh here pack is to
21:11 - basically default it takes a default as
21:13 - the top of the window so there that is
21:18 - pack that is great there is place so
21:23 - places something more reliable so this
21:27 - place has two arguments that is x and y
21:31 - where you will go out X is equal to so
21:35 - it basically works on the coordination
21:37 - system X and y axis so X is equal to 110
21:44 - and Y is equal to 110 as well so let's
21:56 - see you where it is placed
22:03 - so it went outside the window no problem
22:09 - so this is how you
22:10 - position the label as well so let's
22:16 - reduce the to like or reduce the font
22:22 - size 16 make it as well and provide it 1
22:30 - 1 0 and rerun it so the 4
22:40 - reduce so this how you can basically
22:43 - position the label by place and back and
22:47 - etc now let's see the option of back
22:51 - what are the options provided within
22:54 - pack so I'll just slow this down and
22:57 - type it as the label one talk back so
23:03 - that different options provided in fact
23:06 - as well like Phil how is equal to both
23:11 - so both here determines that X&Y both
23:16 - are occupied entirely and will towards
23:21 - paired Y is equal to 2 and X sorry X is
23:29 - equal to 2 and let's run so this is
23:38 - something is what we get when we use
23:42 - this fill option we can also use ex pon
23:47 - true these are certain options you can
23:50 - use for styling sorry X Pond is equal to
23:57 - true let's freedom this so
24:07 - see this entirely occupied with the
24:11 - label so this these are certain options
24:15 - you can use while creating a application
24:19 - the most preferable one is the place as
24:24 - you can place the widget wherever you
24:27 - want and it is more configurable so I'll
24:32 - stick on to X is equal to hundred and
24:37 - ten and Y is equal to Y is equal to nine
24:46 - piece 80 will add it as 80 on that so it
24:57 - is something which is more preferable so
24:59 - use place there is also grid and column
25:03 - options such as the grid whose o is
25:10 - equal to 1 and
25:13 - [Music]
25:19 - so this is how you can provide
25:23 - and column
25:28 - is equal to one so let's run this
25:33 - so it went they based on the rows and
25:37 - columns
25:39 - position so this is not more preferable
25:43 - let's do it as PAC so to be in center
25:52 - on it so this looks more decent and
25:59 - let's jump onto the button part so
26:01 - create a variable for button
26:06 - but n1 is equal to
26:11 - button over the argument window toward a
26:17 - text
26:20 - on demo and going to add the styling
26:27 - options over here
26:35 - you
26:38 - copy
26:40 - the stallion auctions are almost
26:42 - so you just need to copy it
26:47 - and let's keep the foreground as white
26:55 - and background as
27:04 - and let's provide this solid and remove
27:08 - the code so there are certain options
27:10 - I'll just mention it over here so which
27:15 - is one of them and place the button dot
27:23 - place
27:25 - you
27:29 - X is equal to 110 comma y is equal to 11
27:33 - 10 and rerun
27:39 - so as you can see
27:43 - a button is created
27:48 - so I'll just show you the more options
27:50 - those are this commented over here
27:56 - you
28:01 - you
28:02 - blue comma frigid one
28:12 - [Music]
28:15 - raised for these other options you can
28:20 - provide over here in relief or relief
28:23 - option so I'll just pour this raised
28:25 - over here and let's see what is output
28:31 - you
28:33 - you
28:37 - so as certain changes made within the
28:40 - button some styling within it
28:45 - you
28:47 - let's go elgu let's see how it can
28:55 - we've done this
29:00 - the button has
29:04 - the properties of the button has been
29:06 - changed a bit so there is not much of a
29:09 - change so basically this is how you can
29:12 - create a label a button and provide some
29:16 - styling to it so this is the code for it
29:22 - as well as per your preference you can
29:25 - provide the styling options to it and
29:28 - this is it for it this video guys
29:32 - in the next video we'll look into more
29:36 - options like labeling and move on to the
29:39 - registration part so
29:43 - thank you hello guys welcome to
29:47 - programming knowledge in the previous
29:50 - video we learned about the basics of how
29:52 - to resize a window how to create a label
29:55 - widget and a basic button so in this
29:59 - video we'll be moving on to creating a
30:02 - symbol on the station form this is the
30:06 - first video of it and we'll begin with
30:10 - it
30:10 - so this is the this from the previous
30:13 - video so this will be a basic um basic
30:16 - code required for a basic window so
30:21 - let's change the title registration form
30:28 - form okay
30:30 - let's resize it 500 into 500 and first
30:43 - of all we'll provide a function to it so
30:47 - function print and we'll just print
30:59 - something into the console and one
31:12 - another function for creating out of the
31:14 - window so a fine exit one and
31:24 - we'll be using the exit method so these
31:30 - are the two functions which will be
31:31 - calling when we click a particular
31:33 - button within the our window which will
31:36 - be creating that is the login and exit
31:41 - option so let's move on to the GUI part
31:44 - so first of all we will create a label
31:49 - that is label 1 is equal to label over
32:05 - the argument window comma text is equal
32:14 - to first name then we'll fight although
32:27 - first name it will be registration form
32:35 - it will be like a heading kind of thing
32:45 - then we will provide some styling to it
32:49 - till leaf is equal to solid comma with
33:01 - option is equal to 2000 ma toward some
33:08 - font is equal to area
33:21 - 19 comma and bold okay now we'll use the
33:32 - place dot place X is equal to 90 and y
33:46 - is equal to 53 now we will create
33:59 - another label label 2 is equal to we
34:06 - just copied from here and we just change
34:24 - the text to the first name and we'll
34:35 - just change
34:37 - sighs it is 10 and we will just remove
34:47 - this aerial I'll just keep it no problem
34:51 - then label to dot place X is equal to 80
35:02 - and y is equal to 130 the positioning is
35:10 - actually depends upon the or user
35:13 - preference so change it as your
35:15 - requirement I will just use another
35:18 - label that is for the last name copy
35:22 - this entire thing and paste it over you
35:25 - and this name that variable s33 it's
35:32 - change over here to say it has last name
35:38 - solid with Tony Coyle for this so change
35:41 - or remove this solid for both of these
35:44 - labels so now let's see how it looks
36:04 - so as
36:06 - you can see this is a basic so the
36:08 - spelling is not always changeable real
36:10 - distraction stration now last name okay
36:20 - so let's see it is forever so for the
36:33 - first name we use it as one also e for
36:39 - the last main use as 180
36:44 - let's check this again so as you can see
36:48 - first name and and the last name -
36:50 - labels are created t9 to be more linear
37:05 - so these are two labels now just let's
37:07 - create two buttons so B or just name it
37:23 - as B 1 is equal to button you will know
37:31 - the first argument comma the text which
37:35 - will need that is logging and over
37:45 - to it with is equal to 12 and toward
38:01 - some program and back down background is
38:05 - equal to round and foreground is equal
38:13 - to white and we'll just mention a new
38:24 - argument that is command to call the
38:26 - function which we have already created
38:28 - over here so fix this all this function
38:32 - that is print and exit will be called in
38:35 - this button method so what command is
38:39 - equal to so we are what we are looking
38:43 - over here is that we you want to now
38:45 - print something in the console that is
38:48 - over here by clicking on to the login
38:51 - button so just place the print method
38:56 - that is like this and this place the
39:02 - button somewhere there be one dot place
39:13 - that is X is equal to 150 comma Y is
39:19 - equal to 1 sorry 380 now 380 will be
39:24 - good and let's create another button for
39:27 - exit just copy this one and paste rename
39:34 - it as 2 and just change
39:40 - coordinates of it so for you we'll go
39:43 - add X as 280 so what will not overlap 80
39:49 - and change the caramel over here too and
39:54 - mention it as exit 1 so you don't need
40:02 - to provide this power brackets when you
40:05 - mention this commands into the butter so
40:10 - this is so cool and let's see what is
40:14 - the output so as you can see lake first
40:26 - name and the last name are the two
40:29 - labels and here we have created login
40:32 - and so this is also log n so let me just
40:35 - change this and now it has quit quit so
40:54 - let's fill on this so now it is correct
40:59 - so these are the two versions login and
41:01 - quit and let's see what actually happens
41:05 - when this button outlet so when I click
41:10 - login
41:11 - the console comes with an output that is
41:15 - demo kwinto so the the code was correct
41:19 - and let's quit more based on to the quit
41:22 - so the window is in exited so the
41:25 - purpose of this video is fulfilled and
41:29 - so in this video we learned about how to
41:32 - create a basic structure of a
41:36 - registration form or with a banner or
41:39 - labels and two buttons so
41:43 - [Music]
41:45 - thank you hallo guys are welcome to
41:49 - programming knowledge in the previous
41:51 - video we learned about the creating a
41:54 - basic window grow adding labels that is
41:56 - the first name and the last name and
41:58 - providing two buttons to a specific
42:01 - window so on move on further in this
42:05 - video we'll be learning about how to
42:07 - provide entry widgets to a window that
42:10 - is for the first name last name and also
42:13 - we'll be including on two more label
42:16 - stat is the date of birth digit label
42:19 - and the country and the country will be
42:22 - a specifically a combo box so it dropped
42:24 - down this kind of thing so let's begin
42:28 - so and also we'll see how you can add an
42:35 - image to a painter window using the
42:38 - library pillow so follow with me and
42:45 - initially you will have to install if
42:49 - you don't have below that is a image
42:51 - processing library in Python so follow
42:56 - our from PIL import images
43:10 - comma image TK so in Python now you can
43:20 - use image in a label using this specific
43:26 - format sorry means right and common
43:36 - sorry okay so for installing
43:39 - hello you just need to type in pip
43:43 - install below that's it
43:50 - so on this library pillow is used for
43:54 - image adding an image into a kinto
43:56 - window so
43:58 - is how you can install pip install a
44:04 - pillow in Python so at this and now you
44:09 - just have to use a variable that is
44:14 - image or you can say that image is equal
44:18 - to let's say it as image dot open so
44:26 - here we are specifying the part of an
44:30 - image that which we are going to be used
44:32 - in the kink of window so bracket and
44:39 - photo is equal to image P K dot o go and
44:57 - image so here we are passing this
45:03 - particular variable that is image in
45:05 - this argument so now we'll be specifying
45:11 - the image path so for that we are taking
45:15 - an image that is a PNG file so copy this
45:19 - path and provide it over here as an
45:26 - argument
45:30 - /so or you can just create a folder and
45:40 - add within that in the folder with the
45:44 - antenna is in that folder so to be easy
45:46 - addition just you have to mention the
45:49 - image name with the file extension and
46:04 - toward the name ping-mei what is the
46:11 - name I guess female or PNG right so p.m.
46:14 - in male dot PNG and close to that it so
46:25 - this is how you can to mention all
46:28 - mention a part of an image into a
46:31 - variable and passing it it is passing
46:37 - this as an argument in this variable
46:39 - photo right now we'll be taking a
46:43 - variable that is for a label so lab is
46:52 - equal to the label and image is equal to
47:00 - the photo and we'll be using back or
47:08 - keeping keeping it in the center sorry
47:18 - yeah so this is how you can place an
47:24 - image put in a kinder window so let's
47:27 - see what is the output so it is cording
47:36 - and error in telling it tells okay okay
47:43 - so it is oh the error over here is just
47:46 - photo image so you just need to cover
47:49 - Toto image so it isn't like an inbuild
47:51 - method between two for passing an image
47:55 - into a variable so let's run this so as
48:00 - you can see this is the image which we
48:05 - are using and passing it into this
48:09 - particular variable so this is how you
48:11 - using image within ik in the window you
48:14 - are wire the library pillow PIL so now
48:20 - coming on to the widgets introverted so
48:23 - we'll be using basically who enter
48:29 - widgets and one combo box so let's dive
48:33 - into it so entry and let's go 1 is equal
48:45 - to entry ma root and providing a text
48:57 - variable so I'll just show you what is
49:00 - the use of that variable basically and
49:04 - and this provide a place to it so unless
49:11 - Co one dot place and X is equal to 4 it
49:20 - has to 40 and y is equal to 42 so let's
49:29 - see what is the output so FM is not
49:35 - actually mentioned so what is FN over
49:40 - here so f and over here is something
49:43 - called as a variable useful or fetching
49:46 - out the details from it text widget
49:49 - sorry an entry visit so just mention FN
49:58 - is equal to a string variable string wah
50:02 - close so now let's try and see so you
50:08 - can see this is an intermediate with a
50:11 - text variable FN right so what this
50:17 - string variable will do is that it will
50:19 - fetch the input given by a user for
50:24 - example
50:25 - I'm tight having some name that is demo
50:29 - so what the variable effing will do is
50:33 - that it will take protection a demo and
50:36 - use it somewhere when when it is
50:39 - required so do be more clear then I'll
50:43 - just go through the following so now
50:48 - I'll be using this in cleavage it for to
50:51 - more of one more I guess ok so just copy
50:56 - down this copy and go out the same for
51:05 - the last change the value that is two
51:10 - and to change the position to so for
51:16 - entry to it will be 240 and 282 right so
51:27 - let's see the value for this is also it
51:34 - and for the last name will be taking as
51:39 - variable Ln and same like we did for the
51:45 - first name
51:46 - we'll take Ln is equal to string one
51:52 - right okay now now be using a combo box
52:02 - so just diving to the so now I will show
52:09 - the output and we get so one more entry
52:14 - free will need that is for the date of
52:16 - birth right so let's make an odd entry
52:18 - field copy that one and paste it below
52:26 - this tree name it
52:34 - change the position that is to 320 right
52:43 - read on it and see what is the output so
52:48 - it is it looks good and now I use a
52:53 - combo box so I just show you how you can
52:56 - use one right and also provide a string
53:00 - variable like we did over here so for
53:03 - the date of birth you are using t.o.p
53:08 - right the variable and just mention it
53:13 - over here the d OB r is equal to string
53:19 - one right okay so now we'll be getting
53:33 - into the combo box right okay so for a
53:44 - combo box
53:45 - first of all just create a list so here
53:48 - we need a list of countries right so for
53:52 - that just create a list of countries
53:54 - that is list 1 is equal to ona pal c'mon
54:10 - India those are strings so comma Canada
54:25 - [Music]
54:28 - okay so this is the list of countries
54:30 - and the second procedure is chopped down
54:36 - so here we are taking this o variable
54:39 - drop list is equal to so the in will
54:44 - method for all the in Bill
54:46 - argument for creating a drop-down list
54:48 - or a combo box is option menu right and
54:58 - same procedure root comma the very
55:03 - variable name comma and the list so here
55:07 - we are looking to the entire list so
55:11 - star sorry
55:15 - list one okay now drop list or take it
55:25 - as a dot set so we really something like
55:28 - that let me it's like a placeholder for
55:31 - the widget right so using a second
55:36 - select country and just go add a
55:42 - position to it list dot config and
56:05 - provide a place which is equal to 230
56:19 - and y is equal to 378 so let's see what
56:34 - is the output so before that we'll just
56:38 - create the same for string 1 is equal to
56:42 - string variable okay save it and run so
56:50 - you can see this is the output a
56:55 - drop-down or a combo list looking
56:59 - through the list
57:00 - the disturbed list - one may fall in
57:02 - there you can add as per your preference
57:04 - and provide for position so this is
57:07 - actually method of creating a combo box
57:15 - in kinder it top down list and tour D a
57:21 - placeholder for it okay so now what
57:26 - we'll do is that we'll be using this
57:31 - variables which we are creating over
57:34 - here that is okay for DOP and now 1 for
57:40 - 1 is equal to string variable right
57:49 - don't need to mention it twice but it
57:53 - loops decent so define provide the name
58:03 - friend
58:10 - so take a variable first for getting the
58:15 - input from the first entry widget that
58:18 - is for the first name FN dot get now
58:31 - we'll take second for the last name Ln
58:35 - not get and for where or the DOB date of
58:44 - birth is the OB just nimittas different
58:53 - with dot get okay then towards bad one
58:59 - for another variable and we'll cord well
59:02 - not get
59:05 - okay now we'll print the values let's
59:11 - print using a strings over here so if
59:15 - you're familiar with that it's good full
59:21 - name is the first and second right
59:38 - similarly we'll do this for so let's
59:50 - come over here and b.o.b 1 bar 1 your
60:10 - country and your age okay so this is a
60:29 - function that which we have created to
60:30 - print the things from the widget to a
60:32 - poopa to this console right
60:35 - so let's see whether it works or not
60:38 - we'll be using this particular function
60:42 - in this button so comma command is equal
60:52 - to print so let's see whether it works
60:59 - or not so I guess there is no errors but
61:05 - let's see whether it prints or not demo
61:11 - test
61:13 - quite a date of birth this is some
61:18 - random digit so don't worry about it
61:23 - providing India and fit to the signup
61:28 - button let's see what is the output so
61:32 - the code works so whatever we type think
61:37 - of widgets that is a demo test the date
61:40 - of birth and the country is printed over
61:45 - here so your full name is demo test so
61:47 - it is concatenating the first name and
61:50 - the last name your age is this as we
61:53 - typed in and your country is India so
61:56 - this is how you can use this
62:01 - intermediates to print out things into
62:05 - the console or you can give me use it in
62:07 - the Tait database right and yeah so this
62:17 - is the output I shown over here and this
62:23 - is how you can use an image into a Pinto
62:28 - window this is a method and that's it
62:33 - for this video guys in the second video
62:36 - we'll be learning more about different
62:39 - widgets like checkbox and radio buttons
62:41 - so this is output for this video and
62:45 - thanks for watching
62:49 - hello guys welcome to programming
62:52 - knowledge in the previous video we
62:54 - learned about how to create a basic
62:57 - window and providing image to it
63:00 - providing multiple widgets that is and
63:02 - combo box in Turbots labels and buttons
63:04 - etc so I'll show the output of it and
63:07 - we'll move on to the next one so this
63:10 - what we have looked in the previous
63:12 - video so if you are not familiar with it
63:15 - go ahead and check that out first or
63:17 - else you'll be lost so in this video
63:21 - we'll be looking into checkboxes radio
63:23 - buttons and
63:25 - the kingdom messagebox so let's dive
63:29 - into it
63:30 - so from message box we'll just type in
63:33 - or kinto sorry mm import kinder message
63:47 - box one minute okay so kinder dot
63:54 - message box so it appeared and what will
64:00 - be two hours okay so this is how you can
64:02 - import a message box and let's create
64:08 - some check boxes and radio buttons right
64:10 - so for that you will have to create two
64:13 - more labels that is for gender and the
64:20 - language so we just dive into it one
64:24 - minute so so for the label forth we'll
64:29 - be using
64:30 - okay we'll just type in over here so use
64:35 - this label copy and paste and rename it
64:46 - as a programming language language and
64:57 - place it somewhere like around 95 and 4
65:04 - 2 ND d right now we'll be using another
65:10 - label so paste it that again and we'll
65:14 - be using as a gender for radio buttons
65:19 - and we'll also place that somewhere
65:25 - different so 459 maybe and okay so let's
65:34 - see what is the output
65:37 - okay so it is a bit messed over here so
65:41 - as you can see the buttons are
65:45 - overlapping okay so we look into that
65:49 - first so what will over here is that
65:54 - we'll be changing the position of the
65:56 - button so we'll just move down and
66:04 - change the position of the buttons so
66:08 - we'll just change 5 1 5 that is 130 and
66:17 - [Music]
66:21 - 5 1 5 and do 80
66:24 - I guess this should work so now the
66:30 - buttons have gone a bit down and we'll
66:33 - have to arrange the programming language
66:36 - labels okay so on the label okay for the
66:43 - programming language okay so 95 lightly
66:47 - we'll just change it around how about 85
66:54 - maybe I guess so
66:56 - let's check 87 and let's read on this so
67:03 - as you can see it is a bit aligned but
67:07 - we have to place it into the perfect
67:09 - position so let's check Katie okay now
67:17 - it looks a bit better so okay so labels
67:21 - are done and the buttons are placed at a
67:25 - good position so let's dive into
67:28 - creating those widgets right so for
67:32 - creating widgets create a variable C 1
67:35 - is equal to now the check button method
67:42 - of kinter root
67:48 - , text is equal to avoid Java , the
68:02 - variable net which we'll be using is
68:07 - equal to C plus c1 so for the check
68:11 - button one right and this goes c1 being
68:18 - more specific it is good or else it can
68:22 - get a bit messed up dot place so place X
68:32 - is equal to 235 and y is equal to on to
68:42 - 420 right okay let's see whether it
68:45 - works or not save and rerun this so I
68:54 - guess there is no outputs you know I
68:56 - don't know what is the issue with this
69:01 - okay so there is some some error so the
69:05 - way table c1 is showing an error okay so
69:09 - as we have done before just mention it
69:12 - over here so where underscore c1 is
69:22 - equal to a string where right now it
69:27 - will go I guess okay so as you can see
69:30 - this is a checkbox for the Java okay now
69:38 - we'll create another one for Python
69:45 - okay okay let's go down a bit so copy
69:52 - this one paste and change the text
70:04 - Python change another c2 and of course
70:10 - since opposition or is it will be
70:13 - disoriented 90 and 420 will be good and
70:17 - we'll go top at the top and mention the
70:23 - c2 one right Wow c2 is equal to a string
70:30 - variable okay so this is the same as the
70:34 - intermediate really just fetch out or
70:37 - get the check box we are using save so
70:48 - these are the check boxes okay now we
70:55 - will just get into the radio button for
70:58 - the gender so for radio button r1 is
71:07 - equal to the radio button root and we'll
71:16 - just what it takes to it is equal to May
71:29 - , and a variable for it too so we able
71:39 - is equal to radio underscore where and
71:53 - we'll be using font or we don't require
72:02 - font and Chester provide a variable for
72:05 - it so here the value a argument we'll be
72:09 - using a argument called as value so what
72:12 - ever value you put into the radio button
72:14 - it will be used as an object for example
72:17 - if you want a value as a meal so you
72:20 - need to pass it as a string so value is
72:23 - equal to mention it as the string okay
72:29 - comma sorry dot place and same as X is
72:37 - equal to on to 30 comma Y is equal to
72:45 - 420 we'll do the same for
72:59 - the female 1 and female exchange it over
73:06 - here are two we have to change it over
73:10 - here to so the value for that will be
73:13 - female and place it like around the 90
73:20 - and 60 around 60 right okay that's good
73:26 - and we'll be using this variable radio
73:30 - wire like we done for the checkboxes
73:32 - radio uh and mentioning mentioning it so
73:38 - is mentioned it at the top so we'll be
73:49 - seeing like let's go to the top and
73:54 - we'll be providing it over here sorry
73:56 - so radio underscore bar is equal to
74:09 - string right so for the checkboxes what
74:15 - I've noticed is that we don't need to
74:18 - choose the get method but even she will
74:21 - be using that but for that we have only
74:24 - two specific one that is Java and Python
74:27 - so just mention it live better so for
74:30 - the vast sea one we are using Java and
74:35 - for the c2 we are using Python right
74:42 - okay so let's print out that also print
74:53 - the language which will be using so just
74:57 - before that create a variable valve is
75:00 - equal to sorry valve 3 is equal to wear
75:07 - and let's go see one right so we are
75:13 - getting C 1 but we don't have to use you
75:17 - can use it based on your preference but
75:19 - here C 1 is already provided Java and C
75:22 - 2 is also provided as pythons you don't
75:24 - need to get it
75:25 - the value is Java and Python so that and
75:30 - for where so that's I guess that's for
75:38 - valve 3 again and bad C 2 for the Python
75:48 - okay so okay so print that too
76:03 - so what we'll do here is that we just
76:05 - passed three so language is and for that
76:21 - for the agenda we'll be using your
76:27 - gender is and sorry we have not used
76:33 - another variable for the radio button
76:35 - but we'll be using as we're four is
76:39 - equal to radio dot where dot get okay so
76:48 - it looks in good and we'll be changing
76:51 - it over here as for so so this is the
76:57 - code and let's see what is the output
77:04 - okay so the gender is for the male is
77:08 - missing so let's check that out first
77:15 - okay okay okay what is the issue here
77:25 - so I guess there is some kind of placing
77:31 - issue but I can't see one and
77:55 - you
78:12 - okay okay I've got this but okay so for
78:17 - the radio button mail we are overlapping
78:22 - it I guess so it is with the 230 and 260
78:35 - I guess okay so we'll just provide this
78:37 - as 260 and rerun this okay now that
78:42 - looks good okay so that looks good
78:49 - and yeah it looks good so now we'll just
78:56 - okay so now we'll the pseudo show the
79:00 - output whether what it prints on the
79:03 - console so demo score user throw it some
79:12 - random digit for the date select the
79:16 - country this might on mail so there is
79:26 - an output and the sorry though there is
79:29 - no error and the output is been printed
79:34 - so your gender is May the programming
79:37 - language is Python as we have selected
79:40 - so first name demo user concatenation
79:44 - the date of birth is this the country is
79:47 - this from the combo box programming
79:50 - language is Python and the gender is
79:52 - made on clicking the sign up button so
79:55 - so for this and we have one more thing
80:01 - left and that is the message box right
80:04 - so for the message box we just need to
80:07 - type in the method that is kinder
80:16 - dot messagebox
80:20 - dot show info not error in for it and go
80:28 - add a title welcome come comma user that
80:38 - is also string so mention it into a
80:40 - string user is successfully signed up
80:56 - close it and let's see what is the
81:01 - output again so this is how you can
81:04 - provide a kingdom message box and it
81:08 - will be more clear when the output is
81:10 - shown so we'll be using not a variable
81:15 - so user name sorry name to add some
81:26 - random digit select the country Python
81:33 - female and let's see sign up so this is
81:41 - a kinder message box so as you can see
81:47 - what we have provided over here that is
81:50 - on this first argument is a title sorry
81:53 - sorry for the spelling mistake but it is
81:59 - okay
82:00 - but the purpose has been sold this is
82:02 - the title and this is the user content
82:05 - so user is successfully signed up okay
82:08 - and this is the printed output from the
82:12 - widgets so in this video we have learned
82:15 - about the message box print a message
82:18 - box showing an output into it and how
82:22 - you can use a radio buttons and check
82:25 - box or within the kinder window so this
82:28 - is it for
82:29 - this video guys and thanks for watching
82:34 - hello guys and welcome to programming
82:36 - knowledge on the previous video we
82:38 - learned about the inter message box or
82:41 - showing information and how to use check
82:44 - boxes and radio buttons and print their
82:48 - user given outputs in this console so
82:51 - this is output from the previous video
82:54 - and in this video it is a continuation
82:58 - so in this video we'll be learning about
83:00 - how to create menu menu bar basically so
83:03 - this part how to create that into a
83:08 - kinder window so I'll just show the
83:11 - output of the previous video so how you
83:13 - can put a menu bar over here so let's
83:17 - get into it so for a minute I just need
83:21 - to type in and that is create a variable
83:30 - menu is equal to main own this is a
83:36 - inbuilt option so we come as and default
83:41 - passing this variable which we have
83:43 - taken and root dot config okay and menu
83:50 - is equal to men oh so this is like a
83:53 - verifying that the variable which we
83:55 - have taken for the menu widget is equal
84:00 - to that variable itself so menu again
84:03 - okay so these are two lines which you
84:06 - required just to create a bar over here
84:10 - on the top of the inter window widget so
84:14 - now to create multiple options within it
84:16 - I'll just space it down a bit
84:18 - okay so create a multiple options within
84:21 - that create another variable menu or a
84:29 - create a sub menu sub m1 is equal to sub
84:37 - m1 is equal to the menu itself
84:41 - I mean parent object menu and it is this
84:49 - the the function which we are going to
84:51 - use right now is a inbuilt method so
84:55 - menu dot add cascade okay and providing
85:02 - a label to it so label is equal to what
85:08 - you want to provide file right so
85:11 - usually over here you can see file edit
85:14 - of view navigate so this file is over
85:18 - here the label name so 5 and currently
85:24 - we are not providing any functionality
85:26 - to that so just close it it's already
85:30 - and if you want to provide something
85:37 - within that file menu use sub m 1 which
85:44 - is the above variable dot and underscore
85:51 - come on which is over here and label X a
85:57 - label this is equal to exit so I will
86:06 - show the output so do we move here so
86:11 - there is some error so I was mistaken
86:16 - over here that the widget widget
86:21 - variable which we are using should have
86:23 - the parent kinder window so here instead
86:26 - of malobi I using the loop so it gets
86:30 - attached to the main window window so
86:34 - let's run this now so as you can see the
86:40 - output here is the menu bar but you
86:45 - can't see the exit option right now
86:49 - right
86:51 - as it is not there the file is being
86:55 - created right
86:57 - okay so we'll move on to the method that
87:04 - is how you can add that exit which is
87:08 - over here into or below the file for
87:11 - example this is the main and if you want
87:14 - to add new project or something like
87:16 - this exit how you can do that right so
87:20 - just create menu as an argument for that
87:23 - and pass sub M that's it now you see the
87:31 - output will be moved here so file and
87:38 - exit okay
87:40 - so you have created a successful minnow
87:44 - option now we just copied this one and
87:48 - create another one okay just rename it
87:55 - will be using attach to sub M - we are
88:04 - also change it to yes to change over
88:07 - here as well and name it as option
88:14 - option and set as about so hmm let's see
88:23 - the output okay here we have to add it
88:27 - as - now that is good so we have created
88:33 - two file options that is file with exit
88:37 - and file with about so this is basically
88:39 - how you can create a menu widget or a
88:43 - menu field within a kinto window with
88:45 - the sub options as well right
88:48 - okay so now basically now we need to
88:53 - provide a c'mon so that is for exit so
88:58 - if I click on to exit I want to exit the
89:01 - and tack in da window it so comma
89:04 - not command is equal to exit okay but
89:23 - the exit method is down over here right
89:27 - just cut this and place it over here at
89:36 - the top so it will detect now so the
89:45 - error is gone and for same I will do
89:48 - this for about comma will provide a
89:53 - command is equal to abt now we have to
89:58 - create a message box that is weight
90:04 - define abt that is a function which we
90:08 - have mentioned over here and the about
90:11 - come on and and just use a Kinta message
90:21 - box to show how it works
90:24 - dot message box thought show and for
90:34 - and provide the title as the first
90:38 - argument welcome to authors comma this
90:51 - is demo for menu fields ok so this looks
91:05 - good and let's sit on this now all right
91:14 - Umberto I guess we have some kind of
91:17 - error over here show info ok so what is
91:28 - a error right so just look into it and
91:35 - I'll just tell you what is the error so
91:39 - oh he always don't need to do this this
91:42 - is fine I guess
91:45 - ok so the error has gone so these are
91:49 - the two options that is file with exit
91:53 - and menu option with amok right
91:56 - so let's click to exit so as you can see
92:00 - the window is excited so the kamala
92:04 - which we have provided that is exit has
92:06 - been executed successfully via this
92:09 - argument command and let's see for the
92:14 - option for about option and about so the
92:20 - output is successful
92:22 - this is a title welcome to authors and
92:24 - this is a demo for many fields ok so
92:27 - this is a message box Kinta message box
92:30 - so this is a basic approach of creating
92:34 - a menu phase within a kinto window you
92:38 - can use as many as options you need and
92:42 - create submenu within it and provide
92:45 - commands to it using this
92:47 - method so it is just like a button with
92:52 - this command approach so this was it for
92:55 - this video guys in this video of we have
92:57 - learned about how to create menu fields
93:00 - within the kinder window yeah thanks for
93:03 - watching
93:06 - hallo guys and welcome to programming
93:08 - knowledge in the previous video we
93:10 - learned about how to create menu option
93:14 - in a kinder window for example one which
93:17 - are created here in the previous video I
93:20 - will show you the output so this is the
93:24 - menu field which we created with
93:28 - basically two functionality so far about
93:30 - it is showing the message box and
93:35 - profile insert it will exit the window
93:38 - so we long to will go on to the next
93:42 - step that is creating a window within a
93:46 - window so for example after registration
93:50 - after successful registration i want to
93:53 - redirect or get a new window and which
93:59 - basically is a login window so after
94:02 - successful registration I want a new
94:05 - window about login that kind of
94:11 - situation so in here I'll just show you
94:13 - a small demo that how you can create a
94:18 - window within a window in kinder and
94:26 - using a nother button so right now there
94:31 - are only two button that is sign up and
94:33 - quit so for this we'll be using another
94:37 - button that is a login button and let's
94:42 - create one right now so at the bottom so
94:49 - these are the to sign up and quit button
94:53 - copy one of them and
95:02 - rename it as a login button so it is not
95:07 - basically a login window I'm making here
95:10 - I'm just showing it demo that how you
95:12 - can create one using the approach which
95:15 - I'm telling you right now okay
95:17 - so rename the text login keep it as it
95:26 - is and for right now there is no come on
95:31 - okay and we'll place it add two and
95:42 - eight and the y-axis will be around 60
95:47 - so 60 so let's see the output as you can
95:54 - see it is in between of this sign up and
95:57 - quit button okay so this is the button
96:01 - which we have created now what we'll
96:05 - have to do is create a function which
96:10 - can be used for opening another window
96:16 - so create a function defined and name it
96:25 - a second wind : and similarly like the
96:39 - one which we have created and that is a
96:46 - first of all we need to create a window
96:50 - object that is when is equal to T kay
96:56 - okay then put a title to that second
97:02 - window dot sorry title
97:10 - nemetes welcome to second window okay
97:24 - now we'll just for a simple geometry
97:27 - I will just forward is at I guess 250
97:40 - look 50 and X 200 so this is like a
97:47 - height and do it and now we just provide
97:53 - a label we just copy or one melt problem
97:59 - we'll just name it
98:00 - label underscore on 0 to 0 okay then
98:10 - provide a label now when it comes to the
98:17 - second window you don't have to provide
98:19 - the main route window that is over here
98:23 - because it's for that main window now
98:25 - you're creating entirely new kinder
98:28 - windows so for that you need to use the
98:34 - route or the window which is provided
98:37 - over here just taken as a parent object
98:40 - for the kilter frame right ok so we'll
98:43 - be using window comma now text is equal
98:53 - to registration stration so this is
99:04 - basically a label sorry for that I just
99:10 - place it inside ok station successful
99:19 - the spelling is wrong okay or you can
99:24 - just say it as successful mission
99:28 - completed right okay so this looks good
99:33 - and we'll be providing relief is equal
99:44 - to solid that is for relief is equal to
99:53 - solid comma and which is quite fond fond
100:03 - is equal to area I'm stabbing things
100:11 - right okay so we'll just come over here
100:16 - this part a parentheses Ariel then comma
100:26 - 12 comma bold right and we'll close that
100:35 - too and we'll just place it just cancel
100:47 - this one it is creating an obstacle so
100:50 - place that at X is equal to on 30 and y
100:59 - is equal to 70 so it is a small window
101:03 - and we also create a small button button
101:12 - and this cause 0 to 0 1 whatever you can
101:16 - name it this copy the warden down from
101:20 - down here
101:26 - don't want to type it okay so okay so
101:37 - second one right so just get over here
101:41 - change the position up it as a T and Z
101:54 - okay
101:54 - white okay no problem okay this is
102:01 - called it this looks good okay so okay
102:05 - now here we have to change the window to
102:09 - window and just rename it all you can
102:19 - provide it as demo button no problem
102:22 - with that again and okay so now this is
102:29 - this looks good and now we'll just go
102:32 - down to the login button over here and
102:35 - provide that come on
102:36 - comma oops command is equal to second
102:48 - well okay so so let's run this and see
102:54 - what is the output okay so that there is
102:57 - no error right now and we'll click so so
103:02 - as you can see there this is an entirely
103:06 - new window now with a label registration
103:11 - completed and a button demo so right now
103:15 - there is no functionality to that button
103:16 - but I'll just quote a simple message box
103:19 - to it so this are two entirely two
103:23 - different window so for the purpose of
103:26 - so advancement to this entire reception
103:29 - form one can create a registration form
103:32 - with certain violation and can redirect
103:34 - it to on the second window and provide
103:38 - some entry widgets like
103:40 - login name and user password with to
103:44 - enter visits and a login so this is a
103:48 - basic idea how you can perform so these
103:51 - are two different and tire two different
103:53 - windows so this is how you can perform
103:55 - one and I'll just provide a
103:58 - functionality the third button let me
104:01 - just type in here command is equal to
104:06 - about maybe I'll just check whether it
104:11 - is up or down
104:13 - yeah it is definitely up I guess ok so
104:19 - let's see whether it works or not
104:22 - so login this is the second button and
104:26 - let's click on do this demo so as you
104:30 - can see it works so this is this is the
104:32 - second window and we have provided a
104:35 - single function that is a message box to
104:37 - this demo button with a message box
104:39 - right so as you can see this is a basic
104:44 - approach of creating two separate
104:46 - windows from one same window so over
104:48 - here I have created three sign up quit
104:51 - and login and from by clicking login
104:53 - this particular button opens right so
104:58 - this is it for this video guys if you
105:02 - have any more or implementation to this
105:06 - existing approach you can use it or for
105:13 - the advancement and otherwise and
105:19 - welcome to programming knowledge the
105:21 - previous video we learned about how to
105:23 - create a registration form and so in
105:31 - this video we'll be seeing about how to
105:34 - take that data and store it within a
105:36 - database so
105:39 - for that you need first of all is a
105:41 - sqlite3 browser for here exploit three
105:45 - database which is a in build database
105:48 - for editing buttons you just import it
105:51 - normally do not have to use any big
105:55 - procedure so just import it and the we
106:00 - have a previous function that is a print
106:05 - e and D so commented out and create a
106:10 - new function that is function database
106:16 - and you will write everything regarding
106:20 - the on database procedure so just follow
106:23 - along everything will be everything will
106:31 - remain the same just you have to add
106:33 - another function so and okay so now take
106:44 - a variable name one to m dot get on this
106:55 - function on this and will function get
106:58 - world of X the value from that widget
107:00 - entry which it now you can use last one
107:06 - is equal to L then load get same you can
107:13 - just copy this then you can take it for
107:21 - the date
107:24 - date of birth not get then create
107:31 - another variable for country is equal to
107:36 - not get then you can create two more for
107:43 - programming languages of your choice
107:45 - gender so is equal to where you don't
107:57 - have to get use get method in this
108:01 - because you already mentioned over here
108:03 - fighting and Java as you can see so move
108:08 - on fall will be using it for gender now
108:14 - that is a radio button radio Auto where
108:19 - you get okay so I guess we are done with
108:24 - fetching details from the widgets
108:26 - now we will just let the procedure for
108:30 - the abyss connectivity so I use a
108:33 - variable of your choice I'm using on is
108:39 - equal to sqlite3 not connect so usually
108:46 - this is the procedure for connecting
108:48 - with the database and in here we'll be
108:51 - mentioning the database name for example
108:54 - we form DB now calm and : 10 he will be
109:12 - using Co so for it is a disabled or
109:18 - basic officials will be to perform is
109:23 - equal to call dot because also you will
109:27 - find this in the documentation of SQLite
109:29 - key these are the languages of seizures
109:33 - to create a database along with the
109:35 - table and etc
109:37 - and now from here we'll be starting to
109:44 - create a table for that cursor Lord
109:49 - execute so this statement of line will
109:53 - be used to create a table so follow
109:55 - along execute em so that you will be
110:06 - capital the damn three is table if not
110:19 - exist okay and the table name will be
110:27 - student then please pick bracket the
110:39 - column name first name then we'll be
110:46 - providing a data output text then we'll
110:51 - be using last names in here just
110:54 - reporting the column name oh nothing
110:56 - much
110:56 - with along with editor app these are the
110:58 - basic SQL procedures in from eight on
111:06 - both text comma for country text
111:20 - [Music]
111:24 - should be in uppercase
111:32 - you
111:40 - drink and then for programming column
111:44 - dimension any name you want and text for
111:54 - that then form gender and here we'll be
112:05 - finishing off the table that's it for
112:15 - the table now we'll move on to the
112:18 - inserting values that we are fetching
112:21 - from here for example for in here we are
112:25 - taking on the variables name last one
112:29 - date of birth and we are using the get
112:31 - method to get that data from that
112:34 - fidgets which are being used in the kill
112:37 - the interface so follow along same
112:40 - procedure will be using cursor got
112:44 - execute and for the insults using insert
112:51 - into students table names and mention
113:02 - the columns that you have used above
113:07 - laughs as same as this like this
113:11 - laughter deo pio bien etc and laughter
113:19 - then now we'll be using our TOB then
113:24 - country and so gramming come on jindo
113:32 - okay so just a list check anything is
113:35 - right okay everything is right and just
113:43 - remove this
113:45 - and yes that is what rivals are going to
113:52 - get inserted into that table so values
113:58 - 10 replacing ocean markers mom I'm gays
114:02 - on the number of column for example here
114:04 - there are one two three four five six so
114:08 - here are them D values
114:11 - you
114:19 - honorable columns that is mean last a
114:21 - toe both concluding program on folk
114:24 - program and gender that is six columns
114:28 - so we'll be using six question marks and
114:42 - stop and be sing the variables that we
114:49 - are using to fetch the data that is over
114:56 - here so we are using this variable to
114:59 - pet the data those widgets this new
115:03 - standard 2 1 , date OMA country forma
115:18 - make sure that the variable name are
115:21 - same okay comma of gender
115:32 - so six widgets six and we are getting
115:36 - from that get methyl okay and focus I
115:43 - guess to the creation of the table as
115:47 - well as the insertion of value within
115:50 - that table studio is done so this is the
115:52 - function used for inserting the data
115:56 - into the database one more method is
116:00 - left that is we need to commit whatever
116:04 - I am done we'll just use this comic
116:07 - network to save all the data which is
116:10 - saved into the database and use this
116:14 - function database into the
116:19 - you
116:21 - but that is over here there is a login
116:24 - button
116:25 - so here we are using the login button to
116:29 - execute that database program our
116:34 - function here I am also using the key
116:38 - binding method in Kindle so for example
116:41 - if I press enter instead of taking on to
116:46 - the mouse you can also use Enter key to
116:49 - execute that command so it's not I'll
116:52 - just save it and run so I guess there is
116:59 - more error so let's enter some data
117:13 - country yeah
117:17 - I too am now well so there is some error
117:24 - let's see what is ADA
117:29 - so this let's let's
117:40 - you
117:42 - you
117:45 - so the issue is over here I programming
117:49 - P is capital over there we have used
117:52 - this oh it's so I guess it is done save
117:58 - this and execute again
118:08 - okay so that's we ended the day down
118:11 - let's see there is an error on
118:22 - this also random data
118:26 - you
118:27 - you
118:32 - still there is some error so the number
118:42 - of our empty values is five and we have
118:45 - six phones
118:55 - let's use one more let's now save and
119:01 - try again okay I should be 10 by 9
119:13 - yes so Sam this puts an angle beta gamma
119:20 - for country
119:29 - okay so I guess the database is created
119:33 - this enter one more data
119:42 - Sammy personal data directs
119:49 - this change
119:56 - and this okay so we have created the
120:01 - table and we circuit values within it so
120:05 - let's check the table so for that you
120:11 - can use this
120:16 - so here's a forward DB so the check
120:20 - whether the values are within the table
120:23 - or not use
120:25 - you
120:33 - use the DB browser or SQLite
120:39 - we'll be going for SQLite and open
120:42 - database and we'll go to the desktop
120:50 - okay this is the database okay as you
120:56 - can see this is a tablespoon and now we
120:59 - have the columns of the data types so as
121:02 - you can see over here in this other
121:04 - columns last date of birth country
121:09 - programming and gender so this is data
121:13 - as we fetch through the inputs of some
121:18 - of the widgets of Pinter
121:22 - so Rho C 2 of creating the database is
121:27 - done we have successfully insert data
121:30 - within it so this is it for the code for
121:33 - this meeting will be available in the
121:35 - description
121:37 - this is it for this video guys and
121:39 - thanks for watching
121:41 - hello guys and welcome to programming
121:43 - knowledge on the previous video we
121:45 - learned about how to create a
121:47 - registration form and feed that data
121:50 - into a database using the sqlite3
121:54 - package which is pressing already in the
121:57 - my programming language so in this video
122:02 - we'll be seeing about how to create a
122:05 - color chooser a slider and canvas so
122:11 - we'll just find everything into a small
122:14 - application like a pink kind of
122:17 - application so you get an idea how those
122:20 - things work together so follow along
122:24 - with me and the code will be available
122:26 - in the description below so first of all
122:30 - from kinder egg Bob stop so this is the
122:33 - basic procedure so window also provides
122:35 - some color chooser on the scale and
122:38 - everything we build inside that window
122:41 - modules you just have to imported so the
122:44 - second line will be from kinder in both
122:51 - ttk slash comma color fuchsia now the
122:59 - approach will be using over here is kind
123:02 - of operating a class a constructor that
123:05 - is i-19 and within that will be creating
123:09 - different functions for creating also
123:11 - either clearing the canvas and I'm
123:14 - creasing the width of the pen and etc so
123:16 - you will just get more the
123:20 - object-oriented procedures to so first
123:23 - we'll create a class editing main class
123:29 - now I will be using constructor that is
123:33 - a 980 method if you know patent or gonna
123:37 - manage mind if I'm here with it that is
123:41 - shelf
123:43 - comma master
123:46 - and now we'll be self thought master is
123:54 - equal to master from this photo arc in
123:57 - the window just some we can show that
124:00 - that we do is signal trick properly and
124:04 - so this method a design eighty method
124:09 - sorry I just forgot okay so number so
124:14 - this particular method will be having
124:18 - default parameters for the entire small
124:21 - application which we are going to page
124:23 - so you see so know foreground and
124:28 - background color will be for any to use
124:31 - color on this foreground sub okay and
124:39 - spa foreground is equal to black serve
124:49 - God let's go busy 34 background of the
124:57 - cameras
124:59 - it is white now okay we have a small
125:06 - stick itself okay okay so now we'll be
125:15 - boiling the coordinates x and y for the
125:17 - pen which will be which will be we will
125:21 - be using in the canvas self let's call X
125:33 - equal to none so it is a mentioning it f
125:38 - na y same as X
125:49 - now the further default end with we are
125:53 - providing as five width is equal to five
126:06 - okay now okay so the following two
126:28 - methods are basically used for the
126:32 - motion of the mouse the trackpad which
126:35 - we are going to draw some line or the
126:37 - shape or something like that
126:40 - here it will be like this seed on mine
127:06 - we get will get over there Doughboy
127:09 - and so what you see right these are the
127:18 - key binding in the mouse button which
127:20 - are used for the motion of mouse
127:33 - cells not change
127:46 - you
127:50 - again we'll be using this copiers
128:02 - reset
128:10 - I will just change the montage we do
128:14 - button test needs
128:29 - okay now now be moving into the motion
128:39 - of the pen that will be using into the
128:43 - canvas obtain self comma colon if
129:01 - dot hold X and self dot oh why go pull
129:23 - them okay so c1 c4 create yep underscore
129:40 - line so initially we will be using the
129:44 - camera so just a drawing lines so there
129:47 - will be no specific shapes to be drawn
129:49 - so we'll be starting with a busy line so
129:53 - this is the function use for it not only
130:01 - X ourselves for y copy why
130:28 - on X DX and dy , the width is equal to
130:41 - cells then set the pen width and we'll
130:52 - be filling it says they take Allah Allah
131:00 - that is a foreground what will be
131:04 - drawing into the canvas will have a
131:07 - color right so that is for that color
131:12 - right now program and gamma cap style
131:21 - these are some of the functions using
131:24 - kinder so documentation is for one we
131:29 - refer for getting into details and
131:33 - smooth what kind of texture will get
131:36 - when you draw something on that and all
131:38 - right so okay so I guess there is no
131:46 - error
131:48 - [Music]
131:52 - you
131:58 - you
132:03 - now self dot hold X is equal to en see
132:13 - the coordinates matching to the pennant
132:17 - winner y is equal to B comma plus now
132:27 - we'll be using the function reset
132:32 - along itself so surface micro object on
132:38 - that very good eats on the scope self X
132:52 - is equal to none again so what reset
132:56 - will do over here is that it will one
133:00 - ever drawn water which is wrong within
133:03 - the canvas is like erased so this
133:09 - function okay so change so now if you
133:27 - want to change the width so change with
133:36 - change of self not with equal to e now
133:58 - we'll be using did everything up here
134:16 - so not seedot
134:29 - you
134:32 - you
134:40 - now for changing the foreground and the
134:42 - background we have two functions change
134:44 - from down and change the background we
134:46 - have a P so for change and expose for
134:53 - now self not color not so what we using
135:10 - we use foreground edge so it should be
135:17 - a la pieza not half color
135:25 - you
135:27 - you
135:32 - so not a lot
135:47 - overall and the one
135:59 - now you choose this same function for
136:02 - background
136:08 - you
136:09 - you
136:12 - let's change into Bible
136:19 - you
136:20 - you
136:28 - you
136:32 - now we'll be using multiple widgets as
136:37 - is the skill the canvas and reading
136:42 - menus for Lt within a single function so
136:45 - we find the widget the one we have
136:52 - mentioned earlier just let's check
137:01 - whether it is I do not draw much
137:09 - not control is equal to frames all the
137:16 - creating string with an application and
137:18 - the self master time X equal to 5 and
137:35 - y equal to five knots for daily oh my go
137:52 - you
137:54 - you
138:01 - not language so on a low heat is are
138:05 - used in the poem which I already created
138:10 - will be more Rico and explained you
138:14 - through what is going our way
138:15 - so then this basic variable and then
138:22 - with then we folding a font to it is
138:28 - something which is already in covered
138:30 - over so I don't need to on it I'm just
138:43 - not so
138:51 - the below zero comma column
138:56 - you
139:01 - you
139:04 - now host learn Oh mother Lucia
139:14 - the procedure for creating the mangos
139:17 - inside of this show you an get caught is
139:22 - actually going and how we have created
139:32 - so we just went in here now this method
139:37 - specific is used for getting each slider
139:41 - and slider with matrix coding position
139:49 - to it within that code in a position to
139:54 - it now control now we're creating a
139:57 - canvas side said this is the method for
140:01 - creating a canvas basic width height and
140:06 - what will be performed down background
140:09 - of it now this entire thing is just for
140:15 - creating minnows
140:19 - and this method is for creating and
140:23 - executing domain into object so I guess
140:29 - the whole data that will be available in
140:31 - description so when we act on that link
140:36 - let's
140:44 - you
141:15 - falafels I say curse it was within the
141:19 - class so that is what will not remain so
141:24 - the main option so we have an arrow here
141:27 - though
141:37 - this coin I guess and let's see but it
141:39 - also gives output and so on the middle
141:47 - which we have created over here to show
141:49 - you so this little menu there is a brush
141:54 - called a background options and and this
142:00 - is the width it is a slider for the one
142:04 - we have used to is skilled this is for
142:10 - the slider and this is canvas the white
142:16 - and I will show you I will go so this is
142:20 - a basic cannot for it but wrong and you
142:25 - can increase the width and Sousa that is
142:31 - - color you can do this orange okay
142:38 - you
142:40 - you
142:43 - so these are you can use the scale
142:47 - widget to increase individual pen width
142:51 - and create clear everything out so
142:54 - canvas is filled so so that business for
143:03 - this video guys so in this video we have
143:05 - power and the other thing that is the
143:07 - skin which is the canvas widget how you
143:10 - can use color chooser which is this to
143:17 - create a a small application and I will
143:22 - show you the background and the
143:23 - foreground so if I want to back down
143:25 - s-stop okay so as you can see the canvas
143:29 - background often change so and I will
143:32 - this mean over over here above and black
143:42 - and this is for the slider in his and
143:46 - decrease the width of the pin so okay
143:49 - this is it for this video guys thanks
143:53 - for watching hello guys and welcome to
143:57 - programming knowledge in this video
143:59 - we'll be singing about how to create a
144:01 - small game called detecto or using the
144:04 - module kinter in pythons so let's begin
144:09 - so initially you have to import pinto
144:14 - with star with the message box is
144:16 - required as an alert of codes in the
144:19 - kindle object and the type right now
144:23 - I'll be showing you there is a lot of
144:26 - similarity in the code so I approach
144:29 - will which I'll be using over here is
144:31 - like I've already created the game
144:34 - sources or use that code and show you a
144:37 - line by line what is going within that
144:39 - code so if you have any problem within
144:42 - it you can comment down
144:48 - so this is the game and and now
144:59 - initially you have just imported kinter
145:04 - and you have imported the kinder message
145:08 - box and provided a title to it now we
145:10 - are taking multiple variables for
145:15 - getting the input from the user
145:17 - it is in a string variable that is for X
145:20 - and zeros now here we are using entry
145:25 - fields so I'll just show you the output
145:29 - quick and run so you get an idea so this
145:41 - is the entire game so these are the two
145:44 - entry fields which are we use for player
145:46 - 1 and player 2 now for the click you are
145:57 - using a true variable and for flag now
146:12 - now this function is basically used for
146:16 - when the entire game is finished so I am
146:18 - talking about this disable button and I
146:21 - am method so when the entire game is
146:23 - completed and once a player wins
146:26 - there should be no button period after
146:28 - it will get it in a minute so this is
146:33 - importing getting string variable from
146:36 - the user this is the entry visit for
146:38 - player 1 and P 2 and this is for the
146:40 - disabled word now
146:52 - now it comes to button clip function
147:07 - okay so why don't you so whenever a
147:12 - player clicks on a buttons it will print
147:15 - out the character xn zeroes and based on
147:20 - the probability of checking whether the
147:26 - witch user has one which I will be
147:29 - showing you button it will print the
147:34 - output so button click falls and for the
147:42 - player to 0 and for button text X for
147:49 - this is basically like if you click the
147:51 - button it will print X into that button
147:55 - and the condition along with it should
147:59 - be true so if the player one clicks on a
148:03 - specific button X the condition for it
148:06 - needs to be true and based on the
148:10 - multiple combinations which I am going
148:12 - to define it below based on that it will
148:15 - predict the winner so this is the
148:18 - message box and this is generally though
148:22 - this button click method is generally
148:24 - for clicking the button and determining
148:27 - who is the winner so now coming on Kota
148:34 - part two where we are looking into how a
148:40 - player is chosen
148:46 - so this is an entire combination so this
148:56 - function check for win is for
148:58 - determining who won the game basically
149:01 - so here the combination is in this
149:04 - format I'll just comment it over here 1
149:10 - comma 2 comma 3 in a matrix form
149:12 - basically step 4 5 6 7 8 9 so I will say
149:33 - run this and so as you can see over here
149:44 - this is 1 this is 2 this is 3 4 5 6 7 8
149:49 - 9 so this is a combination for all based
149:53 - on which the fever gets selected for
149:57 - victory so these are just a multiple
150:01 - combinations of FN if a statement with
150:05 - else along with end so will check
150:09 - whether this X X X that is 1 2 n 3 is
150:13 - coming in a row for example if the
150:16 - player 1 has 3 X's in 1 2 3 so it will
150:23 - define the probability that a player the
150:25 - first player 1 so based on that there
150:27 - are multiple probabilities over here in
150:29 - FL statements and also check whether all
150:33 - the fields are filled and no output is
150:42 - generated for example if nobody wins it
150:45 - will check and will tell you that the
150:50 - there is no combination of X and zeroes
150:53 - within that entire matrix and it will
150:57 - declare it as a tie so this is the
151:06 - function for it now coming on to the
151:08 - next one creating the widgets now
151:20 - buttons we have already mentioned it
151:23 - about this is done generally for
151:29 - creating the button which is nothing
151:30 - much and positioning into a certain
151:32 - composition so here we are using lambda
151:36 - functions for each individual button and
151:39 - its function so just tell you so player
151:45 - 1 so this saw the labels for player 1
151:49 - player 2
151:50 - as I've shown over here so these are the
152:01 - labels and these are entry fields and
152:10 - one by one we are going to create a
152:14 - button so so for when it comes to lambda
152:20 - function so here so one click so each
152:24 - and every button we are now giving a
152:27 - particular method to it so lambda
152:31 - function is basically used for
152:32 - individual functions for each cotton so
152:37 - for example player one clicks on X and P
152:40 - two clicks on 0 so it cannot be seen for
152:43 - each and every button
152:46 - here the purpose of lambda is this so
152:51 - there is nothing much in it you just
152:54 - have to create nine buttons and position
152:57 - into a grid system rows and columns 3x3
153:01 - and run the main loop that's it
153:03 - and code for this video will be
153:07 - available in the description below so if
153:09 - you have any query you can go and check
153:13 - it out over there so I'll just say run
153:14 - this and show you how it works so you
153:22 - can put in the name for your Sam and
153:26 - drink
153:27 - so one okay that is some error let's see
153:34 - what is Error
153:38 - if button clicked X is equal to two so
153:46 - let see where is the error okay so I can
153:51 - see over here is some error so this
153:58 - check or this issue so what is the issue
154:24 - here is that X is equal is equal to one
154:27 - and two
154:52 - so let's run again and see the output is
154:59 - gone okay so the output is gone and
155:01 - let's see Sam and Eric let's click OK it
155:07 - works
155:08 - X 0 X 0 X so as you can see but we're
155:16 - 1:1 so the player 1 over here was X
155:19 - Salmons now the function which we have
155:23 - provided above that is the disable
155:26 - button so after once you get down to the
155:30 - game you can't click any button so you
155:32 - have to restart it again
155:34 - so this how it works now let's see
155:43 - edek X we go X 0 X 0 as you can see the
155:54 - second player won the Llano 0 is
155:58 - complete so this is how you can create a
156:02 - simple game tic-tac-toe based on this
156:04 - you can forward very multiple variations
156:06 - and solutions to it so
156:10 - oh this is this was it for this video
156:15 - guys and thanks watching hello guys and
156:17 - welcome to programming knowledge and the
156:19 - previous video or we learned about how
156:21 - to create a simple game that is
156:22 - tic-tac-toe in Python kinder module in
156:26 - this video we'll be seeing about how to
156:28 - how we can create a simple calculator
156:32 - within kinder so the procedure of
156:35 - building the application will be similar
156:38 - to that of tic-tac-toe I'll just show
156:42 - you the code and the certain portions of
156:44 - the code and so let's begin with the
156:48 - initial initial and so first of all we
156:52 - have to import kinto for in geometry
156:54 - I'll place it into a variable and go any
156:58 - title based on your preference you can
157:00 - also use different approaches to it and
157:03 - put a background words so as you sit on
157:07 - this much of code and show you is there
157:09 - any error or not so there is no error
157:15 - until now now moving on forward we'll be
157:21 - using text in that is a string variable
157:25 - for the entry whatever we are going to
157:29 - fade within the entry that is for
157:31 - example in number + 2 or 4 + 4 divided
157:36 - by 2 or something like that we will be
157:38 - using that so text in is basically just
157:46 - a text input which we are providing into
157:48 - the until field and a empty variable
157:52 - that is of operator variable now we'll
157:56 - be creating our Fox first function that
157:58 - is the button click function so just
158:06 - tell you what actually is happening
158:08 - within this function
158:12 - so click button with a parameter number
158:16 - so when we click a singular working for
158:19 - example one plus two it is not a single
158:22 - button right one two and the plus button
158:25 - is different so for this basically we
158:27 - are using the lambda for each individual
158:30 - button when one will create the widget
158:33 - button I will show you in a minute and
158:35 - then if you want to show that in a
158:39 - format for example into the entry field
158:43 - one plus two so you need to show that
158:47 - input into that entry field for that we
158:50 - are using that function by taking the
158:53 - input from the user when the user clicks
158:56 - a button so it is just concatenating to
158:59 - no inputs given from the user that's it
159:04 - and placing and setting that into the
159:10 - operator so the operator here will hold
159:12 - that value so this is the clip button
159:16 - function with the parameter number in
159:18 - general for whatever button is been
159:21 - clipped into that calculator or moving
159:24 - on to the next so for each of evaluating
159:32 - operators for example button or sorry
159:34 - addition subtraction multiplication
159:36 - etcetera will be using individual
159:39 - functions so equals button here is
159:45 - basically used for evaluating in weather
159:50 - determining and also determining what is
159:52 - that function it is so for example if
160:02 - the operator is performing or the user
160:06 - is performing some addition operation
160:11 - operation is being performed such as
160:13 - addition so the evaluation of evaluator
160:17 - that is an inbuild operator or uses
160:23 - in bill procedure for determining that
160:26 - it is an addition operation so here
160:28 - operator will hold that addition
160:33 - operation so that is plus I'll just show
160:36 - you plus so you will not same over here
160:40 - what is actually going on but it is pink
160:43 - Oh fine
160:44 - so for such individual operations there
160:49 - is an induced function for example here
160:53 - this function is for addition right so
160:56 - the Evalia operator is in bill within
160:58 - five items and you will determine what
161:01 - operation is being performed over there
161:04 - acid now similarly we will be creating
161:13 - it for subtraction division and
161:16 - multiplication and sub just mean check
161:32 - out a so it is fine now for
161:35 - multiplication and division
161:51 - [Music]
162:08 - now for division or multiplication or
162:13 - division okay okay so it is almost on
162:36 - and for this function is basically for
162:39 - clearing the entry field and setting it
162:41 - everything to zero so here just
162:52 - ISEE button or clearing the entry killed
162:55 - I will show you in a minute
162:58 - now the next is will be creating entry
163:03 - field and bunch of buttons nothing much
163:07 - just copy this down the procedure for
163:17 - each and every button is similar you
163:19 - just have to change store X&Y
163:21 - coordinates for placing the button based
163:23 - on your preference the division here and
163:27 - me okay so I'll just spin you what is
163:34 - actually going on so this is entry field
163:43 - where every input is been taken and this
163:47 - is the text wire for taking the input
163:50 - from the user
163:53 - now each button here is carrying an
163:59 - individual function so for the function
164:01 - which we have created above that is the
164:04 - click button with a parameter number we
164:08 - are using tag or function for each and
164:10 - every button which we agree which we
164:12 - have created
164:13 - for example we are using just the lambda
164:16 - similarly to that tic-tac-toe in so for
164:20 - each and every individual button if we
164:21 - are using click button look now so for
164:23 - example the user lifts one entry field
164:27 - gets one as an input and cases it's on
164:31 - places get that button over them so the
164:37 - procedure is same for each individual
164:38 - button you have five six and etc and
164:42 - four similarly for the operators as well
164:46 - addition multiplication subtraction and
164:49 - this button is for I see this our
164:52 - function that is a command to you little
164:54 - clearer than typical basically nothing
164:56 - much and this equal button will produce
165:00 - the output so save and just run it and
165:08 - make sure we have done we have wireless
165:12 - yes we have others so this is the
165:15 - interface this is the interview this is
165:18 - the label which we have created at the
165:21 - initial and show you so this is the
165:29 - label calculator and we are packing it
165:33 - at the top so that is why digital copies
165:35 - and trigger which we have given just
165:37 - above the first button and this other
165:39 - each individual numbers with the
165:42 - operators and the clear forms that's it
165:44 - and the tier acing the button space on
165:48 - your preference is up to you
165:49 - you can place it anywhere and yeah and
165:54 - this so some calculations one plus four
165:58 - so this I just want to tell you that one
166:01 - plus four is basically been carried out
166:03 - within this function so this is
166:08 - basically khon kaen 1 + 1 + 4 into the
166:12 - entry fill and just show you that this
166:14 - is in written and with the help of equal
166:17 - button you will get an output
166:21 - so okay we have some peridot here so
166:25 - what is the error okay so let's try
166:55 - again on the spot okay so you have fire
167:00 - water and then tree filled and let's try
167:03 - and clear this out so it is empty now
167:07 - 5-8 let's see some negative outputs yes
167:12 - we have that 2 into 3 9 okay load line
167:20 - with 5 divided by 5 divided by 5 so we
167:28 - have an output here so basically it
167:31 - works so this is the calculator which we
167:34 - have created the approach is almost
167:36 - similar the widgets are almost the same
167:38 - is the one everywhere when you create a
167:43 - widget the position of the button has
167:49 - been changed that's it
167:51 - and Esther is all the same so this is it
167:58 - for this video guys i'm swatching hello
168:04 - guys and welcome to programming
168:05 - knowledge in the previous video we
168:08 - learned about how to create a kelsey
168:11 - application calculator application in
168:14 - kinder Ayten so now move on forward or
168:18 - in this video we'll be seeing about how
168:21 - you can integrate a MATLAB graph into
168:25 - the kingdom gy so let's begin
168:29 - initially we have to import
168:32 - and make sure that you have the latest
168:34 - version of MATLAB installed within your
168:37 - system so let's begin import into or
168:42 - from mat but live dot back end sorry
168:55 - you
168:59 - buqun's not black P a so back KP
169:13 - on the score PK see this is the this
169:21 - other sub-modules person within my
169:24 - problem to get your graph connected with
169:28 - the content of this so this is one now
169:32 - you can use figure
169:39 - this one and for navigation
169:45 - if you have used white blood lib graph
169:48 - on their own salt navigation options
169:50 - present and the bottom of the graph so
169:54 - those are tadpoles will walk to and yep
170:01 - that's it
170:02 - no from mark on live long back and gone
170:15 - back basis so we have back and unless
170:26 - cone basis
170:33 - yep I live in LA gonna have to use this
170:37 - one wait and there might be an error
170:40 - okay so this is fine import he the same
170:49 - law now from my problem not singer in
170:59 - both 0
171:08 - you
171:11 - so now we'll be importing using numpy I
171:15 - will I'll be not going into deep numpy
171:19 - not teaching much of non file on the
171:22 - purpose over here mean is how you can
171:24 - use them graph into on kinder that's it
171:27 - and there will be some mathematical
171:29 - calculations done using numpy so just
171:33 - follow along as NP now creating the kit
171:41 - window option the object
171:48 - now employed in his title hood
171:52 - you
171:54 - unless code title
172:02 - you
172:09 - okay so I'm reading in tome whatever you
172:15 - want that is up to you
172:21 - okay so now sugar is available I will be
172:29 - using the figure for warding talking
172:34 - last would say this size is equal to 5
172:42 - comma 4
172:47 - you
172:49 - and dpi these are the certain operations
172:57 - done for showing the on field or the
173:02 - graph that is being produced within it
173:05 - I'll be not going that much into deep in
173:07 - the model because my hope is over here
173:09 - is teaching the embedding of window into
173:13 - the model so if you want to more in
173:15 - depth of my portal you can watch through
173:18 - the documentation of it and I'll be
173:22 - using number service I'll be taking the
173:27 - file over here which I already have
173:37 - okay so this is some mount operation
173:41 - done using numpy and this is a sub
173:45 - function of my plot that is if you want
173:47 - to add a graph plotting on based on
173:51 - certain operations for example here we
173:53 - are performing certain operations to
173:57 - produce the graph output that is like
174:00 - some numpy operations and this is within
174:04 - the problem that if you want to show
174:08 - your graph within a canvas of a kingdom
174:11 - you use that basically it's like a
174:14 - canvas and on that can wash you're using
174:17 - that cloth that's it and placing that
174:23 - canvas into a certain position for that
174:26 - we are using this back top so it will be
174:29 - at though but at the top of the window
174:33 - of window and using a navigation toolbar
174:36 - which you already have in the mat bottle
174:39 - you will it will be clear in the output
174:42 - I'll just show you in a minute now we
174:45 - will be creating a button that is on
174:51 - press on the spot key this is the
174:57 - function rest event
175:05 - [Music]
175:16 - yes
175:19 - you
175:21 - not for man sorry
175:26 - former and the key
175:34 - okay now he underscore personal variable
175:42 - dog handler even comma can loss so we
175:51 - are just basically merging the canvas in
175:52 - the graph and binding it together the
175:55 - toolbar
176:03 - okay so this is done and cameras
176:10 - you
176:15 - not and we
176:20 - or connect with you in the scope
176:27 - press the score even
176:32 - you
176:34 - closing comma and low on Cleveland
176:43 - we have to check for the school
176:46 - so this even
176:51 - you
176:54 - yep there is no error until now should
176:58 - be moving on forward and now we will be
177:02 - creating a button within this function
177:06 - good root not quit the root
177:20 - let's try so this is the function which
177:31 - will be used for quitting the window
177:34 - anti window and binding it with the
177:36 - button is equal to Kingdom not button
177:49 - and master is equal to root text is
178:01 - equal to
178:01 - you can avoid any text to it and quit in
178:11 - this one a come on doing that is the man
178:16 - is equal to good okay this packet dot
178:28 - back side is equal to dot bottom and
178:43 - this on the menu talking main loop okay
178:54 - so I guess that should be working fine
178:57 - and let's see yes we do have an error
179:05 - over here so okay this down here are
179:09 - taken the input so let's just remove one
179:14 - okay there is gone and let's run again
179:21 - on press key is not a fine level okay
179:32 - you
179:37 - okay so the function over here is
179:42 - let's find knowledge see okay so this is
179:49 - how you can integrate a mantle of it in
179:52 - a canvas or the background is a canvas
179:55 - and within that converse we are plotting
179:58 - the graphs so it is basically a
180:01 - combination of a canvas and the graph
180:04 - getting it on top of it so this are the
180:07 - navigation options so just show you
180:10 - where it exactly is so this cool one
180:16 - navigation toolbar or bouquet is for
180:19 - that option and yep this is the button
180:25 - you are seeing it in the bottom and if I
180:31 - press on it it quits so this is how this
180:37 - is how you can integrate a micrograph
180:41 - into printer and this was it for this
180:44 - video guys thanks watchin