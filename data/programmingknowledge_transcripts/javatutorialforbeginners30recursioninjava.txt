00:00 - hello guys welcome to the next video
00:02 - tutorial on Java programming for
00:04 - beginners and in this video we will see
00:06 - what is recursion and how we can use
00:10 - recursion in
00:11 - Java so it's very common practice to
00:16 - call one method from another for example
00:19 - we create a static method ad and we can
00:23 - call it inside our main method right so
00:28 - it's very common and everybody knows
00:31 - that Java also allows to call a method
00:35 - from itself like for example you can
00:39 - call add inside your add method itself
00:45 - and this type of programming is called a
00:48 - recursion or this kind of programming
00:52 - when we call method from itself is
00:55 - called
00:56 - recursion and very basic or we can say
01:00 - hello world program for
01:02 - recursion uh is factorial for
01:05 - calculating
01:06 - factorial so let's create a
01:10 - method to create a factorial for some
01:14 - number now those who don't know what is
01:18 - uh factorial what is the meaning of
01:20 - factorial we will I will just uh give
01:24 - you small um gist of it
01:28 - so a factorial is something like this so
01:31 - whenever you want to create a factorial
01:34 - of some number it's n which is a number
01:39 - multiplied by nus 1 multiplied by nus 2
01:43 - until 1 so for example we want to create
01:48 - or when we want to calculate the
01:50 - factorial of five this is equal to 5
01:56 - multiplied by 4 multiplied by
02:01 - 3 multiplied by 2 and multiplied by 1
02:07 - okay so this is how we can calculate
02:10 - factorial now let's create a method to
02:13 - create to calculate the factorial of a
02:17 - number so we can uh create this like
02:20 - this
02:23 - public static this should be
02:28 - public static
02:31 - and this is going to return integer
02:33 - value and we name our factorial
02:37 - as factorial itself and it takes an
02:41 - integer in N for example or capital n as
02:47 - we are showing here and then we will try
02:52 - to find some algorithm which calculates
02:56 - the
02:57 - factorial so if the number is z
03:00 - 0 if uh you know if we want to find the
03:05 - factorial of 0 it's one right so if n is
03:10 - less than or equal to
03:14 - 1 then we will say
03:18 - that the answer or we will return the
03:21 - answer as one right so something like
03:28 - this and here we will
03:33 - return one okay otherwise
03:39 - else we will return the value of
03:45 - n which we
03:47 - will take it inside the bracket
03:52 - then the value of
03:54 - nus1
03:57 - right so we can say indir direct L that
04:01 - we want to calculate the factorial of n
04:06 - minus1 okay so we will call the method
04:09 - itself and we will pass n minus1 here
04:14 - okay and then we will just close this
04:19 - and here we just want to return so I
04:22 - will just add
04:25 - return so this type of calling I'm
04:27 - calling factorial inside my you know
04:31 - factorial method itself and what this
04:34 - basically is doing if the value of n is
04:37 - less than 0 or less than or equal to 1
04:41 - we will return one because factorial of
04:43 - 1 and 0 is 1 otherwise we will uh return
04:48 - the multiplication of the N which is
04:51 - five for example if we want to calculate
04:53 - the factorial of 5 we will return 5
04:56 - multiplied by factorial of 4 4 right so
05:02 - once again it go goes here and now we
05:05 - want to calculate the factorial of
05:07 - four and then once again it goes 4
05:11 - multiplied by factorial of 3 it goes
05:15 - once again here 3 and factorial of 2 and
05:19 - it goes once again factorial of 2
05:21 - multiplied by factorial of 1 and
05:24 - factorial of one here when n becomes one
05:28 - or zero we will return one okay so
05:32 - indirectly it's uh calculating something
05:35 - like this okay and whenever we want to
05:38 - print CIS for
05:41 - example CIS
05:43 - o and we will print
05:50 - this and we will call factorial of five
05:56 - and let's see what's the
05:57 - answer you will run the the
06:00 - program and it should be not this should
06:04 - be out okay and we will run the
06:09 - program and the factorial of five is 120
06:13 - which is true right in the same way we
06:16 - can calculate the factorial of
06:19 - four and the answer will be 24 because 4
06:24 - * 3 is 12 * 2 is 24 * 1 is 24 itself
06:31 - right and 24 * 5 is 120 which is the
06:35 - factorial of
06:37 - 5 so this way of uh calling method from
06:41 - itself is called recursion and you can
06:45 - uh do it something like this so I hope
06:48 - you have understood the basic concept of
06:50 - recursion and I hope you have enjoyed
06:52 - this video please write comment and
06:53 - subscribe and bye for now