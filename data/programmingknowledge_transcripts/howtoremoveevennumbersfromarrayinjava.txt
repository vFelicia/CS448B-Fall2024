00:00 - and welcome back to the new video of the
00:01 - Java tutorial Series so till now we have
00:04 - covered arrays data structure so what I
00:07 - will be doing is uh we'll be covering
00:10 - some hot hot topics hot interview
00:13 - questions which are covered or
00:15 - frequently asked during the interview
00:17 - processes of the many companies okay
00:20 - so these are the basic one uh that that
00:24 - the interviewer may ask you to test your
00:27 - problem solving skills okay so if today
00:32 - in this video
00:33 - let me just open uh create one Java
00:36 - class and I will do a name that's
00:40 - supports
00:42 - remove
00:44 - elements okay so let me what I'll be
00:48 - doing is let me just increase the font
00:51 - size
01:01 - okay now it's okay okay so I'll just
01:06 - comment out the question so what we have
01:09 - to do is we have to
01:12 - remove the
01:15 - even numbers
01:19 - of an array
01:22 - so what we have to do is we have to
01:24 - write one function where you have to
01:27 - pass one array to that function and that
01:30 - function will return you the new array
01:33 - where all the elements are odd ones okay
01:38 - so what it does it will remove the all
01:41 - the even numbers from the array that you
01:45 - have you have passing to that function
01:47 - okay
01:48 - so enough talking uh I will give you an
01:51 - example let's suppose
01:54 - okay wait let me just comment it out and
01:56 - this is an example array we have this
01:59 - array
02:01 - and let's suppose we have elements
02:03 - random elements three comma 2 comma
02:07 - four comma seven comma 8.
02:11 - okay so uh this is uh the array that you
02:15 - have passed through the function and now
02:17 - uh the array which will be returned by
02:22 - our function is 3 2 is removed because
02:26 - that is your even number 4 is also got
02:29 - removed because that is also even number
02:31 - seven
02:33 - and 8 is also removed so this is the
02:35 - expected output from your function
02:37 - function okay uh so first of all let's
02:40 - break down our question so we have to
02:43 - remove the even numbers from an array
02:45 - right so first of all we have we need
02:48 - one uh way where we can
02:52 - count
02:53 - the total number of
02:56 - uh even integers that are present inside
03:00 - that array right so we need uh one way
03:03 - to count uh step let me just call it as
03:06 - steps steps that we need to solve
03:10 - count the number of
03:15 - uh not even let let us count odd numbers
03:21 - for that okay after Counting
03:26 - step number two is we have to create one
03:30 - new array of that size of
03:33 - the size equals to the odd number
03:35 - spacing inside that array right so
03:38 - create a new
03:41 - array of
03:43 - sides
03:45 - equals
03:47 - number of
03:50 - odd numbers
03:53 - right
03:55 - now after creating the array we just
03:59 - need to iterate through this through the
04:01 - array and check whether that number is
04:05 - or if that number is odd we just simply
04:08 - take that number and put it inside the
04:11 - new array okay
04:13 - so I will write if
04:16 - number is
04:18 - odd
04:20 - take it
04:23 - and
04:25 - put it
04:27 - inside
04:30 - new cell okay so these are the steps
04:34 - that we have to follow
04:36 - okay so let's go and create our main
04:41 - function first
04:42 - I will write my main function and inside
04:45 - this main function I will create one
04:46 - array
04:48 - I'll be taking the hard code hard-coded
04:51 - values you can also take the
04:55 - uh use input from the user by taking the
04:59 - creating this object of the scanner
05:00 - class as you know till now I hope
05:03 - array
05:06 - of size that suppose five and wait
05:12 - and I will pass the values
05:16 - uh let's let let me let me give the
05:19 - above values itself three two
05:23 - four seven eight
05:28 - okay
05:33 - you know now it's okay okay uh now we
05:38 - have created one array
05:40 - now I will write
05:43 - and one function
05:45 - call before that I have to create our
05:47 - function over here I will create one
05:49 - function
05:54 - yeah okay
06:01 - array
06:06 - [Music]
06:07 - um
06:07 - okay for now I will not return anything
06:11 - I will just simply write void
06:14 - my function name or else I will write
06:18 - I will return that new array itself okay
06:21 - you can also write wire but one extra
06:24 - thing that you have to do is you have to
06:26 - print that a new array inside that uh
06:29 - that function okay
06:31 - okay that's what we have to do extra
06:32 - over here I'm not doing that okay
06:36 - I will write remove given and
06:40 - I will just pass
06:42 - the array
06:45 - to it okay now inside this function
06:48 - first thing we have to do we have to
06:50 - count the odd number okay so for
06:52 - comforting part I need one uh counter
06:55 - variable
06:56 - uh let me just call quantity as or count
06:59 - is equal to zero
07:01 - initial 0. and we need one for Loop so
07:06 - this for Loop military from I is equal
07:09 - to 0 to I till
07:13 - left or less than error Dot
07:17 - length and each time we'll do our plus
07:21 - plus and inside this array now
07:24 - we check for if condition if
07:28 - I react current I index
07:32 - is one two
07:36 - it's not equals to
07:39 - zero
07:41 - okay so what this line will do is it
07:45 - will check that number and it will check
07:48 - if it is divisible by 2 mod 2 means it
07:51 - will be divisible by 2. if it is
07:53 - divisible by 2 that means that number is
07:55 - even number and you will not count that
07:58 - number as a odd odd number and we will
08:00 - not increment the value of the order
08:02 - count okay and inside this we will
08:03 - simply increment the uh
08:06 - or count by one account plus plus
08:11 - okay
08:12 - so first step is done now we have to
08:16 - create a news array of size the number
08:20 - of the odd numbers basically excited
08:22 - array okay so I will write int array
08:27 - result
08:31 - new
08:32 - length of size or count
08:36 - again okay
08:38 - now inside this I will again need one
08:43 - uh variable to get to take the track of
08:48 - the indexes of the new uh what we can
08:52 - say new array
08:53 - now
08:55 - inside our for Loop
08:58 - I will just write my inti is equals to 0
09:02 - and this for Loop will again run from
09:04 - inp I Plus 10.
09:09 - this time we'll do I plus plus
09:12 - and here we are checking on condition if
09:16 - array at it index
09:19 - mod 2.
09:25 - okay if that number is not equal to 0
09:27 - what that means
09:29 - that number
09:30 - is an odd number and we have to push
09:34 - stack number inside our new result array
09:37 - and I will pass as index because
09:40 - indexing of this result and error will
09:43 - be different uh as that of the our array
09:47 - that we have passed to the function okay
09:49 - and we'll write array add I
09:53 - after passing that we have to increment
09:56 - the index index variable also
10:00 - so that next time the I index will be
10:03 - switched to the next uh part okay for
10:07 - suppose uh for the first Value First
10:10 - Time index value is idx value is 0 so it
10:13 - will push that variable and sorry number
10:16 - to the zeroth index and next time our
10:20 - idx plus plus we will do the 0 to 1 and
10:23 - next time when we are pushing that
10:25 - number to then array it will become one
10:27 - okay
10:30 - at last
10:32 - I will just simply return our result dot
10:35 - array
10:36 - okay and over here I will call that
10:43 - remove I will call it
10:47 - function over here
10:49 - which is to call it
10:54 - wait wait
11:00 - [Music]
11:04 - why am I not able to call this
11:09 - wait a minute guys
11:15 - hint uh remove even
11:21 - more
11:29 - and I'll pass directly
11:33 - what I am getting here non-stating
11:35 - method oh wait no I will have to switch
11:38 - it by Static because
11:41 - as we know uh non-static methods cannot
11:44 - be called inside the static method so
11:46 - our main method is starting one that
11:48 - that's why we have to create our new
11:50 - method as a static on it also okay and
11:53 - now
11:54 - this whole thing I have I write inside a
11:58 - frame statement
12:00 - print
12:03 - you move even and I will pass I will add
12:06 - to it okay
12:07 - so that is pretty much I think we have
12:11 - to do let's hope
12:15 - okay so this is getting
12:18 - then the build is going on
12:21 - will this complete
12:24 - okay this is returning I guess
12:29 - object
12:31 - okay okay
12:36 - this thing we have to do I think right
12:40 - let me just comment it out
12:44 - and I will just simply
12:49 - what we can do is
12:51 - create automatic
12:59 - Ally
13:02 - and we will assign it as
13:05 - a
13:09 - and I will just simply write
13:13 - sort of
13:19 - I hope now this will work
13:25 - wait wait wait wait by this is printing
13:28 - the objects I don't know why I will let
13:30 - me check once
13:32 - foreign
13:50 - we need to iterate over that array okay
13:52 - so we have to run one of our Loop over
13:55 - here now is equal to zero uh is less
13:58 - than
14:00 - ARR
14:02 - 2 dot length and each time you'll be
14:05 - doing I I plus plus okay and inside this
14:09 - uh we'll just simply write not print Ln
14:12 - only print because it will print all the
14:15 - data in inside the vertical manner okay
14:18 - now uh I have to just print there
14:23 - right index yes
14:27 - okay so now it will print the new array
14:29 - which way which is returned by our
14:32 - function
14:34 - so expected output should be 3 and 7
14:36 - inside the new array let's see yeah
14:39 - three and seven is getting printed only
14:41 - thing is that
14:42 - I just have to print
14:45 - one extra line over here I will just
14:47 - simply write over here itself okay now
14:50 - it's okay
14:51 - fire and again three one space and seven
14:54 - should be painted on the console yeah it
14:57 - will get it printed on the concept so
15:00 - quick summarize uh what we have done in
15:03 - in this question uh we have removed the
15:06 - even numbers from an array uh so let's
15:08 - go this is the array it will remove the
15:10 - even numbers from an array so one thing
15:13 - uh let me clear uh the way I do in is
15:17 - not the only way you can do it you can
15:20 - also try in the new ways right right now
15:24 - here we have created one new array and
15:27 - we are storing that number inside this
15:29 - array uh we can solve this you know by
15:32 - using when I one array itself but only
15:34 - thing is optimization should be there
15:36 - okay so that part comes under the time
15:40 - and space complexity uh so we will also
15:43 - cover those lectures in our upcoming
15:45 - videos
15:46 - how to reduce your space and time
15:48 - complexity of your code which will
15:50 - improve The Code by much wave okay so
15:55 - here
15:57 - that's all for this question uh I will
16:00 - see in the next one