00:01 - hello guys welcome to the next video
00:02 - tutorial on Java programming for
00:04 - beginners in this video we'll see what
00:07 - are exess
00:09 - modifiers and how we can use access
00:13 - modifiers in
00:15 - Java so you may have seen the use of
00:19 - public whenever I Define some class or
00:22 - some method uh in a class and this
00:26 - public or private or this can be
00:30 - protected these are called access
00:33 - modifier and what access modifier mean
00:38 - is it basically allows you to you know
00:43 - access this method or whatever class in
00:47 - a
00:48 - package depending upon the keyword or
00:51 - access modifier we can access it inside
00:54 - the class or inside our package or
00:57 - inside whatever uh
01:00 - inside our project so how we can grant
01:04 - the access and what keyword means what
01:08 - we will see now okay so basically we
01:12 - have three kinds of access modifier one
01:16 - is called public other is called
01:19 - protected and third one is called
01:22 - private and if you don't give any access
01:26 - modifier for example I haven't given any
01:30 - exess modifier to this string name and
01:35 - integer age this will be visible or we
01:41 - can use these uh variable inside the
01:45 - package and inside the class so because
01:49 - my class which is this one and student
01:53 - class are in the same package I can use
01:57 - these inside here so let me delete these
02:02 - we don't need them anymore so my class
02:05 - and student class are in the same
02:08 - package see here in lesson one we have
02:10 - my class and student class right so if
02:14 - you provide no access modifier public
02:17 - private or protected they are visible in
02:20 - the class itself and the package so
02:24 - package inside the package we have this
02:26 - class also so we can Define uh an
02:30 - instance of the class for
02:32 - example student
02:35 - Stu is equal to new student right new
02:43 - student okay and whenever we want to
02:46 - access this
02:48 - St Dot and this name is available name
02:52 - and age both are available in this class
02:55 - also right because my
02:58 - class which which is this class and this
03:03 - class student class are in the same
03:07 - package okay so basically this is
03:11 - what we are doing here or we mean here
03:16 - okay and name should
03:18 - be some uh string so something like this
03:24 - right and when we compile the program we
03:26 - will not get any error right
03:30 - so whenever we give Public Access
03:34 - modifier before any variable for example
03:37 - I give public before my name and uh the
03:42 - age variable it's V visible everywhere
03:47 - in your class in your package in your
03:49 - subass sub classes we will see when we
03:52 - see uh how inheritance work in Java and
03:57 - basically if you define a variable as as
04:00 - public it's visible everywhere right but
04:04 - it's a good practice to uh you know not
04:09 - give or not give access to your
04:12 - variables to uh you know outside your
04:15 - package or even outside your class okay
04:19 - so the good practice is always declare
04:23 - your member variable as private or
04:27 - protected and the basic logic behind
04:30 - this is you don't want that
04:34 - your variable should be affected by any
04:38 - other user okay so you give indirect
04:43 - access to your variable using getter and
04:46 - Setter functions okay so whenever you
04:50 - add this private access modifier before
04:53 - your UH your variable name it's only
04:59 - accessible through your class itself so
05:03 - outside your class outside this student
05:05 - class you cannot access if this member
05:09 - variable is private right so now
05:13 - whenever I try to run the program I will
05:15 - get an error and the error will
05:19 - be I will go to the error and it says
05:22 - the field student name is not
05:26 - visible it's not visible because we have
05:29 - declared this name as a private member
05:33 - of the class and whenever we declare
05:35 - private member of a class it only is V
05:39 - visible inside the class and not in the
05:41 - package not in the subass not anywhere
05:44 - else okay
05:47 - so there is other keyword called
05:51 - protected which we will see when we uh
05:54 - learn about inheritance and other things
05:57 - but protected also restricts the
06:01 - visibility of your variable in the class
06:05 - itself package and subass okay so right
06:09 - now we are not uh going to discuss more
06:12 - about protected because uh this
06:15 - protected we will use whenever we are
06:18 - going to learn inheritance and
06:20 - polymorphism right so right now just
06:24 - remember this table or memorize this
06:27 - table whenever you declare your variable
06:30 - as public it's visible everywhere in
06:33 - your class package subass or anywhere
06:35 - else if you declare your variable as
06:39 - private it's only visible in your
06:44 - class and nowhere else okay N means no
06:48 - here and y means yes here okay and it's
06:53 - a good practice to make your variable
06:56 - private so that anybody else should not
06:59 - have has the direct access to your
07:01 - variable and now so we
07:05 - cannot access this name directly from
07:09 - here so how we can allow the user to you
07:13 - know set the name of the student it's
07:16 - easy by using Setter and getter function
07:20 - so go inside your class just click
07:22 - anywhere inside your class and then go
07:25 - to source and click generate getter and
07:30 - seter okay generate getter and seter and
07:33 - Java will
07:35 - automatically generate getter and Setter
07:37 - for you whatever you check you you know
07:41 - if you want to get want getter and
07:43 - Setter for name if you want get and
07:46 - Setter for age you can check both of
07:48 - these so I select all like this I can
07:52 - deselect all and for now I'm selecting
07:55 - all and click okay and
07:58 - it's created four methods for
08:02 - me one first one is get name which just
08:07 - Returns the value of name so indirectly
08:11 - we are accessing the value of name but
08:13 - not directly right
08:17 - and set name allows you to set the name
08:20 - but not directly but using the copy use
08:25 - right and in the same way we have
08:28 - defined the getter and Setter for the
08:30 - age and by the way if you are wondering
08:34 - what is uh this key word mean here so
08:39 - whenever you see this name and this name
08:43 - is similar and whenever you define any
08:47 - variable uh inside a function for
08:49 - example this name this name will be
08:52 - preferred so whenever you want to do
08:54 - something like this Java may get
08:56 - confused this name is uh this name
09:00 - itself or this name which you define in
09:04 - the class so this
09:07 - keyword this keywords tells Java that
09:11 - it's a member of the class which is this
09:14 - one so this indicates class itself so
09:19 - this means whatever class we are in okay
09:24 - so student. name which is this variable
09:28 - not this variable right so basically you
09:33 - need to use or you can use this of
09:39 - keyword here whenever you have two
09:42 - variable with the same name and you want
09:44 - to differentiate between them this dot
09:48 - whatever is the member of the class
09:50 - which is this one and the variable which
09:54 - doesn't have this is the local variables
09:58 - like so this the name here is the local
10:02 - variable this one and this name which uh
10:07 - is preceded by this is the member
10:11 - variable this one so this is what this
10:15 - means this means the class itself
10:18 - student. name indirectly you can say
10:21 - instead of this you can just to imagine
10:25 - it like student. name okay but this
10:28 - keyword is indicates the class
10:31 - itself and now if you want to set the
10:35 - name what you can do is instead of
10:38 - directly setting the name you can just
10:40 - write St do set
10:45 - name and then you can set name like
10:49 - this okay and whenever you want to get
10:52 - the
10:53 - name you can just do something like
10:57 - this instead of of a
11:00 - class dot
11:03 - get
11:05 - name okay so this will allow you the
11:09 - access to this variable name but
11:13 - indirectly okay
11:16 - so just remember this table if you can
11:22 - memorize public grants you access to
11:25 - everywhere private grants you access
11:26 - only in the class itself and it's always
11:29 - the better practice to make your
11:32 - variables private unless and until you
11:35 - have the strong reason to make them uh
11:37 - you know public and use getter and
11:41 - Setter to access these me member
11:44 - variables okay and the meaning of this
11:48 - is the class itself so if you add this
11:52 - keyword before any variable it means the
11:55 - member of the class and whenever you
11:58 - don't have this here then it means it's
12:01 - a local variable so you can avoid
12:05 - conflicts between two similar variable
12:08 - names okay so I hope you have understood
12:12 - the basic concept of access modifier and
12:14 - this keyword and I hope you have enjoyed
12:17 - this video please R comment and
12:18 - subscribe and bye for