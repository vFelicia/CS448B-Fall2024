00:00 - hey guys welcome to the next video on a
00:02 - shelf scripting tutorial for beginners
00:04 - in this video we will learn how to
00:06 - perform arithmetic operations in shell
00:09 - script so let's get started so to
00:13 - perform arithmetic operations you may
00:16 - you know consider using something like
00:19 - this so you can echo and then you can do
00:23 - one plus one but by default echo command
00:27 - takes anything which is written after
00:30 - this echo command as a string so if you
00:34 - run this script you will see it will
00:37 - just dump whatever which is written
00:41 - after the psycho command as it is so
00:43 - it's not performing any automatic
00:46 - operation so how do we achieve it so
00:49 - let's take an example and then we will
00:53 - see how do we do it so I will create two
00:57 - variable num one is equal to 20 for
01:00 - example and number two is equal to five
01:05 - for example okay and then I want to
01:08 - perform some basic mathematics on these
01:12 - integer numbers for example addition
01:15 - subtraction or multiplication division
01:17 - or modulus operation so to perform this
01:22 - you take this number as it is and then
01:27 - for example I want to do addition I can
01:29 - just - num - something like this
01:33 - addition is done like this only but for
01:36 - this you just need to enclose these two
01:41 - variables inside double brackets so you
01:46 - just need to do double bracket this side
01:49 - and double bracket on the other side of
01:53 - this expression like this okay but still
01:58 - you will not be able to achieve your
02:01 - goal so if you do echo still it will
02:05 - print as it is but when you do this
02:09 - dollar symbol or when you add this
02:12 - dollar symbols before your expression
02:16 - this double parentheses expression then
02:19 - let's see what happens and don't forget
02:21 - to give the space here okay and let's
02:25 - run the script and let's see what
02:26 - happens so you can see it has performed
02:29 - the automatic addition on these two
02:33 - variables right so to perform these
02:37 - basic arithmetic operations you need
02:40 - these double to parentheses and then
02:43 - this dollar symbol before them so they
02:47 - could be evaluated as an automatic
02:51 - operation right in a similar way we can
02:55 - perform other automatic operations for
02:58 - example if you want to do subtraction
03:00 - you can do something like this if you
03:03 - want to do multiplication we use
03:04 - asterisk or star whatever you want to
03:08 - call it and then for division you just
03:11 - need to give this forward slash here and
03:13 - there is one more operation which is
03:16 - also considered to be a basic automatic
03:19 - operation which is this modulus
03:21 - operation so let's see what happens so
03:25 - when we run the script one by one we
03:28 - will evaluate all the expressions so
03:31 - what's happening here is in the first
03:33 - echo command we are doing the addition
03:36 - which is 25 which is 20 plus 5 25 which
03:40 - is true then the subtraction which is
03:43 - also true you can see here then the
03:45 - multiple multiplication 20 in x 5 is 100
03:49 - which is also true and then we have done
03:52 - the division which is also true and then
03:56 - we have done the model large modulus
03:58 - operation so modulus operation means
04:02 - that whatever you get as a remainder
04:07 - after dividing the number that remainder
04:12 - will be you know treated as a result
04:15 - okay in our case there is no remainder
04:19 - when we divide 5 by 20 so we get 0 here
04:25 - but if you use for example 21 here then
04:29 - you will get one as a remainder because
04:32 - five will be divided by 21 when it's
04:37 - divided by 21 we get the remainder of
04:39 - one
04:40 - okay so this is how you perform the
04:44 - basic automatic operations in scripting
04:49 - now there is an alternate way of
04:52 - performing automatic operations on your
04:57 - integers and that is by using expr
05:00 - command so to use exp our command we are
05:04 - going to use the same variable but you
05:07 - use only one parenthesis like this here
05:11 - so just use one parenthesis like this
05:16 - and instead of using double brackets or
05:21 - parenthesis you just need our keyword
05:24 - expr okay so you just need to use expr
05:30 - and then for the variables you just need
05:33 - to use them as a normal variable with a
05:36 - dollar symbol something like this so use
05:39 - this kind of a dollar symbol before
05:41 - every you know variable so I'm going to
05:45 - just use this dollar symbol before every
05:48 - variable and this expr command before
05:52 - these operations something like this
05:55 - okay and let's run the script once again
05:59 - and let's see what happens
06:01 - and you can see it's giving us the
06:04 - result but for the multiplication is
06:07 - giving us the error and this says it's a
06:11 - syntax error because in whenever you are
06:16 - using expr this Asterix is not escaped
06:21 - okay so you need to use this Asterix
06:24 - with this escape character which is
06:28 - backslash and then everything will be
06:30 - okay so once again when you run the
06:32 - script you will see the same result as
06:35 - you got with the expression
06:37 - the double parentheses but don't forget
06:40 - to use this escape character before this
06:45 - asterisk for multiplication whenever you
06:47 - are using this expr command okay so this
06:51 - is how you can do the are automatic
06:54 - operation by using these two ways on
06:56 - integers but what happens when you want
07:00 - to perform these automatic operations on
07:03 - for example decimal values this we are
07:06 - going to see in the next video when I'm
07:09 - going to show you how we can perform
07:11 - these automatic operations on some
07:14 - decimal values so stay tuned and please
07:17 - recommend subscribe and bye for now