00:01 - hey guys welcome to the next video on
00:02 - shell scripting tutorial for beginners
00:04 - in this video we will learn how to use
00:06 - readon command in Shell scripting Now
00:09 - read only command can be used with
00:12 - variables and functions and by the name
00:15 - itself we can understand that it can be
00:18 - used to make variables or functions read
00:22 - only so they cannot be
00:25 - overwritten so let's take an example so
00:29 - first of all we will take a variable for
00:31 - example VAR and then we will assign some
00:34 - value to it so for example 31 right and
00:39 - now we can use a readon command on this
00:42 - variable so just write read only and
00:46 - then the name of the variable so read
00:50 - only space VAR for example okay and till
00:54 - now everything is okay but now after
00:58 - this point whenever we want to re
01:01 - reassign some value to the variable same
01:05 - variable V then let's see what happens
01:09 - so we will just uh run our script for
01:13 - example and you can see on line number
01:17 - seven war read only variable so it gives
01:22 - us a warning that war is a readon
01:26 - variable and we cannot change the value
01:28 - of it so let's print the value of V For
01:31 - example so I'm going to just Echo and
01:35 - then uh V is equal to let's give it
01:41 - something like this and then let's print
01:44 - VAR so let's uh print the value of v and
01:48 - the value of V is 31 so even though we
01:52 - have reassigned a value of VAR to 50 but
01:58 - the VAR remains
02:00 - same as this one which is 31 because we
02:03 - have made this war variable read only
02:07 - and we can not reassign any value to VAR
02:10 - because it's a readon variable now and
02:14 - you will also see this warning so you
02:17 - will be able to understand that this is
02:20 - a readon variable in a similar way the
02:23 - functions can also be made read only so
02:27 - let's take an example so I'm going to
02:29 - create
02:30 - a hello function for example and then I
02:34 - will just print hello world using Echo
02:37 - for
02:38 - example hello world okay so everything
02:43 - is okay right now and whenever we call
02:47 - this function hello and let's run the
02:50 - script once again and it prints hello
02:52 - world everything is okay right now if we
02:56 - want to make this function read only
02:59 - then then we use a read only first of
03:02 - all the readon keyword which is uh this
03:06 - one right before the function name but
03:08 - this will not make your function read
03:11 - only for functions you need to use minus
03:14 - F flag okay so you need to use this
03:18 - minus F option in order to make a
03:21 - function read only right and now
03:24 - whenever you want to overwrite your
03:27 - functions for example I will once again
03:30 - create a hello function and I will just
03:33 - Echo this time hello world again right
03:36 - something like this and let's see what
03:38 - happens so I'm going to run the script
03:41 - and you can see this warning at line 19
03:45 - and it says hello read only function
03:50 - right so from here we know that this
03:54 - error is coming from uh the line 19
03:57 - right it will give you the place where
03:59 - it's coming from and it says that the
04:02 - function is read only so we cannot
04:05 - overwrite this function okay so readon
04:09 - command can be used to uh you know
04:13 - create a variable or a function read
04:15 - only that means we cannot uh you know
04:18 - reassign the value of variable in case
04:21 - of variables and we cannot overwrite a
04:25 - function in case of function if the
04:27 - function is readon function so sometimes
04:30 - we need these kind of readon variables
04:33 - and functions in our script and this is
04:36 - how we can achieve them okay now for
04:40 - example we just write the keyword read
04:45 - only here at the last okay so what
04:48 - happens when we write uh read only
04:51 - keyword only and nothing in front of it
04:54 - so let's run the script and let's see
04:55 - what happens and you can see here uh
04:59 - after this warning we will be able to
05:02 - see all the variables which are read
05:07 - only by default right so let me make it
05:10 - a little bit clearer I'm going to just
05:13 - uh you know remove everything and I will
05:15 - just use a keyword read only and let me
05:18 - clear the terminal and run the script
05:20 - once again and it gives us the list of
05:23 - all read only builtin uh variables which
05:28 - are listed here you can see see that
05:30 - that bash opts are read only and we can
05:35 - see bash P ID is read only bash version
05:39 - info is readon EU ID is readon right so
05:44 - all these uh you know variables are
05:47 - built in and they are read only you can
05:51 - also use the option minus p with uh this
05:54 - thing and this will give you almost the
05:58 - same result
06:00 - okay so if you want to see the list of
06:04 - all readon
06:06 - variables uh then you can use read only
06:10 - only like this or with the flag P okay
06:15 - and if you want to see all the readon
06:18 - functions then you just need to use
06:20 - minus F flag okay so once again let me
06:24 - clear the terminal and let me run the
06:25 - script and right now there is no readon
06:29 - function function right and we can
06:31 - create this kind of function so once
06:34 - again I'm going to create the hello
06:37 - world function so and I make this
06:40 - function uh read only something like
06:44 - this right and then I just write read
06:47 - only minus F and let's see what happens
06:51 - so now it gives us this function which
06:54 - is read only okay so minus F is for
06:58 - functions so if you write readon minus F
07:01 - and nothing in front of it it will give
07:03 - you the list of all the function which
07:06 - are read only okay so minus P for
07:10 - variables and minus f for functions so I
07:13 - hope you've enjoyed this video please
07:15 - Rec com And subscribe and bye for now