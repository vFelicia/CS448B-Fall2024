00:00 - welcome to programming knowledge so this
00:02 - is our sixth tutorial on a jungle CD so
00:05 - again welcome you all to programming
00:06 - knowledge so before I proceed with the
00:09 - sixth toriel I would like to give you a
00:10 - brief overview of the previous tutorials
00:12 - as well so this is our github link of a
00:15 - repository you can move to this link and
00:18 - download the source code and you can run
00:21 - this project on your local machine and
00:22 - find below the instructions how you can
00:24 - run it in the previous tutorial I showed
00:28 - you how you can use extend as a function
00:32 - to extend your basic template to the
00:34 - other pages as well so I even showed you
00:37 - and in that two previous tutorial to
00:39 - that one I showed you how you can render
00:41 - an HTML page and this is going to be
00:44 - continuation to the Django templates as
00:46 - well and in this we are going to work
00:48 - with how you can work with how you can
00:51 - work with Django templates in order to
00:54 - render more things on your front-end
00:58 - application part but this time we are
01:00 - going to use two things one is going to
01:02 - be the for loop and one is going to be
01:04 - the if else part and before this I would
01:07 - show you how you can pass variables to
01:09 - your front-end application front-end
01:12 - part of your application using the tech
01:14 - text function and how you render your
01:17 - variables using a dictionary so you will
01:20 - get to know this call this in this
01:21 - tutorial so let's get started with it so
01:24 - first thing I was good I am going to do
01:27 - is going to define a part so this is
01:30 - basically I am going to define a URL my
01:33 - third page and I would call a function
01:38 - views dot my third page and I would name
01:43 - this as my third way third page as well
01:46 - so I am using this naming convention so
01:51 - that in order you you get a module so
01:54 - you get a brief overview like this is
01:56 - the third page you are working for so I
01:59 - of course I will run my server on my
02:01 - machine so this is showing an error why
02:04 - is it so because you know I have not
02:06 - defined my third page function in my
02:09 - views so what I'm going to do I am going
02:12 - to
02:13 - - my used or py file and define my third
02:20 - page which takes requests as a parameter
02:24 - and basically it is going to return and
02:29 - render requests and third HTML so
02:38 - basically till now I have not defined
02:41 - for Android HTML yet so what I'm going
02:43 - to do is go into my templates folder and
02:47 - inside I'll go to second hood HTML so I
02:51 - would quickly copy this and create a new
02:54 - file I'll paste this and I'll change
02:58 - this as third ah even I'll change this
03:03 - also past third
03:08 - now I'll save this as third dot html'
03:15 - and I hope this will work and I'll move
03:21 - to my local O's ok this server has
03:23 - started my third page so you can here
03:28 - see the title is my third page so third
03:32 - grade extends for spare to the common
03:34 - navbar so I told you how you can quickly
03:36 - extend one page to another using an
03:40 - extent function so now I would tell you
03:44 - how you can extend variables I think you
03:47 - are going to extend variables to the
03:50 - front and application using the context
03:53 - function this is going to be very pretty
03:55 - good and pretty easy also so what you
03:58 - can do you can simply create a variable
04:02 - I'll create a variable of a data type
04:05 - strain to the name hello world now what
04:12 - I'm going to do I'm going to define my
04:14 - dictionary and what what variable you
04:21 - want to pass okay just for it just to be
04:24 - on an easy way I this any key value pair
04:28 - so basically basically you are passing
04:34 - the variable wire with the name also as
04:38 - well so what I'm going to do as you have
04:42 - a quick overview of this so you will
04:44 - type and text is equal to my dictionary
04:48 - now you are passing a new variable where
04:52 - so this is your variable basically this
04:54 - has a data on the right side value and
04:58 - on the key side you are naming the name
05:00 - which is going to be rendered on the
05:02 - front and path and now what I'm going to
05:06 - do I'm going to declare h1 heading and
05:09 - to initialize the value of the variable
05:12 - I'm going to type where okay this looks
05:16 - good now I will refresh this page now
05:19 - it's
05:20 - hello world so this is pretty cool now
05:23 - what I can do also I have another
05:25 - variable greet greeting and I'm saying
05:34 - hey how are you so this would greet the
05:42 - user but this time I'm going to pass
05:46 - with the mean message so so this would
05:53 - help you to understand so this can be
05:55 - any so fine telling greeting is an
05:58 - variable of data type string so this is
06:01 - the value greeting and what name I'm
06:04 - going to pass it with the message name
06:05 - so when I move to the third dot html'
06:09 - what I'm going to do I'm going to use
06:14 - message here and now this message
06:18 - basically has the greeting variable
06:20 - inside a so this would print the value
06:25 - on the front and application part so say
06:27 - it is a how are you so this was pretty
06:30 - cool now I'm going to define for list of
06:38 - fruits basically apple mango and banana
06:47 - and I'm going to pass these foods using
06:55 - a key value pair so basically I'm going
07:00 - to pass it with the name my fuse so this
07:04 - would pass this fruits which has a data
07:09 - type of list or array you can say and I
07:13 - am going to pass it with the name my
07:16 - fruits on the front end part and when I
07:19 - move here I'll create an unordered list
07:23 - using a simple for loop so I would type
07:26 - okay before this I would type for each
07:31 - fruit
07:33 - in my fruits
07:37 - I think please simply end this tube
07:44 - using this template and for and I'm
07:50 - going to type type type the list
07:52 - parameter and basically each fruit is
07:57 - the value I'm going to print and you can
08:04 - see the magic here you can see apple
08:07 - mango banana is here and simply maybe
08:10 - some time you have a large list in your
08:14 - back-end part and you want to print it
08:16 - you can simply print it using a for loop
08:18 - so even this you can you you can do this
08:21 - like this most of we do a like for I in
08:26 - my fruits you can simply print I as well
08:31 - so this will also work okay so you can
08:35 - see here even this also works so this
08:38 - looks pretty good we are done with the
08:40 - fall over as well now we are going to
08:43 - work with the FL spot so in the views
08:48 - dot py you can see I'll declare a
08:53 - variable it could go any type and
08:57 - basically they could go any type what
09:02 - you can do is like even I can have a
09:05 - brief overview this is how we use like
09:10 - if/elif/else
09:13 - and and F so in order to anything you
09:17 - need to type if I live else and ended so
09:21 - what we can do okay okay we are going to
09:27 - take two numbers num1 comma 2 is equal
09:34 - to 3 and 5 so what we are going to do
09:40 - and we are going to take a variable
09:43 - answer
09:46 - and that answer is going to be what we
09:53 - can do is answer is going to be numb 1
09:58 - is greater than num2 so before this I
10:03 - would print the answer on my console so
10:09 - what I'm going to do is going to refresh
10:12 - this page this would this you are recall
10:15 - that you got views or py and it says
10:18 - false so you can hear seed it says false
10:22 - because num1 has the value 3 and the
10:24 - num2 has the value 5 and if 3 greater
10:28 - than 5 no so this case the value has
10:31 - false and it dispenses the answer on my
10:34 - consoles I would comment this out
10:37 - and I would render answer as answered
10:45 - and num1 as num1 ok
10:57 - and also num2 as num2 so this should
11:08 - work and I'll see ok now you can see the
11:15 - ok that this is going to be rendered so
11:17 - num one is for being part as num1 num2
11:19 - answer now I am what I'm going to do I'm
11:24 - going to use an if condition
11:32 - if answer and I'm going to use an else
11:42 - part as well else and end if okay so you
11:54 - can see this is the same syntax I'm
11:56 - using so this time I'm only using an if
11:59 - else and end if only if answer
12:06 - if an answer field right this means what
12:10 - I mean meant in my view dot py file that
12:15 - if this is true then num1 is greater if
12:20 - else it's for than then number two is
12:21 - greater then you will type num one is
12:32 - greater then okay we can even do this
12:42 - like this also what we can do we'll use
12:44 - curly braces num 1 is greater than now -
12:54 - this looks good or an else part we are
13:00 - going to the reciprocal of it and change
13:03 - this as num 2 is greater than no one
13:09 - okay so this is my FL spot and I moved
13:14 - with my page fine
13:17 - if this says 5 is greater than 3 because
13:20 - I had mentioned in the usual py file ok
13:24 - if I change these two number ask any
13:26 - random numbers file takes us to 10 and
13:30 - I'll take this as 7 so this will work
13:34 - maybe this should work and ok it says 10
13:38 - is greater than 7 because because I have
13:43 - created a back-end logic and I'm
13:46 - using an bacne logic bomb in my
13:48 - front-end part as well so in the
13:51 - previous you should I showed you five is
13:53 - greater than three now I'm sure you can
13:56 - is greater than seven so you can use
13:58 - this back and logic on the used or py
14:01 - part to render it and show it in front
14:03 - in part so thank you so much you guys
14:05 - I'll catch up you in the next step so
14:07 - thank you guys