00:00 - hello guys welcome once again in this
00:02 - video I'm going to show you what is a
00:05 - function how to use a function and why
00:08 - we use function in Python so first of
00:12 - all what is a function so let's see what
00:16 - is a definition of function a function
00:20 - is a group of statement that together
00:24 - performs a specific task so basically we
00:29 - write a function to do a particular task
00:34 - again and again without rewriting the
00:37 - same code again and again and functions
00:41 - make your code
00:44 - readable and you know uh maintainable
00:48 - maintainable means uh if you want to uh
00:52 - you know change uh something in your
00:55 - code by writing functions it's easy to
00:59 - maintain your code code okay so always
01:01 - remember whenever you want to write a
01:06 - specific uh logic or code again and
01:10 - again or more than once use a function
01:14 - instead okay so let's see how we can
01:18 - define a
01:19 - function so in Python you can define a
01:22 - function like this you need to use
01:26 - a uh keyword which is that F and then uh
01:32 - you give a space and give a function
01:35 - name and then in the brackets you give
01:40 - uh something called
01:42 - arguments okay so whatever you give in
01:45 - the brackets these are called arguments
01:49 - and there is no limits to arguments
01:52 - arguments uh you can Define any number
01:55 - of argument which you want to pass to a
01:58 - function and and then a
02:01 - semicolon and then comes the statements
02:04 - statements are the piece of code which
02:07 - you write inside a
02:09 - function now suppose I want to make a
02:13 - function to print uh hello to some name
02:19 - so either I can do print as we have been
02:24 - seeing that I can use print and I can
02:28 - say hello
02:33 - hello and the name for example I want to
02:35 - say hello Mark right
02:39 - so and I can print it but for example I
02:43 - have 25 names or 100 names which I want
02:48 - to say hello and I don't want to rewrite
02:51 - this print again and again by the way
02:54 - this print is also a function and we are
02:57 - passing the string as an argument to
03:00 - this print but print is a built-in
03:02 - function which I have shown you in the
03:04 - previous video what are built-in
03:06 - function and how to use built-in
03:08 - function now let's make our function and
03:13 - what function we Define are called user
03:15 - defined function so we will Define a
03:18 - function for example call we will call
03:20 - our function Def and then name our name
03:24 - of our function will be hello for
03:28 - example okay and what we are going to do
03:31 - we are going to pass a variable so you
03:34 - can name your variable or any name you
03:37 - can give any name to your variable for
03:40 - example name or X or Y or whatever you
03:47 - want to give an
03:50 - argument you can name your argument uh
03:54 - depend depending upon your wish so uh I
03:58 - will name my ARG argument as name
04:01 - because it's more logical because I want
04:03 - to print name right and then I give this
04:07 - colon okay now after this colon inside
04:11 - the function we write statement so what
04:14 - we want to do we want to
04:17 - print hello and the name whatever we
04:21 - pass in a function right so we will say
04:25 - hello and print and then we pass this
04:29 - argument whatever argument will you will
04:31 - pass we will pass this argument to the
04:34 - print function and then what we want
04:37 - that uh we want to print hello and
04:40 - whatever name we will pass okay now I
04:43 - will just uh run this function or how we
04:47 - can use this function so function is
04:50 - defined now okay now how we can use this
04:53 - function we can can just call this
04:56 - function
04:58 - hello and then we can pass a name which
05:02 - is a string right so we want to pass
05:05 - a function which takes a string okay so
05:09 - for example I say
05:12 - Mark okay and I press enter and it says
05:16 - hello Mark okay and once again I can
05:21 - just once again called
05:24 - hello and this time I pass a different
05:27 - name for example
05:30 - John and it says hello John and in a
05:34 - similar way you can pass any name it
05:36 - will print other names also so what this
05:42 - for function has done for us it makes
05:46 - our code really you know readable
05:49 - because we are not rewriting this uh
05:54 - piece of code which is print for example
05:56 - suppose you want to uh perform uh you
06:00 - know 10 or 20 line of code in one go and
06:05 - this these 20 line of code perform a
06:08 - particular logic and you don't want to
06:11 - you know write rewrite these 20 line of
06:14 - code again and again so you can use a
06:17 - function instead to enclose these 20
06:20 - line of code and then you can use this
06:22 - function so that you don't have to write
06:25 - this 20 line of code again again again
06:28 - and again you can just call a function
06:30 - by its name if it takes an argument you
06:33 - can pass the argument and then it will
06:36 - give you the
06:37 - result right now it's not necessary that
06:41 - you always has to pass any argument you
06:44 - can define a function without any
06:47 - argument also right so always remember a
06:52 - function can have zero argument or any
06:57 - number of arguments minimum is zero Z or
07:00 - no argument and maximum is depending
07:03 - upon you
07:05 - okay
07:07 - now uh there is
07:11 - a you and one more thing I want to say
07:15 - here is function don't uh take only
07:18 - strings they can take numbers so let's
07:22 - uh make a little bit useful function to
07:26 - add two numbers so I will just Define a
07:31 - function by DF and I will uh name my
07:35 - function as ADD function okay and this
07:39 - will take two argument for example X and
07:42 - Y so I will just separate my arguments
07:46 - by a comma and then I will give a give
07:49 - this colon here and then I want to print
07:53 - the result okay so what I can say is I
07:57 - can return
08:01 - and return means giving the answer okay
08:06 - simply giving the answer and what I want
08:08 - to return I want to return the addition
08:10 - of X Plus y okay and now I will press
08:16 - enter two times that means my function
08:19 - is defined now I can use this function
08:24 - to add two values so I will call this
08:26 - function add and I want to add for
08:29 - example 100 and
08:33 - 500 okay and what will what this will do
08:37 - it will add and 500 and it will return
08:42 - the answer
08:44 - so if when it Returns the answer you can
08:47 - save your answer in some other variables
08:50 - for example I can define a variable
08:52 - called sum and I can save this
08:55 - sum in this variable okay
09:00 - so for example I Define a variable
09:01 - called sum 1 is equal to add 100 comma
09:06 - 500 and I can press enter now my sum is
09:10 - in my sum one variable so I can print my
09:13 - sum one like this sum one and it gives
09:17 - 600 so what this function has done done
09:20 - for us add function it has taken X and Y
09:24 - so X is assigned or 100 is assigned to X
09:28 - and and 500 is assigned to Y and then it
09:33 - adds the value of X and Y which is 100 +
09:36 - 500 and it gives the result return the
09:40 - result and when a function return any
09:43 - result you can save it into another
09:47 - variable okay so it has saved uh this
09:51 - result into the sum variable and it
09:54 - returns and same thing you can do again
09:57 - and again so for example you want to add
10:01 - some other numbers for example
10:04 - 234 and 333 you can do it like this and
10:10 - you can call sum two and give will give
10:13 - you the result okay so in this way you
10:18 - can use functions in
10:22 - Python I hope you have enjoyed this
10:24 - video please rate comment and subscribe
10:26 - and bye for now