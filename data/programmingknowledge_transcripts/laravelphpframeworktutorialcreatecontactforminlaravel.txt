00:01 - [Music]
00:07 - in this video we're going to see how to
00:10 - grade a form using bootstrap we're going
00:14 - to create a new post route and give it a
00:17 - name then we will call the new route
00:22 - from the forum we are going to see what
00:24 - is CS are f or cross-site request
00:28 - forgery we're going to add a CSRF token
00:32 - to our form and we are going to check
00:36 - the request parameters send from the
00:39 - form okay
00:43 - so the first thing to do is to create a
00:46 - new form so I'm going to open our
00:49 - project
00:57 - here we are and we have in resources
01:02 - views they have our contact page so here
01:10 - we have to add a new forum right so
01:14 - let's go to
01:17 - would strap
01:26 - and we're going to
01:29 - search for I'm sorry bootstrap form here
01:36 - we are and here you have an overview or
01:39 - an example so I'm going to copy this and
01:47 - paste it on our contact page and see how
01:53 - it looks like
02:01 - let's serve our application PHP horison
02:13 - serve okay let's try this out
02:23 - co-host and if we go to contact page
02:31 - here we have our form as we are using
02:35 - bootstrap as we saw in the last video
02:39 - this is using bootstrap as well so here
02:45 - we have an email address and a password
02:49 - so in the next few minutes we're going
02:52 - to change this let's go back to our list
02:54 - and now I have a form
03:00 - we had to add fields using bootstrap
03:02 - okay so for example for a contact form
03:08 - we can use a name from the user and of
03:17 - course an email a subject and a text
03:22 - which is going to be the increase right
03:25 - so let's add this I'm going to take the
03:34 - password way and the check as well okay
03:43 - so first of all we need to look for
03:50 - going to rearrange this okay I'm going
04:00 - to have a text field I'm going to use
04:03 - this plus form group as we are using
04:07 - bootstrap when you copy this
04:18 - and we have named name and here this is
04:26 - type 'text an ID of name and name this
04:37 - case is name too so we don't have a
04:43 - describe section for example here we
04:48 - want to keep this for the email field
04:50 - but not for any other field so I'm going
04:54 - to erase this and replace holder for
04:59 - example enter name so let's see if this
05:02 - works great we have a name field and an
05:13 - email address field so we have to add a
05:17 - subject which is going to be another
05:20 - text field and a text area so for
05:28 - example this is subject
05:37 - this is text as well name we're going to
05:41 - use subject and for the ID to and for
05:47 - the placeholder of course enter subject
05:50 - and the same for the message okay so
06:16 - let's see how it looks okay now we have
06:20 - our name email subject and message so
06:26 - take a look at this maybe we want a
06:28 - large field for the message so if you're
06:33 - going to bootstrap page we have an
06:37 - example text area so I'm going to grab
06:41 - this
06:44 - which is the code for the text area we
06:49 - are going to replace this code so now we
06:59 - have again message name message and ID
07:12 - message and I'm going to leave this with
07:18 - 3 rows let's see how it goes great now I
07:26 - have a bigger area to write our message
07:29 - and we can resize it from here okay so
07:38 - now we have our bootstrap form and now I
07:44 - have to create a new post route and name
07:47 - it this is because we have a form here
07:51 - and we to send the information in this
07:56 - form we need to make a post request so
07:59 - the action of this form would be post
08:03 - and we need to put a link to send this
08:10 - information so this VD sorry method post
08:16 - and the link would be action so for
08:23 - example we could create a new route
08:25 - called contact / sub it
08:32 - okay so now we have to create a new
08:39 - route I'm going to route web not PHP and
08:46 - I'm going to create a new post route
08:52 - which is going to be contact slash
08:56 - submit okay so let's write this out for
09:05 - example with an OK message this is saved
09:16 - I will see how this goes
09:23 - okay I am going to submit the form and
09:28 - we have an error this is a security
09:34 - error and as you can see here we are
09:37 - going to see worries CSRF and that is
09:41 - CSRF token to our form so now I have
09:45 - created a new route called the new route
09:48 - from the form and we're going to see
09:55 - what is CSRF so let's go to laravel CSRF
10:10 - and here you can see that Laurel makes
10:15 - it easy to protect your application from
10:17 - cross-site request forgery attacks which
10:21 - is Tory which are a type of malicious
10:25 - exploit whereby unauthorised comments
10:29 - are performed on behalf of an
10:31 - authenticated user ok you can read more
10:35 - of CSRF if you want so to prevent this
10:38 - we only have to add this directive
10:42 - within our form so let's do this here
10:54 - and if we test our form again great now
11:06 - it works of course we are testing this
11:09 - and it's working ok but it throw us a
11:13 - warning that this will throw an error in
11:16 - a future version of PHP so let's change
11:20 - this for for example one two three I
11:27 - think this would be the same thing No ok
11:31 - it works ok so behind the scenes we have
11:37 - if we inspect the source code we should
11:42 - see here
11:47 - in our form this variable input type
11:53 - hidden' so we are not seeing it
11:56 - the name is token
12:00 - and have a value so this is the same as
12:07 - at CSRF we can put an input hidden
12:11 - verbal here or just called this magic
12:15 - method from larva blade directive okay
12:24 - great so we saw what is CSRF and added a
12:29 - CSRF token to our form now for example
12:35 - we can name our routes okay let's see
12:40 - here
12:42 - we can give this route a name take a
12:46 - look at this you can search for laravel
12:50 - routes
12:56 - and here we have a section called named
12:59 - routes so it says named routes allow the
13:03 - convenient generation of URLs or
13:06 - redirects for specific routes and you
13:09 - may specify a name for route by changing
13:13 - the name method until the route
13:17 - definition so let's do that here for
13:24 - example name contact form submit now
13:36 - we don't have to remember all of our
13:40 - application routes so instead of putting
13:44 - contact / sub mint here we can call the
13:49 - name of the route so everything every
13:54 - variable that you're putting here in the
13:58 - blade files should be between double
14:03 - curly braces like this and now we can
14:08 - call the route function and just set
14:13 - contact form submit let's say this saved
14:23 - and if we refresh the page here and
14:27 - inspect the code again you see that the
14:32 - action is actually contact slash submit
14:36 - so it's pretty much the same thing it's
14:40 - a more clean way to do it and of course
14:45 - it works and it helps you to organize
14:48 - your code because if you change for some
14:53 - reason this route for example to this
14:59 - you don't have to search for contact /
15:03 - sub needs on every form you use it
15:05 - because you're calling for the name so
15:12 - this helps you in your development ok
15:16 - let's go back
15:18 - so maybe you should name all of your
15:22 - routes okay I'm going to do this now so
15:28 - this would be home this would be contact
15:37 - and this would be about of course ok
15:51 - great
15:54 - you can see that it is working as well
15:56 - so let's check this out again
16:00 - and now we have to see if we are getting
16:04 - our parameters in this instance okay so
16:11 - as you can see here we're sending a name
16:15 - email address subject and message that's
16:18 - why we added the name attribute here so
16:25 - if we go to our routes file again here
16:30 - we can return a request all so what is
16:42 - this request is a global variable that
16:47 - you have here in laravel that contains
16:50 - all of the request information that you
16:54 - are receiving from the page that's
16:57 - calling this route okay so here we are
17:00 - receiving a request from our contact
17:03 - form and I'm going to show all of its
17:07 - parameters let's see if this works
17:12 - you
17:14 - and now we have sha some form we have
17:19 - our token our name subject and message
17:23 - so we'd have the email here I think
17:27 - that's because with an R is a name yeah
17:31 - I didn't change this and the name
17:41 - attribute
17:51 - oh sorry we have to refresh the form and
17:55 - now we have our email there is a nice
18:01 - way to see this and it is with the TT
18:09 - function which stands for dump and die
18:18 - so this will dump the request all
18:22 - variable and then kill the application
18:31 - and now we see it as an array okay so
18:36 - this is a cleaner way we have a name
18:39 - email subject and message and if we add
18:42 - data to it for example John Doe John add
18:51 - TOCOM
18:53 - this is the subject hello this is a test
18:59 - message so let's submit this and here we
19:06 - have our data so indeed we are receiving
19:09 - our data so let's check this item out so
19:14 - that's it for today thank you very much
19:17 - for watching guys
19:22 - [Music]