00:00 - we'll be learning about the data types
00:02 - in Java so what are the data types data
00:05 - type specifies the different sizes and
00:07 - values that can be stored in the
00:08 - variable so in the previous video we
00:10 - have learned about the variables so we
00:13 - can here data type is nothing but it
00:15 - declares the which type of the data it's
00:17 - going to store inside the memory okay so
00:19 - here you can see the chart of the
00:21 - different types of data types are there
00:22 - you can pause the video and you can look
00:24 - into this I'll be teaching you each each
00:27 - and every type how what type of the data
00:30 - it is going to store okay so moving next
00:34 - it here is here is a chart you can see
00:37 - so in the First Column the name of the
00:39 - data type is there in the default value
00:41 - means if you don't assign the value to
00:43 - the data type what value it gonna store
00:45 - inside it by default okay and here's the
00:48 - default size that how how much memory it
00:51 - will consume if you declare that type of
00:52 - the data type inside your code okay so
00:55 - let's suppose if I declare integer
00:57 - integer variable of data type
01:00 - so the default size it will hold this of
01:03 - four bytes okay so enough talking about
01:05 - the data types we will see in detail in
01:08 - the code in this video okay so let's
01:11 - just talk about the keywords keywords in
01:13 - Java are also known as Reserve words
01:15 - okay the keywords are particular words
01:17 - that act as a key to the code these are
01:21 - the nothing but the predefined words by
01:22 - Java so that you cannot be used as a
01:25 - variable or object name or a class name
01:27 - okay so there are basically uh I think I
01:32 - guess 48 48 keywords rewards Reserve
01:34 - keywords are there in Java which you
01:36 - cannot use either as a variable name
01:39 - object name or the class name I will
01:41 - show in the show you in the code part so
01:44 - enough talking about the theoretical
01:46 - path let's code it
01:47 - I will jump into my IDE
01:50 - IntelliJ IDEA
01:54 - okay
01:56 - stick till the end I will be announcing
01:58 - some
01:59 - new announcement is there for you guys
02:01 - so that you can learn
02:04 - more efficiently in this whole series
02:07 - okay
02:09 - so and I don't want any tip come here
02:13 - click on right click on the SRC
02:16 - click on new and the new Java class so
02:20 - today we are learning data types so I
02:22 - will give this
02:24 - file name as data types okay
02:29 - okay so come inside this declare your
02:32 - main class
02:34 - main method sorry
02:36 - and inside main method so let's go and
02:40 - see each data types one by one okay
02:44 - so first of all we will be talking about
02:46 - the Boolean data type okay so Boolean
02:49 - data type is it used to store only two
02:51 - values let me show you okay so for
02:54 - example if I declare
02:58 - Boolean
03:00 - first of all let me increase the font
03:02 - size I don't know how to increase it
03:06 - okay let it be I guess you guys are
03:09 - getting what I am telling time to tell
03:11 - you okay Boolean one
03:13 - is equal to
03:15 - false okay
03:18 - okay and
03:19 - I will do
03:21 - system.out.printlain and print one okay
03:25 - so if I click here run
03:30 - see guys what will happen
03:33 - let me hide this project
03:36 - okay so you can see false get printed on
03:39 - the console okay so as you can see I
03:42 - have declared one Boolean data type one
03:46 - and variable name is one and I have
03:49 - assign it the value to be false okay so
03:52 - if I write here true and again I click
03:55 - on the Run
03:57 - see it will give it true okay and if I
04:01 - write anything else one two
04:04 - C IntelliJ IDEA is throwing some error
04:07 - let's take it
04:09 - so here it was telling that the one
04:12 - variable that I have that I have
04:14 - declared is a type of Boolean and we I I
04:18 - am trying to store the integer value
04:20 - inside it so that can cannot be
04:23 - happen okay
04:24 - so now I will show you if I declare this
04:29 - one Boolean one and I am trying to print
04:32 - the one okay
04:33 - so here it again I get error variable
04:36 - one might not be have initialized so I
04:40 - have to initialize it whether as false
04:43 - okay or true it's up to you but
04:48 - remember it will going to hold only one
04:50 - two types okay either false or either
04:53 - true
04:55 - okay so next data type is a
04:58 - short data type so short data type is a
05:01 - 16-bit assigned to complement integer
05:04 - and its value lies in between minus 32
05:08 - 768 to 32
05:11 - 767 okay
05:13 - that's the theoretical part I will show
05:15 - you the implementation right away okay
05:18 - short
05:19 - s is equal to let me assign it the value
05:22 - let's suppose ten thousand
05:26 - I guess it is right okay
05:28 - and I will declare another short
05:33 - okay in the variable name is r
05:37 - okay and I will assign it the value of
05:40 - minus 5000.
05:42 - okay
05:44 - and I will simply print s
05:49 - Plus
05:52 - R okay
05:54 - and if I click run
05:59 - see the values are going to be printed
06:01 - on the console so short is the derived
06:04 - which holds
06:05 - these values okay so next is float
06:10 - next come float let me comment this out
06:13 - first
06:15 - yeah let's go so float is nothing but
06:18 - that does when you when you are
06:21 - trying to store the data which is in the
06:24 - point or decimal okay so what I'm trying
06:27 - today let me give you with the example
06:30 - float
06:31 - F1 is equal to
06:35 - 234.50
06:39 - okay
06:42 - uh I guess wait a wait a minute wait a
06:45 - minute
06:47 - float F1
06:49 - and F okay
06:51 - and if I try to print now
06:56 - float F1 okay
06:59 - and if I try to click on run
07:02 - here the float value is 2.5 is going to
07:05 - print it okay so you have to write F
07:07 - value that you are storing the float
07:10 - values inside of float variable okay
07:12 - so this is this is for float and now
07:16 - integer comes okay
07:19 - its integer is simple straightforward
07:20 - into a is equal to you can assign any
07:24 - value okay let's suppose 250 okay
07:27 - and inside this I will print
07:31 - the variable name a
07:33 - and if I click run
07:36 - now here you can see 250 get printed on
07:38 - this console okay
07:41 - so these are the data types and yet more
07:44 - to come we will learn all those data
07:46 - types when we are going to learn all
07:49 - those data structures Parts Okay so
07:53 - let me get back to the keyword and the
07:55 - keywords are nothing but the reservers
07:57 - you cannot use that words uh to declare
08:00 - any variable name object name and class
08:02 - name inside your code okay
08:04 - so enough talking so in upcoming videos
08:08 - we are going to see one exercise is
08:11 - coming for you guys I expect you guys to
08:14 - answer those exercise and we will be
08:16 - seeing solution for those exercise
08:18 - questions in the upcoming videos okay so
08:21 - the announcement is that I have created
08:23 - one uh repository for you guys and I
08:26 - will be uploading all those PDF
08:28 - resources that I have these are the
08:31 - nodes I will uploading all those nodes
08:33 - inside that repository and the core part
08:35 - this part I'll be uploading all these
08:37 - codes in as of as a file inside this
08:40 - repository you can you guys can access
08:42 - this repository and download the code as
08:44 - well as the PDF part and the link to the
08:48 - repository will be provided in the video
08:50 - description you can access
08:52 - and
08:53 - get the help from it so thank you guys
08:56 - for
08:57 - watching this video I will see in the
08:59 - next one thank you