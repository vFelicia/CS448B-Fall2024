00:00 - hey guys in this video I'm going to show
00:02 - you how you can set up the C++
00:05 - development environment on your Visual
00:07 - Studio code editor on your Windows 10
00:10 - operating system I'm going to show you
00:13 - how to do it with mingw compiler and
00:17 - debugger we are not going to use any MSV
00:21 - C or Microsoft related compiler okay so
00:25 - I already have installed the Visual
00:27 - Studio code editor so if you don't have
00:29 - it it's really easy to install it so
00:31 - just go to the Visual Studio code
00:34 - website and then download and install it
00:37 - it's free of course and it's open source
00:40 - now the next thing we need is the min GW
00:43 - compiler so I'm going to show you how
00:46 - you can download it you just need to
00:48 - search for min G W here and the first
00:52 - link which will appear here will be from
00:54 - mingw dot o-r-g and when you open that
00:57 - website it's going to show you this kind
01:00 - of website we just need to go to the
01:02 - downloads tab here so just click on the
01:06 - Downloads tab and once you click on the
01:08 - Downloads tab you will be redirected to
01:11 - the sourceforge.net website which hosts
01:16 - the mingw Exe file and then we are going
01:20 - to just click on this green button which
01:24 - says mingw get setup dot exe file so I'm
01:29 - going to just click on this so now I can
01:31 - see the download has been started and
01:33 - already finished so I'm going to click
01:36 - on this mingw get setup dot exe file and
01:39 - I'm going to minimize the browser and
01:42 - now you can see the mingw installer
01:44 - manager setup tool has been started so
01:47 - first of all we will just say install
01:50 - and this is the default location where
01:53 - mingw will be installed so I don't want
01:55 - to change it so I will leave it as
01:57 - default and say continue and then it's
02:01 - going to start the download of the
02:05 - Installer itself and then it's going to
02:08 - ask us to install some packages so I'm
02:12 - going to wait
02:13 - for some time until this download is
02:16 - finished so once this step is complete
02:18 - we will see this continue button is
02:20 - activated so I'm going to click on this
02:22 - continuum button which is going to just
02:26 - start the mingw installation manager
02:31 - okay and it's going to show us these
02:34 - options you can see here it's going to
02:37 - show us these options and these options
02:40 - are mint you have root developer tool
02:42 - mingw 32 base and then GCC and GCC 14
02:47 - GCC for G + + which is for C++ and other
02:53 - mingw related packages so so what I'm
02:57 - going to do is I'm going to right click
02:58 - on every package and I'm going to say
03:01 - mark for installations so one by one I'm
03:04 - going to just say mark for installation
03:06 - for all the packages and once you are
03:09 - done with this marking for the check
03:13 - boxes you go to the installation on the
03:16 - left hand top side and then just say
03:20 - apply changes ok so just say apply
03:23 - changes which is going to start the
03:26 - installation of all these packages ok so
03:30 - this may take some time so you can see
03:33 - it's asking us to proceed so it says ok
03:38 - to proceed we will say apply we're going
03:41 - to just start the installation of all
03:43 - these packages so now all the mingw
03:46 - packages are installed and i can see
03:49 - this message which says all changes were
03:51 - applied successfully you may now close
03:54 - the dialog so I'm going to just close
03:56 - this dialog and you can see everything
03:59 - is green in my case so I'm going to just
04:01 - close this Installer also and just for
04:04 - checking I will just open my folder
04:07 - explorer and here in the C directory I'm
04:10 - going to just check where the mingw
04:13 - directory is there or not so you can see
04:16 - mingw directory is created for us right
04:19 - so I'm going to just go inside this
04:21 - directory and I'm going to go inside bin
04:25 - folder in
04:26 - this me min GW directory and I'm going
04:30 - to copy this path and I'm going to add
04:33 - it to my environment variable so just
04:36 - copy this path up to bin and then right
04:39 - click on your Start button here and then
04:42 - just search for system so just click on
04:45 - system here and once this system window
04:48 - opens you just need to go to advanced
04:51 - system settings and then environment
04:54 - variables and then just choose the path
04:57 - environment variable in system variables
05:00 - and then either double click on it or
05:02 - just click Add it and then we are going
05:05 - to add a new variable and then just
05:08 - paste this path which is C colon
05:11 - backslash mingw backslash R bin right
05:15 - and I'm going to just click OK and then
05:18 - ok and then ok and I'm going to close
05:21 - this window and then I'm going to
05:23 - minimize this folder also now the next
05:27 - step is to check whether mingw is
05:29 - working so I'm going to just open my
05:33 - command prompt so right click on your
05:35 - windows button once again and then just
05:39 - click command prompt and in here we are
05:42 - going to check the version of g plus
05:44 - plus so just write G plus plus minus
05:46 - minus version and then press Enter which
05:50 - is going to give you the version of C++
05:52 - in our case we have installed GCC
05:55 - version six point three point zero minus
05:59 - one ok basically it's six point three
06:01 - point zero so G plus plus is working
06:05 - fine on our Windows operating system
06:08 - that means we can set our visual studio
06:11 - code for developing C++ right so I'm
06:14 - going to open the Visual Studio code and
06:16 - then if you're not aware of these
06:18 - options I'm going to go through them
06:21 - briefly so this is to open a folder so
06:25 - here when you click on this Explorer you
06:29 - will be able to open a folder for
06:31 - example I have already created a CPP
06:33 - folder on my desktop so I'm going to
06:35 - open it everything
06:38 - develop in Visual Studio code is inside
06:42 - a folder so you need to open some folder
06:44 - inside that you need to create your
06:47 - files right now the next is the search
06:51 - button so if you have some code and if
06:53 - you want to search for some particular
06:55 - words or sentence or code you can search
06:59 - from here and even replace it and then
07:02 - next option is for the source control so
07:05 - Visual Studio code have native support
07:08 - for git so if you want to have a source
07:12 - control you can use this button and then
07:15 - you have a debugger button so we are
07:18 - going to see shortly how you can use it
07:21 - and the last option is for extensions so
07:25 - you can you know install extensions for
07:29 - some languages for example we want to
07:32 - install that official extension for C
07:35 - and C++ from Microsoft so just search
07:38 - for C++ here and hopefully the first
07:42 - option or first extension which will
07:44 - appear here will be for c /c plus plus
07:49 - so i'm going to click on this extension
07:51 - and you will be able to see the details
07:54 - about this on the right-hand side right
07:57 - and you can see about 5.8 million
08:02 - extensions have already been downloaded
08:05 - and it's from microsoft so you just need
08:08 - to click on this install button it's
08:10 - going to install this extension and once
08:13 - this extension is installed you just
08:15 - need to reload your Visual Studio code
08:17 - so just click on this reload so I have
08:19 - just clicked on the reload button and my
08:21 - Visual Studio code has been reloaded so
08:24 - you can see this extension has been
08:26 - installed and now I can see the
08:29 - uninstall option for this extension so
08:32 - now I have the C and C++ extension so
08:35 - let's create a code so inside this CPU
08:39 - folder I'm going to create a new main
08:42 - dot CPP file and once this file is
08:46 - created I'm going to write some code
08:48 - here so I'm going to add some code so
08:51 - I'm going to
08:51 - - just write include iostream and let me
08:56 - make this font size a little bit bigger
08:58 - so you can see this and now I'm going to
09:01 - just add int main method and I'm going
09:06 - to just create a really basic program
09:10 - here so STD C out and then let's print
09:16 - hello world and then I'm going to just
09:18 - say STD and line okay and I'm going to
09:22 - save this file and you can see on this
09:25 - include iostream I see this green
09:29 - squiggly line okay so when I hover over
09:32 - this green squiggly line it says intrude
09:35 - add detected please update your intrude
09:39 - path okay so what you need to do is you
09:42 - just need to click on this bulb here so
09:47 - just click anywhere on this line which
09:50 - shows the squiggly line and then click
09:52 - on this bulb you see here and then just
09:56 - click Edit include path setting okay
10:00 - so just click on this option which says
10:03 - edit include path settings and once you
10:06 - do this you will see a folder created
10:09 - here which is called dot vs code and the
10:13 - new file is created here which is C
10:16 - underscore C++ properties dot Jason and
10:19 - here all the include paths which are the
10:23 - default include paths for every oh s for
10:27 - example Mac OS and then when you scroll
10:30 - down there will be the option for Linux
10:33 - and in our case the option for the
10:37 - windows is valid for us right so this is
10:40 - the option for Windows and you can see
10:42 - the include path is right now its
10:47 - workspace route so here what we need to
10:50 - add is we need to add the include path
10:53 - for the iostream or all the c++ include
10:57 - paths right so how we can do it just
10:59 - open your mingw once again so mingw
11:03 - folder where you have installed it
11:05 - and then here go to lib and then go to
11:10 - GCC and then go to Minji W 32 and then
11:15 - whatever version you have installed and
11:17 - then here you will see the library for
11:22 - the c++ right so I will just copy up to
11:26 - this part and then I will just write the
11:31 - comma here under windows so I'm working
11:34 - in the windows so under browse and then
11:37 - path I will just give a comma here and
11:40 - then press ENTER and then in double
11:43 - quotes so I will just paste this path
11:45 - here let me maximize this Visual Studio
11:48 - code so we will see it better now in
11:51 - here it will show some error because
11:54 - windows path we have to give like double
11:59 - backslashes so we just need to add the
12:03 - double backslash is everywhere you have
12:06 - this backslash here
12:07 - okay so double backslashes and now we
12:10 - need to include the part for the c++ so
12:14 - inside this six point three point zero
12:17 - there is an include directory and inside
12:20 - the include bar directory you have this
12:23 - C++ directory where all the include
12:26 - files for C++ is there right so you just
12:29 - need to add include backslash C++ also
12:32 - so here just add this also backslash
12:36 - include and then backslash c plus plus
12:40 - this part you need to include I will add
12:44 - this path in the description also so you
12:46 - can directly copy and paste it in your C
12:49 - CBP property JSON file so once you have
12:52 - included this C CPP properties JSON file
12:55 - you can close it by the way if you don't
12:58 - know how to create this CCP CPP file
13:02 - from this squiggly line you can just
13:05 - press ctrl shift P and here you just
13:09 - need to search for C backslash CPP added
13:12 - configuration and then it will open the
13:15 - same file now you are not still ready to
13:18 - compile your C
13:19 - Plus was program because you need to
13:23 - create two more files one is task dot
13:26 - Jason and another is launch dot chase
13:29 - and for launching your debugger so let's
13:32 - create task dot JSON file first of all
13:35 - so just press ctrl shift P once again
13:38 - and here search for tasks and then
13:43 - choose this option which says configure
13:46 - tasks ok so choose the third option
13:49 - which says configure task and then you
13:52 - just need to create the task dot JSON
13:56 - file so this option will appear here you
13:59 - just need to click on this option which
14:01 - says create tasks or JSON file from
14:05 - template so once you click this option
14:08 - you will see some default option you
14:12 - just need to click others for C++ so you
14:15 - just need to click this option which
14:17 - says other and it's going to create the
14:19 - task dot JSON file and here you will see
14:23 - the basic configuration for task first
14:26 - is for labeling your tasks second is the
14:30 - type of command you want to give third
14:32 - is the command itself so in our case we
14:35 - are going to give this command which is
14:37 - G plus plus and even you can add the
14:42 - complete command for example - G for
14:44 - debugging options and then your file
14:48 - name which is main dot CPP in my case
14:52 - right so you can give this kind of
14:54 - command or otherwise you have the option
14:58 - to give the args so you just need to
15:01 - give double quotes here and just write
15:04 - args and then inside this square bracket
15:07 - you can add your options for for example
15:10 - first option is - G for the debugging
15:14 - option and second is the file name so
15:17 - main dot CPP right now there is one more
15:21 - thing you need to do here is you need to
15:24 - add which kind of task is it so it's a
15:27 - build task so we will add one more
15:30 - option here which
15:33 - is a group option so just write group or
15:36 - just write G and you will see the
15:40 - intellisense group here so click on this
15:42 - and it's going to add this here
15:45 - automatically so kind is built for us so
15:48 - because it's a build option for us so
15:51 - kind is build and is default true so
15:53 - everything is good for us so just save
15:56 - your task tour JSON file and now you can
16:00 - just press control shift B to build your
16:04 - program so just press control shift B
16:06 - and then it's going to start the task
16:11 - force you can see it's executing task
16:14 - which is g plus plus minus G main dot
16:18 - cpp right and you will see a here your
16:22 - output file is also created which is a
16:24 - dot exe if you don't give the option -
16:27 - oh it's going to just create this
16:30 - default executable file which is a dot
16:32 - exe now how to run this a dot exe so
16:36 - what you can do here is you can just
16:39 - open a new terminal here so you can just
16:43 - click on this plus button which is going
16:46 - to open the new terminal you can see
16:48 - PowerShell is open or your default
16:50 - terminal will be open and then you just
16:52 - need to run a dot exe file ok so it's
16:56 - going to open inside your default folder
16:59 - inside your project folder so you don't
17:02 - need to change the directory you just
17:04 - need to run this a dot exe command here
17:08 - and then press Enter which is just going
17:10 - to print hello world here so we have
17:12 - successfully built and run on our code
17:14 - here right now let's see how we can
17:17 - debug our C++ code so for debugging but
17:22 - what we need to do is we need to go on
17:24 - this debugging option so just click on
17:27 - this debug option which is this button
17:30 - and then once you are inside this
17:33 - debugging option you just need to click
17:36 - on this green button which says start
17:38 - debugging so just click on this button
17:40 - and now it's going to just ask us which
17:44 - type of debugging we want to do
17:46 - so we want to do the C++ gdb debugging
17:50 - because we are working with mingw which
17:52 - is gdb so just click on this option
17:55 - which says C++ gdb for /ll DB okay so
18:00 - I'm going to click on this option which
18:02 - is going to create a launch dot JSON
18:05 - file inside your vs code directory which
18:10 - is created ok so now there are three
18:14 - files which we have created one is C C++
18:18 - property of JSON file
18:20 - second is talks dot JSON file and for
18:23 - debugging you just need to create this
18:26 - with one which is launch dot JSON file
18:29 - now in here we just need to give the
18:32 - debugging path which is the path to our
18:35 - mingw gdb exe file so I'm once again
18:39 - going to go to the folder Explorer and
18:42 - then open the mingw directory and inside
18:45 - the mingw directory I'm going to just
18:47 - click on bin directory and when you
18:50 - scroll down a little you will be able to
18:52 - find this gdb option here right which is
18:56 - the one we want
18:57 - ok so just copy this path and then up to
19:02 - bin just copy this part up to bin and
19:04 - then just paste it here in front of my
19:09 - debugger path ok and then don't forget
19:13 - to add this extra backslash here and
19:17 - once again just add extra backslash and
19:20 - then write gdb dot exe ok which is the
19:26 - debugger for us now there is one more
19:29 - thing we can do here is we can add the
19:33 - pre-launch tasks here
19:34 - so I'm going to go here and I'm going to
19:37 - just give the double quotes here and
19:39 - then just search for pre-launch tasks
19:43 - which is going to build our code first
19:46 - and then start the debugging right and
19:49 - this is important for us so just write
19:52 - the name of the task which you have
19:54 - created which is inside your task dot
19:56 - Jason so inside the chest drop this on
19:59 - the
20:00 - able of this task is echo okay so I'm
20:03 - going to just copy this label whatever
20:06 - label you have defined here you just
20:08 - need to copy this label and then you
20:10 - just need to add it in front of
20:12 - pre-launch tasks okay so it's going to
20:16 - run this build task first of all and
20:19 - then it's going to start the debugging
20:22 - and one more thing you need to do here
20:25 - is you just need to call your exe file
20:28 - whatever Exe file you want to debug you
20:33 - just need to give the path to that exe
20:36 - file so you just need to add dollar and
20:39 - then in curly brackets so workspace
20:42 - folder backslash whatever is the exe
20:45 - name in your case so in my case the exe
20:49 - file name is a dot exe so I'm just
20:51 - adding this one otherwise whatever is
20:54 - your exe file name you just need to give
20:56 - the path to that okay so let's start the
21:00 - debugging once again and I'm going to
21:02 - just press on this button which is going
21:05 - to first of all execute the tasks you
21:08 - can see executing tasks g plus plus
21:10 - minus G main dot cpp and once this build
21:15 - is complete is going to launch our
21:17 - program
21:20 - and you can see our window was open and
21:25 - closed immediately once this debugging
21:29 - has been started right because what we
21:32 - have done is we haven't added any
21:34 - breakpoint here so the debugging started
21:38 - and then closed it again okay and for
21:42 - just pausing this window you can also
21:44 - add on windows specially you can just
21:48 - write system inside the brackets Ujjain
21:51 - can just write pause and then you can
21:56 - just start debugging once again just
21:59 - click on this debugging button and now
22:01 - you can see the execution has been
22:03 - stopped on this breakpoint we have set
22:07 - here so when you want to go on the next
22:10 - line you can just just click on this
22:13 - option which says
22:14 - step over he's going to step over this
22:17 - line and you will be able to see in the
22:19 - terminal also this hollow world print
22:21 - and then to close the debugging you just
22:24 - need to click stop button here okay
22:27 - let's say I will add some integers here
22:31 - so in X is equal to 10 and then in Y is
22:39 - equal to 20 here okay
22:42 - and I'm going to add the breakpoint on
22:45 - these two variables once again and let's
22:47 - start the debugging again so I'm going
22:49 - to click on this button which is going
22:50 - to start the debugging which is going to
22:52 - first build our program and then it's
22:55 - going to start the debugging so first of
22:57 - all it stops on this breakpoint and you
22:59 - can see the labels are also you know
23:02 - assigned here so first of all there is
23:05 - some garbage value assigned to X and y
23:08 - because there is nothing assigned here
23:11 - and when we step over you can see the
23:14 - value of x change to 10 and when we step
23:17 - over the value of Y also changed to 20
23:20 - which we have assigned here okay so this
23:23 - is how you can do the debugging for the
23:27 - C++ on your Visual Studio code editor so
23:31 - I hope you've enjoyed this video please
23:33 - rate comment subscribe and bye for now