00:00 - in the last video we have seen the
00:02 - basics of face detection using har
00:04 - feature based Cascade classifiers in
00:08 - this video we are going to extend our
00:10 - code to detect eyes using the same har
00:13 - Cascade classifier
00:16 - so for that first of all you need to
00:19 - download the pre-trained cross
00:21 - classifier for the eyes from the same
00:24 - source which I have shown you last time
00:26 - also which is the GitHub repository of
00:30 - opencv again I'm going to give you this
00:34 - link in the description so you can
00:36 - directly come to this page and this time
00:39 - we are going to download this XML file
00:43 - with the name Har Cascade I underscore
00:46 - tree underscore I glass dot XML file
00:50 - so this is the pre-trained classifier
00:54 - for detecting eyes so you can just click
00:58 - on draw and then save it as
01:02 - this same file name in your project okay
01:06 - so I have already downloaded this XML
01:10 - file you can see here Arc Cascade I
01:13 - underscore tree underscore iglass dot
01:15 - XML file and now we are ready to write
01:18 - our code so this is the code which we
01:20 - have written last time so if you don't
01:23 - know how this code works you can see the
01:26 - last video I'm going to just extend this
01:29 - code to detect eyes so first thing first
01:32 - we need to create the Cascade classifier
01:37 - for the eyes so instead of phase Cascade
01:41 - we are going to name it as I
01:45 - Cascade and this file name will be the
01:49 - file which we have downloaded which is I
01:51 - underscore tree underscore iglass dot
01:54 - XML file so once we have our classifier
01:57 - then in the last video we have already
02:00 - seen how to detect faces so our region
02:04 - of interest will be the phase this time
02:07 - because the eyes will not be present
02:10 - outside the phase right so I is will
02:13 - always be present inside the face so our
02:15 - region of interest will be the face and
02:19 - face
02:20 - we have already detected last time so
02:22 - this phase will be now our region of
02:26 - Interest so go inside this for Loop
02:29 - where we are iterating over this phase
02:32 - variable and then we are going to create
02:36 - our Roi so I am going to create this
02:38 - variable which is called Roi underscore
02:42 - gray and this will be the original
02:46 - grayscale ah image which we have created
02:50 - here but we just want the face out of
02:54 - this image so we can just index the
02:57 - space using Y colon Y plus h comma X
03:03 - colon X plus W which is the width so
03:07 - this line is going to give us the gray
03:10 - scale region of interest but we also
03:12 - want the colored image also so we are
03:15 - going to just say Roi color which will
03:19 - be the colored Roi and here instead of
03:24 - gray we are going to take the direct
03:27 - image which will be before we have
03:30 - converted this BGR image to the
03:33 - grayscale image so we have the colored
03:36 - Roi and the grayscale ROI once we have
03:39 - this we will follow the same ah concept
03:43 - which we have applied for detecting the
03:45 - faces so so we are going to use this
03:47 - detect multi-scale method so I'm going
03:50 - to just write eyes
03:54 - is equal to because we already have our
03:57 - I Cascade which is a classifier so we
04:00 - are going to use this variable and then
04:02 - use this method called detect multiscale
04:06 - and then we are going to Simply pass our
04:10 - Roi gray which we got using the faces
04:14 - now we are going to iterate over those
04:17 - eyes so inside this for Loop we are
04:21 - going to create one more for Loop into
04:23 - iterate over all the eyes
04:25 - which are found on the face so far and
04:28 - then this will be e x comma e y comma e
04:34 - w comma e h for x y coordinate and the
04:40 - width and height now we will just say in
04:43 - I's and then we are going to just draw
04:47 - this rectangle which is also very simple
04:49 - CB2 dot rectangle and then we are going
04:54 - to pass our image first of all which
04:57 - will be our colored Roi image which is
05:00 - this one so here we will pass this Roi
05:04 - color and then the first point in the
05:08 - rectangle which will be ah e x and e y
05:12 - so I am going to just say e x comma e y
05:15 - and the second point will be
05:19 - E X Plus e w which is X Plus width so we
05:24 - are going to just write this E X Plus e
05:27 - w comma e y plus e h which is the y
05:32 - coordinate and the height
05:35 - the next parameter will be the color so
05:38 - let's provide the color let us say this
05:40 - will be 0 comma 255 comma 0 and then the
05:45 - next parameter will be the width so
05:47 - let's say the width we want here
05:49 - S5 so that's it so hopefully this code
05:53 - is going to work out of the box we don't
05:55 - need to do anything else we just need to
05:59 - Define our classifier and then we just
06:03 - need to uh use this detect multi scale
06:06 - method to detect the eyes and then we
06:09 - just need to draw the rectangle on all
06:12 - the eyes which are detected so let's run
06:14 - this code and let's see what happens so
06:16 - we are going to see you can see eyes are
06:18 - detected but there is some problem
06:20 - because
06:22 - something is wrong so I'm going to just
06:25 - quit this script and see what's going
06:28 - wrong here so you can see this should be
06:31 - x e x comma e y and then our problem
06:37 - will be solved hopefully so I'm going to
06:38 - run this code once again and you can see
06:41 - the eyes are properly detected so this
06:44 - is how you can detect eyes in the face
06:47 - using opencv and Har Cascade classifiers
06:51 - I hope you have enjoyed this video and I
06:54 - will see you in the next video