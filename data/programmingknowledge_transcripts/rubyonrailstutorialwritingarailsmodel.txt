00:00 - so basically we had uh first i'll start
00:02 - my server
00:04 - it is server
00:07 - and then let's wait for the server to
00:09 - get started so yes server is running
00:11 - let's
00:12 - fix this page so basically we had a
00:14 - photo here
00:17 - in last tutorial i took a small task to
00:19 - how to align this incentive so basically
00:21 - so since you can see that
00:25 - this is a flex box so align flex box to
00:29 - center
00:29 - is justify content you have basically a
00:31 - few types of justify content
00:33 - that is center flex and the end would
00:36 - move to move this
00:37 - end start will keep it as starting then
00:40 - basically there are a few things space
00:41 - around space between
00:43 - so space evenly so you can opt for any
00:46 - so basically the best one you can choose
00:48 - for is
00:49 - center okay and so basically
00:53 - you have to center and then you can see
00:56 - that this is in center
00:58 - so let's click on inspect and let's
01:00 - check
01:01 - yeah it's even it's here it's center
01:04 - so this is a flex class so let's we will
01:07 - give this a style
01:10 - is equal to justify content center
01:13 - so let's refresh this now we have
01:16 - perfectly
01:16 - moved to this so this was a good good
01:19 - thing
01:19 - to know about and now let's move to
01:22 - let's create
01:23 - a model so basically
01:27 - uh this is our like project directory so
01:31 - i have opened this
01:32 - in terminal so that it gives you clear
01:33 - view so i could do the same thing in the
01:36 - vs code terminal but
01:37 - that's why i've opened a terminal here
01:39 - to like to have a good overview
01:41 - so now we are going to perform something
01:44 - let's create rails
01:45 - generate generate
01:48 - model article okay or
01:52 - let's keep it as post there is generate
01:54 - a model
01:55 - so post is something you uh like
01:58 - uh like you define something of post
02:02 - which has a like a tight bill so that
02:05 - is a string and it has a text
02:09 - so that is a uh you can say
02:14 - like this is title string and you have a
02:16 - description
02:17 - description so basically that is of text
02:20 - data type
02:21 - so let's run this and now you can see
02:25 - that it has created a
02:29 - model and now we can do rails
02:32 - db so basically model is like creating
02:36 - a table in your database now we want to
02:39 - uh permanently move to this uh table
02:42 - so we want this to like migrate this
02:44 - into database
02:45 - so we had created a model which defines
02:47 - that we are going to create something
02:48 - with a title string
02:50 - and description text now let's create
02:52 - rails
02:53 - db migrate and
02:56 - then you can see that this
03:00 - should be created permanently in the
03:03 - database
03:04 - so here it says this has been created
03:06 - created table post
03:08 - and the descriptions we have already
03:10 - mentioned what we are going to create
03:12 - so okay before you perform a few
03:14 - operations
03:15 - with the like uh this table or model
03:18 - which i say
03:19 - so basically so you can interact with
03:22 - this
03:22 - inside rails console okay so please
03:26 - drive rails console
03:29 - and then you have interactive rails
03:32 - shell
03:32 - to work with then you can interact with
03:35 - this
03:35 - uh this inside the rails console so
03:38 - let's type
03:39 - post but it will it shall throw an error
03:42 - because it says for call post.connection
03:45 - to establish
03:46 - a connection okay so that's why i did
03:48 - this post dot connection
03:51 - so this so we have made a connection so
03:54 - it like it throws out a good amount of
03:56 - things so
03:57 - we shall ignore this okay and
04:00 - okay i have missed all of my cursor yes
04:03 - so we can type
04:04 - uh clear this you can type uh you can
04:07 - type control l control l
04:10 - control plus l so this would clear out
04:12 - okay
04:13 - so okay control plus l and now this will
04:16 - clear out
04:17 - and now you have now let's
04:20 - take a post make post a is equal to post
04:23 - okay so basically it defines uh
04:27 - a so id is an integer title is string
04:30 - description of the text created act as a
04:32 - date time updated at a date time
04:34 - okay so let's skip a dot title
04:37 - is equal to hello okay
04:41 - okay undefined
04:47 - okay okay okay so uh i'll tell you
04:50 - what's the issue with this
04:51 - uh see so basically uh
04:54 - we need to call the constructor so you
04:56 - can for a second ignore this
04:58 - so we will call a is equal to post dot
05:01 - new
05:02 - okay now you see we get a post id is nil
05:05 - title is name description is created
05:07 - additional update addresses but
05:09 - that time what i was doing i was doing a
05:10 - is equal to post
05:12 - which eventually meant a is equal to
05:15 - post which is
05:16 - a is equal to both so which is by
05:17 - default meant this that post and
05:19 - which was returning this okay so this is
05:22 - the class
05:23 - first is a class now a which i have
05:26 - created is going to post.new is
05:27 - is the object of that class or you can
05:30 - say the instance of that class
05:32 - now post is a class and a
05:35 - a is equal to post.new is the object of
05:37 - that class because we have called the
05:39 - new as a constructor
05:41 - so let's define a and let's do a dot
05:43 - title
05:44 - is equal to hello and a dot
05:47 - description is equal to word
05:52 - okay now we type a so we have title is
05:56 - equal to
05:56 - hello and description is good world now
05:59 - to save this inside
06:00 - our database we should call a dot save
06:03 - so
06:03 - it says which means it has been saved in
06:06 - our database and let's call a
06:08 - against it says id one title is hello
06:10 - world description is world
06:12 - and this is the created ad and updated
06:14 - things which is throwing
06:16 - and one thing you can see it also gives
06:18 - out the sql query insert into
06:20 - post and title description created
06:23 - update values should be this is this and
06:25 - this
06:25 - so this is how it creates that into
06:27 - database let's create another one
06:30 - uh let's first call post as a class so
06:33 - it's not necessary to call it everything
06:34 - but i'm showing you again
06:36 - now let's call b
06:40 - is equal to post dot new let's call b
06:44 - so this is a post this has been
06:55 - either we can say ruby okay
06:58 - and b dot description
07:03 - this is equal to rails simple let's call
07:06 - b again
07:07 - and it says this and let's call b dot
07:09 - save then it shall clear
07:10 - save this inside your database okay now
07:13 - we have two posts
07:15 - one is this and another this so to
07:18 - access all the posts you could call
07:20 - post.all simply okay so
07:23 - it gives all the posts you have so this
07:25 - is so and one with the id one and
07:27 - another is with the id here you can see
07:28 - this is the id2
07:29 - and this is id one so both the posts we
07:32 - get
07:32 - uh then we can
07:36 - call post dot find
07:40 - find is like i'll show you post dot find
07:43 - one let's find the post with the id one
07:45 - it so it finds us for us for that now we
07:49 - can see in the similar way called post
07:50 - dot find two
07:52 - this you could also call host dot
07:56 - vr
08:05 - okay there's some issue with my command
08:06 - line okay
08:08 - post dot where
08:13 - id is equal to one so
08:17 - where and what's the difference between
08:19 - the find and post
08:21 - uh find and where so this is this is
08:24 - another way of doing the same thing but
08:26 - find has a limit one okay so
08:29 - so we have learned about like how to
08:31 - create now let's move to how to like
08:33 - let's do something uh something new uh
08:36 - let's
08:36 - make post dot find post
08:40 - dot find so let's make
08:43 - first now let's change this title to
08:46 - title is equal to
08:47 - ruby uh
08:51 - ruby new okay so we have b
08:54 - and that's b dot description
09:00 - is equal to rails
09:03 - new and let's see so we do b dot save so
09:07 - this
09:07 - is our update operation okay so say
09:10 - update post
09:11 - see update both set title is the
09:13 - description this and these are the value
09:15 - uh we could also do post
09:19 - dot find to and destroy
09:23 - so basically this forms a delete
09:24 - operation so we have learned how to like
09:27 - perform all the four thread operations
09:28 - that discrete update and delete
09:30 - on the rails console so now we are going
09:33 - to implement this same thing with the ui
09:35 - so
09:36 - thank you everyone for watching this
09:37 - i'll catch you in the next tutorial
09:38 - thank you