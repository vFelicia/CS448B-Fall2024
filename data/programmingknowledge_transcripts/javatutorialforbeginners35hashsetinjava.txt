00:01 - hello guys and welcome to the next video
00:03 - tutorial on Java programming for
00:05 - beginners and in this video we will see
00:08 - what are hash set or sets and how we can
00:12 - use hash set in
00:15 - Java earlier in this series we have seen
00:18 - how to use array list and Link lists in
00:22 - Java or we can say we have seen how to
00:25 - use list in general in Java now hash set
00:30 - belongs to the set category and the
00:34 - basic difference between lists and sets
00:38 - is that list can contain duplicate
00:41 - elements but a set can only contain
00:45 - unique elements so it cannot contain
00:48 - duplicate elements now let's see how we
00:52 - can declare headset so you need to have
00:55 - this import called import java.util do
00:59 - ASX which is a wild card which includes
01:01 - all the um all the classes which are
01:06 - there in the util
01:07 - namespace and now let's see how we can
01:11 - declare hash set so hash set starts with
01:15 - the keyword hash set set and then in
01:18 - this angular bracket comes the data type
01:22 - it can be integer or double or string or
01:26 - the and data type of your set
01:30 - then comes uh
01:32 - the name of your uh hash set or variable
01:36 - name is equal to
01:40 - new not like this but new hash set and
01:45 - then once again comes
01:49 - string and then you can uh Define the
01:54 - length of the headset it's opt optional
01:58 - and this can be overloaded with the size
02:03 - or different ways okay so whenever you
02:06 - hover over this hash set you can uh see
02:10 - uh how you can use this
02:13 - Constructor okay
02:16 - now it uh generally works in the same
02:20 - way as any list or uh array list to add
02:25 - elements so let's see how we can add
02:28 - element to the set so we will use our
02:32 - name H set
02:35 - dot
02:37 - add and then we can add some string okay
02:44 - so for example I want to add some
02:49 - name and some other names in the same
02:53 - way you can add multiple names or
02:57 - multiple values which are not
03:00 - not duplicate values so
03:07 - Tom
03:10 - Jack some other
03:14 - name some other name okay and now when
03:19 - you compile your program it's okay but
03:22 - let's set say it has a duplicate entry
03:26 - it will compile I
03:28 - think but when you try to access these
03:31 - value it will give you some errors okay
03:35 - so in this way you can use hash set and
03:39 - to access the values in the hash set
03:43 - what you can do is you can use
03:49 - iterator so in the last video we have
03:51 - seen how to use list
03:54 - iterators uh in the same way you can use
03:57 - iterators normally uh which uh you can
04:01 - use to iterate over your hash set or set
04:05 - in general and you just need to use this
04:08 - iterator keyword and then the data type
04:10 - of your list which is string in my case
04:14 - then your variable name for example ITR
04:18 - is equal to your name of your hash set
04:24 - dot
04:26 - iterator okay and then this it R you can
04:30 - use to iterate over your values for
04:34 - example I can use
04:38 - while
04:39 - ITR
04:41 - dot has next as we have seen in the last
04:46 - video if it has next value then we can
04:50 - use ciso control shift and then ITR
04:58 - dot not here but it. next right it do
05:06 - next in a similar way you can uh iterate
05:10 - over the list in reverse order Let's uh
05:14 - compile it once so it it Rays over the
05:18 - list and gives or prints our list in
05:21 - ascending order from top to bottom if
05:24 - you want to uh print your list in uh
05:27 - bottom to top order or in reverse order
05:30 - what you can do is instead of this has
05:33 - next you can use has previous so search
05:38 - for has previous and then you can uh
05:43 - iterate over your um uh list in reverse
05:48 - order
05:51 - okay but as we have seen in the last
05:54 - video that list iterator has has
05:59 - previous and previous value the
06:01 - iterators for the sets doesn't have this
06:05 - has previous and previous value you can
06:09 - see there is no method called has
06:11 - previous or previous values okay so only
06:15 - List iterators have has previous and
06:19 - previous values but they have some other
06:23 - method like um remove or clear this list
06:29 - if you want to remove the uh values you
06:33 - can use remove or clear method so for
06:38 - example I want to clear Let's uh iterate
06:43 - over using has next and before this we
06:47 - will remove some values so for example
06:51 - name
06:53 - dot remove on the basis of object you
06:57 - can remove or you can can remove on the
07:01 - basis of uh your your collection or you
07:05 - can see uh these are the options you
07:08 - have to remove the values right or if
07:11 - you want to
07:13 - clear you can just
07:15 - use name do clear and it will clear all
07:19 - the values from your hash set right so
07:23 - it will clear all the values and
07:24 - whenever you run the program you will
07:27 - not see anything here because it has
07:29 - already been
07:31 - cleared it has some other method so you
07:35 - can see you can check the size of your
07:38 - list by using do size method you can uh
07:42 - check if the uh list is empty or not
07:44 - using is empty method you can uh use uh
07:51 - add we have already
07:53 - seen you can add on on the basis of some
07:58 - conditions and then there are some
08:00 - method you can try which you want to use
08:05 - so you can just hover over this method
08:08 - and you will be able to see its use when
08:10 - you hover over
08:11 - it so I hope you have enjoyed this video
08:14 - please wrate comment and subscribe and
08:16 - bye for now