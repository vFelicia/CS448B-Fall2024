00:00 - hey everyone another application made
00:03 - using thinker can be a text editor we
00:06 - haven't yet explored the file dialog
00:08 - module by tick tock it needs to be
00:10 - imported separately the module provides
00:13 - classes and Factory functions for
00:15 - creating file or directory selection
00:17 - windows we have native loads
00:21 - static Factory functions convenience
00:23 - classes convenience classes help in
00:25 - creating files or directories from
00:27 - Scripts while static Factory functions
00:30 - are user responsive so the text editor
00:33 - that we would make would have two static
00:36 - Factory functions open and safe so let's
00:39 - start making the application right away
00:41 - I'll import into
00:43 - I'll write
00:45 - from tincter
00:47 - import
00:49 - star
00:50 - and from
00:53 - printer
00:54 - Dot
00:56 - file dialog
01:00 - import
01:01 - ask open
01:04 - file name
01:06 - ask save as
01:09 - file name
01:12 - we would use the ask open file name for
01:15 - opening a file for editing and the ask
01:19 - save as file name for saving the current
01:22 - file as a new file
01:24 - now I will get my window I'll write
01:27 - window equals TK
01:34 - and window.title
01:37 - so the title can be text
01:41 - editor
01:44 - if I
01:46 - now
01:47 - I'll get a text widget to insert
01:51 - multiple lines so that I can write on it
01:54 - a text editor needs inputs so this is
01:57 - how I'll give them the inputs
01:59 - and even for displaying some text I need
02:03 - a field so I'll use the text widget so
02:05 - I'll have this variable text
02:08 - equals
02:10 - text
02:12 - where do I want it I want it on my
02:14 - windows I'll write window
02:16 - for round I'll set some foreground I'll
02:19 - give it purple
02:21 - the foreground and background equals
02:24 - light yellow
02:26 - that would be a nice combination and
02:29 - font Let It Be
02:31 - calibri
02:33 - 14.
02:35 - fine
02:36 - then I'll park this
02:38 - I'll write txt text Dot back
02:46 - I will get a menu now to have the open
02:49 - and save as options just like in a text
02:52 - editor so I will name the menu file for
02:55 - that I should write menu
02:58 - equals menu
03:00 - and on the window so window
03:04 - now I'll configure it I'll write
03:06 - window.config menu equals menu
03:11 - and now file menu equals menu
03:15 - and in Brackets again menu
03:19 - now I'll add the options
03:22 - first to the main menu I'll write
03:25 - menu
03:28 - dot at Cascade
03:32 - label equals file
03:37 - and menu
03:39 - equals
03:40 - file menu
03:44 - then to the file menu I'll add
03:47 - open and save as so I'll write file menu
03:51 - dot add command
03:54 - label
03:56 - equals open
03:59 - comma command for now I'll leave it
04:02 - blank
04:03 - and file menu
04:05 - dot add command
04:09 - label
04:10 - will save us
04:15 - and command
04:17 - again let's leave it blank for right now
04:19 - and I'll call Window dot main Loop
04:25 - fine
04:27 - now I need these two functions open a
04:30 - file and save a new file so the first
04:33 - function to open a file
04:35 - let's define it I'll write Def
04:41 - open file
04:43 - brackets and
04:46 - I'll write file path
04:50 - equals ask open file
04:54 - name
04:57 - file types equals
05:01 - in a list in a tuple
05:04 - text files
05:10 - comma the extension for them
05:14 - it's our
05:15 - Dot txt
05:18 - and again comma under table
05:22 - all files
05:26 - comma
05:29 - the extensions
05:33 - this statement will open a dialog box so
05:36 - that the user can select the file to be
05:38 - opened
05:39 - since we are working with only text
05:41 - files I could have only given the Tuple
05:44 - text files but what we have written now
05:47 - lets you access all the kinds of files
05:50 - that can be presented or read by the
05:53 - text editor
05:55 - now after the dialog box is opened
05:59 - it might happen that the user clicks on
06:01 - the cancel or closes the window
06:03 - so for that case I'll write if
06:07 - not file path if no file path is
06:10 - selected
06:12 - you return
06:14 - no further code is executed
06:17 - otherwise
06:19 - I'll delete whatever is there currently
06:21 - on the text editor I'll write txt dot
06:23 - delete
06:25 - I hope you remember txt was our text
06:28 - widget and I'll delete whatever is there
06:31 - on the text editor currently
06:34 - from index 1
06:36 - so 1.0 till the end
06:44 - now I need my text file to be red
06:48 - the selected file to be read so for that
06:51 - I'll write with open
06:54 - file path as an argument
06:57 - mode should be only read so r
07:00 - and you can pass an encoding
07:03 - UTF
07:05 - -8
07:07 - as input file
07:10 - text is equals to input file dot red
07:17 - now this string as read is inserted in
07:19 - the text editor so I'll use the insert
07:22 - function of the text widget so I'll
07:25 - write dxt dot insert
07:28 - and
07:30 - text
07:32 - fine
07:33 - and finally I should change the title of
07:36 - the window
07:37 - to the file path
07:40 - okay so I'll write window dot title
07:45 - f
07:46 - Simple Text Editor
07:49 - and file path so this is a python format
07:53 - for
07:54 - getting the values I hope you know this
08:00 - and okay
08:03 - now very similarly I should Define the
08:06 - save file function too so I'll write Def
08:10 - save underscore file
08:14 - and brackets
08:17 - okay so this would be for saving the
08:20 - current file as a new file
08:22 - firstly I need to create the file path
08:25 - to get the location of the file to be
08:27 - saved
08:28 - so I'll write file path equals ask save
08:31 - as file name
08:34 - default extension
08:38 - dot txt so how the file should be saved
08:42 - with the extension ta dot txt unless
08:45 - specified
08:46 - and file types again similarly in a list
08:51 - then in a tuple
08:55 - text files
08:57 - and the extension
08:59 - star.txt
09:01 - again you can given the all files or not
09:05 - it's your wish
09:07 - then all files
09:10 - and star dot star
09:13 - okay
09:14 - now again if
09:16 - the screen is canceled you do not need
09:19 - to run any further code for that I'll
09:22 - write if not file path
09:25 - return
09:30 - otherwise a new file is created the text
09:33 - on the text editor is extracted for the
09:35 - same so how would I do it I'll write
09:38 - with open
09:39 - I'll given the file path I already have
09:42 - it
09:43 - mode now would be W so that it is
09:46 - writable
09:47 - encoding equals UTF
09:51 - hyphen 8.
09:53 - as output file
09:55 - okay
09:57 - Now text equals txt dot get
10:03 - from 1.0
10:05 - till index end
10:09 - okay the output file gets the text so
10:13 - I'll write output underscore file dot
10:16 - right
10:17 - text
10:19 - and again the title needs to be changed
10:22 - to file path so I'll write window.title
10:26 - f
10:28 - Simple Text Editor
10:32 - and file path
10:34 - and curly braces
10:37 - and that's pretty much it for the two
10:40 - functions now I need to pass these two
10:42 - functions as the commands for the two
10:45 - menu options
10:46 - so I'll write
10:48 - for file menu one
10:50 - command equals open file
10:53 - where the label was open and for save as
10:56 - I'll write the command save underscore
10:59 - file
11:01 - we are good to go let's run this and see
11:04 - if the text editor works properly
11:12 - so I have the window and please note
11:14 - that the title is text editor it would
11:17 - change later I have a light yellow
11:20 - background I have this file menu and I
11:22 - can have open and save as as options so
11:26 - I'll just type in something I'll write
11:29 - this is a thinker application
11:34 - a simple
11:36 - text editor
11:39 - and I'll save it now I'll click on file
11:42 - I'll click on save as and I have this
11:45 - pop-up window and it is asking me the
11:47 - file name so I'll name it as Center
11:50 - and I'll click on Save
11:53 - now I'll again go to file and click on
11:56 - open
11:57 - I will click on
12:00 - tinker and I'll click on open
12:04 - so here I have my text that I just saved
12:07 - the title has also changed to file path
12:11 - so this was a simple text editor thank
12:14 - you