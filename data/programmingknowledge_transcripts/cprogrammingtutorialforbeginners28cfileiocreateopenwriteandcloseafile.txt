00:00 - hey what's up guys welcome to this video
00:02 - tutorial and in this video guys we're
00:04 - going to discuss what is file handling
00:08 - in C and then I'm going to give you a
00:11 - basic example we're going to create a
00:14 - program on how to handle files inside
00:17 - our C program so basically guys C files
00:21 - input or output functions handle data on
00:25 - our secondary storage devices such as
00:28 - our hardest and C can handle of files as
00:34 - stream oriented data or system oriented
00:39 - data or binary files so again guys we're
00:43 - going to focus on this so the first one
00:46 - will be stream oriented data files and
00:54 - the second one will be system oriented
01:00 - data files okay so when we say stream
01:04 - oriented data files the data is the data
01:10 - is stored in the same manner as it
01:17 - appears on the screen ok so I hope you
01:24 - can see that the input/output operations
01:27 - like buffering data conversions take
01:31 - place automatically while the system
01:34 - oriented data files the data files are
01:39 - more closely associated with the
01:47 - operating system and data stored in
01:51 - memory without converting into tax
01:54 - format so this is gonna make sense later
01:58 - on when we try to implement our very
02:00 - simple file handling insider C program
02:04 - now there are five major operations that
02:08 - can be performed on files so
02:13 - this will be again I'm just gonna list
02:17 - it
02:17 - list it here just for you to see because
02:20 - I think it would be much clearer if you
02:23 - can see all the details all the things
02:28 - that I'm talking here so for C file
02:33 - operations so first one will be creation
02:39 - of a new file the second will be opening
02:44 - the third one will be reading the fourth
02:50 - the a fourth one will be writing data
02:57 - you know file and last will be closing a
03:04 - file so these are the five major file
03:10 - operations the first one is great again
03:12 - creation the second is opening so we
03:16 - could open an existing file and then we
03:19 - could read the contents and then write
03:23 - data into a file so for example in your
03:26 - program you want to save on information
03:28 - so you can write it into a file okay and
03:32 - then of course whenever we are opening a
03:35 - file we need to close it after using it
03:39 - inside our program okay so the steps
03:44 - there will be steps for us to set up the
03:47 - file operations so these are the steps
03:52 - for processing a file so number one will
04:00 - be declare a file pointer so this is
04:06 - important so we need to declare a file
04:10 - pointer variable and then this will be
04:14 - our variable that we're going to use
04:17 - whenever we want to work with our files
04:19 - and then after that one we need to open
04:23 - a file
04:26 - using F open method or function okay so
04:35 - after that we're going to process this
04:40 - will be number three process the file
04:45 - using the suitable function right here
04:49 - and number four will be closing close
04:55 - the file using F close function also so
05:01 - if we want to work with files inside our
05:05 - C program we want or we might want to
05:10 - check this steps for processing our
05:14 - files so we need to declare a file
05:17 - pointer variable and then we're going to
05:20 - open the file using the F open function
05:23 - right here and then process the file
05:27 - using the suitable function so for
05:31 - example we want to iterate through the
05:35 - lines inside a file if you want to save
05:38 - or maybe write information into the file
05:41 - you can do that here in step three
05:43 - meaning you can process the entire
05:46 - content of that particular file and then
05:49 - right after processing maybe you need to
05:54 - close the file or not maybe you must
05:56 - close the file after closing or after
06:01 - processing it inside our C program so
06:04 - basically guys there are a lot of
06:06 - functions that we could use when we say
06:09 - we're processing a file so to handle
06:12 - files in C file input or output
06:17 - functions available in the stdio library
06:21 - are the following so I'm just gonna list
06:24 - it also here for you see so we also we
06:29 - already discussed the the two functions
06:34 - the first one will be F open and the
06:37 - second one B the second one will
06:39 - we have closed there are also functions
06:44 - such as get C which means we read a
06:50 - character from a file and then we also
06:53 - have Bootsy so this function would see
06:58 - write a character into a file and then
07:02 - also we have get W which means we need
07:07 - to read an integer from a file and then
07:11 - we also have put W so write an integer
07:14 - and we're going to use this later on
07:18 - this particular functions okay so you
07:21 - need to be familiar with this again if
07:24 - you want to read characters from a file
07:27 - you need to use this get C and then if
07:30 - you want to write character it into a
07:33 - file you need to use put C and get W
07:37 - gets an integer and put W write an
07:42 - integer into a file and then we also
07:44 - have F print F so f print F prints
07:51 - formatted output into a file and we also
07:55 - have F scan F so reads formatted input
08:01 - from a file we also have F gets right
08:06 - here so F gets read string of characters
08:11 - from a file and we also have the next
08:18 - one will be F puts and then the last one
08:23 - is f e Oh F so f puts write string of
08:29 - characters into a file and then we also
08:31 - have f EO f so it will detects and a
08:36 - file marker in a single file okay now as
08:42 - a sort of example we're going to
08:46 - implement a simple opening and closing
08:49 - of a file and maybe writing a
08:53 - specific tax or something into our file
08:57 - so we're gonna do that right here so at
09:00 - first we need to remember the steps for
09:06 - processing a file we need to declare a
09:08 - file pointer so in order for us to do
09:11 - that we're going to have to follow this
09:15 - syntax right here I'm just going to copy
09:18 - and paste it here
09:19 - file open so as I've said we're going to
09:22 - use this function f open and these are
09:26 - the possible parameters that you could
09:32 - use okay so to put it simply we could
09:37 - use this we could declare if we pointer
09:42 - variable so F P and then semicolon and
09:47 - then we're going to use that pointer
09:50 - variable and then use the F open
09:54 - function right here and then we could
09:59 - say here file name that txt and then
10:04 - another parameter and then we're going
10:09 - to use here W so W means that the file
10:12 - is being open for writing and if the
10:16 - file does not exist then there will be
10:19 - new file created okay so let's just
10:26 - return 0 for now okay after that we
10:35 - could close our file okay if we open the
10:43 - file we could also close this so what we
10:46 - what we need is to use the F close
10:49 - function and then passed in the pointer
10:54 - variable which is FB right here okay
10:59 - and right after opening the file and
11:03 - before closing the file this is where
11:06 - the processing
11:07 - after by processing of the file happens
11:11 - processing of the files right here for
11:16 - us and processing okay
11:20 - so inside of processing we could just
11:22 - simply if you remember we have different
11:26 - functions so get C put C F print F so
11:33 - we're going to use this so for now let's
11:36 - just say F print F okay and then open
11:43 - and close and then semicolon
11:45 - and inside here we could specify the
11:48 - pointer variable which is FB and then of
11:52 - course % s % s where is it
12:04 - % s there you go and then hello world
12:12 - we're okay hello world there you go so
12:18 - after this we could save our file and
12:25 - then build in run okay so for now we're
12:31 - getting process return 0 it means that
12:34 - the execution of the program is
12:39 - successful so we're going or we're
12:42 - trying we're going to try to open the
12:47 - file that we have created and as you can
12:51 - see here I have my project right here
12:57 - from documents code blocks projects and
13:00 - then programming knowledge and then if
13:02 - we try to open this we can see the tax
13:06 - hello world
13:08 - okay so there you have it on how you can
13:11 - write files or write lines of strings
13:14 - into our file by using this simple
13:17 - program right here and I think that's
13:21 - all
13:22 - in this video in the next tutorial we're
13:25 - going to read text inside our files and
13:32 - then display it in our maybe console or
13:36 - we want to if we want to process the
13:39 - contents of the file inside our C
13:41 - program so thank you for watching guys
13:43 - and I hope to see you in the next video