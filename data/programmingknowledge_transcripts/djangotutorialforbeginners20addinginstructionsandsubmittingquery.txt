00:00 - well welcome to programming knowledge so
00:02 - I again welcome you all to programming
00:04 - knowledge so guys this is the kit of
00:05 - link of my repository so like you can
00:08 - download this project clone this project
00:10 - and I've defined below the instruction
00:12 - how you can run this project on your
00:13 - local machine so guys welcome to problem
00:15 - programming knowledge so let's get
00:17 - started with this tutorial so basically
00:19 - this is the new poetry and we are
00:21 - working on Django projects for free so
00:23 - basically we were working on a
00:24 - calculator half so this was a layout of
00:27 - our app so this was responsive you can
00:29 - press control shift I or you can simply
00:32 - click right click and click inspect so
00:34 - this is the responsive nature of app so
00:37 - basically we can type anything two plus
00:39 - three and we are going to reset so the
00:42 - three of you we are able to implement
00:43 - this functionality the next part we are
00:45 - going to do basically we are going to
00:48 - add instructions block as well as define
00:50 - a form submission URL to the page and
00:53 - then we will build the back end logic
00:54 - with exception handling as well okay so
00:57 - let's get started with this tutorial so
01:00 - basically what we can do so this will we
01:04 - can define a list li class is equal to
01:06 - nav item okay then same way a tank
01:12 - attack which is represented by a nav
01:16 - link good and HR f is equal to hash
01:21 - instructions instructions okay and
01:27 - instructions instructions yeah good so
01:32 - this works fine so we can I would we can
01:38 - move to the page and see this okay well
01:42 - yes we can see here instruction has come
01:45 - but as phonetic because have not defined
01:48 - instructions ID so what we can do we can
01:52 - move to this and we can see this row
01:55 - which represents the about block so I
01:57 - will copy this row control C and then I
02:01 - press control V so I do this as
02:04 - instructions instructions okay good and
02:08 - I have to define an instruction ID here
02:11 - as well because
02:13 - hache instructions yeah good so I have
02:18 - defined the hash instructions so so I
02:22 - can so we can define some instructions
02:25 - so how we can define them what we can do
02:27 - we can move to bootstrap and use lists
02:29 - list group so in this way we can learn a
02:33 - new thing also this is a list group
02:35 - which also has list group item in it so
02:37 - here are many you can choose any style
02:39 - of you know so I'll use this one okay so
02:44 - what I can do I'll move this HR tag
02:50 - sorry paragraph and put this list group
02:53 - and I will move to the page and yeah
02:58 - here you can see here the instruction
02:59 - that would be fine
03:00 - so when I click on instructions
03:02 - instructions okay so there might be some
03:04 - issues hash instructions okay there is
03:11 - an issue ash okay okay you don't need to
03:14 - define a hash inside there because when
03:16 - I was referring here okay let me go over
03:18 - yeah ash instructions when I click on
03:20 - this I'll move to this because this ID
03:22 - is only instructions so they will by
03:24 - mistake and hash instructions so okay
03:27 - okay I'll refresh this page you are good
03:29 - now I click on instructions I move to
03:31 - this block okay this is now this is
03:33 - working fine so we can define some
03:35 - instructions here like plus sign we can
03:41 - define like you can define some
03:44 - instructions + for addition okay and
03:51 - simply something like star for
03:55 - multiplication okay something like and
04:06 - we can define this for division okay and
04:13 - basically we're working in Python so we
04:15 - won't be using a fighter and this is for
04:18 - lower division floor
04:24 - division yeah and we can cry also like
04:32 - this for - okay okay so basically we
04:42 - have defined some instruction that plus
04:44 - validation - multiplication division
04:47 - flow division we can under enter define
04:49 - like something like this also
04:57 - parenthesis also we can define okay we
05:02 - can define what we can define as
05:04 - brackets brackets all the probably we
05:10 - can simply type parentheses
05:11 - I think parentheses okay so basically
05:17 - parentheses are used to find a priority
05:20 - like if you want to evaluate for that
05:23 - parenthesis then next so we would move
05:26 - to the page and refresh this page okay
05:29 - so this looks good + for addition minus
05:31 - multiplication division lower division
05:33 - and parenthesis okay so this looks fine
05:36 - so what we can do for define we can
05:38 - define a new URL here so we will kind of
05:41 - we'll move to some back-end part so so I
05:45 - move to us dot py file so I'll define a
05:47 - path is equal to submit query okay and
05:54 - you start submit query and I'll give
05:59 - this a name as equal to submit query
06:02 - okay so I will define some single quotes
06:05 - here submit query okay now this is fine
06:09 - now I am referring to the submit query
06:11 - in use folder so I go to views so the
06:14 - this is showing an error because since
06:16 - have notify now you submit query in my
06:19 - views so they have defined submit submit
06:23 - query okay and I'll take a request as a
06:29 - parameter
06:32 - and what I can do
06:36 - till now I will find a statement here
06:39 - okay so this looks fine and now in my
06:44 - HTML page
06:46 - I will move to my HTML page and what I
06:49 - can do I have a action here yes
06:54 - % u RL is equal to submit query yes this
07:05 - looks fine okay so this looks fine yeah
07:10 - this is submit query fine now I would
07:12 - move to my submit query block you should
07:16 - submit query yes okay and I will return
07:24 - so what I can do
07:26 - I'll take Q as a parameter like who has
07:30 - a parameter and request dot get query
07:40 - because I would show one thing that
07:42 - inside my form I can move to the form
07:47 - here yeah here you can see that input
07:50 - type is equal to text form control and
07:52 - here the name is query so you should
07:54 - have the same name for the get parameter
07:58 - as it so in my view dot py file that
08:02 - time to type request what query because
08:05 - this refers to the same name in the form
08:07 - you were referring to so what we can do
08:10 - so I will return and HTTP response of Q
08:18 - okay so this would this should work fine
08:23 - now I'll move to the page and I will
08:26 - refresh this okay this is still no find
08:30 - two plus three star Phi so I should
08:35 - submit this yeah now this is working
08:37 - fine here you can see that I went to the
08:41 - route where as so so I will quit quickly
08:43 - that give the overview of this what I
08:45 - did
08:46 - so you can see that first I define but
08:51 - inside my navbar I give hash
08:53 - instructions and define an instructional
08:55 - block so basically you can this Diesel
08:58 - instruction + for addition minus
09:00 - multiplication division Pro division
09:02 - parentheses okay now then I went to your
09:05 - list or py file then I defined a path
09:07 - submit query which the Kwanza function
09:09 - used would submit query the name is
09:11 - going to submit query then I went to the
09:12 - views of py file then yeah I did request
09:15 - dot get query and Q is equal to this
09:19 - okay so return HTTP response this forms
09:21 - of Q okay so this is mine what can do
09:24 - also in the same way we can return a
09:26 - JSON response as well for this you have
09:29 - to import JSON response JSON response
09:33 - and you can do JSON response of queue so
09:40 - I'll make a get request okay what for
09:48 - this what you need to do you need to
09:50 - define a JSON dictionary and any trying
09:56 - to find Q is equal to Q and and then I
10:00 - have to return a JSON dictionary yeah
10:05 - here you can see now this is an working
10:07 - as in JSON object which says Q parameter
10:09 - and then 2 plus 3 star pipe okay so for
10:14 - JSON respond you have to define a
10:15 - dictionary because then it looks like a
10:17 - JSON JSON object okay
10:20 - so in this way we can define an HTTP
10:23 - response as well so yeah no this is fine
10:28 - so we can quickly do this yeah this is
10:31 - working fine okay so I'll move to the
10:33 - page
10:33 - okay I'll type something else - - then
10:37 - reset button I'll copy this this in
10:40 - person reset button box fine I'll piss
10:43 - today and submit yeah now this is
10:45 - working fine so in the next video what
10:47 - we can do I would be adding the
10:50 - exception handling and how we can
10:51 - evaluate this result so evaluating the
10:54 - result would be very easy as feyten is
10:56 - very powerful in mathematical operations
10:58 - so and we
11:00 - we addict trying to accept statement as
11:02 - well if the calculation has in some
11:04 - error what we can do so exception
11:06 - handling involves valid so thank you
11:07 - guys thank you so much