00:00 - hello guys welcome to the next video on
00:02 - node.js tutorial for beginners and from
00:05 - this video we will start learning
00:06 - Express j/s Express jess is one of the
00:10 - most popular and widely used web
00:12 - framework in node.js development and
00:15 - Express chess allows you to handle
00:17 - routings servers and IR stuff really
00:21 - easily so let's dive into the world of
00:25 - expressed GS so what I have done is I
00:28 - have created this empty folder called
00:30 - Express underscore test and first of all
00:35 - I'm going to you know initialize a empty
00:39 - project inside this Express test folder
00:43 - so I will just see the to this folder
00:45 - wherever this folder is and then I am
00:48 - going to just use NPM in it to
00:50 - initialize the project right so just
00:54 - right NP a minute which is going to
00:56 - initialize my you know NPM project and I
00:59 - am going to leave everything as default
01:01 - and I'm going to press ENTER for
01:03 - everything which is which is going to
01:06 - create this package dot jason for us
01:08 - which is really basic right everything
01:12 - is default now let's create this index
01:15 - dot GS file because we have defined here
01:20 - in the package or JSON that index dot
01:23 - J's is our main file right so I can do
01:26 - it from here or I can even do it from
01:29 - the terminal also now the next thing we
01:32 - are going to do is we are going to
01:33 - install NPM module for Express right so
01:37 - I'm going to just open the terminal once
01:39 - again and I will just write NPM install
01:44 - Express right you already know this
01:47 - command right and I'm going to also add
01:49 - this flag save so it will be saved in my
01:52 - package dot JSON file right so I'm going
01:55 - to press ENTER and wait for the
01:57 - installation for the NPM module and in
02:01 - some time you will also see this
02:03 - dependency added to our package dot JSON
02:06 - as well as the NPM module created here
02:10 - the folder named MP
02:12 - modules right so you can see Express is
02:15 - installed now right so now let's start
02:18 - writing some code so to start an Express
02:23 - we need to you know require this Express
02:27 - module so you can just write var and
02:30 - then Express and then wire and you can
02:36 - require the Express one right like this
02:40 - so this is really basic and to create an
02:43 - Express app you need to call this
02:47 - Express method which is going to give
02:50 - you the access to the instance which you
02:54 - can use to listen on any port right so
02:58 - I'm going to just create an app variable
03:03 - this is the common convention to you
03:06 - know use this name for Express app and
03:11 - then you just take this variable and
03:14 - call a function called Express from it
03:17 - okay so this app you know instance is
03:22 - going to allow you to create and listen
03:25 - on some port so you can just use app dot
03:31 - listen and then you can listen on any
03:35 - port for example I want to listen on for
03:38 - 3,000 it's same like using HTTP module
03:42 - right and then I'm going to create an
03:45 - anonymous function so let's create a
03:48 - anonymous function here and then curly
03:52 - brackets and in here I can console.log
03:56 - something
03:57 - so just console dot log and let's say
04:03 - our server is live on port 3000 right
04:08 - and then cable semicolon here and save
04:12 - your code and let's run our server so
04:16 - I'm going to just write node and then
04:20 - index dot JSON press ENTER is going to
04:24 - run our server
04:25 - and if you remember we have installed
04:27 - node Mon right so we can use norm on
04:30 - here but for the first time let's just
04:33 - use node here and then I'm going to
04:36 - refresh this page and it starts
04:38 - listening now if you can see here it
04:41 - says cannot get now get is the default
04:45 - HTTP method the Express is going to use
04:49 - right now there can be four type of HTTP
04:55 - method which can be used for requesting
04:59 - from the client to the server and that
05:01 - are for example I'm going to just
05:04 - comment here and I'm going to just write
05:07 - the name of the methods right so first
05:10 - method is get second method is post
05:15 - third method is put and the fourth HTTP
05:21 - method is delete right so Express is
05:27 - capable of using or doing everything get
05:31 - post put and delete obviously and the
05:35 - way we can you do it using routing is
05:38 - you can use you know this app instance
05:42 - and it's going to allow you or allow us
05:45 - to use a different kind of method and
05:48 - the name itself can be used to you know
05:53 - do routing but for this video because
05:56 - it's an introduction so we are going to
05:58 - just use the get HTTP method using this
06:02 - app instance and later we are going to
06:05 - see the much complex stuff like post
06:08 - port and delete request so just write up
06:11 - and then the name of the method for
06:13 - example get and then we provide the
06:16 - basic routing for example the basic
06:19 - routing is our home page for example and
06:22 - then we will use a anonymous function
06:26 - which will allow us to send us the
06:29 - response right so first argument here
06:33 - will be the request and second argument
06:36 - is the response so I will just
06:39 - say reply and then I'm going to just
06:43 - complete this anonymous function you
06:46 - like this right and from here I can just
06:49 - use reply argument from here and then
06:54 - dot send and then send any reply to the
07:01 - client which is requesting this get
07:03 - request right so this is the body you
07:06 - are sending so I'm just going to say
07:09 - this is home page okay and in the same
07:14 - way we can you know provide multiple
07:17 - routes as we have done with HTTP modules
07:21 - so let's create some routing so the next
07:25 - routing I want to create here is about
07:28 - and the next routing is for example for
07:33 - the contact and I'm going to just write
07:36 - here instead of home about and here
07:39 - contact ok and save and rerun my project
07:45 - this time I'm going to use node man so
07:48 - just write node Mon because the in the
07:52 - last video we have installed more long
07:54 - right and then index dot Cheers
07:57 - so we will save the time in restarting
08:01 - the server right and then I'm going to
08:04 - refresh here we're just going to give me
08:07 - this reply which says this is homepage
08:10 - and let's request this IP address and
08:15 - about route and then it says this is
08:19 - about page and then contact page and now
08:23 - it says contact page right so everything
08:27 - is working and when we give any you know
08:31 - faulty routing it says cannot get this
08:35 - kind of requests right so let's
08:37 - summarize what we have done so what we
08:40 - have done in this code we have installed
08:41 - first of all Express NPM module and then
08:45 - we have required this NPM module and
08:47 - then using this Express method we have
08:50 - created in the instance called app which
08:53 - can
08:53 - you can use to call different methods
08:55 - like get post port or delete and we can
09:01 - listen on any port using the listen
09:04 - method and the name of the port or the
09:07 - number of the port which you want to on
09:10 - which you want to listen on right now if
09:13 - you can see here you may ask that we
09:18 - haven't provided any content type here
09:21 - in the reply so the answer for this
09:24 - question is Express is intelligent
09:26 - enough to you know recognize the content
09:29 - type which is you know relied as a
09:33 - response to the client so if you pass
09:37 - string here Express is intelligent
09:40 - enough to recognize that this is a
09:42 - string so you don't need to provide the
09:44 - explicit content type like plain text or
09:49 - something like this with this reply
09:52 - right so in this way you have saved some
09:56 - lines of code so this was the brief
09:58 - introduction to Express and in the
10:00 - further videos we will learn more
10:03 - functionality about Express so stay
10:05 - tuned and please recommend subscribe and
10:08 - bye for now