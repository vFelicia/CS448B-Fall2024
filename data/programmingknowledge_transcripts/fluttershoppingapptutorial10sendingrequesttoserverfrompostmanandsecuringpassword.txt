00:00 - so in this video we are gonna continue
00:02 - with our
00:03 - php back-end okay so i have the design
00:06 - already open
00:08 - okay i'll simply fire up my mamp server
00:11 - so once it has started we'll open our
00:15 - code editor and continue with the coding
00:18 - okay so i already have better buys open
00:20 - over here
00:22 - now in the previous video we have
00:25 - completed
00:26 - the code for our register api
00:29 - now it's time to run it okay so
00:32 - for uh running it we are gonna use
00:36 - a application called postman okay so if
00:39 - you don't have it you can simply
00:41 - go to this link postman.com and
00:44 - download it and even if you don't want
00:46 - to download it that's all right because
00:48 - you can use it in the
00:49 - browser itself okay but i have it
00:53 - downloaded over here with me so i'll
00:55 - open it now i'll create a new request
00:59 - okay so over here this type will be post
01:02 - because you can see in the code editor
01:05 - we are
01:06 - allowing only post requests okay so
01:10 - i've changed it to post now i need to
01:13 - write the url so first it is going to be
01:17 - local host colon
01:20 - it'll tell it because as i've already
01:23 - told
01:25 - map runs on localhost and for its
01:28 - okay then we write the name of the
01:30 - folder that is
01:31 - better buys okay and then after
01:36 - better buys we have api then seller
01:39 - and then register dot php so we write
01:43 - api then seller then
01:47 - register dot php
01:50 - okay so now if i send a request
01:55 - okay so it is giving me internal server
01:58 - error so that means there is some error
02:00 - in the code
02:01 - okay so
02:05 - i don't think it is over here let's take
02:08 - our model class
02:13 - so i don't think it is here either now
02:16 - let's check our database
02:17 - class okay so i can see it over here
02:20 - only
02:21 - i have a typing error so it will be
02:24 - localhost
02:25 - okay then it should be public function
02:28 - constructor not
02:29 - just public constructor i am extremely
02:31 - sorry
02:32 - okay and after that this shouldn't be a
02:34 - comma but a dot
02:36 - because string concatenation in php
02:39 - happens with a
02:40 - dot same over here okay
02:44 - so now if i try to format it
02:47 - yes it has formatted as php should be
02:51 - okay so this is fine now let's save this
02:56 - okay then again we go to our postman
02:59 - send a request
03:02 - and then it is saying name is required
03:05 - okay so
03:07 - that is exactly as we wanted it to be
03:10 - okay so first it checked if the server
03:12 - method is post or not
03:13 - which is true so we can change it to get
03:17 - and see what is the error that we get so
03:19 - we get 405 request method not allowed
03:22 - which is exactly the same as we write
03:24 - over here
03:25 - 405 request method not allowed
03:29 - so i'll change it back to post okay
03:33 - and then it is telling name is required
03:35 - so this error
03:36 - occurs when name is not there okay so
03:40 - let's give it a name so in a post
03:43 - request we don't
03:44 - give values in params but in body
03:47 - and in form data okay so over here
03:52 - i'll give the key as a name okay now
03:55 - keep in mind
03:56 - this spelling and this spelling should
03:59 - be exactly the same okay so the
04:02 - name of seller is gonna be
04:05 - rishabh kumar that is my name okay then
04:08 - after that i also need to give an
04:10 - email so email and email is gonna be
04:16 - rishov at the rate gmail.com
04:20 - okay then after that
04:23 - password
04:26 - so i'll give a simple password for now
04:30 - although it is not suggested to use such
04:32 - type of passwords anywhere
04:34 - okay then after that i need to give a
04:37 - seller image and even if i don't it
04:39 - should work fine okay so
04:40 - i'll skip this for the moment
04:44 - okay so for that i'll add the name and
04:48 - then
04:48 - unselect this so that later i can add a
04:51 - image
04:52 - but if not also then it is not an issue
04:55 - okay
04:56 - then after that we need to give an
04:58 - address so the address is
05:02 - so the address is gonna be the same as i
05:05 - have written in sigma
05:07 - because that is a legit address
05:12 - so i'm gonna copy it go to postman and
05:16 - then
05:17 - paste it okay then after that we have
05:22 - i guess we have description okay so we
05:25 - have description
05:30 - we write the description and for
05:33 - description again we'll use lorem ipsum
05:40 - okay now after description it should
05:43 - save okay so let's see if that is the
05:46 - case or not
05:48 - so i'll click on send and it is again
05:51 - giving me an
05:52 - internal server error okay so let's see
05:54 - what is the error now
06:05 - okay so the error is
06:08 - this is the error message that means
06:10 - this function is causing errors so let's
06:12 - get inside the seller
06:14 - okay and then inside seller this is the
06:17 - error because
06:18 - i am using a function last insert id and
06:20 - it is not in my database class so
06:23 - it is giving an error okay so for now i
06:26 - will just
06:27 - make it a true okay
06:30 - just true later we will add
06:34 - the last insert id again okay and maybe
06:37 - even not if that is not required
06:39 - in some cases it is so it is suggested
06:42 - to always use that
06:43 - okay so now it is done now let's send
06:47 - and it is still giving
06:49 - an error let's see what is it
06:52 - okay so let's go to database
06:56 - and and we need to add a password over
06:58 - here
06:59 - i'm extremely sorry it was not needed in
07:01 - xampp
07:02 - so i forgot that in mamp it is required
07:05 - you can see over here
07:07 - the password should be root okay so once
07:10 - this is
07:11 - done i think now it should work
07:14 - okay so i'll open it again so i'll open
07:17 - postman
07:19 - yeah and click on send and it gives us a
07:22 - message
07:23 - seller is registered okay and now if we
07:26 - go to our
07:27 - database and inside sellers
07:30 - we can see our seller the seller name is
07:32 - rishabh kumar
07:33 - email password address and description
07:38 - okay so now you can see that the
07:41 - password is
07:42 - quality which is visible to everyone who
07:45 - has access to your database and can read
07:47 - the password then
07:49 - log in with login as this user and then
07:53 - change things okay so this is not a
07:56 - suitable way to
07:58 - store the data means in which the
08:00 - password is human readable
08:02 - okay so to avoid that we are gonna hash
08:05 - it
08:05 - and to hash it we are gonna use bcrypt
08:08 - okay so bcrypt is a
08:10 - file that means bcrypt is md5 hashing
08:14 - okay you can read more about it by
08:15 - simply typing md5 or bankrupt in google
08:18 - and get to know about it it is a type of
08:20 - hashing
08:21 - which will convert a human readable
08:23 - sentence or
08:24 - keys to something and means a lot of
08:27 - numbers so that
08:28 - human cannot understand that and
08:31 - decoding it back
08:32 - to the human readable
08:36 - human readable string will take lots and
08:38 - lots of time
08:39 - okay so for so let's implement this in
08:42 - our project
08:43 - so what i'm gonna do is uh open this
08:48 - decrypter.php okay copy the entire code
08:56 - and then inside our includes folder i am
08:58 - going to create a new file called
09:02 - bcrypt.php okay
09:05 - and inside this i am gonna paste it
09:08 - okay then save it close it and now we go
09:12 - to our seller.php
09:14 - along with a database we include the
09:17 - bcrypt okay over here the name changes
09:22 - to bcrypt
09:28 - now let's see how to hash it okay
09:33 - so over here you can see we can
09:36 - hash password simply by writing decrypt
09:39 - dot
09:39 - hash password okay so i'll copy it
09:42 - and where we are storing the password in
09:44 - our database which is
09:48 - over here i am gonna write
09:54 - over here i'm gonna paste bcrypt.hash
09:57 - password and
09:58 - this password
10:02 - okay so now let's save this and let's
10:05 - try to send a request again
10:07 - okay so now if i send it
10:10 - okay it is giving me an error
10:14 - so i think this is because of okay so
10:17 - this was the error i'm sorry
10:21 - now let's see
10:27 - so the seller is registered now if we
10:30 - go and open our database okay we need to
10:33 - refresh it
10:34 - the password here is something like this
10:37 - this is
10:38 - the hashed version of qwerty only
10:40 - because you can see in our request the
10:42 - password is still quality
10:44 - but it is in database stored in such a
10:46 - manner that
10:48 - normal human being cannot understand
10:49 - what this actually means
10:51 - okay so in this way your data becomes
10:54 - more
10:55 - it becomes more secure okay and
10:58 - that is a plus point okay so with this
11:01 - we created a
11:03 - api to register the users okay but there
11:06 - is
11:06 - still one flaw and the flaw is that
11:09 - there are
11:10 - user multiple users with the same email
11:12 - which is not
11:13 - the ideal case okay and the next
11:17 - flaw is that we have this extension dot
11:21 - php which we don't want okay we simply
11:23 - want to write
11:24 - the seller register and that's it not
11:26 - the dot php
11:28 - okay so we will see how to fix both of
11:30 - these in the next video
11:32 - thank you