00:00 - hey guys welcome to the next video on
00:02 - Jenkins tutorial for beginners in this
00:04 - video we will see how we can build or
00:06 - test a simple maven project using
00:09 - Jenkins so let's see how we can do it so
00:13 - what I have is I have a simple maven
00:16 - project inside my maven workspace
00:19 - directory and the name of my maven
00:22 - project is my app this my app project i
00:25 - have created using the maven website so
00:29 - once you are on the maven dot apache dot
00:32 - o-r-g you can just go to use section
00:36 - here and inside this you section you
00:38 - will be able to see this this 5-minute
00:40 - test and I have used all the commands
00:44 - here to create a project so this section
00:47 - I have used so I have used this command
00:48 - which created the my app directory where
00:53 - my maven project is there so if you want
00:56 - to follow along you can just give this
01:00 - command and then this my app directory
01:03 - will be created with the maven project
01:06 - so once you have this project let's open
01:10 - the terminal first of all and I'm going
01:11 - to just go to this directory and what we
01:16 - can do here is for example we can give a
01:18 - MVN clean and test command and then
01:24 - press ENTER which is going to clean our
01:26 - project and then run the test inside
01:29 - this maven project and you can see all
01:32 - the tests are runs and there is no
01:34 - failure and build is successful so let's
01:37 - say we want to execute this clean and
01:40 - test goals using Jenkins and first of
01:43 - all we want to check our code into
01:45 - github and then we want to for example
01:48 - clone the code from the github
01:51 - repository into our Jenkins and then
01:54 - execute these goals how we can do it
01:57 - let's see so first of all for that I
02:00 - need to create a github repository so I
02:03 - will go to the github and I will log in
02:06 - with my credentials here and once you
02:08 - are logged in with your credentials I'm
02:10 - going to just click on this button which
02:12 - says start a project
02:13 - and in the repository name I'm going to
02:15 - just write my app and now I'm going to
02:19 - just leave everything as default and I'm
02:22 - going to just click on create repository
02:24 - so now my github repository is created
02:27 - and now you can see you have two options
02:30 - here one is create a new repository on
02:32 - command-line and second is push existing
02:36 - repository from the command line so we
02:39 - will use the first option here first of
02:41 - all we will initialize the gate into our
02:44 - project and then we will commit
02:45 - everything and then push it to our git
02:48 - repository so let's do that if you want
02:52 - help then you can just follow these
02:55 - commands we will just execute the
02:58 - similar kind of commands on the terminal
03:01 - so this is our maven project I'm inside
03:03 - my maven project so I'm going to just
03:05 - write get init command which is going to
03:08 - initialize get inside this directory and
03:11 - then I'm going to just write get status
03:15 - to know the status of this directory so
03:18 - I can see there are two directories here
03:21 - and one file here so I'm going to add
03:22 - this to the gate so I'm going to just
03:25 - write get add and then I'm going to just
03:28 - add target for example and then source
03:32 - and then palm dot XML alternatively you
03:36 - can also write get add dot which is
03:39 - going to add everything which is there
03:42 - inside your project directory so I'm
03:45 - going to do that and then press ENTER
03:47 - and once again I'm going to give the
03:49 - gate status command and you can see
03:51 - these all files are added to the gate
03:56 - now so one thing which is remaining is
03:59 - to commit everything into the gate so we
04:02 - will do that I'm going to just write
04:04 - gate commit - M and then the message for
04:10 - the committing for example my first
04:14 - maven commit and then you can just give
04:18 - a space here and then write dot which is
04:22 - going to commit every file inside your
04:25 - project okay so
04:27 - commit - em then the message then this
04:30 - dot and then press enter
04:32 - and everything will be committed into
04:35 - gate so I'm going to once again give the
04:38 - gate states come on and now you will see
04:41 - on the branch master everything is clean
04:44 - so we are ready to just push this
04:47 - project to our github repository now at
04:50 - this point you just need to copy this
04:53 - command which is gate remote add and
04:56 - then whatever is your repository URL dot
05:01 - git and this is going to add the remote
05:04 - origin for the github to your project ok
05:08 - so I'm going to just copy and paste this
05:10 - command which is git remote add origin
05:13 - and whatever is your repository URL and
05:18 - then press enter and this repository is
05:21 - added and now I'm going to push
05:23 - everything to my github repository using
05:27 - this command which is get push - u
05:30 - origin master and I'm going to just
05:32 - paste this command and then press Enter
05:34 - and this is going to ask for my username
05:38 - for github and my password for the
05:41 - github and now everything will be pushed
05:44 - to my github repository so let's check
05:47 - whether everything is there or not so
05:50 - I'm going to just once again click on my
05:53 - repository which I have just created and
05:56 - now you will see everything is pushed to
05:58 - my github repository and this is the
06:01 - message which we have given at the time
06:03 - of committing and you can see we have
06:06 - committed this two minutes ago okay so
06:08 - now once your project is there on the
06:12 - github let's create our Jenkins project
06:15 - first of all so I'm going to just click
06:17 - on new item and here I'm going to just
06:20 - write first maven project and I'm going
06:24 - to use the Freestyle project for now
06:26 - there are plugins available on Jenkins
06:29 - which makes it easier to create and run
06:32 - a maven on Jenkins
06:35 - but for now I'm going to just use this
06:38 - option which says freestyle project
06:41 - and I'm going to click on okay and in
06:43 - the description I'm going to just write
06:44 - first maven project and then I'm going
06:46 - to just check this option which says a
06:49 - github project and then I'm going to
06:52 - copy the URL of my github repository and
06:55 - I'm going to just paste this URL and
06:58 - then I'm going to leave everything as
07:00 - default and in the source code
07:01 - management I'm going to choose gate
07:04 - option here and once again I can just go
07:08 - here and click on this green button and
07:10 - copy the URL here for my repository and
07:13 - I can paste it here okay I don't need
07:17 - any credentials for now and the branch
07:20 - I'm using is the master branch you can
07:23 - see I only have one branch in my project
07:26 - which is the master branch but if you
07:29 - have different branches you can provide
07:32 - your branch name here instead of master
07:35 - and now I will leave everything as
07:37 - default and here you can choose
07:40 - different kind of build triggers for now
07:43 - I'm going to just choose this option
07:45 - which says get hook trigger for gate sem
07:49 - polling and then in the build
07:51 - environment I'm going to choose this
07:53 - option which says delete workspace
07:54 - before build start which is going to
07:57 - delete our workspace and then run the
08:00 - goals on our maven project ok so just
08:03 - check this checkbox and then we will
08:06 - move to the build section here and
08:09 - inside the bell section there is a
08:12 - special section for maven which is this
08:14 - one which says invoke top-level maven
08:18 - targets so we are going to use this
08:20 - option here and if you want to see the
08:24 - more advanced option you can click on
08:26 - this button which says advanced and here
08:29 - you can give the palmer
08:30 - file directory path if this file is
08:33 - located somewhere other than in your
08:37 - default project path ok and then you
08:40 - have more options here for example JVM
08:43 - options or properties to give here for
08:46 - now we will just provide the goals for
08:48 - our maven project which is clean and
08:51 - test using the space here
08:55 - and then I'm going to save my Jenkins
08:58 - job and let's run our Jenkins job and
09:02 - let's see if it works fine or not so I'm
09:04 - going to just click on this build
09:06 - now option which is going to start the
09:08 - Jenkins build and then I'm going to
09:11 - click on the build history option which
09:13 - is going to show me my console output so
09:16 - I'm going to click on console output and
09:18 - you can see first of all we will see the
09:22 - default path where this project is
09:25 - checked out so you can see wire live
09:28 - Jenkins workspace and then inside the
09:31 - workspace this project will be created
09:34 - jenga's project and then our git
09:38 - repository will be cloned and you can
09:40 - see already maven is running the test
09:44 - here and once the tests are successful
09:46 - at the bottom we will see if it's
09:49 - successful we will see the message
09:52 - success otherwise we will see the
09:54 - message failure okay so once again I'm
09:57 - going to go back and I'm going to go to
10:00 - my project here and you can see this
10:03 - build is successful now
10:05 - so everything ran successfully now let's
10:08 - say we are going to define a goal which
10:12 - is not available inside your maven
10:17 - project so we will define some goal
10:19 - which doesn't exist and let's see what
10:22 - happens then so I'm going to just say
10:24 - some goal and I'm going to save this and
10:29 - then let's see what happens I'm going to
10:31 - just start the build again and I'm going
10:35 - to just go to the Bell history of this
10:38 - Jenkins build and then console output
10:41 - and you can see once again the
10:44 - repository will be cloned and now you
10:48 - will see the failure because there's
10:50 - some gold goal doesn't exist so it's
10:52 - going to show us this error message and
10:55 - then the last message here will be the
10:59 - failure and once we will go to the home
11:02 - page of Jenkins now you will see this
11:04 - red ball I can here because our last
11:07 - build
11:08 - was unsuccessful okay so just give the
11:13 - proper goes here which are logical so
11:17 - clean and test are running for our maven
11:22 - project so we will just give those goals
11:26 - here and once again run the build and
11:28 - you will see the build will start and in
11:33 - the console output everything will be
11:35 - checked once again and then you can see
11:39 - success once again so this is how you
11:41 - can test and run a simple maven project
11:44 - on cheng canes using github i hope you
11:47 - enjoyed this video please rate comment
11:49 - subscribe and bye for now