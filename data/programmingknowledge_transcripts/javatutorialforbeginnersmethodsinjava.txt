00:01 - hello and welcome back to the another
00:02 - video tutorial Series so today we are
00:05 - covering methods in Java and so in
00:09 - general a method is a way to perform
00:10 - some tasks similarly the method in Java
00:13 - is a collection of the instructions that
00:15 - performs a specific task like if you if
00:18 - you want to perform a set of instruction
00:19 - uh multiple times you can make make it
00:22 - as a one method and you can you can call
00:24 - that method again and again whenever you
00:25 - want to okay and it provides a
00:27 - reusability of the code and we can
00:29 - easily modify the code using methods
00:33 - so basically there are two types of
00:35 - methods in Java one is predefined and
00:37 - one is user defined methods in Java okay
00:40 - so we will talk for first Let me just
00:43 - talk about the main method okay so just
00:46 - the main method that we have written
00:49 - over here that is public static World
00:51 - Main this is the main method and this is
00:53 - entry point where our Java code is
00:56 - getting executed first line by line okay
00:59 - so in in general this is the structure
01:03 - or the syntax of the methods public int
01:05 - sum int A and B where the public is the
01:08 - access specifier uh end is the return
01:10 - type and sum is the method name and
01:13 - integer a comma integer B inside the
01:15 - circular processes basis or parameter
01:18 - list and all together this is the method
01:21 - header and inside the curly basis we
01:23 - will write the method body and the
01:25 - method signature okay so we will cover
01:28 - in our upcoming videos what is X
01:30 - specifier method name so to till now uh
01:33 - just uh see One X specify should be
01:36 - there one return type of the Met of that
01:38 - method should be there and Method name
01:40 - should be there and inside the circular
01:41 - basis the parameters which which the
01:43 - method is accepting that we have to
01:45 - write over there
01:46 - okay uh so first type is predefined
01:49 - methods okay so predefined methods are
01:51 - nothing but the methods which are
01:53 - already defined inside the Java
01:55 - okay the methods which are already
01:57 - defined in Java and Java class libraries
01:59 - is known as the predefined methods and
02:02 - it is also known as the standard Library
02:04 - methods or the built-in methods so we
02:07 - will see some examples of this
02:08 - predefined methods also when we coding
02:11 - code it and some user user defined
02:14 - method also user defined methods are
02:16 - methods which are defined by us to
02:19 - perform some set of instructions okay
02:23 - and let's try let's look into the types
02:27 - of methods okay this well first one is
02:29 - the static method a method that is
02:31 - static keyword is used is known as a
02:33 - static method in other words a method
02:35 - that belongs to a class rather than the
02:37 - instance of the class is known as a
02:39 - static method what I have said is assume
02:43 - it like whenever we create a class we
02:45 - create an object of that class and when
02:47 - we create the object of the class the
02:49 - memory is allocated to that class uh if
02:53 - you're not okay if you know if we not
02:54 - create the object of that class the
02:56 - memory is not getting allocated to that
02:58 - class and when we create a method as
03:01 - static method it belongs to the class
03:03 - rather than the instance of the class
03:05 - instance of the class is the object of
03:07 - the class okay and we can also create
03:09 - the static method by using the key
03:11 - keyword static before the method name
03:14 - okay so next one is instance method the
03:17 - method of the class is known as the
03:19 - instant method it is non-static Method
03:21 - Define ins inside the class it is the
03:23 - normal method which is in your declared
03:26 - inside the class and it is not not
03:27 - static one before calling or invoking
03:29 - the instance method it is necessary
03:31 - necessary to create an object of its
03:33 - class uh like here you can see in a
03:36 - previous previous video we have created
03:38 - one class and we have created object of
03:40 - the class and then and then only we can
03:42 - uh call that print matter print method
03:46 - which is written inside this object
03:48 - class okay so this is an example of the
03:50 - instance method
03:51 - uh and third one is the abstract method
03:54 - the abstract method does not have any
03:56 - body and it is known as abstract method
03:59 - and in other words without an
04:00 - implementation it is known as the
04:02 - abstract method it means we just declare
04:05 - the method inside a class uh which is
04:08 - abstract and the implementation of that
04:11 - implementation part of that method is
04:13 - done in inside another class or another
04:15 - method okay
04:17 - uh it always declares as it has a
04:19 - abstract class we will cover this
04:21 - abstract class in our inheritance and
04:23 - inheritance and encapsulation uh oops
04:27 - Concepts there you can get this abstract
04:30 - method more clearly and it this it means
04:33 - the class itself must be abstract if it
04:35 - has abstract methods if you want to
04:37 - declare action method as abstract the
04:40 - class which in which the method is
04:42 - declared should be abstract okay to
04:45 - create an abstract method we use
04:46 - abstract keyword before it okay
04:49 - so let's get into our IDE and see some
04:53 - example
04:55 - of it okay
04:57 - let me give you an example of the
05:00 - predefined methods okay so here I can
05:03 - declare
05:05 - integer a
05:09 - um well assign it will be 0 and
05:13 - let me just create one
05:16 - scanner
05:18 - so that I can take the input from the
05:20 - user
05:28 - okay and now here if I write
05:33 - a is equals to SC Dot
05:38 - next int
05:40 - okay so here we did nothing we just
05:43 - declared one variable a and we have
05:46 - taken input from the user and assign it
05:49 - to the value a okay
05:51 - so
05:53 - here I can write something like
05:58 - okay so wait here
06:01 - let me just see oh yes
06:04 - if you want to get a maximum array a
06:08 - maximum element from an array and we can
06:10 - just simply write
06:11 - out
06:14 - the maximum
06:18 - number it's
06:21 - and I will concat it with
06:24 - math Dot Max
06:29 - of
06:32 - let's suppose I will write 10 comma a
06:36 - okay
06:39 - so here you can see uh math is a class
06:43 - which is written inside the Lang package
06:45 - main package is Java and inside which uh
06:48 - one one more package is that name Lang
06:50 - and inside Lang package we have a math
06:53 - class and inside math class One Max Max
06:56 - uh method is there here you can see uh
06:59 - one public static int Max int a into B
07:02 - and we are passing two parameters to it
07:05 - one is 10 and one is a A's value we are
07:07 - inputting uh input to the program and it
07:11 - will compare the both the integer values
07:15 - and it will return the value which is a
07:18 - greater with the maximum okay so this is
07:21 - the example of the predefined uh
07:22 - predefined methods in Java let me just
07:25 - run this
07:28 - here you can see hello world is getting
07:30 - printed and it it was asking for a
07:32 - number
07:32 - so if I enter 5 it should give me the
07:36 - output the maximum number is 10 because
07:38 - when we compare 10 and 5 the 10 is
07:41 - greater one or let me just run it again
07:45 - and I will give import such as 15. here
07:48 - you can see the maximum number is 15
07:49 - because 15 is greater than 10 okay so
07:52 - this is the example of the predefined
07:54 - methods and for the user defined methods
07:57 - we have already did it here you can see
07:59 - uh this is when we use the defined
08:01 - method I have already written some set
08:03 - of instruction in this
08:05 - okay
08:07 - and I have created one object of that
08:09 - class and we are calling that method
08:12 - using that object of the class okay so
08:15 - this is pretty much about the method in
08:16 - our upcoming videos we will be covering
08:21 - okay Constructor in Java okay so thank
08:24 - you for watching this video