00:00 - hey guys welcome to the next video on
00:02 - Jenkins tutorial for beginners in the
00:05 - last few videos we have seen how to
00:07 - install Jenkins on variety of operating
00:09 - systems like Windows Mac OS and Linux
00:14 - operating system now moving forward I'm
00:17 - going to use my U bun 2 operating system
00:20 - in order to demonstrate Jenkins
00:23 - functionalities because most commonly
00:26 - and most frequently Jenkins is used on a
00:30 - Linux operating system but having said
00:33 - that if you are running
00:35 - Jenkins on Windows or Mac operating
00:38 - system you can also follow along with
00:42 - this series because most of the time we
00:45 - will be working with this Jenkins UI on
00:48 - a browser so it doesn't matter on which
00:51 - operating system I'm working on now if
00:55 - you want to practice Jenkins on a Linux
00:59 - machine it's also easy if you have
01:02 - Windows or Mac operating system what you
01:04 - can do is you can install VirtualBox or
01:07 - VMware Player which are the software
01:10 - using which you can install Linux or any
01:13 - other operating system virtually on your
01:16 - Mac or your Windows operating system I
01:19 - have already made some videos on how you
01:23 - can install Ubuntu on VirtualBox and
01:27 - VMware Player so if you want to use
01:29 - Ubuntu or any other Linux system
01:31 - virtually on Windows then you can
01:35 - install VirtualBox or VMware Player and
01:37 - install Linux and then install Jenkins
01:41 - on it and you can follow along with this
01:44 - series so in this video I'm going to
01:46 - show you how you can create your first
01:48 - Jenkins job so let's create our first
01:51 - Jenkins job so what I'm going to do in
01:55 - this Jenkins job is I have a Java
01:57 - program on my operating system which I
02:01 - want to build and run using Jenkins and
02:04 - I'm going to show you how you can do it
02:06 - using your first Jenkins job so to
02:10 - create a Jenkins job you can either
02:12 - click on this
02:13 - which says create new jobs or you can
02:16 - click on this option which says new item
02:18 - so I'm going to click on this option
02:20 - which says create new job and then you
02:23 - will see here an interface which says
02:25 - enter and item names so I'm going to
02:28 - give my Jenkins job name as hello world
02:33 - here okay
02:34 - now you will be able to see few options
02:37 - under this name so there is a freestyle
02:41 - project pipeline multi configuration
02:43 - project folder and other options so to
02:47 - start with we are going to start with
02:49 - the Freestyle project so just choose the
02:51 - freestyle project and then click OK and
02:54 - once your job is created you will be
02:57 - able to see this kind of a window here
03:00 - so first we need to configure our
03:03 - Jenkins job so the first thing here is
03:06 - the general tab and here you can provide
03:10 - a simple description about your job so
03:13 - what this job is going to do is going to
03:17 - build and run Java program let's say so
03:24 - here you can provide a simple
03:25 - description about your project and also
03:28 - you can preview your you know
03:31 - description here so it will be shown
03:34 - like this on your job window we can
03:38 - configure it and change this thing in
03:41 - the future so that we will be able to
03:44 - use the HTML tags also in the
03:47 - description and now let's move to the
03:49 - next section so under the description
03:51 - you will be able to see discard old
03:54 - builds when you build your Jenkins job
03:57 - or github project or this project is
04:01 - parameterised for now we will not be
04:04 - using any of these options so just leave
04:06 - everything as unchecked and we will move
04:09 - to the next section which is source code
04:12 - management now by default you will see
04:15 - three options here one is none second is
04:18 - kit and third is subversion so for now
04:21 - we will choose the none option because
04:23 - we will not be using any
04:27 - source control management system for
04:29 - this video but in future we will be
04:32 - using gate or subversion in order to
04:35 - pull the source code from the github for
04:39 - example and then how to build or run the
04:42 - test on it so just choose the none
04:45 - option here and then we will move to the
04:48 - build triggers you can also click on
04:51 - this option which will just lead you to
04:55 - this category now here you will see few
04:58 - options first option is trigger bills
05:01 - remotely we will see this in the next
05:04 - video
05:04 - build after other projects are built
05:07 - this also we are going to see in the
05:09 - next video the third option is build
05:11 - periodically so we are going to choose
05:13 - this option for this video and the next
05:16 - option is github hook trigger for gate
05:19 - SCM polling and pool SCM which is for
05:23 - the source code management system so
05:26 - these option we are going to see in the
05:29 - future when I am going to show you how
05:31 - you can configure gate and other options
05:35 - into your cheng Kean's now by the name
05:38 - you can just guess that this option is
05:40 - going to build or you know run your test
05:44 - periodically but how we can configure
05:47 - our Jenkins to run periodically so for
05:51 - the help you can just click on this
05:54 - question mark here and then you will be
05:57 - able to see all the options which you
06:00 - can use here so you can see this field
06:04 - follows the syntax of Kron
06:06 - right so for example when I write s
06:10 - trachs
06:11 - Astrix Asterix Asterix Asterix using
06:14 - spaces so 5 X tricks and between them I
06:17 - have used spaces this means that I want
06:20 - to run my Jenkins job every minute and
06:23 - when you do this you will be able to see
06:27 - the hint here so it says do you really
06:30 - mean every minute when you say the
06:33 - estwick size tricks Astrix Asterix and
06:35 - then it says perhaps you meant other
06:38 - option right so
06:40 - this when you write five time Asterix
06:42 - with the spaces in between them it means
06:45 - that you want to run your Jenkins job
06:47 - every minute now if you want to read
06:50 - more you can read this whole document so
06:54 - you can see in the help window here this
06:57 - Asterix means these five options so the
07:01 - first s tricks here means the minute the
07:04 - second X tricks is for the hour
07:06 - third is for the date of month fourth is
07:09 - the month and fifth is the day of the
07:12 - week right and you will be able to see
07:14 - also some examples here when you scroll
07:18 - down a little so for example if you want
07:21 - to run your Jenkins job every 15 minutes
07:24 - you can use this option for example so
07:27 - I'm going to just copy this and paste it
07:30 - here and now it says would last have run
07:33 - at Saturday at this time and the next
07:37 - time will be 15 minutes after that ok so
07:41 - if you have any confusion you can read
07:43 - this document and you can also use these
07:46 - example in order to run your Jenkins job
07:50 - so to start with we are going to start
07:53 - building our Jenkins job every minute so
07:58 - we are going to just give 5 s tricks
08:00 - here ok and you can once again collapse
08:03 - this helped window when you click on
08:06 - this question mark here once again now
08:08 - let's go to the build environment which
08:10 - is this option so the first option here
08:13 - is delete workspace before build starts
08:17 - so we don't want to delete our workspace
08:20 - so we will not check this option second
08:23 - is use secret text and file we will see
08:25 - this option later
08:27 - third is abort the build if it's stuck
08:30 - we can also use the use it later add
08:33 - timestamp on the console output this we
08:36 - can use it but I'm going to skip this
08:39 - for now because we want to build a very
08:41 - simple Jenkins job and I'm going to skip
08:44 - also the last option so I don't want to
08:46 - check any of the check boxes in the
08:49 - build environment now the next option is
08:53 - the
08:53 - option and here you can just choose
08:55 - which type of weld you want to perform
08:58 - so if you are on Windows you can choose
09:00 - this option which says execute Windows
09:03 - batch command which is the Windows
09:05 - terminal if you are on Mac or Linux you
09:09 - can choose this option which says
09:10 - execute shell which is like executing
09:14 - command on your terminal now what we
09:17 - want to do in this execute shell so let
09:21 - me show you what I want to build here so
09:24 - in my home folder I have a directory
09:26 - called Java sample and in this directory
09:29 - I have a file called hello world dot
09:33 - java and when I open this file I have a
09:36 - simple hello world program written here
09:39 - which only prints hello world right so I
09:42 - want to build this program using Jenkins
09:45 - so to build this program I know that I
09:50 - can use Java C command to compile my
09:52 - Java program so I'm going to just copy
09:56 - the path where this file is located
09:59 - which is in this location which is home
10:03 - my username and this Jenkins sample
10:06 - project and I'm going to just CD to this
10:10 - directory so CD to the Java samples
10:14 - directory now here I can just run Java C
10:18 - command in order to compile my
10:20 - HelloWorld dot Java file right so this
10:24 - is going to compile my code and to run
10:27 - my HelloWorld the program I can just use
10:31 - Java and then hello world which will be
10:35 - the executable file so these three lines
10:38 - what they are going to do first of all
10:40 - we are going to change directory to the
10:43 - Java samples directory and then Java C
10:47 - is going to compile my HelloWorld dot
10:49 - Java file and then Java HelloWorld is
10:52 - going to run my program so after doing
10:56 - this you can just press on save which is
11:00 - going to save your configuration and if
11:03 - you want to change this configuration in
11:05 - future you
11:07 - always go to this option so on the left
11:10 - hand side you will be able to see this
11:12 - option which says configure and when you
11:15 - press on this option this configuration
11:18 - window will open once again where we
11:20 - have done our configuration right and
11:23 - when you click on this option which says
11:25 - Jenkins you will come to the Jenkins
11:28 - home page now in here you will see first
11:32 - of all that there is no build here and
11:37 - the status of this build is shown by
11:41 - this glowing Sun right and our project
11:45 - name is or our Jenkins job name is hello
11:48 - world now we have a configured our
11:53 - Jenkins job to run every minute right so
11:57 - I'm going to click on this Jenkins job
11:59 - for now and you can see even if we
12:02 - haven't started any Jenkins job it has
12:07 - already started my Jenkins job and the
12:11 - status here is a red ball which means my
12:15 - job has failed okay so we will see how
12:20 - so we will see why my job has failed so
12:24 - what I can do here is I can click on
12:27 - this job you can just click on this and
12:29 - you will see this kind of window and it
12:33 - says red here which means failed and
12:36 - when you want to see more about your
12:38 - build status you can always go here
12:41 - which says console output which is going
12:44 - to show what exactly happened and now in
12:47 - the console output you will be able to
12:49 - see what happened while running your job
12:53 - and why your job failed so in here I can
12:56 - see this message so while performing
12:59 - this step which is Java see
13:02 - helloworld.java it says this message so
13:06 - error is error while writing hello world
13:09 - hello world class permission denied and
13:12 - this most probably happens when Jenkins
13:16 - doesn't have permission as a pseudo user
13:20 - on a linear
13:20 - machine most probably on Windows it will
13:23 - run fine but on Linux we need to provide
13:26 - Jenkins the sudo privileges so let's
13:31 - change the sudo privileges so let's go
13:33 - to the hello world and you can see
13:35 - already there are three builds because
13:37 - we have configured to run Jenkins every
13:40 - minute so don't worry about this what we
13:44 - are going to do is we are going to open
13:45 - the terminal to open the terminal I can
13:48 - just go here and just search for the
13:52 - terminal or press ctrl alt T on my
13:55 - Ubuntu operating system and first of all
13:58 - what I need to do here is I need to open
14:00 - a file using a sudo privileges so just
14:04 - write sudo and then /et see for a slash
14:09 - sudo ah ok so I'm going to give you this
14:12 - command in the description also so just
14:14 - write sudo and then any tool which can
14:18 - open and edit your file for me I'm going
14:22 - to use G edit or you can use nano or VI
14:26 - or the best would be sudo VI sudo okay
14:30 - so just write sudo G added /e tc4 /
14:35 - sudoers and then press enter and then
14:38 - give your Ubuntu password or Damian's
14:40 - password and then at the end I'm going
14:44 - to just give a little space here and
14:47 - then at the end I just need to just give
14:51 - Jenkins user all the privileges and I
14:55 - want to just give no password here so
14:59 - that it will not ask for the password
15:02 - okay so just provide this line in your
15:05 - open to operating system in order to
15:07 - provide Jenkins the sudo command
15:10 - privileges right and then just save this
15:15 - and then close this and now I'm going to
15:17 - go to the configure section once again
15:20 - and in here instead of writing Java C
15:25 - something like this I can always give a
15:28 - sudo to compile my program so just write
15:33 - sudo in front of Java
15:34 - see and if you are on Windows most
15:37 - probably you won't be needing this sudo
15:39 - command so just skip this sudo command
15:41 - if you are on Windows right so I'm going
15:44 - to save this once again and I'm going to
15:48 - build my program so this button is going
15:50 - to build your program immediately so it
15:53 - will not wait for the prebiotic trigger
15:56 - to you know build your Jenkins job it'll
15:59 - build your Jenkins job immediately so
16:02 - you can see now our job shows a blue
16:06 - ball this means the last build was
16:10 - successful so let's go inside
16:13 - this build and then go to the console
16:15 - output and you can see now it prints
16:17 - hello world right so once again I'm
16:21 - going to go to my job and you can see
16:24 - previous all the previous jobs have
16:27 - failed because we haven't provided
16:30 - Jenkins the sudo privileges but now you
16:34 - can see this is the periodic bill which
16:36 - has been started and it's successful so
16:40 - in this section you can see that times
16:43 - at which your bill started and what was
16:46 - the status of bill using the color of
16:50 - these balls and when you go on the main
16:54 - page when you click on champions here
16:56 - you will be able to see blue ball here
16:59 - which means that last build was
17:02 - successful and when you see this kind of
17:06 - rainy cloud here and you when you hover
17:09 - over this cloud you will see the status
17:12 - of last five bills so you can see it
17:16 - says build stability three out of last
17:19 - five bills failed right and when I run
17:24 - this build few times once again so when
17:27 - I want to just run this Jenkins job five
17:31 - times so that the last five builds will
17:35 - be successful so you can see four out of
17:38 - five are now successful and now you can
17:42 - see this icon has changed so now the
17:45 - icon is like sunny and
17:48 - little bit cloudy and it says one out of
17:51 - five build have failed right so it shows
17:54 - the last five build and once your last
17:58 - five bills are successful or were
18:01 - successful then you will see the whole
18:04 - Sun here so I'm going to refresh this
18:06 - page and I'm going to go to the build
18:09 - here and let's see if the build has been
18:13 - started or we will start in manually
18:15 - using build Now button and it's going to
18:19 - start the build and you can see last
18:22 - five bills are successful now and when I
18:24 - go to the Jenkins home page you can see
18:27 - this bright Sun here and you can see the
18:30 - message here which says no reason bill
18:32 - failed so here this I can always shows
18:38 - the status of last five build and this
18:42 - will show if your job is in progress or
18:47 - it's already is failing or last build
18:51 - was successful if it's blue now in this
18:54 - table you will also see some other
18:56 - sections here so this is the section
18:58 - where last build occurred so for example
19:02 - eight point nine second ago last build
19:05 - was occurred and this was the build
19:07 - number 14 and last failure was three
19:11 - minutes ago which was in build number
19:14 - nine and by default this status doesn't
19:17 - refresh by itself there is a small
19:21 - option here on the right-hand side top
19:23 - and you can click on this which says
19:26 - enable auto refresh and this is going to
19:29 - enable the auto refresh after a few
19:32 - seconds so you will be able to see the
19:34 - most refreshed status here okay
19:38 - so you can see it refreshes after a few
19:41 - seconds and you can see the status last
19:44 - build last success was forty-seven
19:47 - seconds ago and last failure was four
19:49 - minutes 47 seconds ago so this is how
19:52 - you can create your first Jenkins job in
19:55 - the next video we are going to see some
19:57 - other options of running our job
20:00 - remotely
20:00 - or running our job in chained so stay
20:05 - tuned and please rate comment subscribe
20:07 - and bye for now