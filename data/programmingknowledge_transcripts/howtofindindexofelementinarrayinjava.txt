00:01 - hello and welcome back to the new video
00:02 - of the Java tutorial Series so so till
00:05 - now we have covered the theoretical part
00:06 - of the array and we have also done uh
00:09 - some uh
00:11 - easy level questions of the array and in
00:14 - this video we'll be talking some uh
00:16 - medium level of medium level question of
00:18 - the array which requires some searching
00:20 - and sorting techniques uh so till now I
00:23 - have not discussed you the not discussed
00:26 - the searching and sorting algorithms
00:28 - which are there
00:30 - for used used in Java arrays so in
00:35 - upcoming videos we will cover that don't
00:37 - worry uh there are a number of the
00:39 - Sorting techniques and searching tests
00:41 - there are two two searching techniques
00:43 - are there which is linear search and
00:45 - variance binary search we will cover
00:47 - that in our upcoming videos so what will
00:49 - be the agenda for this video is I will
00:52 - be covering this uh three uh medium
00:54 - level questions which are arrays address
00:57 - questions uh so I again these these
01:01 - these many questions are not enough for
01:04 - you to practice you just have to get
01:06 - your hand dirty on the programming uh so
01:09 - what I suggest you you just go to the
01:11 - any any of the portal or Geeks for geeks
01:14 - hacker Rank and hacker hacker Earth
01:15 - Register there uh try solving uh
01:18 - questions on the arrays set the
01:20 - difficulty levels as easy medium then
01:22 - hard
01:24 - okay so practice more and more so that
01:27 - you can improve your logic building okay
01:28 - so let's get started uh what is the
01:31 - question write a Java program to test if
01:33 - an array contains a specific value so
01:36 - what these programs what this
01:39 - in this question what we have to do is
01:41 - we have to search for an element uh
01:44 - which is given by the first of all we
01:47 - require an array and inside that array
01:49 - you will be getting one uh element which
01:51 - is of uh arrays arrays of type into
01:54 - arrays holding the integer values itself
01:56 - and we uh you have to search that
01:58 - element inside that array whether that
02:00 - elements is present inside that array or
02:03 - not if that if that present inside the
02:05 - array you just simply return true
02:08 - Boolean value and if that elements
02:11 - doesn't uh present in inside that L
02:13 - array you just simply return false okay
02:16 - on the console okay so let me get into
02:20 - my IDE and I will just simply
02:22 - comment this out uh this is our previous
02:25 - videos Solutions okay and I will
02:29 - simply comment and here I will again
02:32 - comment and I will write
02:36 - medium
02:39 - question one
02:41 - okay medium level questions one okay uh
02:44 - now I will be creating one method inside
02:48 - this and since then since this method is
02:51 - public I will declare it as public and I
02:54 - will declare it as static because I have
02:56 - to call this inside my main method and
02:58 - which is the static method okay static
03:00 - uh and this is this will return a
03:04 - Boolean value either true or false it
03:06 - will return true if their element is
03:07 - present inside that array and it will
03:09 - return false if that element is not
03:11 - present inside that area okay and I will
03:14 - write
03:15 - uh My Method name as contains contains
03:19 - means whether that element is inside
03:21 - that array or not you can add anything
03:23 - whatever you want and I will pass my
03:26 - array
03:27 - and
03:29 - item means the value that we have we
03:32 - have to search inside that
03:33 - array okay and I will simply write one
03:36 - for Loop and so I will write integer I
03:41 - in
03:43 - array
03:45 - what we have to do uh we have to check
03:48 - if
03:49 - the array at ith index is equals to
03:54 - equals to
03:56 - um is equals to equals to item
03:59 - is equal equals index
04:03 - uh not just uh sorry uh I have followed
04:08 - the traditional for Loop over here I
04:11 - just have to write I is equals to equals
04:13 - to item oh
04:15 - sorry about that and I will write inside
04:18 - this return
04:21 - return true
04:25 - okay return to I guess this
04:29 - cannot return a value from a method with
04:33 - white word result type
04:38 - uh why am I getting
04:41 - oh wait I forgot that this is the
04:44 - separate method
04:46 - uh let me just remove this my main
04:49 - method so that program can understand
04:52 - this is as a separate method
04:55 - okay uh now it's okay I will import my
05:00 - main method over here
05:07 - why am I not getting
05:10 - wait a minute let me check this whether
05:15 - oh yeah sorry
05:17 - I have not ended the method
05:20 - now it's working fine I will get my main
05:24 - method okay now it's working fine okay
05:27 - and after this for Loop uh when the
05:30 - program execution will get at line
05:33 - number 36 when we doesn't uh find any
05:36 - element which matches to the item that
05:38 - we have passed to the method okay so in
05:40 - that case we simply written
05:43 - false okay now it's okay and now we will
05:47 - call that method inside this main method
05:49 - for that before that uh I will declare
05:52 - one array
05:53 - int
05:56 - array which is equals to
06:00 - I will simply assign the values over
06:04 - here itself or 10 comma 20 comma
06:08 - 23 comma 30 comma 45
06:12 - you can give any value whatever you want
06:16 - and after that I will require one
06:19 - variable
06:21 - item means the I value that we want to
06:24 - search inside that array and let's
06:26 - suppose we have to search 23 inside that
06:29 - array okay
06:31 - and now
06:32 - I will just
06:35 - print the
06:38 - call the contents method and I will pass
06:40 - array and
06:43 - item as my parameters to it okay now if
06:47 - I run this since the 23 is present
06:50 - inside this array the expected output
06:52 - should be true yes it is returning to
06:54 - and now if I give a item value as number
06:58 - which which is not present inside that
07:01 - array then in that case I should get
07:03 - false yes it is getting showing false
07:07 - okay now it's working fine so this is
07:09 - the solution to the question number one
07:13 - and what is the question number two
07:15 - second question that is fifth question
07:16 - write a Java program to find the index
07:19 - of an array element so we have to find
07:22 - the index
07:24 - of an array element okay
07:26 - so in this case
07:29 - we want we have to get one array from
07:32 - the user and we want
07:35 - one item like here we have declared over
07:38 - here one item should be there and we
07:40 - have to match whether that item is
07:42 - present inside that array or not if that
07:45 - matches we just have to return the index
07:48 - at which the item is whether inside that
07:51 - array okay
07:53 - this is the idea behind this question I
07:56 - will comment this out and this statement
07:59 - also and now here I will write one more
08:03 - comment
08:04 - uh
08:06 - medium
08:08 - question two
08:10 - and for this I will create I will create
08:13 - one in
08:15 - method by the name of find index because
08:18 - we have to find the index of the element
08:21 - that that is present inside the diary
08:24 - and I will write public
08:28 - static the return type should be in
08:31 - because we are retaining the index that
08:33 - is the integer value
08:34 - okay those are the method name is find
08:38 - index and this method is uh receiving
08:41 - one
08:42 - array as an input
08:45 - array as an input and integer
08:48 - uh t
08:50 - let me give it St okay
08:53 - okay so what we are going to do inside
08:57 - this we will check one base condition if
09:02 - my if the array
09:05 - is equals to equals to null
09:09 - then
09:12 - return minus one this is a this is
09:15 - called as base condition in programming
09:17 - you have to check the corner cases
09:19 - whether these are the cases uh that you
09:23 - need you need to handle or this will
09:25 - improve your space and time complexity
09:27 - of the
09:28 - your algorithm because if the array is
09:31 - original means array is empty there is
09:33 - no point checking doing all this uh
09:35 - running those Loops doing all those
09:38 - processing tasks then it it you can
09:40 - simply return -1 because if the array is
09:43 - null you are not getting going to get
09:45 - that element inside that array okay so
09:47 - this is the base
09:50 - condition
09:52 - that we have to check and
09:55 - now here I will write integer length
10:00 - equals to
10:03 - array Dot
10:06 - oops sorry
10:08 - error.length
10:11 - and I will require one more variable I
10:13 - is equals to 0
10:15 - and I will declare one while loop
10:18 - and inside this I will write I is less
10:21 - than my length
10:24 - okay uh I'm doing this task I'm running
10:27 - this while loop whenever
10:30 - my I is less than left so initially my
10:34 - value is 0 and length value is uh is the
10:37 - number of the elements which are better
10:38 - inside that array okay it can be
10:40 - anything 5 10 whatever the number of
10:42 - number of elements you pass inside the
10:44 - array and inside this for loop I will
10:46 - check one if condition if my array at
10:49 - ith index
10:50 - is equals to equals to p
10:53 - okay T is nothing but the value either
10:56 - item that we want to find inside that
10:58 - array in that case we will simply return
11:01 - the value of the I uh return
11:05 - the i i wins the well in this highest
11:08 - value I represents the current index at
11:10 - which the loop is running so if that
11:12 - elements matches the elements that we
11:14 - want to pass that we have passed to the
11:17 - method then in that case return the
11:19 - value of the I that mean return the
11:21 - value of the index at which the element
11:23 - is present inside the diary and if it is
11:27 - not present inside the diary if it not
11:29 - matches with the elements inside that
11:31 - array simply do I plus plus means
11:33 - increment the value of the I and again
11:35 - go further checking whether the I is
11:37 - less than equals to length and whenever
11:40 - my while loop is executed successfully
11:42 - and I till not found the element which
11:45 - is
11:46 - which I want to find inside that array
11:48 - in that case that means that that
11:50 - element is not present inside that array
11:51 - in that case we will simply return
11:54 - -1
11:55 - okay and now uh I hope this is the thing
11:59 - that we have to do inside this method
12:01 - and now if I go inside my main method I
12:06 - have I will be using the same array and
12:09 - here I will give 23 as an input the item
12:14 - which we have we are searching for in
12:16 - inside this array and add indexing start
12:18 - from 0 so 0 1 2 the expected output
12:22 - should be 2 okay
12:24 - and I will simply
12:27 - print
12:29 - I will call the method find index and I
12:33 - will pass array and the item to this
12:36 - method okay now if I run this
12:40 - I should get 0 1 2 yeah we are getting 2
12:44 - on the console because 0 1 2 the element
12:46 - is found at the index 23 and let me give
12:49 - the items value as 2 which is not there
12:52 - inside the diary in that case I should
12:54 - get the
12:56 - output as -1 yeah we are receiving it as
12:59 - minus one and if I give the array as an
13:02 - empty array
13:04 - base condition we also check
13:06 - in that case also we will receive minus
13:09 - one yeah we are receiving the minus one
13:10 - uh now it's okay
13:13 - now the one more question was there
13:16 - write a Java program to copy an array by
13:19 - iterating the array now uh we in this
13:23 - questions uh in this question we have
13:25 - given one array we just have to copy the
13:28 - elements which are present inside one
13:29 - array and take those elements and copy
13:32 - those all elements inside the new array
13:34 - okay so there are several ways by which
13:37 - you can write this code in optimized
13:39 - manner uh
13:41 - okay so for now till now I'm assuming
13:45 - that you know have you don't have any
13:48 - advanced knowledge about the arrays and
13:51 - problem solving so we'll go the basic
13:53 - approach itself okay uh so now
13:58 - I will comment it out
14:01 - and I will write one more comment over
14:03 - here
14:06 - taking medium
14:09 - question three
14:10 - and now I will comment this also okay
14:14 - so I will write one more method over
14:17 - here
14:17 - okay so what we'll be doing we just we
14:20 - just have to copy the elements okay so
14:23 - in that case the method should not
14:25 - return anything okay so the written type
14:27 - should be wired okay so I will
14:31 - public
14:33 - static
14:35 - void
14:38 - um late wait wait wait wait wait
14:41 - do I need to create one separate method
14:45 - first
14:46 - I think no need is there to create one
14:51 - separate method where we can do this
14:53 - kind of shop inside the main method
14:54 - itself
14:55 - okay so one array was declared already
14:58 - over here I will use the same array uh
15:00 - these items value was not required for
15:03 - me to in this question and I will
15:06 - declare one more here array I will call
15:10 - this as new
15:12 - array
15:14 - new integer of I mean I will give the
15:17 - same one two three four five capacity of
15:21 - five elements
15:23 - inside this area okay
15:26 - and now
15:28 - um
15:31 - to do this I one inbuilt method was
15:34 - there I will use it as
15:36 - okay I will write
15:41 - original
15:43 - array
15:45 - and to pin this array inside one go we
15:50 - have one method
15:53 - arrays
15:54 - Dot
15:57 - to string
15:59 - and we have to pass the array name to it
16:03 - okay
16:04 - now it's so rs.2 string iris is the
16:08 - class which is uh provided by the Java
16:10 - in the util package here you can see if
16:12 - I hover over here you can see java.util
16:15 - dot arrays and I guess yeah IntelliJ
16:19 - IDEA has also imported the following
16:22 - package okay
16:24 - what it will do it will get array as an
16:28 - input and it will convert that array in
16:30 - into the string okay so it will here you
16:33 - can see it it is accepting the array as
16:36 - in parameter and it will convert those
16:38 - array elements into the string and it
16:40 - will print all those in a sequence of
16:43 - that we have stored over here okay now
16:47 - I just have to copy all those elements
16:49 - so for the copying purpose I required
16:52 - one for Loop which will start from I is
16:55 - equals to zero and it will go till
16:58 - whether till my array dot length
17:02 - and each time I will be doing I plus
17:04 - plus and inside this array
17:07 - I will simply write new array wait wait
17:12 - wait
17:13 - new array at it index means the first
17:16 - India that is zeroth index I will copy
17:18 - the element which are which is present
17:21 - at array at ithe index means we are just
17:23 - simply taking the first element of the
17:25 - original array and we are assigning it
17:28 - to the value of the value at the zeroth
17:31 - index at the new array so similarly when
17:34 - we go for the again checking for the for
17:36 - loop at that time is value is 1 we will
17:38 - simply get the first element of the
17:40 - original array and copy it with this
17:41 - first position of the new array okay
17:45 - and after that
17:47 - once the for Loop is ended uh the same
17:50 - thing we are going to do we are going to
17:53 - print the
17:56 - copied array
17:59 - copied array and we'll pass
18:02 - new
18:03 - array as an input to this okay now if I
18:06 - run this
18:07 - same array should get printed okay
18:10 - original array is uh 10 20 23 30 45 and
18:13 - copied array is 10 20 30 to 23 30 and
18:16 - 45. so this is the solution to the
18:19 - question number sixth
18:21 - so I hope you got some idea how these
18:24 - searching and sorting techniques are
18:26 - done in Java there are some algorithms
18:29 - like I said a linear search binary
18:32 - search and for the Sorting uh bubble
18:34 - sort heaps or Radix or merge merge sort
18:36 - is there there are so many uh sorting
18:39 - techniques we will also cover that all
18:41 - these algorithms in our upcoming video
18:43 - for before that you should go to gigs
18:47 - for gigs or hacker rank to try solving
18:49 - some questions so that your logic
18:52 - building will get improved uh in the
18:54 - programming okay
18:55 - strength thank you guys for watching
18:57 - this video and I will see you in the
18:58 - next one