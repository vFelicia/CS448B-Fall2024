00:00 - hello everyone welcome to programming
00:01 - knowledge so this is the 3034 django
00:04 - series so I again will commute
00:06 - programming knowledge so basically in
00:08 - the tradition tool we're going to
00:09 - continue with a to-do app so basically
00:11 - we will perform a search query based on
00:12 - title so title of this video search data
00:16 - so basically what data we have in the
00:19 - call to do app so basically I'll show my
00:21 - app so we have add list all to do and
00:24 - this is for favorability so basically in
00:26 - list all to a section we have all the
00:28 - tools so basically I can add few more as
00:31 - well so let me do some like I added on a
00:35 - let me do Django so I have it on Django
00:41 - then Django priority I will give it to
00:42 - number one top most priority so here you
00:46 - can see I have on Django then or I'll do
00:49 - another one add another one Python and
00:51 - I'll add on Python again Python I'll add
00:56 - priority again to number two okay or
00:59 - maybe one also
01:00 - so here I've added Python also so
01:03 - basically if you want to search our or
01:04 - two rules so we can form search query so
01:07 - for that I'll refer this queries head so
01:10 - the one I told you which is going to be
01:12 - very important for this is going to it
01:14 - contains so I'll move to that contains
01:18 - contains contains I'll move to contains
01:24 - okay so for this contains yeah
01:32 - I am so no it's fine okay so basically
01:36 - we have to contains so yeah here you can
01:41 - see this one yes so object store filter
01:44 - and this is this is it this contains
01:47 - mean just this keyword is being look in
01:51 - this headline okay so so forth if even
01:54 - well we will design the same thing for
01:56 - the title one so let's get started with
01:59 - this so what we can do
02:01 - we'll move to URL short py5 and then we
02:04 - will define a path then search data then
02:11 - I will find views dot
02:13 - such data okay and name is equal to
02:20 - search data so basically I defined
02:24 - search data now what I can do so I'll
02:28 - define in my views define search data
02:32 - and it will take a request as a
02:36 - parameter and we do what I'll try to
02:39 - then we'll perform the operation so till
02:42 - time back into the past so basically
02:43 - people we're going to do the pages of
02:45 - query then I'll move to my index dot
02:48 - HTML page so this is sorry by title okay
02:52 - so I will give it to person URL okay
02:56 - search data okay so this would perform
03:02 - my query to that and then this is the
03:07 - form so here you can see so here you can
03:12 - see this I want to show you one thing
03:15 - okay let me do right click inspect so
03:19 - basically what I am trying to show here
03:23 - that this thing is a form okay and this
03:28 - whole thing you can see yeah so key yeah
03:36 - so here you can see yeah this is a form
03:40 - which is being highlighted now this to
03:43 - do title to do title to do description
03:46 - to the priority this is a formal in
03:47 - itself so for that form to submit this
03:50 - will be referred to the add button and
03:52 - for this form it has no buttons we will
03:56 - create a button for this form okay so
03:58 - sorry by title is a form in itself
04:01 - Plus this is in a format set in itself
04:04 - okay
04:04 - so for that what we can do we will move
04:07 - to that search by title search data and
04:09 - we will create a button button height is
04:16 - equal to submit name is equal to 4 that
04:22 - will do a button type so the submit and
04:24 - we will do submit
04:27 - or such so let me do search query bucket
04:30 - search right search okay and now for
04:34 - that we can do class is equal to button
04:40 - button primary okay for that we'll and
04:45 - style and define a style is you to
04:47 - display block and margin:0 okay so this
04:56 - would define a button to the center okay
05:00 - let me do one them so it could also give
05:02 - put top margin here so when i refresh
05:05 - this page here you can see and I have a
05:07 - search button
05:08 - fine now then when I move here so to
05:14 - search the to really see you see a see
05:17 - if it's working fine I'll define a queue
05:20 - a diffuser to request sorry request dot
05:25 - you get query and I'll define it as HTTP
05:33 - response of cube so let me move to my
05:36 - page and refresh this and I will type
05:38 - click it okay the crl type CR so yes it
05:45 - gives me as a shitty forms of CR search
05:46 - works fine okay now we would render the
05:50 - these two two objects or not front-end
05:55 - so basically we can do what we can do
05:59 - for will okay I will show you one thing
06:02 - also we have contains so basically this
06:07 - is equivalent to even last time I showed
06:11 - you contains this one this one this one
06:16 - this one yeah okay yeah yeah I wanted to
06:25 - show you this thing so case sensitive
06:28 - containment
06:29 - this is contains so basically there is a
06:33 - difference slight difference between
06:35 - this this contains and
06:40 - I contains so basically here I stands
06:44 - for
06:44 - insensitive so this is case sensitive
06:47 - and this one is case insensitive so this
06:50 - one this one I wanted to show you and
06:52 - this is equal to this SQL query where
06:55 - headline is person this evil so okay so
06:59 - basically this is this is a small
07:00 - difference I want you to show you
07:02 - between the contains and I insensitive
07:05 - contains so basically there is a
07:06 - difference of this keyword I so we can
07:09 - move to our application now so what we
07:13 - can do
07:13 - so I'll define my dictionary I will
07:20 - define a dictionary then I will return
07:26 - render okay then request then list dot
07:35 - HTML okay if you want to show the result
07:39 - in the list itself so basically we are
07:40 - referred to the same template again and
07:42 - again then context is able to my
07:46 - dictionary this is pretty much same as
07:48 - above but here a difference will be so
07:51 - what we have all two rules okay for that
07:55 - we have to do dot objects dot filter
08:01 - okay then what we are going to do filter
08:07 - and now we are going to define title so
08:15 - basically we will move to model sort py
08:17 - file so this is the title world we are
08:18 - going to use title double underscore we
08:24 - will define double on the scope contains
08:27 - is equal to Q okay so I hope this was
08:32 - fine
08:32 - so this is we are referring to title to
08:36 - have this okay so let me do one thing
08:38 - I'll make a search query so if I just
08:42 - type SIA then we have cricket okay so it
08:45 - match my query so let me do wonder it is
08:47 - told to do so cricket 89
08:49 - so I'll define a cricket so see this
08:54 - cricket cricket cricket and then 90 so
09:00 - this is a different form working okay
09:02 - absolutely fine so so this is created 90
09:06 - then I define another one click it then
09:10 - 91 so when I should type C R so it
09:17 - should return all the tickets with 89 90
09:20 - and 91 then even I had to solve a
09:22 - priority but poka-yoke is a sorry for
09:26 - this okay we'll work on this but till
09:30 - now we can this is a well I'll clear
09:33 - this so basically this was sort data so
09:37 - it referred to all tools if it has no
09:39 - filter yet okay but when we dis research
09:42 - data so I'll do do this again
09:46 - I'll define cricket and now I have 89
09:50 - 1991
09:51 - okay so we will next time we'll try for
09:56 - the update operation so okay we'll check
09:59 - enough another one then let me take per
10:01 - type B a so basketball would be so this
10:07 - is basketball okay and this is BA refers
10:11 - to here as well so it is ver referring
10:13 - to the BA in the basketball and football
10:15 - okay ba so we will define that you do
10:19 - another okay you can type the query here
10:24 - as well fo put bolts for this would be
10:27 - returned football only and that you type
10:30 - Papa so this wouldn't match this record
10:33 - survey ordered by order Y so this looks
10:36 - absolutely fine so we can do for another
10:40 - as well let into DJ will put it turn
10:42 - with Django and py this will turn with
10:46 - Python absolutely working fine okay so
10:49 - thank you guys thank you so much I'll
10:50 - catch up in the next curve so the next
10:53 - one we are going to do the update
10:54 - operation