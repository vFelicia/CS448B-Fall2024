00:00 - hello guys welcome to the next video on
00:02 - JavaFX tutorial for beginners in the
00:04 - last video we have started creating a
00:07 - calculator in Java FX using
00:10 - model-view-controller design and we have
00:14 - created a few classes like main
00:16 - controller model class and we have
00:19 - created our main dot effects I will
00:22 - design something like this now in this
00:25 - video we are going to complete this
00:27 - functionality for the calculator okay so
00:31 - in the last video we have created this
00:33 - main controller the Java and model dot
00:36 - Java classes right so first of all we
00:39 - are going to link our F XML file with
00:42 - this Amin controller class so go to your
00:47 - scene builder and on the left hand side
00:49 - just choose this last option which says
00:52 - a controller and in here just choose the
00:56 - class for the controller so in our case
00:59 - it's application dot mean controller
01:01 - class right now just select all the
01:06 - buttons on which you can see the numbers
01:09 - so these are the buttons from 0 to 9
01:13 - don't choose the operator buttons right
01:17 - just choose the buttons which has
01:19 - numbers on it ok so choose all the
01:21 - numbers and then go to code here on the
01:25 - right hand side and go to on action and
01:29 - choose the action process number okay
01:33 - so process number this is the method
01:35 - which we have created in the last video
01:38 - if you go to the main controller class
01:41 - this was the method we have created
01:44 - right that's why you can see this
01:46 - process number method or in own action
01:49 - in the same way just choose all of your
01:52 - operator so this one this one this one
01:55 - this and this these five are our
01:58 - operators so select all these operators
02:01 - and once again here choose this time
02:04 - process operators right so for numbers
02:08 - we are going to use the function called
02:10 - process number and for operators we are
02:13 - going
02:14 - to use this method called process
02:17 - operators so linking is complete for the
02:22 - controller and effects ml file now let's
02:25 - go to our Eclipse IDE and first of all
02:30 - we are going to go to our model or Java
02:33 - class and in here we will complete this
02:36 - calculate method so this is the easiest
02:39 - part so what we are going to do is we
02:41 - are going to add a switch statement here
02:45 - and as a key we are going to provide our
02:48 - operator okay so based on the operator
02:52 - we are going to decide what action we
02:55 - want to take so operator can be plus
02:57 - minus or multiplication or division
03:00 - right so let's say our operator is plus
03:06 - so what we are going to do is we don't
03:09 - need this break here we are going to
03:11 - take this number one plus number two and
03:17 - we are going to return this okay so just
03:20 - do something like this okay
03:23 - in the same way we will do the same for
03:26 - a minus multiplication and division so
03:30 - this is for - this is for multiplication
03:34 - and this is for division okay so for -
03:38 - it's simple number one - number two for
03:42 - multiplication it's also simple number
03:45 - one Astrix number two for division first
03:49 - of all you need to check if your number
03:52 - two is zero right if your number two is
03:55 - zero then it will going it's going to
03:58 - give you infinity so let's just check if
04:01 - number two is equal to zero then we are
04:04 - going to return zero from here okay
04:08 - otherwise we are going to return the
04:11 - division right now in the default case
04:15 - if the operator doesn't match any case
04:19 - then in the default case we are going to
04:21 - return zero okay so in the default case
04:25 - just return zero so this is how our
04:27 - or calculate method in the model class
04:30 - will look like okay now let's go to the
04:34 - main controller dot Java class and in
04:37 - here first of all we are going to define
04:39 - the label and we can name our label as
04:44 - for example result okay and in here
04:49 - above this label we are going to provide
04:52 - this tag which is at the rate FX ml and
04:57 - what this is going to do is it's going
05:00 - to tag our F XML file with the label and
05:03 - just import this label from here which
05:08 - is Java FX label okay and also import
05:11 - this F XML from here okay so this is not
05:15 - going to show you the error same we are
05:18 - going to do for our method like this now
05:23 - we are going to define three variables
05:25 - first will be a long number one and we
05:33 - are going to initialize this by zero
05:36 - okay the second variable will be a
05:39 - string so it will be a string and we
05:43 - will name it as operator okay
05:45 - and we will initialize it by a blank
05:49 - string and third variable will be a
05:52 - boolean string variable so private
05:57 - boolean start and we will initialize it
06:03 - with true value okay now first we will
06:07 - determine whether this flag is set or
06:10 - not in our process number method so go
06:14 - to your process number method and just
06:16 - write if
06:17 - start then what we are going to do we
06:21 - are going to first of all set our label
06:25 - as blank so just write result dot set
06:30 - text is equal to blank and then we will
06:35 - set our flag which is starred to false
06:39 - okay
06:41 - now outside this if condition what we
06:44 - are going to do is we are going to
06:46 - create a string variable and we will
06:50 - call it as value and then what we are
06:53 - going to do is we are going to create a
06:56 - bracket and inside the bracket we are
06:58 - going to write this code which says in
07:00 - the bracket button then outside the
07:03 - bracket even dot get source and outside
07:06 - the bracket you will just write dot get
07:09 - text okay and what this is going to do
07:13 - this is going to just take the button
07:17 - text so for example we have text on the
07:21 - button seven eight nine or all these
07:24 - numbers okay so this button event dot
07:28 - ket source takes the button text and
07:32 - then transfer it into this variable okay
07:36 - and just import this button from here so
07:41 - button class something like this okay
07:44 - and it's going to clear your errors now
07:48 - in the next line what we are going to do
07:50 - is we are going to set so just take this
07:54 - result and then dot set text so just set
08:00 - the text and what we are going to do we
08:03 - are going to take the output from the
08:06 - label so just take set text result dot
08:10 - get text so get text plus the value okay
08:18 - something like this so that's it for
08:21 - this method and in the process operator
08:25 - method what we are going to do is first
08:27 - of all we will just take the input from
08:30 - the button text same as we have done in
08:34 - process number so this value will be
08:37 - your operator right and then what we are
08:41 - going to do is we are going to check if
08:43 - this value is equal to right so just
08:46 - right if this value dot equals and this
08:52 - value is equal to this equal to
08:55 - cymbal okay and we will check the
08:58 - negative scenario so if this value is
09:00 - not equal to this equal to symbol we
09:05 - will check if the operator which we have
09:07 - defined here is empty or not so just
09:09 - right
09:10 - if operator dot is empty and we will
09:17 - check the negative scenario here then we
09:20 - will return so just write return here
09:24 - otherwise we will just equate our
09:27 - operator is equal to the value we have
09:31 - right so operator is equal to value and
09:34 - the number one which we have declared
09:37 - here number one we will equate by taking
09:41 - the text from the result right so just
09:46 - number is equal to long because we need
09:49 - to convert this text from string to long
09:53 - so just write long dot parse long and in
09:58 - here just take your result label name
10:02 - dot get text and after setting this
10:06 - number we will set this result is equal
10:10 - to null so set text and set text as a
10:16 - blank empty string now if the button
10:20 - which is pressed is the equal to symbol
10:24 - then we will go to else condition okay
10:27 - so in the else first of all we will
10:31 - check if the operator is empty in this
10:34 - case we will check the positive scenario
10:36 - so keep in mind here we are checking if
10:40 - the operator is not empty and here we
10:44 - are checking if the operator is empty
10:46 - right and then in the next line what we
10:50 - are going to do is we are going to take
10:52 - the second numbers we are going to
10:54 - define a long number two is equal to
10:59 - same line as this long dot Pass long and
11:04 - then take the value from the get tag
11:09 - from the label okay and now we will call
11:12 - our calculate method in the model right
11:16 - so for that we need to declare this
11:19 - model object in our main controller
11:23 - class okay so in here just add model
11:28 - model is equal to new model and now we
11:33 - will take this model object from here
11:35 - and we can call the calculate methods
11:38 - model dot calculate right and in here
11:42 - you can provide the first number which
11:44 - we have assigned the value of first
11:47 - number from here right and the second
11:51 - number we have from here and the
11:53 - operator we have in this operator
11:56 - variable okay so this will give you your
12:00 - output so we can assign this output to a
12:03 - variable so just call a float variable
12:07 - called output Pro from here and this
12:12 - output we can set on our label so our
12:16 - label variable is result so just call
12:20 - our label variable dot set text and then
12:25 - in here just call string dot value off
12:30 - and then just pass your output here okay
12:36 - and just for cleaning what we can do is
12:39 - we can just assign operator is equal to
12:43 - blank string and start variable which is
12:49 - our this variable start is equal to true
12:55 - and now let's run our code so run it and
12:59 - when I click some number it shows me
13:03 - some error let's see what error is it's
13:06 - giving me error from this line and this
13:10 - result is giving me some error so I
13:13 - think I forgot to link this result
13:17 - variable in our scene builder right so
13:20 - just copy this Rezo
13:22 - variable which is our label variable
13:24 - remember go to the scene builder and
13:27 - select your label inside your stack pane
13:31 - and go to the property in the code
13:34 - section and as a FX ID you just need to
13:38 - give this result here right so choose
13:41 - the result save your code once again so
13:45 - save it and after saving go to eclipse
13:49 - and in here right click on your project
13:51 - and refresh your projects so that we
13:54 - don't have any error and our F XML file
13:58 - is synchronized with our project and
14:00 - then run it once again and now what we
14:03 - are going to do we are going to add
14:05 - something for example 88 plus 12 is
14:09 - equal to hundred okay so we are getting
14:12 - the result right for example you want to
14:14 - subtract something 45 minus 5 is equal
14:18 - to 40 okay or we want to divide
14:21 - something 9 divided by 3 is 3 or we want
14:25 - to multiply something 50 multiplied by
14:28 - 50 2500 okay so our calculator is
14:32 - running now so this is how you can
14:34 - create a simple calculator in JavaFX
14:38 - using MVC I hope you have enjoyed this
14:40 - video please rate comment subscribe and
14:42 - bye for now