00:00 - hey guys in this video I'm going to show
00:01 - you how you can install and use MySQL
00:06 - server with
00:07 - Docker so for this video I will be using
00:10 - my Mac operating system but if you have
00:13 - Windows operating system or Linux
00:16 - operating system the commands will be
00:19 - same which I'm going to show you in this
00:21 - video once you have Docker installed on
00:24 - your operating system which you are
00:26 - using so I will start with the install
00:29 - ination process of Docker on my Mac
00:32 - operating system and I will put the link
00:35 - of the videos about how to install
00:39 - Docker on Windows or your Linux
00:42 - operating system so whatever operating
00:45 - system you have just click the link of
00:48 - that video and install Docker using
00:52 - those instruction so let's start with
00:54 - the installation of Docker so first of
00:56 - all open your favorite browser and
00:58 - search for Docker and the first l which
01:00 - will appear here will be from doer. so
01:02 - we are going to click on this link and
01:05 - straight away we are on this doer.
01:07 - website now in order to install Docker
01:10 - click on get started now on this page
01:13 - you can see get started with Docker and
01:16 - you will see some options to install
01:19 - Docker first one is for Docker for Mac
01:23 - for apple chips that means if you have
01:26 - apple chips like M1 M2 M3 then you can
01:30 - just click on this button if you have
01:34 - mac with Intel chips then you can click
01:37 - on this option which says um download
01:39 - for Mac Intel chips I have a Macbook
01:42 - which supports apple chips so I'm going
01:45 - to just click on this uh download for
01:47 - mac Apple chip button which is going to
01:50 - start the download for this DMG file so
01:55 - just wait for this download to finish
01:57 - and once this DMG file is downloaded
01:59 - loed I'm going to click on this DMG file
02:02 - and let me minimize my browser so the
02:05 - installation of Docker is really simple
02:08 - you just need to drag this dcker symbol
02:11 - into your applications folder if you're
02:13 - using your MacBooks trackpad then just
02:17 - press command key and then just drag and
02:20 - drop this icon into your applications
02:23 - folder which is going to start the
02:26 - copying process you can see copying
02:28 - Docker to Applications
02:30 - just wait it for a few
02:32 - seconds and once this is copied we can
02:35 - close this window eject this Docker from
02:39 - our Macbook so I can just right click on
02:42 - this Docker icon and then click on eject
02:45 - Docker now once Docker is copied into
02:47 - your applications folder you can go to
02:50 - your Launchpad section and here search
02:53 - for Docker and you will be able to see
02:56 - the docker icon here so I'm going to
02:57 - click on this Docker icon which which is
03:00 - going to start Docker on your Mac
03:02 - operating system at this point you just
03:04 - need to wait for a few seconds and you
03:07 - will see this kind of window which
03:09 - appears so here you can see uh Docker
03:13 - subscription service agreement and you
03:15 - will also see that Docker is starting on
03:20 - your Mac operating system and at the top
03:22 - you can see uh this kind of Docker icon
03:25 - right so I'm going to click on accept
03:28 - here and now I can see this uh window
03:30 - which says complete the installation of
03:32 - Docker desktop the configuration below
03:35 - can be changed later in the settings for
03:39 - now I'm going to choose uh this option
03:41 - which says use recommended settings
03:43 - which requires the password I'm going to
03:45 - just click on finish here and then I'm
03:48 - going to provide my Mac books password
03:50 - which I use to log to my Mac operating
03:53 - system and once that's done this window
03:57 - appears you can also see some uh
04:00 - notifications here which I'm going to
04:02 - close so on this next window Docker will
04:06 - ask you to sign in with your Docker
04:10 - account the creation of Docker account
04:12 - is really simple just click on sign up
04:14 - here and then it's going to redirect you
04:17 - to this kind of web page where you can
04:19 - provide your email username and password
04:23 - and then click on the sign up button
04:26 - which is going to sign you up into your
04:30 - Docker account now this kind of uh
04:32 - dockerhub account is useful when you
04:35 - want to push some images which are some
04:38 - custom images uh into your dockerhub
04:41 - account and then you also need to pull
04:44 - those images so I already have the
04:47 - docker account so I'm going to click on
04:49 - sign in
04:51 - here and then I'm going to sign in with
04:53 - my Docker account and once I'm uh signed
04:56 - in with my Docker account I'm going to
04:58 - click allow here
05:00 - which is going to sign me in in my
05:03 - Docker desktop and here you can see this
05:06 - welcome survey I don't want to uh give
05:08 - any feedback so I'm going to click on
05:10 - skip server here and now I can see my
05:13 - Docker
05:14 - desktop so let me just close everything
05:17 - here and this is how this Docker desktop
05:21 - looks like on the top you can see the
05:23 - docker uh icon and you can also see that
05:27 - Docker desktop is running from here you
05:30 - can restart the docker quit Docker
05:33 - desktop also you can pause the docker
05:36 - right you can also see the images once
05:40 - you have some local images or if you
05:42 - have pushed some images to your Docker
05:45 - Hub then you can also see those images
05:49 - here also you can see the volumes and
05:52 - other information about your Docker
05:55 - containers once that's done I'm going to
05:59 - minimize is this and then I'm going to
06:01 - open the terminals so just go to your
06:04 - Spotlight and then just search for
06:06 - terminal and open the terminal and here
06:09 - we can just write Docker space version
06:14 - here and then press enter and it's going
06:15 - to give you some information about your
06:18 - Docker version you can also give this
06:21 - command which is Docker info and then
06:24 - press enter and it's going to give you
06:27 - the information about your docker
06:30 - engine once those two commands uh works
06:33 - in your terminal you can also use Docker
06:36 - in your terminal so I'm going to uh
06:39 - clear the terminal and let's say I want
06:42 - to pull some image into my local machine
06:47 - so what you can do is you can search for
06:49 - dockerhub in your favorite uh browser
06:53 - and you can open this website which is
06:56 - hub.
06:57 - do.com so on this do Hub website we are
07:00 - going to search for MySQL and then I'm
07:03 - going to press enter and it's going to
07:06 - search for all the MySQL related images
07:10 - in the docker Hub website now as you can
07:14 - see here the number one result here is
07:17 - the official Docker image and it has
07:20 - been downloaded around 1 billion times
07:25 - right so it's the most popular and it's
07:28 - also the off offal image of MySQL server
07:32 - so we are going to click on this first
07:34 - result here and here you can see
07:38 - more documentation about how you can use
07:42 - this image with Docker on your operating
07:47 - system which you are using so when you
07:49 - scroll down a little here you will see a
07:52 - section called how to use this image and
07:55 - you will see some Docker run commands
07:58 - here so I'm I'm going to use this first
08:01 - command so let me copy this command and
08:04 - then you can open any uh text editor of
08:07 - your choice I'm going to open Visual
08:08 - Studio code here and paste this command
08:11 - here so basically what this command does
08:15 - is it runs the docker container with the
08:20 - name Su MySQL so this will be the name
08:24 - of your Docker container so hyphen
08:27 - hyphen name uh here provides the docker
08:31 - container name and using hyphen e you
08:34 - can provide some environment variables
08:36 - to your container image so here in this
08:41 - uh command we are providing the MySQL
08:44 - root password which will be used as the
08:47 - password when we want to log our MySQL
08:51 - server and by default this password is
08:54 - my hyphen secret hyphen PW and then
08:58 - using hyphen D you can provide the image
09:01 - with the image tag so in this case you
09:05 - can even remove this colon tag from here
09:09 - because if you give the name of the
09:11 - image then it will always patch the
09:13 - latest image for MySQL we can also give
09:17 - the port on which we want to run MySQL
09:21 - so here after the environment variable
09:23 - flag I'm going to provide one new flag
09:26 - which will be called hyphen p and using
09:30 - hyphen P we can provide the mapping of
09:34 - the port uh so we want to run let's say
09:37 - MySQL on 3306 Port we will map this
09:42 - 3306 Port which will be running inside
09:46 - our container to the Local Host so we
09:49 - will be able to connect to our uh MySQL
09:53 - server using 3306 on our local computer
09:57 - so I'm going to just write 33 06 here
10:00 - and provide the space here so this will
10:03 - be our final command and I'm going to
10:06 - provide this command in the description
10:08 - of this video also so that you can copy
10:11 - this command directly and paste it into
10:14 - your terminal so I'm going to copy this
10:17 - command and then you can open the
10:19 - terminal so let me open the terminal
10:23 - here and once the terminal is open make
10:27 - sure your docker desktop is running and
10:31 - then I'm going to just paste this
10:33 - command here and then I'm going to just
10:36 - press enter here which is going to fetch
10:38 - the latest image of doer you can see
10:41 - unable to find the image that's why it
10:44 - will fetch the MySQL colon latest which
10:48 - means that it's going to fetch the
10:50 - latest image of
10:52 - MySQL and then you can see it has
10:55 - already pulled the image and then it has
10:59 - started our container now to check
11:03 - whether our container is running or not
11:06 - you can give this command which is
11:08 - Docker
11:10 - space PS and then press enter and it's
11:13 - going to show you the container which is
11:15 - running so you can see here the name of
11:19 - the image is MySQL the name of the
11:22 - container is some MySQL here and the
11:26 - port we are forwarding here is
11:30 - 3306 on our Local Host right so our
11:34 - container is running successfully here
11:37 - you can also check this on the docker
11:40 - desktop tool which we have downloaded so
11:42 - I'm going to open the docker desktop and
11:45 - you can see the container name is some
11:48 - MySQL and the image name is uh MySQL and
11:52 - we have started this image 2 minutes ago
11:54 - and the port mapping here is
11:57 - 3306 now what we are going to do is we
12:00 - are going to use a tool called MySQL
12:03 - workbench which is a tool by MySQL
12:08 - itself and it's an official tool which
12:11 - is a graphical user interface tool which
12:13 - will allow you to connect to your MySQL
12:16 - server if you don't know how to install
12:19 - MySQL workbench on your Mac operating
12:22 - system or any other system I will also
12:26 - put the link of the videos which I have
12:28 - created to install MySQL workbench on
12:31 - your operating system so let me open the
12:35 - MySQL workbench from here so I'm going
12:39 - to search for my
12:41 - SQL workbench and I can see this result
12:45 - here so I have already downloaded this
12:47 - MySQL workbench once you download and
12:50 - install MySQL workbench it's going to
12:52 - look something like this where you can
12:54 - create some connections so I'm going to
12:57 - click on this plus uh icon here to
13:00 - create a new connection and then I can
13:02 - provide the name to my connection so I'm
13:04 - going to give the name as Local Host for
13:08 - example you can also uh write Local Host
13:13 - Docker for example then the host name
13:15 - here is uh
13:18 - 127.0.0.1 which is essentially Local
13:21 - Host because we are running our
13:25 - container on Local Host itself so if you
13:28 - don't provide any IP address here this
13:32 - command is going to run the MySQL on the
13:34 - local host and we are already forwarding
13:38 - our Port of the container to the uh
13:41 - 3306 port on our machine right so you
13:46 - can see 3306 uh is the default Port
13:49 - which we have already provided in the
13:51 - command itself now the username here is
13:54 - root so if you don't provide the
13:57 - username using these environment
13:59 - variables the default username will be
14:02 - the root user right so we can leave the
14:05 - username as root here the password Here
14:09 - will be the password which we have
14:10 - provided so you can see in this command
14:13 - we have provided this password so you
14:15 - can copy this uh password from here and
14:18 - then go to your workbench and then
14:20 - provide your password and then click on
14:23 - okay and once you have provided that
14:26 - password I can click on the test
14:28 - connection
14:29 - and then I can see this window which
14:31 - says successfully made the MySQL
14:33 - connection so our connection is
14:35 - successful so I'm going to click on okay
14:37 - here and then click on okay so our
14:41 - connection is made to our MySQL server
14:45 - and then I can just click on this
14:48 - connection then click on continue anyway
14:51 - and here I can see I'm connected to my
14:54 - MySQL server and here I can provide some
14:57 - queries here so for example I can write
15:00 - uh select now and provide these
15:05 - parenthesis and then I can uh run this
15:08 - command for example and when I run this
15:10 - command it's going to give me the
15:13 - current time for example so everything
15:15 - is working fine so we have a running
15:17 - MySQL server using the docker and we are
15:21 - able to connect to the MySQL server
15:23 - using our mycle workbench graphical user
15:26 - interface tool now in some cases you
15:29 - don't want to uh write this command
15:32 - again and again on the terminal because
15:35 - this is a very uh lengthy command you
15:38 - might not want to write uh this command
15:41 - again and again so there is a utility
15:44 - called Docker compose using Docker
15:47 - compose you can create a file which will
15:50 - be a Docker compose file and in that
15:52 - file you can provide all these flags and
15:55 - save that file on your computer
15:59 - and then use that file again and again
16:02 - to run your Docker container so for now
16:04 - I'm going to stop the docker container
16:06 - so whatever result you see using the
16:09 - docker PS command you can use that uh
16:13 - container ID to stop your container so
16:18 - either I can write uh
16:21 - Docker stop and my container name is sum
16:27 - MySQL so Su hyphen my SQL and then press
16:30 - enter which is going to stop this
16:34 - container and you can see it's going to
16:36 - give me the result and when I give the
16:38 - docker PS command once again I can see
16:41 - there is no container running right now
16:44 - you can verify this in this uh Docker
16:48 - desktop uh section we have this image
16:52 - but this container is no longer running
16:55 - okay so now let me show you how you can
16:58 - create the Docker compose file with the
17:01 - same flags and you can save that file
17:04 - and how you can run that file so I have
17:07 - created this Docker compost file I'm
17:09 - going to put the link to this Docker
17:11 - compost file so you can directly copy
17:14 - the content of this Docker compos file
17:16 - so what you need to do is you just need
17:18 - to create this uh file with the name
17:21 - Docker hyphen compos do yml and then
17:27 - paste the content of this uh Docker
17:30 - compose which uh I'm going to provide
17:33 - you in your Docker compose file so here
17:36 - basically what I'm doing is I'm just uh
17:39 - pulling the image with the tag 8.0 you
17:42 - can also remove this tag to fetch the
17:46 - latest image then the docker container
17:49 - name will be MySQL hyphen local we are
17:53 - also mapping the port 3306 to our local
17:57 - machine and then we are providing some
18:01 - environment variables here so the root
18:03 - password will be root password you can
18:05 - replace this password the mySQL database
18:08 - name will be example DB and the MySQL
18:11 - username will be example user all these
18:15 - environment variables you can change it
18:17 - according to your requirements and the
18:19 - password we are going to use is example
18:22 - password Here I have also provided this
18:26 - volumes section here and this will allow
18:30 - you to persist your MySQL data so once
18:33 - you exit from your MySQL container then
18:36 - also you will be able to fetch the data
18:39 - which you have already saved into your
18:42 - mySQL database in the next container run
18:46 - so as I said I will provide this uh
18:50 - content in the description of this video
18:53 - so you can uh just uh click the link and
18:56 - then copy the content and paste it in
18:59 - your Docker compost file also and then
19:02 - you can open the terminal I'm going to
19:05 - open the integrated terminal in my
19:07 - visual studio code you can also use the
19:11 - terminal in your Mac operating system or
19:15 - any other system so just go to the
19:18 - directory in which your Docker compos
19:20 - file is there and then give this command
19:23 - which
19:24 - is Docker hyphen compose and space up
19:29 - space hyphen D which is going to start
19:32 - your container you can see it has
19:34 - created the container and started the
19:37 - container this time we have given the
19:39 - name MySQL hyphen local to our container
19:43 - right so when we go to the desktop uh
19:46 - utility you can see this container is
19:49 - running we have uh started this
19:51 - container 22 seconds ago you can see uh
19:55 - we have ran a container which is under
19:57 - Docker and and you can see the container
20:00 - name is MySQL hyphen local and we are
20:04 - forwarding this port again which is
20:08 - 3306 so let's go to our MySQL workbench
20:11 - once again and here I'm going to close
20:13 - uh this connection from here and let's
20:16 - create a new connection for our new uh
20:19 - container image so I'm going to click on
20:21 - this plus icon once again this time I'm
20:23 - going to name my container as docker
20:29 - compose Local Host here and then the
20:34 - host name will be uh same which is
20:36 - 127.0.0.1 Port is same which is
20:41 - 3306 this time the username is different
20:44 - right because in my Docker compose do
20:47 - yaml file the username which I've
20:50 - provided is example hyphen user so I'm
20:53 - going to use this username now instead
20:57 - of username rout here I'm going to
20:59 - provide example hyphen user and the
21:02 - password Here will be the password which
21:05 - I have given here which is example
21:07 - hyphen password so I'm going to provide
21:10 - this uh password here and then click on
21:12 - okay and then I can test the connection
21:15 - from here and connection is once again
21:17 - successful so I'm going to click on okay
21:20 - here which creates this new connection
21:22 - so I'm going to open this connection
21:24 - here and now the connection is open to
21:28 - my new container right here you can see
21:32 - I have this uh schema which is called
21:34 - example hyphen DB I have also created
21:38 - using this command so the database name
21:40 - is example hyphen DB right also see that
21:45 - the MySQL root password is root hyphen
21:49 - password so if you have used the root
21:51 - username then you could have used the
21:53 - root password Here Also right so now
21:57 - also everything is running fine now to
21:59 - stop this container which you ran using
22:02 - the docker compose file you can once
22:05 - again go to the terminal where you have
22:07 - started the container using Docker
22:09 - compose command this time instead of
22:11 - giving Docker compose space uh up hyphen
22:15 - D just write Docker compose Down Here
22:18 - Without hyphen D and then press enter
22:21 - and it's going to stop your container
22:23 - and you can see the container is stopped
22:27 - and we have also removed the network
22:29 - from here so this is how you can stop
22:33 - your container using the docker compose
22:36 - command so this is how you can use
22:39 - Docker to run MySQL server on your uh
22:43 - operating system it can be Mac OS
22:46 - windows or Linux operating system I hope
22:49 - you have enjoyed this video and I will
22:50 - see you in the next video