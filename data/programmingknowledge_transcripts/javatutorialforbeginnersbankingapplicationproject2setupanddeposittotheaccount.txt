00:02 - hello and welcome back to the another
00:03 - bit of the Java tutorial Series so today
00:05 - we will be starting our first project
00:07 - for project Number One banking
00:08 - application
00:09 - so so in this video I will be discussing
00:12 - about the setup about this project and
00:16 - we will be covering up the first uh a
00:18 - functionality of the project that is the
00:20 - deposit okay so let me just get into
00:22 - into my IDE and I will creating the new
00:25 - class name as
00:27 - banking application
00:33 - oops sorry
00:35 - banking application
00:37 - okay and let me increase the font size
00:41 - yes and I will include my public static
00:45 - wall Main
00:46 - okay and inside main uh this project
00:50 - required input from the user so that's
00:52 - why I have to import the scanner class
00:54 - also and I will be using this new
00:58 - keyword scanner
01:00 - system Dot in so okay basic stuff
01:06 - now
01:07 - I know we have the not covered started
01:10 - oops concept so that's why
01:13 - you will at some point you will not get
01:17 - some concept so bear with me I will be
01:20 - telling you what those concepts are okay
01:23 - uh so this is pretty much about the
01:25 - setup okay and now since we are doing
01:29 - all this uh let me show you all this
01:32 - deposit with induction show menu and
01:34 - execute our code all this functionality
01:36 - in a one place so I guess this is the
01:40 - right time to introduce you with the
01:43 - for oops concept known as method okay so
01:47 - I will oops concept of method and class
01:50 - okay so I will create another class
01:52 - known as the banking
01:56 - bank accounts which is more appropriate
02:00 - I guess
02:03 - AWC bank account
02:07 - okay okay
02:09 - so this is nothing but I have created
02:12 - one another class name as bank account
02:14 - where I will be covering all those
02:16 - functionality in inside this class and
02:18 - we will create one object of this blank
02:20 - bank account class inside this banking
02:23 - application class okay oops I have
02:26 - written this class inside class that is
02:30 - okay
02:32 - now it's okay
02:34 - okay so this is one class our public
02:39 - class and inside which our main method
02:41 - is there and this is another class where
02:44 - we'll be covering all these
02:45 - functionalities which are required in
02:46 - the uh project Okay so inside this
02:51 - uh I will show you how this class and
02:54 - objects stuffs are created so bear with
02:58 - me and for first uh functionality of our
03:02 - project is deposit so we'll be covering
03:04 - that first okay for so you you
03:09 - so you are pretty much aware about this
03:11 - for depositing the value uh something
03:14 - money inside our account we we need one
03:17 - variable which is known as balanced
03:18 - because we are updating that balance
03:21 - after deposit occurs inside our
03:25 - account okay and we will require another
03:28 - variable known as name as previous
03:30 - transaction which will hold the value
03:33 - value and the information about the
03:36 - transaction that happened in inside past
03:39 - recently okay so I will be creating
03:42 - those two
03:45 - variables name as balance and another
03:48 - one as previous transaction
03:55 - okay
03:57 - and now I will create one method uh so
04:00 - this method doesn't return anything so
04:03 - that's why I have written void uh I know
04:05 - you are not getting some concept what is
04:07 - wired what is ain't okay not in in you
04:11 - know what that is data type and void and
04:14 - my method name is
04:17 - deposit
04:20 - okay and my method is going to accept
04:22 - one way
04:25 - one
04:28 - parameter that is amount okay amount so
04:31 - method is nothing but one particular
04:35 - instruction of the lines of codes which
04:38 - will execute uh which will you will
04:42 - require again and again for the X
04:43 - equation and then those setup
04:45 - instruction you are right inside of one
04:47 - method and you will call that method
04:49 - again and again to perform that task
04:51 - okay so we will be covering in depth
04:54 - about the methods what what are their
04:56 - types in the Ops concepts for but for
04:58 - now uh you know
05:01 - you know what is methods okay we will be
05:05 - creating one method known as deposit and
05:06 - inside that method I will be writing now
05:09 - uh if I want to deposit my money I have
05:12 - to check uh whether my amount
05:17 - that is uh given by the user and this is
05:20 - the
05:21 - parameters that this method will be
05:23 - accepting this method will accept amount
05:26 - that uh which is given by the user to
05:28 - deposit inside that bank account okay so
05:31 - I will be checking whether my amount is
05:34 - not equals to zero okay so this uh if
05:38 - the user user inputs a given input as
05:41 - zero so that doesn't make sense because
05:44 - 0 cannot be added inside the bank
05:46 - account okay that doesn't make any sense
05:48 - so we are checking on base basically
05:50 - base condition over here whether my
05:53 - amount amount which is a given input by
05:56 - the user should not be equals to the
05:58 - zero okay
05:59 - if it is not equal to 0 this uh if
06:02 - condition is evaluated as true and
06:04 - inside that uh I will update my balance
06:07 - okay so my I will tell balance
06:10 - is equal to
06:13 - Plus
06:15 - amount okay I will update my balance
06:18 - variable and I will also updated my
06:20 - previous transaction variable as amount
06:24 - okay and so that tells that my previous
06:26 - transaction which done by the user is
06:29 - the amount that means the deposit
06:32 - to the bank account okay
06:34 - so this is pretty much about this and
06:38 - okay
06:40 - also in the upcoming videos we will be
06:42 - covering the withdraw withdraw
06:43 - functionality bitter functionality and
06:46 - the get previous transaction and the
06:47 - show manufactuality okay so thank you
06:49 - for watching this video and I will see
06:50 - you in the next one