00:00 - hello and welcome back to another video
00:02 - of the Java tutorial Series so today we
00:04 - are covering the remaining types of
00:06 - inheritance that is hierarchical
00:07 - inheritance and we will see why the
00:09 - multiple units is not supported in Java
00:12 - okay so let me get into my IDE I will
00:15 - create one new class
00:18 - name
00:19 - hierarchical inheritance
00:27 - inheritance
00:30 - okay and let me increase my font size
00:35 - I will include the main method
00:39 - okay so what is hierarchical inheritance
00:42 - is when two or more classes inherits a
00:45 - single class means let's suppose uh one
00:48 - class a is there and whose properties
00:50 - are getting inherited by the class two
00:52 - classes that is Class B and Class C at
00:54 - the same time in the example uh we'll
00:56 - see one example let let's just get
00:59 - started
01:00 - I will create one class name as
01:04 - animal
01:05 - and inside that
01:07 - I will create one method which it
01:10 - doesn't written anything that is what
01:11 - you'd eat and this method doesn't
01:14 - accepting any parameters and I will
01:17 - simply print
01:19 - eating
01:21 - these are some simple examples to under
01:24 - just to understand what is hierarchical
01:27 - inheritance we will cover a complex
01:29 - example in our upcoming videos also and
01:32 - another one is class dog which is
01:36 - extending the class
01:39 - animal
01:42 - and inside this I will create another
01:44 - let's suppose what doc does bark
01:48 - I'll create one method name as Spark
01:51 - and we'll simply print
01:56 - working
01:59 - okay uh and one more class is required
02:03 - let's suppose class cat
02:08 - and
02:10 - this class is also
02:13 - extending
02:14 - animal class
02:17 - and inside this I will create one more
02:19 - method name is meow
02:23 - which doesn't accept any parameter and
02:26 - inside this I will write
02:30 - meowing
02:32 - m-e-o-w-i-n-g emailing
02:34 - Okay so
02:37 - our goal is to achieve hierarchical
02:39 - inheritance here uh let's suppose this
02:41 - is the parent class I will write one
02:43 - comment over here
02:46 - parent
02:48 - class and
02:51 - this dot class is the
02:54 - child
02:56 - class one
02:58 - and this is
03:01 - child
03:04 - class 2.
03:07 - okay and inside this I will write
03:11 - now I will write my main method now
03:15 - let me copy this from here
03:19 - and I will paste it over here
03:23 - my main method okay and inside my main
03:26 - method I will create one object of the
03:29 - cat class
03:30 - cat C is equals to new
03:34 - cat
03:36 - okay and I'll
03:38 - I will call wait two minute one getting
03:42 - error
03:43 - and it cannot be referenced from a
03:46 - static const text
03:50 - with terminate
03:56 - let me get let me write the static all
03:59 - static because we are calling them
04:01 - inside a static method okay so that's
04:04 - why I'm getting one error available at
04:07 - all
04:08 - the highest right now ah yes okay
04:11 - and I will call C Dot
04:17 - meow and again C Dot
04:22 - eat because it is inheriting the
04:24 - properties of the animal class and eight
04:25 - method is that inside the animal class
04:27 - so that we can call that eat method
04:30 - using the object of the cat and now I
04:32 - will write one more
04:34 - line here but I'm commenting out
04:37 - initially
04:39 - and I will write sorry not it bark
04:44 - okay and now if I run this
04:50 - the expected output should be meowing
04:54 - and eating let's see here you can see me
04:57 - having anything else getting printed on
04:58 - the console and now if I comment remove
05:02 - this comment
05:03 - and if I try to run this
05:07 - here you can see it it gave me error
05:11 - because location variable C is type
05:14 - hierarchical index.cat and you know it
05:16 - is telling me that this is compile time
05:19 - error guys I will commit it out
05:21 - CT errors means compile time error
05:26 - this error occurs because we here you
05:29 - can see we are in this is the parent
05:31 - class animal class and this is the cat
05:33 - and dog class these are the child class
05:35 - which in innovating the properties of
05:36 - this and we are extending this is this
05:39 - is the cat class and we are extending
05:40 - extending the properties of a class
05:42 - there is no linking between the class C
05:44 - and Class B and we are trying to access
05:46 - the methods which are written inside the
05:48 - class B using the object of the Class C
05:50 - that is not possible here that's why
05:52 - Java is throwing errors compile time
05:54 - error this is this can not be done
05:57 - inside Java
05:59 - okay I will comment it out and I will
06:01 - run run it again
06:05 - now it's working fine okay
06:07 - I hope you guys understood The
06:09 - hierarchical Inheritance in Java and now
06:12 - let's talk about why multiple units is
06:14 - not supported in Java so in multiple
06:17 - entrances what here you can see
06:20 - one
06:21 - two parent class one one class is there
06:24 - which is child class which is inheriting
06:26 - the properties of the two different
06:27 - parent classes in class A and Class B
06:30 - are the parent classes and Class C is a
06:31 - child class and Class C is trying to
06:33 - inherit the properties of the Class A as
06:36 - well as the class B at the same time
06:37 - okay
06:38 - because this is not supported in Java uh
06:41 - why so to reduce the complexity and
06:43 - simplify the language multiple
06:44 - ingredients is not supported in Java uh
06:47 - I will give give you one scenario where
06:49 - a a b and c are the three classes here
06:52 - you can see
06:53 - and Class C is in it inherit the
06:56 - property of the Class A and B if Class A
06:58 - and B have the same methods and you call
07:01 - it from the child class object means
07:03 - class let's suppose one method is there
07:05 - void it and in class A as well as the
07:08 - class B and we are trying to call the
07:10 - this void eat method inside Class C this
07:13 - creates an ambiguity
07:15 - uh for the class C to whom the coil
07:18 - which class method should it call Cloud
07:21 - whether the class A and Class B since
07:23 - the compile time errors are better than
07:25 - the runtime errors Java renders the
07:27 - compile time error if you inherit the
07:28 - two classes okay so whether you have the
07:31 - same method or the different method
07:32 - there will be the compile time error so
07:35 - to remove this ambiguity Java doesn't
07:37 - support multiple inheritance
07:39 - but there is a way you can achieve
07:41 - multiple elements in Java that is using
07:45 - any interfaces and we will cover
07:46 - interfaces in our upcoming videos when
07:48 - we will be talking about the
07:49 - polymorphism in Java so right now uh
07:53 - just understand that multiple entities
07:55 - is not supported in Java just to
07:57 - simplify the language and remove the
07:59 - ambiguity which is created here
08:02 - Java doesn't support multiple hand
08:04 - returns so thank you guys for watching
08:06 - this video I'll see you in the next one