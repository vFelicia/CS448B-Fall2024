00:00 - hello guys welcome once again in this
00:02 - video I'm going to teach you about md5
00:04 - encryption in
00:06 - PHP now what is ex encryption and why do
00:10 - we use
00:11 - encryption so I will give you an little
00:15 - example in the last three videos I have
00:17 - shown you how to create this database
00:19 - and how to link this mySQL database to
00:22 - your PHP and we have created this table
00:25 - called user info and in this table there
00:27 - are some column called ID name Sur name
00:30 - age username and password but when you
00:32 - see this data for the password carefully
00:35 - you will see that
00:39 - any user who have the access to my PHP
00:43 - my admin login or myql login he will be
00:47 - able to see all the password and he will
00:52 - be having access to all the password or
00:55 - all the user data in my database right
00:59 - and this is not we want or this is not
01:03 - uh we desire right we desire to protect
01:08 - our users data and the password is the
01:12 - only way we can protect it so we don't
01:15 - want to you know show this password to
01:19 - the outside world and we want to protect
01:21 - it and one way of protecting this is by
01:25 - using
01:27 - encryption and there are
01:30 - different kind of encryption and one of
01:32 - the encryption is called
01:34 - md5 right and what this md5 encryption
01:38 - does is it converts your string into a
01:42 - hash value and it is a one-way
01:44 - encryption so you cannot convert this
01:48 - hash which is generated by a string back
01:51 - to your original value but what you can
01:55 - do is you can compare two
01:58 - hash let me give you an example and then
02:02 - I will move forward so you may
02:05 - understand for example I create a
02:08 - variable called
02:09 - password is equal to and I will give the
02:13 - value to this uh variable password
02:17 - as uh pass for example this is my
02:22 - password right now this is visible to
02:27 - all the all the user who has the access
02:30 - to my database for example now in order
02:33 - to protect it what I can do is I can use
02:37 - a function in PHP called
02:41 - md5 and this md5 is a function which
02:45 - convert your text to or convert your
02:50 - string to a hash value so I will pass
02:52 - this
02:54 - to my md5 as an argument this string
02:58 - value as an argument to my md5 function
03:02 - and let's Echo this okay I will save it
03:07 - and I will go to my md5 PHP and what you
03:12 - can see is a kind of a hash value okay
03:17 - and this value is you know you cannot uh
03:23 - make it re reverse to this pass you
03:27 - cannot convert this to the original
03:29 - value which is pass right so the only
03:34 - way is to uh you know compare or to
03:39 - authenticate that this value is pass or
03:44 - this word pass you need to generate one
03:47 - more
03:48 - value using this and you can match these
03:52 - two hash value and then validate it okay
03:56 - so what you can do is
04:00 - for example I will give you a small
04:02 - little example I will make a form
04:06 - outside
04:09 - my PHP file and this
04:14 - form will be for
04:20 - example have the
04:24 - action which is md5 itself is equal
04:28 - to
04:30 - md5
04:32 - md5
04:34 - doph PHP which is the same file as my
04:38 - this file right and the method will
04:45 - be method is equal to let's see what can
04:49 - be the
04:50 - method let's take method as post
04:58 - okay and you all already know what this
05:00 - post does in PHP in the earlier videos I
05:03 - have shown you how to use this post and
05:06 - I will close this
05:09 - form and I will take a
05:12 - input so this input will
05:18 - be and this input will
05:22 - be text in type so type will
05:26 - be type is equal to
05:32 - next and
05:36 - the name will be for example password
05:41 - okay so name is equal
05:48 - to
05:50 - password and I will give a little break
05:55 - here and once again I will submit this
05:59 - form using a button so now
06:03 - input and type will be
06:07 - submit s is equal
06:16 - to and
06:19 - name you can give the name
06:22 - [Music]
06:25 - as so let's not give any name for
06:28 - example okay let's see what is uh what
06:32 - is the result of this form and we can
06:35 - see this simple form and a button
06:40 - right and now what we want to do is we
06:46 - want to compare this password with this
06:51 - hash value which we have right so let's
06:55 - copy this hash value from here
07:00 - and uh let's uh for now just paste it
07:06 - somewhere so that we can see this
07:09 - afterwards right and then what we can do
07:13 - is we can just compare this by using
07:18 - if this
07:21 - value of password is
07:25 - set and this is a post so we can just
07:29 - just use
07:33 - post
07:36 - underscore
07:38 - post and this will be a
07:42 - post method and what it takes it takes
07:46 - the name of your submitted form right so
07:50 - in the square
07:53 - brackets you can just pass this
07:58 - password
08:00 - and you can also check whether this is
08:05 - empty or not so
08:08 - and
08:11 - my password is not
08:15 - empty
08:17 - empty and we'll just take this post and
08:21 - paste it here okay and if it's not empty
08:25 - and it's is set what I can do is I can
08:30 - compare
08:32 - this by my hash value right so I can say
08:39 - if my md5 hash which generated the hash
08:44 - right is equal to or my password value
08:49 - so let's transfer this password value to
08:52 - our
08:55 - variable password is equal to post
08:58 - password
09:00 - which is this
09:03 - variable and then what we can do
09:09 - is we can
09:11 - uh just compare this
09:16 - password with our password
09:25 - okay and let's rename it as because we
09:28 - have already used this password variable
09:30 - above so let's rename it as new password
09:34 - newcore password for example
09:39 - okay and if it's matching then we can
09:43 - just
09:48 - display
09:51 - password pass okay
09:57 - okay and this is set must be like
10:02 - this and let's save it and run our
10:05 - program
10:07 - md5 and I think it will not give a
10:10 - correct answer I will submit it and it's
10:13 - not giving the correct answer why
10:16 - because this
10:19 - pass must be converted to Hash value
10:23 - first right so we need to convert this
10:26 - to md5
10:31 - md5 and
10:36 - then in here I will
10:39 - just close this and let's give else
10:43 - condition also else we want to
10:47 - Echo pass not
10:50 - okay not okay okay save it refresh the
10:57 - page uh
11:00 - or what we can do is we can just give
11:03 - this pass once again submit this and it
11:07 - shows some error let's see what's the
11:10 - error let's include these bracket first
11:13 - of
11:17 - all and this should be md5 not M A5 okay
11:23 - refresh the
11:25 - page and once again give a pass for
11:29 - example which is this one pass value
11:34 - submit and you can see pass okay that
11:37 - means your password is okay so what we
11:40 - have uh practically done
11:43 - is we converted our password to a hash
11:49 - and this hash you match to the value of
11:53 - password which is entered by us right
11:56 - which is this password
11:59 - and we converted this password into hash
12:02 - also and we have this password hash from
12:05 - this okay so we compare both the hashes
12:10 - of both the values and if it matches
12:14 - then the password is correct otherwise
12:17 - the password is wrong so in a way we we
12:20 - are comparing the hash of our string
12:23 - values to check the password right so
12:28 - whenever you will uh use this in real
12:31 - life situation this password will be
12:34 - some kind of a hash value and once
12:38 - somebody has the access to this table he
12:41 - will not be able to see this password
12:44 - directly but he will be able to see the
12:47 - hash value like this okay and this hash
12:51 - value only matches a single string okay
12:56 - for example this pass
12:59 - is converted to this hash and this hash
13:03 - cannot match any other value or any
13:07 - other string right only pass has the
13:12 - hash of this kind okay so this is unique
13:16 - for every word and this is One Direction
13:21 - encryption so you cannot revert this or
13:24 - you cannot
13:26 - get this string from this hat hash what
13:29 - you can do is you can compare the this
13:32 - hash with other hash and if those two
13:36 - hash are you know
13:38 - equal then you can say your password is
13:41 - correct right so this is how you can use
13:45 - md5 encryption in
13:47 - PHP but this is
13:50 - not uh I mean one of the best uh best
13:54 - way of encryption uh by using R because
13:59 - nowadays we have super computers and by
14:02 - using Brute Force you can always you
14:05 - know get the password which is generated
14:09 - by md5 function so there are better way
14:12 - of you know hiding your data but this is
14:15 - one of the way uh you know which you can
14:18 - use and which is at least better than
14:22 - this showing your real password to the
14:25 - world you can just convert it to the
14:27 - hash and and then save it to the
14:29 - database so maybe in the next video I
14:32 - will show you how you can save this into
14:36 - uh I mean in the database and then use
14:38 - this hash from the database to uh create
14:42 - a login page okay so I hope you have
14:45 - enjoyed this video please wait comment
14:46 - and subscribe and bye for now