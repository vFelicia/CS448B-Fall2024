00:00 - so I welcome you all to programming
00:02 - knowledge so this is our 4 tutorial for
00:04 - Django series so like in the previous
00:06 - three tutorials I showed you how you can
00:08 - today - Django project how you can work
00:10 - with how you can initialize the Django
00:12 - app how we can work with the request and
00:15 - response part so if you have any doubts
00:17 - regarding to that tutorial or you have
00:19 - missed anyone so you can refer to my
00:21 - previous 3 tutorial so I again welcome
00:24 - you all to programming knowledge so like
00:26 - in this show tutor tutorial we are going
00:27 - to basically work with templates and
00:30 - before I start with this tutorial I will
00:32 - show you that you can go to our github
00:35 - repository and you can have the look at
00:38 - full source code that we were working in
00:40 - the previous three tutorials so you can
00:42 - move to this link get her github.com
00:44 - slash pro software development and then
00:47 - learn Django is the repository name so
00:50 - you can have a look at the full source
00:52 - code you can either you can even
00:54 - download this report you can download
00:56 - this full source code and I am mentioned
00:58 - below how you can run this project so
01:01 - like what you need to do you can either
01:02 - clone or to own this project or download
01:05 - the project extract the files then move
01:07 - into the project directory and then this
01:10 - file called acquire mist or DHT I showed
01:12 - you in the previous tripped over in the
01:14 - like in the previous tutorials on how
01:15 - you can create a requirements on tht
01:17 - file and why is it created so you need
01:20 - to install the all the packages
01:21 - necessary to work with the project so I
01:24 - would open the requirements of HQ file
01:26 - this is these are the package required
01:28 - and after installing these packages you
01:32 - can type the corn Python managed or py
01:34 - run so and this would run this project
01:36 - on your local machine so we would be
01:40 - working on this posture as well so after
01:43 - the video I am going to push the source
01:45 - code you can have a look at the source
01:47 - code as well what changes were changes
01:49 - work done so this would help you to
01:52 - crack the code as well and you can run
01:55 - this project on your local machine as
01:56 - well so in this tutorial but we are
02:00 - going to work with templates and
02:04 - basically I told you the Django is based
02:06 - on MBT pattern Model View and templates
02:10 - so models are based with your database
02:13 - and views are based on your business
02:16 - logic part and templates are based or
02:19 - like on front-end so models are based on
02:22 - your database views on business logic
02:24 - and templates for front-end part so what
02:27 - you can I want to tell you that for
02:29 - front-end part basically we are going to
02:32 - use bootstrap so bootstrap is design a
02:38 - world's most popular framework for
02:41 - building the sponsors mobile both sides
02:43 - so I would show you the responsive
02:45 - nature of bootstrap as well because if
02:47 - you are making a web application and
02:49 - what you want to you want to target an
02:51 - audience so what you want to do is that
02:53 - if someone is using a web application on
02:55 - a desktop then another day might someone
02:58 - it might use on a laptop as well tablet
03:01 - mobile phone and like there are various
03:04 - screen sizes so you want an application
03:06 - to adapt that screen size to show that
03:09 - to adapt that screen size bootstrap is
03:12 - used so this would make your content
03:15 - responsive in nature and it adapt to the
03:17 - particular screen side of the user and
03:19 - this will help people for a faster or
03:22 - development as well so it has all the
03:25 - predefined CSS HTML javascript libraries
03:28 - and we'll be using this template and I
03:30 - will show you how you can use how you
03:33 - can use Chrome developer tools to edit
03:35 - your your pages and you can you can be
03:40 - sure about how you can create your pages
03:42 - as well so the first thing you need to
03:44 - do like first thing you need to do like
03:49 - this is as I mentioned how you can go
03:52 - with the repository and the same thing
03:54 - it says second thing you need to do you
03:57 - need to move into a set in short P by
03:58 - file and before this you need to create
04:02 - a to folder one with the name templates
04:04 - another with the name static so
04:07 - templates and static are the two folders
04:10 - you need to do so first I would move to
04:13 - the my project actually so this
04:15 - directory same at the github repository
04:17 - so I would create a new folder named M
04:22 - plates
04:26 - well this is the first folder I've
04:27 - created templates and the second one
04:28 - which I'm going to create is the static
04:30 - so static basically is working with your
04:35 - static files it could be any satisfying
04:37 - so basically just for an example you
04:38 - have an image which is an raw image and
04:41 - you need to use it multiple times so you
04:43 - can store a raw image into static folder
04:45 - so in order to display in your page as
04:48 - well so to folder templates will be
04:50 - having your HTML files and static is
04:53 - going to have your raw files and it
04:56 - could be in any form so after creating
04:59 - these two folders what you need to do is
05:02 - to add them in your directory so the
05:06 - first thing you need to do is you need
05:09 - to move to your settings or py file and
05:13 - one shortcut I would show you that in
05:16 - sideways code you can type ctrl + P and
05:18 - move to any file suppose I have to move
05:20 - to this URL story of a file or model
05:24 - short p5 models or py fine like this V
05:26 - file so I would type models dot py and
05:29 - they could have given me the same
05:32 - recommendation about and I would click
05:34 - on it and I would move to this file so
05:36 - in this way again back to move to
05:38 - setting for preview our file so this is
05:39 - a very interesting shortcut so hundred
05:42 - installed apps I have mentioned my app
05:44 - and under the directories templates what
05:51 - I need to do I have to mention my
05:54 - current path where my templates are sold
05:56 - because this fall this list is basically
05:59 - as a saturated with the templates
06:00 - directory so I would type OS dot path
06:05 - dot join base directory comma templates
06:17 - so this would join my folder that I am
06:20 - telling that it could be any OS
06:22 - environment I would join this from base
06:26 - directly to the templates so this would
06:29 - connect with this folder so my project
06:31 - is more connected with this folder the
06:34 - second thing I need to do is the same
06:37 - thing I need to do for the static files
06:38 - but this
06:39 - little different so I have to first
06:41 - mention the list static files underscore
06:49 - directories so this is the list and I
06:54 - would be using this so you can see that
06:56 - these are almost same thing oh it's on
06:59 - Anton joint based on the school
07:01 - templates and answer is a short fun
07:03 - don't join base directory karma started
07:07 - so what I can do is Oh s-sorry Oh s dot
07:13 - path dot join base directory Comic
07:21 - Standing okay so this looks good so I
07:25 - will run my server so till the time I
07:29 - will show you one thing that the my
07:32 - servers were working fine and I had made
07:34 - some URLs like in the previous tutorial
07:37 - I showed you how we can make the request
07:39 - in the response part so like just for
07:43 - just for to be sure about this I would
07:47 - move to localhost colon 8080 says hello
07:54 - world and I showed you like you can
07:57 - create and girls as well so like in this
08:01 - we are going to create a URL to so first
08:03 - thing you need to is to move to your
08:05 - templates folder so these are the two
08:07 - folders which I made templates and
08:09 - Static so inside your templates folder
08:11 - you need you will create a new file and
08:14 - name it as index dot HTML and you can
08:23 - you make this file and open this file
08:25 - and what you are going to do this inside
08:27 - that XD index index dot HTML file you
08:30 - are basically create your first HTML
08:32 - page and what you are going to do is you
08:37 - will move the bootstrap website and you
08:41 - would go to the getting started then
08:44 - introduction and start an introduction
08:46 - and now you would first pick the starter
08:49 - template the god this will be very
08:51 - helpful
08:51 - you can copy
08:53 - and paste this insert then index.html so
08:58 - like you can see that it has the whole
09:00 - HTML structure and it has all the
09:03 - JavaScript libraries predefined as well
09:06 - as the CSS libraries as well and you can
09:09 - note one thing that these CSS files as
09:13 - well as the JavaScript files has been
09:15 - kept online so anyone can use this CSS
09:19 - and JavaScript files because these are
09:21 - predefined in bootstrap and anyone can
09:23 - use bootstrap to make your web
09:24 - application responsive okay I would
09:27 - change this title to learn Django and
09:36 - basically I would save this file and
09:38 - basically the title is this what you can
09:42 - see above here the like introduction
09:44 - bootstrap github - pouso further proof
09:47 - that this is a your title so learn
09:51 - Django and I will change this hello
09:54 - world Django project okay okay so what
10:03 - you can do is you can move to your URL
10:08 - start py file and you can define a URL
10:13 - to render your page so just for example
10:16 - I would define path my first page and I
10:24 - would call views taught my first name so
10:29 - in my first page and I would give this a
10:35 - name my first page so I have created a
10:45 - path called my first page you and I
10:47 - would call the function my first page
10:50 - from views and I have this given a short
10:54 - name to this URL as my first page so
10:56 - this is showing me an edit and why is it
10:57 - because I have did not define my first
11:00 - page function inside the views so I will
11:03 - move to my views door py file
11:07 - so they're my first page it is taking a
11:17 - request as a parameter and this time
11:20 - like in the previous two tutorials I
11:22 - showed you that they can be various
11:25 - types of responses when is sh2 you could
11:27 - respond JSON response but this time I'm
11:29 - here I'm going to render an HTML page so
11:33 - I would say return return render request
11:41 - comma index dot HTML so so this would
11:49 - render the HTML page and when I will
11:52 - move to this URL so this will show me
11:54 - that page so I am inside my localhost
11:58 - and I will slash my first page okay so
12:06 - yeah it's an int a state so what you can
12:09 - see that it has rendered the first page
12:11 - now I am showing you two shortcuts
12:14 - the first one is control because you so
12:17 - this would show me the whole front end
12:20 - code so this is the first shortcut you
12:22 - can use the I will repeat control + you
12:25 - okay and the second one is you can use
12:29 - inspect element okay and you can see now
12:33 - the response or nature of this I can you
12:35 - show you that this is like chrome
12:37 - developer tool and you can use this to
12:39 - work with the front-end part of your
12:41 - project it is very good ok galaxy s5
12:44 - iPhone 5 ok this shows a responsive
12:48 - nature laptop laptop screen so this
12:50 - would be laptop and so what I can do is
12:53 - move to Galaxy s5 and I would inspect
12:58 - this and I would element or styles I
13:02 - would change color is equal to red so
13:05 - this changes the color of this heading
13:07 - to read but this is for to only to have
13:10 - a view of your project but as soon as I
13:13 - refer because this is temporary you do
13:15 - this you can do some temporary changes
13:17 - to have a look but as soon as i refresh
13:20 - this way
13:21 - this is this is vanished so and so you
13:25 - can use Chrome developer tools to have a
13:28 - change look at your front-end part so I
13:31 - would continue with the lecture and I
13:33 - will tell you how you can work with the
13:35 - backend logic and integrate it into the
13:37 - front head part of it so thank you
13:39 - everyone
13:40 - so thank you