00:00 - so hello and welcome to the new series
00:02 - of Maven so today uh this video onwards
00:06 - we will be learning uh Maven what is
00:08 - Maven and why it is used so basically
00:11 - this is a crash course type course
00:13 - wherein this course is definitely a
00:16 - beginner friendly course uh the people
00:18 - who don't have any knowledge uh previous
00:20 - knowledge regarding the maven so this is
00:23 - a beginner friendly course uh so yeah
00:26 - this is the in this video we'll be
00:28 - talking uh the course flow the course
00:31 - introduction how this course is going to
00:33 - be covered what are the topic that I I
00:36 - will be teaching you okay so let's get
00:39 - started so first thing first you you
00:41 - would ask me what is Maven and why to
00:43 - learn it okay
00:45 - so to answer it uh I have one answer
00:48 - over here you can see Maven is a popular
00:50 - build automation tool for Java based
00:52 - project that helps and manage and
00:55 - organize the software development
00:56 - process so you know the software
00:59 - development process there is lot being
01:01 - covered in inside in making of the
01:04 - software right right starting from the
01:06 - planning till the testing part a lot of
01:09 - phases comes wherein it uh like our
01:11 - agile methodology is there in which
01:13 - iteration iteration over iteration the
01:16 - software is uh produced and optimized
01:19 - right so for that uh we required some
01:22 - project management or the build
01:24 - automation tools so there there comes
01:28 - Maven it it is a popular build
01:30 - automation tool for Java based project
01:32 - so so when you create a Java project so
01:37 - you can use a maven for a build
01:39 - automation tool okay so let's move
01:41 - forward it provides a standard way to
01:44 - define a project dependency
01:46 - build processes and project structure
01:48 - making it easier for developer to manage
01:51 - and maintain complex Java application
01:54 - so
01:55 - considerable scenario you are building
01:58 - one project and you you let's suppose
02:01 - you have implemented 10 dependencies in
02:03 - your project right so you have used 10
02:06 - different liabilities in your project to
02:08 - build your project and so their
02:11 - dependencies right in your project so
02:13 - you have to mention those dependencies
02:15 - you have to write the version version
02:17 - which you are using uh for the for your
02:19 - project right so let's suppose uh you
02:22 - have used uh let me write it over here
02:24 - you have used 10 dependency when you are
02:27 - writing which version to use for the
02:29 - dependencies okay
02:31 - so this is a manual task manual task
02:34 - that you do uh when you write your
02:36 - project when you work on your project so
02:39 - what Maven does is you tell the maven
02:42 - that these are the dependencies you are
02:44 - implementing in your project and rest
02:46 - the man Maven will uh do do the work
02:49 - okay so let's suppose you are
02:51 - implementing a spring you are using
02:53 - spring framework in your project all
02:56 - right so uh I'm just giving one example
02:58 - if you are implementing spring version 4
03:01 - so you have written spring version 4 is
03:03 - there so now the spring version 5 comes
03:05 - uh in near future and then you have to
03:08 - again comment uh change those
03:10 - dependencies and you have to write again
03:12 - do the modification inside your code so
03:15 - that is pretty hectic part and that
03:18 - maving covers over here Maven covers all
03:20 - the dependencies and it will
03:22 - automatically do all those upgradation
03:24 - part in your project okay so that is how
03:27 - this second Point works and uh the
03:30 - handle your dependencies okay so third
03:33 - point is Maven uses a declarative
03:35 - approach to configuration and relies on
03:37 - XML files called pom.xml to describe the
03:41 - project structure dependencies and build
03:43 - processes okay so there is one important
03:46 - file in when when we talk about the
03:49 - maven is form.xml okay so these five you
03:52 - have to create when whenever you are
03:54 - using Maven in a project you know so in
03:56 - this file what it contains it's its
03:58 - project structure dependencies and build
04:00 - processes so these are the core
04:03 - structure of your project right so
04:05 - without dependencies your project can't
04:07 - work you have how the project structure
04:09 - is gonna work how the build processes of
04:11 - the project is going to there so this is
04:13 - the pretty uh
04:15 - important file for your project so we
04:17 - will have one separate video on a
04:19 - com.xml how oh what it covers and how
04:22 - why it is important we'll cover all that
04:24 - in it in detail okay so next point is it
04:27 - also offers a vast variety of Open
04:28 - Source libraries and plugins that can be
04:31 - easily integrated in your project okay
04:33 - so so to so to understand this point so
04:37 - you just go in your browser whatever
04:39 - bars you are using and write maven
04:43 - plugins
04:45 - and of the very first link that you can
04:48 - see is uh there is the official Maven
04:50 - Apache org you can open this and you can
04:53 - see these are the these are the plugins
04:56 - that Maven Maven has okay reporting
05:00 - plugins are there core plugins are there
05:03 - so you can check out here uh all those
05:06 - uh description is also there uh and one
05:10 - one good thing is the get and get a
05:12 - pository link is uh also there you can
05:15 - check that out we will be covering uh
05:17 - again we have one separate video on this
05:19 - this one also plugins and one more thing
05:22 - is Maven repositories right so you go in
05:24 - your browser and write Maven
05:26 - repositories
05:29 - just hit enter and as you can see very
05:32 - first is the official link for the
05:34 - memory repository you go there and yeah
05:38 - you can see this this section contains
05:40 - the new in Maven so this is the latest
05:43 - version you can see when it is released
05:45 - and he these are the new repositories of
05:48 - Maven we again we cover water
05:51 - repositories in Maven in detail we have
05:53 - one separate video on that and on that
05:55 - as well okay
05:56 - we'll cover that one also okay so let's
06:00 - move forward and
06:02 - and see what are the features of Maven
06:05 - okay so first feature is again
06:08 - dependence dependency management so as I
06:11 - said having simplifies the manage
06:12 - project management of the project
06:14 - dependencies by providing a centralized
06:16 - repository of libraries and framework it
06:19 - automatically downloads and manage the
06:21 - dependency as I said here instead of you
06:24 - writing the those dependencies manually
06:27 - Maven does all all this tasks
06:29 - automatically by itself and which makes
06:32 - it easy to update our dependencies
06:34 - without worrying about the conflicts all
06:37 - right so next is Project standardization
06:39 - Maven provides a standard project
06:42 - structure that is widely adopted in the
06:44 - Java Community the standardization makes
06:46 - it easier for the developer to
06:48 - understand to contribute to the project
06:49 - even they are new to them okay so as I
06:53 - said it's beginner friendly as well so
06:55 - you have you can learn it okay easily
06:58 - and build automation mavin automates the
07:00 - build process makes it easy to pile test
07:03 - and package the project and developers
07:05 - can Define the build goals and execute
07:08 - them in a single command as well we'll
07:09 - see how we can do it we will create one
07:12 - project use using Java and using Maven
07:15 - as well okay and next is plugin system
07:18 - so Maven has a powerful plugin system
07:20 - that enables the developers to extend
07:22 - the functionality of the build process
07:24 - okay so there are many plugins available
07:26 - that can be easily integrated into
07:28 - projects to perform the specific task a
07:31 - task in science for example to a perform
07:34 - such as generating the documentation
07:36 - deploying the applications or running
07:38 - the test
07:39 - so all these we can do by using using
07:42 - this plugins we will see how we can we
07:44 - can do this okay and next is consistent
07:46 - builds Maven ensure consistent bills
07:49 - across a different environment by using
07:50 - the declarative approach to
07:52 - configuration declarative approach in
07:53 - the sense we create one Palm dot HTML
07:56 - file as I said here in inside which we
07:58 - are writing our dependencies project
07:59 - structure and build processes as well
08:01 - okay
08:02 - and uh last one is integration with ID
08:05 - so this is a pretty good feature of
08:09 - Maven Maven integrates with the popular
08:11 - ID such as Eclipse IntelliJ IDEA
08:13 - netbeans Visual Studio code which makes
08:15 - it easy to manage a project within ID so
08:17 - you don't have to worry about where I
08:19 - can use the maven so in the market we
08:22 - have a very popular IDs as of these days
08:25 - like we just should have called IntelliJ
08:27 - IDEA Eclipse you can use Maven with this
08:32 - ID itself the maven is integrated inside
08:35 - this IDs
08:37 - okay and so overall Maven simplifies the
08:40 - development software development process
08:42 - and makes it easier for the developer to
08:43 - manage the complex Java based project
08:47 - okay so enough about Theory and I guess
08:51 - this is enough motivation that for you
08:53 - required to learn the mavin so from the
08:57 - next video onwards we will be seeing uh
09:01 - in depth and in more practical manner
09:05 - how we can use Maven water the plugins
09:08 - what are the repositories okay and in
09:11 - our next video we will see what are the
09:13 - software requires for you to get started
09:16 - with the maven and I hope you will like
09:19 - this series and do one thing like share
09:22 - and subscribe to the channel and thank
09:24 - you for watching this video and I will
09:25 - see you in the next one