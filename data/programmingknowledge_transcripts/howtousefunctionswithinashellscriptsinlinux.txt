00:00 - hello guys now in this particular video
00:02 - we will talk about functions okay so
00:05 - what is function and how everything
00:06 - works we will discuss all the things in
00:08 - this particular video okay
00:10 - so actually already I have created this
00:12 - uh function.ss file for you if you're
00:15 - not then you can also create this one
00:17 - okay so let me first discuss about the
00:19 - function what is function the basic idea
00:21 - about it like if you are aware of any
00:23 - other programming languages like cecpp
00:25 - Java pythons and then you might be aware
00:27 - of the function but if not then let me
00:29 - tell you about this okay how everything
00:31 - works okay
00:32 - so what is a function so the basic
00:35 - definition which everyone says is like
00:37 - function is a block of code
00:40 - which can be used again and again okay
00:45 - so as the name suggested as the
00:48 - definition so this is the same thing as
00:49 - like it okay
00:51 - so
00:52 - whatever the code if you write some kind
00:54 - of code and you want to use it again and
00:56 - again and again then you can write that
00:57 - particular code inside a function okay
00:59 - suppose you don't want to do some
01:01 - particular task
01:02 - repetitively okay then you can use a
01:04 - function okay suppose you have to uh
01:07 - like uh
01:09 - uh what you can say you have to sum two
01:12 - numbers okay then you can create a
01:15 - function and then you will just call
01:16 - that function to add those numbers okay
01:18 - so basically the whatever the main
01:20 - benefit we get from the function is the
01:22 - code reusability okay it means we can
01:25 - reuse that particular code again and
01:27 - again this is the basic idea about the
01:29 - functions okay so now let me tell you
01:31 - about the basic uh
01:34 - syntax what is the basic syntax of the
01:36 - function in the cell scripting so how we
01:38 - can do it so basically the basic syntax
01:40 - is the function name whatever the
01:41 - function name you want to provide
01:43 - okay the compatible parenthesis and the
01:46 - simply this curly braces and inside the
01:48 - curly braces you have to just write the
01:50 - code okay whatever the code or whatever
01:52 - the operation we want to perform
01:54 - okay
01:56 - so this is the basic syntax which we
01:58 - will be uh using inside this whole
02:01 - tutorial so now let me just create one
02:03 - function with the name greetings okay
02:06 - and I will adjust Echo something like
02:10 - good morning
02:13 - uh good morning
02:15 - ayush like this okay and to call the
02:18 - function you have to nothing uh you have
02:21 - to just
02:22 - write a name of the function greetings
02:24 - okay and now let me just uh move into
02:29 - the
02:30 - this particular directory
02:32 - okay
02:34 - and now what I will do I will just
02:36 - provide a certain permission to the
02:38 - files CH mode plus x 19 function.sh okay
02:43 - clear the screen
02:44 - dot slash 19 okay so here you can see
02:48 - good morning is has been
02:51 - printed okay so here what happens uh
02:54 - suppose we want to again again uh call
02:57 - that function so we can just call it
03:00 - again here what happened let me just
03:02 - copy it again
03:05 - greetings paste it here okay
03:09 - so again it will print good morning Ash
03:12 - two times okay why it happens because
03:13 - here you can see the name of the
03:15 - function and we are just to Echo this
03:17 - thing good morning ayush and then we are
03:19 - calling the function
03:20 - okay so with function calling whenever
03:24 - you call any function then it calls this
03:26 - function and whatever the code inside it
03:29 - it gets
03:31 - executed okay so this is the basic
03:34 - functionality of the functions okay
03:36 - sorry
03:38 - you know moving forward uh
03:40 - we need to talk about like parameterize
03:43 - function and the returning value okay so
03:46 - what is the parameterized function that
03:48 - we first discuss about you so basically
03:49 - in function what happened you pass some
03:51 - parameters okay
03:52 - and uh with on that parameters we do
03:56 - some kind of computation and all those
03:58 - things so I will just create the sum
04:00 - function okay
04:02 - I will just remove this thing and I will
04:04 - create Now parameterize function
04:09 - okay
04:13 - so
04:16 - so the name of the function will be some
04:19 - ayush okay and I will just Echo
04:22 - the sum of
04:26 - dollar one and dollar two is
04:30 - not like this uh before a parameterized
04:33 - function let me just discuss with the
04:35 - simple function how we will do it like
04:36 - suppose if a equal to
04:38 - 12 and b equal to 13
04:43 - then c equal to Dollar A Plus dollar B
04:49 - and you have to just Echo the value of c
04:52 - equal
04:54 - the sum of dollar a and dollar B is
05:00 - you have to just equal dollar C here
05:03 - okay just save the code and we will just
05:06 - call this sum function and then we will
05:08 - get the result as 25.
05:12 - okay so we have got some kind of error
05:14 - in line number
05:16 - sorry we don't have to provide this
05:18 - parenthesis here
05:23 - okay so okay we are getting uh
05:27 - error not error
05:30 - the same string because uh
05:36 - we have
05:37 - not uh
05:39 - added the expression in a right way okay
05:43 - so here you can see for computation like
05:45 - we know like we need to do like this
05:48 - okay then and only we can compute
05:50 - anything okay so here you can see the
05:52 - sum of 12 and 13 is 25 so suppose if you
05:55 - want to uh change a number okay so 13
05:59 - and 14 so we can get you know result as
06:02 - 27 I think yes 27. so here the thing is
06:06 - we need to change that thing in our this
06:09 - inside function but what do we want to
06:12 - pass the pass the value while calling
06:14 - the function in that case we need the
06:16 - parameters okay so how we can do it so
06:19 - in cell scripting we basically pass the
06:21 - parameters as this one like from here we
06:23 - will pass suppose 12 and 13 and then it
06:26 - will act as the dollar one and dollar
06:27 - two okay
06:29 - so in this way we can get so now for
06:32 - this I will just uh like uh
06:36 - provide a equal to dollar one and b
06:39 - equal to Dollar two
06:40 - okay
06:42 - and all things will remain same and I
06:44 - will just pass the parameter here 12 and
06:46 - 13 or 12 and 13 let me provide this okay
06:48 - 12 12.
06:50 - and let me clear the screen and again
06:53 - this so here you can see the sum of 12
06:55 - and 12 is 24. now we don't need to
06:58 - change anything in our function we can
07:00 - do changes here okay
07:01 - so now the core now the answer will be
07:04 - different like 167 okay so this is
07:07 - basically the parameterized function
07:09 - okay so we can pass parameters inside
07:13 - the function and then with those para
07:15 - and and the computation will happen on
07:17 - those particular parameters okay
07:19 - so this is the basic functionality of
07:21 - the parameterize function let me just
07:23 - create some another function like
07:24 - suppose uh you want to get get name of
07:29 - S2 and get a student and I will create a
07:31 - function get student name
07:34 - okay
07:36 - and uh I will just Echo
07:40 - like this name of a student is and here
07:45 - I will just decode dollar one okay so
07:48 - here whenever you will call that by a
07:50 - particular function and provide the name
07:52 - so let me provide the name as ayush and
07:55 - clear the screen so
07:59 - here you can see name of student is
08:01 - ayush okay so in this way you can pass
08:03 - the parameters okay
08:05 - so now uh let me discuss about you the
08:07 - return type of the function of in cell
08:10 - scripting how this works so basically in
08:13 - uh
08:14 - what we can say in cell scripting the
08:16 - return the like method of returning any
08:19 - value some little bit of difference so
08:21 - let me discuss it with you how it
08:23 - basically happens okay
08:25 - so basically what happens whenever you
08:28 - call the function and if you return
08:29 - something then you need to store that
08:32 - return value in a special uh like uh
08:36 - with a special uh symbol we can say like
08:39 - that okay so here if we want to Echo and
08:43 - not Eco if you don't want to Eco you
08:45 - want to just return the value so you
08:47 - have to just write
08:50 - return dollar C
08:52 - okay
08:53 - and after calling the function you have
08:56 - to store the value return equal to
09:00 - you have to write uh
09:02 - I think dollar question mark So it
09:05 - basically stores the value whatever The
09:07 - Returned okay so if here the return
09:11 - value is there like water basically
09:13 - happens it will store the value uh
09:15 - before
09:16 - like here this sum function okay
09:19 - so if there is uh if it is returning
09:22 - some value then it will stored inside
09:23 - this variable return okay rdt but if
09:27 - there is again some kind of any function
09:28 - and and here it is returning something
09:31 - like suppose uh here I create some
09:34 - function
09:38 - okay
09:39 - and here I write the
09:43 - function image sub okay and here uh the
09:48 - return type will be all the same thing
09:49 - but here in this case now what will
09:51 - happen it will store the value of this
09:54 - return value
09:56 - okay so this happens so let me Buzz
09:59 - report uh going into complex thing let
10:02 - me first discuss with the basic part how
10:04 - how we can get the return value
10:07 - so now you have to just Echo uh
10:10 - the return
10:12 - eco
10:13 - return value is
10:18 - dollar rdt okay
10:21 - so let me just clear the screen and I
10:25 - will just comment out this part
10:29 - okay
10:32 - and let me run the script so here you
10:34 - can see the return value is 67 okay so
10:37 - in this way you can store the return
10:39 - value but now what happens if you if we
10:42 - just uh
10:44 - like uh we do sub
10:47 - here sub we do
10:51 - okay so in this case let me uh check
10:54 - what happens
10:58 - okay so in this case also we are getting
11:01 - the return value is 67 okay but we have
11:04 - not called the stop function so let me
11:06 - first call this sub function
11:08 - so sub I will provide 13 and 14.
11:14 - okay not 13 14 13 and 12 and here I will
11:18 - write dollar a minus B so value should
11:22 - be 1.
11:23 - okay
11:25 - so here you can see return value is one
11:28 - so and now what I will do I will just
11:30 - call this sum function here
11:32 - before return
11:34 - so now let me check what will be the
11:36 - return value return value will be now
11:38 - 167 okay so now you I hope you got the
11:41 - idea about how the value is stored
11:44 - inside this red variable okay so
11:49 - whatever the function is calling before
11:51 - this so that value is getting stored
11:54 - inside this variable okay
11:56 - and whatever uh like if like some
11:59 - function is calling before this one so
12:01 - that value will not be stored inside
12:03 - this okay
12:05 - so this is the thing about return type
12:07 - of
12:08 - a value in a shell scripting okay
12:10 - so that's all for today guys and I hope
12:12 - you liked it I will update the source
12:14 - code in in our GitHub repository you can
12:16 - access that from uh access this code
12:19 - from there okay
12:20 - and in our next video we'll cover
12:22 - something more important and that is
12:25 - about nested function so we will discuss
12:27 - all those things about in the next video
12:28 - so that's all for today and if you have
12:30 - any query you can ask us in the comment
12:31 - section thank you thank you for watching