00:01 - hello and welcome back to the new word
00:02 - of the Java tutorial Series so today we
00:04 - will be covering packages in Java okay
00:07 - so Java package is a group of similar
00:09 - types of classes and interfaces and sub
00:11 - packages okay so package in Java can be
00:14 - categorized in two form a built-in
00:15 - packages and user defined packages so
00:18 - we'll be covering both of this you know
00:20 - in this video
00:22 - and so the built-in built-in packages
00:24 - look like this here you can see one
00:27 - example of this pictorial example of
00:28 - this building packages one Java main
00:30 - package main package Java is there
00:33 - and below that Lang utl and awt and
00:36 - there are a number of packages which are
00:38 - defined by the Java language itself
00:39 - these are the sub packages of the Java
00:41 - and inside this uh sub packages
00:43 - different classes are written
00:45 - system.class string.class I release dot
00:48 - classmap.class these are some classes
00:51 - that we have and here you can see I will
00:54 - open any of any of this uh example that
00:58 - we have covered in our upcoming uh sorry
01:00 - of not upcoming previous videos and here
01:02 - you can see we have written import
01:03 - java.util.scanner so this is the Java is
01:06 - the main package utilize the sub package
01:07 - and scanner is the class which is
01:09 - written inside this package if you hover
01:12 - over this you can see uh implementation
01:15 - of implementation part also of this
01:16 - scanner class okay
01:18 - uh so these are some job packages which
01:21 - are defined uh predefined in Java and we
01:24 - will see user defined packages also how
01:26 - you how you can create an uh call those
01:28 - okay so first of all if you are using an
01:32 - IDE uh then this example will not help
01:36 - will helpful to you those people who
01:39 - doesn't uh using any IDE uh please look
01:43 - at this example simple example of the
01:45 - Java package uh package name and package
01:48 - is a keyword which is used to define a
01:50 - package and my pack is the package name
01:52 - and inside this package I have click
01:55 - created
01:56 - one class name is simple and
02:00 - by in the inside this class one main
02:03 - method is there and inside main method
02:04 - welcome to package is the string that is
02:06 - printed on the console okay so to
02:10 - compile this Java package Java C minus t
02:13 - the directory or the folder where you
02:17 - are currently storing these files the
02:19 - path should be there in in place of this
02:21 - and Java file name a Java file name is
02:24 - the name we have which is you have given
02:27 - to this file so in this in my case I've
02:31 - written is at simple.java so I should
02:34 - write Java C minus t dot represent the
02:37 - root directory and simple.java okay
02:40 - whenever I run this command the minus D
02:43 - switches the specified destination where
02:45 - to put the generated class file so and
02:48 - you can use this directory name such as
02:50 - slash home in case of the Linux and D
02:54 - dot slash ABC in case of the windows Etc
02:57 - and if you want to keep this package
02:59 - within the same direction actually in
03:01 - that case you can use dot okay
03:03 - now
03:05 - how to access the package from the
03:07 - another package okay still now you have
03:10 - understood what is package how to create
03:12 - a package how to call the classes of the
03:15 - package now how to access the package
03:16 - from the another package okay so there
03:18 - are mainly three three ways you can
03:20 - access it by simply writing writing the
03:24 - import statement as you can see here
03:26 - over here import Java util.scanner
03:29 - and second one is import package.class
03:31 - Name by specifying the particular class
03:33 - in uh consider a scenario where in one
03:37 - package holds some n number of the
03:39 - classes and you want only one one class
03:41 - to be get called in that case you can
03:43 - write this statement uh this is the
03:45 - example of the second statement where
03:46 - Java is the main uh main package I
03:49 - utilize the sub package and from the
03:51 - util sub package we are calling simply
03:53 - one scanner class if you want to call
03:55 - all those uh classes which are written
03:58 - inside the util sub package you will
04:00 - simply write import
04:03 - Java Dot
04:05 - util Dot star star represents all all
04:08 - those classes which are written inside
04:09 - the util sub package import them all
04:11 - okay and third one is fully qualified
04:14 - name we will see each of them by looking
04:18 - one example okay
04:20 - now let me open my IDE so to create one
04:25 - package if you are using an IDE then
04:28 - it's very simple you just click on the
04:31 - source folder right click on it new and
04:33 - instead of creating Java class you just
04:35 - click on the package and you can name
04:38 - your package whatever you want I will
04:41 - name it as
04:42 - ABC you can write anything you want and
04:46 - uh so here you can see ABC package is
04:49 - created and inside this package if I
04:52 - want to
04:54 - write one
04:56 - class okay so I will right click on it
04:59 - new Java class and I will write uh
05:03 - class
05:04 - okay uh let's suppose a is my class name
05:07 - so a DOT Java is created under the
05:11 - package ABC here you can see okay and
05:13 - one more line is added by the IntelliJ
05:16 - IDEA package EBC that defines this class
05:18 - is written inside the package ABC and
05:22 - let me increase my font size
05:24 - okay so inside this a class
05:27 - uh I will declare one method okay
05:32 - public
05:36 - void message
05:40 - and inside this I will
05:42 - simply print
05:45 - hello
05:47 - okay and I will save this okay now
05:51 - uh in if I go outside of this package
05:54 - and I will create one new Java class
05:57 - name as B and inside this let me
06:02 - increase the font size
06:05 - and over here we are trying to see the
06:08 - import package dot star okay so I will
06:12 - same similarly like import package what
06:15 - is the package name EDC
06:18 - Dot
06:19 - stack
06:21 - okay we have it okay and now inside my
06:24 - public Class B
06:27 - I will write my main method and inside
06:29 - the main method I will create the object
06:32 - of the Class A which is written inside
06:37 - this package okay
06:39 - I will write
06:41 - a
06:43 - o b j
06:46 - is equals to
06:48 - new a
06:50 - and I will try to call the method which
06:54 - is written inside the obj
06:56 - uh that is this one hello
06:59 - uh message method okay and now if I try
07:02 - to run this
07:05 - hello should get minted on the console
07:07 - okay yes here you can see Hello is
07:08 - getting printed on the console y so
07:10 - because we are in imported the class A
07:13 - from the package ABC okay and now one
07:18 - more thing is there import package name
07:20 - dot class name okay so here to explain
07:24 - this let me create one more class okay
07:26 - okay here
07:28 - however
07:30 - okay let me create one more class
07:35 - public
07:37 - class
07:39 - B
07:41 - okay
07:44 - Class B if public should be declared in
07:48 - the file name B dot Java
07:51 - okay okay in this class is already
07:54 - declared let me write it as FBA
07:57 - okay what is ba should be declared in
08:00 - the B dot Java wait wait wait wait wait
08:04 - let me comment this out
08:07 - and this one also
08:11 - okay and
08:14 - okay okay wait
08:15 - you know what let me take this example
08:18 - itself
08:19 - and I will try to explain this also okay
08:22 - and now here you can see uh import
08:26 - package name dot class name okay if you
08:28 - want to
08:30 - call that specific class of that package
08:33 - then you should instead of writing star
08:35 - you should write a okay
08:38 - so package name is ABC the class is
08:42 - public Class A and inside this we have a
08:44 - written one method void message and it's
08:47 - printing hello on the console and it to
08:50 - import that package we have written
08:52 - import package name dot class name and
08:55 - inside the public Class B and inside the
08:57 - main method I will create the object of
08:58 - that class and I will call that message
09:02 - method okay
09:04 - again hello should be printed yes hello
09:06 - is waiting printed on the console and
09:08 - now uh we'll see the third method fully
09:11 - qualified name okay
09:14 - how we can call
09:16 - okay so if you don't want to write this
09:20 - pack
09:22 - okay with this line and you you still
09:26 - want to use those
09:28 - classes which are written inside the
09:30 - package then you can simply write
09:33 - the package name what is the package
09:35 - name abc abc dot a
09:39 - and here also you have to write abc dot
09:42 - a
09:43 - and now if I try to run this
09:50 - again hello is getting printed on the
09:52 - console because fully qualified names
09:54 - defines as uh one class here Class A is
09:59 - declared inside the package and one
10:01 - method is there MSG and which is
10:03 - printing hello on the console and we are
10:06 - trying to access that class by using the
10:08 - package name dot the class name and by
10:10 - creating the object and again if if you
10:14 - want to call that method object name dot
10:17 - method name is the simple we can call
10:19 - this method okay and hello is printed on
10:22 - the console so this is the pretty much
10:23 - either we have behind the package is in
10:25 - Java okay so in our upcoming videos we
10:29 - will see
10:31 - access modifiers in Java so thank you
10:33 - for watching this video