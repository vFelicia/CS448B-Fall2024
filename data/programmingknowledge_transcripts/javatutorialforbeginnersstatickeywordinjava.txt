00:01 - hello and welcome back to the another
00:02 - video of the Java tutorial Series so
00:04 - today we are covering a static keyword
00:06 - in Java so the static keyword in Java
00:09 - used for the memory memory management
00:10 - purpose only and we can you apply the
00:13 - static keyword with variables methods
00:15 - block nested classes uh like so for
00:19 - example one method is there ABC I can
00:22 - write static ABC or one variable I have
00:25 - to declare integer a static int a that
00:28 - that is how I can do it and the static
00:30 - keyword belongs to the class that an
00:32 - instance of the class
00:34 - okay the static can be a variable can be
00:38 - static and a method can be static okay
00:41 - so we will see some basic syntax how the
00:44 - static variable is declared inside the
00:46 - class uh let's suppose we have class
00:48 - class student and inside this integer
00:51 - role number uh variable name roll number
00:53 - is there of type int string name and
00:56 - college string College iits this is a
00:59 - simple class with that we have declared
01:01 - an example of static variable okay we
01:05 - will see one example uh in our IDE and
01:08 - before that you have to here is the
01:10 - pictorial dependent representation of
01:12 - the how static
01:13 - uh gear variables are work okay so here
01:17 - where we have declared one two variable
01:20 - S1 and S2 and inside the stack memory S1
01:22 - and S2 are there and hip memory is there
01:26 - uh as soon as to as object of that class
01:28 - student and here you can see we have
01:31 - created two object S1 and H2 inside
01:33 - stack memory and inside Heap memory id11
01:36 - is there and name current for S1 S1
01:39 - object and for S2 object uh id22 and
01:43 - name Aryan is there okay uh and inside
01:46 - okay
01:48 - wait a minute guys
01:51 - okay so where we are here we have
01:53 - created uh two objects S1 and S2 and we
01:56 - have assigned the value of our ID and
01:58 - name for each of the objects and here
02:01 - you can see uh one static
02:04 - variable called College of type string
02:07 - is declared and college name is its okay
02:10 - so this is the class area and this is
02:12 - how the static static variables are work
02:14 - uh College its is assigned to both of
02:18 - those object S1 and S2 okay and and
02:21 - these objects are uh separate the
02:24 - college name its is separate this is not
02:27 - inside the hip memory this is actually
02:29 - inside the class area this is how the
02:31 - static static variables work and we will
02:34 - see one example of the static method so
02:36 - that you can understand it clearly
02:38 - okay wait
02:41 - okay so let's get into our IDE and C1
02:46 - example of the static method okay
02:50 - so here I am inside my IDE let me just
02:54 - click here new Java class
02:58 - new Java class and I will declare it as
03:03 - great
03:07 - static
03:11 - third
03:14 - okay and inside this I will write
03:20 - let me just increase the font size
03:24 - okay and now it
03:27 - okay so here I have declared one static
03:30 - method let me import my
03:33 - main method
03:36 - yes okay now
03:41 - silly okay let me get here inside this
03:45 - okay uh let me create one class name as
03:48 - calculate
03:51 - oh wait let me do all those stuffs
03:55 - inside this itself
03:57 - okay I will declare one
04:00 - static variable in
04:05 - Cube X
04:10 - okay not this
04:14 - you know what let me get another example
04:17 - so that you guys can understand it more
04:19 - clearly okay let me just create last
04:24 - student
04:26 - however this one this I will I have take
04:28 - I am taking this example itself okay
04:30 - class student example okay so that you
04:33 - guys you guys can understand more
04:35 - clearly okay and I will declare one hint
04:38 - roll number
04:41 - after that
04:43 - string
04:45 - name for holding the student name and I
04:48 - will declare one static variable here a
04:50 - static string
04:53 - College
04:56 - is equal to i t s okay I have declared
05:00 - it as a static so this is a this is this
05:03 - will be stored inside the class area not
05:05 - the Heap memory and all the object uh
05:07 - all the objects are get into the stack
05:10 - area okay
05:11 - here and after this I will write
05:16 - static oops sorry
05:20 - static void change
05:27 - this is one method and I'm changing my
05:31 - college name to something known as
05:35 - let's suppose bbdit
05:39 - it's a random string okay
05:41 - and here I will declare one Constructor
05:44 - for this class
05:47 - uh so I hope you guys know how to
05:49 - declare the Constructor how to create a
05:51 - Constructor
05:52 - and for this Constructor I am requiring
05:54 - one two two parameters
05:57 - one is r r represented as the row number
05:59 - of the student and the string and I
06:01 - represent the name of the student okay
06:05 - and now inside this I will assign those
06:08 - values to the variable that I have
06:10 - declared over here
06:12 - are
06:14 - and name
06:17 - equals to n okay
06:21 - so now I have declared one created one
06:24 - variable declared the Constructor
06:27 - okay
06:29 - now I will create one another method
06:32 - name void display
06:36 - and inside this method I will just print
06:41 - the my roll number and
06:44 - okay
06:46 - so I will write
06:48 - roll number
06:51 - concat it with the roll number that we
06:53 - have declared over there and again
06:58 - name and I will assign the name it as
07:01 - name
07:03 - okay this is pretty much this method is
07:06 - going to do and inside my
07:09 - main class that is this static method
07:11 - class where we have declared our main
07:13 - method I will write I will create one
07:18 - variable or for where not available
07:20 - object okay
07:22 - I will create the object of the class
07:26 - I will write student
07:29 - Dot first of all
07:32 - change okay and after that I will create
07:36 - a
07:40 - student S1 I will create first object of
07:44 - this class
07:46 - and I have to pass to
07:49 - uh parameters because the Constructor is
07:52 - accepted accepting the two parameters
07:55 - one one is type of string and one is
07:58 - type of integer so let's suppose I am
08:01 - writing 0 1 as my roll number of that
08:04 - student and name of the student is
08:07 - something
08:09 - Harry
08:14 - and I will similarly I will create
08:17 - two more
08:19 - object of this class
08:22 - and goes here one goes here I have to
08:25 - give name some different name to this
08:28 - object this one is to S3 and these
08:31 - students have roll numbers like this
08:35 - and one's name is
08:37 - Joey
08:39 - one's name is veeru
08:42 - okay so these are the students and I've
08:45 - created those where you have no objects
08:48 - also now I have to do I have to display
08:50 - the name and uh roll number of the
08:53 - students for that I have created a
08:55 - separate function or the method S1 dot
08:59 - display S2 Dot
09:02 - display
09:04 - S3 dot display okay all these methods
09:09 - will called and according to that roll
09:12 - number and name of the student gets
09:15 - printed on the console okay now if I run
09:18 - I'll end this code
09:20 - uh oops sorry I will run the previous
09:24 - code itself let me run this with this
09:27 - one
09:28 - oh okay so here you can see roll number
09:31 - one name Harry roll number two name j
09:33 - roll number three uh name Vero okay
09:38 - and now let me hide this terminal
09:41 - this is pretty much about the static
09:44 - keyword and static variable and I go I
09:48 - hope you guys that have got some idea
09:50 - about the static keyword uh so in our
09:53 - upcoming videos we will look into the
09:55 - this keyword in Java thank you for
09:57 - watching this video