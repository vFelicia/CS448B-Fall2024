00:01 - hello guys in this video I'm going to
00:02 - teach you about buil-in data type in C
00:06 - so buil-in data type in cop are the data
00:10 - types which are provided by cop to us
00:13 - for example in the last videos I have uh
00:17 - used a data type like
00:21 - int X right so this int is a data type
00:27 - which tells or which gives us the
00:29 - information
00:30 - that the variable X is a variable which
00:36 - is used to hold the integer values like
00:41 - this int there
00:42 - are more variable or more data types in
00:46 - C for us which we can use in different
00:51 - situations now in order to see these
00:55 - buil-in data type we can go to msdn
01:00 - website which is from Microsoft and
01:03 - first of all if you want to search for
01:05 - the this you can just search for buil-in
01:07 - types in cop and just click the first
01:11 - link here and this is the link so
01:15 - built-in data types
01:18 - are like this this is a list of buil-in
01:21 - data type in CS so Bo bite SB care
01:27 - decimal double and there is a whole list
01:30 - of these data types and all this belongs
01:33 - to system name name space now for
01:37 - example Bo you want to declare a Bool
01:40 - this belongs to system. Boolean
01:44 - namespace so there is a list of name
01:47 - spaces also to which every data type
01:50 - belongs to now in order to see the range
01:54 - of these uh data type there is a data
01:59 - type called white whose range is 0 to
02:03 - 255 which is an integer so if you see
02:07 - here in the first link there are there
02:09 - is a list of uh topics here so first
02:13 - topic is integral types table integral
02:18 - type table is nothing but the number uh
02:23 - data type which you can declare in
02:26 - cop so this can be site which is signed
02:29 - B and whose range is minus 128 to 127
02:35 - byte is 0 to
02:37 - 255 there is a
02:40 - car short whose range is minus 32,000
02:44 - something to plus 32,000 unsigned short
02:48 - in which we were using its range is
02:51 - minus 2 billion to plus 2 billion
02:54 - something right and if you want to uh
02:58 - declare unsigned in theer which start
03:00 - from zero then its range will be 0 to 4
03:04 - billion right and if you want to show a
03:08 - bigger number you can use long and U
03:12 - long so these are the integer values or
03:17 - unsigned integer values right now in
03:19 - order to declare decimal point or
03:22 - floating point they have something like
03:26 - floating Point data types and the main
03:30 - floating Point data types are float and
03:33 - double float has a range which with the
03:37 - Precision seven digits and the double
03:40 - has the range with a
03:42 - Precision 15 to 16 dig digits so if you
03:46 - want to declare a floating data type
03:50 - which contains points in between 1.0
03:54 - something this type of data type is
03:57 - declared using float or double okay
04:02 - now there is something
04:05 - called default data type so what are the
04:08 - default here if I click this default
04:11 - value table there is a list of uh
04:15 - default values for every data typ so
04:17 - whenever you declare a Bool for example
04:20 - it's default value or it it will be
04:23 - initialized as a false value right and
04:28 - bite it's default value is zero car its
04:32 - default value is
04:34 - slash null which is null Terminator
04:38 - decimal has the default value 1
04:40 - 0.0 so there is a list of default value
04:44 - default means by default if you don't
04:48 - assign any value this default is
04:51 - assigned to them
04:53 - right
04:56 - now this is all these tables here so you
05:00 - can always go to this msdn website and
05:04 - see this okay there is a one important
05:09 - data type called string data type which
05:12 - contains a string of uni code characters
05:15 - which we are going to discuss in this
05:18 - video
05:19 - later so let's uh
05:21 - see how we can declare the variable or
05:25 - data type once again so for example I
05:27 - want to declare a bu data
05:30 - type bu X then we need to initialize it
05:34 - by
05:36 - true or false so Bool contains true or
05:40 - false
05:41 - right and when you want to show the
05:44 - value of x you can just print it by
05:46 - console right so you can
05:51 - write console
05:55 - dot
05:58 - right and you can
06:00 - just print
06:04 - this okay and when you run this program
06:08 - it will build and
06:10 - run it will give you true because the
06:14 - value of x is true and if you give it
06:18 - false then it will show the value false
06:23 - here okay in some languages you can also
06:27 - provide the value 0 or one to Bo but in
06:30 - C you can only provide true or false to
06:33 - the Boolean
06:36 - variables so I think you have now the
06:42 - basic idea of declaring the variables
06:45 - variables with a data type
06:48 - now if you want uh so if I have already
06:52 - told you here that every data type has
06:57 - some range right which is 0 to 255 or
07:02 - 128 to 127 for sign
07:07 - bite you don't need to remember this um
07:10 - these ranges for example if you want to
07:13 - find out the range using C what you can
07:16 - do is for example I will
07:19 - declare a variable
07:22 - int and I want to know
07:26 - the minimum U min minimum range of this
07:30 - int what I can do is I can just
07:34 - print double quotes for
07:37 - example and I can
07:42 - write
07:44 - minimum
07:46 - int
07:49 - range and with this plus sign I
07:53 - can get the range minimum range of
07:57 - integer so I will just copy this int
08:01 - data type here and I will say dot and
08:04 - there are some options so Min value and
08:08 - max value is uh some options so I will
08:11 - WR I will just take this Min value and
08:16 - when I run the program it says the
08:19 - minimum range is minus this this this
08:22 - this which also matches the integer
08:26 - range minus this this right so you can
08:29 - find the minimum values or the maximum
08:32 - values using this Min and max value for
08:37 - every data type right for example if you
08:40 - want to see the maximum range of int you
08:43 - can just
08:44 - write
08:46 - dot max value and here you can
08:51 - write max
08:53 - range
08:56 - maximum range of
09:00 - int okay or you can and you can just use
09:04 - it here
09:06 - also Max minimum range of int and just
09:11 - run your program once again and you see
09:14 - here minimum range of in is minus 2
09:17 - billion and maximum range is something
09:20 - like this okay so you can always find
09:23 - the minimum and maximum value using this
09:26 - C code also now in the last video I have
09:31 - also shown you how to use this string
09:34 - data type so I have shown you you can
09:37 - declare a string data type like
09:40 - this
09:42 - string for example you want to name your
09:45 - variable as name and this string data
09:49 - type
09:50 - contains this any string or any uni code
09:55 - string with Within These double codes so
09:59 - I can just assign the value to this name
10:02 - variable as this is a name some some
10:08 - string okay so in order to assign a
10:13 - value to a string you need to include
10:16 - these double quotes here
10:19 - right now there is something called
10:22 - escape
10:23 - sequence so escape sequence is a letter
10:29 - or or a symbol which we can use to uh
10:34 - escape the character for
10:37 - example you want to print double quotes
10:41 - inside your string and for I will give
10:44 - the double quotes here and here for
10:47 - example so I want to print this this is
10:51 - the name with the double quotes but when
10:54 - I include these double codes here it
10:56 - will show me the error the code will
10:58 - show show me the error because whenever
11:01 - you just declare a double code it will
11:05 - it
11:06 - will consider this as a string and this
11:10 - other is extra code which this this C
11:15 - code cannot understand because I have
11:17 - already told you whenever you declare a
11:19 - string its value is inside double quotes
11:22 - and you your double codes are already
11:25 - here right so in order to print this uh
11:30 - double quote here and double quote here
11:33 - you need to use escape sequence and
11:37 - escape sequence in C is a backs slash
11:42 - this
11:43 - one and here this
11:46 - one not here
11:49 - but
11:51 - here and so if you want to print this
11:56 - double quat here just before for this
11:59 - you need to give this escape sequence
12:03 - here which is a slash symbol then we
12:06 - will be able to print this name inside
12:11 - double codes so let's run the code once
12:16 - again I will just print this and I will
12:19 - remove
12:24 - this this is the name
12:26 - here okay we'll run the program now and
12:30 - you see here the this is a name is
12:33 - inside these double codes now printed
12:36 - inside these double codes
12:39 - right and there is a list of uh these
12:42 - escape sequence in C which you can use
12:45 - so let's see what are these uh this list
12:48 - in C so when you search for ex sequence
12:52 - in cop Ms in
12:55 - mstn you can see there is a list of
12:57 - escape sequence here and we we have just
13:01 - used this double quotation for printing
13:04 - double quotation we have used this
13:06 - escape sequence now in order to change
13:09 - the line there is escape sequence like
13:13 - this sln when you give this it will
13:17 - print your values in new line right or
13:22 - you if you want to give a horizontal tab
13:24 - you will just write SLT so let's see an
13:28 - example now so for example I want
13:33 - to
13:35 - print this name in different lines this
13:40 - is a name so I want to change the line
13:43 - so what can I do I will use slash n here
13:48 - and I can use slash n here and slash
13:53 - n here now this is a name will be print
13:58 - printed in New Line in four lines so
14:02 - let's see what is the result here and
14:04 - you can see here this is a name
14:07 - is printed in every new line here right
14:13 - so you can see this list and you can uh
14:17 - decide what uh what escape sequence you
14:20 - want and you can use this escape
14:24 - sequence now for example you want to
14:26 - print uh the path of a file you can use
14:31 - because a path of a file in Windows
14:34 - contains this back slash itself right so
14:38 - for example I have a path in somewhere
14:43 - for U some file and I want to print this
14:47 - path so I will copy this path and I will
14:51 - just paste it here and as soon as you
14:55 - paste your path it will show you the
14:57 - error because this slash is a x escape
15:00 - sequence and it will not allow you to
15:04 - print this path because it's a wrong way
15:07 - of printing paths let me change the
15:11 - variable name first and we are going to
15:14 - print this path here so for the escape
15:17 - sequence of Slash if you want to print
15:20 - slash here you see here escape sequence
15:23 - of back back slash is this double
15:26 - slashes so if you want to print this
15:29 - path you need to give double slashes for
15:33 - every
15:35 - slash okay so I have provided double
15:38 - slash for every slash and when I print
15:42 - this path you see here it's printing
15:46 - only a single slash even though we have
15:49 - provided the double slash here
15:52 - because double slash is a escape
15:55 - sequence of Slash okay
15:59 - now whenever you print this type of path
16:03 - or whenever you need to print this type
16:05 - of path whenever some other user sees it
16:09 - it will be he will be confused because
16:12 - it's it doesn't look good when you print
16:15 - this path like
16:17 - this so in C there is something called
16:22 - verbatim literal and by using this
16:25 - verbatim literal you can
16:29 - ignore your escape sequence you don't
16:32 - need to uh write this escape sequence
16:35 - whenever you use this ver literal before
16:38 - a string it will print the string as it
16:42 - is so let me
16:46 - just give you the name with this literal
16:49 - is called verbatim string literal right
16:53 - and verting string literal in C is this
16:58 - at the rate the symbol
17:01 - right so for example I want to just
17:05 - print this path without these Escape
17:09 - sequences how can I do it I will just
17:13 - add this verbatim literal before my
17:15 - string and now whatever you write after
17:19 - this verbatum literal it will literally
17:22 - print this string it will literally take
17:26 - this string and print print it
17:30 - okay so now when you run the program it
17:34 - will print your path as it
17:36 - is you don't need to give any escape
17:40 - sequence or anything else for example I
17:43 - want to print this
17:45 - uh
17:48 - this is a name
17:52 - path and I want to print it in double
17:54 - quotes I can just give these double
17:57 - quotes here
18:02 - and it says
18:04 - error so you need to use this verbatum
18:08 - Rital only with parts right it will not
18:12 - work with any other variable or any
18:15 - other
18:17 - string so this is wrong right we were
18:22 - just able to print the path and not any
18:26 - other
18:26 - string no this is not true in order to
18:32 - print this this is a path for example in
18:36 - double quotes you need to give this
18:40 - whatever is the escape sequence what for
18:43 - example this quot you need to double
18:46 - these things okay so what whatever is
18:50 - the escape sequence for example this
18:52 - double quotes in C you need to give
18:55 - double double
18:57 - quotes right so it will print it like
19:00 - this I will just print it and it will
19:03 - print it this is a
19:06 - path so whenever you print a path with a
19:12 - Verbatim literal which is this at the
19:14 - rate
19:15 - symbol you just need to give the path
19:18 - right but whenever you want to print
19:22 - something which you for which you need
19:24 - to use escape sequence you need to
19:29 - double that thing for example you want
19:33 - to print double quote just provide two
19:36 - times double quote here and two times
19:38 - double quote here and verb literal will
19:42 - understand this two time double quote as
19:44 - a single code here right so just
19:47 - remember this
19:50 - thing so what we have learned in this
19:52 - video we have learned different data
19:55 - types in C we have learned learned
19:58 - escapes sequence with string data type
20:03 - and we have learned verbatim literal
20:05 - which is this at the rate symbol in C so
20:09 - I hope you have enjoyed this video
20:11 - please wait comment and subscribe and
20:12 - bye for now