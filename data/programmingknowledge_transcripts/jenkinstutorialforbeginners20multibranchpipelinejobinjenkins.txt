00:00 - hey guys welcome to the next video on
00:02 - Jenkins tutorial for beginners in this
00:04 - video I'm going to show you how we can
00:06 - create a multi branch pipeline project
00:09 - in Jenkins so first of all what is a
00:12 - multi branch pipeline project so the
00:15 - multi branch pipeline project type
00:17 - enables you to implement different
00:19 - Jenkins files for the different branches
00:23 - of your project now generally in the
00:28 - software teams which is working on our
00:30 - project different developers can work on
00:34 - different features so let's say our team
00:37 - is working on a project called my app
00:39 - and we have a few developers in this
00:43 - team and master branch is generally the
00:47 - final product right which is going to be
00:51 - run in the production now when the
00:54 - developers work on some features they
00:57 - generally create a branch out of this
01:00 - git repository so for example here when
01:04 - you click on branches option here I have
01:07 - one a branch which is feature one so in
01:09 - a normal software project whenever some
01:12 - developer works on some feature he
01:15 - creates a branch and when this feature
01:18 - is implemented he or she merges this
01:21 - feature into the master branch now at
01:23 - the time when this feature is going on
01:26 - and the developer is working on how can
01:29 - he test this feature using Jenkins as
01:32 - well as the master branch so multi
01:36 - branch pipeline project allows us to
01:39 - test all the branches of your project at
01:43 - the same time using Jenkins
01:45 - so let's create a multi branch pipeline
01:48 - project in Jenkins and then we will see
01:50 - how it works so just click on new item
01:54 - here and then give any name to your
01:59 - Jenkins project for example Multi
02:03 - pipeline project and then scroll down
02:06 - and you will be able to see this option
02:08 - which is multi branch pipeline so select
02:11 - this option and then click OK
02:13 - so my multi-branch pipeline project is
02:15 - created and here you can give some
02:18 - description about your project and in
02:21 - the branch source you can give the URL
02:25 - of your github project so here you can
02:28 - just click on add source and click on
02:30 - git and then just copy the URL of your
02:36 - github repository by just clicking on
02:38 - clone or download and then copy this URL
02:41 - from here and then paste it here where
02:45 - it says project repository I don't need
02:48 - to provide any credentials because this
02:51 - project is publicly available but if you
02:53 - want to add your credentials you can add
02:55 - it from here and then in the next
02:58 - section you will see behaviors and there
03:01 - is this option which is automatically
03:03 - enabled which is discover branches so
03:07 - your Jenkins job is going to
03:09 - automatically discover your branches and
03:12 - then run your test on all the branches
03:16 - now it's important to notice here is I
03:21 - have this Jenkins file here in my
03:23 - project right so make sure that this
03:26 - Jenkins file is there we have already
03:28 - seen how we can add this Jenkins file to
03:31 - our github project in the previous video
03:34 - so I'm not going to tell you how to do
03:36 - this but make sure that your project
03:38 - have this Jenkins file and then when you
03:41 - scroll down you will be able to see this
03:45 - section which says build configuration
03:48 - and in the mode you will be able to see
03:50 - only one option here which is jenkins
03:52 - file and you need to provide the path of
03:54 - your Jenkins file here and because my
03:57 - Jenkins file is on the root directory so
04:01 - I don't need to change the path of this
04:04 - Jenkins file right now when you scroll
04:06 - down more you will be able to see scan
04:09 - multi-branch
04:09 - pipeline trigger and for now we only
04:13 - have one trigger which is periodically
04:15 - if not otherwise run so when you check
04:19 - on this check box you can run the scan
04:22 - on your project every minute or every
04:25 - two minutes or
04:26 - every you know this time period which is
04:30 - given in the list okay
04:32 - so for example I can just set it to
04:34 - every five minute then Jenkins will scan
04:38 - your project every five minutes and it
04:41 - will just look whether your project have
04:44 - any extra branch or not and if you have
04:47 - committed any changes then it will run
04:49 - the test on every branch of your github
04:53 - project now rest of the thing I will
04:55 - leave them as default because we don't
04:58 - need to use them for now
05:00 - so orphan item strategy we will not be
05:03 - using and then health metrics we can
05:06 - just click on this and you can see there
05:08 - is a one health matrix which is child
05:11 - item with worst health pipeline
05:14 - libraries we don't have any pipeline
05:16 - libraries so we are going to leave this
05:18 - as default and then the pipeline model
05:22 - definition we also don't have any model
05:24 - definitions so I'm going to leave it as
05:26 - default so what we have given here in
05:29 - the configuration the URL of our project
05:32 - and make sure that you have the Jenkins
05:35 - file in your github project so just
05:38 - choose or leave it as default which is
05:40 - Jenkins file and then click on Save
05:44 - button and as soon as you press the Save
05:48 - button you will see a scan will start on
05:51 - your multi branch project and this scan
05:54 - is scanning the branches in your github
05:58 - project and you will be able to see two
06:01 - tasks which are parallel running here
06:04 - one on the master branch you can see one
06:07 - on the master branch is running and
06:09 - other scan tasks is running on the
06:12 - feature branch and the same branches are
06:15 - available in my github project also so I
06:18 - have feature one branch and the master
06:21 - branch that's why there are two tasks
06:24 - running to scan them and when I click on
06:26 - my project here you will be able to see
06:29 - two jobs here which are running one is
06:33 - the master branch job and other is the
06:37 - feature branch job and you can
06:39 - individually
06:40 - click on every job so I'm going to click
06:42 - on the master job here and you can see
06:44 - this job is going on and you will be
06:48 - able to see the stages of this job which
06:50 - are currently running so this job is
06:53 - successful you can see and we can also
06:56 - go to the feature branch job also and
06:59 - you can see it's also successfully
07:02 - tested so that's why both of them
07:04 - showing the success now let me show you
07:07 - how you can create a new branch in gate
07:09 - and push it to your github project and
07:12 - how this trigger works so I'm going to
07:16 - open the terminal first of all and then
07:19 - I am going to CD to my project so I'm
07:22 - going to just CD to my project in which
07:26 - I am working on I have already checked
07:29 - out my project here now to view all the
07:33 - branches in your project you can give
07:34 - this command git branch and then press
07:39 - enter and it's going to show you all the
07:40 - branches in your project so I have two
07:43 - branches right now in my project one is
07:45 - master and other is feature one so let's
07:48 - create one new branch so in order to
07:50 - create a new branch you just need to
07:52 - give this command git branch and your
07:54 - branch name so so let's say I'm going to
07:56 - create a feature branch 2 here so I'm
08:01 - going to write feature 2 and then press
08:03 - Enter and now we are going to list all
08:06 - the branches once again and now you can
08:09 - see there are 3 branches in my project
08:11 - so one is master branch and other two
08:14 - are feature branches now in order to
08:16 - push this branch to your github
08:18 - repository you can give this command git
08:21 - push origin and then your branch name so
08:26 - my branch name is feature 2 and then
08:28 - press ENTER and you can see this branch
08:30 - is now pushed to our github repository
08:33 - so we can verify it by going to our
08:36 - github repository and then refreshing
08:39 - this web page and I'm going to once
08:41 - again click on branches and you can see
08:43 - our new branch is visible here which is
08:45 - feature two okay so now once we have the
08:49 - new branch we can trigger them with some
08:52 - web hooks
08:53 - like jeera or get bucket but right now
08:56 - we don't have any webhook so we are
08:59 - going to just press on this button which
09:00 - says scan multi-branch
09:03 - pipeline now so I'm going to just click
09:05 - on this and then I'm going to scroll
09:07 - down a little and you can see there is a
09:10 - new task running here which is for the
09:14 - feature branch to and when i refresh
09:17 - this webpage so I'm going to refresh
09:19 - this Jenkins webpage and now you can see
09:21 - this feature branch to Jenkins task is
09:25 - running right so when I click on this
09:27 - feature branch to this build is running
09:31 - and you can see all the tasks are here
09:35 - running and the build is successful now
09:37 - so now you have three branches and you
09:41 - can see the result of three branches in
09:44 - your champions repository so this is how
09:47 - you can create a multi branch pipeline
09:49 - project in Jenkins I hope you've enjoyed
09:51 - this video please rate comment subscribe
09:52 - and bye for now