00:01 - hello guys welcome to the 7th video
00:02 - tutorial on Python programming for
00:04 - beginners and in this video I'm going to
00:07 - show you what are lists and how to use
00:10 - lists in Python so as the name suggest
00:14 - list is a collection of values and how
00:18 - you can declare list in Python you just
00:21 - need to give the name of the list for
00:24 - example I want to have the list of names
00:28 - so I can give uh the variable name for
00:31 - list
00:33 - as names is equal to and then the square
00:37 - bracket and this square bracket will
00:40 - contain the collection of
00:43 - values and it's totally valid that this
00:47 - collection can you know initialize as
00:51 - Zer value zero values so the list can
00:56 - have zero values also and it can have
01:00 - have maximum values for example tens or
01:03 - hundreds of values so for example I
01:06 - initialize this list like this and this
01:09 - list is initialized as a blank list okay
01:13 - and when I call this names list once
01:17 - again it's a empty list because I
01:20 - haven't provided any value to the list
01:23 - okay so it's totally valid that you
01:26 - initialize your list
01:28 - empty now to initialize list with some
01:31 - values what you can do is you can just
01:35 - write the name of the list once
01:38 - again and then you can give the values
01:42 - inside your list like this so for
01:46 - example I want to have the collection of
01:52 - names
01:54 - comma some other
01:58 - name comma some other
02:04 - name and this can go on and on and on
02:09 - right so it depends upon you what uh
02:13 - number of values you want to have in the
02:15 - list and when I press enter your name
02:19 - variable which is a list is initialized
02:22 - with these values now when you call this
02:25 - names variable once again it has these
02:29 - three values
02:30 - now there is a term called index in
02:34 - Python for list which indicates the
02:37 - position of the values in your list so
02:42 - the position of this first name in the
02:46 - list in as any other good language
02:50 - starts from zero it doesn't start from
02:52 - one but it starts from zero and this is
02:55 - called the index of your list
03:00 - so the index of this list or the index
03:04 - of this name Mark is zero index of this
03:09 - name John is one and index of this name
03:13 - Julie is two and on the basis of index
03:17 - you can even call these values so for
03:21 - example I want to print out this first
03:23 - value called Mark I can just write name
03:26 - of my
03:28 - list names and then just give the index
03:32 - so the index zero is for Mark right and
03:36 - when I press enter it returns me the
03:39 - value Mark in the same way when I call
03:44 - index is equal to 2 names two it'll give
03:48 - me Julie because it starts from 0 1 2
03:52 - right
03:54 - now there is a very interesting uh thing
03:58 - in Python is that you can even have
04:02 - index backwards also right so the
04:05 - forward index starts from 01 2 and the
04:09 - backward index starts from minus1 -2 -3
04:14 - and if this has more values -4 - 5 and
04:18 - so on right because why this starts from
04:22 - minus1 and this forward index starts
04:25 - from my uh zero because you cannot have
04:28 - minus Zero from backwards right so this
04:34 - index will be minus1 this index will be
04:37 - min-2 this in legs will be minus three
04:40 - and you can even call these values on
04:42 - the basis of backward index also for
04:45 - example I want to print this name Julie
04:48 - on the basis of backward index I can
04:51 - just do it like this I can just give the
04:54 - backward index which is minus one which
04:57 - starts from minus one right right
04:59 - backward index starts from minus one and
05:02 - this Sprints Julie once
05:05 - again so always remember if you want to
05:09 - uh start from or you want to have the
05:12 - forward index just start from
05:16 - 012 and if you want to you know have the
05:19 - values from the back backward index you
05:22 - can you start from minus1 -2 minus 3 and
05:25 - so on okay for example you want to call
05:29 - name Mark you just need to
05:32 - give names and the backward index minus
05:36 - 3 it will give Mark
05:39 - right now in order to add values more
05:44 - values to your
05:46 - list what you can do is you can just
05:50 - call the variable or your list name and
05:54 - then you just write Dot and just
05:58 - write
06:01 - append and in this bracket you just pass
06:04 - the value which you want to add to your
06:07 - list so I want to add one more
06:10 - value to my name list and I press
06:15 - enter now this name which is a name of
06:19 - the list do append which is a function
06:21 - buil-in function in Python has appended
06:26 - or added one more values to my
06:30 - names list and now when I print my names
06:34 - list it has four values and it has added
06:38 - this extra name to my list okay now for
06:43 - example you want to add list into a list
06:48 - so for example I have some other list
06:52 - called um age for example ages or age
06:59 - and and I
07:02 - have some ages here 23
07:07 - comma 12 comma 32 comma for example 11
07:13 - okay so I have a list of names and I
07:17 - have the list of age right and I assign
07:21 - this list and now I want to
07:24 - add uh the age to my a names list how
07:29 - can can I add I can just
07:32 - write names which is the name of my name
07:35 - list
07:37 - right
07:40 - dot
07:41 - extend and in the bracket you
07:44 - pass your second list so you can just
07:48 - pass this like this and press enter and
07:52 - it's totally valid and now when you call
07:56 - this name list you have
08:00 - extra list of age here so there is a
08:04 - interesting fact about uh python list is
08:08 - it can contain different data types so
08:11 - it's not necessary that you your list
08:15 - only uh if you initialize list by string
08:18 - values it only has to contain uh you
08:20 - know string values you your list can
08:25 - contain string values also or the inte
08:29 - values or float values or any other data
08:32 - type values and it's totally fine in
08:35 - Python okay so you can Define diff uh uh
08:40 - you know different data type list also
08:44 - okay so just remember
08:46 - this now you must have or you could have
08:50 - done the same uh thing for example you
08:53 - want to add uh or first of all I will
08:57 - show you how you can remove items from a
09:00 - list okay so to remove a item from a
09:04 - list what you need to do is for example
09:06 - my list name is names I want to remove
09:10 - some items so I will just write names
09:14 - dot remove and in the bracket I will
09:18 - just give the item value for example I
09:22 - want to remove this name Patrick from
09:25 - the list okay so I will just say name
09:28 - which which is the name of my list do
09:30 - remove and then the value which you want
09:34 - to remove and press enter and once again
09:37 - I will call names and now
09:41 - the value Patrick is gone from the list
09:46 - right so in this way you can remove list
09:50 - from your you know not remove list but
09:54 - remove values from from your list in
09:58 - Python
10:00 - now for example uh you want to print a
10:04 - list you can just call Print method so
10:07 - it's uh you know you can call your list
10:11 - using this print method also so you can
10:14 - just write names and press enter and it
10:17 - will give print the list of name like
10:20 - this only okay now in order to uh print
10:25 - multiple list for example I have the
10:28 - list called names and I have initialized
10:31 - this list called ages also right so I
10:33 - can just separate my list by
10:36 - comma and I will just add one more list
10:40 - and it will print two lists for me first
10:43 - list is for names till here and second
10:47 - list of pages till here right so you
10:52 - can either you use single list or
10:56 - multiple list or print them like this
11:00 - okay now in order to uh get uh you know
11:06 - I have shown you how you can get uh the
11:08 - maximum value minimum value or U the
11:12 - length of the strings in the last video
11:16 - right on the list also you can call
11:19 - length matter Len and you can find the
11:23 - length of the list like you just call
11:27 - alen built-in function and just
11:30 - pass the list name as an argument right
11:34 - and it will give the length of the
11:35 - string which is seven right 1 2 3 4 5 6
11:41 - 7 right so if the list contains seven
11:44 - values it will return seven this is the
11:46 - length of the list
11:49 - okay now you can even uh print for
11:55 - example max if uh it applies to your
11:58 - your list you can even uh call this
12:02 - method I will give an error because my
12:06 - list is a mixed list right but the same
12:10 - method Max and I apply to the list
12:13 - called age it'll give me the answer 32
12:18 - right because my list of age only
12:21 - contains the integer values and the
12:24 - maximum values of this is 32 Okay so so
12:29 - you can also apply built-in function on
12:32 - list
12:33 - also so I think in this way you can use
12:38 - list in Python I hope you have enjoyed
12:41 - this video please wrate comment and
12:42 - subscribe and bye for now