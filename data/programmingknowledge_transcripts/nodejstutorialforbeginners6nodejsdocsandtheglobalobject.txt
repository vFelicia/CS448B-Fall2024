00:01 - hey guys welcome to the next video on
00:02 - nodejs tutorial for beginners in this
00:05 - video we will see how we can use uh the
00:09 - nodejs documentation effectively and we
00:12 - will see uh how to use Global objects in
00:17 - nodejs so let's get started first of all
00:20 - uh let's see how to use documentation
00:23 - and where to find
00:24 - documentation so just open your favorite
00:27 - browser and we will uh go to the node J
00:30 - website which is nodejs.org
00:33 - and in nodejs.org website there is a
00:38 - section called docs so just click this
00:41 - uh tab here and here you will find the
00:44 - various uh
00:46 - documentations on nodejs uh different
00:50 - versions of nodejs and recently uh the
00:54 - newer version of JavaScript is also
00:56 - released which is es6 and Beyond
01:00 - and uh some of the new Concepts are also
01:04 - you know released under this uh new
01:08 - version so you may want to use or see at
01:12 - least these new uh Concepts and uh if
01:16 - you want to adopt them you can uh do it
01:19 - but for now uh I want to show you the
01:22 - nodejs documentation so in here for
01:25 - example I will go to uh this version
01:28 - which is LTS which is LA longterm
01:31 - version so I will click this version
01:33 - which is 6.9 2.1 at the time of making
01:36 - this video and in here you can see there
01:40 - is a lot of documentation here on the
01:42 - left hand side you can see different uh
01:46 - uh modules and different type of
01:48 - sections here so what we have done till
01:51 - now is we have used uh this HTTP module
01:55 - which is a built-in module right and you
01:57 - can find documentation on this so here
02:01 - under HTTP right and when you click this
02:05 - and go down a little first of all these
02:09 - are all the functions which you can use
02:13 - uh with this HTTP module and when you go
02:17 - down you can see the stability so
02:20 - stability is the thing which you may
02:23 - want to see before uh going inside the
02:26 - documentation and if you see that this
02:29 - uh module and this documentation is
02:32 - stable then you can proceed further so
02:35 - first look at this thing if it's stable
02:37 - or not for the documentation and then go
02:41 - down and see whatever you want to see
02:44 - for example how to use this get function
02:48 - with uh
02:49 - HTTP or uh how to use uh even this HTTP
02:54 - module how to require and then a lot of
02:58 - documentation you can find here right so
03:00 - whenever you are in doubt just come here
03:04 - and see the documentation now let's talk
03:07 - about the global
03:09 - objects now in this documentation when
03:12 - you go to this section which says
03:15 - globals and click here you will see
03:19 - JavaScript or in particular nodejs have
03:22 - some Global objects so if you are coming
03:26 - from uh frontend JavaScript on the
03:29 - browser side you may know that there is
03:33 - a global object in uh JavaScript which
03:36 - is called window object and under this
03:40 - uh you may have seen the
03:43 - console uh object or uh set interval or
03:49 - other uh you know functions related to
03:51 - this window object something like alert
03:54 - or different kind of global object in
03:57 - the same way nodejs also has have uh
04:00 - these Global objects which you can use
04:03 - in your nodejs uh code and let's see how
04:08 - we can use them so I will go to
04:11 - my code editor here and I will remove
04:16 - everything and let's start from the
04:18 - beginning for example and let's see
04:21 - which uh function we want to use so for
04:23 - example I will use the set timeout
04:27 - function here okay and as the name uh
04:30 - suggest uh it is used to set some
04:33 - timeout and it has a argument which is a
04:37 - call back function and a delay whatever
04:40 - delay we want to give here okay so we
04:44 - can just write
04:46 - set time out and then we we can uh call
04:51 - a function so just
04:53 - write function and this will be a
04:57 - Anonymous function so
05:00 - just write this uh blank bracket and
05:03 - then the curly braces something like
05:06 - this okay so this is our Anonymous
05:09 - function here and then the timeout for
05:12 - example I want to give the timeout 300
05:15 - Mond so you can give the timeout in
05:17 - milliseconds here second argument is the
05:20 - millisecond timeout right and inside
05:24 - this function I can perform some task
05:27 - for example printing on the console so I
05:30 - can use uh console log function for this
05:35 - we have already used this console log in
05:38 - our previous program and we will do the
05:41 - same here also right so what we can do
05:45 - uh we can just print for example 3
05:49 - seconds have uh passed for
05:53 - example something like this okay and
05:56 - then save your program and I will open
05:59 - open the console and in here I will just
06:02 - run my app for example node app.js and
06:07 - run it and when you run it it'll just
06:11 - wait for 3 seconds and then it will
06:14 - print this message which we are printing
06:17 - using console log okay so once again run
06:20 - the program it will wait for the 3
06:22 - seconds and then it will print the
06:25 - message and then it will come out of uh
06:29 - the event Loop for example and it'll
06:32 - close the program right in the same way
06:35 - you can use a save or set interval uh
06:40 - function to set some interval so instead
06:43 - of set timeout you can use this uh
06:46 - function which is used to set interval
06:50 - now for this set interval what we can do
06:53 - is we can define a variable for example
06:57 - and we will say this is our time
06:59 - variable and we will assign the value of
07:01 - zero to it right and then what we can do
07:05 - here is inside this uh set interval
07:08 - function we can just use uh time plus
07:12 - equals 2 because uh our time time out or
07:16 - time interval we are using here is 2,000
07:19 - milliseconds right and for example we
07:22 - can just uh print the value of uh this
07:26 - uh time here and we can say this much
07:30 - amount of time has passed or second have
07:33 - passed okay and save your code and run
07:37 - your code once
07:39 - again and let's see what happens here so
07:43 - 2 seconds have passed 4 seconds have
07:46 - passed 6 seconds have passed so it will
07:49 - increase the time the value of this
07:52 - variable by two again and again and this
07:56 - uh function will enable your nodejs uh
08:01 - program to run in a loop kind of thing
08:05 - so it will never end until you have some
08:08 - condition to end it okay so what you can
08:12 - do to end it you can just press control
08:15 - C to come out of the program okay so
08:20 - let's say we want to come out of uh the
08:22 - set interval function when some
08:25 - condition is met so for this we can
08:28 - define a variable called some other
08:31 - variable for example timer which is
08:35 - equal to set interval and then we can
08:39 - clear this timer when some condition is
08:42 - met so for example
08:44 - if uh the value of
08:48 - time so if the value of time is greater
08:52 - than for example 7 then we want to clear
08:56 - the interval so just use uh
09:01 - global object called clear interval and
09:04 - then we can pass this timer variable
09:08 - here and it's going to clear this uh
09:11 - interval okay and then let's run the
09:15 - program once again and let's see what
09:18 - happens so 2 seconds have passed 4
09:21 - seconds have passed 6 second have passed
09:24 - and then when the value has become eight
09:28 - at this time it is going to clear the
09:31 - interval because when this condition is
09:33 - met this function is called which is
09:36 - going to clear the timer and it's going
09:38 - to come out of uh this uh function right
09:42 - now I'm going to also show you some of
09:46 - the other important uh objects which you
09:50 - can use in uh nodejs which is D name and
09:55 - file name so we know that we can use a
09:59 - console log to print anything on the
10:03 - console and there is a global object
10:06 - called D name so just write double uh
10:10 - underscore and then write their name
10:14 - here it's going to give you the
10:16 - directory name you are currently in so
10:19 - I'm just going to once again run the
10:21 - program and you can see it's going to
10:23 - print the directory name right now for
10:27 - example I want to print the file name
10:31 - I'm currently in you can just write
10:33 - underscore uncore file name right and
10:39 - then you can run your program once
10:41 - again and now it first prints the
10:45 - directory name which is uh by this uh uh
10:49 - object their name and then we have the
10:52 - file name here you can see app.js file
10:56 - right and uh you can uh go through uh
11:00 - this documentation once again how they
11:03 - work so for example I go to their name
11:06 - it's uh basically showing the same
11:09 - example which I have shown you and here
11:11 - also file name and the explanation of uh
11:15 - this uh function or object you can find
11:19 - in this documentation so this
11:21 - documentation is going to help you a lot
11:24 - whenever you are developing in nodejs so
11:27 - please keep in mind when whenever you
11:29 - are developing your uh server or any
11:32 - nodejs application just go through the
11:35 - documentation whenever required so I
11:38 - hope you have enjoyed this video please
11:39 - R comment subscribe and bye for