00:00 - so up until the previous video we were
00:02 - getting the list of products but not
00:05 - updating the ui
00:06 - okay so let's do that in this video okay
00:09 - so for that let's open our product
00:12 - screen now over here i'll create a
00:14 - global variable that will store our
00:16 - products so it is gonna be a list
00:19 - of product
00:22 - and we can call it products
00:26 - okay and now i'll initialize it with a
00:28 - empty
00:30 - list okay now over here where we are
00:33 - getting the value let's store it inside
00:35 - this variable and i also want to update
00:39 - the state so that according to that i
00:42 - can means remove the circular indicator
00:45 - that is that comes on the screen
00:48 - okay so for that i'll remove this and
00:50 - give a bracket over here because we are
00:52 - going to use a set state
00:55 - so set state
00:59 - and then inside this i'll
01:01 - update the value
01:03 - so products
01:05 - is gonna be
01:06 - value
01:11 - okay so we have
01:13 - we are done with this now since we are
01:15 - using set state we will have to
01:18 - add this inside an if block so that it
01:21 - executes only once because if we don't
01:24 - do so it will keep on executing
01:26 - constantly and and that many server
01:29 - requests would be sent and after a time
01:32 - it will
01:33 - hit a timeout and then there will be
01:35 - bugs okay so for that i'll create
01:38 - another boolean variable so bool
01:42 - first
01:43 - exec
01:44 - and this is true okay
01:46 - so if first exec is true then only we
01:49 - call this function
01:52 - get products per seller so if
02:01 - if
02:02 - first first exec then we are getting the
02:06 - get products per seller
02:09 - okay
02:13 - and then i also want to make it to false
02:16 - so that it doesn't keep on executing
02:19 - after the first time
02:21 - so
02:22 - it becomes first exec is equal to
02:26 - false
02:29 - okay so let me just format this
02:38 - yes so now over here we are getting the
02:41 - products and storing it inside products
02:43 - variable so now over here what we can do
02:46 - is we can check if the products variable
02:48 - has some value and if it has some value
02:51 - then we don't want to show the circular
02:53 - progress indicator or the text that say
02:56 - says loading products okay so for that
02:59 - i'll simply over here add an if
03:01 - if
03:04 - product
03:10 - dot
03:12 - length
03:14 - is greater than zero
03:19 - okay
03:21 - no sorry if the
03:23 - better than this it would be if the
03:26 - product
03:28 - if the products is equal to null then
03:30 - only show this
03:35 - and this
03:38 - okay because if it is not null then we
03:40 - don't want to show this we actually want
03:42 - to show the products that we got
03:45 - okay so let me just format this
03:48 - and do a full restart
04:02 - okay so now if i click on this albert
04:04 - einstein
04:14 - nothing is happening
04:16 - okay so i think it got it got the
04:19 - product pretty fast
04:21 - anyways just to confirm i'll add a print
04:23 - over here
04:26 - okay so that i know that it actually got
04:29 - to the products
04:46 - okay
04:47 - let me do a full restart
05:04 - okay so it got the products pretty fast
05:07 - that's why we were not able to see the
05:10 - loading icon but if the network was
05:12 - little bit slow we would see that and as
05:14 - soon as we would get the products then
05:18 - we would then that would disappear okay
05:21 - so now that we have the products let's
05:23 - start designing it okay so for that
05:27 - i'm gonna open the figma file yes so now
05:30 - you can see this is how our products
05:33 - screen should look
05:34 - so we'll start from the top first is
05:37 - this better vice and the image over here
05:40 - so if you would remember this is the
05:43 - exact same thing as we had in the seller
05:46 - screen so what i'm gonna do is i'm
05:48 - simply gonna copy from there and paste
05:50 - over here before that i'll add comments
05:53 - to it
05:56 - loading widgets
05:59 - okay now over here after
06:02 - product let's add that so for that i'll
06:05 - go to the sellers screen
06:07 - and inside the scaffold inside the
06:11 - children we have this
06:13 - header so i'm simply gonna copy it
06:24 - okay so it is still here
06:29 - copy it
06:30 - paste it over here
06:41 - okay so now we got it in the center and
06:43 - that is
06:45 - because
06:46 - the loading widgets were aligned to the
06:49 - center okay so then that
06:52 - doesn't look good so what i'm gonna do
06:54 - is i'm gonna wrap these two items in a
06:57 - separate column that will be a part of
06:59 - the bigger column
07:01 - okay so over here first i'll make the
07:03 - main axis alignment
07:05 - to start or simply just removing it will
07:07 - also do because
07:09 - start is what is set by default okay and
07:13 - over here the loading widgets i'll
07:15 - remove
07:16 - this because i don't need it
07:18 - and now over here i'll select these two
07:21 - then use the refractor tool which in
07:24 - my condition is shift option r
07:27 - and no refractoring available great
07:31 - so i'm gonna create a column
07:34 - myself
07:36 - then add children
07:44 - okay and then inside this i'm gonna add
07:46 - these two items
07:55 - over here okay now let me just format it
07:58 - yes okay so over here you can see if the
08:01 - product says null then only this column
08:03 - will be visible
08:05 - okay and now what i'm gonna do is i'm
08:07 - gonna apply main access as a center to
08:10 - this item
08:11 - okay so that it doesn't hinder the
08:13 - parent column okay so for your main
08:17 - access alignment so again over here i'll
08:20 - use the main access alignment enum
08:30 - and i want to make it sent
08:34 - ok
08:37 - so now this issue is solved
08:39 - and we also have our
08:42 - starting part cleared okay sorted out so
08:45 - we have this
08:47 - now let's design this so
08:50 - we have the products now we just simply
08:52 - want to display it like this
08:55 - okay so for this i can either use a row
08:59 - or a list view so
09:01 - using row is very similar to how we use
09:04 - the column while displaying the sellers
09:07 - so over here instead of that i am gonna
09:09 - use a
09:11 - a list
09:12 - okay so
09:15 - over here
09:19 - list of
09:20 - items let me check if there was some
09:23 - title no okay
09:27 - so over here it is simply gonna be a
09:29 - list view
09:32 - i think i'll use builder because
09:35 - why not list view
09:38 - dot builder
09:40 - okay and then it has an item builder
09:45 - so it will definitely because it is a
09:47 - builder it will definitely take a
09:48 - context
09:50 - okay
09:51 - and it will return a item so the item is
09:54 - gonna be a container for now
09:56 - okay a container
09:59 - means just like a placeholder i am
10:01 - adding it okay so i think this takes
10:04 - something more than build context yes
10:07 - so over here in the documentation you
10:08 - can see it takes the context as well as
10:11 - the index okay
10:13 - so index so now the error should be gone
10:16 - now we need to add a few more things to
10:18 - this builder
10:20 - okay there are a few required things
10:23 - let me just go through all
10:25 - yes so i need to add the item count so
10:28 - the item count is gonna be
10:31 - products
10:32 - dot
10:35 - i think it is products dot
10:38 - length yes so i always get confused
10:40 - between length and size okay
10:43 - so now over here we have this now in
10:45 - this container i am simply
10:48 - gonna write
10:50 - like
10:53 - height is around
10:55 - 50
10:57 - okay width is around 50
11:01 - and a margin
11:04 - okay and the margin is gonna be
11:07 - edge inserts
11:09 - not all
11:10 - five point zero
11:14 - okay
11:15 - let me just format this
11:21 - yes so once we have formatted this
11:25 - let's see how it looks
11:46 - okay so it is giving us a bunch of
11:48 - errors
11:51 - let me check
11:54 - okay because we need to give it a hash
11:56 - size
11:57 - okay so what i'm gonna do is i'm gonna
11:59 - wrap it with a sized box okay and the
12:02 - height is gonna be
12:05 - let's say 50.
12:22 - okay so we are getting the container
12:24 - over here we are not able to see because
12:26 - no color is there
12:28 - so i think i'll add some color colors
12:31 - dot
12:33 - pink okay
12:43 - yes so we are getting it over here
12:46 - so you can see these are our items
13:00 - okay now over here this is like actually
13:03 - a particular column over here i'll
13:05 - increase the height so it becomes
13:08 - a little bit more clear
13:13 - yes so you can see these are
13:16 - like a vertical list but i want a
13:18 - horizontal list because the design
13:20 - suggests
13:21 - horizontal list so over here inside this
13:25 - i think we have a axis
13:27 - or scroll direction
13:29 - yes so we have a scroll direction and it
13:32 - takes an axis i guess yes it takes an
13:35 - axis which is again accesses an enum and
13:38 - then horizontal
13:40 - okay
13:41 - so you see it is not possible to
13:43 - remember all the things you just need to
13:46 - have good amount of practice to figure
13:48 - out which one it is okay so now you can
13:50 - see it is in
13:53 - it is in a row okay so now uh in the
13:56 - next video we shall design each item
13:58 - okay so this was for the video thank you