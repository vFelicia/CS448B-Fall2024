00:00 - so in the previous tutorial i showed you
00:02 - like first i will start my rail server
00:04 - so i type rails server this would start
00:07 - the real server on my machine
00:09 - so we had created this front-end layout
00:11 - using our
00:12 - in our rails app so so like
00:15 - one few mistakes like a few things uh
00:19 - i would like to make clear uh that
00:22 - that is inside your index.html.erb this
00:26 - for input type is on text
00:28 - actually this should be interpreted is
00:29 - equal to input type is equal to submit
00:32 - because this is a button and you need a
00:33 - submit button so when you make this
00:35 - change
00:36 - you can see this button so this knob
00:38 - this becomes a button
00:40 - uh and inside your header.html.erb
00:43 - uh this is this snapbar you can do this
00:46 - to to-do app
00:49 - okay and let's do this and here you can
00:52 - see that now this becomes a to-do app
00:56 - we don't need these things so we can
00:58 - like cut them
00:59 - like they might create some confusion
01:01 - like with the code
01:02 - so we know don't let's just drop down
01:06 - so this is fine and we
01:09 - also don't need this this is fine
01:12 - and let's refresh this so we have a home
01:15 - or link
01:16 - so let's see this so
01:19 - we can change this link to slash contact
01:23 - and this becomes contact
01:26 - okay and in the same way we can copy
01:29 - this
01:31 - we can replicate this and this can be
01:34 - changed to about
01:36 - about and this is about
01:42 - uh yeah and this can be changed to slash
01:45 - slash that is the root
01:47 - oh slash slash contact flash about let's
01:49 - refresh them
01:50 - here we can see so let's click on about
01:52 - move to about page contract is contact
01:55 - and home is this so this is perfectly
01:57 - fine
01:58 - now let's check how we can make a post
02:01 - request using this form
02:03 - so what we can do we can move to like
02:07 - these files have been sorted so let's
02:09 - move to index.html
02:11 - and let's make a we already made a
02:13 - method post please make sure that
02:15 - in uh below the post like
02:18 - below the form tag you add this token
02:20 - underscore tag because
02:22 - if you don't add this token in the scope
02:24 - tag you won't be able to make a post
02:25 - request
02:26 - because this will give an authentication
02:28 - error
02:29 - and to make a post request you need an
02:31 - authentication token so
02:32 - so that for every request we have a
02:34 - token and then you won't be able to make
02:36 - this okay
02:37 - so for we for this method post we move
02:41 - to action add
02:42 - so let's move to action add sorry url ad
02:46 - so post slash add we move to a method
02:49 - in a root controller we move to the
02:51 - action add and let's
02:53 - see this and then we simply
02:57 - add what we do okay this is not before
03:00 - now
03:02 - we simply do render json response
03:04 - patterns so let's create this
03:06 - let's create to do and let's copy this
03:09 - and paste this as well
03:10 - so let's make a request and here you can
03:12 - see
03:13 - authenticity token is this so that was
03:16 - the token underscore tag i was speaking
03:18 - about so which is here so this is the
03:21 - token underscope tag
03:22 - and the title is to do description is
03:24 - description controllers root and action
03:26 - is act
03:27 - so this means our form is working
03:28 - perfectly fine so let's try to get the
03:31 - data out of this form
03:32 - and post this okay so let's what we can
03:35 - do
03:37 - we can uh we can create at the right
03:40 - post is equal to post.new
03:43 - okay and we can do add direct post or
03:47 - title
03:50 - is equal to params of title
03:54 - and it post dot description
04:02 - is equal to patterns dot
04:05 - uh parents or description okay
04:08 - so we need to like follow this
04:10 - convention
04:12 - uh this should be strictly followed the
04:14 - title string and description is text
04:16 - okay and make sure you don't have any
04:18 - some uh
04:19 - spelling errors then this would be like
04:21 - something
04:22 - then render json at the right post so
04:25 - let's do this first
04:26 - let's do this now let's refresh this
04:28 - page and make a request again so
04:30 - say id is null title is due to
04:32 - description description
04:33 - works perfectly fine and we return the
04:35 - instance
04:36 - and we see that we don't save this in
04:39 - our database so let's do
04:41 - add grid post dot save
04:44 - and and we render json
04:48 - what we can do we can simply return this
04:51 - kind of response but let's copy this
04:55 - this would help really help us so we can
04:58 - say
05:00 - you can say message says saved
05:03 - successfully saved and success
05:07 - we can say successfully so this is like
05:10 - perfectly fine let's make another
05:12 - request
05:13 - and do this uh here you can see
05:18 - this sign can't be reached like we have
05:21 - some
05:22 - like we have some issue let me check
05:26 - this
05:29 - hey everyone welcome back so like i now
05:32 - by mistake i must have closed the server
05:35 - that was it throwing an error so let's
05:36 - create a task
05:38 - a task new now and let's make a
05:41 - description
05:42 - let's make a description this
05:44 - description
05:45 - new now so let's click on add and here
05:48 - you can see we have a status 200
05:50 - which means okay and it means this
05:52 - request okay and message is saved
05:54 - successfully
05:55 - okay to view this what we can do we can
05:58 - do
05:58 - post but all in our database and
06:02 - here you can see that we have a task new
06:04 - now and description you now created here
06:07 - so we could also do this post dot
06:10 - find by id5 since i've seen this ids 5
06:13 - and
06:14 - here you can see we have already saved
06:16 - this to our database
06:17 - so this is good and works perfectly fine
06:20 - what if we want to like uh instead of
06:23 - doing this
06:23 - we could render
06:28 - our index page instead okay so
06:31 - let's make a hit again
06:34 - task new node 2 description new node 2
06:37 - and let's create add
06:38 - and here we can see that it must have
06:41 - been saved in the database let's check
06:43 - in the
06:43 - database so let's check in the database
06:46 - post dot find
06:48 - by id sticks because the new id created
06:50 - would be six and it says it see we can
06:52 - see that
06:53 - it has been created in the database so
06:55 - it works perfectly fine
06:57 - uh but would instead of doing this we
06:59 - could do something like this
07:02 - drift post is equal to post
07:05 - dot all let's create our logic and
07:09 - let's create a logic yeah so we have
07:12 - rendered all posts in the index page
07:15 - so this would automatically be rendered
07:17 - okay
07:18 - in the index page and what we can do we
07:21 - can now access this
07:22 - inside our page so let's give a hr tag
07:28 - and let's give
07:32 - a post dot each
07:36 - do post
07:39 - and let's close this okay
07:42 - and let's close this and
07:45 - we could do something like this
07:49 - percent equal to post dot title
07:57 - and we could close this here
08:02 - something like this so similarly we i'm
08:05 - trying to achieve this so this is like
08:07 - what i meant so uh end tag i forgot to
08:10 - put like i'll put down
08:14 - yeah so this should work now like this
08:17 - is post dot each
08:19 - you do post and like it should work now
08:22 - so let's refresh this
08:24 - and no matches slash get route okay now
08:28 - we need to move to this okay there's an
08:30 - error let me check
08:32 - we need to i need to check this error
08:36 - hey everyone welcome back uh so a smart
08:39 - error like i found like
08:40 - like we have created we are like first
08:43 - when we add
08:44 - so we render an index page okay if we
08:47 - perform add operation
08:48 - instead by default we are rendering the
08:51 - index page with this route which is the
08:52 - root route we need to define
08:54 - post here as well so if you render index
08:57 - if you render index then you would you
08:59 - need to add posts on both the sides like
09:01 - post is your post dot call and even here
09:03 - you have to define post world because in
09:04 - the same time
09:06 - you are rendering index okay because
09:08 - when you are rendering the index you
09:10 - need the post to be shown
09:11 - okay and when we move to index.html this
09:14 - is like this syntax is correct but
09:16 - it's a small error uh the accurate sign
09:18 - has to be put here
09:19 - now uh we can use a bootstrap card
09:22 - so i'll show you
09:26 - we can use a bootstrap card
09:29 - and let's search for card yeah so let's
09:32 - copy this
09:34 - and let's paste it here
09:38 - we don't need the image tag so this is
09:41 - fine
09:42 - we need this so
09:45 - let's paste it here
09:49 - and another thing we need is this
09:51 - description
09:56 - okay so another thing we need here is
10:02 - description
10:06 - this option let's refresh this
10:10 - and let's move to this so here you can
10:12 - see we have all the to do's
10:15 - okay they are not aligned in the center
10:17 - to align them in the center what we can
10:18 - do
10:20 - you can put margin zero
10:23 - auto okay now let's refresh this
10:27 - and yeah perfectly fine so and one thing
10:30 - we are rendering is pose or title this
10:32 - is not needed
10:33 - yes let's refresh this now and we like
10:36 - move to contact index this works
10:39 - perfectly fine and let's add a new to do
10:42 - do done again
10:46 - and let's give this as a same and let's
10:48 - get it on add and now you can see
10:50 - this has been added so this works
10:52 - perfectly fine
10:53 - thank you everyone for watching this
10:54 - video i'll catch you in the next
10:55 - tutorial thank you