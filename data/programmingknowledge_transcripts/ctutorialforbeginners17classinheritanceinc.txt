00:01 - hello guys in this video I'm going to
00:02 - teach you
00:04 - about class inheritance in cop cop is an
00:09 - objectoriented programming language and
00:11 - inheritance is one of the most important
00:14 - Concept in object oriented programming
00:18 - inheritance allows us to define a class
00:21 - in terms of other class which makes it
00:24 - easier to create and maintain our
00:27 - application so this allows us to reuse
00:32 - our code and that makes our code uh
00:37 - error free and fast to implement so let
00:40 - me give you an example first so we
00:45 - have these
00:47 - three squares as you can see
00:50 - here so suppose you want to
00:53 - make the classes of polygon so polygon
01:00 - can be a rectangle or a square or a
01:04 - triangle and all are we can say all are
01:09 - polygons right and some of the
01:12 - properties in rectangle square and
01:15 - triangle are same for example their
01:19 - height and
01:22 - their width are same right so rectangle
01:26 - also has width and height the Square
01:30 - also has width and height and this
01:33 - triangle also have width and he and
01:36 - suppose you want to calculate the area
01:39 - of the rectangle square and triangle
01:44 - using rectangle class Square class and
01:48 - triangle class then you need to define
01:52 - the length and width of all these
01:56 - classes but if you think that that all
02:01 - these length and width are same similar
02:04 - or same in all these polygons as we can
02:08 - say so we can define a base class
02:11 - polygon for example which will contain
02:15 - our two variables which are length and
02:19 - width or height or and width right and
02:23 - we can use this height and width for
02:26 - rectangle also for square also and for
02:30 - triangle class
02:32 - also okay
02:35 - so we are going to define a polygon
02:39 - class which we say or which uh we can
02:43 - say it's a base class and we are going
02:47 - to Define for example rectangle class
02:50 - and triangle class which we will call
02:54 - them derived class so this is a base
02:57 - class or parent class and these are the
03:01 - derived class or the child class which
03:04 - takes some attributes from your base
03:08 - class which is a polygon class right
03:12 - now this kind of implement on which uh
03:17 - this inheritance is based upon is called
03:20 - or uh is a implementation so rectangle
03:26 - is a polygon right square is a polygon
03:30 - and triangle is a polygon so whenever
03:34 - you use this uh concept try to relate
03:39 - this is a concept whatever is a base
03:44 - class then you can apply them in
03:48 - inheritance I will give you an other
03:51 - example for example we have the Base
03:54 - Class animal right and we can we can
03:59 - Define derived class like dog dog is a
04:02 - animal right cat is a animal so cat can
04:05 - be derived class or any other animal for
04:10 - example elephant is
04:13 - a animal okay so animal can be your base
04:17 - class and the dog cat and elephant can
04:22 - be your derived class now enough of this
04:26 - concept let's try to write some code
04:30 - okay so we will go to
04:32 - our
04:33 - um vual Studio here and we will try to
04:37 - make these
04:39 - classes so first of all let me Define a
04:43 - polygon class which will be our Base
04:46 - Class I'll write
04:53 - class
04:55 - polygon and then I will give these two
04:59 - early braces and inside this class we
05:03 - will Define two variable which are the
05:06 - member variable of these this polygon
05:09 - class so I will write
05:13 - public and then this can be integer Valu
05:17 - so I will say public
05:21 - int width
05:25 - comma height okay so this is our Base
05:31 - Class and suppose it we want to um
05:35 - calculate the area of the class so we
05:38 - need to set the width and height first
05:41 - right so we will also Define uh
05:47 - Public public method which will
05:51 - be void
05:54 - set values for
05:57 - example set values and we will set the
06:00 - values of width and height so we will
06:04 - say int a comma int
06:09 - B is our
06:11 - parameters and in the implementation of
06:15 - these parameters we can
06:19 - say this
06:22 - dot
06:23 - withth is equal to
06:27 - a and in the similar we can say
06:31 - this
06:35 - dot
06:37 - height is equal to B
06:41 - right okay so this is the definition of
06:46 - our Base Class and this should be public
06:50 - okay now we can Define the derived class
06:55 - so how we can Divi define derived class
06:58 - from this BAS Base Class once again you
07:01 - will write class and let's define
07:05 - rectangle
07:09 - class
07:11 - rectangle and in
07:14 - these curly braces we will
07:18 - Define or first of all I almost forgot
07:22 - this so whenever you want to inherit
07:28 - polygon so this is a base class and this
07:30 - is a derived class so you need to give
07:33 - this colon here and then give the name
07:38 - of
07:39 - your base class which is our polygon so
07:43 - this kind of implementation whenever you
07:46 - write this colon and then give the name
07:49 - of the base class then your rectangle
07:51 - class which is a drive derived class
07:54 - knows that you are
07:57 - inheriting the values or the variables
08:01 - of this Base Class to the rectangle
08:05 - class okay uh and now here we can create
08:11 - a
08:12 - method so we can write
08:15 - public method called for
08:19 - example
08:21 - int
08:23 - area okay so we want to calculate the
08:27 - area of uh these polygons rectangle and
08:30 - triangle right so we can say here area
08:35 - can be what can be area we can
08:41 - return return for rectangle the area is
08:46 - the width and the height the
08:48 - multiplication of both right so you can
08:52 - say
08:54 - width multiplied by
08:58 - height
09:01 - okay so if you have uh noticed that I
09:08 - haven't defined width and height in this
09:11 - rectangle but whenever you provide this
09:15 - Base Class as a uh inheritance class for
09:20 - example to the derived class it inherits
09:24 - all the values or all the members of the
09:27 - base class so rectangle also have width
09:30 - and height which is inherited from The
09:35 - Base Class okay and I will once again
09:39 - copy this class and I will paste it here
09:42 - and this time I will Define a triangle
09:47 - class triangle okay and this also has uh
09:52 - access to the polygon members which are
09:56 - width height and set values Okay so so
10:00 - the area of the triangle can
10:03 - be half of the height and the width okay
10:08 - so I will divide it by
10:10 - two
10:12 - right so what you have done you have
10:15 - defined a base class in which you have
10:18 - the width and height as a public
10:21 - variable and we have defined set values
10:25 - method in our Base Class which uh sets
10:29 - the value of width and Heights okay now
10:33 - we have defined a deriv class which is
10:36 - rectangle and we for
10:38 - inheriting for inheriting the values
10:41 - from the base class we just need to give
10:44 - colon and the name of the Base Class
10:47 - here so now your class rectangle knows
10:49 - that I'm inheriting from the polygon
10:51 - class and I have the access to width
10:54 - height and set Value method in my class
10:58 - okay similarly we have done the same for
11:01 - this triangle now to access these
11:04 - classes or to define the instance of
11:07 - rectangle and the triangle class we can
11:11 - say
11:14 - rectangle
11:15 - rect is equal to
11:19 - new
11:23 - rectangle okay so we have created the
11:25 - object in a similar way we will create
11:28 - the object on
11:30 - triangle
11:36 - triangle t r i g is equal to
11:39 - new
11:43 - triangle okay so we have created the
11:46 - instance of triangle class and the
11:50 - rectangle class or object of both these
11:53 - both class now for example I use this
11:57 - rectangle object from here and whenever
12:01 - I press dot you see here I have the
12:06 - access to set values which is the method
12:09 - in the polygon class so
12:12 - because rectangle was inheriting the
12:16 - values from the polygon we have the
12:19 - access to the methods in polygon class
12:22 - so we can say set
12:25 - values and we can set two values for
12:29 - example 10 and second value is
12:34 - also for example
12:36 - 20 the same thing we can do for this
12:39 - trig or triangle object
12:43 - dot set
12:45 - values so this has also the access to
12:48 - set values and we can say this time also
12:54 - this is 30 and 20 for example
12:59 - okay
13:01 - so whenever you create this uh derived
13:07 - class and Base Class you have the the
13:09 - derived classes object always have the
13:13 - public member
13:15 - access from the base class right now to
13:21 - calculate the area I can
13:25 - say
13:27 - console. right line
13:31 - right
13:32 - line and in the console I can I can
13:37 - print the area of both classes so I I
13:41 - say
13:45 - uh
13:47 - rectangle area is equal to and in the
13:51 - placeholder I will pass the rectangle
13:54 - area which
13:57 - is rectangle which is our object
14:01 - rect dot area so we have the member
14:06 - function area in rectangle right here is
14:09 - our area okay and we will give the
14:13 - semicolon in the same way we can do this
14:16 - for triangle so I I can
14:21 - say triangle area and I will copy this
14:25 - triangle object and paste it here and
14:28 - because this area is returning integer
14:32 - this will this function will return an
14:35 - integer and will be printed here right
14:39 - now whenever I run my
14:42 - program you will be able to see the area
14:46 - of the triangle and rectangle see here
14:50 - rectangle area is 200 which
14:54 - is 10 into 20 right and
14:59 - the triangle area is 300 which is 3 30
15:03 - into 20 which is 600 ided 2
15:07 - okay so in this
15:09 - way you can
15:11 - Define base classes and derived classes
15:14 - and in this way you can implement the
15:16 - concept of uh The Inheritance and what
15:21 - are the uses of in inheritance it makes
15:25 - your code uh smaller because
15:29 - this width and this height and set value
15:32 - you have defined only at one places and
15:35 - you can Define multiple class rectangle
15:38 - triangle square and or any other polygon
15:41 - and you can use this width and height in
15:44 - each of the class using this uh inherit
15:49 - inheritance right so it makes your
15:52 - code smaller it makes your
15:55 - implementation faster and it will
16:00 - whenever your code is smaller it's easy
16:03 - to read and it will be more error free
16:08 - right and one more important thing is
16:12 - whenever you uh Define or declare the
16:16 - object or instance of your derived class
16:22 - your base class will be automatically
16:26 - initialized right so so once again
16:30 - whenever you define the object of a
16:34 - derived class
16:37 - your base class will be initialized
16:41 - automatically so to uh prove this
16:43 - concept or to uh understand this concept
16:47 - I can uh
16:49 - Define The Constructor for
16:53 - example public polygon Constructor okay
16:59 - which takes uh nothing and we can
17:04 - print something here so I will just copy
17:07 - this console. right line and paste it
17:11 - here and I can say here
17:16 - that we are
17:21 - in
17:23 - Base Class okay in a similar way for
17:27 - example
17:29 - I can Define The Constructor for this
17:32 - rectangle I will just
17:35 - write
17:36 - [Music]
17:37 - public
17:40 - rectangle
17:42 - and I can
17:44 - say once again I will console do right
17:47 - line and I I can say we are
17:54 - in derived class or derived
18:00 - rectangle class okay
18:04 - and for example I can comment this code
18:08 - to demonstrate
18:10 - my example so I will just comment
18:14 - this and here
18:18 - also okay so we have just declared our
18:23 - object rectangle right and when I run
18:26 - this program you see here whenever I
18:30 - created my object of my derived class it
18:33 - calls we are in base class so first it
18:36 - initialize this PO polygon class and
18:40 - then it shows we are in derived
18:43 - rectangle class so then it initializes
18:46 - your derived class so whenever you
18:49 - declare the object of derived class your
18:53 - base class will be automatically
18:57 - initialized okay
18:59 - the other important thing to note is a
19:04 - class which is a derived class can only
19:08 - inherit from one class so for example uh
19:12 - if you create some other
19:15 - class I will create some other class
19:18 - here for
19:22 - example like
19:25 - this like this and I will say this is my
19:31 - rectangle one for example and I want to
19:37 - inherit from rectangle one and polygon
19:39 - at the same time so for comma rectangle
19:43 - 1 this is not possible okay and this
19:47 - will give you an error right because you
19:51 - cannot inherit from two B based classes
19:55 - at the same time okay so when I try to
19:59 - run the program it gives me an
20:02 - error okay but you can have multiple
20:07 - inheritances so I have this uh rectangle
20:11 - one right
20:13 - and what I can do is I can inherit from
20:18 - rectangle class here okay so what this
20:22 - will do is let me copy and paste it
20:26 - below my rectangle class so what this is
20:29 - doing our rectangle class is inheriting
20:32 - from my polygon and my rectangle one is
20:35 - inheriting from my rectangle class so in
20:41 - indirectly it's inheriting also from the
20:43 - polygon so for example I will create an
20:46 - instance of rectangle one class
20:50 - rectangle re
20:52 - C1 is equal to
20:54 - new rectangle one
20:59 - and then whenever I use this rectangle
21:02 - one and see after dot when
21:07 - I use this dot here I have the exis to
21:11 - area which is a part or which is a
21:13 - member function in our rectangle class
21:17 - we have the access to set values which
21:20 - is a class in our polygon class right so
21:24 - this also we have the AIS we have the
21:27 - access to
21:28 - width and height which is in our polygon
21:30 - class right so indirectly we can inherit
21:34 - from the polygon like this okay so this
21:38 - is multiple
21:40 - inheritance
21:42 - so I think that's it for this video I
21:45 - hope you have understood the concept A
21:47 - basic concept of inheritance and I hope
21:50 - you have enjoyed this video please wait
21:52 - comment and subscribe and bye for now