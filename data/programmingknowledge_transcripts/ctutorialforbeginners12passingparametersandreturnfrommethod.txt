00:00 - hello guys welcome once again in the
00:02 - last video I've shown you how to declare
00:05 - a method in C and how to use this method
00:09 - in C now in this video I'm going to show
00:12 - you how you can pass parameters in the
00:16 - methods and how to return values using
00:21 - methods so if you have followed last
00:23 - video I have shown you how to declare
00:26 - this method which was returning nothing
00:29 - so we have the return type void and it
00:33 - has no parameters and parameters goes
00:36 - inside these two brackets okay so now
00:41 - suppose a user want to enter the values
00:44 - and on the basis of those two values he
00:47 - want to get the addition okay so let's
00:53 - make this uh program a little more
00:56 - interactive what I'm going to do is I'm
00:59 - going to pass two parameters in this sum
01:03 - so I will pass two integer which
01:07 - is
01:08 - no1
01:10 - and int
01:13 - N2 so these this is called parameter
01:17 - passing okay or this these are called
01:22 - parameters in the method so we have we
01:26 - have declared two parameters in this
01:29 - method method definition okay now in
01:34 - addition we want that this sum will give
01:38 - us the addition and it will not print
01:42 - this here but it will return something
01:46 - to us and which is the addition so I
01:49 - will just delete this line because we
01:52 - have already declared these two
01:53 - parameters here and what we want to do
01:56 - is we want
01:58 - to return this addition okay and as soon
02:03 - as we return something we need to give
02:05 - this return type here okay so this is
02:11 - called return type if you are returning
02:14 - something in our case we are returning
02:16 - integer that's why I have written here
02:19 - integer and these are called parameters
02:21 - and we are using two parameters right
02:24 - now but you can you you can pass
02:27 - multiple parameter 3 four or any number
02:30 - of parameters in a function
02:32 - okay this is return and these are
02:35 - parameter okay
02:39 - now for example I want that user should
02:43 - enter these two number and then addition
02:46 - is shown to him so what I will do here
02:49 - is I will declare two
02:54 - integers
02:56 - and
02:58 - num one 1 is equal to 0 comma num 2 is
03:05 - equal to 0 okay and I want that users
03:10 - should pass them so I will just write
03:13 - this these two lines and I think you
03:16 - know this that this console Runner
03:19 - console. write will print this enter a
03:23 - first number and then this console. read
03:26 - line takes the input and then this this
03:29 - convert 2
03:30 - in32 will convert this uh line to an
03:35 - integer and pass it to this integer this
03:38 - all I have shown you in the previous
03:40 - video so there's nothing complicated
03:43 - here right I'm just asking the user that
03:46 - he should enter two numbers and now what
03:49 - I want to do is I
03:52 - want that these two numbers are passed
03:56 - to the sum function because this some
04:00 - function can take two parameters so we I
04:02 - will pass these two integers number one
04:06 - comma number two so I have passed two
04:09 - integers right
04:12 - and I want to show the sum to
04:18 - the user so I will just copy this line
04:22 - which I was earlier using inside the
04:24 - function and I will paste it here okay
04:28 - so what you can do is you can either use
04:32 - this
04:34 - function directly here and this will
04:38 - show the result or you can just say in
04:43 - add is equal to this E1 which is a
04:48 - instance of uh
04:50 - class example one which is my class here
04:53 - if you can see
04:55 - here right and because it is returning
04:58 - the sum of these two numbers we can
05:02 - store this sum inside this integer right
05:07 - because if what it will do it will take
05:09 - these two numbers it will add this
05:11 - numbers and it will return this addition
05:14 - to this and this addition can be stored
05:18 - inside this other integer and we can
05:22 - print this now I will run the program
05:26 - once
05:27 - again and now we can just give two
05:33 - numbers
05:34 - 234 second number
05:37 - 500 and we have the sum of these two
05:40 - numbers right and now this program has
05:43 - become little bit interactive that user
05:46 - can enter these two values and whatever
05:49 - the values user has entered the result
05:53 - is shown accordingly okay and then you
05:57 - can use the sum method multi multiple
06:00 - times in your in your main method
06:04 - whenever you need this sum okay so this
06:08 - is how you pass
06:11 - parameters and how to how you can return
06:14 - value in
06:15 - cop so this parameter passing is called
06:19 - pass by value now in the next video I
06:22 - will show you how to pass by value and
06:27 - how to pass by reference in C sh and I
06:31 - will also show you if you want to Output
06:34 - or if you want to return more than one
06:38 - value how can you return multiple values
06:41 - in C in a function okay so stay tuned
06:46 - and please RIT comment and subscribe and
06:47 - bye for now