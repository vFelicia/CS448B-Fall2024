00:00 - hey guys welcome to the next video and
00:02 - Cheng keys tutorial for beginners in the
00:05 - last video we have seen what is Jenkins
00:08 - pipeline and we have also seen how to
00:10 - use pipelines in Jenkins using this
00:14 - pipeline script which we have defined
00:17 - into our champions job configuration now
00:22 - in this video I'm going to show you the
00:24 - second option of using pipeline script
00:27 - which is pipeline script from HCM okay
00:32 - so in the last video I have shown you
00:34 - how you can create this kind of pipeline
00:37 - script inside your Jenkins configuration
00:41 - now there is one more way of creating
00:45 - your Jenkins file which is you can
00:48 - create a jenkins file into your github
00:50 - repository and then use the second
00:54 - option which says pipeline script from
00:56 - SCM which is more convenient so let's
01:00 - see how we can use pipeline script from
01:02 - SCM so we will take the same project
01:06 - which we have used in the last video
01:08 - which is the maven project and there is
01:12 - one special file which I have created
01:14 - here which is Jenkins file this Jenkins
01:18 - file name typically start with the
01:21 - capital J and without any spaces you
01:24 - just need to write Jenkins file here and
01:27 - when I click on this file you will be
01:31 - able to see the pipeline script so this
01:33 - is the pipeline script which I have
01:34 - written into my champions file which
01:37 - resides in my maven project on my github
01:41 - repository so the syntax is almost same
01:45 - so your jenkees file start with the
01:48 - keyword pipeline and then in these curly
01:51 - brackets
01:52 - you have the agent any and then you
01:55 - define the stages so in this script we
01:59 - have three stages one is maven clean
02:03 - other is the testing stage which is
02:06 - maven test and the last stage is maven
02:10 - package okay now if you notice
02:13 - yeah we haven't used any git clone
02:17 - command which we have used in the last
02:19 - video so let's compare these two script
02:22 - first of all so you can see in the first
02:26 - stage what I was doing is I was using
02:29 - the shell command first of all to remove
02:33 - the my app directory which is created by
02:37 - cloning our github repository and then
02:41 - we were cloning our github repository
02:44 - once again and then we were running the
02:48 - maven clean command into the specified
02:52 - folder which is my app now when you use
02:55 - jenkins file in your github repository
02:58 - you don't need to use this remove
03:01 - command you don't need to use this clone
03:04 - command because when you choose this
03:06 - option jenkins will allow you to give
03:09 - the part of the github repository from
03:12 - where it will clone your repository so
03:15 - we will see this example in a few
03:18 - seconds but let's see the script first
03:21 - of all so you can see I have just run
03:24 - the maven clean command and that's it
03:28 - so this will work similar to this script
03:32 - which we have written in the
03:33 - configuration but with the lesser steps
03:37 - so we have removed these two steps and
03:40 - you don't even need to provide this
03:43 - minus F flag because this maven clean
03:46 - will be executed inside your my app
03:50 - directory automatically okay so syntax
03:53 - is also much more cleaner here just
03:56 - maven clean come on we haven't test come
03:59 - on and maven package command ok so let's
04:03 - see how we can use this check-ins file
04:05 - into our Jenkins job so what I'm going
04:09 - to do here is I'm going to create a new
04:12 - Jenkins job so we will see from the
04:14 - start how to use this Jenkins file so
04:17 - I'm going to just name my Jenkins job as
04:20 - pipeline demo 2 and then I'm going to
04:24 - choose pipeline here and I'm
04:26 - to choose okay so once your Jenkins job
04:29 - is created we will just say it's a
04:32 - github project and we will give the URL
04:34 - of our github repository here and then
04:39 - we will scroll down and in the pipeline
04:42 - section this time we will choose the
04:45 - second option which says pipeline script
04:47 - from SCM and now you will see these
04:50 - configuration steps here and the first
04:53 - option here is SCM so as SCM we are
04:57 - going to choose the gate SCM so just
04:59 - choose gate from here so once you choose
05:02 - gate here you will be able to see this
05:04 - repository URL so you can give your
05:08 - repository URL here so I'm going to just
05:11 - copy my git repository URL by clicking
05:15 - this button and copying the URL and
05:17 - pasting here and then once you click
05:21 - anywhere outside this box you will be
05:24 - able to see this error is gone and the
05:27 - credential I don't need but you can set
05:30 - it from here and then you can see a
05:33 - branch specifier so by default my
05:36 - project have only one branch which is
05:39 - the master branch but if you have
05:41 - multiple branches then you can define
05:45 - whatever branch you want to use for this
05:49 - Jenkins job so I'm going to leave this
05:51 - master as default but if you have some
05:54 - other branch you can specify here okay
05:57 - and now you will be able to see the
06:00 - script part so because our Jenkins file
06:03 - script resides on the root of our
06:08 - project so we don't need to change the
06:10 - path of this script you can see once
06:13 - again this or Jenkins file resides on
06:16 - the root of my projects way directly
06:19 - inside my my app directory if this
06:23 - Jenkins file reside inside some folder
06:26 - or some complicated folder structure
06:28 - then you can give the relative part of
06:33 - your Jenkins file script from here now
06:37 - last option here is light paid checkout
06:40 - so
06:40 - I will leave this as default and now I'm
06:43 - going to just save my Jenkins job and I
06:48 - will try to run my champions job so I'm
06:50 - going to just click on build now which
06:53 - is going to start my build and you can
06:56 - see all the stages one by one will be
06:59 - shown here so the check out SCM is
07:03 - successful and it took three seconds and
07:06 - now the mvn clean command is going on
07:09 - and it's also successful and it took
07:12 - seven seconds and now the test command
07:14 - is going on and it took 13 seconds to
07:17 - execute but it's successful and now the
07:20 - last stage which is the packaged stage
07:23 - is going on and once it's finished and
07:27 - if you see all the boxes green that
07:30 - means your Jenkins job is successful and
07:33 - all four stages has been executed
07:36 - successfully you can also see the logs
07:40 - here and straightaway you will observe
07:42 - that this option is more easier than
07:46 - using or creating your pipeline script
07:49 - into your champions configuration so the
07:52 - advantage of using the jenkins file into
07:56 - your project is you can change this
07:59 - jenkins script anytime and you can
08:01 - directly check your code or commit your
08:05 - code and push your code and if your bill
08:08 - triggers are properly set you don't need
08:12 - to do anything Jenkins will take care of
08:14 - everything and it will automatically
08:17 - execute every stage and give you all the
08:21 - results so this is how you can use
08:23 - pipeline script from your github
08:27 - repository using jenkins file I hope
08:29 - you've enjoyed this video please rate
08:31 - comment subscribe and bye for now