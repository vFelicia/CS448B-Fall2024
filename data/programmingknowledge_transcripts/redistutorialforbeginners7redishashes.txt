00:00 - hey guys welcome to the next video on
00:02 - reddish tutorial for beginners in the
00:04 - last two videos we have talked about
00:06 - string values in redis now in this video
00:09 - I'm going to show you how you can use
00:11 - hashes as values in redis now first of
00:15 - all what are hashes hashes are map
00:19 - between the string fields and string
00:22 - values hence they are perfect data type
00:24 - for representation of objects in red is
00:28 - every hash can store up to 4 billion
00:31 - field value pairs now you may ask that I
00:36 - have talked about key value pairs but
00:39 - what are these field value pairs right
00:43 - so let me show you a slide and then you
00:46 - will be able to understand in a better
00:48 - way so this uh was the slide similar
00:51 - kind of slide I have shown you in the
00:52 - string uh data type also right so in the
00:57 - hashes we are talking about hashes now
01:00 - so in the case of hashes the keys are
01:03 - same which are printable ask key you can
01:05 - see here but in the case of string we
01:08 - were using string uh array here right
01:11 - and that string array was about
01:15 - 512 megabyte right now in the case of of
01:19 - hashes we use this kind of map of field
01:24 - value right so field is this one and
01:28 - value is this one okay in the cases of
01:32 - string it was like a like only a string
01:35 - value right so I will give you an
01:38 - example for example I want to store uh
01:41 - students uh database or students uh uh
01:45 - info data then what I can do here is I
01:49 - can uh say student one as a key so
01:53 - student one as a key and then for
01:56 - example student has what uh attribute
01:59 - student has for for example name Sur
02:01 - name age in which class he is so here uh
02:06 - field can be name and then for example
02:10 - name is equal to mark value one can be
02:12 - Mark right age is the field two for
02:16 - example in this case and then uh for
02:18 - example 15 is the value to here right
02:22 - surname can be field three here and then
02:26 - whatever the surname of the student uh
02:28 - it will be Valu three right so uh for
02:32 - every student we can uh just provide
02:35 - this kind of map for his uh information
02:40 - so this is how uh hash data type as
02:43 - value work in redis right now let's take
02:48 - a practical example and then we will be
02:50 - able to understand this concept so I'm
02:54 - going to just start the reddish CLI and
02:57 - let me see what are the keys there so so
02:59 - I'm going to just write Keys pattern and
03:02 - these are all the keys so I'm going to
03:04 - flush all so let me uh flush all here so
03:09 - all the keys will be deleted and now I'm
03:12 - going to clear this uh CLI and let's
03:16 - start with the hashes right so as we
03:20 - have seen in the case of uh strings we
03:23 - can just use this set command to set a
03:27 - key value pair now in the case case of
03:30 - hashes we can use hm set to set a key
03:36 - field value uh pair right so for example
03:40 - we were talking about uh student
03:44 - information database right so just write
03:47 - hmet H stands for hashes here M set we
03:51 - have already seen in the case of strings
03:53 - also right so just write hm set and then
03:56 - uh for example ST1 for student one and
04:01 - then for example I will just write name
04:04 - is equal to Max right and then I can
04:08 - also uh give the second field value pair
04:11 - right so for example his age is equal to
04:15 - 15 and then uh for example class in
04:18 - which class he is so he is in for
04:21 - example eth class okay this is just an
04:26 - example so this is students one
04:30 - information let me just give this minus
04:32 - here so we will be able to understand
04:34 - properly and then when I press enter
04:37 - it's going to say okay and to get this
04:41 - uh value there are two ways of getting
04:44 - so you can just say h get and the key
04:48 - name for example
04:50 - St minus one is the key name and you can
04:55 - give the field name whatever field you
04:56 - want to uh get or you can just say get
05:01 - uh key name and here get we have already
05:04 - seen in the case of uh strings also and
05:07 - you just need to add a h before it and
05:10 - then the student key name it says error
05:13 - because we just need to give the field
05:16 - name also so what field we want to get
05:19 - so we want to get for example name of
05:23 - student one it says Max here right now
05:26 - if you want to get all the information
05:30 - about student one you can just say h get
05:34 - all okay and here you can just give the
05:38 - student one key name and it's going to
05:41 - give you all the You Know Field value uh
05:45 - information about the student one so for
05:48 - example name max age 15 Class 8 okay so
05:54 - let's add one more student for example
05:56 - so once again this command h hm set
06:01 - student two and then the name for
06:05 - example
06:07 - Tom age is 12 for example and class is 7
06:13 - okay press enter and once again you can
06:17 - get the information about the student 2
06:20 - using St minus 2 right so let me clear
06:23 - the terminal so in this way you can um
06:27 - just uh set the hash value and get the
06:31 - hash value right now uh there is one
06:35 - more command for for example H exists
06:40 - and this will uh tell you if the field
06:44 - inside this hash sets exists or not so
06:47 - just write H exists and then the key
06:51 - name for example
06:53 - St minus1 and then uh for example I am
06:58 - searching for
07:01 - surname okay and surname field does not
07:04 - exist in student one info right and then
07:07 - I press enter and it says integer zero
07:12 - so there is no information about uh the
07:15 - surname of student one right in the case
07:19 - of name this name exists right name
07:23 - field exist in this uh student one uh
07:27 - hash set so when I just give this value
07:31 - then it says integer one that means it
07:34 - exists so zero it doesn't exist one it
07:37 - exist right now uh for example I want to
07:41 - delete a value what I can do I can just
07:46 - say HD L and it says uh first of all I
07:51 - need to give the key name so
07:54 - ST1 and I want to delete for example
07:58 - class from it so so I'll will just write
08:01 - class and then I can just press enter
08:05 - right and then I I can just do H get all
08:10 - and the student one key and now you can
08:14 - see class doesn't exist here anymore
08:17 - right for example I want to uh set once
08:21 - again the same value I can uh just write
08:25 - hm set and then the same student
08:30 - ST1 and then Class 8 okay and then press
08:35 - enter it says okay and once again H get
08:38 - all student one and now once again the
08:42 - class is added here okay so you can add
08:45 - uh and delete uh the values from this uh
08:49 - hash like this so for deleting you use H
08:54 - Dell and then once again for setting you
08:57 - just add this field value pair now there
09:00 - is one more command called H set NX so H
09:06 - set NX so this this command is used for
09:12 - setting the field value if the field
09:15 - doesn't exist so if the field doesn't
09:17 - exist this command will be successful
09:20 - and if the field exist this command will
09:23 - not be successful so for example I will
09:26 - just say
09:27 - ST1 name so name field already exists
09:31 - right and I will just uh give some other
09:34 - name to the student one right and it
09:37 - says zero so this command is not
09:40 - successful because this command will be
09:43 - successful only in the case of the field
09:46 - not available right so if I do the same
09:50 - command and I know that surname is not
09:53 - there so I will just write surname and
09:55 - some
09:57 - surname and then press enter and it
10:00 - returns uh integer one that means it has
10:04 - created this field value inside this
10:07 - student uh set right so once again when
10:11 - I
10:12 - do get all
10:14 - ST1 now this student one also have
10:17 - surname information now as in the case
10:19 - of uh string we were using keys right so
10:23 - we were writing Keys ASX right same you
10:28 - can use for example H Keys here and then
10:33 - the key name for
10:35 - example uh whatever key you want to give
10:38 - here
10:40 - ST1 and it gives all the fields in that
10:45 - hash so by field I mean the name and for
10:49 - example age class and surname only the
10:52 - field not the value of those fields so
10:55 - it will only return the fields of that
10:59 - key whatever we provide here now as in
11:02 - the case of string values we were having
11:06 - decr decrement or incr for incrementing
11:10 - the value so the same is available in
11:15 - the case of hashes also so for example I
11:18 - want to increase uh the age of some
11:21 - student by some number I can do that so
11:26 - just write H and then I in CR by and
11:31 - then the key name
11:33 - s minus1 for example and the field name
11:37 - is age I want to increment his age and
11:40 - then right now the age is 15 for example
11:43 - and I want to increase the age by two
11:47 - and then press enter and then once again
11:50 - when I do Edge get all
11:53 - S21 now you can see the age becomes 17
11:57 - right so in order to increment the value
12:01 - you just write h i andc are by and the
12:05 - key and the field which you want to
12:07 - increment now if you want to know all
12:09 - the values of a particular key then we
12:13 - can just write H Wells and then the key
12:18 - name
12:19 - ST1 it will just give you the values of
12:23 - that field value pair right so right now
12:28 - it's not giving name or age or class or
12:31 - surname it's only giving the values of
12:33 - them which is Max and then 178 and the
12:37 - surname value right so H vals is for
12:41 - Value okay now if you want to know the
12:44 - length of uh some hash for example I
12:48 - will just give this command
12:51 - hle n and then the ST1 the key name
12:56 - minus one it'll return you the number of
12:59 - fields in that hash okay so press enter
13:04 - and it returns four so I know that
13:07 - student one key has four number of field
13:11 - name age class and surname so I uh can
13:15 - just verify that with that okay so four
13:18 - field so it will return number four now
13:21 - uh the last command I want to show here
13:23 - is hm get so let me clear the terminal
13:27 - and then I just want to write hm get and
13:32 - it will give you the result whatever
13:35 - Fields you want so for example for
13:38 - ST1
13:40 - ST1 uh for example I just want to know
13:43 - the name of uh that student I I don't
13:46 - want any other information about that in
13:49 - student but only the name then it will
13:51 - give me the name right and for example I
13:54 - just want to know the name and age even
13:57 - though the student Ash contains surname
14:00 - and class also but I just want to know
14:03 - the name and age it will just give me
14:05 - the name and age when I use hm get then
14:09 - the key name and the field name I want
14:12 - to see so the field name I want to see
14:14 - right now is name and age so I just give
14:16 - name and age and it will give me the
14:19 - result of those field only so in this
14:21 - way you can use hashes in redis I hope
14:24 - you enjoyed this video please wait
14:26 - comment and subscribe and bye for now