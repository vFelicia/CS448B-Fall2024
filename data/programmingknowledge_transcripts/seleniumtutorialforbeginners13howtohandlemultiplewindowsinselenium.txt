00:00 - hello everyone this is varsha welcome to
00:02 - programming knowledge
00:09 - so in today's tutorial we will cover one
00:11 - of the most important interview question
00:13 - that is how to handle multiple
00:14 - windows now in this tutorial we will
00:16 - understand uh
00:17 - what is window handle we will understand
00:20 - some methods used for handling window
00:21 - handles
00:22 - also we will cover some interview
00:24 - questions on get window handle and get
00:25 - window handles
00:27 - now in the previous tutorials i
00:29 - explained about the browser commands
00:30 - i explained all the commands except the
00:32 - two commands that is the get window
00:34 - handle and get window handles
00:36 - these are the two commands which is used
00:38 - to handle the multiple windows
00:40 - now for example this is the window now
00:43 - if i click on this
00:45 - this is the new window again if i click
00:47 - on this this is the next window
00:50 - so these are the child windows and this
00:52 - is the parent window
00:53 - now the problem is how do i switch from
00:55 - this window to this window
00:58 - now sometimes you may come across a
01:00 - complex scenario where you have to open
01:02 - a new window okay
01:03 - and you have to perform some desired
01:05 - operation on the open window like for
01:07 - example this
01:08 - is the parent window and by clicking on
01:10 - this new window
01:12 - button i opened a new window and i have
01:13 - to perform some operation on this
01:16 - so in this case how do i switch from
01:18 - this window to this window
01:20 - so this is what we're going to learn
01:21 - today
01:23 - now handling multiple tabs or windows
01:25 - may seem
01:26 - complex in the beginning because it
01:28 - involves
01:29 - some different commands which is new to
01:31 - you so as in beginner level
01:33 - so it will be complex in the beginning
01:35 - but once you get
01:36 - get to know how to handle it and once
01:38 - you get a hang of it it will be very
01:40 - easy for you now there are many ways to
01:42 - handle multiple windows you can use a
01:44 - javascript executor also method
01:47 - but we will be covering the basic method
01:49 - to understand
01:50 - how to switch between the two browsers
01:53 - now here
01:54 - if i want to switch from this browser to
01:56 - this browser how am i going to do that
01:58 - i'm going to use the window handles
02:00 - value now what is the window handle
02:02 - value
02:03 - a window handle is basically a unique
02:05 - identifier that holds the address of all
02:07 - the windows
02:08 - it is basically a pointer to a window
02:10 - which returns a string value
02:12 - this is the window right this is the
02:15 - parent window
02:16 - and this is the child window now if i
02:18 - want to switch from this to this
02:19 - i will be using the window handles that
02:22 - is basically the pointer or the address
02:24 - that is given to a particular browser
02:26 - for example if i assume this parent
02:28 - window is having a
02:29 - pointer of value some string value it
02:32 - will be a very long string value
02:34 - i'm just taking up an example like
02:35 - suppose uh c21
02:38 - okay and over here it will be uh
02:40 - something like d21 now if i want to
02:42 - switch from c21 to d21
02:44 - how am i going to do that i'm going to
02:45 - use some specific commands
02:48 - okay and yeah these window handles are
02:50 - dynamic so it keeps on changing there's
02:52 - no fixed value for it
02:54 - the dynamic in nature they will keep on
02:56 - changing and
02:57 - it is a pointer to a window which
02:58 - returns the string value okay
03:01 - so there are some predefined methods of
03:03 - selenium that can be used to handle the
03:05 - windows
03:06 - first method is the browser commands
03:09 - that i have
03:10 - explained before but i didn't uh show
03:12 - the practical implementation so we're
03:14 - going to implement it today
03:15 - so first is that the get window handles
03:17 - and the get window handle
03:18 - now there's a difference between the
03:20 - both of them the get rid of handles
03:22 - is used for designing the window ids of
03:25 - multiple open windows
03:27 - and get window handle is used for
03:29 - retrieving the window id
03:30 - of the current focused window for
03:32 - example now the get window handles
03:35 - will retrieve the window id of this one
03:38 - as well as this child window and this
03:40 - child window okay
03:42 - whereas the get window handles will
03:44 - retrieve only the parent window handle
03:46 - value okay whatever value this window is
03:48 - going to have
03:49 - that value it will drive through get
03:52 - window handle
03:53 - so this is a basic difference between
03:54 - the get window handle and get window
03:56 - handles
03:57 - and the next uh method that is used that
04:00 - is the switch to method
04:01 - now if you want to switch from one
04:03 - window to the next window we will use
04:04 - the switch to command that will be
04:06 - driver dot switch to dot window
04:08 - next uh how we're going to implement
04:10 - this is we're going to execute three
04:11 - test cases today
04:13 - the first test case will teach that how
04:15 - to print the value
04:16 - how to print the handle values and we
04:18 - will learn the difference between the
04:19 - get window handle and get window handles
04:22 - the next set of test case will teach us
04:24 - that how to switch and navigate to the
04:26 - other sides
04:26 - also okay and the third test case we
04:29 - will know how to close the browser like
04:31 - the parent window we will close and then
04:33 - we will close the child window how do we
04:35 - do that
04:36 - okay so let's first start with the first
04:39 - test case
04:40 - open your intelligent idea id
04:45 - so this is the uh java class that i have
04:48 - created uh that is a selenium tutorials
04:50 - 14
04:50 - and i have created under the package
04:53 - com.selenium
04:54 - and these are the three basic commands
04:56 - that we always tried first to see
04:58 - opening the chrome browser and
04:59 - navigating to the url and maximizing it
05:03 - okay so
05:06 - first that open a chrome browser
05:07 - navigate to the url this is the new url
05:10 - so i'll simply just copy this and it's
05:13 - i'll paste it over here
05:15 - [Music]
05:17 - and i have to maximize the window next
05:20 - we have to print the parent window
05:22 - handle
05:22 - okay the parent window handle is this
05:25 - this is the parent window handle that we
05:27 - have
05:28 - and these are the child windows okay
05:31 - so we have to print the parent window
05:33 - handles so what you're going to do is
05:34 - i will write driver
05:38 - dot get window handle
05:42 - because i have to print the parent
05:44 - window handle so i'll
05:45 - use the get window handle over here
05:47 - because this returns string so i will
05:49 - store it in a string type of variable
05:51 - i'll name it as
05:53 - parent window handle
05:56 - so string parent window handle is equal
05:58 - to driver dot
05:59 - get window handle next i'm going to
06:02 - print it
06:05 - so i'll write s out the
06:08 - parent and i will write
06:12 - parent window handle okay this will
06:14 - print the parent window handle value
06:17 - next it says that click on the new
06:18 - window button three times
06:21 - that is this one new window button three
06:24 - times for this i will be using the for
06:26 - loop
06:27 - so i'll write for int i
06:31 - is equal to one i less than or equal to
06:34 - 3
06:36 - and i will increment it
06:39 - next i will write driver dot
06:43 - find element by dot
06:47 - x path and i will place the x path over
06:49 - here
06:52 - and what operation do i want to perform
06:54 - is the click operation
06:56 - which is one of the web element command
06:58 - so over here i have clicked three times
07:01 - now
07:01 - let me give some time so that we can see
07:04 - the execution properly
07:06 - now let's execute this now my chrome
07:08 - browser is launched
07:10 - it's navigated it's maximized
07:13 - the window is opened this is the next
07:17 - new window and this is the next one here
07:20 - you can see
07:22 - we have three
07:26 - windows over here okay this is the child
07:29 - window one this child winner two this
07:30 - child window three and this is the
07:32 - parent window
07:33 - so i'll just close this
07:38 - now the next test case says that
07:44 - we have to print the window handles we
07:45 - have to print all the window has a
07:46 - handle so
07:48 - so i will write over here driver
07:51 - dot get window handles
07:55 - now this get window handles returns
07:59 - set so
08:02 - this get window handles returns a set of
08:05 - string type
08:06 - and why set because the get window
08:09 - handles are unique in nature so that's
08:11 - why it's set and i have named the
08:12 - variable
08:13 - window handles and is equal to driver
08:15 - dot get window handles
08:17 - now because i want to print all of them
08:19 - what i'm going to do is i'm going to use
08:20 - the for loop
08:21 - so i'll write 4 and over here because
08:24 - it's of string type so i'll write string
08:28 - and i'll name it as handle next
08:31 - uh the values from which is it's going
08:34 - to store and handle is from the windows
08:36 - handles and
08:38 - here i will print it and now let's
08:41 - execute this
08:44 - so my chrome browser is launched it's
08:47 - navigated
08:48 - [Music]
08:49 - it's maximized the child window is
08:52 - opened
08:54 - the second child window is click the
08:56 - third child
08:57 - window
08:58 - [Music]
09:00 - now let's see their values
09:03 - [Music]
09:05 - here it is the parent window handle is
09:07 - this is the parent window handle
09:10 - this is these are the child window
09:13 - handles and the parent window handles
09:15 - so here you can see there is a
09:16 - difference between get window handle
09:18 - and get window handles the get window
09:20 - handle it returns the window handle of
09:22 - the currently focused window or tab here
09:24 - our currently focus window tab is the
09:26 - parent window whereas the get window
09:29 - handles
09:29 - returns all the windows that is handled
09:32 - or launched
09:33 - including the parent and the child so
09:35 - that's why there are four window handles
09:37 - over here including the parent in the
09:38 - child there's a parent window as well as
09:40 - a child window in this
09:41 - okay which are all dynamic in nature it
09:45 - is having all unique values okay
09:48 - now there's a basic difference between
09:50 - the get window handle and get window
09:52 - handles
09:53 - our next test cases open the chrome
09:56 - browser navigate to the url maximize we
09:59 - have printed the windows
10:01 - parent window handle also we have
10:02 - clicked the new window button for three
10:04 - times
10:05 - then we have to print all the window
10:06 - handles and then we have to switch to
10:08 - windows
10:09 - okay now here comes the switching
10:11 - command that is the driver dot switch to
10:13 - dot
10:13 - window command okay so to switch to
10:16 - windows
10:19 - here i will write so here in the for
10:22 - loop itself first i'm printing the
10:24 - window handles and then i'm switching so
10:25 - first i will print to which window it is
10:28 - and then
10:29 - i'll write driver dot switch to dot
10:32 - window and inside the window i will
10:34 - write handle i have to navigate to
10:36 - google
10:37 - so what i'll do that for that
10:41 - so basically it will switch and then it
10:43 - will navigate to the google
10:45 - so here i will write driver dot
10:49 - get and i will paste the google
10:53 - url over here and i will maximize it
10:56 - driver dot
10:58 - manage dot window dot maximize
11:01 - so let's give the time limit over here
11:04 - i'll write thread dot sleep
11:06 - and i'll specify some time here i'll
11:09 - write driver
11:10 - dot quit so that the browsers are closed
11:12 - my chrome browser is launched
11:14 - it's navigated it's maximized the child
11:18 - window is opened
11:20 - the next child window is opened the
11:23 - third child window is open
11:24 - [Music]
11:26 - next first the parent window will be
11:27 - navigated to google.com
11:28 - [Music]
11:30 - the next child window will be navigated
11:32 - to google and
11:34 - will be maximized
11:36 - [Music]
11:37 - and the next style window will be
11:38 - navigated to google and maximized
11:43 - and you're the third trial window will
11:45 - be navigated to google and it will be
11:46 - maximized
11:48 - [Music]
11:49 - so till now we have learned how to
11:52 - switch and navigate over here on
11:53 - switching and navigating to google
11:55 - okay so this is what we learnt over here
11:57 - the next third case says that we have to
11:59 - learn how to close the windows now here
12:02 - i use driver.quits so it just
12:04 - closed all the browsers including the
12:07 - parent window and the child window but
12:09 - if i use driver.close it will close only
12:11 - the current
12:12 - window handle that is handling okay that
12:14 - is an execution
12:16 - so here
12:19 - what we'll do is now over here currently
12:22 - there is no window
12:23 - in current okay so what we're going to
12:25 - do is we're going to switch first
12:26 - i'll use driver dot switch to window
12:30 - and here i will write the parent window
12:33 - i want to close the parent window first
12:34 - so i'll switch to parent window first
12:38 - i will write driver dot close
12:42 - so while switching let's write thread
12:45 - dot sleep
12:47 - and i will give some time over here
12:51 - okay the first is right we will switch
12:53 - to the parent window
12:54 - and then we will close it
12:57 - next switch back to the other windows
13:00 - and quit the browser
13:01 - now at this point of time there is no
13:03 - focused window
13:04 - after closing the parent window handle
13:06 - there is no focus window so we have to
13:08 - switch back to some window
13:09 - for that i am using a string type of a
13:11 - variable i will name it as last
13:14 - window i will use this variable so what
13:17 - i'm going to do is i'm going to write
13:18 - driver
13:20 - because i have to switch
13:23 - to the other windows
13:27 - i'll write driver dot
13:30 - switch to dot window and i'm going to
13:33 - write
13:35 - last window handle over here and i'm
13:38 - going to use the driver dot
13:41 - quit command now to see the execution
13:45 - properly i'll write thread dot sleep
13:49 - and here i'll give some time
13:54 - here also i'll write thread dot sleep
13:57 - and i'll give some time
14:00 - okay so now let's execute this
14:04 - my chrome browser is launched it's
14:07 - navigated
14:09 - it's maximized and then the child window
14:11 - is opened
14:13 - the next style window is open and the
14:16 - third child window is open
14:19 - now the parent will will be navigating
14:21 - to google.com
14:26 - then my child window will be navigating
14:28 - to google.com and it will be maximized
14:31 - [Music]
14:36 - again the same process it will be
14:38 - navigated to google and can be maximized
14:44 - again it will be navigated to google and
14:46 - it will be
14:47 - maximized
14:48 - [Music]
14:52 - so the parent window is closed first
14:54 - then it is switching to some tab
14:56 - and it is quitting the browser okay
14:59 - so here we have learnt how to close the
15:01 - parent window and how to close the other
15:04 - browsers also
15:05 - so these are the three test cases that
15:07 - we executed the first one we learned
15:09 - that how to print the handle values and
15:11 - what is the difference between the get
15:13 - window handle and get window handles
15:15 - in the next uh test case we learned how
15:17 - to switch and navigate to the other side
15:19 - we were navigating to google and we were
15:21 - switching through driver.switch2.windows
15:23 - command
15:24 - in the third one we learned how to close
15:26 - all the windows first we switched to the
15:27 - parent window we closed it and then we
15:29 - closed
15:30 - the other windows okay so these are the
15:32 - three test cases that we executed
15:35 - next let's cover some interview
15:37 - questions on get window handle and get
15:39 - window handles
15:40 - okay so one of the most frequently asked
15:43 - interview question is that what is the
15:45 - difference between the get window handle
15:47 - and get window handles
15:49 - now the main difference between the two
15:51 - is that the get window handle
15:53 - returns the window value of the
15:55 - currently focused tab that is the parent
15:57 - window handle right
15:59 - whereas the get window handle it will
16:01 - return all the
16:03 - window handles including the parent and
16:05 - the child windows as we have seen in the
16:07 - example
16:08 - now the return type of get window handle
16:10 - is string
16:12 - whereas the return type of get window
16:14 - handles is set
16:15 - because the window handle is always
16:17 - unique and it is dynamic in nature and
16:19 - it keeps of
16:20 - changing okay so that's the reason why
16:22 - it is set
16:24 - so this is the basic difference between
16:26 - the get window handle and get window
16:27 - handles
16:29 - okay so the next interview question is
16:31 - how to switch to another window in
16:33 - selenium
16:34 - now to answer this question i divided
16:36 - the answer into two parts the first
16:38 - is that define the methods of selenium
16:41 - that can be used for handling the
16:44 - multiple windows in an application and
16:46 - those methods are the get window handle
16:48 - and the get window handles switch 2 and
16:51 - window
16:52 - these are some of the methods that will
16:54 - be used
16:55 - to handle multiple windows in an
16:57 - application so explain this first
17:00 - and then explain the steps the steps are
17:02 - similar to the uh
17:04 - test cases that we executed that is get
17:07 - the handle
17:08 - of the parent window by using the
17:09 - command driver.get window handle
17:12 - print the parent window then find the
17:14 - element we found the element through
17:16 - xpath so you can use any of the element
17:18 - locator
17:19 - now open multiple child windows it
17:22 - through the child windows we use the for
17:23 - loop for this
17:24 - now get the handles of all the windows
17:27 - that are currently open
17:28 - using the command driver.get window
17:30 - handles
17:31 - which returns the set while returning a
17:34 - set because it is storing unique
17:36 - values window handles right it is
17:38 - storing unique window handles so that's
17:40 - why it's set
17:41 - then use the switch to command to switch
17:43 - to the desired window that is the driver
17:45 - dot switch to dot window
17:47 - and then close the browser so these are
17:49 - the steps
17:50 - so that uh to handle multiple windows in
17:52 - an application
17:54 - okay okay so the next interview question
17:57 - that is asked is what does the switch to
17:59 - commando
18:00 - now basically the switch to command is
18:02 - used to switch between the windows
18:03 - frames and pop-ups
18:05 - and when we deal with frames and pop-ups
18:06 - at that time we will understand how it
18:08 - works okay
18:09 - so now whenever the web driver launches
18:12 - a new
18:12 - chrome browser it is given a unique
18:14 - alphanumeric value called the window
18:16 - handle
18:17 - and how to switch between the windows is
18:19 - that we use a driver.swisto.window
18:21 - and the handle value is given over here
18:24 - okay so this is what the switch to
18:25 - command do
18:26 - now this is one of the most important
18:28 - question i was asked in an interview
18:30 - this question so that's why i have
18:31 - mentioned this
18:33 - so as soon as you launch a browser
18:35 - window do we get the windows handle
18:37 - value
18:38 - the answer of this is yes let's see this
18:41 - with an example
18:42 - so as the question says that as soon as
18:44 - we launch a browser window do we get the
18:46 - windows handle value
18:48 - so here what i did is uh open the chrome
18:51 - browser
18:51 - i'm launching the chrome browser i'm
18:54 - launching the chrome browser and here
18:55 - i'm printing
18:57 - system.out.printlndriver.get window
18:58 - handle let's see what output do we get
19:02 - you have my chrome browser's launched
19:04 - [Music]
19:07 - it is not navigated because i have not
19:09 - given any url over here
19:12 - and here you can see this is the get
19:15 - window handle i have used the get window
19:17 - handle
19:18 - uh command over here and i can see a
19:21 - window handle over here
19:22 - right so this means that as soon as you
19:25 - launch a browser window we can get the
19:27 - windows handle value there is no need to
19:29 - navigate to a url or something but as
19:31 - soon as you launch the browser you will
19:33 - get the window handle
19:35 - next is it mandatory to load a url to
19:37 - achieve the window handle value
19:39 - no as we have seen in the example
19:42 - here we are not loading any
19:45 - driver.getelement command right we are
19:46 - loading any url over here no right it's
19:49 - it's commented over here you can see so
19:52 - we can still get the window handle so
19:54 - this shows that it is not mandatory
19:56 - to load a url to achieve the window
19:58 - handle value
19:59 - okay this question is something very
20:01 - important
20:02 - so i was asked this question in an
20:04 - interview so that's why i have included
20:06 - this question
20:07 - now if you close the browser and then
20:09 - call the get window handle or get window
20:12 - handles on driver
20:14 - you will get no such session exception
20:17 - stating session id is null using the web
20:19 - driver after calling the quit
20:21 - now basically it says that you open the
20:23 - chrome browser
20:24 - i just launched the chrome browser i did
20:26 - not load the url
20:27 - and i'm quitting the browser then i'm
20:30 - calling the get window handles and what
20:32 - type of exception do i get do i get this
20:34 - exception and what this exception states
20:37 - you will understand that okay now here
20:39 - you can see
20:40 - i have already created this uh example
20:44 - in which i have launched the chrome
20:45 - browser i'm not loading any url i'm
20:47 - printing the get window handle value
20:49 - over here
20:49 - after launching the chrome browser and
20:51 - then again i'm calling driver.get window
20:53 - handles
20:54 - i want to know how many window handles
20:56 - are present over here okay
20:58 - after quitting the browser so let's see
21:00 - what output do we get over here
21:03 - let me execute this
21:05 - [Music]
21:07 - okay
21:12 - now here you can see uh we are launching
21:15 - the chrome browser the chrome browser
21:16 - launched successfully
21:18 - the chrome browser was started
21:19 - successfully then
21:21 - not loading uh we are not loading the
21:23 - url but we are printing the get window
21:24 - handle value over here we got the
21:27 - window handle over here next after
21:30 - quitting the browser we were trying to
21:32 - print
21:32 - the get window handles we were trying to
21:34 - know how many get window handles value
21:36 - present over here for that the exception
21:39 - that we got is
21:41 - no such exception session id is null
21:44 - using webdriver after calling quit
21:46 - this is the exception that we found now
21:49 - see
21:50 - whenever this script is trying to find
21:52 - an element after driver.quit or after
21:55 - driver.close action in the selenium
21:57 - script
21:58 - or after closing or quitting the driver
22:00 - session that is the open browser is
22:02 - closed right
22:02 - and at that time we are trying to find
22:04 - an element so
22:06 - at that time there is no session that is
22:08 - active
22:09 - to find the element the session id is
22:11 - null uh
22:12 - exception is thrown at that time when we
22:15 - find
22:15 - try to find an element after driver.quit
22:17 - or after driver.close
22:19 - okay so this is what the this is what is
22:22 - the meaning of no
22:23 - such session exception and session id is
22:25 - none
22:26 - let's move to the next interview
22:28 - question that is does
22:29 - get window handles method return handles
22:32 - in the same order
22:33 - as the windows is launched the answer is
22:36 - no
22:36 - let's practically implement this now
22:39 - here i have
22:40 - created a html code in which there are
22:42 - links like
22:43 - open google and here there is open
22:46 - facebook and then there's open flip card
22:49 - and then there is open snapdeal okay
22:51 - these are the links
22:52 - now does get window handles measure
22:54 - return handles in the same order as
22:56 - window launches
22:57 - let's find the answer for this so i have
23:00 - already written a code for this
23:03 - in which first we are opening the chrome
23:04 - browser i am navigating to it and then i
23:06 - am clicking on facebook
23:08 - i'm clicking on flipkart i'm clicking on
23:10 - snapdeal i'm clicking on google these
23:11 - are the sites that i'm clicking on and
23:13 - then i'm trying to find a get window
23:15 - handles and i'm printing it
23:17 - with the title so let's see
23:20 - which handle prints first and according
23:23 - to the order this
23:24 - the order should be google facebook
23:26 - flipkart snapdeal this should be the
23:27 - order
23:28 - now let's see the order so here my home
23:31 - browser is launched
23:32 - it's navigated
23:33 - [Music]
23:35 - and here you can see all the browsers
23:38 - are opened
23:51 - okay here the title is get window handle
23:53 - this is the parent window
23:55 - this is the parent window now the online
23:57 - shop online shop site
23:59 - india and this is a snap deal this is
24:02 - flipkart
24:02 - this is facebook and google so basically
24:05 - it's the parent window
24:06 - snapdeal flipkart facebook and google
24:10 - but the order should be google facebook
24:12 - flipkart snapdeal okay so there is a
24:13 - different order
24:14 - so that this means that it is not
24:17 - necessary that the get window handle
24:19 - will method will return handles in the
24:21 - same order
24:22 - okay so the answer to it is no so this
24:26 - is all for today
24:27 - uh we learned some selenium interview
24:30 - questions about the get window handle
24:32 - and the get window handles which is very
24:33 - important and it is frequently
24:35 - asked also and we also learned the
24:37 - difference between the get window handle
24:39 - and the get window handles we learnt how
24:41 - to handle multiple windows
24:43 - we executed some test cases also so this
24:45 - is all for today in the next tutorial we
24:48 - will learn how to handle the drop down
24:49 - menus
24:50 - so please like share and subscribe this
24:52 - video thank you
25:00 - you