00:00 - hello and welcome back to the solution
00:01 - to exercise one part two video so in
00:05 - this previous part we have discussed
00:07 - about problem number one two and three
00:10 - and we have also seen the solution to it
00:12 - so in this video we will be discussing
00:14 - the solution of the question number four
00:16 - and question number five okay so let's
00:18 - just get started
00:20 - let me just
00:22 - Okay so so what is the problem number
00:24 - four sales write a Java program to break
00:27 - an integer into a sequence of individual
00:29 - digits okay so the test data is one two
00:33 - three four five six and the output
00:34 - expected output will be once then space
00:36 - then two then space like that in every
00:39 - digit we have to give one space okay
00:43 - so to achieve this there is
00:46 - multiple ways you in in which you can
00:48 - achieve this okay so as of now I I
00:52 - assume that you you are a new beginner
00:54 - and you have watched till my past videos
00:57 - and you don't know the concept of like
00:59 - arrays and strings yet so we will
01:02 - Implement those in this
01:04 - videos using the concept that I have
01:07 - taught you till now okay so let me just
01:10 - create one Java class okay so let me
01:12 - just give you the name to the Java class
01:15 - as
01:18 - give
01:21 - okay
01:24 - give space
01:26 - okay
01:27 - and I will increase the font size and I
01:31 - will import
01:33 - get that main method in my code
01:36 - so in this
01:38 - problem also we required one input from
01:41 - the user so as of you know we have to
01:44 - import
01:47 - Java
01:49 - dot util
01:52 - dots scanner
01:55 - okay
01:56 - and I have to create one object of that
01:58 - scanner class I will name it as import
02:03 - ant and I will name is news scanner
02:07 - system.in because we are receiving the
02:10 - input from this system
02:11 - okay
02:13 - so first of all I will
02:16 - print one line
02:18 - where I I'll be asking the user for the
02:22 - six non-negative digits okay
02:26 - enter six
02:30 - non
02:33 - okay
02:34 - negative
02:39 - digits
02:40 - okay
02:44 - and I will be storing that inside int
02:48 - very variable named
02:51 - input
02:54 - okay import
02:56 - let me just create input number so that
02:59 - you will
03:00 - not get confused between this variable
03:03 - and this input okay
03:05 - and I will calling input Dot
03:10 - next int
03:13 - so as of now we have received the input
03:15 - from the user and I will I have stored
03:17 - that inside input number variable okay
03:20 - so next step I have to
03:24 - okay so this is the step Where We Are
03:27 - in N1
03:30 - is equals to
03:33 - input
03:34 - divided by
03:36 - 1
03:38 - 1 2 3 4 5 6.
03:43 - mod 10.
03:46 - okay I know you are not getting what I
03:49 - have written here
03:52 - just bear with me
03:54 - I will tell you what I have done here
03:57 - okay so I will just copy it out
04:01 - print it
04:02 - for five times okay one
04:05 - two three four five and each time my
04:10 - variable name should be different here
04:13 - into your N3
04:15 - and four
04:17 - and five and then six and each time I
04:21 - will
04:22 - decrease the number of zeros in this
04:26 - okay
04:27 - so at first I have given zeros as one
04:31 - two three four five five time I have to
04:35 - give sorry I have given the sixth time
04:38 - so here I let me check one two three
04:40 - four five if it's five and then next
04:43 - time I have to give it
04:44 - four zeros one two three four and again
04:49 - next time I have to decrease one zero
04:51 - that is three zero should be there and
04:54 - next time there should be
04:56 - two zeros and then again the next time
05:00 - there should be
05:02 - one zero and at last
05:06 - there will be no modular operation only
05:08 - 10 divided by 10 will be there
05:10 - okay so what I have done here is I have
05:14 - taken the input number from the user and
05:17 - I have divided it by this okay so if if
05:22 - you go on to the Google
05:24 - and search for
05:27 - calculator okay
05:31 - let me just go and search for online
05:35 - calculator
05:38 - okay
05:39 - so what we have done here is we have
05:42 - taken that number
05:43 - so in our case the number is one two
05:46 - three four five six okay so I will just
05:49 - one two three four five six and I have
05:52 - to divide it with this okay
05:55 - so what is that again one two three four
05:59 - five should be there okay so one two
06:03 - three four five with Mod ten okay
06:08 - so if I do this my answer would be so
06:11 - this is the standard calculator so you
06:13 - have to first Define that more in mod
06:17 - operation inside the brackets so that
06:20 - the mod operation get executed first and
06:21 - the result of the mod operation mod
06:23 - operation will be given to the this
06:26 - entire operation where the result will
06:28 - get divided by the input number so here
06:31 - what we are getting is I will comment it
06:34 - out
06:35 - sorry
06:36 - okay I will write one comment here we
06:39 - are actually getting the first digit of
06:41 - the number okay so here we can see where
06:44 - our input is one two three four five six
06:46 - okay so at this line line number eight
06:48 - we are the result of this operation
06:51 - which gets stored inside the N1 is one
06:53 - like that similarly for the second two
06:57 - is going to store for third T is going
07:00 - to store and similarly for fourth four
07:03 - is going to store and five
07:07 - 5 is going to store and inside this 6 is
07:10 - going to you can perform this mod
07:12 - operation inside the calculator
07:14 - but do one thing while performing you
07:17 - just have to put these operators inside
07:20 - a
07:21 - circular basis so that this operation
07:24 - will get performed first and the second
07:25 - operation will be input number divided
07:27 - by that operation result of the
07:29 - operation first okay
07:31 - okay so after this I just have to print
07:35 - those N1 and 2 N3 and for N5 and 6 by
07:38 - giving one simply space inside inside
07:41 - inside it okay
07:43 - I will shout
07:45 - one and one okay so after N1 I have to
07:48 - give one space that is our expected
07:50 - output in the way we want
07:53 - okay so then next N2 will be great
07:56 - printed again similarly entry will be
07:58 - get printed on the console again then
08:01 - plus will be there and 4 will get
08:03 - printed
08:04 - again
08:06 - n of 5 will be get printed
08:10 - and at last and six will get printed
08:14 - okay so I hope this code will run let's
08:19 - see if it get run
08:22 - all right it is asking for the input one
08:25 - two three four five six let me give this
08:26 - input hit enter
08:29 - so here guys you can see
08:34 - the we are getting one two three four
08:36 - five and after that we are not getting
08:39 - six we are getting one two three four
08:40 - five why so because I have done one
08:43 - mistake here as you can guys see input
08:45 - number divided by 10 okay so if I do
08:49 - this divided by 10 the number that I
08:52 - will get is one two three four five
08:53 - because divided by 10 will shift that
08:55 - number from back side okay so here I
08:58 - have done one mistake I just have to do
09:01 - instead of dividing I have to just give
09:03 - mod okay
09:05 - errors are necessary in your code so
09:08 - that you can learn from it okay
09:11 - ah now it's working one two three four
09:14 - five six as expected output let me just
09:17 - give you another input through this code
09:19 - let's suppose one four seven four five
09:21 - six
09:23 - okay you think it's working one four
09:25 - seven two five eight once spaces are
09:27 - there
09:28 - so okay I hope you have understood this
09:32 - fourth question
09:33 - there are more ways to efficiently write
09:36 - this code we'll be talking that after we
09:39 - once we learn string and arrays in Java
09:42 - okay
09:43 - so fifth question is little bit long
09:46 - okay let me write it read it for you
09:50 - okay write a Java program that accept
09:52 - two integer from the user and then
09:54 - prints the sum and difference the
09:55 - product the average the distance the
09:58 - maximum and the minimum from those two
10:01 - numbers so we you are here we you have
10:04 - to perform a lot of operations
10:06 - on those two numbers okay
10:09 - just quickly go into your editor
10:12 - click on the Java class and I will give
10:15 - here
10:16 - since we are performing multiple
10:18 - operation I will give here multiple Ops
10:22 - multiple Ops okay
10:24 - and let me increase the font size also
10:27 - let me get my main method inside here
10:30 - anyway since we are giving getting input
10:33 - from the user I will import
10:37 - Java Dot
10:39 - util Dot
10:41 - scanner
10:43 - okay
10:45 - so now I have to
10:47 - create one object of that scanner class
10:52 - import you know what let me give you
10:55 - another object name this time
10:57 - okay
11:00 - scanner
11:02 - system dot in
11:05 - okay and now I have to get two variables
11:09 - from the sorry two not variables to
11:12 - digit
11:13 - from the number to numbers okay
11:17 - so I will just
11:19 - out here and then ask for the user to
11:22 - enter
11:24 - the first
11:29 - number
11:32 - okay after this I will store that first
11:35 - number inside one variable
11:39 - called first int
11:44 - okay so again SC dot to get receive the
11:48 - input
11:49 - in the integer format we write next int
11:53 - okay so I will copy just this because
11:57 - I will not write that second time
12:02 - here we can write enter the second
12:05 - number and I will give it name as
12:11 - second end okay
12:13 - so at this point we have received info
12:15 - from the user okay so I have to perform
12:19 - operations okay so first operation that
12:22 - we are performing here is
12:24 - what is it sum of two integers is 30. so
12:27 - we have to perform addition operation
12:29 - okay
12:30 - so I will just simply Shout
12:35 - some
12:37 - will be
12:39 - and I have to store that sum means here
12:42 - okay
12:43 - so for that sum
12:48 - okay so let me just create one variable
12:50 - here
12:52 - which will hold that sum okay
12:56 - some
12:58 - so for that sum I have to write first in
13:03 - the second it so this sum variable will
13:06 - hold that value of those addition of the
13:09 - two numbers and I will just concat this
13:13 - line with it
13:15 - okay
13:16 - so first operation we have done
13:19 - second operation that we have to perform
13:21 - is difference of the two integers okay
13:24 - so I have to perform
13:25 - minus subtraction or okay
13:29 - and
13:31 - in Subs substance subtraction you can
13:34 - give any name to that variable okay
13:37 - until an endless it should not be a
13:40 - reserved keyword which is which is in
13:43 - Java okay which we have discussed in
13:46 - fast videos I hope you guys are watching
13:49 - okay
13:50 - here
13:55 - difference will be
13:59 - Okay so
14:01 - difference will be
14:03 - [Music]
14:07 - so difference will be I will contact
14:10 - with
14:12 - Subs okay
14:14 - so the third option operation that we
14:17 - have to provide is product of the twin
14:19 - teachers okay
14:21 - sorry product of this 20 and I will hold
14:24 - that inside
14:26 - one variable name product
14:29 - so for the product we have to multiply
14:33 - those two numbers
14:36 - first hint
14:38 - multiplied by
14:40 - secondhand
14:41 - and again I will just copy it out
14:47 - okay
14:51 - product will be
14:54 - product
14:56 - okay
14:58 - so next operation that we have to Prof
15:02 - perform is average of the two integers
15:06 - okay so for the average here
15:10 - we can
15:13 - do one thing sorry for the interruption
15:16 - okay for the average we can perform
15:20 - addition of those two divided by two so
15:24 - I will declare one variable name in
15:27 - teacher of type in name AVG that will
15:31 - hold my average
15:32 - and in this I will perform
15:36 - first End plus
15:38 - second end divided by 2 so my average
15:42 - will get stored inside the variable AVG
15:44 - and I will just print
15:49 - average
15:51 - will be
15:53 - avt
15:55 - so from here I will not performing this
15:59 - distance Max minimum you guys can do it
16:03 - by your own I have I have shown you the
16:06 - first four operation you can perform all
16:08 - those operation here also okay so let me
16:11 - just run this code okay
16:14 - you should try
16:16 - so let me give the sample input here
16:19 - which is given 25 and 5 okay so first
16:22 - number is 25 and the second number is 5.
16:25 - so here you can see 25 plus 5 is 30 25
16:28 - minus 5 is
16:29 - uh sorry
16:32 - oh
16:34 - I have given minus okay
16:37 - the difference I will
16:40 - run it again
16:43 - 25
16:45 - five and then now he here you can see 25
16:49 - plus 5 is 30 25 minus 5 is 20 25 into 5
16:53 - is 125 and 25 plus 5 is 30 times 30
16:57 - divided by 2 is 15 which is average of
17:00 - those two numbers
17:02 - okay
17:03 - so I hope you have understood these five
17:08 - Pro X5 coding questions and you have
17:11 - tried also by yourself I hope you get it
17:15 - so thank you for watching this video we
17:17 - will be covering
17:18 - another Concept in the next video okay
17:21 - so thank you thank you