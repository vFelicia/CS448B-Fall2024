00:03 - hey everyone so i've always told you
00:05 - that we're going to talk about geometry
00:07 - managers whenever we use back so that's
00:10 - what we're going to do today in this
00:11 - video we will talk about pac grid and
00:14 - place since you have already used back
00:17 - in some of the last videos let's start
00:19 - with the pack widget so from tinter
00:24 - i'll import
00:28 - star then i'll get my window i'll write
00:31 - well
00:33 - equals
00:34 - tk
00:37 - i'll also given a title
00:40 - so i'll write win.title
00:42 - and let the title be geometry managers
00:49 - okay
00:51 - then i'll get the widgets so for the
00:54 - visits i'll get some frames and i'll
00:56 - pack those frames
00:57 - so i'll have my frame one
01:01 - equals frame
01:04 - for the master i'll give window
01:07 - when
01:08 - let the width be 200
01:12 - and height p hundred
01:16 - and let's have the background color to
01:19 - be orange
01:23 - okay
01:25 - now i'll park this frame i'll write
01:26 - frame one dot pack
01:29 - so i'll fill this
01:31 - for both the axes i'll write fill equals
01:38 - both and side equals left
01:43 - expand
01:44 - equals true
01:46 - so this fill and expand is for making
01:48 - the frame responsive as you increase the
01:50 - screen size the frame will expand in
01:53 - both the directions and the side is to
01:55 - place it on left cool so let's have
01:58 - another frame
02:00 - right frame two
02:04 - equals frame
02:07 - when
02:08 - let the width be hundred
02:11 - background color let it be purple
02:15 - [Music]
02:17 - and i'll pack this
02:19 - and i'll given the same arguments as
02:22 - above
02:23 - i'll write fill equals both
02:25 - side equals left expand true
02:28 - okay then i'll call in the main loop
02:31 - i'll write when dot main loop
02:35 - so let's run this and see how the pack
02:38 - works see how the frame works
02:44 - okay so i have this screen and as i
02:46 - expand it on either side
02:49 - if i expand it along x-axis i can see
02:52 - the frames increasing so you can see the
02:54 - two colors purple and orange
02:58 - so that's the rectangular area a frame
03:00 - makes
03:01 - and the packing starts from the left
03:03 - side because we have specified site to
03:05 - be left
03:06 - okay
03:07 - and you can see as i expand the screen
03:11 - the frame size also increases
03:13 - cool
03:17 - so if i want to talk about the place
03:19 - geometry manager it is used to control
03:21 - the precise location of a widget
03:24 - the location it should take up on the
03:26 - window or the frame okay so we can given
03:28 - the coordinates
03:30 - it takes up two arguments x and y so
03:33 - that's the top left corner coordinate of
03:35 - that widget okay
03:36 - so let me write something for it so that
03:38 - you can understand it better i already
03:41 - have tincture imported on my window i
03:43 - also have a title for my window
03:47 - i'll just get another frame to get my
03:49 - button on it
03:52 - or rather i'll get two buttons so let me
03:54 - have the frame i'll write frame equals
04:01 - frame
04:02 - when
04:03 - and let the width be 150 and height p150
04:08 - frame dot pack
04:11 - okay and
04:12 - i'll have my button one
04:15 - so
04:16 - button one equals button
04:19 - and i'll get this button on the frame so
04:20 - i'll given the master to be frame
04:24 - let the text be
04:27 - button at
04:29 - 10 comma 20
04:37 - and let the background color be pink
04:44 - then i will
04:46 - place the button not use back but i'll
04:49 - place it now given the coordinates x
04:52 - equals then
04:54 - y equals 20.
04:57 - so i'll get this button at 10 comma 20
04:59 - coordinate the top left corner
05:02 - coordinate of this button would be our
05:04 - 10 comma 20
05:06 - then i'll get another button button 2
05:10 - equals button
05:14 - frame
05:16 - let the text be
05:18 - button
05:20 - at
05:24 - 40 comma 50
05:27 - and the background color let it be
05:29 - yellow
05:32 - then i'll place this button again
05:36 - at 40 comma 50. so x equals 40
05:40 - y equals 50.
05:43 - and then i'll call in the main loop
05:47 - we'll check this if this works fine and
05:50 - we
05:51 - get the buttons at the defined
05:53 - coordinates
06:00 - now when i run this
06:02 - i have these two buttons at the
06:05 - coordinates so this
06:07 - top left corner is at quarter 10 comma
06:10 - 20 and this
06:12 - yellow one
06:14 - is at 40 comma 50.
06:16 - so that's the coordinates
06:18 - and the buttons are at the specified
06:20 - coordinates
06:22 - so the screen should be seen as a
06:25 - coordinate plane
06:28 - and the buttons are at the specified
06:30 - coordinates
06:32 - so that's how place works now let's talk
06:35 - about grid
06:37 - grid has all the parameters of pack plus
06:40 - it is efficient than place as place
06:42 - needs specific coordinates grid just
06:45 - splits or makes parts of the screen
06:47 - according to the metrics given
06:49 - you'll understand this better if i give
06:51 - you an example so i already
06:54 - have
06:55 - tinker imported and
06:58 - i'll just commend this part
07:01 - first of all if you're talking about
07:04 - grid you need to make that grid so we'll
07:07 - make it just like we make a matrix
07:10 - i'll have two for loops and i'm gonna
07:12 - make a grid of three by three so i'll
07:14 - write for i in range 3
07:18 - for j in range
07:21 - 3
07:23 - frame equals
07:26 - frame
07:28 - master is finn
07:31 - and let me give in a border type
07:34 - so relief equals
07:36 - sunken
07:39 - that's about my frame so for each block
07:43 - or each matrix element i'll get a frame
07:46 - okay
07:47 - now i'll use grid for the frame i'll
07:50 - write frame dot grid so you can see what
07:53 - all arguments we can give for grid we
07:55 - can give the row which is i
08:00 - then column
08:01 - which is equal to j
08:03 - we're given some extra padding
08:06 - along x and y axis both
08:08 - so let it be five
08:11 - that'll look good
08:13 - then i'll get some buttons on these
08:15 - frames so i'll write button equals
08:19 - button
08:21 - and since i want this button on the
08:23 - frame so i'll given master equals frame
08:30 - for text i'll given the matrix elements
08:33 - index
08:35 - so i and j i hope you know this format
08:40 - this is general python then we'll get to
08:44 - packing this
08:45 - button i'll just use pack for this not
08:48 - grid or
08:49 - place
08:50 - i'll simply pack this button
08:53 - so i'll write pattern dot pack
08:56 - i'll give
08:58 - some padding pad x equals five
09:01 - but y equals five
09:04 - so that there is space between
09:07 - each
09:08 - element of the matrix and also there is
09:11 - space between the text and the
09:13 - button
09:15 - and then i'll call in the main group
09:17 - i'll write when dot main loop
09:22 - as you had expand and fill in back you
09:26 - have column configure and row
09:28 - configuration grid
09:30 - i want the buttons to increase in size
09:32 - just as
09:34 - the screen size increases
09:37 - so i'll write
09:39 - when dot column configure
09:44 - so you can see what all arguments it
09:46 - requires
09:48 - so first is the index so of course index
09:51 - is the row all column number
09:54 - then you have min size
09:56 - which will given the minimum size of the
09:59 - row height and column width in pixels
10:02 - okay
10:03 - and then you have weight okay so weight
10:06 - is
10:07 - the rate with which the size of the
10:10 - button or size of the
10:12 - specified widget would increase with
10:14 - what rate
10:15 - so i'll give it to be one i want all the
10:19 - grid
10:20 - elements to increase with the same rate
10:22 - as i increase the screen size
10:24 - okay
10:25 - and i'll given the min size for column
10:28 - configure to be 75
10:32 - then i'll also have row configure
10:36 - so i'll given the index
10:38 - i and weight equals one
10:44 - and the minimum size let it be 50.
10:49 - so we're good to go let's run this and
10:52 - let's see how grid works
10:59 - so you can see that the screen size is
11:02 - not little it's there's a proper grid
11:05 - because we have already specified the
11:06 - minimum size using column configure and
11:09 - row configure there is a specific size
11:12 - of the screen
11:13 - because there is a minimum size of the
11:16 - buttons
11:18 - and when i
11:20 - resize the screen
11:22 - they grow in size automatically the
11:24 - button size doesn't grow but they
11:27 - are rearranged on the entire screen
11:29 - properly
11:33 - so that's it for grid
11:35 - that's it for the geometry managers i
11:38 - hope you understood everything the place
11:41 - pack and grid widgets
11:44 - they are going to be of great help in
11:46 - the upcoming videos
11:48 - so you really need to get a grasp of
11:51 - what was going on throughout this video
11:54 - thank you