00:00 - hello there in the last video we had
00:02 - seen how to import the pandas library
00:05 - and input the data set into the data
00:11 - frame so we had created one data CSV and
00:14 - we had seen how to input different types
00:18 - of data set that is CSV then we had done
00:22 - with Excel and then we had done with
00:24 - text files so in this video series I
00:29 - will be showing you how to create a copy
00:31 - of original data that is creating a new
00:34 - data frame and then I will show you
00:37 - different attributes of that data and
00:40 - how to recognize that and then we will
00:42 - do indexing and selecting the data from
00:45 - a data frame so for this tutorial I will
00:48 - be giving you one more CSV file so this
00:51 - CSV file will contain let me bring that
00:56 - ok this yes we file will contain DEET
00:59 - about cars so this is called Toyota dot
01:01 - CSV in that we have price each kilometer
01:04 - fuel type HP and all those little weight
01:07 - etc so I will also upload this on the
01:11 - github repository so that you can get it
01:13 - easily so what we will do is let's do OS
01:19 - dot this now we don't need to treat the
01:35 - seireitei go down and we'll just from
01:41 - this okay we have to comment it windows
01:47 - you can see toward says we have put in
01:50 - the same directory so now we go down and
01:56 - so what I did after in data frame is
01:58 - two-dimensional data structure which
02:01 - contains rows and columns and these are
02:04 - mutable that is you can change the
02:07 - values of these rows and columns
02:11 - okay now we're also in import numpy so
02:17 - for that just call the port number by
02:21 - its NP so we call NP when we need to
02:26 - call number okay so that is done and now
02:30 - we will just import the data into the
02:34 - toughing so cos theta is our data frame
02:39 - so we'll treat the CSV Toyota dot CSV
02:52 - okay our data frame is right we'll just
02:58 - see values of data frame we will get
03:05 - something like first six values okay so
03:13 - I had Sonya in now I'll let you know how
03:16 - to remove this one name is 0 that is
03:19 - index column so for that we need to
03:21 - question 2 X underscore col2
03:28 - 0 so this is a set prices index problem
03:33 - okay so this one and you can see some
03:39 - missing values out there so in Python
03:46 - throught two ways to create copies one
03:49 - is shallow copy and copy one it's
04:10 - another on its did it go so so what is
04:20 - shallow copy so shallow copy is uh like
04:24 - it only creates a new variable that
04:26 - shares the reference of the original
04:29 - object so we are not creating a new copy
04:33 - we are just erm sharing the reference to
04:35 - the original object and any changes made
04:37 - to a copy of the object will be
04:39 - reflected in the original object as well
04:41 - so if you change this new Signet
04:44 - offering then the original data frame
04:47 - will also change along with that so this
04:50 - is like linking so in UNIX we have
04:53 - something called as symbolic links so
04:58 - there we have hard link and soft linked
05:00 - so this is kind of soft link when the
05:03 - term contains only the reference and if
05:05 - you change the referenced object then it
05:09 - will also change the original data so
05:12 - deep copy is like it's copied in other
05:16 - object with no reference to the original
05:18 - so there is no reference to original and
05:21 - new copy is created from the original
05:23 - data and any changes made to a copy of
05:25 - that object will not be reflected in the
05:28 - original object so original s object is
05:31 - separate and the new object is separate
05:32 - so separate deep copies for this one so
05:36 - how do do shallow copy and how to do the
05:38 - deep copy let me show you so shallow so
05:46 - for shallow copy if we have that now we
05:50 - fix em that is simple click over to we
05:55 - call the data frame and then a big copy
06:00 - function inside that if you pass rate
06:04 - equal to false so we are not doing deep
06:07 - copy so it will be false so what this
06:11 - will do it will create sample and the
06:15 - soft copy or shallow copy
06:18 - if you want to make it as let's say deep
06:27 - copy so you can just make it a truism it
06:37 - will create a deep copy so now you
06:39 - understand what is the difference
06:41 - between deep copy and shallow copy now
06:43 - we can go to the attributes of data so
06:48 - data frame contains indexes so to get
06:54 - the index of row table true labels of
06:56 - the data frame we can do as cars data
07:03 - one okay so what will we do is we'll
07:08 - create a new data frame a deep copy data
07:11 - from so cast it off one and it will be a
07:14 - copy of cos theta and it will be deep
07:18 - copy so that will not change the
07:20 - original data so now what cos theta one
07:24 - is created and now you just pass dot
07:28 - index so if you press Enter you can see
07:32 - around 1 4 3 5 rows are there total if
07:37 - you it short from 0 so it is actually 1
07:39 - 4 3 6 and if you want to see the columns
07:43 - we can do cars data on dot columns so
07:54 - these are the columns why is H cute of
07:57 - your type and they type of that these
08:01 - object ok so just put a comment here
08:13 - and this one is
08:21 - so this chapter is about attributes of
08:30 - data the system and then if you want to
08:35 - see the data frame size so what we can
08:38 - do what we take over our data frame cos
08:42 - theta1 dot size so what this variable
08:47 - does if you show with the size of the
08:50 - data frame it is 1 4 3 6 0 so this is
08:54 - the total number of elements the data
08:56 - frame and if you want to see the
08:58 - dimension operator frame you can do
09:04 - theta1 dot shape what this will do this
09:10 - will show the how many rows are there
09:12 - and how many columns are there I'll just
09:15 - comment
09:17 - and here
09:21 - so this is done now we will see the
09:25 - different memory usage so how many bytes
09:30 - of memory our data frame is using so far
09:35 - they will call the function memory
09:38 - underscore this H and if you press shift
09:42 - enter you can get the memory usage of
09:45 - this column in pipes so price is having
09:48 - all the columns will have same number of
09:51 - alarm by its location so 11,000 for
09:55 - accurate pipes
09:56 - okay so if you want to see the number of
09:59 - exes and error dimension
10:05 - and if you want to see the number of X's
10:08 - and edit image we can do is Zeta 1 dot
10:14 - nd I am okay so if you press Enter
10:18 - so there are two number of X's very
10:22 - dimensions now we will see indexing and
10:25 - selecting data and selecting data so for
10:36 - this we have a slicing operator with
10:39 - Python so it's open and closed it is
10:44 - going so it's open and close square
10:47 - bracket and we have rather one s dot
10:52 - operator these are used for indexing so
10:56 - this is slicing
10:58 - [Music]
11:09 - what this one does is they provide you
11:12 - quick and easy access to pandas data
11:13 - structure so I've already shown you how
11:17 - to get starting six values or five
11:19 - values so you should buy a path like
11:22 - just data 100 score dot eight now you
11:29 - can pass any number of Cal n number of
11:32 - calories here I just pass first ten so
11:36 - it will give you first ten rows so by
11:42 - default it returns first five votes if
11:46 - you want to get last five value you can
11:48 - you scale or that so this is useful for
11:51 - quickly very fine D term after example
11:54 - after sorting or appending rows so now
11:57 - we'll just see how to index and selected
12:00 - a down so if you want to access a scalar
12:03 - value the fastest fastest way is to use
12:07 - the attend IET methods so there are two
12:12 - methods attend IAT
12:14 - okay so what it does is it provides you
12:23 - what's label based lookups okay and what
12:33 - I it does pick points integer based
12:36 - lookup just copy and paste type integer
12:41 - okay
12:42 - this provides integer based lookup so
12:47 - let's see if you want to get fourth
12:51 - label and data type so what we can do
12:55 - the kindest R theta 1.8 so you have to
13:06 - take the slicing operator inside that we
13:09 - have to pass one two three four if one
13:15 - type as where types you can just pass
13:17 - four and then
13:27 - if we do this you will get thistle this
13:31 - is like label based so we can pass a
13:33 - label here along with our value so if
13:39 - you want to do individual based so for
13:42 - that what we can do is cos theta 1 dot
13:49 - item the slicing operator and set
13:55 - okay so it's fourth row sixth column
14:01 - fourth through sixth column yeah
14:06 - and we had done the in table based so
14:11 - inside that for and favorite up fourth
14:14 - row fare type column so inside word very
14:19 - type you have to see forth so it is this
14:26 - value so 2 comma 2 let's see okay so
14:35 - second row second column we got four one
14:40 - seven one one yeah that's good if you
14:43 - want to access a group of rows and
14:44 - columns by labors so for that you can
14:47 - use icing operator so what this can be
14:52 - done using this is you can just pass cut
14:57 - it up hang it I want to cut so we have
15:02 - canvassing justification this is in
15:05 - groups of columns and columns so for
15:07 - that we will take all
15:10 - till few type teams capital okay so for
15:21 - all the rows for all the rows of type
15:26 - few type so all rows of column here type
15:31 - yeah so this how you do a group of rows
15:38 - and columns by labors so this is how you
15:42 - index and select all own data so for
15:45 - that we are hello since then we have at
15:50 - NIIT
15:51 - methods so this is how index and
15:55 - electing it our works on data frames