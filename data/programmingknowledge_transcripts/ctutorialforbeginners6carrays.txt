00:01 - hello guys welcome once again in this
00:02 - video I'm going to show you how you can
00:04 - use arrays in
00:07 - C so what is an array array is a
00:10 - collection of similar data type values
00:15 - which you can store in a single variable
00:19 - so let's see how we can declare arrays
00:22 - in cop and how we can use them so for
00:26 - example you want to declare or you want
00:29 - to have
00:30 - a collection of numbers in a single
00:34 - variable so for declaring the array you
00:37 - can use int as a data type because we
00:41 - want the collection of integer values
00:44 - and then give this square bracket in
00:48 - front of the array and then you give the
00:51 - name of uh the array for
00:54 - example
00:57 - my array and then you initialize it like
01:02 - this is equal to
01:06 - new int and then you give the size of
01:10 - the array whatever number of value you
01:13 - want to save in the array for example
01:17 - four four values you want to
01:20 - save so this is how you declare array
01:24 - this is the data type and this square
01:27 - bracket tells C that this it's an array
01:31 - this is the name of uh the variable
01:33 - array which is which contains int we can
01:37 - see it from here and we initialize this
01:41 - array with the value four so this means
01:46 - that this array will contain four values
01:51 - or can be able to contain four values
01:55 - now to assign value to the array what
01:58 - you can do is you can you can just copy
02:01 - your variable here and you can paste it
02:05 - and in the square bracket the
02:09 - array there is something called array
02:12 - index so whatever you write here inside
02:16 - this square bracket is called the array
02:19 - index and array index starts from
02:24 - zero right so for example I'll
02:28 - write my
02:31 - at index zero is equal to some integer
02:35 - for example three okay in the same way
02:40 - our array can contain four values right
02:43 - so I can just copy this and paste it
02:46 - three more times and I can change it
02:49 - this index to 1 2 3 because it starts
02:55 - from zero so these are four values 0 1 1
03:00 - 2 3 and we can only save four values
03:03 - like this you can also give any other
03:06 - number for example 50 if you want to
03:08 - save 50 values but for this example just
03:12 - use we are just using four values and
03:16 - you can just change these values for
03:20 - example 34
03:23 - 37
03:25 - 65 so in this way you can assign values
03:29 - to the arrays so at the zeroth index
03:34 - this value will be placed at the first
03:38 - index of the array the value 34 will be
03:42 - placed so in this way you can assign for
03:46 - every index a value now in order to
03:49 - print uh the array or print the values
03:53 - in the array or in order to access the
03:55 - values in the array what you can do is
03:58 - you can access it by
04:01 - using console
04:04 - dot
04:08 - write and you can access it directly so
04:12 - inside this bracket just use the name
04:15 - array and whatever index you want to
04:19 - access for example you want to see the
04:22 - value at the index one so just you can
04:25 - give this square bracket and you can say
04:28 - I want to see this value at the index
04:30 - one so we are expecting the answer 34
04:33 - because we want to access the
04:36 - index one of my array right I will run
04:40 - the program and let's see what's the
04:43 - answer yes 34 is the answer right in a
04:48 - similar way you can access this value at
04:51 - the second index which is this one it
04:54 - will show us
04:56 - 37 right now what are the advantages of
05:02 - array advantages of array are whenever
05:07 - you want to store the collection of
05:12 - similar data type values you can use
05:16 - array okay so this uh data type can be
05:23 - double or
05:26 - float or string so any buil-in data type
05:31 - you can use with the
05:34 - array right so it it can be initialized
05:38 - like this string and string so it will
05:42 - be a array of string values so if you
05:46 - declare it like like this now you cannot
05:50 - assign these uh string
05:53 - arrays uh integer values so you need to
05:57 - have something like double codes and
06:00 - then you can
06:02 - assign string values to string array
06:06 - right so just remember if you declare a
06:11 - string array you can only assign string
06:15 - value if you declare in Array or double
06:17 - array you can only assign integer or
06:20 - double values right so Advantage is you
06:25 - can store more than one values in an
06:28 - array so if you have the collection of
06:30 - similar data just save it now the
06:33 - disadvantage of the array is you cannot
06:37 - if you have initialized the array with
06:39 - an index you cannot assign the extra
06:44 - value to an array for example we have
06:47 - initialized our array with four so it
06:51 - can only contain four value if you
06:54 - assign fifth value to the array for
06:57 - example four four and this can be
07:01 - anything then once we try to run the
07:06 - program it will show
07:08 - us the error or exception not at the
07:12 - build time but at the run time so for
07:15 - example I want to access this four and I
07:19 - will run
07:20 - it it will give us the error make sure
07:23 - that maximum index on the list is less
07:26 - than the list size okay so it's giving
07:30 - us this
07:32 - error so this is the disadvantage of
07:36 - using AR you cannot increase the length
07:41 - of the array if you have already
07:43 - initialized it there are other method or
07:46 - other classes in C which you can use
07:51 - which are which works better than array
07:54 - but for now
07:57 - just I want to demonstrate how you can
08:00 - use arrays in cop that's
08:03 - why in this way you can use arrays but
08:06 - in the further videos in the later
08:08 - videos I will show you the better ways
08:11 - of using the collection of similar data
08:15 - uh in C so I hope you have enjoyed or I
08:20 - hope you have understood this concept
08:22 - and I hope you have enjoyed this video
08:24 - please wait comment and subscribe and
08:26 - bye for now