00:00 - hello guys welcome to the next video
00:02 - tutorial on Java programming for
00:04 - beginners in the last video we have seen
00:07 - what does the static keyword do in a
00:10 - Java class now in this video I'm going
00:13 - to give one more example so this uh uh
00:18 - meaning of static will be more clear to
00:20 - you so for example I have a class called
00:25 - student and in this class I have two
00:27 - member variables one is the name of the
00:31 - student which is a string and one is the
00:34 - age of the student which is an integer
00:38 - and I have uh made the getter and Setter
00:43 - functions of
00:45 - this class variables okay so if you
00:50 - don't know how to make it make these
00:52 - getter and Setter function they can can
00:54 - be made automatically so just go to your
00:59 - class and go to source and in Source you
01:02 - will be able to see here generate getter
01:05 - and Setter and in here just select all
01:08 - and click okay and your geter and Setter
01:11 - method for age and name will be
01:15 - generated automatically buy eclipse for
01:17 - you okay
01:20 - so now what I want to do is I will
01:24 - declare a
01:26 - static member variable which will be int
01:30 - and this variable name I will say is the
01:35 - number
01:39 - of students okay and whose value is I
01:44 - will initialize as zero okay and I want
01:49 - to keep uh the record of number of
01:52 - students and I will make it as or I will
01:55 - declare this as static so that uh
02:02 - it can be shared by all the instances
02:05 - okay so
02:08 - static so it's a static member okay and
02:12 - now I'm going to define a Constructor
02:16 - which is same as the name of your class
02:20 - student and here
02:23 - whenever this Constructor is called I
02:27 - want to increase the value of number
02:29 - number of student by one so whenever
02:33 - somebody makes uh or initialize a
02:37 - student class I want to increase the
02:39 - value by one so that we can keep the
02:43 - track of number of students right and
02:47 - for this we are going to make a function
02:52 - to get the value of number of student
02:55 - okay so we are going to make a public
02:58 - function
03:02 - public int and I will say
03:07 - get
03:09 - number
03:12 - of students and this basically is going
03:17 - to return the number of
03:20 - student which is this variable right so
03:25 - number of
03:28 - students return
03:31 - okay so whenever we call this function
03:34 - Let's uh Define this function also as
03:38 - static function so that we don't need to
03:42 - call it by any
03:45 - instance we can call it by the class
03:47 - itself okay now we go to the main class
03:50 - and in here we are going to Define
03:54 - some instances of this student class
03:58 - student for example Mark is equal to new
04:06 - student and once again
04:10 - student Tom is equal to
04:15 - new
04:17 - student right and now we are going to
04:23 - call our get number of students because
04:26 - whenever this Constructor is called we
04:28 - have increased ining the number of
04:30 - student by one right so now we will just
04:34 - write sis o control
04:38 - shift and in here we will call the
04:42 - student class itself because it's a
04:46 - static member function this this is so
04:50 - we can directly call it with the class
04:53 - itself we don't need to use any instance
04:57 - right you can use instance but it's not
05:00 - necessary okay and when we run the
05:04 - program you see the answer is two right
05:10 - so it's shared by your
05:16 - instances so this member variable can be
05:20 - shared by your instances and to um you
05:24 - know verify this we can call
05:31 - these this member function using
05:34 - instances also okay so for example when
05:38 - we add Mark instance and when we call
05:41 - this get number of student by Tom
05:43 - instance then what is the value of uh
05:48 - the the number of students right so run
05:51 - the
05:53 - program and it says first time when we
05:56 - add first student it's value is one
06:00 - that's right because when we added the
06:04 - first student the number of student will
06:06 - be one and when we added second student
06:10 - the number student will be two so this
06:13 - member variable which was static was
06:16 - shared by both the instances and
06:21 - also this can be called by the class
06:25 - itself right so this is uh the very
06:29 - basic and important property of static
06:32 - member that it can be shared by the
06:35 - instances also and you can call it using
06:40 - your class
06:43 - itself so I hope you have understood now
06:47 - the basic concept of static and hope you
06:50 - have enjoyed this video please RIT
06:51 - comment and subscribe and bye for now