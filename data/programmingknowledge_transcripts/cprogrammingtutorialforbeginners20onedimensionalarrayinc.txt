00:00 - hey what's going on guys welcome back to
00:01 - our YouTube channel and welcome to this
00:03 - video this is John from programming
00:05 - knowledge and in this video guys we're
00:07 - gonna learn how to use arrays inside our
00:09 - C program
00:11 - so basically guess we can declare
00:13 - variables to hold single element or
00:16 - single value inside our C program so
00:18 - very simple like this each or in page
00:22 - and then we could assign it to evaluate
00:27 - for example like this so this particular
00:30 - variable will hold the value 5 for a
00:34 - single value file and then it's going to
00:38 - assign to the variable age now what if
00:42 - you want to store like 50 series of
00:46 - values like there are 50 each now what
00:53 - are that we want to say for example
00:55 - there are like 50 persons that we want
00:58 - to save the ages then this particular
01:01 - declaration and statement will not
01:04 - suffice because we're going to like
01:07 - declare it one by one so for example
01:10 - each age 2 and then 6 and then in H 3
01:16 - equal 7 and in age 4 was like 10 and so
01:26 - on so basically guys this is not a good
01:29 - programming practice to declare multiple
01:32 - variables or yeah multiple variables to
01:36 - hold a single set or single type of data
01:39 - so that's why we need the capability of
01:43 - an array so basically guys the array is
01:47 - a data structure in the programming
01:49 - which can store a fixed size sequential
01:53 - collection of elements of the same data
01:56 - type so in this case guys were just you
01:59 - know collecting and saving the same data
02:03 - type of data which is in now what we can
02:06 - do here is we can define an array and
02:10 - then we could set the
02:12 - say for example we want to save 50 ages
02:16 - right and then we can save the age into
02:20 - that particular array so let me show you
02:22 - an example so this is how you can create
02:26 - an array inside your C program so
02:29 - basically the first thing is you have to
02:33 - specify the type of your data that you
02:36 - want to save in that particular array
02:38 - and then the array name so basically
02:41 - this is just like the variable name so
02:44 - you have to label your container and
02:47 - then of course you have to specify or
02:50 - specify the type of data that you want
02:52 - to save in this particular array and
02:54 - then you have to add the square brackets
02:57 - and this signifies that this particular
03:00 - variable is an array and then inside
03:04 - this particular square bracket you can
03:07 - declare the size or you know specify the
03:10 - size or how many values that this
03:14 - particular variable could hold okay so
03:17 - in a typical C program you can do it
03:22 - like this
03:22 - for example the type is int right and
03:25 - then you can say ages or age right so
03:30 - this is the re name and then this square
03:33 - brackets and then you have to specify
03:36 - the size for example five so you want to
03:40 - collect five values or five age five
03:45 - percents okay so then this is the type
03:48 - int you have to specify the type and
03:50 - then you have to specify the re name
03:52 - they be variable name and then of course
03:55 - square brackets and then the size of
03:59 - your array or basically the amount of
04:04 - values that this particular array could
04:06 - hold so after this you can say equals
04:09 - and then you can specify the array or
04:12 - the elements of your array so for
04:15 - example we could take all this values 5
04:18 - 6 7 and 10 so
04:21 - five six seven and ten and for example
04:28 - because our array contains or should
04:30 - contain 5 elements you can add another
04:33 - one here for example 8 or something ok
04:39 - so again this is how you can take an
04:42 - array of values so E is the data type
04:48 - and then of course we have the re name
04:50 - and then square brackets with the size 5
04:54 - for example your array should be 5 and
04:59 - then equals and then the curly braces
05:02 - open and close curly braces and then the
05:05 - actual element value for example in this
05:08 - particular statement we have 5 6 7 10
05:14 - and 8 so that's how you can initialize
05:17 - an array in c program now you can access
05:23 - this particular or this elements or
05:27 - these values by using what we call index
05:31 - so in c programming or any other
05:34 - programming with arrays you can access
05:38 - the values by using index so this index
05:43 - is 0 things 0 based it means that it
05:48 - will start it will start with 0 ok so
05:54 - meaning if you want to access the value
05:58 - 5 so you have to use 0 index
06:02 - okay this will be 0 and then this will
06:11 - be 1 this will be 2 this will be 3 then
06:17 - this will be 4 so again if you want to
06:22 - access or get the value this particular
06:25 - element you have to use 0 value of your
06:29 - index and then one for the 6 2 4 7 3
06:34 - for ten four for eight so let me show
06:38 - you that how that works so for example
06:43 - you want to display the value 6 okay so
06:47 - all you have to do is use the printf
06:50 - statement and then double quotes and
06:54 - then % be the format specifier for our
06:59 - integer values and then comma of course
07:02 - and then use the name of our what we
07:09 - call this our a so ages and then we can
07:14 - specify the square bracket and then
07:17 - index of the element of you want to use
07:20 - the first sample six so we want to use
07:24 - the index 1 for that to be able to get
07:26 - the running on 6 so let's try this build
07:32 - and run our program so as you can see
07:35 - the output is 6 as you can see here 6
07:40 - right now if you want to get the value
07:42 - then you have to use the index 3 for
07:49 - that because I as I said the value in
07:53 - the index 3 of our particular array so
07:58 - field and run our program and it should
08:01 - output the value 10 which sits on the
08:06 - index 3 of our array so that's how you
08:09 - can access the value for moir√© now super
08:13 - example you want to change the value of
08:15 - this array right so we have here 5 6 7 8
08:19 - or 5 6 7 10 and 8 and then if you if you
08:22 - want to change the value of super
08:25 - example this one find the first element
08:27 - all you have to do is specify the index
08:30 - also so leave this
08:42 - find student : let's depart you just so
08:49 - for example we want in this place what
08:52 - will be the value of our index zero so
08:57 - we could test that by using the printf
08:59 - statement and then instead of three you
09:02 - can specify the value zero or index zero
09:06 - here so let's try this field and run and
09:10 - as you can see here instead of five the
09:13 - initial value of our index zero
09:18 - it returns eleven because we assigned it
09:22 - or we modify it by using element or
09:25 - index zero equal to KI eleven riches
09:30 - that's why we are getting the eleven
09:33 - value here now this is particularly
09:36 - useful guys or if you want to work with
09:38 - the array one of the best start for the
09:44 - best statement that you could use to
09:46 - write array the array is by using the
09:49 - for loops or loops inside our C program
09:52 - so we could say this here for example
09:55 - for so we're gonna use the for loop
10:00 - statement here and we can specify for
10:02 - example int index equal to zero
10:08 - do you want to start with zero because
10:11 - as I said the index of our array is zero
10:14 - base it will start with the zero number
10:18 - okay so index equals zero and then see
10:22 - me : and we're going to say here here
10:25 - index less than the actual value of our
10:32 - array or the size of our array so five
10:36 - less than five so another semicolon and
10:41 - then index less was okay and inside the
10:47 - for loop we could display the element of
10:50 - our array so we could use this printf
10:53 - statement
10:55 - and then we could use the index variable
10:59 - here and then change this you could say
11:05 - index equals percent D D format
11:13 - specifier and then you could say equal
11:19 - to percent B and then of course the
11:24 - actual value of our array index so in
11:29 - here we could specify the index okay so
11:32 - it should display the index current
11:36 - index and then it should display the
11:38 - actual value of that particular index so
11:43 - we could give it and run our program
11:46 - that we add first the backslash N or
11:50 - newline step sequence new line and then
11:56 - it should display this particular output
11:59 - so at index 0 we have the value 11 at
12:04 - index 1 we have the value 6 right index
12:09 - 0 is 11 because we already modified our
12:13 - array specifying the array or index 0
12:17 - should be equal to 11 and then at index
12:20 - 1 equal to 6 right here index 2 should
12:24 - be equal to 7 index 3 is then index 4 is
12:28 - 8 okay so that's how easy for us to
12:31 - access and change the value or array and
12:35 - that's how we can define our entire I
12:39 - mean single dimension or one dimension
12:44 - array inside our C program and in the
12:47 - next video guys we're going to talk
12:48 - about two-dimensional and
12:50 - multi-dimensional arrays inside our c
12:53 - program so I think that's all there is
12:54 - very nice for in this tutorial if you
12:57 - have questions please let me know in the
13:00 - comment section do you know so then guys
13:01 - thank you for watching and see you in
13:03 - the next video