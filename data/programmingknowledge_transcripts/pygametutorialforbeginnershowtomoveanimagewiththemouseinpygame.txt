00:00 - hey everyone we have covered a lot in pi
00:03 - game by now but there are some modules
00:05 - that are useful and are yet not
00:07 - discussed
00:08 - so in this video first we'll see some
00:10 - examples of draw module we haven't used
00:13 - the polygon and arc function yet and
00:16 - then we will talk about the cursor
00:17 - module we will also discuss a program
00:20 - that will be a base requirement in some
00:22 - of the video games
00:24 - so let's get started with the draw
00:25 - module
00:27 - i have this regular code a very basic
00:29 - one and if i want to draw a polygon the
00:32 - coordinates of the polygons vertices are
00:34 - required
00:35 - these coordinates make a regular
00:36 - pentagon
00:38 - here the screen is the surface you want
00:40 - to draw on and green is the color of the
00:42 - shape
00:43 - you can give as many coordinates as you
00:45 - want and it is not necessary that the
00:48 - shape should be regular
00:51 - then to draw an ellipse you will give in
00:53 - the rectangles dimension and coordinates
00:55 - around which you want to draw the
00:57 - ellipse
00:58 - in case you specify a square's dimension
01:00 - in place of a rectangle you will end up
01:02 - getting a circle this is basic maths
01:05 - you can also draw an arc using the draw
01:07 - module for that you have to specify the
01:09 - rectangle's dimension
01:11 - basically an arc is from an ellipse or a
01:13 - circle so to draw an ellipse we
01:15 - specified the base rectangle's
01:17 - dimensions
01:19 - and hence to get its arc we will do the
01:21 - same cool
01:23 - along with this we also need to specify
01:25 - the starting and ending angles these
01:27 - angles are in radians it is 90 degree to
01:30 - 180 degree
01:31 - please be careful while working with the
01:33 - units
01:35 - while rotating an image
01:37 - the arguments of angles were in degrees
01:40 - okay
01:41 - please don't get confused
01:43 - now we have used the line function in
01:45 - tic-tac-toe but this is the lines
01:48 - function it allows you to draw
01:50 - continuous lines deviated or undeviated
01:52 - passing through these mentioned points
01:55 - five here is the thickness of the line
01:57 - this false here is used for
02:00 - not getting a closed figure if i make
02:02 - this true
02:03 - i would have a closed figure if possible
02:06 - now let's run this and see if we get the
02:10 - desired shapes
02:14 - so yeah i have my polygon
02:18 - i have the pentagon
02:20 - i have this zigzag lines made by the
02:23 - lines function i also have my ellipse
02:26 - and i also have my arc you just need to
02:28 - know that the arc was taken in an
02:30 - anti-clockwise direction from 90 to 180
02:32 - degrees
02:34 - and yeah that's pretty much it
02:36 - now let's move on to the cursor module
02:40 - so we have three types of cursors the
02:42 - system cursor bitmap cursors and color
02:45 - cursors the system cursors are constants
02:48 - available in the module we can have
02:50 - cursor hand cursor no arrow crosshair
02:53 - and a lot more there's a complete list
02:55 - of it
02:56 - and this is how you create a system
02:58 - cursor
02:59 - to create a bitmap cursor you specify
03:03 - dot pygame.cursor.arrow
03:04 - or dot broken underscore x or diamond
03:07 - this would be a black and white cursor
03:09 - that uses the bit mask arrays
03:12 - and to create a colored cursor you need
03:14 - a surface so we have a surface of size
03:17 - 10 comma 10
03:19 - we fill the color of the surface with
03:20 - sky blue or any color you like it's the
03:23 - color of the cursor
03:24 - and then you use the cursor class you
03:27 - may note that this cursor class of
03:29 - cursors module is a good example of
03:32 - object oriented programming
03:35 - this 5 comma 5 is the hotspot of the
03:37 - cursor and needs to be within the
03:39 - surface
03:40 - cool
03:41 - i have initialized the system cursor and
03:44 - this is just a way to see both the
03:46 - cursors if i click on the mouse i would
03:49 - see the bitmap cursor and if i input
03:51 - alphabet c from the keyboard i get to
03:53 - see the colored cursor so this was the
03:56 - cursors module it was pretty simple
03:58 - let's run this and see the three cursors
04:03 - so initially i can see my hand cursor if
04:06 - i click on the mouse i see this broken x
04:08 - which is a bitmap cursor
04:11 - and if i input c from the keyword i see
04:14 - my colored cursor cool
04:17 - so these were the type of cursors
04:19 - and
04:21 - now let's see the program i was talking
04:22 - about in the beginning of the video
04:31 - so this program lets you move a picture
04:33 - along your cursor and it is very useful
04:36 - when you want to move a figure in a
04:37 - video game using mouse
04:39 - so for that you would need to load the
04:41 - image we have done this many times now
04:44 - it should be easy to understand and then
04:46 - i have my rectangular object for my
04:48 - image
04:49 - i have this moving boolean to save the
04:51 - cursor state
04:53 - now in the events loop if my event type
04:55 - is mouse button up like i have released
04:58 - the mouse
04:59 - moving becomes false
05:01 - if it is mouse button down then moving
05:03 - is true and i would check if the events
05:06 - position my cursor is inside the image
05:08 - surface that is the wrecked object
05:12 - and
05:13 - if the mouse touch is in motion and
05:15 - moving is true i would move my
05:17 - rectangular surface along with my cursor
05:20 - or mouse that is my event
05:22 - so if i run this i should see an image
05:24 - that would go that would move along my
05:27 - cursor let's see if that happens
05:31 - so yeah i see my
05:33 - image moving along with my cursor as i
05:35 - move the cursor the image
05:37 - moves along with it
05:39 - and this is very similar to the moving
05:41 - object program that we did but that time
05:43 - we took inputs from the keyboard this
05:45 - time it's the mouse we are using
05:48 - and that time we used a figure we made
05:51 - our own figure
05:53 - using the draw module
05:55 - the time we are moving an image and we
05:58 - have loaded an image
06:00 - so this was pretty much about this video
06:03 - thank you