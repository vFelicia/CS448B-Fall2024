00:00 - hey everyone Teamster offers great
00:03 - modules and that's what we are gonna
00:04 - talk about today while using a class and
00:07 - thinker the module first assembles a TCL
00:09 - or TK command string
00:12 - now the tinted package is the standard
00:14 - python interface to the TCL or TK GUI
00:17 - toolkit
00:19 - tclrtk is not a single library but a
00:21 - collection of various modules if you're
00:23 - not familiar with the TCL or TK I will
00:26 - just write down the architecture briefly
00:28 - for you
00:29 - so TCL
00:32 - is a
00:34 - Dynamic interpreted
00:37 - Dynamic interpreted programming language
00:39 - just like python it is another
00:41 - programming language which is written in
00:43 - C it is most commonly embedded into C
00:46 - applications we talked about this last
00:47 - time that TCL is mostly written in C
00:52 - then comes TK TK is a TCL package
00:56 - implemented in C
00:57 - so what is the ktk is a TCL package
01:02 - it is used to add custom commands to
01:04 - create and manipulate UI visits
01:07 - okay
01:09 - then we have theme TK or we can call it
01:12 - ttk it is a newer family of TK widgets
01:18 - it provides a much better appearance
01:22 - so this was all about the architecture
01:25 - now about the modules available in Tick
01:27 - Tock we would talk about some useful
01:29 - modules and to get a better idea of how
01:32 - they work we will see some examples too
01:35 - now ttk is very important as a module so
01:39 - it provides you upgraded widgets so the
01:41 - widgets here are upgraded and the main
01:44 - dictator module okay we can also talk
01:47 - about the color Chooser module which
01:50 - lets you choose a color indicator
01:53 - to just show you how it works I'll write
01:55 - a piece of code
01:57 - now I'll import into
02:00 - I'll write from thinker import ttk
02:05 - and I'll import things here dot color
02:07 - Chooser that's the module I was talking
02:10 - about
02:12 - then I'll declare the window container
02:14 - I'll write when equals sphincter.tk
02:18 - we did this in the last program
02:22 - I'll also given a title
02:25 - let the title be Tinker color chooser
02:31 - then I'll Define the change color
02:33 - function
02:35 - I'll write F change color
02:37 - don't worry if you don't understand what
02:39 - is happening in this program it's
02:42 - completely fine because we have not
02:44 - discussed any of it
02:45 - I am just writing this as an example to
02:48 - just show you what the colors user
02:50 - module can do then I'll Define this
02:55 - function I'll write Colors equals Center
02:57 - dot color chooser.ascolor I use the ask
03:00 - color function
03:03 - and then I'll configure I'll write
03:05 - win.configure PG equals color one
03:12 - now to column this function I'll make a
03:14 - button
03:16 - I'll write ttk dot button
03:18 - so I've used the ttk module button and
03:22 - not the regular one
03:24 - and I'll call in the window I'll
03:27 - write the text pick color and
03:30 - the command would be change color I'll
03:32 - call in this function and then I'll pack
03:34 - this
03:36 - then I'll call in the main Loop cool
03:38 - so what I have done is I've made a
03:41 - button
03:42 - which when clicked will call in this
03:44 - change color function and you'll be
03:46 - asked to pick a color and it will change
03:48 - the background color to that color cool
03:51 - so let's run this and see if we can
03:55 - change the background colors
04:01 - so I have the screen let me resize it
04:05 - and I'll pick a color click on this
04:08 - button so I have this new window or a
04:11 - pop-up box you can say I'll pick any
04:13 - color and select okay
04:17 - and I have it as the background color
04:19 - you can even change this color
04:22 - let me pick another color
04:24 - click OK and I have different shade cool
04:28 - so that's what tincter color Chooser
04:31 - module can do
04:34 - now if we talk about the other modules
04:37 - that we have we can talk about common
04:39 - dialogue module so basically we have
04:42 - many modules to create dialogues in data
04:44 - this module is the base class for
04:46 - getting dialogues
04:48 - we can also have file dialog it is used
04:50 - to get dialogues to save or open the
04:53 - specified file we have SIMPLE dialogues
04:56 - for the dialogues
04:58 - we can also have font module so it is
05:02 - used for writing fonts
05:05 - I'll just show you an example how we do
05:07 - that
05:09 - so I'll just comment this piece of code
05:11 - and okay I'll declare a variable Let It
05:15 - Be Georgia
05:17 - equals TK font
05:20 - dot font
05:23 - and family equals Georgia size 30 weight
05:28 - bold that's how you declare a font
05:32 - and you can declare a lot of things I
05:35 - have declared the family size and weight
05:37 - you can even declare if it needs to be
05:40 - slant if it needs to be italic or Roman
05:43 - or if it needs to be underlined
05:46 - or if it needs to be over struck you can
05:49 - even do that
05:51 - then
05:52 - we can have other modules like the
05:55 - message boxes so I'll just write down
05:58 - something for that too
06:00 - I import painter
06:04 - and
06:05 - from Tinker I'll import message box
06:10 - okay I'll just Define another function
06:13 - so I'll write Def
06:15 - dialogue
06:17 - message box
06:19 - dot show error
06:21 - answer
06:23 - sorry no answer available
06:26 - okay and then I'll again declare a
06:29 - button
06:30 - ttk dot button text equals answer
06:36 - and I'll call in the main Loop
06:38 - right
06:39 - so let's see what we get
07:11 - so I have my screen and let me resize it
07:15 - again
07:18 - and I'll click on this answer button
07:21 - so I get a pop-up
07:23 - it says sorry no answer available and
07:26 - I'll click on OK and I'll exit the
07:29 - screen so that's what we have
07:32 - when we use the message box module
07:35 - we can talk about many more modules in
07:38 - thinker we have scrolled text module so
07:41 - we can get a text widget with a vertical
07:43 - scroll bar
07:44 - it's all built in
07:47 - we have idle lib module constants module
07:51 - DND module text module we also have
07:54 - total module it's a very powerful GUI
07:56 - with great applications
07:58 - and I'd really like you to check out the
08:01 - total module because it's really amazing
08:03 - and you can do a lot with total 2.
08:06 - that's pretty much it about the modules
08:09 - indenter thank you