00:01 - hello and welcome back to another video
00:03 - without real series so today we will be
00:04 - covering Constructors in Java so
00:07 - whatever Constructor in Con in Java a
00:09 - Constructor is a block of course uh
00:11 - similar to the method it is called when
00:14 - the instance of the class is created uh
00:17 - that means whenever the whenever create
00:18 - an object The Constructor will get
00:20 - automatically called okay at the time of
00:23 - the calling of the Constructor memory
00:24 - for the object is allocated inside the
00:26 - memory
00:27 - okay whenever we create an object the
00:31 - memory is get allocated to that class
00:33 - inside the memory okay and the rules for
00:36 - the configurating a Constructor in Java
00:39 - there are there are two rules defined
00:41 - for the Constructor Constructor name
00:43 - must be same as as that of the class
00:46 - name uh let's suppose you have created
00:50 - one class name
00:52 - ABC
00:54 - okay
00:55 - ABC
00:58 - and inside that class if you want to
01:01 - declare the Constructor for that class
01:04 - then the Constructor should be a b c and
01:07 - the other constructory accepted in the
01:09 - parameter it depends upon you and inside
01:12 - this you will write code for that
01:15 - Constructor okay
01:18 - construct
01:22 - goes here
01:27 - you will see in our coding part also uh
01:30 - in detail
01:31 - and second second rule is a Java
01:34 - Constructor cannot be abstract static
01:36 - final or synchronized you cannot cannot
01:40 - use these keywords before declaring The
01:42 - Constructor like abstract a here you can
01:45 - see abstract ABC final ABC static ABC
01:48 - this is not allowed in Java you have to
01:51 - if you want to create a Constructor for
01:53 - that class simply write the class name
01:55 - and inside the circular circular basis
01:57 - you will write the parameter that
01:59 - Constructor is accepting
02:02 - okay so there are basically two types of
02:04 - Constructor in Java one is default
02:06 - Constructor and one is uh parameterized
02:09 - Constructor so let's first see what is
02:12 - default Constructor and let me get into
02:14 - my IDE and I will create one new Java
02:17 - class
02:18 - name Constructor
02:22 - let me increase the font size I will
02:25 - write main method here okay uh I will
02:28 - declare one another class
02:32 - class ABC I will get that example itself
02:36 - and inside this if I want to create one
02:40 - default Constructor one default
02:43 - Constructor is nothing but
02:45 - a Constructor that is called default
02:46 - when it doesn't have any parameter okay
02:49 - so if I write this like this
02:53 - and if I inside this if I write out
02:58 - hello
03:00 - World okay so here you can see over we
03:04 - have declared one Constructor for that
03:05 - ABC class and inside the circular basis
03:09 - we have not passing any parameter to it
03:11 - okay so this is this is an example for
03:13 - the default Constructor to invoke this
03:16 - Constructor we will simply go in our
03:18 - main method and create an object for
03:20 - this class okay one thing I am missing
03:23 - naming convention in Java class name
03:25 - should always start from the capital
03:27 - letter
03:29 - ABC okay now it's correct uh if I want
03:33 - to create an object
03:34 - as we have discussed in our previous
03:36 - video uh if you want to create an object
03:39 - simply write the class name and write
03:42 - the object name that you want new ABC
03:47 - and inside here I'm not passing any
03:50 - parameter because the Constructor of
03:51 - that class doesn't uh accepting any
03:54 - parameter okay uh in new line I will
03:56 - just
03:57 - now I will not do anything I will just
04:00 - create that object and simply run this
04:03 - program
04:04 - now here you can see
04:07 - in console hello world is getting
04:09 - printed okay why this is so because we
04:12 - are able to create an object of the
04:17 - okay so now we will look into the
04:19 - parameterized Constructor so Constructor
04:22 - which has a specific number of the
04:23 - parameters is known as The parameterized
04:25 - Constructor
04:26 - and we will see one example of the
04:29 - parameterized Constructor over here and
04:33 - okay
04:35 - and let me give you an example
04:39 - if I write like this okay so if I write
04:42 - integer a
04:44 - command T sorry
04:48 - integer B
04:50 - okay now here you can see a intelligent
04:54 - idea is throwing error because it was it
04:57 - was telling me expected two arguments
04:59 - but found zero now this is this is this
05:01 - is the example of the parameterized
05:02 - Constructor where the Constructor of a
05:04 - class is accept accepting one
05:06 - better some parameters and we need to
05:09 - pass that parameter in inside there uh
05:12 - Constructor when we whenever we create
05:13 - an object of that class okay
05:15 - now I will pass here something 15 sorry
05:20 - 15
05:23 - comma 20. okay uh it uh this Constructor
05:27 - is accepting two integer values and I
05:29 - have passed 5922 The Constructor okay
05:32 - and inside this Constructor we will be
05:34 - doing some operation using that uh two
05:37 - integers let me just print
05:41 - a plus b
05:45 - and print
05:47 - a minus B
05:53 - print
05:54 - a into B
05:58 - print
05:59 - a divided by B these are some basic
06:01 - operation math mathematical operation
06:03 - that I have performed here uh the
06:05 - purpose of telling this is uh whenever
06:07 - you create an object or the the
06:08 - parameterized Constructor though we have
06:10 - to pass that parameters to that
06:12 - Constructor there itself and the
06:15 - Constructor will get those parameters
06:18 - values and process the information
06:20 - according to this
06:22 - okay and now if I run this
06:25 - it will print me
06:27 - okay so here you can see 20 plus 15 is
06:30 - 35 uh a minus B that is 15 minus uh 20
06:33 - is minus five or a into B is the 20 into
06:37 - 15 C uh 300 and uh a divided by a
06:40 - divided by B uh 15 divided by 20 is uh
06:43 - it is giving me zero because I have uh
06:46 - both the variables are in integer and
06:48 - and such is always coming if the both
06:50 - operators are integer answer is also
06:52 - coming in integer itself okay so this is
06:55 - pretty much about the default and
06:57 - parameterized Constructor uh let me
07:00 - check if I'm missing something okay uh
07:03 - we have to see one difference of between
07:05 - the Constructor and methods because
07:08 - here you can see the Constructor is not
07:11 - different pretty much different from the
07:13 - method because we in method also we
07:16 - would write the return type and if I
07:18 - write a b c
07:21 - and this is the con this is our method
07:24 - there is no difference between this
07:27 - method and Constructor so let's see the
07:30 - difference
07:31 - a constructory is used to initialize the
07:33 - state of an object and whether the
07:35 - whereas the method is used to expose the
07:37 - behavior of an object okay and the
07:40 - method must have a return type the
07:41 - Constructor must not have a written time
07:43 - here you can see we didn't write any
07:45 - written statement for the Constructor
07:47 - and for that method we have to write the
07:50 - return statement unless and until the
07:52 - method method written type is void okay
07:55 - and the Constructor is invoked
07:57 - implicitly implicitly because whenever
07:59 - we create an object we we don't writing
08:01 - any uh like this obj dot ABC we are not
08:07 - writing like this this is this is we are
08:10 - writing only for the methods okay and
08:13 - methods are called using this
08:16 - object name okay the methods invoke
08:19 - explicitly in Java compiler provides a
08:21 - default Constructor if you don't have
08:23 - any Constructor in the class uh and and
08:26 - the method is not provided by the
08:27 - compiler in any case the Constructor
08:29 - must have the same name as that of the
08:31 - class name here you can see ABC is there
08:34 - and Constructor name is also ABC and the
08:37 - method name may vary a way may or may
08:40 - not be same as the class name you can
08:42 - write it as same as the class name or
08:46 - you can give any name whatever you want
08:48 - okay
08:49 - so this is pretty much about the
08:50 - difference between the construction
08:53 - method and in our coming video we will
08:55 - be discussing about
08:57 - static and disk keyword in Java thank
09:00 - you for watching this video