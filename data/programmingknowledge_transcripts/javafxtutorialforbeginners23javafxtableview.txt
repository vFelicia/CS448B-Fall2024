00:00 - hello guys welcome to the next video on
00:02 - javix tutorial for beginners in this
00:04 - video we will see how to use tables
00:07 - using table view in Java effect and for
00:10 - this we are going to use properties
00:12 - which we have learned in the previous
00:14 - videos to populate our table view so if
00:18 - you uh don't know how to use properties
00:21 - just watch uh that video first on
00:23 - properties and then watch this video so
00:27 - let's get started I have created a
00:29 - project called table View and in the
00:32 - application package I have this main.
00:35 - Java class where I have added this code
00:38 - to uh you know call our main. fxml file
00:43 - I have this main. controller class which
00:46 - is blank right now and I have this main.
00:49 - fxml file which is also blank right now
00:52 - okay so I think you know how to uh you
00:55 - know create these files now next what
00:58 - I'm going to do is first of all
01:00 - for example I want to create a table of
01:03 - student information so student can have
01:07 - his ID name surname and age and I want
01:10 - to populate uh this data on a table view
01:14 - so how do I do that so first of all for
01:17 - that I'm going to create a new class
01:21 - which I will name it as student okay so
01:25 - first uh class name is student and click
01:29 - finish and this will create this student
01:32 - class and in here first of all I will
01:34 - create four variables first will
01:38 - be
01:40 - private final integer and this will be
01:45 - the ID of the student okay in a same way
01:48 - I will declare three more variables for
01:51 - name surname and age okay so this will
01:55 - be string variable and this will be our
01:59 - name
02:00 - variable and then third variable will be
02:03 - the
02:05 - surname and the fourth variable will be
02:08 - the age and the surname is string here
02:13 - okay so because we have declared them as
02:17 - a final we need to initialize these
02:20 - variables so let's right click on this
02:24 - class and then go to source and then we
02:28 - are going to select this op option which
02:30 - says generate Constructor using Fields
02:34 - okay so select this option which says
02:36 - generate Constructor using fields and
02:39 - select all the fields and then click
02:41 - okay and it's going to generate this
02:44 - kinds of Constructor with all the field
02:47 - names and it's setting all the values
02:50 - like this okay now next what we are
02:54 - going to do is let's transfer this
02:56 - variable at the top so all the variables
02:59 - are are at the same place right now
03:03 - second thing what we are going to do is
03:04 - we are going to declare the gets for
03:08 - these variables right so right click
03:11 - once again on your class and then go to
03:13 - Source once again and this time choose
03:16 - generate Getters and Setters okay and
03:20 - then select all and then click okay and
03:23 - it's going to generate only gets because
03:26 - we are already setting the values of
03:29 - these variable
03:30 - using the Constructor right now after
03:34 - doing all this we will change our
03:37 - variable data type to simple integer
03:41 - property and simple string property I
03:44 - have used this integer and string
03:46 - earlier because I wanted to generate
03:49 - this Getters and Setters for this class
03:52 - so uh it's easier to uh you know
03:55 - generate these Getters and Setters using
03:57 - these data types right after after
03:59 - generating your Getters and Setters you
04:02 - can change this data type to simple
04:05 - integer property for ID and age and for
04:11 - the surname you can uh use uh simple
04:15 - string property okay so for surname and
04:20 - uh name you will use Simple string
04:24 - property right so we have done that now
04:28 - uh you can see it's showing this error
04:31 - and this error says change to the ID uh
04:36 - data type so we need to cast this ID to
04:40 - uh you know simple integer property so
04:42 - what we can do we can use new then
04:45 - simple integer property and in the
04:47 - brackets just enclose this ID right same
04:52 - you can do for the age so let's do for
04:56 - the age and we can do do the same for uh
05:01 - these names and surnames right so just
05:04 - enclose it like this and for the surname
05:08 - also enclose it like
05:11 - this and we forgot this new keyword here
05:16 - okay so like this now if you remember to
05:20 - access a simple integer property or
05:23 - simple uh string property we need to
05:26 - have the method called get on the
05:29 - variable right so here it's showing this
05:32 - error because we need to add this method
05:35 - called get on this ID variable right so
05:39 - just write dot get okay so add after
05:43 - every uh variable name doget method and
05:46 - it's going to get you the value of uh
05:49 - this property okay so this is our
05:52 - student class which we are going to use
05:55 - to populate our table view okay now once
06:00 - this is done we are going to go to our
06:03 - controller. Java class which is main
06:06 - controller. Java and first of all we
06:08 - will uh Implement here
06:11 - initializable and then you just add the
06:15 - unimplemented methods here which is
06:17 - initialize and now I'm going to declare
06:21 - first of all atate
06:24 - fxml and then private table view so just
06:28 - call table view variable from here and
06:31 - it takes uh the template variable right
06:35 - so we want to uh you know create a table
06:38 - of students right so just call the
06:41 - student class which we have created
06:45 - recently in these uh angle brackets and
06:48 - then give the name to your table for
06:51 - example I give the ID as a table itself
06:55 - okay now every table has its column on
06:59 - also so we are going to create four
07:02 - columns in the table and instead of
07:04 - using table view we will use table
07:08 - column now okay so just use table column
07:12 - and paste it four times here and this
07:15 - takes uh two uh template argument one is
07:19 - the class name and second is the data
07:22 - type so the ID data type was integer
07:26 - right so just write integer here and
07:30 - then give the name to your table column
07:33 - variable which is ID for the First
07:35 - Column right same we will do for the age
07:39 - column so just name it as age and this
07:43 - will be the name column and second will
07:47 - be the surname column right and just add
07:52 - this string data type
07:54 - here and to the
07:57 - name also okay so we we have declared
08:00 - one table view variable and four table
08:04 - column variables with the column names
08:07 - right now next what we are going to do
08:11 - is we are going to declare a observable
08:14 - list so declare uh
08:19 - public observable
08:23 - list and name it as list so this is the
08:26 - list of students right so it will also
08:30 - take uh this uh template variable which
08:33 - is student in our case because we have
08:35 - uh created this student class and name
08:38 - it as list is equal to FX collection so
08:43 - just write FX collection dot then call a
08:48 - method called observable array list here
08:52 - and then close it and inside this
08:55 - Constructor brackets we will uh you know
08:59 - add add some uh data to our list so
09:03 - because it's observable list of student
09:07 - we can add this uh new student
09:11 - Constructor here so just add new student
09:15 - and this Constructor takes four
09:17 - variables if you remember right first is
09:19 - the ID so give for example one second is
09:23 - the name so give any name for example
09:26 - some name and then third is the
09:31 - name so give some surname and fourth is
09:35 - the age which can be something like this
09:38 - an integer right and then using comma
09:41 - separator you can add multiple instances
09:46 - of this Constructor right so you can do
09:48 - something like this and then change the
09:53 - IDS of all the student
09:58 - Constructors
10:11 - so I have generated uh this kind of uh
10:14 - data inside this uh list here and make
10:17 - sure the last uh you know data doesn't
10:21 - have this comma okay so we have our
10:25 - observable list now right now what we
10:29 - can do is we can take this uh table
10:32 - variable and go inside our initialize
10:35 - method and call a method called set
10:39 - items on it and then it this takes the
10:43 - observable list so just provide this
10:45 - list variable here okay now just above
10:51 - this uh code what we can do is we can
10:54 - just use our ID
10:56 - variable and then we can call a method
10:59 - called set cell value Factory here and
11:04 - then we can just add new property value
11:08 - Factory so just search for property
11:11 - value Factory and it takes uh two uh
11:14 - template argument as we have given in
11:17 - the table column right student and
11:20 - integer for ID right and then in the
11:24 - Constructor it takes uh this name of
11:28 - your column okay so do the same for uh
11:32 - the name surname and age so second is
11:36 - our name third is the surname and fourth
11:41 - is the age and we have to pass this here
11:45 - also surname here also and age here also
11:51 - and this name and surname are string
11:54 - right so just add string and string here
11:57 - okay so now we are ready with our code
12:01 - so we just need to edit our fxml file
12:04 - and add a table view inside this so that
12:06 - we can populate it so just right click
12:08 - on your main. fxml file and open with
12:12 - scene Builder here and just choose your
12:16 - anchor pan here and then change the
12:19 - layout property of it so pref width is
12:22 - equal to for example this time 500 and
12:25 - the pref height is also I'm going to
12:29 - choose 500 okay and then go to here in
12:35 - the search option and search for table
12:39 - view okay and just drag and drop this
12:42 - table view inside this anchor Pane and
12:46 - to make it stretch to the length and
12:49 - height of uh this anchor pan you can
12:51 - just uh select your table view go to
12:53 - modify and then click this option fit to
12:57 - parent and it's going to fit to parent
13:00 - and now right now you can see this table
13:02 - view has two table columns C1 and C2 so
13:06 - we need to add two more T table columns
13:09 - because we have four table columns right
13:12 - so just add one more table column here
13:16 - this will be the third table column and
13:18 - take one more table column from your uh
13:22 - controls and just drop it here okay so
13:26 - now you have four table columns now
13:28 - select your first table column from here
13:31 - go to the property and change uh the
13:34 - title of it or text of it for example
13:37 - first is the ID second was the name so
13:42 - just change the name of this also and
13:45 - then third was the surname so change the
13:48 - text of this
13:50 - also and the fourth was the age so just
13:54 - add age here okay now once you do this
13:58 - we need to uh connect our controller to
14:00 - this fxml file so go to controller here
14:04 - and then choose your controller class
14:06 - application. controller okay now select
14:10 - uh your column once again and then go to
14:13 - the code here and then choose the ID of
14:17 - the code right so when you just drag
14:21 - here you can see we have declared the
14:24 - table column variables here ID name
14:27 - surname and age right
14:29 - so Select First Column and give the
14:33 - first uh you know table column variable
14:35 - here ID select second column and then
14:39 - choose the name third is the surname and
14:45 - fourth is the age
14:48 - right now uh we also need to give the ID
14:52 - to the table so go to the hierarchy here
14:55 - choose your table here and then go to
14:58 - the code code and then choose this
15:01 - variable called table which we have
15:03 - declared here you can see here right and
15:06 - now you can just uh save your code and
15:10 - refresh your project and now we are
15:14 - going to run it so just run your app and
15:18 - now you can see uh we have successfully
15:21 - populated our table view with this data
15:25 - okay so this data is same as this data
15:29 - in the observable list right you can
15:32 - match it from here right so in this way
15:36 - you can populate a table view in Java FX
15:40 - I hope you have enjoyed this video
15:41 - please wait com And subscribe and bye
15:43 - for now