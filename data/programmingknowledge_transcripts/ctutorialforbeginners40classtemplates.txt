00:00 - hello guys welcome once again in the
00:02 - last two videos I have been showing you
00:04 - how to use function template in
00:07 - C++ now in this video I'm going to show
00:10 - you how you can use templates with
00:13 - classes so I'm going to show you how you
00:16 - can use class templates in
00:19 - C++ so let's get
00:21 - started first of all uh how to declare a
00:25 - template class it's just like uh uh
00:28 - declaring a template function you just
00:31 - need to
00:32 - use template uh keyword and then in
00:37 - these angle brackets just
00:40 - write class and just give the data
00:44 - type which is T in my case I'm giving
00:48 - then you will give the class name so I'm
00:52 - I'm calling my class name
00:55 - as math class Math's class for
00:58 - example and and in this class for
01:03 - example I have two
01:06 - variables one so because I have this
01:10 - data type in my uh initialization of my
01:14 - class template I can use this T to
01:18 - Define my variables for example a comma
01:21 - B for right so this T will be replaced
01:27 - by whatever initialization you will get
01:30 - to this T for example int or float or
01:33 - whatever right now I will Define a
01:36 - public
01:38 - method
01:41 - public and I will Define The Constructor
01:45 - to the
01:46 - class
01:48 - math and this Constructor for example
01:52 - will take two arguments and I will pass
01:57 - T because T is my data type and this T
02:02 - is the data type of A and B so I can
02:05 - define t x x is my variable name
02:10 - argument name and T is the capital t is
02:12 - the data type
02:14 - right and I can initialize this and I
02:17 - can then just say a is equal to
02:24 - X
02:26 - and B is equal to y
02:31 - okay this is simple function or a
02:34 - Constructor right we are initializing
02:37 - The Constructor with two arguments and
02:39 - we are just setting the value of a and b
02:42 - to these from these arguments right now
02:47 - for example I want to calculate the
02:48 - maximum of these two values so once
02:50 - again I will take T and I will Define a
02:53 - function
02:55 - called
02:58 - max value
03:01 - and then I will close this okay but for
03:06 - defining this function uh def
03:09 - implementation what you need to do is as
03:12 - in class Implement class function
03:15 - implementation or class member function
03:17 - implementation what you do is you just
03:20 - uh write the name of the class for
03:22 - example math class and then with these
03:28 - uh colon values you can call your
03:32 - functions like this right but because we
03:35 - are using class uh templates in our case
03:39 - this will be for example returning T
03:42 - here and whenever you use class template
03:45 - you need to
03:47 - Define this signature of the class
03:51 - template everywhere okay so in here
03:54 - above your function you need to give
03:56 - this template as we have seen in the
03:59 - last videos that whenever we Define
04:02 - function template we need to use this
04:04 - keyword in the angle bracket we need to
04:06 - pass this class and the data typ
04:08 - whatever uh which is which depends upon
04:12 - us
04:13 - right in addition you also need to give
04:18 - T here okay so this tells uh this C++
04:25 - that we are using the member function of
04:29 - a CL class with this data type okay so
04:33 - don't forget to initialize the member
04:35 - function with this template keyword and
04:39 - don't forget this angle bracket and the
04:43 - data type okay now I can just uh
04:49 - return return maximum value right and I
04:53 - can calculate the maximum value by tary
04:57 - operator if a is greater than b question
05:02 - mark which decides then I will return a
05:05 - otherwise I will return
05:08 - B
05:10 - okay now uh in order to use the instance
05:15 - of the class to instantiate our class
05:18 - you may think that I can just use this
05:23 - uh math class here in my main and I can
05:27 - Define uh
05:30 - object like this but let's see what
05:33 - happens when I compile my
05:36 - program it will give me an error here
05:39 - because this error and let's see what is
05:42 - the error first this error
05:45 - says expected semicolon so I haven't
05:49 - given semicolon or what yeah so it's
05:53 - giving me uh some weird error and this
05:56 - is because whenever you use class
05:59 - template you don't ever forget this
06:03 - angle bracket with your data type T in
06:07 - here uh and this T will be replaced by
06:12 - the value or data type you uh want to
06:16 - pass for example you want to pass two
06:19 - integers this int will be replaced here
06:22 - int and this two will be instantiated
06:25 - this two A and B variable will be
06:27 - instantiated as a variable and then we
06:32 - can uh call this
06:34 - math or uh max value member function
06:38 - to calculate the maximum of the value
06:42 - right so I can give for example
06:47 - 45 comma
06:51 - 67 and then because it's returning
06:55 - something to me I can just calculate
06:59 - this
07:00 - um max value right so I can just see out
07:04 - see out not
07:09 - here but here see out and I can call
07:15 - this member function
07:18 - here and I can use this instance of the
07:23 - class or object of the class to print
07:26 - this right so now compile my
07:30 - program and hopefully it will
07:36 - work and I will run my program and it
07:39 - gives me maximum value is 67 which is
07:42 - true now in order to instantiate uh
07:46 - these A and B as double values you just
07:49 - need to
07:50 - write double here and you can just pass
07:54 - two double values point something and
07:58 - 67 something thing right compile it and
08:03 - run it it will give the answer right so
08:07 - don't forget uh some basic things that
08:11 - class instantiator in class template is
08:14 - in instantiated like the function
08:16 - templates with this template keyword and
08:18 - these angle brackets and your data type
08:22 - and whenever you uh declare or whenever
08:25 - you provide the definition of your
08:27 - function member function of a class
08:30 - don't forget this template either there
08:32 - also and
08:34 - whenever uh you define member function
08:36 - you need to add this uh angle bracket
08:40 - with this data type with your um class
08:46 - okay so I hope you have understood these
08:50 - basic concept and I hope you have
08:52 - enjoyed this video please wait comment
08:53 - and subscribe and bye for now