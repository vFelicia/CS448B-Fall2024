00:00 - hey guys welcome to the next video on
00:02 - register rule for beginners in this
00:04 - video we will learn how to use Redis
00:07 - publish/subscribe so Redis
00:11 - publish/subscribe implements the
00:13 - messaging system where sender is called
00:17 - the publisher and the receiver is called
00:21 - the subscriber right now in Redis a
00:25 - client can subscribe to any number of
00:29 - channels so let me give you an example
00:32 - and let me show you how you can use
00:36 - Redis publish/subscribe so you can see I
00:39 - have opened three ready CLI terminals in
00:44 - three different terminals right so this
00:47 - is ready CLI first terminal second
00:50 - terminal and third terminal now first of
00:53 - all I am going to subscribe to a channel
00:57 - so I can just write subscribe here and
01:01 - then it takes a channel name right and I
01:06 - can give any channel name for example
01:10 - Redis or any other channel name so for
01:13 - example my channel and I can subscribe
01:16 - to this channel okay so the name depends
01:20 - upon you right so for example I
01:23 - subscribe to the channel called Redis
01:26 - and I just press enter so now this is or
01:32 - this terminal is subscribed to this
01:36 - channel right now from the second CLI
01:40 - when I publish some message to this
01:43 - channel so let me publish something so
01:47 - to publish a message you can just use a
01:50 - keyword publish as we have seen in
01:53 - subscribe so to subscribe you use a
01:56 - keyword subscribe and then a channel
01:59 - name for publishing you use a keyboard
02:02 - publish and the channel name on which
02:04 - you want to publish right so I want to
02:08 - publish on the Redis channel and then
02:11 - your
02:13 - message for example hi right and I press
02:16 - ENTER and you can see on the subscriber
02:19 - it gets the same message so first of all
02:23 - it will just show you what kind of
02:28 - message is coming so it's a message and
02:31 - then on what channel it's coming and
02:33 - what is the message itself right now if
02:37 - you want to send a big message you can
02:41 - just enclose your message inside these
02:45 - double quotes so for example hello world
02:49 - here and then press ENTER then it's
02:53 - received here okay now it's possible to
02:58 - subscribe to any number of channels
03:02 - right so you can see I am subscribed to
03:05 - Redis from one channel now I can just
03:10 - copy the same command in the next
03:14 - terminal here and then I'm subscribed to
03:18 - this channel so now there are two
03:21 - subscriber subscribe to one Redis
03:25 - channel so this is the channel and I'm
03:28 - subscribed to that Channel right so
03:31 - there are two subscriber for the channel
03:34 - name Redis and when I just send hello
03:39 - world
03:39 - again for example now it is received by
03:44 - both the subscribers right so you can
03:47 - see hello world is received here and
03:50 - hello world is received here okay
03:53 - so this is how publish/subscribe method
03:57 - work in Redis now when you are doing or
04:02 - using Redis in the programming then it's
04:08 - really important or it's really useful
04:11 - so for example recently I created some
04:15 - kind of API where I wanted to listen for
04:18 - any event for save in Redis so whatever
04:23 - is saved whenever
04:25 - some command comes and something is
04:28 - saved in Redis I wanted to subscribe to
04:31 - that save event right and I have used
04:35 - this publish/subscribe method from Redis
04:39 - in that API and it worked fine so it's
04:44 - kind of listening to the trigger for
04:46 - examples for saving the data or some
04:51 - delete deletion of data you can
04:53 - subscribe and then you will get this
04:56 - message on the next side which is
05:00 - subscribing and based on that
05:02 - subscription you can trigger some event
05:05 - okay now let me just close this CLI and
05:11 - once again open the CLI once again and
05:14 - let me clear the terminal once again and
05:16 - there is a command called P subscribe so
05:19 - you can do P subscribe and then it takes
05:22 - the pattern so for example I can just
05:25 - write R and then s tricks are s tricks
05:29 - here means any publisher when it's
05:32 - published on the channel name which
05:35 - start with r it will receive that
05:38 - message so for example I am publishing
05:42 - this publish Redis because this pattern
05:46 - matches this pattern so s tricks is some
05:50 - kind of a wild card here so it's
05:53 - whatever so for example I'm subscribing
05:55 - to our s tricks and I'm just publishing
05:58 - the same message again and you can see
06:01 - it's receiving that message because it's
06:04 - just matching the pattern whatever
06:08 - publisher publishes on the pattern which
06:12 - matches our s tricks for example R and
06:16 - whatever comes after R this is matching
06:20 - that pattern so it will receive that
06:24 - message for example I can just do
06:27 - something like this I on our X for
06:32 - example this also matches this pattern
06:35 - right because we just want to
06:38 - match the first letter of that channel
06:42 - and whatever comes after that it will be
06:45 - matched automatically so this is kind of
06:47 - a pattern matching in Redis so P
06:51 - subscribe is used to pattern matching
06:54 - and whatever publisher channel matches
06:59 - that pattern it will be receiving that
07:02 - message so you can see this is receiving
07:06 - that message but this CLI is not
07:08 - receiving so because we have subscribed
07:10 - to a concrete channel layer which is not
07:15 - a pattern so whenever we just give the
07:21 - raddest channel itself then only it will
07:23 - receive the message and this
07:26 - automatically receives the message
07:27 - because here we are just matching the
07:31 - pattern okay so in this way you can use
07:34 - publish subscribe in Redis I hope you
07:36 - have enjoyed this video please rate
07:38 - comment subscribe and bye for now