00:03 - hey everyone today we're gonna talk
00:06 - about the events and event handling in
00:08 - thinker we would focus on the buying
00:10 - function and talk a little elaborately
00:12 - about the main Loop so events handling
00:14 - is an important part of thinker module
00:17 - in this video we would try to understand
00:19 - the basic things associated with it and
00:22 - in the next video we would see a related
00:24 - example okay
00:26 - so we would try to make the program a
00:28 - little interactive by giving user inputs
00:31 - from the keyboard so that would be very
00:33 - much done by the event handlers okay so
00:36 - let's start writing the code for it I'll
00:38 - import
00:40 - or I'll write from thinker
00:43 - import Star
00:47 - then I'll get my window
00:49 - I'll write
00:51 - when equals TK
00:54 - then I'll given a title I'll write win
00:56 - Dot
00:58 - title
01:00 - let the title be event
01:03 - handling
01:07 - okay so I told you I'll be telling you a
01:10 - little more about the main Loop so
01:12 - whenever you create a tincter
01:14 - application we have always been calling
01:16 - the main Loop okay at the end so why do
01:19 - we call the main Loop what the main Loop
01:21 - actually does
01:24 - it checks whether an event has occurred
01:26 - or not it checks for an event occurrence
01:30 - of an event so if there is some event
01:33 - that has occurred then the written code
01:35 - the code that the user has given would
01:38 - be executed
01:40 - so as the main Loop has checked for an
01:42 - event occurrence
01:44 - the program written will be executed as
01:46 - a response okay so you need to write the
01:49 - code that would be executed in response
01:51 - to an event okay so you write these
01:54 - functions
01:55 - called event handlers for the events
01:58 - that you use in your application okay
02:01 - now I would be creating a very similar
02:04 - event handler for every time I press a
02:08 - key on the keyboard I should get that
02:10 - key printed on the console okay not the
02:12 - printer window but the console so what
02:15 - I'd write is I'll write def so I'll have
02:19 - a function for that I'll write def
02:22 - pressed key
02:31 - and in Brackets I'll write event
02:34 - I'll give event as an argument and I'll
02:37 - write print event dot care
02:41 - so that simply completes what I just
02:44 - said I want to print whatever I clicked
02:48 - okay
02:49 - so
02:51 - now we would move to the bind function
02:53 - to call an event handler whenever an
02:56 - event occurs on a widget or function or
02:59 - method we use the bind function okay the
03:02 - event handler is said to be bound to
03:04 - that event because it's called every
03:06 - time the event occurs okay and how do we
03:09 - do that we'll just write
03:11 - for our window when dot bind okay and
03:17 - the first parameter would be the
03:18 - sequence so it's just a string of the
03:22 - form event name okay I'll just write it
03:25 - down I'll write here the event name is
03:28 - key so in double quotes I'll write
03:33 - key
03:35 - and I should give this
03:37 - less than uncreated on sign
03:41 - rounded okay that's how you write the
03:44 - event name and this event name can be
03:46 - any of tincter's events so there are
03:49 - many events in Winter we have enter
03:51 - leave button one button two or key so
03:54 - here it is key
03:55 - and then we'll have the function name
03:59 - okay you can see for bind we have to
04:01 - give sequence and then the function okay
04:04 - so the event handler basically so I have
04:08 - pressed key
04:10 - right pressed key as the function okay
04:13 - so that completes my bind function
04:17 - and then I'll run the main Loop I'll
04:19 - write win dot main Loop
04:24 - now whenever the main Loop would run it
04:27 - will check for the event so I have
04:29 - declared my event here as a pressed key
04:33 - function okay I have given it as the
04:35 - argument
04:36 - and whenever this event will occur what
04:39 - is my event the event is
04:42 - the user giving an input from the
04:44 - keyboard while by pressing a key okay
04:47 - so whenever this event occurs this
04:51 - function would be
04:52 - carried out okay this part of code would
04:56 - be executed as a response to the event
04:58 - occurrence okay so that's what should
05:01 - happen now let's check if that really
05:03 - happens whenever I click on the key
05:06 - I should see that key printed on the
05:09 - console okay let's do that so I have the
05:13 - sphincter blank screen okay and I'd not
05:16 - do anything
05:18 - with the screen but I just start typing
05:22 - something and that should be typed out
05:24 - on the console automatically without me
05:26 - taking the cursor over there okay so
05:29 - let's do that I'll just press D and
05:32 - there it is you can see it on the
05:35 - console then you can see t
05:38 - and then you can see Q
05:40 - and let me press a numeric let it be one
05:43 - I'll press shift one
05:46 - okay and then I can press m and I can
05:50 - given any character okay this is
05:53 - semicolon and
05:55 - inverted comma
05:57 - so that's it about this program
06:00 - I just wanted to show you how
06:02 - interactive Tinker can be and we'll see
06:06 - a related example in the next video
06:08 - thank you