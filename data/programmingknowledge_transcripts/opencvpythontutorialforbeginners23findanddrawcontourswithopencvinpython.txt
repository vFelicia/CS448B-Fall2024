00:00 - hey guys welcome to the next video on
00:02 - open CV tutorial for beginners using
00:04 - Python in this video we are going to
00:07 - understand what contours are and we are
00:10 - going to see how to find contours and
00:12 - how to draw contours so first of all
00:15 - what are contours so contours can be
00:18 - explained as the curve joining all the
00:21 - continuous point along the boundary
00:23 - which are having the same color or
00:26 - intensity now contours can be a useful
00:30 - tool for shape analysis or object
00:33 - detection or object recognition now for
00:38 - better accuracy we generally use binary
00:41 - image for finding the contours so first
00:44 - of all we are going to generate the
00:47 - binary image and then before finding out
00:49 - the contours we are going to apply the
00:52 - threshold or canny edge detection to
00:55 - find the contours on the image so let's
00:58 - start with an example so here I have a
01:01 - simple code which reads an image and
01:03 - then converts this image into a gray
01:06 - scale image and then I'm just showing
01:09 - both the images using I am show method
01:12 - so let's run this code and let's see
01:15 - what result we get so this is the
01:18 - original image with these colors and
01:21 - after the conversion of this image to
01:24 - the grayscale image this is the result
01:26 - which we are getting and then we are
01:29 - going to find out the threshold or the
01:32 - canny
01:33 - edge so in this example we are going to
01:36 - just apply the threshold so for applying
01:39 - the threshold on this image we are going
01:42 - to define first of all two variable ret
01:45 - comma Thresh is equal to C v2 dot
01:51 - threshold so there is a method called
01:54 - threshold which we have already seen how
01:57 - threshold work in detail in the previous
01:59 - videos so the first argument which this
02:02 - threshold method takes is the image so
02:05 - we are going to pass our grayscale image
02:07 - as the source the second argument is the
02:10 - threshold value so because it's a binary
02:13 - image
02:13 - let's set the threshold to 127 which is
02:17 - around half of the 255 right the third
02:22 - argument is the maximum values on the
02:25 - maximum value here will be 255 the next
02:29 - argument will be the type and type here
02:31 - will be 0 so this is going to give us
02:34 - the trash hold value for this greyscale
02:38 - image and after finding out the
02:40 - threshold of this image we are going to
02:43 - find out the contours so for this we are
02:47 - going to define two variables one is
02:49 - contours and the second is the hierarchy
02:52 - because the method which we are going to
02:55 - use which is CB to dot find contours
03:00 - this is the method it's going to give us
03:03 - these two values contours and the
03:05 - hierarchy and we are going to see what
03:08 - our contours and hierarchy in details
03:11 - after applying this method on this image
03:14 - so the first argument will be the Thresh
03:17 - which we got using this threshold method
03:20 - the second argument will be the contour
03:23 - mode so this is called the contour
03:27 - retrieval mode also and there can be
03:30 - several possibilities here which we can
03:33 - apply but for simplicity at the end in
03:36 - the most common case we use retr
03:40 - underscore tree here okay as the mode
03:43 - the third argument here will be the
03:45 - method which we want to apply and this
03:49 - is also called the contour approximation
03:51 - method and here also several
03:53 - possibilities are possible but for now
03:57 - what we are going to use here is this
04:00 - will be CB 2 dot aprox nun so now as you
04:05 - are seeing here this fine contour method
04:07 - gives us contours and hierarchy so the
04:11 - contour is a Python list of all contours
04:15 - in the image and each individual contour
04:19 - is an umpire array of X comma y
04:22 - coordinates of boundary points of the
04:25 - object and the hierarchy
04:27 - is the optional output vector which is
04:30 - containing the information about image
04:33 - topology and this we are going to see in
04:36 - the later videos so for now we are only
04:39 - concerned about finding out the contours
04:42 - so for this as I said this contains the
04:46 - number of contours right so we can print
04:49 - out these number of contours is equal to
04:53 - and then we are going to just convert
04:56 - this number into the string and there is
05:00 - a method called length and then inside
05:03 - this length method we are going to pass
05:04 - our contour variable so this line is
05:08 - going to print out the number of
05:10 - contours which are found inside the
05:13 - image which we are providing so let's
05:15 - run this code and let's see what result
05:17 - we get so we already know that this
05:20 - gives us a grayscale image and the
05:23 - original image but we are interested in
05:25 - this print message and the number of
05:29 - contours which are found is nine inside
05:33 - the source image which we are providing
05:36 - here now we already found out the number
05:39 - of contours now we need to draw these
05:43 - contours on the image itself so how can
05:46 - we achieve this but before this lets see
05:49 - the individual contour also so I'm going
05:52 - to just print out the value of the first
05:56 - contour which will be at index 0 so
05:59 - let's run it once again and let's see
06:02 - what happens so we are running this code
06:06 - once again and you can see after
06:08 - printing out the number of contours it's
06:11 - going to give us the numpy array of the
06:16 - x and y coordinates so if we plot or
06:20 - join all these x and y coordinates we
06:23 - are going to get the boundary of the
06:26 - contour so now we are going to just take
06:29 - these contours and pass it to a method
06:31 - called draw contours which is going to
06:33 - draw or join all these coordinates of
06:36 - those contours so to get this
06:41 - we are going to just say cb2 dot draw
06:44 - contours and then the first argument
06:47 - here will be our original image because
06:50 - we want to draw the contours on our
06:53 - original image so this will be the IMG
06:56 - and it's the original image and the
06:59 - second argument will be the contours so
07:01 - we are going to just pass the contours
07:04 - which we found inside the image the
07:06 - third argument will be the contours
07:09 - indexes so if we just gave here minus
07:13 - one then it's going to draw all the nine
07:16 - contours which were found inside the
07:19 - image these all contours so first of all
07:23 - we will give minus one here as an
07:25 - argument and then we will see how to
07:28 - give other arguments as the numbers here
07:31 - also the fourth argument here will be I
07:34 - think the color so we are going to just
07:37 - give the color 0 comma 255 comma 0 let's
07:43 - say and the next argument will be the
07:47 - thickness so we are going to take the
07:48 - thickness 3 here so using this method
07:51 - what we have achieved is we have drawn
07:54 - the contours on the original image so
07:59 - let's run this code once again and let's
08:00 - see what result we get so you can see
08:03 - this was the grayscale image and this we
08:06 - have used for finding out the contours
08:09 - but the interesting image here is this
08:12 - one and here you can see all the
08:15 - contours are drawn on this image so all
08:20 - the green lines or green boundaries are
08:25 - all contours so because we have given
08:29 - minus 1 it has drawn all the contours on
08:32 - this image and we can also give the
08:36 - contour index so let's say we just want
08:38 - to find out the contour 0 which will be
08:43 - the first contour which is found inside
08:45 - the image we are going to just run this
08:49 - code once again and the first contour
08:52 - which was find out found out a
08:55 - this contours this P contour right in a
08:59 - similar way we can go up to 8 so 0 1 and
09:04 - let's rerun this code again you will see
09:08 - that the second contour is this contour
09:12 - so this whole contour from the boundary
09:17 - of this image is the second contour and
09:19 - in a similar way you can go let's say -
09:23 - I'm going to run this code once again
09:26 - you will see the next contour here and
09:29 - similarly you can go up to the index 8
09:32 - because the total number of contours are
09:34 - 9 and we are starting from the index 0
09:37 - that's why we can go up to 8 so this
09:41 - value depends on the number of contours
09:43 - ok so because we found out the number of
09:47 - contours are 9 so that's why we can go
09:50 - up to 8 and let's run this code and the
09:53 - last contour which was find out and we
09:56 - have drawn this contour here on this
09:59 - blue circle right now if we go beyond
10:03 - this index let's say we gave 9 here we
10:06 - are going to get the error right so you
10:09 - can go up to 8 here and if you want to
10:12 - just draw all the contours then you can
10:15 - just give -1 here and it's going to draw
10:18 - all the control on the image which you
10:22 - are providing so this is how you can
10:24 - find out the contours and draw contours
10:27 - on the images using fine contour and
10:30 - draw contour methods in OpenCV I hope
10:34 - you have enjoyed this video and I will
10:35 - see you in the next video
10:44 - you