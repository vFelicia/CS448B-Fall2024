00:01 - hello guys in this video I'm going to
00:02 - show you how you can use template
00:05 - specialization with class templates so
00:09 - let's get started so I'm going to give
00:12 - you an example I'm going to create a
00:15 - class
00:16 - templates
00:17 - so I will create a template and this
00:22 - will have
00:23 - the class T capital T and then I'm going
00:29 - to make the class and I will name it
00:34 - as
00:37 - Care Finder class for
00:39 - example
00:42 - okay and this is just going to have
00:46 - public
00:52 - Constructor so I'm just going to take
00:55 - make a Constructor and I will initialize
00:58 - this Constructor as
01:01 - T and what I'm going to do in this
01:04 - Constructor is I'm just going to print
01:07 - some message I'm just going to print C
01:14 - out and I'm going to print
01:20 - um
01:22 - a and
01:26 - then is uh valid
01:30 - or is not a not
01:33 - a
01:35 - valid
01:37 - car
01:41 - okay and I'm going to end
01:49 - Line This is the simple class which uh
01:53 - is a template class and T is the data
01:56 - type here and suppose I want to
02:00 - specialize uh a template class as
02:04 - specialization means you re you can
02:07 - redefine a class to specialize in some
02:11 - particular data type okay so for example
02:15 - I want to specialize my Care Finder
02:19 - class uh in order to find a character or
02:23 - specialize in character so what I can do
02:26 - is I can just redefine my class
02:30 - but I can say C++ that I want to uh
02:35 - specialize my other class which has the
02:37 - same name with a character
02:41 - specialization and how you can make this
02:44 - other class uh as a character
02:47 - specialization template class you just
02:50 - need to remove this um in this template
02:53 - declaration you just need to remove any
02:57 - declaration in the in the angle brackets
03:01 - okay so just leave this template and uh
03:05 - these angle
03:07 - bracket blank and this says C++ that we
03:12 - are going to uh make this class as a
03:16 - specialization of some class and how we
03:20 - can uh specialize our class we can just
03:23 - specialize our
03:25 - class by giving or specifying the
03:28 - specific the data type to a value so now
03:34 - this will not be T but for example care
03:37 - okay car a and now a is a valid
03:43 - character
03:46 - right so in this way you can specialize
03:50 - your class in in a particular for or for
03:54 - a particular data type right so this is
03:57 - for General template and this is a class
04:03 - template which specialize in character
04:07 - data type okay and in order to use this
04:11 - uh class what we can do here is we can
04:18 - I'll just make it a little bit concise
04:21 - so that we can see all the code and what
04:25 - we can do we can uh declare the instance
04:28 - of our class and in the bracket we can
04:31 - say uh care and when you give here care
04:36 - it's says that you are going to define
04:40 - the specialization instance of the class
04:44 - so I can just Define
04:48 - care
04:50 - uh
04:51 - CH
04:53 - with or
04:55 - ch1 with uh a character so this
04:59 - character can be capital A for example
05:05 - and once again I'm going to copy this
05:07 - and I'm going to paste this but instead
05:10 - of care for example I use
05:13 - int and int can
05:16 - be 23 for example or
05:21 - float and Float can
05:24 - be
05:28 - 23.44% happens I will just compile my
05:32 - program and hopefully it will not give
05:34 - any error and it's giving error let's
05:38 - see what's the
05:41 - error yeah so error here is whenever you
05:46 - uh leave these uh template angle bracket
05:51 - uh blank you need to tell the data type
05:55 - to this class in which you are
05:58 - specializing so you need to give here
06:01 - angle bracket and then here you need to
06:05 - write the data type in which you need to
06:08 - specialize your class so leave these uh
06:12 - this template angle bracket blank but
06:16 - after your class name you just need to
06:18 - give the data type which is care in our
06:21 - our case right so compile the
06:26 - program and then
06:30 - it's yeah so this instance has to be
06:34 - different
06:35 - here different uh variable name of
06:40 - instance name
06:43 - right and hopefully it will compile this
06:48 - time and it's compiled and I will run it
06:52 - and this time it says a is a valid car
06:56 - 23 is not a valid car
06:59 - 3.44 is not a valid Square so what it
07:03 - has done when you define this uh
07:07 - instance of carefinder class uh in
07:12 - specialized in character which is this
07:15 - one then it goes to this class right
07:19 - because this care or this class
07:24 - specialized in character class so when
07:26 - you declare here care your instance will
07:30 - know that it's a specialization of this
07:33 - template class so it will print this
07:35 - message it will implement this class
07:38 - implementation or otherwise in any other
07:42 - condition it will take uh t as a data
07:46 - type and it will go to this class which
07:50 - is our general template class right so
07:54 - in this way you can specialize your
07:56 - class in order to perform a certain task
08:00 - for a particular data type so I hope you
08:04 - have enjoyed this video please wait
08:05 - comment and subscribe and bye for now