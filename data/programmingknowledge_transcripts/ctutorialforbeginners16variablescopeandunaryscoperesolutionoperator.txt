00:00 - hello guys welcome once again in the
00:02 - last couple of videos I have been uh
00:04 - showing you how to use functions in C++
00:08 - now in this video I'm going to show you
00:12 - how variable scope Works in C++ and how
00:17 - unary scope resolution operator Works in
00:21 - C++ so first of all I will demonstrate
00:24 - how variable scope works so for example
00:28 - you have a function
00:34 - void print me it's a random function I'm
00:39 - writing and what it does is it just
00:43 - prints
00:45 - something so I will
00:50 - say
00:53 - print something
00:56 - okay
00:58 - and so so now for example you can
01:03 - declare a variable which is local to a
01:07 - function and you can declare a variable
01:10 - which is global to the function so for
01:13 - example I declare some
01:15 - variable
01:18 - in my variable for
01:24 - example is equal to
01:28 - 30
01:31 - okay and I want to use this variable
01:35 - here also so I want to print see
01:40 - out my
01:42 - variable in
01:44 - here will it work let's see if it works
01:49 - or
01:50 - not so it's showing the error and what
01:53 - error it's showing is
01:58 - that
02:00 - let's see what is the error here error
02:03 - is my variable was not declared in this
02:06 - scope so there is a problem of scope in
02:10 - here so what is the problem here is
02:13 - whenever you declare a variable inside a
02:17 - function it's called a local declaration
02:20 - or local scope of that variable and
02:24 - whenever you declare a function inside
02:27 - or whenever you declare a variable
02:29 - inside a function it can be this
02:32 - function or this function it will be
02:35 - usable inside that function only okay so
02:39 - you cannot use my variable outside this
02:44 - function so this is called a local scope
02:47 - or local Declaration of a variable now
02:51 - for example if you want to use the same
02:54 - variable in this uh function and this
02:57 - function what you can do is you can
03:00 - declare your variable AS Global so I
03:04 - will just remove this here and I will
03:09 - declare it as Global int my variable is
03:14 - equal to
03:16 - 20 is equal to
03:19 - 20 so now what will happen is because we
03:22 - have declared our variable outside this
03:26 - function and our main function this is
03:29 - called a glob Global variable and it it
03:32 - is global to this and this so this
03:36 - function or this variable can be used
03:38 - here also and here also right and when I
03:44 - compile my program this time it will be
03:47 - compiled fine okay
03:51 - so you can declare the variable either
03:55 - as a global variable if you want to use
03:58 - it in
04:01 - your main function and the other
04:03 - functions then declare your variable AS
04:05 - Global variable and if you want to use
04:09 - your variable in the function itself or
04:12 - locally then you just declare your
04:15 - function
04:17 - inside inside
04:20 - your function right so I hope you have
04:24 - understood this now let's talk
04:28 - about unary
04:30 - scope resolution operator so for example
04:34 - you
04:35 - have declared a global valuable like
04:39 - this and you also have declared
04:44 - in my variable here also which you have
04:48 - initialized with
04:51 - 10 now how your program will know which
04:56 - this this which you are printing my
04:59 - variable
05:00 - it is local variable or a global
05:02 - variable let's let me just remove this
05:06 - function in order to clarify more so
05:11 - this is my Global variable and I have
05:13 - also declared the same name as a local
05:17 - variable also and when I want to print
05:19 - this variable let's see what happens I
05:21 - will compile my program and run it and
05:24 - it shows
05:26 - me the value 10 that means
05:30 - the variable value is 10 and it's using
05:36 - this
05:37 - value as a local value here right so
05:43 - whenever you
05:46 - declare variable with the same name
05:49 - which will be preferred the local value
05:52 - will be preferred right so most recent
05:55 - value you have declared will be
05:57 - preferred in the function so this is the
06:00 - most recent value or the most inner
06:02 - value or the local value simply it will
06:05 - be preferred on global value so this
06:08 - will print 10 here now in order to use
06:12 - the global value for example you want to
06:15 - use this uh value you want to print 20
06:19 - and not 10 how you can print it so in
06:24 - order to print this Global value you
06:26 - need to use this unary scope resolution
06:30 - operator and what is this un scope
06:32 - resolution operator you just need to
06:36 - give two
06:38 - colons
06:39 - sorry this was a mistake you just need
06:42 - to give two colons before your variable
06:47 - so these two colums are called unary
06:50 - scope resolution operator and this two
06:55 - double colons tells your C++ code that
07:00 - this variable is a global global
07:02 - variable and not a local variable so in
07:06 - this way you distinguish between Global
07:08 - and local value if it doesn't have these
07:11 - two columns it will treat this my
07:16 - variable as this local variable and when
07:19 - you have this two colum then this my
07:22 - variable will be considered as a global
07:25 - variable and now let's try to build our
07:29 - program and run it and now you can see
07:32 - here it it has printed 20 so this
07:36 - variable is considered because we have
07:39 - declared is as a global variable using
07:42 - un scope resolution operator so I hope
07:46 - you have understood the concept of
07:49 - variable Scopes and unary scope
07:51 - resolution operator in C++ and I hope
07:55 - you have enjoyed this video please rate
07:56 - comment and subscribe and bye for now