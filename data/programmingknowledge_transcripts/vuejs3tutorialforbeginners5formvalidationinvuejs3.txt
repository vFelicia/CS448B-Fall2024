00:00 - hello everyone welcome to new vegas
00:01 - tutorial we are going to learn about
00:03 - form validation in this tutorial
00:05 - so form validation is very important
00:07 - part and
00:09 - we would process the form validation
00:11 - like this is a very important part using
00:13 - vue.js and it is like one of the core
00:15 - topics in vue.js
00:17 - so let's get started this tutorial so
00:19 - this is our project directory we have
00:21 - two files form.html and form.js i've
00:23 - already mounted the
00:25 - component so this is very similar you
00:27 - can upload to my previous tutorial and
00:28 - it is the very same thing
00:30 - which i always work with the same kind
00:34 - of components like component has been
00:35 - made data methods
00:37 - and i have mounted this on the id it
00:40 - just showing in
00:40 - small error you can ignore this error
00:43 - but
00:44 - if you want to like get rid of this so
00:46 - inside
00:48 - the head tag you can put meta
00:51 - this better attack character is equal to
00:53 - utf-8
00:54 - so this is this should remove this error
00:58 - so you know it works perfectly fine and
01:00 - at the same time
01:01 - you can observe that i have no i have
01:03 - you just installed
01:04 - so let me put view js and
01:08 - installation i will click on version
01:11 - three point
01:12 - x and then i would click on cdn
01:17 - installation then cdn and then i can
01:20 - copy this link
01:21 - of the cdn i can get start with the view
01:25 - perfectly fine so i can put this at the
01:29 - bottom of my
01:30 - tag and i can put script
01:34 - type is equal to text comma javascript
01:36 - is perfectly fine and i need to define a
01:37 - source
01:38 - this is form dot form dot
01:42 - js form.js
01:46 - so perfectly fine now i can refresh the
01:48 - page and i can get start with the
01:50 - tutorial
01:51 - so i'm going to define form validation
01:55 - so let's make a small form and we
02:00 - we need to define form and then submit
02:06 - dot prevent is equal to check form
02:12 - okay and this is a form and i've already
02:16 - defined a check form function i'll
02:18 - define a check form
02:20 - check form
02:23 - and i'll define three things
02:28 - one is the name which is
02:32 - null okay
02:35 - which is null another is the age
02:38 - which is also null okay
02:41 - and another is the gender
02:45 - okay which is also null
02:48 - okay so you can
02:53 - for your simplicity you can define the v
02:56 - name b
02:56 - name and v8 vgender so that you can
02:59 - refer to this
03:00 - using vue.js okay and
03:03 - the first condition what we are going to
03:05 - define first we will define
03:07 - if this dot rename
03:12 - and this dot v
03:16 - h and this dot
03:19 - be gender then you can simply
03:24 - return true
03:28 - and simply return true and at the same
03:31 - time
03:32 - i'll have an errors which is
03:35 - uh which will store the errors and this
03:40 - dot errors so if this is true
03:44 - so what we need to define if this is
03:47 - true
03:48 - then what we can do this dot errors
03:52 - this is going to empty
03:55 - adding okay and then
03:59 - if uh what i mean like what i mean to
04:02 - say
04:04 - you can like okay
04:07 - i just got a little bit confused if dot
04:09 - this dot b
04:10 - name if it exists if this also exists
04:13 - and this also exists
04:14 - then you simply return true else
04:17 - you can restart this dot errors is equal
04:20 - to empty array
04:22 - and if not this dot rename
04:27 - okay then you need to define
04:32 - this dot errors
04:35 - dot push
04:39 - name name required
04:44 - okay and in the same way we will have
04:47 - three conditions
04:49 - if this dot b h
04:53 - then i'll put age required
04:56 - and this dot v gender
05:00 - and i'll put gender required
05:04 - gender required okay
05:07 - so i have put three conditions for the
05:10 - form validation
05:12 - okay and this i hope this is perfectly
05:14 - fine
05:15 - so you must be confusing why i did this
05:18 - because
05:18 - you don't want to accumulate errors
05:20 - again and again that for every condition
05:23 - you need to check if this is all the
05:25 - three exist then you return
05:26 - true then you put this dot errors is
05:28 - equal to
05:29 - you make an empty array and you try
05:31 - making checking for each condition in
05:33 - this
05:34 - okay so this is how we work and i have
05:37 - put three conditions
05:38 - so this look a pretty clean code and
05:41 - let's move
05:42 - forward with this so next in form.html
05:47 - you can define input
05:52 - type is equal to text and
05:55 - you need to just remodel this
06:00 - is equal to v name and
06:04 - in the same way you can define input
06:07 - type is equal to age oh input type is
06:11 - your
06:11 - number because age is a number and you
06:14 - need to define this with
06:16 - v model with h v model
06:21 - is equal to this and you need to define
06:25 - two radio buttons
06:26 - input type it is equal to radio
06:30 - name is equal to gender
06:33 - okay and v model
06:36 - that's why i told you to give them a
06:38 - name with v
06:39 - v model is equal to v
06:43 - gender okay and
06:48 - value is equal to male 1
06:53 - in the same way you can give input type
06:55 - is going to radio names you don't do we
06:57 - need models will
06:58 - be gender and value is equal to female
07:01 - so let's refresh our form so i hope we
07:04 - are getting all the things
07:06 - yes so we are getting the things and we
07:09 - need to
07:09 - define labels okay okay and
07:13 - for that what we can do
07:16 - input type is go to radio
07:21 - we need to define a radio button so
07:25 - for that first for the above 2 we can
07:28 - define a placeholder
07:30 - and for the last one we need to define a
07:32 - radio
07:34 - we need to define a radio button okay so
07:37 - for this what we can give
07:40 - placeholder enter
07:44 - your name
07:48 - and for this let's refresh so here you
07:52 - have a placeholder enter your name
07:54 - and for the next one i can give place
07:57 - holder
07:58 - is going to enter your
08:02 - age okay now
08:06 - for
08:11 - now for the other two uh sorry for the
08:13 - interruption now for other two we can
08:15 - give an id
08:16 - is equal to mail and
08:20 - id you can give this a value as female
08:24 - and id is equal to
08:28 - female and you need to find two labels
08:32 - one is the you can put a break statement
08:34 - here
08:37 - break statement here
08:40 - okay and you can put a label label
08:45 - made and you can put label for
08:50 - mail and label
08:54 - for female
08:59 - so that's uh how we define the form and
09:02 - when we refresh so we have got our form
09:05 - okay now
09:08 - that's a like id is equal to female
09:13 - label for male is perfectly fine
09:20 - and when we refresh so
09:24 - this is working perfectly fine but i'm
09:26 - assuming that i'm missing with the
09:27 - female label
09:28 - so let me check to define a female tag
09:32 - inside this label
09:34 - that was i was missing so let me refresh
09:36 - the page so i have
09:38 - works perfectly fine so what you need to
09:40 - define uh
09:42 - just for the simplicity i'll define
09:45 - a paragraph paragraph
09:49 - and i'll say
09:53 - you selected your details
09:58 - so this is just for the your details is
10:01 - your details are we name
10:06 - vh
10:09 - and be gender
10:14 - okay so let me refresh the page and i'll
10:17 - show you
10:18 - this is my name this is my age and this
10:21 - is my gender
10:21 - so this works perfectly fine but what we
10:24 - if
10:25 - we forget to fill any one so for that
10:28 - you need to define
10:30 - a input type is able to submit
10:33 - input type is always submit and you need
10:36 - to define
10:37 - a value
10:40 - a value which says submit
10:44 - okay now
10:47 - what i will show you you uh i have to
10:51 - define errors so for that i'll do
10:58 - i i give a v if condition if errors dot
11:01 - length is greater than 0
11:03 - because i need to show the condition
11:06 - on the front end so how i'll show you
11:09 - i'll show you
11:13 - so for that what you need to define
11:16 - you need to define
11:19 - div v if
11:24 - errors dot length
11:27 - is greater than zero this means there
11:30 - are some errors and i close this div
11:35 - and i'll use the ul tag
11:39 - and i'll close this ul and li
11:43 - tag and the style is equal to
11:46 - i'll give style is equal to color red
11:50 - okay and i'll give a v for loop v
11:54 - for
11:57 - v4 is equal to
12:01 - item in errors
12:04 - you can give item
12:07 - okay or simply you can change this to
12:10 - error and
12:11 - if you want to change this to error then
12:12 - you have to change this to as
12:14 - error as well okay your error
12:17 - in error so let me refresh the page
12:21 - okay there's another property errors was
12:23 - rested but not
12:24 - defined on instance
12:29 - error because i defined to do this this
12:32 - this was error
12:33 - that was a spelling mistake so let me
12:35 - refresh the page
12:37 - so now i hope the spelling has been
12:38 - corrected so let's go to this part
12:41 - yeah so your name is
12:45 - python and if i forget to sum
12:48 - age required gender required so ages
12:52 - 45 then gender required so this was i
12:55 - was doing the same part this was
12:57 - also initialized and if
13:00 - so when something i remove the name
13:04 - i have the age and gender so name
13:06 - required so this is how we handle
13:08 - form handling in view chairs so very
13:11 - good tutorial so thank you everyone for
13:12 - watching this
13:13 - so i'll catch you in the next tutorial
13:15 - thank you everyone