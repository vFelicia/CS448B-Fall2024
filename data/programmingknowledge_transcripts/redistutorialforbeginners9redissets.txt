00:00 - hey guys welcome to the next video on
00:01 - redis tutorial for beginners and in this
00:03 - video we will learn what are sets and
00:05 - how to use sets in redis so first of all
00:09 - what are sets so reddish sets are an
00:14 - unordered collection of unique strings
00:18 - right so by unique I mean whatever
00:22 - values set contains they are all unique
00:26 - so no repetition is allowed here okay
00:30 - and they are unordered uh uh you know
00:32 - list so they are not ordered and they
00:35 - are unique so let's uh see how we can
00:39 - use sets in uh practice so I have
00:43 - already started my ready server and on
00:46 - my CLI first of all let me uh just clear
00:51 - all the keys which I already have so I
00:55 - will just say keys and I have only one
00:58 - uh key which I'm going
01:00 - to flush all and now let's create a set
01:06 - okay so to create a set you can just use
01:10 - S for set and then add okay so s add and
01:15 - then give any name any name to a key so
01:18 - for example my set is a key here and
01:22 - then you can add members here one or
01:25 - many okay so for example I want to have
01:28 - a set of numbers so let me say this is
01:31 - my first set so I will name it set one
01:34 - my set one and let's say I add here 1 2
01:39 - 3 4 for example okay and I just uh press
01:44 - enter which is going to create a set and
01:48 - add these four numbers now here I have
01:52 - provided four different numbers right so
01:55 - they are all unique and to view uh the
01:58 - members of a set you just do s members
02:03 - okay so s members and the key name my
02:06 - key name is my set 1 and you can view
02:09 - all the members of the set right now for
02:12 - example in this set I want to add one
02:14 - more value so I just say s add and then
02:19 - my set one and I want to add three here
02:24 - right and I already know that here I
02:27 - already have three in my set and I want
02:30 - to uh you know add one more uh three to
02:33 - the set which is not allowed right so
02:36 - it's going to give me zero in return
02:39 - that means this three is not added to
02:41 - the set because three is already there
02:44 - okay we can just prove with this by
02:47 - using S members uh and then the set name
02:51 - so you can see set is not changed the
02:53 - values in the set remain same because uh
02:56 - they must be unique okay on the other
02:59 - hand when I do s set one 5 which is a
03:02 - new member in the set I can just uh
03:06 - verify this so you can see this time
03:08 - it's added and you can verify it with
03:12 - this value if you get one here that
03:14 - means the number is added to the set and
03:17 - if you get zero here that means number
03:19 - is not added to the set right now for
03:23 - example if I want to know how many uh
03:28 - values are there in the set so how many
03:30 - members are there in the set so I can
03:32 - just do s
03:35 - card and then the name of the set my set
03:39 - one okay my set one and I can see there
03:43 - are five members in the set okay now uh
03:48 - let me create one more set so I have my
03:52 - set one let me clear the terminal first
03:54 - and now I will create uh set two so set
03:59 - add or S add my set two here okay and
04:05 - let me add some more numbers here this
04:07 - time I will uh add for example 5 8 7 6 4
04:14 - and 9 in this set okay and then press
04:17 - enter and I can view this set by S
04:22 - members here and the key name as set two
04:26 - and you can see these are the member of
04:27 - second set right now if you have
04:29 - multiple sets you can subtract one set
04:32 - from other using S diff okay so you can
04:37 - use S diff and this s diff command
04:41 - Returns the members of the set resulting
04:44 - from the difference between the first
04:47 - set and all other successive sets so
04:49 - this is the difference uh so I will just
04:52 - add my set one as my first set and then
04:57 - I will just uh give the second set as my
05:01 - set 2 okay and then press enter and it's
05:05 - going to give me the difference between
05:07 - these two set let me show you the values
05:10 - of uh the set one also so we can verify
05:15 - so you can see in the set one we have
05:17 - value 1 to five and then in the set two
05:20 - we have values 4 5 6 7 8 9 so from SD
05:27 - it's going to give you the values which
05:29 - which are there in the set one but they
05:33 - are not there in the set two okay so
05:36 - these values these three values are not
05:39 - there in the set two right but uh four
05:42 - and five are there in the Set uh two so
05:45 - they are discarded so SD is going to
05:48 - give you the difference that means
05:52 - whatever values are there in set one and
05:55 - not there in set two now if you want to
05:59 - uh know know the S diff and save it into
06:03 - the third set for example then you can
06:05 - do that also so you can just write SD
06:08 - and then store and then the destination
06:11 - so I'm going to save the difference in a
06:14 - new set so for example my set three
06:17 - right and then uh the difference between
06:21 - these two sets so my set one and my set
06:24 - two so these three values will be saved
06:28 - in the new set which is my set 3 okay
06:31 - press enter and then you can see by S
06:35 - members my set 3 you can see all these
06:39 - values are saved in the set three which
06:42 - is the difference between my set one and
06:45 - my set two now you can do the union also
06:49 - Union of uh the set so for example I
06:52 - want to do Union I can just write s
06:56 - Union and the set name so my
07:00 - set one and my set two okay so I wanted
07:05 - to do the union of set one and set two
07:08 - and then press enter and it's going to
07:10 - give you uh these values so Union means
07:15 - whatever values which are there in the
07:18 - first set also and second set also the
07:21 - combination of that unique value right
07:24 - so all the unique value which are there
07:27 - in the first set and second set set so
07:30 - uh these value were in the first set and
07:35 - these value which are unique in the
07:38 - second set so this is the combination of
07:41 - s Union okay and same you can do for
07:45 - storing so you can just write s Union
07:48 - store here so just write s Union store
07:52 - and I'm going to store it in set 4 for
07:55 - example so my set 4 the union of of set
08:00 - one and set two right press enter and
08:03 - Union is saved I can do s member my set
08:07 - 4 and you can see now it has 1 to9 which
08:11 - is the union of set one and set two okay
08:14 - so in order to store use S Union store
08:17 - now if I want to remove some members
08:19 - from a set I can do s REM for removing a
08:24 - a value from a set or member from a set
08:27 - and for for example I want to remove uh
08:31 - some member from set 4 and I want to
08:34 - remove for example 9 okay and then press
08:38 - enter it's going to remove nine from the
08:40 - set four and I can do s members one once
08:44 - again and you can see 9 is not there
08:46 - anymore okay you can remove multiple
08:49 - values for example 8 7 6 and so on and
08:55 - these will be removed so now I have only
08:58 - up to five values because 876 are
09:01 - removed now for example I want to remove
09:03 - a random value from the set so I don't
09:07 - want to uh remove a specific value but I
09:10 - want to remove a random value so for
09:12 - example I can do s pop here to remove a
09:17 - random value from a set so my set 4 for
09:21 - example and for example I want to remove
09:24 - only one value from here right so I can
09:27 - just uh press enter it says three so it
09:31 - has removed three from this set okay so
09:35 - let's do s member S4 and you can see
09:39 - three is no more there in the set four
09:43 - okay so it has picked a random value
09:46 - from the set and removed it okay I can
09:50 - give for example s poop uh my set 4 for
09:55 - example I want to remove two random
09:57 - values so I can just do that and now it
10:02 - has removed four and one from the set
10:06 - and now my set is only of two values or
10:09 - two members two and five okay so s poop
10:13 - is to remove the random value from the
10:16 - set now let me clear this terminal and
10:20 - let me just print uh the values of set
10:22 - one and set two once again so set one
10:25 - has 1 to 5 and set two have 4 to 9 now
10:29 - there is a command called s inter and S
10:32 - inter command gets the element of a set
10:36 - after the intersection of all the
10:38 - specified set okay so it's going to give
10:41 - you the intersection of uh all the
10:44 - specified set so just do s enter for
10:48 - example my Set uh one and my set two and
10:54 - then press enter and it's going to give
10:56 - you the intersection intersection means
10:59 - uh these values are there in both the
11:02 - sets so these are the intersection of
11:06 - both the sets so four and five are there
11:09 - in set one and set two so it's going to
11:11 - give you those value only and as we have
11:14 - seen in the case of s diff and S Union
11:18 - you can do uh for example s inter store
11:23 - so you can store the intersection into a
11:26 - new uh set so s inter store and for
11:30 - example I want to save this in set five
11:33 - and then press enter and then I can just
11:36 - see the content of set five which is
11:39 - four and five which is correct now the
11:41 - last command I want to show here is s
11:43 - move command so s move and this command
11:47 - is used to uh you know transfer or move
11:51 - value or member from one set to the
11:54 - another set right so for example I want
11:57 - to move one
11:59 - from my set one to my set two okay so I
12:04 - want to move this value to the set two
12:07 - so what I can do so first of all the
12:09 - source source is my set one and I want
12:14 - to uh move it to the destination which
12:16 - is my set two and I want to transfer the
12:21 - value one member one right so press
12:24 - enter it says one that means the
12:27 - operation is successful so let let me
12:29 - see the S member or members of set two
12:35 - and now you can see one is moved to the
12:39 - set two earlier one was not there in the
12:42 - set two but now we have one in the Set
12:47 - uh two and let's see the contents of set
12:50 - one also so you can see one is no longer
12:54 - there in set one because it's moved from
12:57 - set one to set two so these are some of
13:00 - the most frequently used command in
13:03 - redis sets I hope you enjoyed this video
13:06 - please R comment and subscribe and bye
13:07 - for now