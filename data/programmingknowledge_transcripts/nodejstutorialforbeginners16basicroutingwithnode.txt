00:01 - hello guys welcome to the next video on
00:02 - node Ro for beginners in the last video
00:05 - we have seen how we can send Json data
00:09 - to the browser from nodejs right and
00:13 - this was the code I have written in the
00:15 - last video now in this video we will
00:18 - talk something about routing and we will
00:22 - talk uh how we can uh you know route our
00:26 - data and C different uh
00:30 - responses for different uh requests
00:34 - right so let's get started what I'm
00:37 - going to do is um I have taken the last
00:41 - uh video code here and I have added one
00:44 - more line here which is logging the
00:48 - requested URL okay just uh this req. URL
00:53 - I have added this code uh extra and
00:56 - everything is same from the last uh
01:00 - video example okay and now what I want
01:03 - to do here is I want to first of all run
01:05 - this uh app and I want to just open my
01:09 - browser and refresh my browser so the
01:13 - base URL here is forward slash right
01:17 - this is the URL now for example I want
01:20 - to request uh something like API for in
01:25 - my URL I want to add uh for/ API and I
01:29 - want to to request some data when I
01:32 - request or I extend my URL with this
01:35 - for/ API and when I do this you can see
01:39 - uh the request is uh Gone with the
01:43 - different URL but the response is same
01:48 - right and for example I want to add
01:51 - about page and I will press enter it
01:55 - gives always the same
01:57 - response whatever the requested URL is
02:01 - you can see I have requested the for/
02:05 - API uh URL or uh for/ about URL or for
02:10 - example home let's say home the you know
02:15 - uh response is always the same so how we
02:18 - can route these uh different URLs
02:22 - according to the request we want to send
02:24 - the response so let's see how we can do
02:27 - it so I'm going to go to the code once
02:30 - again
02:31 - here and first of all I will use this uh
02:36 - URL to pass uh which kind of uh you know
02:40 - request is coming to us and then on the
02:43 - basis of this request we can cater the
02:46 - result right so you can see I have
02:50 - already made uh uh index.html in the
02:54 - previous videos right so this is just a
02:58 - sample HTML which I have have uh created
03:01 - in the previous video so for example I
03:04 - would say this is my homepage okay so I
03:07 - will just add home page and when
03:11 - somebody uh you know
03:14 - request either the URL forward slome or
03:20 - just the forward slash then I want to
03:23 - cater this uh index.html or homepage
03:27 - there so what I'm going to do here is uh
03:31 - first of all Let's
03:34 - uh just take the space here let's make
03:38 - the space here and first of all we will
03:40 - add the code to pass the URL so just
03:43 - write request which is the first
03:46 - argument here request point or dot URL
03:51 - which is going to give us the URL and
03:53 - then give triple equals uh remember I'm
03:56 - using triple equals because it's always
03:58 - a good practice to use triple equals
04:01 - instead of double equals so try always
04:04 - using the triple equals right and then I
04:08 - want to match it with for example
04:10 - forward
04:11 - slash
04:13 - home or if it's only a forward slash
04:18 - okay so I'm just going to copy this and
04:21 - paste it here and if it's a forward
04:24 - slash then what I want to do here is I
04:28 - want to give the text response so I will
04:31 - just copy this line of code but this is
04:35 - HTML right so instead of this I can just
04:38 - say
04:40 - text/html
04:42 - right now in the next line we are going
04:44 - to create the stream of our HTML page
04:48 - and then we want will send it this will
04:51 - be HTML here so
04:54 - fs. create read stream and and we want
05:01 - to uh create the restream from our
05:05 - index.html so we can just directly give
05:10 - index.html which is already present
05:13 - right and we will pipe it to the
05:17 - response so we just write to pipe and
05:21 - then just write response or Rees okay so
05:26 - this is going to just send the
05:28 - index.html when ever this home is
05:31 - requested or the base URL is requested
05:35 - or else we can just write if or you can
05:40 - better write else if right so just
05:43 - write else if and if the
05:50 - request URL is for
05:53 - example the Json object so I will just
05:56 - say triple equals uh a API so this is
06:00 - just kind of a API and uh whenever this
06:05 - API is requested then we want to uh give
06:09 - this uh Json object so I will
06:12 - just create a if condition and inside my
06:15 - if condition I want to send all this uh
06:18 - Json data right something like this okay
06:23 - so what will happen now I'm going to
06:25 - just forward format it just right click
06:27 - on your Visual Studio code and just
06:29 - click format it's going to format your
06:31 - code right and let's uh rerun our code
06:35 - once again so close the code and rerun
06:38 - it once again and now when I do for
06:41 - example just a base URL and press enter
06:44 - it's going to show us the homepage which
06:47 - is the index.html it's sending from the
06:49 - server or whenever we write here for/
06:53 - home we will see the same response the
06:56 - homepage but whenever we write here API
07:00 - for example API then it gives us the the
07:04 - Json response right and in the same way
07:07 - we can uh you know give
07:10 - different response on different requests
07:14 - so let's add one more uh response for
07:17 - example so for example I want to have a
07:20 - about page so I'm going to create about.
07:23 - HTML so I will just say about do
07:28 - HTML and in this about. HTML I'm just
07:31 - going to copy the code from
07:34 - index.html and I will just say here
07:37 - about
07:38 - page okay so this is my about page and
07:42 - in my
07:43 - app.js I can uh just copy this code from
07:48 - here I would just say else and my code
07:53 - the code which I have copied which is uh
07:56 - this code and instead of uh home home I
07:59 - will just
08:01 - add about here and I will just remove
08:05 - this right and instead of index.html I
08:09 - will just uh replace it by about. HTML
08:14 - right and let's run the code again and
08:17 - let's see if it works or not so I'm
08:19 - going to open the browser and this time
08:21 - I will just ask
08:23 - for about and it gives us the about page
08:27 - right or home then it gives us the
08:30 - homepage right now for example let's say
08:35 - I'm just uh requesting some random URL
08:40 - once again is going to uh you know
08:43 - request it but it's not never get going
08:46 - to get any response from the server
08:49 - because server cannot resolve this URL
08:52 - right now in this case uh whenever
08:56 - server cannot resolve the URL I ideally
09:00 - we want to send the response 404 which
09:03 - is not found right so let's add this
09:06 - response so in the last condition I will
09:09 - just add a else condition which is the
09:12 - last condition for us and let's create a
09:15 - 404 HTML page so I'm going to right
09:18 - click and I will just this is my
09:21 - 44. HTML page right and once again I'm
09:25 - going to just copy the HTML content from
09:29 - uh index.html or about. HTML and paste
09:33 - it here and I will just write here
09:37 - 404 and I will just write not
09:43 - found
09:44 - right and now I will just add the
09:47 - condition here so in the else condition
09:49 - I'll just copy these two lines once
09:52 - again and here I will just write 44.
09:58 - HTML and instead of giving 200 response
10:02 - this response I will replace by 404
10:05 - right which is uh not found status code
10:09 - and let's run the code
10:12 - again and in the browser let's try this
10:16 - random URL again and now it gives the
10:19 - 404 response to us okay so home and we
10:26 - have
10:27 - uh about
10:30 - and we have our
10:32 - API which gives us the Json response or
10:36 - any other random URL will give the 44
10:40 - response
10:41 - right so in this way you can uh you know
10:45 - route your request and give the response
10:48 - according to the uh you know URL
10:51 - requested now there are much better ways
10:55 - of uh routing your requests uh using
10:59 - some extra modules or third party
11:02 - modules and this is we are going to see
11:06 - whenever we will learn how to use npm
11:09 - modules right so there are uh you know
11:13 - thousands and thousands of thirdparty
11:16 - module available to perform different
11:19 - functionalities uh so we can use these
11:22 - modules using npm and this is what we
11:25 - are going to uh see in the future how we
11:27 - can use these modules so all these
11:29 - things can be done in a much easier and
11:32 - professional way so I hope you have
11:35 - enjoyed this video please Rite comment
11:36 - subscribe and bye for now