00:00 - hi in this video we are going to learn
00:02 - how to test a node.js application so why
00:06 - do we use automated testing framework
00:08 - because whenever your closet becomes
00:11 - scalable in size or whenever like a new
00:14 - developer comes to your project and if
00:17 - they add some new features and they want
00:19 - to see that whole project is are not
00:22 - break out so they can just simply run
00:25 - their testing suit and they can see that
00:28 - they haven't brought out so that's why
00:33 - we are using a testing framework for
00:35 - many purposes like refactoring a code
00:37 - maybe when you had a factor some code in
00:40 - your project and and this and you can
00:43 - see that your features that we have
00:46 - added new features it's not like break
00:49 - so we are gonna use in here the chess
00:53 - chairs start I mean just just framework
00:57 - in here so in here we just say panel and
01:03 - how to install this just years so in
01:07 - here just use NPM install test test save
01:10 - just there just because we are gonna use
01:15 - this framework in just our development
01:21 - purpose so we have installed it and
01:24 - still dependency in him and also I have
01:27 - added a test script in here because
01:31 - we're gonna run it as a test suite so
01:36 - we're gonna use NPM testing here and
01:39 - let's see what happened so we we see
01:43 - that - they have chipped all the faults
01:46 - but they count more tests found
01:51 - so yeah we're gonna just create a new
01:54 - test folder I have consecrated I have
01:57 - created a test folder in here and you're
02:01 - gonna just you create a new file and
02:04 - let's give a name apt door test
02:07 - tortillas wanting to remember that you
02:11 - have to give the god test extent
02:13 - in here because that's how that just
02:16 - will see that till you have added one
02:19 - file one test file and that you are dead
02:23 - that just will run here so globally the
02:28 - the gist framework is not required here
02:33 - to like like we had used cons just just
02:38 - and require it from the gesture for our
02:42 - library where it's globally so in here
02:47 - the gist provides one function and name
02:54 - is test function which is a global so in
02:59 - here it requires two arguments 1st
03:01 - argument is a string a string is the
03:04 - name of the feature that you have added
03:08 - you can give any name in it and second
03:10 - argument is a callback function or just
03:13 - as a function which will run which will
03:17 - check that your test is running or not
03:19 - then here just say for introduction
03:22 - apart that's the hello world that's our
03:25 - name of it's just an introduction so in
03:29 - here I'm going to simply run this with a
03:31 - blank in nothing here
03:34 - so if you run it this we're gonna see
03:37 - that it passes the test but there is
03:42 - nothing here so it passes anything
03:44 - because it is not throwing any error
03:48 - from here so let's say I'm going to see
03:51 - you how can we try to week know that we
03:54 - can turn L to throw new error and let's
03:59 - say a failure and if we just run this
04:04 - file we're gonna see that it shows
04:06 - Annette that's because it's seeing that
04:10 - showing and L so it will throw in it
04:12 - yeah so no I'm going to just simply
04:17 - create a new file in here and in file in
04:23 - here and let's say the file name is Matt
04:26 - but
04:27 - Cheers because that's how we're gonna
04:33 - we're gonna just export the file from
04:37 - here to mad dog test or Cheers
04:39 - so that it will run from here and see so
04:44 - in here we're gonna just simply create a
04:46 - new new function let's say tip total tip
04:51 - total tip we are just calculating a tip
04:55 - 1 that's 1 so let's say proper name calc
05:00 - calc total T so it passes how much
05:06 - argument from here so our segment will
05:10 - be total and second argument will be the
05:15 - tip percent so the const tip will be
05:24 - what tip will be totaled multiplied with
05:33 - t percent so in here what we are part NT
05:37 - person will be as like if it is a 30%
05:40 - means point three that's what I'm
05:43 - passing in from here and what it will
05:47 - return it will return total plus T now
05:55 - we are going to just export from here so
05:58 - let's say module dot export module dot
06:04 - export calc total tip and in here I'm
06:10 - just going to require it from my torches
06:17 - and wire from I'm going to be the same
06:20 - at equality required from the quantum
06:26 - dot dot slash not yeah so in here I'm
06:35 - going to create a new test file I'm
06:37 - going to remove this one there is no
06:39 - need for this
06:41 - so I'm going to what typical so cert
06:45 - calculating should calculate total total
06:58 - deep yeah I know I'm gonna just create a
07:04 - new it constituted that's that word it's
07:07 - returning on that or the calc total tip
07:12 - function in here we're gonna just keep
07:14 - the total let's say 10 and the 0.3 so
07:23 - yeah so what it will return if total is
07:28 - not is equal to let's say is equal to
07:35 - what it will do what point 1 point 3 is
07:37 - the answer of this as we know it
07:43 - so in here if it is not equal 1 point 3
07:48 - so it will give an error so just throw
07:51 - an error here turn you adder through a
07:57 - new error just say like should be total
08:04 - would be total should be total it should
08:10 - be 1 point 3 but cut
08:21 - torta
08:27 - now let's see just run it and we're
08:30 - gonna see what happens so if we just end
08:33 - him test you can see in here that it
08:39 - passes the test suit test cases yeah
08:43 - you can see there it passes like this
08:45 - now if we just like here are in the mad
08:51 - dog Cheers
08:53 - if we just do something wrong like we
08:57 - are gonna use plus tip in here once so
09:01 - if we just add one plus tip in here and
09:05 - we just run here we can see it has been
09:12 - failed because total should be 13 but
09:15 - code 16
09:16 - so it it is running and you can see the
09:19 - total is 16 in here that's why it's
09:22 - giving an error but you can see that we
09:25 - have to use some own on coat in here so
09:33 - we can also use that what assert
09:37 - something in here that just years
09:40 - providing him so in our in the guide
09:45 - there is something called expect which
09:50 - hour which suggests provides in here so
09:53 - we're going to expect value in here so
09:57 - we don't have to use this for this one
09:59 - you know we can simply use expect expect
10:08 - one expect 13 and after that we're gonna
10:15 - use this value to be so how can we use
10:21 - this so this is what it is using that
10:28 - expect total if we just use our English
10:33 - sentence included what we expect total
10:36 - to be
10:39 - - b12 b13 so if we just run it and we
10:48 - can see in here that it failed that's
10:54 - because we expected 13 but receive 16 so
10:58 - that's how it's been done so but just a
11:02 - one line of code we can see that what is
11:06 - given here here so if we just collect
11:10 - all this mistaking that we have tell you
11:13 - and just run it we can see that it has
11:23 - been passed from from the test suite so
11:27 - this how in the docs there are many
11:30 - useful a mattress that is being used in
11:35 - registering work and this all this can
11:38 - be helpful like you can see that if we
11:41 - to be null yeah we can use a to be null
11:44 - to be non-metal and through training
11:48 - error matchings and epsilon so that's so
11:55 - that's how it's been done so now if we
11:57 - just like do something like when we are
12:01 - just not passing the percentage
12:03 - something in here so what it will be -
12:06 - so let's say if we don't you as a
12:09 - default document let's say we are using
12:12 - point to which people argument now we
12:15 - have to make another test within here
12:19 - so in here should calculate should
12:28 - calculate total tip with default tip
12:40 - percent so now so now what to do so now
12:51 - it will just we are going to corn
12:54 - starter and we're gonna use Matt and
13:00 - we're gonna pass 10 and just stand in
13:03 - here and what we expect we expect total
13:10 - to be 12 yeah that's what we want in
13:16 - here so if we just run it and PM test we
13:24 - can see that all the test cases has been
13:27 - passed so yeah that's how we do the this
13:31 - is the introduction of the chest so
13:35 - that's how we do so it's been used
13:39 - because it helps to like collaborate
13:42 - whenever like we are using a new
13:48 - framework so it's very helpful for us so
13:52 - yeah thank you