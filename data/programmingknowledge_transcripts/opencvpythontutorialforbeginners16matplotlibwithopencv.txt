00:00 - hey guys welcome to the next video on
00:02 - open CV tutorial for beginners using
00:04 - Python in this video we will talk about
00:07 - a library called matplotlib which you
00:10 - can use with open CV images so first of
00:13 - all what is my plot lib so matplotlib is
00:17 - a plotting library for python which
00:19 - gives you a wide variety of plotting
00:22 - methods and on the official website
00:25 - which is matplotlib dot o-r-g you can
00:29 - see matplotlib is a Python 2d plotting
00:33 - library which produces publication
00:35 - quality figures so it's primarily a 2d
00:40 - plotting library but it's widely used
00:43 - with OpenCV to display graphs and images
00:47 - and histograms so we will see how we can
00:50 - use matplotlib with OpenCV it's also
00:55 - written here that for simple plotting
00:58 - the pie plot module provides a MATLAB
01:02 - like interface so first of all let's see
01:06 - how we can install matplotlib and then
01:09 - we are going to see how to use
01:11 - matplotlib with OpenCV so to install
01:15 - matplotlib using pip you just need to
01:18 - open your terminal and then just give
01:20 - this command which is pip install mad
01:24 - plot lib and then press ENTER and in
01:30 - some seconds this matplotlib library
01:33 - will be installed using pip so now you
01:37 - can see matplotlib is installed on my
01:40 - Windows operating system and to check it
01:42 - I'm going to just give the Python
01:46 - command and here I'm going to import
01:48 - matplotlib so I'm going to just write
01:50 - from mat plot lib import PI plot as PLT
01:59 - ok and then press Enter and if this
02:02 - import doesn't give you any error that
02:04 - means it's imported successfully and you
02:07 - can start using matplotlib now as we are
02:11 - using pycharm ide
02:13 - we show you how you can install
02:16 - matplotlib on PyCharm so just open your
02:20 - pie charm IDE and then here just click
02:23 - on file and then settings and then go to
02:26 - project colon your project name my
02:29 - project name is open CV examples and
02:32 - then click on interpreter and you can
02:35 - see other packages are already there and
02:38 - we just need to install the matplotlib
02:43 - package so just type here in the search
02:46 - matplotlib and you will be able to find
02:49 - matplotlib here in the results so just
02:52 - click on matplotlib and then just click
02:56 - on the install package so i'm going to
02:59 - just click on the install package and in
03:01 - some seconds matplotlib library will be
03:04 - installed in your pycharm ide so you can
03:07 - see this message which says package man
03:10 - flatly installed successfully that means
03:12 - we can close this window and then you
03:17 - will be able to see matplotlib is
03:19 - available in your project interpreter so
03:23 - everything is fine and I'm going to just
03:25 - close this and now I will be able to
03:29 - import matplotlib so I'm going to just
03:31 - write from matte lot Lib import pie plot
03:39 - as PLT now in order to show the image
03:44 - which you read using the opencv i'm read
03:48 - method you can use this code so just
03:52 - right PLT dot i am sure so there is also
03:58 - a method inside your pie plot library
04:02 - which is available inside mantle or lib
04:04 - and this mustard you can use to show the
04:08 - image which you have read from the
04:12 - opencv IM read method so for now just
04:14 - write this kind of code and to show the
04:18 - matplotlib window you just need to write
04:22 - PLT dot show so this is going to show
04:26 - this image
04:27 - using the matplotlib library so we are
04:30 - opening this image using the open CV I
04:34 - am show window as well as matplotlib
04:36 - window also so let's run this code and
04:40 - let's see what's the result which we are
04:42 - getting so you can see this is the image
04:46 - which is loaded using the matplotlib and
04:49 - this was our original image which is
04:52 - loaded using the opencv library and
04:56 - straight away you can see some
04:59 - difference so this is the original image
05:01 - which is the colored image and in the
05:04 - matplotlib window we also want the same
05:08 - result but it's giving us the different
05:11 - result and the reason behind this is
05:15 - OpenCV reads the image in the BG r from
05:19 - ed and the matplotlib reads the image in
05:23 - the r BG format so in order to show this
05:29 - kind of colored window using matplotlib
05:31 - you need to convert your image from BG r
05:35 - to r BG and then only you will be able
05:39 - to see this kind of coloured image using
05:42 - mat plot lib so I'm going to just close
05:46 - these windows and now after I'm showing
05:50 - this image using the cb2 I am show
05:53 - method I'm going to convert this image
05:56 - so I'm going to just right I am G is
05:58 - equal to C v2 dot C V T color and then
06:04 - I'm going to convert this image from BG
06:09 - r image so I'm going to just write C v2
06:12 - dot color underscore BG r to RGB okay so
06:19 - our matplotlib library shows the image
06:23 - in the RGB format and the open CV reads
06:27 - the image in BGR format so now we have
06:31 - converted our image from BG r to RGB
06:35 - image and now we are showing this image
06:37 - using the matplotlib and
06:40 - let's run this code and let's see what
06:41 - happens now so now when we run this code
06:44 - you see both the image looks the same
06:49 - right now let's see this advantages of
06:52 - using matplotlib so you can see this is
06:57 - quite static window but when you see in
07:02 - matplotlib when you hover over this
07:04 - image you can see x and y coordinates of
07:06 - the mouse point and this is helpful you
07:11 - can also save this image in the form of
07:13 - a PNG file so you can just press this
07:16 - and save this image wherever you want
07:18 - you can also zoom this image if this
07:22 - feature is available there is also
07:25 - configuration subplots options so you
07:28 - can you can just increase these values
07:32 - left bottom wherever you want to place
07:37 - your image you can do that these are
07:42 - some options which are available here
07:44 - you can also reset these options and you
07:47 - can see the coordinates here so because
07:49 - matplotlib is primarily a 2d plotting
07:53 - library so you can see the x coordinates
07:56 - and Y coordinates and because this image
07:59 - is about 512 by 512 pixels that's why
08:05 - here it's showing 0 to 512 and here also
08:10 - on the y axis 0 to 512 so this is how
08:15 - you can load your image using MATLAB and
08:19 - now I'm going to show you one more thing
08:21 - and this is when you write PLT dot x
08:25 - ticks here and then when you pass MT
08:28 - array here which is empty square bracket
08:30 - comma PLT dot Y ticks and also here you
08:37 - pass MT array this is going to hide the
08:41 - tick value on X and Y axis so now when I
08:45 - run this code and you can see now that
08:50 - these X ticks and Y takes on
08:54 - X and y-axis are gone so let me just
08:57 - comment this out once again and you will
09:01 - be able to see this x and y-coordinates
09:03 - here on the image and when you use this
09:08 - code which is to hide the ticks on the x
09:13 - and y axis then you will see the image
09:16 - without these X and y-axis ticks so if
09:22 - you remember in the last video we have
09:24 - seen how to use simple threshold again
09:27 - open CV and we were using six windows to
09:32 - show these six different images using
09:36 - open CV now let's say you want to show
09:40 - all these six windows in one Matt lot
09:45 - Lib window how you can do it with the
09:48 - use of matplotlib I'm going to show you
09:51 - so first of all we are going to import
09:53 - matplotlib import pie plot as PLT and
09:58 - then what we are going to do is we are
10:01 - going to define the titles and then we
10:05 - are going to define these six different
10:07 - titles for six different images so first
10:11 - one is our original image second was the
10:15 - trash binary third was trash binary in
10:18 - verse both was trunk fifth was to zero
10:21 - and six was to zero inverse in the same
10:25 - way we are going to define a variable
10:27 - called images and inside the square
10:30 - bracket we are going to pass first of
10:32 - all our original image and then th one
10:36 - comma th two comma th three comma th
10:41 - four comma
10:42 - th 5 okay so these are the six value we
10:47 - want to show and these are the six
10:50 - titles of these images and now we are
10:54 - going to use the for loop so for I in X
10:59 - range so using the Python X range we are
11:04 - going to just iterate over these six
11:07 - values
11:08 - so I'm going to just write X range and
11:10 - then the range we are going to provide
11:12 - here is 6 and then inside this for loop
11:15 - we are going to just call PLT and we are
11:18 - going to call a method called sub plot
11:22 - ok and this subplot method takes few
11:25 - arguments so first argument is the
11:27 - number of rows which we want to show in
11:31 - our main plot live plot so because we
11:35 - have six images so we are going to
11:37 - divide these images into two rows and
11:40 - three columns so the first argument here
11:43 - is the number of rows and the second
11:46 - argument here is the number of columns
11:50 - and the third argument here will be the
11:52 - index of the image so the index of the
11:54 - image will be I plus 1 and then we are
11:58 - going to write comma
12:00 - PLT dot I am sure so this is going to
12:05 - show this image and the index of the
12:09 - image so we are going to just write
12:11 - images and then square bracket I so this
12:15 - is going to give you a particular image
12:16 - at index I and then we want to show this
12:19 - image as a grayscale image so anyway
12:23 - when you use trash holding you use the
12:25 - grayscale image so you just need to
12:28 - write gray here then we are going to
12:30 - show the titles of these images so we
12:34 - are going to just write PLT dot title
12:38 - and then this title method takes the
12:41 - title name which we are getting using
12:43 - this titles array and then at the index
12:47 - I this is going to give you the titling
12:50 - name which we have declared in this
12:52 - title array and at last if you don't
12:55 - want to show the ticks on the images you
12:58 - can give these two method which is PLT
13:01 - dot X ticks and the argument here is the
13:05 - empty list and also PLT dot y ticks and
13:09 - the argument is the empty list and at
13:13 - the end what we want to do is instead of
13:16 - using this kind of code we just want to
13:21 - show
13:22 - or window so we can just say PLT dot
13:26 - show and this is showing us this error
13:29 - unresolved reference yes so this is when
13:33 - you are using Python - but in Python 3
13:37 - this X range is changed to a method
13:40 - called range and that's why it was
13:42 - giving us the error so let's run this
13:45 - script once again
13:47 - and you can see 6 different results and
13:51 - 6 different titles so these are all the
13:55 - titles which are shown here and then the
13:59 - result are shown under these titles
14:03 - so using matplotlib you can include
14:06 - multiple images into one window and this
14:11 - is very useful when you want to show
14:14 - multiple image at the same time in the
14:17 - same window so this is how you can use
14:19 - matplotlib library with OpenCV images
14:24 - and there is a lot of things which you
14:27 - can do with matplotlib so if you want to
14:29 - learn more you can just go to the
14:31 - official website which is matt lot Lib
14:34 - dot o-r-g and then you will be able to
14:38 - see more documentation here so that's it
14:41 - for this video and I will see you in the
14:43 - next