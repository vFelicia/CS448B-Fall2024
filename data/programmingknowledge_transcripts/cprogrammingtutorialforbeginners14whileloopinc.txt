00:00 - hey what's going on guys welcome back to
00:01 - our YouTube channel and welcome to this
00:03 - video this is John from programming
00:06 - knowledge and in this video guys we're
00:08 - gonna talk about loops in c programming
00:10 - so sometimes it is necessary for the
00:13 - program to execute the statement several
00:16 - times and c loops executes the block of
00:20 - commands in a specified number of times
00:22 - until a condition is met so in this
00:26 - video tutorial you will learn about all
00:29 - the looping statements of c programming
00:32 - and along with their use so as you can
00:36 - see computer is the most suitable
00:38 - machine to perform repetitive tasks and
00:41 - it can tirelessly do attach tens of
00:45 - thousands of times okay and basically
00:48 - like every programming language has this
00:51 - particular feature to instruct to do
00:54 - such repetitive tasks with the help of
00:56 - certain form statements so that's why we
00:59 - have this loops and then of course guys
01:02 - in C the C programming language supports
01:06 - like three types of loops so we're going
01:09 - to discuss first while loops eight so we
01:13 - have while loops we have do-while and of
01:19 - course we also have the four loops okay
01:22 - so we're going to dissect each type of
01:26 - loop so that we could you know better
01:29 - understand how it works and how we can
01:32 - use these loops in in a certain
01:34 - situation so basically guys when we say
01:39 - look I'm just going to show you a simple
01:42 - flowchart so we have a V R a simple flow
01:45 - a flow chart that describes the nature
01:49 - of loop or loops in general so we have
01:53 - like start and then we can declare a
01:56 - counter or a variable counter and then
01:59 - our program will try to evaluate the
02:01 - condition and then if the condition is
02:03 - you know returns true it could execute
02:08 - statements and then increment the
02:10 - counter and then
02:13 - again evaluate the condition if the like
02:16 - for example increment counter is equal
02:19 - or you know greater than something and
02:23 - then execute statements increment
02:25 - counter and then evaluate condition and
02:30 - lastly if the condition is met then it
02:34 - will stop the execution of that
02:36 - particular loop so basically guys a look
02:39 - is just you know doing our executing
02:42 - repetitive statements inside our C
02:46 - program so there are like control
02:50 - statements we have statements that we
02:53 - can use so we have break we can have
02:59 - like continue and then of course we have
03:03 - the go-to statement that we have
03:06 - discussed previously in our video
03:08 - tutorial series
03:09 - okay so aside as I've said we will
03:14 - discuss first the while loops in c
03:18 - programming okay so see while loops
03:21 - statement allows to repeatedly run the
03:24 - same block of code until the condition
03:25 - is met and of course when loop is the
03:29 - most basic loop in C programming and
03:33 - while while loop has one condition and
03:36 - it contains four it executes as long as
03:42 - the condition is true and then the
03:44 - condition of the loop is tested before
03:46 - the body of the loop is executed so the
03:51 - syntax for our while loop is like this
03:55 - so we have the keyword while and then a
04:01 - condition so like a test expression and
04:05 - then if this condition is like true then
04:09 - it will try to execute the statements
04:13 - inside this particular wine loop okay
04:17 - now we have like we can have a very
04:23 - simple application for this so
04:26 - for example we will try to implement
04:30 - this wait so we can declare like a
04:38 - variable so int n plus 1 and then x plus
04:47 - 5 and then of course we can declare the
04:50 - while loop for our program like this and
04:53 - then open and close parentheses and then
04:57 - we can say n is less than or equal to x
05:03 - okay so we have to add the curly braces
05:08 - for that and then inside this curly
05:10 - braces these are the statements that
05:14 - will be executed if this particular
05:16 - condition is true okay so it will try to
05:21 - Train like C while loops and then we can
05:29 - add the percent or yeah percent D which
05:34 - is the format specifier for our in
05:37 - variable and then we can display the end
05:40 - okay and then of course we can we can
05:46 - increment the VAR the value of n by
05:49 - using the increment that we have
05:51 - discussed before which is n plus plus so
05:55 - basically this is just you know
05:57 - basically saying N equals n plus 1 okay
06:01 - I think we have already discussed that
06:05 - the end pass pass increment in our video
06:08 - previous videos okay now we have set the
06:13 - value N equals to 1 okay and then we
06:16 - have set the number of times the loop
06:18 - should be executed so that's basically 5
06:22 - there should be 5 execution and then we
06:27 - added the while statement and then check
06:30 - the condition if n is less than or equal
06:34 - to x then execute this statements right
06:40 - so we can try to check this build and
06:42 - run our application and try to see the
06:49 - output of our program and I'm going to
06:52 - you know slowly explain to you what
06:56 - happens in this particular program so
06:59 - you can see the output right here see
07:02 - while loops one see while loops two and
07:05 - then three four and five and after five
07:11 - it no longer executed because it you
07:15 - know ended the look okay so I'm going to
07:22 - explain to you how we got this output so
07:26 - first thing as I've said we declare and
07:29 - equals to 1 so in this condition 1 is
07:32 - less than or equal to 5 which is the
07:35 - value of x so basically and of course it
07:39 - is true that 1 is less than or equal to
07:42 - 5 so that's why it executed this
07:45 - particular statement see while loops and
07:47 - then it displays the value 1 right here
07:51 - okay and then it increment the value n
07:56 - so now the n becomes 2 and then it will
08:02 - go here in our condition once again so 2
08:06 - is less than or equal to 5 so that's
08:10 - true because obviously 2 is less than or
08:13 - equal to 5
08:15 - so that it executes this statement right
08:19 - here see while loops and then the value
08:22 - of our n which is 2 again it incremented
08:27 - the end variable so the end now becomes
08:32 - 3 so after that 1 we will go back here
08:37 - in the condition is 3 equals or I mean
08:42 - less than or equal to 5 so that's true
08:47 - because 3 is equal to or I mean less
08:50 - than to 5 so that's why it printed
08:53 - the output right here see while loops
08:57 - and then the value of our end equals to
08:59 - three and now after that it incremented
09:03 - another time the end and the end becomes
09:06 - four now and it go back to the condition
09:09 - is 4 less than 5 so basically 4 is less
09:16 - than 5 obviously so that's why it
09:18 - printed out there see while loops and
09:21 - then for the value of r-n and again
09:26 - incremented added 1 to the end variable
09:29 - and then the end now becomes 5 and then
09:33 - go back here in the condition is 5 less
09:37 - than or equal to 5 so if we return true
09:43 - again because 5 is equal to 5 so it
09:46 - printed out see while loops and then the
09:50 - value of our n which is 5 now it
09:54 - incrementally ball becomes 6 and it will
10:02 - go directly here in our condition is 6
10:06 - less than or equal to 5
10:09 - so it returns false because 6 is not
10:13 - less than or not even equal to 5 that's
10:15 - why it ended the loop and it never
10:19 - executed the this particular statement
10:24 - right here once again because 6 is that
10:27 - less than or equal to 5 which is the
10:30 - value of our times variable so I think
10:33 - that's that's all there is to it guys
10:36 - for this tutorial and I hope it is clear
10:38 - and like if you have questions regarding
10:41 - this please let me know in the comment
10:44 - section below and in the next video guys
10:46 - we're going to discuss the another
10:48 - version loop which has the do whine
10:51 - loops so again guys thank you for
10:53 - watching and see you in the next video