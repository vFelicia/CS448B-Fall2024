00:00 - hey what's up guys welcome back to our
00:01 - YouTube channel and welcome to this
00:03 - video so in this video guys we're going
00:06 - to continue working with our file image
00:09 - upload so in the previous video we have
00:12 - laid out this logic here which is we're
00:16 - checking if the user has submitted a
00:20 - cover image or uploaded an image and
00:24 - then we're getting the filename and
00:26 - extension here and also we're getting
00:30 - the file name from the actual image that
00:34 - has been uploaded and now let's continue
00:38 - adding to this logic so we have here the
00:41 - file name and then the next step is to
00:45 - get the extension okay so in order for
00:49 - us to do that we need to add a new
00:53 - variable extension and then by using the
00:56 - request object we're going to use the
01:02 - file method and then cover image and
01:07 - we're going to get the original client
01:17 - extension okay and next is we need to
01:24 - define a file name that we're going to
01:26 - store into our database so file name to
01:31 - store that will be path and then or
01:40 - first we need yeah file name finally
01:45 - file name to store equals the final file
01:52 - name that we got from the actual file
01:55 - and then we're going to concatenate with
01:59 - an underscore and then time and then
02:05 - another concatenation with the extension
02:13 - so this will be extension we're doing
02:17 - this because we're just we're just
02:21 - trying to avoid if say for example the
02:23 - user uploads a file or a an image with
02:28 - the same file name so in order for us to
02:32 - some of that is we we get the file name
02:35 - and then we're adding underscore and
02:38 - then we're adding the time so it won't
02:42 - be a problem for us if the user will
02:45 - upload files or image that has the same
02:48 - name and the last part of that is we
02:51 - need to actually upload the image so
02:55 - that will be upload image we need to get
02:59 - the path and request and then file again
03:09 - cover image and need to store this store
03:19 - us we're going to store this on our
03:23 - public folder so public and then cover
03:26 - images we need to create this directory
03:30 - and then the new file name will be file
03:35 - name to store and now whatever the user
03:42 - upload the file so let's try to see
03:46 - database resources and then we have here
03:50 - the storage and an app and then we have
03:57 - this public folder so it will create the
04:00 - cover underscore images directory here
04:04 - but the problem is this public directory
04:09 - is not accessible when you try to open
04:12 - up this directory in your browser so we
04:16 - need to make sure that all the changes
04:20 - that we are making here is reflected to
04:24 - the
04:25 - click folder here because this is a
04:27 - accessible to the web browser so in
04:30 - order for us to do that let's open up
04:32 - our terminal and we need to run a
04:37 - command to link this storage a public
04:42 - folder into our actual public folder so
04:46 - the command for that is PHP artisan and
04:49 - storage then link so there you go the
04:56 - public storage directory has been linked
04:59 - so whatever changes that we're making
05:01 - here in our storage file or storage
05:03 - directory will be reflected here in a
05:07 - public directory now the last thing that
05:09 - we want to do here is to actually save
05:12 - the file name to store so that will be
05:16 - post and then the cover image equals the
05:23 - file name to store ok save this and
05:28 - let's try it in our browser so refresh
05:31 - and then add post so you post with an
05:36 - image this will be the body of the post
05:41 - with an image then we're just going to
05:45 - select a certain image and open and then
05:49 - submit so we're getting an error here
05:53 - the cover image must be an image so I
05:57 - think the problem with this is here in
06:01 - our create laid that PHP so multi-part
06:06 - slash it should be form data so there
06:12 - you go save and refresh so new posted
06:17 - image as body and then browse for the
06:23 - abstract image and then submit so we're
06:30 - getting guideline original image does
06:33 - not exist so we have a typo here
06:38 - so I think we're going to use instead of
06:42 - great client original image so we're
06:45 - going to use get client original name so
06:49 - that will be post controller and get
06:52 - client original name so right then
06:59 - posted image test browse the image and
07:03 - submit so we're getting path in info
07:10 - underscore file name so undefined
07:14 - constant so we need to change that
07:17 - instead of just file it should say file
07:21 - name let's go back and refresh just to
07:32 - make sure and then new post test and
07:34 - browse the image and then submit so
07:41 - again we're getting the get original
07:42 - client accept extension that's not exist
07:45 - so I think we also have a typo so we're
07:49 - just going to copy this get client
07:50 - original extension so let's go back to
07:55 - our code editor and replace this with
08:00 - get client original extension so save
08:04 - that let's go back refresh and save
08:12 - another one so I hope it it will be
08:15 - successful this time so browse and then
08:19 - submit so there you go post created so
08:24 - the new post with image has been created
08:28 - and the next step that we're going to
08:30 - take is to display the image in our show
08:35 - post and also in our new post with image
08:40 - where we can actually see the individual
08:42 - post since we have successfully uploaded
08:45 - an image we can see here in our storage
08:48 - and then the cover image direct
08:51 - has been created and we can see here the
08:55 - link of our storage directory with also
08:59 - the cover under underscore images with
09:03 - the actual file or image that we have
09:05 - uploaded so let's try to view that in
09:08 - our PHP myadmin so in here so post and
09:19 - we have new post and then the buggy and
09:25 - of course the link or the file name of
09:28 - the uploaded file and actually we're
09:30 - just going to get rid of this records
09:34 - with no cover image so we're just going
09:38 - to delete that and let us now try to
09:42 - display the images coming from the
09:46 - database into our show and index plate
09:51 - that by HP so that will be resources and
09:57 - then views and then index that PHP so we
10:03 - have here displayed the post so before
10:09 - that it's just going to add a new live
10:15 - road so this is just a bootstrap tag and
10:20 - we're going to add another DEATH this
10:24 - will be column MD for and also another
10:30 - one for another column so it should be 8
10:36 - and we can just copy and paste this here
10:47 - and also you can you can remove this I
10:51 - think and just remove that and here we
10:59 - need to display the image so that will
11:02 - be image and then the source
11:05 - is coming from the storage directory and
11:09 - cover images in the filename so this
11:18 - will be coming from our post and cover
11:22 - image and I'm just going to add a style
11:27 - here for our image which is the way it
11:30 - should be 100 percent 100 percent so
11:38 - save this so refresh and then log so
11:46 - we're not getting any post here and if
11:51 - we tried to go to our post we have one
11:53 - record so let's try to check our code
11:57 - here so index that way dot PHP and we
12:02 - have here if greater than one and we
12:06 - have one record right now so it should
12:08 - be greater than zero so refresh so there
12:14 - you go we have the image and then we
12:17 - have the title here and also the return
12:20 - on information so in the next video
12:25 - we're going to continue working on with
12:26 - this feature and also we're going to add
12:29 - that in our blog list and individual
12:32 - posts here and also we're going to add
12:35 - the feature in our edit post where we
12:38 - can also edit or update the images so
12:42 - see you in the next video thanks