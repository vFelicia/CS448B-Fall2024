00:01 - hello guys welcome once again in this
00:02 - video I'm going to show you how to
00:05 - use while loop in
00:08 - C++ so while loop
00:10 - is other kind of loop other than for
00:14 - Loop which I have already shown you in
00:17 - the last videos so let's see how we can
00:21 - use while loop so the syntax while loop
00:27 - is while and you give this curly or
00:32 - parenthesis and then you give these
00:35 - curly braces okay this is the syntax of
00:38 - while loop
00:40 - and what this while loop does is it
00:44 - loops around uh the condition until and
00:49 - unless the condition is met so let me
00:52 - show you an example I will
00:56 - take uh integer called X is equal
01:00 - [Music]
01:02 - to 1 for example and I will say
01:08 - while X
01:12 - is less
01:14 - than or equal
01:18 - to
01:20 - five then print some values so I will
01:23 - say see
01:25 - out and
01:28 - x and
01:33 - line and now when I run this program
01:36 - let's see what happens so when I run
01:39 - this program you can see there are so
01:42 - many values printing one after another
01:47 - so this is because our while loop is
01:51 - executing so because we have given this
01:55 - condition that X should be less less
02:01 - than and equal to so while this
02:04 - condition is true X will be printed
02:07 - otherwise X will not be printed so let's
02:11 - give some logic logic to this y Loop so
02:15 - I will say
02:20 - x++ so that increment the value of x by
02:25 - one so once again when you compile and
02:29 - run the program it will
02:31 - print 2 3 4 5 6 right
02:37 - because what it's doing is it's going
02:41 - because we initialize X by one it will
02:44 - go to the loop and it sees X is less
02:46 - than one and then it increases or
02:49 - increments this the value of x by 1
02:51 - which is 1 + 1 is 2 so it's it prints to
02:55 - here using this statement and once again
02:58 - it glops around this Loop and sees two
03:01 - is still less than or equal to 5 and
03:04 - then it increments the value by one and
03:08 - it prints it and once again it loops
03:10 - around and it checks the condition and
03:13 - once and again when it sees that X the
03:18 - value of x at time of 6 is less than or
03:23 - equal to this is not uh this condition
03:26 - is not fulfilled then it goes out of the
03:28 - loop and return Z
03:31 - so this is how you can use while loop
03:34 - let me show you uh a better example than
03:40 - this so let's say you
03:43 - have number some
03:46 - number so I
03:48 - will declare my number
03:55 - as number is equal to zero because I
04:00 - initialize this number by zero in order
04:04 - to eliminate any garbage values and I
04:07 - will also declare a third variable
04:11 - called sum
04:14 - okay and that also I initialize by
04:18 - zero now I want to input I want that in
04:22 - user should input the value so I will
04:26 - say C
04:28 - out
04:35 - input
04:37 - any
04:39 - value and I will end this
04:46 - line and then I will say C in so I will
04:49 - wait for the user to enter the value and
04:53 - this CN will be stored in the variable
04:56 - number
04:58 - okay then I want to add all the numbers
05:02 - so I will say
05:04 - sum is equal to sum
05:10 - plus number okay so what it will do is
05:15 - it will give or it will take the value
05:18 - and make the sum of these numbers unless
05:22 - and
05:23 - until I don't I mean disobey this
05:27 - condition which is
05:31 - X is equal to or less than 5 right so I
05:35 - will
05:36 - say this condition and I will print the
05:39 - sum here so I will say the
05:41 - [Music]
05:43 - sum the sum
05:46 - is equal to and once
05:50 - again sum which is our variable name
05:54 - okay so this Loop will ask five times to
06:00 - enter the values and
06:03 - once this values
06:08 - are entered by the user then it will
06:11 - take the sum of the values and it will
06:14 - print it here or otherwise you can show
06:17 - the sum outside the loot so that you
06:21 - have the sum only once but not five or
06:24 - six times so let's try and run this
06:26 - program once again and it's says input
06:30 - any value I will enter
06:33 - 10 once again it's asking me input any
06:36 - value 20 once again 30
06:43 - 40 and
06:45 - 50 and press enter and it says me the
06:49 - sum is 150 right this should be equal to
06:54 - that's why it's showing us plus sign
06:57 - here but it should be ideally equal to
06:59 - so in this way you can take the sum of
07:04 - the values using while loop okay or
07:08 - otherwise if you want while loop to
07:10 - never end you can give some condition
07:15 - which will never be fulfilled for
07:18 - example you can just write something
07:21 - like this while one so this V one
07:25 - generally programmers use it to make an
07:29 - infinite Loop just compile the program
07:32 - and run it and it
07:35 - says please enter any values I'm I will
07:39 - keep on entering values and it will
07:40 - never end
07:43 - because this one or while one is never
07:46 - ending Loop so I will never go out of
07:49 - this Loop okay so I will keep on
07:52 - entering the value and it will never end
07:55 - so if you want to make infinite Loop
07:57 - just make it like this or otherwise just
08:01 - uh make a loop which has some condition
08:04 - and loop can exit when the condition is
08:07 - met okay so in this way you can use
08:11 - while loop in C++ I hope you have
08:13 - enjoyed this video please wait comment
08:14 - and subscribe and bye for now