00:00 - hello guys welcome once again in this
00:02 - video I'm going to show you how to use
00:04 - comparison operators and logical
00:07 - operators in python in the last few
00:10 - videos I've been showing you how to use
00:12 - if else statement in Python and this is
00:16 - the continuation uh you may say but uh
00:22 - these comparison operators and logical
00:24 - operators you can uh not only use with
00:28 - these ifs L state but in general also
00:31 - you can use
00:33 - them so first of all comparison
00:37 - operators comparison operators as the
00:39 - name suggests we use for comparing
00:43 - values now there are these uh comparison
00:48 - operators which are available in Python
00:51 - which are less than and which is
00:53 - indicated by this symbol second is less
00:56 - than or equal to which is which are
00:58 - implicated by less less than sign and
01:00 - equal to and greater than greater than
01:04 - equal to double equal to indicates that
01:07 - you want to check the equality and this
01:09 - exclamation mark equal to means that you
01:12 - want to check the
01:14 - non-equality okay now there are some
01:17 - logical
01:18 - operator operators which by which you
01:21 - can perform some logical uh operations
01:24 - between uh some values for example you
01:29 - want to check uh you have two uh
01:32 - variables and you want to check or two
01:36 - conditions and you want to check both
01:37 - the condition and you want that both the
01:40 - conditions has to be true you use and
01:45 - condition and using end condition uh it
01:48 - means that you are checking for all the
01:51 - conditions in this case we are checking
01:54 - this condition has to be true and this
01:57 - condition has to be true otherwise it
01:59 - will say
02:01 - false uh in the opposite or the opposite
02:05 - of and is R not exactly opposite but the
02:09 - logically opposite of and is or um and
02:13 - or means either one condition is true
02:17 - then it will give you true so let's see
02:21 - how we can use it so first of all for
02:25 - example you want to check the less than
02:30 - condition I can just uh copy this and in
02:34 - my shell I can run it and I can
02:36 - print I want to print if this is
02:40 - true print
02:44 - true okay and I will press enter two
02:48 - times and this true has to be enclosed
02:55 - in double codes right press enter and it
02:59 - says is true because 9 is less than 10
03:03 - right in a similar way I can check uh
03:06 - these functionality but this time I'm
03:08 - not going to use if condition but yeah
03:11 - you can use all these operators with if
03:14 - conditions okay so for checking uh less
03:18 - than or equal to we can just TR write
03:21 - directly write in the shell and press
03:24 - enter and it gives true okay so this
03:29 - means less than or equal to so 9 is less
03:32 - than uh 10 so this condition is true so
03:35 - that's why it's giving true to us and
03:38 - always remember that you uh have to use
03:42 - less than first and followed by this
03:45 - equal to let's see what happens when you
03:47 - say 9 equal to less than 10 and gives
03:54 - syntax error so always use less than
03:58 - first and then equal to sign in order to
04:00 - avoid any problems in a similar way you
04:04 - can just check the greater than so if 9
04:07 - is greater than 10 which is false so it
04:10 - will give us false right 9 is greater
04:13 - than equal to 10 which is also false and
04:18 - now we are checking the equality which I
04:20 - have shown you in the last video which
04:21 - is false 9 is not equal to 10 and let's
04:26 - check if 9 is not equal to 10 this
04:28 - exclamation Mark and equal to uh checks
04:32 - for the non-equality so it will be true
04:35 - yes and if 9 is less than we have
04:39 - already checked it okay now we have end
04:44 - conditions right so for example I want
04:46 - to check whether 9 is less than 10 and 9
04:51 - is not equal to 10 so I want to check
04:56 - whether these two conditions are true at
04:59 - the same same time okay and I press
05:02 - enter and it gives me
05:04 - true
05:06 - and let's
05:08 - uh let's check for some other condition
05:13 - so this condition is true in this case
05:16 - which is 9 is less than uh 10 and this
05:20 - is also true because 9 is not equal to
05:22 - 10 so it gives true for example I delete
05:27 - this uh not equal to and write equal to
05:30 - here so one condition is false here
05:33 - which is 9 is not equal to 10 because we
05:36 - are checking for two condition to be
05:37 - true at the same time it'll give me
05:40 - false because this condition is true but
05:43 - this is false right so whenever you use
05:47 - end operator your program expects that
05:51 - both the conditions or whatever
05:53 - conditions you are um giving are true so
05:58 - you can even give give three conditions
06:01 - for example I want to check the
06:06 - non-equality
06:07 - and so it's not necessary that you only
06:10 - can only give two conditions you can
06:13 - even give three four five or whatever
06:16 - conditions okay and it's totally
06:19 - fine okay in a similar way you can use R
06:24 - to check whether either of the condition
06:27 - is true if this condition is true or
06:30 - this condition is true in this case both
06:33 - the conditions are true so it gives true
06:36 - but when we give this uh statement where
06:40 - one condition is true which is nine is
06:42 - less than TR which is true but nine
06:45 - equal to equal to or equal to 10 which
06:48 - is not true it will still give
06:51 - you uh I have I must have used or here
06:57 - right because we are checking for r
07:00 - so it gives us true right so in this way
07:04 - you can uh use comparison operator and
07:07 - logical operators there is some more
07:10 - things uh you can check uh and these are
07:14 - is and in conditions or is and in
07:17 - operators whatever you want to say so
07:21 - for example I want to check I have a
07:25 - string
07:26 - string equals to equal to
07:30 - uh what you can say AB b c d e okay so
07:35 - our string equal to ABCDE and I want to
07:38 - check if
07:41 - uh a is present in string or not so
07:47 - a
07:50 - in string and it gives us true so what
07:55 - this in operator does is it checks Che
08:00 - whether this variable contains this uh
08:04 - value or character or not uh in in such
08:07 - way right so in a similar way you can
08:11 - search for B or C or any conditions okay
08:16 - so for example you want to check where a
08:21 - b is present it gives us true but
08:25 - whenever you give a c it will give you
08:28 - false because
08:29 - A and C are not together present
08:33 - here now suppose you have two list one
08:36 - list is called a is equal
08:39 - to uh 1 comma 2 comma 3 and b equal to
08:48 - same list
08:50 - okay uh
08:52 - B and there is a operator called is so
08:57 - whenever you we use a is B it will give
09:02 - you false but for example you declared
09:06 - uh uh uh list C = to d = 1 2 3 it will
09:16 - give you true because it checks whether
09:20 - these two or two two values are equal
09:23 - exactly equal or not these are
09:28 - these A and B are equal by values but
09:34 - they are not logically equal that's why
09:36 - it will give you false
09:39 - but this we have already you know
09:42 - assigned or assigned c equal to D or we
09:47 - have assigned D to C equals this value
09:51 - that's why it will give us uh true so
09:54 - let's check
09:55 - C is D and it will give us true
09:59 - okay so in this way you can use logical
10:02 - operators comparison operators and is in
10:07 - operator in Python I hope you have
10:09 - enjoyed this video please RIT comment
10:11 - and subscribe and bye for now