00:00 - hey guys welcome to the next video on
00:02 - Python tutorial for beginners in the
00:04 - last video we have seen how to declare
00:06 - functions and how to use functions in
00:08 - Python in this video also we will
00:11 - discuss some more properties which are
00:13 - related to functions in Python so let's
00:17 - get started so to start with I have a
00:20 - function called student which takes two
00:22 - arguments one is name and other is age
00:25 - and inside the function we just simply
00:28 - print the value of name and age using
00:32 - the print function and when we call this
00:36 - function with the name and age it's
00:39 - going to print this kind of output now
00:42 - Python allows us to set the default
00:44 - value of the arguments so after this
00:48 - name you can put equals to symbol and
00:51 - then put the default value whatever you
00:54 - want to set for the name for example if
00:57 - somebody doesn't provide any name then
01:01 - you can just say unknown name similarly
01:05 - we can set the default age here let's
01:08 - say default age is 0 if somebody doesn't
01:11 - provide any age with the student
01:15 - function then the default value will be
01:18 - 0 now instead of using this student
01:23 - function like this let's say I don't
01:25 - provide any argument to this student
01:29 - function and let's run the code and you
01:32 - can see if I don't provide any argument
01:35 - to this student function the default
01:38 - values are taken so the default values
01:40 - are used when you want to make sure that
01:44 - every argument in your function should
01:47 - have some value now let's say I just
01:51 - provide a name here and don't provide
01:54 - the age and let's run the program and
01:58 - now you can see the name is overwritten
02:02 - by the argument what we have provided
02:05 - here right so default value will be this
02:09 - one if no argument is provided see
02:12 - if we give the value of age and now we
02:16 - run the program the default age is
02:20 - replaced by the age which is provided
02:22 - using the arguments so this is how you
02:25 - can use default values with the
02:28 - arguments of the function so let me just
02:31 - remove these default values and I'm
02:34 - going to give you the next example which
02:37 - is variable length arguments so let's
02:40 - say with the name and age I want to
02:43 - provide the list of scores which this
02:47 - student has scored for different
02:51 - subjects so as a third argument I'm
02:53 - going to provide argument called marks
02:57 - and somehow I want to provide a list of
03:00 - marks which is scored by this student
03:04 - and let me print the value of marks
03:07 - using this print function also now in
03:11 - Python you can use Asterix in front of
03:14 - your argument and this means that you
03:17 - can provide multiple arguments when you
03:20 - use this kind of notation so let's just
03:23 - provide for example we already provided
03:26 - the name and age here and let's provide
03:29 - different marks scored by this student
03:31 - so I can provide 95 for first subject
03:34 - then 70 for second subject than 80 for
03:38 - next subject than 50 for next subject
03:41 - and let's say we don't know how many
03:43 - subjects the student has taken we just
03:46 - have only the information about these
03:50 - four subjects which he has taken so we
03:54 - can provide the four values here and
03:56 - then let's run the code and now you can
04:00 - see name is Tom age is 22 and the value
04:04 - of marks is shown as a tuple okay so
04:09 - whenever you provide this Asterix in
04:11 - front of an argument you can provide the
04:14 - values for that argument using normal
04:17 - arguments as you provide for normal
04:19 - argument so first two variables are
04:21 - associated with name and age and all the
04:24 - other variables
04:25 - which you provide here will be assigned
04:28 - to this marks variable because it has
04:31 - this asterisk in front of it so now you
04:34 - can also use a for loop in order to
04:38 - iterate over tuples so X in marks for
04:43 - example and then you can print every
04:46 - value or you can access every value
04:49 - inside this tuple and let me comment
04:51 - this print function and let's run the
04:55 - code once again and you can see for loop
04:58 - has printed all these marks which are
05:01 - there inside the list now if you want to
05:04 - use this type of variable length
05:05 - argument then I will suggest you to use
05:08 - this argument as the last argument of
05:11 - your function so that it will be clearer
05:13 - to the reader of the function that
05:16 - whatever you provide at the end will be
05:19 - the part of this last argument now you
05:22 - may ask that we have provided these
05:24 - marks for this student but for which
05:28 - subject these marks are given to the
05:31 - student now in Python you can also use
05:35 - double as tricks in front of your
05:37 - function argument and this means that
05:40 - now you can provide the key value pairs
05:42 - as a marks arguments so instead of using
05:47 - 95 I can also say that 95 is code in
05:52 - English let's say and then 70 is code in
05:57 - math and then let's say 80 is scored in
06:01 - physics and the 50 marks is code in
06:06 - biology so now when you use these double
06:10 - asterisks in front of your function
06:12 - argument you can provide these kind of
06:16 - key value pairs which are separated by
06:19 - this equal to symbol and how you can
06:22 - access these values so let's run the
06:24 - code and let's see what happens and now
06:26 - you can see only keys are printed and
06:28 - not the values of these subjects are
06:31 - printed
06:32 - so let's first uncomment this print
06:35 - function and let's see what type of
06:38 - value
06:39 - getting so whenever you use these SS
06:42 - tricks the values are given to you in
06:44 - the form of our dictionary okay so if
06:48 - you use single asterisks the values are
06:51 - given to you in the form of tupple but
06:53 - whenever you use these SS tricks and
06:56 - whenever you try to access this variable
06:58 - then this variable will be of type
07:02 - dictionary and you already know how to
07:05 - print the values of dictionary so you
07:08 - can just write marks dot a terms here
07:11 - and then here you can just write key
07:16 - comma value and then you can print the
07:19 - value of e and value so I'm going to
07:22 - just print key first of all and then I
07:24 - am going to just give a space here
07:27 - and then I'm going to print the value
07:30 - right and now when we run the code it
07:33 - will give me first of all the key for
07:36 - example English math physics or biology
07:38 - and the value which is 95 70 80 or 50 so
07:44 - I think that's enough for this video
07:46 - please keep watching these videos and I
07:49 - will see you in the next video