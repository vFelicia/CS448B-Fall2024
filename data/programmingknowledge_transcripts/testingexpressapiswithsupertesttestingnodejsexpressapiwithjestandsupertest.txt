00:00 - hi in this video we're gonna learn how
00:01 - to use just for running our Express
00:06 - endpoints like we have to run the user
00:09 - endpoint and tasks in point so first of
00:13 - all we have to change the environment of
00:16 - chest because right now by default it is
00:19 - running as a browser environment
00:22 - so in here just we're going to use
00:25 - simple JSON structure in here we're
00:29 - gonna use test environment test
00:36 - environment and it will be known and in
00:44 - here with us see that the file the
00:48 - connection string that we are using in
00:51 - here because the test will run in other
00:55 - environment and it will run in separate
00:58 - environment so we're gonna separate the
01:00 - environment of test and the production
01:06 - so in here first of all we have to
01:10 - import one library that's called NPM I
01:14 - II and V - CMD at the rate it will say
01:27 - that which update or which person you
01:30 - want and we are gonna save as Dave type
01:36 - in anything so it will really saved so
01:40 - their opinion see so in here we are
01:43 - gonna create one new folder let's say
01:47 - its name is conflict because we are
01:50 - gonna separate environment of port the
01:53 - tearful one and the taste one so in here
01:59 - we are just gonna say new file and let's
02:02 - say its name is dave dot env and one
02:09 - more that's called
02:11 - test dot anyway you will see that what I
02:16 - am talking about join here in dev tour
02:19 - env the connection string will be
02:26 - MongoDB we're gonna see how can we use
02:30 - this as a assignment in our connection a
02:36 - string so let's first of all let's close
02:41 - this tab there's no need for this one
02:45 - right now so in here in MongoDB URL you
02:52 - can see in the panel string that this is
02:57 - the connection string for now so we're
03:01 - just gonna copy it and just leave it
03:05 - there use this like yeah and if it is
03:11 - safe and also for testing enemy we're
03:15 - just gonna copy it but the name of the
03:25 - means it will be save as a different
03:27 - collection or a different database so
03:29 - among those rest mongoose test yeah
03:36 - and one thing more that we have to do
03:39 - like JWT key will be also it will be
03:44 - same but do we have to just keep as
03:48 - because we are using env see anything so
03:53 - in here in the art for yeah so in the
04:01 - middle over here in the middle where
04:03 - there is the this this money of course
04:07 - so just copy it and use it here and just
04:14 - save it and now in here we can just
04:21 - remove it and we can use process
04:25 - dot NV dot the name of the variable that
04:35 - you have kept here that is j TT t so
04:39 - just use it
04:40 - j WT k we have to use it one more place
04:48 - it is in the user model in here
05:01 - yes use it and one more in the
05:08 - connection string no in here just remove
05:14 - it
05:32 - yeah this will do the name is same so
05:37 - now we can just close this well and this
05:42 - one to this one now in the packet or
05:46 - JSON we're just gonna give the file
05:54 - means where it is located so it is
05:57 - locate the dots less config class there
06:06 - dot env and in here it will be e and we
06:15 - see MD dot slash config slash test dot
06:26 - enemy yeah now it will be will work so
06:34 - we can see if we just run nvm test you
06:41 - can see it is working yeah you can see
06:45 - that all test cases been passed we like
06:48 - we have separated environment but you
06:50 - can see that it is working so now for
06:55 - using the Express endpoints happen app
06:59 - app and points that we have made here so
07:02 - in here we're just gonna use the user
07:07 - dot torches because we are gonna test
07:13 - user folder user router so in here what
07:19 - to do next
07:21 - so for testing the this file like
07:28 - Express endpoints it provides with super
07:33 - test
07:38 - in film file and young library that is
07:43 - to be used in here so you can see that
07:50 - how it works
07:53 - same thing like we're just gonna use the
07:56 - request the destroyed super test and
08:00 - here the app express and we're gonna use
08:06 - the endpoints and what is the matter and
08:11 - this is how this will work so let's see
08:15 - how can we use in here so first of all
08:18 - we have to install the super test in
08:25 - here so just install it but as a tear
08:29 - dependency so just use it here now what
08:36 - to do we have installed a super test so
08:39 - in here which you cannot use the require
08:43 - it from the we're gonna use super test
08:48 - in here so now we need what we need app
08:53 - that means we need this index dot J's we
08:57 - need this one so what can we because
09:01 - this one run before the listen to any
09:04 - port number so what we're going to do we
09:08 - are going to restructure our older
09:11 - system in here so first we are going to
09:16 - create one more file let's say its name
09:22 - is AB dot J's that we are going to use
09:25 - it so in here what we're going to use
09:31 - that we don't need this part because we
09:35 - need this part in here we need this part
09:39 - yeah and this part that we need here so
09:45 - what we're going to do we are going to
09:47 - just cut
09:50 - the best here we're just gonna cut from
09:52 - here and paste it here and we're gonna
10:01 - modulate export app from here and for
10:10 - index we're just gonna use app require
10:21 - from darts last app so yeah that's it
10:27 - this is what we need so in here we can
10:32 - just Const app is equal to require dot
10:42 - dot slash from get out of a test folder
10:46 - and we app so we have care to app folder
10:51 - app functionality so now we're going to
10:56 - use the request one and we're going to
11:04 - use app what we're gonna just post in
11:09 - here because this one so what we need
11:16 - him here that we're gonna use two test
11:18 - cases so this is a test cases for what
11:21 - this is the test case for should sign up
11:27 - for a user and it will be an a
11:35 - synchronous process that we know
11:42 - and it will be an average and in a
11:45 - quest and here we're gonna use app dot
11:51 - post slash users and it provides some
12:02 - functions methods Lake dots and what
12:07 - we're gonna stand in here we're gonna
12:09 - send in here the name let's say the name
12:13 - is test email email will be just like
12:23 - test at test calm and password password
12:34 - will be test one two three so in here
12:40 - what we expect from here we expect like
12:43 - the status code we expect status code to
12:46 - be 201 and if it turned that we know
12:50 - that if it run properly it will create a
12:55 - new file for new user new user in the
13:03 - our MongoDB because in here we have used
13:07 - one of the rest Mongols in here but we
13:11 - have in separated environment so we can
13:14 - see that it will create a new user in
13:16 - the rest Mongols test data based so not
13:22 - do it just run it we can see what will
13:26 - we get we can see in here that the test
13:32 - has been passed yeah you can see in here
13:37 - that the test has been passed in yes
13:38 - that's actually so now if we go to our
13:41 - rest mongos test and here you can see
13:50 - you can see that new user has been
13:54 - created but there is one problem in here
13:57 - that that if we again run this file like
14:04 - just run it and save it it will give an
14:07 - give there because we have the same
14:12 - functionality you can see it gives a
14:19 - because we have used this one as email
14:24 - as one unique so it will give the error
14:27 - because validation is false in here so
14:31 - whenever we run this test sort we have
14:35 - to use this like we have to delete all
14:38 - the users all the collections in our
14:42 - database so it will restart again so
14:45 - this is what we're gonna use some global
14:50 - methods that just provides like before
14:54 - each before each means that it will run
15:00 - before each cases each test gets in here
15:04 - it needs a callback function we're gonna
15:07 - see how it will run but first of all
15:09 - we're gonna see how do we look like so
15:12 - is gonna use console.log test use before
15:17 - before h and one thing more matter that
15:22 - is after it this one means that it will
15:26 - call after each test call so let's say
15:32 - console dot log after H now if you run
15:41 - it you will see that it will come before
15:45 - the test cases will run and it will come
15:48 - after the test case it will run so in
15:52 - here
15:57 - you
16:04 - you can see in here that it gives the
16:09 - console.log before H and after H so what
16:13 - we're going to do we're gonna just use
16:15 - the before each one because in here
16:18 - before each cases will run it really
16:21 - delete and use it it has been saved in
16:29 - our collection so what we're gonna do
16:31 - we're gonna do we're gonna just first
16:37 - import the Const user it will require
16:42 - todd todd / t being / model / users in
16:55 - here what we're gonna do it's it will be
16:57 - a nesting cleanest process so we're
16:59 - going to do a sync and we're gonna await
17:04 - a way to user to or delete many we're
17:14 - gonna delete many and just use it and
17:16 - now if we just save it you can see that
17:20 - it will run because it will create a new
17:22 - user
17:23 - but before creating a new user it will
17:25 - delete previous one so this is how we
17:29 - can test our suit sign up for our user
17:32 - and we can also test for a user that
17:35 - cannot be signup and we're gonna use and
17:41 - when i see how can we login so we so to
17:49 - login for a user
17:58 - in here what we need in here await
18:03 - request app dot it will be a post
18:11 - request and we slash user slash logging
18:16 - and in here what we're sending we are
18:20 - sending the email test one test ad to
18:31 - test calm and password as test one two
18:40 - three so if we run this for this one it
18:47 - will work with what it will do it will
18:49 - not run because for each test case it
18:52 - will delete the test one it will delete
18:56 - user
18:58 - so for each cases what we're gonna do
19:02 - yes we're going to create a new user
19:05 - let's say current user in here what we
19:11 - will provide we probably will provide
19:13 - the email or we will provide the name
19:18 - name will be test one two email will be
19:27 - taste one - it test calm and password
19:35 - will be test 1 1 2 2 3 3 and for each
19:43 - test guess what will we do it will do
19:46 - that await and in here we're gonna save
19:50 - it so user await user and for this
19:57 - certain we can use this await user dot
19:59 - save this is how we can also save the
20:03 - user proper name would be like user 1
20:08 - that will be good because we we can have
20:10 - multiple users
20:11 - you exposed equipment toward test cases
20:15 - so yeah so if we will do this anything
20:19 - in here it will find it is fine we're
20:25 - gonna use this one like user 1 dot email
20:32 - and in here user 1 dot password so now
20:39 - if you run this file we can see rate
20:44 - will run perfectly you can see each test
20:50 - guest has been passed so this is how we
20:54 - will we can log in and sign up and for
20:58 - others API that we have used in here you
21:04 - can do similarly so yeah this is how we
21:09 - will do this thank you