00:00 - hello guys welcome to the next video on
00:02 - Android MySQL database tutorial for
00:05 - beginners in the last video I have shown
00:07 - you how you can download and install a
00:09 - vamp server and how you can create your
00:14 - first MySQL database using PHP myadmin
00:19 - and how you can write a PHP script to
00:24 - connect to your MySQL database now in
00:28 - this video we will see how we can create
00:30 - our first Android application which can
00:34 - interact with this MySQL database so
00:39 - let's get started just fire up your
00:41 - Android studio ide and we are going to
00:45 - start a new android project and for
00:49 - example we will name it as my SQL
00:52 - project
00:53 - okay so mysql demo okay and i'm going to
00:58 - click Next and leave everything as
01:01 - default blank activity and main activity
01:06 - and finish so now our project is created
01:12 - and in this project in this activity
01:14 - what we are going to do is we are going
01:16 - to design our login activity right so
01:20 - what we are going to do is we are going
01:22 - to take some added text so take a plain
01:26 - added text for example for the person
01:30 - name and take a password added text from
01:35 - here also okay now what we are going to
01:38 - do is we are going to take one button
01:41 - and we will name the text of this button
01:45 - as login okay so just write login button
01:50 - and we can change the name of this
01:54 - button as for example BTN login right
02:00 - and for the added text what we are going
02:03 - to do is we are going to change the ID
02:07 - or of this added text as for example et
02:15 - et username okay
02:19 - et username and for the password field
02:23 - we are going to change its ID as ET
02:29 - password okay and I'm going to leave
02:34 - this username text as black so this is a
02:39 - simple design we want to give a username
02:41 - and password and when we click login
02:43 - it's going to interact with our MySQL
02:47 - database and then we want to you know
02:51 - validate our activity right so now what
02:55 - we are going to do is we are going to go
02:57 - to our main activity dot Java file and
03:00 - in here what we are going to do is we
03:03 - will just remove these two method here
03:07 - because we don't need it right now
03:10 - and in here first of all at the top we
03:13 - will define added text variable so just
03:16 - defined added text and define to added
03:22 - text variable one for username and one
03:24 - for a password so you can just say user
03:28 - name et and the password et right for
03:37 - added text now what we are going to do
03:40 - is we will initiate these added text
03:44 - with our added text so just right
03:47 - username is equal to in the bracket we
03:51 - will typecast added text as we always do
03:54 - so just write add it text and then find
03:58 - view by ID and then r dot ID dot your
04:06 - added text IB right so our added text ID
04:10 - was username right same we will do for
04:15 - the password so I will just copy it
04:18 - paste it here and this time I will take
04:21 - the password and in here we will take
04:24 - e.t password right
04:27 - so just use ET password here now what we
04:30 - are going to do is we will just once
04:32 - again go to a main activity dot XML file
04:36 - and in here go to text and in the button
04:41 - in here we will define on click methods
04:45 - just right on click and let's say it's
04:49 - on login method okay so we want to
04:54 - create a method called
04:55 - on login when we press the button we
04:58 - want to execute this method so just
05:00 - right public void on login and then in
05:07 - the parameters just pass view and then
05:12 - once again you and inside your method
05:16 - what we are going to do is we will take
05:19 - these username and password and get the
05:23 - text from these you know added text
05:27 - right so we will declare a string
05:30 - variable string user name is equal to
05:35 - our username variable which is this one
05:39 - dot get text dot two string okay and
05:48 - same we will do for the password so
05:52 - string password and then this time we
05:57 - will take this and it takes password and
05:59 - then we will get the password from it
06:02 - and save it into our variable okay now
06:06 - what we want to do is we want to
06:08 - validate our username and password and
06:12 - for that we are going to create a new
06:16 - class and we will name it as background
06:19 - worker so let's create a new class here
06:22 - and we will create a new Java class and
06:27 - we will name it as background worker and
06:31 - click OK and we will extend this class
06:35 - with async task
06:38 - okay so just extend this class with
06:41 - a sync task async task and as a template
06:46 - parameter here we are going to give some
06:49 - dummy data types right now and we are
06:52 - going to change them in future so for
06:55 - example void and void and third also
07:02 - void okay and now you can see it gives
07:06 - us this error and when you click this
07:10 - bulb or alt enter it'll ask you to
07:13 - implement the abstract methods so just
07:17 - implement this do in background method
07:20 - and we also want to add some more method
07:26 - for example on post execute and on pre
07:32 - execute okay so first of all on pre
07:34 - execute method we are going to add here
07:37 - and then we will add on post execute and
07:42 - third method we are going to add here is
07:45 - on progress update okay and we also want
07:52 - to add a constructor here because
07:55 - whenever we want to pass this username
07:59 - and password we want to pass it using
08:03 - the background worker constructor right
08:06 - so first of all what we are going to do
08:08 - is in the background worker class we
08:11 - will define a context variable here so
08:15 - define a context and name it as context
08:20 - and now we will define a constructor so
08:23 - just right background worker and as a
08:28 - argument we will pass the context of our
08:32 - class okay we can name it as CD X for
08:37 - example right so CT X okay and then in
08:43 - here what we will do we will just assign
08:48 - this context to our local context right
08:52 - so do it something like this
08:54 - now what we are going to do is we will
08:57 - go to our main activity dot Java and in
09:00 - the on login method what we are going to
09:03 - do is we are going to create an instance
09:05 - of background worker class so just right
09:10 - background worker and then give the
09:14 - variable name is equal to new background
09:19 - vocal and it takes the context right if
09:23 - you remember so context is this okay and
09:28 - then we can just use this background
09:32 - worker variable and call a method called
09:35 - execute on it and this will execute the
09:40 - background worker right
09:42 - so it takes some argument so what we can
09:47 - do here is we can pass multiple argument
09:50 - here right so let's pass three arguments
09:55 - here first is the username second is the
10:00 - password and third is type of operation
10:03 - we want to execute okay
10:05 - so let's define a third variable for
10:09 - example string type and we will define
10:15 - this type as login for now okay and then
10:20 - we can pass it as a first argument for
10:24 - example right it's on you if you want to
10:26 - pass it as a third argument or the first
10:28 - argument it's on you but just remember
10:32 - which argument is it is right second is
10:35 - the username and third is the password
10:38 - right now it's going to give you this
10:41 - error because you can see here this
10:45 - these all three arguments are string and
10:49 - in the background worker we have here
10:52 - only void so we will just change this to
10:57 - string and also this do it in background
11:01 - this data type will be string also right
11:04 - so just change it to string okay
11:08 - and then you can see the error will go
11:10 - okay now in here due in background what
11:14 - we want to do is we want to you know
11:17 - perform our post operation and then we
11:22 - want to you know validate our username
11:25 - and password so now inside you're doing
11:28 - background method what we want to do
11:31 - first is we want to extract the value of
11:35 - first argument which is this type which
11:39 - is login in our case from this param
11:42 - right so what we can do is we can define
11:45 - a variable called string and name it as
11:48 - type is equal to its a param first index
11:53 - right so just right parents at index 0
11:58 - okay something like this and this will
12:02 - give you the type which is login right
12:04 - so now we can just evaluate this type
12:09 - and if this type equals dot equals login
12:15 - then we can move further right so this
12:20 - is login and then inside our if
12:25 - statement we can write the code to you
12:29 - know post some data right but before
12:33 - that we want to define some URL to you
12:39 - know post to that URL right so if you
12:42 - remember we have created this login dot
12:46 - PHP file right and whenever we you know
12:51 - call this file using localhost then it's
12:56 - you know selecting and you know
12:59 - performing the login function right so
13:03 - we will just call the same login dot PHP
13:05 - file using a URL so you can just tried
13:11 - string and then login
13:16 - underscore URL and then just write HTTP
13:21 - colon slash and then your IP address now
13:27 - you may think that here you just need to
13:30 - write 127.0.0.1 which is localhost or
13:35 - you have to write localhost but what you
13:42 - know Android team or Android the people
13:44 - has decided that if you want to
13:47 - communicate with the local host on your
13:51 - host machine using the Android emulator
13:54 - then you need to use the IP which is
13:58 - this one so just use ten dot zero dot -
14:01 - dot - it's a standard IP address to
14:05 - communicate with local host right and
14:08 - then your file name which is login dot
14:13 - PHP right and then enclose this in two
14:19 - double quotes because it's a string and
14:22 - then a semicolon now inside this if
14:25 - statement we will define a object of URL
14:30 - you can just name it as URL is equal to
14:34 - new URL and then as argument just pass
14:42 - our string URL here right now first of
14:45 - all you need to import this URL from
14:49 - java.net dot URL so alt enter and then
14:54 - you need to enclose this URL in to the
14:57 - try catch block so you just need to add
15:01 - it into the try catch block okay so just
15:04 - hover over here and then click this bulb
15:08 - and then surround with try catch block
15:11 - okay now in here just below this we need
15:14 - to use HTTP URL connection class you may
15:19 - be tempted to use HTTP client or post
15:22 - but
15:24 - you know correctly we use HTTP URL
15:27 - connection so just write HTTP URL
15:31 - connection and give the variable name
15:35 - for example HTTP URL connection is equal
15:38 - to and then you take this URL and then
15:42 - open connection and you need to typecast
15:45 - this URL open connection to HTTP
15:49 - connection so just use this type casting
15:52 - method something like this and then you
15:56 - need to once again surround your code
16:00 - with try catch blocks so you already had
16:02 - it you just need to add one more catch
16:05 - clause here okay which is IO exception
16:08 - right now you can take this HTTP
16:11 - connection and then you can set your
16:15 - request method first of all our request
16:19 - method will be post it's something like
16:22 - a rest request so you just need to write
16:26 - post here and then you need to set some
16:32 - more method for example set output or do
16:37 - output and make it as true and we also
16:42 - want to set do input so just copy this
16:46 - and instead of two output you just need
16:49 - to use dot set do input okay now after
16:55 - that we are going to create an instant
16:58 - of output stream so just write output
17:01 - stream and then give the name to your
17:05 - output stream and we are going to get
17:08 - our output stream from our HTTP
17:10 - connection so just take STD be
17:12 - connection get output stream and then we
17:16 - will create an instance of buffered
17:18 - writer
17:19 - okay so just call buffered writer and
17:24 - give the variable name before writer is
17:27 - equal to new buffered writer and it will
17:32 - take an instance of
17:36 - output stream writer so just write
17:39 - output stream writer and the first
17:43 - argument it will take is our output
17:46 - stream and the second argument is the
17:50 - type of output stream so we are going to
17:54 - give here is UTF minus 8 right and then
18:00 - to use it and then we are going to
18:03 - create our data URL which we want to
18:07 - post ok so just write string and then
18:14 - our post data so just write post
18:18 - underscore data and then you will write
18:23 - URL encoder dot and code so just call
18:29 - encode method here which is first one
18:33 - and then here you will just give the you
18:39 - know key and value pair right so let's
18:43 - say our key is username and the value is
18:45 - the user name when you write so what we
18:49 - can do here is first of all we can
18:51 - extract the value of username and
18:53 - password which we have passed using the
18:56 - you know this background worker username
18:59 - and password right so we have already
19:02 - extracted this type using the 0th index
19:05 - of param and then we can you know
19:08 - extract username and password using
19:11 - first and second index so just take this
19:14 - and then paste it here and this will be
19:17 - your user underscore name for example
19:20 - and the second will be the password
19:26 - password and then this will be our index
19:32 - 1 and this will be index 2 right now you
19:36 - can take the same name here which is the
19:39 - key for your post data and then what we
19:43 - can do here is first of all we need to
19:46 - give the data type which is
19:49 - utf-8 so just write u TF -8 here and
19:54 - then just write concatenation operator
19:58 - and the double quotes equal 2 and make
20:03 - sure that there is no space between them
20:06 - right plus the value of username so just
20:10 - copy the same thing and paste it here
20:12 - and then the value is this one right
20:15 - without the double quotes right and then
20:19 - you just use your concatenation operator
20:24 - once again and then in here we will add
20:27 - the add operator which is for joining
20:32 - the URL right and then in the next line
20:35 - what we can do is we can copy the same
20:39 - thing from here up to here because we
20:42 - don't want to and right now because it's
20:45 - the end of the URL and just close it and
20:49 - this time this will be our password
20:52 - field so just write password and
20:54 - password so this is our post data URL
20:59 - make sure there is no space here and you
21:02 - have and here now we just want to write
21:05 - this post data to the buffer writer so
21:09 - just use buffer writer dot right and
21:12 - this post data will be the argument for
21:16 - this and then just use a buffered writer
21:20 - and then flush everything so just call
21:24 - flush and then once again call this
21:28 - buffer writer and we will close it okay
21:31 - and we also want to close our output
21:35 - stream so just use auto stream dot to
21:38 - use okay now when you post some data on
21:42 - to the server you can expect some result
21:46 - also all response also for the post
21:49 - request and to read this response from
21:53 - the post request what we can do here is
21:56 - we can once again define an input stream
21:59 - and then buffer reader to
22:03 - you know get the response so this time
22:06 - we will define a input stream here so
22:11 - just define input stream and then the
22:14 - variable input stream and then we can
22:17 - get the input stream from the same HTTP
22:20 - connection so just write get input
22:22 - stream and once again we will define a
22:26 - buffer reader this time so just write
22:28 - buffer reader take the variable name is
22:34 - equal to new buffered reader and as the
22:39 - argument new input stream reader right
22:43 - so just write input stream reader and as
22:47 - an argument it takes this input stream
22:51 - and the type of data at this time this
22:56 - data which we are expecting is of this
22:59 - type which is is oh- 8859 minus 1 and
23:04 - now once we have our response we want to
23:07 - read it line by line and make our
23:09 - response from it right so we will just
23:12 - define two more variable one is result
23:18 - for example and other is string line to
23:25 - read the line line by line and just
23:28 - write while so just add a while loop and
23:32 - we will you know read the line line by
23:36 - line so just use line is equal to
23:40 - buffered reader dot read line is not
23:45 - equal to null so is not equal to null
23:49 - then we can add this line to the
23:53 - response right or the result so just
23:55 - write result plus equals this line so
24:01 - something like this ok and something
24:05 - like this and this all data should be in
24:11 - we'll bracket so we are evaluating this
24:14 - and we must also initialize these value
24:17 - with normal for example or empty string
24:21 - okay so just initialize line and result
24:24 - by empty string okay and once our work
24:29 - is done what we can do is we can close
24:33 - our buffer reader so just close after
24:36 - your while loop the buffer reader close
24:40 - and then we will close our input stream
24:43 - from here so just write INRA stream not
24:46 - close and then we will disconnect from
24:49 - our HTTP connection right so just write
24:53 - HTTP connection dot disconnect okay and
24:58 - in here now we want to return the result
25:02 - which we have got right so just write
25:05 - return result now it's going to give you
25:09 - this error because our return type if
25:12 - you can see here is void here so change
25:17 - this return type of this method do in
25:20 - background to string and this will give
25:26 - you once again the error because we need
25:28 - to change this return type from here and
25:31 - here also string and the async task
25:34 - types and also we need to change it here
25:39 - in here right in post execute right so
25:44 - just change it here also okay
25:46 - now to show the login result we need a
25:49 - alert box or something like that
25:53 - so what we can do is we can go at the
25:55 - top and in here we can define an alert
25:59 - dialog and give a variable name for
26:03 - example alert dialog and then press alt
26:07 - enter to import alert dialog and then we
26:10 - can initiate this Allah dialogue in here
26:14 - pre execute method okay so on a pre
26:18 - execute method you can just write
26:21 - instead of this line you can just write
26:24 - all
26:25 - dialogue is equal to new alert dialogue
26:29 - dot builder so just write builder and
26:35 - then take the cause context which we
26:38 - have defined at the top so this
26:41 - constructor is taking the context right
26:43 - so just take this context from here and
26:47 - pass it here and then dot create okay so
26:52 - just call a method called dot create and
26:56 - remove these brackets from here okay and
27:00 - now you can also set some title to your
27:04 - alert box so for example you can say
27:09 - login status okay so this will be the
27:12 - title of your alert box now to show the
27:16 - result in the alert dialog what you can
27:18 - do is you can go to on post execute
27:22 - method and in here you can just remove
27:26 - this line and this string can be result
27:29 - and then you can take your alert dialog
27:33 - and set the message here so just write
27:37 - set message and just pass this result
27:41 - here and then you can show the message
27:44 - which is coming from the server right so
27:48 - just write a lot dialogue dot show okay
27:52 - so this will show the response of the
27:55 - server so what code is almost done what
27:58 - we need to do next is we need to go to
28:02 - our manifest folder here and go to
28:05 - Android manifest dot XML file and we
28:08 - need to give the internet permissions
28:10 - here above this application element so
28:14 - just give this line of code to allow the
28:17 - internet permission so just add user
28:20 - minus permission space Android name is
28:23 - equal to Android dot permission dot
28:25 - Internet and this will add the internet
28:29 - permission to your Android app one last
28:32 - thing which is remaining is we need to
28:34 - add it our
28:36 - PHP files right so go to the connection
28:41 - dot PHP which we have made and if you
28:44 - already forget there is the location of
28:47 - this connection dot PHP it's in your
28:51 - vamp folder in your C directory and in
28:56 - www you can find login dot PHP and corn
29:00 - dot PHP right which we have made in the
29:03 - last video ok so first of all we need to
29:07 - remove this echo information from here
29:11 - so just remove these lines of code from
29:15 - if condition till your end of your if
29:20 - condition right in the corner dot PHP ok
29:24 - and save it and in the login dot PHP we
29:27 - have given this static information to
29:32 - login so to have the post you know
29:36 - request received here you need to
29:40 - replace this by dollar then underscore
29:44 - post and then in the square brackets so
29:49 - just use square brackets and then your
29:53 - key name which you have defined in your
29:57 - Android code right so go to your
30:00 - background worker and once again check
30:03 - what is this key value which is username
30:06 - here right the first key value okay and
30:11 - place it here and in the same way we
30:15 - will just place the password key value
30:19 - from here which is this one in the
30:22 - double quotes right so this is value in
30:25 - the double quotes right so go here and
30:28 - change it here also and save everything
30:32 - and then run your code okay so my app is
30:38 - running now and I'm going to define the
30:40 - username and password which I have
30:41 - defined if the database which is one two
30:44 - three and one two three so I will give
30:47 - this one two three and one two
30:50 - here and when I click login it doesn't
30:54 - reply me so this can be the problem
30:57 - sometimes if you have this ten point
31:03 - zero point to point to IP address
31:07 - defined here in some cases it will work
31:10 - if you are connected with localhost or
31:14 - if you want to connect with localhost
31:16 - otherwise in most of the cases it will
31:19 - work otherwise what you can do is you
31:21 - can open your command prompt so just
31:24 - open your command prompt here and then
31:27 - just write IP config here so just write
31:32 - ipconfig and press enter and it's going
31:34 - to give you your IP address of your
31:37 - local network and as I can see in my
31:41 - case the IP address here is 192.168.1.0
31:48 - right so you just need to search for
31:52 - wireless LAN adapter or wide LAN adapter
31:56 - and search for this IP address which is
31:58 - the first address which is 192.168.1.0
32:03 - light and then replace this by
32:11 - 192.168.1.0 it can be different so just
32:15 - see this value and paste it here once
32:20 - again we are going to run our app and
32:23 - our app is once again running so once
32:25 - again I will give one two three username
32:27 - and password one soon one two three and
32:30 - then click login and now I can see this
32:34 - login success message which is coming
32:37 - due to this line of code ok I can just
32:42 - change this line login success and then
32:45 - some exclamation mark and then some some
32:50 - message login success and for example
32:55 - well come use something like this and
32:59 - then save it
33:01 - once again click the login message and
33:06 - now you can see login success and
33:09 - welcome user here okay so I know that
33:12 - this is coming due to this and when I
33:15 - give the wrong username and password is
33:18 - going to give me login not success which
33:21 - is this message okay so in this way you
33:24 - can create a login page
33:28 - in your Android application using MySQL
33:32 - database
33:33 - I will also you know give this code in
33:36 - the description so you can you know copy
33:40 - the same code and paste it into your
33:42 - application and test it okay
33:45 - so just click the link in the
33:48 - description and you will get the code
33:50 - from there so please read them and
33:52 - subscribe and bye for now